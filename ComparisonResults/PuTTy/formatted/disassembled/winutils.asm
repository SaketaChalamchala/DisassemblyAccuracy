_request_file   proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '124h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_2CE']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+Buffer]']
push ['eax']
push ['104h']
call ['dword', 'ptr', 'ds:__imp__GetCurrentDirectoryA@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_118],', 'eax']
cmp ['[ebp+var_118],', '0']
jz ['short', 'loc_2C7']
cmp ['[ebp+var_118],', '104h']
jb ['short', 'loc_2CE']
mov ['[ebp+arg_8],', '0']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx],', '4Ch']
cmp ['[ebp+lpBuffer],', '0']
jz ['short', 'loc_2F2']
mov ['edx,', '[ebp+lpBuffer]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_2F2']
mov ['ecx,', '[ebp+lpBuffer]']
mov ['[ebp+var_120],', 'ecx']
jmp ['short', 'loc_2FC']
mov ['[ebp+var_120],', '0']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_120]']
mov ['[edx+2Ch],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_329']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetSaveFileNameA@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_124],', 'eax']
jmp ['short', 'loc_342']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetOpenFileNameA@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_124],', 'eax']
mov ['eax,', '[ebp+var_124]']
mov ['[ebp+var_114],', 'eax']
cmp ['[ebp+lpBuffer],', '0']
jz ['short', 'loc_38D']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+lpBuffer]']
push ['ecx']
push ['104h']
call ['dword', 'ptr', 'ds:__imp__GetCurrentDirectoryA@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_11C],', 'eax']
cmp ['[ebp+var_11C],', '0']
jz ['short', 'loc_387']
cmp ['[ebp+var_11C],', '104h']
jb ['short', 'loc_38D']
mov ['edx,', '[ebp+lpBuffer]']
mov ['byte', 'ptr', '[edx],', '0']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_3A9']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+Buffer]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetCurrentDirectoryA@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_114]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '124h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_filereq_new    proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['104h']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_filereq_free   proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_message_box    proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+mbp.cbSize],', '28h']
mov ['eax,', 'dword', 'ptr', 'ds:_hinst']
mov ['[ebp+mbp.hInstance],', 'eax']
mov ['ecx,', 'dword', 'ptr', 'ds:_hwnd']
mov ['[ebp+mbp.hwndOwner],', 'ecx']
mov ['[ebp+mbp.lpfnMsgBoxCallback],', 'offset', '_message_box_help_callback@4']
mov ['[ebp+mbp.dwLanguageId],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+mbp.lpszText],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+mbp.lpszCaption],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ebp+mbp.dwContextHelpId],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+mbp.dwStyle],', 'edx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_4D3']
call ['_has_help']
test ['eax,', 'eax']
jz ['short', 'loc_4D3']
mov ['eax,', '[ebp+mbp.dwStyle]']
or ['eax,', '4000h']
mov ['[ebp+mbp.dwStyle],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+mbp]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__MessageBoxIndirectA@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_message_box_help_callback@4 proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+10h],', '1']
jnz ['short', 'loc_546']
mov ['[ebp+var_4],', 'offset', '$SG85584']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_536']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+10h],', '2']
jnz ['short', 'loc_55A']
mov ['[ebp+var_4],', 'offset', '$SG85589']
xor ['eax,', 'eax']
jnz ['short', 'loc_54A']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+10h],', '3']
jnz ['short', 'loc_56E']
mov ['[ebp+var_4],', 'offset', '$SG85594']
xor ['edx,', 'edx']
jnz ['short', 'loc_55E']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+10h],', '4']
jnz ['short', 'loc_582']
mov ['[ebp+var_4],', 'offset', '$SG85599']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_572']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+10h],', '5']
jnz ['short', 'loc_596']
mov ['[ebp+var_4],', 'offset', '$SG85604']
xor ['eax,', 'eax']
jnz ['short', 'loc_586']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_5B3']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', 'dword', 'ptr', 'ds:_hwnd']
push ['edx']
call ['_launch_help']
add ['esp,', '8']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
_pgp_fingerprints proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['5']
push ['40h']
push ['offset', '$SG85619']
push ['offset', '$SG85620']
call ['_message_box']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_GetDlgItemText_alloc proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+cchMax],', '0CCCCCCCCh']
mov ['[ebp+lpString],', '0CCCCCCCCh']
mov ['[ebp+lpString],', '0']
mov ['[ebp+cchMax],', '0']
mov ['eax,', '[ebp+cchMax]']
shl ['eax,', '2']
cdq
mov ['ecx,', '3']
idiv ['ecx']
add ['eax,', '200h']
mov ['[ebp+cchMax],', 'eax']
push ['1']
mov ['edx,', '[ebp+cchMax]']
push ['edx']
mov ['eax,', '[ebp+lpString]']
push ['eax']
call ['_saferealloc']
add ['esp,', '0Ch']
mov ['[ebp+lpString],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+cchMax]']
push ['ecx']
mov ['edx,', '[ebp+lpString]']
push ['edx']
mov ['eax,', '[ebp+nIDDlgItem]']
push ['eax']
mov ['ecx,', '[ebp+hDlg]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItemTextA@16']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+cchMax]']
sub ['edx,', '1']
push ['edx']
push ['0']
mov ['eax,', '[ebp+lpString]']
push ['eax']
call ['_memchr']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_617']
mov ['eax,', '[ebp+lpString]']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_split_into_argv proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2Ch']
push ['edi']
lea ['edi,', '[ebp+var_2C]']
mov ['ecx,', '0Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6D2']
mov ['edx,', '[ebp+Str]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
push ['eax']
call ['_isspace']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_6D2']
mov ['ecx,', '[ebp+Str]']
add ['ecx,', '1']
mov ['[ebp+Str],', 'ecx']
jmp ['short', 'loc_6AA']
mov ['edx,', '[ebp+Str]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jnz ['short', 'loc_70E']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_6EB']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx],', '0']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_6FA']
mov ['edx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[edx],', '0']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_709']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['loc_9E6']
push ['1']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
push ['4']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
push ['4']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+Str]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'edx']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['loc_976']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_7A8']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
push ['edx']
call ['_isspace']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_7A8']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_780']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jnz ['short', 'loc_7B7']
jmp ['loc_976']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_4]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['loc_962']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_80B']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
call ['_isspace']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_80B']
jmp ['loc_962']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '22h']
jz ['short', 'loc_825']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '5Ch']
jnz ['loc_941']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_28],', '0']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '5Ch']
jnz ['short', 'loc_852']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_833']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '22h']
jnz ['short', 'loc_871']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_852']
cmp ['[ebp+var_28],', '0']
jnz ['short', 'loc_8A2']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_89D']
mov ['ecx,', '[ebp+var_C]']
mov ['byte', 'ptr', '[ecx],', '5Ch']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_877']
jmp ['loc_93F']
cmp ['[ebp+var_24],', '2']
jl ['short', 'loc_8C2']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '2']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['byte', 'ptr', '[ecx],', '5Ch']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_8A2']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_8E0']
mov ['eax,', '[ebp+var_28]']
sub ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['byte', 'ptr', '[ecx],', '22h']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_28],', '0']
jle ['short', 'loc_93F']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_8FC']
mov ['eax,', '[ebp+var_28]']
sub ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_1C],', '1']
mov ['[ebp+var_20],', '3']
jmp ['short', 'loc_90E']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '3']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '1']
cmp ['[ebp+var_20],', 'edx']
jg ['short', 'loc_92A']
mov ['eax,', '[ebp+var_C]']
mov ['byte', 'ptr', '[eax],', '22h']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_905']
mov ['eax,', '[ebp+var_28]']
cdq
mov ['ecx,', '3']
idiv ['ecx']
neg ['edx']
sbb ['edx,', 'edx']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
jmp ['short', 'loc_95D']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_4]']
mov ['cl,', '[eax]']
mov ['[edx],', 'cl']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
jmp ['loc_7DF']
mov ['ecx,', '[ebp+var_C]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
jmp ['loc_772']
push ['4']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_saferealloc']
add ['esp,', '0Ch']
mov ['[ebp+var_10],', 'eax']
push ['4']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_saferealloc']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_9AE']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx],', 'edx']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_9BE']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_9CA']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9DA']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_9E6']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
pop ['edi']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

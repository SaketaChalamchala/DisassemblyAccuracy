_init_ucs       proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
push ['8Ch']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_conf_get_str']
add ['esp,', '8']
push ['eax']
call ['_decode_codepage']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jg ['short', 'loc_1E70']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
push ['8Bh']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_conf_get_int']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '2']
jnz ['short', 'loc_1EBE']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+8],', '1B5h']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jg ['short', 'loc_1EBC']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetACP@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+0Ch],', 'eax']
jmp ['short', 'loc_1ED3']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jg ['short', 'loc_1ED3']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_1EE5']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jnz ['short', 'loc_1F35']
push ['2']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '410h']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_get_unitab']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', '80h']
jmp ['short', 'loc_1F12']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
cmp ['[ebp+var_4],', '100h']
jge ['short', 'loc_1F33']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '0F100h']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+ecx*2+410h],', 'ax']
jmp ['short', 'loc_1F09']
jmp ['short', 'loc_1F79']
push ['1']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '410h']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_get_unitab']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+8],', '1B5h']
jnz ['short', 'loc_1F79']
mov ['ecx,', '0FFFFh']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+60Eh],', 'cx']
mov ['eax,', '0FFFFh']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+410h],', 'ax']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_1F98']
push ['40h']
push ['offset', '_unitab_xterm_std']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '412h']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
push ['1']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '810h']
push ['eax']
push ['1']
call ['_get_unitab']
add ['esp,', '0Ch']
cmp ['[ebp+var_10],', '1']
jz ['short', 'loc_1FB9']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_1FD9']
push ['200h']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '810h']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '10h']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['short', 'loc_1FEF']
push ['1']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '10h']
push ['eax']
push ['1B5h']
call ['_get_unitab']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ecx+0Ch]']
cmp ['eax,', '[edx+8]']
jnz ['loc_2091']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jnz ['short', 'loc_2019']
cmp ['[ebp+var_10],', '3']
jz ['short', 'loc_2019']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jnz ['short', 'loc_2091']
mov ['[ebp+var_C],', '1']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_2032']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '20h']
jge ['short', 'loc_204C']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['ax,', 'word', 'ptr', '[ebp+var_4]']
mov ['[edx+ecx*2+210h],', 'ax']
jmp ['short', 'loc_2029']
mov ['[ebp+var_4],', '20h']
jmp ['short', 'loc_205E']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '100h']
jge ['short', 'loc_2080']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '0F100h']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+eax*2+210h],', 'dx']
jmp ['short', 'loc_2055']
mov ['edx,', '7Fh']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+30Eh],', 'dx']
jmp ['short', 'loc_20AC']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '210h']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_get_unitab']
add ['esp,', '0Ch']
push ['200h']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '210h']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '610h']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
push ['40h']
push ['offset', '_unitab_xterm_std']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '6D0h']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '20h']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+6CEh],', 'cx']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_2152']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_210E']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '100h']
jge ['short', 'loc_213B']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+ecx*4],', '0']
jz ['short', 'loc_2139']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+ecx*4]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
jmp ['short', 'loc_2105']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx],', '0']
cmp ['[ebp+var_C],', '0']
jnz ['loc_226A']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_216E']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '100h']
jge ['loc_226A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2+210h]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_2197']
jmp ['short', 'loc_2165']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2+210h]']
and ['eax,', '0FFFFFE00h']
cmp ['eax,', '0F000h']
jnz ['short', 'loc_21B3']
jmp ['short', 'loc_2165']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jnz ['short', 'loc_21E4']
push ['4']
push ['100h']
call ['_safemalloc']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'eax']
push ['400h']
push ['0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*2+210h]']
sar ['ecx,', '8']
and ['ecx,', '0FFh']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+ecx*4],', '0']
jnz ['short', 'loc_2241']
push ['1']
push ['100h']
call ['_safemalloc']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
mov ['ecx,', '[edx]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+edx*4],', 'eax']
push ['100h']
push ['0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ecx+edx*4]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[ecx+eax*2+210h]']
and ['eax,', '0FFh']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[edx+ecx*4]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_4]']
mov ['[eax+edx],', 'cl']
jmp ['loc_2165']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_227C']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
cmp ['[ebp+var_4],', '100h']
jge ['short', 'loc_22E1']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2+210h]']
cmp ['edx,', '20h']
jl ['short', 'loc_22C1']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2+210h]']
cmp ['edx,', '7Fh']
jl ['short', 'loc_22D2']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2+210h]']
cmp ['edx,', '0A0h']
jge ['short', 'loc_22D2']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_4]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_4]']
mov ['[eax+0A10h],', 'cl']
jmp ['short', 'loc_22DF']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+0A10h],', '0FFh']
jmp ['short', 'loc_2273']
cmp ['[ebp+var_10],', '1']
jz ['short', 'loc_22ED']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_230A']
push ['0F000h']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '810h']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '10h']
push ['ecx']
call ['_link_font']
add ['esp,', '0Ch']
push ['0F100h']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '410h']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '210h']
push ['eax']
call ['_link_font']
add ['esp,', '0Ch']
push ['0F100h']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '410h']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '10h']
push ['edx']
call ['_link_font']
add ['esp,', '0Ch']
push ['0F100h']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '410h']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '610h']
push ['ecx']
call ['_link_font']
add ['esp,', '0Ch']
cmp ['[ebp+var_10],', '1']
jz ['short', 'loc_2374']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_23B5']
push ['0F000h']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '810h']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '210h']
push ['eax']
call ['_link_font']
add ['esp,', '0Ch']
push ['0F000h']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '810h']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '610h']
push ['edx']
call ['_link_font']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_23DB']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ecx+8]']
cmp ['eax,', '[edx+0Ch]']
jz ['short', 'loc_23DB']
mov ['ecx,', '0F05Ch']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+2C8h],', 'cx']
cmp ['[ebp+var_10],', '4']
jz ['loc_2514']
mov ['[ebp+var_4],', '0A0h']
jmp ['short', 'loc_23F7']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '100h']
jge ['short', 'loc_2472']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2+210h]']
and ['eax,', '0FFFFFE00h']
cmp ['eax,', '0F000h']
jz ['short', 'loc_246D']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2+210h]']
cmp ['eax,', '0A0h']
jl ['short', 'loc_246D']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2+210h]']
cmp ['eax,', '100h']
jge ['short', 'loc_246D']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2+210h]']
movsx ['ecx,', 'ds:byte_16E8[eax]']
add ['ecx,', '0F100h']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+edx*2+210h],', 'cx']
jmp ['loc_23EE']
mov ['[ebp+var_4],', '60h']
jmp ['short', 'loc_2484']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '7Fh']
jge ['short', 'loc_24C5']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*2+610h]']
and ['ecx,', '0FFFFFE00h']
cmp ['ecx,', '0F000h']
jz ['short', 'loc_24C3']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'ds:byte_178C[edx]']
add ['eax,', '0F100h']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+ecx*2+610h],', 'ax']
jmp ['short', 'loc_247B']
mov ['[ebp+var_4],', '80h']
jmp ['short', 'loc_24D7']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '100h']
jge ['short', 'loc_2514']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2+10h]']
and ['eax,', '0FFFFFE00h']
cmp ['eax,', '0F000h']
jz ['short', 'loc_2512']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'ds:off_1680[ecx]']
add ['edx,', '0F100h']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+eax*2+10h],', 'dx']
jmp ['short', 'loc_24CE']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_link_font      proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_2551']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '100h']
jge ['short', 'loc_25CE']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
and ['eax,', '0FFFFFE00h']
cmp ['eax,', '0F000h']
jnz ['short', 'loc_2572']
jmp ['short', 'loc_2548']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_2584']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '100h']
jge ['short', 'loc_25C9']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '20h']
and ['edx,', '0FFh']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', 'eax']
jnz ['short', 'loc_25C7']
movzx ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+edx*2],', 'cx']
jmp ['short', 'loc_25C9']
jmp ['short', 'loc_257B']
jmp ['loc_2548']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_xlat_uskbd2cyrllic proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '7Fh']
mov ['ax,', 'ds:?cyrtab@?1??xlat_uskbd2cyrllic@@9@9[eax*2]']
pop ['ebp']
retn
endp
_check_compose_internal proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ds:?c@?1??check_compose_internal@@9@9,', 'offset', '?composetbl@?1??check_compose_internal@@9@9']
jmp ['short', 'loc_261F']
mov ['eax,', 'ds:?c@?1??check_compose_internal@@9@9']
add ['eax,', '4']
mov ['ds:?c@?1??check_compose_internal@@9@9,', 'eax']
mov ['ecx,', 'ds:?c@?1??check_compose_internal@@9@9']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_2656']
mov ['eax,', 'ds:?c@?1??check_compose_internal@@9@9']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '[ebp+arg_0]']
jnz ['short', 'loc_2654']
mov ['edx,', 'ds:?c@?1??check_compose_internal@@9@9']
movsx ['eax,', 'byte', 'ptr', '[edx+1]']
cmp ['eax,', '[ebp+C]']
jnz ['short', 'loc_2654']
mov ['ecx,', 'ds:?c@?1??check_compose_internal@@9@9']
movzx ['eax,', 'word', 'ptr', '[ecx+2]']
jmp ['short', 'loc_26CE']
jmp ['short', 'loc_2612']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_26CB']
push ['1']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+C]']
push ['eax']
call ['_check_compose_internal']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0FFFFFFFFh']
jnz ['short', 'loc_269E']
push ['1']
mov ['ecx,', '[ebp+C]']
push ['ecx']
call ['_toupper']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_toupper']
add ['esp,', '4']
push ['eax']
call ['_check_compose_internal']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0FFFFFFFFh']
jnz ['short', 'loc_26CB']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_toupper']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+C]']
push ['ecx']
call ['_toupper']
add ['esp,', '4']
push ['eax']
call ['_check_compose_internal']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_check_compose  proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['eax,', '[ebp+C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_check_compose_internal']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_decode_codepage proc near              
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+CodePage],', '0FFFFFFFFh']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_273C']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2746']
mov ['eax,', '0FDE9h']
jmp ['loc_2A01']
mov ['[ebp+var_10],', 'offset', '_cp_list']
jmp ['short', 'loc_2758']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '10h']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['loc_2895']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['[ebp+Str],', 'eax']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_27A5']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
call ['_isalnum']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_27A5']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '3Ah']
jz ['short', 'loc_27A5']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_2772']
mov ['edx,', '[ebp+Str]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_27D8']
mov ['ecx,', '[ebp+Str]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
push ['edx']
call ['_isalnum']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_27D8']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '3Ah']
jz ['short', 'loc_27D8']
mov ['edx,', '[ebp+Str]']
add ['edx,', '1']
mov ['[ebp+Str],', 'edx']
jmp ['short', 'loc_27A5']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2847']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+4]']
mov ['[ebp+CodePage],', 'eax']
cmp ['[ebp+CodePage],', '0FDE9h']
jnz ['short', 'loc_27F9']
jmp ['$break_break$86014']
cmp ['[ebp+CodePage],', '0FFFFFFFFh']
jnz ['short', 'loc_2807']
mov ['eax,', '[ebp+CodePage]']
jmp ['loc_2A01']
cmp ['[ebp+CodePage],', '0']
jnz ['short', 'loc_2827']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', 'offset', '_cp_list']
sar ['ecx,', '4']
add ['ecx,', '10000h']
mov ['[ebp+CodePage],', 'ecx']
jmp ['$break_break$86014']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+CPInfo]']
push ['edx']
mov ['eax,', '[ebp+CodePage]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetCPInfo@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_2847']
jmp ['$break_break$86014']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[ebp+var_31],', 'dl']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+Str]']
mov ['dl,', '[ecx]']
mov ['[ebp+var_32],', 'dl']
mov ['eax,', '[ebp+Str]']
add ['eax,', '1']
mov ['[ebp+Str],', 'eax']
movzx ['ecx,', '[ebp+var_32]']
push ['ecx']
call ['_tolower']
add ['esp,', '4']
mov ['esi,', 'eax']
movzx ['edx,', '[ebp+var_31]']
push ['edx']
call ['_tolower']
add ['esp,', '4']
cmp ['eax,', 'esi']
jz ['short', 'loc_288B']
jmp ['short', 'loc_2890']
jmp ['loc_2772']
jmp ['loc_274F']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+Str],', 'eax']
mov ['ecx,', '[ebp+Str]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
push ['edx']
call ['_tolower']
add ['esp,', '4']
cmp ['eax,', '63h']
jnz ['short', 'loc_28CD']
mov ['eax,', '[ebp+Str]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
push ['ecx']
call ['_tolower']
add ['esp,', '4']
cmp ['eax,', '70h']
jnz ['short', 'loc_28CD']
mov ['edx,', '[ebp+Str]']
add ['edx,', '2']
mov ['[ebp+Str],', 'edx']
mov ['eax,', '[ebp+Str]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
call ['_tolower']
add ['esp,', '4']
cmp ['eax,', '69h']
jnz ['short', 'loc_2914']
mov ['edx,', '[ebp+Str]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
push ['eax']
call ['_tolower']
add ['esp,', '4']
cmp ['eax,', '62h']
jnz ['short', 'loc_2914']
mov ['ecx,', '[ebp+Str]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
push ['edx']
call ['_tolower']
add ['esp,', '4']
cmp ['eax,', '6Dh']
jnz ['short', 'loc_2914']
mov ['eax,', '[ebp+Str]']
add ['eax,', '3']
mov ['[ebp+Str],', 'eax']
mov ['ecx,', '[ebp+Str]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_2925']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jl ['short', 'loc_293D']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '39h']
jg ['short', 'loc_293D']
jmp ['short', 'loc_291C']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jnz ['short', 'loc_295E']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+Str]']
jz ['short', 'loc_295E']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_atoi']
add ['esp,', '4']
mov ['[ebp+CodePage],', 'eax']
cmp ['[ebp+CodePage],', '0']
jnz ['short', 'loc_2976']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetACP@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+CodePage],', 'eax']
cmp ['[ebp+CodePage],', '1']
jnz ['short', 'loc_298E']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetOEMCP@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+CodePage],', 'eax']
cmp ['[ebp+CodePage],', '0FFFFh']
jle ['short', '$break_break$86014']
mov ['[ebp+CodePage],', '0FFFFFFFEh']
cmp ['[ebp+CodePage],', '0FFFFFFFFh']
jz ['short', 'loc_29E7']
cmp ['[ebp+CodePage],', '0FDE9h']
jz ['short', 'loc_29E7']
cmp ['[ebp+CodePage],', '10000h']
jge ['short', 'loc_29E7']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+CPInfo]']
push ['edx']
mov ['eax,', '[ebp+CodePage]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetCPInfo@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_29DA']
mov ['[ebp+CodePage],', '0FFFFFFFEh']
jmp ['short', 'loc_29E7']
cmp ['[ebp+CPInfo.MaxCharSize],', '1']
jbe ['short', 'loc_29E7']
mov ['[ebp+CodePage],', '0FFFFFFFDh']
cmp ['[ebp+CodePage],', '0FFFFFFFFh']
jnz ['short', 'loc_29FE']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_29FE']
mov ['[ebp+CodePage],', '0FFFFFFFEh']
mov ['eax,', '[ebp+CodePage]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN37']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_cp_name        proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0FFFFFFFFh']
jnz ['short', 'loc_2A8A']
push ['offset', '$SG86049']
push ['offset', '?buf@?1??cp_name@@9@9']
call ['_sprintf']
add ['esp,', '8']
mov ['eax,', 'offset', '?buf@?1??cp_name@@9@9']
jmp ['loc_2B6D']
cmp ['[ebp+arg_0],', '0']
jle ['short', 'loc_2AB1']
cmp ['[ebp+arg_0],', '10000h']
jge ['short', 'loc_2AB1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '$SG86051']
push ['offset', '?buf@?1??cp_name@@9@9']
call ['_sprintf']
add ['esp,', '0Ch']
jmp ['short', 'loc_2AB8']
mov ['ds:?buf@?1??cp_name@@9@9,', '0']
cmp ['[ebp+arg_0],', '10000h']
jl ['short', 'loc_2B3A']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_4],', 'offset', '_cp_list']
jmp ['short', 'loc_2ADA']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx],', '0']
jz ['short', 'loc_2B01']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '10000h']
shl ['eax,', '4']
add ['eax,', 'offset', '_cp_list']
cmp ['[ebp+var_4],', 'eax']
jnz ['short', 'loc_2AFF']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_2B01']
jmp ['short', 'loc_2AD1']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2B38']
mov ['[ebp+var_4],', 'offset', '_cp_list']
jmp ['short', 'loc_2B19']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '10h']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_2B38']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+0Ch]']
cmp ['eax,', '[edx+0Ch]']
jnz ['short', 'loc_2B36']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx]']
jmp ['short', 'loc_2B6D']
jmp ['short', 'loc_2B10']
jmp ['short', 'loc_2B68']
mov ['[ebp+var_4],', 'offset', '_cp_list']
jmp ['short', 'loc_2B4C']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '10h']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_2B68']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_2B66']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
jmp ['short', 'loc_2B6D']
jmp ['short', 'loc_2B43']
mov ['eax,', 'offset', '?buf@?1??cp_name@@9@9']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_cp_enumerate   proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_2B93']
cmp ['[ebp+arg_0],', '25h']
jb ['short', 'loc_2B97']
xor ['eax,', 'eax']
jmp ['short', 'loc_2BA3']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '4']
mov ['eax,', 'ds:_cp_list[eax]']
pop ['ebp']
retn
endp
_get_unitab     proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+dwFlags],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['dword', 'ptr', '[ebp+MultiByteStr],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_14],', '100h']
mov ['[ebp+dwFlags],', '8']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_2BF2']
mov ['eax,', '[ebp+dwFlags]']
or ['eax,', '4']
mov ['[ebp+dwFlags],', 'eax']
cmp ['[ebp+arg_8],', '2']
jnz ['short', 'loc_2BFF']
mov ['[ebp+var_14],', '80h']
cmp ['[ebp+CodePage],', '0FDE9h']
jnz ['short', 'loc_2C37']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_2C1A']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_14]']
jge ['short', 'loc_2C32']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dx,', 'word', 'ptr', '[ebp+var_10]']
mov ['[ecx+eax*2],', 'dx']
jmp ['short', 'loc_2C11']
jmp ['loc_2D59']
cmp ['[ebp+CodePage],', '0']
jnz ['short', 'loc_2C51']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetACP@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+CodePage],', 'eax']
jmp ['short', 'loc_2C69']
cmp ['[ebp+CodePage],', '1']
jnz ['short', 'loc_2C69']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetOEMCP@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+CodePage],', 'eax']
cmp ['[ebp+CodePage],', '0']
jle ['short', 'loc_2CD5']
cmp ['[ebp+CodePage],', '10000h']
jge ['short', 'loc_2CD5']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_2C8A']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+var_14]']
jge ['short', 'loc_2CD0']
mov ['dl,', 'byte', 'ptr', '[ebp+var_10]']
mov ['[ebp+MultiByteStr],', 'dl']
push ['1']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[ecx+eax*2]']
push ['edx']
push ['1']
lea ['eax,', '[ebp+MultiByteStr]']
push ['eax']
mov ['ecx,', '[ebp+dwFlags]']
push ['ecx']
mov ['edx,', '[ebp+CodePage]']
push ['edx']
call ['_mb_to_wc']
add ['esp,', '18h']
cmp ['eax,', '1']
jz ['short', 'loc_2CCE']
mov ['eax,', '0FFFDh']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+ecx*2],', 'ax']
jmp ['short', 'loc_2C81']
jmp ['loc_2D59']
mov ['eax,', '[ebp+CodePage]']
and ['eax,', '0FFFFh']
shl ['eax,', '4']
mov ['ecx,', '100h']
sub ['ecx,', 'ds:dword_14B8[eax]']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_2D00']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_2D18']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_4]']
mov ['ax,', 'word', 'ptr', '[ebp+var_10]']
mov ['[edx+ecx*2],', 'ax']
jmp ['short', 'loc_2CF7']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_10],', 'ecx']
jmp ['short', 'loc_2D29']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_2D59']
mov ['ecx,', '[ebp+CodePage]']
and ['ecx,', '0FFFFh']
shl ['ecx,', '4']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '[ebp+var_1C]']
mov ['eax,', 'ds:dword_14BC[ecx]']
mov ['ecx,', '[ebp+var_10]']
mov ['esi,', '[ebp+arg_4]']
mov ['dx,', '[eax+edx*2]']
mov ['[esi+ecx*2],', 'dx']
jmp ['short', 'loc_2D20']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN26']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_wc_to_mb       proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_20],', '0']
jz ['loc_2F49']
mov ['eax,', '[ebp+arg_20]']
mov ['ecx,', '[ebp+CodePage]']
cmp ['ecx,', '[eax+0Ch]']
jnz ['loc_2F49']
mov ['edx,', '[ebp+arg_20]']
cmp ['dword', 'ptr', '[edx],', '0']
jz ['loc_2F49']
cmp ['[ebp+cchWideChar],', '0']
jge ['short', 'loc_2E18']
mov ['[ebp+cchWideChar],', '0']
mov ['eax,', '[ebp+cchWideChar]']
mov ['ecx,', '[ebp+lpWideCharStr]']
mov ['dx,', '[ecx+eax*2]']
mov ['word', 'ptr', '[ebp+var_1C+2],', 'dx']
mov ['eax,', '[ebp+cchWideChar]']
add ['eax,', '1']
mov ['[ebp+cchWideChar],', 'eax']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_1C+2]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2E18']
jmp ['short', 'loc_2DF7']
mov ['edx,', '[ebp+lpMultiByteStr]']
mov ['[ebp+var_4],', 'edx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_2E30']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+cchWideChar]']
jge ['loc_2F3F']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+lpWideCharStr]']
mov ['cx,', '[eax+edx*2]']
mov ['word', 'ptr', '[ebp+var_C],', 'cx']
mov ['edx,', '[ebp+arg_20]']
cmp ['dword', 'ptr', '[edx],', '0']
jz ['short', 'loc_2E9C']
movzx ['eax,', 'word', 'ptr', '[ebp+var_C]']
sar ['eax,', '8']
and ['eax,', '0FFh']
mov ['ecx,', '[ebp+arg_20]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+eax*4]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_2E9C']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_C]']
and ['ecx,', '0FFh']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_2E9C']
mov ['ecx,', '[ebp+var_4]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_10]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_2F18']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_C]']
cmp ['ecx,', '80h']
jge ['short', 'loc_2EBB']
mov ['edx,', '[ebp+var_4]']
mov ['al,', 'byte', 'ptr', '[ebp+var_C]']
mov ['[edx],', 'al']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_2F18']
cmp ['[ebp+lpDefaultChar],', '0']
jz ['short', 'loc_2F09']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_2ED3']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+lpDefaultChar]']
add ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2EF8']
mov ['edx,', '[ebp+lpDefaultChar]']
add ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_4]']
mov ['cl,', '[edx]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_2ECA']
cmp ['[ebp+lpUsedDefaultChar],', '0']
jz ['short', 'loc_2F07']
mov ['eax,', '[ebp+lpUsedDefaultChar]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['short', 'loc_2F18']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx],', '2Eh']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '[ebp+lpMultiByteStr]']
cmp ['eax,', '[ebp+cbMultiByte]']
jl ['short', 'loc_2F3A']
push ['4A9h']
push ['offset', '$SG86152']
push ['offset', '$SG86153']
call ['__wassert']
add ['esp,', '0Ch']
jmp ['loc_2E27']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '[ebp+lpMultiByteStr]']
jmp ['short', 'loc_2F78']
jmp ['short', 'loc_2F78']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+lpUsedDefaultChar]']
push ['edx']
mov ['eax,', '[ebp+lpDefaultChar]']
push ['eax']
mov ['ecx,', '[ebp+cbMultiByte]']
push ['ecx']
mov ['edx,', '[ebp+lpMultiByteStr]']
push ['edx']
mov ['eax,', '[ebp+cchWideChar]']
push ['eax']
mov ['ecx,', '[ebp+lpWideCharStr]']
push ['ecx']
mov ['edx,', '[ebp+dwFlags]']
push ['edx']
mov ['eax,', '[ebp+CodePage]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__WideCharToMultiByte@32']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_mb_to_wc       proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+cchWideChar]']
push ['eax']
mov ['ecx,', '[ebp+lpWideCharStr]']
push ['ecx']
mov ['edx,', '[ebp+cbMultiByte]']
push ['edx']
mov ['eax,', '[ebp+lpMultiByteStr]']
push ['eax']
mov ['ecx,', '[ebp+dwFlags]']
push ['ecx']
mov ['edx,', '[ebp+CodePage]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__MultiByteToWideChar@24']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_is_dbcs_leadbyte proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['esi,', 'esp']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+CodePage]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__IsDBCSLeadByteEx@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp

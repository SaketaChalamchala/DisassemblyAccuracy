_dummy_plug_log proc near               
push ['ebp']
mov ['ebp,', 'esp']
pop ['ebp']
retn
endp
_dummy_plug_closing proc near           
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '1']
pop ['ebp']
retn
endp
_dummy_plug_receive proc near           
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '1']
pop ['ebp']
retn
endp
_dummy_plug_sent proc near              
push ['ebp']
mov ['ebp,', 'esp']
pop ['ebp']
retn
endp
_dummy_plug_accepting proc near         
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '1']
pop ['ebp']
retn
endp
_x11_invent_fake_auth proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['28h']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '1']
jnz ['loc_58D']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '10h']
push ['1']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_57E']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_547']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[edx+8]']
jge ['short', 'loc_565']
call ['_random_byte']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[edx+ecx],', 'al']
jmp ['short', 'loc_53E']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_add234']
add ['esp,', '8']
cmp ['eax,', '[ebp+var_4]']
jnz ['short', 'loc_57C']
jmp ['short', 'loc_57E']
jmp ['short', 'loc_52C']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
jmp ['loc_6AA']
cmp ['[ebp+arg_4],', '2']
jz ['short', 'loc_5A7']
push ['78h']
push ['offset', '$SG87171']
push ['offset', '$SG87172']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '2']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '10h']
push ['1']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
push ['1']
push ['8']
call ['_safemalloc']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+14h],', 'eax']
push ['8']
push ['0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['edx,', '1']
test ['edx,', 'edx']
jz ['loc_697']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_615']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+8]']
jge ['short', 'loc_648']
cmp ['[ebp+var_8],', '8']
jnz ['short', 'loc_62F']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_637']
call ['_random_byte']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
mov ['al,', 'byte', 'ptr', '[ebp+var_C]']
mov ['[ecx+edx],', 'al']
jmp ['short', 'loc_60C']
push ['8']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
push ['8']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
add ['edx,', '9']
push ['edx']
call ['_des_encrypt_xdmauth']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_add234']
add ['esp,', '8']
cmp ['eax,', '[ebp+var_4]']
jnz ['short', 'loc_692']
jmp ['short', 'loc_697']
jmp ['loc_5F6']
push ['offset', '_xdmseen_cmp']
call ['_newtree234']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+18h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', 'ds:_x11_authnames[ecx*4]']
push ['edx']
call ['_dupstr']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0Ch],', 'eax']
push ['1']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+eax+1]']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+10h],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_6F2']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+8]']
jge ['short', 'loc_727']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[ecx+edx]']
push ['eax']
push ['offset', '$SG87189']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+10h]']
mov ['eax,', '[ebp+var_8]']
lea ['ecx,', '[edx+eax*2]']
push ['ecx']
call ['_sprintf']
add ['esp,', '0Ch']
jmp ['short', 'loc_6E9']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+1Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+20h],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_xdmseen_cmp    proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx]']
cmp ['ecx,', '[eax]']
jbe ['short', 'loc_79C']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_7D2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx]']
cmp ['ecx,', '[eax]']
jnb ['short', 'loc_7B1']
mov ['[ebp+var_10],', '0FFFFFFFFh']
jmp ['short', 'loc_7CC']
push ['6']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
push ['edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
push ['eax']
call ['_memcmp']
add ['esp,', '0Ch']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_x11_free_fake_auth proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_80E']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+18h],', '0']
jz ['short', 'loc_88A']
push ['0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
push ['eax']
call ['_delpos234']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_87B']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
jmp ['short', 'loc_853']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
push ['eax']
call ['_freetree234']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_x11_authcmp    proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx]']
cmp ['ecx,', '[eax]']
jge ['short', 'loc_8DA']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_97A']
jmp ['short', 'loc_8F0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx]']
cmp ['ecx,', '[eax]']
jle ['short', 'loc_8F0']
mov ['eax,', '1']
jmp ['loc_97A']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx],', '1']
jnz ['short', 'loc_943']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+8]']
jge ['short', 'loc_90D']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_97A']
jmp ['short', 'loc_922']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+8]']
jle ['short', 'loc_922']
mov ['eax,', '1']
jmp ['short', 'loc_97A']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_memcmp']
add ['esp,', '0Ch']
jmp ['short', 'loc_97A']
jmp ['short', 'loc_97A']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '2']
jz ['short', 'loc_962']
push ['0BBh']
push ['offset', '$SG87221']
push ['offset', '$SG87222']
call ['__wassert']
add ['esp,', '0Ch']
push ['8']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_memcmp']
add ['esp,', '0Ch']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_x11_setup_display proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '40h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['2Ch']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_9CA']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_A00']
call ['_platform_get_x_display']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_9E2']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jnz ['short', 'loc_9FE']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
push ['offset', '$SG87236']
call ['_dupstr']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_A0F']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_dupstr']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Fh']
jnz ['short', 'loc_A59']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '0']
jmp ['loc_C2F']
push ['3Ah']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_host_strrchr']
add ['esp,', '8']
mov ['[ebp+Str],', 'eax']
cmp ['[ebp+Str],', '0']
jnz ['short', 'loc_A8F']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_E55']
mov ['eax,', '[ebp+Str]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+Str]']
add ['ecx,', '1']
mov ['[ebp+Str],', 'ecx']
push ['2Eh']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strchr']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_AC4']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_atoi']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_AF0']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_atoi']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0Ch],', 'eax']
jmp ['short', 'loc_AFA']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
mov ['[ebp+Str1],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+Str]']
cmp ['ecx,', '[ebp+var_8]']
jbe ['short', 'loc_B41']
push ['2Fh']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_strchr']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_B41']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+Str1],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_B5C']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_dupstr']
add ['esp,', '4']
mov ['[ebp+var_3C],', 'eax']
jmp ['short', 'loc_B63']
mov ['[ebp+var_3C],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_3C]']
mov ['[ecx+4],', 'edx']
cmp ['[ebp+Str1],', '0']
jz ['short', 'loc_BB6']
push ['offset', '$SG87257']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_BA5']
push ['offset', '$SG87258']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_BA5']
mov ['[ebp+var_40],', '0']
jmp ['short', 'loc_BAC']
mov ['[ebp+var_40],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_40]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_BEB']
mov ['ecx,', '[ebp+var_1C]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_BD5']
push ['offset', '$SG87262']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_BE2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', 'dword', 'ptr', 'ds:_platform_uses_x11_unix_by_default']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_BEB']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jnz ['short', 'loc_C0F']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx],', '0']
jnz ['short', 'loc_C0F']
push ['offset', '$SG87265']
call ['_dupstr']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+10h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx],', '0']
jnz ['loc_CCE']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1770h']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+18h],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+18h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_name_lookup']
add ['esp,', '14h']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+14h],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_sk_addr_error']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_CCE']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_sk_addr_free']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+10h]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_E55']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx],', '0']
jnz ['loc_DB3']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_sk_address_is_local']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['loc_DB3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
push ['0']
call ['_platform_get_x11_unix_address']
add ['esp,', '8']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_sk_addr_error']
add ['esp,', '4']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jnz ['short', 'loc_D7E']
mov ['[ebp+var_30],', 'offset', '_dummy_plug']
lea ['edx,', '[ebp+var_30]']
push ['edx']
push ['0']
push ['0']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_sk_addr_dup']
add ['esp,', '4']
push ['eax']
call ['_sk_new']
add ['esp,', '1Ch']
mov ['[ebp+var_38],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_28],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_D92']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_sk_addr_free']
add ['esp,', '4']
jmp ['short', 'loc_DB3']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_sk_addr_free']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_24]']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_E24']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+14h],', '0']
jnz ['short', 'loc_DE0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+10h]']
push ['edx']
call ['_platform_get_x11_unix_address']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+14h],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+10h],', '0']
jz ['short', 'loc_E00']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_dupstr']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+1Ch],', 'eax']
jmp ['short', 'loc_E1A']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
push ['offset', '$SG87287']
call ['_dupprintf']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+1Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+20h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+24h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_platform_get_x11_auth']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN38']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_x11_free_display proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+24h],', '0']
jz ['short', 'loc_ED4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
push ['edx']
call ['_smemclr']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_sk_addr_free']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_x11_get_auth_from_authfile proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '90h']
push ['edi']
lea ['edi,', '[ebp+var_90]']
mov ['ecx,', '24h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4C],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_F68']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_sk_address_is_local']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_F68']
mov ['[ebp+var_8C],', '1']
jmp ['short', 'loc_F72']
mov ['[ebp+var_8C],', '0']
mov ['eax,', '[ebp+var_8C]']
mov ['[ebp+var_54],', 'eax']
push ['offset', '$SG87396']
mov ['ecx,', '[ebp+Filename]']
push ['ecx']
call ['_fopen']
add ['esp,', '8']
mov ['[ebp+File],', 'eax']
cmp ['[ebp+File],', '0']
jnz ['short', 'loc_F9A']
jmp ['loc_133D']
call ['_get_hostname']
mov ['[ebp+var_50],', 'eax']
push ['1']
push ['40004h']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_4C],', '0']
jnz ['$done$87411']
mov ['[ebp+var_64],', '0']
mov ['edx,', '[ebp+File]']
push ['edx']
call ['_fgetc']
add ['esp,', '4']
mov ['[ebp+var_58],', 'eax']
cmp ['[ebp+var_58],', '0FFFFFFFFh']
jnz ['short', 'loc_FDF']
jmp ['$done$87411']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_58]']
mov ['[ebp+var_58],', 'eax']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_FC5']
mov ['edx,', '[ebp+var_58]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['_fgetc']
add ['esp,', '4']
mov ['[ebp+var_58],', 'eax']
cmp ['[ebp+var_58],', '0FFFFFFFFh']
jnz ['short', 'loc_100A']
jmp ['$done$87411']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_58]']
mov ['[ebp+var_58],', 'ecx']
xor ['edx,', 'edx']
jnz ['short', 'loc_FF0']
mov ['eax,', '[ebp+var_44]']
shl ['eax,', '8']
or ['eax,', '[ebp+var_58]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_5C],', '0']
jmp ['short', 'loc_1039']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
cmp ['[ebp+var_5C],', '4']
jge ['loc_111F']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['_fgetc']
add ['esp,', '4']
mov ['[ebp+var_58],', 'eax']
cmp ['[ebp+var_58],', '0FFFFFFFFh']
jnz ['short', 'loc_105D']
jmp ['$done$87411']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_58]']
mov ['[ebp+var_58],', 'ecx']
xor ['edx,', 'edx']
jnz ['short', 'loc_1043']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_58]']
mov ['[ebp+eax*4+var_3C],', 'ecx']
mov ['edx,', '[ebp+File]']
push ['edx']
call ['_fgetc']
add ['esp,', '4']
mov ['[ebp+var_58],', 'eax']
cmp ['[ebp+var_58],', '0FFFFFFFFh']
jnz ['short', 'loc_108C']
jmp ['$done$87411']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_58]']
mov ['[ebp+var_58],', 'eax']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_1072']
mov ['edx,', '[ebp+var_5C]']
mov ['eax,', '[ebp+edx*4+var_3C]']
shl ['eax,', '8']
or ['eax,', '[ebp+var_58]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[ebp+ecx*4+var_3C],', 'eax']
mov ['edx,', '[ebp+var_5C]']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+edx*4+Buf1],', 'eax']
mov ['[ebp+var_60],', '0']
jmp ['short', 'loc_10C7']
mov ['ecx,', '[ebp+var_60]']
add ['ecx,', '1']
mov ['[ebp+var_60],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
mov ['eax,', '[ebp+var_60]']
cmp ['eax,', '[ebp+edx*4+var_3C]']
jge ['short', 'loc_110B']
mov ['ecx,', '[ebp+File]']
push ['ecx']
call ['_fgetc']
add ['esp,', '4']
mov ['[ebp+var_58],', 'eax']
cmp ['[ebp+var_58],', '0FFFFFFFFh']
jnz ['short', 'loc_10ED']
jmp ['$done$87411']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_58]']
mov ['[ebp+var_58],', 'edx']
xor ['eax,', 'eax']
jnz ['short', 'loc_10D3']
mov ['ecx,', '[ebp+var_10]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_58]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_10BE']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
jmp ['loc_1030']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jl ['short', 'loc_113C']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_atoi']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
cmp ['[edx+8],', 'eax']
jz ['short', 'loc_1141']
jmp ['loc_FB4']
mov ['[ebp+var_48],', '1']
jmp ['short', 'loc_1153']
mov ['eax,', '[ebp+var_48]']
add ['eax,', '1']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '3']
jnb ['short', 'loc_1178']
mov ['ecx,', '[ebp+var_48]']
mov ['edx,', 'ds:_x11_authnames[ecx*4]']
push ['edx']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_1176']
jmp ['short', 'loc_1178']
jmp ['short', 'loc_114A']
cmp ['[ebp+var_48],', '3']
jnz ['short', 'loc_1183']
jmp ['loc_FB4']
mov ['ecx,', '[ebp+var_44]']
mov ['[ebp+var_90],', 'ecx']
cmp ['[ebp+var_90],', '0']
jz ['short', 'loc_11B3']
cmp ['[ebp+var_90],', '6']
jz ['short', 'loc_1216']
cmp ['[ebp+var_90],', '100h']
jz ['loc_127C']
jmp ['loc_12B1']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx],', '0']
jnz ['short', 'loc_1211']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_sk_addrtype']
add ['esp,', '4']
cmp ['eax,', '1']
jnz ['short', 'loc_1211']
lea ['edx,', '[ebp+Buf2]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_sk_addrcopy']
add ['esp,', '8']
cmp ['[ebp+var_3C],', '4']
jnz ['short', 'loc_1211']
push ['4']
lea ['edx,', '[ebp+Buf2]']
push ['edx']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_1211']
mov ['[ebp+var_64],', '1']
xor ['ecx,', 'ecx']
cmp ['[ebp+var_54],', '0']
setz ['cl']
mov ['[ebp+var_4C],', 'ecx']
jmp ['loc_12B1']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx],', '0']
jnz ['short', 'loc_127A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_sk_addrtype']
add ['esp,', '4']
cmp ['eax,', '2']
jnz ['short', 'loc_127A']
lea ['edx,', '[ebp+var_84]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_sk_addrcopy']
add ['esp,', '8']
cmp ['[ebp+var_3C],', '10h']
jnz ['short', 'loc_127A']
push ['10h']
lea ['edx,', '[ebp+var_84]']
push ['edx']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_127A']
mov ['[ebp+var_64],', '1']
xor ['ecx,', 'ecx']
cmp ['[ebp+var_54],', '0']
setz ['cl']
mov ['[ebp+var_4C],', 'ecx']
jmp ['short', 'loc_12B1']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx],', '0']
jnz ['short', 'loc_128A']
cmp ['[ebp+var_54],', '0']
jz ['short', 'loc_12B1']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_12B1']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_12B1']
mov ['[ebp+var_4C],', '1']
mov ['edx,', '[ebp+var_4C]']
mov ['[ebp+var_64],', 'edx']
cmp ['[ebp+var_64],', '0']
jz ['short', 'loc_1303']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_48]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+24h]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
push ['1']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+24h],', 'eax']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+24h]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+Size]']
mov ['[ecx+28h],', 'edx']
jmp ['loc_FB4']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['_fclose']
add ['esp,', '4']
push ['40004h']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_50]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN60']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '90h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_x11_log        proc near               
push ['ebp']
mov ['ebp,', 'esp']
pop ['ebp']
retn
endp
_x11_closing    proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_1432']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+40h],', '0']
jz ['short', 'loc_141D']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['offset', '$SG87498']
call ['_dupprintf']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_x11_send_init_error']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4Ch]']
push ['edx']
call ['_sshfwd_unclean_close']
add ['esp,', '8']
jmp ['short', 'loc_144A']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4Ch],', '0']
jz ['short', 'loc_144A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4Ch]']
push ['edx']
call ['_sshfwd_write_eof']
add ['esp,', '4']
mov ['eax,', '1']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_x11_receive    proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4Ch]']
push ['ecx']
call ['_sshfwd_write']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jle ['short', 'loc_14C7']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+38h],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+40h],', '0']
mov ['esi,', 'esp']
push ['1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+50h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+50h]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '1']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_x11_sent       proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4Ch]']
push ['eax']
call ['_sshfwd_unthrottle']
add ['esp,', '8']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_x11_get_screen_number proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['offset', '$SG87527']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_host_strcspn']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+Str]']
add ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jnz ['short', 'loc_1554']
xor ['eax,', 'eax']
jmp ['short', 'loc_158C']
push ['offset', '$SG87529']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strcspn']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+Str]']
add ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jnz ['short', 'loc_1579']
xor ['eax,', 'eax']
jmp ['short', 'loc_158C']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+Str]']
lea ['edx,', '[ecx+eax+1]']
push ['edx']
call ['_atoi']
add ['esp,', '4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_x11_init       proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['54h']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '?fn_table@?1??x11_init@@9@9']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+34h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+20h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+3Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+38h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+40h],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4Ch],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+50h],', '0']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_1649']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_dupstr']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1650']
mov ['[ebp+var_8],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+44h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_C]']
mov ['[ecx+48h],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_x11_close      proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_1680']
jmp ['short', 'loc_16EB']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_16A7']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+50h],', '0']
jz ['short', 'loc_16D0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+50h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+50h]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+44h]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_x11_unthrottle proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_1718']
jmp ['short', 'loc_1771']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+38h],', '0']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+50h],', '0']
jz ['short', 'loc_1771']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+38h],', '0']
jnz ['short', 'loc_1746']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+3Ch],', '0']
jnz ['short', 'loc_1746']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_174D']
mov ['[ebp+var_4],', '1']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+50h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+50h]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_x11_override_throttle proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_1798']
jmp ['short', 'loc_17F0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+3Ch],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+50h],', '0']
jz ['short', 'loc_17F0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+38h],', '0']
jnz ['short', 'loc_17C5']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+3Ch],', '0']
jnz ['short', 'loc_17C5']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_17CC']
mov ['[ebp+var_4],', '1']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+50h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+50h]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+18h]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_x11_send_init_error proc near          
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+Size],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+Str],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:_appname']
push ['ecx']
push ['offset', '$SG87577']
call ['_dupprintf']
add ['esp,', '0Ch']
mov ['[ebp+Str],', 'eax']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
push ['1']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '0Dh']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '3']
and ['ecx,', '0FFFFFFFCh']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_8]']
mov ['[eax+1],', 'cl']
push ['4']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '6']
push ['edx']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '2']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+4]']
cmp ['edx,', '42h']
jnz ['short', 'loc_18CB']
mov ['eax,', '[ebp+Size]']
sar ['eax,', '2']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+6],', 'al']
mov ['edx,', '[ebp+Size]']
sar ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_14]']
mov ['[eax+7],', 'cl']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_14]']
mov ['[ebp+var_18],', 'edx']
jmp ['short', 'loc_18F3']
mov ['eax,', '[ebp+Size]']
sar ['eax,', '2']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+6],', 'al']
mov ['edx,', '[ebp+Size]']
sar ['edx,', '2']
sar ['edx,', '8']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_1C]']
mov ['[eax+7],', 'cl']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+Size]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+Size]']
add ['edx,', '8']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4Ch]']
push ['edx']
call ['_sshfwd_write']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
push ['ecx']
call ['_sshfwd_write_eof']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+40h],', '0']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_x11_send       proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '88h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_88]']
mov ['ecx,', '22h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_19B8']
xor ['eax,', 'eax']
jmp ['loc_1F97']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_19FC']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+20h],', '0Ch']
jge ['short', 'loc_19FC']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '1']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+20h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['dl,', '[edx]']
mov ['[ecx+eax+4],', 'dl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+20h],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
jmp ['short', 'loc_19B8']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+20h],', '0Ch']
jge ['short', 'loc_1A0C']
xor ['eax,', 'eax']
jmp ['loc_1F97']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+18h],', '0']
jnz ['loc_1AF4']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4]']
cmp ['ecx,', '42h']
jnz ['short', 'loc_1A3D']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Ah]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Bh]']
or ['eax,', 'edx']
mov ['[ebp+var_7C],', 'eax']
jmp ['short', 'loc_1A53']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Bh]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['[ebp+var_7C],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_7C]']
mov ['[ecx+24h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4]']
cmp ['ecx,', '42h']
jnz ['short', 'loc_1A80']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Ch]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Dh]']
or ['eax,', 'edx']
mov ['[ebp+var_80],', 'eax']
jmp ['short', 'loc_1A96']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Dh]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['[ebp+var_80],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_80]']
mov ['[ecx+2Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
add ['ecx,', '3']
and ['ecx,', '0FFFFFFFCh']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+28h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2Ch]']
add ['ecx,', '3']
and ['ecx,', '0FFFFFFFCh']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+30h],', 'ecx']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
add ['ecx,', '1']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+18h],', 'eax']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+30h]']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+1Ch],', 'eax']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_1B43']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
add ['ecx,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
cmp ['[edx+20h],', 'ecx']
jge ['short', 'loc_1B43']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['eax,', '[ebp+arg_4]']
mov ['al,', '[eax]']
mov ['[edx+ecx-0Ch],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+20h],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
jmp ['short', 'loc_1AF4']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_1BA1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+30h]']
lea ['eax,', '[eax+edx+0Ch]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx+20h],', 'eax']
jge ['short', 'loc_1BA1']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '1']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
sub ['ecx,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
sub ['ecx,', '[edx+28h]']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax+1Ch]']
mov ['eax,', '[ebp+arg_4]']
mov ['al,', '[eax]']
mov ['[ecx+edx],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+20h],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
jmp ['short', 'loc_1B43']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+30h]']
lea ['eax,', '[eax+edx+0Ch]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx+20h],', 'eax']
jge ['short', 'loc_1BC0']
xor ['eax,', 'eax']
jmp ['loc_1F97']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+34h],', '0']
jnz ['loc_1F6F']
mov ['[ebp+var_75],', '0']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4]']
cmp ['ecx,', '42h']
jnz ['short', 'loc_1BFF']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+6]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+7]']
or ['eax,', 'edx']
mov ['[ebp+var_84],', 'eax']
jmp ['short', 'loc_1C18']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+6]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+7]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['[ebp+var_84],', 'ecx']
mov ['ecx,', '[ebp+var_84]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+4]']
cmp ['eax,', '42h']
jnz ['short', 'loc_1C48']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
shl ['edx,', '8']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
or ['edx,', 'ecx']
mov ['[ebp+var_88],', 'edx']
jmp ['short', 'loc_1C61']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+9]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['[ebp+var_88],', 'eax']
mov ['eax,', '[ebp+var_88]']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+50h],', '0']
jz ['short', 'loc_1C8A']
push ['370h']
push ['offset', '$SG87668']
push ['offset', '$SG87669']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+24h]']
mov ['byte', 'ptr', '[ecx+eax],', '0']
mov ['[ebp+var_1C],', '0']
lea ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+44h]']
push ['eax']
call ['_x11_parse_ip']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_1CC3']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+48h]']
mov ['[ebp+var_24],', 'edx']
jmp ['short', 'loc_1CCA']
mov ['[ebp+var_24],', '0FFFFFFFFh']
lea ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_x11_verify']
add ['esp,', '1Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1D1A']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_x11_send_init_error']
add ['esp,', '8']
xor ['eax,', 'eax']
jmp ['loc_1F97']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_1D37']
push ['381h']
push ['offset', '$SG87674']
push ['offset', '$SG87675']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[edx+20h],', '0']
jz ['short', 'loc_1D8A']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+48h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+44h]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+24h]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4Ch]']
push ['eax']
call ['_sshfwd_x11_sharing_handover']
add ['esp,', '28h']
xor ['eax,', 'eax']
jmp ['loc_1F97']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4Ch]']
push ['edx']
call ['_sshfwd_x11_is_local']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
push ['ecx']
call ['_sshfwd_get_conf']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
push ['0']
push ['0']
push ['1']
push ['0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_sk_addr_dup']
add ['esp,', '4']
push ['eax']
call ['_new_connection']
add ['esp,', '24h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+50h],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+50h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+50h]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1E56']
mov ['edx,', '[ebp+var_8]']
push ['edx']
push ['offset', '$SG87681']
call ['_dupprintf']
add ['esp,', '8']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_74]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_x11_send_init_error']
add ['esp,', '8']
mov ['edx,', '[ebp+var_74]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_1F97']
mov ['[ebp+var_40],', '0']
cmp ['[ebp+var_40],', '0']
jz ['short', 'loc_1EC4']
cmp ['[ebp+var_75],', '0']
jnz ['short', 'loc_1E76']
push ['offset', '$LN32']
call ['__RTC_UninitUse']
add ['esp,', '4']
cmp ['[ebp+var_44],', '6']
jnz ['short', 'loc_1EC4']
mov ['eax,', '[ebp+var_40]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3]']
push ['ecx']
mov ['edx,', '[ebp+var_40]']
movzx ['eax,', 'byte', 'ptr', '[edx+2]']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
push ['edx']
mov ['eax,', '[ebp+var_40]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
push ['offset', '$SG87684']
lea ['edx,', '[ebp+Dest]']
push ['edx']
call ['_sprintf']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_40]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_40]']
movzx ['eax,', 'byte', 'ptr', '[edx+5]']
or ['ecx,', 'eax']
mov ['[ebp+var_70],', 'ecx']
jmp ['short', 'loc_1EDC']
push ['offset', '$SG87690']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_strcpy']
add ['esp,', '8']
mov ['[ebp+var_70],', '0']
lea ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+var_70]']
push ['eax']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+4]']
push ['edx']
call ['_x11_make_greeting']
add ['esp,', '24h']
mov ['[ebp+var_30],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+50h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+50h]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+var_30]']
push ['eax']
call ['_smemclr']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+34h],', '1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+50h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+50h]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN38_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '88h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_x11_verify     proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '4Ch']
push ['edi']
lea ['edi,', '[ebp+var_4C]']
mov ['ecx,', '13h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'ds:Str2']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_2085']
mov ['[ebp+var_2C],', '1']
mov ['edx,', '[ebp+arg_14]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+Buf2]']
mov ['[ebp+var_28],', 'eax']
jmp ['short', 'loc_20B5']
mov ['ecx,', 'ds:off_448']
push ['ecx']
mov ['edx,', '[ebp+Str1]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_20AB']
mov ['[ebp+var_2C],', '2']
mov ['eax,', '[ebp+Buf2]']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_20B5']
mov ['eax,', 'offset', '$SG87315']
jmp ['loc_2319']
push ['0']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_find234']
add ['esp,', '0Ch']
mov ['[ebp+var_34],', 'eax']
cmp ['[ebp+var_34],', '0']
jnz ['short', 'loc_20DA']
mov ['eax,', 'offset', '$SG87318']
jmp ['loc_2319']
mov ['eax,', '[ebp+var_34]']
cmp ['dword', 'ptr', '[eax],', '2']
jnz ['loc_230F']
cmp ['[ebp+arg_14],', '18h']
jz ['short', 'loc_20F6']
mov ['eax,', 'offset', '$SG87326']
jmp ['loc_2319']
cmp ['[ebp+arg_4],', '0FFFFFFFFh']
jnz ['short', 'loc_2106']
mov ['eax,', 'offset', '$SG87328']
jmp ['loc_2319']
push ['18h']
mov ['ecx,', '[ebp+Buf2]']
push ['ecx']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[edx+4]']
add ['eax,', '9']
push ['eax']
call ['_des_decrypt_xdmauth']
add ['esp,', '0Ch']
push ['8']
mov ['ecx,', '[ebp+Buf2]']
push ['ecx']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_2141']
mov ['eax,', 'offset', '$SG87330']
jmp ['loc_2319']
mov ['ecx,', '[ebp+Buf2]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
shl ['edx,', '18h']
mov ['eax,', '[ebp+Buf2]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
shl ['ecx,', '10h']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+Buf2]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+Buf2]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Bh]']
or ['edx,', 'ecx']
cmp ['edx,', '[ebp+arg_0]']
jz ['short', 'loc_217B']
mov ['eax,', 'offset', '$SG87340']
jmp ['loc_2319']
mov ['edx,', '[ebp+Buf2]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Ch]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+Buf2]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Dh]']
or ['eax,', 'edx']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_219D']
mov ['eax,', 'offset', '$SG87347']
jmp ['loc_2319']
mov ['eax,', '[ebp+Buf2]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Eh]']
shl ['ecx,', '18h']
mov ['edx,', '[ebp+Buf2]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Fh]']
shl ['eax,', '10h']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+Buf2]']
movzx ['eax,', 'byte', 'ptr', '[edx+10h]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+Buf2]']
movzx ['eax,', 'byte', 'ptr', '[edx+11h]']
or ['ecx,', 'eax']
mov ['[ebp+var_38],', 'ecx']
mov ['[ebp+var_44],', '12h']
jmp ['short', 'loc_21DD']
mov ['ecx,', '[ebp+var_44]']
add ['ecx,', '1']
mov ['[ebp+var_44],', 'ecx']
cmp ['[ebp+var_44],', '18h']
jge ['short', 'loc_21FC']
mov ['edx,', '[ebp+Buf2]']
add ['edx,', '[ebp+var_44]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_21FA']
mov ['eax,', 'offset', '$SG87360']
jmp ['loc_2319']
jmp ['short', 'loc_21D4']
push ['0']
call ['_time']
add ['esp,', '4']
mov ['[ebp+var_40],', 'eax']
mov ['[ebp+var_3C],', 'edx']
mov ['ecx,', '[ebp+var_38]']
xor ['edx,', 'edx']
sub ['ecx,', '[ebp+var_40]']
sbb ['edx,', '[ebp+var_3C]']
push ['ecx']
call ['_abs']
add ['esp,', '4']
cmp ['eax,', '4B0h']
jle ['short', 'loc_2231']
mov ['eax,', 'offset', '$SG87363']
jmp ['loc_2319']
push ['0Ch']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_48],', 'eax']
mov ['eax,', '[ebp+var_48]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax],', 'ecx']
push ['6']
mov ['edx,', '[ebp+Buf2]']
add ['edx,', '8']
push ['edx']
mov ['eax,', '[ebp+var_48]']
add ['eax,', '4']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_34]']
cmp ['dword', 'ptr', '[ecx+18h],', '0']
jnz ['short', 'loc_2280']
push ['1ACh']
push ['offset', '$SG87368']
push ['offset', '$SG87369']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ecx+18h]']
push ['edx']
call ['_add234']
add ['esp,', '8']
mov ['[ebp+var_4C],', 'eax']
mov ['eax,', '[ebp+var_4C]']
cmp ['eax,', '[ebp+var_48]']
jz ['short', 'loc_22B1']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', 'offset', '$SG87371']
jmp ['short', 'loc_2319']
push ['0']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[edx+18h]']
push ['eax']
call ['_index234']
add ['esp,', '8']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '0']
jnz ['short', 'loc_22E2']
push ['1B5h']
push ['offset', '$SG87377']
push ['offset', '$SG87378']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_48]']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '[edx]']
cmp ['eax,', '4B0h']
ja ['short', 'loc_22F3']
jmp ['short', 'loc_230F']
push ['0']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ecx+18h]']
push ['edx']
call ['_delpos234']
add ['esp,', '8']
push ['eax']
call ['_safefree']
add ['esp,', '4']
jmp ['short', 'loc_22B1']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[ebp+var_34]']
mov ['[eax],', 'ecx']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN27']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '4Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_time           proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Time]']
push ['eax']
call ['__time64']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_x11_parse_ip   proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+Src],', '0']
jz ['short', 'loc_2401']
lea ['eax,', '[ebp+var_C]']
push ['eax']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
lea ['eax,', '[ebp+var_18]']
push ['eax']
push ['offset', '$SG87593']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
call ['_sscanf']
add ['esp,', '18h']
cmp ['eax,', '4']
jnz ['short', 'loc_2401']
mov ['edx,', '[ebp+var_18]']
shl ['edx,', '18h']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '10h']
or ['edx,', 'eax']
mov ['ecx,', '[ebp+var_10]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
or ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax],', 'edx']
mov ['eax,', '1']
jmp ['short', 'loc_2403']
jmp ['short', 'loc_2403']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_x11_send_eof   proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+50h],', '0']
jz ['short', 'loc_2473']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+50h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+50h]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_248B']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+4Ch],', '0']
jz ['short', 'loc_248B']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4Ch]']
push ['eax']
call ['_sshfwd_write_eof']
add ['esp,', '4']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_x11_identify_auth_proto proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_24C1']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '3']
jnb ['short', 'loc_24E9']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', 'ds:_x11_authnames[ecx*4]']
push ['edx']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_24E7']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_24EC']
jmp ['short', 'loc_24B8']
or ['eax,', '0FFFFFFFFh']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_x11_dehexify   proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['dword', 'ptr', '[ebp+Src],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
shr ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
push ['1']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_255E']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_4]']
jge ['short', 'loc_25AC']
mov ['[ebp+var_20],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+Str]']
mov ['al,', '[edx+ecx*2]']
mov ['[ebp+Src],', 'al']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+Str]']
mov ['al,', '[edx+ecx*2+1]']
mov ['[ebp+Src+1],', 'al']
mov ['[ebp+Src+2],', '0']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
push ['offset', '$SG87720']
lea ['edx,', '[ebp+Src]']
push ['edx']
call ['_sscanf']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '[ebp+var_8]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_20]']
mov ['[eax],', 'cl']
jmp ['short', 'loc_2555']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_x11_make_greeting proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0A0h']
push ['edi']
lea ['edi,', '[ebp+var_A0]']
mov ['ecx,', '28h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', 'ds:_x11_authnames[eax*4]']
mov ['[ebp+Str],', 'ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '3']
and ['eax,', '0FFFFFFFCh']
mov ['[ebp+var_60],', 'eax']
cmp ['[ebp+arg_C],', '1']
jnz ['short', 'loc_2669']
mov ['ecx,', '[ebp+Src]']
mov ['[ebp+var_58],', 'ecx']
mov ['edx,', '[ebp+arg_14]']
mov ['[ebp+Size],', 'edx']
jmp ['loc_2761']
cmp ['[ebp+arg_C],', '2']
jnz ['loc_2754']
cmp ['[ebp+arg_14],', '10h']
jnz ['loc_2754']
mov ['[ebp+var_7C],', '0']
lea ['eax,', '[ebp+var_7C]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
call ['_x11_parse_ip']
add ['esp,', '8']
lea ['edx,', '[ebp+Dst]']
mov ['[ebp+var_58],', 'edx']
mov ['[ebp+Size],', '18h']
mov ['eax,', '[ebp+Size]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
push ['8']
mov ['edx,', '[ebp+Src]']
push ['edx']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_7C]']
shr ['ecx,', '18h']
mov ['[ebp+var_44],', 'cl']
mov ['edx,', '[ebp+var_7C]']
shr ['edx,', '10h']
mov ['[ebp+var_43],', 'dl']
mov ['eax,', '[ebp+var_7C]']
shr ['eax,', '8']
mov ['[ebp+var_42],', 'al']
mov ['cl,', 'byte', 'ptr', '[ebp+var_7C]']
mov ['[ebp+var_41],', 'cl']
mov ['edx,', '[ebp+arg_1C]']
sar ['edx,', '8']
mov ['[ebp+var_40],', 'dl']
mov ['al,', 'byte', 'ptr', '[ebp+arg_1C]']
mov ['[ebp+var_3F],', 'al']
push ['0']
call ['_time']
add ['esp,', '4']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_70],', 'edx']
mov ['eax,', '[ebp+var_74]']
mov ['edx,', '[ebp+var_70]']
mov ['cl,', '18h']
call ['__allshr']
mov ['[ebp+var_3E],', 'al']
mov ['eax,', '[ebp+var_74]']
mov ['edx,', '[ebp+var_70]']
mov ['cl,', '10h']
call ['__allshr']
mov ['[ebp+var_3D],', 'al']
mov ['eax,', '[ebp+var_74]']
mov ['edx,', '[ebp+var_70]']
mov ['cl,', '8']
call ['__allshr']
mov ['[ebp+var_3C],', 'al']
mov ['cl,', 'byte', 'ptr', '[ebp+var_74]']
mov ['[ebp+var_3B],', 'cl']
mov ['edx,', '[ebp+Size]']
push ['edx']
lea ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
add ['ecx,', '9']
push ['ecx']
call ['_des_encrypt_xdmauth']
add ['esp,', '0Ch']
jmp ['short', 'loc_2761']
lea ['edx,', '[ebp+Dst]']
mov ['[ebp+var_58],', 'edx']
mov ['[ebp+Size],', '0']
mov ['eax,', '[ebp+Size]']
add ['eax,', '3']
and ['eax,', '0FFFFFFFCh']
mov ['[ebp+var_68],', 'eax']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ebp+var_60]']
lea ['eax,', '[edx+ecx+0Ch]']
mov ['[ebp+var_6C],', 'eax']
push ['1']
mov ['ecx,', '[ebp+var_6C]']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_6C]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', 'byte', 'ptr', '[ebp+arg_0]']
mov ['[ecx],', 'dl']
cmp ['[ebp+arg_0],', '42h']
jnz ['short', 'loc_27CC']
mov ['eax,', '[ebp+arg_4]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+var_8]']
mov ['al,', 'byte', 'ptr', '[ebp+arg_4]']
mov ['[edx+3],', 'al']
movzx ['ecx,', 'byte', 'ptr', '[ebp+arg_4]']
mov ['[ebp+var_84],', 'ecx']
jmp ['short', 'loc_27FA']
mov ['edx,', '[ebp+var_8]']
mov ['al,', 'byte', 'ptr', '[ebp+arg_4]']
mov ['[edx+2],', 'al']
mov ['ecx,', '[ebp+arg_4]']
sar ['ecx,', '8']
mov ['[ebp+var_88],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['al,', 'byte', 'ptr', '[ebp+var_88]']
mov ['[edx+3],', 'al']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_88]']
mov ['[ebp+var_84],', 'ecx']
cmp ['[ebp+arg_0],', '42h']
jnz ['short', 'loc_2821']
mov ['edx,', '[ebp+arg_8]']
sar ['edx,', '8']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+4],', 'dl']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', 'byte', 'ptr', '[ebp+arg_8]']
mov ['[ecx+5],', 'dl']
movzx ['eax,', 'byte', 'ptr', '[ebp+arg_8]']
mov ['[ebp+var_8C],', 'eax']
jmp ['short', 'loc_284F']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', 'byte', 'ptr', '[ebp+arg_8]']
mov ['[ecx+4],', 'dl']
mov ['eax,', '[ebp+arg_8]']
sar ['eax,', '8']
mov ['[ebp+var_90],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_90]']
mov ['[ecx+5],', 'dl']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_90]']
mov ['[ebp+var_8C],', 'eax']
cmp ['[ebp+arg_0],', '42h']
jnz ['short', 'loc_2876']
mov ['ecx,', '[ebp+var_5C]']
sar ['ecx,', '8']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+6],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_5C]']
mov ['[eax+7],', 'cl']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_5C]']
mov ['[ebp+var_94],', 'edx']
jmp ['short', 'loc_28A4']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_5C]']
mov ['[eax+6],', 'cl']
mov ['edx,', '[ebp+var_5C]']
sar ['edx,', '8']
mov ['[ebp+var_98],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_98]']
mov ['[eax+7],', 'cl']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_98]']
mov ['[ebp+var_94],', 'edx']
cmp ['[ebp+arg_0],', '42h']
jnz ['short', 'loc_28CB']
mov ['eax,', '[ebp+Size]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+8],', 'al']
mov ['edx,', '[ebp+var_8]']
mov ['al,', 'byte', 'ptr', '[ebp+Size]']
mov ['[edx+9],', 'al']
movzx ['ecx,', 'byte', 'ptr', '[ebp+Size]']
mov ['[ebp+var_9C],', 'ecx']
jmp ['short', 'loc_28F9']
mov ['edx,', '[ebp+var_8]']
mov ['al,', 'byte', 'ptr', '[ebp+Size]']
mov ['[edx+8],', 'al']
mov ['ecx,', '[ebp+Size]']
sar ['ecx,', '8']
mov ['[ebp+var_A0],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['al,', 'byte', 'ptr', '[ebp+var_A0]']
mov ['[edx+9],', 'al']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_A0]']
mov ['[ebp+var_9C],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '0Ch']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+var_58]']
push ['eax']
mov ['ecx,', '[ebp+var_60]']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[edx+ecx+0Ch]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
push ['40h']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_20]']
mov ['eax,', '[ebp+var_6C]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0A0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

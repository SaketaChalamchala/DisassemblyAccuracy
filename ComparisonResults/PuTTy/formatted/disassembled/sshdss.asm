_dss_newkey     proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
push ['14h']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
lea ['eax,', '[ebp+var_14]']
push ['eax']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
lea ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_getstring']
add ['esp,', '10h']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1D6']
cmp ['[ebp+var_14],', '7']
jnz ['short', 'loc_1D6']
push ['7']
push ['offset', '$SG7243']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_1E9']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_2B3']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_getmp']
add ['esp,', '8']
mov ['edx,', '[ebp+var_1C]']
mov ['[edx],', 'eax']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_getmp']
add ['esp,', '8']
mov ['edx,', '[ebp+var_1C]']
mov ['[edx+4],', 'eax']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_getmp']
add ['esp,', '8']
mov ['edx,', '[ebp+var_1C]']
mov ['[edx+8],', 'eax']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_getmp']
add ['esp,', '8']
mov ['edx,', '[ebp+var_1C]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_1C]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['ecx,', '[ebp+var_1C]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_2A0']
mov ['edx,', '[ebp+var_1C]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jz ['short', 'loc_2A0']
mov ['eax,', '[ebp+var_1C]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_2A0']
mov ['ecx,', '[ebp+var_1C]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jz ['short', 'loc_2A0']
mov ['edx,', 'dword', 'ptr', 'ds:_Zero']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_bignum_cmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_2A0']
mov ['edx,', 'dword', 'ptr', 'ds:_Zero']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_bignum_cmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_2B0']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_dss_freekey']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_2B3']
mov ['eax,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_getstring      proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx],', '4']
jge ['short', 'loc_315']
jmp ['loc_3AF']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '18h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
movzx ['edx,', 'byte', 'ptr', '[eax+1]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
movzx ['eax,', 'byte', 'ptr', '[edx+2]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
movzx ['edx,', 'byte', 'ptr', '[eax+3]']
or ['ecx,', 'edx']
push ['ecx']
call ['_toint']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[edx],', '0']
jge ['short', 'loc_35F']
jmp ['short', 'loc_3AF']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
sub ['ecx,', '4']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx]']
jge ['short', 'loc_387']
jmp ['short', 'loc_3AF']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_C]']
add ['ecx,', '[edx]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ecx]']
sub ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_getmp          proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
lea ['eax,', '[ebp+var_14]']
push ['eax']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_getstring']
add ['esp,', '10h']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_3FE']
xor ['eax,', 'eax']
jmp ['short', 'loc_426']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
and ['edx,', '80h']
jz ['short', 'loc_410']
xor ['eax,', 'eax']
jmp ['short', 'loc_426']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_bignum_from_bytes']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_dss_freekey    proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_4A3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_4BB']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jz ['short', 'loc_4D3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jz ['short', 'loc_4EB']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
jz ['short', 'loc_503']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+10h]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_dss_fmtkey     proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['edi']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jnz ['short', 'loc_557']
xor ['eax,', 'eax']
jmp ['loc_8C4']
mov ['[ebp+var_C],', '0Dh']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
lea ['eax,', 'ds:3Ch[eax*4]']
cdq
and ['edx,', '0Fh']
add ['eax,', 'edx']
sar ['eax,', '4']
add ['eax,', '[ebp+var_C]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_bignum_bitcount']
add ['esp,', '4']
lea ['eax,', 'ds:3Ch[eax*4]']
cdq
and ['edx,', '0Fh']
add ['eax,', 'edx']
sar ['eax,', '4']
add ['eax,', '[ebp+var_C]']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_bignum_bitcount']
add ['esp,', '4']
lea ['eax,', 'ds:3Ch[eax*4]']
cdq
and ['edx,', '0Fh']
add ['eax,', 'edx']
sar ['eax,', '4']
add ['eax,', '[ebp+var_C]']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
lea ['eax,', 'ds:3Ch[eax*4]']
cdq
and ['edx,', '0Fh']
add ['eax,', 'edx']
sar ['eax,', '4']
add ['eax,', '[ebp+var_C]']
mov ['[ebp+var_C],', 'eax']
push ['1']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_60F']
xor ['eax,', 'eax']
jmp ['loc_8C4']
mov ['[ebp+var_14],', '0']
push ['offset', '$SG7278']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_14]']
push ['edx']
call ['_sprintf']
add ['esp,', '8']
add ['eax,', '[ebp+var_14]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '3']
cdq
and ['edx,', '3']
add ['eax,', 'edx']
sar ['eax,', '2']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '1']
jge ['short', 'loc_65A']
mov ['[ebp+var_18],', '1']
mov ['edx,', '[ebp+var_18]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_6BD']
mov ['eax,', '[ebp+var_10]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
push ['eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
push ['eax']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_10]']
and ['ecx,', '80000001h']
jns ['short', 'loc_69C']
dec ['ecx']
or ['ecx,', '0FFFFFFFEh']
inc ['ecx']
shl ['ecx,', '2']
sar ['eax,', 'cl']
and ['eax,', '0Fh']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_14]']
mov ['dl,', 'ds:?hex@?1??dss_fmtkey@@9@9[eax]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_660']
push ['offset', '$SG7283']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_sprintf']
add ['esp,', '8']
add ['eax,', '[ebp+var_14]']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '3']
cdq
and ['edx,', '3']
add ['eax,', 'edx']
sar ['eax,', '2']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '1']
jge ['short', 'loc_702']
mov ['[ebp+var_18],', '1']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_766']
mov ['eax,', '[ebp+var_10]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_10]']
and ['ecx,', '80000001h']
jns ['short', 'loc_745']
dec ['ecx']
or ['ecx,', '0FFFFFFFEh']
inc ['ecx']
shl ['ecx,', '2']
sar ['eax,', 'cl']
and ['eax,', '0Fh']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_14]']
mov ['dl,', 'ds:?hex@?1??dss_fmtkey@@9@9[eax]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_708']
push ['offset', '$SG7288']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_sprintf']
add ['esp,', '8']
add ['eax,', '[ebp+var_14]']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '3']
cdq
and ['edx,', '3']
add ['eax,', 'edx']
sar ['eax,', '2']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '1']
jge ['short', 'loc_7AB']
mov ['[ebp+var_18],', '1']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_80F']
mov ['eax,', '[ebp+var_10]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_10]']
and ['ecx,', '80000001h']
jns ['short', 'loc_7EE']
dec ['ecx']
or ['ecx,', '0FFFFFFFEh']
inc ['ecx']
shl ['ecx,', '2']
sar ['eax,', 'cl']
and ['eax,', '0Fh']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_14]']
mov ['dl,', 'ds:?hex@?1??dss_fmtkey@@9@9[eax]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_7B1']
push ['offset', '$SG7293']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_sprintf']
add ['esp,', '8']
add ['eax,', '[ebp+var_14]']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '3']
cdq
and ['edx,', '3']
add ['eax,', 'edx']
sar ['eax,', '2']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '1']
jge ['short', 'loc_854']
mov ['[ebp+var_18],', '1']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_8B8']
mov ['eax,', '[ebp+var_10]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_10]']
and ['ecx,', '80000001h']
jns ['short', 'loc_897']
dec ['ecx']
or ['ecx,', '0FFFFFFFEh']
inc ['ecx']
shl ['ecx,', '2']
sar ['eax,', 'cl']
and ['eax,', '0Fh']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_14]']
mov ['dl,', 'ds:?hex@?1??dss_fmtkey@@9@9[eax]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_85A']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_14]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_dss_fingerprint proc near              
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '140h']
push ['edi']
lea ['edi,', '[ebp+var_140]']
mov ['ecx,', '50h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
lea ['ecx,', '[ebp+var_68]']
push ['ecx']
call ['_MD5Init']
add ['esp,', '4']
push ['0Bh']
push ['offset', '$SG7312']
lea ['edx,', '[ebp+var_68]']
push ['edx']
call ['_MD5Update']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '8']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_F8],', 'eax']
mov ['edx,', '[ebp+var_F8]']
sar ['edx,', '18h']
mov ['[ebp+var_8C],', 'dl']
mov ['eax,', '[ebp+var_F8]']
sar ['eax,', '10h']
mov ['[ebp+var_8B],', 'al']
mov ['ecx,', '[ebp+var_F8]']
sar ['ecx,', '8']
mov ['[ebp+var_8A],', 'cl']
mov ['dl,', 'byte', 'ptr', '[ebp+var_F8]']
mov ['[ebp+var_89],', 'dl']
push ['4']
lea ['eax,', '[ebp+var_8C]']
push ['eax']
lea ['ecx,', '[ebp+var_68]']
push ['ecx']
call ['_MD5Update']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_F8]']
mov ['[ebp+var_FC],', 'edx']
mov ['eax,', '[ebp+var_FC]']
mov ['[ebp+var_130],', 'eax']
mov ['ecx,', '[ebp+var_FC]']
sub ['ecx,', '1']
mov ['[ebp+var_FC],', 'ecx']
cmp ['[ebp+var_130],', '0']
jz ['short', 'loc_9F7']
mov ['edx,', '[ebp+var_FC]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['[ebp+var_101],', 'al']
push ['1']
lea ['edx,', '[ebp+var_101]']
push ['edx']
lea ['eax,', '[ebp+var_68]']
push ['eax']
call ['_MD5Update']
add ['esp,', '0Ch']
jmp ['short', 'loc_9A1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '8']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_F8],', 'eax']
mov ['eax,', '[ebp+var_F8]']
sar ['eax,', '18h']
mov ['[ebp+var_8C],', 'al']
mov ['ecx,', '[ebp+var_F8]']
sar ['ecx,', '10h']
mov ['[ebp+var_8B],', 'cl']
mov ['edx,', '[ebp+var_F8]']
sar ['edx,', '8']
mov ['[ebp+var_8A],', 'dl']
mov ['al,', 'byte', 'ptr', '[ebp+var_F8]']
mov ['[ebp+var_89],', 'al']
push ['4']
lea ['ecx,', '[ebp+var_8C]']
push ['ecx']
lea ['edx,', '[ebp+var_68]']
push ['edx']
call ['_MD5Update']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_F8]']
mov ['[ebp+var_FC],', 'eax']
mov ['ecx,', '[ebp+var_FC]']
mov ['[ebp+var_134],', 'ecx']
mov ['edx,', '[ebp+var_FC]']
sub ['edx,', '1']
mov ['[ebp+var_FC],', 'edx']
cmp ['[ebp+var_134],', '0']
jz ['short', 'loc_AC9']
mov ['eax,', '[ebp+var_FC]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['[ebp+var_10D],', 'al']
push ['1']
lea ['eax,', '[ebp+var_10D]']
push ['eax']
lea ['ecx,', '[ebp+var_68]']
push ['ecx']
call ['_MD5Update']
add ['esp,', '0Ch']
jmp ['short', 'loc_A72']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '8']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_F8],', 'eax']
mov ['ecx,', '[ebp+var_F8]']
sar ['ecx,', '18h']
mov ['[ebp+var_8C],', 'cl']
mov ['edx,', '[ebp+var_F8]']
sar ['edx,', '10h']
mov ['[ebp+var_8B],', 'dl']
mov ['eax,', '[ebp+var_F8]']
sar ['eax,', '8']
mov ['[ebp+var_8A],', 'al']
mov ['cl,', 'byte', 'ptr', '[ebp+var_F8]']
mov ['[ebp+var_89],', 'cl']
push ['4']
lea ['edx,', '[ebp+var_8C]']
push ['edx']
lea ['eax,', '[ebp+var_68]']
push ['eax']
call ['_MD5Update']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_F8]']
mov ['[ebp+var_FC],', 'ecx']
mov ['edx,', '[ebp+var_FC]']
mov ['[ebp+var_138],', 'edx']
mov ['eax,', '[ebp+var_FC]']
sub ['eax,', '1']
mov ['[ebp+var_FC],', 'eax']
cmp ['[ebp+var_138],', '0']
jz ['short', 'loc_B9B']
mov ['ecx,', '[ebp+var_FC]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_bignum_byte']
add ['esp,', '8']
mov ['[ebp+var_119],', 'al']
push ['1']
lea ['ecx,', '[ebp+var_119]']
push ['ecx']
lea ['edx,', '[ebp+var_68]']
push ['edx']
call ['_MD5Update']
add ['esp,', '0Ch']
jmp ['short', 'loc_B44']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '8']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_F8],', 'eax']
mov ['edx,', '[ebp+var_F8]']
sar ['edx,', '18h']
mov ['[ebp+var_8C],', 'dl']
mov ['eax,', '[ebp+var_F8]']
sar ['eax,', '10h']
mov ['[ebp+var_8B],', 'al']
mov ['ecx,', '[ebp+var_F8]']
sar ['ecx,', '8']
mov ['[ebp+var_8A],', 'cl']
mov ['dl,', 'byte', 'ptr', '[ebp+var_F8]']
mov ['[ebp+var_89],', 'dl']
push ['4']
lea ['eax,', '[ebp+var_8C]']
push ['eax']
lea ['ecx,', '[ebp+var_68]']
push ['ecx']
call ['_MD5Update']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_F8]']
mov ['[ebp+var_FC],', 'edx']
mov ['eax,', '[ebp+var_FC]']
mov ['[ebp+var_13C],', 'eax']
mov ['ecx,', '[ebp+var_FC]']
sub ['ecx,', '1']
mov ['[ebp+var_FC],', 'ecx']
cmp ['[ebp+var_13C],', '0']
jz ['short', 'loc_C6D']
mov ['edx,', '[ebp+var_FC]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['[ebp+var_125],', 'al']
push ['1']
lea ['edx,', '[ebp+var_125]']
push ['edx']
lea ['eax,', '[ebp+var_68]']
push ['eax']
call ['_MD5Update']
add ['esp,', '0Ch']
jmp ['short', 'loc_C16']
lea ['ecx,', '[ebp+var_68]']
push ['ecx']
lea ['edx,', '[ebp+var_80]']
push ['edx']
call ['_MD5Final']
add ['esp,', '8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_bignum_bitcount']
add ['esp,', '4']
push ['eax']
push ['offset', '$SG7345']
lea ['edx,', '[ebp+var_EC]']
push ['edx']
call ['_sprintf']
add ['esp,', '0Ch']
mov ['[ebp+var_FC],', '0']
jmp ['short', 'loc_CBB']
mov ['eax,', '[ebp+var_FC]']
add ['eax,', '1']
mov ['[ebp+var_FC],', 'eax']
cmp ['[ebp+var_FC],', '10h']
jge ['short', 'loc_D1C']
cmp ['[ebp+var_FC],', '0']
jz ['short', 'loc_CD9']
mov ['[ebp+var_140],', 'offset', '$SG7349']
jmp ['short', 'loc_CE3']
mov ['[ebp+var_140],', 'offset', '$SG7350']
mov ['ecx,', '[ebp+var_FC]']
movzx ['edx,', '[ebp+ecx+var_80]']
push ['edx']
mov ['eax,', '[ebp+var_140]']
push ['eax']
push ['offset', '$SG7351']
lea ['ecx,', '[ebp+var_EC]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
lea ['edx,', '[ebp+eax+var_EC]']
push ['edx']
call ['_sprintf']
add ['esp,', '10h']
jmp ['short', 'loc_CAC']
push ['1']
lea ['eax,', '[ebp+var_EC]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_F4],', 'eax']
cmp ['[ebp+var_F4],', '0']
jz ['short', 'loc_D5E']
lea ['ecx,', '[ebp+var_EC]']
push ['ecx']
mov ['edx,', '[ebp+var_F4]']
push ['edx']
call ['_strcpy']
add ['esp,', '8']
mov ['eax,', '[ebp+var_F4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN26']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '140h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_dss_verifysig  proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '68h']
push ['edi']
lea ['edi,', '[ebp+var_68]']
mov ['ecx,', '1Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx],', '0']
jnz ['short', 'loc_E61']
xor ['eax,', 'eax']
jmp ['loc_10F2']
cmp ['[ebp+arg_8],', '28h']
jz ['short', 'loc_EBB']
lea ['edx,', '[ebp+var_1C]']
push ['edx']
lea ['eax,', '[ebp+var_10]']
push ['eax']
lea ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_getstring']
add ['esp,', '10h']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_EA2']
cmp ['[ebp+var_1C],', '7']
jnz ['short', 'loc_EA2']
push ['7']
push ['offset', '$SG7387']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_EA9']
xor ['eax,', 'eax']
jmp ['loc_10F2']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '4']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '4']
mov ['[ebp+arg_8],', 'edx']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_get160']
add ['esp,', '8']
mov ['[ebp+var_40],', 'eax']
lea ['edx,', '[ebp+arg_8]']
push ['edx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_get160']
add ['esp,', '8']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_40],', '0']
jz ['short', 'loc_EED']
cmp ['[ebp+var_44],', '0']
jnz ['short', 'loc_F18']
cmp ['[ebp+var_40],', '0']
jz ['short', 'loc_EFF']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_F11']
mov ['edx,', '[ebp+var_44]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_10F2']
mov ['eax,', 'dword', 'ptr', 'ds:_Zero']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
call ['_bignum_cmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_F4D']
mov ['edx,', '[ebp+var_40]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_44]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_10F2']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_44]']
push ['eax']
call ['_modinv']
add ['esp,', '8']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '0']
jnz ['short', 'loc_F88']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
mov ['edx,', '[ebp+var_44]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_10F2']
lea ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_SHA_Simple']
add ['esp,', '0Ch']
lea ['eax,', '[ebp+var_38]']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_1C],', '14h']
lea ['ecx,', '[ebp+var_1C]']
push ['ecx']
lea ['edx,', '[ebp+var_10]']
push ['edx']
call ['_get160']
add ['esp,', '8']
mov ['[ebp+var_60],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+var_60]']
push ['eax']
call ['_modmul']
add ['esp,', '0Ch']
mov ['[ebp+var_58],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
call ['_modmul']
add ['esp,', '0Ch']
mov ['[ebp+var_5C],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_58]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_modpow']
add ['esp,', '0Ch']
mov ['[ebp+var_4C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_modpow']
add ['esp,', '0Ch']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_50]']
push ['edx']
mov ['eax,', '[ebp+var_4C]']
push ['eax']
call ['_modmul']
add ['esp,', '0Ch']
mov ['[ebp+var_54],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', 'dword', 'ptr', 'ds:_One']
push ['eax']
mov ['ecx,', '[ebp+var_54]']
push ['ecx']
call ['_modmul']
add ['esp,', '0Ch']
mov ['[ebp+var_64],', 'eax']
mov ['edx,', '[ebp+var_40]']
push ['edx']
mov ['eax,', '[ebp+var_64]']
push ['eax']
call ['_bignum_cmp']
add ['esp,', '8']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
mov ['edx,', '[ebp+var_60]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_58]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4C]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_50]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_54]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
mov ['edx,', '[ebp+var_64]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_40]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_68]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '68h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_get160         proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '14h']
jge ['short', 'loc_1173']
xor ['eax,', 'eax']
jmp ['short', 'loc_11A3']
push ['14h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_bignum_from_bytes']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '14h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
sub ['ecx,', '14h']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_dss_public_blob proc near              
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '8']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '8']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '8']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '8']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax+1Bh]']
add ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'edx']
push ['1']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_24]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_24]']
mov ['byte', 'ptr', '[eax+1],', '0']
mov ['ecx,', '[ebp+var_24]']
mov ['byte', 'ptr', '[ecx+2],', '0']
mov ['edx,', '[ebp+var_24]']
mov ['byte', 'ptr', '[edx+3],', '7']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '4']
mov ['[ebp+var_24],', 'eax']
push ['7']
push ['offset', '$SG7417']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '7']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_8]']
sar ['eax,', '18h']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_8]']
sar ['edx,', '10h']
mov ['eax,', '[ebp+var_24]']
mov ['[eax+1],', 'dl']
mov ['ecx,', '[ebp+var_8]']
sar ['ecx,', '8']
mov ['edx,', '[ebp+var_24]']
mov ['[edx+2],', 'cl']
mov ['eax,', '[ebp+var_24]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_8]']
mov ['[eax+3],', 'cl']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '4']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
sub ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_132B']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
jmp ['short', 'loc_12F4']
mov ['eax,', '[ebp+var_C]']
sar ['eax,', '18h']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_C]']
sar ['edx,', '10h']
mov ['eax,', '[ebp+var_24]']
mov ['[eax+1],', 'dl']
mov ['ecx,', '[ebp+var_C]']
sar ['ecx,', '8']
mov ['edx,', '[ebp+var_24]']
mov ['[edx+2],', 'cl']
mov ['eax,', '[ebp+var_24]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_C]']
mov ['[eax+3],', 'cl']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '4']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
sub ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_139E']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
jmp ['short', 'loc_1366']
mov ['eax,', '[ebp+var_10]']
sar ['eax,', '18h']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_10]']
sar ['edx,', '10h']
mov ['eax,', '[ebp+var_24]']
mov ['[eax+1],', 'dl']
mov ['ecx,', '[ebp+var_10]']
sar ['ecx,', '8']
mov ['edx,', '[ebp+var_24]']
mov ['[edx+2],', 'cl']
mov ['eax,', '[ebp+var_24]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_10]']
mov ['[eax+3],', 'cl']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '4']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
sub ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_1411']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
jmp ['short', 'loc_13D9']
mov ['eax,', '[ebp+var_14]']
sar ['eax,', '18h']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_14]']
sar ['edx,', '10h']
mov ['eax,', '[ebp+var_24]']
mov ['[eax+1],', 'dl']
mov ['ecx,', '[ebp+var_14]']
sar ['ecx,', '8']
mov ['edx,', '[ebp+var_24]']
mov ['[edx+2],', 'cl']
mov ['eax,', '[ebp+var_24]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_14]']
mov ['[eax+3],', 'cl']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '4']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
sub ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_1484']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
jmp ['short', 'loc_144C']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_18]']
cmp ['[ebp+var_24],', 'eax']
jz ['short', 'loc_14A6']
push ['178h']
push ['offset', '$SG7447']
push ['offset', '$SG7448']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_20]']
pop ['edi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_dss_private_blob proc near             
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+10h]']
push ['edx']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '8']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
push ['1']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_8]']
sar ['eax,', '18h']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_8]']
sar ['edx,', '10h']
mov ['eax,', '[ebp+var_18]']
mov ['[eax+1],', 'dl']
mov ['ecx,', '[ebp+var_8]']
sar ['ecx,', '8']
mov ['edx,', '[ebp+var_18]']
mov ['[edx+2],', 'cl']
mov ['eax,', '[ebp+var_18]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_8]']
mov ['[eax+3],', 'cl']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '4']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_15A3']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+10h]']
push ['edx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
jmp ['short', 'loc_156B']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_C]']
cmp ['[ebp+var_18],', 'eax']
jz ['short', 'loc_15C5']
push ['190h']
push ['offset', '$SG7472']
push ['offset', '$SG7473']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_dss_createkey  proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0B4h']
push ['edi']
lea ['edi,', '[ebp+var_B4]']
mov ['ecx,', '2Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_dss_newkey']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_1638']
xor ['eax,', 'eax']
jmp ['loc_178F']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_getmp']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jnz ['short', 'loc_166A']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_dss_freekey']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_178F']
mov ['[ebp+var_28],', '0FFFFFFFFh']
lea ['edx,', '[ebp+var_28]']
push ['edx']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
lea ['edx,', '[ebp+var_10]']
push ['edx']
call ['_getstring']
add ['esp,', '10h']
cmp ['[ebp+var_28],', '14h']
jnz ['loc_1722']
lea ['eax,', '[ebp+var_90]']
push ['eax']
call ['_SHA_Init']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
push ['edx']
lea ['eax,', '[ebp+var_90]']
push ['eax']
call ['_sha_mpint']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
push ['edx']
lea ['eax,', '[ebp+var_90]']
push ['eax']
call ['_sha_mpint']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
lea ['eax,', '[ebp+var_90]']
push ['eax']
call ['_sha_mpint']
add ['esp,', '8']
lea ['ecx,', '[ebp+var_AC]']
push ['ecx']
lea ['edx,', '[ebp+var_90]']
push ['edx']
call ['_SHA_Final']
add ['esp,', '8']
push ['14h']
lea ['eax,', '[ebp+var_AC]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_1722']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_dss_freekey']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_178F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_modpow']
add ['esp,', '0Ch']
mov ['[ebp+var_B4],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_B4]']
push ['edx']
call ['_bignum_cmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_177D']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_dss_freekey']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_B4]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_178F']
mov ['edx,', '[ebp+var_B4]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0B4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_sha_mpint      proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '8']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
sar ['ecx,', '18h']
mov ['byte', 'ptr', '[ebp+var_8],', 'cl']
mov ['edx,', '[ebp+var_10]']
sar ['edx,', '10h']
mov ['byte', 'ptr', '[ebp+var_8+1],', 'dl']
mov ['eax,', '[ebp+var_10]']
sar ['eax,', '8']
mov ['byte', 'ptr', '[ebp+var_8+2],', 'al']
mov ['cl,', 'byte', 'ptr', '[ebp+var_10]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'cl']
push ['4']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_SHA_Bytes']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
test ['ecx,', 'ecx']
jle ['short', 'loc_189D']
mov ['[ebp+var_14],', '1']
jmp ['short', 'loc_18A4']
mov ['[ebp+var_14],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_18D1']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['byte', 'ptr', '[ebp+var_8],', 'al']
push ['1']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_SHA_Bytes']
add ['esp,', '0Ch']
jmp ['short', 'loc_1884']
push ['4']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_dss_openssh_createkey proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
push ['14h']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_getmp']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_getmp']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_getmp']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_getmp']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_getmp']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx],', '0']
jz ['short', 'loc_1A11']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_1A11']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jz ['short', 'loc_1A11']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_1A11']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_1A11']
mov ['ecx,', 'dword', 'ptr', 'ds:_Zero']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_bignum_cmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_1A11']
mov ['ecx,', 'dword', 'ptr', 'ds:_Zero']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
call ['_bignum_cmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_1A21']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_dss_freekey']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_1A24']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_dss_openssh_fmtkey proc near           
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
mov ['esi,', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
add ['esi,', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_ssh2_bignum_length']
add ['esp,', '4']
add ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
add ['esi,', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
add ['esi,', 'eax']
mov ['[ebp+var_8],', 'esi']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+arg_8]']
jle ['short', 'loc_1ACD']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_1ED2']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '18h']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '10h']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx+1],', 'al']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '8']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx+2],', 'al']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx+3],', 'al']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_1B9B']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1B61']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '18h']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx+1],', 'al']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '8']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx+3],', 'al']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1C68']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_1C2D']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '18h']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '10h']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx+1],', 'al']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '8']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx+2],', 'al']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx+3],', 'al']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_1D35']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1CFA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '18h']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx+1],', 'al']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '8']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx+3],', 'al']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_1E02']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_1DC7']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '18h']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '10h']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx+1],', 'al']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '8']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx+2],', 'al']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx+3],', 'al']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+10h]']
push ['edx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_1ECF']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1E94']
mov ['eax,', '[ebp+var_8]']
pop ['esi']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_dss_pubkey_bits proc near              
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_dss_newkey']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_1F1E']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_1F3E']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_dss_freekey']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_dss_sign       proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '250h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_250]']
mov ['ecx,', '94h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
lea ['ecx,', '[ebp+var_FC]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_SHA_Simple']
add ['esp,', '0Ch']
lea ['ecx,', '[ebp+var_E0]']
push ['ecx']
call ['_SHA512_Init']
add ['esp,', '4']
push ['1Eh']
push ['offset', '$SG7600']
lea ['edx,', '[ebp+var_E0]']
push ['edx']
call ['_SHA512_Bytes']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
lea ['edx,', '[ebp+var_E0]']
push ['edx']
call ['_sha512_mpint']
add ['esp,', '8']
lea ['eax,', '[ebp+var_144]']
push ['eax']
lea ['ecx,', '[ebp+var_E0]']
push ['ecx']
call ['_SHA512_Final']
add ['esp,', '8']
lea ['edx,', '[ebp+var_E0]']
push ['edx']
call ['_SHA512_Init']
add ['esp,', '4']
push ['40h']
lea ['eax,', '[ebp+var_144]']
push ['eax']
lea ['ecx,', '[ebp+var_E0]']
push ['ecx']
call ['_SHA512_Bytes']
add ['esp,', '0Ch']
push ['14h']
lea ['edx,', '[ebp+var_FC]']
push ['edx']
lea ['eax,', '[ebp+var_E0]']
push ['eax']
call ['_SHA512_Bytes']
add ['esp,', '0Ch']
mov ['ecx,', '1']
test ['ecx,', 'ecx']
jz ['loc_2102']
mov ['ecx,', '35h']
lea ['esi,', '[ebp+var_E0]']
lea ['edi,', '[ebp+var_24C]']
rep ['movsd']
lea ['edx,', '[ebp+var_144]']
push ['edx']
lea ['eax,', '[ebp+var_24C]']
push ['eax']
call ['_SHA512_Final']
add ['esp,', '8']
push ['0D4h']
lea ['ecx,', '[ebp+var_24C]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
push ['40h']
lea ['edx,', '[ebp+var_144]']
push ['edx']
call ['_bignum_from_bytes']
add ['esp,', '8']
mov ['[ebp+var_14C],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_14C]']
push ['edx']
call ['_bigmod']
add ['esp,', '8']
mov ['[ebp+var_150],', 'eax']
mov ['eax,', '[ebp+var_14C]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_150]']
push ['eax']
call ['_modinv']
add ['esp,', '8']
mov ['[ebp+var_15C],', 'eax']
cmp ['[ebp+var_15C],', '0']
jnz ['short', 'loc_20FB']
mov ['ecx,', '[ebp+var_150]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
push ['1']
push ['offset', '$SG7606']
lea ['edx,', '[ebp+var_E0]']
push ['edx']
call ['_SHA512_Bytes']
add ['esp,', '0Ch']
jmp ['loc_2020']
jmp ['short', 'loc_2102']
jmp ['loc_2020']
push ['0D4h']
lea ['eax,', '[ebp+var_E0]']
push ['eax']
call ['_smemclr']
add ['esp,', '8']
push ['40h']
lea ['ecx,', '[ebp+var_144]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_150]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_modpow']
add ['esp,', '0Ch']
mov ['[ebp+var_154],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_154]']
push ['eax']
call ['_bigmod']
add ['esp,', '8']
mov ['[ebp+var_164],', 'eax']
mov ['ecx,', '[ebp+var_154]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
push ['14h']
lea ['edx,', '[ebp+var_FC]']
push ['edx']
call ['_bignum_from_bytes']
add ['esp,', '8']
mov ['[ebp+var_158],', 'eax']
mov ['eax,', '[ebp+var_158]']
push ['eax']
mov ['ecx,', '[ebp+var_164]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
push ['eax']
call ['_bigmuladd']
add ['esp,', '0Ch']
mov ['[ebp+var_160],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_160]']
push ['eax']
mov ['ecx,', '[ebp+var_15C]']
push ['ecx']
call ['_modmul']
add ['esp,', '0Ch']
mov ['[ebp+var_168],', 'eax']
mov ['edx,', '[ebp+var_160]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_15C]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_150]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
mov ['edx,', '[ebp+var_158]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['[ebp+var_170],', '37h']
push ['1']
mov ['eax,', '[ebp+var_170]']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_16C],', 'eax']
mov ['ecx,', '[ebp+var_16C]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_16C]']
mov ['byte', 'ptr', '[edx+1],', '0']
mov ['eax,', '[ebp+var_16C]']
mov ['byte', 'ptr', '[eax+2],', '0']
mov ['ecx,', '[ebp+var_16C]']
mov ['byte', 'ptr', '[ecx+3],', '7']
push ['7']
push ['offset', '$SG7613']
mov ['edx,', '[ebp+var_16C]']
add ['edx,', '4']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_16C]']
mov ['byte', 'ptr', '[eax+0Bh],', '0']
mov ['ecx,', '[ebp+var_16C]']
mov ['byte', 'ptr', '[ecx+0Ch],', '0']
mov ['edx,', '[ebp+var_16C]']
mov ['byte', 'ptr', '[edx+0Dh],', '0']
mov ['eax,', '[ebp+var_16C]']
mov ['byte', 'ptr', '[eax+0Eh],', '28h']
mov ['[ebp+var_174],', '0']
jmp ['short', 'loc_22B1']
mov ['ecx,', '[ebp+var_174]']
add ['ecx,', '1']
mov ['[ebp+var_174],', 'ecx']
cmp ['[ebp+var_174],', '14h']
jge ['short', 'loc_2310']
mov ['edx,', '13h']
sub ['edx,', '[ebp+var_174]']
push ['edx']
mov ['eax,', '[ebp+var_164]']
push ['eax']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_16C]']
add ['ecx,', '[ebp+var_174]']
mov ['[ecx+0Fh],', 'al']
mov ['edx,', '13h']
sub ['edx,', '[ebp+var_174]']
push ['edx']
mov ['eax,', '[ebp+var_168]']
push ['eax']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_16C]']
add ['ecx,', '[ebp+var_174]']
mov ['[ecx+23h],', 'al']
jmp ['short', 'loc_22A2']
mov ['edx,', '[ebp+var_164]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_168]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_170]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_16C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '250h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_sha512_mpint   proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '8']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
sar ['ecx,', '18h']
mov ['byte', 'ptr', '[ebp+var_8],', 'cl']
mov ['edx,', '[ebp+var_10]']
sar ['edx,', '10h']
mov ['byte', 'ptr', '[ebp+var_8+1],', 'dl']
mov ['eax,', '[ebp+var_10]']
sar ['eax,', '8']
mov ['byte', 'ptr', '[ebp+var_8+2],', 'al']
mov ['cl,', 'byte', 'ptr', '[ebp+var_10]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'cl']
push ['4']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_SHA512_Bytes']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
test ['ecx,', 'ecx']
jle ['short', 'loc_244D']
mov ['[ebp+var_14],', '1']
jmp ['short', 'loc_2454']
mov ['[ebp+var_14],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_2481']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['byte', 'ptr', '[ebp+var_8],', 'al']
push ['1']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_SHA512_Bytes']
add ['esp,', '0Ch']
jmp ['short', 'loc_2434']
push ['4']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

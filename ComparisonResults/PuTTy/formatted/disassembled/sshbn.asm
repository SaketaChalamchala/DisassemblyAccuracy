_bn_restore_invariant proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jbe ['short', 'loc_528']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+edx*4],', '0']
jnz ['short', 'loc_528']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
sub ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax],', 'edx']
jmp ['short', 'loc_503']
pop ['ebp']
retn
endp
_copybn         proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_55C']
call ['_abort']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
lea ['ecx,', 'ds:4[eax*4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_freebn         proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
lea ['edx,', 'ds:4[ecx*4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_smemclr']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_bn_power_2     proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jge ['short', 'loc_5F8']
push ['0A4h']
push ['offset', '$SG7187']
push ['offset', '$SG7188']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
cdq
and ['edx,', '1Fh']
add ['eax,', 'edx']
sar ['eax,', '5']
add ['eax,', '1']
push ['eax']
call ['_newbn']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
push ['1']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_bignum_set_bit']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_newbn          proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_65A']
cmp ['[ebp+arg_0],', '3FFFFFFh']
jl ['short', 'loc_66E']
push ['7Eh']
push ['offset', '$SG7161']
push ['offset', '$SG7162']
call ['__wassert']
add ['esp,', '0Ch']
push ['4']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_68D']
call ['_abort']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', 'ds:4[edx*4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_modpow_simple  proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[edx+ecx*4],', '0']
jnz ['short', 'loc_6FC']
push ['2E0h']
push ['offset', '$SG7451']
push ['offset', '$SG7452']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_bigmod']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_1C],', 'ecx']
push ['4']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_73A']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
cmp ['ecx,', '[ebp+var_1C]']
jge ['short', 'loc_75B']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx]']
sub ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ebp+var_10]']
mov ['esi,', '[ebp+arg_8]']
mov ['eax,', '[esi+eax*4]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_731']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_76D']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+var_18],', '1Fh']
jge ['short', 'loc_788']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_18]']
shl ['eax,', 'cl']
and ['eax,', '80000000h']
jz ['short', 'loc_786']
jmp ['short', 'loc_788']
jmp ['short', 'loc_764']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_7F3']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_7A0']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '1']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
sub ['edx,', '1']
cmp ['[ebp+var_24],', 'edx']
jge ['short', 'loc_7DA']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+eax*4]']
mov ['ecx,', '[ebp+var_18]']
shl ['edx,', 'cl']
mov ['ecx,', '20h']
sub ['ecx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_24]']
mov ['esi,', '[ebp+var_10]']
mov ['eax,', '[esi+eax*4+4]']
shr ['eax,', 'cl']
or ['edx,', 'eax']
mov ['ecx,', '[ebp+var_24]']
mov ['eax,', '[ebp+var_10]']
mov ['[eax+ecx*4],', 'edx']
jmp ['short', 'loc_797']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+ecx*4-4]']
mov ['ecx,', '[ebp+var_18]']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+ecx*4-4],', 'eax']
push ['4']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+var_1C]']
sub ['edx,', '[ecx]']
mov ['[ebp+var_24],', 'edx']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_821']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
cmp ['ecx,', '[ebp+var_24]']
jge ['short', 'loc_838']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax+edx*4],', '0']
jmp ['short', 'loc_818']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_84A']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[edx]']
jge ['short', 'loc_870']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ecx]']
sub ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+var_C]']
mov ['esi,', '[ebp+var_2C]']
mov ['edx,', '[esi+edx*4]']
mov ['[ecx+eax*4],', 'edx']
jmp ['short', 'loc_841']
push ['4']
mov ['eax,', '[ebp+var_1C]']
shl ['eax,', '1']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
push ['4']
mov ['ecx,', '[ebp+var_1C]']
shl ['ecx,', '1']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_8A8']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_1C]']
shl ['eax,', '1']
cmp ['[ebp+var_24],', 'eax']
jge ['short', 'loc_8C1']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+ecx*4],', '0']
jmp ['short', 'loc_89F']
mov ['eax,', '[ebp+var_1C]']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+eax*4-4],', '1']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_mul_compute_scratch']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
push ['4']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_28],', '1Fh']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_24]']
cmp ['edx,', '[ecx]']
jge ['short', 'loc_940']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
sub ['edx,', '[ebp+var_24]']
mov ['eax,', '1']
mov ['ecx,', '[ebp+var_28]']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+arg_4]']
and ['eax,', '[ecx+edx*4]']
jnz ['short', 'loc_940']
mov ['edx,', '[ebp+var_28]']
sub ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
jns ['short', 'loc_93E']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_28],', '1Fh']
jmp ['short', 'loc_8FF']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_24]']
cmp ['edx,', '[ecx]']
jge ['loc_A2F']
cmp ['[ebp+var_28],', '0']
jl ['loc_A1A']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_4]']
lea ['edx,', '[ecx+eax*4]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_4]']
lea ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_internal_mul']
add ['esp,', '14h']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
shl ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_internal_mod']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
sub ['edx,', '[ebp+var_24]']
mov ['eax,', '1']
mov ['ecx,', '[ebp+var_28]']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+arg_4]']
and ['eax,', '[ecx+edx*4]']
jz ['short', 'loc_9FA']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_internal_mul']
add ['esp,', '14h']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
shl ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_internal_mod']
add ['esp,', '18h']
jmp ['short', 'loc_A0C']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_34]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_28]']
sub ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
jmp ['loc_94E']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
mov ['[ebp+var_28],', '1Fh']
jmp ['loc_940']
cmp ['[ebp+var_18],', '0']
jz ['loc_B0F']
mov ['eax,', '[ebp+var_1C]']
sub ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_A4D']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '1']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
lea ['eax,', '[edx+edx-1]']
cmp ['[ebp+var_24],', 'eax']
jge ['short', 'loc_A88']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+ecx*4]']
mov ['ecx,', '[ebp+var_18]']
shl ['eax,', 'cl']
mov ['ecx,', '20h']
sub ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_24]']
mov ['esi,', '[ebp+var_4]']
mov ['edx,', '[esi+edx*4+4]']
shr ['edx,', 'cl']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_A44']
mov ['eax,', '[ebp+var_1C]']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+eax*4-4]']
mov ['ecx,', '[ebp+var_18]']
shl ['edx,', 'cl']
mov ['eax,', '[ebp+var_1C]']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+eax*4-4],', 'edx']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
shl ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_internal_mod']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_1C]']
lea ['ecx,', '[eax+eax-1]']
mov ['[ebp+var_24],', 'ecx']
jmp ['short', 'loc_AD8']
mov ['edx,', '[ebp+var_24]']
sub ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+var_1C]']
jl ['short', 'loc_B0F']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+ecx*4]']
mov ['ecx,', '[ebp+var_18]']
shr ['eax,', 'cl']
mov ['ecx,', '20h']
sub ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_24]']
mov ['esi,', '[ebp+var_4]']
mov ['edx,', '[esi+edx*4-4]']
shl ['edx,', 'cl']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_ACF']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_newbn']
add ['esp,', '4']
mov ['[ebp+var_30],', 'eax']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_B32']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+var_1C]']
jge ['short', 'loc_B56']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx]']
sub ['eax,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_30]']
mov ['esi,', '[ebp+var_4]']
mov ['ecx,', '[esi+ecx*4]']
mov ['[edx+eax*4],', 'ecx']
jmp ['short', 'loc_B29']
mov ['edx,', '[ebp+var_30]']
cmp ['dword', 'ptr', '[edx],', '1']
jbe ['short', 'loc_B7B']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_30]']
cmp ['dword', 'ptr', '[edx+ecx*4],', '0']
jnz ['short', 'loc_B7B']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[eax]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_30]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_B56']
mov ['eax,', '[ebp+var_1C]']
shl ['eax,', '1']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_20]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_1C]']
shl ['eax,', '1']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_1C]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_1C]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_30]']
pop ['edi']
pop ['esi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_mul_compute_scratch proc near          
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '32h']
jle ['short', 'loc_C95']
mov ['eax,', '[ebp+arg_0]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_4]']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+arg_0],', 'edx']
jmp ['short', 'loc_C5E']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_internal_mul   proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '40h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_C],', '32h']
jle ['loc_FD0']
mov ['eax,', '[ebp+arg_C]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_internal_mul']
add ['esp,', '14h']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
lea ['edx,', '[ecx+eax*4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[ecx+eax*4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_internal_mul']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[ecx+eax*4+4],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax+edx*4],', '0']
mov ['ecx,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_D6A']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_8]']
jge ['short', 'loc_DA6']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', '[ebp+arg_0]']
mov ['ecx,', '[esi+ecx*4]']
mov ['[eax+edx*4],', 'ecx']
mov ['edx,', '[ebp+var_10]']
shl ['edx,', '1']
sub ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', '[ebp+arg_4]']
mov ['ecx,', '[esi+ecx*4]']
mov ['[eax+edx*4],', 'ecx']
jmp ['short', 'loc_D61']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*4]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '4']
push ['ecx']
call ['_internal_add']
add ['esp,', '10h']
mov ['edx,', '[ebp+arg_10]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_10]']
lea ['eax,', '[edx+ecx*4+4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_4]']
lea ['eax,', '[edx+ecx*4]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_10]']
lea ['eax,', '[edx+ecx*4+4]']
push ['eax']
call ['_internal_add']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_10]']
mov ['[edx+ecx*4],', 'eax']
mov ['eax,', '[ebp+var_10]']
shl ['eax,', '2']
mov ['ecx,', '[ebp+arg_10]']
lea ['edx,', '[ecx+eax*4]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
shl ['ecx,', '1']
mov ['edx,', '[ebp+arg_10]']
lea ['eax,', '[edx+ecx*4]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_10]']
lea ['eax,', '[edx+ecx*4]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
call ['_internal_mul']
add ['esp,', '14h']
mov ['edx,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_E70']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
shl ['ecx,', '1']
cmp ['[ebp+var_4],', 'ecx']
jge ['short', 'loc_E9A']
mov ['edx,', '[ebp+var_10]']
shl ['edx,', '1']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '1']
sub ['edx,', 'eax']
add ['edx,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_10]']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', '[ebp+arg_8]']
mov ['eax,', '[esi+eax*4]']
mov ['[ecx+edx*4],', 'eax']
jmp ['short', 'loc_E67']
mov ['ecx,', '[ebp+var_C]']
shl ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
add ['edx,', '8']
push ['edx']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
lea ['edx,', '[ecx+eax*4]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
add ['eax,', '8']
push ['eax']
call ['_internal_add']
add ['esp,', '10h']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_10]']
shl ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_10]']
shl ['eax,', '1']
mov ['ecx,', '[ebp+arg_10]']
lea ['edx,', '[ecx+eax*4]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
shl ['ecx,', '1']
mov ['edx,', '[ebp+arg_10]']
lea ['eax,', '[edx+ecx*4]']
push ['eax']
call ['_internal_sub']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_10]']
shl ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
shl ['edx,', '1']
mov ['eax,', '[ebp+arg_8]']
lea ['ecx,', '[eax+edx*4]']
mov ['edx,', '[ebp+var_C]']
shl ['edx,', '2']
sub ['ecx,', 'edx']
mov ['eax,', '[ebp+var_10]']
shl ['eax,', '1']
shl ['eax,', '2']
sub ['ecx,', 'eax']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
shl ['ecx,', '1']
mov ['edx,', '[ebp+arg_10]']
lea ['eax,', '[edx+ecx*4]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
shl ['ecx,', '1']
mov ['edx,', '[ebp+arg_8]']
lea ['eax,', '[edx+ecx*4]']
mov ['ecx,', '[ebp+var_C]']
shl ['ecx,', '2']
sub ['eax,', 'ecx']
mov ['edx,', '[ebp+var_10]']
shl ['edx,', '1']
shl ['edx,', '2']
sub ['eax,', 'edx']
push ['eax']
call ['_internal_add']
add ['esp,', '10h']
xor ['ecx,', 'ecx']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
shl ['edx,', '1']
sub ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_10]']
shl ['eax,', '1']
sub ['edx,', 'eax']
sub ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['ecx,', '[ebp+var_18]']
or ['ecx,', '[ebp+var_14]']
jz ['short', 'loc_FCB']
cmp ['[ebp+var_4],', '0']
jge ['short', 'loc_F8A']
push ['18Eh']
push ['offset', '$SG7263']
push ['offset', '$SG7264']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+eax*4]']
xor ['eax,', 'eax']
add ['edx,', '[ebp+var_18]']
adc ['eax,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'edx']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax+edx*4],', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_14]']
mov ['cl,', '20h']
call ['__aullshr']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'edx']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_F65']
jmp ['loc_10E5']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_FE2']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+arg_C]']
shl ['eax,', '1']
cmp ['[ebp+var_1C],', 'eax']
jge ['short', 'loc_FFB']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[edx+ecx*4],', '0']
jmp ['short', 'loc_FD9']
mov ['eax,', '[ebp+arg_C]']
shl ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_1020']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '4']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '4']
mov ['[ebp+var_2C],', 'eax']
cmp ['ecx,', 'edx']
jbe ['short', 'loc_103C']
mov ['[ebp+var_3C],', '1']
jmp ['short', 'loc_1043']
mov ['[ebp+var_3C],', '0']
cmp ['[ebp+var_3C],', '0']
jz ['loc_10E5']
mov ['[ebp+var_20],', '0']
mov ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_34]']
sub ['edx,', '4']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_30]']
sub ['edx,', '4']
mov ['[ebp+var_30],', 'edx']
cmp ['eax,', 'ecx']
jbe ['short', 'loc_108B']
mov ['[ebp+var_40],', '1']
jmp ['short', 'loc_1092']
mov ['[ebp+var_40],', '0']
cmp ['[ebp+var_40],', '0']
jz ['short', 'loc_10D8']
mov ['eax,', '[ebp+var_2C]']
mov ['eax,', '[eax]']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx]']
mul ['edx']
mov ['ecx,', '[ebp+var_20]']
xor ['esi,', 'esi']
add ['eax,', 'ecx']
adc ['edx,', 'esi']
mov ['ecx,', '[ebp+var_34]']
mov ['ecx,', '[ecx]']
xor ['esi,', 'esi']
add ['eax,', 'ecx']
adc ['edx,', 'esi']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', 'edx']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+var_34]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_28]']
mov ['edx,', '[ebp+var_24]']
mov ['cl,', '20h']
call ['__aullshr']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_1066']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ebp+var_20]']
mov ['[ecx],', 'edx']
jmp ['loc_1017']
pop ['edi']
pop ['esi']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_internal_add   proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_113E']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jl ['short', 'loc_118B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx*4]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', '[ebp+arg_4]']
mov ['eax,', '[esi+eax*4]']
xor ['esi,', 'esi']
add ['ecx,', 'eax']
adc ['edx,', 'esi']
add ['ecx,', '[ebp+var_C]']
adc ['edx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_8],', 'edx']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax+edx*4],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_8]']
mov ['cl,', '20h']
call ['__aullshr']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_1135']
mov ['eax,', '[ebp+var_C]']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_internal_sub   proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_C],', '1']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_11DE']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jl ['short', 'loc_122E']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx*4]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', '[ebp+arg_4]']
mov ['eax,', '[esi+eax*4]']
xor ['eax,', '0FFFFFFFFh']
xor ['esi,', 'esi']
add ['ecx,', 'eax']
adc ['edx,', 'esi']
add ['ecx,', '[ebp+var_C]']
adc ['edx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_8],', 'edx']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax+edx*4],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_8]']
mov ['cl,', '20h']
call ['__aullshr']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_11D5']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_internal_mod   proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '50h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '14h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
shr ['edx,', '1Fh']
cmp ['edx,', '1']
jz ['short', 'loc_1281']
push ['27Dh']
push ['offset', '$SG7388']
push ['offset', '$SG7389']
call ['__wassert']
add ['esp,', '0Ch']
cmp ['[ebp+arg_C],', '1']
jle ['short', 'loc_1292']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_1299']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_12AB']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+arg_C]']
cmp ['[ebp+var_10],', 'ecx']
jg ['loc_154C']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_12C9']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_12E4']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx*4-4]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+edx*4-4],', '0']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '1']
cmp ['[ebp+var_10],', 'ecx']
jnz ['short', 'loc_12F8']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_1305']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx*4+4]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ebp+var_4]']
jb ['short', 'loc_1319']
mov ['[ebp+var_20],', '0FFFFFFFFh']
jmp ['loc_1400']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_30],', 'edx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_30]']
div ['[ebp+var_4]']
mov ['[ebp+var_24],', 'edx']
mov ['[ebp+var_20],', 'eax']
xor ['eax,', 'eax']
jnz ['short', 'loc_1325']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_20]']
mul ['ecx']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
mov ['ecx,', '[ebp+var_2C]']
xor ['esi,', 'esi']
add ['eax,', 'ecx']
adc ['edx,', 'esi']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_34],', 'edx']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ebp+var_34]']
jb ['loc_1400']
ja ['short', 'loc_137B']
mov ['eax,', '[ebp+var_1C]']
cmp ['eax,', '[ebp+var_38]']
jbe ['loc_1400']
mov ['ecx,', '[ebp+var_20]']
sub ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_8]']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_1C]']
sub ['ecx,', 'edx']
mov ['edx,', '[ebp+var_18]']
sbb ['edx,', 'eax']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_4]']
xor ['esi,', 'esi']
mov ['[ebp+var_40],', 'ecx']
mov ['[ebp+var_3C],', 'edx']
mov ['[ebp+var_48],', 'eax']
mov ['[ebp+var_44],', 'esi']
mov ['ecx,', '[ebp+var_3C]']
cmp ['ecx,', '[ebp+var_44]']
jb ['short', 'loc_1400']
ja ['short', 'loc_13CA']
mov ['edx,', '[ebp+var_40]']
cmp ['edx,', '[ebp+var_48]']
jb ['short', 'loc_1400']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['cl,', '20h']
call ['__allshl']
mov ['ecx,', '[ebp+var_2C]']
xor ['esi,', 'esi']
add ['eax,', 'ecx']
adc ['edx,', 'esi']
mov ['[ebp+var_50],', 'eax']
mov ['[ebp+var_4C],', 'edx']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ebp+var_4C]']
jb ['short', 'loc_1400']
ja ['short', 'loc_13F7']
mov ['eax,', '[ebp+var_1C]']
cmp ['eax,', '[ebp+var_50]']
jbe ['short', 'loc_1400']
mov ['ecx,', '[ebp+var_20]']
sub ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_28],', '0']
mov ['edx,', '[ebp+arg_C]']
sub ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_141B']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jl ['short', 'loc_148F']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_8]']
mov ['ecx,', '[edx+ecx*4]']
mul ['ecx']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'edx']
mov ['edx,', '[ebp+var_28]']
xor ['eax,', 'eax']
add ['edx,', '[ebp+var_1C]']
adc ['eax,', '[ebp+var_18]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_18]']
mov ['cl,', '20h']
call ['__aullshr']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+edx*4]']
jbe ['short', 'loc_1470']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+edx*4]']
sub ['edx,', 'eax']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+eax*4],', 'edx']
jmp ['short', 'loc_1412']
mov ['edx,', '[ebp+var_28]']
cmp ['edx,', '[ebp+var_C]']
jz ['loc_1521']
mov ['[ebp+var_1C],', '0']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_14BD']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jl ['short', 'loc_1518']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+edx*4]']
xor ['edx,', 'edx']
add ['ecx,', '[ebp+var_1C]']
adc ['edx,', '[ebp+var_18]']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
xor ['eax,', 'eax']
add ['edx,', '[ebp+var_1C]']
adc ['eax,', '[ebp+var_18]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+edx*4],', 'ecx']
mov ['eax,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_18]']
mov ['cl,', '20h']
call ['__aullshr']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'edx']
jmp ['short', 'loc_14B4']
mov ['ecx,', '[ebp+var_20]']
sub ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_1547']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ebp+arg_C]']
sub ['edx,', '[ebp+var_10]']
shl ['edx,', '5']
add ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
call ['_internal_add_shifted']
add ['esp,', '0Ch']
jmp ['loc_12A2']
pop ['edi']
pop ['esi']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_internal_add_shifted proc near         
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cdq
and ['edx,', '1Fh']
add ['eax,', 'edx']
sar ['eax,', '5']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
and ['eax,', '8000001Fh']
jns ['short', 'loc_1598']
dec ['eax']
or ['eax,', '0FFFFFFE0h']
inc ['eax']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
xor ['edx,', 'edx']
mov ['ecx,', '[ebp+var_8]']
call ['__allshl']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'edx']
mov ['ecx,', '[ebp+var_10]']
or ['ecx,', '[ebp+var_C]']
jz ['short', 'loc_1618']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[edx]']
jbe ['short', 'loc_15D7']
push ['262h']
push ['offset', '$SG7365']
push ['offset', '$SG7366']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx*4]']
xor ['edx,', 'edx']
add ['ecx,', '[ebp+var_10]']
adc ['edx,', '[ebp+var_C]']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*4],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_C]']
mov ['cl,', '20h']
call ['__aullshr']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_15AE']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_modpow         proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '50h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '14h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[edx+ecx*4],', '0']
jnz ['short', 'loc_166C']
push ['35Bh']
push ['offset', '$SG7539']
push ['offset', '$SG7540']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+4]']
and ['edx,', '1']
jnz ['short', 'loc_1690']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_modpow_simple']
add ['esp,', '0Ch']
jmp ['loc_1BBE']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_bigmod']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
shl ['ecx,', '5']
push ['ecx']
call ['_bn_power_2']
add ['esp,', '4']
mov ['[ebp+var_34],', 'eax']
mov ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_modinv']
add ['esp,', '8']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jnz ['short', 'loc_16ED']
push ['372h']
push ['offset', '$SG7543']
push ['offset', '$SG7544']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
call ['_modmul']
add ['esp,', '0Ch']
mov ['[ebp+var_30],', 'eax']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_34]']
push ['edx']
call ['_bigmod']
add ['esp,', '8']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_34]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
push ['4']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_1758']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[ebp+var_1C]']
jge ['short', 'loc_177B']
mov ['ecx,', '[ebp+var_1C]']
sub ['ecx,', '1']
sub ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_28]']
mov ['esi,', '[ebp+arg_8]']
mov ['eax,', '[esi+eax*4+4]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_174F']
push ['4']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_179E']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[ebp+var_1C]']
jge ['short', 'loc_17DA']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ebp+var_28]']
cmp ['edx,', '[ecx]']
jge ['short', 'loc_17BF']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ecx+eax*4+4]']
mov ['[ebp+var_48],', 'edx']
jmp ['short', 'loc_17C6']
mov ['[ebp+var_48],', '0']
mov ['eax,', '[ebp+var_1C]']
sub ['eax,', '1']
sub ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_48]']
mov ['[ecx+eax*4],', 'edx']
jmp ['short', 'loc_1795']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
push ['4']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_1809']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[ebp+var_1C]']
jge ['short', 'loc_1820']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx+ecx*4],', '0']
jmp ['short', 'loc_1800']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_internal_sub']
add ['esp,', '10h']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_184A']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_28]']
cmp ['edx,', '[ebp+var_1C]']
jge ['short', 'loc_1886']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_28]']
cmp ['ecx,', '[eax]']
jge ['short', 'loc_186B']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+edx*4+4]']
mov ['[ebp+var_4C],', 'ecx']
jmp ['short', 'loc_1872']
mov ['[ebp+var_4C],', '0']
mov ['edx,', '[ebp+var_1C]']
sub ['edx,', '1']
sub ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_4C]']
mov ['[eax+edx*4],', 'ecx']
jmp ['short', 'loc_1841']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
push ['4']
mov ['eax,', '[ebp+var_1C]']
shl ['eax,', '1']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
push ['4']
mov ['ecx,', '[ebp+var_1C]']
shl ['ecx,', '1']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_18CA']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[ebp+var_1C]']
jge ['short', 'loc_1907']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ebp+var_28]']
cmp ['edx,', '[ecx]']
jge ['short', 'loc_18EB']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ecx+eax*4+4]']
mov ['[ebp+var_50],', 'edx']
jmp ['short', 'loc_18F2']
mov ['[ebp+var_50],', '0']
mov ['eax,', '[ebp+var_1C]']
lea ['ecx,', '[eax+eax-1]']
sub ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_50]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_18C1']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
mov ['esi,', '[ebp+var_1C]']
imul ['esi,', '3']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_mul_compute_scratch']
add ['esp,', '4']
add ['esi,', 'eax']
mov ['[ebp+var_20],', 'esi']
push ['4']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_28],', '1Fh']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_24]']
cmp ['edx,', '[ecx]']
jge ['short', 'loc_198A']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
sub ['edx,', '[ebp+var_24]']
mov ['eax,', '1']
mov ['ecx,', '[ebp+var_28]']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+arg_4]']
and ['eax,', '[ecx+edx*4]']
jnz ['short', 'loc_198A']
mov ['edx,', '[ebp+var_28]']
sub ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
jns ['short', 'loc_1988']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_28],', '1Fh']
jmp ['short', 'loc_1949']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_24]']
cmp ['edx,', '[ecx]']
jge ['loc_1A75']
cmp ['[ebp+var_28],', '0']
jl ['loc_1A60']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_4]']
lea ['edx,', '[ecx+eax*4]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_4]']
lea ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_internal_mul']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_monty_reduce']
add ['esp,', '14h']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
sub ['eax,', '[ebp+var_24]']
mov ['edx,', '1']
mov ['ecx,', '[ebp+var_28]']
shl ['edx,', 'cl']
mov ['ecx,', '[ebp+arg_4]']
and ['edx,', '[ecx+eax*4]']
jz ['short', 'loc_1A40']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_internal_mul']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_monty_reduce']
add ['esp,', '14h']
jmp ['short', 'loc_1A52']
mov ['edx,', '[ebp+var_4]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_44]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_28]']
sub ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
jmp ['loc_1998']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_28],', '1Fh']
jmp ['loc_198A']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_monty_reduce']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_newbn']
add ['esp,', '4']
mov ['[ebp+var_40],', 'eax']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_1AB4']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+var_1C]']
jge ['short', 'loc_1AD8']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_40]']
mov ['eax,', '[edx]']
sub ['eax,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_40]']
mov ['esi,', '[ebp+var_4]']
mov ['ecx,', '[esi+ecx*4]']
mov ['[edx+eax*4],', 'ecx']
jmp ['short', 'loc_1AAB']
mov ['edx,', '[ebp+var_40]']
cmp ['dword', 'ptr', '[edx],', '1']
jbe ['short', 'loc_1AFD']
mov ['eax,', '[ebp+var_40]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_40]']
cmp ['dword', 'ptr', '[edx+ecx*4],', '0']
jnz ['short', 'loc_1AFD']
mov ['eax,', '[ebp+var_40]']
mov ['ecx,', '[eax]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_40]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_1AD8']
mov ['eax,', '[ebp+var_20]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_1C]']
shl ['eax,', '1']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_1C]']
shl ['eax,', '1']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_1C]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_1C]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_1C]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_40]']
pop ['edi']
pop ['esi']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_monty_reduce   proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_10]']
imul ['eax,', '3']
mov ['ecx,', '[ebp+arg_C]']
lea ['edx,', '[ecx+eax*4]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_internal_mul_low']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_10]']
imul ['eax,', '3']
mov ['ecx,', '[ebp+arg_C]']
lea ['edx,', '[ecx+eax*4]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ebp+arg_C]']
lea ['eax,', '[edx+ecx*4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_internal_mul']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_10]']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[ebp+arg_C]']
lea ['ecx,', '[eax+edx*4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_internal_add']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_1C70']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_10]']
jge ['short', 'loc_1C9C']
mov ['edx,', '[ebp+arg_10]']
add ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', '[ebp+arg_0]']
mov ['ecx,', '[esi+ecx*4]']
mov ['[eax+edx*4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+edx*4],', '0']
jmp ['short', 'loc_1C67']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_1CD7']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_1CB4']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+arg_10]']
jge ['short', 'loc_1CD7']
mov ['eax,', '[ebp+arg_10]']
add ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', '[ebp+arg_4]']
mov ['eax,', '[ecx+eax*4]']
cmp ['eax,', '[esi+edx*4]']
jz ['short', 'loc_1CD5']
jmp ['short', 'loc_1CD7']
jmp ['short', 'loc_1CAB']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_1CFC']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_10]']
jge ['short', 'loc_1CFC']
mov ['edx,', '[ebp+arg_10]']
add ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', '[ebp+arg_4]']
mov ['edx,', '[eax+edx*4]']
cmp ['edx,', '[esi+ecx*4]']
jbe ['short', 'loc_1D20']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx*4]']
push ['ecx']
call ['_internal_sub']
add ['esp,', '10h']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_internal_mul_low proc near             
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_C],', '32h']
jle ['loc_1E92']
mov ['eax,', '[ebp+arg_C]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
shl ['ecx,', '1']
mov ['edx,', '[ebp+arg_10]']
lea ['eax,', '[edx+ecx*4]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
shl ['edx,', '1']
mov ['eax,', '[ebp+arg_10]']
lea ['ecx,', '[eax+edx*4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[eax+edx*4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx*4]']
push ['ecx']
call ['_internal_mul']
add ['esp,', '14h']
mov ['edx,', '[ebp+arg_C]']
shl ['edx,', '1']
mov ['eax,', '[ebp+arg_10]']
lea ['ecx,', '[eax+edx*4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_10]']
lea ['edx,', '[ecx+eax*4]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[ecx+eax*4]']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '2']
sub ['edx,', 'eax']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_internal_mul_low']
add ['esp,', '14h']
mov ['edx,', '[ebp+arg_C]']
shl ['edx,', '1']
mov ['eax,', '[ebp+arg_10]']
lea ['ecx,', '[eax+edx*4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx*4]']
mov ['edx,', '[ebp+var_8]']
shl ['edx,', '2']
sub ['ecx,', 'edx']
push ['ecx']
call ['_internal_mul_low']
add ['esp,', '14h']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_1E19']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_C]']
jge ['short', 'loc_1E41']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_C]']
lea ['ecx,', '[eax+edx*2]']
add ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_8]']
mov ['esi,', '[ebp+arg_10]']
mov ['ecx,', '[esi+ecx*4]']
mov ['[eax+edx*4],', 'ecx']
jmp ['short', 'loc_1E10']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_10]']
lea ['eax,', '[edx+ecx*4]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
call ['_internal_add']
add ['esp,', '10h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
shl ['ecx,', '1']
mov ['edx,', '[ebp+arg_10]']
lea ['eax,', '[edx+ecx*4]']
mov ['ecx,', '[ebp+var_C]']
lea ['edx,', '[eax+ecx*4]']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '2']
sub ['edx,', 'eax']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
call ['_internal_add']
add ['esp,', '10h']
jmp ['loc_1F9B']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_1EA4']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+arg_C]']
jge ['short', 'loc_1EBB']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[edx+ecx*4],', '0']
jmp ['short', 'loc_1E9B']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_8]']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_20],', 'edx']
jmp ['short', 'loc_1EDE']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '4']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '4']
mov ['[ebp+var_20],', 'eax']
cmp ['ecx,', 'edx']
jbe ['short', 'loc_1EFA']
mov ['[ebp+var_30],', '1']
jmp ['short', 'loc_1F01']
mov ['[ebp+var_30],', '0']
cmp ['[ebp+var_30],', '0']
jz ['loc_1F9B']
mov ['[ebp+var_14],', '0']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_24]']
sub ['edx,', '4']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_28]']
sub ['edx,', '4']
mov ['[ebp+var_28],', 'edx']
cmp ['eax,', 'ecx']
jbe ['short', 'loc_1F49']
mov ['[ebp+var_34],', '1']
jmp ['short', 'loc_1F50']
mov ['[ebp+var_34],', '0']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_1F96']
mov ['eax,', '[ebp+var_20]']
mov ['eax,', '[eax]']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ecx]']
mul ['edx']
mov ['ecx,', '[ebp+var_14]']
xor ['esi,', 'esi']
add ['eax,', 'ecx']
adc ['edx,', 'esi']
mov ['ecx,', '[ebp+var_28]']
mov ['ecx,', '[ecx]']
xor ['esi,', 'esi']
add ['eax,', 'ecx']
adc ['edx,', 'esi']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'edx']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[ebp+var_28]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_18]']
mov ['cl,', '20h']
call ['__aullshr']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_1F24']
jmp ['loc_1ED5']
pop ['edi']
pop ['esi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_modmul         proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[edx+ecx*4],', '0']
jnz ['short', 'loc_1FEC']
push ['3EFh']
push ['offset', '$SG7617']
push ['offset', '$SG7618']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_24],', 'edx']
push ['4']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_30],', '0']
jmp ['short', 'loc_2017']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '1']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_30]']
cmp ['edx,', '[ebp+var_24]']
jge ['short', 'loc_2038']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
sub ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+var_C]']
mov ['esi,', '[ebp+arg_8]']
mov ['ecx,', '[esi+ecx*4]']
mov ['[eax+edx*4],', 'ecx']
jmp ['short', 'loc_200E']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_204A']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_18],', '1Fh']
jge ['short', 'loc_2066']
mov ['eax,', '[ebp+var_C]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_18]']
shl ['edx,', 'cl']
and ['edx,', '80000000h']
jz ['short', 'loc_2064']
jmp ['short', 'loc_2066']
jmp ['short', 'loc_2041']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_20D1']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_207E']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_24]']
sub ['ecx,', '1']
cmp ['[ebp+var_2C],', 'ecx']
jge ['short', 'loc_20B8']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_C]']
mov ['edx,', '[eax+edx*4]']
mov ['ecx,', '[ebp+var_18]']
shl ['edx,', 'cl']
mov ['ecx,', '20h']
sub ['ecx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_2C]']
mov ['esi,', '[ebp+var_C]']
mov ['eax,', '[esi+eax*4+4]']
shr ['eax,', 'cl']
or ['edx,', 'eax']
mov ['ecx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_C]']
mov ['[eax+ecx*4],', 'edx']
jmp ['short', 'loc_2075']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+ecx*4-4]']
mov ['ecx,', '[ebp+var_18]']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_C]']
mov ['[edx+ecx*4-4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx]']
jbe ['short', 'loc_20E7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_38],', 'ecx']
jmp ['short', 'loc_20EF']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_20]']
shl ['edx,', '1']
cmp ['edx,', '[ebp+var_24]']
jg ['short', 'loc_210D']
mov ['eax,', '[ebp+var_24]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
push ['4']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_20]']
sub ['edx,', '[ecx]']
mov ['[ebp+var_2C],', 'edx']
mov ['[ebp+var_30],', '0']
jmp ['short', 'loc_213B']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_30]']
cmp ['ecx,', '[ebp+var_2C]']
jge ['short', 'loc_2152']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+edx*4],', '0']
jmp ['short', 'loc_2132']
mov ['[ebp+var_30],', '0']
jmp ['short', 'loc_2164']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '1']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_30]']
cmp ['eax,', '[edx]']
jge ['short', 'loc_218A']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
sub ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_8]']
mov ['esi,', '[ebp+arg_0]']
mov ['edx,', '[esi+edx*4]']
mov ['[ecx+eax*4],', 'edx']
jmp ['short', 'loc_215B']
push ['4']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_20]']
sub ['edx,', '[ecx]']
mov ['[ebp+var_2C],', 'edx']
mov ['[ebp+var_30],', '0']
jmp ['short', 'loc_21B8']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_30]']
cmp ['ecx,', '[ebp+var_2C]']
jge ['short', 'loc_21CF']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+edx*4],', '0']
jmp ['short', 'loc_21AF']
mov ['[ebp+var_30],', '0']
jmp ['short', 'loc_21E1']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '1']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_30]']
cmp ['eax,', '[edx]']
jge ['short', 'loc_2207']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
sub ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_10]']
mov ['esi,', '[ebp+arg_4]']
mov ['edx,', '[esi+edx*4]']
mov ['[ecx+eax*4],', 'edx']
jmp ['short', 'loc_21D8']
push ['4']
mov ['eax,', '[ebp+var_20]']
shl ['eax,', '1']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['_mul_compute_scratch']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
push ['4']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_internal_mul']
add ['esp,', '14h']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
shl ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_internal_mod']
add ['esp,', '18h']
cmp ['[ebp+var_18],', '0']
jz ['loc_235E']
mov ['eax,', '[ebp+var_20]']
shl ['eax,', '1']
sub ['eax,', '[ebp+var_24]']
sub ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_2297']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_20]']
lea ['eax,', '[edx+edx-1]']
cmp ['[ebp+var_2C],', 'eax']
jge ['short', 'loc_22D2']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+ecx*4]']
mov ['ecx,', '[ebp+var_18]']
shl ['eax,', 'cl']
mov ['ecx,', '20h']
sub ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_2C]']
mov ['esi,', '[ebp+var_4]']
mov ['edx,', '[esi+edx*4+4]']
shr ['edx,', 'cl']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_228E']
mov ['eax,', '[ebp+var_20]']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+eax*4-4]']
mov ['ecx,', '[ebp+var_18]']
shl ['edx,', 'cl']
mov ['eax,', '[ebp+var_20]']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+eax*4-4],', 'edx']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
shl ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_internal_mod']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_20]']
lea ['ecx,', '[eax+eax-1]']
mov ['[ebp+var_2C],', 'ecx']
jmp ['short', 'loc_2322']
mov ['edx,', '[ebp+var_2C]']
sub ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_20]']
shl ['eax,', '1']
sub ['eax,', '[ebp+var_24]']
cmp ['[ebp+var_2C],', 'eax']
jl ['short', 'loc_235E']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+ecx*4]']
mov ['ecx,', '[ebp+var_18]']
shr ['eax,', 'cl']
mov ['ecx,', '20h']
sub ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_2C]']
mov ['esi,', '[ebp+var_4]']
mov ['edx,', '[esi+edx*4-4]']
shl ['edx,', 'cl']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_2319']
mov ['eax,', '[ebp+var_20]']
shl ['eax,', '1']
cmp ['[ebp+var_24],', 'eax']
jge ['short', 'loc_2370']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_3C],', 'ecx']
jmp ['short', 'loc_2378']
mov ['edx,', '[ebp+var_20]']
shl ['edx,', '1']
mov ['[ebp+var_3C],', 'edx']
mov ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
call ['_newbn']
add ['esp,', '4']
mov ['[ebp+var_34],', 'eax']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_239F']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_28]']
jge ['short', 'loc_23C9']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_2C]']
lea ['eax,', '[edx+ecx*2]']
sub ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ecx]']
sub ['edx,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_34]']
mov ['esi,', '[ebp+var_4]']
mov ['eax,', '[esi+eax*4]']
mov ['[ecx+edx*4],', 'eax']
jmp ['short', 'loc_2396']
mov ['ecx,', '[ebp+var_34]']
cmp ['dword', 'ptr', '[ecx],', '1']
jbe ['short', 'loc_23EE']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_34]']
cmp ['dword', 'ptr', '[ecx+eax*4],', '0']
jnz ['short', 'loc_23EE']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[edx]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_34]']
mov ['[ecx],', 'eax']
jmp ['short', 'loc_23C9']
mov ['edx,', '[ebp+var_1C]']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_smemclr']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_20]']
shl ['edx,', '1']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_smemclr']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_24]']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_smemclr']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_20]']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_smemclr']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_20]']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_smemclr']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_34]']
pop ['edi']
pop ['esi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_decbn          proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[eax]']
jge ['short', 'loc_24E0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+edx*4],', '0']
jnz ['short', 'loc_24E0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+ecx*4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_24B2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx*4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*4],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_bignum_from_bytes proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_252A']
cmp ['[ebp+arg_4],', '0FFFFFFFh']
jl ['short', 'loc_2541']
push ['4A3h']
push ['offset', '$SG7743']
push ['offset', '$SG7744']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '3']
cdq
and ['edx,', '3']
add ['eax,', 'edx']
sar ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_newbn']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_2574']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+var_8]']
jg ['short', 'loc_258B']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+ecx*4],', '0']
jmp ['short', 'loc_256B']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_C]']
sub ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_25F8']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_10+3],', 'cl']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+var_C]']
cdq
and ['edx,', '3']
add ['eax,', 'edx']
sar ['eax,', '2']
movzx ['esi,', 'byte', 'ptr', '[ebp+var_10+3]']
mov ['ecx,', '[ebp+var_C]']
shl ['ecx,', '3']
and ['ecx,', '8000001Fh']
jns ['short', 'loc_25DA']
dec ['ecx']
or ['ecx,', '0FFFFFFE0h']
inc ['ecx']
shl ['esi,', 'cl']
mov ['edx,', '[ebp+var_4]']
or ['esi,', '[edx+eax*4+4]']
mov ['eax,', '[ebp+var_C]']
cdq
and ['edx,', '3']
add ['eax,', 'edx']
sar ['eax,', '2']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+eax*4+4],', 'esi']
jmp ['short', 'loc_2591']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx],', '1']
jbe ['short', 'loc_261D']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+ecx*4],', '0']
jnz ['short', 'loc_261D']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_25F8']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_ssh1_read_bignum proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '2']
jge ['short', 'loc_265B']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_26E4']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_2674']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '2']
jge ['short', 'loc_2696']
mov ['edx,', '[ebp+var_C]']
shl ['edx,', '8']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
add ['edx,', 'ecx']
mov ['[ebp+var_C],', 'edx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_266B']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '7']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '2']
cmp ['[ebp+arg_4],', 'eax']
jge ['short', 'loc_26B8']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_26E4']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_26C6']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '2']
jmp ['short', 'loc_26E4']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_bignum_from_bytes']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_10]']
sub ['eax,', '[ebp+arg_0]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_bignum_bitcount proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
shl ['ecx,', '5']
sub ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jl ['short', 'loc_2753']
mov ['eax,', '[ebp+var_4]']
cdq
and ['edx,', '1Fh']
add ['eax,', 'edx']
sar ['eax,', '5']
mov ['ecx,', '[ebp+var_4]']
and ['ecx,', '8000001Fh']
jns ['short', 'loc_273B']
dec ['ecx']
or ['ecx,', '0FFFFFFE0h']
inc ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+eax*4+4]']
shr ['eax,', 'cl']
test ['eax,', 'eax']
jnz ['short', 'loc_2753']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_2719']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_ssh1_bignum_length proc near           
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '7']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
add ['eax,', '2']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_ssh2_bignum_length proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '8']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
add ['eax,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_bignum_byte    proc near               
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_27D6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
shl ['ecx,', '2']
cmp ['[ebp+arg_4],', 'ecx']
jl ['short', 'loc_27DC']
xor ['eax,', 'eax']
jmp ['short', 'loc_2809']
jmp ['short', 'loc_2809']
mov ['eax,', '[ebp+arg_4]']
cdq
and ['edx,', '3']
add ['eax,', 'edx']
sar ['eax,', '2']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '80000003h']
jns ['short', 'loc_27F8']
dec ['ecx']
or ['ecx,', '0FFFFFFFCh']
inc ['ecx']
shl ['ecx,', '3']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+eax*4+4]']
shr ['eax,', 'cl']
and ['eax,', '0FFh']
pop ['ebp']
retn
endp
_bignum_bit     proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_2826']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
shl ['ecx,', '5']
cmp ['[ebp+arg_4],', 'ecx']
jl ['short', 'loc_282C']
xor ['eax,', 'eax']
jmp ['short', 'loc_2854']
jmp ['short', 'loc_2854']
mov ['eax,', '[ebp+arg_4]']
cdq
and ['edx,', '1Fh']
add ['eax,', 'edx']
sar ['eax,', '5']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '8000001Fh']
jns ['short', 'loc_2848']
dec ['ecx']
or ['ecx,', '0FFFFFFE0h']
inc ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+eax*4+4]']
shr ['eax,', 'cl']
and ['eax,', '1']
pop ['ebp']
retn
endp
_bignum_set_bit proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_2887']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
shl ['ecx,', '5']
cmp ['[ebp+arg_4],', 'ecx']
jl ['short', 'loc_288E']
call ['_abort']
jmp ['short', 'loc_28EE']
mov ['eax,', '[ebp+arg_4]']
cdq
and ['edx,', '1Fh']
add ['eax,', 'edx']
sar ['eax,', '5']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '8000001Fh']
jns ['short', 'loc_28B0']
dec ['ecx']
or ['ecx,', '0FFFFFFE0h']
inc ['ecx']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_28D7']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
or ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+eax*4],', 'edx']
jmp ['short', 'loc_28EE']
mov ['edx,', '[ebp+var_8]']
not ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
and ['edx,', '[ecx+eax*4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+eax*4],', 'edx']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_ssh1_write_bignum proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ssh1_bignum_length']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_bignum_bitcount']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
sar ['eax,', '8']
and ['eax,', '0FFh']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_10]']
and ['eax,', '0FFh']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '2']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_C]']
sub ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_29AB']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_2976']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_bignum_cmp     proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_4],', '1']
jnz ['short', 'loc_2A0C']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+ecx*4],', '0']
jnz ['short', 'loc_2A0C']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_8],', '1']
jnz ['short', 'loc_2A25']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+eax*4],', '0']
jnz ['short', 'loc_2A25']
mov ['[ebp+var_8],', '0']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2A4E']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+edx*4],', '0']
jnz ['short', 'loc_2A4E']
push ['534h']
push ['offset', '$SG7841']
push ['offset', '$SG7842']
call ['__wassert']
add ['esp,', '0Ch']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2A77']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+edx*4],', '0']
jnz ['short', 'loc_2A77']
push ['535h']
push ['offset', '$SG7844']
push ['offset', '$SG7845']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+var_8]']
jle ['short', 'loc_2A87']
mov ['eax,', '[ebp+var_4]']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_2A8D']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2B06']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+var_4]']
jle ['short', 'loc_2AAA']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_2AB6']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ebp+var_8]']
jle ['short', 'loc_2ACD']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_2AD9']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+var_14]']
jnb ['short', 'loc_2AEC']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_2B08']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_14]']
jbe ['short', 'loc_2AFB']
mov ['eax,', '1']
jmp ['short', 'loc_2B08']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_2A93']
xor ['eax,', 'eax']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_bignum_rshift  proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_2B63']
push ['54Dh']
push ['offset', '$SG7867']
push ['offset', '$SG7868']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_bignum_bitcount']
add ['esp,', '4']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1Fh']
cdq
and ['edx,', '1Fh']
add ['eax,', 'edx']
sar ['eax,', '5']
push ['eax']
call ['_newbn']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['loc_2C43']
mov ['eax,', '[ebp+arg_4]']
cdq
and ['edx,', '1Fh']
add ['eax,', 'edx']
sar ['eax,', '5']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+arg_4]']
and ['edx,', '8000001Fh']
jns ['short', 'loc_2BB9']
dec ['edx']
or ['edx,', '0FFFFFFE0h']
inc ['edx']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '20h']
sub ['eax,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx*4+4]']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_2BE6']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[edx]']
jg ['short', 'loc_2C43']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_8]']
lea ['ecx,', '[eax+edx+1]']
mov ['edx,', '[ebp+arg_0]']
cmp ['ecx,', '[edx]']
jg ['short', 'loc_2C19']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4+4]']
mov ['[ebp+var_24],', 'edx']
jmp ['short', 'loc_2C20']
mov ['[ebp+var_24],', '0']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_20],', 'eax']
mov ['edx,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_10]']
shr ['edx,', 'cl']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_14]']
shl ['eax,', 'cl']
or ['edx,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+ecx*4],', 'edx']
jmp ['short', 'loc_2BDD']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_bigmuladd      proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '44h']
push ['edi']
lea ['edi,', '[ebp+var_44]']
mov ['ecx,', '11h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_8]']
jle ['short', 'loc_2C96']
mov ['edx,', '[ebp+var_4]']
mov ['[ebp+var_30],', 'edx']
jmp ['short', 'loc_2C9C']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_30]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_mul_compute_scratch']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_C]']
lea ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_1C],', 'edx']
push ['4']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_2CDA']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_C]']
jge ['short', 'loc_2D4F']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['eax,', '[ecx]']
jg ['short', 'loc_2D00']
mov ['edx,', '[ebp+var_C]']
sub ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_34],', 'ecx']
jmp ['short', 'loc_2D07']
mov ['[ebp+var_34],', '0']
mov ['edx,', '[ebp+var_C]']
imul ['edx,', '0']
add ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_34]']
mov ['[eax+edx*4],', 'ecx']
mov ['edx,', '[ebp+var_C]']
sub ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_4]']
cmp ['edx,', '[eax]']
jg ['short', 'loc_2D37']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_2D3E']
mov ['[ebp+var_38],', '0']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_38]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_2CD1']
mov ['ecx,', '[ebp+var_C]']
shl ['ecx,', '2']
mov ['edx,', '[ebp+var_20]']
lea ['eax,', '[edx+ecx*4]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
shl ['edx,', '1']
mov ['eax,', '[ebp+var_20]']
lea ['ecx,', '[eax+edx*4]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_20]']
lea ['ecx,', '[eax+edx*4]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
imul ['edx,', '0']
mov ['eax,', '[ebp+var_20]']
lea ['ecx,', '[eax+edx*4]']
push ['ecx']
call ['_internal_mul']
add ['esp,', '14h']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
lea ['ecx,', '[eax+edx+1]']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_2DB3']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[edx]']
jg ['short', 'loc_2DB3']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_newbn']
add ['esp,', '4']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_14],', '1']
jmp ['short', 'loc_2DDB']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[edx]']
jg ['short', 'loc_2E2A']
mov ['ecx,', '[ebp+var_C]']
shl ['ecx,', '1']
cmp ['[ebp+var_14],', 'ecx']
jg ['short', 'loc_2E03']
mov ['edx,', '[ebp+var_C]']
shl ['edx,', '2']
sub ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_3C],', 'ecx']
jmp ['short', 'loc_2E0A']
mov ['[ebp+var_3C],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_3C]']
mov ['[eax+edx*4],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_24]']
cmp ['dword', 'ptr', '[eax+edx*4],', '0']
jz ['short', 'loc_2E28']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'ecx']
jmp ['short', 'loc_2DD2']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx],', 'eax']
cmp ['[ebp+arg_8],', '0']
jz ['loc_2F06']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_28],', '0']
mov ['[ebp+var_14],', '1']
jmp ['short', 'loc_2E5C']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_10]']
jg ['loc_2F06']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax]']
jg ['short', 'loc_2E80']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_40],', 'ecx']
jmp ['short', 'loc_2E87']
mov ['[ebp+var_40],', '0']
mov ['edx,', '[ebp+var_40]']
xor ['eax,', 'eax']
add ['edx,', '[ebp+var_2C]']
adc ['eax,', '[ebp+var_28]']
mov ['[ebp+var_2C],', 'edx']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ecx]']
jg ['short', 'loc_2EB0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_44],', 'edx']
jmp ['short', 'loc_2EB7']
mov ['[ebp+var_44],', '0']
mov ['eax,', '[ebp+var_44]']
xor ['ecx,', 'ecx']
add ['eax,', '[ebp+var_2C]']
adc ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['edx,', '[ebp+var_28]']
mov ['cl,', '20h']
call ['__aullshr']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_28],', 'edx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_24]']
cmp ['dword', 'ptr', '[eax+edx*4],', '0']
jz ['short', 'loc_2F01']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_18]']
jle ['short', 'loc_2F01']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'edx']
jmp ['loc_2E53']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_smemclr']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_24]']
pop ['edi']
add ['esp,', '44h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_bigmul         proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_bigmuladd']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_bigadd         proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2Ch']
push ['edi']
lea ['edi,', '[ebp+var_2C]']
mov ['ecx,', '0Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_8]']
jle ['short', 'loc_2F96']
mov ['edx,', '[ebp+var_4]']
mov ['[ebp+var_24],', 'edx']
jmp ['short', 'loc_2F9C']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_newbn']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_1C],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_10],', '1']
jmp ['short', 'loc_2FDB']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+var_C]']
jg ['loc_3085']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[edx]']
jg ['short', 'loc_2FFF']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_28],', 'eax']
jmp ['short', 'loc_3006']
mov ['[ebp+var_28],', '0']
mov ['ecx,', '[ebp+var_28]']
xor ['edx,', 'edx']
add ['ecx,', '[ebp+var_20]']
adc ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[eax]']
jg ['short', 'loc_302F']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_2C],', 'ecx']
jmp ['short', 'loc_3036']
mov ['[ebp+var_2C],', '0']
mov ['edx,', '[ebp+var_2C]']
xor ['eax,', 'eax']
add ['edx,', '[ebp+var_20]']
adc ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_20],', 'edx']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_18]']
mov ['[eax+edx*4],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_1C]']
mov ['cl,', '20h']
call ['__aullshr']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'edx']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[edx+ecx*4],', '0']
jz ['short', 'loc_3080']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+var_14]']
jle ['short', 'loc_3080']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'ecx']
jmp ['loc_2FD2']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_18]']
pop ['edi']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_bigsub         proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2Ch']
push ['edi']
lea ['edi,', '[ebp+var_2C]']
mov ['ecx,', '0Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_8]']
jle ['short', 'loc_30D6']
mov ['edx,', '[ebp+var_4]']
mov ['[ebp+var_24],', 'edx']
jmp ['short', 'loc_30DC']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_newbn']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_20],', '1']
mov ['[ebp+var_1C],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_10],', '1']
jmp ['short', 'loc_3118']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+var_C]']
jg ['loc_31C5']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[edx]']
jg ['short', 'loc_313C']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_28],', 'eax']
jmp ['short', 'loc_3143']
mov ['[ebp+var_28],', '0']
mov ['ecx,', '[ebp+var_28]']
xor ['edx,', 'edx']
add ['ecx,', '[ebp+var_20]']
adc ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[eax]']
jg ['short', 'loc_316F']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+edx*4]']
xor ['ecx,', '0FFFFFFFFh']
mov ['[ebp+var_2C],', 'ecx']
jmp ['short', 'loc_3176']
mov ['[ebp+var_2C],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_2C]']
xor ['eax,', 'eax']
add ['edx,', '[ebp+var_20]']
adc ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_20],', 'edx']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_18]']
mov ['[eax+edx*4],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_1C]']
mov ['cl,', '20h']
call ['__aullshr']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'edx']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[edx+ecx*4],', '0']
jz ['short', 'loc_31C0']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+var_14]']
jle ['short', 'loc_31C0']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'ecx']
jmp ['loc_310F']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_20]']
or ['ecx,', '[ebp+var_1C]']
jnz ['short', 'loc_31E5']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_31E8']
mov ['eax,', '[ebp+var_18]']
pop ['edi']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_bignum_bitmask proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_copybn']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+eax*4],', '0']
jnz ['short', 'loc_324F']
cmp ['[ebp+var_8],', '0']
jle ['short', 'loc_324F']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_3232']
cmp ['[ebp+var_8],', '0']
jg ['short', 'loc_325A']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_32A8']
mov ['[ebp+var_C],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx+eax*4]']
jnb ['short', 'loc_327B']
mov ['eax,', '[ebp+var_C]']
lea ['ecx,', '[eax+eax+1]']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_3261']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+edx*4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jle ['short', 'loc_32A5']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+eax*4],', '0FFFFFFFFh']
jmp ['short', 'loc_3287']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_bignum_from_long proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
xor ['ecx,', 'ecx']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'ecx']
push ['3']
call ['_newbn']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_8]']
mov ['cl,', '20h']
call ['__aullshr']
and ['edx,', '0']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
xor ['edx,', 'edx']
cmp ['dword', 'ptr', '[ecx+8],', '0']
setnz ['dl']
add ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_bignum_add_long proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
push ['ecx']
call ['_newbn']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_10],', '0']
mov ['edx,', '[ebp+arg_4]']
xor ['eax,', 'eax']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_33B9']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[edx]']
jg ['loc_3455']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_18]']
and ['edx,', '0']
add ['ecx,', '[ebp+var_14]']
adc ['edx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax]']
jg ['short', 'loc_33F4']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_33FB']
mov ['[ebp+var_20],', '0']
mov ['edx,', '[ebp+var_20]']
xor ['eax,', 'eax']
add ['edx,', '[ebp+var_14]']
adc ['eax,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'edx']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_18]']
mov ['cl,', '20h']
call ['__aullshr']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'edx']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+edx*4],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_10]']
mov ['cl,', '20h']
call ['__aullshr']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'edx']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+ecx*4],', '0']
jz ['short', 'loc_3450']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'eax']
jmp ['loc_33B0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_bignum_mod_short proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
push ['edi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_10],', '0']
mov ['[ebp+var_C],', '0']
movzx ['eax,', '[ebp+arg_4]']
cdq
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_34B8']
mov ['edx,', '[ebp+var_14]']
sub ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '0']
jle ['short', 'loc_3525']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
push ['0']
push ['80000000h']
call ['__aullrem']
push ['edx']
push ['eax']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['__allmul']
push ['0']
push ['2']
push ['edx']
push ['eax']
call ['__allmul']
mov ['esi,', 'eax']
mov ['edi,', 'edx']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx*4]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
push ['ecx']
push ['eax']
call ['__aullrem']
add ['esi,', 'eax']
adc ['edi,', 'edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
push ['edi']
push ['esi']
call ['__aullrem']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_34AF']
mov ['ax,', 'word', 'ptr', '[ebp+var_10]']
pop ['edi']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_bigdiv         proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_newbn']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+var_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_bigdivmod']
add ['esp,', '10h']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx],', '1']
jbe ['short', 'loc_3597']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+ecx*4],', '0']
jnz ['short', 'loc_3597']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_3572']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_bigdivmod      proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+ecx*4],', '0']
jnz ['short', 'loc_35FC']
push ['458h']
push ['offset', '$SG7688']
push ['offset', '$SG7689']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
push ['4']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_3627']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '1']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ebp+var_14]']
jge ['short', 'loc_3648']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
sub ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[ebp+var_8]']
mov ['esi,', '[ebp+arg_4]']
mov ['ecx,', '[esi+ecx*4]']
mov ['[eax+edx*4],', 'ecx']
jmp ['short', 'loc_361E']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_365A']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_C],', '1Fh']
jge ['short', 'loc_3676']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_C]']
shl ['edx,', 'cl']
and ['edx,', '80000000h']
jz ['short', 'loc_3674']
jmp ['short', 'loc_3676']
jmp ['short', 'loc_3651']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_36E1']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_368E']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '1']
cmp ['[ebp+var_18],', 'ecx']
jge ['short', 'loc_36C8']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax+edx*4]']
mov ['ecx,', '[ebp+var_C]']
shl ['edx,', 'cl']
mov ['ecx,', '20h']
sub ['ecx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_18]']
mov ['esi,', '[ebp+var_8]']
mov ['eax,', '[esi+eax*4+4]']
shr ['eax,', 'cl']
or ['edx,', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+ecx*4],', 'edx']
jmp ['short', 'loc_3685']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+ecx*4-4]']
mov ['ecx,', '[ebp+var_C]']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+ecx*4-4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_14]']
jg ['short', 'loc_36FA']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
push ['4']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_371D']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
cmp ['eax,', '[ebp+var_10]']
jge ['short', 'loc_3734']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+ecx*4],', '0']
jmp ['short', 'loc_3714']
mov ['[ebp+var_1C],', '1']
jmp ['short', 'loc_3746']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ecx]']
jg ['short', 'loc_3767']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_1C]']
mov ['esi,', '[ebp+arg_0]']
mov ['edx,', '[esi+edx*4]']
mov ['[ecx+eax*4],', 'edx']
jmp ['short', 'loc_373D']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_internal_mod']
add ['esp,', '18h']
cmp ['[ebp+var_C],', '0']
jz ['loc_3867']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_37A8']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '1']
cmp ['[ebp+var_18],', 'edx']
jge ['short', 'loc_37E2']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+eax*4]']
mov ['ecx,', '[ebp+var_C]']
shl ['edx,', 'cl']
mov ['ecx,', '20h']
sub ['ecx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_18]']
mov ['esi,', '[ebp+var_4]']
mov ['eax,', '[esi+eax*4+4]']
shr ['eax,', 'cl']
or ['edx,', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+ecx*4],', 'edx']
jmp ['short', 'loc_379F']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+ecx*4-4]']
mov ['ecx,', '[ebp+var_C]']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+ecx*4-4],', 'eax']
push ['0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_internal_mod']
add ['esp,', '18h']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
jmp ['short', 'loc_382D']
mov ['eax,', '[ebp+var_18]']
sub ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '[ebp+var_14]']
cmp ['[ebp+var_18],', 'ecx']
jl ['short', 'loc_3867']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax+edx*4]']
mov ['ecx,', '[ebp+var_C]']
shr ['edx,', 'cl']
mov ['ecx,', '20h']
sub ['ecx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_18]']
mov ['esi,', '[ebp+var_4]']
mov ['eax,', '[esi+eax*4-4]']
shl ['eax,', 'cl']
or ['edx,', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+ecx*4],', 'edx']
jmp ['short', 'loc_3824']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_38B7']
mov ['[ebp+var_18],', '1']
jmp ['short', 'loc_387F']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[edx]']
jg ['short', 'loc_38B7']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_20],', 'ecx']
js ['short', 'loc_38A2']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_24],', 'ecx']
jmp ['short', 'loc_38A9']
mov ['[ebp+var_24],', '0']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_24]']
mov ['[eax+edx*4],', 'ecx']
jmp ['short', 'loc_3876']
mov ['edx,', '[ebp+var_14]']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_smemclr']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_10]']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_smemclr']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
pop ['esi']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_bigmod         proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_newbn']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
push ['0']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_bigdivmod']
add ['esp,', '10h']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx],', '1']
jbe ['short', 'loc_3967']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+ecx*4],', '0']
jnz ['short', 'loc_3967']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_3942']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_biggcd         proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_copybn']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_copybn']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '_Zero']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_bignum_cmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_3A36']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_newbn']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
push ['0']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_bigdivmod']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[eax],', '1']
jbe ['short', 'loc_3A1C']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[eax+edx*4],', '0']
jnz ['short', 'loc_3A1C']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx]']
sub ['edx,', '1']
mov ['eax,', '[ebp+var_C]']
mov ['[eax],', 'edx']
jmp ['short', 'loc_39F7']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_39B9']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_modinv         proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '40h']
push ['edi']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_copybn']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_copybn']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '_Zero']
push ['edx']
call ['_copybn']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '_One']
push ['eax']
call ['_copybn']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_14],', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+edx*4],', '0']
jnz ['short', 'loc_3AE3']
push ['67Fh']
push ['offset', '$SG8058']
push ['offset', '$SG8059']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+eax*4],', '0']
jnz ['short', 'loc_3B08']
push ['680h']
push ['offset', '$SG8061']
push ['offset', '$SG8062']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '_One']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_bignum_cmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['loc_3C54']
mov ['edx,', '_Zero']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_bignum_cmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_3B70']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_3D8E']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
call ['_newbn']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_newbn']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_bigdivmod']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[ecx],', '1']
jbe ['short', 'loc_3BCF']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[ecx+eax*4],', '0']
jnz ['short', 'loc_3BCF']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx],', 'eax']
jmp ['short', 'loc_3BAA']
mov ['edx,', '[ebp+var_1C]']
cmp ['dword', 'ptr', '[edx],', '1']
jbe ['short', 'loc_3BF4']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_1C]']
cmp ['dword', 'ptr', '[edx+ecx*4],', '0']
jnz ['short', 'loc_3BF4']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[eax]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_1C]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_3BCF']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_bigmuladd']
add ['esp,', '0Ch']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+var_14]']
neg ['edx']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
jmp ['loc_3B08']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
cmp ['[ebp+var_14],', '0']
jge ['loc_3D8B']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
push ['eax']
call ['_newbn']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_28],', '1']
mov ['[ebp+var_2C],', '1']
jmp ['short', 'loc_3CB3']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[edx]']
jg ['loc_3D71']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_2C]']
cmp ['edx,', '[ecx]']
jg ['short', 'loc_3CD9']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_38],', 'edx']
jmp ['short', 'loc_3CE0']
mov ['[ebp+var_38],', '0']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_2C]']
cmp ['edx,', '[ecx]']
jg ['short', 'loc_3CFE']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_3C],', 'edx']
jmp ['short', 'loc_3D05']
mov ['[ebp+var_3C],', '0']
mov ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_30]']
sub ['ecx,', '[ebp+var_34]']
sub ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_20]']
mov ['[eax+edx*4],', 'ecx']
mov ['ecx,', '[ebp+var_34]']
not ['ecx']
mov ['[ebp+var_34],', 'ecx']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_3D41']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+edx*4]']
cmp ['ecx,', '[ebp+var_34]']
sbb ['edx,', 'edx']
add ['edx,', '1']
mov ['[ebp+var_40],', 'edx']
jmp ['short', 'loc_3D54']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+eax*4]']
cmp ['[ebp+var_34],', 'edx']
sbb ['eax,', 'eax']
neg ['eax']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_40]']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[eax+edx*4],', '0']
jz ['short', 'loc_3D6C']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_28],', 'ecx']
jmp ['loc_3CAA']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_28]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
pop ['edi']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_bignum_decimal proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_3DE2']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_3DF6']
mov ['eax,', '[ebp+var_C]']
imul ['eax,', '1Ch']
add ['eax,', '5Ch']
cdq
mov ['ecx,', '5Dh']
idiv ['ecx']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
push ['1']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
push ['4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_3E35']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx]']
jge ['short', 'loc_3E58']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
sub ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_20]']
mov ['esi,', '[ebp+arg_0]']
mov ['ecx,', '[esi+ecx*4]']
mov ['[eax+edx*4],', 'ecx']
jmp ['short', 'loc_3E2C']
mov ['edx,', '[ebp+var_4]']
sub ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['[ebp+var_10],', '1']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_3E91']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[edx]']
jge ['short', 'loc_3F03']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_14]']
mov ['cl,', '20h']
call ['__allshl']
mov ['ecx,', '[ebp+var_C]']
mov ['esi,', '[ebp+var_20]']
mov ['ecx,', '[esi+ecx*4]']
xor ['esi,', 'esi']
add ['eax,', 'ecx']
adc ['edx,', 'esi']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'edx']
push ['0']
push ['0Ah']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['__aulldiv']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_20]']
mov ['[edx+ecx*4],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[ecx+eax*4],', '0']
jz ['short', 'loc_3EEA']
mov ['[ebp+var_10],', '0']
push ['0']
push ['0Ah']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['__aullrem']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_3E88']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '30h']
mov ['eax,', '[ebp+var_14]']
adc ['eax,', '0']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'dl']
cmp ['[ebp+var_10],', '0']
jz ['loc_3E6A']
cmp ['[ebp+var_8],', '0']
jle ['short', 'loc_3F4A']
mov ['edx,', '[ebp+var_4]']
sub ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_memmove']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
mov ['edx,', '[ebp+var_20]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_1C]']
pop ['esi']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

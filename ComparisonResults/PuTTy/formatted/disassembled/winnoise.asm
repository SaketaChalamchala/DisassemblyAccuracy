_noise_get_heavy proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2ACh']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_2AC]']
mov ['ecx,', '0ABh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
push ['107h']
lea ['eax,', '[ebp+Buffer]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetWindowsDirectoryA@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['offset', '$SG87199']
lea ['ecx,', '[ebp+Buffer]']
push ['ecx']
call ['_strcat']
add ['esp,', '8']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+FindFileData]']
push ['edx']
lea ['eax,', '[ebp+Buffer]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__FindFirstFileA@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+hFindFile],', 'eax']
cmp ['[ebp+hFindFile],', '0FFFFFFFFh']
jz ['short', 'loc_128']
mov ['esi,', 'esp']
push ['140h']
lea ['ecx,', '[ebp+FindFileData]']
push ['ecx']
call ['[ebp+arg_0]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+FindFileData]']
push ['edx']
mov ['eax,', '[ebp+hFindFile]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__FindNextFileA@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_DC']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+hFindFile]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__FindClose@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetCurrentProcessId@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_158],', 'eax']
mov ['esi,', 'esp']
push ['4']
lea ['edx,', '[ebp+var_158]']
push ['edx']
call ['[ebp+arg_0]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['ds:_wincrypt_module,', '0']
jnz ['loc_238']
push ['offset', '$SG87207']
call ['_load_system32_dll']
add ['esp,', '4']
mov ['ds:_wincrypt_module,', 'eax']
cmp ['ds:_wincrypt_module,', '0']
jz ['short', 'loc_19F']
mov ['esi,', 'esp']
push ['offset', '$SG87210']
mov ['eax,', 'ds:_wincrypt_module']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetProcAddress@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2A4],', 'eax']
jmp ['short', 'loc_1A9']
mov ['[ebp+var_2A4],', '0']
mov ['ecx,', '[ebp+var_2A4]']
mov ['ds:_p_CryptAcquireContextA,', 'ecx']
cmp ['ds:_wincrypt_module,', '0']
jz ['short', 'loc_1E1']
mov ['esi,', 'esp']
push ['offset', '$SG87213']
mov ['edx,', 'ds:_wincrypt_module']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetProcAddress@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2A8],', 'eax']
jmp ['short', 'loc_1EB']
mov ['[ebp+var_2A8],', '0']
mov ['eax,', '[ebp+var_2A8]']
mov ['ds:_p_CryptGenRandom,', 'eax']
cmp ['ds:_wincrypt_module,', '0']
jz ['short', 'loc_222']
mov ['esi,', 'esp']
push ['offset', '$SG87216']
mov ['ecx,', 'ds:_wincrypt_module']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetProcAddress@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2AC],', 'eax']
jmp ['short', 'loc_22C']
mov ['[ebp+var_2AC],', '0']
mov ['edx,', '[ebp+var_2AC]']
mov ['ds:_p_CryptReleaseContext,', 'edx']
cmp ['ds:_wincrypt_module,', '0']
jz ['loc_2E0']
cmp ['ds:_p_CryptAcquireContextA,', '0']
jz ['loc_2E0']
cmp ['ds:_p_CryptGenRandom,', '0']
jz ['loc_2E0']
cmp ['ds:_p_CryptReleaseContext,', '0']
jz ['short', 'loc_2E0']
mov ['esi,', 'esp']
push ['0F0000000h']
push ['1']
push ['0']
push ['0']
lea ['eax,', '[ebp+var_164]']
push ['eax']
call ['ds:_p_CryptAcquireContextA']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_2E0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_29C]']
push ['ecx']
push ['20h']
mov ['edx,', '[ebp+var_164]']
push ['edx']
call ['ds:_p_CryptGenRandom']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_2C8']
mov ['esi,', 'esp']
push ['20h']
lea ['eax,', '[ebp+var_29C]']
push ['eax']
call ['[ebp+arg_0]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+var_164]']
push ['ecx']
call ['ds:_p_CryptReleaseContext']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_read_random_seed']
add ['esp,', '4']
call ['_random_save_seed']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN22']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '2ACh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_random_save_seed proc near             
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['dword', 'ptr', 'ds:_random_active,', '0']
jz ['short', 'loc_3E2']
lea ['eax,', '[ebp+var_8]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_random_get_savedata']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_write_random_seed']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_noise_get_light proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '38h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_38]']
mov ['ecx,', '0Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+SystemTime]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetSystemTime@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['10h']
lea ['ecx,', '[ebp+SystemTime]']
push ['ecx']
call ['[ebp+arg_0]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+TimeAdjustmentDisabled]']
push ['edx']
lea ['eax,', '[ebp+TimeIncrement]']
push ['eax']
lea ['ecx,', '[ebp+TimeAdjustment]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetSystemTimeAdjustment@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['8']
lea ['edx,', '[ebp+TimeAdjustment]']
push ['edx']
call ['[ebp+arg_0]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '38h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_noise_regular  proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '7Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_7C]']
mov ['ecx,', '1Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetForegroundWindow@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
push ['4']
lea ['eax,', '[ebp+var_C]']
push ['eax']
call ['_random_add_noise']
add ['esp,', '8']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetCapture@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
push ['4']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_random_add_noise']
add ['esp,', '8']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetClipboardOwner@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
push ['4']
lea ['edx,', '[ebp+var_C]']
push ['edx']
call ['_random_add_noise']
add ['esp,', '8']
mov ['esi,', 'esp']
push ['4BFh']
call ['dword', 'ptr', 'ds:__imp__GetQueueStatus@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
push ['4']
lea ['eax,', '[ebp+var_18]']
push ['eax']
call ['_random_add_noise']
add ['esp,', '8']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+Point]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetCursorPos@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['8']
lea ['edx,', '[ebp+Point]']
push ['edx']
call ['_random_add_noise']
add ['esp,', '8']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+Buffer]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GlobalMemoryStatus@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['20h']
lea ['ecx,', '[ebp+Buffer]']
push ['ecx']
call ['_random_add_noise']
add ['esp,', '8']
lea ['edx,', '[ebp+UserTime]']
mov ['esi,', 'esp']
push ['edx']
lea ['eax,', '[ebp+KernelTime]']
push ['eax']
lea ['ecx,', '[ebp+ExitTime]']
push ['ecx']
lea ['edx,', '[ebp+CreationTime]']
push ['edx']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetCurrentThread@0']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetThreadTimes@20']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['20h']
lea ['eax,', '[ebp+CreationTime]']
push ['eax']
call ['_random_add_noise']
add ['esp,', '8']
lea ['ecx,', '[ebp+UserTime]']
mov ['esi,', 'esp']
push ['ecx']
lea ['edx,', '[ebp+KernelTime]']
push ['edx']
lea ['eax,', '[ebp+ExitTime]']
push ['eax']
lea ['ecx,', '[ebp+CreationTime]']
push ['ecx']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetCurrentProcess@0']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetProcessTimes@20']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['20h']
lea ['edx,', '[ebp+CreationTime]']
push ['edx']
call ['_random_add_noise']
add ['esp,', '8']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '7Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_noise_ultralight proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['dword', 'ptr', '[ebp+PerformanceCount],', 'eax']
mov ['dword', 'ptr', '[ebp+PerformanceCount+4],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
push ['4']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_random_add_noise']
add ['esp,', '8']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetTickCount@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
push ['4']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_random_add_noise']
add ['esp,', '8']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+PerformanceCount]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__QueryPerformanceCounter@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_784']
push ['8']
lea ['eax,', '[ebp+PerformanceCount]']
push ['eax']
call ['_random_add_noise']
add ['esp,', '8']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

_request_callback_notifications proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ds:_notify_frontend,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['ds:_frontend,', 'ecx']
pop ['ebp']
retn
endp
_queue_toplevel_callback proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['0Ch']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+8],', 'eax']
cmp ['ds:_notify_frontend,', '0']
jz ['short', 'loc_88']
cmp ['ds:_cbhead,', '0']
jnz ['short', 'loc_88']
mov ['esi,', 'esp']
mov ['ecx,', 'ds:_frontend']
push ['ecx']
call ['ds:_notify_frontend']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['ds:_cbtail,', '0']
jz ['short', 'loc_9E']
mov ['edx,', 'ds:_cbtail']
mov ['eax,', '[ebp+var_4]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_A7']
mov ['ecx,', '[ebp+var_4]']
mov ['ds:_cbhead,', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['ds:_cbtail,', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_run_toplevel_callbacks proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['ds:_cbhead,', '0']
jz ['short', 'loc_131']
mov ['eax,', 'ds:_cbhead']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ds:_cbhead,', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
cmp ['ds:_cbhead,', '0']
jnz ['short', 'loc_131']
mov ['ds:_cbtail,', '0']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_toplevel_callback_pending proc near
push ['ebp']
mov ['ebp,', 'esp']
xor ['eax,', 'eax']
cmp ['ds:_cbhead,', '0']
setnz ['al']
pop ['ebp']
retn
endp

_sk_handle_plug proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+28h]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_192']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+28h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_sk_handle_close proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_handle_free']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_handle_free']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__CloseHandle@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+8]']
cmp ['eax,', '[edx+4]']
jz ['short', 'loc_20A']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__CloseHandle@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '18h']
push ['eax']
call ['_bufchain_clear']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_sk_handle_write proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_handle_write']
add ['esp,', '0Ch']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_sk_handle_write_oob proc near          
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_sk_handle_write']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_sk_handle_write_eof proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_handle_write_eof']
add ['esp,', '4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_sk_handle_flush proc near              
push ['ebp']
mov ['ebp,', 'esp']
pop ['ebp']
retn
endp
_sk_handle_set_frozen proc near         
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_33D']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '3']
ja ['short', 'loc_33B']
mov ['eax,', '[ebp+var_8]']
jmp ['ds:$LN16[eax*4]']
jmp ['loc_3A9']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+14h],', '2']
jmp ['short', 'loc_33B']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '1']
jmp ['short', 'loc_3A9']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '3']
ja ['short', 'loc_3A9']
mov ['edx,', '[ebp+var_C]']
jmp ['ds:$LN17[edx*4]']
jmp ['short', 'loc_3A9']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '18h']
push ['eax']
call ['_bufchain_size']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_382']
push ['0D8h']
push ['offset', '$SG85674']
push ['offset', '$SG85675']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '0']
jmp ['short', 'loc_3A9']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+14h],', '3']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
push ['offset', '_handle_socket_unfreeze']
call ['_queue_toplevel_callback']
add ['esp,', '8']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_handle_socket_unfreeze proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+14h],', '3']
jz ['short', 'loc_418']
jmp ['loc_4BC']
lea ['edx,', '[ebp+var_18]']
push ['edx']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
push ['ecx']
call ['_bufchain_prefix']
add ['esp,', '0Ch']
cmp ['[ebp+var_18],', '0']
jg ['short', 'loc_44C']
push ['9Ah']
push ['offset', '$SG85646']
push ['offset', '$SG85647']
call ['__wassert']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+28h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+28h]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '18h']
push ['edx']
call ['_bufchain_size']
add ['esp,', '4']
test ['eax,', 'eax']
jle ['short', 'loc_49F']
mov ['eax,', '[ebp+var_4]']
push ['eax']
push ['offset', '_handle_socket_unfreeze']
call ['_queue_toplevel_callback']
add ['esp,', '8']
jmp ['short', 'loc_4BC']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_handle_unthrottle']
add ['esp,', '8']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_sk_handle_socket_error proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+24h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_make_handle_socket proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
xor ['eax,', 'eax']
cmp ['[ebp+arg_C],', '0']
setnz ['al']
mov ['[ebp+var_8],', 'eax']
push ['2Ch']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', 'offset', '?socket_fn_table@?1??make_handle_socket@@9@9']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_8]']
mov ['[edx+28h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+24h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '18h']
push ['eax']
call ['_bufchain_init']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
push ['offset', '_handle_gotdata']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_handle_input_new']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
push ['offset', '_handle_sentdata']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_handle_output_new']
add ['esp,', '10h']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_handle_gotdata proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_handle_get_privdata']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_654']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['offset', '$SG85572']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_6FD']
jmp ['loc_6FD']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_684']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_6FD']
jmp ['short', 'loc_6FD']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+14h],', '1']
jz ['short', 'loc_696']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+14h],', '3']
jnz ['short', 'loc_6AA']
push ['39h']
push ['offset', '$SG85578']
push ['offset', '$SG85579']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+14h],', '1']
jnz ['short', 'loc_6D3']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
push ['ecx']
call ['_bufchain_add']
add ['esp,', '0Ch']
mov ['eax,', '7FFFFFFFh']
jmp ['short', 'loc_6FD']
jmp ['short', 'loc_6FD']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_handle_sentdata proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_handle_get_privdata']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+28h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+28h]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

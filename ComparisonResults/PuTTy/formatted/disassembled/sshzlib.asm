_zlib_compress_init proc near           
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['10h']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_lz77_init']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+8],', 'offset', '_zlib_literal']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+0Ch],', 'offset', '_zlib_match']
push ['1Ch']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_lz77_init      proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['38FFCh']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_6E7']
xor ['eax,', 'eax']
jmp ['loc_78B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_701']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '8000h']
jge ['short', 'loc_73E']
mov ['eax,', '[ebp+var_8]']
imul ['eax,', '6']
or ['ecx,', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+eax+4],', 'cx']
mov ['eax,', '[ebp+var_8]']
imul ['eax,', '6']
or ['ecx,', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+eax+2],', 'cx']
mov ['eax,', '[ebp+var_8]']
imul ['eax,', '6']
or ['ecx,', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+eax],', 'cx']
jmp ['short', 'loc_6F8']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_750']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '7F7h']
jge ['short', 'loc_76C']
or ['ecx,', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+edx*2+38004h],', 'cx']
jmp ['short', 'loc_747']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+38000h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+38FF8h],', '0']
mov ['eax,', '1']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_zlib_literal   proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+18h],', '0']
jz ['short', 'loc_7D6']
push ['8']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_outbits']
add ['esp,', '0Ch']
jmp ['short', 'loc_81C']
movzx ['edx,', '[ebp+arg_4]']
cmp ['edx,', '8Fh']
jg ['short', 'loc_7FE']
push ['8']
movzx ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'ds:byte_244[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_outbits']
add ['esp,', '0Ch']
jmp ['short', 'loc_81C']
push ['9']
movzx ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'ds:_mirrorbytes[eax]']
lea ['edx,', '[ecx+ecx+1]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_outbits']
add ['esp,', '0Ch']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_outbits        proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '[ebp+arg_8]']
cmp ['ecx,', '20h']
jle ['short', 'loc_85C']
push ['17Bh']
push ['offset', '$SG7317']
push ['offset', '$SG7318']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['ecx,', '[eax+10h]']
shl ['edx,', 'cl']
mov ['eax,', '[ebp+arg_0]']
or ['edx,', '[eax+0Ch]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0Ch],', 'edx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
add ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+10h],', '8']
jl ['loc_913']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+8]']
jl ['short', 'loc_8C8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '40h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
call ['_saferealloc']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
and ['eax,', '0FFh']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+4]']
mov ['[edx+ecx],', 'al']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
sub ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
jmp ['loc_882']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_zlib_match     proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[edx+18h],', '0']
jz ['short', 'loc_973']
push ['20Dh']
push ['offset', '$SG7363']
push ['offset', '$SG7364']
call ['__wassert']
add ['esp,', '0Ch']
cmp ['[ebp+arg_8],', '0']
jle ['loc_B91']
cmp ['[ebp+arg_8],', '104h']
jle ['short', 'loc_98F']
mov ['[ebp+var_20],', '102h']
jmp ['short', 'loc_9AF']
cmp ['[ebp+arg_8],', '102h']
jg ['short', 'loc_9A0']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_24],', 'ecx']
jmp ['short', 'loc_9A9']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '3']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '[ebp+var_1C]']
mov ['[ebp+arg_8],', 'edx']
mov ['[ebp+var_C],', '0FFFFFFFFh']
mov ['[ebp+var_10],', '1Dh']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_A49']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '2']
jge ['short', 'loc_9F7']
push ['226h']
push ['offset', '$SG7373']
push ['offset', '$SG7374']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '[ebp+var_C]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', 'ds:dword_318[eax]']
jge ['short', 'loc_A1E']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_A47']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', 'ds:dword_31C[eax]']
jle ['short', 'loc_A37']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_A47']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', '0Ch']
add ['eax,', 'offset', '_lencodes']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_A49']
jmp ['short', 'loc_9CC']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['edx,', '117h']
jg ['short', 'loc_A76']
push ['7']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax]']
movzx ['edx,', '(_mirrorbytes-200h)[ecx*2]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['_outbits']
add ['esp,', '0Ch']
jmp ['short', 'loc_A92']
push ['8']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'word', 'ptr', '[ecx]']
movzx ['eax,', '(_mirrorbytes-58h)[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['_outbits']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[edx+2]']
test ['eax,', 'eax']
jz ['short', 'loc_ABB']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'word', 'ptr', '[ecx+2]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_1C]']
sub ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['_outbits']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', '0FFFFFFFFh']
mov ['[ebp+var_10],', '1Eh']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_B46']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '2']
jge ['short', 'loc_AF4']
push ['24Ah']
push ['offset', '$SG7386']
push ['offset', '$SG7387']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '[ebp+var_C]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', 'ds:dword_488[eax]']
jge ['short', 'loc_B1B']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_B44']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', 'ds:dword_48C[eax]']
jle ['short', 'loc_B34']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_B44']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', '0Ch']
add ['eax,', 'offset', '_distcodes']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_B46']
jmp ['short', 'loc_AC9']
push ['5']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'word', 'ptr', '[ecx]']
movzx ['eax,', 'ds:_mirrorbytes[edx*8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['_outbits']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'word', 'ptr', '[edx+2]']
test ['eax,', 'eax']
jz ['short', 'loc_B8C']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'word', 'ptr', '[ecx+2]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['_outbits']
add ['esp,', '0Ch']
jmp ['loc_973']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_zlib_compress_cleanup proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_zlib_disable_compression proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+18h],', '1']
mov ['[ebp+var_C],', '0']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+14h],', '0']
jz ['short', 'loc_C41']
mov ['[ebp+var_C],', '3']
jmp ['short', 'loc_C59']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
add ['eax,', '0Ah']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
add ['eax,', '[ebp+var_C]']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_zlib_compress_block proc near          
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jz ['short', 'loc_CE9']
push ['10h']
push ['9C78h']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_outbits']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_CF0']
mov ['[ebp+var_C],', '1']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['loc_DD7']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_D13']
push ['7']
push ['0']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_outbits']
add ['esp,', '0Ch']
cmp ['[ebp+arg_8],', '0']
jle ['loc_DC5']
cmp ['[ebp+arg_8],', '0FFFFh']
jge ['short', 'loc_D2E']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_D35']
mov ['[ebp+var_14],', '0FFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_10],', 'eax']
push ['3']
push ['0']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_outbits']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+10h],', '0']
jz ['short', 'loc_D6E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '8']
sub ['ecx,', '[eax+10h]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_outbits']
add ['esp,', '0Ch']
push ['10h']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_outbits']
add ['esp,', '0Ch']
push ['10h']
mov ['edx,', '[ebp+var_10]']
xor ['edx,', '0FFFFh']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_outbits']
add ['esp,', '0Ch']
push ['0']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_lz77_compress']
add ['esp,', '10h']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[ebp+var_10]']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_10]']
mov ['[ebp+arg_4],', 'edx']
jmp ['loc_D13']
push ['3']
push ['2']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_outbits']
add ['esp,', '0Ch']
jmp ['short', 'loc_E33']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_DED']
push ['3']
push ['2']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_outbits']
add ['esp,', '0Ch']
push ['1']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_lz77_compress']
add ['esp,', '10h']
push ['7']
push ['0']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_outbits']
add ['esp,', '0Ch']
push ['0Ah']
push ['2']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_outbits']
add ['esp,', '0Ch']
push ['3']
push ['2']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_outbits']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+18h],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['[eax],', 'edx']
mov ['eax,', '1']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_lz77_compress  proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '168h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_168]']
mov ['ecx,', '5Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+38FF8h],', '3']
jle ['short', 'loc_EC6']
push ['0D0h']
push ['offset', '$SG7246']
push ['offset', '$SG7247']
call ['__wassert']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_ED8']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[edx+38FF8h]']
jge ['loc_1003']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ecx+38FF8h]']
sub ['edx,', '[ebp+var_C]']
cmp ['edx,', '3']
jge ['short', 'loc_F52']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_150],', 'eax']
jmp ['short', 'loc_F18']
mov ['ecx,', '[ebp+var_150]']
add ['ecx,', '1']
mov ['[ebp+var_150],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_150]']
cmp ['eax,', '[edx+38FF8h]']
jge ['short', 'loc_F4D']
mov ['ecx,', '[ebp+var_150]']
sub ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_150]']
mov ['eax,', '[ebp+var_8]']
mov ['dl,', '[edx+38FF2h]']
mov ['[eax+ecx+38FF2h],', 'dl']
jmp ['short', 'loc_F09']
jmp ['loc_1003']
mov ['[ebp+var_150],', '0']
jmp ['short', 'loc_F6D']
mov ['eax,', '[ebp+var_150]']
add ['eax,', '1']
mov ['[ebp+var_150],', 'eax']
cmp ['[ebp+var_150],', '3']
jge ['short', 'loc_FDA']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_150]']
mov ['edx,', '[ebp+var_8]']
cmp ['ecx,', '[edx+38FF8h]']
jge ['short', 'loc_FA6']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '[ebp+var_150]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax+38FF2h]']
mov ['[ebp+var_158],', 'edx']
jmp ['short', 'loc_FC5']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '[ebp+var_150]']
mov ['ecx,', '[ebp+var_8]']
sub ['eax,', '[ecx+38FF8h]']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax]']
mov ['[ebp+var_158],', 'eax']
mov ['ecx,', '[ebp+var_150]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_158]']
mov ['[ebp+ecx+var_148],', 'dl']
jmp ['short', 'loc_F5E']
lea ['eax,', '[ebp+var_148]']
push ['eax']
call ['_lz77_hash']
add ['esp,', '4']
push ['eax']
movzx ['ecx,', '[ebp+var_148]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_lz77_advance']
add ['esp,', '0Ch']
jmp ['loc_ECF']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+38FF8h]']
sub ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+38FF8h],', 'ecx']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_140],', '0']
cmp ['[ebp+arg_8],', '0']
jle ['loc_14B9']
cmp ['[ebp+arg_C],', '0']
jz ['loc_11A3']
cmp ['[ebp+arg_8],', '3']
jl ['loc_11A3']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_lz77_hash']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[edx+ecx*2+38004h]']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_1087']
mov ['ecx,', '[ebp+var_18]']
imul ['ecx,', '6']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[edx+ecx]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0FFFFFFFFh']
jz ['loc_11A1']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '8000h']
mov ['edx,', '[ebp+var_8]']
sub ['ecx,', '[edx+38000h]']
and ['ecx,', '80007FFFh']
jns ['short', 'loc_10B3']
dec ['ecx']
or ['ecx,', '0FFFF8000h']
inc ['ecx']
mov ['eax,', '8000h']
sub ['eax,', 'ecx']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_10CF']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '3']
jge ['loc_116A']
cmp ['[ebp+var_C],', '0']
jge ['short', 'loc_1103']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+38000h]']
add ['eax,', '[ebp+var_C]']
and ['eax,', '7FFFh']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax+30000h]']
mov ['[ebp+var_15C],', 'edx']
jmp ['short', 'loc_1112']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_15C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
sub ['edx,', '[ebp+var_14]']
jns ['short', 'loc_1142']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+38000h]']
add ['ecx,', '[ebp+var_C]']
sub ['ecx,', '[ebp+var_14]']
and ['ecx,', '7FFFh']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx+30000h]']
mov ['[ebp+var_160],', 'eax']
jmp ['short', 'loc_1155']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
mov ['[ebp+var_160],', 'eax']
mov ['ecx,', '[ebp+var_15C]']
cmp ['ecx,', '[ebp+var_160]']
jz ['short', 'loc_1165']
jmp ['short', 'loc_116A']
jmp ['loc_10C6']
cmp ['[ebp+var_C],', '3']
jnz ['short', 'loc_119C']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+edx*8+var_138],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+ecx*8+var_134],', '3']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
cmp ['[ebp+var_1C],', '20h']
jl ['short', 'loc_119C']
jmp ['short', 'loc_11A1']
jmp ['loc_1077']
jmp ['short', 'loc_11B1']
mov ['[ebp+var_1C],', '0']
mov ['[ebp+var_10],', '0FFFFFFFFh']
cmp ['[ebp+var_1C],', '0']
jle ['loc_13B4']
mov ['[ebp+var_20],', '3']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+arg_8]']
jge ['loc_12F3']
mov ['[ebp+var_154],', '0']
mov ['ecx,', '[ebp+var_154]']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_11EC']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+var_1C]']
jge ['loc_12D1']
cmp ['[ebp+var_20],', '0']
jge ['short', 'loc_1223']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+38000h]']
add ['edx,', '[ebp+var_20]']
and ['edx,', '7FFFh']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx+30000h]']
mov ['[ebp+var_164],', 'ecx']
jmp ['short', 'loc_1232']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_20]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['[ebp+var_164],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_20]']
sub ['edx,', '[ebp+ecx*8+var_138]']
jns ['short', 'loc_1270']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+38000h]']
add ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_C]']
sub ['ecx,', '[ebp+edx*8+var_138]']
and ['ecx,', '7FFFh']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx+30000h]']
mov ['[ebp+var_168],', 'ecx']
jmp ['short', 'loc_128A']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+edx*8+var_138]']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
mov ['[ebp+var_168],', 'edx']
mov ['eax,', '[ebp+var_164]']
cmp ['eax,', '[ebp+var_168]']
jnz ['short', 'loc_12CC']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+ecx*8+var_138]']
mov ['eax,', '[ebp+ecx*8+var_134]']
mov ['ecx,', '[ebp+var_154]']
mov ['[ebp+ecx*8+var_138],', 'edx']
mov ['[ebp+ecx*8+var_134],', 'eax']
mov ['edx,', '[ebp+var_154]']
add ['edx,', '1']
mov ['[ebp+var_154],', 'edx']
jmp ['loc_11E3']
cmp ['[ebp+var_154],', '0']
jnz ['short', 'loc_12DC']
jmp ['short', 'loc_12F3']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_154]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['loc_11C2']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_134],', 'edx']
cmp ['[ebp+var_2C],', '0']
jle ['loc_138D']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
cmp ['[ebp+var_134],', 'eax']
jle ['short', 'loc_135B']
mov ['esi,', 'esp']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_140]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_138]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_134]']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_140],', 'edx']
mov ['[ebp+var_24],', '1']
jmp ['short', 'loc_138B']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_2C]']
sub ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_13B2']
mov ['eax,', '[ebp+var_138]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_134]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['[ebp+var_140],', 'eax']
mov ['[ebp+var_24],', '1']
jmp ['short', 'loc_1412']
cmp ['[ebp+var_2C],', '0']
jle ['short', 'loc_13EC']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_1412']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_24],', '1']
cmp ['[ebp+var_24],', '0']
jle ['loc_14B4']
cmp ['[ebp+arg_8],', '3']
jl ['short', 'loc_1444']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_lz77_hash']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_lz77_advance']
add ['esp,', '0Ch']
jmp ['short', 'loc_1494']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+38FF8h],', '3']
jl ['short', 'loc_1467']
push ['158h']
push ['offset', '$SG7298']
push ['offset', '$SG7299']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+38FF8h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_4]']
mov ['al,', '[eax]']
mov ['[edx+ecx+38FF2h],', 'al']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+38FF8h]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+38FF8h],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '1']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
jmp ['loc_1412']
jmp ['loc_1030']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN61']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '168h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_lz77_hash      proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[eax]']
imul ['eax,', '101h']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
imul ['edx,', '107h']
add ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
imul ['edx,', '10Dh']
add ['eax,', 'edx']
cdq
mov ['ecx,', '7F7h']
idiv ['ecx']
mov ['eax,', 'edx']
pop ['ebp']
retn
endp
_lz77_advance   proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+38000h]']
imul ['ecx,', '6']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'word', 'ptr', '[edx+ecx+2]']
cmp ['eax,', '0FFFFFFFFh']
jz ['short', 'loc_15BC']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+38000h]']
imul ['edx,', '6']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'word', 'ptr', '[eax+edx+2]']
imul ['ecx,', '6']
or ['edx,', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+ecx],', 'dx']
jmp ['short', 'loc_15F7']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+38000h]']
imul ['edx,', '6']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'word', 'ptr', '[eax+edx+4]']
cmp ['ecx,', '0FFFFFFFFh']
jz ['short', 'loc_15F7']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+38000h]']
imul ['eax,', '6']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'word', 'ptr', '[ecx+eax+4]']
or ['eax,', '0FFFFFFFFh']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+edx*2+38004h],', 'ax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+38000h]']
imul ['eax,', '6']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', 'word', 'ptr', '[ebp+arg_8]']
mov ['[ecx+eax+4],', 'dx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+38000h]']
imul ['ecx,', '6']
mov ['edx,', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+ecx+2],', 'dx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+38000h]']
imul ['edx,', '6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_8]']
mov ['esi,', '[ebp+arg_0]']
mov ['cx,', '[esi+ecx*2+38004h]']
mov ['[eax+edx],', 'cx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+38000h]']
imul ['eax,', '6']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'word', 'ptr', '[ecx+eax]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['dx,', '[edx+38000h]']
mov ['[ecx+eax*2+38004h],', 'dx']
cmp ['[ebp+var_4],', '0FFFFFFFFh']
jz ['short', 'loc_1695']
mov ['eax,', '[ebp+var_4]']
imul ['eax,', '6']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['dx,', '[edx+38000h]']
mov ['[ecx+eax+2],', 'dx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+38000h]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[ebp+arg_4]']
mov ['[edx+ecx+30000h],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+38000h]']
add ['edx,', '1']
and ['edx,', '7FFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+38000h],', 'edx']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_zlib_decompress_init proc near         
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '130h']
push ['edi']
lea ['edi,', '[ebp+var_130]']
mov ['ecx,', '4Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
push ['81ACh']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
push ['90h']
push ['8']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
push ['70h']
push ['9']
lea ['ecx,', '[ebp+var_9C]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
push ['18h']
push ['7']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
push ['8']
push ['8']
lea ['eax,', '[ebp+var_14]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
push ['120h']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_zlib_mktable']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
mov ['[edx],', 'eax']
push ['20h']
push ['5']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
push ['20h']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_zlib_mktable']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+194h],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+198h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+819Ch],', '0']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '130h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_zlib_mktable   proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '530h']
push ['edi']
lea ['edi,', '[ebp+var_530]']
mov ['ecx,', '14Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_524],', '0']
mov ['[ebp+var_528],', '1']
jmp ['short', 'loc_187F']
mov ['eax,', '[ebp+var_528]']
add ['eax,', '1']
mov ['[ebp+var_528],', 'eax']
cmp ['[ebp+var_528],', '10h']
jge ['short', 'loc_1898']
mov ['ecx,', '[ebp+var_528]']
mov ['[ebp+ecx*4+var_48],', '0']
jmp ['short', 'loc_1870']
mov ['[ebp+var_528],', '0']
jmp ['short', 'loc_18B3']
mov ['edx,', '[ebp+var_528]']
add ['edx,', '1']
mov ['[ebp+var_528],', 'edx']
mov ['eax,', '[ebp+var_528]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_1909']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_528]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', '[ebp+edx*4+var_48]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_528]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+edx*4+var_48],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_528]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['[ebp+var_524],', 'ecx']
jge ['short', 'loc_1907']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_528]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['[ebp+var_524],', 'eax']
jmp ['short', 'loc_18A4']
mov ['[ebp+var_520],', '0']
mov ['[ebp+var_528],', '1']
jmp ['short', 'loc_192E']
mov ['ecx,', '[ebp+var_528]']
add ['ecx,', '1']
mov ['[ebp+var_528],', 'ecx']
cmp ['[ebp+var_528],', '10h']
jge ['short', 'loc_1970']
mov ['edx,', '[ebp+var_528]']
mov ['eax,', '[ebp+var_520]']
mov ['[ebp+edx*4+var_90],', 'eax']
mov ['ecx,', '[ebp+var_528]']
mov ['edx,', '[ebp+var_520]']
add ['edx,', '[ebp+ecx*4+var_48]']
mov ['[ebp+var_520],', 'edx']
mov ['eax,', '[ebp+var_520]']
shl ['eax,', '1']
mov ['[ebp+var_520],', 'eax']
jmp ['short', 'loc_191F']
mov ['[ebp+var_528],', '0']
jmp ['short', 'loc_198B']
mov ['ecx,', '[ebp+var_528]']
add ['ecx,', '1']
mov ['[ebp+var_528],', 'ecx']
mov ['edx,', '[ebp+var_528]']
cmp ['edx,', '[ebp+arg_4]']
jge ['loc_1A58']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_528]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+ecx*4+var_90]']
mov ['[ebp+var_520],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_528]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+ecx*4+var_90]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_528]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+ecx*4+var_90],', 'edx']
mov ['edx,', '[ebp+var_528]']
mov ['[ebp+edx*4+var_518],', '0']
mov ['[ebp+var_52C],', '0']
jmp ['short', 'loc_1A08']
mov ['eax,', '[ebp+var_52C]']
add ['eax,', '1']
mov ['[ebp+var_52C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_528]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['[ebp+var_52C],', 'edx']
jge ['short', 'loc_1A53']
mov ['eax,', '[ebp+var_528]']
mov ['ecx,', '[ebp+eax*4+var_518]']
shl ['ecx,', '1']
mov ['edx,', '[ebp+var_520]']
and ['edx,', '1']
or ['ecx,', 'edx']
mov ['eax,', '[ebp+var_528]']
mov ['[ebp+eax*4+var_518],', 'ecx']
mov ['ecx,', '[ebp+var_520]']
sar ['ecx,', '1']
mov ['[ebp+var_520],', 'ecx']
jmp ['short', 'loc_19F9']
jmp ['loc_197C']
cmp ['[ebp+var_524],', '9']
jge ['short', 'loc_1A6F']
mov ['edx,', '[ebp+var_524]']
mov ['[ebp+var_530],', 'edx']
jmp ['short', 'loc_1A79']
mov ['[ebp+var_530],', '9']
mov ['eax,', '[ebp+var_530]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['eax,', '[ebp+var_518]']
push ['eax']
call ['_zlib_mkonetab']
add ['esp,', '18h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN25']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '530h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_zlib_mkonetab  proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
push ['8']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '1']
mov ['ecx,', '[ebp+arg_10]']
shl ['eax,', 'cl']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
push ['8']
mov ['edx,', '1']
mov ['ecx,', '[ebp+arg_14]']
shl ['edx,', 'cl']
push ['edx']
call ['_safemalloc']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '1']
mov ['ecx,', '[ebp+arg_14]']
shl ['edx,', 'cl']
sub ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax],', 'edx']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_1B8F']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[edx]']
jg ['short', 'loc_1BCA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
or ['eax,', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_18]']
mov ['[edx+ecx*8+2],', 'ax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_18]']
mov ['byte', 'ptr', '[eax+ecx*8],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+ecx*8+4],', '0']
jmp ['short', 'loc_1B86']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_1BDC']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+arg_8]']
jge ['loc_1C93']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '[ebp+arg_10]']
jle ['short', 'loc_1C07']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
and ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+arg_C]']
jz ['short', 'loc_1C09']
jmp ['short', 'loc_1BD3']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['ecx,', '[ebp+arg_10]']
sar ['edx,', 'cl']
mov ['eax,', '[ebp+var_4]']
and ['edx,', '[eax]']
mov ['[ebp+var_18],', 'edx']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_1C40']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[edx]']
sub ['ecx,', '[ebp+arg_10]']
mov ['eax,', '1']
shl ['eax,', 'cl']
add ['eax,', '[ebp+var_14]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ecx]']
jg ['short', 'loc_1C8E']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_14]']
mov ['ax,', 'word', 'ptr', '[ebp+var_10]']
mov ['[ecx+edx*8+2],', 'ax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
sub ['edx,', '[ebp+arg_10]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[ecx+edx*8]']
cmp ['eax,', '[ebp+var_C]']
jge ['short', 'loc_1C8C']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_C]']
mov ['[edx+eax*8],', 'cl']
jmp ['short', 'loc_1C27']
jmp ['loc_1BD3']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_1CA5']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[eax]']
jg ['loc_1D44']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_18]']
movzx ['edx,', 'byte', 'ptr', '[eax+ecx*8]']
cmp ['edx,', '[ebp+arg_14]']
jg ['short', 'loc_1CC7']
jmp ['short', 'loc_1C9C']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
or ['edx,', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_18]']
mov ['[ecx+eax*8+2],', 'dx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_18]']
movzx ['ecx,', 'byte', 'ptr', '[edx+eax*8]']
sub ['ecx,', '[ebp+arg_14]']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '7']
jle ['short', 'loc_1CF8']
mov ['[ebp+var_C],', '7']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_18]']
mov ['dl,', 'byte', 'ptr', '[ebp+arg_14]']
mov ['[eax+ecx*8],', 'dl']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
add ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_10]']
shl ['edx,', 'cl']
or ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_zlib_mkonetab']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+var_18]']
mov ['[edx+ecx*8+4],', 'eax']
jmp ['loc_1C9C']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_zlib_decompress_cleanup proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jz ['short', 'loc_1D9A']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[edx+8]']
cmp ['ecx,', '[eax]']
jz ['short', 'loc_1D9A']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '8']
push ['edx']
call ['_zlib_freetable']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_1DC0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+0Ch]']
cmp ['eax,', '[edx+4]']
jz ['short', 'loc_1DC0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0Ch']
push ['ecx']
call ['_zlib_freetable']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+10h],', '0']
jz ['short', 'loc_1DD8']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '10h']
push ['eax']
call ['_zlib_freetable']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_zlib_freetable']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '4']
push ['edx']
call ['_zlib_freetable']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_zlib_freetable proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_1E36']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_1EBE']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_1E42']
xor ['eax,', 'eax']
jmp ['short', 'loc_1EBE']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_4],', 'edx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1E5C']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx]']
jg ['short', 'loc_1E8E']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+edx*8+4],', '0']
jz ['short', 'loc_1E8C']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[ecx+edx*8+4]']
push ['eax']
call ['_zlib_freetable']
add ['esp,', '4']
jmp ['short', 'loc_1E53']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx],', '0']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_zlib_decompress_block proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '38h']
push ['edi']
lea ['edi,', '[ebp+var_38]']
mov ['ecx,', '0Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
push ['1']
push ['100h']
call ['_safemalloc']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+81A0h],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+81A8h],', '100h']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+81A4h],', '0']
cmp ['[ebp+arg_8],', '0']
jg ['short', 'loc_1F38']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+198h],', '0']
jle ['$finished$7660']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+198h],', '18h']
jge ['short', 'loc_1F96']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_1F96']
mov ['eax,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[eax]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+198h]']
shl ['edx,', 'cl']
mov ['ecx,', '[ebp+var_4]']
or ['edx,', '[ecx+194h]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+194h],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+198h]']
add ['eax,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+198h],', 'eax']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '1']
mov ['[ebp+arg_8],', 'edx']
jmp ['short', 'loc_1F38']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_28],', 'ecx']
cmp ['[ebp+var_28],', '0Ch']
ja ['loc_2946']
mov ['edx,', '[ebp+var_28]']
jmp ['ds:$LN72[edx*4]']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+198h],', '10h']
jge ['short', 'loc_1FC4']
jmp ['$finished$7660']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+194h]']
and ['edx,', '0FF00h']
shr ['edx,', '8']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+194h]']
and ['ecx,', '0FFh']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['[ebp+var_20],', 'edx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+198h]']
sub ['eax,', '10h']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+198h],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+194h]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+194h],', 'eax']
mov ['edx,', '[ebp+var_20]']
and ['edx,', '0F00h']
cmp ['edx,', '800h']
jnz ['short', 'loc_204E']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0F000h']
cmp ['eax,', '7000h']
jg ['short', 'loc_204E']
mov ['ecx,', '[ebp+var_20]']
and ['ecx,', '20h']
jnz ['short', 'loc_204E']
mov ['eax,', '[ebp+var_20]']
cdq
mov ['ecx,', '1Fh']
idiv ['ecx']
test ['edx,', 'edx']
jz ['short', 'loc_2053']
jmp ['$decode_error$7663']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '1']
jmp ['loc_2946']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+198h],', '3']
jge ['short', 'loc_2073']
jmp ['$finished$7660']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+198h]']
sub ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+198h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+194h]']
shr ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+194h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+194h]']
and ['edx,', '3']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+198h]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+198h],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+194h]']
shr ['ecx,', '2']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+194h],', 'ecx']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_2122']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+198h]']
and ['ecx,', '7']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '0Ah']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+198h]']
sub ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+198h],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax+194h]']
mov ['ecx,', '[ebp+var_24]']
shr ['edx,', 'cl']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+194h],', 'edx']
jmp ['short', 'loc_215B']
cmp ['[ebp+var_10],', '1']
jnz ['short', 'loc_214B']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ecx+8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['[ecx+0Ch],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+14h],', '6']
jmp ['short', 'loc_215B']
cmp ['[ebp+var_10],', '2']
jnz ['short', 'loc_215B']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '2']
jmp ['loc_2946']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+198h],', '0Eh']
jge ['short', 'loc_2171']
jmp ['$finished$7660']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+194h]']
and ['edx,', '1Fh']
add ['edx,', '101h']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+1Ch],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+198h]']
sub ['edx,', '5']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+198h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+194h]']
shr ['edx,', '5']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+194h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+194h]']
and ['edx,', '1Fh']
add ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+20h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+198h]']
sub ['edx,', '5']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+198h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+194h]']
shr ['edx,', '5']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+194h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+194h]']
and ['edx,', '0Fh']
add ['edx,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+24h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+198h]']
sub ['edx,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+198h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+194h]']
shr ['edx,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+194h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+28h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '3']
push ['13h']
push ['0']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '40h']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
jmp ['loc_2946']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+198h],', '3']
jge ['short', 'loc_226E']
jmp ['$finished$7660']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[edx+28h]']
cmp ['ecx,', '[eax+24h]']
jge ['short', 'loc_22E3']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+198h],', '3']
jl ['short', 'loc_22E3']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+194h]']
and ['ecx,', '7']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+28h]']
movzx ['edx,', 'ds:?lenlenmap@?1??zlib_decompress_block@@9@9[eax]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+edx+40h],', 'cl']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+28h]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+28h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+198h]']
sub ['edx,', '3']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+198h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+194h]']
shr ['edx,', '3']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+194h],', 'edx']
jmp ['short', 'loc_226E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+28h]']
cmp ['eax,', '[edx+24h]']
jnz ['short', 'loc_231C']
push ['13h']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '40h']
push ['ecx']
call ['_zlib_mktable']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+14h],', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+28h],', '0']
jmp ['loc_2946']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+20h]']
mov ['edx,', '[ebp+var_4]']
cmp ['[edx+28h],', 'eax']
jl ['short', 'loc_239C']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '53h']
push ['edx']
call ['_zlib_mktable']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+20h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
mov ['eax,', '[ebp+var_4]']
lea ['ecx,', '[eax+edx+53h]']
push ['ecx']
call ['_zlib_mktable']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '10h']
push ['eax']
call ['_zlib_freetable']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '6']
jmp ['loc_2946']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '198h']
push ['edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '194h']
push ['eax']
call ['_zlib_huflookup']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0FFFFFFFFh']
jnz ['short', 'loc_23CC']
jmp ['$finished$7660']
cmp ['[ebp+var_C],', '0FFFFFFFEh']
jnz ['short', 'loc_23D7']
jmp ['$decode_error$7663']
cmp ['[ebp+var_C],', '10h']
jge ['short', 'loc_23FE']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+28h]']
mov ['eax,', '[ebp+var_4]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_C]']
mov ['[eax+edx+53h],', 'cl']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+28h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+28h],', 'eax']
jmp ['short', 'loc_247B']
cmp ['[ebp+var_C],', '10h']
jnz ['short', 'loc_240D']
mov ['[ebp+var_2C],', '2']
jmp ['short', 'loc_2420']
xor ['edx,', 'edx']
cmp ['[ebp+var_C],', '11h']
setnz ['dl']
lea ['edx,', 'ds:3[edx*4]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+2Ch],', 'ecx']
xor ['edx,', 'edx']
cmp ['[ebp+var_C],', '12h']
setz ['dl']
lea ['edx,', 'ds:3[edx*8]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+30h],', 'edx']
cmp ['[ebp+var_C],', '10h']
jnz ['short', 'loc_2461']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+28h],', '0']
jle ['short', 'loc_2461']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+28h]']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax+52h]']
mov ['[ebp+var_30],', 'edx']
jmp ['short', 'loc_2468']
mov ['[ebp+var_30],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_30]']
mov ['[eax+38h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '5']
jmp ['loc_2946']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+198h]']
cmp ['edx,', '[ecx+2Ch]']
jge ['short', 'loc_2496']
jmp ['$finished$7660']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '1']
mov ['ecx,', '[eax+2Ch]']
shl ['edx,', 'cl']
sub ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
and ['edx,', '[eax+194h]']
mov ['ecx,', '[ebp+var_4]']
add ['edx,', '[ecx+30h]']
mov ['[ebp+var_14],', 'edx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[edx+198h]']
sub ['ecx,', '[eax+2Ch]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+198h],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+194h]']
mov ['ecx,', '[ecx+2Ch]']
shr ['edx,', 'cl']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+194h],', 'edx']
cmp ['[ebp+var_14],', '0']
jle ['short', 'loc_2531']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
mov ['eax,', '[ebp+var_4]']
add ['edx,', '[eax+20h]']
mov ['ecx,', '[ebp+var_4]']
cmp ['[ecx+28h],', 'edx']
jge ['short', 'loc_2531']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+28h]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['dl,', '[edx+38h]']
mov ['[ecx+eax+53h],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+28h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_24EA']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+14h],', '4']
jmp ['loc_2946']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '198h']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '194h']
push ['edx']
call ['_zlib_huflookup']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0FFFFFFFFh']
jnz ['short', 'loc_2571']
jmp ['$finished$7660']
cmp ['[ebp+var_C],', '0FFFFFFFEh']
jnz ['short', 'loc_257C']
jmp ['$decode_error$7663']
cmp ['[ebp+var_C],', '100h']
jge ['short', 'loc_2597']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_zlib_emit_char']
add ['esp,', '8']
jmp ['short', 'loc_2615']
cmp ['[ebp+var_C],', '100h']
jnz ['short', 'loc_25F9']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx]']
jz ['short', 'loc_25D0']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '8']
push ['eax']
call ['_zlib_freetable']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[edx+0Ch]']
cmp ['ecx,', '[eax+4]']
jz ['short', 'loc_25F7']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '0Ch']
push ['edx']
call ['_zlib_freetable']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
jmp ['short', 'loc_2615']
cmp ['[ebp+var_C],', '11Eh']
jge ['short', 'loc_2615']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+14h],', '7']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+18h],', 'eax']
jmp ['loc_2946']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+18h]']
sub ['edx,', '101h']
imul ['edx,', '0Ch']
add ['edx,', 'offset', '_lencodes']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['edx,', '[ebp+var_4]']
cmp ['[edx+198h],', 'ecx']
jge ['short', 'loc_2649']
jmp ['$finished$7660']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['edx,', '1']
shl ['edx,', 'cl']
sub ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
and ['edx,', '[eax+194h]']
mov ['ecx,', '[ebp+var_8]']
add ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+34h],', 'edx']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'word', 'ptr', '[ecx+2]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+198h]']
sub ['ecx,', 'edx']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+198h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+194h]']
shr ['eax,', 'cl']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+194h],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '8']
jmp ['loc_2946']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '198h']
push ['edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '194h']
push ['eax']
call ['_zlib_huflookup']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0FFFFFFFFh']
jnz ['short', 'loc_26E4']
jmp ['$finished$7660']
cmp ['[ebp+var_C],', '0FFFFFFFEh']
jnz ['short', 'loc_26EF']
jmp ['$decode_error$7663']
cmp ['[ebp+var_C],', '1Eh']
jl ['short', 'loc_26FA']
jmp ['$decode_error$7663']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+14h],', '9']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+18h],', 'eax']
jmp ['loc_2946']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+18h]']
imul ['edx,', '0Ch']
add ['edx,', 'offset', '_distcodes']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['edx,', '[ebp+var_4]']
cmp ['[edx+198h],', 'ecx']
jge ['short', 'loc_273B']
jmp ['$finished$7660']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['edx,', '1']
shl ['edx,', 'cl']
sub ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
and ['edx,', '[eax+194h]']
mov ['ecx,', '[ebp+var_8]']
add ['edx,', '[ecx+4]']
mov ['[ebp+var_18],', 'edx']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[edx+2]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+198h]']
sub ['edx,', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+198h],', 'edx']
mov ['ecx,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[ecx+2]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+194h]']
shr ['eax,', 'cl']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+194h],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '6']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+34h]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+34h]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+34h],', 'eax']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_27E7']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+819Ch]']
sub ['eax,', '[ebp+var_18]']
and ['eax,', '7FFFh']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax+19Ch]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_zlib_emit_char']
add ['esp,', '8']
jmp ['short', 'loc_279E']
jmp ['loc_2946']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+198h],', '10h']
jge ['short', 'loc_27FD']
jmp ['$finished$7660']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+194h]']
and ['eax,', '0FFFFh']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+3Ch],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+198h]']
sub ['eax,', '10h']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+198h],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+194h]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+194h],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '0Bh']
jmp ['loc_2946']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+198h],', '10h']
jge ['short', 'loc_285B']
jmp ['$finished$7660']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+194h]']
and ['edx,', '0FFFFh']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+198h]']
sub ['ecx,', '10h']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+198h],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+194h]']
shr ['ecx,', '10h']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+194h],', 'ecx']
mov ['eax,', '[ebp+var_1C]']
xor ['eax,', '0FFFFh']
mov ['ecx,', '[ebp+var_4]']
cmp ['[ecx+3Ch],', 'eax']
jz ['short', 'loc_28AC']
jmp ['$decode_error$7663']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+3Ch],', '0']
jnz ['short', 'loc_28C1']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+14h],', '1']
jmp ['short', 'loc_28CB']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+14h],', '0Ch']
jmp ['short', 'loc_2946']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+198h],', '8']
jge ['short', 'loc_28DB']
jmp ['short', '$finished$7660']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+194h]']
and ['ecx,', '0FFh']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_zlib_emit_char']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+198h]']
sub ['ecx,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+198h],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+194h]']
shr ['ecx,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+194h],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+3Ch]']
sub ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_38]']
mov ['[edx+3Ch],', 'eax']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_2946']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+14h],', '1']
jmp ['loc_1F22']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+81A0h]']
mov ['[edx],', 'ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+81A4h]']
mov ['[edx],', 'ecx']
mov ['eax,', '1']
jmp ['short', 'loc_29A1']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+81A0h]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+81A0h],', '0']
mov ['edx,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0']
xor ['eax,', 'eax']
pop ['edi']
add ['esp,', '38h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_zlib_huflookup proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '1']
test ['ecx,', 'ecx']
jz ['loc_2A9E']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_4]']
and ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+4]']
lea ['eax,', '[edx+eax*8]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '[ebp+var_8]']
jle ['short', 'loc_2A40']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_2A9E']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_4]']
shr ['edx,', 'cl']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', 'ecx']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_C]']
movsx ['ecx,', 'word', 'ptr', '[eax+2]']
cmp ['ecx,', '0FFFFFFFFh']
jnz ['short', 'loc_2A73']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+4]']
mov ['[ebp+arg_8],', 'eax']
jmp ['short', 'loc_2A8C']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_C]']
movsx ['eax,', 'word', 'ptr', '[edx+2]']
jmp ['short', 'loc_2A9E']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_2A99']
mov ['eax,', '0FFFFFFFEh']
jmp ['short', 'loc_2A9E']
jmp ['loc_2A0F']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_zlib_emit_char proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+819Ch]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[ebp+arg_4]']
mov ['[edx+ecx+19Ch],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+819Ch]']
add ['edx,', '1']
and ['edx,', '7FFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+819Ch],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+81A4h]']
cmp ['eax,', '[edx+81A8h]']
jl ['short', 'loc_2B2B']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+81A4h]']
add ['edx,', '200h']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+81A8h],', 'edx']
push ['1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+81A8h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+81A0h]']
push ['ecx']
call ['_saferealloc']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+81A0h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+81A0h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+81A4h]']
mov ['dl,', '[ebp+arg_4]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+81A4h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+81A4h],', 'ecx']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp

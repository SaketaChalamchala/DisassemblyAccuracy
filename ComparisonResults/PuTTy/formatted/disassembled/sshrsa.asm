_makekey        proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '4']
jge ['short', 'loc_391']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_524']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_3DA']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_3B2']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '4']
jge ['short', 'loc_3D8']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
add ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_3A9']
jmp ['short', 'loc_3E3']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '4']
mov ['[ebp+arg_4],', 'edx']
cmp ['[ebp+arg_10],', '0']
jnz ['short', 'loc_441']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_403']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '0Ch']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_40A']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ssh1_read_bignum']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jge ['short', 'loc_42F']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_524']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ebp+var_C]']
mov ['[ebp+arg_4],', 'edx']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_452']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '8']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_459']
mov ['[ebp+var_14],', '0']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ssh1_read_bignum']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jl ['short', 'loc_48F']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_497']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_bignum_bitcount']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_497']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_524']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_4A9']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '2']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+4],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_4BA']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '2']
mov ['eax,', '[ebp+arg_C]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ebp+var_C]']
mov ['[ebp+arg_4],', 'edx']
cmp ['[ebp+arg_10],', '1']
jnz ['short', 'loc_51E']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_4E3']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '0Ch']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_4EA']
mov ['[ebp+var_18],', '0']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ssh1_read_bignum']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jge ['short', 'loc_50C']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_524']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ebp+var_C]']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '[ebp+arg_0]']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_makeprivate    proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '10h']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ssh1_read_bignum']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_rsaencrypt     proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '4']
mov ['ecx,', '[ebp+arg_8]']
cmp ['[ecx+4],', 'eax']
jge ['short', 'loc_59F']
xor ['eax,', 'eax']
jmp ['loc_6AD']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
sub ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_memmove']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+1],', '2']
mov ['[ebp+var_C],', '2']
jmp ['short', 'loc_5DB']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '1']
cmp ['[ebp+var_C],', 'ecx']
jge ['short', 'loc_608']
call ['_random_byte']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+var_C]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5EC']
jmp ['short', 'loc_5D2']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+4]']
sub ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+eax-1],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_bignum_from_bytes']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_modpow']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_C]']
sub ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_690']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['edx,', '[ebp+var_10]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_65B']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '1']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_crt_modpow     proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2Ch']
push ['edi']
lea ['edi,', '[ebp+var_2C]']
mov ['ecx,', '0Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_copybn']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_decbn']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
call ['_copybn']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_decbn']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_bigmod']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_bigmod']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_modpow']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_modpow']
add ['esp,', '0Ch']
mov ['[ebp+var_18],', 'eax']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_bignum_cmp']
add ['esp,', '8']
test ['eax,', 'eax']
jge ['short', 'loc_799']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_bigadd']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_bigsub']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
call ['_bigmul']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
call ['_bigmuladd']
add ['esp,', '0Ch']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_bigmod']
add ['esp,', '8']
mov ['[ebp+var_28],', 'eax']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_28]']
pop ['edi']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_rsadecrypt     proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_rsa_privkey_op']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_rsa_privkey_op proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '168h']
push ['edi']
lea ['edi,', '[ebp+var_168]']
mov ['ecx,', '5Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_144],', '40h']
mov ['[ebp+var_148],', '0']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['loc_B53']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_copybn']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
mov ['[ebp+var_14C],', 'eax']
mov ['[ebp+var_150],', '0']
mov ['[ebp+var_154],', '0']
mov ['ecx,', '[ebp+var_14C]']
mov ['[ebp+var_168],', 'ecx']
mov ['edx,', '[ebp+var_14C]']
sub ['edx,', '1']
mov ['[ebp+var_14C],', 'edx']
cmp ['[ebp+var_168],', '0']
jz ['loc_AD4']
cmp ['[ebp+var_154],', '0']
jg ['loc_A89']
mov ['[ebp+var_154],', '8']
cmp ['[ebp+var_144],', '40h']
jb ['loc_A66']
mov ['eax,', '[ebp+var_148]']
sar ['eax,', '18h']
mov ['[ebp+var_160],', 'al']
mov ['ecx,', '[ebp+var_148]']
sar ['ecx,', '10h']
mov ['[ebp+var_15F],', 'cl']
mov ['edx,', '[ebp+var_148]']
sar ['edx,', '8']
mov ['[ebp+var_15E],', 'dl']
mov ['al,', 'byte', 'ptr', '[ebp+var_148]']
mov ['[ebp+var_15D],', 'al']
lea ['ecx,', '[ebp+var_F4]']
push ['ecx']
call ['_SHA512_Init']
add ['esp,', '4']
push ['1Ah']
push ['offset', '$SG7284']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
call ['_SHA512_Bytes']
add ['esp,', '0Ch']
push ['4']
lea ['eax,', '[ebp+var_160]']
push ['eax']
lea ['ecx,', '[ebp+var_F4]']
push ['ecx']
call ['_SHA512_Bytes']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+10h]']
push ['eax']
lea ['ecx,', '[ebp+var_F4]']
push ['ecx']
call ['_sha512_mpint']
add ['esp,', '8']
lea ['edx,', '[ebp+var_13C]']
push ['edx']
lea ['eax,', '[ebp+var_F4]']
push ['eax']
call ['_SHA512_Final']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_148]']
add ['ecx,', '1']
mov ['[ebp+var_148],', 'ecx']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
call ['_SHA512_Init']
add ['esp,', '4']
push ['40h']
lea ['eax,', '[ebp+var_13C]']
push ['eax']
lea ['ecx,', '[ebp+var_F4]']
push ['ecx']
call ['_SHA512_Bytes']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['eax,', '[ebp+var_F4]']
push ['eax']
call ['_sha512_mpint']
add ['esp,', '8']
lea ['ecx,', '[ebp+var_13C]']
push ['ecx']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
call ['_SHA512_Final']
add ['esp,', '8']
mov ['[ebp+var_144],', '0']
mov ['eax,', '[ebp+var_144]']
movzx ['ecx,', '[ebp+eax+var_13C]']
mov ['[ebp+var_150],', 'ecx']
mov ['edx,', '[ebp+var_144]']
add ['edx,', '1']
mov ['[ebp+var_144],', 'edx']
mov ['eax,', '[ebp+var_150]']
and ['eax,', '1']
mov ['[ebp+var_158],', 'eax']
mov ['ecx,', '[ebp+var_150]']
sar ['ecx,', '1']
mov ['[ebp+var_150],', 'ecx']
mov ['edx,', '[ebp+var_154]']
sub ['edx,', '1']
mov ['[ebp+var_154],', 'edx']
mov ['eax,', '[ebp+var_158]']
push ['eax']
mov ['ecx,', '[ebp+var_14C]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_bignum_set_bit']
add ['esp,', '0Ch']
jmp ['loc_90F']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_bn_restore_invariant']
add ['esp,', '4']
mov ['ecx,', 'dword', 'ptr', 'ds:_Zero']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_bignum_cmp']
add ['esp,', '8']
test ['eax,', 'eax']
jle ['short', 'loc_B0E']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_bignum_cmp']
add ['esp,', '8']
test ['eax,', 'eax']
jl ['short', 'loc_B1F']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
jmp ['loc_8CA']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_modinv']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_B4C']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
jmp ['loc_8CA']
jmp ['short', 'loc_B53']
jmp ['loc_8CA']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+1Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_crt_modpow']
add ['esp,', '18h']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_modmul']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+1Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_crt_modpow']
add ['esp,', '18h']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['_modmul']
add ['esp,', '0Ch']
mov ['[ebp+var_1C],', 'eax']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '168h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_sha512_mpint   proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '8']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
sar ['ecx,', '18h']
mov ['byte', 'ptr', '[ebp+var_8],', 'cl']
mov ['edx,', '[ebp+var_10]']
sar ['edx,', '10h']
mov ['byte', 'ptr', '[ebp+var_8+1],', 'dl']
mov ['eax,', '[ebp+var_10]']
sar ['eax,', '8']
mov ['byte', 'ptr', '[ebp+var_8+2],', 'al']
mov ['cl,', 'byte', 'ptr', '[ebp+var_10]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'cl']
push ['4']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_SHA512_Bytes']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
test ['ecx,', 'ecx']
jle ['short', 'loc_D21']
mov ['[ebp+var_14],', '1']
jmp ['short', 'loc_D28']
mov ['[ebp+var_14],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_D55']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['byte', 'ptr', '[ebp+var_8],', 'al']
push ['1']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_SHA512_Bytes']
add ['esp,', '0Ch']
jmp ['short', 'loc_D08']
push ['4']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_rsastr_len     proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '0Fh']
cdq
and ['edx,', '0Fh']
add ['eax,', 'edx']
sar ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '0Fh']
cdq
and ['edx,', '0Fh']
add ['eax,', 'edx']
sar ['eax,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '[ebp+var_10]']
lea ['eax,', 'ds:14h[eax*4]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_rsastr_fmt     proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_8],', 'eax']
push ['offset', '$SG7312']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_sprintf']
add ['esp,', '8']
add ['eax,', '[ebp+var_C]']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '3']
cdq
and ['edx,', '3']
add ['eax,', 'edx']
sar ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '1']
jge ['short', 'loc_E9B']
mov ['[ebp+var_14],', '1']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_EFC']
mov ['eax,', '[ebp+var_10]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
push ['eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_10]']
and ['ecx,', '80000001h']
jns ['short', 'loc_EDB']
dec ['ecx']
or ['ecx,', '0FFFFFFFEh']
inc ['ecx']
shl ['ecx,', '2']
sar ['eax,', 'cl']
and ['eax,', '0Fh']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_C]']
mov ['dl,', 'ds:?hex@?1??rsastr_fmt@@9@9[eax]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_EA1']
push ['offset', '$SG7317']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_sprintf']
add ['esp,', '8']
add ['eax,', '[ebp+var_C]']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '3']
cdq
and ['edx,', '3']
add ['eax,', 'edx']
sar ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '1']
jge ['short', 'loc_F3E']
mov ['[ebp+var_14],', '1']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_F9F']
mov ['eax,', '[ebp+var_10]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
push ['eax']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_10]']
and ['ecx,', '80000001h']
jns ['short', 'loc_F7E']
dec ['ecx']
or ['ecx,', '0FFFFFFFEh']
inc ['ecx']
shl ['ecx,', '2']
sar ['eax,', 'cl']
and ['eax,', '0Fh']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_C]']
mov ['dl,', 'ds:?hex@?1??rsastr_fmt@@9@9[eax]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_F44']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_C]']
mov ['byte', 'ptr', '[ecx],', '0']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_rsa_fingerprint proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '110h']
push ['edi']
lea ['edi,', '[ebp+var_110]']
mov ['ecx,', '44h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
lea ['eax,', '[ebp+var_64]']
push ['eax']
call ['_MD5Init']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_ssh1_bignum_length']
add ['esp,', '4']
sub ['eax,', '2']
mov ['[ebp+var_E4],', 'eax']
mov ['eax,', '[ebp+var_E4]']
mov ['[ebp+var_EC],', 'eax']
mov ['ecx,', '[ebp+var_EC]']
mov ['[ebp+var_108],', 'ecx']
mov ['edx,', '[ebp+var_EC]']
sub ['edx,', '1']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_108],', '0']
jz ['short', 'loc_106D']
mov ['eax,', '[ebp+var_EC]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['[ebp+var_F1],', 'al']
push ['1']
lea ['eax,', '[ebp+var_F1]']
push ['eax']
lea ['ecx,', '[ebp+var_64]']
push ['ecx']
call ['_MD5Update']
add ['esp,', '0Ch']
jmp ['short', 'loc_1016']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_ssh1_bignum_length']
add ['esp,', '4']
sub ['eax,', '2']
mov ['[ebp+var_E4],', 'eax']
mov ['ecx,', '[ebp+var_E4]']
mov ['[ebp+var_EC],', 'ecx']
mov ['edx,', '[ebp+var_EC]']
mov ['[ebp+var_10C],', 'edx']
mov ['eax,', '[ebp+var_EC]']
sub ['eax,', '1']
mov ['[ebp+var_EC],', 'eax']
cmp ['[ebp+var_10C],', '0']
jz ['short', 'loc_10E8']
mov ['ecx,', '[ebp+var_EC]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_bignum_byte']
add ['esp,', '8']
mov ['[ebp+var_FD],', 'al']
push ['1']
lea ['ecx,', '[ebp+var_FD]']
push ['ecx']
lea ['edx,', '[ebp+var_64]']
push ['edx']
call ['_MD5Update']
add ['esp,', '0Ch']
jmp ['short', 'loc_1091']
lea ['eax,', '[ebp+var_64]']
push ['eax']
lea ['ecx,', '[ebp+var_7C]']
push ['ecx']
call ['_MD5Final']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
push ['eax']
push ['offset', '$SG7343']
lea ['ecx,', '[ebp+var_DC]']
push ['ecx']
call ['_sprintf']
add ['esp,', '0Ch']
mov ['[ebp+var_EC],', '0']
jmp ['short', 'loc_1137']
mov ['edx,', '[ebp+var_EC]']
add ['edx,', '1']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '10h']
jge ['short', 'loc_1198']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_1155']
mov ['[ebp+var_110],', 'offset', '$SG7347']
jmp ['short', 'loc_115F']
mov ['[ebp+var_110],', 'offset', '$SG7348']
mov ['eax,', '[ebp+var_EC]']
movzx ['ecx,', '[ebp+eax+var_7C]']
push ['ecx']
mov ['edx,', '[ebp+var_110]']
push ['edx']
push ['offset', '$SG7349']
lea ['eax,', '[ebp+var_DC]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
lea ['ecx,', '[ebp+eax+var_DC]']
push ['ecx']
call ['_sprintf']
add ['esp,', '10h']
jmp ['short', 'loc_1128']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+var_DC]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_strncpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[edx-1],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_E8],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[ecx+20h],', '0']
jz ['short', 'loc_1222']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '1']
cmp ['[ebp+var_E8],', 'edx']
jge ['short', 'loc_1222']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_E8]']
mov ['byte', 'ptr', '[eax],', '20h']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+var_E8]']
sub ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+20h]']
push ['eax']
mov ['ecx,', '[ebp+var_E8]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+1]']
push ['eax']
call ['_strncpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[ecx-1],', '0']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '110h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_rsa_verify     proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_bigmul']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_bignum_cmp']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1315']
xor ['eax,', 'eax']
jmp ['loc_14C1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_copybn']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_decbn']
add ['esp,', '4']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_modmul']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
mov ['edx,', 'dword', 'ptr', 'ds:_One']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_bignum_cmp']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_138B']
xor ['eax,', 'eax']
jmp ['loc_14C1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
push ['eax']
call ['_copybn']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_decbn']
add ['esp,', '4']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_modmul']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
mov ['edx,', 'dword', 'ptr', 'ds:_One']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_bignum_cmp']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1401']
xor ['eax,', 'eax']
jmp ['loc_14C1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_bignum_cmp']
add ['esp,', '8']
test ['eax,', 'eax']
jg ['short', 'loc_1471']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[edx+14h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+18h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
push ['eax']
call ['_modinv']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+1Ch],', 'eax']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+1Ch],', '0']
jnz ['short', 'loc_1471']
xor ['eax,', 'eax']
jmp ['short', 'loc_14C1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
call ['_modmul']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:_One']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_bignum_cmp']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_14BC']
xor ['eax,', 'eax']
jmp ['short', 'loc_14C1']
mov ['eax,', '1']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_rsa_public_blob proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_ssh1_bignum_length']
add ['esp,', '4']
mov ['esi,', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_ssh1_bignum_length']
add ['esp,', '4']
lea ['ecx,', '[esi+eax+4]']
mov ['[ebp+var_4],', 'ecx']
push ['1']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_bignum_bitcount']
add ['esp,', '4']
sar ['eax,', '18h']
mov ['edx,', '[ebp+var_C]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_bignum_bitcount']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['edx,', '[ebp+var_C]']
mov ['[edx+1],', 'al']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_bignum_bitcount']
add ['esp,', '4']
sar ['eax,', '8']
mov ['edx,', '[ebp+var_C]']
mov ['[edx+2],', 'al']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_bignum_bitcount']
add ['esp,', '4']
mov ['edx,', '[ebp+var_C]']
mov ['[edx+3],', 'al']
mov ['[ebp+var_8],', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ssh1_write_bignum']
add ['esp,', '8']
add ['eax,', '[ebp+var_8]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ssh1_write_bignum']
add ['esp,', '8']
add ['eax,', '[ebp+var_8]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_C]']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_rsa_public_blob_len proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '4']
jge ['short', 'loc_1605']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_166F']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '4']
mov ['[ebp+arg_4],', 'edx']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ssh1_read_bignum']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jge ['short', 'loc_1637']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_166F']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'edx']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ssh1_read_bignum']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jge ['short', 'loc_1660']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_166F']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '[ebp+arg_0]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_freersakey     proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_169B']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_16B3']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_16CB']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jz ['short', 'loc_16E3']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_16FB']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jz ['short', 'loc_1713']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+20h],', '0']
jz ['short', 'loc_172B']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_rsa2_newkey    proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
push ['24h']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
lea ['eax,', '[ebp+var_14]']
push ['eax']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
lea ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_getstring']
add ['esp,', '10h']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_17AA']
cmp ['[ebp+var_14],', '7']
jnz ['short', 'loc_17AA']
push ['7']
push ['offset', '$SG7454']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_17BD']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_1840']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_getmp']
add ['esp,', '8']
mov ['edx,', '[ebp+var_1C]']
mov ['[edx+0Ch],', 'eax']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_getmp']
add ['esp,', '8']
mov ['edx,', '[ebp+var_1C]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_1C]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['dword', 'ptr', '[ecx+1Ch],', '0']
mov ['edx,', '[ebp+var_1C]']
mov ['dword', 'ptr', '[edx+18h],', '0']
mov ['eax,', '[ebp+var_1C]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['dword', 'ptr', '[ecx+20h],', '0']
mov ['edx,', '[ebp+var_1C]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_182D']
mov ['eax,', '[ebp+var_1C]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jnz ['short', 'loc_183D']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_rsa2_freekey']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_1840']
mov ['eax,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_getstring      proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx],', '4']
jge ['short', 'loc_18A9']
jmp ['loc_1943']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '18h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
movzx ['edx,', 'byte', 'ptr', '[eax+1]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
movzx ['eax,', 'byte', 'ptr', '[edx+2]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
movzx ['edx,', 'byte', 'ptr', '[eax+3]']
or ['ecx,', 'edx']
push ['ecx']
call ['_toint']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[edx],', '0']
jge ['short', 'loc_18F3']
jmp ['short', 'loc_1943']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
sub ['ecx,', '4']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx]']
jge ['short', 'loc_191B']
jmp ['short', 'loc_1943']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_C]']
add ['ecx,', '[edx]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ecx]']
sub ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_getmp          proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
lea ['eax,', '[ebp+var_14]']
push ['eax']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_getstring']
add ['esp,', '10h']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_1992']
xor ['eax,', 'eax']
jmp ['short', 'loc_19A8']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_bignum_from_bytes']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_rsa2_freekey   proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_freersakey']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_rsa2_fmtkey    proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_rsastr_len']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
push ['1']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_rsastr_fmt']
add ['esp,', '8']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_rsa2_public_blob proc near             
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '8']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '8']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_8]']
lea ['ecx,', '[eax+edx+13h]']
mov ['[ebp+var_10],', 'ecx']
push ['1']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_1C]']
mov ['byte', 'ptr', '[edx+1],', '0']
mov ['eax,', '[ebp+var_1C]']
mov ['byte', 'ptr', '[eax+2],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['byte', 'ptr', '[ecx+3],', '7']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '4']
mov ['[ebp+var_1C],', 'edx']
push ['7']
push ['offset', '$SG7497']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '7']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
sar ['edx,', '18h']
mov ['eax,', '[ebp+var_1C]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_8]']
sar ['ecx,', '10h']
mov ['edx,', '[ebp+var_1C]']
mov ['[edx+1],', 'cl']
mov ['eax,', '[ebp+var_8]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+var_1C]']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['[edx+3],', 'al']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '4']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_1BEF']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['edx,', '[ebp+var_1C]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_1BB7']
mov ['ecx,', '[ebp+var_C]']
sar ['ecx,', '18h']
mov ['edx,', '[ebp+var_1C]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_C]']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ecx+1],', 'al']
mov ['edx,', '[ebp+var_C]']
sar ['edx,', '8']
mov ['eax,', '[ebp+var_1C]']
mov ['[eax+2],', 'dl']
mov ['ecx,', '[ebp+var_1C]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_C]']
mov ['[ecx+3],', 'dl']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_1C62']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
jmp ['short', 'loc_1C2A']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '[ebp+var_10]']
cmp ['[ebp+var_1C],', 'eax']
jz ['short', 'loc_1C84']
push ['282h']
push ['offset', '$SG7513']
push ['offset', '$SG7514']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_18]']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_rsa2_private_blob proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+10h]']
push ['edx']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '8']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '8']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+18h]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '8']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '8']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax+10h]']
add ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'edx']
push ['1']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_8]']
sar ['edx,', '18h']
mov ['eax,', '[ebp+var_24]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_8]']
sar ['ecx,', '10h']
mov ['edx,', '[ebp+var_24]']
mov ['[edx+1],', 'cl']
mov ['eax,', '[ebp+var_8]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+var_24]']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['[edx+3],', 'al']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '4']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
sub ['ecx,', '1']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_1DD1']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['edx,', '[ebp+var_24]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_1D99']
mov ['ecx,', '[ebp+var_C]']
sar ['ecx,', '18h']
mov ['edx,', '[ebp+var_24]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_C]']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx+1],', 'al']
mov ['edx,', '[ebp+var_C]']
sar ['edx,', '8']
mov ['eax,', '[ebp+var_24]']
mov ['[eax+2],', 'dl']
mov ['ecx,', '[ebp+var_24]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_C]']
mov ['[ecx+3],', 'dl']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '4']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
sub ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_1E44']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
jmp ['short', 'loc_1E0C']
mov ['eax,', '[ebp+var_10]']
sar ['eax,', '18h']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_10]']
sar ['edx,', '10h']
mov ['eax,', '[ebp+var_24]']
mov ['[eax+1],', 'dl']
mov ['ecx,', '[ebp+var_10]']
sar ['ecx,', '8']
mov ['edx,', '[ebp+var_24]']
mov ['[edx+2],', 'cl']
mov ['eax,', '[ebp+var_24]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_10]']
mov ['[eax+3],', 'cl']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '4']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
sub ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_1EB7']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+18h]']
push ['edx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
jmp ['short', 'loc_1E7F']
mov ['eax,', '[ebp+var_14]']
sar ['eax,', '18h']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_14]']
sar ['edx,', '10h']
mov ['eax,', '[ebp+var_24]']
mov ['[eax+1],', 'dl']
mov ['ecx,', '[ebp+var_14]']
sar ['ecx,', '8']
mov ['edx,', '[ebp+var_24]']
mov ['[edx+2],', 'cl']
mov ['eax,', '[ebp+var_24]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_14]']
mov ['[eax+3],', 'cl']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '4']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
sub ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_1F2A']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
jmp ['short', 'loc_1EF2']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_18]']
cmp ['[ebp+var_24],', 'eax']
jz ['short', 'loc_1F4C']
push ['2AAh']
push ['offset', '$SG7562']
push ['offset', '$SG7563']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_20]']
pop ['edi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_rsa2_createkey proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_rsa2_newkey']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_getmp']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+10h],', 'eax']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_getmp']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+14h],', 'eax']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_getmp']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+18h],', 'eax']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_getmp']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+1Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_rsa_verify']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_2018']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_rsa2_freekey']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_201B']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_rsa2_openssh_createkey proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
push ['24h']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+20h],', '0']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_getmp']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_getmp']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_getmp']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_getmp']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+1Ch],', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_getmp']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+14h],', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_getmp']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+18h],', 'eax']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jz ['short', 'loc_214D']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_214D']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
jz ['short', 'loc_214D']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+1Ch],', '0']
jz ['short', 'loc_214D']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jz ['short', 'loc_214D']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+18h],', '0']
jnz ['short', 'loc_215D']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_rsa2_freekey']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_2180']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_rsa_verify']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_217D']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_rsa2_freekey']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_2180']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_rsa2_openssh_fmtkey proc near          
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
mov ['esi,', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
add ['esi,', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+10h]']
push ['eax']
call ['_ssh2_bignum_length']
add ['esp,', '4']
add ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
add ['esi,', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
add ['esi,', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+18h]']
push ['eax']
call ['_ssh2_bignum_length']
add ['esp,', '4']
add ['esi,', 'eax']
mov ['[ebp+var_8],', 'esi']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+arg_8]']
jle ['short', 'loc_2236']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_270E']
mov ['[ebp+var_8],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '18h']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx+1],', 'al']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '8']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx+3],', 'al']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_230A']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_22CF']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '18h']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '10h']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx+1],', 'al']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '8']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx+2],', 'al']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx+3],', 'al']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_23D7']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_239C']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+10h]']
push ['edx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '18h']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+10h]']
push ['eax']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx+1],', 'al']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+10h]']
push ['eax']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '8']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+10h]']
push ['eax']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx+3],', 'al']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_24A4']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+10h]']
push ['eax']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_2469']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '18h']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '10h']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx+1],', 'al']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '8']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx+2],', 'al']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx+3],', 'al']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_2571']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_2536']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '18h']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx+1],', 'al']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '8']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx+3],', 'al']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_263E']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_2603']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '18h']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '10h']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx+1],', 'al']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
sar ['eax,', '8']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx+2],', 'al']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx+3],', 'al']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+18h]']
push ['edx']
call ['_ssh2_bignum_length']
add ['esp,', '4']
sub ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_270B']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_26D0']
mov ['eax,', '[ebp+var_8]']
pop ['esi']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_rsa2_pubkey_bits proc near             
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_rsa2_newkey']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_rsa2_freekey']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_rsa2_fingerprint proc near             
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '120h']
push ['edi']
lea ['edi,', '[ebp+var_120]']
mov ['ecx,', '48h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
lea ['ecx,', '[ebp+var_68]']
push ['ecx']
call ['_MD5Init']
add ['esp,', '4']
push ['0Bh']
push ['offset', '$SG7675']
lea ['edx,', '[ebp+var_68]']
push ['edx']
call ['_MD5Update']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '8']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_F8],', 'eax']
mov ['edx,', '[ebp+var_F8]']
sar ['edx,', '18h']
mov ['[ebp+var_8C],', 'dl']
mov ['eax,', '[ebp+var_F8]']
sar ['eax,', '10h']
mov ['[ebp+var_8B],', 'al']
mov ['ecx,', '[ebp+var_F8]']
sar ['ecx,', '8']
mov ['[ebp+var_8A],', 'cl']
mov ['dl,', 'byte', 'ptr', '[ebp+var_F8]']
mov ['[ebp+var_89],', 'dl']
push ['4']
lea ['eax,', '[ebp+var_8C]']
push ['eax']
lea ['ecx,', '[ebp+var_68]']
push ['ecx']
call ['_MD5Update']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_F8]']
mov ['[ebp+var_FC],', 'edx']
mov ['eax,', '[ebp+var_FC]']
mov ['[ebp+var_118],', 'eax']
mov ['ecx,', '[ebp+var_FC]']
sub ['ecx,', '1']
mov ['[ebp+var_FC],', 'ecx']
cmp ['[ebp+var_118],', '0']
jz ['short', 'loc_289D']
mov ['edx,', '[ebp+var_FC]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['[ebp+var_101],', 'al']
push ['1']
lea ['edx,', '[ebp+var_101]']
push ['edx']
lea ['eax,', '[ebp+var_68]']
push ['eax']
call ['_MD5Update']
add ['esp,', '0Ch']
jmp ['short', 'loc_2846']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '8']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_F8],', 'eax']
mov ['eax,', '[ebp+var_F8]']
sar ['eax,', '18h']
mov ['[ebp+var_8C],', 'al']
mov ['ecx,', '[ebp+var_F8]']
sar ['ecx,', '10h']
mov ['[ebp+var_8B],', 'cl']
mov ['edx,', '[ebp+var_F8]']
sar ['edx,', '8']
mov ['[ebp+var_8A],', 'dl']
mov ['al,', 'byte', 'ptr', '[ebp+var_F8]']
mov ['[ebp+var_89],', 'al']
push ['4']
lea ['ecx,', '[ebp+var_8C]']
push ['ecx']
lea ['edx,', '[ebp+var_68]']
push ['edx']
call ['_MD5Update']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_F8]']
mov ['[ebp+var_FC],', 'eax']
mov ['ecx,', '[ebp+var_FC]']
mov ['[ebp+var_11C],', 'ecx']
mov ['edx,', '[ebp+var_FC]']
sub ['edx,', '1']
mov ['[ebp+var_FC],', 'edx']
cmp ['[ebp+var_11C],', '0']
jz ['short', 'loc_296F']
mov ['eax,', '[ebp+var_FC]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['[ebp+var_10D],', 'al']
push ['1']
lea ['eax,', '[ebp+var_10D]']
push ['eax']
lea ['ecx,', '[ebp+var_68]']
push ['ecx']
call ['_MD5Update']
add ['esp,', '0Ch']
jmp ['short', 'loc_2918']
lea ['edx,', '[ebp+var_68]']
push ['edx']
lea ['eax,', '[ebp+var_80]']
push ['eax']
call ['_MD5Final']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_bignum_bitcount']
add ['esp,', '4']
push ['eax']
push ['offset', '$SG7692']
lea ['eax,', '[ebp+var_EC]']
push ['eax']
call ['_sprintf']
add ['esp,', '0Ch']
mov ['[ebp+var_FC],', '0']
jmp ['short', 'loc_29BE']
mov ['ecx,', '[ebp+var_FC]']
add ['ecx,', '1']
mov ['[ebp+var_FC],', 'ecx']
cmp ['[ebp+var_FC],', '10h']
jge ['short', 'loc_2A1F']
cmp ['[ebp+var_FC],', '0']
jz ['short', 'loc_29DC']
mov ['[ebp+var_120],', 'offset', '$SG7696']
jmp ['short', 'loc_29E6']
mov ['[ebp+var_120],', 'offset', '$SG7697']
mov ['edx,', '[ebp+var_FC]']
movzx ['eax,', '[ebp+edx+var_80]']
push ['eax']
mov ['ecx,', '[ebp+var_120]']
push ['ecx']
push ['offset', '$SG7698']
lea ['edx,', '[ebp+var_EC]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
lea ['eax,', '[ebp+eax+var_EC]']
push ['eax']
call ['_sprintf']
add ['esp,', '10h']
jmp ['short', 'loc_29AF']
push ['1']
lea ['ecx,', '[ebp+var_EC]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_F4],', 'eax']
cmp ['[ebp+var_F4],', '0']
jz ['short', 'loc_2A61']
lea ['edx,', '[ebp+var_EC]']
push ['edx']
mov ['eax,', '[ebp+var_F4]']
push ['eax']
call ['_strcpy']
add ['esp,', '8']
mov ['eax,', '[ebp+var_F4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '120h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_rsa2_verifysig proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '54h']
push ['edi']
lea ['edi,', '[ebp+var_54]']
mov ['ecx,', '15h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
lea ['edx,', '[ebp+var_18]']
push ['edx']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_getstring']
add ['esp,', '10h']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_2B71']
cmp ['[ebp+var_24],', '7']
jnz ['short', 'loc_2B71']
push ['7']
push ['offset', '$SG7728']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_2B78']
xor ['eax,', 'eax']
jmp ['loc_2D1C']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_getmp']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_2B98']
xor ['eax,', 'eax']
jmp ['loc_2D1C']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_modpow']
add ['esp,', '0Ch']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
mov ['[ebp+var_38],', '1']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '7']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_bignum_byte']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_2C04']
mov ['[ebp+var_38],', '0']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_bignum_byte']
add ['esp,', '8']
cmp ['eax,', '1']
jz ['short', 'loc_2C23']
mov ['[ebp+var_38],', '0']
mov ['edx,', '[ebp+var_2C]']
sub ['edx,', '3']
mov ['[ebp+var_30],', 'edx']
jmp ['short', 'loc_2C37']
mov ['eax,', '[ebp+var_30]']
sub ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '24h']
jl ['short', 'loc_2C5D']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_bignum_byte']
add ['esp,', '8']
cmp ['eax,', '0FFh']
jz ['short', 'loc_2C5B']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_2C2E']
mov ['[ebp+var_30],', '23h']
mov ['[ebp+var_34],', '0']
jmp ['short', 'loc_2C7F']
mov ['eax,', '[ebp+var_30]']
sub ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_34]']
add ['ecx,', '1']
mov ['[ebp+var_34],', 'ecx']
cmp ['[ebp+var_30],', '14h']
jl ['short', 'loc_2CAC']
mov ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_34]']
movzx ['edx,', 'ds:_asn1_weird_stuff[ecx]']
cmp ['eax,', 'edx']
jz ['short', 'loc_2CAA']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_2C6D']
lea ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_SHA_Simple']
add ['esp,', '0Ch']
mov ['[ebp+var_30],', '13h']
mov ['[ebp+var_34],', '0']
jmp ['short', 'loc_2CE2']
mov ['eax,', '[ebp+var_30]']
sub ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_34]']
add ['ecx,', '1']
mov ['[ebp+var_34],', 'ecx']
cmp ['[ebp+var_30],', '0']
jl ['short', 'loc_2D0D']
mov ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_34]']
movzx ['edx,', '[ebp+ecx+var_50]']
cmp ['eax,', 'edx']
jz ['short', 'loc_2D0B']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_2CD0']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_38]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN24']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '54h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_rsa2_sign      proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3Ch']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
lea ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_SHA_Simple']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_bignum_bitcount']
add ['esp,', '4']
sub ['eax,', '1']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '24h']
cmp ['eax,', '1']
jge ['short', 'loc_2DFA']
push ['38Ah']
push ['offset', '$SG7767']
push ['offset', '$SG7768']
call ['__wassert']
add ['esp,', '0Ch']
push ['1']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['byte', 'ptr', '[eax],', '1']
mov ['[ebp+var_38],', '1']
jmp ['short', 'loc_2E23']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '24h']
cmp ['[ebp+var_38],', 'edx']
jge ['short', 'loc_2E39']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '[ebp+var_38]']
mov ['byte', 'ptr', '[eax],', '0FFh']
jmp ['short', 'loc_2E1A']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '24h']
mov ['[ebp+var_38],', 'ecx']
mov ['[ebp+var_3C],', '0']
jmp ['short', 'loc_2E5D']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '1']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '14h']
cmp ['[ebp+var_38],', 'ecx']
jge ['short', 'loc_2E7B']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_3C]']
mov ['cl,', 'ds:_asn1_weird_stuff[eax]']
mov ['[edx],', 'cl']
jmp ['short', 'loc_2E4B']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '14h']
mov ['[ebp+var_38],', 'edx']
mov ['[ebp+var_3C],', '0']
jmp ['short', 'loc_2E9F']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
add ['ecx,', '1']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+var_38]']
cmp ['edx,', '[ebp+var_10]']
jge ['short', 'loc_2EB8']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_3C]']
mov ['dl,', '[ebp+ecx+var_28]']
mov ['[eax],', 'dl']
jmp ['short', 'loc_2E8D']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_bignum_from_bytes']
add ['esp,', '8']
mov ['[ebp+var_30],', 'eax']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
call ['_rsa_privkey_op']
add ['esp,', '8']
mov ['[ebp+var_34],', 'eax']
mov ['edx,', '[ebp+var_30]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_34]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '7']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_10],', 'eax']
push ['1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Fh']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_C]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_C]']
mov ['byte', 'ptr', '[eax+1],', '0']
mov ['ecx,', '[ebp+var_C]']
mov ['byte', 'ptr', '[ecx+2],', '0']
mov ['edx,', '[ebp+var_C]']
mov ['byte', 'ptr', '[edx+3],', '7']
push ['7']
push ['offset', '$SG7788']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '4']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_10]']
sar ['ecx,', '18h']
mov ['edx,', '[ebp+var_C]']
mov ['[edx+0Bh],', 'cl']
mov ['eax,', '[ebp+var_10]']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+0Ch],', 'al']
mov ['edx,', '[ebp+var_10]']
sar ['edx,', '8']
mov ['eax,', '[ebp+var_C]']
mov ['[eax+0Dh],', 'dl']
mov ['ecx,', '[ebp+var_C]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_10]']
mov ['[ecx+0Eh],', 'dl']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_2F95']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_38]']
cmp ['ecx,', '[ebp+var_10]']
jge ['short', 'loc_2FBE']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '1']
sub ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+var_34]']
push ['eax']
call ['_bignum_byte']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_38]']
mov ['[ecx+0Fh],', 'al']
jmp ['short', 'loc_2F8C']
mov ['edx,', '[ebp+var_34]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '0Fh']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_ssh_rsakex_newkey proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_rsa2_newkey']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_ssh_rsakex_freekey proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_rsa2_freekey']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_ssh_rsakex_klen proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_ssh_rsakex_encrypt proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
push ['esi']
push ['edi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_14]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_bignum_bitcount']
add ['esp,', '4']
add ['eax,', '7']
cdq
and ['edx,', '7']
add ['eax,', 'edx']
sar ['eax,', '3']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_30FA']
mov ['edx,', '[ebp+var_1C]']
shl ['edx,', '1']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', 'edx']
sub ['eax,', '2']
cmp ['[ebp+arg_8],', 'eax']
jle ['short', 'loc_3111']
push ['40Eh']
push ['offset', '$SG7866']
push ['offset', '$SG7867']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_10]']
cmp ['edx,', '[ebp+var_10]']
jz ['short', 'loc_3130']
push ['411h']
push ['offset', '$SG7869']
push ['offset', '$SG7870']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_C]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_3148']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_1C]']
jge ['short', 'loc_3160']
call ['_random_byte']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '[ebp+var_14]']
mov ['[ecx+1],', 'al']
jmp ['short', 'loc_313F']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[ebp+arg_C]']
lea ['ecx,', '[eax+edx+1]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['edi,', 'esp']
mov ['eax,', '[edx]']
call ['eax']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_1C]']
lea ['ecx,', '[eax+eax+1]']
mov ['edx,', '[ebp+arg_10]']
sub ['edx,', 'ecx']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+arg_C]']
lea ['edx,', '[ecx+eax*2+1]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_C]']
mov ['byte', 'ptr', '[ecx+eax-1],', '1']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '[ebp+arg_10]']
sub ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_10]']
sub ['edx,', '[ebp+var_1C]']
sub ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+arg_C]']
lea ['edx,', '[ecx+eax+1]']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_oaep_mask']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
sub ['edx,', '[ebp+var_1C]']
sub ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+arg_C]']
lea ['edx,', '[ecx+eax+1]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_oaep_mask']
add ['esp,', '14h']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_bignum_from_bytes']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_modpow']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+arg_C]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+arg_10]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_14]']
sub ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_32A3']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_bignum_byte']
add ['esp,', '8']
mov ['edx,', '[ebp+var_18]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_326E']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_freebn']
add ['esp,', '4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_freebn']
add ['esp,', '4']
pop ['edi']
pop ['esi']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_oaep_mask      proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '50h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '14h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_C],', '0']
cmp ['[ebp+arg_10],', '0']
jle ['loc_342F']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_10]']
cmp ['edx,', '[ecx+0Ch]']
jle ['short', 'loc_331E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_50],', 'ecx']
jmp ['short', 'loc_3324']
mov ['edx,', '[ebp+arg_10]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '20h']
jle ['short', 'loc_334A']
push ['3D5h']
push ['offset', '$SG7835']
push ['offset', '$SG7836']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_C]']
shr ['eax,', '18h']
mov ['[ebp+var_20],', 'al']
mov ['ecx,', '[ebp+var_C]']
shr ['ecx,', '10h']
mov ['[ebp+var_1F],', 'cl']
mov ['edx,', '[ebp+var_C]']
shr ['edx,', '8']
mov ['[ebp+var_1E],', 'dl']
mov ['al,', 'byte', 'ptr', '[ebp+var_C]']
mov ['[ebp+var_1D],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['esi,', 'esp']
mov ['edx,', '[ecx]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['4']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_33F3']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_3418']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', '[ebp+ecx+var_48]']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
xor ['ecx,', 'edx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_10]']
mov ['[edx],', 'cl']
jmp ['short', 'loc_33EA']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_10]']
sub ['ecx,', '[ebp+var_14]']
mov ['[ebp+arg_10],', 'ecx']
jmp ['loc_32FE']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

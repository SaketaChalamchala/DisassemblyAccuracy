_platform_ssh_share proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '40h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_obfuscate_name']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_166']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['_win_strerror']
add ['esp,', '4']
push ['eax']
push ['offset', '$SG88059']
call ['_dupprintf']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_14]']
mov ['[ecx],', 'eax']
xor ['eax,', 'eax']
jmp ['loc_51F']
mov ['edx,', '[ebp+var_4]']
push ['edx']
push ['offset', '$SG88061']
call ['_make_name']
add ['esp,', '8']
mov ['[ebp+lpName],', 'eax']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
push ['ecx']
lea ['edx,', '[ebp+hMem]']
push ['edx']
push ['1F0001h']
call ['_make_private_security_descriptor']
add ['esp,', '10h']
test ['eax,', 'eax']
jnz ['short', 'loc_1B6']
mov ['eax,', '[ebp+lpName]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_51F']
push ['0Ch']
push ['0']
lea ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['[ebp+Dst],', '0Ch']
mov ['eax,', '[ebp+hMem]']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_34],', '0']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+lpName]']
push ['ecx']
push ['0']
lea ['edx,', '[ebp+Dst]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__CreateMutexA@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+hHandle],', 'eax']
cmp ['[ebp+hHandle],', '0']
jnz ['short', 'loc_270']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['_win_strerror']
add ['esp,', '4']
push ['eax']
mov ['eax,', '[ebp+lpName]']
push ['eax']
push ['offset', '$SG88064']
call ['_dupprintf']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_14]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+lpName]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+hMem]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__LocalFree@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_28]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__LocalFree@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
jmp ['loc_51F']
mov ['eax,', '[ebp+lpName]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+hMem]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__LocalFree@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_28]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__LocalFree@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0FFFFFFFFh']
mov ['eax,', '[ebp+hHandle]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__WaitForSingleObject@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
push ['offset', '$SG88065']
call ['_make_name']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[edx],', '0']
cmp ['[ebp+arg_24],', '0']
jz ['loc_3C2']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_new_named_pipe_client']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_369']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_14]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+hHandle]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__ReleaseMutex@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+hHandle]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__CloseHandle@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '1']
jmp ['loc_51F']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['eax,', '[ebp+var_C]']
push ['eax']
push ['offset', '$SG88070']
call ['_dupprintf']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_18]']
mov ['[ecx],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+arg_20],', '0']
jz ['loc_4B0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_new_named_pipe_listener']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_457']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_14]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+hHandle]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__ReleaseMutex@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+hHandle]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__CloseHandle@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '2']
jmp ['loc_51F']
mov ['eax,', '[ebp+arg_1C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['eax,', '[ebp+var_C]']
push ['eax']
push ['offset', '$SG88074']
call ['_dupprintf']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_1C]']
mov ['[ecx],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_4DF']
mov ['ecx,', '[ebp+arg_18]']
cmp ['dword', 'ptr', '[ecx],', '0']
jnz ['short', 'loc_4DF']
mov ['edx,', '[ebp+arg_1C]']
cmp ['dword', 'ptr', '[edx],', '0']
jnz ['short', 'loc_4DF']
push ['0E1h']
push ['offset', '$SG88076']
push ['offset', '$SG88077']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+hHandle]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ReleaseMutex@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+hHandle]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__CloseHandle@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_obfuscate_name proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '104h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_104]']
mov ['ecx,', '41h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
mov ['[ebp+Size],', 'eax']
mov ['ecx,', '[ebp+Size]']
add ['ecx,', '0Fh']
mov ['[ebp+Size],', 'ecx']
mov ['eax,', '[ebp+Size]']
cdq
and ['edx,', '0Fh']
add ['eax,', 'edx']
sar ['eax,', '4']
mov ['[ebp+Size],', 'eax']
mov ['edx,', '[ebp+Size]']
shl ['edx,', '4']
mov ['[ebp+Size],', 'edx']
push ['1']
mov ['eax,', '[ebp+Size]']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_strcpy']
add ['esp,', '8']
call ['_got_crypt']
test ['eax,', 'eax']
jz ['short', 'loc_627']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['dword', 'ptr', 'ds:_p_CryptProtectMemory']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_7C]']
push ['ecx']
call ['_SHA256_Init']
add ['esp,', '4']
mov ['edx,', '[ebp+Size]']
sar ['edx,', '18h']
mov ['[ebp+var_88],', 'dl']
mov ['eax,', '[ebp+Size]']
sar ['eax,', '10h']
mov ['[ebp+var_87],', 'al']
mov ['ecx,', '[ebp+Size]']
sar ['ecx,', '8']
mov ['[ebp+var_86],', 'cl']
mov ['dl,', 'byte', 'ptr', '[ebp+Size]']
mov ['[ebp+var_85],', 'dl']
push ['4']
lea ['eax,', '[ebp+var_88]']
push ['eax']
lea ['ecx,', '[ebp+var_7C]']
push ['ecx']
call ['_SHA256_Bytes']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
lea ['ecx,', '[ebp+var_7C]']
push ['ecx']
call ['_SHA256_Bytes']
add ['esp,', '0Ch']
lea ['edx,', '[ebp+var_B0]']
push ['edx']
lea ['eax,', '[ebp+var_7C]']
push ['eax']
call ['_SHA256_Final']
add ['esp,', '8']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['[ebp+var_104],', '0']
jmp ['short', 'loc_6C3']
mov ['edx,', '[ebp+var_104]']
add ['edx,', '1']
mov ['[ebp+var_104],', 'edx']
cmp ['[ebp+var_104],', '20h']
jge ['short', 'loc_6F8']
mov ['eax,', '[ebp+var_104]']
movzx ['ecx,', '[ebp+eax+var_B0]']
push ['ecx']
push ['offset', '$SG88010']
mov ['edx,', '[ebp+var_104]']
lea ['eax,', '[ebp+edx*2+Dest]']
push ['eax']
call ['_sprintf']
add ['esp,', '0Ch']
jmp ['short', 'loc_6B4']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_dupstr']
add ['esp,', '4']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '104h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_make_name      proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
call ['_get_username']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
push ['offset', '$SG88019']
call ['_dupprintf']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_platform_ssh_share_cleanup proc near
push ['ebp']
mov ['ebp,', 'esp']
pop ['ebp']
retn
endp

_handle_input_new proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+ThreadId],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
push ['1034h']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'edx']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
push ['0']
call ['dword', 'ptr', 'ds:__imp__CreateEventA@16']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
push ['0']
call ['dword', 'ptr', 'ds:__imp__CreateEventA@16']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+1030h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+18h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_8]']
mov ['[edx+20h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_C]']
mov ['[ecx+24h],', 'edx']
cmp ['ds:_handles_by_evtomain,', '0']
jnz ['short', 'loc_305']
push ['offset', '_handle_cmp_evtomain']
call ['_newtree234']
add ['esp,', '4']
mov ['ds:_handles_by_evtomain,', 'eax']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', 'ds:_handles_by_evtomain']
push ['ecx']
call ['_add234']
add ['esp,', '8']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+ThreadId]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
push ['eax']
push ['offset', '_handle_input_threadfunc@4']
push ['0']
push ['0']
call ['dword', 'ptr', 'ds:__imp__CreateThread@24']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+1Ch],', '1']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_handle_input_threadfunc@4 proc near    
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_31],', '0']
mov ['eax,', '[ebp+lpThreadParameter]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+20h]']
and ['edx,', '1']
jz ['short', 'loc_3EA']
lea ['eax,', '[ebp+var_1C]']
mov ['[ebp+Dst],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['1']
push ['0']
call ['dword', 'ptr', 'ds:__imp__CreateEventA@16']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_31],', '1']
mov ['[ebp+hObject],', 'eax']
jmp ['short', 'loc_3F1']
mov ['[ebp+Dst],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+20h]']
and ['edx,', '4']
jz ['short', 'loc_405']
mov ['[ebp+nNumberOfBytesToRead],', '1']
jmp ['short', 'loc_40C']
mov ['[ebp+nNumberOfBytesToRead],', '1000h']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['loc_5E4']
cmp ['[ebp+Dst],', '0']
jz ['short', 'loc_44B']
push ['14h']
push ['0']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
cmp ['[ebp+var_31],', '0']
jnz ['short', 'loc_442']
push ['offset', '$LN23']
call ['__RTC_UninitUse']
add ['esp,', '4']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+hObject]']
mov ['[edx+10h],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1024h']
push ['edx']
mov ['eax,', '[ebp+nNumberOfBytesToRead]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '24h']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ReadFile@20']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_49C']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+1028h],', 'eax']
jmp ['short', 'loc_4A9']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+1028h],', '0']
cmp ['[ebp+Dst],', '0']
jz ['loc_534']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_534']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+1028h],', '3E5h']
jnz ['short', 'loc_534']
mov ['esi,', 'esp']
push ['0FFFFFFFFh']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+10h]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__WaitForSingleObject@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1024h']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetOverlappedResult@16']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_527']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+1028h],', 'eax']
jmp ['short', 'loc_534']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+1028h],', '0']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_560']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+1028h],', '6Dh']
jnz ['short', 'loc_553']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+1028h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+1024h],', '0']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_582']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+1024h],', '0']
jnz ['short', 'loc_582']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+20h]']
and ['edx,', '2']
jz ['short', 'loc_582']
jmp ['loc_40C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetEvent@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+1024h],', '0']
jnz ['short', 'loc_5A6']
jmp ['short', 'loc_5E4']
mov ['esi,', 'esp']
push ['0FFFFFFFFh']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__WaitForSingleObject@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+10h],', '0']
jz ['short', 'loc_5DF']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetEvent@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_5E4']
jmp ['loc_40C']
cmp ['[ebp+Dst],', '0']
jz ['short', 'loc_610']
cmp ['[ebp+var_31],', '0']
jnz ['short', 'loc_5FD']
push ['offset', '$LN23']
call ['__RTC_UninitUse']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+hObject]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__CloseHandle@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN27']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
_handle_cmp_evtomain proc near          
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+8]']
cmp ['ecx,', '[eax+8]']
jnb ['short', 'loc_68D']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_6A6']
jmp ['short', 'loc_6A6']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+8]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_6A4']
mov ['eax,', '1']
jmp ['short', 'loc_6A6']
jmp ['short', 'loc_6A6']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_handle_output_new proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+ThreadId],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
push ['1034h']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'edx']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
push ['0']
call ['dword', 'ptr', 'ds:__imp__CreateEventA@16']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
push ['0']
call ['dword', 'ptr', 'ds:__imp__CreateEventA@16']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+10h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+20h],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '38h']
push ['eax']
call ['_bufchain_init']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+44h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+48h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_C]']
mov ['[ecx+24h],', 'edx']
cmp ['ds:_handles_by_evtomain,', '0']
jnz ['short', 'loc_7A5']
push ['offset', '_handle_cmp_evtomain']
call ['_newtree234']
add ['esp,', '4']
mov ['ds:_handles_by_evtomain,', 'eax']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', 'ds:_handles_by_evtomain']
push ['ecx']
call ['_add234']
add ['esp,', '8']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+ThreadId]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
push ['eax']
push ['offset', '_handle_output_threadfunc@4']
push ['0']
push ['0']
call ['dword', 'ptr', 'ds:__imp__CreateThread@24']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_handle_output_threadfunc@4 proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_2D],', '0']
mov ['eax,', '[ebp+lpThreadParameter]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+20h]']
and ['edx,', '1']
jz ['short', 'loc_87A']
lea ['eax,', '[ebp+var_1C]']
mov ['[ebp+Dst],', 'eax']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['1']
push ['0']
call ['dword', 'ptr', 'ds:__imp__CreateEventA@16']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2D],', '1']
mov ['[ebp+hObject],', 'eax']
jmp ['short', 'loc_881']
mov ['[ebp+Dst],', '0']
mov ['ecx,', '1']
test ['ecx,', 'ecx']
jz ['loc_9E5']
mov ['esi,', 'esp']
push ['0FFFFFFFFh']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__WaitForSingleObject@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
jz ['short', 'loc_8CA']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetEvent@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_9E5']
cmp ['[ebp+Dst],', '0']
jz ['short', 'loc_8FC']
push ['14h']
push ['0']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
cmp ['[ebp+var_2D],', '0']
jnz ['short', 'loc_8F3']
push ['offset', '$LN17']
call ['__RTC_UninitUse']
add ['esp,', '4']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+hObject]']
mov ['[edx+10h],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '2Ch']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+24h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__WriteFile@20']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_94A']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+30h],', 'eax']
jmp ['short', 'loc_954']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+30h],', '0']
cmp ['[ebp+Dst],', '0']
jz ['short', 'loc_9C2']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_9C2']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['eax,', '3E5h']
jnz ['short', 'loc_9C2']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '2Ch']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetOverlappedResult@16']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_9B8']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+30h],', 'eax']
jmp ['short', 'loc_9C2']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+30h],', '0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetEvent@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_9E0']
jmp ['short', 'loc_9E5']
jmp ['loc_881']
cmp ['[ebp+Dst],', '0']
jz ['short', 'loc_A11']
cmp ['[ebp+var_2D],', '0']
jnz ['short', 'loc_9FE']
push ['offset', '$LN17']
call ['__RTC_UninitUse']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+hObject]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__CloseHandle@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
_handle_add_foreign_event proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['1034h']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '2']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+18h],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+20h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+24h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_8]']
mov ['[edx+28h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+1Ch],', '1']
cmp ['ds:_handles_by_evtomain,', '0']
jnz ['short', 'loc_AFA']
push ['offset', '_handle_cmp_evtomain']
call ['_newtree234']
add ['esp,', '4']
mov ['ds:_handles_by_evtomain,', 'eax']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', 'ds:_handles_by_evtomain']
push ['eax']
call ['_add234']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_handle_write   proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jz ['short', 'loc_B4A']
push ['1E9h']
push ['offset', '$SG85795']
push ['offset', '$SG85796']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+44h],', '0']
jz ['short', 'loc_B6A']
push ['1EAh']
push ['offset', '$SG85798']
push ['offset', '$SG85799']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '38h']
push ['eax']
call ['_bufchain_add']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
push ['ecx']
call ['_handle_try_output']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '38h']
push ['edx']
call ['_bufchain_size']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_handle_try_output proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jnz ['short', 'loc_C2D']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '34h']
push ['ecx']
call ['_bufchain_size']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_C2D']
lea ['edx,', '[ebp+var_14]']
push ['edx']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '34h']
push ['ecx']
call ['_bufchain_prefix']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+24h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+28h],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetEvent@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+18h],', '1']
jmp ['short', 'loc_C7A']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jnz ['short', 'loc_C7A']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '34h']
push ['ecx']
call ['_bufchain_size']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_C7A']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+40h],', '1']
jnz ['short', 'loc_C7A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__CloseHandle@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+40h],', '2']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_handle_write_eof proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jz ['short', 'loc_CFA']
push ['1F9h']
push ['offset', '$SG85804']
push ['offset', '$SG85805']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
xor ['eax,', 'eax']
cmp ['dword', 'ptr', '[edx+44h],', '0']
setz ['al']
test ['eax,', 'eax']
jnz ['short', 'loc_D23']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+44h],', '1']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '4']
push ['edx']
call ['_handle_try_output']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_handle_get_events proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_10],', 'eax']
cmp ['ds:_handles_by_evtomain,', '0']
jz ['short', 'loc_DE5']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_D81']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', 'ds:_handles_by_evtomain']
push ['eax']
call ['_index234']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_DE5']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+1Ch],', '0']
jz ['short', 'loc_DE3']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_14]']
jl ['short', 'loc_DCB']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '20h']
mov ['[ebp+var_14],', 'eax']
push ['4']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_saferealloc']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['edx,', '[edx+8]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_D78']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_handle_free    proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_E1B']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_E32']
push ['22Eh']
push ['offset', '$SG85835']
push ['offset', '$SG85836']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+1Ch],', '0']
jz ['short', 'loc_E47']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+10h],', '1']
jmp ['short', 'loc_E92']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+18h],', '0']
jz ['short', 'loc_E5E']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_handle_destroy']
add ['esp,', '4']
jmp ['short', 'loc_E92']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+10h],', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+14h],', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+1Ch],', '1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetEvent@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_handle_destroy proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jnz ['short', 'loc_EC3']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '38h']
push ['ecx']
call ['_bufchain_clear']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__CloseHandle@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__CloseHandle@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', 'ds:_handles_by_evtomain']
push ['ecx']
call ['_del234']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_handle_got_event proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['ds:_handles_by_evtomain,', '0']
jnz ['short', 'loc_F54']
push ['24Ch']
push ['offset', '$SG85846']
push ['offset', '$SG85847']
call ['__wassert']
add ['esp,', '0Ch']
push ['offset', '_handle_find_evtomain']
lea ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', 'ds:_handles_by_evtomain']
push ['edx']
call ['_find234']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_F7A']
jmp ['loc_112C']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_FC9']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+14h],', '0']
jz ['short', 'loc_F9A']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_handle_destroy']
add ['esp,', '4']
jmp ['short', 'loc_FC4']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+14h],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+1Ch],', '1']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetEvent@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_112C']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_FF0']
cmp ['[ebp+var_C],', '1']
jz ['loc_1082']
cmp ['[ebp+var_C],', '2']
jz ['loc_1111']
jmp ['loc_112C']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+1028h],', '0']
jnz ['short', 'loc_103B']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+18h],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+102Ch]']
neg ['ecx']
mov ['esi,', 'esp']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1030h]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_107D']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1028h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1030h]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
push ['eax']
call ['_handle_throttle']
add ['esp,', '8']
jmp ['loc_112C']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+1Ch],', '0']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+34h],', '0']
jz ['short', 'loc_10C2']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+18h],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+34h]']
neg ['edx']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+48h]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_110F']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+30h]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '38h']
push ['edx']
call ['_bufchain_consume']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '38h']
push ['eax']
call ['_bufchain_size']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+48h]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
push ['ecx']
call ['_handle_try_output']
add ['esp,', '4']
jmp ['short', 'loc_112C']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+28h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+24h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_handle_throttle proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jz ['short', 'loc_1157']
jmp ['short', 'loc_118B']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+18h],', '0']
jz ['short', 'loc_1162']
jmp ['short', 'loc_118B']
cmp ['[ebp+arg_4],', '8000h']
jge ['short', 'loc_118B']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetEvent@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+18h],', '1']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_handle_find_evtomain proc near         
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx]']
cmp ['ecx,', '[eax+8]']
jnb ['short', 'loc_11CC']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_11E4']
jmp ['short', 'loc_11E4']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_11E2']
mov ['eax,', '1']
jmp ['short', 'loc_11E4']
jmp ['short', 'loc_11E4']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_handle_unthrottle proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_120A']
push ['2A0h']
push ['offset', '$SG85871']
push ['offset', '$SG85872']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
push ['eax']
call ['_handle_throttle']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_handle_backlog proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '1']
jz ['short', 'loc_124A']
push ['2A6h']
push ['offset', '$SG85877']
push ['offset', '$SG85878']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '38h']
push ['edx']
call ['_bufchain_size']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_handle_get_privdata proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+20h]']
pop ['ebp']
retn
endp

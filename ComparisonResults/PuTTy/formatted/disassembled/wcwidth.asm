_mk_wcwidth     proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_968']
xor ['eax,', 'eax']
jmp ['loc_A9F']
cmp ['[ebp+arg_0],', '20h']
jb ['short', 'loc_97D']
cmp ['[ebp+arg_0],', '7Fh']
jb ['short', 'loc_985']
cmp ['[ebp+arg_0],', '0A0h']
jnb ['short', 'loc_985']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_A9F']
push ['8Dh']
push ['offset', '?combining@?1??mk_wcwidth@@9@9']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_bisearch']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_9A6']
xor ['eax,', 'eax']
jmp ['loc_A9F']
cmp ['[ebp+arg_0],', '1100h']
jb ['loc_A92']
cmp ['[ebp+arg_0],', '115Fh']
jbe ['loc_A89']
cmp ['[ebp+arg_0],', '2329h']
jz ['loc_A89']
cmp ['[ebp+arg_0],', '232Ah']
jz ['loc_A89']
cmp ['[ebp+arg_0],', '2E80h']
jb ['short', 'loc_9F9']
cmp ['[ebp+arg_0],', '0A4CFh']
ja ['short', 'loc_9F9']
cmp ['[ebp+arg_0],', '303Fh']
jnz ['loc_A89']
cmp ['[ebp+arg_0],', '0AC00h']
jb ['short', 'loc_A0B']
cmp ['[ebp+arg_0],', '0D7A3h']
jbe ['short', 'loc_A89']
cmp ['[ebp+arg_0],', '0F900h']
jb ['short', 'loc_A1D']
cmp ['[ebp+arg_0],', '0FAFFh']
jbe ['short', 'loc_A89']
cmp ['[ebp+arg_0],', '0FE10h']
jb ['short', 'loc_A2F']
cmp ['[ebp+arg_0],', '0FE19h']
jbe ['short', 'loc_A89']
cmp ['[ebp+arg_0],', '0FE30h']
jb ['short', 'loc_A41']
cmp ['[ebp+arg_0],', '0FE6Fh']
jbe ['short', 'loc_A89']
cmp ['[ebp+arg_0],', '0FF00h']
jb ['short', 'loc_A53']
cmp ['[ebp+arg_0],', '0FF60h']
jbe ['short', 'loc_A89']
cmp ['[ebp+arg_0],', '0FFE0h']
jb ['short', 'loc_A65']
cmp ['[ebp+arg_0],', '0FFE6h']
jbe ['short', 'loc_A89']
cmp ['[ebp+arg_0],', '20000h']
jb ['short', 'loc_A77']
cmp ['[ebp+arg_0],', '2FFFDh']
jbe ['short', 'loc_A89']
cmp ['[ebp+arg_0],', '30000h']
jb ['short', 'loc_A92']
cmp ['[ebp+arg_0],', '3FFFDh']
ja ['short', 'loc_A92']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_A99']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_bisearch       proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax]']
jb ['short', 'loc_AE4']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+edx*8+4]']
jbe ['short', 'loc_AE8']
xor ['eax,', 'eax']
jmp ['short', 'loc_B3C']
mov ['edx,', '[ebp+arg_8]']
cmp ['edx,', '[ebp+var_4]']
jl ['short', 'loc_B3A']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+arg_8]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx+eax*8+4]']
jbe ['short', 'loc_B18']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_B38']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[edx+ecx*8]']
jnb ['short', 'loc_B31']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+arg_8],', 'ecx']
jmp ['short', 'loc_B38']
mov ['eax,', '1']
jmp ['short', 'loc_B3C']
jmp ['short', 'loc_AE8']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_mk_wcswidth    proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_B6D']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_BC4']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
test ['edx,', 'edx']
jbe ['short', 'loc_B8E']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_B95']
mov ['[ebp+var_C],', '0']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_BC4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_mk_wcwidth']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jge ['short', 'loc_BB9']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_BC7']
jmp ['short', 'loc_BC2']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_B64']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_mk_wcwidth_cjk proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['9Bh']
push ['offset', '?ambiguous@?1??mk_wcwidth_cjk@@9@9']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_bisearch']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_C04']
mov ['eax,', '2']
jmp ['short', 'loc_C10']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_mk_wcwidth']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_mk_wcswidth_cjk proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_C4D']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_CA4']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
test ['edx,', 'edx']
jbe ['short', 'loc_C6E']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_C75']
mov ['[ebp+var_C],', '0']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_CA4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_mk_wcwidth_cjk']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jge ['short', 'loc_C99']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_CA7']
jmp ['short', 'loc_CA2']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_C44']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

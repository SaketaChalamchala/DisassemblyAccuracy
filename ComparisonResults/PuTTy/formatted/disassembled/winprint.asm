_printer_start_enum proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
push ['0Ch']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
push ['1']
push ['200h']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['dword', 'ptr', 'ds:_osVersion+10h,', '2']
jz ['short', 'loc_80']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '5']
jmp ['short', 'loc_8A']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
push ['eax']
push ['6']
call ['_printer_add_enum']
add ['esp,', '14h']
test ['eax,', 'eax']
jnz ['short', 'loc_AB']
jmp ['short', '$error$85581']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '4']
jz ['short', 'loc_C2']
cmp ['[ebp+var_14],', '5']
jz ['short', 'loc_CD']
jmp ['short', 'loc_D6']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+8],', 'ecx']
jmp ['short', 'loc_D6']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_108']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_printer_add_enum proc near             
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+pcReturned],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+pcbNeeded],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+pcbNeeded],', '0']
mov ['[ebp+pcReturned],', '0']
push ['1']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '200h']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_saferealloc']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
lea ['edx,', '[ebp+pcReturned]']
push ['edx']
lea ['eax,', '[ebp+pcbNeeded]']
push ['eax']
push ['200h']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
add ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+Level]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+Flags]']
push ['ecx']
call ['_EnumPrintersA@28']
cmp ['[ebp+pcbNeeded],', '200h']
jnb ['short', 'loc_1CE']
mov ['[ebp+pcbNeeded],', '200h']
push ['1']
mov ['edx,', '[ebp+arg_C]']
add ['edx,', '[ebp+pcbNeeded]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_saferealloc']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'eax']
lea ['eax,', '[ebp+pcReturned]']
push ['eax']
lea ['ecx,', '[ebp+pcbNeeded]']
push ['ecx']
mov ['edx,', '[ebp+pcbNeeded]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+Level]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+Flags]']
push ['eax']
call ['_EnumPrintersA@28']
test ['eax,', 'eax']
jnz ['short', 'loc_216']
xor ['eax,', 'eax']
jmp ['short', 'loc_228']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
add ['edx,', '[ebp+pcReturned]']
mov ['eax,', '[ebp+arg_10]']
mov ['[eax],', 'edx']
mov ['eax,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_printer_get_name proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_295']
xor ['eax,', 'eax']
jmp ['short', 'loc_2E4']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_2A5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax]']
jl ['short', 'loc_2A9']
xor ['eax,', 'eax']
jmp ['short', 'loc_2E4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '4']
jz ['short', 'loc_2C0']
cmp ['[ebp+var_4],', '5']
jz ['short', 'loc_2D1']
jmp ['short', 'loc_2E2']
mov ['ecx,', '[ebp+arg_4]']
imul ['ecx,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['eax,', '[ecx+eax]']
jmp ['short', 'loc_2E4']
mov ['ecx,', '[ebp+arg_4]']
imul ['ecx,', '14h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['eax,', '[ecx+eax]']
jmp ['short', 'loc_2E4']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_printer_finish_enum proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_303']
jmp ['short', 'loc_346']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '4']
jz ['short', 'loc_31A']
cmp ['[ebp+var_4],', '5']
jz ['short', 'loc_32B']
jmp ['short', 'loc_33A']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
jmp ['short', 'loc_33A']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_printer_start_job proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['dword', 'ptr', '[ebp+pDocInfo],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+phPrinter],', 'eax']
push ['4']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+phPrinter],', 'eax']
mov ['[ebp+var_1C],', '0']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+phPrinter]']
mov ['dword', 'ptr', '[eax],', '0']
push ['0']
mov ['ecx,', '[ebp+phPrinter]']
push ['ecx']
mov ['edx,', '[ebp+pPrinterName]']
push ['edx']
call ['_OpenPrinterA@12']
test ['eax,', 'eax']
jnz ['short', 'loc_3BE']
jmp ['short', '$error$85631']
mov ['dword', 'ptr', '[ebp+pDocInfo],', 'offset', '$SG85632']
mov ['[ebp+var_10],', '0']
mov ['[ebp+var_C],', 'offset', '$SG85634']
lea ['eax,', '[ebp+pDocInfo]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+phPrinter]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_StartDocPrinterA@12']
test ['eax,', 'eax']
jnz ['short', 'loc_3EA']
jmp ['short', '$error$85631']
mov ['[ebp+var_1C],', '1']
mov ['eax,', '[ebp+phPrinter]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_StartPagePrinter@4']
test ['eax,', 'eax']
jnz ['short', 'loc_402']
jmp ['short', '$error$85631']
mov ['[ebp+var_20],', '1']
mov ['eax,', '[ebp+phPrinter]']
jmp ['short', 'loc_451']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_41F']
mov ['edx,', '[ebp+phPrinter]']
mov ['eax,', '[edx]']
push ['eax']
call ['_EndPagePrinter@4']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_430']
mov ['ecx,', '[ebp+phPrinter]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_EndDocPrinter@4']
mov ['eax,', '[ebp+phPrinter]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_443']
mov ['ecx,', '[ebp+phPrinter]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_ClosePrinter@4']
mov ['eax,', '[ebp+phPrinter]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_printer_job_data proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+pcWritten],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_4B3']
jmp ['short', 'loc_4CA']
lea ['eax,', '[ebp+pcWritten]']
push ['eax']
mov ['ecx,', '[ebp+cbBuf]']
push ['ecx']
mov ['edx,', '[ebp+pBuf]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_WritePrinter@16']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_printer_finish_job proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_51B']
jmp ['short', 'loc_548']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_EndPagePrinter@4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
call ['_EndDocPrinter@4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_ClosePrinter@4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp

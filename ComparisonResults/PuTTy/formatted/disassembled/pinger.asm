_pinger_new     proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['14h']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
push ['6']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_conf_get_int']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_8]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_pinger_schedule']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_pinger_schedule proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_8F']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+4],', '0']
jmp ['short', 'loc_D6']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
push ['offset', '_pinger_timer']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
imul ['ecx,', '3E8h']
push ['ecx']
call ['_schedule_timer']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jz ['short', 'loc_C3']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[eax+8]']
jnb ['short', 'loc_D6']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+4],', '1']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_pinger_timer   proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_14C']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[edx+8]']
jnz ['short', 'loc_14C']
mov ['esi,', 'esp']
push ['0Fh']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+18h]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_pinger_schedule']
add ['esp,', '4']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_pinger_reconfig proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['6']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_conf_get_int']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
push ['6']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_conf_get_int']
add ['esp,', '8']
cmp ['eax,', '[ebp+var_4]']
jz ['short', 'loc_1A3']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_pinger_schedule']
add ['esp,', '4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_pinger_free    proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_expire_timer_context']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp

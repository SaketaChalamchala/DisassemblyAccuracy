_pfd_log        proc near               
push ['ebp']
mov ['ebp,', 'esp']
pop ['ebp']
retn
endp
_pfl_log        proc near               
push ['ebp']
mov ['ebp,', 'esp']
pop ['ebp']
retn
endp
_pfd_closing    proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_CF']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_C1']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_sshfwd_unclean_close']
add ['esp,', '8']
jmp ['short', 'loc_CD']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_pfd_close']
add ['esp,', '4']
jmp ['short', 'loc_E7']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_E7']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_sshfwd_write_eof']
add ['esp,', '4']
mov ['eax,', '1']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_pfl_closing    proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_pfl_terminate']
add ['esp,', '4']
mov ['eax,', '1']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_pfd_receive    proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '50h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '14h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+1Ch],', '0']
jz ['loc_8BF']
mov ['edx,', '[ebp+arg_C]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '1']
mov ['[ebp+arg_C],', 'eax']
cmp ['[ebp+var_50],', '0']
jz ['loc_7DA']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ecx+2Ch]']
cmp ['eax,', '[edx+30h]']
jl ['short', 'loc_1C2']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[ecx+2Ch]']
imul ['eax,', '5']
cdq
and ['edx,', '3']
add ['eax,', 'edx']
sar ['eax,', '2']
add ['eax,', '100h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+30h],', 'eax']
push ['1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
push ['eax']
call ['_saferealloc']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+28h],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+2Ch]']
mov ['ecx,', '[ebp+Src]']
mov ['cl,', '[ecx]']
mov ['[eax+edx],', 'cl']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+2Ch]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+2Ch],', 'eax']
mov ['edx,', '[ebp+Src]']
add ['edx,', '1']
mov ['[ebp+Src],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+1Ch],', '1']
jz ['short', 'loc_209']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+1Ch]']
sar ['edx,', '0Ch']
cmp ['edx,', '4']
jnz ['loc_481']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+28h]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '4']
jnz ['loc_481']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+1Ch],', '1']
jnz ['short', 'loc_22E']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+1Ch],', '4000h']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+2Ch],', '2']
jge ['short', 'loc_23C']
jmp ['loc_160']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+28h]']
movsx ['edx,', 'byte', 'ptr', '[ecx+1]']
cmp ['edx,', '1']
jz ['short', 'loc_29B']
push ['8']
push ['0']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['[ebp+var_13],', '5Bh']
mov ['esi,', 'esp']
push ['8']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_pfd_close']
add ['esp,', '4']
mov ['eax,', '1']
jmp ['loc_914']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+2Ch],', '8']
jg ['short', 'loc_2A9']
jmp ['loc_160']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+2Ch]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+28h]']
movsx ['edx,', 'byte', 'ptr', '[ecx+edx-1]']
test ['edx,', 'edx']
jz ['short', 'loc_2C3']
jmp ['loc_160']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+28h]']
movsx ['edx,', 'byte', 'ptr', '[ecx+4]']
test ['edx,', 'edx']
jnz ['loc_3E2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+28h]']
movsx ['edx,', 'byte', 'ptr', '[ecx+5]']
test ['edx,', 'edx']
jnz ['loc_3E2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+28h]']
movsx ['edx,', 'byte', 'ptr', '[ecx+6]']
test ['edx,', 'edx']
jnz ['loc_3E2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+28h]']
movsx ['edx,', 'byte', 'ptr', '[ecx+7]']
test ['edx,', 'edx']
jz ['loc_3E2']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+1Ch],', '4000h']
jnz ['short', 'loc_330']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+1Ch],', '4001h']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+2Ch],', '8']
jmp ['loc_160']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+28h]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
mov ['byte', 'ptr', '[eax+1],', '5Ah']
mov ['esi,', 'esp']
push ['8']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
sub ['ecx,', '8']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
movzx ['edx,', 'byte', 'ptr', '[eax+3]']
or ['ecx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+24h],', 'ecx']
push ['1']
mov ['ecx,', '[ebp+Size]']
add ['ecx,', '1']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+20h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+Size]']
mov ['byte', 'ptr', '[ecx+edx],', '0']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+28h]']
add ['edx,', '8']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['$connect$87199']
jmp ['loc_481']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+28h]']
mov ['byte', 'ptr', '[edx+1],', '5Ah']
mov ['esi,', 'esp']
push ['8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
movzx ['edx,', 'byte', 'ptr', '[eax+3]']
or ['ecx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+24h],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+28h]']
movzx ['eax,', 'byte', 'ptr', '[edx+7]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+28h]']
movzx ['eax,', 'byte', 'ptr', '[edx+6]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+28h]']
movzx ['eax,', 'byte', 'ptr', '[edx+5]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+28h]']
movzx ['eax,', 'byte', 'ptr', '[edx+4]']
push ['eax']
push ['offset', '$SG87209']
call ['_dupprintf']
add ['esp,', '14h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+20h],', 'eax']
jmp ['$connect$87199']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+1Ch],', '1']
jz ['short', 'loc_49C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
sar ['ecx,', '0Ch']
cmp ['ecx,', '5']
jnz ['loc_7BF']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '5']
jnz ['loc_7BF']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+1Ch],', '1']
jnz ['short', 'loc_4C1']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+1Ch],', '5000h']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+1Ch],', '5000h']
jnz ['loc_587']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+2Ch],', '2']
jge ['short', 'loc_4DF']
jmp ['loc_160']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+28h]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
add ['edx,', '2']
mov ['eax,', '[ebp+var_8]']
cmp ['[eax+2Ch],', 'edx']
jge ['short', 'loc_4F9']
jmp ['loc_160']
mov ['[ebp+var_24],', '0FFh']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_512']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
cmp ['[ebp+var_20],', 'ecx']
jge ['short', 'loc_53E']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
mov ['ecx,', '[ebp+var_20]']
movsx ['edx,', 'byte', 'ptr', '[eax+ecx+2]']
test ['edx,', 'edx']
jnz ['short', 'loc_53C']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_53E']
jmp ['short', 'loc_509']
mov ['[ebp+var_2C],', '5']
mov ['al,', 'byte', 'ptr', '[ebp+var_24]']
mov ['[ebp+var_2B],', 'al']
mov ['esi,', 'esp']
push ['2']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+1Ch],', '5001h']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
jmp ['loc_160']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+1Ch],', '5001h']
jnz ['loc_7BF']
mov ['[ebp+var_4C],', '0']
push ['0Ah']
push ['0']
lea ['edx,', '[ebp+var_40]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['[ebp+var_40],', '5']
mov ['[ebp+var_3D],', '1']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+2Ch],', '6']
jge ['short', 'loc_5C4']
jmp ['loc_160']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+28h]']
movzx ['eax,', 'byte', 'ptr', '[edx+3]']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '1']
jnz ['short', 'loc_5DE']
mov ['[ebp+var_4C],', '4']
cmp ['[ebp+var_48],', '4']
jnz ['short', 'loc_5EB']
mov ['[ebp+var_4C],', '10h']
cmp ['[ebp+var_48],', '3']
jnz ['short', 'loc_601']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+28h]']
movzx ['eax,', 'byte', 'ptr', '[edx+4]']
add ['eax,', '1']
mov ['[ebp+var_4C],', 'eax']
mov ['ecx,', '[ebp+var_4C]']
add ['ecx,', '6']
mov ['edx,', '[ebp+var_8]']
cmp ['[edx+2Ch],', 'ecx']
jge ['short', 'loc_614']
jmp ['loc_160']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+28h]']
movsx ['edx,', 'byte', 'ptr', '[ecx+1]']
cmp ['edx,', '1']
jnz ['short', 'loc_631']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+28h]']
movsx ['edx,', 'byte', 'ptr', '[ecx+2]']
test ['edx,', 'edx']
jz ['short', 'loc_671']
mov ['[ebp+var_3F],', '1']
mov ['esi,', 'esp']
push ['0Ah']
lea ['eax,', '[ebp+var_40]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_pfd_close']
add ['esp,', '4']
mov ['eax,', '1']
jmp ['loc_914']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
mov ['ecx,', '[ebp+var_4C]']
movzx ['edx,', 'byte', 'ptr', '[eax+ecx+4]']
shl ['edx,', '8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+28h]']
mov ['eax,', '[ebp+var_4C]']
movzx ['ecx,', 'byte', 'ptr', '[ecx+eax+5]']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+24h],', 'edx']
cmp ['[ebp+var_48],', '1']
jnz ['short', 'loc_70D']
mov ['esi,', 'esp']
push ['0Ah']
lea ['ecx,', '[ebp+var_40]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
movzx ['ecx,', 'byte', 'ptr', '[eax+7]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
movzx ['ecx,', 'byte', 'ptr', '[eax+6]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
movzx ['ecx,', 'byte', 'ptr', '[eax+5]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4]']
push ['ecx']
push ['offset', '$SG87249']
call ['_dupprintf']
add ['esp,', '14h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+20h],', 'eax']
jmp ['$connect$87199']
jmp ['loc_7BF']
cmp ['[ebp+var_48],', '3']
jnz ['short', 'loc_77F']
mov ['esi,', 'esp']
push ['0Ah']
lea ['eax,', '[ebp+var_40]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['1']
mov ['ecx,', '[ebp+var_4C]']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+20h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+var_4C]']
mov ['byte', 'ptr', '[edx+ecx-1],', '0']
mov ['eax,', '[ebp+var_4C]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+28h]']
add ['edx,', '5']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['short', '$connect$87199']
jmp ['short', 'loc_7BF']
mov ['[ebp+var_3F],', '8']
mov ['esi,', 'esp']
push ['0Ah']
lea ['edx,', '[ebp+var_40]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_pfd_close']
add ['esp,', '4']
mov ['eax,', '1']
jmp ['loc_914']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_pfd_close']
add ['esp,', '4']
mov ['eax,', '1']
jmp ['loc_914']
jmp ['loc_160']
mov ['eax,', '1']
jmp ['loc_914']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+28h],', '0']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_new_sock_channel']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_859']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_pfd_close']
add ['esp,', '4']
mov ['eax,', '1']
jmp ['loc_914']
jmp ['short', 'loc_87B']
push ['offset', '$SG87261']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+24h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+20h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_ssh_send_port_open']
add ['esp,', '10h']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+1Ch],', '0']
cmp ['[ebp+arg_C],', '0']
jle ['short', 'loc_8BF']
push ['1']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+34h],', 'eax']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+34h]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[eax+38h],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+18h],', '0']
jz ['short', 'loc_90F']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_sshfwd_write']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jle ['short', 'loc_90F']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+10h],', '1']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN56']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_pfd_sent       proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_9A9']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_sshfwd_unthrottle']
add ['esp,', '8']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_pfd_connect    proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
lea ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_name_lookup']
add ['esp,', '14h']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_sk_addr_error']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_A43']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_dupstr']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_sk_addr_free']
add ['esp,', '4']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_1C]']
jmp ['loc_B43']
call ['_new_portfwd_state']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['dword', 'ptr', '[ecx],', 'offset', '?fn_table@?1??pfd_connect@@9@9']
mov ['edx,', '[ebp+var_18]']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['ecx,', '[ebp+var_18]']
mov ['dword', 'ptr', '[ecx+18h],', '1']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+arg_C]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['edx,', '[ebp+var_18]']
mov ['dword', 'ptr', '[edx+1Ch],', '0']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
push ['0']
push ['0']
push ['1']
push ['0']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_new_connection']
add ['esp,', '24h']
mov ['edx,', '[ebp+var_18]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_B41']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_dupstr']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['_free_portfwd_state']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_B43']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_new_portfwd_state proc near            
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['3Ch']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+28h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+30h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+34h],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_free_portfwd_state proc near           
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_BF7']
jmp ['short', 'loc_C30']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_pfl_accepting  proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
call ['_new_portfwd_state']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', 'offset', '?fn_table@?1??pfl_accepting@@9@9']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['[eax+8],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['[ebp+arg_4]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+0Ch],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_CE1']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_free_portfwd_state']
add ['esp,', '4']
xor ['eax,', 'eax']
cmp ['[ebp+var_10],', '0']
setnz ['al']
jmp ['loc_DC3']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+18h],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_D3D']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+1Ch],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+24h],', '0']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_DC1']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+1Ch],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
push ['eax']
call ['_dupstr']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+20h],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
mov ['[edx+24h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_new_sock_channel']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_D9F']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_free_portfwd_state']
add ['esp,', '4']
mov ['eax,', '1']
jmp ['short', 'loc_DC3']
jmp ['short', 'loc_DC1']
push ['offset', '$SG87332']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+24h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+20h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_ssh_send_port_open']
add ['esp,', '10h']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_pfl_listen     proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
call ['_new_portlistener_state']
mov ['ecx,', '[ebp+arg_18]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_18]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx],', 'offset', '?fn_table@?1??pfl_listen@@9@9']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_E40']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_dupstr']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+14h],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
jmp ['short', 'loc_E4A']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+0Ch],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_10]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+arg_1C]']
push ['edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
push ['94h']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
call ['_conf_get_int']
add ['esp,', '8']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
push ['eax']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_new_listener']
add ['esp,', '18h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+8],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_F00']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_dupstr']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_free_portlistener_state']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_F02']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_new_portlistener_state proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['18h']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_free_portlistener_state proc near      
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_F67']
jmp ['short', 'loc_F82']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_pfd_close      proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_F98']
jmp ['short', 'loc_FC4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_free_portfwd_state']
add ['esp,', '4']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_pfl_terminate  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_FE8']
jmp ['short', 'loc_1014']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_free_portlistener_state']
add ['esp,', '4']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_pfd_unthrottle proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_1040']
jmp ['short', 'loc_1090']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
jnz ['short', 'loc_1065']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+14h],', '0']
jnz ['short', 'loc_1065']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_106C']
mov ['[ebp+var_4],', '1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_pfd_override_throttle proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_10C0']
jmp ['short', 'loc_110F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+14h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+10h],', '0']
jnz ['short', 'loc_10E4']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jnz ['short', 'loc_10E4']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_10EB']
mov ['[ebp+var_4],', '1']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_pfd_send       proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_113A']
xor ['eax,', 'eax']
jmp ['short', 'loc_1162']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_pfd_send_eof   proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_pfd_confirm    proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_11AB']
jmp ['loc_123A']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+18h],', '1']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+34h],', '0']
jz ['short', 'loc_123A']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+38h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_sshfwd_write']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+34h]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+34h],', '0']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp

_telnet_log     proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '114h']
push ['edi']
lea ['edi,', '[ebp+var_114]']
mov ['ecx,', '45h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
push ['100h']
lea ['ecx,', '[ebp+var_10C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_sk_getaddr']
add ['esp,', '0Ch']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_712']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_10C]']
push ['ecx']
push ['offset', '$SG86089']
call ['_dupprintf']
add ['esp,', '0Ch']
mov ['[ebp+var_114],', 'eax']
jmp ['short', 'loc_730']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
lea ['eax,', '[ebp+var_10C]']
push ['eax']
push ['offset', '$SG86091']
call ['_dupprintf']
add ['esp,', '0Ch']
mov ['[ebp+var_114],', 'eax']
mov ['ecx,', '[ebp+var_114]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_logevent']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_114]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '114h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_telnet_closing proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_80C']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '0']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_7FD']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_notify_remote_exit']
add ['esp,', '4']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_83D']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_logevent']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['offset', '$SG86108']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_connection_fatal']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_telnet_receive proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_879']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+54h],', '1']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_do_telnet_read']
add ['esp,', '0Ch']
mov ['eax,', '1']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_do_telnet_read proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '1']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+var_14],', '0']
jz ['loc_C2D']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+68h]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '9']
ja ['loc_C28']
mov ['ecx,', '[ebp+var_18]']
jmp ['ds:$LN52[ecx*4]']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_940']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+68h],', '9']
jnz ['short', 'loc_940']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+68h],', '0']
jmp ['loc_9E2']
cmp ['[ebp+var_10],', '0FFh']
jnz ['short', 'loc_958']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+68h],', '1']
jmp ['loc_9E2']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+54h],', '0']
jnz ['short', 'loc_9A4']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_C]']
jl ['short', 'loc_98A']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '100h']
mov ['[ebp+var_C],', 'ecx']
push ['1']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_saferealloc']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_10]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_961']
jmp ['short', 'loc_9B7']
cmp ['[ebp+var_10],', '0F2h']
jnz ['short', 'loc_9B7']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+54h],', '0']
cmp ['[ebp+var_10],', '0Dh']
jnz ['short', 'loc_9D8']
mov ['eax,', 'ds:dword_5D4']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+eax*4+1Ch],', '1']
jz ['short', 'loc_9D8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+68h],', '9']
jmp ['short', 'loc_9E2']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+68h],', '0']
jmp ['loc_C28']
cmp ['[ebp+var_10],', '0FDh']
jnz ['short', 'loc_9FF']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+68h],', '4']
jmp ['loc_ACE']
cmp ['[ebp+var_10],', '0FEh']
jnz ['short', 'loc_A17']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+68h],', '5']
jmp ['loc_ACE']
cmp ['[ebp+var_10],', '0FBh']
jnz ['short', 'loc_A2F']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+68h],', '2']
jmp ['loc_ACE']
cmp ['[ebp+var_10],', '0FCh']
jnz ['short', 'loc_A47']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+68h],', '3']
jmp ['loc_ACE']
cmp ['[ebp+var_10],', '0FAh']
jnz ['short', 'loc_A5C']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+68h],', '6']
jmp ['short', 'loc_ACE']
cmp ['[ebp+var_10],', '0F2h']
jnz ['short', 'loc_A7B']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+54h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+68h],', '0']
jmp ['short', 'loc_ACE']
cmp ['[ebp+var_10],', '0FFh']
jnz ['short', 'loc_AC4']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+var_C]']
jl ['short', 'loc_AAC']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '100h']
mov ['[ebp+var_C],', 'eax']
push ['1']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_saferealloc']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_10]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
xor ['eax,', 'eax']
jnz ['short', 'loc_A84']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+68h],', '0']
jmp ['loc_C28']
mov ['edx,', '[ebp+var_10]']
push ['edx']
push ['0FBh']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_proc_rec_opt']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+68h],', '0']
jmp ['loc_C28']
mov ['edx,', '[ebp+var_10]']
push ['edx']
push ['0FCh']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_proc_rec_opt']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+68h],', '0']
jmp ['loc_C28']
mov ['edx,', '[ebp+var_10]']
push ['edx']
push ['0FDh']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_proc_rec_opt']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+68h],', '0']
jmp ['loc_C28']
mov ['edx,', '[ebp+var_10]']
push ['edx']
push ['0FEh']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_proc_rec_opt']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+68h],', '0']
jmp ['loc_C28']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx+58h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+5Ch],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+68h],', '7']
jmp ['loc_C28']
cmp ['[ebp+var_10],', '0FFh']
jnz ['short', '$subneg_addchar$86061']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+68h],', '8']
jmp ['short', 'loc_C03']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+5Ch]']
cmp ['eax,', '[edx+64h]']
jl ['short', 'loc_BD8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+64h]']
add ['edx,', '400h']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+64h],', 'edx']
push ['1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+64h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+60h]']
push ['ecx']
call ['_saferealloc']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+60h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+60h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+5Ch]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_10]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+5Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+5Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+68h],', '7']
jmp ['short', 'loc_C28']
cmp ['[ebp+var_10],', '0F0h']
jz ['short', 'loc_C12']
jmp ['short', '$subneg_addchar$86061']
jmp ['short', 'loc_C28']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_process_subneg']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+68h],', '0']
jmp ['loc_8DA']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_C47']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_c_write']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_c_write        proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_from_backend']
add ['esp,', '10h']
mov ['[ebp+var_4],', 'eax']
xor ['ecx,', 'ecx']
cmp ['[ebp+var_4],', '1000h']
setnle ['cl']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_proc_rec_opt   proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '$SG85875']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_log_option']
add ['esp,', '10h']
mov ['[ebp+var_4],', 'offset', '_opts']
jmp ['short', 'loc_D4E']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['loc_EE0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+10h]']
cmp ['ecx,', '[ebp+arg_8]']
jnz ['loc_E30']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
cmp ['ecx,', '[ebp+arg_4]']
jnz ['loc_E30']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx*4+1Ch]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_DA5']
cmp ['[ebp+var_8],', '2']
jz ['short', 'loc_DCE']
cmp ['[ebp+var_8],', '3']
jz ['short', 'loc_E0D']
jmp ['loc_E26']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+14h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+eax*4+1Ch],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_activate_option']
add ['esp,', '8']
jmp ['short', 'loc_E26']
jmp ['short', 'loc_E26']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+ecx*4+1Ch],', '1']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_send_opt']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_activate_option']
add ['esp,', '8']
jmp ['short', 'loc_E26']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_send_opt']
add ['esp,', '0Ch']
jmp ['loc_F16']
jmp ['loc_EDB']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
cmp ['eax,', '[ebp+arg_8]']
jnz ['loc_EDB']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+0Ch]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['loc_EDB']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+14h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4+1Ch]']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_E72']
cmp ['[ebp+var_C],', '1']
jz ['short', 'loc_E99']
jmp ['short', 'loc_ED9']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+14h]']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+edx*4+1Ch],', '2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_refused_option']
add ['esp,', '8']
jmp ['short', 'loc_ED9']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+14h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+eax*4+1Ch],', '2']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_send_opt']
add ['esp,', '0Ch']
push ['0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_option_side_effects']
add ['esp,', '0Ch']
jmp ['short', 'loc_F16']
jmp ['loc_D45']
cmp ['[ebp+arg_4],', '0FBh']
jz ['short', 'loc_EF2']
cmp ['[ebp+arg_4],', '0FDh']
jnz ['short', 'loc_F16']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
xor ['edx,', 'edx']
cmp ['[ebp+arg_4],', '0FBh']
setz ['dl']
lea ['edx,', '[edx+edx+0FCh]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_send_opt']
add ['esp,', '0Ch']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_log_option     proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_8],', '0FBh']
jnz ['short', 'loc_F54']
mov ['[ebp+var_8],', 'offset', '$SG85808']
jmp ['short', 'loc_FA3']
cmp ['[ebp+arg_8],', '0FCh']
jnz ['short', 'loc_F66']
mov ['[ebp+var_C],', 'offset', '$SG85809']
jmp ['short', 'loc_F9D']
cmp ['[ebp+arg_8],', '0FDh']
jnz ['short', 'loc_F78']
mov ['[ebp+var_10],', 'offset', '$SG85810']
jmp ['short', 'loc_F97']
cmp ['[ebp+arg_8],', '0FEh']
jnz ['short', 'loc_F8A']
mov ['[ebp+var_14],', 'offset', '$SG85811']
jmp ['short', 'loc_F91']
mov ['[ebp+var_14],', 'offset', '$SG85812']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_telopt']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['offset', '$SG85813']
call ['_dupprintf']
add ['esp,', '10h']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_logevent']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_telopt         proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0FFh']
jg ['short', 'loc_103D']
cmp ['[ebp+var_4],', '0FFh']
jz ['loc_1221']
cmp ['[ebp+var_4],', '8Ch']
ja ['$LN1']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'ds:$LN61[ecx]']
jmp ['ds:$LN62[edx*4]']
jmp ['$LN1']
mov ['eax,', 'offset', '$SG85602']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85604']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85606']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85608']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85610']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85612']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85614']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85616']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85618']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85620']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85622']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85624']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85626']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85628']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85630']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85632']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85634']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85636']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85638']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85640']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85642']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85644']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85646']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85648']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85650']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85652']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85654']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85656']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85658']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85660']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85662']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85664']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85666']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85668']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85670']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85672']
jmp ['loc_122D']
mov ['eax,', 'offset', '$SG85674']
jmp ['short', 'loc_122D']
mov ['eax,', 'offset', '$SG85676']
jmp ['short', 'loc_122D']
mov ['eax,', 'offset', '$SG85678']
jmp ['short', 'loc_122D']
mov ['eax,', 'offset', '$SG85680']
jmp ['short', 'loc_122D']
mov ['eax,', 'offset', '$SG85682']
jmp ['short', 'loc_122D']
mov ['eax,', 'offset', '$SG85684']
jmp ['short', 'loc_122D']
mov ['eax,', 'offset', '$SG85686']
jmp ['short', 'loc_122D']
mov ['eax,', 'offset', '$SG85688']
jmp ['short', 'loc_122D']
mov ['eax,', 'offset', '$SG85690']
jmp ['short', 'loc_122D']
mov ['eax,', 'offset', '$SG85692']
jmp ['short', 'loc_122D']
mov ['eax,', 'offset', '$SG85694']
jmp ['short', 'loc_122D']
mov ['eax,', 'offset', '$SG85696']
jmp ['short', 'loc_122D']
mov ['eax,', 'offset', '$SG85698']
jmp ['short', 'loc_122D']
mov ['eax,', 'offset', '$SG85700']
jmp ['short', 'loc_122D']
mov ['eax,', 'offset', '$SG85702']
jmp ['short', 'loc_122D']
mov ['eax,', 'offset', '$SG85704']
jmp ['short', 'loc_122D']
mov ['eax,', 'offset', '$SG85706']
jmp ['short', 'loc_122D']
mov ['eax,', 'offset', '$SG85708']
jmp ['short', 'loc_122D']
mov ['eax,', 'offset', '$SG85710']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_send_opt       proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['byte', 'ptr', '[ebp+var_8],', '0FFh']
mov ['al,', 'byte', 'ptr', '[ebp+arg_4]']
mov ['byte', 'ptr', '[ebp+var_8+1],', 'al']
mov ['cl,', 'byte', 'ptr', '[ebp+arg_8]']
mov ['byte', 'ptr', '[ebp+var_8+2],', 'cl']
mov ['esi,', 'esp']
push ['3']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+50h],', 'eax']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['offset', '$SG85824']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_log_option']
add ['esp,', '10h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_option_side_effects proc near          
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+10h],', '1']
jnz ['short', 'loc_1480']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx],', '0FDh']
jnz ['short', 'loc_1480']
xor ['edx,', 'edx']
cmp ['[ebp+arg_8],', '0']
setz ['dl']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+44h],', 'edx']
jmp ['short', 'loc_14A3']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+10h],', '3']
jnz ['short', 'loc_14A3']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx],', '0FDh']
jnz ['short', 'loc_14A3']
xor ['eax,', 'eax']
cmp ['[ebp+arg_8],', '0']
setz ['al']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+48h],', 'eax']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+10h],', '0']
jz ['short', 'loc_14C1']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_ldisc_send']
add ['esp,', '10h']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+4Ch],', '0']
jnz ['loc_1585']
mov ['eax,', 'ds:dword_564']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+eax*4+1Ch],', '2']
jnz ['short', 'loc_1508']
mov ['edx,', 'ds:dword_564']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+edx*4+1Ch],', '0']
mov ['ecx,', 'ds:dword_560']
push ['ecx']
mov ['edx,', 'ds:_o_echo']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_send_opt']
add ['esp,', '0Ch']
mov ['ecx,', 'ds:dword_580']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+ecx*4+1Ch],', '2']
jnz ['short', 'loc_1541']
mov ['eax,', 'ds:dword_580']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+eax*4+1Ch],', '0']
mov ['edx,', 'ds:dword_57C']
push ['edx']
mov ['eax,', 'ds:_o_we_sga']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_send_opt']
add ['esp,', '0Ch']
mov ['edx,', 'ds:dword_59C']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+edx*4+1Ch],', '2']
jnz ['short', 'loc_157B']
mov ['ecx,', 'ds:dword_59C']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+ecx*4+1Ch],', '0']
mov ['eax,', 'ds:dword_598']
push ['eax']
mov ['ecx,', 'ds:_o_they_sga']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_send_opt']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4Ch],', '1']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_activate_option proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0FBh']
jnz ['short', 'loc_15D1']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+10h],', '1Fh']
jnz ['short', 'loc_15D1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_telnet_size']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx],', '0FBh']
jnz ['short', 'loc_1617']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+10h],', '27h']
jz ['short', 'loc_15EE']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+10h],', '24h']
jnz ['short', 'loc_1617']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+10h],', '27h']
jnz ['short', 'loc_1600']
mov ['[ebp+var_4],', 'offset', '_o_oenv']
jmp ['short', 'loc_1607']
mov ['[ebp+var_4],', 'offset', '_o_nenv']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_deactivate_option']
add ['esp,', '8']
push ['1']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_option_side_effects']
add ['esp,', '0Ch']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_deactivate_option proc near            
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+ecx*4+1Ch],', '0']
jz ['short', 'loc_165B']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+ecx*4+1Ch],', '1']
jnz ['short', 'loc_1675']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_send_opt']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+14h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+eax*4+1Ch],', '3']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_refused_option proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0FBh']
jnz ['short', 'loc_16E3']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+10h],', '27h']
jnz ['short', 'loc_16E3']
mov ['edx,', 'ds:dword_52C']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+edx*4+1Ch],', '2']
jnz ['short', 'loc_16E3']
push ['24h']
push ['0FBh']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_send_opt']
add ['esp,', '0Ch']
mov ['edx,', 'ds:dword_52C']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+edx*4+1Ch],', '0']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_option_side_effects']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_process_subneg proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '50h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '14h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+58h]']
mov ['[ebp+var_4C],', 'ecx']
mov ['edx,', '[ebp+var_4C]']
sub ['edx,', '18h']
mov ['[ebp+var_4C],', 'edx']
cmp ['[ebp+var_4C],', '0Fh']
ja ['$LN46_0']
mov ['eax,', '[ebp+var_4C]']
movzx ['ecx,', 'ds:$LN50_0[eax]']
jmp ['ds:$LN54_0[ecx*4]']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+5Ch],', '1']
jnz ['loc_1875']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+60h]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '1']
jnz ['loc_1875']
push ['2Fh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+6Ch]']
push ['ecx']
call ['_conf_get_str']
add ['esp,', '8']
mov ['[ebp+Str],', 'eax']
push ['1']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '14h']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax],', '0FFh']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+1],', '0FAh']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+2],', '20h']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+3],', '0']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '4']
push ['edx']
call ['_strcpy']
add ['esp,', '8']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_18]']
mov ['byte', 'ptr', '[ecx],', '0FFh']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_18]']
mov ['byte', 'ptr', '[edx+1],', '0F0h']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '2']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+50h],', 'eax']
push ['offset', '$SG85926']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_logevent']
add ['esp,', '8']
mov ['edx,', '[ebp+Str]']
push ['edx']
push ['offset', '$SG85927']
call ['_dupprintf']
add ['esp,', '8']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_logevent']
add ['esp,', '8']
mov ['eax,', '[ebp+var_38]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
jmp ['short', 'loc_1889']
push ['offset', '$SG85929']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_logevent']
add ['esp,', '8']
jmp ['$LN46_0']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+5Ch],', '1']
jnz ['loc_1A06']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+60h]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '1']
jnz ['loc_1A06']
push ['2Eh']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+6Ch]']
push ['eax']
call ['_conf_get_str']
add ['esp,', '8']
mov ['[ebp+var_44],', 'eax']
push ['1']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '14h']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx],', '0FFh']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+1],', '0FAh']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+2],', '18h']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+3],', '0']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_190B']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_44]']
add ['ecx,', '[ebp+var_18]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_195F']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '61h']
jl ['short', 'loc_1945']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '[ebp+var_18]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '7Ah']
jg ['short', 'loc_1945']
mov ['ecx,', '[ebp+var_44]']
add ['ecx,', '[ebp+var_18]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
sub ['edx,', '20h']
mov ['[ebp+var_50],', 'edx']
jmp ['short', 'loc_1951']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_50],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_18]']
mov ['al,', 'byte', 'ptr', '[ebp+var_50]']
mov ['[edx+4],', 'al']
jmp ['short', 'loc_1902']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_18]']
mov ['byte', 'ptr', '[ecx+4],', '0FFh']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_18]']
mov ['byte', 'ptr', '[edx+5],', '0F0h']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '6']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+50h],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_18]']
mov ['byte', 'ptr', '[eax+4],', '0']
push ['offset', '$SG85940']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_logevent']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
push ['eax']
push ['offset', '$SG85941']
call ['_dupprintf']
add ['esp,', '8']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_logevent']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
jmp ['short', 'loc_1A1A']
push ['offset', '$SG85943']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_logevent']
add ['esp,', '8']
jmp ['$LN46_0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+60h]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ecx+5Ch]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_C]']
jnb ['$LN46_0']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '1']
jnz ['$LN46_0']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+58h]']
push ['edx']
call ['_telopt']
add ['esp,', '4']
push ['eax']
push ['offset', '$SG85947']
call ['_dupprintf']
add ['esp,', '8']
mov ['[ebp+var_48],', 'eax']
mov ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_logevent']
add ['esp,', '8']
mov ['eax,', '[ebp+var_48]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+58h],', '24h']
jnz ['short', 'loc_1B1B']
push ['35h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+6Ch]']
push ['eax']
call ['_conf_get_int']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_1AC5']
mov ['[ebp+var_14],', '1']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_1AD3']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_10],', '1']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['short', 'loc_1B19']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jnz ['short', 'loc_1AF5']
mov ['[ebp+var_14],', '1']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_1B0E']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '1']
jnz ['short', 'loc_1B0E']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_10],', '1']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1AD3']
jmp ['short', 'loc_1B29']
mov ['[ebp+var_14],', '1']
mov ['[ebp+var_10],', '0']
mov ['[ebp+var_1C],', '14h']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
push ['0']
push ['31h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+6Ch]']
push ['eax']
call ['_conf_get_str_strs']
add ['esp,', '10h']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_1B68']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
push ['31h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+6Ch]']
push ['ecx']
call ['_conf_get_str_strs']
add ['esp,', '10h']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_1B94']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['esi,', 'eax']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '[ebp+var_1C]']
lea ['ecx,', '[eax+esi+2]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_1B4C']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+6Ch]']
push ['eax']
call ['_get_remote_username']
add ['esp,', '4']
mov ['[ebp+var_34],', 'eax']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_1BC2']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['edx,', '[ebp+var_1C]']
lea ['eax,', '[edx+eax+6]']
mov ['[ebp+var_1C],', 'eax']
push ['1']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx],', '0FFh']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+1],', '0FAh']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+58h]']
mov ['[ecx+2],', 'al']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+3],', '0']
mov ['[ebp+var_18],', '4']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
push ['0']
push ['31h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+6Ch]']
push ['ecx']
call ['_conf_get_str_strs']
add ['esp,', '10h']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_1C32']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
push ['31h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+6Ch]']
push ['edx']
call ['_conf_get_str_strs']
add ['esp,', '10h']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['loc_1CCF']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_18]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_10]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_1C61']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_20]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_1C83']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_20]']
mov ['al,', '[edx]']
mov ['[ecx],', 'al']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
jmp ['short', 'loc_1C58']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_18]']
mov ['al,', 'byte', 'ptr', '[ebp+var_14]']
mov ['[edx],', 'al']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_20],', 'edx']
jmp ['short', 'loc_1CA8']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_1CCA']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_20]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_1C9F']
jmp ['loc_1C16']
cmp ['[ebp+var_34],', '0']
jz ['loc_1D7C']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_18]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_10]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_18]']
mov ['byte', 'ptr', '[ecx],', '55h']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_18]']
mov ['byte', 'ptr', '[eax],', '53h']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_18]']
mov ['byte', 'ptr', '[edx],', '45h']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_18]']
mov ['byte', 'ptr', '[ecx],', '52h']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_18]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_14]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_34]']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_1D5A']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_20]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_1D7C']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_20]']
mov ['al,', '[edx]']
mov ['[ecx],', 'al']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
jmp ['short', 'loc_1D51']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_18]']
mov ['byte', 'ptr', '[edx],', '0FFh']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_18]']
mov ['byte', 'ptr', '[ecx],', '0F0h']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+50h],', 'eax']
cmp ['[ebp+var_18],', '6']
jnz ['short', 'loc_1E18']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+58h]']
push ['ecx']
call ['_telopt']
add ['esp,', '4']
push ['eax']
push ['offset', '$SG85983']
call ['_dupprintf']
add ['esp,', '8']
mov ['[ebp+var_48],', 'eax']
mov ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_logevent']
add ['esp,', '8']
mov ['edx,', '[ebp+var_48]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
jmp ['loc_1F07']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+58h]']
push ['ecx']
call ['_telopt']
add ['esp,', '4']
push ['eax']
push ['offset', '$SG85985']
call ['_dupprintf']
add ['esp,', '8']
mov ['[ebp+var_48],', 'eax']
mov ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_logevent']
add ['esp,', '8']
mov ['edx,', '[ebp+var_48]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
push ['0']
push ['31h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+6Ch]']
push ['edx']
call ['_conf_get_str_strs']
add ['esp,', '10h']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_1E8F']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
push ['31h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+6Ch]']
push ['eax']
call ['_conf_get_str_strs']
add ['esp,', '10h']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_1ECE']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
push ['offset', '$SG85991']
call ['_dupprintf']
add ['esp,', '0Ch']
mov ['[ebp+var_48],', 'eax']
mov ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_logevent']
add ['esp,', '8']
mov ['eax,', '[ebp+var_48]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
jmp ['short', 'loc_1E73']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_1F07']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
push ['offset', '$SG85993']
call ['_dupprintf']
add ['esp,', '8']
mov ['[ebp+var_48],', 'eax']
mov ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_logevent']
add ['esp,', '8']
mov ['edx,', '[ebp+var_48]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN53_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_telnet_sent    proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+50h],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_telnet_init    proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_2C]']
mov ['ecx,', '0Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['74h']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax],', 'offset', '?fn_table@?1??telnet_init@@9@9']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_conf_copy']
add ['esp,', '4']
mov ['edx,', '[ebp+var_C]']
mov ['[edx+6Ch],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx+44h],', '1']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax+48h],', '1']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+4Ch],', '0']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx+60h],', '0']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax+64h],', '0']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+0Ch],', 'edx']
push ['6Eh']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+6Ch]']
push ['ecx']
call ['_conf_get_int']
add ['esp,', '8']
mov ['edx,', '[ebp+var_C]']
mov ['[edx+14h],', 'eax']
push ['6Fh']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+6Ch]']
push ['ecx']
call ['_conf_get_int']
add ['esp,', '8']
mov ['edx,', '[ebp+var_C]']
mov ['[edx+18h],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax+68h],', '0']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx+70h],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
push ['3']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+6Ch]']
push ['eax']
call ['_conf_get_int']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '1']
jnz ['short', 'loc_20AF']
mov ['[ebp+var_28],', 'offset', '$SG86162']
jmp ['short', 'loc_20CB']
cmp ['[ebp+var_14],', '2']
jnz ['short', 'loc_20BE']
mov ['[ebp+var_2C],', 'offset', '$SG86163']
jmp ['short', 'loc_20C5']
mov ['[ebp+var_2C],', 'offset', '$SG86164']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['offset', '$SG86165']
call ['_dupprintf']
add ['esp,', '0Ch']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_logevent']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+6Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['_name_lookup']
add ['esp,', '14h']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_sk_addr_error']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_214D']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_sk_addr_free']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_230E']
cmp ['[ebp+arg_10],', '0']
jge ['short', 'loc_215A']
mov ['[ebp+arg_10],', '17h']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+6Ch]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_1C]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
push ['1']
push ['0']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_new_connection']
add ['esp,', '24h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+4],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_21BE']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_230E']
mov ['edx,', '[ebp+var_C]']
push ['edx']
push ['offset', '_telnet_backend']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+6Ch]']
push ['ecx']
call ['_pinger_new']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_C]']
mov ['[edx+70h],', 'eax']
push ['36h']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+6Ch]']
push ['ecx']
call ['_conf_get_int']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_2222']
mov ['[ebp+var_1C],', 'offset', '_opts']
jmp ['short', 'loc_2203']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '4']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_2220']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+14h]']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+eax*4+1Ch],', '2']
jmp ['short', 'loc_21FA']
jmp ['short', 'loc_228E']
mov ['[ebp+var_20],', 'offset', '_opts']
jmp ['short', 'loc_2234']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '4']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_2284']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax]']
mov ['eax,', '[ecx+14h]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[edx+18h]']
mov ['[ecx+eax*4+1Ch],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+14h]']
mov ['eax,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[eax+edx*4+1Ch],', '0']
jnz ['short', 'loc_2282']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+10h]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_send_opt']
add ['esp,', '0Ch']
jmp ['short', 'loc_222B']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx+4Ch],', '1']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax+54h],', '0']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_update_specials_menu']
add ['esp,', '4']
push ['9']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+6Ch]']
push ['ecx']
call ['_conf_get_str']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+var_10]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_230C']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_dupstr']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_14]']
mov ['[ecx],', 'eax']
push ['3Ah']
mov ['edx,', '[ebp+arg_14]']
mov ['eax,', '[edx]']
push ['eax']
call ['_host_strrchr']
add ['esp,', '8']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_230C']
mov ['ecx,', '[ebp+var_24]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_telnet_free    proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+60h]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_2372']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+70h],', '0']
jz ['short', 'loc_238A']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+70h]']
push ['eax']
call ['_pinger_free']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+6Ch]']
push ['edx']
call ['_conf_free']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_telnet_reconfig proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+6Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+70h]']
push ['edx']
call ['_pinger_reconfig']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+6Ch]']
push ['ecx']
call ['_conf_free']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_conf_copy']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+6Ch],', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_telnet_send    proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jnz ['short', 'loc_2449']
xor ['eax,', 'eax']
jmp ['loc_256E']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['loc_2568']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_C]']
jnb ['short', 'loc_24A5']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '0FFh']
jz ['short', 'loc_24A5']
mov ['eax,', 'ds:dword_5B8']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+eax*4+1Ch],', '1']
jz ['short', 'loc_249A']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '0Dh']
jz ['short', 'loc_24A5']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_246A']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '[ebp+var_10]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+50h],', 'eax']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+var_C]']
jnb ['loc_2563']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '0FFh']
jz ['short', 'loc_250B']
mov ['edx,', 'ds:dword_5B8']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+edx*4+1Ch],', '1']
jz ['short', 'loc_2563']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '0Dh']
jnz ['short', 'loc_2563']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '0FFh']
jnz ['short', 'loc_2522']
mov ['[ebp+var_14],', 'offset', '?iac@?1??telnet_send@@9@9']
jmp ['short', 'loc_2529']
mov ['[ebp+var_14],', 'offset', '?cr@?1??telnet_send@@9@9']
mov ['esi,', 'esp']
push ['2']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+50h],', 'eax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
jmp ['loc_24D6']
jmp ['loc_2458']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+50h]']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_telnet_sendbuffer proc near            
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+50h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_telnet_size    proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+18h],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jz ['short', 'loc_25F9']
mov ['eax,', 'ds:dword_4D8']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+eax*4+1Ch],', '1']
jz ['short', 'loc_25FE']
jmp ['loc_27B1']
mov ['[ebp+var_2C],', '0']
mov ['edx,', '[ebp+var_2C]']
mov ['[ebp+edx+var_24],', '0FFh']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ebp+ecx+var_24],', '0FAh']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+eax+var_24],', '1Fh']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+14h]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ebp+ecx+var_24],', 'al']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', '[ebp+eax+var_25]']
cmp ['ecx,', '0FFh']
jnz ['short', 'loc_2672']
mov ['edx,', '[ebp+var_2C]']
mov ['[ebp+edx+var_24],', '0FFh']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+14h]']
and ['edx,', '0FFh']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+eax+var_24],', 'dl']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', '[ebp+edx+var_25]']
cmp ['eax,', '0FFh']
jnz ['short', 'loc_26AE']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ebp+ecx+var_24],', '0FFh']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
sar ['ecx,', '8']
mov ['edx,', '[ebp+var_2C]']
mov ['[ebp+edx+var_24],', 'cl']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', '[ebp+ecx+var_25]']
cmp ['edx,', '0FFh']
jnz ['short', 'loc_26E8']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+eax+var_24],', '0FFh']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
and ['eax,', '0FFh']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ebp+ecx+var_24],', 'al']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', '[ebp+eax+var_25]']
cmp ['ecx,', '0FFh']
jnz ['short', 'loc_2724']
mov ['edx,', '[ebp+var_2C]']
mov ['[ebp+edx+var_24],', '0FFh']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ebp+ecx+var_24],', '0FFh']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+eax+var_24],', '0F0h']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+50h],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+14h]']
push ['edx']
push ['offset', '$SG86263']
call ['_dupprintf']
add ['esp,', '0Ch']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_logevent']
add ['esp,', '8']
mov ['eax,', '[ebp+var_30]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_telnet_special proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jnz ['short', 'loc_2827']
jmp ['loc_2C59']
mov ['byte', 'ptr', '[ebp+var_C],', '0FFh']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '10h']
ja ['loc_2C59']
mov ['eax,', '[ebp+var_14]']
jmp ['ds:$LN33_0[eax*4]']
mov ['byte', 'ptr', '[ebp+var_C+1],', '0F6h']
mov ['esi,', 'esp']
push ['2']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+50h],', 'eax']
jmp ['loc_2C59']
mov ['byte', 'ptr', '[ebp+var_C+1],', '0F3h']
mov ['esi,', 'esp']
push ['2']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+50h],', 'eax']
jmp ['loc_2C59']
mov ['byte', 'ptr', '[ebp+var_C+1],', '0F7h']
mov ['esi,', 'esp']
push ['2']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+50h],', 'eax']
jmp ['loc_2C59']
mov ['byte', 'ptr', '[ebp+var_C+1],', '0F8h']
mov ['esi,', 'esp']
push ['2']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+50h],', 'eax']
jmp ['loc_2C59']
mov ['byte', 'ptr', '[ebp+var_C+1],', '0F9h']
mov ['esi,', 'esp']
push ['2']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+50h],', 'eax']
jmp ['loc_2C59']
mov ['byte', 'ptr', '[ebp+var_C+1],', '0F1h']
mov ['esi,', 'esp']
push ['2']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+50h],', 'eax']
jmp ['loc_2C59']
mov ['byte', 'ptr', '[ebp+var_C+1],', '0EEh']
mov ['esi,', 'esp']
push ['2']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+50h],', 'eax']
jmp ['loc_2C59']
mov ['byte', 'ptr', '[ebp+var_C+1],', '0F5h']
mov ['esi,', 'esp']
push ['2']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+50h],', 'eax']
jmp ['loc_2C59']
mov ['byte', 'ptr', '[ebp+var_C+1],', '0F4h']
mov ['esi,', 'esp']
push ['2']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+50h],', 'eax']
jmp ['loc_2C59']
mov ['byte', 'ptr', '[ebp+var_C+1],', '0EDh']
mov ['esi,', 'esp']
push ['2']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+50h],', 'eax']
jmp ['loc_2C59']
mov ['byte', 'ptr', '[ebp+var_C+1],', '0EFh']
mov ['esi,', 'esp']
push ['2']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+50h],', 'eax']
jmp ['loc_2C59']
mov ['byte', 'ptr', '[ebp+var_C+1],', '0ECh']
mov ['esi,', 'esp']
push ['2']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+50h],', 'eax']
jmp ['loc_2C59']
mov ['edx,', 'ds:dword_5B8']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+edx*4+1Ch],', '1']
jnz ['short', 'loc_2B00']
mov ['esi,', 'esp']
push ['1']
push ['offset', '$SG86305']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+50h],', 'eax']
jmp ['short', 'loc_2B2D']
mov ['esi,', 'esp']
push ['2']
push ['offset', '$SG86307']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+50h],', 'eax']
jmp ['loc_2C59']
mov ['byte', 'ptr', '[ebp+var_C+1],', '0F2h']
mov ['esi,', 'esp']
push ['1']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+50h],', 'eax']
mov ['esi,', 'esp']
push ['1']
lea ['edx,', '[ebp+var_C+1]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+50h],', 'eax']
jmp ['loc_2C59']
mov ['edx,', 'ds:dword_564']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+edx*4+1Ch],', '2']
jz ['short', 'loc_2BB3']
mov ['ecx,', 'ds:dword_564']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+ecx*4+1Ch],', '3']
jnz ['short', 'loc_2BDC']
mov ['eax,', 'ds:dword_564']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+eax*4+1Ch],', '0']
mov ['edx,', 'ds:dword_560']
push ['edx']
mov ['eax,', 'ds:_o_echo']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_send_opt']
add ['esp,', '0Ch']
jmp ['short', 'loc_2C59']
mov ['edx,', 'ds:dword_564']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+edx*4+1Ch],', '1']
jnz ['short', 'loc_2C18']
mov ['ecx,', 'ds:dword_564']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+ecx*4+1Ch],', '0']
mov ['eax,', 'ds:dword_560']
push ['eax']
mov ['ecx,', 'ds:dword_554']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_send_opt']
add ['esp,', '0Ch']
jmp ['short', 'loc_2C59']
mov ['eax,', 'ds:dword_59C']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+eax*4+1Ch],', '1']
jnz ['short', 'loc_2C59']
mov ['byte', 'ptr', '[ebp+var_C+1],', '0F1h']
mov ['esi,', 'esp']
push ['2']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+50h],', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN32_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_telnet_get_specials proc near          
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'offset', '?specials@?1??telnet_get_specials@@9@9']
pop ['ebp']
retn
endp
_telnet_connected proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
xor ['eax,', 'eax']
cmp ['dword', 'ptr', '[ecx+4],', '0']
setnz ['al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_telnet_sendok  proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '1']
pop ['ebp']
retn
endp
_telnet_unthrottle proc near            
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
xor ['ecx,', 'ecx']
cmp ['[ebp+arg_4],', '1000h']
setnle ['cl']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_telnet_ldisc   proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '1']
jnz ['short', 'loc_2D97']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+44h]']
jmp ['short', 'loc_2DA7']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_2DA5']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+48h]']
jmp ['short', 'loc_2DA7']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_telnet_provide_ldisc proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+10h],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_telnet_provide_logctx proc near        
push ['ebp']
mov ['ebp,', 'esp']
pop ['ebp']
retn
endp
_telnet_exitcode proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_2E09']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_2E1D']
jmp ['short', 'loc_2E1D']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jz ['short', 'loc_2E1B']
mov ['eax,', '7FFFFFFFh']
jmp ['short', 'loc_2E1D']
jmp ['short', 'loc_2E1D']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_telnet_cfg_info proc near              
push ['ebp']
mov ['ebp,', 'esp']
xor ['eax,', 'eax']
pop ['ebp']
retn
endp

_open_settings_w proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+lpSubKey],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+phkResult],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+Str],', '0']
jz ['short', 'loc_335']
mov ['ecx,', '[ebp+Str]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jnz ['short', 'loc_33C']
mov ['[ebp+Str],', 'offset', '$SG119580']
push ['1']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
imul ['eax,', '3']
add ['eax,', '1']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+lpSubKey],', 'eax']
mov ['ecx,', '[ebp+lpSubKey]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_mungestr']
add ['esp,', '8']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+phkResult]']
push ['eax']
mov ['ecx,', 'ds:_puttystr']
push ['ecx']
push ['80000001h']
call ['dword', 'ptr', 'ds:__imp__RegCreateKeyA@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_3BC']
mov ['edx,', '[ebp+lpSubKey]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', 'ds:_puttystr']
push ['eax']
push ['offset', '$SG119587']
call ['_dupprintf']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
xor ['eax,', 'eax']
jmp ['short', 'loc_42F']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+lpSubKey]']
push ['eax']
mov ['ecx,', '[ebp+phkResult]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__RegCreateKeyA@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1C],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+phkResult]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__RegCloseKey@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_420']
mov ['eax,', '[ebp+lpSubKey]']
push ['eax']
mov ['ecx,', 'ds:_puttystr']
push ['ecx']
push ['offset', '$SG119590']
call ['_dupprintf']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+lpSubKey]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_42F']
mov ['ecx,', '[ebp+lpSubKey]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_mungestr       proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['loc_579']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '20h']
jz ['short', 'loc_506']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '5Ch']
jz ['short', 'loc_506']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Ah']
jz ['short', 'loc_506']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '3Fh']
jz ['short', 'loc_506']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '25h']
jz ['short', 'loc_506']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '20h']
jl ['short', 'loc_506']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '7Eh']
jg ['short', 'loc_506']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '2Eh']
jnz ['short', 'loc_551']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_551']
mov ['eax,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[eax],', '25h']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
sar ['eax,', '4']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', 'ds:_hex[eax]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
and ['edx,', '0Fh']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', 'ds:_hex[edx]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
jmp ['short', 'loc_564']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
mov ['[ebp+arg_0],', 'ecx']
mov ['[ebp+var_4],', '1']
jmp ['loc_49A']
mov ['edx,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_write_setting_s proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
cmp ['[ebp+hKey],', '0']
jz ['short', 'loc_5C1']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
push ['1']
push ['0']
mov ['edx,', '[ebp+lpValueName]']
push ['edx']
mov ['eax,', '[ebp+hKey]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RegSetValueExA@24']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_write_setting_i proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
cmp ['[ebp+hKey],', '0']
jz ['short', 'loc_603']
mov ['esi,', 'esp']
push ['4']
lea ['eax,', '[ebp+Data]']
push ['eax']
push ['4']
push ['0']
mov ['ecx,', '[ebp+lpValueName]']
push ['ecx']
mov ['edx,', '[ebp+hKey]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__RegSetValueExA@24']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_close_settings_w proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+hKey]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RegCloseKey@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_open_settings_r proc near              
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+lpSubKey],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+phkResult],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+Str],', '0']
jz ['short', 'loc_679']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_680']
mov ['[ebp+Str],', 'offset', '$SG119624']
push ['1']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
imul ['eax,', '3']
add ['eax,', '1']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+lpSubKey],', 'eax']
mov ['eax,', '[ebp+lpSubKey]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_mungestr']
add ['esp,', '8']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+phkResult]']
push ['edx']
mov ['eax,', 'ds:_puttystr']
push ['eax']
push ['80000001h']
call ['dword', 'ptr', 'ds:__imp__RegOpenKeyA@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_6DB']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_714']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+lpSubKey]']
push ['edx']
mov ['eax,', '[ebp+phkResult]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RegOpenKeyA@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_701']
mov ['[ebp+var_14],', '0']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+phkResult]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__RegCloseKey@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+lpSubKey]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_read_setting_s proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+lpData],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+cbData],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+Type],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+hKey],', '0']
jnz ['short', 'loc_7A9']
xor ['eax,', 'eax']
jmp ['loc_861']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+cbData]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+Type]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+lpValueName]']
push ['edx']
mov ['eax,', '[ebp+hKey]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RegQueryValueExA@24']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_7D6']
cmp ['[ebp+Type],', '1']
jz ['short', 'loc_7DD']
xor ['eax,', 'eax']
jmp ['loc_861']
mov ['ecx,', '[ebp+cbData]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
push ['1']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+lpData],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+cbData]']
push ['eax']
mov ['ecx,', '[ebp+lpData]']
push ['ecx']
lea ['edx,', '[ebp+Type]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+lpValueName]']
push ['eax']
mov ['ecx,', '[ebp+hKey]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__RegQueryValueExA@24']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_826']
cmp ['[ebp+Type],', '1']
jz ['short', 'loc_836']
mov ['edx,', '[ebp+lpData]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_861']
mov ['eax,', '[ebp+cbData]']
cmp ['eax,', '[ebp+var_10]']
jb ['short', 'loc_855']
push ['0B0h']
push ['offset', '$SG119659']
push ['offset', '$SG119660']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+lpData]']
add ['edx,', '[ebp+cbData]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+lpData]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_read_setting_i proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+cbData],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['dword', 'ptr', '[ebp+Data],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+Type],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+cbData],', '4']
cmp ['[ebp+hKey],', '0']
jz ['short', 'loc_921']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+cbData]']
push ['eax']
lea ['ecx,', '[ebp+Data]']
push ['ecx']
lea ['edx,', '[ebp+Type]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+lpValueName]']
push ['eax']
mov ['ecx,', '[ebp+hKey]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__RegQueryValueExA@24']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_921']
cmp ['[ebp+cbData],', '4']
jnz ['short', 'loc_921']
cmp ['[ebp+Type],', '4']
jz ['short', 'loc_928']
mov ['eax,', '[ebp+arg_8]']
jmp ['short', 'loc_92B']
jmp ['short', 'loc_92B']
mov ['eax,', 'dword', 'ptr', '[ebp+Data]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_read_setting_fontspec proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+lpValueName]']
push ['eax']
mov ['ecx,', '[ebp+hKey]']
push ['ecx']
call ['_read_setting_s']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_9C5']
xor ['eax,', 'eax']
jmp ['loc_ADF']
push ['0']
push ['offset', '$SG119690']
mov ['edx,', '[ebp+lpValueName]']
push ['edx']
call ['_dupcat']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
push ['0FFFFFFFFh']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+hKey]']
push ['ecx']
call ['_read_setting_i']
add ['esp,', '0Ch']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
cmp ['[ebp+var_10],', '0FFFFFFFFh']
jnz ['short', 'loc_A15']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_ADF']
push ['0']
push ['offset', '$SG119694']
mov ['ecx,', '[ebp+lpValueName]']
push ['ecx']
call ['_dupcat']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
push ['0FFFFFFFFh']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+hKey]']
push ['eax']
call ['_read_setting_i']
add ['esp,', '0Ch']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
cmp ['[ebp+var_18],', '0FFFFFFFFh']
jnz ['short', 'loc_A62']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_ADF']
push ['0']
push ['offset', '$SG119698']
mov ['eax,', '[ebp+lpValueName]']
push ['eax']
call ['_dupcat']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
push ['80000000h']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+hKey]']
push ['edx']
call ['_read_setting_i']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
cmp ['[ebp+var_14],', '80000000h']
jnz ['short', 'loc_AB5']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_ADF']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_fontspec_new']
add ['esp,', '10h']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_write_setting_fontspec proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+lpValueName]']
push ['edx']
mov ['eax,', '[ebp+hKey]']
push ['eax']
call ['_write_setting_s']
add ['esp,', '0Ch']
push ['0']
push ['offset', '$SG119710']
mov ['ecx,', '[ebp+lpValueName]']
push ['ecx']
call ['_dupcat']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+hKey]']
push ['edx']
call ['_write_setting_i']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
push ['0']
push ['offset', '$SG119712']
mov ['ecx,', '[ebp+lpValueName]']
push ['ecx']
call ['_dupcat']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+hKey]']
push ['edx']
call ['_write_setting_i']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
push ['0']
push ['offset', '$SG119714']
mov ['ecx,', '[ebp+lpValueName]']
push ['ecx']
call ['_dupcat']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+hKey]']
push ['edx']
call ['_write_setting_i']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_read_setting_filename proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+lpValueName]']
push ['eax']
mov ['ecx,', '[ebp+hKey]']
push ['ecx']
call ['_read_setting_s']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_C27']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_filename_from_str']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_C29']
jmp ['short', 'loc_C29']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_write_setting_filename proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+lpValueName]']
push ['edx']
mov ['eax,', '[ebp+hKey]']
push ['eax']
call ['_write_setting_s']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_close_settings_r proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+hKey]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RegCloseKey@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_del_settings   proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+lpSubKey],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+phkResult],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+phkResult]']
push ['eax']
mov ['ecx,', 'ds:_puttystr']
push ['ecx']
push ['80000001h']
call ['dword', 'ptr', 'ds:__imp__RegOpenKeyA@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_CD5']
jmp ['short', 'loc_D47']
push ['1']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
imul ['eax,', '3']
add ['eax,', '1']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+lpSubKey],', 'eax']
mov ['eax,', '[ebp+lpSubKey]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_mungestr']
add ['esp,', '8']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+lpSubKey]']
push ['edx']
mov ['eax,', '[ebp+phkResult]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RegDeleteKeyA@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+lpSubKey]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+phkResult]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__RegCloseKey@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_remove_session_from_jumplist']
add ['esp,', '4']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_enum_settings_start proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+phkResult],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+phkResult]']
push ['eax']
mov ['ecx,', 'ds:_puttystr']
push ['ecx']
push ['80000001h']
call ['dword', 'ptr', 'ds:__imp__RegOpenKeyA@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_DC7']
xor ['eax,', 'eax']
jmp ['short', 'loc_DF1']
push ['8']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_DEE']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+phkResult]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_enum_settings_next proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+dwIndex],', '0CCCCCCCCh']
mov ['[ebp+lpName],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
push ['1']
mov ['ecx,', '[ebp+arg_8]']
imul ['ecx,', '3']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+lpName],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['[ebp+dwIndex],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
imul ['ecx,', '3']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+lpName]']
push ['edx']
mov ['eax,', '[ebp+dwIndex]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__RegEnumKeyA@16']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_ED5']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+lpName]']
push ['edx']
call ['_unmungestr']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+lpName]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_4]']
jmp ['short', 'loc_EE3']
jmp ['short', 'loc_EE3']
mov ['ecx,', '[ebp+lpName]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_unmungestr     proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['loc_FE8']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '25h']
jnz ['loc_FBA']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+1]']
test ['edx,', 'edx']
jz ['loc_FBA']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+2]']
test ['ecx,', 'ecx']
jz ['short', 'loc_FBA']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+1]']
sub ['eax,', '30h']
mov ['[ebp+var_4],', 'eax']
xor ['ecx,', 'ecx']
cmp ['[ebp+var_4],', '9']
setle ['cl']
sub ['ecx,', '1']
and ['ecx,', '7']
mov ['edx,', '[ebp+var_4]']
sub ['edx,', 'ecx']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+2]']
sub ['ecx,', '30h']
mov ['[ebp+var_8],', 'ecx']
xor ['edx,', 'edx']
cmp ['[ebp+var_8],', '9']
setle ['dl']
sub ['edx,', '1']
and ['edx,', '7']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', 'edx']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
shl ['ecx,', '4']
add ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '1']
mov ['[ebp+arg_8],', 'ecx']
jnz ['short', 'loc_FAF']
jmp ['short', 'loc_FEE']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '3']
mov ['[ebp+arg_0],', 'edx']
jmp ['short', 'loc_FE3']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '1']
mov ['[ebp+arg_8],', 'edx']
jnz ['short', 'loc_FE3']
jmp ['short', 'loc_FEE']
jmp ['loc_F0C']
mov ['eax,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_enum_settings_finish proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__RegCloseKey@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_verify_host_key proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '58h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_58]']
mov ['ecx,', '16h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
push ['1']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['esi,', 'eax']
mov ['edx,', '[ebp+Str1]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
add ['esi,', 'eax']
imul ['esi,', '3']
add ['esi,', '0Fh']
push ['esi']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+lpValueName],', 'eax']
mov ['eax,', '[ebp+Str1]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+lpValueName]']
push ['eax']
call ['_hostkey_regname']
add ['esp,', '10h']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+phkResult]']
push ['ecx']
push ['offset', '$SG119818']
push ['80000001h']
call ['dword', 'ptr', 'ds:__imp__RegOpenKeyA@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_10F0']
mov ['edx,', '[ebp+lpValueName]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '1']
jmp ['loc_13A0']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+cbData],', 'eax']
push ['1']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+lpData],', 'eax']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+cbData]']
push ['edx']
mov ['eax,', '[ebp+lpData]']
push ['eax']
lea ['ecx,', '[ebp+Type]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+lpValueName]']
push ['edx']
mov ['eax,', '[ebp+phkResult]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RegQueryValueExA@24']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_34],', 'eax']
cmp ['[ebp+var_34],', '0']
jz ['loc_1327']
cmp ['[ebp+var_34],', '0EAh']
jz ['loc_1327']
push ['offset', '$SG119823']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['loc_1327']
push ['offset', '$SG119825']
mov ['edx,', '[ebp+lpValueName]']
push ['edx']
call ['_strcspn']
add ['esp,', '8']
mov ['ecx,', '[ebp+lpValueName]']
lea ['edx,', '[ecx+eax+1]']
mov ['[ebp+var_3C],', 'edx']
push ['1']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '0Ah']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+cbData],', 'ecx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+cbData]']
push ['edx']
mov ['eax,', '[ebp+var_40]']
push ['eax']
lea ['ecx,', '[ebp+Type]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['eax,', '[ebp+phkResult]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RegQueryValueExA@24']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_34],', 'eax']
cmp ['[ebp+var_34],', '0']
jnz ['loc_131B']
cmp ['[ebp+Type],', '1']
jnz ['loc_131B']
mov ['ecx,', '[ebp+lpData]']
mov ['[ebp+var_44],', 'ecx']
mov ['edx,', '[ebp+var_40]']
mov ['[ebp+var_48],', 'edx']
mov ['[ebp+var_4C],', '0']
jmp ['short', 'loc_11EE']
mov ['eax,', '[ebp+var_4C]']
add ['eax,', '1']
mov ['[ebp+var_4C],', 'eax']
cmp ['[ebp+var_4C],', '2']
jge ['loc_12D8']
mov ['ecx,', '[ebp+var_44]']
mov ['byte', 'ptr', '[ecx],', '30h']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '1']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_44]']
mov ['byte', 'ptr', '[eax],', '78h']
mov ['ecx,', '[ebp+var_44]']
add ['ecx,', '1']
mov ['[ebp+var_44],', 'ecx']
push ['offset', '$SG119840']
mov ['edx,', '[ebp+var_48]']
push ['edx']
call ['_strcspn']
add ['esp,', '8']
mov ['[ebp+var_54],', 'eax']
mov ['eax,', '[ebp+var_54]']
cdq
and ['edx,', '3']
add ['eax,', 'edx']
sar ['eax,', '2']
mov ['[ebp+var_58],', 'eax']
mov ['eax,', '[ebp+var_54]']
sub ['eax,', '1']
xor ['eax,', '3']
mov ['ecx,', '[ebp+var_48]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '30h']
jnz ['short', 'loc_125F']
cmp ['[ebp+var_54],', '1']
jle ['short', 'loc_125F']
mov ['eax,', '[ebp+var_54]']
sub ['eax,', '1']
mov ['[ebp+var_54],', 'eax']
jmp ['short', 'loc_1239']
mov ['[ebp+var_50],', '0']
jmp ['short', 'loc_1271']
mov ['ecx,', '[ebp+var_50]']
add ['ecx,', '1']
mov ['[ebp+var_50],', 'ecx']
mov ['edx,', '[ebp+var_50]']
cmp ['edx,', '[ebp+var_54]']
jge ['short', 'loc_1296']
mov ['eax,', '[ebp+var_50]']
xor ['eax,', '3']
mov ['ecx,', '[ebp+var_54]']
sub ['ecx,', '1']
sub ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ebp+var_44]']
mov ['esi,', '[ebp+var_48]']
mov ['al,', '[esi+eax]']
mov ['[edx+ecx],', 'al']
jmp ['short', 'loc_1268']
mov ['ecx,', '[ebp+var_44]']
add ['ecx,', '[ebp+var_54]']
mov ['[ebp+var_44],', 'ecx']
mov ['edx,', '[ebp+var_58]']
mov ['eax,', '[ebp+var_48]']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_48],', 'ecx']
mov ['edx,', '[ebp+var_48]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_12CD']
mov ['ecx,', '[ebp+var_48]']
add ['ecx,', '1']
mov ['[ebp+var_48],', 'ecx']
mov ['edx,', '[ebp+var_44]']
mov ['byte', 'ptr', '[edx],', '2Ch']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_44]']
mov ['byte', 'ptr', '[ecx],', '0']
jmp ['loc_11E5']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+lpData]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_131B']
mov ['ecx,', '[ebp+lpData]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['edx,', '[ebp+lpData]']
push ['edx']
push ['1']
push ['0']
mov ['eax,', '[ebp+lpValueName]']
push ['eax']
mov ['ecx,', '[ebp+phkResult]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__RegSetValueExA@24']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_40]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+phkResult]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RegCloseKey@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+lpData]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+lpData]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+lpValueName]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
cmp ['[ebp+var_34],', '0EAh']
jz ['short', 'loc_1380']
cmp ['[ebp+var_34],', '0']
jnz ['short', 'loc_1389']
cmp ['[ebp+Type],', '1']
jnz ['short', 'loc_1389']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_1389']
mov ['eax,', '2']
jmp ['short', 'loc_13A0']
jmp ['short', 'loc_13A0']
cmp ['[ebp+var_34],', '0']
jnz ['short', 'loc_1395']
cmp ['[ebp+Type],', '1']
jz ['short', 'loc_139E']
mov ['eax,', '1']
jmp ['short', 'loc_13A0']
jmp ['short', 'loc_13A0']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN26']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '58h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_hostkey_regname proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+Source]']
push ['eax']
mov ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_strcpy']
add ['esp,', '8']
push ['offset', '$SG119793']
mov ['edx,', '[ebp+Dest]']
push ['edx']
call ['_strcat']
add ['esp,', '8']
mov ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['offset', '$SG119794']
mov ['edx,', '[ebp+Dest]']
add ['edx,', '[ebp+var_4]']
push ['edx']
call ['_sprintf']
add ['esp,', '0Ch']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '[ebp+Dest]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_mungestr']
add ['esp,', '8']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_store_host_key proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+phkResult],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+lpValueName],', 'eax']
push ['1']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+Source]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
add ['esi,', 'eax']
imul ['esi,', '3']
add ['esi,', '0Fh']
push ['esi']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+lpValueName],', 'eax']
mov ['edx,', '[ebp+Source]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+lpValueName]']
push ['edx']
call ['_hostkey_regname']
add ['esp,', '10h']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+phkResult]']
push ['eax']
push ['offset', '$SG119872']
push ['80000001h']
call ['dword', 'ptr', 'ds:__imp__RegCreateKeyA@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_155B']
mov ['ecx,', '[ebp+lpData]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['edx,', '[ebp+lpData]']
push ['edx']
push ['1']
push ['0']
mov ['eax,', '[ebp+lpValueName]']
push ['eax']
mov ['ecx,', '[ebp+phkResult]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__RegSetValueExA@24']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+phkResult]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__RegCloseKey@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+lpValueName]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_read_random_seed proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '41Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_41C]']
mov ['ecx,', '107h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
push ['1']
call ['_access_random_seed']
add ['esp,', '4']
mov ['[ebp+hFile],', 'eax']
cmp ['[ebp+hFile],', '0FFFFFFFFh']
jz ['short', 'loc_1656']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_1643']
mov ['esi,', 'esp']
push ['0']
lea ['ecx,', '[ebp+NumberOfBytesRead]']
push ['ecx']
push ['400h']
lea ['edx,', '[ebp+Buffer]']
push ['edx']
mov ['eax,', '[ebp+hFile]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ReadFile@20']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_163F']
cmp ['[ebp+NumberOfBytesRead],', '0']
jz ['short', 'loc_163F']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+NumberOfBytesRead]']
push ['ecx']
lea ['edx,', '[ebp+Buffer]']
push ['edx']
call ['[ebp+arg_0]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_1641']
jmp ['short', 'loc_1643']
jmp ['short', 'loc_15E2']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+hFile]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__CloseHandle@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '41Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_access_random_seed proc near           
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '260h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_260]']
mov ['ecx,', '98h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['ax,', 'ds:$SG119903']
mov ['word', 'ptr', '[ebp+Data],', 'ax']
push ['210h']
push ['0']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['[ebp+cbData],', '212h']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+phkResult]']
push ['edx']
push ['offset', '$SG119908']
push ['80000001h']
call ['dword', 'ptr', 'ds:__imp__RegOpenKeyA@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['loc_17B4']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+cbData]']
push ['eax']
lea ['ecx,', '[ebp+Data]']
push ['ecx']
lea ['edx,', '[ebp+Type]']
push ['edx']
push ['0']
push ['offset', '$SG119910']
mov ['eax,', '[ebp+phkResult]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RegQueryValueExA@24']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_254],', 'eax']
cmp ['[ebp+var_254],', '0']
jnz ['short', 'loc_176C']
cmp ['[ebp+Type],', '1']
jz ['short', 'loc_1773']
mov ['[ebp+Data],', '0']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+phkResult]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__RegCloseKey@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['edx,', '[ebp+Data]']
test ['edx,', 'edx']
jz ['short', 'loc_17B4']
lea ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['edx,', '[ebp+Data]']
push ['edx']
call ['_try_random_seed']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_17B4']
mov ['eax,', '[ebp+var_30]']
jmp ['loc_19C2']
cmp ['ds:_tried_shgetfolderpath,', '0']
jnz ['short', 'loc_181A']
push ['offset', '$SG119915']
call ['_load_system32_dll']
add ['esp,', '4']
mov ['ds:_shell32_module,', 'eax']
cmp ['ds:_shell32_module,', '0']
jz ['short', 'loc_17FA']
mov ['esi,', 'esp']
push ['offset', '$SG119918']
mov ['eax,', 'ds:_shell32_module']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetProcAddress@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_260],', 'eax']
jmp ['short', 'loc_1804']
mov ['[ebp+var_260],', '0']
mov ['ecx,', '[ebp+var_260]']
mov ['ds:_p_SHGetFolderPathA,', 'ecx']
mov ['ds:_tried_shgetfolderpath,', '1']
cmp ['ds:_p_SHGetFolderPathA,', '0']
jz ['loc_18D9']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+Data]']
push ['edx']
push ['0']
push ['0']
push ['1Ch']
push ['0']
call ['ds:_p_SHGetFolderPathA']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jl ['short', 'loc_1880']
push ['offset', '$SG119924']
lea ['eax,', '[ebp+Data]']
push ['eax']
call ['_strcat']
add ['esp,', '8']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['eax,', '[ebp+Data]']
push ['eax']
call ['_try_random_seed']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_1880']
mov ['eax,', '[ebp+var_30]']
jmp ['loc_19C2']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+Data]']
push ['ecx']
push ['0']
push ['0']
push ['1Ah']
push ['0']
call ['ds:_p_SHGetFolderPathA']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jl ['short', 'loc_18D9']
push ['offset', '$SG119930']
lea ['edx,', '[ebp+Data]']
push ['edx']
call ['_strcat']
add ['esp,', '8']
lea ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['edx,', '[ebp+Data]']
push ['edx']
call ['_try_random_seed']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_18D9']
mov ['eax,', '[ebp+var_30]']
jmp ['loc_19C2']
mov ['esi,', 'esp']
push ['212h']
lea ['eax,', '[ebp+Data]']
push ['eax']
push ['offset', '$SG119934']
call ['dword', 'ptr', 'ds:__imp__GetEnvironmentVariableA@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_258],', 'eax']
mov ['ecx,', '212h']
sub ['ecx,', '[ebp+var_258]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_258]']
lea ['eax,', '[ebp+edx+Data]']
push ['eax']
push ['offset', '$SG119935']
call ['dword', 'ptr', 'ds:__imp__GetEnvironmentVariableA@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_25C],', 'eax']
cmp ['[ebp+var_25C],', '0']
jz ['short', 'loc_1970']
push ['offset', '$SG119937']
lea ['ecx,', '[ebp+Data]']
push ['ecx']
call ['_strcat']
add ['esp,', '8']
lea ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+Data]']
push ['ecx']
call ['_try_random_seed']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_1970']
mov ['eax,', '[ebp+var_30]']
jmp ['short', 'loc_19C2']
mov ['esi,', 'esp']
push ['212h']
lea ['edx,', '[ebp+Data]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetWindowsDirectoryA@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['offset', '$SG119939']
lea ['eax,', '[ebp+Data]']
push ['eax']
call ['_strcat']
add ['esp,', '8']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['eax,', '[ebp+Data]']
push ['eax']
call ['_try_random_seed']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_19BF']
mov ['eax,', '[ebp+var_30]']
jmp ['short', 'loc_19C2']
or ['eax,', '0FFFFFFFFh']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN24_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '260h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_try_random_seed proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_1AC4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+lpFileName]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__DeleteFileA@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_1AB7']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['eax,', '2']
jz ['short', 'loc_1AB7']
mov ['esi,', 'esp']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
call ['_win_strerror']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+lpFileName]']
push ['ecx']
push ['offset', '$SG119887']
call ['_nonfatal']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[edx],', '0FFFFFFFFh']
xor ['eax,', 'eax']
jmp ['short', 'loc_1B2F']
mov ['esi,', 'esp']
push ['0']
xor ['eax,', 'eax']
cmp ['[ebp+arg_4],', '2']
setnz ['al']
sub ['eax,', '1']
and ['eax,', '80h']
push ['eax']
xor ['ecx,', 'ecx']
cmp ['[ebp+arg_4],', '2']
setnz ['cl']
add ['ecx,', '2']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '2']
neg ['edx']
sbb ['edx,', 'edx']
and ['edx,', '3']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '2']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '40000000h']
add ['eax,', '40000000h']
push ['eax']
mov ['ecx,', '[ebp+lpFileName]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__CreateFileA@28']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_8]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
setnz ['cl']
mov ['eax,', 'ecx']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_write_random_seed proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+NumberOfBytesWritten],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+hFile],', 'eax']
push ['2']
call ['_access_random_seed']
add ['esp,', '4']
mov ['[ebp+hFile],', 'eax']
cmp ['[ebp+hFile],', '0FFFFFFFFh']
jz ['short', 'loc_1BA7']
mov ['esi,', 'esp']
push ['0']
lea ['eax,', '[ebp+NumberOfBytesWritten]']
push ['eax']
mov ['ecx,', '[ebp+nNumberOfBytesToWrite]']
push ['ecx']
mov ['edx,', '[ebp+lpBuffer]']
push ['edx']
mov ['eax,', '[ebp+hFile]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__WriteFile@20']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+hFile]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__CloseHandle@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_add_to_jumplist_registry proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_transform_jumplist_registry']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_transform_jumplist_registry proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '44h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_44]']
mov ['ecx,', '11h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
push ['0']
lea ['eax,', '[ebp+phkResult]']
push ['eax']
push ['0']
push ['2001Fh']
push ['0']
push ['0']
push ['0']
mov ['ecx,', 'ds:_reg_jumplist_key']
push ['ecx']
push ['80000001h']
call ['dword', 'ptr', 'ds:__imp__RegCreateKeyExA@36']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1C60']
mov ['eax,', '2']
jmp ['loc_1F8D']
mov ['[ebp+cbData],', '0C8h']
push ['1']
mov ['edx,', '[ebp+cbData]']
push ['edx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+lpData],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+cbData]']
push ['eax']
mov ['ecx,', '[ebp+lpData]']
push ['ecx']
lea ['edx,', '[ebp+Type]']
push ['edx']
push ['0']
mov ['eax,', 'ds:_reg_jumplist_value']
push ['eax']
mov ['ecx,', '[ebp+phkResult]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__RegQueryValueExA@24']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0EAh']
jnz ['short', 'loc_1CF3']
mov ['edx,', '[ebp+lpData]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
push ['1']
mov ['eax,', '[ebp+cbData]']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+lpData],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+cbData]']
push ['ecx']
mov ['edx,', '[ebp+lpData]']
push ['edx']
lea ['eax,', '[ebp+Type]']
push ['eax']
push ['0']
mov ['ecx,', 'ds:_reg_jumplist_value']
push ['ecx']
mov ['edx,', '[ebp+phkResult]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__RegQueryValueExA@24']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '2']
jnz ['short', 'loc_1D0B']
mov ['eax,', '[ebp+lpData]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+lpData]']
mov ['byte', 'ptr', '[ecx+1],', '0']
jmp ['loc_1D9B']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1D3C']
mov ['edx,', '[ebp+lpData]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+phkResult]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RegCloseKey@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '3']
jmp ['loc_1F8D']
jmp ['short', 'loc_1D9B']
cmp ['[ebp+Type],', '7']
jz ['short', 'loc_1D9B']
mov ['esi,', 'esp']
mov ['ecx,', 'ds:_reg_jumplist_value']
push ['ecx']
mov ['edx,', '[ebp+phkResult]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__RegDeleteValueA@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1D8E']
mov ['eax,', '[ebp+lpData]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+phkResult]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__RegCloseKey@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '3']
jmp ['loc_1F8D']
mov ['edx,', '[ebp+lpData]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+lpData]']
mov ['byte', 'ptr', '[eax+1],', '0']
mov ['ecx,', '[ebp+lpData]']
mov ['[ebp+var_40],', 'ecx']
mov ['edx,', '[ebp+var_40]']
sub ['edx,', '[ebp+lpData]']
mov ['eax,', '[ebp+cbData]']
sub ['eax,', '1']
cmp ['edx,', 'eax']
jge ['short', 'loc_1DD1']
mov ['ecx,', '[ebp+var_40]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jnz ['short', 'loc_1DC6']
mov ['eax,', '[ebp+var_40]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1DD1']
mov ['edx,', '[ebp+var_40]']
add ['edx,', '1']
mov ['[ebp+var_40],', 'edx']
jmp ['short', 'loc_1DA1']
mov ['eax,', '[ebp+var_40]']
sub ['eax,', '[ebp+lpData]']
mov ['ecx,', '[ebp+cbData]']
sub ['ecx,', '1']
cmp ['eax,', 'ecx']
jl ['short', 'loc_1DEE']
mov ['edx,', '[ebp+lpData]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+lpData]']
mov ['byte', 'ptr', '[eax+1],', '0']
cmp ['[ebp+Str],', '0']
jnz ['short', 'loc_1DFE']
cmp ['[ebp+Str2],', '0']
jz ['loc_1F40']
cmp ['[ebp+Str],', '0']
jz ['short', 'loc_1E18']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_1E1F']
mov ['[ebp+var_44],', '0']
push ['1']
mov ['edx,', '[ebp+cbData]']
add ['edx,', '[ebp+var_44]']
push ['edx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_34],', 'eax']
mov ['eax,', '[ebp+var_34]']
mov ['[ebp+Dest],', 'eax']
mov ['ecx,', '[ebp+lpData]']
mov ['[ebp+Str1],', 'ecx']
cmp ['[ebp+Str],', '0']
jz ['short', 'loc_1E6B']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strcpy']
add ['esp,', '8']
mov ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['edx,', '[ebp+Dest]']
lea ['eax,', '[edx+eax+1]']
mov ['[ebp+Dest],', 'eax']
mov ['ecx,', '[ebp+Str1]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_1EF1']
cmp ['[ebp+Str2],', '0']
jz ['short', 'loc_1E8F']
mov ['eax,', '[ebp+Str2]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_1ED6']
mov ['edx,', '[ebp+Str1]']
push ['edx']
call ['_open_settings_r']
add ['esp,', '4']
mov ['[ebp+hKey],', 'eax']
cmp ['[ebp+hKey],', '0']
jz ['short', 'loc_1ED6']
mov ['eax,', '[ebp+hKey]']
push ['eax']
call ['_close_settings_r']
add ['esp,', '4']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
mov ['edx,', '[ebp+Dest]']
push ['edx']
call ['_strcpy']
add ['esp,', '8']
mov ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '[ebp+Dest]']
lea ['edx,', '[ecx+eax+1]']
mov ['[ebp+Dest],', 'edx']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '[ebp+Str1]']
lea ['edx,', '[ecx+eax+1]']
mov ['[ebp+Str1],', 'edx']
jmp ['loc_1E6B']
mov ['eax,', '[ebp+Dest]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+Dest]']
add ['ecx,', '1']
mov ['[ebp+Dest],', 'ecx']
mov ['edx,', '[ebp+Dest]']
sub ['edx,', '[ebp+var_34]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_34]']
push ['eax']
push ['7']
push ['0']
mov ['ecx,', 'ds:_reg_jumplist_value']
push ['ecx']
mov ['edx,', '[ebp+phkResult]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__RegSetValueExA@24']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+lpData]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_34]']
mov ['[ebp+lpData],', 'ecx']
jmp ['short', 'loc_1F47']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_1F5D']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_1F5D']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+lpData]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_1F69']
mov ['ecx,', '[ebp+lpData]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+phkResult]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__RegCloseKey@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1F8B']
mov ['eax,', '4']
jmp ['short', 'loc_1F8D']
jmp ['short', 'loc_1F8D']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN34']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '44h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_remove_from_jumplist_registry proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['eax,', '[ebp+Str2]']
push ['eax']
push ['0']
call ['_transform_jumplist_registry']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_get_jumplist_registry_entries proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['0']
push ['0']
call ['_transform_jumplist_registry']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_2073']
push ['1']
push ['2']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[edx+1],', '0']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_4']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_cleanup_all    proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '124h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
push ['0']
call ['_access_random_seed']
add ['esp,', '4']
call ['_clear_jumplist']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+phkResult]']
push ['eax']
push ['offset', '$SG120066']
push ['80000001h']
call ['dword', 'ptr', 'ds:__imp__RegOpenKeyA@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_212E']
mov ['ecx,', '[ebp+phkResult]']
push ['ecx']
call ['_registry_recursive_remove']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+phkResult]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__RegCloseKey@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+phkResult]']
push ['eax']
push ['offset', '$SG120071']
push ['80000001h']
call ['dword', 'ptr', 'ds:__imp__RegOpenKeyA@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['loc_21F4']
mov ['esi,', 'esp']
push ['offset', '$SG120072']
mov ['ecx,', '[ebp+phkResult]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__RegDeleteKeyA@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['105h']
lea ['edx,', '[ebp+Name]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+phkResult]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RegEnumKeyA@16']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+phkResult]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__RegCloseKey@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_21F4']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+phkResult]']
push ['edx']
push ['offset', '$SG120078']
push ['80000001h']
call ['dword', 'ptr', 'ds:__imp__RegOpenKeyA@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_21F4']
mov ['esi,', 'esp']
push ['offset', '$SG120079']
mov ['eax,', '[ebp+phkResult]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RegDeleteKeyA@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+phkResult]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__RegCloseKey@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_4']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '124h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_registry_recursive_remove proc near    
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '124h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+dwIndex],', '0']
mov ['esi,', 'esp']
push ['105h']
lea ['eax,', '[ebp+Name]']
push ['eax']
mov ['ecx,', '[ebp+dwIndex]']
push ['ecx']
mov ['edx,', '[ebp+hKey]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__RegEnumKeyA@16']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_2316']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+phkResult]']
push ['eax']
lea ['ecx,', '[ebp+Name]']
push ['ecx']
mov ['edx,', '[ebp+hKey]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__RegOpenKeyA@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_22F7']
mov ['eax,', '[ebp+phkResult]']
push ['eax']
call ['_registry_recursive_remove']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+phkResult]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__RegCloseKey@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+Name]']
push ['edx']
mov ['eax,', '[ebp+hKey]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RegDeleteKeyA@8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_2286']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_5']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '124h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

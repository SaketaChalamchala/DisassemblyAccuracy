_platform_new_connection proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0B8h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_B8]']
mov ['ecx,', '2Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['0Dh']
mov ['eax,', '[ebp+arg_20]']
push ['eax']
call ['_conf_get_int']
add ['esp,', '8']
cmp ['eax,', '5']
jz ['short', 'loc_B3']
xor ['eax,', 'eax']
jmp ['loc_309']
mov ['ecx,', '[ebp+arg_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_format_telnet_command']
add ['esp,', '0Ch']
mov ['[ebp+lpCommandLine],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_sk_addr_free']
add ['esp,', '4']
mov ['edx,', '[ebp+lpCommandLine]']
push ['edx']
push ['offset', '$SG85653']
call ['_dupprintf']
add ['esp,', '8']
mov ['[ebp+var_B0],', 'eax']
mov ['eax,', '[ebp+var_B0]']
push ['eax']
push ['0']
call ['_logevent']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_B0]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['[ebp+PipeAttributes.nLength],', '0Ch']
mov ['[ebp+PipeAttributes.lpSecurityDescriptor],', '0']
mov ['[ebp+PipeAttributes.bInheritHandle],', '1']
mov ['esi,', 'esp']
push ['0']
lea ['edx,', '[ebp+PipeAttributes]']
push ['edx']
lea ['eax,', '[ebp+hWritePipe]']
push ['eax']
lea ['ecx,', '[ebp+hReadPipe]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__CreatePipe@16']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_171']
mov ['edx,', '[ebp+arg_1C]']
push ['edx']
push ['offset', '$SG85658']
call ['_new_error_socket']
add ['esp,', '8']
mov ['[ebp+var_B4],', 'eax']
mov ['eax,', '[ebp+lpCommandLine]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_B4]']
jmp ['loc_309']
mov ['esi,', 'esp']
push ['0']
lea ['ecx,', '[ebp+PipeAttributes]']
push ['ecx']
lea ['edx,', '[ebp+hObject]']
push ['edx']
lea ['eax,', '[ebp+var_30]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__CreatePipe@16']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_1E6']
mov ['ecx,', '[ebp+arg_1C]']
push ['ecx']
push ['offset', '$SG85661']
call ['_new_error_socket']
add ['esp,', '8']
mov ['[ebp+var_B8],', 'eax']
mov ['edx,', '[ebp+lpCommandLine]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+hReadPipe]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__CloseHandle@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+hWritePipe]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__CloseHandle@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_B8]']
jmp ['loc_309']
mov ['esi,', 'esp']
push ['0']
push ['1']
mov ['edx,', '[ebp+hObject]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SetHandleInformation@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0']
push ['1']
mov ['eax,', '[ebp+hReadPipe]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetHandleInformation@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+StartupInfo.cb],', '44h']
mov ['[ebp+StartupInfo.lpReserved],', '0']
mov ['[ebp+StartupInfo.lpDesktop],', '0']
mov ['[ebp+StartupInfo.lpTitle],', '0']
mov ['[ebp+StartupInfo.dwFlags],', '100h']
xor ['ecx,', 'ecx']
mov ['[ebp+StartupInfo.cbReserved2],', 'cx']
mov ['[ebp+StartupInfo.lpReserved2],', '0']
mov ['edx,', '[ebp+var_30]']
mov ['[ebp+StartupInfo.hStdInput],', 'edx']
mov ['eax,', '[ebp+hWritePipe]']
mov ['[ebp+StartupInfo.hStdOutput],', 'eax']
mov ['[ebp+StartupInfo.hStdError],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+ProcessInformation]']
push ['ecx']
lea ['edx,', '[ebp+StartupInfo]']
push ['edx']
push ['0']
push ['0']
push ['8000020h']
push ['1']
push ['0']
push ['0']
mov ['eax,', '[ebp+lpCommandLine]']
push ['eax']
push ['0']
call ['dword', 'ptr', 'ds:__imp__CreateProcessA@40']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+ProcessInformation.hProcess]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__CloseHandle@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+ProcessInformation.hThread]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__CloseHandle@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+lpCommandLine]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__CloseHandle@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+hWritePipe]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__CloseHandle@4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['0']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+hReadPipe]']
push ['ecx']
mov ['edx,', '[ebp+hObject]']
push ['edx']
call ['_make_handle_socket']
add ['esp,', '10h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '0B8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

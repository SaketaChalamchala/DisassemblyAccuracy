_conf_new       proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['4']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
push ['offset', '_conf_cmp']
call ['_newtree234']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_cmp       proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx]']
cmp ['ecx,', '[eax]']
jge ['short', 'loc_1332']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_13AA']
jmp ['short', 'loc_1345']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx]']
cmp ['ecx,', '[eax]']
jle ['short', 'loc_1345']
mov ['eax,', '1']
jmp ['short', 'loc_13AA']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '_subkeytypes[eax*4]']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '1']
jz ['short', 'loc_1362']
cmp ['[ebp+var_C],', '2']
jz ['short', 'loc_1390']
jmp ['short', 'loc_13A8']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+4]']
cmp ['ecx,', '[eax+4]']
jge ['short', 'loc_1377']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_13AA']
jmp ['short', 'loc_138C']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+4]']
cmp ['ecx,', '[eax+4]']
jle ['short', 'loc_138C']
mov ['eax,', '1']
jmp ['short', 'loc_13AA']
xor ['eax,', 'eax']
jmp ['short', 'loc_13AA']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
jmp ['short', 'loc_13AA']
xor ['eax,', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_free      proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_conf_clear']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_freetree234']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_conf_clear     proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_delpos234']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_142A']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_free_entry']
add ['esp,', '4']
jmp ['short', 'loc_1403']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_free_entry     proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_free_key']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '_valuetypes[edx*4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8']
push ['ecx']
call ['_free_value']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_free_key       proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['_subkeytypes[ecx*4],', '2']
jnz ['short', 'loc_1499']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_free_value     proc near               
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_4],', '2']
jnz ['short', 'loc_14C1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
jmp ['short', 'loc_14EB']
cmp ['[ebp+arg_4],', '3']
jnz ['short', 'loc_14D7']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
call ['_filename_free']
add ['esp,', '4']
jmp ['short', 'loc_14EB']
cmp ['[ebp+arg_4],', '4']
jnz ['short', 'loc_14EB']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_fontspec_free']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_conf_copy_into proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_conf_clear']
add ['esp,', '4']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_1531']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_index234']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_15A2']
push ['0Ch']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_copy_key']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '_valuetypes[edx*4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '8']
push ['edx']
call ['_copy_value']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_add234']
add ['esp,', '8']
jmp ['short', 'loc_1528']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_copy_key       proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '_subkeytypes[ecx*4]']
mov ['[ebp+var_4],', 'edx']
cmp ['[ebp+var_4],', '1']
jz ['short', 'loc_15EA']
cmp ['[ebp+var_4],', '2']
jz ['short', 'loc_15F8']
jmp ['short', 'loc_160D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
jmp ['short', 'loc_160D']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_dupstr']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_copy_value     proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '3']
ja ['short', 'loc_169B']
mov ['edx,', '[ebp+var_4]']
jmp ['ds:$LN9[edx*4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
jmp ['short', 'loc_169B']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_dupstr']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_169B']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_filename_copy']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_169B']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_fontspec_copy']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_copy      proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
call ['_conf_new']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_conf_copy_into']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_get_int   proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['_subkeytypes[eax*4],', '0']
jz ['short', 'loc_1746']
push ['0E7h']
push ['offset', '$SG85696']
push ['offset', '$SG85697']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
cmp ['_valuetypes[edx*4],', '1']
jz ['short', 'loc_176A']
push ['0E8h']
push ['offset', '$SG85699']
push ['offset', '$SG85700']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'ecx']
push ['0']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_find234']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_17A4']
push ['0EBh']
push ['offset', '$SG85703']
push ['offset', '$SG85704']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
mov ['eax,', '[eax+8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_get_int_int proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['_subkeytypes[eax*4],', '1']
jz ['short', 'loc_1826']
push ['0F4h']
push ['offset', '$SG85715']
push ['offset', '$SG85716']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
cmp ['_valuetypes[edx*4],', '1']
jz ['short', 'loc_184A']
push ['0F5h']
push ['offset', '$SG85718']
push ['offset', '$SG85719']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'edx']
push ['0']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_find234']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_188A']
push ['0F9h']
push ['offset', '$SG85722']
push ['offset', '$SG85723']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[ecx+8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_get_str   proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['_subkeytypes[eax*4],', '0']
jz ['short', 'loc_1906']
push ['102h']
push ['offset', '$SG85732']
push ['offset', '$SG85733']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
cmp ['_valuetypes[edx*4],', '2']
jz ['short', 'loc_192A']
push ['103h']
push ['offset', '$SG85735']
push ['offset', '$SG85736']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'ecx']
push ['0']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_find234']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_1964']
push ['106h']
push ['offset', '$SG85739']
push ['offset', '$SG85740']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
mov ['eax,', '[eax+8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_get_str_str_opt proc near         
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['_subkeytypes[eax*4],', '2']
jz ['short', 'loc_19E9']
push ['10Fh']
push ['offset', '$SG85751']
push ['offset', '$SG85752']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
cmp ['_valuetypes[edx*4],', '2']
jz ['short', 'loc_1A0D']
push ['110h']
push ['offset', '$SG85754']
push ['offset', '$SG85755']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'edx']
push ['0']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_find234']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1A41']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_18],', 'ecx']
jmp ['short', 'loc_1A48']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_get_str_str proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_conf_get_str_str_opt']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_1AC7']
push ['11Ah']
push ['offset', '$SG85768']
push ['offset', '$SG85769']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_get_str_strs proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['_subkeytypes[eax*4],', '2']
jz ['short', 'loc_1B16']
push ['124h']
push ['offset', '$SG85782']
push ['offset', '$SG85783']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
cmp ['_valuetypes[edx*4],', '2']
jz ['short', 'loc_1B3A']
push ['125h']
push ['offset', '$SG85785']
push ['offset', '$SG85786']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_1B67']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'edx']
push ['3']
push ['0']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_findrel234']
add ['esp,', '10h']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_1B87']
mov ['[ebp+var_8],', 'offset', '$SG85790']
push ['4']
push ['0']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_findrel234']
add ['esp,', '10h']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1B97']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+arg_4]']
jz ['short', 'loc_1B9B']
xor ['eax,', 'eax']
jmp ['short', 'loc_1BAC']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
mov ['[edx],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_get_str_nthstrkey proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['_subkeytypes[eax*4],', '2']
jz ['short', 'loc_1C2F']
push ['13Ah']
push ['offset', '$SG85806']
push ['offset', '$SG85807']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
cmp ['_valuetypes[edx*4],', '2']
jz ['short', 'loc_1C53']
push ['13Bh']
push ['offset', '$SG85809']
push ['offset', '$SG85810']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_8],', 'offset', '$SG85811']
lea ['edx,', '[ebp+var_1C]']
push ['edx']
push ['4']
push ['0']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_findrelpos234']
add ['esp,', '14h']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1C8D']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+arg_4]']
jz ['short', 'loc_1C91']
xor ['eax,', 'eax']
jmp ['short', 'loc_1CC3']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_index234']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1CB9']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_1CBD']
xor ['eax,', 'eax']
jmp ['short', 'loc_1CC3']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[ecx+4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_get_filename proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['_subkeytypes[eax*4],', '0']
jz ['short', 'loc_1D56']
push ['14Ch']
push ['offset', '$SG85827']
push ['offset', '$SG85828']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
cmp ['_valuetypes[edx*4],', '3']
jz ['short', 'loc_1D7A']
push ['14Dh']
push ['offset', '$SG85830']
push ['offset', '$SG85831']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'ecx']
push ['0']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_find234']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_1DB4']
push ['150h']
push ['offset', '$SG85834']
push ['offset', '$SG85835']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
mov ['eax,', '[eax+8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_get_fontspec proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['_subkeytypes[eax*4],', '0']
jz ['short', 'loc_1E36']
push ['159h']
push ['offset', '$SG85844']
push ['offset', '$SG85845']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
cmp ['_valuetypes[edx*4],', '4']
jz ['short', 'loc_1E5A']
push ['15Ah']
push ['offset', '$SG85847']
push ['offset', '$SG85848']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'ecx']
push ['0']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_find234']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_1E94']
push ['15Dh']
push ['offset', '$SG85851']
push ['offset', '$SG85852']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
mov ['eax,', '[eax+8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8_4']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_set_int   proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['0Ch']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['_subkeytypes[eax*4],', '0']
jz ['short', 'loc_1F16']
push ['165h']
push ['offset', '$SG85864']
push ['offset', '$SG85865']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
cmp ['_valuetypes[edx*4],', '1']
jz ['short', 'loc_1F3A']
push ['166h']
push ['offset', '$SG85867']
push ['offset', '$SG85868']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_conf_insert']
add ['esp,', '8']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_insert    proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_add234']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1FF8']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_1FF8']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
call ['_del234']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_free_entry']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_add234']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+arg_4]']
jz ['short', 'loc_1FF8']
push ['0C5h']
push ['offset', '$SG85668']
push ['offset', '$SG85669']
call ['__wassert']
add ['esp,', '0Ch']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_set_int_int proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['0Ch']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['_subkeytypes[eax*4],', '1']
jz ['short', 'loc_2046']
push ['170h']
push ['offset', '$SG85882']
push ['offset', '$SG85883']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
cmp ['_valuetypes[edx*4],', '1']
jz ['short', 'loc_206A']
push ['171h']
push ['offset', '$SG85885']
push ['offset', '$SG85886']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_C]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_conf_insert']
add ['esp,', '8']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_set_str   proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['0Ch']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['_subkeytypes[eax*4],', '0']
jz ['short', 'loc_20E6']
push ['17Ch']
push ['offset', '$SG85898']
push ['offset', '$SG85899']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
cmp ['_valuetypes[edx*4],', '2']
jz ['short', 'loc_210A']
push ['17Dh']
push ['offset', '$SG85901']
push ['offset', '$SG85902']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_dupstr']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_conf_insert']
add ['esp,', '8']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_set_str_str proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['0Ch']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['_subkeytypes[eax*4],', '2']
jz ['short', 'loc_2186']
push ['188h']
push ['offset', '$SG85916']
push ['offset', '$SG85917']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
cmp ['_valuetypes[edx*4],', '2']
jz ['short', 'loc_21AA']
push ['189h']
push ['offset', '$SG85919']
push ['offset', '$SG85920']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_dupstr']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_dupstr']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_conf_insert']
add ['esp,', '8']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_del_str_str proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['_subkeytypes[eax*4],', '2']
jz ['short', 'loc_2236']
push ['195h']
push ['offset', '$SG85931']
push ['offset', '$SG85932']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
cmp ['_valuetypes[edx*4],', '2']
jz ['short', 'loc_225A']
push ['196h']
push ['offset', '$SG85934']
push ['offset', '$SG85935']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'edx']
push ['0']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_find234']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_22A1']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_del234']
add ['esp,', '8']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_free_entry']
add ['esp,', '4']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8_5']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_set_filename proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['0Ch']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['_subkeytypes[eax*4],', '0']
jz ['short', 'loc_2316']
push ['1A4h']
push ['offset', '$SG85950']
push ['offset', '$SG85951']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
cmp ['_valuetypes[edx*4],', '3']
jz ['short', 'loc_233A']
push ['1A5h']
push ['offset', '$SG85953']
push ['offset', '$SG85954']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_filename_copy']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_conf_insert']
add ['esp,', '8']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_set_fontspec proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['0Ch']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['_subkeytypes[eax*4],', '0']
jz ['short', 'loc_23B6']
push ['1AFh']
push ['offset', '$SG85966']
push ['offset', '$SG85967']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
cmp ['_valuetypes[edx*4],', '4']
jz ['short', 'loc_23DA']
push ['1B0h']
push ['offset', '$SG85969']
push ['offset', '$SG85970']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_fontspec_copy']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_conf_insert']
add ['esp,', '8']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_serialised_size proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_244B']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
call ['_index234']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['loc_2537']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '4']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '_subkeytypes[eax*4]']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_10],', '1']
jz ['short', 'loc_2490']
cmp ['[ebp+var_10],', '2']
jz ['short', 'loc_249B']
jmp ['short', 'loc_24B4']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '4']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_24B4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['edx,', '[ebp+var_C]']
lea ['eax,', '[edx+eax+1]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '_valuetypes[edx*4]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '3']
ja ['short', 'loc_2532']
mov ['edx,', '[ebp+var_14]']
jmp ['ds:$LN16[edx*4]']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_2532']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_C]']
lea ['edx,', '[ecx+eax+1]']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_2532']
push ['0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_filename_serialise']
add ['esp,', '8']
add ['eax,', '[ebp+var_C]']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_2532']
push ['0']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_fontspec_serialise']
add ['esp,', '8']
add ['eax,', '[ebp+var_C]']
mov ['[ebp+var_C],', 'eax']
jmp ['loc_2442']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '4']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_serialise proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_259D']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_index234']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['loc_2788']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
sar ['eax,', '18h']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+1],', 'al']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_10]']
mov ['cl,', '[eax]']
mov ['[edx+3],', 'cl']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '_subkeytypes[ecx*4]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '1']
jz ['short', 'loc_2619']
cmp ['[ebp+var_14],', '2']
jz ['short', 'loc_265C']
jmp ['loc_269D']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+4]']
sar ['ecx,', '18h']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+4]']
sar ['ecx,', '10h']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+1],', 'cl']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+4]']
sar ['ecx,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+2],', 'cl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_10]']
mov ['dl,', '[ecx+4]']
mov ['[eax+3],', 'dl']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_269D']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '_valuetypes[edx*4]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+var_18],', '3']
ja ['loc_2783']
mov ['edx,', '[ebp+var_18]']
jmp ['ds:$LN16_0[edx*4]']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+8]']
sar ['ecx,', '18h']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+8]']
sar ['ecx,', '10h']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+1],', 'cl']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+8]']
sar ['ecx,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+2],', 'cl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_10]']
mov ['dl,', '[ecx+8]']
mov ['[eax+3],', 'dl']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_2783']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_2783']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_filename_serialise']
add ['esp,', '8']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_2783']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_fontspec_serialise']
add ['esp,', '8']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'eax']
jmp ['loc_2594']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx],', '0FFh']
mov ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx+1],', '0FFh']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+2],', '0FFh']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+3],', '0FFh']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_conf_deserialise proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['edi']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_8],', '4']
jl ['$done$86075']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
shl ['eax,', '18h']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
shl ['edx,', '10h']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+3]']
or ['eax,', 'edx']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '4']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+var_10],', '0B2h']
jb ['short', 'loc_2841']
jmp ['$done$86075']
push ['0Ch']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx]']
mov ['eax,', '_subkeytypes[edx*4]']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '1']
jz ['short', 'loc_2878']
cmp ['[ebp+var_24],', '2']
jz ['short', 'loc_28DC']
jmp ['loc_2934']
cmp ['[ebp+arg_8],', '4']
jge ['short', 'loc_288F']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
jmp ['$done$86075']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
shl ['eax,', '18h']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
shl ['edx,', '10h']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+3]']
or ['eax,', 'edx']
push ['eax']
call ['_toint']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '4']
mov ['[ebp+arg_8],', 'eax']
jmp ['short', 'loc_2934']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_memchr']
add ['esp,', '0Ch']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_2908']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
jmp ['$done$86075']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_dupstr']
add ['esp,', '4']
mov ['edx,', '[ebp+var_C]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
sub ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', 'eax']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax]']
mov ['edx,', '_valuetypes[ecx*4]']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_28]']
sub ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '3']
ja ['loc_2B27']
mov ['ecx,', '[ebp+var_28]']
jmp ['ds:$LN29[ecx*4]']
cmp ['[ebp+arg_8],', '4']
jge ['short', 'loc_2995']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
cmp ['_subkeytypes[eax*4],', '2']
jnz ['short', 'loc_2984']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
jmp ['$done$86075']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
shl ['edx,', '18h']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
shl ['ecx,', '10h']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3]']
or ['edx,', 'ecx']
push ['edx']
call ['_toint']
add ['esp,', '4']
mov ['edx,', '[ebp+var_C]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '4']
mov ['[ebp+arg_8],', 'ecx']
jmp ['loc_2B27']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_memchr']
add ['esp,', '0Ch']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_2A2F']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx]']
cmp ['_subkeytypes[edx*4],', '2']
jnz ['short', 'loc_2A1E']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
jmp ['$done$86075']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_dupstr']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
sub ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', 'edx']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
jmp ['loc_2B27']
lea ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_filename_deserialise']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_C]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jnz ['short', 'loc_2AB2']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx]']
cmp ['_subkeytypes[edx*4],', '2']
jnz ['short', 'loc_2AA1']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
jmp ['$done$86075']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_18]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[ebp+var_18]']
mov ['[ebp+arg_8],', 'ecx']
jmp ['short', 'loc_2B27']
lea ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_fontspec_deserialise']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_C]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jnz ['short', 'loc_2B15']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx]']
cmp ['_subkeytypes[edx*4],', '2']
jnz ['short', 'loc_2B07']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
jmp ['short', '$done$86075']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_18]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[ebp+var_18]']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_conf_insert']
add ['esp,', '8']
jmp ['loc_27EA']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN28']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

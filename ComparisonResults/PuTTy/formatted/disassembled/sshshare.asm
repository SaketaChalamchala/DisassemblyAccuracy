_sharestate_free proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_platform_ssh_share_cleanup']
add ['esp,', '4']
push ['0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_delpos234']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_9DE']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_share_connstate_free']
add ['esp,', '4']
jmp ['short', 'loc_9B6']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_freetree234']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jz ['short', 'loc_A20']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+18h]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_connstate_free proc near         
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4034h]']
push ['ecx']
call ['_delpos234']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_AA1']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
jmp ['short', 'loc_A76']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4034h]']
push ['ecx']
call ['_freetree234']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+403Ch]']
push ['eax']
call ['_freetree234']
add ['esp,', '4']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4038h]']
push ['edx']
call ['_delpos234']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_AF0']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
jmp ['short', 'loc_AC5']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4038h]']
push ['edx']
call ['_freetree234']
add ['esp,', '4']
push ['0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4040h]']
push ['ecx']
call ['_delpos234']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_B2D']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_share_xchannel_free']
add ['esp,', '4']
jmp ['short', 'loc_B02']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4040h]']
push ['ecx']
call ['_freetree234']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4044h]']
push ['eax']
call ['_freetree234']
add ['esp,', '4']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4048h]']
push ['edx']
call ['_delpos234']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_B7C']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
jmp ['short', 'loc_B51']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4048h]']
push ['edx']
call ['_freetree234']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+404Ch],', '0']
jz ['short', 'loc_BC8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+404Ch]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+404Ch]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx]']
mov ['[edx+404Ch],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
jmp ['short', 'loc_B8E']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_xchannel_free proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_C22']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
jmp ['short', 'loc_BF7']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_closing  proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_C75']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '$SG87641']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_ssh_sharing_logf']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_share_begin_cleanup']
add ['esp,', '4']
mov ['eax,', '1']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_begin_cleanup proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_share_try_cleanup']
add ['esp,', '4']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_share_try_cleanup proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '234h']
push ['edi']
lea ['edi,', '[ebp+var_234]']
mov ['ecx,', '8Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4034h]']
push ['ecx']
call ['_index234']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['loc_FAB']
mov ['[ebp+var_120],', '0']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
shr ['eax,', '18h']
mov ['ecx,', '[ebp+var_120]']
mov ['[ebp+ecx+Dst],', 'al']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_120]']
mov ['[ebp+ecx+var_117],', 'al']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_120]']
mov ['[ebp+ecx+var_116],', 'al']
mov ['edx,', '[ebp+var_120]']
mov ['eax,', '[ebp+var_C]']
mov ['cl,', '[eax]']
mov ['[ebp+edx+var_115],', 'cl']
mov ['edx,', '[ebp+var_120]']
add ['edx,', '4']
mov ['[ebp+var_120],', 'edx']
mov ['eax,', '[ebp+var_120]']
mov ['[ebp+eax+Dst],', '0']
mov ['ecx,', '[ebp+var_120]']
mov ['[ebp+ecx+var_117],', '0']
mov ['edx,', '[ebp+var_120]']
mov ['[ebp+edx+var_116],', '0']
mov ['eax,', '[ebp+var_120]']
mov ['[ebp+eax+var_115],', '2']
mov ['ecx,', '[ebp+var_120]']
add ['ecx,', '4']
mov ['[ebp+var_120],', 'ecx']
push ['offset', '?reason@?2??share_try_cleanup@@9@9']
call ['_strlen']
add ['esp,', '4']
shr ['eax,', '18h']
mov ['edx,', '[ebp+var_120]']
mov ['[ebp+edx+Dst],', 'al']
push ['offset', '?reason@?2??share_try_cleanup@@9@9']
call ['_strlen']
add ['esp,', '4']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_120]']
mov ['[ebp+ecx+var_117],', 'al']
push ['offset', '?reason@?2??share_try_cleanup@@9@9']
call ['_strlen']
add ['esp,', '4']
shr ['eax,', '8']
mov ['edx,', '[ebp+var_120]']
mov ['[ebp+edx+var_116],', 'al']
push ['offset', '?reason@?2??share_try_cleanup@@9@9']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_120]']
mov ['[ebp+ecx+var_115],', 'al']
mov ['edx,', '[ebp+var_120]']
add ['edx,', '4']
mov ['[ebp+var_120],', 'edx']
push ['offset', '?reason@?2??share_try_cleanup@@9@9']
call ['_strlen']
add ['esp,', '4']
push ['eax']
push ['offset', '?reason@?2??share_try_cleanup@@9@9']
mov ['eax,', '[ebp+var_120]']
lea ['ecx,', '[ebp+eax+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
push ['offset', '?reason@?2??share_try_cleanup@@9@9']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '[ebp+var_120]']
mov ['[ebp+var_120],', 'eax']
push ['offset', '?lang@?2??share_try_cleanup@@9@9']
call ['_strlen']
add ['esp,', '4']
shr ['eax,', '18h']
mov ['edx,', '[ebp+var_120]']
mov ['[ebp+edx+Dst],', 'al']
push ['offset', '?lang@?2??share_try_cleanup@@9@9']
call ['_strlen']
add ['esp,', '4']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_120]']
mov ['[ebp+ecx+var_117],', 'al']
push ['offset', '?lang@?2??share_try_cleanup@@9@9']
call ['_strlen']
add ['esp,', '4']
shr ['eax,', '8']
mov ['edx,', '[ebp+var_120]']
mov ['[ebp+edx+var_116],', 'al']
push ['offset', '?lang@?2??share_try_cleanup@@9@9']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_120]']
mov ['[ebp+ecx+var_115],', 'al']
mov ['edx,', '[ebp+var_120]']
add ['edx,', '4']
mov ['[ebp+var_120],', 'edx']
push ['offset', '?lang@?2??share_try_cleanup@@9@9']
call ['_strlen']
add ['esp,', '4']
push ['eax']
push ['offset', '?lang@?2??share_try_cleanup@@9@9']
mov ['eax,', '[ebp+var_120]']
lea ['ecx,', '[ebp+eax+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
push ['offset', '?lang@?2??share_try_cleanup@@9@9']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '[ebp+var_120]']
mov ['[ebp+var_120],', 'eax']
push ['offset', '$SG87555']
mov ['edx,', '[ebp+var_120]']
push ['edx']
lea ['eax,', '[ebp+Dst]']
push ['eax']
push ['5Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_ssh_send_packet_from_downstream']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_share_remove_halfchannel']
add ['esp,', '8']
jmp ['loc_D12']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_FBD']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4038h]']
push ['edx']
call ['_index234']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['loc_10E2']
mov ['[ebp+var_22C],', '0']
mov ['eax,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[eax+10h],', '1']
jz ['loc_10DD']
mov ['ecx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[ecx+10h],', '3']
jz ['loc_10DD']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
shr ['eax,', '18h']
mov ['ecx,', '[ebp+var_22C]']
mov ['[ebp+ecx+var_224],', 'al']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_22C]']
mov ['[ebp+ecx+var_223],', 'al']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_22C]']
mov ['[ebp+ecx+var_222],', 'al']
mov ['edx,', '[ebp+var_22C]']
mov ['eax,', '[ebp+var_10]']
mov ['cl,', '[eax+8]']
mov ['[ebp+edx+var_221],', 'cl']
mov ['edx,', '[ebp+var_22C]']
add ['edx,', '4']
mov ['[ebp+var_22C],', 'edx']
push ['offset', '$SG87568']
mov ['eax,', '[ebp+var_22C]']
push ['eax']
lea ['ecx,', '[ebp+var_224]']
push ['ecx']
push ['61h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_ssh_send_packet_from_downstream']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[ecx+10h],', '2']
jz ['short', 'loc_10AB']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+10h],', '1']
jmp ['short', 'loc_10DD']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_ssh_delete_sharing_channel']
add ['esp,', '8']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_share_remove_channel']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
jmp ['loc_FB4']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_10F4']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4048h]']
push ['edx']
call ['_index234']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['loc_13CD']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['loc_13C8']
push ['1']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '100h']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_230],', 'eax']
mov ['[ebp+var_234],', '0']
push ['offset', '?request@?8??share_try_cleanup@@9@9']
call ['_strlen']
add ['esp,', '4']
shr ['eax,', '18h']
mov ['ecx,', '[ebp+var_230]']
add ['ecx,', '[ebp+var_234]']
mov ['[ecx],', 'al']
push ['offset', '?request@?8??share_try_cleanup@@9@9']
call ['_strlen']
add ['esp,', '4']
shr ['eax,', '10h']
mov ['edx,', '[ebp+var_230]']
add ['edx,', '[ebp+var_234]']
mov ['[edx+1],', 'al']
push ['offset', '?request@?8??share_try_cleanup@@9@9']
call ['_strlen']
add ['esp,', '4']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_230]']
add ['ecx,', '[ebp+var_234]']
mov ['[ecx+2],', 'al']
push ['offset', '?request@?8??share_try_cleanup@@9@9']
call ['_strlen']
add ['esp,', '4']
mov ['edx,', '[ebp+var_230]']
add ['edx,', '[ebp+var_234]']
mov ['[edx+3],', 'al']
mov ['eax,', '[ebp+var_234]']
add ['eax,', '4']
mov ['[ebp+var_234],', 'eax']
push ['offset', '?request@?8??share_try_cleanup@@9@9']
call ['_strlen']
add ['esp,', '4']
push ['eax']
push ['offset', '?request@?8??share_try_cleanup@@9@9']
mov ['ecx,', '[ebp+var_230]']
add ['ecx,', '[ebp+var_234]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
push ['offset', '?request@?8??share_try_cleanup@@9@9']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '[ebp+var_234]']
mov ['[ebp+var_234],', 'eax']
mov ['edx,', '[ebp+var_230]']
add ['edx,', '[ebp+var_234]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_234]']
add ['eax,', '1']
mov ['[ebp+var_234],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
shr ['eax,', '18h']
mov ['ecx,', '[ebp+var_230]']
add ['ecx,', '[ebp+var_234]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_230]']
add ['ecx,', '[ebp+var_234]']
mov ['[ecx+1],', 'al']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_230]']
add ['ecx,', '[ebp+var_234]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_230]']
add ['ecx,', '[ebp+var_234]']
mov ['[ecx+3],', 'al']
mov ['edx,', '[ebp+var_234]']
add ['edx,', '4']
mov ['[ebp+var_234],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_230]']
add ['ecx,', '[ebp+var_234]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '[ebp+var_234]']
mov ['[ebp+var_234],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
sar ['edx,', '18h']
mov ['eax,', '[ebp+var_230]']
add ['eax,', '[ebp+var_234]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
sar ['edx,', '10h']
mov ['eax,', '[ebp+var_230]']
add ['eax,', '[ebp+var_234]']
mov ['[eax+1],', 'dl']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
sar ['edx,', '8']
mov ['eax,', '[ebp+var_230]']
add ['eax,', '[ebp+var_234]']
mov ['[eax+2],', 'dl']
mov ['ecx,', '[ebp+var_230]']
add ['ecx,', '[ebp+var_234]']
mov ['edx,', '[ebp+var_14]']
mov ['al,', '[edx+4]']
mov ['[ecx+3],', 'al']
mov ['ecx,', '[ebp+var_234]']
add ['ecx,', '4']
mov ['[ebp+var_234],', 'ecx']
push ['offset', '$SG87595']
mov ['edx,', '[ebp+var_234]']
push ['edx']
mov ['eax,', '[ebp+var_230]']
push ['eax']
push ['50h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_ssh_send_packet_from_downstream']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_230]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_share_remove_forwarding']
add ['esp,', '8']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_10EB']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4034h]']
push ['edx']
call ['_count234']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_144A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4038h]']
push ['ecx']
call ['_count234']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_144A']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4048h]']
push ['eax']
call ['_count234']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_144A']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_del234']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_ssh_sharing_downstream_disconnected']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_share_connstate_free']
add ['esp,', '4']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '234h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_remove_halfchannel proc near     
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4034h]']
push ['edx']
call ['_del234']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_share_remove_channel proc near         
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4038h]']
push ['edx']
call ['_del234']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+403Ch]']
push ['edx']
call ['_del234']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jz ['short', 'loc_152D']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_ssh_sharing_remove_x11_display']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_share_remove_forwarding proc near      
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4048h]']
push ['edx']
call ['_del234']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_share_xchannel_add_message proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['1']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '10h']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '10h']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+14h],', '0']
jz ['short', 'loc_15EE']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_15F7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+14h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_dead_xchannel_respond proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['loc_172C']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '62h']
jnz ['loc_170B']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '4']
jle ['loc_170B']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_getstring_size']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jle ['short', 'loc_1709']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[eax+0Ch]']
jge ['short', 'loc_1709']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[eax+ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_1709']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
shr ['ecx,', '18h']
mov ['byte', 'ptr', '[ebp+var_14],', 'cl']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
shr ['eax,', '10h']
mov ['byte', 'ptr', '[ebp+var_14+1],', 'al']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
shr ['edx,', '8']
mov ['byte', 'ptr', '[ebp+var_14+2],', 'dl']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax+4]']
mov ['byte', 'ptr', '[ebp+var_14+3],', 'cl']
push ['offset', '$SG87726']
push ['4']
lea ['edx,', '[ebp+var_14]']
push ['edx']
push ['64h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_ssh_send_packet_from_downstream']
add ['esp,', '18h']
jmp ['short', 'loc_171B']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+4],', '61h']
jnz ['short', 'loc_171B']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
jmp ['loc_1640']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1764']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_ssh_delete_sharing_channel']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_share_remove_xchannel']
add ['esp,', '8']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_remove_xchannel proc near        
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4040h]']
push ['edx']
call ['_del234']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4044h]']
push ['edx']
call ['_del234']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_share_xchannel_free']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_getstring_size proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_getstring_inner']
add ['esp,', '10h']
test ['eax,', 'eax']
jz ['short', 'loc_1828']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_182B']
jmp ['short', 'loc_182B']
or ['eax,', '0FFFFFFFFh']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_getstring_inner proc near              
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '4']
jge ['short', 'loc_1893']
xor ['eax,', 'eax']
jmp ['loc_1917']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
shl ['edx,', '18h']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
shl ['ecx,', '10h']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3]']
or ['edx,', 'ecx']
push ['edx']
call ['_toint']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jl ['short', 'loc_18DA']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '4']
cmp ['[ebp+var_8],', 'edx']
jle ['short', 'loc_18DE']
xor ['eax,', 'eax']
jmp ['short', 'loc_1917']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_18EF']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'eax']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_1912']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '4']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
push ['offset', '$SG87669']
call ['_dupprintf']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '1']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_xchannel_confirmation proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['loc_19F3']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+0Ch],', '4']
jl ['short', 'loc_19BD']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
shr ['edx,', '18h']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
mov ['[ecx],', 'dl']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
mov ['[edx+1],', 'al']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
shr ['ecx,', '8']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+8]']
mov ['[eax+2],', 'cl']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+arg_8]']
mov ['cl,', '[eax]']
mov ['[edx+3],', 'cl']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_send_packet_to_downstream']
add ['esp,', '14h']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
jmp ['loc_1953']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
shr ['eax,', '18h']
mov ['byte', 'ptr', '[ebp+var_10],', 'al']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
shr ['edx,', '10h']
mov ['byte', 'ptr', '[ebp+var_10+1],', 'dl']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
shr ['ecx,', '8']
mov ['byte', 'ptr', '[ebp+var_10+2],', 'cl']
mov ['edx,', '[ebp+arg_4]']
mov ['al,', '[edx+4]']
mov ['byte', 'ptr', '[ebp+var_10+3],', 'al']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_C]']
sub ['edx,', '[ecx+0Ch]']
shr ['edx,', '18h']
mov ['byte', 'ptr', '[ebp+var_C],', 'dl']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_C]']
sub ['ecx,', '[eax+0Ch]']
shr ['ecx,', '10h']
mov ['byte', 'ptr', '[ebp+var_C+1],', 'cl']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '[edx+0Ch]']
shr ['eax,', '8']
mov ['byte', 'ptr', '[ebp+var_C+2],', 'al']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_C]']
sub ['edx,', '[ecx+0Ch]']
mov ['byte', 'ptr', '[ebp+var_C+3],', 'dl']
push ['offset', '$SG87759']
push ['8']
lea ['eax,', '[ebp+var_10]']
push ['eax']
push ['5Dh']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_ssh_send_packet_from_downstream']
add ['esp,', '18h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_send_packet_to_downstream proc near    
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '40h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jnz ['short', 'loc_1AFB']
jmp ['loc_1CF4']
cmp ['[ebp+arg_4],', '5Eh']
jnz ['loc_1C73']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+4]']
shl ['eax,', '18h']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+5]']
shl ['edx,', '10h']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+6]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+7]']
or ['eax,', 'edx']
push ['eax']
call ['_toint']
add ['esp,', '4']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_24],', '0']
jl ['short', 'loc_1B5C']
mov ['ecx,', '[ebp+arg_C]']
sub ['ecx,', '8']
cmp ['[ebp+var_24],', 'ecx']
jle ['short', 'loc_1B65']
mov ['edx,', '[ebp+arg_C]']
sub ['edx,', '8']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+var_24]']
cmp ['ecx,', '[eax+0Ch]']
jle ['short', 'loc_1B7B']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_40],', 'eax']
jmp ['short', 'loc_1B81']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_40],', 'ecx']
mov ['edx,', '[ebp+var_40]']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '9']
sar ['eax,', '18h']
mov ['[ebp+var_1C],', 'al']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '9']
sar ['ecx,', '10h']
mov ['[ebp+var_1B],', 'cl']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '9']
sar ['edx,', '8']
mov ['[ebp+var_1A],', 'dl']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '9']
mov ['[ebp+var_19],', 'al']
mov ['cl,', 'byte', 'ptr', '[ebp+arg_4]']
mov ['[ebp+var_18],', 'cl']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[edx]']
shr ['eax,', '18h']
mov ['[ebp+var_17],', 'al']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ecx]']
shr ['edx,', '10h']
mov ['[ebp+var_16],', 'dl']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
shr ['ecx,', '8']
mov ['[ebp+var_15],', 'cl']
mov ['edx,', '[ebp+arg_10]']
mov ['al,', '[edx]']
mov ['[ebp+var_14],', 'al']
mov ['ecx,', '[ebp+var_28]']
sar ['ecx,', '18h']
mov ['[ebp+var_13],', 'cl']
mov ['edx,', '[ebp+var_28]']
sar ['edx,', '10h']
mov ['[ebp+var_12],', 'dl']
mov ['eax,', '[ebp+var_28]']
sar ['eax,', '8']
mov ['[ebp+var_11],', 'al']
mov ['cl,', 'byte', 'ptr', '[ebp+var_28]']
mov ['[ebp+var_10],', 'cl']
mov ['esi,', 'esp']
push ['0Dh']
lea ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_24]']
sub ['edx,', '[ebp+var_28]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_28]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_24],', '0']
jg ['loc_1B65']
jmp ['loc_1CF4']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '1']
sar ['ecx,', '18h']
mov ['[ebp+var_38],', 'cl']
mov ['edx,', '[ebp+arg_C]']
add ['edx,', '1']
sar ['edx,', '10h']
mov ['[ebp+var_37],', 'dl']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '1']
sar ['eax,', '8']
mov ['[ebp+var_36],', 'al']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '1']
mov ['[ebp+var_35],', 'cl']
mov ['dl,', 'byte', 'ptr', '[ebp+arg_4]']
mov ['[ebp+var_34],', 'dl']
mov ['esi,', 'esp']
push ['5']
lea ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_xchannel_failure proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
shr ['ecx,', '18h']
mov ['byte', 'ptr', '[ebp+var_8],', 'cl']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
shr ['eax,', '10h']
mov ['byte', 'ptr', '[ebp+var_8+1],', 'al']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
shr ['edx,', '8']
mov ['byte', 'ptr', '[ebp+var_8+2],', 'dl']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax+4]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'cl']
push ['offset', '$SG87771']
push ['4']
lea ['edx,', '[ebp+var_8]']
push ['edx']
push ['61h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_ssh_send_packet_from_downstream']
add ['esp,', '18h']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_share_dead_xchannel_respond']
add ['esp,', '8']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_setup_x11_channel proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['ebx']
push ['edi']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_share_add_xchannel']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
lea ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+arg_20]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+20h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+arg_2C]']
push ['edx']
mov ['eax,', '[ebp+arg_28]']
push ['eax']
mov ['ecx,', '[ebp+arg_24]']
push ['ecx']
call ['_x11_make_greeting']
add ['esp,', '24h']
mov ['[ebp+Src],', 'eax']
mov ['edx,', '[ebp+arg_34]']
mov ['eax,', '[ebp+Size]']
lea ['ecx,', '[eax+edx+8]']
push ['ecx']
push ['5Eh']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_share_xchannel_add_message']
add ['esp,', '0Ch']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+Size]']
add ['eax,', '[ebp+arg_34]']
sar ['eax,', '18h']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+8]']
mov ['[edx+4],', 'al']
mov ['eax,', '[ebp+Size]']
add ['eax,', '[ebp+arg_34]']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+8]']
mov ['[edx+5],', 'al']
mov ['eax,', '[ebp+Size]']
add ['eax,', '[ebp+arg_34]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+8]']
mov ['[edx+6],', 'al']
mov ['eax,', '[ebp+Size]']
add ['eax,', '[ebp+arg_34]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+8]']
mov ['[edx+7],', 'al']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
add ['eax,', '8']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_34]']
push ['ecx']
mov ['edx,', '[ebp+arg_30]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+Size]']
lea ['eax,', '[ecx+edx+8]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_18]']
add ['edx,', '[ebp+Size]']
mov ['eax,', '[ebp+var_C]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1Bh']
mov ['[ebp+var_28],', 'eax']
push ['1']
mov ['edx,', '[ebp+var_28]']
push ['edx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_24]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_24]']
mov ['byte', 'ptr', '[ecx+1],', '0']
mov ['edx,', '[ebp+var_24]']
mov ['byte', 'ptr', '[edx+2],', '0']
mov ['eax,', '[ebp+var_24]']
mov ['byte', 'ptr', '[eax+3],', '3']
push ['3']
push ['offset', '$SG87821']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '4']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_C]']
shr ['edx,', '18h']
mov ['eax,', '[ebp+var_24]']
mov ['[eax+7],', 'dl']
mov ['ecx,', '[ebp+arg_C]']
shr ['ecx,', '10h']
mov ['edx,', '[ebp+var_24]']
mov ['[edx+8],', 'cl']
mov ['eax,', '[ebp+arg_C]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx+9],', 'al']
mov ['edx,', '[ebp+var_24]']
mov ['al,', 'byte', 'ptr', '[ebp+arg_C]']
mov ['[edx+0Ah],', 'al']
mov ['ecx,', '[ebp+arg_10]']
shr ['ecx,', '18h']
mov ['edx,', '[ebp+var_24]']
mov ['[edx+0Bh],', 'cl']
mov ['eax,', '[ebp+arg_10]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx+0Ch],', 'al']
mov ['edx,', '[ebp+arg_10]']
shr ['edx,', '8']
mov ['eax,', '[ebp+var_24]']
mov ['[eax+0Dh],', 'dl']
mov ['ecx,', '[ebp+var_24]']
mov ['dl,', 'byte', 'ptr', '[ebp+arg_10]']
mov ['[ecx+0Eh],', 'dl']
mov ['eax,', '[ebp+arg_14]']
shr ['eax,', '18h']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx+0Fh],', 'al']
mov ['edx,', '[ebp+arg_14]']
shr ['edx,', '10h']
mov ['eax,', '[ebp+var_24]']
mov ['[eax+10h],', 'dl']
mov ['ecx,', '[ebp+arg_14]']
shr ['ecx,', '8']
mov ['edx,', '[ebp+var_24]']
mov ['[edx+11h],', 'cl']
mov ['eax,', '[ebp+var_24]']
mov ['cl,', 'byte', 'ptr', '[ebp+arg_14]']
mov ['[eax+12h],', 'cl']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
shr ['eax,', '18h']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx+13h],', 'al']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx+14h],', 'al']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx+15h],', 'al']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx+16h],', 'al']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
push ['eax']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '17h']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ebx,', '[ebp+arg_20]']
sar ['ebx,', '18h']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx+eax+17h],', 'bl']
mov ['ebx,', '[ebp+arg_20]']
sar ['ebx,', '10h']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx+eax+18h],', 'bl']
mov ['ebx,', '[ebp+arg_20]']
sar ['ebx,', '8']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx+eax+19h],', 'bl']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_24]']
mov ['dl,', 'byte', 'ptr', '[ebp+arg_20]']
mov ['[ecx+eax+1Ah],', 'dl']
push ['0']
mov ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
push ['5Ah']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_send_packet_to_downstream']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+24h],', '0']
jz ['short', 'loc_2169']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_ssh_sharing_remove_x11_display']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+1Ch]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+18h],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+20h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+24h],', '0']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['ebx']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_add_xchannel proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['18h']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_8]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4040h]']
push ['eax']
call ['_add234']
add ['esp,', '8']
cmp ['eax,', '[ebp+var_4]']
jz ['short', 'loc_2230']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_2274']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4044h]']
push ['ecx']
call ['_add234']
add ['esp,', '8']
cmp ['eax,', '[ebp+var_4]']
jz ['short', 'loc_2271']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4040h]']
push ['ecx']
call ['_del234']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_2274']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_got_pkt_from_server proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_24]']
sub ['edx,', '51h']
mov ['[ebp+var_24],', 'edx']
cmp ['[ebp+var_24],', '13h']
ja ['$LN1']
mov ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'ds:$LN35[eax]']
jmp ['ds:$LN36[ecx*4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+404Ch]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jnz ['short', 'loc_2321']
cmp ['[ebp+arg_4],', '52h']
jnz ['short', 'loc_2312']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_share_remove_forwarding']
add ['esp,', '8']
jmp ['short', 'loc_231F']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
mov ['dword', 'ptr', '[eax+8],', '1']
jmp ['short', 'loc_2343']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+4],', '1']
jnz ['short', 'loc_2343']
cmp ['[ebp+arg_4],', '51h']
jnz ['short', 'loc_2343']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_share_remove_forwarding']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jz ['short', 'loc_2366']
push ['0']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_send_packet_to_downstream']
add ['esp,', '14h']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['[ecx+404Ch],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+404Ch],', '0']
jnz ['short', 'loc_2399']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4050h],', '0']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jnz ['short', 'loc_23AE']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_share_try_cleanup']
add ['esp,', '4']
jmp ['loc_267D']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
call ['_getstring_size']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jge ['short', 'loc_23E3']
push ['4B3h']
push ['offset', '$SG87881']
push ['offset', '$SG87882']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '18h']
mov ['edx,', '[ebp+Src]']
add ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
shl ['eax,', '10h']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+Src]']
add ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+2]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+Src]']
add ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+3]']
or ['ecx,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_share_add_halfchannel']
add ['esp,', '8']
push ['0']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_send_packet_to_downstream']
add ['esp,', '14h']
jmp ['loc_267D']
cmp ['[ebp+Size],', '4']
jge ['short', 'loc_2468']
push ['4C9h']
push ['offset', '$SG87894']
push ['offset', '$SG87895']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+Src]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
shl ['eax,', '18h']
mov ['ecx,', '[ebp+Src]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
shl ['edx,', '10h']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+Src]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+Src]']
movzx ['edx,', 'byte', 'ptr', '[ecx+3]']
or ['eax,', 'edx']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_share_find_channel_by_upstream']
add ['esp,', '8']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jz ['loc_25FB']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
shr ['eax,', '18h']
mov ['ecx,', '[ebp+Src]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+Src]']
mov ['[ecx+1],', 'al']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+Src]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+Src]']
mov ['eax,', '[ebp+var_18]']
mov ['cl,', '[eax]']
mov ['[edx+3],', 'cl']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_send_packet_to_downstream']
add ['esp,', '14h']
cmp ['[ebp+arg_4],', '5Bh']
jnz ['short', 'loc_256F']
mov ['ecx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[ecx+10h],', '3']
jnz ['short', 'loc_256A']
cmp ['[ebp+Size],', '8']
jl ['short', 'loc_256A']
push ['0']
mov ['edx,', '[ebp+Src]']
movzx ['eax,', 'byte', 'ptr', '[edx+4]']
shl ['eax,', '18h']
mov ['ecx,', '[ebp+Src]']
movzx ['edx,', 'byte', 'ptr', '[ecx+5]']
shl ['edx,', '10h']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+Src]']
movzx ['edx,', 'byte', 'ptr', '[ecx+6]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+Src]']
movzx ['edx,', 'byte', 'ptr', '[ecx+7]']
or ['eax,', 'edx']
push ['eax']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_share_channel_set_server_id']
add ['esp,', '10h']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jnz ['short', 'loc_256A']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_share_try_cleanup']
add ['esp,', '4']
jmp ['loc_25F9']
cmp ['[ebp+arg_4],', '5Ch']
jnz ['short', 'loc_25A0']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_ssh_delete_sharing_channel']
add ['esp,', '8']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_share_remove_channel']
add ['esp,', '8']
jmp ['short', 'loc_25F9']
cmp ['[ebp+arg_4],', '61h']
jnz ['short', 'loc_25F9']
mov ['edx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[edx+10h],', '1']
jnz ['short', 'loc_25EF']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_ssh_delete_sharing_channel']
add ['esp,', '8']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_share_remove_channel']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jnz ['short', 'loc_25ED']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_share_try_cleanup']
add ['esp,', '4']
jmp ['short', 'loc_25F9']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+10h],', '2']
jmp ['short', 'loc_265B']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_share_find_xchannel_by_upstream']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_265B']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_share_xchannel_add_message']
add ['esp,', '0Ch']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_1C]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jnz ['short', 'loc_265B']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_share_dead_xchannel_respond']
add ['esp,', '8']
jmp ['short', 'loc_267D']
mov ['ecx,', 'offset', '$SG87935']
test ['ecx,', 'ecx']
jz ['short', 'loc_267D']
push ['505h']
push ['offset', '$SG87936']
push ['offset', '$SG87937']
call ['__wassert']
add ['esp,', '0Ch']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_add_halfchannel proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['4']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4034h]']
push ['ecx']
call ['_add234']
add ['esp,', '8']
cmp ['eax,', '[ebp+var_4]']
jz ['short', 'loc_270B']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_270E']
jmp ['short', 'loc_270E']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_channel_set_server_id proc near  
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_C]']
mov ['[edx+10h],', 'eax']
cmp ['[ebp+arg_C],', '3']
jnz ['short', 'loc_274E']
push ['251h']
push ['offset', '$SG87377']
push ['offset', '$SG87378']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+403Ch]']
push ['ecx']
call ['_add234']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_share_find_channel_by_upstream proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['edi']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_28],', 'eax']
push ['0']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4038h]']
push ['eax']
call ['_find234']
add ['esp,', '0Ch']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_find_xchannel_by_upstream proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_1C],', 'eax']
push ['0']
lea ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4040h]']
push ['eax']
call ['_find234']
add ['esp,', '0Ch']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_receive  proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+Str],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+10h]']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '719h']
jg ['short', 'loc_28DE']
cmp ['[ebp+var_1C],', '719h']
jz ['loc_2AB7']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_28F0']
cmp ['[ebp+var_1C],', '6F5h']
jz ['short', 'loc_2923']
jmp ['$dead$88297']
cmp ['[ebp+var_1C],', '726h']
jz ['loc_2BB5']
jmp ['$dead$88297']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4030h],', '0']
mov ['edx,', '1']
test ['edx,', 'edx']
jz ['loc_29BB']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_2925']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax],', '6F5h']
mov ['eax,', '1']
jmp ['loc_2C3A']
jmp ['short', 'loc_290A']
mov ['ecx,', '[ebp+arg_C]']
sub ['ecx,', '1']
mov ['[ebp+arg_C],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['al,', '[edx]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'al']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '1']
mov ['[ebp+arg_8],', 'ecx']
xor ['edx,', 'edx']
jnz ['short', 'loc_290A']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_8+3]']
cmp ['eax,', '0Ah']
jnz ['short', 'loc_294E']
jmp ['short', 'loc_29BB']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4030h],', '4010h']
jb ['short', 'loc_298E']
push ['offset', '$SG88296']
call ['_dupprintf']
add ['esp,', '4']
mov ['[ebp+Str],', 'eax']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_share_disconnect']
add ['esp,', '8']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
jmp ['$dead$88297']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4030h]']
mov ['ecx,', '[ebp+var_4]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_8+3]']
mov ['[ecx+eax+20h],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4030h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4030h],', 'ecx']
jmp ['loc_28FD']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4030h],', '2Eh']
jb ['short', 'loc_29E1']
push ['2Eh']
push ['offset', '?expected_verstring_prefix@?1??share_receive@@9@9']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '20h']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_2A12']
push ['offset', '$SG88301']
call ['_dupprintf']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_share_disconnect']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
jmp ['$dead$88297']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+4030h],', '0']
jle ['short', 'loc_2A49']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4030h]']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx+1Fh]']
cmp ['eax,', '0Dh']
jnz ['short', 'loc_2A49']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4030h]']
sub ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4030h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '20h']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4030h]']
push ['eax']
push ['offset', '$SG88303']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_ssh_sharing_logf']
add ['esp,', '14h']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['$dead$88297']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4030h],', '0']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+4030h],', '4']
jge ['short', 'loc_2B01']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_2AB9']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax],', '719h']
mov ['eax,', '1']
jmp ['loc_2C3A']
jmp ['short', 'loc_2A9E']
mov ['ecx,', '[ebp+arg_C]']
sub ['ecx,', '1']
mov ['[ebp+arg_C],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['al,', '[edx]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'al']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '1']
mov ['[ebp+arg_8],', 'ecx']
xor ['edx,', 'edx']
jnz ['short', 'loc_2A9E']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4030h]']
mov ['edx,', '[ebp+var_4]']
mov ['al,', 'byte', 'ptr', '[ebp+var_8+3]']
mov ['[edx+ecx+20h],', 'al']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4030h]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4030h],', 'edx']
jmp ['short', 'loc_2A92']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+20h]']
shl ['edx,', '18h']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+21h]']
shl ['ecx,', '10h']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+22h]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+23h]']
or ['edx,', 'ecx']
add ['edx,', '4']
push ['edx']
call ['_toint']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+1Ch],', 'eax']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+1Ch],', '5']
jl ['short', 'loc_2B53']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+1Ch],', '4010h']
jbe ['short', 'loc_2B8B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
push ['eax']
push ['offset', '$SG88330']
call ['_dupprintf']
add ['esp,', '8']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_share_disconnect']
add ['esp,', '8']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
jmp ['$dead$88297']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+4030h]']
cmp ['eax,', '[edx+1Ch]']
jge ['short', 'loc_2BFF']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_2BB7']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx],', '726h']
mov ['eax,', '1']
jmp ['loc_2C3A']
jmp ['short', 'loc_2B9C']
mov ['edx,', '[ebp+arg_C]']
sub ['edx,', '1']
mov ['[ebp+arg_C],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['cl,', '[eax]']
mov ['byte', 'ptr', '[ebp+var_8+3],', 'cl']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '1']
mov ['[ebp+arg_8],', 'edx']
xor ['eax,', 'eax']
jnz ['short', 'loc_2B9C']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4030h]']
mov ['eax,', '[ebp+var_4]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_8+3]']
mov ['[eax+edx+20h],', 'cl']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4030h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4030h],', 'eax']
jmp ['short', 'loc_2B8B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4030h]']
sub ['eax,', '5']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '25h']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+24h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_share_got_pkt_from_downstream']
add ['esp,', '10h']
jmp ['loc_2A78']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '1']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_disconnect proc near             
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+Size],', '0CCCCCCCCh']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+Size],', 'eax']
push ['1']
mov ['ecx,', '[ebp+Size]']
add ['ecx,', '100h']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_C]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_C]']
mov ['byte', 'ptr', '[eax+1],', '0']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_C]']
mov ['byte', 'ptr', '[ecx+2],', '0']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_C]']
mov ['byte', 'ptr', '[edx+3],', '2']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+Size]']
sar ['ecx,', '18h']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_C]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+Size]']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_C]']
mov ['[ecx+1],', 'al']
mov ['edx,', '[ebp+Size]']
sar ['edx,', '8']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_C]']
mov ['[eax+2],', 'dl']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_C]']
mov ['dl,', 'byte', 'ptr', '[ebp+Size]']
mov ['[ecx+3],', 'dl']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_C]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+Size]']
mov ['[ebp+var_C],', 'ecx']
push ['offset', '?lang@?1??share_disconnect@@9@9']
call ['_strlen']
add ['esp,', '4']
shr ['eax,', '18h']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_C]']
mov ['[edx],', 'al']
push ['offset', '?lang@?1??share_disconnect@@9@9']
call ['_strlen']
add ['esp,', '4']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_C]']
mov ['[ecx+1],', 'al']
push ['offset', '?lang@?1??share_disconnect@@9@9']
call ['_strlen']
add ['esp,', '4']
shr ['eax,', '8']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_C]']
mov ['[edx+2],', 'al']
push ['offset', '?lang@?1??share_disconnect@@9@9']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_C]']
mov ['[ecx+3],', 'al']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '4']
mov ['[ebp+var_C],', 'edx']
push ['offset', '?lang@?1??share_disconnect@@9@9']
call ['_strlen']
add ['esp,', '4']
push ['eax']
push ['offset', '?lang@?1??share_disconnect@@9@9']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_C]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
push ['offset', '?lang@?1??share_disconnect@@9@9']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '[ebp+var_C]']
mov ['[ebp+var_C],', 'eax']
push ['0']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_send_packet_to_downstream']
add ['esp,', '14h']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_share_begin_cleanup']
add ['esp,', '4']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_got_pkt_from_downstream proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0B4h']
push ['edi']
lea ['edi,', '[ebp+var_B4]']
mov ['ecx,', '2Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_B4],', 'eax']
mov ['ecx,', '[ebp+var_B4]']
sub ['ecx,', '1']
mov ['[ebp+var_B4],', 'ecx']
cmp ['[ebp+var_B4],', '63h']
ja ['$LN1_0']
mov ['edx,', '[ebp+var_B4]']
movzx ['eax,', 'ds:$LN69[edx]']
jmp ['ds:$LN74[eax*4]']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_share_begin_cleanup']
add ['esp,', '4']
jmp ['loc_3F21']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_getstring']
add ['esp,', '8']
mov ['[ebp+Str1],', 'eax']
cmp ['[ebp+Str1],', '0']
jnz ['short', 'loc_2E97']
push ['offset', '$SG87968']
call ['_dupprintf']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
jmp ['$confused$87969']
push ['offset', '$SG87971']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['loc_30FE']
mov ['edx,', '[ebp+Str1]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_getstring_size']
add ['esp,', '8']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jl ['short', 'loc_2EDD']
mov ['edx,', '[ebp+var_30]']
cmp ['edx,', '[ebp+arg_C]']
jl ['short', 'loc_2EF2']
push ['offset', '$SG87979']
call ['_dupprintf']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
jmp ['$confused$87969']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_30]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+var_30]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', 'edx']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ebp+arg_8]']
lea ['eax,', '[edx+ecx+1]']
push ['eax']
call ['_getstring_size']
add ['esp,', '8']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ebp+var_38]']
lea ['eax,', '[edx+ecx+1]']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jl ['short', 'loc_2F3E']
mov ['ecx,', '[ebp+arg_C]']
sub ['ecx,', '4']
cmp ['[ebp+var_38],', 'ecx']
jle ['short', 'loc_2F53']
push ['offset', '$SG87982']
call ['_dupprintf']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
jmp ['$confused$87969']
mov ['edx,', '[ebp+var_30]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', 'edx']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ebp+arg_8]']
lea ['eax,', '[edx+ecx+1]']
push ['eax']
call ['_getstring']
add ['esp,', '8']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_40],', '0']
jnz ['short', 'loc_2F92']
push ['54Ah']
push ['offset', '$SG87985']
push ['offset', '$SG87986']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+var_38]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
shl ['eax,', '18h']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+var_38]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
shl ['edx,', '10h']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+var_38]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+var_38]']
movzx ['edx,', 'byte', 'ptr', '[ecx+3]']
or ['eax,', 'edx']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_40]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_ssh_alloc_sharing_rportfwd']
add ['esp,', '10h']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jnz ['short', 'loc_3014']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_300F']
push ['0']
push ['0']
push ['offset', '$SG87998']
push ['52h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_send_packet_to_downstream']
add ['esp,', '14h']
jmp ['loc_30ED']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+var_30]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_30]']
mov ['byte', 'ptr', '[eax],', '1']
mov ['ecx,', '[ebp+var_44]']
neg ['ecx']
sbb ['ecx,', 'ecx']
not ['ecx']
and ['ecx,', 'offset', '$SG88002']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_ssh_send_packet_from_downstream']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_40]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_share_add_forwarding']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_ssh_sharing_queue_global_request']
add ['esp,', '8']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_30ED']
push ['10h']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
mov ['edx,', '[ebp+var_1C]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4050h],', '0']
jz ['short', 'loc_30C5']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4050h]']
mov ['eax,', '[ebp+var_1C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_30D1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_1C]']
mov ['[ecx+404Ch],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[ebp+var_34]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_40]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
jmp ['loc_3341']
push ['offset', '$SG88011']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['loc_32DB']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_getstring_size']
add ['esp,', '8']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '0']
jl ['short', 'loc_3144']
mov ['ecx,', '[ebp+var_48]']
cmp ['ecx,', '[ebp+arg_C]']
jl ['short', 'loc_3159']
push ['offset', '$SG88019']
call ['_dupprintf']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
jmp ['$confused$87969']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+var_48]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['[ebp+var_4C],', 'eax']
mov ['ecx,', '[ebp+var_48]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_C]']
sub ['edx,', 'ecx']
push ['edx']
mov ['eax,', '[ebp+var_48]']
mov ['ecx,', '[ebp+arg_8]']
lea ['edx,', '[ecx+eax+1]']
push ['edx']
call ['_getstring_size']
add ['esp,', '8']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_48]']
mov ['ecx,', '[ebp+var_50]']
lea ['edx,', '[ecx+eax+1]']
mov ['[ebp+var_50],', 'edx']
cmp ['[ebp+var_50],', '0']
jl ['short', 'loc_31A5']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '4']
cmp ['[ebp+var_50],', 'eax']
jle ['short', 'loc_31BA']
push ['offset', '$SG88022']
call ['_dupprintf']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
jmp ['$confused$87969']
mov ['ecx,', '[ebp+var_48]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_C]']
sub ['edx,', 'ecx']
push ['edx']
mov ['eax,', '[ebp+var_48]']
mov ['ecx,', '[ebp+arg_8]']
lea ['edx,', '[ecx+eax+1]']
push ['edx']
call ['_getstring']
add ['esp,', '8']
mov ['[ebp+var_54],', 'eax']
cmp ['[ebp+var_54],', '0']
jnz ['short', 'loc_31F9']
push ['593h']
push ['offset', '$SG88025']
push ['offset', '$SG88026']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+var_50]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
shl ['edx,', '18h']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
shl ['ecx,', '10h']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3]']
or ['edx,', 'ecx']
mov ['[ebp+var_50],', 'edx']
mov ['edx,', '[ebp+var_50]']
push ['edx']
mov ['eax,', '[ebp+var_54]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_share_find_forwarding']
add ['esp,', '0Ch']
mov ['[ebp+var_58],', 'eax']
cmp ['[ebp+var_58],', '0']
jnz ['short', 'loc_326E']
cmp ['[ebp+var_4C],', '0']
jz ['short', 'loc_326C']
push ['0']
push ['0']
push ['offset', '$SG88038']
push ['52h']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_send_packet_to_downstream']
add ['esp,', '14h']
jmp ['short', 'loc_32CD']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_48]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_5C],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+var_48]']
mov ['byte', 'ptr', '[edx],', '1']
mov ['eax,', '[ebp+var_5C]']
neg ['eax']
sbb ['eax,', 'eax']
not ['eax']
and ['eax,', 'offset', '$SG88042']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_ssh_send_packet_from_downstream']
add ['esp,', '18h']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_ssh_sharing_queue_global_request']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_54]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
jmp ['short', 'loc_3341']
mov ['edx,', '[ebp+Str1]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_getstring_size']
add ['esp,', '8']
mov ['[ebp+var_60],', 'eax']
cmp ['[ebp+var_60],', '0']
jl ['short', 'loc_3308']
mov ['edx,', '[ebp+var_60]']
cmp ['edx,', '[ebp+arg_C]']
jl ['short', 'loc_331D']
push ['offset', '$SG88047']
call ['_dupprintf']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
jmp ['$confused$87969']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_60]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3341']
push ['0']
push ['0']
push ['offset', '$SG88050']
push ['52h']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_send_packet_to_downstream']
add ['esp,', '14h']
jmp ['loc_3F21']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_getstring_size']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jl ['short', 'loc_336A']
mov ['edx,', '[ebp+arg_C]']
sub ['edx,', '0Ch']
cmp ['[ebp+var_C],', 'edx']
jle ['short', 'loc_337F']
push ['offset', '$SG88054']
call ['_dupprintf']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
jmp ['$confused$87969']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '18h']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
shl ['eax,', '10h']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+2]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+3]']
or ['ecx,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_ssh_alloc_sharing_channel']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
shl ['eax,', '18h']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+9]']
shl ['edx,', '10h']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Ah]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Bh]']
or ['eax,', 'edx']
push ['eax']
push ['3']
push ['0']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_share_add_channel']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_14]']
shr ['eax,', '18h']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+var_C]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_14]']
shr ['edx,', '10h']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_C]']
mov ['[eax+1],', 'dl']
mov ['ecx,', '[ebp+var_14]']
shr ['ecx,', '8']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+var_C]']
mov ['[edx+2],', 'cl']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_14]']
mov ['[eax+3],', 'cl']
push ['0']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_ssh_send_packet_from_downstream']
add ['esp,', '18h']
jmp ['loc_3F21']
cmp ['[ebp+arg_C],', '10h']
jge ['short', 'loc_34A0']
push ['offset', '$SG88078']
call ['_dupprintf']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
jmp ['$confused$87969']
mov ['[ebp+var_C],', '4']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
shl ['edx,', '18h']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
shl ['ecx,', '10h']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3]']
or ['edx,', 'ecx']
mov ['[ebp+var_10],', 'edx']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
shl ['eax,', '18h']
mov ['ecx,', '[ebp+arg_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
shl ['edx,', '10h']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+3]']
or ['eax,', 'edx']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_28],', '0']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_share_find_halfchannel']
add ['esp,', '8']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_354F']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_ssh_alloc_sharing_channel']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_358B']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_share_find_xchannel_by_server']
add ['esp,', '8']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_3572']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_358B']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
push ['offset', '$SG88104']
call ['_dupprintf']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
jmp ['$confused$87969']
mov ['edx,', '[ebp+var_14]']
shr ['edx,', '18h']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_C]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_14]']
shr ['ecx,', '10h']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+var_C]']
mov ['[edx+1],', 'cl']
mov ['eax,', '[ebp+var_14]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+var_C]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+var_C]']
mov ['al,', 'byte', 'ptr', '[ebp+var_14]']
mov ['[edx+3],', 'al']
mov ['ecx,', '[ebp+arg_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Ch]']
shl ['edx,', '18h']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Dh]']
shl ['ecx,', '10h']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Eh]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Fh]']
or ['edx,', 'ecx']
push ['edx']
push ['0']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_share_add_channel']
add ['esp,', '18h']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_364B']
push ['0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_ssh_send_packet_from_downstream']
add ['esp,', '18h']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_share_remove_halfchannel']
add ['esp,', '8']
jmp ['short', 'loc_36C9']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_36C9']
mov ['ecx,', '[ebp+arg_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
shl ['edx,', '18h']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
shl ['ecx,', '10h']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Bh]']
or ['edx,', 'ecx']
mov ['[ebp+var_64],', 'edx']
cmp ['[ebp+var_64],', '100h']
jnb ['short', 'loc_36A1']
mov ['edx,', '[ebp+var_64]']
push ['edx']
push ['offset', '$SG88131']
call ['_dupprintf']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
jmp ['$confused$87969']
mov ['eax,', '[ebp+var_64]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_share_xchannel_confirmation']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_share_remove_xchannel']
add ['esp,', '8']
jmp ['loc_3F21']
cmp ['[ebp+arg_C],', '4']
jge ['short', 'loc_36E9']
push ['offset', '$SG88134']
call ['_dupprintf']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
jmp ['$confused$87969']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '18h']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
shl ['eax,', '10h']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+2]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+3]']
or ['ecx,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_share_find_halfchannel']
add ['esp,', '8']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_3768']
push ['0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_ssh_send_packet_from_downstream']
add ['esp,', '18h']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_share_remove_halfchannel']
add ['esp,', '8']
jmp ['short', 'loc_37AC']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_share_find_xchannel_by_server']
add ['esp,', '8']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_3793']
mov ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_share_xchannel_failure']
add ['esp,', '8']
jmp ['short', 'loc_37AC']
mov ['edx,', '[ebp+var_18]']
push ['edx']
push ['offset', '$SG88151']
call ['_dupprintf']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
jmp ['$confused$87969']
jmp ['loc_3F21']
cmp ['[ebp+arg_4],', '62h']
jnz ['loc_3E13']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '4']
push ['ecx']
call ['_getstring']
add ['esp,', '8']
mov ['[ebp+Str1],', 'eax']
cmp ['[ebp+Str1],', '0']
jz ['loc_3E13']
push ['offset', '$SG88156']
mov ['edx,', '[ebp+Str1]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['loc_38DE']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_ssh_agent_forwarding_permitted']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['loc_38DE']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '18h']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
shl ['eax,', '10h']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+2]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+3]']
or ['ecx,', 'eax']
mov ['[ebp+var_68],', 'ecx']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_68]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_share_find_channel_by_server']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_38A4']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx]']
shr ['edx,', '18h']
mov ['[ebp+var_70],', 'dl']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax]']
shr ['ecx,', '10h']
mov ['[ebp+var_6F],', 'cl']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx]']
shr ['eax,', '8']
mov ['[ebp+var_6E],', 'al']
mov ['ecx,', '[ebp+var_20]']
mov ['dl,', '[ecx]']
mov ['[ebp+var_6D],', 'dl']
push ['0']
push ['4']
lea ['eax,', '[ebp+var_70]']
push ['eax']
push ['64h']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_send_packet_to_downstream']
add ['esp,', '14h']
jmp ['short', 'loc_38D9']
mov ['edx,', '[ebp+var_68]']
push ['edx']
push ['offset', '$SG88175']
call ['_dupprintf']
add ['esp,', '8']
mov ['[ebp+Str],', 'eax']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_share_disconnect']
add ['esp,', '8']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
jmp ['loc_3F21']
jmp ['loc_3F21']
push ['offset', '$SG88177']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['loc_3E07']
mov ['ecx,', '[ebp+arg_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
shl ['edx,', '18h']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
shl ['ecx,', '10h']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3]']
or ['edx,', 'ecx']
mov ['[ebp+var_7C],', 'edx']
mov ['edx,', '[ebp+Str1]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_7C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_share_find_channel_by_server']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_3987']
mov ['edx,', '[ebp+var_7C]']
push ['edx']
push ['offset', '$SG88198']
call ['_dupprintf']
add ['esp,', '8']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_A4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_share_disconnect']
add ['esp,', '8']
mov ['edx,', '[ebp+var_A4]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
jmp ['loc_3F21']
cmp ['[ebp+arg_C],', '11h']
jge ['short', 'loc_39A2']
push ['offset', '$SG88200']
call ['_dupprintf']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
jmp ['$confused$87969']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Fh]']
neg ['ecx']
sbb ['ecx,', 'ecx']
neg ['ecx']
mov ['[ebp+var_80],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+10h]']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['[ebp+var_84],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
sub ['ecx,', '11h']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '11h']
push ['edx']
call ['_getstring']
add ['esp,', '8']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_8C]']
push ['eax']
call ['_x11_identify_auth_proto']
add ['esp,', '4']
mov ['[ebp+var_94],', 'eax']
mov ['ecx,', '[ebp+var_8C]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_C]']
sub ['edx,', '11h']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '11h']
push ['eax']
call ['_getstring_size']
add ['esp,', '8']
add ['eax,', '11h']
mov ['[ebp+var_A0],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
sub ['ecx,', '[ebp+var_A0]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+var_A0]']
push ['edx']
call ['_getstring']
add ['esp,', '8']
mov ['[ebp+var_90],', 'eax']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '[ebp+var_A0]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+var_A0]']
push ['ecx']
call ['_getstring_size']
add ['esp,', '8']
add ['eax,', '[ebp+var_A0]']
mov ['[ebp+var_A0],', 'eax']
mov ['edx,', '[ebp+var_A0]']
add ['edx,', '4']
cmp ['[ebp+arg_C],', 'edx']
jge ['short', 'loc_3AA0']
push ['offset', '$SG88202']
call ['_dupprintf']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_90]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
jmp ['$confused$87969']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+var_A0]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
shl ['edx,', '18h']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_A0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
shl ['ecx,', '10h']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_A0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2]']
shl ['ecx,', '8']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_A0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3]']
or ['edx,', 'ecx']
mov ['[ebp+var_88],', 'edx']
cmp ['[ebp+var_94],', '0']
jge ['short', 'loc_3B53']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx]']
shr ['eax,', '18h']
mov ['[ebp+var_AC],', 'al']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx]']
shr ['edx,', '10h']
mov ['[ebp+var_AB],', 'dl']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax]']
shr ['ecx,', '8']
mov ['[ebp+var_AA],', 'cl']
mov ['edx,', '[ebp+var_20]']
mov ['al,', '[edx]']
mov ['[ebp+var_A9],', 'al']
push ['0']
push ['4']
lea ['ecx,', '[ebp+var_AC]']
push ['ecx']
push ['64h']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_send_packet_to_downstream']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_90]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
jmp ['loc_3F21']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_94]']
mov ['[ecx+18h],', 'edx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '20h']
push ['eax']
mov ['ecx,', '[ebp+var_90]']
push ['ecx']
call ['_x11_dehexify']
add ['esp,', '8']
mov ['edx,', '[ebp+var_20]']
mov ['[edx+1Ch],', 'eax']
mov ['eax,', '[ebp+var_90]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_94]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_ssh_sharing_add_x11_display']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx+14h],', 'eax']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_84]']
mov ['[edx+24h],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+14h]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+Size],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+14h]']
mov ['eax,', '[edx+10h]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_9C],', 'eax']
mov ['ecx,', '[ebp+var_9C]']
mov ['edx,', '[ebp+Size]']
lea ['eax,', '[edx+ecx+1Dh]']
mov ['[ebp+arg_C],', 'eax']
push ['1']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+arg_8],', 'eax']
mov ['edx,', '[ebp+var_7C]']
shr ['edx,', '18h']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_7C]']
shr ['ecx,', '10h']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+1],', 'cl']
mov ['eax,', '[ebp+var_7C]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+arg_8]']
mov ['al,', 'byte', 'ptr', '[ebp+var_7C]']
mov ['[edx+3],', 'al']
mov ['ecx,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[edx+5],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[eax+6],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[ecx+7],', '7']
push ['7']
push ['offset', '$SG88228']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '8']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_8]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_80]']
mov ['[eax+0Fh],', 'cl']
mov ['edx,', '[ebp+arg_8]']
mov ['al,', 'byte', 'ptr', '[ebp+var_84]']
mov ['[edx+10h],', 'al']
mov ['ecx,', '[ebp+Size]']
sar ['ecx,', '18h']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+11h],', 'cl']
mov ['eax,', '[ebp+Size]']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+12h],', 'al']
mov ['edx,', '[ebp+Size]']
sar ['edx,', '8']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax+13h],', 'dl']
mov ['ecx,', '[ebp+arg_8]']
mov ['dl,', 'byte', 'ptr', '[ebp+Size]']
mov ['[ecx+14h],', 'dl']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+14h]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '15h']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_9C]']
sar ['edx,', '18h']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+Size]']
mov ['[eax+15h],', 'dl']
mov ['ecx,', '[ebp+var_9C]']
sar ['ecx,', '10h']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+Size]']
mov ['[edx+16h],', 'cl']
mov ['eax,', '[ebp+var_9C]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[ebp+Size]']
mov ['[ecx+17h],', 'al']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+Size]']
mov ['al,', 'byte', 'ptr', '[ebp+var_9C]']
mov ['[edx+18h],', 'al']
mov ['ecx,', '[ebp+var_9C]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx+14h]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+Size]']
mov ['eax,', '[ebp+arg_8]']
lea ['ecx,', '[eax+edx+19h]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_88]']
sar ['edx,', '18h']
mov ['eax,', '[ebp+Size]']
mov ['ecx,', '[ebp+arg_8]']
lea ['eax,', '[ecx+eax+19h]']
mov ['ecx,', '[ebp+var_9C]']
mov ['[eax+ecx],', 'dl']
mov ['edx,', '[ebp+var_88]']
sar ['edx,', '10h']
mov ['eax,', '[ebp+Size]']
mov ['ecx,', '[ebp+arg_8]']
lea ['eax,', '[ecx+eax+19h]']
mov ['ecx,', '[ebp+var_9C]']
mov ['[eax+ecx+1],', 'dl']
mov ['edx,', '[ebp+var_88]']
sar ['edx,', '8']
mov ['eax,', '[ebp+Size]']
mov ['ecx,', '[ebp+arg_8]']
lea ['eax,', '[ecx+eax+19h]']
mov ['ecx,', '[ebp+var_9C]']
mov ['[eax+ecx+2],', 'dl']
mov ['edx,', '[ebp+Size]']
mov ['eax,', '[ebp+arg_8]']
lea ['ecx,', '[eax+edx+19h]']
mov ['edx,', '[ebp+var_9C]']
mov ['al,', 'byte', 'ptr', '[ebp+var_88]']
mov ['[ecx+edx+3],', 'al']
push ['0']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['62h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['_ssh_send_packet_from_downstream']
add ['esp,', '18h']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
jmp ['loc_3F21']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
push ['0']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_ssh_send_packet_from_downstream']
add ['esp,', '18h']
cmp ['[ebp+arg_4],', '61h']
jnz ['loc_3ED2']
cmp ['[ebp+arg_C],', '4']
jl ['loc_3ED2']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '18h']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
shl ['eax,', '10h']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+2]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+3]']
or ['ecx,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_share_find_channel_by_server']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_3ED2']
mov ['eax,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[eax+10h],', '2']
jnz ['short', 'loc_3EC8']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_ssh_delete_sharing_channel']
add ['esp,', '8']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_share_remove_channel']
add ['esp,', '8']
jmp ['short', 'loc_3ED2']
mov ['edx,', '[ebp+var_20]']
mov ['dword', 'ptr', '[edx+10h],', '1']
jmp ['short', 'loc_3F21']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['offset', '$SG88256']
call ['_dupprintf']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_3F05']
push ['6D2h']
push ['offset', '$SG88259']
push ['offset', '$SG88260']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_share_disconnect']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN73']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '0B4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_find_halfchannel proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
push ['0']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4034h]']
push ['eax']
call ['_find234']
add ['esp,', '0Ch']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_4']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_add_channel proc near            
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['28h']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_8]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_C]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_10]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_14]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+1Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+18h],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+20h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+24h],', '0']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4038h]']
push ['edx']
call ['_add234']
add ['esp,', '8']
cmp ['eax,', '[ebp+var_4]']
jz ['short', 'loc_412F']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_417C']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+10h],', '3']
jz ['short', 'loc_4179']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+403Ch]']
push ['ecx']
call ['_add234']
add ['esp,', '8']
cmp ['eax,', '[ebp+var_4]']
jz ['short', 'loc_4179']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4038h]']
push ['ecx']
call ['_del234']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_417C']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_find_channel_by_server proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['edi']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_24],', 'eax']
push ['0']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+403Ch]']
push ['eax']
call ['_find234']
add ['esp,', '0Ch']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_5']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_find_xchannel_by_server proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_18],', 'eax']
push ['0']
lea ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4044h]']
push ['eax']
call ['_find234']
add ['esp,', '0Ch']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_6']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_add_forwarding proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['0Ch']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_dupstr']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_8]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4048h]']
push ['ecx']
call ['_add234']
add ['esp,', '8']
cmp ['eax,', '[ebp+var_4]']
jz ['short', 'loc_42F5']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_42F8']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_find_forwarding proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_dupstr']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_C],', 'ecx']
push ['0']
lea ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4048h]']
push ['ecx']
call ['_find234']
add ['esp,', '0Ch']
mov ['[ebp+var_18],', 'eax']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_getstring      proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_getstring_inner']
add ['esp,', '10h']
test ['eax,', 'eax']
jz ['short', 'loc_43E8']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_43EA']
jmp ['short', 'loc_43EA']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_sent     proc near               
push ['ebp']
mov ['ebp,', 'esp']
pop ['ebp']
retn
endp
_share_listen_closing proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_446E']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '$SG88361']
push ['0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_ssh_sharing_logf']
add ['esp,', '10h']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['eax,', '1']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_ndownstreams proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_count234']
add ['esp,', '4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_activate proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_450F']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '2']
jge ['short', 'loc_4541']
push ['offset', '$SG88388']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strcspn']
add ['esp,', '8']
add ['eax,', '[ebp+Str]']
mov ['[ebp+Str],', 'eax']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_453F']
mov ['edx,', '[ebp+Str]']
add ['edx,', '1']
mov ['[ebp+Str],', 'edx']
jmp ['short', 'loc_4506']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_dupstr']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+18h],', 'eax']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_4565']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_index234']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_45AF']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jz ['short', 'loc_45A1']
push ['775h']
push ['offset', '$SG88396']
push ['offset', '$SG88397']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_share_send_verstring']
add ['esp,', '4']
jmp ['short', 'loc_455C']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_send_verstring proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+Str],', '0CCCCCCCCh']
push ['0']
push ['offset', '$SG88369']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+18h]']
push ['edx']
push ['offset', '$SG88370']
call ['_dupcat']
add ['esp,', '10h']
mov ['[ebp+Str],', 'eax']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+14h],', '1']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_listen_accepting proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
push ['4054h']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx],', 'offset', '?connection_fn_table@?1??share_listen_accepting@@9@9']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_share_find_unused_id']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+4],', 'edx']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_46FC']
push ['1']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_share_find_unused_id']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+4],', 'edx']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_46FC']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '1']
jmp ['loc_48B1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+10h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
jnz ['short', 'loc_4723']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+10h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+10h],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['[ebp+arg_4]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+8],', 'eax']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_4783']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
cmp ['[ebp+var_C],', '0']
setnz ['al']
jmp ['loc_48B1']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+18h]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_add234']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+18h],', '0']
jz ['short', 'loc_47DA']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_share_send_verstring']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+4030h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '0']
push ['offset', '_share_halfchannel_cmp']
call ['_newtree234']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4034h],', 'eax']
push ['offset', '_share_channel_us_cmp']
call ['_newtree234']
add ['esp,', '4']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4038h],', 'eax']
push ['offset', '_share_channel_server_cmp']
call ['_newtree234']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+403Ch],', 'eax']
push ['offset', '_share_xchannel_us_cmp']
call ['_newtree234']
add ['esp,', '4']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4040h],', 'eax']
push ['offset', '_share_xchannel_server_cmp']
call ['_newtree234']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4044h],', 'eax']
push ['offset', '_share_forwarding_cmp']
call ['_newtree234']
add ['esp,', '4']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4048h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4050h],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+404Ch],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_ssh_sharing_downstream_connected']
add ['esp,', '8']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_find_unused_id proc near         
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '80E0h']
call ['__chkstk']
push ['edi']
lea ['edi,', '[ebp+var_80E0]']
mov ['ecx,', '2038h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_407C],', 'eax']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
push ['4']
push ['0']
lea ['edx,', '[ebp+var_4080]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_findrelpos234']
add ['esp,', '14h']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_492E']
mov ['eax,', '[ebp+arg_4]']
jmp ['loc_49EB']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_count234']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
sub ['eax,', '[ebp+var_14]']
cmp ['eax,', '1']
jle ['short', 'loc_499C']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '[ebp+var_14]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_index234']
add ['esp,', '8']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_24]']
cmp ['[edx+4],', 'ecx']
jnz ['short', 'loc_4994']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_499A']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_494C']
mov ['edx,', '[ebp+var_14]']
sub ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[eax+edx+1]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_28]']
mov ['[ebp+var_80D8],', 'edx']
push ['0']
lea ['eax,', '[ebp+var_80DC]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_find234']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_49E8']
push ['171h']
push ['offset', '$SG87174']
push ['offset', '$SG87175']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_28]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '80E0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_halfchannel_cmp proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx]']
cmp ['ecx,', '[eax]']
jnb ['short', 'loc_4A8F']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_4AA6']
jmp ['short', 'loc_4AA6']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx]']
cmp ['ecx,', '[eax]']
jbe ['short', 'loc_4AA4']
mov ['eax,', '1']
jmp ['short', 'loc_4AA6']
jmp ['short', 'loc_4AA6']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_channel_us_cmp proc near         
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+4]']
cmp ['ecx,', '[eax+4]']
jnb ['short', 'loc_4AE1']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_4AFA']
jmp ['short', 'loc_4AFA']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+4]']
cmp ['ecx,', '[eax+4]']
jbe ['short', 'loc_4AF8']
mov ['eax,', '1']
jmp ['short', 'loc_4AFA']
jmp ['short', 'loc_4AFA']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_channel_server_cmp proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+8]']
cmp ['ecx,', '[eax+8]']
jnb ['short', 'loc_4B41']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_4B5A']
jmp ['short', 'loc_4B5A']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+8]']
cmp ['ecx,', '[eax+8]']
jbe ['short', 'loc_4B58']
mov ['eax,', '1']
jmp ['short', 'loc_4B5A']
jmp ['short', 'loc_4B5A']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_xchannel_us_cmp proc near        
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx]']
cmp ['ecx,', '[eax]']
jnb ['short', 'loc_4B9F']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_4BB6']
jmp ['short', 'loc_4BB6']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx]']
cmp ['ecx,', '[eax]']
jbe ['short', 'loc_4BB4']
mov ['eax,', '1']
jmp ['short', 'loc_4BB6']
jmp ['short', 'loc_4BB6']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_xchannel_server_cmp proc near    
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+4]']
cmp ['ecx,', '[eax+4]']
jnb ['short', 'loc_4BF1']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_4C0A']
jmp ['short', 'loc_4C0A']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+4]']
cmp ['ecx,', '[eax+4]']
jbe ['short', 'loc_4C08']
mov ['eax,', '1']
jmp ['short', 'loc_4C0A']
jmp ['short', 'loc_4C0A']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_forwarding_cmp proc near         
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_4C67']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_4C95']
jmp ['short', 'loc_4C95']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+4]']
jge ['short', 'loc_4C7C']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_4C95']
jmp ['short', 'loc_4C95']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+4]']
jle ['short', 'loc_4C93']
mov ['eax,', '1']
jmp ['short', 'loc_4C95']
jmp ['short', 'loc_4C95']
xor ['eax,', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_ssh_connection_sharing_init proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '54h']
push ['edi']
lea ['edi,', '[ebp+var_54]']
mov ['ecx,', '15h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['0A4h']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_conf_get_int']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_4CDE']
xor ['eax,', 'eax']
jmp ['loc_4F70']
cmp ['dword', 'ptr', 'ds:_share_can_be_upstream,', '0']
jz ['short', 'loc_4D05']
push ['0A5h']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_conf_get_int']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_4D05']
mov ['[ebp+var_4C],', '1']
jmp ['short', 'loc_4D0C']
mov ['[ebp+var_4C],', '0']
mov ['edx,', '[ebp+var_4C]']
mov ['[ebp+var_8],', 'edx']
cmp ['dword', 'ptr', 'ds:_share_can_be_downstream,', '0']
jz ['short', 'loc_4D39']
push ['0A6h']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_conf_get_int']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_4D39']
mov ['[ebp+var_50],', '1']
jmp ['short', 'loc_4D40']
mov ['[ebp+var_50],', '0']
mov ['ecx,', '[ebp+var_50]']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_4D59']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_4D59']
xor ['eax,', 'eax']
jmp ['loc_4F70']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_get_remote_username']
add ['esp,', '4']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+arg_4],', '16h']
jnz ['short', 'loc_4DA4']
cmp ['[ebp+var_48],', '0']
jz ['short', 'loc_4D8E']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
push ['offset', '$SG88458']
call ['_dupprintf']
add ['esp,', '0Ch']
mov ['[ebp+var_34],', 'eax']
jmp ['short', 'loc_4DA2']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
push ['offset', '$SG88460']
call ['_dupprintf']
add ['esp,', '8']
mov ['[ebp+var_34],', 'eax']
jmp ['short', 'loc_4DE0']
cmp ['[ebp+var_48],', '0']
jz ['short', 'loc_4DC8']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_48]']
push ['edx']
push ['offset', '$SG88463']
call ['_dupprintf']
add ['esp,', '10h']
mov ['[ebp+var_34],', 'eax']
jmp ['short', 'loc_4DE0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['offset', '$SG88465']
call ['_dupprintf']
add ['esp,', '0Ch']
mov ['[ebp+var_34],', 'eax']
mov ['edx,', '[ebp+var_48]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
push ['1Ch']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
mov ['dword', 'ptr', '[eax],', 'offset', '?listen_fn_table@?1??ssh_connection_sharing_init@@9@9']
mov ['ecx,', '[ebp+var_44]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['[ebp+var_3C],', '0']
mov ['[ebp+var_2C],', '0']
mov ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
lea ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['_platform_ssh_share']
add ['esp,', '28h']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_ssh_connshare_log']
add ['esp,', '14h']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_20]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_54],', 'ecx']
cmp ['[ebp+var_54],', '0']
jz ['short', 'loc_4EB8']
cmp ['[ebp+var_54],', '1']
jz ['short', 'loc_4EFA']
cmp ['[ebp+var_54],', '2']
jz ['short', 'loc_4F20']
jmp ['loc_4F6E']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_4ED5']
push ['828h']
push ['offset', '$SG88480']
push ['offset', '$SG88481']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_34]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_4F70']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_34]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_3C]']
jmp ['short', 'loc_4F70']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
mov ['eax,', '[ebp+var_3C]']
mov ['[edx+8],', 'eax']
push ['offset', '_share_connstate_cmp']
call ['_newtree234']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_44]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_44]']
mov ['eax,', '[ebp+arg_C]']
mov ['[edx+14h],', 'eax']
mov ['ecx,', '[ebp+var_44]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['edx,', '[ebp+var_44]']
mov ['eax,', '[ebp+var_34]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_44]']
mov ['dword', 'ptr', '[ecx+10h],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_4F70']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN26']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '54h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_share_connstate_cmp proc near          
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+4]']
cmp ['ecx,', '[eax+4]']
jnb ['short', 'loc_5021']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_503A']
jmp ['short', 'loc_503A']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+4]']
cmp ['ecx,', '[eax+4]']
jbe ['short', 'loc_5038']
mov ['eax,', '1']
jmp ['short', 'loc_503A']
jmp ['short', 'loc_503A']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

_loadrsakey     proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '60h']
push ['edi']
lea ['edi,', '[ebp+var_60]']
mov ['ecx,', '18h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_54],', '0']
mov ['[ebp+var_5C],', '0']
push ['offset', '$SG87150']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_fopen']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_69B']
mov ['[ebp+var_5C],', 'offset', '$SG87152']
jmp ['short', '$end$87153']
mov ['edx,', '[ebp+var_8]']
push ['edx']
push ['40h']
lea ['eax,', '[ebp+var_4C]']
push ['eax']
call ['_fgets']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_6EE']
push ['offset', '$SG87155']
lea ['ecx,', '[ebp+var_4C]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_6EE']
lea ['edx,', '[ebp+var_5C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_loadrsakey_main']
add ['esp,', '18h']
mov ['[ebp+var_54],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', '$end$87153']
mov ['[ebp+var_5C],', 'offset', '$SG87158']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_707']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_fclose']
add ['esp,', '4']
cmp ['[ebp+var_54],', '1']
jz ['short', 'loc_71B']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_71B']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_5C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_54]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '60h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_loadrsakey_main proc near              
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '40A0h']
call ['__chkstk']
push ['edi']
lea ['edi,', '[ebp+var_40A0]']
mov ['ecx,', '1028h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4038],', '0']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['4000h']
push ['1']
lea ['edx,', '[ebp+var_4008]']
push ['edx']
call ['_fread']
add ['esp,', '10h']
mov ['[ebp+var_4028],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_fclose']
add ['esp,', '4']
cmp ['[ebp+var_4028],', '0']
jl ['short', 'loc_7F6']
cmp ['[ebp+var_4028],', '4000h']
jnz ['short', 'loc_804']
mov ['ecx,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[ecx],', 'offset', '$SG87092']
jmp ['$end$87093']
mov ['[ebp+var_402C],', '0']
mov ['edx,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[edx],', 'offset', '$SG87094']
mov ['eax,', '[ebp+var_4028]']
sub ['eax,', '[ebp+var_402C]']
cmp ['eax,', '1']
jl ['short', 'loc_83A']
mov ['ecx,', '[ebp+var_402C]']
movzx ['edx,', '[ebp+ecx+var_4008]']
test ['edx,', 'edx']
jz ['short', 'loc_83F']
jmp ['$end$87093']
mov ['eax,', '[ebp+var_402C]']
add ['eax,', '1']
mov ['[ebp+var_402C],', 'eax']
mov ['ecx,', '[ebp+var_4028]']
sub ['ecx,', '[ebp+var_402C]']
cmp ['ecx,', '1']
jge ['short', 'loc_864']
jmp ['$end$87093']
mov ['edx,', '[ebp+var_402C]']
movzx ['eax,', '[ebp+edx+var_4008]']
mov ['[ebp+var_4034],', 'eax']
cmp ['[ebp+var_4034],', '0']
jz ['short', 'loc_88F']
cmp ['[ebp+var_4034],', '3']
jz ['short', 'loc_88F']
jmp ['$end$87093']
mov ['ecx,', '[ebp+var_402C]']
add ['ecx,', '1']
mov ['[ebp+var_402C],', 'ecx']
mov ['edx,', '[ebp+var_4028]']
sub ['edx,', '[ebp+var_402C]']
cmp ['edx,', '4']
jge ['short', 'loc_8B4']
jmp ['$end$87093']
mov ['eax,', '[ebp+var_402C]']
movzx ['ecx,', '[ebp+eax+var_4008]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_8FC']
mov ['edx,', '[ebp+var_402C]']
movzx ['eax,', '[ebp+edx+var_4007]']
test ['eax,', 'eax']
jnz ['short', 'loc_8FC']
mov ['ecx,', '[ebp+var_402C]']
movzx ['edx,', '[ebp+ecx+var_4006]']
test ['edx,', 'edx']
jnz ['short', 'loc_8FC']
mov ['eax,', '[ebp+var_402C]']
movzx ['ecx,', '[ebp+eax+var_4005]']
test ['ecx,', 'ecx']
jz ['short', 'loc_901']
jmp ['$end$87093']
mov ['edx,', '[ebp+var_402C]']
add ['edx,', '4']
mov ['[ebp+var_402C],', 'edx']
push ['1']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4028]']
sub ['ecx,', '[ebp+var_402C]']
push ['ecx']
mov ['edx,', '[ebp+var_402C]']
lea ['eax,', '[ebp+edx+var_4008]']
push ['eax']
call ['_makekey']
add ['esp,', '14h']
mov ['[ebp+var_4030],', 'eax']
cmp ['[ebp+var_4030],', '0']
jge ['short', 'loc_94F']
jmp ['$end$87093']
mov ['ecx,', '[ebp+var_402C]']
add ['ecx,', '[ebp+var_4030]']
mov ['[ebp+var_402C],', 'ecx']
mov ['edx,', '[ebp+var_402C]']
movzx ['eax,', '[ebp+edx+var_4008]']
shl ['eax,', '18h']
mov ['ecx,', '[ebp+var_402C]']
movzx ['edx,', '[ebp+ecx+var_4007]']
shl ['edx,', '10h']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+var_402C]']
movzx ['edx,', '[ebp+ecx+var_4006]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+var_402C]']
movzx ['edx,', '[ebp+ecx+var_4005]']
or ['eax,', 'edx']
push ['eax']
call ['_toint']
add ['esp,', '4']
mov ['[ebp+var_4030],', 'eax']
mov ['eax,', '[ebp+var_402C]']
add ['eax,', '4']
mov ['[ebp+var_402C],', 'eax']
cmp ['[ebp+var_4030],', '0']
jl ['short', 'loc_9E3']
mov ['ecx,', '[ebp+var_4028]']
sub ['ecx,', '[ebp+var_402C]']
cmp ['ecx,', '[ebp+var_4030]']
jge ['short', 'loc_9E8']
jmp ['$end$87093']
push ['1']
mov ['edx,', '[ebp+var_4030]']
add ['edx,', '1']
push ['edx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_40A0],', 'eax']
cmp ['[ebp+var_40A0],', '0']
jz ['short', 'loc_A3E']
mov ['eax,', '[ebp+var_4030]']
push ['eax']
mov ['ecx,', '[ebp+var_402C]']
lea ['edx,', '[ebp+ecx+var_4008]']
push ['edx']
mov ['eax,', '[ebp+var_40A0]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_40A0]']
add ['ecx,', '[ebp+var_4030]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_402C]']
add ['edx,', '[ebp+var_4030]']
mov ['[ebp+var_402C],', 'edx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_A6A']
mov ['eax,', '[ebp+var_40A0]']
push ['eax']
call ['_dupstr']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_A7E']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_40A0]']
mov ['[edx+20h],', 'eax']
jmp ['short', 'loc_A8D']
mov ['ecx,', '[ebp+var_40A0]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_AA2']
mov ['[ebp+var_4038],', '1']
jmp ['$end$87093']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_AC8']
xor ['edx,', 'edx']
cmp ['[ebp+var_4034],', '0']
setnz ['dl']
mov ['[ebp+var_4038],', 'edx']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['$end$87093']
cmp ['[ebp+var_4034],', '0']
jz ['loc_B5B']
lea ['ecx,', '[ebp+var_4098]']
push ['ecx']
call ['_MD5Init']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
push ['eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+var_4098]']
push ['ecx']
call ['_MD5Update']
add ['esp,', '0Ch']
lea ['edx,', '[ebp+var_4098]']
push ['edx']
lea ['eax,', '[ebp+var_4020]']
push ['eax']
call ['_MD5Final']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4028]']
sub ['ecx,', '[ebp+var_402C]']
add ['ecx,', '7']
and ['ecx,', '0FFFFFFF8h']
push ['ecx']
mov ['edx,', '[ebp+var_402C]']
lea ['eax,', '[ebp+edx+var_4008]']
push ['eax']
lea ['ecx,', '[ebp+var_4020]']
push ['ecx']
call ['_des3_decrypt_pubkey']
add ['esp,', '0Ch']
push ['10h']
lea ['edx,', '[ebp+var_4020]']
push ['edx']
call ['_smemclr']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4028]']
sub ['eax,', '[ebp+var_402C]']
cmp ['eax,', '4']
jge ['short', 'loc_B71']
jmp ['$end$87093']
mov ['ecx,', '[ebp+var_402C]']
movzx ['edx,', '[ebp+ecx+var_4008]']
mov ['eax,', '[ebp+var_402C]']
movzx ['ecx,', '[ebp+eax+var_4006]']
cmp ['edx,', 'ecx']
jnz ['short', 'loc_BB1']
mov ['edx,', '[ebp+var_402C]']
movzx ['eax,', '[ebp+edx+var_4007]']
mov ['ecx,', '[ebp+var_402C]']
movzx ['edx,', '[ebp+ecx+var_4005]']
cmp ['eax,', 'edx']
jz ['short', 'loc_BC9']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '$SG87128']
mov ['[ebp+var_4038],', '0FFFFFFFFh']
jmp ['$end$87093']
mov ['ecx,', '[ebp+var_402C]']
add ['ecx,', '4']
mov ['[ebp+var_402C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4028]']
sub ['eax,', '[ebp+var_402C]']
push ['eax']
mov ['ecx,', '[ebp+var_402C]']
lea ['edx,', '[ebp+ecx+var_4008]']
push ['edx']
call ['_makeprivate']
add ['esp,', '0Ch']
mov ['[ebp+var_4030],', 'eax']
cmp ['[ebp+var_4030],', '0']
jge ['short', 'loc_C13']
jmp ['$end$87093']
mov ['eax,', '[ebp+var_402C]']
add ['eax,', '[ebp+var_4030]']
mov ['[ebp+var_402C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1Ch']
push ['ecx']
mov ['edx,', '[ebp+var_4028]']
sub ['edx,', '[ebp+var_402C]']
push ['edx']
mov ['eax,', '[ebp+var_402C]']
lea ['ecx,', '[ebp+eax+var_4008]']
push ['ecx']
call ['_ssh1_read_bignum']
add ['esp,', '0Ch']
mov ['[ebp+var_4030],', 'eax']
cmp ['[ebp+var_4030],', '0']
jge ['short', 'loc_C63']
jmp ['$end$87093']
mov ['edx,', '[ebp+var_402C]']
add ['edx,', '[ebp+var_4030]']
mov ['[ebp+var_402C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '18h']
push ['eax']
mov ['ecx,', '[ebp+var_4028]']
sub ['ecx,', '[ebp+var_402C]']
push ['ecx']
mov ['edx,', '[ebp+var_402C]']
lea ['eax,', '[ebp+edx+var_4008]']
push ['eax']
call ['_ssh1_read_bignum']
add ['esp,', '0Ch']
mov ['[ebp+var_4030],', 'eax']
cmp ['[ebp+var_4030],', '0']
jge ['short', 'loc_CB3']
jmp ['$end$87093']
mov ['ecx,', '[ebp+var_402C]']
add ['ecx,', '[ebp+var_4030]']
mov ['[ebp+var_402C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '14h']
push ['edx']
mov ['eax,', '[ebp+var_4028]']
sub ['eax,', '[ebp+var_402C]']
push ['eax']
mov ['ecx,', '[ebp+var_402C]']
lea ['edx,', '[ebp+ecx+var_4008]']
push ['edx']
call ['_ssh1_read_bignum']
add ['esp,', '0Ch']
mov ['[ebp+var_4030],', 'eax']
cmp ['[ebp+var_4030],', '0']
jge ['short', 'loc_D00']
jmp ['short', '$end$87093']
mov ['eax,', '[ebp+var_402C]']
add ['eax,', '[ebp+var_4030]']
mov ['[ebp+var_402C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_rsa_verify']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_D43']
mov ['edx,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[edx],', 'offset', '$SG87134']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_freersakey']
add ['esp,', '4']
mov ['[ebp+var_4038],', '0']
jmp ['short', '$end$87093']
mov ['[ebp+var_4038],', '1']
push ['4000h']
lea ['ecx,', '[ebp+var_4008]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4038]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN35']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '40A0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_rsakey_encrypted proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '5Ch']
push ['edi']
lea ['edi,', '[ebp+var_5C]']
mov ['ecx,', '17h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
push ['offset', '$SG87168']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_fopen']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_E18']
xor ['eax,', 'eax']
jmp ['short', 'loc_E6D']
mov ['edx,', '[ebp+var_8]']
push ['edx']
push ['40h']
lea ['eax,', '[ebp+var_4C]']
push ['eax']
call ['_fgets']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_E5F']
push ['offset', '$SG87171']
lea ['ecx,', '[ebp+var_4C]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_E5F']
lea ['edx,', '[ebp+var_58]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_loadrsakey_main']
add ['esp,', '18h']
jmp ['short', 'loc_E6D']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_fclose']
add ['esp,', '4']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '5Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_rsakey_pubblob proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8Ch']
push ['edi']
lea ['edi,', '[ebp+var_8C]']
mov ['ecx,', '23h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_88],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['[ebp+var_80],', '0']
push ['offset', '$SG87193']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
call ['_fopen']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_F3C']
mov ['[ebp+var_88],', 'offset', '$SG87195']
jmp ['$end$87196']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
push ['40h']
lea ['edx,', '[ebp+var_4C]']
push ['edx']
call ['_fgets']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_FCB']
push ['offset', '$SG87198']
lea ['eax,', '[ebp+var_4C]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_FCB']
push ['24h']
push ['0']
lea ['ecx,', '[ebp+var_78]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
lea ['edx,', '[ebp+var_88]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['1']
lea ['ecx,', '[ebp+var_78]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_loadrsakey_main']
add ['esp,', '18h']
test ['eax,', 'eax']
jz ['short', 'loc_FC2']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_78]']
push ['ecx']
call ['_rsa_public_blob']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'eax']
lea ['eax,', '[ebp+var_78]']
push ['eax']
call ['_freersakey']
add ['esp,', '4']
mov ['[ebp+var_80],', '1']
mov ['[ebp+var_8],', '0']
jmp ['short', '$end$87196']
mov ['[ebp+var_88],', 'offset', '$SG87203']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_FE7']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_fclose']
add ['esp,', '4']
cmp ['[ebp+var_80],', '1']
jz ['short', 'loc_FFE']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_FFE']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[ebp+var_88]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_80]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '8Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_saversakey     proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '4098h']
call ['__chkstk']
push ['edi']
lea ['edi,', '[ebp+var_4098]']
mov ['ecx,', '1026h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
lea ['eax,', '[ebp+var_4008]']
mov ['[ebp+var_408C],', 'eax']
push ['21h']
push ['offset', '$SG87219']
mov ['ecx,', '[ebp+var_408C]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_408C]']
add ['edx,', '21h']
mov ['[ebp+var_408C],', 'edx']
mov ['eax,', '[ebp+arg_8]']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '3']
mov ['ecx,', '[ebp+var_408C]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_408C]']
add ['edx,', '1']
mov ['[ebp+var_408C],', 'edx']
mov ['eax,', '[ebp+var_408C]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_408C]']
mov ['byte', 'ptr', '[ecx+1],', '0']
mov ['edx,', '[ebp+var_408C]']
mov ['byte', 'ptr', '[edx+2],', '0']
mov ['eax,', '[ebp+var_408C]']
mov ['byte', 'ptr', '[eax+3],', '0']
mov ['ecx,', '[ebp+var_408C]']
add ['ecx,', '4']
mov ['[ebp+var_408C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
sar ['eax,', '18h']
mov ['ecx,', '[ebp+var_408C]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_408C]']
mov ['[ecx+1],', 'al']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_408C]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['_bignum_bitcount']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_408C]']
mov ['[ecx+3],', 'al']
mov ['edx,', '[ebp+var_408C]']
add ['edx,', '4']
mov ['[ebp+var_408C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_408C]']
push ['edx']
call ['_ssh1_write_bignum']
add ['esp,', '8']
add ['eax,', '[ebp+var_408C]']
mov ['[ebp+var_408C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_408C]']
push ['edx']
call ['_ssh1_write_bignum']
add ['esp,', '8']
add ['eax,', '[ebp+var_408C]']
mov ['[ebp+var_408C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+20h],', '0']
jz ['loc_12AC']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+20h]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
shr ['eax,', '18h']
mov ['ecx,', '[ebp+var_408C]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+20h]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_408C]']
mov ['[ecx+1],', 'al']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+20h]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_408C]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+20h]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_408C]']
mov ['[ecx+3],', 'al']
mov ['edx,', '[ebp+var_408C]']
add ['edx,', '4']
mov ['[ebp+var_408C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+20h]']
push ['eax']
mov ['ecx,', '[ebp+var_408C]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+20h]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '[ebp+var_408C]']
mov ['[ebp+var_408C],', 'eax']
jmp ['short', 'loc_12E2']
mov ['ecx,', '[ebp+var_408C]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_408C]']
mov ['byte', 'ptr', '[edx+1],', '0']
mov ['eax,', '[ebp+var_408C]']
mov ['byte', 'ptr', '[eax+2],', '0']
mov ['ecx,', '[ebp+var_408C]']
mov ['byte', 'ptr', '[ecx+3],', '0']
mov ['edx,', '[ebp+var_408C]']
add ['edx,', '4']
mov ['[ebp+var_408C],', 'edx']
mov ['eax,', '[ebp+var_408C]']
mov ['[ebp+var_4090],', 'eax']
call ['_random_byte']
mov ['ecx,', '[ebp+var_408C]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_408C]']
add ['edx,', '1']
mov ['[ebp+var_408C],', 'edx']
call ['_random_byte']
mov ['ecx,', '[ebp+var_408C]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_408C]']
add ['edx,', '1']
mov ['[ebp+var_408C],', 'edx']
mov ['eax,', '[ebp+var_408C]']
mov ['ecx,', '[ebp+var_408C]']
mov ['dl,', '[ecx-2]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_408C]']
mov ['ecx,', '[ebp+var_408C]']
mov ['dl,', '[ecx-1]']
mov ['[eax+1],', 'dl']
mov ['eax,', '[ebp+var_408C]']
add ['eax,', '2']
mov ['[ebp+var_408C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+var_408C]']
push ['eax']
call ['_ssh1_write_bignum']
add ['esp,', '8']
add ['eax,', '[ebp+var_408C]']
mov ['[ebp+var_408C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
mov ['eax,', '[ebp+var_408C]']
push ['eax']
call ['_ssh1_write_bignum']
add ['esp,', '8']
add ['eax,', '[ebp+var_408C]']
mov ['[ebp+var_408C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+var_408C]']
push ['eax']
call ['_ssh1_write_bignum']
add ['esp,', '8']
add ['eax,', '[ebp+var_408C]']
mov ['[ebp+var_408C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+var_408C]']
push ['eax']
call ['_ssh1_write_bignum']
add ['esp,', '8']
add ['eax,', '[ebp+var_408C]']
mov ['[ebp+var_408C],', 'eax']
mov ['ecx,', '[ebp+var_408C]']
sub ['ecx,', '[ebp+var_4090]']
and ['ecx,', '80000007h']
jns ['short', 'loc_13F9']
dec ['ecx']
or ['ecx,', '0FFFFFFF8h']
inc ['ecx']
test ['ecx,', 'ecx']
jz ['short', 'loc_1417']
mov ['edx,', '[ebp+var_408C]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_408C]']
add ['eax,', '1']
mov ['[ebp+var_408C],', 'eax']
jmp ['short', 'loc_13E0']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_1496']
lea ['ecx,', '[ebp+var_4084]']
push ['ecx']
call ['_MD5Init']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
push ['eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_4084]']
push ['ecx']
call ['_MD5Update']
add ['esp,', '0Ch']
lea ['edx,', '[ebp+var_4084]']
push ['edx']
lea ['eax,', '[ebp+var_4020]']
push ['eax']
call ['_MD5Final']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_408C]']
sub ['ecx,', '[ebp+var_4090]']
push ['ecx']
mov ['edx,', '[ebp+var_4090]']
push ['edx']
lea ['eax,', '[ebp+var_4020]']
push ['eax']
call ['_des3_encrypt_pubkey']
add ['esp,', '0Ch']
push ['10h']
lea ['ecx,', '[ebp+var_4020]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
push ['offset', '$SG87243']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
call ['_fopen']
add ['esp,', '8']
mov ['[ebp+var_4094],', 'eax']
cmp ['[ebp+var_4094],', '0']
jz ['short', 'loc_1521']
mov ['ecx,', '[ebp+var_4094]']
push ['ecx']
mov ['edx,', '[ebp+var_408C]']
lea ['eax,', '[ebp+var_4008]']
sub ['edx,', 'eax']
push ['edx']
push ['1']
lea ['ecx,', '[ebp+var_4008]']
push ['ecx']
call ['_fwrite']
add ['esp,', '10h']
mov ['edx,', '[ebp+var_408C]']
lea ['ecx,', '[ebp+var_4008]']
sub ['edx,', 'ecx']
xor ['ecx,', 'ecx']
cmp ['eax,', 'edx']
setz ['cl']
mov ['[ebp+var_4098],', 'ecx']
mov ['edx,', '[ebp+var_4094]']
push ['edx']
call ['_fclose']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_1517']
mov ['[ebp+var_4098],', '0']
mov ['eax,', '[ebp+var_4098]']
jmp ['short', 'loc_1523']
jmp ['short', 'loc_1523']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '4098h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_find_pubkey_alg proc near              
push ['ebp']
mov ['ebp,', 'esp']
push ['offset', '$SG87323']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_15B9']
mov ['eax,', 'offset', '_ssh_rsa']
jmp ['short', 'loc_15D9']
jmp ['short', 'loc_15D9']
push ['offset', '$SG87326']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_15D7']
mov ['eax,', 'offset', '_ssh_dss']
jmp ['short', 'loc_15D9']
jmp ['short', 'loc_15D9']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_ssh2_load_userkey proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '244h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_244]']
mov ['ecx,', '91h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_23D],', '0']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_1630']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_244],', 'eax']
jmp ['short', 'loc_163A']
mov ['[ebp+var_244],', '0']
mov ['ecx,', '[ebp+var_244]']
mov ['[ebp+var_88],', 'ecx']
mov ['[ebp+var_8C],', '0']
mov ['[ebp+var_50],', '0']
mov ['[ebp+var_48],', '0']
mov ['edx,', '[ebp+var_48]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_40],', 'eax']
mov ['[ebp+var_60],', '0']
mov ['ecx,', '[ebp+var_60]']
mov ['[ebp+var_5C],', 'ecx']
push ['offset', '$SG87359']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
call ['_fopen']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_16A2']
mov ['[ebp+var_8C],', 'offset', '$SG87361']
jmp ['$error$87362']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_read_header']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_16BB']
jmp ['$error$87362']
push ['offset', '$SG87365']
lea ['eax,', '[ebp+var_34]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_16DC']
mov ['[ebp+var_84],', '0']
jmp ['short', 'loc_1739']
push ['offset', '$SG87368']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_1702']
call ['_old_keyfile_warning']
mov ['[ebp+var_84],', '1']
jmp ['short', 'loc_1739']
push ['14h']
push ['offset', '$SG87371']
lea ['edx,', '[ebp+var_34]']
push ['edx']
call ['_strncmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_172A']
mov ['[ebp+var_8C],', 'offset', '$SG87372']
jmp ['$error$87362']
jmp ['short', 'loc_1739']
mov ['[ebp+var_8C],', 'offset', '$SG87374']
jmp ['$error$87362']
mov ['[ebp+var_8C],', 'offset', '$SG87375']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_read_body']
add ['esp,', '4']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jnz ['short', 'loc_175D']
jmp ['$error$87362']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
call ['_find_pubkey_alg']
add ['esp,', '4']
mov ['[ebp+var_4C],', 'eax']
cmp ['[ebp+var_4C],', '0']
jnz ['short', 'loc_1783']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
jmp ['$error$87362']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_read_header']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_17B8']
push ['offset', '$SG87381']
lea ['eax,', '[ebp+var_34]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_17BD']
jmp ['$error$87362']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_read_body']
add ['esp,', '4']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_40],', '0']
jnz ['short', 'loc_17D7']
jmp ['$error$87362']
push ['offset', '$SG87385']
mov ['edx,', '[ebp+var_40]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_17FC']
mov ['[ebp+var_54],', '1']
mov ['[ebp+var_58],', '10h']
jmp ['short', 'loc_1826']
push ['offset', '$SG87388']
mov ['eax,', '[ebp+var_40]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_1821']
mov ['[ebp+var_54],', '0']
mov ['[ebp+var_58],', '1']
jmp ['short', 'loc_1826']
jmp ['$error$87362']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_read_header']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_184F']
push ['offset', '$SG87392']
lea ['eax,', '[ebp+var_34]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_1854']
jmp ['$error$87362']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_read_body']
add ['esp,', '4']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jnz ['short', 'loc_186E']
jmp ['$error$87362']
lea ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_read_header']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_1897']
push ['offset', '$SG87397']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_189C']
jmp ['$error$87362']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_read_body']
add ['esp,', '4']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jnz ['short', 'loc_18B6']
jmp ['$error$87362']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_atoi']
add ['esp,', '4']
mov ['[ebp+var_7C],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
lea ['edx,', '[ebp+var_68]']
push ['edx']
mov ['eax,', '[ebp+var_7C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_read_blob']
add ['esp,', '0Ch']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '0']
jnz ['short', 'loc_18F3']
jmp ['$error$87362']
lea ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_read_header']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_191C']
push ['offset', '$SG87404']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_1921']
jmp ['$error$87362']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_read_body']
add ['esp,', '4']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jnz ['short', 'loc_193B']
jmp ['$error$87362']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_atoi']
add ['esp,', '4']
mov ['[ebp+var_7C],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['[ebp+var_23D],', '1']
lea ['edx,', '[ebp+var_74]']
push ['edx']
mov ['eax,', '[ebp+var_7C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_read_blob']
add ['esp,', '0Ch']
mov ['[ebp+var_60],', 'eax']
cmp ['[ebp+var_60],', '0']
jnz ['short', 'loc_197F']
jmp ['$error$87362']
lea ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_read_header']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_1998']
jmp ['$error$87362']
push ['offset', '$SG87411']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_19D0']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_read_body']
add ['esp,', '4']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '0']
jnz ['short', 'loc_19C7']
jmp ['$error$87362']
mov ['[ebp+var_80],', '1']
jmp ['short', 'loc_1A16']
push ['offset', '$SG87416']
lea ['eax,', '[ebp+var_34]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_1A11']
cmp ['[ebp+var_84],', '0']
jz ['short', 'loc_1A11']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_read_body']
add ['esp,', '4']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '0']
jnz ['short', 'loc_1A08']
jmp ['$error$87362']
mov ['[ebp+var_80],', '0']
jmp ['short', 'loc_1A16']
jmp ['$error$87362']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_fclose']
add ['esp,', '4']
mov ['[ebp+var_8],', '0']
cmp ['[ebp+var_54],', '0']
jz ['loc_1B3B']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_1A3E']
jmp ['$error$87362']
cmp ['[ebp+var_23D],', '0']
jnz ['short', 'loc_1A54']
push ['offset', '$LN65']
call ['__RTC_UninitUse']
add ['esp,', '4']
mov ['eax,', '[ebp+var_74]']
cdq
idiv ['[ebp+var_58]']
test ['edx,', 'edx']
jz ['short', 'loc_1A64']
jmp ['$error$87362']
lea ['eax,', '[ebp+var_120]']
push ['eax']
call ['_SHA_Init']
add ['esp,', '4']
push ['4']
push ['offset', '$SG87426']
lea ['ecx,', '[ebp+var_120]']
push ['ecx']
call ['_SHA_Bytes']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_88]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_120]']
push ['ecx']
call ['_SHA_Bytes']
add ['esp,', '0Ch']
lea ['edx,', '[ebp+var_B8]']
push ['edx']
lea ['eax,', '[ebp+var_120]']
push ['eax']
call ['_SHA_Final']
add ['esp,', '8']
lea ['ecx,', '[ebp+var_120]']
push ['ecx']
call ['_SHA_Init']
add ['esp,', '4']
push ['4']
push ['offset', '$SG87427']
lea ['edx,', '[ebp+var_120]']
push ['edx']
call ['_SHA_Bytes']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_88]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['edx,', '[ebp+var_120]']
push ['edx']
call ['_SHA_Bytes']
add ['esp,', '0Ch']
lea ['eax,', '[ebp+var_A4]']
push ['eax']
lea ['ecx,', '[ebp+var_120]']
push ['ecx']
call ['_SHA_Final']
add ['esp,', '8']
cmp ['[ebp+var_23D],', '0']
jnz ['short', 'loc_1B24']
push ['offset', '$LN65']
call ['__RTC_UninitUse']
add ['esp,', '4']
mov ['edx,', '[ebp+var_74]']
push ['edx']
mov ['eax,', '[ebp+var_60]']
push ['eax']
lea ['ecx,', '[ebp+var_B8]']
push ['ecx']
call ['_aes256_decrypt_pubkey']
add ['esp,', '0Ch']
cmp ['[ebp+var_84],', '0']
jz ['short', 'loc_1B7B']
mov ['edx,', '[ebp+var_60]']
mov ['[ebp+var_178],', 'edx']
cmp ['[ebp+var_23D],', '0']
jnz ['short', 'loc_1B63']
push ['offset', '$LN65']
call ['__RTC_UninitUse']
add ['esp,', '4']
mov ['eax,', '[ebp+var_74]']
mov ['[ebp+var_17C],', 'eax']
mov ['[ebp+var_180],', '0']
jmp ['loc_1EC5']
mov ['ecx,', '[ebp+var_4C]']
mov ['edx,', '[ecx+30h]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_188],', 'eax']
mov ['eax,', '[ebp+var_40]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_18C],', 'eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_190],', 'eax']
cmp ['[ebp+var_23D],', '0']
jnz ['short', 'loc_1BCA']
push ['offset', '$LN65']
call ['__RTC_UninitUse']
add ['esp,', '4']
mov ['edx,', '[ebp+var_18C]']
mov ['eax,', '[ebp+var_188]']
lea ['ecx,', '[eax+edx+8]']
mov ['edx,', '[ebp+var_190]']
lea ['eax,', '[ecx+edx+4]']
mov ['ecx,', '[ebp+var_68]']
lea ['edx,', '[eax+ecx+4]']
mov ['eax,', '[ebp+var_74]']
lea ['ecx,', '[edx+eax+4]']
mov ['[ebp+var_17C],', 'ecx']
push ['1']
mov ['edx,', '[ebp+var_17C]']
push ['edx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_178],', 'eax']
mov ['eax,', '[ebp+var_178]']
mov ['[ebp+var_184],', 'eax']
mov ['ecx,', '[ebp+var_188]']
sar ['ecx,', '18h']
mov ['edx,', '[ebp+var_184]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_188]']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_184]']
mov ['[ecx+1],', 'al']
mov ['edx,', '[ebp+var_188]']
sar ['edx,', '8']
mov ['eax,', '[ebp+var_184]']
mov ['[eax+2],', 'dl']
mov ['ecx,', '[ebp+var_184]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_188]']
mov ['[ecx+3],', 'dl']
mov ['eax,', '[ebp+var_188]']
push ['eax']
mov ['ecx,', '[ebp+var_4C]']
mov ['edx,', '[ecx+30h]']
push ['edx']
mov ['eax,', '[ebp+var_184]']
add ['eax,', '4']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_188]']
mov ['edx,', '[ebp+var_184]']
lea ['eax,', '[edx+ecx+4]']
mov ['[ebp+var_184],', 'eax']
mov ['ecx,', '[ebp+var_18C]']
sar ['ecx,', '18h']
mov ['edx,', '[ebp+var_184]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_18C]']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_184]']
mov ['[ecx+1],', 'al']
mov ['edx,', '[ebp+var_18C]']
sar ['edx,', '8']
mov ['eax,', '[ebp+var_184]']
mov ['[eax+2],', 'dl']
mov ['ecx,', '[ebp+var_184]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_18C]']
mov ['[ecx+3],', 'dl']
mov ['eax,', '[ebp+var_18C]']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
mov ['edx,', '[ebp+var_184]']
add ['edx,', '4']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_18C]']
mov ['ecx,', '[ebp+var_184]']
lea ['edx,', '[ecx+eax+4]']
mov ['[ebp+var_184],', 'edx']
mov ['eax,', '[ebp+var_190]']
sar ['eax,', '18h']
mov ['ecx,', '[ebp+var_184]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_190]']
sar ['edx,', '10h']
mov ['eax,', '[ebp+var_184]']
mov ['[eax+1],', 'dl']
mov ['ecx,', '[ebp+var_190]']
sar ['ecx,', '8']
mov ['edx,', '[ebp+var_184]']
mov ['[edx+2],', 'cl']
mov ['eax,', '[ebp+var_184]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_190]']
mov ['[eax+3],', 'cl']
mov ['edx,', '[ebp+var_190]']
push ['edx']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_184]']
add ['ecx,', '4']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_190]']
mov ['eax,', '[ebp+var_184]']
lea ['ecx,', '[eax+edx+4]']
mov ['[ebp+var_184],', 'ecx']
mov ['edx,', '[ebp+var_68]']
sar ['edx,', '18h']
mov ['eax,', '[ebp+var_184]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_68]']
sar ['ecx,', '10h']
mov ['edx,', '[ebp+var_184]']
mov ['[edx+1],', 'cl']
mov ['eax,', '[ebp+var_68]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_184]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+var_184]']
mov ['al,', 'byte', 'ptr', '[ebp+var_68]']
mov ['[edx+3],', 'al']
mov ['ecx,', '[ebp+var_68]']
push ['ecx']
mov ['edx,', '[ebp+var_5C]']
push ['edx']
mov ['eax,', '[ebp+var_184]']
add ['eax,', '4']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ebp+var_184]']
lea ['eax,', '[edx+ecx+4]']
mov ['[ebp+var_184],', 'eax']
cmp ['[ebp+var_23D],', '0']
jnz ['short', 'loc_1DFE']
push ['offset', '$LN65']
call ['__RTC_UninitUse']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_74]']
sar ['ecx,', '18h']
mov ['edx,', '[ebp+var_184]']
mov ['[edx],', 'cl']
cmp ['[ebp+var_23D],', '0']
jnz ['short', 'loc_1E22']
push ['offset', '$LN65']
call ['__RTC_UninitUse']
add ['esp,', '4']
mov ['eax,', '[ebp+var_74]']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_184]']
mov ['[ecx+1],', 'al']
cmp ['[ebp+var_23D],', '0']
jnz ['short', 'loc_1E47']
push ['offset', '$LN65']
call ['__RTC_UninitUse']
add ['esp,', '4']
mov ['edx,', '[ebp+var_74]']
sar ['edx,', '8']
mov ['eax,', '[ebp+var_184]']
mov ['[eax+2],', 'dl']
mov ['ecx,', '[ebp+var_184]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_74]']
mov ['[ecx+3],', 'dl']
cmp ['[ebp+var_23D],', '0']
jnz ['short', 'loc_1E78']
push ['offset', '$LN65']
call ['__RTC_UninitUse']
add ['esp,', '4']
mov ['eax,', '[ebp+var_74]']
push ['eax']
mov ['ecx,', '[ebp+var_60]']
push ['ecx']
mov ['edx,', '[ebp+var_184]']
add ['edx,', '4']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
cmp ['[ebp+var_23D],', '0']
jnz ['short', 'loc_1EA8']
push ['offset', '$LN65']
call ['__RTC_UninitUse']
add ['esp,', '4']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_184]']
lea ['edx,', '[ecx+eax+4]']
mov ['[ebp+var_184],', 'edx']
mov ['[ebp+var_180],', '1']
cmp ['[ebp+var_80],', '0']
jz ['loc_1F91']
mov ['ecx,', '7']
mov ['esi,', 'offset', '$SG87465']
lea ['edi,', '[ebp+var_238]']
rep ['movsd']
movsw
movsb
lea ['eax,', '[ebp+var_1F4]']
push ['eax']
call ['_SHA_Init']
add ['esp,', '4']
push ['1Eh']
lea ['ecx,', '[ebp+var_238]']
push ['ecx']
lea ['edx,', '[ebp+var_1F4]']
push ['edx']
call ['_SHA_Bytes']
add ['esp,', '0Ch']
cmp ['[ebp+var_54],', '0']
jz ['short', 'loc_1F31']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_1F31']
mov ['eax,', '[ebp+var_88]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['edx,', '[ebp+var_1F4]']
push ['edx']
call ['_SHA_Bytes']
add ['esp,', '0Ch']
lea ['eax,', '[ebp+var_210]']
push ['eax']
lea ['ecx,', '[ebp+var_1F4]']
push ['ecx']
call ['_SHA_Final']
add ['esp,', '8']
lea ['edx,', '[ebp+var_170]']
push ['edx']
mov ['eax,', '[ebp+var_17C]']
push ['eax']
mov ['ecx,', '[ebp+var_178]']
push ['ecx']
push ['14h']
lea ['edx,', '[ebp+var_210]']
push ['edx']
call ['_hmac_sha1_simple']
add ['esp,', '14h']
push ['14h']
lea ['eax,', '[ebp+var_210]']
push ['eax']
call ['_smemclr']
add ['esp,', '8']
push ['60h']
lea ['ecx,', '[ebp+var_1F4]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
jmp ['short', 'loc_1FAE']
lea ['edx,', '[ebp+var_170]']
push ['edx']
mov ['eax,', '[ebp+var_17C]']
push ['eax']
mov ['ecx,', '[ebp+var_178]']
push ['ecx']
call ['_SHA_Simple']
add ['esp,', '0Ch']
cmp ['[ebp+var_180],', '0']
jz ['short', 'loc_1FDC']
mov ['edx,', '[ebp+var_17C]']
push ['edx']
mov ['eax,', '[ebp+var_178]']
push ['eax']
call ['_smemclr']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_178]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['[ebp+var_7C],', '0']
jmp ['short', 'loc_1FEE']
mov ['edx,', '[ebp+var_7C]']
add ['edx,', '1']
mov ['[ebp+var_7C],', 'edx']
cmp ['[ebp+var_7C],', '14h']
jge ['short', 'loc_201A']
mov ['eax,', '[ebp+var_7C]']
movzx ['ecx,', '[ebp+eax+var_170]']
push ['ecx']
push ['offset', '$SG87472']
mov ['edx,', '[ebp+var_7C]']
lea ['eax,', '[ebp+edx*2+var_154]']
push ['eax']
call ['_sprintf']
add ['esp,', '0Ch']
jmp ['short', 'loc_1FE5']
lea ['ecx,', '[ebp+var_154]']
push ['ecx']
mov ['edx,', '[ebp+var_48]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_2060']
cmp ['[ebp+var_54],', '0']
jz ['short', 'loc_204A']
mov ['[ebp+var_8C],', 'offset', '$SG87475']
mov ['[ebp+var_50],', 'offset', '_ssh2_wrong_passphrase']
jmp ['short', 'loc_205B']
mov ['[ebp+var_8C],', 'offset', '$SG87477']
mov ['[ebp+var_50],', '0']
jmp ['$error$87362']
mov ['eax,', '[ebp+var_48]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['[ebp+var_48],', '0']
push ['0Ch']
push ['1']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ebp+var_4C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax+8],', 'ecx']
cmp ['[ebp+var_23D],', '0']
jnz ['short', 'loc_20A9']
push ['offset', '$LN65']
call ['__RTC_UninitUse']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_74]']
push ['edx']
mov ['eax,', '[ebp+var_60]']
push ['eax']
mov ['ecx,', '[ebp+var_68]']
push ['ecx']
mov ['edx,', '[ebp+var_5C]']
push ['edx']
mov ['eax,', '[ebp+var_4C]']
mov ['ecx,', '[eax+14h]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_50]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['short', 'loc_20FB']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['[ebp+var_50],', '0']
mov ['[ebp+var_8C],', 'offset', '$SG87484']
jmp ['short', '$error$87362']
mov ['edx,', '[ebp+var_5C]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
cmp ['[ebp+var_23D],', '0']
jnz ['short', 'loc_211D']
push ['offset', '$LN65']
call ['__RTC_UninitUse']
add ['esp,', '4']
mov ['eax,', '[ebp+var_74]']
push ['eax']
mov ['ecx,', '[ebp+var_60]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
mov ['edx,', '[ebp+var_60]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_40]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_2154']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['eax,', '[ebp+var_50]']
jmp ['loc_2202']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_216E']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_fclose']
add ['esp,', '4']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_2180']
mov ['eax,', '[ebp+var_44]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
cmp ['[ebp+var_40],', '0']
jz ['short', 'loc_2192']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
cmp ['[ebp+var_48],', '0']
jz ['short', 'loc_21A4']
mov ['edx,', '[ebp+var_48]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_21B6']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
cmp ['[ebp+var_60],', '0']
jz ['short', 'loc_21EE']
cmp ['[ebp+var_23D],', '0']
jnz ['short', 'loc_21D2']
push ['offset', '$LN65']
call ['__RTC_UninitUse']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_74]']
push ['ecx']
mov ['edx,', '[ebp+var_60]']
push ['edx']
call ['_smemclr']
add ['esp,', '8']
mov ['eax,', '[ebp+var_60]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_21FF']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_50]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN87']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '244h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_read_header    proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '27h']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_23A3']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_fgetc']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0Ah']
jz ['short', 'loc_234D']
cmp ['[ebp+var_8],', '0Dh']
jz ['short', 'loc_234D']
cmp ['[ebp+var_8],', '0FFFFFFFFh']
jnz ['short', 'loc_2351']
xor ['eax,', 'eax']
jmp ['short', 'loc_23A5']
cmp ['[ebp+var_8],', '3Ah']
jnz ['short', 'loc_237D']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_fgetc']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '20h']
jz ['short', 'loc_2370']
xor ['eax,', 'eax']
jmp ['short', 'loc_23A5']
mov ['eax,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '1']
jmp ['short', 'loc_23A5']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_2387']
xor ['eax,', 'eax']
jmp ['short', 'loc_23A5']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_8]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_2323']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_read_body      proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '80h']
push ['1']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '1']
test ['edx,', 'edx']
jz ['loc_24A9']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_fgetc']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0Dh']
jz ['short', 'loc_2425']
cmp ['[ebp+var_10],', '0Ah']
jz ['short', 'loc_2425']
cmp ['[ebp+var_10],', '0FFFFFFFFh']
jnz ['short', 'loc_245B']
cmp ['[ebp+var_10],', '0FFFFFFFFh']
jz ['short', 'loc_2456']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_fgetc']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0Dh']
jz ['short', 'loc_2456']
cmp ['[ebp+var_10],', '0Ah']
jz ['short', 'loc_2456']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ungetc']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_24A9']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
cmp ['ecx,', '[ebp+var_C]']
jl ['short', 'loc_2487']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '80h']
mov ['[ebp+var_C],', 'edx']
push ['1']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_saferealloc']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_8]']
mov ['al,', 'byte', 'ptr', '[ebp+var_10]']
mov ['[edx],', 'al']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[edx],', '0']
jmp ['loc_23F7']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_read_blob      proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
push ['1']
mov ['eax,', '[ebp+arg_4]']
imul ['eax,', '30h']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_10],', '0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_2505']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+arg_4]']
jge ['loc_25EE']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_read_body']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_2539']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_25F9']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '80000003h']
jns ['short', 'loc_2557']
dec ['eax']
or ['eax,', '0FFFFFFFCh']
inc ['eax']
test ['eax,', 'eax']
jnz ['short', 'loc_2561']
cmp ['[ebp+var_C],', '40h']
jle ['short', 'loc_257D']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_25F9']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_258F']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[ebp+var_C]']
jge ['short', 'loc_25DD']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_18]']
push ['eax']
call ['_base64_decode_atom']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_25D2']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['short', 'loc_25F9']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_2586']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
jmp ['loc_24FC']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_ssh2_userkey_loadpub proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '5Ch']
push ['edi']
lea ['edi,', '[ebp+var_5C]']
mov ['ecx,', '17h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_58],', '0']
mov ['[ebp+var_44],', '0']
push ['offset', '$SG87516']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_fopen']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_265E']
mov ['[ebp+var_58],', 'offset', '$SG87518']
jmp ['$error$87519']
lea ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_read_header']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_269C']
push ['offset', '$SG87522']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_26C8']
push ['offset', '$SG87523']
lea ['edx,', '[ebp+var_34]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_26C8']
push ['14h']
push ['offset', '$SG87525']
lea ['eax,', '[ebp+var_34]']
push ['eax']
call ['_strncmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_26BC']
mov ['[ebp+var_58],', 'offset', '$SG87526']
jmp ['short', 'loc_26C3']
mov ['[ebp+var_58],', 'offset', '$SG87528']
jmp ['$error$87519']
mov ['[ebp+var_58],', 'offset', '$SG87529']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_read_body']
add ['esp,', '4']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jnz ['short', 'loc_26E9']
jmp ['$error$87519']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
call ['_find_pubkey_alg']
add ['esp,', '4']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_40],', '0']
jnz ['short', 'loc_270F']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
jmp ['$error$87519']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
lea ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_read_header']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_2744']
push ['offset', '$SG87535']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_2749']
jmp ['$error$87519']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_read_body']
add ['esp,', '4']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jnz ['short', 'loc_2763']
jmp ['$error$87519']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_read_header']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_2798']
push ['offset', '$SG87540']
lea ['eax,', '[ebp+var_34]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_279D']
jmp ['$error$87519']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_read_body']
add ['esp,', '4']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '0']
jnz ['short', 'loc_27B7']
jmp ['$error$87519']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_27C7']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_5C]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_27D3']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
lea ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_read_header']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_27FC']
push ['offset', '$SG87547']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_2801']
jmp ['$error$87519']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_read_body']
add ['esp,', '4']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jnz ['short', 'loc_2818']
jmp ['short', '$error$87519']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_atoi']
add ['esp,', '4']
mov ['[ebp+var_54],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
lea ['edx,', '[ebp+var_4C]']
push ['edx']
mov ['eax,', '[ebp+var_54]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_read_blob']
add ['esp,', '0Ch']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jnz ['short', 'loc_2852']
jmp ['short', '$error$87519']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_fclose']
add ['esp,', '4']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_286C']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4C]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_287D']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_40]']
mov ['ecx,', '[eax+30h]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_44]']
jmp ['short', 'loc_28B6']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2894']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_fclose']
add ['esp,', '4']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_28A6']
mov ['eax,', '[ebp+var_44]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_28B4']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ebp+var_58]']
mov ['[ecx],', 'edx']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN30']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '5Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_ssh2_userkey_encrypted proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '44h']
push ['edi']
lea ['edi,', '[ebp+var_44]']
mov ['ecx,', '11h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_2947']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
push ['offset', '$SG87570']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_fopen']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_296A']
xor ['eax,', 'eax']
jmp ['loc_2B2E']
lea ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_read_header']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_29A8']
push ['offset', '$SG87574']
lea ['edx,', '[ebp+var_34]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_29BB']
push ['offset', '$SG87575']
lea ['eax,', '[ebp+var_34]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_29BB']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_fclose']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_2B2E']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_read_body']
add ['esp,', '4']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jnz ['short', 'loc_29E3']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_fclose']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_2B2E']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
lea ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_read_header']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_2A18']
push ['offset', '$SG87580']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_2A2B']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_fclose']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_2B2E']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_read_body']
add ['esp,', '4']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jnz ['short', 'loc_2A53']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_fclose']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_2B2E']
lea ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_read_header']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_2A7C']
push ['offset', '$SG87585']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_2A9E']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_fclose']
add ['esp,', '4']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '1']
jmp ['loc_2B2E']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_read_body']
add ['esp,', '4']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_40],', '0']
jnz ['short', 'loc_2AD2']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_fclose']
add ['esp,', '4']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '1']
jmp ['short', 'loc_2B2E']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_2AE2']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_40]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_2AEE']
mov ['eax,', '[ebp+var_40]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_fclose']
add ['esp,', '4']
push ['offset', '$SG87591']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_2B18']
mov ['[ebp+var_44],', '1']
jmp ['short', 'loc_2B1F']
mov ['[ebp+var_44],', '0']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '[ebp+var_44]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '44h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_base64_lines   proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2Fh']
cdq
mov ['ecx,', '30h']
idiv ['ecx']
pop ['ebp']
retn
endp
_base64_encode  proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_8],', '0']
jle ['loc_2C64']
cmp ['[ebp+arg_8],', '3']
jge ['short', 'loc_2BD7']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_2BDE']
mov ['[ebp+var_1C],', '3']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_base64_encode_atom']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_14]']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_14]']
mov ['[ebp+arg_8],', 'eax']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_2C1C']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+var_18],', '4']
jge ['short', 'loc_2C5F']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+arg_C]']
jl ['short', 'loc_2C3F']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0Ah']
call ['_fputc']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
movsx ['eax,', 'byte', 'ptr', '[ebp+edx+var_C]']
push ['eax']
call ['_fputc']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_2C13']
jmp ['loc_2BBF']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
push ['0Ah']
call ['_fputc']
add ['esp,', '8']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_ssh2_save_userkey proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1B8h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1B8]']
mov ['ecx,', '6Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+0Ch]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+10h]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2D33']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_2D52']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_33A9']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_2D68']
mov ['[ebp+var_40],', 'offset', '$SG87638']
mov ['[ebp+var_38],', '10h']
jmp ['short', 'loc_2D76']
mov ['[ebp+var_40],', 'offset', '$SG87640']
mov ['[ebp+var_38],', '1']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_28]']
lea ['ecx,', '[eax+edx-1]']
mov ['[ebp+var_30],', 'ecx']
mov ['eax,', '[ebp+var_30]']
cdq
idiv ['[ebp+var_38]']
mov ['eax,', '[ebp+var_30]']
sub ['eax,', 'edx']
mov ['[ebp+var_30],', 'eax']
push ['1']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_30]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
lea ['ecx,', '[ebp+var_58]']
push ['ecx']
mov ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_SHA_Simple']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_30]']
sub ['ecx,', '[ebp+var_28]']
cmp ['ecx,', '14h']
jl ['short', 'loc_2DFF']
push ['418h']
push ['offset', '$SG87644']
push ['offset', '$SG87645']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_30]']
sub ['eax,', '[ebp+var_28]']
push ['eax']
lea ['ecx,', '[ebp+var_58]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ebp+var_28]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+30h]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_6C],', 'eax']
mov ['eax,', '[ebp+var_40]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_70],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_74],', 'eax']
mov ['ecx,', '7']
mov ['esi,', 'offset', '$SG87655']
lea ['edi,', '[ebp+var_11C]']
rep ['movsd']
movsw
movsb
mov ['eax,', '[ebp+var_70]']
mov ['ecx,', '[ebp+var_6C]']
lea ['edx,', '[ecx+eax+8]']
mov ['eax,', '[ebp+var_74]']
lea ['ecx,', '[edx+eax+4]']
mov ['edx,', '[ebp+var_1C]']
lea ['eax,', '[ecx+edx+4]']
mov ['ecx,', '[ebp+var_30]']
lea ['edx,', '[eax+ecx+4]']
mov ['[ebp+var_64],', 'edx']
push ['1']
mov ['eax,', '[ebp+var_64]']
push ['eax']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_60],', 'eax']
mov ['ecx,', '[ebp+var_60]']
mov ['[ebp+var_68],', 'ecx']
mov ['edx,', '[ebp+var_6C]']
sar ['edx,', '18h']
mov ['eax,', '[ebp+var_68]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_6C]']
sar ['ecx,', '10h']
mov ['edx,', '[ebp+var_68]']
mov ['[edx+1],', 'cl']
mov ['eax,', '[ebp+var_6C]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_68]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+var_68]']
mov ['al,', 'byte', 'ptr', '[ebp+var_6C]']
mov ['[edx+3],', 'al']
mov ['ecx,', '[ebp+var_6C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+30h]']
push ['ecx']
mov ['edx,', '[ebp+var_68]']
add ['edx,', '4']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[ebp+var_68]']
lea ['edx,', '[ecx+eax+4]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_70]']
sar ['eax,', '18h']
mov ['ecx,', '[ebp+var_68]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_70]']
sar ['edx,', '10h']
mov ['eax,', '[ebp+var_68]']
mov ['[eax+1],', 'dl']
mov ['ecx,', '[ebp+var_70]']
sar ['ecx,', '8']
mov ['edx,', '[ebp+var_68]']
mov ['[edx+2],', 'cl']
mov ['eax,', '[ebp+var_68]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_70]']
mov ['[eax+3],', 'cl']
mov ['edx,', '[ebp+var_70]']
push ['edx']
mov ['eax,', '[ebp+var_40]']
push ['eax']
mov ['ecx,', '[ebp+var_68]']
add ['ecx,', '4']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_70]']
mov ['eax,', '[ebp+var_68]']
lea ['ecx,', '[eax+edx+4]']
mov ['[ebp+var_68],', 'ecx']
mov ['edx,', '[ebp+var_74]']
sar ['edx,', '18h']
mov ['eax,', '[ebp+var_68]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_74]']
sar ['ecx,', '10h']
mov ['edx,', '[ebp+var_68]']
mov ['[edx+1],', 'cl']
mov ['eax,', '[ebp+var_74]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_68]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+var_68]']
mov ['al,', 'byte', 'ptr', '[ebp+var_74]']
mov ['[edx+3],', 'al']
mov ['ecx,', '[ebp+var_74]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_68]']
add ['ecx,', '4']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_74]']
mov ['eax,', '[ebp+var_68]']
lea ['ecx,', '[eax+edx+4]']
mov ['[ebp+var_68],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
sar ['edx,', '18h']
mov ['eax,', '[ebp+var_68]']
mov ['[eax],', 'dl']
mov ['ecx,', '[ebp+var_1C]']
sar ['ecx,', '10h']
mov ['edx,', '[ebp+var_68]']
mov ['[edx+1],', 'cl']
mov ['eax,', '[ebp+var_1C]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_68]']
mov ['[ecx+2],', 'al']
mov ['edx,', '[ebp+var_68]']
mov ['al,', 'byte', 'ptr', '[ebp+var_1C]']
mov ['[edx+3],', 'al']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '4']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_68]']
lea ['eax,', '[edx+ecx+4]']
mov ['[ebp+var_68],', 'eax']
mov ['ecx,', '[ebp+var_30]']
sar ['ecx,', '18h']
mov ['edx,', '[ebp+var_68]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_30]']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_68]']
mov ['[ecx+1],', 'al']
mov ['edx,', '[ebp+var_30]']
sar ['edx,', '8']
mov ['eax,', '[ebp+var_68]']
mov ['[eax+2],', 'dl']
mov ['ecx,', '[ebp+var_68]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_30]']
mov ['[ecx+3],', 'dl']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_68]']
add ['edx,', '4']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_68]']
lea ['edx,', '[ecx+eax+4]']
mov ['[ebp+var_68],', 'edx']
lea ['eax,', '[ebp+var_D8]']
push ['eax']
call ['_SHA_Init']
add ['esp,', '4']
push ['1Eh']
lea ['ecx,', '[ebp+var_11C]']
push ['ecx']
lea ['edx,', '[ebp+var_D8]']
push ['edx']
call ['_SHA_Bytes']
add ['esp,', '0Ch']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_3081']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['edx,', '[ebp+var_D8]']
push ['edx']
call ['_SHA_Bytes']
add ['esp,', '0Ch']
lea ['eax,', '[ebp+var_F4]']
push ['eax']
lea ['ecx,', '[ebp+var_D8]']
push ['ecx']
call ['_SHA_Final']
add ['esp,', '8']
lea ['edx,', '[ebp+var_58]']
push ['edx']
mov ['eax,', '[ebp+var_64]']
push ['eax']
mov ['ecx,', '[ebp+var_60]']
push ['ecx']
push ['14h']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
call ['_hmac_sha1_simple']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_64]']
push ['eax']
mov ['ecx,', '[ebp+var_60]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
mov ['edx,', '[ebp+var_60]']
push ['edx']
call ['_safefree']
add ['esp,', '4']
push ['14h']
lea ['eax,', '[ebp+var_F4]']
push ['eax']
call ['_smemclr']
add ['esp,', '8']
push ['60h']
lea ['ecx,', '[ebp+var_D8]']
push ['ecx']
call ['_smemclr']
add ['esp,', '8']
cmp ['[ebp+arg_8],', '0']
jz ['loc_31E8']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_34],', 'eax']
lea ['eax,', '[ebp+var_1B4]']
push ['eax']
call ['_SHA_Init']
add ['esp,', '4']
push ['4']
push ['offset', '$SG87682']
lea ['ecx,', '[ebp+var_1B4]']
push ['ecx']
call ['_SHA_Bytes']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_1B4]']
push ['ecx']
call ['_SHA_Bytes']
add ['esp,', '0Ch']
lea ['edx,', '[ebp+var_14C]']
push ['edx']
lea ['eax,', '[ebp+var_1B4]']
push ['eax']
call ['_SHA_Final']
add ['esp,', '8']
lea ['ecx,', '[ebp+var_1B4]']
push ['ecx']
call ['_SHA_Init']
add ['esp,', '4']
push ['4']
push ['offset', '$SG87683']
lea ['edx,', '[ebp+var_1B4]']
push ['edx']
call ['_SHA_Bytes']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['edx,', '[ebp+var_1B4]']
push ['edx']
call ['_SHA_Bytes']
add ['esp,', '0Ch']
lea ['eax,', '[ebp+var_138]']
push ['eax']
lea ['ecx,', '[ebp+var_1B4]']
push ['ecx']
call ['_SHA_Final']
add ['esp,', '8']
mov ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
lea ['ecx,', '[ebp+var_14C]']
push ['ecx']
call ['_aes256_encrypt_pubkey']
add ['esp,', '0Ch']
push ['28h']
lea ['edx,', '[ebp+var_14C]']
push ['edx']
call ['_smemclr']
add ['esp,', '8']
push ['60h']
lea ['eax,', '[ebp+var_1B4]']
push ['eax']
call ['_smemclr']
add ['esp,', '8']
push ['offset', '$SG87684']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_fopen']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_324F']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_smemclr']
add ['esp,', '8']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['_smemclr']
add ['esp,', '8']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_33A9']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+30h]']
push ['eax']
push ['offset', '$SG87686']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_fprintf']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_40]']
push ['edx']
push ['offset', '$SG87687']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_fprintf']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8]']
push ['edx']
push ['offset', '$SG87688']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_fprintf']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_base64_lines']
add ['esp,', '4']
push ['eax']
push ['offset', '$SG87689']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_fprintf']
add ['esp,', '0Ch']
push ['40h']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_base64_encode']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_30]']
push ['eax']
call ['_base64_lines']
add ['esp,', '4']
push ['eax']
push ['offset', '$SG87690']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_fprintf']
add ['esp,', '0Ch']
push ['40h']
mov ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_base64_encode']
add ['esp,', '10h']
push ['offset', '$SG87691']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_fprintf']
add ['esp,', '8']
mov ['[ebp+var_3C],', '0']
jmp ['short', 'loc_3321']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '1']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '14h']
jge ['short', 'loc_3343']
mov ['ecx,', '[ebp+var_3C]']
movzx ['edx,', '[ebp+ecx+var_58]']
push ['edx']
push ['offset', '$SG87695']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_fprintf']
add ['esp,', '0Ch']
jmp ['short', 'loc_3318']
push ['offset', '$SG87696']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_fprintf']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_fclose']
add ['esp,', '4']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_smemclr']
add ['esp,', '8']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['_smemclr']
add ['esp,', '8']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_safefree']
add ['esp,', '4']
mov ['eax,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN23']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1B8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_key_type       proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '94h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_94]']
mov ['ecx,', '25h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '$SG87703']
mov ['[ebp+var_4C],', 'eax']
mov ['ecx,', 'dword_524']
mov ['[ebp+var_48],', 'ecx']
mov ['edx,', 'dword_528']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', 'dword_52C']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', 'dword_530']
mov ['[ebp+var_3C],', 'ecx']
mov ['dl,', 'byte_534']
mov ['[ebp+var_38],', 'dl']
mov ['ecx,', '8']
mov ['esi,', 'offset', '$SG87705']
lea ['edi,', '[ebp+var_78]']
rep ['movsd']
movsb
mov ['eax,', '$SG87707']
mov ['[ebp+var_8C],', 'eax']
mov ['ecx,', 'dword_560']
mov ['[ebp+var_88],', 'ecx']
mov ['edx,', 'dword_564']
mov ['[ebp+var_84],', 'edx']
push ['offset', '$SG87709']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_fopen']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_3539']
xor ['eax,', 'eax']
jmp ['loc_35FC']
mov ['edx,', '[ebp+var_8]']
push ['edx']
push ['20h']
push ['1']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
call ['_fread']
add ['esp,', '10h']
mov ['[ebp+var_94],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_fclose']
add ['esp,', '4']
cmp ['[ebp+var_94],', '0']
jge ['short', 'loc_356F']
xor ['eax,', 'eax']
jmp ['loc_35FC']
cmp ['[ebp+var_94],', '20h']
jge ['short', 'loc_357F']
mov ['eax,', '1']
jmp ['short', 'loc_35FC']
push ['20h']
push ['offset', '$SG87714']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_359D']
mov ['eax,', '2']
jmp ['short', 'loc_35FC']
push ['14h']
lea ['eax,', '[ebp+var_4C]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_35BA']
mov ['eax,', '3']
jmp ['short', 'loc_35FC']
push ['0Bh']
lea ['edx,', '[ebp+var_8C]']
push ['edx']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_35DA']
mov ['eax,', '4']
jmp ['short', 'loc_35FC']
push ['20h']
lea ['ecx,', '[ebp+var_78]']
push ['ecx']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_35F7']
mov ['eax,', '5']
jmp ['short', 'loc_35FC']
mov ['eax,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '94h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_key_type_to_str proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '5']
ja ['short', 'loc_36EF']
mov ['ecx,', '[ebp+var_4]']
jmp ['ds:$LN12_3[ecx*4]']
mov ['eax,', 'offset', '$SG87726']
jmp ['short', 'loc_36F4']
jmp ['short', 'loc_36F4']
mov ['eax,', 'offset', '$SG87728']
jmp ['short', 'loc_36F4']
jmp ['short', 'loc_36F4']
mov ['eax,', 'offset', '$SG87730']
jmp ['short', 'loc_36F4']
jmp ['short', 'loc_36F4']
mov ['eax,', 'offset', '$SG87732']
jmp ['short', 'loc_36F4']
jmp ['short', 'loc_36F4']
mov ['eax,', 'offset', '$SG87734']
jmp ['short', 'loc_36F4']
jmp ['short', 'loc_36F4']
mov ['eax,', 'offset', '$SG87736']
jmp ['short', 'loc_36F4']
jmp ['short', 'loc_36F4']
mov ['eax,', 'offset', '$SG87738']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

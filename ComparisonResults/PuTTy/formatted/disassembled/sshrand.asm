_random_add_noise proc near             
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['ds:_random_active,', '0']
jnz ['short', 'loc_5CC']
jmp ['loc_6E6']
mov ['ecx,', '40h']
sub ['ecx,', 'ds:dword_508']
cmp ['[ebp+arg_4],', 'ecx']
jl ['loc_6BC']
mov ['edx,', '40h']
sub ['edx,', 'ds:dword_508']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', 'ds:dword_508']
add ['ecx,', 'offset', 'byte_4C8']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '40h']
sub ['edx,', 'ds:dword_508']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '40h']
sub ['eax,', 'ds:dword_508']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', 'eax']
mov ['[ebp+arg_4],', 'ecx']
push ['offset', 'byte_4C8']
push ['offset', 'unk_4B4']
call ['_SHATransform']
add ['esp,', '8']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_64D']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '14h']
jge ['short', 'loc_69F']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'ds:byte_4C8[eax]']
mov ['edx,', 'ds:dword_4B0']
movzx ['eax,', 'byte', 'ptr', 'ds:_pool[edx]']
xor ['eax,', 'ecx']
mov ['ecx,', 'ds:dword_4B0']
mov ['byte', 'ptr', 'ds:_pool[ecx],', 'al']
mov ['edx,', 'ds:dword_4B0']
add ['edx,', '1']
mov ['ds:dword_4B0,', 'edx']
cmp ['ds:dword_4B0,', '4B0h']
jl ['short', 'loc_69D']
mov ['ds:dword_4B0,', '0']
jmp ['short', 'loc_644']
cmp ['ds:dword_4B0,', '14h']
jge ['short', 'loc_6AD']
call ['_random_stir']
mov ['ds:dword_508,', '0']
jmp ['loc_5CC']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', 'ds:dword_508']
add ['edx,', 'offset', 'byte_4C8']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', 'ds:dword_508']
add ['eax,', '[ebp+arg_4]']
mov ['ds:dword_508,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_random_stir    proc near               
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '74h']
push ['edi']
lea ['edi,', '[ebp+var_74]']
mov ['ecx,', '1Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
cmp ['ds:dword_50C,', '0']
jz ['short', 'loc_722']
jmp ['loc_85A']
mov ['ds:dword_50C,', '1']
push ['offset', '_random_add_noise']
call ['_noise_get_light']
add ['esp,', '4']
push ['offset', 'byte_4C8']
push ['offset', 'unk_4B4']
call ['_SHATransform']
add ['esp,', '8']
mov ['ds:dword_508,', '0']
push ['14h']
push ['offset', 'unk_4B4']
lea ['eax,', '[ebp+var_64]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['[ebp+var_6C],', '0']
jmp ['short', 'loc_77A']
mov ['ecx,', '[ebp+var_6C]']
add ['ecx,', '1']
mov ['[ebp+var_6C],', 'ecx']
cmp ['[ebp+var_6C],', '2']
jge ['loc_823']
push ['40h']
push ['offset', '_pool']
lea ['edx,', '[ebp+var_48]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['[ebp+var_70],', '4B0h']
mov ['eax,', '[ebp+var_70]']
sub ['eax,', '14h']
mov ['[ebp+var_70],', 'eax']
js ['short', 'loc_81E']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_7BB']
mov ['ecx,', '[ebp+var_74]']
add ['ecx,', '1']
mov ['[ebp+var_74],', 'ecx']
cmp ['[ebp+var_74],', '5']
jnb ['short', 'loc_7DE']
mov ['edx,', '[ebp+var_74]']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_70]']
mov ['edx,', '[ebp+edx*4+var_64]']
xor ['edx,', 'ds:_pool[ecx+eax*4]']
mov ['eax,', '[ebp+var_74]']
mov ['[ebp+eax*4+var_64],', 'edx']
jmp ['short', 'loc_7B2']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
lea ['edx,', '[ebp+var_64]']
push ['edx']
call ['_SHATransform']
add ['esp,', '8']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_800']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
cmp ['[ebp+var_74],', '5']
jnb ['short', 'loc_81C']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ebp+var_70]']
mov ['eax,', '[ebp+var_74]']
mov ['eax,', '[ebp+eax*4+var_64]']
mov ['ds:_pool[edx+ecx*4],', 'eax']
jmp ['short', 'loc_7F7']
jmp ['short', 'loc_79E']
jmp ['loc_771']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
lea ['edx,', '[ebp+var_64]']
push ['edx']
call ['_SHATransform']
add ['esp,', '8']
push ['14h']
lea ['eax,', '[ebp+var_64]']
push ['eax']
push ['offset', 'unk_4B4']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ds:dword_4B0,', '14h']
mov ['ds:dword_50C,', '0']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '74h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_random_add_heavynoise proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '4B0h']
jl ['short', 'loc_92B']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_8E9']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '4B0h']
jge ['short', 'loc_918']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', 'ds:_pool[ecx]']
xor ['edx,', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', 'ds:_pool[eax],', 'dl']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_8E0']
call ['_random_stir']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '4B0h']
mov ['[ebp+arg_4],', 'edx']
jmp ['short', 'loc_8CE']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_93D']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+arg_4]']
jge ['short', 'loc_96B']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', 'ds:_pool[ecx]']
xor ['edx,', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', 'ds:_pool[eax],', 'dl']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_934']
call ['_random_stir']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_random_ref     proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['ds:_random_active,', '0']
jnz ['short', 'loc_9D2']
push ['510h']
push ['0']
push ['offset', '_pool']
call ['_memset']
add ['esp,', '0Ch']
push ['offset', '_random_add_heavynoise_bitbybit']
call ['_noise_get_heavy']
add ['esp,', '4']
call ['_random_stir']
push ['offset', '_pool']
push ['offset', '_random_timer']
push ['493E0h']
call ['_schedule_timer']
add ['esp,', '0Ch']
mov ['dword', 'ptr', 'ds:_next_noise_collection,', 'eax']
mov ['eax,', 'ds:_random_active']
add ['eax,', '1']
mov ['ds:_random_active,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_random_add_heavynoise_bitbybit proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '4B0h']
sub ['ecx,', 'ds:dword_4B0']
cmp ['[ebp+arg_4],', 'ecx']
jl ['short', 'loc_A98']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_A30']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '4B0h']
sub ['eax,', 'ds:dword_4B0']
cmp ['[ebp+var_8],', 'eax']
jge ['short', 'loc_A71']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', 'ds:dword_4B0']
add ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', 'ds:_pool[eax]']
xor ['ecx,', 'edx']
mov ['edx,', 'ds:dword_4B0']
add ['edx,', '[ebp+var_8]']
mov ['byte', 'ptr', 'ds:_pool[edx],', 'cl']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_A27']
call ['_random_stir']
mov ['ecx,', '4B0h']
sub ['ecx,', 'ds:dword_4B0']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', 'ecx']
mov ['[ebp+arg_4],', 'edx']
mov ['ds:dword_4B0,', '0']
jmp ['loc_A0E']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_AAA']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+arg_4]']
jge ['short', 'loc_AD8']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', 'ds:_pool[ecx]']
xor ['edx,', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', 'ds:_pool[eax],', 'dl']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_AA1']
mov ['edx,', '[ebp+var_8]']
mov ['ds:dword_4B0,', 'edx']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_random_timer   proc near               
push ['ebp']
mov ['ebp,', 'esp']
cmp ['ds:_random_active,', '0']
jle ['short', 'loc_B2C']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', 'dword', 'ptr', 'ds:_next_noise_collection']
jnz ['short', 'loc_B2C']
call ['_noise_regular']
push ['offset', '_pool']
push ['offset', '_random_timer']
push ['493E0h']
call ['_schedule_timer']
add ['esp,', '0Ch']
mov ['dword', 'ptr', 'ds:_next_noise_collection,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_random_unref   proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['ds:_random_active,', '0']
jg ['short', 'loc_B67']
push ['12Eh']
push ['offset', '$SG87174']
push ['offset', '$SG87175']
call ['__wassert']
add ['esp,', '0Ch']
cmp ['ds:_random_active,', '1']
jnz ['short', 'loc_B82']
call ['_random_save_seed']
push ['offset', '_pool']
call ['_expire_timer_context']
add ['esp,', '4']
mov ['ecx,', 'ds:_random_active']
sub ['ecx,', '1']
mov ['ds:_random_active,', 'ecx']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_random_byte    proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['ds:_random_active,', '0']
jnz ['short', 'loc_BCF']
push ['138h']
push ['offset', '$SG87180']
push ['offset', '$SG87181']
call ['__wassert']
add ['esp,', '0Ch']
cmp ['ds:dword_4B0,', '4B0h']
jl ['short', 'loc_BE0']
call ['_random_stir']
mov ['ecx,', 'ds:dword_4B0']
mov ['dl,', 'byte', 'ptr', 'ds:_pool[ecx]']
mov ['byte', 'ptr', '[ebp+var_4+3],', 'dl']
mov ['eax,', 'ds:dword_4B0']
add ['eax,', '1']
mov ['ds:dword_4B0,', 'eax']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_4+3]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_random_get_savedata proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['1']
push ['258h']
call ['_safemalloc']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
call ['_random_stir']
push ['258h']
mov ['eax,', 'ds:dword_4B0']
add ['eax,', 'offset', '_pool']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx],', '258h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
call ['_random_stir']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

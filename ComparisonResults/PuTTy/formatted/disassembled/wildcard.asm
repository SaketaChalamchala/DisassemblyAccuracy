_wc_error       proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_abs']
add ['esp,', '4']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '1']
jz ['short', 'loc_150']
cmp ['[ebp+var_4],', '2']
jz ['short', 'loc_157']
cmp ['[ebp+var_4],', '3']
jz ['short', 'loc_15E']
jmp ['short', 'loc_165']
mov ['eax,', 'offset', '$SG85557']
jmp ['short', 'loc_16A']
mov ['eax,', 'offset', '$SG85559']
jmp ['short', 'loc_16A']
mov ['eax,', 'offset', '$SG85561']
jmp ['short', 'loc_16A']
mov ['eax,', 'offset', '$SG85562']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_wc_match       proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Ah']
jz ['short', 'loc_1C3']
lea ['edx,', '[ebp+arg_4]']
push ['edx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_wc_match_fragment']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jg ['short', 'loc_1C3']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_2E2']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['loc_2D5']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Ah']
jz ['short', 'loc_1F3']
push ['0E1h']
push ['offset', '$SG85620']
push ['offset', '$SG85621']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Ah']
jnz ['short', 'loc_209']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1']
mov ['[ebp+arg_0],', 'edx']
jmp ['short', 'loc_1F3']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_21D']
mov ['eax,', '1']
jmp ['loc_2E2']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['loc_2C1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'edx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_wc_match_fragment']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jge ['short', 'loc_25F']
mov ['eax,', '[ebp+var_4]']
jmp ['loc_2E2']
cmp ['[ebp+var_4],', '0']
jle ['short', 'loc_2AB']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jnz ['short', 'loc_2AB']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_2AB']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+var_C]']
sub ['eax,', 'ecx']
mov ['[ebp+arg_4],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+arg_0],', 'edx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_wc_match_fragment']
add ['esp,', '8']
jmp ['short', 'loc_2E2']
cmp ['[ebp+var_4],', '0']
jle ['short', 'loc_2B3']
jmp ['short', 'loc_2C1']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
jmp ['loc_224']
cmp ['[ebp+var_4],', '0']
jle ['short', 'loc_2CC']
jmp ['loc_1C3']
xor ['eax,', 'eax']
jmp ['short', 'loc_2E2']
jmp ['loc_1C3']
mov ['eax,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[eax]']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_wc_match_fragment proc near            
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['loc_561']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Ah']
jz ['loc_561']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['loc_561']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '5Ch']
jnz ['short', 'loc_3A1']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_37B']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_58F']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'byte', 'ptr', '[edx+1]']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['eax,', 'edx']
jz ['short', 'loc_393']
xor ['eax,', 'eax']
jmp ['loc_58F']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
jmp ['loc_553']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '3Fh']
jnz ['short', 'loc_3BA']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
jmp ['loc_553']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '5Bh']
jnz ['loc_536']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '5Eh']
jnz ['short', 'loc_3FB']
mov ['[ebp+var_C],', '1']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '5Dh']
jz ['loc_51F']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '5Ch']
jnz ['short', 'loc_41E']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_432']
mov ['eax,', '0FFFFFFFEh']
jmp ['loc_58F']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'byte', 'ptr', '[edx+1]']
cmp ['eax,', '2Dh']
jnz ['loc_4E8']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '5Dh']
jnz ['short', 'loc_472']
mov ['eax,', '0FFFFFFFDh']
jmp ['loc_58F']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '5Ch']
jnz ['short', 'loc_486']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jnz ['short', 'loc_49A']
mov ['eax,', '0FFFFFFFEh']
jmp ['loc_58F']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_18]']
jle ['short', 'loc_4CF']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_1C]']
cmp ['eax,', '[ebp+var_14]']
jl ['short', 'loc_4E6']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+var_18]']
jg ['short', 'loc_4E6']
mov ['[ebp+var_10],', '1']
jmp ['short', 'loc_51A']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
cmp ['edx,', 'eax']
jnz ['short', 'loc_50A']
mov ['[ebp+var_24],', '1']
jmp ['short', 'loc_511']
mov ['[ebp+var_24],', '0']
mov ['edx,', '[ebp+var_10]']
or ['edx,', '[ebp+var_24]']
mov ['[ebp+var_10],', 'edx']
jmp ['loc_3FB']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+var_10]']
jnz ['short', 'loc_52B']
xor ['eax,', 'eax']
jmp ['short', 'loc_58F']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_553']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['eax,', 'edx']
jz ['short', 'loc_54A']
xor ['eax,', 'eax']
jmp ['short', 'loc_58F']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
jmp ['loc_332']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_576']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '2Ah']
jnz ['short', 'loc_58D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['eax,', '1']
jmp ['short', 'loc_58F']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_wc_unescape    proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['loc_648']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '5Ch']
jnz ['short', 'loc_5EF']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_5ED']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_5E4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['al,', '[edx]']
mov ['[ecx],', 'al']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
jmp ['short', 'loc_643']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Ah']
jz ['short', 'loc_61B']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '3Fh']
jz ['short', 'loc_61B']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '5Bh']
jz ['short', 'loc_61B']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '5Dh']
jnz ['short', 'loc_621']
xor ['eax,', 'eax']
jmp ['short', 'loc_659']
jmp ['short', 'loc_643']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_63A']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax]']
mov ['[edx],', 'cl']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
jmp ['loc_59F']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_654']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['eax,', '1']
pop ['ebp']
retn
endp

.data:00000000 ;
.data:00000000 ; +-------------------------------------------------------------------------+
.data:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.data:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.data:00000000 ; |                      License info: 48-3677-7074-51                      |
.data:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.data:00000000 ; +-------------------------------------------------------------------------+
.data:00000000 ;
.data:00000000 ; Input MD5   : 94E82F8C1C0A57D6FCF2FB46A9B7360A
.data:00000000 ; Input CRC32 : D2D5B340
.data:00000000
.data:00000000 ; File Name   : C:\workspace\Putty\windows\VS2010\putty\Debug\winpgntc.obj
.data:00000000 ; Format      : COFF (X386MAGIC)
.data:00000000 ; includelib "uuid.lib"
.data:00000000 ; includelib "LIBCMTD"
.data:00000000 ; includelib "OLDNAMES"
.data:00000000
.data:00000000                 .686p
.data:00000000                 .mmx
.data:00000000                 .model flat
.data:00000000
.data:00000000 ; ===========================================================================
.data:00000000
.data:00000000 ; Segment type: Pure data
.data:00000000 ; Segment permissions: Read/Write
.data:00000000 _data           segment dword public 'DATA' use32
.data:00000000                 assume cs:_data
.data:00000000 ; CHAR _SG86394[]
.data:00000000 $SG86394        db 'Pageant',0          ; DATA XREF: _agent_exists+Eo
.data:00000008 ; CHAR _SG86395[]
.data:00000008 $SG86395        db 'Pageant',0          ; DATA XREF: _agent_exists+13o
.data:00000010 ; CHAR _SG86429[]
.data:00000010 $SG86429        db 'Pageant',0          ; DATA XREF: _agent_query+39o
.data:00000018 ; CHAR _SG86430[]
.data:00000018 $SG86430        db 'Pageant',0          ; DATA XREF: _agent_query+3Eo
.data:00000020 $SG86433        db 'PageantRequest%08x',0 ; DATA XREF: _agent_query+73o
.data:00000033                 align 4
.data:00000033 _data           ends
.data:00000033
.text:00000034 ; ===========================================================================
.text:00000034
.text:00000034 ; Segment type: Pure code
.text:00000034 ; Segment permissions: Read/Execute
.text:00000034 _text           segment para public 'CODE' use32
.text:00000034                 assume cs:_text
.text:00000034                 ;org 34h
.text:00000034                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text:00000034
.text:00000034 ; =============== S U B R O U T I N E =======================================
.text:00000034
.text:00000034 ; Attributes: bp-based frame
.text:00000034
.text:00000034                 public _agent_exists
.text:00000034 _agent_exists   proc near
.text:00000034
.text:00000034 var_4           = dword ptr -4
.text:00000034
.text:00000034                 push    ebp
.text:00000035                 mov     ebp, esp
.text:00000037                 push    ecx
.text:00000038                 push    esi
.text:00000039                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00000040                 mov     esi, esp
.text:00000042                 push    offset $SG86394 ; "Pageant"
.text:00000047                 push    offset $SG86395 ; "Pageant"
.text:0000004C                 call    dword ptr ds:__imp__FindWindowA@8 ; FindWindowA(x,x)
.text:00000052                 cmp     esi, esp
.text:00000054                 call    __RTC_CheckEsp
.text:00000059                 mov     [ebp+var_4], eax
.text:0000005C                 cmp     [ebp+var_4], 0
.text:00000060                 jnz     short loc_68
.text:00000062                 xor     eax, eax
.text:00000064                 jmp     short loc_6D
.text:00000066 ; ---------------------------------------------------------------------------
.text:00000066                 jmp     short loc_6D
.text:00000068 ; ---------------------------------------------------------------------------
.text:00000068
.text:00000068 loc_68:                                 ; CODE XREF: _agent_exists+2Cj
.text:00000068                 mov     eax, 1
.text:0000006D
.text:0000006D loc_6D:                                 ; CODE XREF: _agent_exists+30j
.text:0000006D                                         ; _agent_exists+32j
.text:0000006D                 pop     esi
.text:0000006E                 add     esp, 4
.text:00000071                 cmp     ebp, esp
.text:00000073                 call    __RTC_CheckEsp
.text:00000078                 mov     esp, ebp
.text:0000007A                 pop     ebp
.text:0000007B                 retn
.text:0000007B _agent_exists   endp
.text:0000007B
.text:0000007B ; ---------------------------------------------------------------------------
.text:0000007C                 db 8 dup(0CCh)
.text:00000084
.text:00000084 ; =============== S U B R O U T I N E =======================================
.text:00000084
.text:00000084 ; Attributes: bp-based frame
.text:00000084
.text:00000084 ; int __cdecl agent_query(void *Src, size_t Size, int, int)
.text:00000084                 public _agent_query
.text:00000084 _agent_query    proc near
.text:00000084
.text:00000084 var_50          = dword ptr -50h
.text:00000084 hMem            = dword ptr -4Ch
.text:00000084 lpFileMappingAttributes= dword ptr -48h
.text:00000084 var_40          = dword ptr -40h
.text:00000084 var_3C          = dword ptr -3Ch
.text:00000084 var_38          = dword ptr -38h
.text:00000084 lParam          = dword ptr -2Ch
.text:00000084 var_28          = dword ptr -28h
.text:00000084 var_24          = dword ptr -24h
.text:00000084 var_1C          = dword ptr -1Ch
.text:00000084 var_18          = dword ptr -18h
.text:00000084 var_14          = dword ptr -14h
.text:00000084 Dst             = dword ptr -10h
.text:00000084 hFileMappingObject= dword ptr -0Ch
.text:00000084 lpName          = dword ptr -8
.text:00000084 hWnd            = dword ptr -4
.text:00000084 Src             = dword ptr  8
.text:00000084 Size            = dword ptr  0Ch
.text:00000084 arg_8           = dword ptr  10h
.text:00000084 arg_C           = dword ptr  14h
.text:00000084
.text:00000084                 push    ebp
.text:00000085                 mov     ebp, esp
.text:00000087                 sub     esp, 50h
.text:0000008A                 push    esi
.text:0000008B                 push    edi
.text:0000008C                 lea     edi, [ebp+var_50]
.text:0000008F                 mov     ecx, 14h
.text:00000094                 mov     eax, 0CCCCCCCCh
.text:00000099                 rep stosd
.text:0000009B                 mov     [ebp+hMem], 0
.text:000000A2                 mov     [ebp+var_50], 0
.text:000000A9                 mov     eax, [ebp+arg_8]
.text:000000AC                 mov     dword ptr [eax], 0
.text:000000B2                 mov     ecx, [ebp+arg_C]
.text:000000B5                 mov     dword ptr [ecx], 0
.text:000000BB                 mov     esi, esp
.text:000000BD                 push    offset $SG86429 ; "Pageant"
.text:000000C2                 push    offset $SG86430 ; "Pageant"
.text:000000C7                 call    dword ptr ds:__imp__FindWindowA@8 ; FindWindowA(x,x)
.text:000000CD                 cmp     esi, esp
.text:000000CF                 call    __RTC_CheckEsp
.text:000000D4                 mov     [ebp+hWnd], eax
.text:000000D7                 cmp     [ebp+hWnd], 0
.text:000000DB                 jnz     short loc_E7
.text:000000DD                 mov     eax, 1
.text:000000E2                 jmp     loc_338
.text:000000E7 ; ---------------------------------------------------------------------------
.text:000000E7
.text:000000E7 loc_E7:                                 ; CODE XREF: _agent_query+57j
.text:000000E7                 mov     esi, esp
.text:000000E9                 call    dword ptr ds:__imp__GetCurrentThreadId@0 ; GetCurrentThreadId()
.text:000000EF                 cmp     esi, esp
.text:000000F1                 call    __RTC_CheckEsp
.text:000000F6                 push    eax
.text:000000F7                 push    offset $SG86433 ; "PageantRequest%08x"
.text:000000FC                 call    _dupprintf
.text:00000101                 add     esp, 8
.text:00000104                 mov     [ebp+lpName], eax
.text:00000107                 mov     [ebp+lpFileMappingAttributes], 0
.text:0000010E                 call    _got_advapi
.text:00000113                 test    eax, eax
.text:00000115                 jz      loc_1B5
.text:0000011B                 call    _get_user_sid
.text:00000120                 mov     [ebp+var_50], eax
.text:00000123                 cmp     [ebp+var_50], 0
.text:00000127                 jz      loc_1B5
.text:0000012D                 mov     esi, esp
.text:0000012F                 push    14h             ; uBytes
.text:00000131                 push    40h ; '@'       ; uFlags
.text:00000133                 call    dword ptr ds:__imp__LocalAlloc@8 ; LocalAlloc(x,x)
.text:00000139                 cmp     esi, esp
.text:0000013B                 call    __RTC_CheckEsp
.text:00000140                 mov     [ebp+hMem], eax
.text:00000143                 cmp     [ebp+hMem], 0
.text:00000147                 jz      short loc_1B5
.text:00000149                 mov     esi, esp
.text:0000014B                 push    1
.text:0000014D                 mov     edx, [ebp+hMem]
.text:00000150                 push    edx
.text:00000151                 call    dword ptr ds:_p_InitializeSecurityDescriptor
.text:00000157                 cmp     esi, esp
.text:00000159                 call    __RTC_CheckEsp
.text:0000015E                 test    eax, eax
.text:00000160                 jz      short loc_19B
.text:00000162                 mov     esi, esp
.text:00000164                 push    0
.text:00000166                 mov     eax, [ebp+var_50]
.text:00000169                 push    eax
.text:0000016A                 mov     ecx, [ebp+hMem]
.text:0000016D                 push    ecx
.text:0000016E                 call    dword ptr ds:_p_SetSecurityDescriptorOwner
.text:00000174                 cmp     esi, esp
.text:00000176                 call    __RTC_CheckEsp
.text:0000017B                 test    eax, eax
.text:0000017D                 jz      short loc_19B
.text:0000017F                 mov     [ebp+var_40], 0Ch
.text:00000186                 mov     [ebp+var_38], 1
.text:0000018D                 mov     edx, [ebp+hMem]
.text:00000190                 mov     [ebp+var_3C], edx
.text:00000193                 lea     eax, [ebp+var_40]
.text:00000196                 mov     [ebp+lpFileMappingAttributes], eax
.text:00000199                 jmp     short loc_1B5
.text:0000019B ; ---------------------------------------------------------------------------
.text:0000019B
.text:0000019B loc_19B:                                ; CODE XREF: _agent_query+DCj
.text:0000019B                                         ; _agent_query+F9j
.text:0000019B                 mov     esi, esp
.text:0000019D                 mov     ecx, [ebp+hMem]
.text:000001A0                 push    ecx             ; hMem
.text:000001A1                 call    dword ptr ds:__imp__LocalFree@4 ; LocalFree(x)
.text:000001A7                 cmp     esi, esp
.text:000001A9                 call    __RTC_CheckEsp
.text:000001AE                 mov     [ebp+hMem], 0
.text:000001B5
.text:000001B5 loc_1B5:                                ; CODE XREF: _agent_query+91j
.text:000001B5                                         ; _agent_query+A3j ...
.text:000001B5                 mov     esi, esp
.text:000001B7                 mov     edx, [ebp+lpName]
.text:000001BA                 push    edx             ; lpName
.text:000001BB                 push    2000h           ; dwMaximumSizeLow
.text:000001C0                 push    0               ; dwMaximumSizeHigh
.text:000001C2                 push    4               ; flProtect
.text:000001C4                 mov     eax, [ebp+lpFileMappingAttributes]
.text:000001C7                 push    eax             ; lpFileMappingAttributes
.text:000001C8                 push    0FFFFFFFFh      ; hFile
.text:000001CA                 call    dword ptr ds:__imp__CreateFileMappingA@24 ; CreateFileMappingA(x,x,x,x,x,x)
.text:000001D0                 cmp     esi, esp
.text:000001D2                 call    __RTC_CheckEsp
.text:000001D7                 mov     [ebp+hFileMappingObject], eax
.text:000001DA                 cmp     [ebp+hFileMappingObject], 0
.text:000001DE                 jz      short loc_1E6
.text:000001E0                 cmp     [ebp+hFileMappingObject], 0FFFFFFFFh
.text:000001E4                 jnz     short loc_1FC
.text:000001E6
.text:000001E6 loc_1E6:                                ; CODE XREF: _agent_query+15Aj
.text:000001E6                 mov     ecx, [ebp+lpName]
.text:000001E9                 push    ecx
.text:000001EA                 call    _safefree
.text:000001EF                 add     esp, 4
.text:000001F2                 mov     eax, 1
.text:000001F7                 jmp     loc_338
.text:000001FC ; ---------------------------------------------------------------------------
.text:000001FC
.text:000001FC loc_1FC:                                ; CODE XREF: _agent_query+160j
.text:000001FC                 mov     esi, esp
.text:000001FE                 push    0               ; dwNumberOfBytesToMap
.text:00000200                 push    0               ; dwFileOffsetLow
.text:00000202                 push    0               ; dwFileOffsetHigh
.text:00000204                 push    2               ; dwDesiredAccess
.text:00000206                 mov     edx, [ebp+hFileMappingObject]
.text:00000209                 push    edx             ; hFileMappingObject
.text:0000020A                 call    dword ptr ds:__imp__MapViewOfFile@20 ; MapViewOfFile(x,x,x,x,x)
.text:00000210                 cmp     esi, esp
.text:00000212                 call    __RTC_CheckEsp
.text:00000217                 mov     [ebp+Dst], eax
.text:0000021A                 mov     eax, [ebp+Size]
.text:0000021D                 push    eax             ; Size
.text:0000021E                 mov     ecx, [ebp+Src]
.text:00000221                 push    ecx             ; Src
.text:00000222                 mov     edx, [ebp+Dst]
.text:00000225                 push    edx             ; Dst
.text:00000226                 call    _memcpy
.text:0000022B                 add     esp, 0Ch
.text:0000022E                 mov     [ebp+lParam], 804E50BAh
.text:00000235                 mov     eax, [ebp+lpName]
.text:00000238                 push    eax             ; Str
.text:00000239                 call    _strlen
.text:0000023E                 add     esp, 4
.text:00000241                 add     eax, 1
.text:00000244                 mov     [ebp+var_28], eax
.text:00000247                 mov     ecx, [ebp+lpName]
.text:0000024A                 mov     [ebp+var_24], ecx
.text:0000024D                 mov     esi, esp
.text:0000024F                 lea     edx, [ebp+lParam]
.text:00000252                 push    edx             ; lParam
.text:00000253                 push    0               ; wParam
.text:00000255                 push    4Ah ; 'J'       ; Msg
.text:00000257                 mov     eax, [ebp+hWnd]
.text:0000025A                 push    eax             ; hWnd
.text:0000025B                 call    dword ptr ds:__imp__SendMessageA@16 ; SendMessageA(x,x,x,x)
.text:00000261                 cmp     esi, esp
.text:00000263                 call    __RTC_CheckEsp
.text:00000268                 mov     [ebp+var_18], eax
.text:0000026B                 cmp     [ebp+var_18], 0
.text:0000026F                 jle     short loc_2DC
.text:00000271                 mov     ecx, [ebp+Dst]
.text:00000274                 movzx   edx, byte ptr [ecx]
.text:00000277                 shl     edx, 18h
.text:0000027A                 mov     eax, [ebp+Dst]
.text:0000027D                 movzx   ecx, byte ptr [eax+1]
.text:00000281                 shl     ecx, 10h
.text:00000284                 or      edx, ecx
.text:00000286                 mov     eax, [ebp+Dst]
.text:00000289                 movzx   ecx, byte ptr [eax+2]
.text:0000028D                 shl     ecx, 8
.text:00000290                 or      edx, ecx
.text:00000292                 mov     eax, [ebp+Dst]
.text:00000295                 movzx   ecx, byte ptr [eax+3]
.text:00000299                 or      edx, ecx
.text:0000029B                 add     edx, 4
.text:0000029E                 mov     [ebp+var_1C], edx
.text:000002A1                 push    1
.text:000002A3                 mov     edx, [ebp+var_1C]
.text:000002A6                 push    edx
.text:000002A7                 call    _safemalloc
.text:000002AC                 add     esp, 8
.text:000002AF                 mov     [ebp+var_14], eax
.text:000002B2                 cmp     [ebp+var_14], 0
.text:000002B6                 jz      short loc_2DC
.text:000002B8                 mov     eax, [ebp+var_1C]
.text:000002BB                 push    eax             ; Size
.text:000002BC                 mov     ecx, [ebp+Dst]
.text:000002BF                 push    ecx             ; Src
.text:000002C0                 mov     edx, [ebp+var_14]
.text:000002C3                 push    edx             ; Dst
.text:000002C4                 call    _memcpy
.text:000002C9                 add     esp, 0Ch
.text:000002CC                 mov     eax, [ebp+arg_8]
.text:000002CF                 mov     ecx, [ebp+var_14]
.text:000002D2                 mov     [eax], ecx
.text:000002D4                 mov     edx, [ebp+arg_C]
.text:000002D7                 mov     eax, [ebp+var_1C]
.text:000002DA                 mov     [edx], eax
.text:000002DC
.text:000002DC loc_2DC:                                ; CODE XREF: _agent_query+1EBj
.text:000002DC                                         ; _agent_query+232j
.text:000002DC                 mov     esi, esp
.text:000002DE                 mov     ecx, [ebp+Dst]
.text:000002E1                 push    ecx             ; lpBaseAddress
.text:000002E2                 call    dword ptr ds:__imp__UnmapViewOfFile@4 ; UnmapViewOfFile(x)
.text:000002E8                 cmp     esi, esp
.text:000002EA                 call    __RTC_CheckEsp
.text:000002EF                 mov     esi, esp
.text:000002F1                 mov     edx, [ebp+hFileMappingObject]
.text:000002F4                 push    edx             ; hObject
.text:000002F5                 call    dword ptr ds:__imp__CloseHandle@4 ; CloseHandle(x)
.text:000002FB                 cmp     esi, esp
.text:000002FD                 call    __RTC_CheckEsp
.text:00000302                 mov     eax, [ebp+lpName]
.text:00000305                 push    eax
.text:00000306                 call    _safefree
.text:0000030B                 add     esp, 4
.text:0000030E                 cmp     [ebp+hMem], 0
.text:00000312                 jz      short loc_327
.text:00000314                 mov     esi, esp
.text:00000316                 mov     ecx, [ebp+hMem]
.text:00000319                 push    ecx             ; hMem
.text:0000031A                 call    dword ptr ds:__imp__LocalFree@4 ; LocalFree(x)
.text:00000320                 cmp     esi, esp
.text:00000322                 call    __RTC_CheckEsp
.text:00000327
.text:00000327 loc_327:                                ; CODE XREF: _agent_query+28Ej
.text:00000327                 mov     edx, [ebp+var_50]
.text:0000032A                 push    edx
.text:0000032B                 call    _safefree
.text:00000330                 add     esp, 4
.text:00000333                 mov     eax, 1
.text:00000338
.text:00000338 loc_338:                                ; CODE XREF: _agent_query+5Ej
.text:00000338                                         ; _agent_query+173j
.text:00000338                 push    edx
.text:00000339                 mov     ecx, ebp
.text:0000033B                 push    eax
.text:0000033C                 lea     edx, $LN17
.text:00000342                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00000347                 pop     eax
.text:00000348                 pop     edx
.text:00000349                 pop     edi
.text:0000034A                 pop     esi
.text:0000034B                 add     esp, 50h
.text:0000034E                 cmp     ebp, esp
.text:00000350                 call    __RTC_CheckEsp
.text:00000355                 mov     esp, ebp
.text:00000357                 pop     ebp
.text:00000358                 retn
.text:00000358 _agent_query    endp
.text:00000358
.text:00000358 ; ---------------------------------------------------------------------------
.text:00000359                 align 4
.text:0000035C $LN17           dd 2                    ; DATA XREF: _agent_query+2B8o
.text:00000360                 dd offset $LN16
.text:00000364 $LN16           dd 0FFFFFFD4h, 0Ch      ; DATA XREF: .text:00000360o
.text:0000036C                 dd offset $LN14
.text:00000370                 dd 0FFFFFFC0h, 0Ch
.text:00000378                 dd offset $LN15
.text:0000037C $LN15           db 73h, 61h, 0          ; DATA XREF: .text:00000378o
.text:0000037F $LN14           db 63h                  ; DATA XREF: .text:0000036Co
.text:00000380                 db 64h, 73h, 0
.text:00000383                 align 4
.text:00000383 _text           ends
.text:00000383
.rtc$TMZ:00000384 ; ===========================================================================
.rtc$TMZ:00000384
.rtc$TMZ:00000384 ; Segment type: Pure data
.rtc$TMZ:00000384 ; Segment permissions: Read
.rtc$TMZ:00000384 _rtc$TMZ        segment dword public 'DATA' use32
.rtc$TMZ:00000384                 assume cs:_rtc$TMZ
.rtc$TMZ:00000384                 ;org 384h
.rtc$TMZ:00000384 ; COMDAT (pick any)
.rtc$TMZ:00000384 __RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
.rtc$TMZ:00000384 _rtc$TMZ        ends
.rtc$TMZ:00000384
.rtc$IMZ:00000388 ; ===========================================================================
.rtc$IMZ:00000388
.rtc$IMZ:00000388 ; Segment type: Pure data
.rtc$IMZ:00000388 ; Segment permissions: Read
.rtc$IMZ:00000388 _rtc$IMZ        segment dword public 'DATA' use32
.rtc$IMZ:00000388                 assume cs:_rtc$IMZ
.rtc$IMZ:00000388                 ;org 388h
.rtc$IMZ:00000388 ; COMDAT (pick any)
.rtc$IMZ:00000388 __RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
.rtc$IMZ:00000388 _rtc$IMZ        ends
.rtc$IMZ:00000388
UNDEF:00000390 ; ===========================================================================
UNDEF:00000390
UNDEF:00000390 ; Segment type: Externs
UNDEF:00000390 ; UNDEF
UNDEF:00000390 ; HWND __stdcall FindWindowA(LPCSTR lpClassName, LPCSTR lpWindowName)
UNDEF:00000390                 extrn __imp__FindWindowA@8:near
UNDEF:00000390                                         ; CODE XREF: _agent_exists+18p
UNDEF:00000390                                         ; _agent_query+43p
UNDEF:00000390                                         ; DATA XREF: ...
UNDEF:00000394                 extrn __RTC_CheckEsp:near ; CODE XREF: _agent_exists+20p
UNDEF:00000394                                         ; _agent_exists+3Fp ...
UNDEF:00000398                 extrn __RTC_Shutdown:near
UNDEF:00000398                                         ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
UNDEF:0000039C                 extrn __RTC_InitBase:near
UNDEF:0000039C                                         ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
UNDEF:000003A0 ; BOOL __stdcall CloseHandle(HANDLE hObject)
UNDEF:000003A0                 extrn __imp__CloseHandle@4:near
UNDEF:000003A0                                         ; CODE XREF: _agent_query+271p
UNDEF:000003A0                                         ; DATA XREF: _agent_query+271r
UNDEF:000003A4 ; BOOL __stdcall UnmapViewOfFile(LPCVOID lpBaseAddress)
UNDEF:000003A4                 extrn __imp__UnmapViewOfFile@4:near
UNDEF:000003A4                                         ; CODE XREF: _agent_query+25Ep
UNDEF:000003A4                                         ; DATA XREF: _agent_query+25Er
UNDEF:000003A8                 extrn _safemalloc:near  ; CODE XREF: _agent_query+223p
UNDEF:000003AC ; LRESULT __stdcall SendMessageA(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam)
UNDEF:000003AC                 extrn __imp__SendMessageA@16:near
UNDEF:000003AC                                         ; CODE XREF: _agent_query+1D7p
UNDEF:000003AC                                         ; DATA XREF: _agent_query+1D7r
UNDEF:000003B0 ; size_t __cdecl strlen(const char *Str)
UNDEF:000003B0                 extrn _strlen:near      ; CODE XREF: _agent_query+1B5p
UNDEF:000003B4 ; void *__cdecl memcpy(void *Dst, const void *Src, size_t Size)
UNDEF:000003B4                 extrn _memcpy:near      ; CODE XREF: _agent_query+1A2p
UNDEF:000003B4                                         ; _agent_query+240p
UNDEF:000003B8 ; LPVOID __stdcall MapViewOfFile(HANDLE hFileMappingObject, DWORD dwDesiredAccess, DWORD dwFileOffsetHigh, DWORD dwFileOffsetLow, SIZE_T dwNumberOfBytesToMap)
UNDEF:000003B8                 extrn __imp__MapViewOfFile@20:near
UNDEF:000003B8                                         ; CODE XREF: _agent_query+186p
UNDEF:000003B8                                         ; DATA XREF: _agent_query+186r
UNDEF:000003BC                 extrn _safefree:near    ; CODE XREF: _agent_query+166p
UNDEF:000003BC                                         ; _agent_query+282p ...
UNDEF:000003C0 ; HANDLE __stdcall CreateFileMappingA(HANDLE hFile, LPSECURITY_ATTRIBUTES lpFileMappingAttributes, DWORD flProtect, DWORD dwMaximumSizeHigh, DWORD dwMaximumSizeLow, LPCSTR lpName)
UNDEF:000003C0                 extrn __imp__CreateFileMappingA@24:near
UNDEF:000003C0                                         ; CODE XREF: _agent_query+146p
UNDEF:000003C0                                         ; DATA XREF: _agent_query+146r
UNDEF:000003C4 ; HLOCAL __stdcall LocalFree(HLOCAL hMem)
UNDEF:000003C4                 extrn __imp__LocalFree@4:near ; CODE XREF: _agent_query+11Dp
UNDEF:000003C4                                         ; _agent_query+296p
UNDEF:000003C4                                         ; DATA XREF: ...
UNDEF:000003C8                 extrn _p_SetSecurityDescriptorOwner:near
UNDEF:000003C8                                         ; CODE XREF: _agent_query+EAp
UNDEF:000003C8                                         ; DATA XREF: _agent_query+EAr
UNDEF:000003CC                 extrn _p_InitializeSecurityDescriptor:near
UNDEF:000003CC                                         ; CODE XREF: _agent_query+CDp
UNDEF:000003CC                                         ; DATA XREF: _agent_query+CDr
UNDEF:000003D0 ; HLOCAL __stdcall LocalAlloc(UINT uFlags, SIZE_T uBytes)
UNDEF:000003D0                 extrn __imp__LocalAlloc@8:near ; CODE XREF: _agent_query+AFp
UNDEF:000003D0                                         ; DATA XREF: _agent_query+AFr
UNDEF:000003D4                 extrn _get_user_sid:near ; CODE XREF: _agent_query+97p
UNDEF:000003D8                 extrn _got_advapi:near  ; CODE XREF: _agent_query+8Ap
UNDEF:000003DC                 extrn _dupprintf:near   ; CODE XREF: _agent_query+78p
UNDEF:000003E0 ; DWORD __stdcall GetCurrentThreadId()
UNDEF:000003E0                 extrn __imp__GetCurrentThreadId@0:near
UNDEF:000003E0                                         ; CODE XREF: _agent_query+65p
UNDEF:000003E0                                         ; DATA XREF: _agent_query+65r
UNDEF:000003E4 ; __fastcall _RTC_CheckStackVars(x, x)
UNDEF:000003E4                 extrn @_RTC_CheckStackVars@8:near
UNDEF:000003E4                                         ; CODE XREF: _agent_query+2BEp
UNDEF:000003E4
UNDEF:000003E4
UNDEF:000003E4                 end
.bss:00000000 ;
.bss:00000000 ; +-------------------------------------------------------------------------+
.bss:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.bss:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.bss:00000000 ; |                      License info: 48-3677-7074-51                      |
.bss:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.bss:00000000 ; +-------------------------------------------------------------------------+
.bss:00000000 ;
.bss:00000000 ; Input MD5   : CFADCB6362C75FDFE21657A5E84E2FEB
.bss:00000000 ; Input CRC32 : 40D301D8
.bss:00000000
.bss:00000000 ; File Name   : C:\workspace\Putty\windows\VS2010\putty\Debug\wincfg.obj
.bss:00000000 ; Format      : COFF (X386MAGIC)
.bss:00000000 ; includelib "uuid.lib"
.bss:00000000 ; includelib "LIBCMTD"
.bss:00000000 ; includelib "OLDNAMES"
.bss:00000000
.bss:00000000                 include uni.inc ; see unicode subdir of ida for info on unicode
.bss:00000000
.bss:00000000                 .686p
.bss:00000000                 .mmx
.bss:00000000                 .model flat
.bss:00000000 .intel_syntax noprefix
.bss:00000000
.bss:00000000 ; ===========================================================================
.bss:00000000
.bss:00000000 ; Segment type: Uninitialized
.bss:00000000 ; Segment permissions: Read/Write
.bss:00000000 _bss            segment byte public 'BSS' use32
.bss:00000000                 assume cs:_bss
.bss:00000000                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.bss:00000000 $SG86302        db    ? ;               ; DATA XREF: _win_setup_config_box+2Do
.bss:00000001 $SG86303        db    ? ;               ; DATA XREF: _win_setup_config_box+32o
.bss:00000002 $SG86304        db    ? ;               ; DATA XREF: _win_setup_config_box+37o
.bss:00000003                 align 4
.bss:00000003 _bss            ends
.bss:00000003
.data:00000004 ; ===========================================================================
.data:00000004
.data:00000004 ; Segment type: Pure data
.data:00000004 ; Segment permissions: Read/Write
.data:00000004 ; Segment alignment 'qword' can not be represented in assembly
.data:00000004 _data           segment para public 'DATA' use32
.data:00000004                 assume cs:_data
.data:00000004                 ;org 4
.data:00000004 $SG86306        db 'About',0            ; DATA XREF: _win_setup_config_box+6Ao
.data:0000000A                 align 4
.data:0000000C $SG86309        db 'Help',0             ; DATA XREF: _win_setup_config_box+ADo
.data:00000011                 align 4
.data:00000014 $SG86310        db 'Control the scrollback in the window',0
.data:00000014                                         ; DATA XREF: _win_setup_config_box:loc_E27o
.data:00000039                 align 4
.data:0000003C $SG86311        db 'scrollback',0       ; DATA XREF: _win_setup_config_box+D0o
.data:00000047                 align 4
.data:00000048 $SG86312        db 'Window',0           ; DATA XREF: _win_setup_config_box+D5o
.data:0000004F                 align 10h
.data:00000050 $SG86313        db 'window.scrollback:config-scrollback',0
.data:00000050                                         ; DATA XREF: _win_setup_config_box+F9o
.data:00000074 $SG86314        db 'Display scrollbar in full screen mode',0
.data:00000074                                         ; DATA XREF: _win_setup_config_box+109o
.data:0000009A                 align 4
.data:0000009C $SG86322        db 'Enable extra keyboard features:',0
.data:0000009C                                         ; DATA XREF: _win_setup_config_box:loc_F24o
.data:000000BC $SG86323        db 'features',0         ; DATA XREF: _win_setup_config_box+1CDo
.data:000000C5                 align 4
.data:000000C8 $SG86324        db 'Terminal/Keyboard',0
.data:000000C8                                         ; DATA XREF: _win_setup_config_box+1D2o
.data:000000DA                 align 4
.data:000000DC $SG86325        db 'keyboard.compose:config-compose',0
.data:000000DC                                         ; DATA XREF: _win_setup_config_box+1F6o
.data:000000FC $SG86326        db 'AltGr acts as Compose key',0
.data:000000FC                                         ; DATA XREF: _win_setup_config_box+206o
.data:00000116                 align 4
.data:00000118 $SG86327        db 'keyboard.ctrlalt:config-ctrlalt',0
.data:00000118                                         ; DATA XREF: _win_setup_config_box+227o
.data:00000138 $SG86328        db 'Control-Alt is different from AltGr',0
.data:00000138                                         ; DATA XREF: _win_setup_config_box+237o
.data:0000015C $SG86329        db 'Set the style of bell',0
.data:0000015C                                         ; DATA XREF: _win_setup_config_box+248o
.data:00000172                 align 4
.data:00000174 $SG86330        db 'style',0            ; DATA XREF: _win_setup_config_box+24Do
.data:0000017A                 align 4
.data:0000017C $SG86331        db 'Terminal/Bell',0    ; DATA XREF: _win_setup_config_box+252o
.data:0000018A                 align 4
.data:0000018C $SG86338:                               ; DATA XREF: _win_setup_config_box+2C0o
.data:0000018C                 unicode 0, <..\..\wincfg.c>,0
.data:000001AA                 align 4
.data:000001AC $SG86339:                               ; DATA XREF: _win_setup_config_box+2C5o
.data:000001AC                 unicode 0, <c->
.data:000001AC                 dw 3Eh
.data:000001AC                 unicode 0, <generic.handler == conf_radiobutton_handler>,0
.data:0000020A                 align 4
.data:0000020C $SG86343        db 'Play a custom sound file',0
.data:0000020C                                         ; DATA XREF: _win_setup_config_box+2FFo
.data:00000225                 align 4
.data:00000228 $SG86344        db 'Beep using the PC speaker',0
.data:00000228                                         ; DATA XREF: _win_setup_config_box+31Co
.data:00000242                 align 4
.data:00000244 $SG86352        db 'bell.style:config-bellstyle',0
.data:00000244                                         ; DATA XREF: _win_setup_config_box+3EBo
.data:00000260 $SG86353        db 'Select bell sound file',0
.data:00000260                                         ; DATA XREF: _win_setup_config_box+3F9o
.data:00000277                 align 4
.data:00000278 $SG86354        db 'Wave Files (*.wav)',0
.data:00000278                                         ; DATA XREF: _win_setup_config_box+400o
.data:0000028B a_wav           db '*.WAV',0
.data:00000291 aAllFiles_      db 'All Files (*.*)',0
.data:000002A1                 dd offset $SG86310+16h  ; " in the window"
.data:000002A5                 align 4
.data:000002A8 $SG86355        db 'Custom sound file to play as a bell:',0
.data:000002A8                                         ; DATA XREF: _win_setup_config_box+407o
.data:000002CD                 align 10h
.data:000002D0 $SG86357        db 'Steady',0           ; DATA XREF: _win_setup_config_box+425o
.data:000002D7                 align 4
.data:000002D8 $SG86358        db 'Flashing',0         ; DATA XREF: _win_setup_config_box+435o
.data:000002E1                 align 4
.data:000002E4 $SG86359        db 'Disabled',0         ; DATA XREF: _win_setup_config_box+445o
.data:000002ED                 align 10h
.data:000002F0 $SG86360        db 'bell.taskbar:config-belltaskbar',0
.data:000002F0                                         ; DATA XREF: _win_setup_config_box+45Ao
.data:00000310 $SG86361        db 'Taskbar/caption indication on bell:',0
.data:00000310                                         ; DATA XREF: _win_setup_config_box+46Co
.data:00000334 $SG86362        db 'Adjust the window border',0
.data:00000334                                         ; DATA XREF: _win_setup_config_box+47Do
.data:0000034D                 align 10h
.data:00000350 $SG86363        db 'border',0           ; DATA XREF: _win_setup_config_box+482o
.data:00000357                 align 4
.data:00000358 $SG86364        db 'Window/Appearance',0
.data:00000358                                         ; DATA XREF: _win_setup_config_box+487o
.data:0000036A                 align 4
.data:0000036C $SG86365        db 'appearance.border:config-winborder',0
.data:0000036C                                         ; DATA XREF: _win_setup_config_box+4ABo
.data:0000038F                 align 10h
.data:00000390 $SG86366        db 'Sunken-edge border (slightly thicker)',0
.data:00000390                                         ; DATA XREF: _win_setup_config_box+4BBo
.data:000003B6                 align 4
.data:000003B8 $SG86367        db 'Font settings',0    ; DATA XREF: _win_setup_config_box+4CCo
.data:000003C6                 align 4
.data:000003C8 $SG86368        db 'font',0             ; DATA XREF: _win_setup_config_box+4D1o
.data:000003CD                 align 10h
.data:000003D0 $SG86369        db 'Window/Appearance',0
.data:000003D0                                         ; DATA XREF: _win_setup_config_box+4D6o
.data:000003E2                 align 4
.data:000003E4 $SG86370        db 'appearance.font:config-font',0
.data:000003E4                                         ; DATA XREF: _win_setup_config_box+4FAo
.data:00000400 $SG86371        db 'Allow selection of variable-pitch fonts',0
.data:00000400                                         ; DATA XREF: _win_setup_config_box+50Ao
.data:00000428 $SG86373        db 'Default',0          ; DATA XREF: _win_setup_config_box+528o
.data:00000430 $SG86374        db 'ClearType',0        ; DATA XREF: _win_setup_config_box+538o
.data:0000043A                 align 4
.data:0000043C $SG86375        db 'Non-Antialiased',0  ; DATA XREF: _win_setup_config_box+548o
.data:0000044C $SG86376        db 'Antialiased',0      ; DATA XREF: _win_setup_config_box+558o
.data:00000458 $SG86377        db 'appearance.font:config-font',0
.data:00000458                                         ; DATA XREF: _win_setup_config_box+56Do
.data:00000474 $SG86378        db 'Font quality:',0    ; DATA XREF: _win_setup_config_box+57Fo
.data:00000482                 align 4
.data:00000484 $SG86380        db 'tweaks',0           ; DATA XREF: _win_setup_config_box+592o
.data:0000048B                 align 4
.data:0000048C $SG86381        db 'Window/Translation',0
.data:0000048C                                         ; DATA XREF: _win_setup_config_box+597o
.data:0000049F                 align 10h
.data:000004A0 $SG86382        db 'translation.cyrillic:config-cyr',0
.data:000004A0                                         ; DATA XREF: _win_setup_config_box+5BEo
.data:000004C0 $SG86383        db 'Caps Lock acts as Cyrillic switch',0
.data:000004C0                                         ; DATA XREF: _win_setup_config_box+5CEo
.data:000004E2                 align 4
.data:000004E4 $SG86384        db 'Character set translation on received data',0
.data:000004E4                                         ; DATA XREF: _win_setup_config_box+5DFo
.data:0000050F                 align 10h
.data:00000510 $SG86385        db 'trans',0            ; DATA XREF: _win_setup_config_box+5E4o
.data:00000516                 align 4
.data:00000518 $SG86386        db 'Window/Translation',0
.data:00000518                                         ; DATA XREF: _win_setup_config_box+5E9o
.data:0000052B                 align 4
.data:0000052C $SG86387        db 'translation.codepage:config-charset',0
.data:0000052C                                         ; DATA XREF: _win_setup_config_box+5FDo
.data:00000550 $SG86390        db 'linedraw',0         ; DATA XREF: _win_setup_config_box+636o
.data:00000559                 align 4
.data:0000055C $SG86388        db '(Codepages supported by Windows but not listed here, such as CP86'
.data:0000055C                                         ; DATA XREF: _win_setup_config_box+60Bo
.data:0000055C                 db '6 on many systems, can be entered manually)',0
.data:000005C9                 align 4
.data:000005CC $SG86389        db 'Adjust how %s displays line drawing characters',0
.data:000005CC                                         ; DATA XREF: _win_setup_config_box+622o
.data:000005FB                 align 4
.data:000005FC $SG86391        db 'Window/Translation',0
.data:000005FC                                         ; DATA XREF: _win_setup_config_box+63Bo
.data:0000060F                 align 10h
.data:00000610 $SG86398:                               ; DATA XREF: _win_setup_config_box+6B8o
.data:00000610                 unicode 0, <..\..\wincfg.c>,0
.data:0000062E                 align 10h
.data:00000630 $SG86403        db 'Font has XWindows encoding',0
.data:00000630                                         ; DATA XREF: _win_setup_config_box+6F7o
.data:0000064B                 align 4
.data:0000064C $SG86399:                               ; DATA XREF: _win_setup_config_box+6BDo
.data:0000064C                 unicode 0, <c->
.data:0000064C                 dw 3Eh
.data:0000064C                 unicode 0, <generic.handler == conf_radiobutton_handler>,0
.data:000006AA                 align 4
.data:000006AC $SG86404        db 'Use font in both ANSI and OEM modes',0
.data:000006AC                                         ; DATA XREF: _win_setup_config_box+714o
.data:000006D0 $SG86405        db 'Use font in OEM mode only',0
.data:000006D0                                         ; DATA XREF: _win_setup_config_box+731o
.data:000006EA                 align 4
.data:000006EC $SG86420        db 'Formatting of pasted characters',0
.data:000006EC                                         ; DATA XREF: _win_setup_config_box:loc_15BCo
.data:0000070C $SG86421        db 'format',0           ; DATA XREF: _win_setup_config_box+865o
.data:00000713                 align 4
.data:00000714 $SG86422        db 'Window/Selection',0 ; DATA XREF: _win_setup_config_box+86Ao
.data:00000725                 align 4
.data:00000728 $SG86423        db 'selection.rtf:config-rtfpaste',0
.data:00000728                                         ; DATA XREF: _win_setup_config_box+891o
.data:00000746                 align 4
.data:00000748 $SG86424        db 'Paste to clipboard in RTF as well as plain text',0
.data:00000748                                         ; DATA XREF: _win_setup_config_box+8A1o
.data:00000778 $SG86425        db 'Control use of mouse',0
.data:00000778                                         ; DATA XREF: _win_setup_config_box+8B2o
.data:0000078D                 align 10h
.data:00000790 $SG86426        db 'mouse',0            ; DATA XREF: _win_setup_config_box+8B7o
.data:00000796                 align 4
.data:00000798 $SG86427        db 'Window/Selection',0 ; DATA XREF: _win_setup_config_box+8BCo
.data:000007A9                 align 4
.data:000007AC $SG86429        db 'xterm (Right extends, Middle pastes)',0
.data:000007AC                                         ; DATA XREF: _win_setup_config_box+8DDo
.data:000007D1                 align 4
.data:000007D4 $SG86430        db 'Compromise (Middle extends, Right pastes)',0
.data:000007D4                                         ; DATA XREF: _win_setup_config_box+8EDo
.data:000007FE                 align 10h
.data:00000800 $SG86431        db 'Windows (Middle extends, Right brings up menu)',0
.data:00000800                                         ; DATA XREF: _win_setup_config_box+8FDo
.data:0000082F                 align 10h
.data:00000830 $SG86432        db 'selection.buttons:config-mouse',0
.data:00000830                                         ; DATA XREF: _win_setup_config_box+915o
.data:0000084F                 align 10h
.data:00000850 $SG86433        db 'Action of mouse buttons:',0
.data:00000850                                         ; DATA XREF: _win_setup_config_box+927o
.data:00000869                 align 4
.data:0000086C $SG86435        db 'General options for colour usage',0
.data:0000086C                                         ; DATA XREF: _win_setup_config_box+97Do
.data:0000088D                 align 10h
.data:00000890 $SG86436        db 'general',0          ; DATA XREF: _win_setup_config_box+982o
.data:00000898 $SG86437        db 'Window/Colours',0   ; DATA XREF: _win_setup_config_box+987o
.data:000008A7                 align 4
.data:000008A8 $SG86438        db 'colours.logpal:config-logpalette',0
.data:000008A8                                         ; DATA XREF: _win_setup_config_box+9AEo
.data:000008C9                 align 4
.data:000008CC $SG86439        db 'Attempt to use logical palettes',0
.data:000008CC                                         ; DATA XREF: _win_setup_config_box+9BEo
.data:000008EC $SG86440        db 'colours.system:config-syscolour',0
.data:000008EC                                         ; DATA XREF: _win_setup_config_box+9E2o
.data:0000090C $SG86441        db 'Use system colours',0
.data:0000090C                                         ; DATA XREF: _win_setup_config_box+9F2o
.data:0000091F                 align 10h
.data:00000920 $SG86442        db 'Set the size of the window',0
.data:00000920                                         ; DATA XREF: _win_setup_config_box+A03o
.data:0000093B                 align 4
.data:0000093C $SG86443        db 'size',0             ; DATA XREF: _win_setup_config_box+A08o
.data:00000941                 align 4
.data:00000944 $SG86444        db 'Window',0           ; DATA XREF: _win_setup_config_box+A0Do
.data:0000094B                 align 4
.data:0000094C $SG86446        db 'Forbid resizing completely',0
.data:0000094C                                         ; DATA XREF: _win_setup_config_box+A2Eo
.data:00000967                 align 4
.data:00000968 $SG86447        db 'Change font size only when maximised',0
.data:00000968                                         ; DATA XREF: _win_setup_config_box+A3Eo
.data:0000098D                 align 10h
.data:00000990 $SG86448        db 'Change the size of the font',0
.data:00000990                                         ; DATA XREF: _win_setup_config_box+A4Eo
.data:000009AC $SG86449        db 'Change the number of rows and columns',0
.data:000009AC                                         ; DATA XREF: _win_setup_config_box+A5Eo
.data:000009D2                 align 4
.data:000009D4 $SG86450        db 'window.resize:config-winsizelock',0
.data:000009D4                                         ; DATA XREF: _win_setup_config_box+A73o
.data:000009F5                 align 4
.data:000009F8 $SG86451        db 'When window is resized:',0
.data:000009F8                                         ; DATA XREF: _win_setup_config_box+A85o
.data:00000A10 $SG86453        db 'main',0             ; DATA XREF: _win_setup_config_box+A98o
.data:00000A15                 align 4
.data:00000A18 $SG86454        db 'Window/Behaviour',0 ; DATA XREF: _win_setup_config_box+A9Do
.data:00000A29                 align 4
.data:00000A2C $SG86455        db 'behaviour.altf4:config-altf4',0
.data:00000A2C                                         ; DATA XREF: _win_setup_config_box+AC1o
.data:00000A49                 align 4
.data:00000A4C $SG86456        db 'Window closes on ALT-F4',0
.data:00000A4C                                         ; DATA XREF: _win_setup_config_box+AD1o
.data:00000A64 $SG86457        db 'behaviour.altspace:config-altspace',0
.data:00000A64                                         ; DATA XREF: _win_setup_config_box+AF2o
.data:00000A87                 align 4
.data:00000A88 $SG86458        db 'System menu appears on ALT-Space',0
.data:00000A88                                         ; DATA XREF: _win_setup_config_box+B02o
.data:00000AA9                 align 4
.data:00000AAC $SG86459        db 'behaviour.altonly:config-altonly',0
.data:00000AAC                                         ; DATA XREF: _win_setup_config_box+B23o
.data:00000ACD                 align 10h
.data:00000AD0 $SG86460        db 'System menu appears on ALT alone',0
.data:00000AD0                                         ; DATA XREF: _win_setup_config_box+B33o
.data:00000AF1                 align 4
.data:00000AF4 $SG86461        db 'behaviour.alwaysontop:config-alwaysontop',0
.data:00000AF4                                         ; DATA XREF: _win_setup_config_box+B54o
.data:00000B1D                 align 10h
.data:00000B20 $SG86462        db 'Ensure window is always on top',0
.data:00000B20                                         ; DATA XREF: _win_setup_config_box+B64o
.data:00000B3F                 align 10h
.data:00000B40 $SG86463        db 'behaviour.altenter:config-fullscreen',0
.data:00000B40                                         ; DATA XREF: _win_setup_config_box+B85o
.data:00000B65                 align 4
.data:00000B68 $SG86464        db 'Full screen on Alt-Enter',0
.data:00000B68                                         ; DATA XREF: _win_setup_config_box+B95o
.data:00000B81                 align 4
.data:00000B84 $SG86468        db 'basics',0           ; DATA XREF: _win_setup_config_box+BB2o
.data:00000B8B                 align 4
.data:00000B8C $SG86469        db 'Connection/Proxy',0 ; DATA XREF: _win_setup_config_box+BB7o
.data:00000B9D                 align 10h
.data:00000BA0 $SG86475:                               ; DATA XREF: _win_setup_config_box+C25o
.data:00000BA0                 unicode 0, <..\..\wincfg.c>,0
.data:00000BBE                 align 10h
.data:00000BC0 $SG86491        db 'Telnet command, or local proxy command',0
.data:00000BC0                                         ; DATA XREF: _win_setup_config_box+D2Fo
.data:00000BE7                 align 4
.data:00000BE8 $SG86496        db 'x11',0              ; DATA XREF: _win_setup_config_box+D7Fo
.data:00000BEC $SG86476:                               ; DATA XREF: _win_setup_config_box+C2Ao
.data:00000BEC                 unicode 0, <c->
.data:00000BEC                 dw 3Eh
.data:00000BEC                 unicode 0, <generic.handler == conf_radiobutton_handler>,0
.data:00000C4A                 align 4
.data:00000C4C $SG86480        db 'Local',0            ; DATA XREF: _win_setup_config_box+C64o
.data:00000C52                 align 4
.data:00000C54 $SG86489:                               ; DATA XREF: _win_setup_config_box+D0Eo
.data:00000C54                 unicode 0, <..\..\wincfg.c>,0
.data:00000C72                 align 4
.data:00000C74 $SG86490:                               ; DATA XREF: _win_setup_config_box+D13o
.data:00000C74                 unicode 0, <c->
.data:00000C74                 dw 3Eh
.data:00000C74                 unicode 0, <generic.handler == conf_editbox_handler>,0
.data:00000CCA                 align 4
.data:00000CCC $SG86495        db 'X11 forwarding',0   ; DATA XREF: _win_setup_config_box+D7Ao
.data:00000CDB                 align 4
.data:00000CDC $SG86497        db 'Connection/SSH/X11',0
.data:00000CDC                                         ; DATA XREF: _win_setup_config_box+D84o
.data:00000CEF                 align 10h
.data:00000CF0 $SG86499        db 'ssh.tunnels.xauthority:config-ssh-xauthority',0
.data:00000CF0                                         ; DATA XREF: _win_setup_config_box+DABo
.data:00000D1D                 align 10h
.data:00000D20 $SG86500        db 'Select X authority file',0
.data:00000D20                                         ; DATA XREF: _win_setup_config_box+DB9o
.data:00000D38 $SG86501        db 'X authority file for local display',0
.data:00000D38                                         ; DATA XREF: _win_setup_config_box+DC4o
.data:00000D5B                 align 4
.data:00000D5B _data           ends
.data:00000D5B
.text:00000D5C ; ===========================================================================
.text:00000D5C
.text:00000D5C ; Segment type: Pure code
.text:00000D5C ; Segment permissions: Read/Execute
.text:00000D5C _text           segment para public 'CODE' use32
.text:00000D5C                 assume cs:_text
.text:00000D5C                 ;org 0D5Ch
.text:00000D5C                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text:00000D5C
.text:00000D5C ; =============== S U B R O U T I N E =======================================
.text:00000D5C
.text:00000D5C ; Attributes: bp-based frame
.text:00000D5C
.text:00000D5C                 public _win_setup_config_box
.text:00000D5C _win_setup_config_box proc near
.text:00000D5C
.text:00000D5C var_20          = dword ptr -20h
.text:00000D5C var_1C          = dword ptr -1Ch
.text:00000D5C var_18          = dword ptr -18h
.text:00000D5C var_14          = dword ptr -14h
.text:00000D5C var_10          = dword ptr -10h
.text:00000D5C var_C           = dword ptr -0Ch
.text:00000D5C var_8           = dword ptr -8
.text:00000D5C var_4           = dword ptr -4
.text:00000D5C arg_0           = dword ptr  8
.text:00000D5C arg_4           = dword ptr  0Ch
.text:00000D5C arg_8           = dword ptr  10h
.text:00000D5C arg_C           = dword ptr  14h
.text:00000D5C arg_10          = dword ptr  18h
.text:00000D5C
.text:00000D5C                 push    ebp
.text:00000D5D                 mov     ebp, esp
.text:00000D5F                 sub     esp, 20h
.text:00000D62                 mov     eax, 0CCCCCCCCh
.text:00000D67                 mov     [ebp+var_20], eax
.text:00000D6A                 mov     [ebp+var_1C], eax
.text:00000D6D                 mov     [ebp+var_18], eax
.text:00000D70                 mov     [ebp+var_14], eax
.text:00000D73                 mov     [ebp+var_10], eax
.text:00000D76                 mov     [ebp+var_C], eax
.text:00000D79                 mov     [ebp+var_8], eax
.text:00000D7C                 mov     [ebp+var_4], eax
.text:00000D7F                 cmp     [ebp+arg_C], 0
.text:00000D83                 jnz     loc_E27
.text:00000D89                 push    offset $SG86302
.text:00000D8E                 push    offset $SG86303
.text:00000D93                 push    offset $SG86304
.text:00000D98                 mov     eax, [ebp+arg_0]
.text:00000D9B                 push    eax
.text:00000D9C                 call    _ctrl_getset
.text:00000DA1                 add     esp, 10h
.text:00000DA4                 mov     [ebp+var_4], eax
.text:00000DA7                 mov     ecx, [ebp+arg_4]
.text:00000DAA                 push    ecx
.text:00000DAB                 call    _P
.text:00000DB0                 add     esp, 4
.text:00000DB3                 push    eax
.text:00000DB4                 push    offset _about_handler
.text:00000DB9                 push    0
.text:00000DBB                 call    _P
.text:00000DC0                 add     esp, 4
.text:00000DC3                 push    eax
.text:00000DC4                 push    61h ; 'a'
.text:00000DC6                 push    offset $SG86306 ; "About"
.text:00000DCB                 mov     edx, [ebp+var_4]
.text:00000DCE                 push    edx
.text:00000DCF                 call    _ctrl_pushbutton
.text:00000DD4                 add     esp, 18h
.text:00000DD7                 mov     [ebp+var_8], eax
.text:00000DDA                 mov     eax, [ebp+var_8]
.text:00000DDD                 mov     dword ptr [eax+0Ch], 0
.text:00000DE4                 cmp     [ebp+arg_8], 0
.text:00000DE8                 jz      short loc_E27
.text:00000DEA                 mov     ecx, [ebp+arg_4]
.text:00000DED                 push    ecx
.text:00000DEE                 call    _P
.text:00000DF3                 add     esp, 4
.text:00000DF6                 push    eax
.text:00000DF7                 push    offset _help_handler
.text:00000DFC                 push    0
.text:00000DFE                 call    _P
.text:00000E03                 add     esp, 4
.text:00000E06                 push    eax
.text:00000E07                 push    68h ; 'h'
.text:00000E09                 push    offset $SG86309 ; "Help"
.text:00000E0E                 mov     edx, [ebp+var_4]
.text:00000E11                 push    edx
.text:00000E12                 call    _ctrl_pushbutton
.text:00000E17                 add     esp, 18h
.text:00000E1A                 mov     [ebp+var_8], eax
.text:00000E1D                 mov     eax, [ebp+var_8]
.text:00000E20                 mov     dword ptr [eax+0Ch], 1
.text:00000E27
.text:00000E27 loc_E27:                                ; CODE XREF: _win_setup_config_box+27j
.text:00000E27                                         ; _win_setup_config_box+8Cj
.text:00000E27                 push    offset $SG86310 ; "Control the scrollback in the window"
.text:00000E2C                 push    offset $SG86311 ; "scrollback"
.text:00000E31                 push    offset $SG86312 ; "Window"
.text:00000E36                 mov     ecx, [ebp+arg_0]
.text:00000E39                 push    ecx
.text:00000E3A                 call    _ctrl_getset
.text:00000E3F                 add     esp, 10h
.text:00000E42                 mov     [ebp+var_4], eax
.text:00000E45                 push    69h ; 'i'
.text:00000E47                 call    _I
.text:00000E4C                 add     esp, 4
.text:00000E4F                 push    eax
.text:00000E50                 push    offset _conf_checkbox_handler
.text:00000E55                 push    offset $SG86313 ; "window.scrollback:config-scrollback"
.text:00000E5A                 call    _P
.text:00000E5F                 add     esp, 4
.text:00000E62                 push    eax
.text:00000E63                 push    69h ; 'i'
.text:00000E65                 push    offset $SG86314 ; "Display scrollbar in full screen mode"
.text:00000E6A                 mov     edx, [ebp+var_4]
.text:00000E6D                 push    edx
.text:00000E6E                 call    _ctrl_checkbox
.text:00000E73                 add     esp, 18h
.text:00000E76                 mov     [ebp+var_10], 0
.text:00000E7D                 jmp     short loc_E88
.text:00000E7F ; ---------------------------------------------------------------------------
.text:00000E7F
.text:00000E7F loc_E7F:                                ; CODE XREF: _win_setup_config_box:loc_F1Fj
.text:00000E7F                 mov     eax, [ebp+var_10]
.text:00000E82                 add     eax, 1
.text:00000E85                 mov     [ebp+var_10], eax
.text:00000E88
.text:00000E88 loc_E88:                                ; CODE XREF: _win_setup_config_box+121j
.text:00000E88                 mov     ecx, [ebp+var_4]
.text:00000E8B                 mov     edx, [ebp+var_10]
.text:00000E8E                 cmp     edx, [ecx+10h]
.text:00000E91                 jge     loc_F24
.text:00000E97                 mov     eax, [ebp+var_4]
.text:00000E9A                 mov     ecx, [eax+18h]
.text:00000E9D                 mov     edx, [ebp+var_10]
.text:00000EA0                 mov     eax, [ecx+edx*4]
.text:00000EA3                 mov     [ebp+var_8], eax
.text:00000EA6                 mov     ecx, [ebp+var_8]
.text:00000EA9                 cmp     dword ptr [ecx], 3
.text:00000EAC                 jnz     short loc_F1F
.text:00000EAE                 mov     edx, [ebp+var_8]
.text:00000EB1                 cmp     dword ptr [edx+14h], 68h ; 'h'
.text:00000EB5                 jnz     short loc_F1F
.text:00000EB7                 mov     eax, [ebp+var_4]
.text:00000EBA                 mov     ecx, [eax+10h]
.text:00000EBD                 sub     ecx, 2
.text:00000EC0                 cmp     [ebp+var_10], ecx
.text:00000EC3                 jge     short loc_F1D
.text:00000EC5                 mov     edx, [ebp+var_4]
.text:00000EC8                 mov     eax, [edx+10h]
.text:00000ECB                 mov     ecx, [ebp+var_4]
.text:00000ECE                 mov     edx, [ecx+18h]
.text:00000ED1                 mov     eax, [edx+eax*4-4]
.text:00000ED5                 mov     [ebp+var_8], eax
.text:00000ED8                 mov     ecx, [ebp+var_4]
.text:00000EDB                 mov     edx, [ecx+10h]
.text:00000EDE                 sub     edx, [ebp+var_10]
.text:00000EE1                 lea     eax, ds:0FFFFFFF8h[edx*4]
.text:00000EE8                 push    eax             ; size_t
.text:00000EE9                 mov     ecx, [ebp+var_4]
.text:00000EEC                 mov     edx, [ecx+18h]
.text:00000EEF                 mov     eax, [ebp+var_10]
.text:00000EF2                 lea     ecx, [edx+eax*4+4]
.text:00000EF6                 push    ecx             ; void *
.text:00000EF7                 mov     edx, [ebp+var_4]
.text:00000EFA                 mov     eax, [edx+18h]
.text:00000EFD                 mov     ecx, [ebp+var_10]
.text:00000F00                 lea     edx, [eax+ecx*4+8]
.text:00000F04                 push    edx             ; void *
.text:00000F05                 call    _memmove
.text:00000F0A                 add     esp, 0Ch
.text:00000F0D                 mov     eax, [ebp+var_4]
.text:00000F10                 mov     ecx, [eax+18h]
.text:00000F13                 mov     edx, [ebp+var_10]
.text:00000F16                 mov     eax, [ebp+var_8]
.text:00000F19                 mov     [ecx+edx*4+4], eax
.text:00000F1D
.text:00000F1D loc_F1D:                                ; CODE XREF: _win_setup_config_box+167j
.text:00000F1D                 jmp     short loc_F24
.text:00000F1F ; ---------------------------------------------------------------------------
.text:00000F1F
.text:00000F1F loc_F1F:                                ; CODE XREF: _win_setup_config_box+150j
.text:00000F1F                                         ; _win_setup_config_box+159j
.text:00000F1F                 jmp     loc_E7F
.text:00000F24 ; ---------------------------------------------------------------------------
.text:00000F24
.text:00000F24 loc_F24:                                ; CODE XREF: _win_setup_config_box+135j
.text:00000F24                                         ; _win_setup_config_box:loc_F1Dj
.text:00000F24                 push    offset $SG86322 ; "Enable extra keyboard features:"
.text:00000F29                 push    offset $SG86323 ; "features"
.text:00000F2E                 push    offset $SG86324 ; "Terminal/Keyboard"
.text:00000F33                 mov     ecx, [ebp+arg_0]
.text:00000F36                 push    ecx
.text:00000F37                 call    _ctrl_getset
.text:00000F3C                 add     esp, 10h
.text:00000F3F                 mov     [ebp+var_4], eax
.text:00000F42                 push    58h ; 'X'
.text:00000F44                 call    _I
.text:00000F49                 add     esp, 4
.text:00000F4C                 push    eax
.text:00000F4D                 push    offset _conf_checkbox_handler
.text:00000F52                 push    offset $SG86325 ; "keyboard.compose:config-compose"
.text:00000F57                 call    _P
.text:00000F5C                 add     esp, 4
.text:00000F5F                 push    eax
.text:00000F60                 push    74h ; 't'
.text:00000F62                 push    offset $SG86326 ; "AltGr acts as Compose key"
.text:00000F67                 mov     edx, [ebp+var_4]
.text:00000F6A                 push    edx
.text:00000F6B                 call    _ctrl_checkbox
.text:00000F70                 add     esp, 18h
.text:00000F73                 push    59h ; 'Y'
.text:00000F75                 call    _I
.text:00000F7A                 add     esp, 4
.text:00000F7D                 push    eax
.text:00000F7E                 push    offset _conf_checkbox_handler
.text:00000F83                 push    offset $SG86327 ; "keyboard.ctrlalt:config-ctrlalt"
.text:00000F88                 call    _P
.text:00000F8D                 add     esp, 4
.text:00000F90                 push    eax
.text:00000F91                 push    64h ; 'd'
.text:00000F93                 push    offset $SG86328 ; "Control-Alt is different from AltGr"
.text:00000F98                 mov     eax, [ebp+var_4]
.text:00000F9B                 push    eax
.text:00000F9C                 call    _ctrl_checkbox
.text:00000FA1                 add     esp, 18h
.text:00000FA4                 push    offset $SG86329 ; "Set the style of bell"
.text:00000FA9                 push    offset $SG86330 ; "style"
.text:00000FAE                 push    offset $SG86331 ; "Terminal/Bell"
.text:00000FB3                 mov     ecx, [ebp+arg_0]
.text:00000FB6                 push    ecx
.text:00000FB7                 call    _ctrl_getset
.text:00000FBC                 add     esp, 10h
.text:00000FBF                 mov     [ebp+var_4], eax
.text:00000FC2                 mov     [ebp+var_14], 0
.text:00000FC9                 jmp     short loc_FD4
.text:00000FCB ; ---------------------------------------------------------------------------
.text:00000FCB
.text:00000FCB loc_FCB:                                ; CODE XREF: _win_setup_config_box:loc_1132j
.text:00000FCB                 mov     edx, [ebp+var_14]
.text:00000FCE                 add     edx, 1
.text:00000FD1                 mov     [ebp+var_14], edx
.text:00000FD4
.text:00000FD4 loc_FD4:                                ; CODE XREF: _win_setup_config_box+26Dj
.text:00000FD4                 mov     eax, [ebp+var_4]
.text:00000FD7                 mov     ecx, [ebp+var_14]
.text:00000FDA                 cmp     ecx, [eax+10h]
.text:00000FDD                 jge     loc_1137
.text:00000FE3                 mov     edx, [ebp+var_4]
.text:00000FE6                 mov     eax, [edx+18h]
.text:00000FE9                 mov     ecx, [ebp+var_14]
.text:00000FEC                 mov     edx, [eax+ecx*4]
.text:00000FEF                 mov     [ebp+var_8], edx
.text:00000FF2                 mov     eax, [ebp+var_8]
.text:00000FF5                 cmp     dword ptr [eax], 2
.text:00000FF8                 jnz     loc_1132
.text:00000FFE                 mov     ecx, [ebp+var_8]
.text:00001001                 cmp     dword ptr [ecx+14h], 61h ; 'a'
.text:00001005                 jnz     loc_1132
.text:0000100B                 mov     edx, [ebp+var_8]
.text:0000100E                 cmp     dword ptr [edx+10h], offset _conf_radiobutton_handler
.text:00001015                 jz      short loc_102E
.text:00001017                 push    89h ; 'ë'
.text:0000101C                 push    offset $SG86338 ; "..\\..\\wincfg.c"
.text:00001021                 push    offset $SG86339 ; "c->generic.handler == conf_radiobutton_"...
.text:00001026                 call    __wassert
.text:0000102B ; ---------------------------------------------------------------------------
.text:0000102B                 add     esp, 0Ch
.text:0000102E
.text:0000102E loc_102E:                               ; CODE XREF: _win_setup_config_box+2B9j
.text:0000102E                 mov     ecx, [ebp+var_8]
.text:00001031                 mov     edx, [ecx+24h]
.text:00001034                 add     edx, 2
.text:00001037                 mov     eax, [ebp+var_8]
.text:0000103A                 mov     [eax+24h], edx
.text:0000103D                 push    4
.text:0000103F                 mov     ecx, [ebp+var_8]
.text:00001042                 mov     edx, [ecx+24h]
.text:00001045                 push    edx
.text:00001046                 mov     eax, [ebp+var_8]
.text:00001049                 mov     ecx, [eax+28h]
.text:0000104C                 push    ecx
.text:0000104D                 call    _saferealloc
.text:00001052                 add     esp, 0Ch
.text:00001055                 mov     edx, [ebp+var_8]
.text:00001058                 mov     [edx+28h], eax
.text:0000105B                 push    offset $SG86343 ; "Play a custom sound file"
.text:00001060                 call    _dupstr
.text:00001065                 add     esp, 4
.text:00001068                 mov     ecx, [ebp+var_8]
.text:0000106B                 mov     edx, [ecx+24h]
.text:0000106E                 mov     ecx, [ebp+var_8]
.text:00001071                 mov     ecx, [ecx+28h]
.text:00001074                 mov     [ecx+edx*4-4], eax
.text:00001078                 push    offset $SG86344 ; "Beep using the PC speaker"
.text:0000107D                 call    _dupstr
.text:00001082                 add     esp, 4
.text:00001085                 mov     edx, [ebp+var_8]
.text:00001088                 mov     ecx, [edx+24h]
.text:0000108B                 mov     edx, [ebp+var_8]
.text:0000108E                 mov     edx, [edx+28h]
.text:00001091                 mov     [edx+ecx*4-8], eax
.text:00001095                 push    4
.text:00001097                 mov     eax, [ebp+var_8]
.text:0000109A                 mov     ecx, [eax+24h]
.text:0000109D                 push    ecx
.text:0000109E                 mov     edx, [ebp+var_8]
.text:000010A1                 mov     eax, [edx+30h]
.text:000010A4                 push    eax
.text:000010A5                 call    _saferealloc
.text:000010AA                 add     esp, 0Ch
.text:000010AD                 mov     ecx, [ebp+var_8]
.text:000010B0                 mov     [ecx+30h], eax
.text:000010B3                 push    3
.text:000010B5                 call    _I
.text:000010BA                 add     esp, 4
.text:000010BD                 mov     edx, [ebp+var_8]
.text:000010C0                 mov     ecx, [edx+24h]
.text:000010C3                 mov     edx, [ebp+var_8]
.text:000010C6                 mov     edx, [edx+30h]
.text:000010C9                 mov     [edx+ecx*4-4], eax
.text:000010CD                 push    4
.text:000010CF                 call    _I
.text:000010D4                 add     esp, 4
.text:000010D7                 mov     ecx, [ebp+var_8]
.text:000010DA                 mov     edx, [ecx+24h]
.text:000010DD                 mov     ecx, [ebp+var_8]
.text:000010E0                 mov     ecx, [ecx+30h]
.text:000010E3                 mov     [ecx+edx*4-8], eax
.text:000010E7                 mov     edx, [ebp+var_8]
.text:000010EA                 cmp     dword ptr [edx+2Ch], 0
.text:000010EE                 jz      short loc_1130
.text:000010F0                 push    1
.text:000010F2                 mov     eax, [ebp+var_8]
.text:000010F5                 mov     ecx, [eax+24h]
.text:000010F8                 push    ecx
.text:000010F9                 mov     edx, [ebp+var_8]
.text:000010FC                 mov     eax, [edx+2Ch]
.text:000010FF                 push    eax
.text:00001100                 call    _saferealloc
.text:00001105                 add     esp, 0Ch
.text:00001108                 mov     ecx, [ebp+var_8]
.text:0000110B                 mov     [ecx+2Ch], eax
.text:0000110E                 mov     edx, [ebp+var_8]
.text:00001111                 mov     eax, [edx+24h]
.text:00001114                 mov     ecx, [ebp+var_8]
.text:00001117                 mov     edx, [ecx+2Ch]
.text:0000111A                 mov     byte ptr [eax+edx-1], 0
.text:0000111F                 mov     eax, [ebp+var_8]
.text:00001122                 mov     ecx, [eax+24h]
.text:00001125                 mov     edx, [ebp+var_8]
.text:00001128                 mov     eax, [edx+2Ch]
.text:0000112B                 mov     byte ptr [ecx+eax-2], 0
.text:00001130
.text:00001130 loc_1130:                               ; CODE XREF: _win_setup_config_box+392j
.text:00001130                 jmp     short loc_1137
.text:00001132 ; ---------------------------------------------------------------------------
.text:00001132
.text:00001132 loc_1132:                               ; CODE XREF: _win_setup_config_box+29Cj
.text:00001132                                         ; _win_setup_config_box+2A9j
.text:00001132                 jmp     loc_FCB
.text:00001137 ; ---------------------------------------------------------------------------
.text:00001137
.text:00001137 loc_1137:                               ; CODE XREF: _win_setup_config_box+281j
.text:00001137                                         ; _win_setup_config_box:loc_1130j
.text:00001137                 push    67h ; 'g'
.text:00001139                 call    _I
.text:0000113E                 add     esp, 4
.text:00001141                 push    eax
.text:00001142                 push    offset _conf_filesel_handler
.text:00001147                 push    offset $SG86352 ; "bell.style:config-bellstyle"
.text:0000114C                 call    _P
.text:00001151                 add     esp, 4
.text:00001154                 push    eax
.text:00001155                 push    offset $SG86353 ; "Select bell sound file"
.text:0000115A                 push    0
.text:0000115C                 push    offset $SG86354 ; "Wave Files (*.wav)"
.text:00001161                 push    0
.text:00001163                 push    offset $SG86355 ; "Custom sound file to play as a bell:"
.text:00001168                 mov     ecx, [ebp+var_4]
.text:0000116B                 push    ecx
.text:0000116C                 call    _ctrl_filesel
.text:00001171                 add     esp, 24h
.text:00001174                 push    0
.text:00001176                 push    2
.text:00001178                 call    _I
.text:0000117D                 add     esp, 4
.text:00001180                 push    eax
.text:00001181                 push    offset $SG86357 ; "Steady"
.text:00001186                 push    1
.text:00001188                 call    _I
.text:0000118D                 add     esp, 4
.text:00001190                 push    eax
.text:00001191                 push    offset $SG86358 ; "Flashing"
.text:00001196                 push    0
.text:00001198                 call    _I
.text:0000119D                 add     esp, 4
.text:000011A0                 push    eax
.text:000011A1                 push    offset $SG86359 ; "Disabled"
.text:000011A6                 push    62h ; 'b'
.text:000011A8                 call    _I
.text:000011AD                 add     esp, 4
.text:000011B0                 push    eax
.text:000011B1                 push    offset _conf_radiobutton_handler
.text:000011B6                 push    offset $SG86360 ; "bell.taskbar:config-belltaskbar"
.text:000011BB                 call    _P
.text:000011C0                 add     esp, 4
.text:000011C3                 push    eax
.text:000011C4                 push    3
.text:000011C6                 push    69h ; 'i'
.text:000011C8                 push    offset $SG86361 ; "Taskbar/caption indication on bell:"
.text:000011CD                 mov     edx, [ebp+var_4]
.text:000011D0                 push    edx
.text:000011D1                 call    _ctrl_radiobuttons
.text:000011D6                 add     esp, 38h
.text:000011D9                 push    offset $SG86362 ; "Adjust the window border"
.text:000011DE                 push    offset $SG86363 ; "border"
.text:000011E3                 push    offset $SG86364 ; "Window/Appearance"
.text:000011E8                 mov     eax, [ebp+arg_0]
.text:000011EB                 push    eax
.text:000011EC                 call    _ctrl_getset
.text:000011F1                 add     esp, 10h
.text:000011F4                 mov     [ebp+var_4], eax
.text:000011F7                 push    79h ; 'y'
.text:000011F9                 call    _I
.text:000011FE                 add     esp, 4
.text:00001201                 push    eax
.text:00001202                 push    offset _conf_checkbox_handler
.text:00001207                 push    offset $SG86365 ; "appearance.border:config-winborder"
.text:0000120C                 call    _P
.text:00001211                 add     esp, 4
.text:00001214                 push    eax
.text:00001215                 push    73h ; 's'
.text:00001217                 push    offset $SG86366 ; "Sunken-edge border (slightly thicker)"
.text:0000121C                 mov     ecx, [ebp+var_4]
.text:0000121F                 push    ecx
.text:00001220                 call    _ctrl_checkbox
.text:00001225                 add     esp, 18h
.text:00001228                 push    offset $SG86367 ; "Font settings"
.text:0000122D                 push    offset $SG86368 ; "font"
.text:00001232                 push    offset $SG86369 ; "Window/Appearance"
.text:00001237                 mov     edx, [ebp+arg_0]
.text:0000123A                 push    edx
.text:0000123B                 call    _ctrl_getset
.text:00001240                 add     esp, 10h
.text:00001243                 mov     [ebp+var_4], eax
.text:00001246                 push    0
.text:00001248                 call    _I
.text:0000124D                 add     esp, 4
.text:00001250                 push    eax
.text:00001251                 push    offset _variable_pitch_handler
.text:00001256                 push    offset $SG86370 ; "appearance.font:config-font"
.text:0000125B                 call    _P
.text:00001260                 add     esp, 4
.text:00001263                 push    eax
.text:00001264                 push    0
.text:00001266                 push    offset $SG86371 ; "Allow selection of variable-pitch fonts"
.text:0000126B                 mov     eax, [ebp+var_4]
.text:0000126E                 push    eax
.text:0000126F                 call    _ctrl_checkbox
.text:00001274                 add     esp, 18h
.text:00001277                 push    0
.text:00001279                 push    0
.text:0000127B                 call    _I
.text:00001280                 add     esp, 4
.text:00001283                 push    eax
.text:00001284                 push    offset $SG86373 ; "Default"
.text:00001289                 push    3
.text:0000128B                 call    _I
.text:00001290                 add     esp, 4
.text:00001293                 push    eax
.text:00001294                 push    offset $SG86374 ; "ClearType"
.text:00001299                 push    2
.text:0000129B                 call    _I
.text:000012A0                 add     esp, 4
.text:000012A3                 push    eax
.text:000012A4                 push    offset $SG86375 ; "Non-Antialiased"
.text:000012A9                 push    1
.text:000012AB                 call    _I
.text:000012B0                 add     esp, 4
.text:000012B3                 push    eax
.text:000012B4                 push    offset $SG86376 ; "Antialiased"
.text:000012B9                 push    71h ; 'q'
.text:000012BB                 call    _I
.text:000012C0                 add     esp, 4
.text:000012C3                 push    eax
.text:000012C4                 push    offset _conf_radiobutton_handler
.text:000012C9                 push    offset $SG86377 ; "appearance.font:config-font"
.text:000012CE                 call    _P
.text:000012D3                 add     esp, 4
.text:000012D6                 push    eax
.text:000012D7                 push    2
.text:000012D9                 push    71h ; 'q'
.text:000012DB                 push    offset $SG86378 ; "Font quality:"
.text:000012E0                 mov     ecx, [ebp+var_4]
.text:000012E3                 push    ecx
.text:000012E4                 call    _ctrl_radiobuttons
.text:000012E9                 add     esp, 40h
.text:000012EC                 push    0
.text:000012EE                 push    offset $SG86380 ; "tweaks"
.text:000012F3                 push    offset $SG86381 ; "Window/Translation"
.text:000012F8                 mov     edx, [ebp+arg_0]
.text:000012FB                 push    edx
.text:000012FC                 call    _ctrl_getset
.text:00001301                 add     esp, 10h
.text:00001304                 mov     [ebp+var_4], eax
.text:00001307                 push    8Fh ; 'Å'
.text:0000130C                 call    _I
.text:00001311                 add     esp, 4
.text:00001314                 push    eax
.text:00001315                 push    offset _conf_checkbox_handler
.text:0000131A                 push    offset $SG86382 ; "translation.cyrillic:config-cyr"
.text:0000131F                 call    _P
.text:00001324                 add     esp, 4
.text:00001327                 push    eax
.text:00001328                 push    73h ; 's'
.text:0000132A                 push    offset $SG86383 ; "Caps Lock acts as Cyrillic switch"
.text:0000132F                 mov     eax, [ebp+var_4]
.text:00001332                 push    eax
.text:00001333                 call    _ctrl_checkbox
.text:00001338                 add     esp, 18h
.text:0000133B                 push    offset $SG86384 ; "Character set translation on received d"...
.text:00001340                 push    offset $SG86385 ; "trans"
.text:00001345                 push    offset $SG86386 ; "Window/Translation"
.text:0000134A                 mov     ecx, [ebp+arg_0]
.text:0000134D                 push    ecx
.text:0000134E                 call    _ctrl_getset
.text:00001353                 add     esp, 10h
.text:00001356                 mov     [ebp+var_4], eax
.text:00001359                 push    offset $SG86387 ; "translation.codepage:config-charset"
.text:0000135E                 call    _P
.text:00001363                 add     esp, 4
.text:00001366                 push    eax
.text:00001367                 push    offset $SG86388 ; "(Codepages supported by Windows but not"...
.text:0000136C                 mov     edx, [ebp+var_4]
.text:0000136F                 push    edx
.text:00001370                 call    _ctrl_text
.text:00001375                 add     esp, 0Ch
.text:00001378                 mov     eax, dword ptr ds:_appname
.text:0000137D                 push    eax
.text:0000137E                 push    offset $SG86389 ; "Adjust how %s displays line drawing cha"...
.text:00001383                 call    _dupprintf
.text:00001388                 add     esp, 8
.text:0000138B                 mov     [ebp+var_C], eax
.text:0000138E                 mov     ecx, [ebp+var_C]
.text:00001391                 push    ecx
.text:00001392                 push    offset $SG86390 ; "linedraw"
.text:00001397                 push    offset $SG86391 ; "Window/Translation"
.text:0000139C                 mov     edx, [ebp+arg_0]
.text:0000139F                 push    edx
.text:000013A0                 call    _ctrl_getset
.text:000013A5                 add     esp, 10h
.text:000013A8                 mov     [ebp+var_4], eax
.text:000013AB                 mov     eax, [ebp+var_C]
.text:000013AE                 push    eax
.text:000013AF                 call    _safefree
.text:000013B4                 add     esp, 4
.text:000013B7                 mov     [ebp+var_18], 0
.text:000013BE                 jmp     short loc_13C9
.text:000013C0 ; ---------------------------------------------------------------------------
.text:000013C0
.text:000013C0 loc_13C0:                               ; CODE XREF: _win_setup_config_box:loc_15B7j
.text:000013C0                 mov     ecx, [ebp+var_18]
.text:000013C3                 add     ecx, 1
.text:000013C6                 mov     [ebp+var_18], ecx
.text:000013C9
.text:000013C9 loc_13C9:                               ; CODE XREF: _win_setup_config_box+662j
.text:000013C9                 mov     edx, [ebp+var_4]
.text:000013CC                 mov     eax, [ebp+var_18]
.text:000013CF                 cmp     eax, [edx+10h]
.text:000013D2                 jge     loc_15BC
.text:000013D8                 mov     ecx, [ebp+var_4]
.text:000013DB                 mov     edx, [ecx+18h]
.text:000013DE                 mov     eax, [ebp+var_18]
.text:000013E1                 mov     ecx, [edx+eax*4]
.text:000013E4                 mov     [ebp+var_8], ecx
.text:000013E7                 mov     edx, [ebp+var_8]
.text:000013EA                 cmp     dword ptr [edx], 2
.text:000013ED                 jnz     loc_15B7
.text:000013F3                 mov     eax, [ebp+var_8]
.text:000013F6                 cmp     dword ptr [eax+14h], 8Bh ; 'ï'
.text:000013FD                 jnz     loc_15B7
.text:00001403                 mov     ecx, [ebp+var_8]
.text:00001406                 cmp     dword ptr [ecx+10h], offset _conf_radiobutton_handler
.text:0000140D                 jz      short loc_1426
.text:0000140F                 push    0ECh ; '8'
.text:00001414                 push    offset $SG86398 ; "..\\..\\wincfg.c"
.text:00001419                 push    offset $SG86399 ; "c->generic.handler == conf_radiobutton_"...
.text:0000141E                 call    __wassert
.text:00001423 ; ---------------------------------------------------------------------------
.text:00001423                 add     esp, 0Ch
.text:00001426
.text:00001426 loc_1426:                               ; CODE XREF: _win_setup_config_box+6B1j
.text:00001426                 mov     eax, [ebp+var_8]
.text:00001429                 mov     ecx, [eax+24h]
.text:0000142C                 add     ecx, 3
.text:0000142F                 mov     edx, [ebp+var_8]
.text:00001432                 mov     [edx+24h], ecx
.text:00001435                 push    4
.text:00001437                 mov     eax, [ebp+var_8]
.text:0000143A                 mov     ecx, [eax+24h]
.text:0000143D                 push    ecx
.text:0000143E                 mov     edx, [ebp+var_8]
.text:00001441                 mov     eax, [edx+28h]
.text:00001444                 push    eax
.text:00001445                 call    _saferealloc
.text:0000144A                 add     esp, 0Ch
.text:0000144D                 mov     ecx, [ebp+var_8]
.text:00001450                 mov     [ecx+28h], eax
.text:00001453                 push    offset $SG86403 ; "Font has XWindows encoding"
.text:00001458                 call    _dupstr
.text:0000145D                 add     esp, 4
.text:00001460                 mov     edx, [ebp+var_8]
.text:00001463                 mov     ecx, [edx+24h]
.text:00001466                 mov     edx, [ebp+var_8]
.text:00001469                 mov     edx, [edx+28h]
.text:0000146C                 mov     [edx+ecx*4-0Ch], eax
.text:00001470                 push    offset $SG86404 ; "Use font in both ANSI and OEM modes"
.text:00001475                 call    _dupstr
.text:0000147A                 add     esp, 4
.text:0000147D                 mov     ecx, [ebp+var_8]
.text:00001480                 mov     edx, [ecx+24h]
.text:00001483                 mov     ecx, [ebp+var_8]
.text:00001486                 mov     ecx, [ecx+28h]
.text:00001489                 mov     [ecx+edx*4-8], eax
.text:0000148D                 push    offset $SG86405 ; "Use font in OEM mode only"
.text:00001492                 call    _dupstr
.text:00001497                 add     esp, 4
.text:0000149A                 mov     edx, [ebp+var_8]
.text:0000149D                 mov     ecx, [edx+24h]
.text:000014A0                 mov     edx, [ebp+var_8]
.text:000014A3                 mov     edx, [edx+28h]
.text:000014A6                 mov     [edx+ecx*4-4], eax
.text:000014AA                 push    4
.text:000014AC                 mov     eax, [ebp+var_8]
.text:000014AF                 mov     ecx, [eax+24h]
.text:000014B2                 push    ecx
.text:000014B3                 mov     edx, [ebp+var_8]
.text:000014B6                 mov     eax, [edx+30h]
.text:000014B9                 push    eax
.text:000014BA                 call    _saferealloc
.text:000014BF                 add     esp, 0Ch
.text:000014C2                 mov     ecx, [ebp+var_8]
.text:000014C5                 mov     [ecx+30h], eax
.text:000014C8                 push    0
.text:000014CA                 call    _I
.text:000014CF                 add     esp, 4
.text:000014D2                 mov     edx, [ebp+var_8]
.text:000014D5                 mov     ecx, [edx+24h]
.text:000014D8                 mov     edx, [ebp+var_8]
.text:000014DB                 mov     edx, [edx+30h]
.text:000014DE                 mov     [edx+ecx*4-0Ch], eax
.text:000014E2                 push    1
.text:000014E4                 call    _I
.text:000014E9                 add     esp, 4
.text:000014EC                 mov     ecx, [ebp+var_8]
.text:000014EF                 mov     edx, [ecx+24h]
.text:000014F2                 mov     ecx, [ebp+var_8]
.text:000014F5                 mov     ecx, [ecx+30h]
.text:000014F8                 mov     [ecx+edx*4-8], eax
.text:000014FC                 push    2
.text:000014FE                 call    _I
.text:00001503                 add     esp, 4
.text:00001506                 mov     edx, [ebp+var_8]
.text:00001509                 mov     ecx, [edx+24h]
.text:0000150C                 mov     edx, [ebp+var_8]
.text:0000150F                 mov     edx, [edx+30h]
.text:00001512                 mov     [edx+ecx*4-4], eax
.text:00001516                 mov     eax, [ebp+var_8]
.text:00001519                 cmp     dword ptr [eax+2Ch], 0
.text:0000151D                 jnz     short loc_1564
.text:0000151F                 push    1
.text:00001521                 mov     ecx, [ebp+var_8]
.text:00001524                 mov     edx, [ecx+24h]
.text:00001527                 push    edx
.text:00001528                 call    _safemalloc
.text:0000152D                 add     esp, 8
.text:00001530                 mov     ecx, [ebp+var_8]
.text:00001533                 mov     [ecx+2Ch], eax
.text:00001536                 mov     [ebp+var_1C], 0
.text:0000153D                 jmp     short loc_1548
.text:0000153F ; ---------------------------------------------------------------------------
.text:0000153F
.text:0000153F loc_153F:                               ; CODE XREF: _win_setup_config_box+804j
.text:0000153F                 mov     edx, [ebp+var_1C]
.text:00001542                 add     edx, 1
.text:00001545                 mov     [ebp+var_1C], edx
.text:00001548
.text:00001548 loc_1548:                               ; CODE XREF: _win_setup_config_box+7E1j
.text:00001548                 mov     eax, [ebp+var_8]
.text:0000154B                 mov     ecx, [ebp+var_1C]
.text:0000154E                 cmp     ecx, [eax+24h]
.text:00001551                 jge     short loc_1562
.text:00001553                 mov     edx, [ebp+var_8]
.text:00001556                 mov     eax, [edx+2Ch]
.text:00001559                 mov     ecx, [ebp+var_1C]
.text:0000155C                 mov     byte ptr [eax+ecx], 0
.text:00001560                 jmp     short loc_153F
.text:00001562 ; ---------------------------------------------------------------------------
.text:00001562
.text:00001562 loc_1562:                               ; CODE XREF: _win_setup_config_box+7F5j
.text:00001562                 jmp     short loc_1582
.text:00001564 ; ---------------------------------------------------------------------------
.text:00001564
.text:00001564 loc_1564:                               ; CODE XREF: _win_setup_config_box+7C1j
.text:00001564                 push    1
.text:00001566                 mov     edx, [ebp+var_8]
.text:00001569                 mov     eax, [edx+24h]
.text:0000156C                 push    eax
.text:0000156D                 mov     ecx, [ebp+var_8]
.text:00001570                 mov     edx, [ecx+2Ch]
.text:00001573                 push    edx
.text:00001574                 call    _saferealloc
.text:00001579                 add     esp, 0Ch
.text:0000157C                 mov     ecx, [ebp+var_8]
.text:0000157F                 mov     [ecx+2Ch], eax
.text:00001582
.text:00001582 loc_1582:                               ; CODE XREF: _win_setup_config_box:loc_1562j
.text:00001582                 mov     edx, [ebp+var_8]
.text:00001585                 mov     eax, [edx+24h]
.text:00001588                 mov     ecx, [ebp+var_8]
.text:0000158B                 mov     edx, [ecx+2Ch]
.text:0000158E                 mov     byte ptr [eax+edx-3], 78h ; 'x'
.text:00001593                 mov     eax, [ebp+var_8]
.text:00001596                 mov     ecx, [eax+24h]
.text:00001599                 mov     edx, [ebp+var_8]
.text:0000159C                 mov     eax, [edx+2Ch]
.text:0000159F                 mov     byte ptr [ecx+eax-2], 62h ; 'b'
.text:000015A4                 mov     ecx, [ebp+var_8]
.text:000015A7                 mov     edx, [ecx+24h]
.text:000015AA                 mov     eax, [ebp+var_8]
.text:000015AD                 mov     ecx, [eax+2Ch]
.text:000015B0                 mov     byte ptr [edx+ecx-1], 65h ; 'e'
.text:000015B5                 jmp     short loc_15BC
.text:000015B7 ; ---------------------------------------------------------------------------
.text:000015B7
.text:000015B7 loc_15B7:                               ; CODE XREF: _win_setup_config_box+691j
.text:000015B7                                         ; _win_setup_config_box+6A1j
.text:000015B7                 jmp     loc_13C0
.text:000015BC ; ---------------------------------------------------------------------------
.text:000015BC
.text:000015BC loc_15BC:                               ; CODE XREF: _win_setup_config_box+676j
.text:000015BC                                         ; _win_setup_config_box+859j
.text:000015BC                 push    offset $SG86420 ; "Formatting of pasted characters"
.text:000015C1                 push    offset $SG86421 ; "format"
.text:000015C6                 push    offset $SG86422 ; "Window/Selection"
.text:000015CB                 mov     edx, [ebp+arg_0]
.text:000015CE                 push    edx
.text:000015CF                 call    _ctrl_getset
.text:000015D4                 add     esp, 10h
.text:000015D7                 mov     [ebp+var_4], eax
.text:000015DA                 push    88h ; 'ê'
.text:000015DF                 call    _I
.text:000015E4                 add     esp, 4
.text:000015E7                 push    eax
.text:000015E8                 push    offset _conf_checkbox_handler
.text:000015ED                 push    offset $SG86423 ; "selection.rtf:config-rtfpaste"
.text:000015F2                 call    _P
.text:000015F7                 add     esp, 4
.text:000015FA                 push    eax
.text:000015FB                 push    66h ; 'f'
.text:000015FD                 push    offset $SG86424 ; "Paste to clipboard in RTF as well as pl"...
.text:00001602                 mov     eax, [ebp+var_4]
.text:00001605                 push    eax
.text:00001606                 call    _ctrl_checkbox
.text:0000160B                 add     esp, 18h
.text:0000160E                 push    offset $SG86425 ; "Control use of mouse"
.text:00001613                 push    offset $SG86426 ; "mouse"
.text:00001618                 push    offset $SG86427 ; "Window/Selection"
.text:0000161D                 mov     ecx, [ebp+arg_0]
.text:00001620                 push    ecx
.text:00001621                 call    _ctrl_getset
.text:00001626                 add     esp, 10h
.text:00001629                 mov     [ebp+var_4], eax
.text:0000162C                 push    0
.text:0000162E                 push    1
.text:00001630                 call    _I
.text:00001635                 add     esp, 4
.text:00001638                 push    eax
.text:00001639                 push    offset $SG86429 ; "xterm (Right extends, Middle pastes)"
.text:0000163E                 push    0
.text:00001640                 call    _I
.text:00001645                 add     esp, 4
.text:00001648                 push    eax
.text:00001649                 push    offset $SG86430 ; "Compromise (Middle extends, Right paste"...
.text:0000164E                 push    2
.text:00001650                 call    _I
.text:00001655                 add     esp, 4
.text:00001658                 push    eax
.text:00001659                 push    offset $SG86431 ; "Windows (Middle extends, Right brings u"...
.text:0000165E                 push    85h ; 'à'
.text:00001663                 call    _I
.text:00001668                 add     esp, 4
.text:0000166B                 push    eax
.text:0000166C                 push    offset _conf_radiobutton_handler
.text:00001671                 push    offset $SG86432 ; "selection.buttons:config-mouse"
.text:00001676                 call    _P
.text:0000167B                 add     esp, 4
.text:0000167E                 push    eax
.text:0000167F                 push    1
.text:00001681                 push    6Dh ; 'm'
.text:00001683                 push    offset $SG86433 ; "Action of mouse buttons:"
.text:00001688                 mov     edx, [ebp+var_4]
.text:0000168B                 push    edx
.text:0000168C                 call    _ctrl_radiobuttons
.text:00001691                 add     esp, 38h
.text:00001694                 mov     eax, [ebp+var_4]
.text:00001697                 mov     ecx, [eax+10h]
.text:0000169A                 mov     edx, [ebp+var_4]
.text:0000169D                 mov     eax, [edx+18h]
.text:000016A0                 mov     ecx, [eax+ecx*4-4]
.text:000016A4                 mov     [ebp+var_8], ecx
.text:000016A7                 mov     edx, [ebp+var_4]
.text:000016AA                 mov     eax, [edx+10h]
.text:000016AD                 lea     ecx, ds:0FFFFFFFCh[eax*4]
.text:000016B4                 push    ecx             ; size_t
.text:000016B5                 mov     edx, [ebp+var_4]
.text:000016B8                 mov     eax, [edx+18h]
.text:000016BB                 push    eax             ; void *
.text:000016BC                 mov     ecx, [ebp+var_4]
.text:000016BF                 mov     edx, [ecx+18h]
.text:000016C2                 add     edx, 4
.text:000016C5                 push    edx             ; void *
.text:000016C6                 call    _memmove
.text:000016CB                 add     esp, 0Ch
.text:000016CE                 mov     eax, [ebp+var_4]
.text:000016D1                 mov     ecx, [eax+18h]
.text:000016D4                 mov     edx, [ebp+var_8]
.text:000016D7                 mov     [ecx], edx
.text:000016D9                 push    offset $SG86435 ; "General options for colour usage"
.text:000016DE                 push    offset $SG86436 ; "general"
.text:000016E3                 push    offset $SG86437 ; "Window/Colours"
.text:000016E8                 mov     eax, [ebp+arg_0]
.text:000016EB                 push    eax
.text:000016EC                 call    _ctrl_getset
.text:000016F1                 add     esp, 10h
.text:000016F4                 mov     [ebp+var_4], eax
.text:000016F7                 push    82h ; 'é'
.text:000016FC                 call    _I
.text:00001701                 add     esp, 4
.text:00001704                 push    eax
.text:00001705                 push    offset _conf_checkbox_handler
.text:0000170A                 push    offset $SG86438 ; "colours.logpal:config-logpalette"
.text:0000170F                 call    _P
.text:00001714                 add     esp, 4
.text:00001717                 push    eax
.text:00001718                 push    6Ch ; 'l'
.text:0000171A                 push    offset $SG86439 ; "Attempt to use logical palettes"
.text:0000171F                 mov     ecx, [ebp+var_4]
.text:00001722                 push    ecx
.text:00001723                 call    _ctrl_checkbox
.text:00001728                 add     esp, 18h
.text:0000172B                 push    81h ; 'ü'
.text:00001730                 call    _I
.text:00001735                 add     esp, 4
.text:00001738                 push    eax
.text:00001739                 push    offset _conf_checkbox_handler
.text:0000173E                 push    offset $SG86440 ; "colours.system:config-syscolour"
.text:00001743                 call    _P
.text:00001748                 add     esp, 4
.text:0000174B                 push    eax
.text:0000174C                 push    73h ; 's'
.text:0000174E                 push    offset $SG86441 ; "Use system colours"
.text:00001753                 mov     edx, [ebp+var_4]
.text:00001756                 push    edx
.text:00001757                 call    _ctrl_checkbox
.text:0000175C                 add     esp, 18h
.text:0000175F                 push    offset $SG86442 ; "Set the size of the window"
.text:00001764                 push    offset $SG86443 ; "size"
.text:00001769                 push    offset $SG86444 ; "Window"
.text:0000176E                 mov     eax, [ebp+arg_0]
.text:00001771                 push    eax
.text:00001772                 call    _ctrl_getset
.text:00001777                 add     esp, 10h
.text:0000177A                 mov     [ebp+var_4], eax
.text:0000177D                 push    0
.text:0000177F                 push    1
.text:00001781                 call    _I
.text:00001786                 add     esp, 4
.text:00001789                 push    eax
.text:0000178A                 push    offset $SG86446 ; "Forbid resizing completely"
.text:0000178F                 push    3
.text:00001791                 call    _I
.text:00001796                 add     esp, 4
.text:00001799                 push    eax
.text:0000179A                 push    offset $SG86447 ; "Change font size only when maximised"
.text:0000179F                 push    2
.text:000017A1                 call    _I
.text:000017A6                 add     esp, 4
.text:000017A9                 push    eax
.text:000017AA                 push    offset $SG86448 ; "Change the size of the font"
.text:000017AF                 push    0
.text:000017B1                 call    _I
.text:000017B6                 add     esp, 4
.text:000017B9                 push    eax
.text:000017BA                 push    offset $SG86449 ; "Change the number of rows and columns"
.text:000017BF                 push    6Ah ; 'j'
.text:000017C1                 call    _I
.text:000017C6                 add     esp, 4
.text:000017C9                 push    eax
.text:000017CA                 push    offset _conf_radiobutton_handler
.text:000017CF                 push    offset $SG86450 ; "window.resize:config-winsizelock"
.text:000017D4                 call    _P
.text:000017D9                 add     esp, 4
.text:000017DC                 push    eax
.text:000017DD                 push    1
.text:000017DF                 push    7Ah ; 'z'
.text:000017E1                 push    offset $SG86451 ; "When window is resized:"
.text:000017E6                 mov     ecx, [ebp+var_4]
.text:000017E9                 push    ecx
.text:000017EA                 call    _ctrl_radiobuttons
.text:000017EF                 add     esp, 40h
.text:000017F2                 push    0
.text:000017F4                 push    offset $SG86453 ; "main"
.text:000017F9                 push    offset $SG86454 ; "Window/Behaviour"
.text:000017FE                 mov     edx, [ebp+arg_0]
.text:00001801                 push    edx
.text:00001802                 call    _ctrl_getset
.text:00001807                 add     esp, 10h
.text:0000180A                 mov     [ebp+var_4], eax
.text:0000180D                 push    4Eh ; 'N'
.text:0000180F                 call    _I
.text:00001814                 add     esp, 4
.text:00001817                 push    eax
.text:00001818                 push    offset _conf_checkbox_handler
.text:0000181D                 push    offset $SG86455 ; "behaviour.altf4:config-altf4"
.text:00001822                 call    _P
.text:00001827                 add     esp, 4
.text:0000182A                 push    eax
.text:0000182B                 push    34h ; '4'
.text:0000182D                 push    offset $SG86456 ; "Window closes on ALT-F4"
.text:00001832                 mov     eax, [ebp+var_4]
.text:00001835                 push    eax
.text:00001836                 call    _ctrl_checkbox
.text:0000183B                 add     esp, 18h
.text:0000183E                 push    4Fh ; 'O'
.text:00001840                 call    _I
.text:00001845                 add     esp, 4
.text:00001848                 push    eax
.text:00001849                 push    offset _conf_checkbox_handler
.text:0000184E                 push    offset $SG86457 ; "behaviour.altspace:config-altspace"
.text:00001853                 call    _P
.text:00001858                 add     esp, 4
.text:0000185B                 push    eax
.text:0000185C                 push    79h ; 'y'
.text:0000185E                 push    offset $SG86458 ; "System menu appears on ALT-Space"
.text:00001863                 mov     ecx, [ebp+var_4]
.text:00001866                 push    ecx
.text:00001867                 call    _ctrl_checkbox
.text:0000186C                 add     esp, 18h
.text:0000186F                 push    50h ; 'P'
.text:00001871                 call    _I
.text:00001876                 add     esp, 4
.text:00001879                 push    eax
.text:0000187A                 push    offset _conf_checkbox_handler
.text:0000187F                 push    offset $SG86459 ; "behaviour.altonly:config-altonly"
.text:00001884                 call    _P
.text:00001889                 add     esp, 4
.text:0000188C                 push    eax
.text:0000188D                 push    6Ch ; 'l'
.text:0000188F                 push    offset $SG86460 ; "System menu appears on ALT alone"
.text:00001894                 mov     edx, [ebp+var_4]
.text:00001897                 push    edx
.text:00001898                 call    _ctrl_checkbox
.text:0000189D                 add     esp, 18h
.text:000018A0                 push    53h ; 'S'
.text:000018A2                 call    _I
.text:000018A7                 add     esp, 4
.text:000018AA                 push    eax
.text:000018AB                 push    offset _conf_checkbox_handler
.text:000018B0                 push    offset $SG86461 ; "behaviour.alwaysontop:config-alwaysonto"...
.text:000018B5                 call    _P
.text:000018BA                 add     esp, 4
.text:000018BD                 push    eax
.text:000018BE                 push    65h ; 'e'
.text:000018C0                 push    offset $SG86462 ; "Ensure window is always on top"
.text:000018C5                 mov     eax, [ebp+var_4]
.text:000018C8                 push    eax
.text:000018C9                 call    _ctrl_checkbox
.text:000018CE                 add     esp, 18h
.text:000018D1                 push    54h ; 'T'
.text:000018D3                 call    _I
.text:000018D8                 add     esp, 4
.text:000018DB                 push    eax
.text:000018DC                 push    offset _conf_checkbox_handler
.text:000018E1                 push    offset $SG86463 ; "behaviour.altenter:config-fullscreen"
.text:000018E6                 call    _P
.text:000018EB                 add     esp, 4
.text:000018EE                 push    eax
.text:000018EF                 push    66h ; 'f'
.text:000018F1                 push    offset $SG86464 ; "Full screen on Alt-Enter"
.text:000018F6                 mov     ecx, [ebp+var_4]
.text:000018F9                 push    ecx
.text:000018FA                 call    _ctrl_checkbox
.text:000018FF                 add     esp, 18h
.text:00001902                 cmp     [ebp+arg_C], 0
.text:00001906                 jnz     loc_1AA2
.text:0000190C                 push    0
.text:0000190E                 push    offset $SG86468 ; "basics"
.text:00001913                 push    offset $SG86469 ; "Connection/Proxy"
.text:00001918                 mov     edx, [ebp+arg_0]
.text:0000191B                 push    edx
.text:0000191C                 call    _ctrl_getset
.text:00001921                 add     esp, 10h
.text:00001924                 mov     [ebp+var_4], eax
.text:00001927                 mov     [ebp+var_20], 0
.text:0000192E                 jmp     short loc_1939
.text:00001930 ; ---------------------------------------------------------------------------
.text:00001930
.text:00001930 loc_1930:                               ; CODE XREF: _win_setup_config_box:loc_1A17j
.text:00001930                 mov     eax, [ebp+var_20]
.text:00001933                 add     eax, 1
.text:00001936                 mov     [ebp+var_20], eax
.text:00001939
.text:00001939 loc_1939:                               ; CODE XREF: _win_setup_config_box+BD2j
.text:00001939                 mov     ecx, [ebp+var_4]
.text:0000193C                 mov     edx, [ebp+var_20]
.text:0000193F                 cmp     edx, [ecx+10h]
.text:00001942                 jge     loc_1A1C
.text:00001948                 mov     eax, [ebp+var_4]
.text:0000194B                 mov     ecx, [eax+18h]
.text:0000194E                 mov     edx, [ebp+var_20]
.text:00001951                 mov     eax, [ecx+edx*4]
.text:00001954                 mov     [ebp+var_8], eax
.text:00001957                 mov     ecx, [ebp+var_8]
.text:0000195A                 cmp     dword ptr [ecx], 2
.text:0000195D                 jnz     loc_1A17
.text:00001963                 mov     edx, [ebp+var_8]
.text:00001966                 cmp     dword ptr [edx+14h], 0Dh
.text:0000196A                 jnz     loc_1A17
.text:00001970                 mov     eax, [ebp+var_8]
.text:00001973                 cmp     dword ptr [eax+10h], offset _conf_radiobutton_handler
.text:0000197A                 jz      short loc_1993
.text:0000197C                 push    168h
.text:00001981                 push    offset $SG86475 ; "..\\..\\wincfg.c"
.text:00001986                 push    offset $SG86476 ; "c->generic.handler == conf_radiobutton_"...
.text:0000198B                 call    __wassert
.text:00001990 ; ---------------------------------------------------------------------------
.text:00001990                 add     esp, 0Ch
.text:00001993
.text:00001993 loc_1993:                               ; CODE XREF: _win_setup_config_box+C1Ej
.text:00001993                 mov     edx, [ebp+var_8]
.text:00001996                 mov     eax, [edx+24h]
.text:00001999                 add     eax, 1
.text:0000199C                 mov     ecx, [ebp+var_8]
.text:0000199F                 mov     [ecx+24h], eax
.text:000019A2                 push    4
.text:000019A4                 mov     edx, [ebp+var_8]
.text:000019A7                 mov     eax, [edx+24h]
.text:000019AA                 push    eax
.text:000019AB                 mov     ecx, [ebp+var_8]
.text:000019AE                 mov     edx, [ecx+28h]
.text:000019B1                 push    edx
.text:000019B2                 call    _saferealloc
.text:000019B7                 add     esp, 0Ch
.text:000019BA                 mov     ecx, [ebp+var_8]
.text:000019BD                 mov     [ecx+28h], eax
.text:000019C0                 push    offset $SG86480 ; "Local"
.text:000019C5                 call    _dupstr
.text:000019CA                 add     esp, 4
.text:000019CD                 mov     edx, [ebp+var_8]
.text:000019D0                 mov     ecx, [edx+24h]
.text:000019D3                 mov     edx, [ebp+var_8]
.text:000019D6                 mov     edx, [edx+28h]
.text:000019D9                 mov     [edx+ecx*4-4], eax
.text:000019DD                 push    4
.text:000019DF                 mov     eax, [ebp+var_8]
.text:000019E2                 mov     ecx, [eax+24h]
.text:000019E5                 push    ecx
.text:000019E6                 mov     edx, [ebp+var_8]
.text:000019E9                 mov     eax, [edx+30h]
.text:000019EC                 push    eax
.text:000019ED                 call    _saferealloc
.text:000019F2                 add     esp, 0Ch
.text:000019F5                 mov     ecx, [ebp+var_8]
.text:000019F8                 mov     [ecx+30h], eax
.text:000019FB                 push    5
.text:000019FD                 call    _I
.text:00001A02                 add     esp, 4
.text:00001A05                 mov     edx, [ebp+var_8]
.text:00001A08                 mov     ecx, [edx+24h]
.text:00001A0B                 mov     edx, [ebp+var_8]
.text:00001A0E                 mov     edx, [edx+30h]
.text:00001A11                 mov     [edx+ecx*4-4], eax
.text:00001A15                 jmp     short loc_1A1C
.text:00001A17 ; ---------------------------------------------------------------------------
.text:00001A17
.text:00001A17 loc_1A17:                               ; CODE XREF: _win_setup_config_box+C01j
.text:00001A17                                         ; _win_setup_config_box+C0Ej
.text:00001A17                 jmp     loc_1930
.text:00001A1C ; ---------------------------------------------------------------------------
.text:00001A1C
.text:00001A1C loc_1A1C:                               ; CODE XREF: _win_setup_config_box+BE6j
.text:00001A1C                                         ; _win_setup_config_box+CB9j
.text:00001A1C                 mov     [ebp+var_20], 0
.text:00001A23                 jmp     short loc_1A2E
.text:00001A25 ; ---------------------------------------------------------------------------
.text:00001A25
.text:00001A25 loc_1A25:                               ; CODE XREF: _win_setup_config_box:loc_1AA0j
.text:00001A25                 mov     eax, [ebp+var_20]
.text:00001A28                 add     eax, 1
.text:00001A2B                 mov     [ebp+var_20], eax
.text:00001A2E
.text:00001A2E loc_1A2E:                               ; CODE XREF: _win_setup_config_box+CC7j
.text:00001A2E                 mov     ecx, [ebp+var_4]
.text:00001A31                 mov     edx, [ebp+var_20]
.text:00001A34                 cmp     edx, [ecx+10h]
.text:00001A37                 jge     short loc_1AA2
.text:00001A39                 mov     eax, [ebp+var_4]
.text:00001A3C                 mov     ecx, [eax+18h]
.text:00001A3F                 mov     edx, [ebp+var_20]
.text:00001A42                 mov     eax, [ecx+edx*4]
.text:00001A45                 mov     [ebp+var_8], eax
.text:00001A48                 mov     ecx, [ebp+var_8]
.text:00001A4B                 cmp     dword ptr [ecx], 1
.text:00001A4E                 jnz     short loc_1AA0
.text:00001A50                 mov     edx, [ebp+var_8]
.text:00001A53                 cmp     dword ptr [edx+14h], 12h
.text:00001A57                 jnz     short loc_1AA0
.text:00001A59                 mov     eax, [ebp+var_8]
.text:00001A5C                 cmp     dword ptr [eax+10h], offset _conf_editbox_handler
.text:00001A63                 jz      short loc_1A7C
.text:00001A65                 push    179h
.text:00001A6A                 push    offset $SG86489 ; "..\\..\\wincfg.c"
.text:00001A6F                 push    offset $SG86490 ; "c->generic.handler == conf_editbox_hand"...
.text:00001A74                 call    __wassert
.text:00001A79 ; ---------------------------------------------------------------------------
.text:00001A79                 add     esp, 0Ch
.text:00001A7C
.text:00001A7C loc_1A7C:                               ; CODE XREF: _win_setup_config_box+D07j
.text:00001A7C                 mov     edx, [ebp+var_8]
.text:00001A7F                 mov     eax, [edx+4]
.text:00001A82                 push    eax
.text:00001A83                 call    _safefree
.text:00001A88                 add     esp, 4
.text:00001A8B                 push    offset $SG86491 ; "Telnet command, or local proxy command"
.text:00001A90                 call    _dupstr
.text:00001A95                 add     esp, 4
.text:00001A98                 mov     ecx, [ebp+var_8]
.text:00001A9B                 mov     [ecx+4], eax
.text:00001A9E                 jmp     short loc_1AA2
.text:00001AA0 ; ---------------------------------------------------------------------------
.text:00001AA0
.text:00001AA0 loc_1AA0:                               ; CODE XREF: _win_setup_config_box+CF2j
.text:00001AA0                                         ; _win_setup_config_box+CFBj
.text:00001AA0                 jmp     short loc_1A25
.text:00001AA2 ; ---------------------------------------------------------------------------
.text:00001AA2
.text:00001AA2 loc_1AA2:                               ; CODE XREF: _win_setup_config_box+BAAj
.text:00001AA2                                         ; _win_setup_config_box+CDBj ...
.text:00001AA2                 cmp     [ebp+arg_C], 0
.text:00001AA6                 jz      short loc_1AAE
.text:00001AA8                 cmp     [ebp+arg_10], 4
.text:00001AAC                 jnz     short loc_1AC2
.text:00001AAE
.text:00001AAE loc_1AAE:                               ; CODE XREF: _win_setup_config_box+D4Aj
.text:00001AAE                 push    0Fh
.text:00001AB0                 push    1Fh
.text:00001AB2                 mov     edx, [ebp+arg_C]
.text:00001AB5                 push    edx
.text:00001AB6                 mov     eax, [ebp+arg_0]
.text:00001AB9                 push    eax
.text:00001ABA                 call    _ser_setup_config_box
.text:00001ABF                 add     esp, 10h
.text:00001AC2
.text:00001AC2 loc_1AC2:                               ; CODE XREF: _win_setup_config_box+D50j
.text:00001AC2                 cmp     [ebp+arg_C], 0
.text:00001AC6                 jnz     short loc_1B31
.text:00001AC8                 push    3
.text:00001ACA                 call    _backend_from_proto
.text:00001ACF                 add     esp, 4
.text:00001AD2                 test    eax, eax
.text:00001AD4                 jz      short loc_1B31
.text:00001AD6                 push    offset $SG86495 ; "X11 forwarding"
.text:00001ADB                 push    offset $SG86496 ; "x11"
.text:00001AE0                 push    offset $SG86497 ; "Connection/SSH/X11"
.text:00001AE5                 mov     ecx, [ebp+arg_0]
.text:00001AE8                 push    ecx
.text:00001AE9                 call    _ctrl_getset
.text:00001AEE                 add     esp, 10h
.text:00001AF1                 mov     [ebp+var_4], eax
.text:00001AF4                 push    93h ; 'ô'
.text:00001AF9                 call    _I
.text:00001AFE                 add     esp, 4
.text:00001B01                 push    eax
.text:00001B02                 push    offset _conf_filesel_handler
.text:00001B07                 push    offset $SG86499 ; "ssh.tunnels.xauthority:config-ssh-xauth"...
.text:00001B0C                 call    _P
.text:00001B11                 add     esp, 4
.text:00001B14                 push    eax
.text:00001B15                 push    offset $SG86500 ; "Select X authority file"
.text:00001B1A                 push    0
.text:00001B1C                 push    0
.text:00001B1E                 push    74h ; 't'
.text:00001B20                 push    offset $SG86501 ; "X authority file for local display"
.text:00001B25                 mov     edx, [ebp+var_4]
.text:00001B28                 push    edx
.text:00001B29                 call    _ctrl_filesel
.text:00001B2E                 add     esp, 24h
.text:00001B31
.text:00001B31 loc_1B31:                               ; CODE XREF: _win_setup_config_box+D6Aj
.text:00001B31                                         ; _win_setup_config_box+D78j
.text:00001B31                 add     esp, 20h
.text:00001B34                 cmp     ebp, esp
.text:00001B36                 call    __RTC_CheckEsp
.text:00001B3B                 mov     esp, ebp
.text:00001B3D                 pop     ebp
.text:00001B3E                 retn
.text:00001B3E _win_setup_config_box endp
.text:00001B3E
.text:00001B3E ; ---------------------------------------------------------------------------
.text:00001B3F                 db 0Dh dup(0CCh)
.text:00001B4C
.text:00001B4C ; =============== S U B R O U T I N E =======================================
.text:00001B4C
.text:00001B4C ; Attributes: bp-based frame
.text:00001B4C
.text:00001B4C _about_handler  proc near               ; DATA XREF: _win_setup_config_box+58o
.text:00001B4C
.text:00001B4C var_4           = dword ptr -4
.text:00001B4C arg_0           = dword ptr  8
.text:00001B4C arg_C           = dword ptr  14h
.text:00001B4C
.text:00001B4C                 push    ebp
.text:00001B4D                 mov     ebp, esp
.text:00001B4F                 push    ecx
.text:00001B50                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00001B57                 mov     eax, [ebp+arg_0]
.text:00001B5A                 mov     ecx, [eax+14h]
.text:00001B5D                 mov     [ebp+var_4], ecx
.text:00001B60                 cmp     [ebp+arg_C], 1
.text:00001B64                 jnz     short loc_1B74
.text:00001B66                 mov     edx, [ebp+var_4]
.text:00001B69                 mov     eax, [edx]
.text:00001B6B                 push    eax
.text:00001B6C                 call    _modal_about_box
.text:00001B71                 add     esp, 4
.text:00001B74
.text:00001B74 loc_1B74:                               ; CODE XREF: _about_handler+18j
.text:00001B74                 add     esp, 4
.text:00001B77                 cmp     ebp, esp
.text:00001B79                 call    __RTC_CheckEsp
.text:00001B7E                 mov     esp, ebp
.text:00001B80                 pop     ebp
.text:00001B81                 retn
.text:00001B81 _about_handler  endp
.text:00001B81
.text:00001B81 ; ---------------------------------------------------------------------------
.text:00001B82                 db 0Ah dup(0CCh)
.text:00001B8C
.text:00001B8C ; =============== S U B R O U T I N E =======================================
.text:00001B8C
.text:00001B8C ; Attributes: bp-based frame
.text:00001B8C
.text:00001B8C _help_handler   proc near               ; DATA XREF: _win_setup_config_box+9Bo
.text:00001B8C
.text:00001B8C var_4           = dword ptr -4
.text:00001B8C arg_0           = dword ptr  8
.text:00001B8C arg_C           = dword ptr  14h
.text:00001B8C
.text:00001B8C                 push    ebp
.text:00001B8D                 mov     ebp, esp
.text:00001B8F                 push    ecx
.text:00001B90                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00001B97                 mov     eax, [ebp+arg_0]
.text:00001B9A                 mov     ecx, [eax+14h]
.text:00001B9D                 mov     [ebp+var_4], ecx
.text:00001BA0                 cmp     [ebp+arg_C], 1
.text:00001BA4                 jnz     short loc_1BB4
.text:00001BA6                 mov     edx, [ebp+var_4]
.text:00001BA9                 mov     eax, [edx]
.text:00001BAB                 push    eax
.text:00001BAC                 call    _show_help
.text:00001BB1                 add     esp, 4
.text:00001BB4
.text:00001BB4 loc_1BB4:                               ; CODE XREF: _help_handler+18j
.text:00001BB4                 add     esp, 4
.text:00001BB7                 cmp     ebp, esp
.text:00001BB9                 call    __RTC_CheckEsp
.text:00001BBE                 mov     esp, ebp
.text:00001BC0                 pop     ebp
.text:00001BC1                 retn
.text:00001BC1 _help_handler   endp
.text:00001BC1
.text:00001BC1 ; ---------------------------------------------------------------------------
.text:00001BC2                 db 0Ah dup(0CCh)
.text:00001BCC
.text:00001BCC ; =============== S U B R O U T I N E =======================================
.text:00001BCC
.text:00001BCC ; Attributes: bp-based frame
.text:00001BCC
.text:00001BCC _variable_pitch_handler proc near       ; DATA XREF: _win_setup_config_box+4F5o
.text:00001BCC
.text:00001BCC arg_0           = dword ptr  8
.text:00001BCC arg_4           = dword ptr  0Ch
.text:00001BCC arg_C           = dword ptr  14h
.text:00001BCC
.text:00001BCC                 push    ebp
.text:00001BCD                 mov     ebp, esp
.text:00001BCF                 cmp     [ebp+arg_C], 0
.text:00001BD3                 jnz     short loc_1BFB
.text:00001BD5                 mov     eax, [ebp+arg_4]
.text:00001BD8                 push    eax
.text:00001BD9                 call    _dlg_get_fixed_pitch_flag
.text:00001BDE                 add     esp, 4
.text:00001BE1                 neg     eax
.text:00001BE3                 sbb     eax, eax
.text:00001BE5                 add     eax, 1
.text:00001BE8                 push    eax
.text:00001BE9                 mov     ecx, [ebp+arg_4]
.text:00001BEC                 push    ecx
.text:00001BED                 mov     edx, [ebp+arg_0]
.text:00001BF0                 push    edx
.text:00001BF1                 call    _dlg_checkbox_set
.text:00001BF6                 add     esp, 0Ch
.text:00001BF9                 jmp     short loc_1C25
.text:00001BFB ; ---------------------------------------------------------------------------
.text:00001BFB
.text:00001BFB loc_1BFB:                               ; CODE XREF: _variable_pitch_handler+7j
.text:00001BFB                 cmp     [ebp+arg_C], 2
.text:00001BFF                 jnz     short loc_1C25
.text:00001C01                 mov     eax, [ebp+arg_4]
.text:00001C04                 push    eax
.text:00001C05                 mov     ecx, [ebp+arg_0]
.text:00001C08                 push    ecx
.text:00001C09                 call    _dlg_checkbox_get
.text:00001C0E                 add     esp, 8
.text:00001C11                 neg     eax
.text:00001C13                 sbb     eax, eax
.text:00001C15                 add     eax, 1
.text:00001C18                 push    eax
.text:00001C19                 mov     edx, [ebp+arg_4]
.text:00001C1C                 push    edx
.text:00001C1D                 call    _dlg_set_fixed_pitch_flag
.text:00001C22                 add     esp, 8
.text:00001C25
.text:00001C25 loc_1C25:                               ; CODE XREF: _variable_pitch_handler+2Dj
.text:00001C25                                         ; _variable_pitch_handler+33j
.text:00001C25                 cmp     ebp, esp
.text:00001C27                 call    __RTC_CheckEsp
.text:00001C2C                 pop     ebp
.text:00001C2D                 retn
.text:00001C2D _variable_pitch_handler endp
.text:00001C2D
.text:00001C2D ; ---------------------------------------------------------------------------
.text:00001C2E                 align 10h
.text:00001C2E _text           ends
.text:00001C2E
.rtc$TMZ:00001C30 ; ===========================================================================
.rtc$TMZ:00001C30
.rtc$TMZ:00001C30 ; Segment type: Pure data
.rtc$TMZ:00001C30 ; Segment permissions: Read
.rtc$TMZ:00001C30 _rtc$TMZ        segment dword public 'DATA' use32
.rtc$TMZ:00001C30                 assume cs:_rtc$TMZ
.rtc$TMZ:00001C30                 ;org 1C30h
.rtc$TMZ:00001C30 ; COMDAT (pick any)
.rtc$TMZ:00001C30 __RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
.rtc$TMZ:00001C30 _rtc$TMZ        ends
.rtc$TMZ:00001C30
.rtc$IMZ:00001C34 ; ===========================================================================
.rtc$IMZ:00001C34
.rtc$IMZ:00001C34 ; Segment type: Pure data
.rtc$IMZ:00001C34 ; Segment permissions: Read
.rtc$IMZ:00001C34 _rtc$IMZ        segment dword public 'DATA' use32
.rtc$IMZ:00001C34                 assume cs:_rtc$IMZ
.rtc$IMZ:00001C34                 ;org 1C34h
.rtc$IMZ:00001C34 ; COMDAT (pick any)
.rtc$IMZ:00001C34 __RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
.rtc$IMZ:00001C34 _rtc$IMZ        ends
.rtc$IMZ:00001C34
UNDEF:00001C40 ; ===========================================================================
UNDEF:00001C40
UNDEF:00001C40 ; Segment type: Externs
UNDEF:00001C40 ; UNDEF
UNDEF:00001C40                 extrn _backend_from_proto:near
UNDEF:00001C40                                         ; CODE XREF: _win_setup_config_box+D6Ep
UNDEF:00001C44                 extrn _ser_setup_config_box:near
UNDEF:00001C44                                         ; CODE XREF: _win_setup_config_box+D5Ep
UNDEF:00001C48                 extrn _conf_editbox_handler:near
UNDEF:00001C48                                         ; DATA XREF: _win_setup_config_box+D00o
UNDEF:00001C4C                 extrn _safemalloc:near  ; CODE XREF: _win_setup_config_box+7CCp
UNDEF:00001C50                 extrn _safefree:near    ; CODE XREF: _win_setup_config_box+653p
UNDEF:00001C50                                         ; _win_setup_config_box+D27p
UNDEF:00001C54                 extrn _dupprintf:near   ; CODE XREF: _win_setup_config_box+627p
UNDEF:00001C58                 extrn _appname:near     ; DATA XREF: _win_setup_config_box+61Cr
UNDEF:00001C5C                 extrn _ctrl_text:near   ; CODE XREF: _win_setup_config_box+614p
UNDEF:00001C60                 extrn _ctrl_radiobuttons:near
UNDEF:00001C60                                         ; CODE XREF: _win_setup_config_box+475p
UNDEF:00001C60                                         ; _win_setup_config_box+588p ...
UNDEF:00001C64                 extrn _ctrl_filesel:near
UNDEF:00001C64                                         ; CODE XREF: _win_setup_config_box+410p
UNDEF:00001C64                                         ; _win_setup_config_box+DCDp
UNDEF:00001C68                 extrn _conf_filesel_handler:near
UNDEF:00001C68                                         ; DATA XREF: _win_setup_config_box+3E6o
UNDEF:00001C68                                         ; _win_setup_config_box+DA6o
UNDEF:00001C6C                 extrn _dupstr:near      ; CODE XREF: _win_setup_config_box+304p
UNDEF:00001C6C                                         ; _win_setup_config_box+321p ...
UNDEF:00001C70                 extrn _saferealloc:near ; CODE XREF: _win_setup_config_box+2F1p
UNDEF:00001C70                                         ; _win_setup_config_box+349p ...
UNDEF:00001C74                 extrn __wassert:near    ; CODE XREF: _win_setup_config_box+2CAp
UNDEF:00001C74                                         ; _win_setup_config_box+6C2p ...
UNDEF:00001C78                 extrn _conf_radiobutton_handler:near
UNDEF:00001C78                                         ; DATA XREF: _win_setup_config_box+2B2o
UNDEF:00001C78                                         ; _win_setup_config_box+455o ...
UNDEF:00001C7C ; void *__cdecl memmove(void *, const void *, size_t)
UNDEF:00001C7C                 extrn _memmove:near     ; CODE XREF: _win_setup_config_box+1A9p
UNDEF:00001C7C                                         ; _win_setup_config_box+96Ap
UNDEF:00001C80                 extrn _ctrl_checkbox:near
UNDEF:00001C80                                         ; CODE XREF: _win_setup_config_box+112p
UNDEF:00001C80                                         ; _win_setup_config_box+20Fp ...
UNDEF:00001C84                 extrn _conf_checkbox_handler:near
UNDEF:00001C84                                         ; DATA XREF: _win_setup_config_box+F4o
UNDEF:00001C84                                         ; _win_setup_config_box+1F1o ...
UNDEF:00001C88                 extrn _I:near           ; CODE XREF: _win_setup_config_box+EBp
UNDEF:00001C88                                         ; _win_setup_config_box+1E8p ...
UNDEF:00001C8C                 extrn _ctrl_pushbutton:near
UNDEF:00001C8C                                         ; CODE XREF: _win_setup_config_box+73p
UNDEF:00001C8C                                         ; _win_setup_config_box+B6p
UNDEF:00001C90                 extrn _P:near           ; CODE XREF: _win_setup_config_box+4Fp
UNDEF:00001C90                                         ; _win_setup_config_box+5Fp ...
UNDEF:00001C94                 extrn _ctrl_getset:near ; CODE XREF: _win_setup_config_box+40p
UNDEF:00001C94                                         ; _win_setup_config_box+DEp ...
UNDEF:00001C98                 extrn __RTC_CheckEsp:near
UNDEF:00001C98                                         ; CODE XREF: _win_setup_config_box+DDAp
UNDEF:00001C98                                         ; _about_handler+2Dp ...
UNDEF:00001C9C                 extrn __RTC_Shutdown:near
UNDEF:00001C9C                                         ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
UNDEF:00001CA0                 extrn __RTC_InitBase:near
UNDEF:00001CA0                                         ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
UNDEF:00001CA4                 extrn _modal_about_box:near ; CODE XREF: _about_handler+20p
UNDEF:00001CA8                 extrn _show_help:near   ; CODE XREF: _help_handler+20p
UNDEF:00001CAC                 extrn _dlg_set_fixed_pitch_flag:near
UNDEF:00001CAC                                         ; CODE XREF: _variable_pitch_handler+51p
UNDEF:00001CB0                 extrn _dlg_checkbox_get:near
UNDEF:00001CB0                                         ; CODE XREF: _variable_pitch_handler+3Dp
UNDEF:00001CB4                 extrn _dlg_checkbox_set:near
UNDEF:00001CB4                                         ; CODE XREF: _variable_pitch_handler+25p
UNDEF:00001CB8                 extrn _dlg_get_fixed_pitch_flag:near
UNDEF:00001CB8                                         ; CODE XREF: _variable_pitch_handler+Dp
UNDEF:00001CB8
UNDEF:00001CB8
UNDEF:00001CB8                 end
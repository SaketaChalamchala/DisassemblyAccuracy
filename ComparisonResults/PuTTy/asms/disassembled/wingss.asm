.data:00000000 ;
.data:00000000 ; +-------------------------------------------------------------------------+
.data:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.data:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.data:00000000 ; |                      License info: 48-3677-7074-51                      |
.data:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.data:00000000 ; +-------------------------------------------------------------------------+
.data:00000000 ;
.data:00000000 ; Input MD5   : CBD5E96E59C25302F858AD431C7D883B
.data:00000000 ; Input CRC32 : 7B04087B
.data:00000000
.data:00000000 ; File Name   : C:\workspace\Putty\windows\VS2010\putty\Debug\wingss.obj
.data:00000000 ; Format      : COFF (X386MAGIC)
.data:00000000 ; includelib "uuid.lib"
.data:00000000 ; includelib "LIBCMTD"
.data:00000000 ; includelib "OLDNAMES"
.data:00000000
.data:00000000                 .686p
.data:00000000                 .mmx
.data:00000000                 .model flat
.data:00000000
.data:00000000 ; ===========================================================================
.data:00000000
.data:00000000 ; Segment type: Pure data
.data:00000000 ; Segment permissions: Read/Write
.data:00000000 ; Segment alignment 'qword' can not be represented in assembly
.data:00000000 _data           segment para public 'DATA' use32
.data:00000000                 assume cs:_data
.data:00000000 $SG87085        db 'MIT Kerberos GSSAPI32.DLL',0
.data:00000000                                         ; DATA XREF: .rdata:_gsslibnameso
.data:0000001A                 align 4
.data:0000001C $SG87086        db 'Microsoft SSPI SECUR32.DLL',0
.data:0000001C                                         ; DATA XREF: .rdata:0000066Co
.data:00000037                 align 4
.data:00000038 $SG87087        db 'User-specified GSSAPI DLL',0
.data:00000038                                         ; DATA XREF: .rdata:00000670o
.data:00000052                 align 4
.data:00000054 $SG87088        db 'gssapi32',0         ; DATA XREF: .rdata:_gsslibkeywordso
.data:0000005D                 align 10h
.data:00000060 $SG87089        db 'sspi',0             ; DATA XREF: .rdata:00000684o
.data:00000065                 align 4
.data:00000068 $SG87090        db 'custom',0           ; DATA XREF: .rdata:00000694o
.data:0000006F                 align 10h
.data:00000070 $SG87145        db  2Ah ; *             ; DATA XREF: .rdata:off_6A8o
.data:00000071                 db  86h ; å
.data:00000072                 db  48h ; H
.data:00000073                 db  86h ; å
.data:00000074                 db 0F7h ; ˜
.data:00000075                 db  12h
.data:00000076                 db    1
.data:00000077                 db    2
.data:00000078                 db    2
.data:00000079                 db    0
.data:0000007A                 db    0
.data:0000007B                 db    0
.data:0000007C ; CHAR _SG87167[]
.data:0000007C $SG87167        db 'SOFTWARE\MIT\Kerberos',0 ; DATA XREF: _ssh_gss_setup+4Eo
.data:00000092                 align 4
.data:00000094 ; CHAR _SG87174[]
.data:00000094 $SG87174        db 'InstallDir',0       ; DATA XREF: _ssh_gss_setup+7Bo
.data:0000009F                 align 10h
.data:000000A0 ; CHAR _SG87179[]
.data:000000A0 $SG87179        db 'InstallDir',0       ; DATA XREF: _ssh_gss_setup+C8o
.data:000000AB                 align 4
.data:000000AC ; char _SG87181[]
.data:000000AC $SG87181        db '\bin\gssapi32.dll',0 ; DATA XREF: _ssh_gss_setup+EDo
.data:000000BE                 align 10h
.data:000000C0 $SG87184        db 'Using GSSAPI from GSSAPI32.DLL',0
.data:000000C0                                         ; DATA XREF: _ssh_gss_setup+169o
.data:000000DF                 align 10h
.data:000000E0 ; CHAR _SG87187[]
.data:000000E0 $SG87187        db 'gss_delete_sec_context',0
.data:000000E0                                         ; DATA XREF: _ssh_gss_setup+17Bo
.data:000000F7                 align 4
.data:000000F8 ; CHAR _SG87189[]
.data:000000F8 $SG87189        db 'gss_display_status',0 ; DATA XREF: _ssh_gss_setup+199o
.data:0000010B                 align 4
.data:0000010C ; CHAR _SG87191[]
.data:0000010C $SG87191        db 'gss_get_mic',0      ; DATA XREF: _ssh_gss_setup+1B7o
.data:00000118 ; CHAR _SG87193[]
.data:00000118 $SG87193        db 'gss_import_name',0  ; DATA XREF: _ssh_gss_setup+1D5o
.data:00000128 ; CHAR _SG87195[]
.data:00000128 $SG87195        db 'gss_init_sec_context',0 ; DATA XREF: _ssh_gss_setup+1F3o
.data:0000013D                 align 10h
.data:00000140 ; CHAR _SG87197[]
.data:00000140 $SG87197        db 'gss_release_buffer',0 ; DATA XREF: _ssh_gss_setup+211o
.data:00000153                 align 4
.data:00000154 ; CHAR _SG87199[]
.data:00000154 $SG87199        db 'gss_release_cred',0 ; DATA XREF: _ssh_gss_setup+22Fo
.data:00000165                 align 4
.data:00000168 ; CHAR _SG87201[]
.data:00000168 $SG87201        db 'gss_release_name',0 ; DATA XREF: _ssh_gss_setup+24Do
.data:00000179                 align 4
.data:0000017C $SG87202        db 'secur32.dll',0      ; DATA XREF: _ssh_gss_setup:loc_941o
.data:00000188 $SG87205        db 'Using SSPI from SECUR32.DLL',0
.data:00000188                                         ; DATA XREF: _ssh_gss_setup+2BBo
.data:000001A4 ; CHAR _SG87209[]
.data:000001A4 $SG87209        db 'AcquireCredentialsHandleA',0
.data:000001A4                                         ; DATA XREF: _ssh_gss_setup+2D3o
.data:000001BE                 align 10h
.data:000001C0 ; CHAR _SG87212[]
.data:000001C0 $SG87212        db 'InitializeSecurityContextA',0
.data:000001C0                                         ; DATA XREF: _ssh_gss_setup+306o
.data:000001DB                 align 4
.data:000001DC ; CHAR _SG87215[]
.data:000001DC $SG87215        db 'FreeContextBuffer',0 ; DATA XREF: _ssh_gss_setup+339o
.data:000001EE                 align 10h
.data:000001F0 ; CHAR _SG87218[]
.data:000001F0 $SG87218        db 'FreeCredentialsHandle',0 ; DATA XREF: _ssh_gss_setup+36Bo
.data:00000206                 align 4
.data:00000208 ; CHAR _SG87221[]
.data:00000208 $SG87221        db 'DeleteSecurityContext',0 ; DATA XREF: _ssh_gss_setup+39Eo
.data:0000021E                 align 10h
.data:00000220 ; CHAR _SG87224[]
.data:00000220 $SG87224        db 'QueryContextAttributesA',0
.data:00000220                                         ; DATA XREF: _ssh_gss_setup+3D1o
.data:00000238 ; CHAR _SG87227[]
.data:00000238 $SG87227        db 'MakeSignature',0    ; DATA XREF: _ssh_gss_setup+403o
.data:00000246                 align 4
.data:00000248 $SG87232        db 'Using GSSAPI from user-specified library ',27h,'%s',27h,0
.data:00000248                                         ; DATA XREF: _ssh_gss_setup+4ABo
.data:00000276                 align 4
.data:00000278 ; CHAR _SG87235[]
.data:00000278 $SG87235        db 'gss_delete_sec_context',0
.data:00000278                                         ; DATA XREF: _ssh_gss_setup+4C9o
.data:0000028F                 align 10h
.data:00000290 ; CHAR _SG87237[]
.data:00000290 $SG87237        db 'gss_display_status',0 ; DATA XREF: _ssh_gss_setup+4E7o
.data:000002A3                 align 4
.data:000002A4 ; CHAR _SG87239[]
.data:000002A4 $SG87239        db 'gss_get_mic',0      ; DATA XREF: _ssh_gss_setup+505o
.data:000002B0 ; CHAR _SG87241[]
.data:000002B0 $SG87241        db 'gss_import_name',0  ; DATA XREF: _ssh_gss_setup+523o
.data:000002C0 ; CHAR _SG87243[]
.data:000002C0 $SG87243        db 'gss_init_sec_context',0 ; DATA XREF: _ssh_gss_setup+541o
.data:000002D5                 align 4
.data:000002D8 ; CHAR _SG87245[]
.data:000002D8 $SG87245        db 'gss_release_buffer',0 ; DATA XREF: _ssh_gss_setup+55Fo
.data:000002EB                 align 4
.data:000002EC ; CHAR _SG87247[]
.data:000002EC $SG87247        db 'gss_release_cred',0 ; DATA XREF: _ssh_gss_setup+57Do
.data:000002FD                 align 10h
.data:00000300 ; CHAR _SG87249[]
.data:00000300 $SG87249        db 'gss_release_name',0 ; DATA XREF: _ssh_gss_setup+59Bo
.data:00000311                 align 4
.data:00000314 $SG87278        db 'host/',0            ; DATA XREF: _ssh_sspi_import_name+1Eo
.data:0000031A                 align 4
.data:0000031C $SG87297        db 'Kerberos',0         ; DATA XREF: _ssh_sspi_acquire_cred+62o
.data:00000325                 align 4
.data:00000328 $SG87384        db 'SSPI status OK',0   ; DATA XREF: _ssh_sspi_display_status:loc_12B2o
.data:00000337                 align 4
.data:00000338 $SG87387        db 'The handle passed to the function is invalid.',0
.data:00000338                                         ; DATA XREF: _ssh_sspi_display_status:loc_12BBo
.data:00000366                 align 4
.data:00000368 $SG87390        db 'The target was not recognized.',0
.data:00000368                                         ; DATA XREF: _ssh_sspi_display_status:loc_12C4o
.data:00000387                 align 4
.data:00000388 $SG87393        db 'The logon failed.',0
.data:00000388                                         ; DATA XREF: _ssh_sspi_display_status:loc_12CDo
.data:0000039A                 align 4
.data:0000039C $SG87396        db 'The Local Security Authority cannot be contacted.',0
.data:0000039C                                         ; DATA XREF: _ssh_sspi_display_status:loc_12D6o
.data:000003CE                 align 10h
.data:000003D0 $SG87399        db 'No credentials are available in the security package.',0
.data:000003D0                                         ; DATA XREF: _ssh_sspi_display_status:loc_12DFo
.data:00000406                 align 4
.data:00000408 $SG87402        db 'No authority could be contacted for authentication.The domain nam'
.data:00000408                                         ; DATA XREF: _ssh_sspi_display_status:loc_12E8o
.data:00000408                 db 'e of the authenticating party could be wrong, the domain could be'
.data:00000408                 db ' unreachable, or there might have been a trust relationship failu'
.data:00000408                 db 're.',0
.data:000004CF                 align 10h
.data:000004D0 $SG87405        db 'One or more of the SecBufferDesc structures passed as an OUT para'
.data:000004D0                                         ; DATA XREF: _ssh_sspi_display_status:loc_12F1o
.data:000004D0                 db 'meter has a buffer that is too small.',0
.data:00000537                 align 4
.data:00000538 $SG87408        db 'The error is due to a malformed input token, such as a token corr'
.data:00000538                                         ; DATA XREF: _ssh_sspi_display_status:loc_12FAo
.data:00000538                 db 'upted in transit, a token of incorrect size, or a token passed in'
.data:00000538                 db 'to the wrong security package. Passing a token to the wrong packa'
.data:00000538                 db 'ge can happen if client and server did not negotiate the proper s'
.data:00000538                 db 'ecurity package.',0
.data:0000064D                 align 10h
.data:00000650 $SG87410        db 'Internal SSPI error',0
.data:00000650                                         ; DATA XREF: _ssh_sspi_display_status:loc_1303o
.data:00000650 _data           ends
.data:00000650
.rdata:00000664 ; ===========================================================================
.rdata:00000664
.rdata:00000664 ; Segment type: Pure data
.rdata:00000664 ; Segment permissions: Read
.rdata:00000664 _rdata          segment dword public 'DATA' use32
.rdata:00000664                 assume cs:_rdata
.rdata:00000664                 ;org 664h
.rdata:00000664                 public _ngsslibs
.rdata:00000664 _ngsslibs       db    3
.rdata:00000665                 db    0
.rdata:00000666                 db    0
.rdata:00000667                 db    0
.rdata:00000668                 public _gsslibnames
.rdata:00000668 _gsslibnames    dd offset $SG87085      ; "MIT Kerberos GSSAPI32.DLL"
.rdata:0000066C                 dd offset $SG87086      ; "Microsoft SSPI SECUR32.DLL"
.rdata:00000670                 dd offset $SG87087      ; "User-specified GSSAPI DLL"
.rdata:00000674                 public _gsslibkeywords
.rdata:00000674 _gsslibkeywords dd offset $SG87088      ; "gssapi32"
.rdata:00000678                 db    0
.rdata:00000679                 db    0
.rdata:0000067A                 db    0
.rdata:0000067B                 db    0
.rdata:0000067C                 db 0FFh
.rdata:0000067D                 db 0FFh
.rdata:0000067E                 db 0FFh
.rdata:0000067F                 db 0FFh
.rdata:00000680                 db 0FFh
.rdata:00000681                 db 0FFh
.rdata:00000682                 db 0FFh
.rdata:00000683                 db 0FFh
.rdata:00000684                 dd offset $SG87089      ; "sspi"
.rdata:00000688                 db    1
.rdata:00000689                 db    0
.rdata:0000068A                 db    0
.rdata:0000068B                 db    0
.rdata:0000068C                 db 0FFh
.rdata:0000068D                 db 0FFh
.rdata:0000068E                 db 0FFh
.rdata:0000068F                 db 0FFh
.rdata:00000690                 db 0FFh
.rdata:00000691                 db 0FFh
.rdata:00000692                 db 0FFh
.rdata:00000693                 db 0FFh
.rdata:00000694                 dd offset $SG87090      ; "custom"
.rdata:00000698                 db    2
.rdata:00000699                 db    0
.rdata:0000069A                 db    0
.rdata:0000069B                 db    0
.rdata:0000069C                 db 0FFh
.rdata:0000069D                 db 0FFh
.rdata:0000069E                 db 0FFh
.rdata:0000069F                 db 0FFh
.rdata:000006A0                 db 0FFh
.rdata:000006A1                 db 0FFh
.rdata:000006A2                 db 0FFh
.rdata:000006A3                 db 0FFh
.rdata:000006A4                 public _gss_mech_krb5
.rdata:000006A4 _gss_mech_krb5  dd 9                    ; DATA XREF: _ssh_sspi_indicate_mech+6r
.rdata:000006A8 off_6A8         dd offset $SG87145      ; DATA XREF: _ssh_sspi_indicate_mech+Er
.rdata:000006A8 _rdata          ends
.rdata:000006A8
.bss:000006AC ; ===========================================================================
.bss:000006AC
.bss:000006AC ; Segment type: Uninitialized
.bss:000006AC ; Segment permissions: Read/Write
.bss:000006AC _bss            segment dword public 'BSS' use32
.bss:000006AC                 assume cs:_bss
.bss:000006AC                 ;org 6ACh
.bss:000006AC                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.bss:000006AC _p_FreeContextBuffer dd ?               ; DATA XREF: _ssh_gss_setup+35Ew
.bss:000006AC                                         ; _ssh_sspi_free_tok+1Ar
.bss:000006B0 _p_InitializeSecurityContextA dd ?      ; DATA XREF: _ssh_gss_setup+32Bw
.bss:000006B0                                         ; _ssh_sspi_init_sec_context+CCr
.bss:000006B4 _p_DeleteSecurityContext dd ?           ; DATA XREF: _ssh_gss_setup+3C3w
.bss:000006B4                                         ; _ssh_sspi_release_cred+40r
.bss:000006B8 _p_FreeCredentialsHandle dd ?           ; DATA XREF: _ssh_gss_setup+390w
.bss:000006B8                                         ; _ssh_sspi_release_cred+2Ar
.bss:000006BC _p_AcquireCredentialsHandleA dd ?       ; DATA XREF: _ssh_gss_setup+2F8w
.bss:000006BC                                         ; _ssh_sspi_acquire_cred+69r
.bss:000006C0 _p_QueryContextAttributesA dd ?         ; DATA XREF: _ssh_gss_setup+3F6w
.bss:000006C0                                         ; _ssh_sspi_get_mic+5Fr
.bss:000006C4 _p_MakeSignature dd ?                   ; DATA XREF: _ssh_gss_setup+428w
.bss:000006C4                                         ; _ssh_sspi_get_mic+E4r
.bss:000006C8                 public _gsslogmsg
.bss:000006C8 _gsslogmsg      db    ? ;
.bss:000006C9                 db    ? ;
.bss:000006CA                 db    ? ;
.bss:000006CB                 db    ? ;
.bss:000006CB _bss            ends
.bss:000006CB
.text:000006CC ; ===========================================================================
.text:000006CC
.text:000006CC ; Segment type: Pure code
.text:000006CC ; Segment permissions: Read/Execute
.text:000006CC _text           segment para public 'CODE' use32
.text:000006CC                 assume cs:_text
.text:000006CC                 ;org 6CCh
.text:000006CC                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text:000006CC
.text:000006CC ; =============== S U B R O U T I N E =======================================
.text:000006CC
.text:000006CC ; Attributes: bp-based frame
.text:000006CC
.text:000006CC                 public _ssh_gss_setup
.text:000006CC _ssh_gss_setup  proc near
.text:000006CC
.text:000006CC var_60          = dword ptr -60h
.text:000006CC var_5C          = dword ptr -5Ch
.text:000006CC var_58          = dword ptr -58h
.text:000006CC var_54          = dword ptr -54h
.text:000006CC var_50          = dword ptr -50h
.text:000006CC var_4C          = dword ptr -4Ch
.text:000006CC var_48          = dword ptr -48h
.text:000006CC var_44          = dword ptr -44h
.text:000006CC var_40          = dword ptr -40h
.text:000006CC var_3C          = dword ptr -3Ch
.text:000006CC lpData          = dword ptr -38h
.text:000006CC var_34          = dword ptr -34h
.text:000006CC cbData          = dword ptr -2Ch
.text:000006CC Type            = dword ptr -20h
.text:000006CC lpLibFileName   = dword ptr -18h
.text:000006CC var_14          = dword ptr -14h
.text:000006CC phkResult       = dword ptr -0Ch
.text:000006CC hModule         = dword ptr -4
.text:000006CC arg_0           = dword ptr  8
.text:000006CC
.text:000006CC                 push    ebp
.text:000006CD                 mov     ebp, esp
.text:000006CF                 sub     esp, 60h
.text:000006D2                 push    esi
.text:000006D3                 push    edi
.text:000006D4                 lea     edi, [ebp+var_60]
.text:000006D7                 mov     ecx, 18h
.text:000006DC                 mov     eax, 0CCCCCCCCh
.text:000006E1                 rep stosd
.text:000006E3                 push    8
.text:000006E5                 push    1
.text:000006E7                 call    _safemalloc
.text:000006EC                 add     esp, 8
.text:000006EF                 mov     [ebp+var_14], eax
.text:000006F2                 push    54h ; 'T'
.text:000006F4                 push    3
.text:000006F6                 call    _safemalloc
.text:000006FB                 add     esp, 8
.text:000006FE                 mov     ecx, [ebp+var_14]
.text:00000701                 mov     [ecx], eax
.text:00000703                 mov     edx, [ebp+var_14]
.text:00000706                 mov     dword ptr [edx+4], 0
.text:0000070D                 mov     [ebp+hModule], 0
.text:00000714                 mov     esi, esp
.text:00000716                 lea     eax, [ebp+phkResult]
.text:00000719                 push    eax             ; phkResult
.text:0000071A                 push    offset $SG87167 ; "SOFTWARE\\MIT\\Kerberos"
.text:0000071F                 push    80000002h       ; hKey
.text:00000724                 call    dword ptr ds:__imp__RegOpenKeyA@12 ; RegOpenKeyA(x,x,x)
.text:0000072A                 cmp     esi, esp
.text:0000072C                 call    __RTC_CheckEsp
.text:00000731                 test    eax, eax
.text:00000733                 jnz     loc_7FF
.text:00000739                 mov     esi, esp
.text:0000073B                 lea     ecx, [ebp+cbData]
.text:0000073E                 push    ecx             ; lpcbData
.text:0000073F                 push    0               ; lpData
.text:00000741                 lea     edx, [ebp+Type]
.text:00000744                 push    edx             ; lpType
.text:00000745                 push    0               ; lpReserved
.text:00000747                 push    offset $SG87174 ; "InstallDir"
.text:0000074C                 mov     eax, [ebp+phkResult]
.text:0000074F                 push    eax             ; hKey
.text:00000750                 call    dword ptr ds:__imp__RegQueryValueExA@24 ; RegQueryValueExA(x,x,x,x,x,x)
.text:00000756                 cmp     esi, esp
.text:00000758                 call    __RTC_CheckEsp
.text:0000075D                 mov     [ebp+var_34], eax
.text:00000760                 cmp     [ebp+var_34], 0
.text:00000764                 jnz     loc_7EC
.text:0000076A                 cmp     [ebp+Type], 1
.text:0000076E                 jnz     short loc_7EC
.text:00000770                 push    1
.text:00000772                 mov     ecx, [ebp+cbData]
.text:00000775                 add     ecx, 14h
.text:00000778                 push    ecx
.text:00000779                 call    _safemalloc
.text:0000077E                 add     esp, 8
.text:00000781                 mov     [ebp+lpData], eax
.text:00000784                 mov     esi, esp
.text:00000786                 lea     edx, [ebp+cbData]
.text:00000789                 push    edx             ; lpcbData
.text:0000078A                 mov     eax, [ebp+lpData]
.text:0000078D                 push    eax             ; lpData
.text:0000078E                 lea     ecx, [ebp+Type]
.text:00000791                 push    ecx             ; lpType
.text:00000792                 push    0               ; lpReserved
.text:00000794                 push    offset $SG87179 ; "InstallDir"
.text:00000799                 mov     edx, [ebp+phkResult]
.text:0000079C                 push    edx             ; hKey
.text:0000079D                 call    dword ptr ds:__imp__RegQueryValueExA@24 ; RegQueryValueExA(x,x,x,x,x,x)
.text:000007A3                 cmp     esi, esp
.text:000007A5                 call    __RTC_CheckEsp
.text:000007AA                 mov     [ebp+var_34], eax
.text:000007AD                 cmp     [ebp+var_34], 0
.text:000007B1                 jnz     short loc_7E0
.text:000007B3                 cmp     [ebp+Type], 1
.text:000007B7                 jnz     short loc_7E0
.text:000007B9                 push    offset $SG87181 ; "\\bin\\gssapi32.dll"
.text:000007BE                 mov     eax, [ebp+lpData]
.text:000007C1                 push    eax             ; Dest
.text:000007C2                 call    _strcat
.text:000007C7                 add     esp, 8
.text:000007CA                 mov     esi, esp
.text:000007CC                 mov     ecx, [ebp+lpData]
.text:000007CF                 push    ecx             ; lpLibFileName
.text:000007D0                 call    dword ptr ds:__imp__LoadLibraryA@4 ; LoadLibraryA(x)
.text:000007D6                 cmp     esi, esp
.text:000007D8                 call    __RTC_CheckEsp
.text:000007DD                 mov     [ebp+hModule], eax
.text:000007E0
.text:000007E0 loc_7E0:                                ; CODE XREF: _ssh_gss_setup+E5j
.text:000007E0                                         ; _ssh_gss_setup+EBj
.text:000007E0                 mov     edx, [ebp+lpData]
.text:000007E3                 push    edx
.text:000007E4                 call    _safefree
.text:000007E9                 add     esp, 4
.text:000007EC
.text:000007EC loc_7EC:                                ; CODE XREF: _ssh_gss_setup+98j
.text:000007EC                                         ; _ssh_gss_setup+A2j
.text:000007EC                 mov     esi, esp
.text:000007EE                 mov     eax, [ebp+phkResult]
.text:000007F1                 push    eax             ; hKey
.text:000007F2                 call    dword ptr ds:__imp__RegCloseKey@4 ; RegCloseKey(x)
.text:000007F8                 cmp     esi, esp
.text:000007FA                 call    __RTC_CheckEsp
.text:000007FF
.text:000007FF loc_7FF:                                ; CODE XREF: _ssh_gss_setup+67j
.text:000007FF                 cmp     [ebp+hModule], 0
.text:00000803                 jz      loc_941
.text:00000809                 mov     ecx, [ebp+var_14]
.text:0000080C                 mov     edx, [ecx+4]
.text:0000080F                 imul    edx, 54h
.text:00000812                 mov     eax, [ebp+var_14]
.text:00000815                 add     edx, [eax]
.text:00000817                 mov     [ebp+var_3C], edx
.text:0000081A                 mov     ecx, [ebp+var_14]
.text:0000081D                 mov     edx, [ecx+4]
.text:00000820                 add     edx, 1
.text:00000823                 mov     eax, [ebp+var_14]
.text:00000826                 mov     [eax+4], edx
.text:00000829                 mov     ecx, [ebp+var_3C]
.text:0000082C                 mov     dword ptr [ecx], 0
.text:00000832                 mov     edx, [ebp+var_3C]
.text:00000835                 mov     dword ptr [edx+4], offset $SG87184 ; "Using GSSAPI from GSSAPI32.DLL"
.text:0000083C                 mov     eax, [ebp+var_3C]
.text:0000083F                 mov     ecx, [ebp+hModule]
.text:00000842                 mov     [eax+50h], ecx
.text:00000845                 mov     esi, esp
.text:00000847                 push    offset $SG87187 ; "gss_delete_sec_context"
.text:0000084C                 mov     edx, [ebp+hModule]
.text:0000084F                 push    edx             ; hModule
.text:00000850                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:00000856                 cmp     esi, esp
.text:00000858                 call    __RTC_CheckEsp
.text:0000085D                 mov     ecx, [ebp+var_3C]
.text:00000860                 mov     [ecx+30h], eax
.text:00000863                 mov     esi, esp
.text:00000865                 push    offset $SG87189 ; "gss_display_status"
.text:0000086A                 mov     edx, [ebp+hModule]
.text:0000086D                 push    edx             ; hModule
.text:0000086E                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:00000874                 cmp     esi, esp
.text:00000876                 call    __RTC_CheckEsp
.text:0000087B                 mov     ecx, [ebp+var_3C]
.text:0000087E                 mov     [ecx+34h], eax
.text:00000881                 mov     esi, esp
.text:00000883                 push    offset $SG87191 ; "gss_get_mic"
.text:00000888                 mov     edx, [ebp+hModule]
.text:0000088B                 push    edx             ; hModule
.text:0000088C                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:00000892                 cmp     esi, esp
.text:00000894                 call    __RTC_CheckEsp
.text:00000899                 mov     ecx, [ebp+var_3C]
.text:0000089C                 mov     [ecx+38h], eax
.text:0000089F                 mov     esi, esp
.text:000008A1                 push    offset $SG87193 ; "gss_import_name"
.text:000008A6                 mov     edx, [ebp+hModule]
.text:000008A9                 push    edx             ; hModule
.text:000008AA                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:000008B0                 cmp     esi, esp
.text:000008B2                 call    __RTC_CheckEsp
.text:000008B7                 mov     ecx, [ebp+var_3C]
.text:000008BA                 mov     [ecx+3Ch], eax
.text:000008BD                 mov     esi, esp
.text:000008BF                 push    offset $SG87195 ; "gss_init_sec_context"
.text:000008C4                 mov     edx, [ebp+hModule]
.text:000008C7                 push    edx             ; hModule
.text:000008C8                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:000008CE                 cmp     esi, esp
.text:000008D0                 call    __RTC_CheckEsp
.text:000008D5                 mov     ecx, [ebp+var_3C]
.text:000008D8                 mov     [ecx+40h], eax
.text:000008DB                 mov     esi, esp
.text:000008DD                 push    offset $SG87197 ; "gss_release_buffer"
.text:000008E2                 mov     edx, [ebp+hModule]
.text:000008E5                 push    edx             ; hModule
.text:000008E6                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:000008EC                 cmp     esi, esp
.text:000008EE                 call    __RTC_CheckEsp
.text:000008F3                 mov     ecx, [ebp+var_3C]
.text:000008F6                 mov     [ecx+44h], eax
.text:000008F9                 mov     esi, esp
.text:000008FB                 push    offset $SG87199 ; "gss_release_cred"
.text:00000900                 mov     edx, [ebp+hModule]
.text:00000903                 push    edx             ; hModule
.text:00000904                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:0000090A                 cmp     esi, esp
.text:0000090C                 call    __RTC_CheckEsp
.text:00000911                 mov     ecx, [ebp+var_3C]
.text:00000914                 mov     [ecx+48h], eax
.text:00000917                 mov     esi, esp
.text:00000919                 push    offset $SG87201 ; "gss_release_name"
.text:0000091E                 mov     edx, [ebp+hModule]
.text:00000921                 push    edx             ; hModule
.text:00000922                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:00000928                 cmp     esi, esp
.text:0000092A                 call    __RTC_CheckEsp
.text:0000092F                 mov     ecx, [ebp+var_3C]
.text:00000932                 mov     [ecx+4Ch], eax
.text:00000935                 mov     edx, [ebp+var_3C]
.text:00000938                 push    edx
.text:00000939                 call    _ssh_gssapi_bind_fns
.text:0000093E                 add     esp, 4
.text:00000941
.text:00000941 loc_941:                                ; CODE XREF: _ssh_gss_setup+137j
.text:00000941                 push    offset $SG87202 ; "secur32.dll"
.text:00000946                 call    _load_system32_dll
.text:0000094B                 add     esp, 4
.text:0000094E                 mov     [ebp+hModule], eax
.text:00000951                 cmp     [ebp+hModule], 0
.text:00000955                 jz      loc_B06
.text:0000095B                 mov     eax, [ebp+var_14]
.text:0000095E                 mov     ecx, [eax+4]
.text:00000961                 imul    ecx, 54h
.text:00000964                 mov     edx, [ebp+var_14]
.text:00000967                 add     ecx, [edx]
.text:00000969                 mov     [ebp+var_40], ecx
.text:0000096C                 mov     eax, [ebp+var_14]
.text:0000096F                 mov     ecx, [eax+4]
.text:00000972                 add     ecx, 1
.text:00000975                 mov     edx, [ebp+var_14]
.text:00000978                 mov     [edx+4], ecx
.text:0000097B                 mov     eax, [ebp+var_40]
.text:0000097E                 mov     dword ptr [eax], 1
.text:00000984                 mov     ecx, [ebp+var_40]
.text:00000987                 mov     dword ptr [ecx+4], offset $SG87205 ; "Using SSPI from SECUR32.DLL"
.text:0000098E                 mov     edx, [ebp+var_40]
.text:00000991                 mov     eax, [ebp+hModule]
.text:00000994                 mov     [edx+50h], eax
.text:00000997                 cmp     [ebp+hModule], 0
.text:0000099B                 jz      short loc_9BA
.text:0000099D                 mov     esi, esp
.text:0000099F                 push    offset $SG87209 ; "AcquireCredentialsHandleA"
.text:000009A4                 mov     ecx, [ebp+hModule]
.text:000009A7                 push    ecx             ; hModule
.text:000009A8                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:000009AE                 cmp     esi, esp
.text:000009B0                 call    __RTC_CheckEsp
.text:000009B5                 mov     [ebp+var_48], eax
.text:000009B8                 jmp     short loc_9C1
.text:000009BA ; ---------------------------------------------------------------------------
.text:000009BA
.text:000009BA loc_9BA:                                ; CODE XREF: _ssh_gss_setup+2CFj
.text:000009BA                 mov     [ebp+var_48], 0
.text:000009C1
.text:000009C1 loc_9C1:                                ; CODE XREF: _ssh_gss_setup+2ECj
.text:000009C1                 mov     edx, [ebp+var_48]
.text:000009C4                 mov     ds:_p_AcquireCredentialsHandleA, edx
.text:000009CA                 cmp     [ebp+hModule], 0
.text:000009CE                 jz      short loc_9ED
.text:000009D0                 mov     esi, esp
.text:000009D2                 push    offset $SG87212 ; "InitializeSecurityContextA"
.text:000009D7                 mov     eax, [ebp+hModule]
.text:000009DA                 push    eax             ; hModule
.text:000009DB                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:000009E1                 cmp     esi, esp
.text:000009E3                 call    __RTC_CheckEsp
.text:000009E8                 mov     [ebp+var_4C], eax
.text:000009EB                 jmp     short loc_9F4
.text:000009ED ; ---------------------------------------------------------------------------
.text:000009ED
.text:000009ED loc_9ED:                                ; CODE XREF: _ssh_gss_setup+302j
.text:000009ED                 mov     [ebp+var_4C], 0
.text:000009F4
.text:000009F4 loc_9F4:                                ; CODE XREF: _ssh_gss_setup+31Fj
.text:000009F4                 mov     ecx, [ebp+var_4C]
.text:000009F7                 mov     ds:_p_InitializeSecurityContextA, ecx
.text:000009FD                 cmp     [ebp+hModule], 0
.text:00000A01                 jz      short loc_A20
.text:00000A03                 mov     esi, esp
.text:00000A05                 push    offset $SG87215 ; "FreeContextBuffer"
.text:00000A0A                 mov     edx, [ebp+hModule]
.text:00000A0D                 push    edx             ; hModule
.text:00000A0E                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:00000A14                 cmp     esi, esp
.text:00000A16                 call    __RTC_CheckEsp
.text:00000A1B                 mov     [ebp+var_50], eax
.text:00000A1E                 jmp     short loc_A27
.text:00000A20 ; ---------------------------------------------------------------------------
.text:00000A20
.text:00000A20 loc_A20:                                ; CODE XREF: _ssh_gss_setup+335j
.text:00000A20                 mov     [ebp+var_50], 0
.text:00000A27
.text:00000A27 loc_A27:                                ; CODE XREF: _ssh_gss_setup+352j
.text:00000A27                 mov     eax, [ebp+var_50]
.text:00000A2A                 mov     ds:_p_FreeContextBuffer, eax
.text:00000A2F                 cmp     [ebp+hModule], 0
.text:00000A33                 jz      short loc_A52
.text:00000A35                 mov     esi, esp
.text:00000A37                 push    offset $SG87218 ; "FreeCredentialsHandle"
.text:00000A3C                 mov     ecx, [ebp+hModule]
.text:00000A3F                 push    ecx             ; hModule
.text:00000A40                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:00000A46                 cmp     esi, esp
.text:00000A48                 call    __RTC_CheckEsp
.text:00000A4D                 mov     [ebp+var_54], eax
.text:00000A50                 jmp     short loc_A59
.text:00000A52 ; ---------------------------------------------------------------------------
.text:00000A52
.text:00000A52 loc_A52:                                ; CODE XREF: _ssh_gss_setup+367j
.text:00000A52                 mov     [ebp+var_54], 0
.text:00000A59
.text:00000A59 loc_A59:                                ; CODE XREF: _ssh_gss_setup+384j
.text:00000A59                 mov     edx, [ebp+var_54]
.text:00000A5C                 mov     ds:_p_FreeCredentialsHandle, edx
.text:00000A62                 cmp     [ebp+hModule], 0
.text:00000A66                 jz      short loc_A85
.text:00000A68                 mov     esi, esp
.text:00000A6A                 push    offset $SG87221 ; "DeleteSecurityContext"
.text:00000A6F                 mov     eax, [ebp+hModule]
.text:00000A72                 push    eax             ; hModule
.text:00000A73                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:00000A79                 cmp     esi, esp
.text:00000A7B                 call    __RTC_CheckEsp
.text:00000A80                 mov     [ebp+var_58], eax
.text:00000A83                 jmp     short loc_A8C
.text:00000A85 ; ---------------------------------------------------------------------------
.text:00000A85
.text:00000A85 loc_A85:                                ; CODE XREF: _ssh_gss_setup+39Aj
.text:00000A85                 mov     [ebp+var_58], 0
.text:00000A8C
.text:00000A8C loc_A8C:                                ; CODE XREF: _ssh_gss_setup+3B7j
.text:00000A8C                 mov     ecx, [ebp+var_58]
.text:00000A8F                 mov     ds:_p_DeleteSecurityContext, ecx
.text:00000A95                 cmp     [ebp+hModule], 0
.text:00000A99                 jz      short loc_AB8
.text:00000A9B                 mov     esi, esp
.text:00000A9D                 push    offset $SG87224 ; "QueryContextAttributesA"
.text:00000AA2                 mov     edx, [ebp+hModule]
.text:00000AA5                 push    edx             ; hModule
.text:00000AA6                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:00000AAC                 cmp     esi, esp
.text:00000AAE                 call    __RTC_CheckEsp
.text:00000AB3                 mov     [ebp+var_5C], eax
.text:00000AB6                 jmp     short loc_ABF
.text:00000AB8 ; ---------------------------------------------------------------------------
.text:00000AB8
.text:00000AB8 loc_AB8:                                ; CODE XREF: _ssh_gss_setup+3CDj
.text:00000AB8                 mov     [ebp+var_5C], 0
.text:00000ABF
.text:00000ABF loc_ABF:                                ; CODE XREF: _ssh_gss_setup+3EAj
.text:00000ABF                 mov     eax, [ebp+var_5C]
.text:00000AC2                 mov     ds:_p_QueryContextAttributesA, eax
.text:00000AC7                 cmp     [ebp+hModule], 0
.text:00000ACB                 jz      short loc_AEA
.text:00000ACD                 mov     esi, esp
.text:00000ACF                 push    offset $SG87227 ; "MakeSignature"
.text:00000AD4                 mov     ecx, [ebp+hModule]
.text:00000AD7                 push    ecx             ; hModule
.text:00000AD8                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:00000ADE                 cmp     esi, esp
.text:00000AE0                 call    __RTC_CheckEsp
.text:00000AE5                 mov     [ebp+var_60], eax
.text:00000AE8                 jmp     short loc_AF1
.text:00000AEA ; ---------------------------------------------------------------------------
.text:00000AEA
.text:00000AEA loc_AEA:                                ; CODE XREF: _ssh_gss_setup+3FFj
.text:00000AEA                 mov     [ebp+var_60], 0
.text:00000AF1
.text:00000AF1 loc_AF1:                                ; CODE XREF: _ssh_gss_setup+41Cj
.text:00000AF1                 mov     edx, [ebp+var_60]
.text:00000AF4                 mov     ds:_p_MakeSignature, edx
.text:00000AFA                 mov     eax, [ebp+var_40]
.text:00000AFD                 push    eax
.text:00000AFE                 call    _ssh_sspi_bind_fns
.text:00000B03                 add     esp, 4
.text:00000B06
.text:00000B06 loc_B06:                                ; CODE XREF: _ssh_gss_setup+289j
.text:00000B06                 mov     [ebp+hModule], 0
.text:00000B0D                 push    28h ; '('
.text:00000B0F                 mov     ecx, [ebp+arg_0]
.text:00000B12                 push    ecx
.text:00000B13                 call    _conf_get_filename
.text:00000B18                 add     esp, 8
.text:00000B1B                 mov     edx, [eax]
.text:00000B1D                 mov     [ebp+lpLibFileName], edx
.text:00000B20                 mov     eax, [ebp+lpLibFileName]
.text:00000B23                 movsx   ecx, byte ptr [eax]
.text:00000B26                 test    ecx, ecx
.text:00000B28                 jz      short loc_B40
.text:00000B2A                 mov     esi, esp
.text:00000B2C                 mov     edx, [ebp+lpLibFileName]
.text:00000B2F                 push    edx             ; lpLibFileName
.text:00000B30                 call    dword ptr ds:__imp__LoadLibraryA@4 ; LoadLibraryA(x)
.text:00000B36                 cmp     esi, esp
.text:00000B38                 call    __RTC_CheckEsp
.text:00000B3D                 mov     [ebp+hModule], eax
.text:00000B40
.text:00000B40 loc_B40:                                ; CODE XREF: _ssh_gss_setup+45Cj
.text:00000B40                 cmp     [ebp+hModule], 0
.text:00000B44                 jz      loc_C8F
.text:00000B4A                 mov     eax, [ebp+var_14]
.text:00000B4D                 mov     ecx, [eax+4]
.text:00000B50                 imul    ecx, 54h
.text:00000B53                 mov     edx, [ebp+var_14]
.text:00000B56                 add     ecx, [edx]
.text:00000B58                 mov     [ebp+var_44], ecx
.text:00000B5B                 mov     eax, [ebp+var_14]
.text:00000B5E                 mov     ecx, [eax+4]
.text:00000B61                 add     ecx, 1
.text:00000B64                 mov     edx, [ebp+var_14]
.text:00000B67                 mov     [edx+4], ecx
.text:00000B6A                 mov     eax, [ebp+var_44]
.text:00000B6D                 mov     dword ptr [eax], 2
.text:00000B73                 mov     ecx, [ebp+lpLibFileName]
.text:00000B76                 push    ecx
.text:00000B77                 push    offset $SG87232 ; "Using GSSAPI from user-specified librar"...
.text:00000B7C                 call    _dupprintf
.text:00000B81                 add     esp, 8
.text:00000B84                 mov     edx, [ebp+var_44]
.text:00000B87                 mov     [edx+4], eax
.text:00000B8A                 mov     eax, [ebp+var_44]
.text:00000B8D                 mov     ecx, [ebp+hModule]
.text:00000B90                 mov     [eax+50h], ecx
.text:00000B93                 mov     esi, esp
.text:00000B95                 push    offset $SG87235 ; "gss_delete_sec_context"
.text:00000B9A                 mov     edx, [ebp+hModule]
.text:00000B9D                 push    edx             ; hModule
.text:00000B9E                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:00000BA4                 cmp     esi, esp
.text:00000BA6                 call    __RTC_CheckEsp
.text:00000BAB                 mov     ecx, [ebp+var_44]
.text:00000BAE                 mov     [ecx+30h], eax
.text:00000BB1                 mov     esi, esp
.text:00000BB3                 push    offset $SG87237 ; "gss_display_status"
.text:00000BB8                 mov     edx, [ebp+hModule]
.text:00000BBB                 push    edx             ; hModule
.text:00000BBC                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:00000BC2                 cmp     esi, esp
.text:00000BC4                 call    __RTC_CheckEsp
.text:00000BC9                 mov     ecx, [ebp+var_44]
.text:00000BCC                 mov     [ecx+34h], eax
.text:00000BCF                 mov     esi, esp
.text:00000BD1                 push    offset $SG87239 ; "gss_get_mic"
.text:00000BD6                 mov     edx, [ebp+hModule]
.text:00000BD9                 push    edx             ; hModule
.text:00000BDA                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:00000BE0                 cmp     esi, esp
.text:00000BE2                 call    __RTC_CheckEsp
.text:00000BE7                 mov     ecx, [ebp+var_44]
.text:00000BEA                 mov     [ecx+38h], eax
.text:00000BED                 mov     esi, esp
.text:00000BEF                 push    offset $SG87241 ; "gss_import_name"
.text:00000BF4                 mov     edx, [ebp+hModule]
.text:00000BF7                 push    edx             ; hModule
.text:00000BF8                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:00000BFE                 cmp     esi, esp
.text:00000C00                 call    __RTC_CheckEsp
.text:00000C05                 mov     ecx, [ebp+var_44]
.text:00000C08                 mov     [ecx+3Ch], eax
.text:00000C0B                 mov     esi, esp
.text:00000C0D                 push    offset $SG87243 ; "gss_init_sec_context"
.text:00000C12                 mov     edx, [ebp+hModule]
.text:00000C15                 push    edx             ; hModule
.text:00000C16                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:00000C1C                 cmp     esi, esp
.text:00000C1E                 call    __RTC_CheckEsp
.text:00000C23                 mov     ecx, [ebp+var_44]
.text:00000C26                 mov     [ecx+40h], eax
.text:00000C29                 mov     esi, esp
.text:00000C2B                 push    offset $SG87245 ; "gss_release_buffer"
.text:00000C30                 mov     edx, [ebp+hModule]
.text:00000C33                 push    edx             ; hModule
.text:00000C34                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:00000C3A                 cmp     esi, esp
.text:00000C3C                 call    __RTC_CheckEsp
.text:00000C41                 mov     ecx, [ebp+var_44]
.text:00000C44                 mov     [ecx+44h], eax
.text:00000C47                 mov     esi, esp
.text:00000C49                 push    offset $SG87247 ; "gss_release_cred"
.text:00000C4E                 mov     edx, [ebp+hModule]
.text:00000C51                 push    edx             ; hModule
.text:00000C52                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:00000C58                 cmp     esi, esp
.text:00000C5A                 call    __RTC_CheckEsp
.text:00000C5F                 mov     ecx, [ebp+var_44]
.text:00000C62                 mov     [ecx+48h], eax
.text:00000C65                 mov     esi, esp
.text:00000C67                 push    offset $SG87249 ; "gss_release_name"
.text:00000C6C                 mov     edx, [ebp+hModule]
.text:00000C6F                 push    edx             ; hModule
.text:00000C70                 call    dword ptr ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
.text:00000C76                 cmp     esi, esp
.text:00000C78                 call    __RTC_CheckEsp
.text:00000C7D                 mov     ecx, [ebp+var_44]
.text:00000C80                 mov     [ecx+4Ch], eax
.text:00000C83                 mov     edx, [ebp+var_44]
.text:00000C86                 push    edx
.text:00000C87                 call    _ssh_gssapi_bind_fns
.text:00000C8C                 add     esp, 4
.text:00000C8F
.text:00000C8F loc_C8F:                                ; CODE XREF: _ssh_gss_setup+478j
.text:00000C8F                 mov     eax, [ebp+var_14]
.text:00000C92                 push    edx
.text:00000C93                 mov     ecx, ebp
.text:00000C95                 push    eax
.text:00000C96                 lea     edx, $LN28
.text:00000C9C                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00000CA1                 pop     eax
.text:00000CA2                 pop     edx
.text:00000CA3                 pop     edi
.text:00000CA4                 pop     esi
.text:00000CA5                 add     esp, 60h
.text:00000CA8                 cmp     ebp, esp
.text:00000CAA                 call    __RTC_CheckEsp
.text:00000CAF                 mov     esp, ebp
.text:00000CB1                 pop     ebp
.text:00000CB2                 retn
.text:00000CB2 _ssh_gss_setup  endp
.text:00000CB2
.text:00000CB2 ; ---------------------------------------------------------------------------
.text:00000CB3                 align 4
.text:00000CB4 $LN28           dd 3                    ; DATA XREF: _ssh_gss_setup+5CAo
.text:00000CB8                 dd offset $LN27
.text:00000CBC $LN27           dd 0FFFFFFF4h, 4        ; DATA XREF: .text:00000CB8o
.text:00000CC4                 dd offset $LN24         ; "regkey"
.text:00000CC8                 dd 0FFFFFFE0h, 4
.text:00000CD0                 dd offset $LN25         ; "type"
.text:00000CD4                 dd 0FFFFFFD4h, 4
.text:00000CDC                 dd offset $LN26         ; "size"
.text:00000CE0 $LN26           db 'size',0             ; DATA XREF: .text:00000CDCo
.text:00000CE5 $LN25           db 'type',0             ; DATA XREF: .text:00000CD0o
.text:00000CEA $LN24           db 'regkey',0           ; DATA XREF: .text:00000CC4o
.text:00000CF1                 db 0Bh dup(0CCh)
.text:00000CFC
.text:00000CFC ; =============== S U B R O U T I N E =======================================
.text:00000CFC
.text:00000CFC ; Attributes: bp-based frame
.text:00000CFC
.text:00000CFC                 public _ssh_gss_cleanup
.text:00000CFC _ssh_gss_cleanup proc near
.text:00000CFC
.text:00000CFC var_4           = dword ptr -4
.text:00000CFC arg_0           = dword ptr  8
.text:00000CFC
.text:00000CFC                 push    ebp
.text:00000CFD                 mov     ebp, esp
.text:00000CFF                 push    ecx
.text:00000D00                 push    esi
.text:00000D01                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00000D08                 mov     [ebp+var_4], 0
.text:00000D0F                 jmp     short loc_D1A
.text:00000D11 ; ---------------------------------------------------------------------------
.text:00000D11
.text:00000D11 loc_D11:                                ; CODE XREF: _ssh_gss_cleanup:loc_D6Dj
.text:00000D11                 mov     eax, [ebp+var_4]
.text:00000D14                 add     eax, 1
.text:00000D17                 mov     [ebp+var_4], eax
.text:00000D1A
.text:00000D1A loc_D1A:                                ; CODE XREF: _ssh_gss_cleanup+13j
.text:00000D1A                 mov     ecx, [ebp+arg_0]
.text:00000D1D                 mov     edx, [ebp+var_4]
.text:00000D20                 cmp     edx, [ecx+4]
.text:00000D23                 jge     short loc_D6F
.text:00000D25                 mov     eax, [ebp+var_4]
.text:00000D28                 imul    eax, 54h
.text:00000D2B                 mov     ecx, [ebp+arg_0]
.text:00000D2E                 mov     edx, [ecx]
.text:00000D30                 mov     esi, esp
.text:00000D32                 mov     eax, [edx+eax+50h]
.text:00000D36                 push    eax             ; hLibModule
.text:00000D37                 call    dword ptr ds:__imp__FreeLibrary@4 ; FreeLibrary(x)
.text:00000D3D                 cmp     esi, esp
.text:00000D3F                 call    __RTC_CheckEsp
.text:00000D44                 mov     ecx, [ebp+var_4]
.text:00000D47                 imul    ecx, 54h
.text:00000D4A                 mov     edx, [ebp+arg_0]
.text:00000D4D                 mov     eax, [edx]
.text:00000D4F                 cmp     dword ptr [ecx+eax], 2
.text:00000D53                 jnz     short loc_D6D
.text:00000D55                 mov     ecx, [ebp+var_4]
.text:00000D58                 imul    ecx, 54h
.text:00000D5B                 mov     edx, [ebp+arg_0]
.text:00000D5E                 mov     eax, [edx]
.text:00000D60                 mov     ecx, [eax+ecx+4]
.text:00000D64                 push    ecx
.text:00000D65                 call    _safefree
.text:00000D6A                 add     esp, 4
.text:00000D6D
.text:00000D6D loc_D6D:                                ; CODE XREF: _ssh_gss_cleanup+57j
.text:00000D6D                 jmp     short loc_D11
.text:00000D6F ; ---------------------------------------------------------------------------
.text:00000D6F
.text:00000D6F loc_D6F:                                ; CODE XREF: _ssh_gss_cleanup+27j
.text:00000D6F                 mov     edx, [ebp+arg_0]
.text:00000D72                 mov     eax, [edx]
.text:00000D74                 push    eax
.text:00000D75                 call    _safefree
.text:00000D7A                 add     esp, 4
.text:00000D7D                 mov     ecx, [ebp+arg_0]
.text:00000D80                 push    ecx
.text:00000D81                 call    _safefree
.text:00000D86                 add     esp, 4
.text:00000D89                 pop     esi
.text:00000D8A                 add     esp, 4
.text:00000D8D                 cmp     ebp, esp
.text:00000D8F                 call    __RTC_CheckEsp
.text:00000D94                 mov     esp, ebp
.text:00000D96                 pop     ebp
.text:00000D97                 retn
.text:00000D97 _ssh_gss_cleanup endp
.text:00000D97
.text:00000D97 ; ---------------------------------------------------------------------------
.text:00000D98                 db 4 dup(0CCh)
.text:00000D9C
.text:00000D9C ; =============== S U B R O U T I N E =======================================
.text:00000D9C
.text:00000D9C ; Attributes: bp-based frame
.text:00000D9C
.text:00000D9C _ssh_sspi_bind_fns proc near            ; CODE XREF: _ssh_gss_setup+432p
.text:00000D9C
.text:00000D9C arg_0           = dword ptr  8
.text:00000D9C
.text:00000D9C                 push    ebp
.text:00000D9D                 mov     ebp, esp
.text:00000D9F                 mov     eax, [ebp+arg_0]
.text:00000DA2                 mov     dword ptr [eax+8], offset _ssh_sspi_indicate_mech
.text:00000DA9                 mov     ecx, [ebp+arg_0]
.text:00000DAC                 mov     dword ptr [ecx+0Ch], offset _ssh_sspi_import_name
.text:00000DB3                 mov     edx, [ebp+arg_0]
.text:00000DB6                 mov     dword ptr [edx+10h], offset _ssh_sspi_release_name
.text:00000DBD                 mov     eax, [ebp+arg_0]
.text:00000DC0                 mov     dword ptr [eax+14h], offset _ssh_sspi_init_sec_context
.text:00000DC7                 mov     ecx, [ebp+arg_0]
.text:00000DCA                 mov     dword ptr [ecx+18h], offset _ssh_sspi_free_tok
.text:00000DD1                 mov     edx, [ebp+arg_0]
.text:00000DD4                 mov     dword ptr [edx+1Ch], offset _ssh_sspi_acquire_cred
.text:00000DDB                 mov     eax, [ebp+arg_0]
.text:00000DDE                 mov     dword ptr [eax+20h], offset _ssh_sspi_release_cred
.text:00000DE5                 mov     ecx, [ebp+arg_0]
.text:00000DE8                 mov     dword ptr [ecx+24h], offset _ssh_sspi_get_mic
.text:00000DEF                 mov     edx, [ebp+arg_0]
.text:00000DF2                 mov     dword ptr [edx+28h], offset _ssh_sspi_free_mic
.text:00000DF9                 mov     eax, [ebp+arg_0]
.text:00000DFC                 mov     dword ptr [eax+2Ch], offset _ssh_sspi_display_status
.text:00000E03                 pop     ebp
.text:00000E04                 retn
.text:00000E04 _ssh_sspi_bind_fns endp
.text:00000E04
.text:00000E04 ; ---------------------------------------------------------------------------
.text:00000E05                 db 7 dup(0CCh)
.text:00000E0C
.text:00000E0C ; =============== S U B R O U T I N E =======================================
.text:00000E0C
.text:00000E0C ; Attributes: bp-based frame
.text:00000E0C
.text:00000E0C _ssh_sspi_indicate_mech proc near       ; DATA XREF: _ssh_sspi_bind_fns+6o
.text:00000E0C
.text:00000E0C arg_4           = dword ptr  0Ch
.text:00000E0C
.text:00000E0C                 push    ebp
.text:00000E0D                 mov     ebp, esp
.text:00000E0F                 mov     eax, [ebp+arg_4]
.text:00000E12                 mov     ecx, ds:_gss_mech_krb5
.text:00000E18                 mov     [eax], ecx
.text:00000E1A                 mov     edx, ds:off_6A8
.text:00000E20                 mov     [eax+4], edx
.text:00000E23                 xor     eax, eax
.text:00000E25                 pop     ebp
.text:00000E26                 retn
.text:00000E26 _ssh_sspi_indicate_mech endp
.text:00000E26
.text:00000E26 ; ---------------------------------------------------------------------------
.text:00000E27                 db 5 dup(0CCh)
.text:00000E2C
.text:00000E2C ; =============== S U B R O U T I N E =======================================
.text:00000E2C
.text:00000E2C ; Attributes: bp-based frame
.text:00000E2C
.text:00000E2C _ssh_sspi_import_name proc near         ; DATA XREF: _ssh_sspi_bind_fns+10o
.text:00000E2C
.text:00000E2C var_4           = dword ptr -4
.text:00000E2C arg_4           = dword ptr  0Ch
.text:00000E2C arg_8           = dword ptr  10h
.text:00000E2C
.text:00000E2C                 push    ebp
.text:00000E2D                 mov     ebp, esp
.text:00000E2F                 push    ecx
.text:00000E30                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00000E37                 cmp     [ebp+arg_4], 0
.text:00000E3B                 jnz     short loc_E44
.text:00000E3D                 mov     eax, 4
.text:00000E42                 jmp     short loc_E64
.text:00000E44 ; ---------------------------------------------------------------------------
.text:00000E44
.text:00000E44 loc_E44:                                ; CODE XREF: _ssh_sspi_import_name+Fj
.text:00000E44                 push    0
.text:00000E46                 mov     eax, [ebp+arg_4]
.text:00000E49                 push    eax
.text:00000E4A                 push    offset $SG87278 ; "host/"
.text:00000E4F                 call    _dupcat
.text:00000E54                 add     esp, 0Ch
.text:00000E57                 mov     [ebp+var_4], eax
.text:00000E5A                 mov     ecx, [ebp+arg_8]
.text:00000E5D                 mov     edx, [ebp+var_4]
.text:00000E60                 mov     [ecx], edx
.text:00000E62                 xor     eax, eax
.text:00000E64
.text:00000E64 loc_E64:                                ; CODE XREF: _ssh_sspi_import_name+16j
.text:00000E64                 add     esp, 4
.text:00000E67                 cmp     ebp, esp
.text:00000E69                 call    __RTC_CheckEsp
.text:00000E6E                 mov     esp, ebp
.text:00000E70                 pop     ebp
.text:00000E71                 retn
.text:00000E71 _ssh_sspi_import_name endp
.text:00000E71
.text:00000E71 ; ---------------------------------------------------------------------------
.text:00000E72                 db 0Ah dup(0CCh)
.text:00000E7C
.text:00000E7C ; =============== S U B R O U T I N E =======================================
.text:00000E7C
.text:00000E7C ; Attributes: bp-based frame
.text:00000E7C
.text:00000E7C _ssh_sspi_acquire_cred proc near        ; DATA XREF: _ssh_sspi_bind_fns+38o
.text:00000E7C
.text:00000E7C Dst             = dword ptr -4
.text:00000E7C arg_4           = dword ptr  0Ch
.text:00000E7C
.text:00000E7C                 push    ebp
.text:00000E7D                 mov     ebp, esp
.text:00000E7F                 push    ecx
.text:00000E80                 push    esi
.text:00000E81                 mov     [ebp+Dst], 0CCCCCCCCh
.text:00000E88                 push    28h ; '('
.text:00000E8A                 push    1
.text:00000E8C                 call    _safemalloc
.text:00000E91                 add     esp, 8
.text:00000E94                 mov     [ebp+Dst], eax
.text:00000E97                 push    28h ; '('       ; Size
.text:00000E99                 push    0               ; Val
.text:00000E9B                 mov     eax, [ebp+Dst]
.text:00000E9E                 push    eax             ; Dst
.text:00000E9F                 call    _memset
.text:00000EA4                 add     esp, 0Ch
.text:00000EA7                 mov     ecx, [ebp+Dst]
.text:00000EAA                 mov     dword ptr [ecx+4], 0
.text:00000EB1                 mov     edx, [ebp+Dst]
.text:00000EB4                 mov     dword ptr [edx], 0
.text:00000EBA                 mov     eax, [ebp+Dst]
.text:00000EBD                 mov     dword ptr [eax+18h], 0
.text:00000EC4                 mov     ecx, [ebp+Dst]
.text:00000EC7                 add     ecx, 20h ; ' '
.text:00000ECA                 mov     esi, esp
.text:00000ECC                 push    ecx
.text:00000ECD                 mov     edx, [ebp+Dst]
.text:00000ED0                 add     edx, 8
.text:00000ED3                 push    edx
.text:00000ED4                 push    0
.text:00000ED6                 push    0
.text:00000ED8                 push    0
.text:00000EDA                 push    0
.text:00000EDC                 push    2
.text:00000EDE                 push    offset $SG87297 ; "Kerberos"
.text:00000EE3                 push    0
.text:00000EE5                 call    ds:_p_AcquireCredentialsHandleA
.text:00000EEB                 cmp     esi, esp
.text:00000EED                 call    __RTC_CheckEsp
.text:00000EF2                 mov     ecx, [ebp+Dst]
.text:00000EF5                 mov     [ecx], eax
.text:00000EF7                 mov     edx, [ebp+Dst]
.text:00000EFA                 cmp     dword ptr [edx], 0
.text:00000EFD                 jz      short loc_F06
.text:00000EFF                 mov     eax, 4
.text:00000F04                 jmp     short loc_F10
.text:00000F06 ; ---------------------------------------------------------------------------
.text:00000F06
.text:00000F06 loc_F06:                                ; CODE XREF: _ssh_sspi_acquire_cred+81j
.text:00000F06                 mov     eax, [ebp+arg_4]
.text:00000F09                 mov     ecx, [ebp+Dst]
.text:00000F0C                 mov     [eax], ecx
.text:00000F0E                 xor     eax, eax
.text:00000F10
.text:00000F10 loc_F10:                                ; CODE XREF: _ssh_sspi_acquire_cred+88j
.text:00000F10                 pop     esi
.text:00000F11                 add     esp, 4
.text:00000F14                 cmp     ebp, esp
.text:00000F16                 call    __RTC_CheckEsp
.text:00000F1B                 mov     esp, ebp
.text:00000F1D                 pop     ebp
.text:00000F1E                 retn
.text:00000F1E _ssh_sspi_acquire_cred endp
.text:00000F1E
.text:00000F1E ; ---------------------------------------------------------------------------
.text:00000F1F                 db 0Dh dup(0CCh)
.text:00000F2C
.text:00000F2C ; =============== S U B R O U T I N E =======================================
.text:00000F2C
.text:00000F2C ; Attributes: bp-based frame
.text:00000F2C
.text:00000F2C _ssh_sspi_init_sec_context proc near    ; DATA XREF: _ssh_sspi_bind_fns+24o
.text:00000F2C
.text:00000F2C var_64          = byte ptr -64h
.text:00000F2C var_60          = dword ptr -60h
.text:00000F2C var_58          = dword ptr -58h
.text:00000F2C var_50          = dword ptr -50h
.text:00000F2C var_4C          = dword ptr -4Ch
.text:00000F2C var_48          = dword ptr -48h
.text:00000F2C var_3C          = dword ptr -3Ch
.text:00000F2C var_38          = dword ptr -38h
.text:00000F2C var_34          = dword ptr -34h
.text:00000F2C var_28          = dword ptr -28h
.text:00000F2C var_24          = dword ptr -24h
.text:00000F2C var_20          = dword ptr -20h
.text:00000F2C var_14          = dword ptr -14h
.text:00000F2C var_10          = dword ptr -10h
.text:00000F2C var_C           = dword ptr -0Ch
.text:00000F2C var_4           = dword ptr -4
.text:00000F2C arg_4           = dword ptr  0Ch
.text:00000F2C arg_8           = dword ptr  10h
.text:00000F2C arg_C           = dword ptr  14h
.text:00000F2C arg_10          = dword ptr  18h
.text:00000F2C arg_14          = dword ptr  1Ch
.text:00000F2C
.text:00000F2C                 push    ebp
.text:00000F2D                 mov     ebp, esp
.text:00000F2F                 sub     esp, 64h
.text:00000F32                 push    esi
.text:00000F33                 push    edi
.text:00000F34                 lea     edi, [ebp+var_64]
.text:00000F37                 mov     ecx, 19h
.text:00000F3C                 mov     eax, 0CCCCCCCCh
.text:00000F41                 rep stosd
.text:00000F43                 mov     eax, [ebp+arg_4]
.text:00000F46                 mov     ecx, [eax]
.text:00000F48                 mov     [ebp+var_4], ecx
.text:00000F4B                 mov     edx, [ebp+arg_14]
.text:00000F4E                 mov     eax, [edx]
.text:00000F50                 mov     [ebp+var_14], eax
.text:00000F53                 mov     [ebp+var_10], 2
.text:00000F5A                 mov     ecx, [ebp+arg_14]
.text:00000F5D                 mov     edx, [ecx+4]
.text:00000F60                 mov     [ebp+var_C], edx
.text:00000F63                 mov     eax, [ebp+arg_10]
.text:00000F66                 mov     ecx, [eax]
.text:00000F68                 mov     [ebp+var_28], ecx
.text:00000F6B                 mov     [ebp+var_24], 2
.text:00000F72                 mov     edx, [ebp+arg_10]
.text:00000F75                 mov     eax, [edx+4]
.text:00000F78                 mov     [ebp+var_20], eax
.text:00000F7B                 mov     [ebp+var_3C], 0
.text:00000F82                 mov     [ebp+var_38], 1
.text:00000F89                 lea     ecx, [ebp+var_14]
.text:00000F8C                 mov     [ebp+var_34], ecx
.text:00000F8F                 mov     [ebp+var_50], 0
.text:00000F96                 mov     [ebp+var_4C], 1
.text:00000F9D                 lea     edx, [ebp+var_28]
.text:00000FA0                 mov     [ebp+var_48], edx
.text:00000FA3                 mov     [ebp+var_58], 116h
.text:00000FAA                 mov     [ebp+var_60], 0
.text:00000FB1                 cmp     [ebp+arg_C], 0
.text:00000FB5                 jz      short loc_FC0
.text:00000FB7                 mov     eax, [ebp+var_58]
.text:00000FBA                 or      eax, 1
.text:00000FBD                 mov     [ebp+var_58], eax
.text:00000FC0
.text:00000FC0 loc_FC0:                                ; CODE XREF: _ssh_sspi_init_sec_context+89j
.text:00000FC0                 mov     ecx, [ebp+var_4]
.text:00000FC3                 add     ecx, 20h ; ' '
.text:00000FC6                 mov     esi, esp
.text:00000FC8                 push    ecx
.text:00000FC9                 lea     edx, [ebp+var_60]
.text:00000FCC                 push    edx
.text:00000FCD                 lea     eax, [ebp+var_3C]
.text:00000FD0                 push    eax
.text:00000FD1                 mov     ecx, [ebp+var_4]
.text:00000FD4                 add     ecx, 10h
.text:00000FD7                 push    ecx
.text:00000FD8                 push    0
.text:00000FDA                 lea     edx, [ebp+var_50]
.text:00000FDD                 push    edx
.text:00000FDE                 push    10h
.text:00000FE0                 push    0
.text:00000FE2                 mov     eax, [ebp+var_58]
.text:00000FE5                 push    eax
.text:00000FE6                 mov     ecx, [ebp+arg_8]
.text:00000FE9                 push    ecx
.text:00000FEA                 mov     edx, [ebp+var_4]
.text:00000FED                 mov     eax, [edx+18h]
.text:00000FF0                 push    eax
.text:00000FF1                 mov     ecx, [ebp+var_4]
.text:00000FF4                 add     ecx, 8
.text:00000FF7                 push    ecx
.text:00000FF8                 call    ds:_p_InitializeSecurityContextA
.text:00000FFE                 cmp     esi, esp
.text:00001000                 call    __RTC_CheckEsp
.text:00001005                 mov     edx, [ebp+var_4]
.text:00001008                 mov     [edx], eax
.text:0000100A                 mov     eax, [ebp+var_4]
.text:0000100D                 add     eax, 10h
.text:00001010                 mov     ecx, [ebp+var_4]
.text:00001013                 mov     [ecx+18h], eax
.text:00001016                 mov     edx, [ebp+arg_14]
.text:00001019                 mov     eax, [ebp+var_C]
.text:0000101C                 mov     [edx+4], eax
.text:0000101F                 mov     ecx, [ebp+arg_14]
.text:00001022                 mov     edx, [ebp+var_14]
.text:00001025                 mov     [ecx], edx
.text:00001027                 mov     eax, [ebp+var_4]
.text:0000102A                 cmp     dword ptr [eax], 0
.text:0000102D                 jnz     short loc_1033
.text:0000102F                 xor     eax, eax
.text:00001031                 jmp     short loc_104A
.text:00001033 ; ---------------------------------------------------------------------------
.text:00001033
.text:00001033 loc_1033:                               ; CODE XREF: _ssh_sspi_init_sec_context+101j
.text:00001033                 mov     ecx, [ebp+var_4]
.text:00001036                 cmp     dword ptr [ecx], 90312h
.text:0000103C                 jnz     short loc_1045
.text:0000103E                 mov     eax, 1
.text:00001043                 jmp     short loc_104A
.text:00001045 ; ---------------------------------------------------------------------------
.text:00001045
.text:00001045 loc_1045:                               ; CODE XREF: _ssh_sspi_init_sec_context+110j
.text:00001045                 mov     eax, 4
.text:0000104A
.text:0000104A loc_104A:                               ; CODE XREF: _ssh_sspi_init_sec_context+105j
.text:0000104A                                         ; _ssh_sspi_init_sec_context+117j
.text:0000104A                 push    edx
.text:0000104B                 mov     ecx, ebp
.text:0000104D                 push    eax
.text:0000104E                 lea     edx, $LN12
.text:00001054                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00001059                 pop     eax
.text:0000105A                 pop     edx
.text:0000105B                 pop     edi
.text:0000105C                 pop     esi
.text:0000105D                 add     esp, 64h
.text:00001060                 cmp     ebp, esp
.text:00001062                 call    __RTC_CheckEsp
.text:00001067                 mov     esp, ebp
.text:00001069                 pop     ebp
.text:0000106A                 retn
.text:0000106A _ssh_sspi_init_sec_context endp
.text:0000106A
.text:0000106A ; ---------------------------------------------------------------------------
.text:0000106B                 align 4
.text:0000106C $LN12           dd 5                    ; DATA XREF: _ssh_sspi_init_sec_context+122o
.text:00001070                 dd offset $LN11
.text:00001074 $LN11           dd 0FFFFFFECh, 0Ch      ; DATA XREF: .text:00001070o
.text:0000107C                 dd offset $LN6          ; "wsend_tok"
.text:00001080                 dd 0FFFFFFD8h, 0Ch
.text:00001088                 dd offset $LN7          ; "wrecv_tok"
.text:0000108C                 dd 0FFFFFFC4h, 0Ch
.text:00001094                 dd offset $LN8          ; "output_desc"
.text:00001098                 dd 0FFFFFFB0h, 0Ch
.text:000010A0                 dd offset $LN9          ; "input_desc"
.text:000010A4                 dd 0FFFFFFA0h, 4
.text:000010AC                 dd offset $LN10         ; "ret_flags"
.text:000010B0 $LN10           db 'ret_flags',0        ; DATA XREF: .text:000010ACo
.text:000010BA $LN9            db 'input_desc',0       ; DATA XREF: .text:000010A0o
.text:000010C5 $LN8            db 'output_desc',0      ; DATA XREF: .text:00001094o
.text:000010D1 $LN7            db 'wrecv_tok',0        ; DATA XREF: .text:00001088o
.text:000010DB $LN6            db 'wsend_tok',0        ; DATA XREF: .text:0000107Co
.text:000010E5                 db 7 dup(0CCh)
.text:000010EC
.text:000010EC ; =============== S U B R O U T I N E =======================================
.text:000010EC
.text:000010EC ; Attributes: bp-based frame
.text:000010EC
.text:000010EC _ssh_sspi_free_tok proc near            ; DATA XREF: _ssh_sspi_bind_fns+2Eo
.text:000010EC
.text:000010EC arg_4           = dword ptr  0Ch
.text:000010EC
.text:000010EC                 push    ebp
.text:000010ED                 mov     ebp, esp
.text:000010EF                 push    esi
.text:000010F0                 cmp     [ebp+arg_4], 0
.text:000010F4                 jnz     short loc_10FD
.text:000010F6                 mov     eax, 4
.text:000010FB                 jmp     short loc_112C
.text:000010FD ; ---------------------------------------------------------------------------
.text:000010FD
.text:000010FD loc_10FD:                               ; CODE XREF: _ssh_sspi_free_tok+8j
.text:000010FD                 mov     esi, esp
.text:000010FF                 mov     eax, [ebp+arg_4]
.text:00001102                 mov     ecx, [eax+4]
.text:00001105                 push    ecx
.text:00001106                 call    ds:_p_FreeContextBuffer
.text:0000110C                 cmp     esi, esp
.text:0000110E                 call    __RTC_CheckEsp
.text:00001113
.text:00001113 loc_1113:                               ; CODE XREF: _ssh_sspi_free_tok+3Cj
.text:00001113                 mov     edx, [ebp+arg_4]
.text:00001116                 mov     dword ptr [edx], 0
.text:0000111C                 mov     eax, [ebp+arg_4]
.text:0000111F                 mov     dword ptr [eax+4], 0
.text:00001126                 xor     ecx, ecx
.text:00001128                 jnz     short loc_1113
.text:0000112A                 xor     eax, eax
.text:0000112C
.text:0000112C loc_112C:                               ; CODE XREF: _ssh_sspi_free_tok+Fj
.text:0000112C                 pop     esi
.text:0000112D                 cmp     ebp, esp
.text:0000112F                 call    __RTC_CheckEsp
.text:00001134                 pop     ebp
.text:00001135                 retn
.text:00001135 _ssh_sspi_free_tok endp
.text:00001135
.text:00001135 ; ---------------------------------------------------------------------------
.text:00001136                 db 6 dup(0CCh)
.text:0000113C
.text:0000113C ; =============== S U B R O U T I N E =======================================
.text:0000113C
.text:0000113C ; Attributes: bp-based frame
.text:0000113C
.text:0000113C _ssh_sspi_release_cred proc near        ; DATA XREF: _ssh_sspi_bind_fns+42o
.text:0000113C
.text:0000113C var_4           = dword ptr -4
.text:0000113C arg_4           = dword ptr  0Ch
.text:0000113C
.text:0000113C                 push    ebp
.text:0000113D                 mov     ebp, esp
.text:0000113F                 push    ecx
.text:00001140                 push    esi
.text:00001141                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00001148                 mov     eax, [ebp+arg_4]
.text:0000114B                 mov     ecx, [eax]
.text:0000114D                 mov     [ebp+var_4], ecx
.text:00001150                 cmp     [ebp+var_4], 0
.text:00001154                 jnz     short loc_115D
.text:00001156                 mov     eax, 4
.text:0000115B                 jmp     short loc_11A0
.text:0000115D ; ---------------------------------------------------------------------------
.text:0000115D
.text:0000115D loc_115D:                               ; CODE XREF: _ssh_sspi_release_cred+18j
.text:0000115D                 mov     edx, [ebp+var_4]
.text:00001160                 add     edx, 8
.text:00001163                 mov     esi, esp
.text:00001165                 push    edx
.text:00001166                 call    ds:_p_FreeCredentialsHandle
.text:0000116C                 cmp     esi, esp
.text:0000116E                 call    __RTC_CheckEsp
.text:00001173                 mov     eax, [ebp+var_4]
.text:00001176                 add     eax, 10h
.text:00001179                 mov     esi, esp
.text:0000117B                 push    eax
.text:0000117C                 call    ds:_p_DeleteSecurityContext
.text:00001182                 cmp     esi, esp
.text:00001184                 call    __RTC_CheckEsp
.text:00001189                 mov     ecx, [ebp+var_4]
.text:0000118C                 push    ecx
.text:0000118D                 call    _safefree
.text:00001192                 add     esp, 4
.text:00001195                 mov     edx, [ebp+arg_4]
.text:00001198                 mov     dword ptr [edx], 0
.text:0000119E                 xor     eax, eax
.text:000011A0
.text:000011A0 loc_11A0:                               ; CODE XREF: _ssh_sspi_release_cred+1Fj
.text:000011A0                 pop     esi
.text:000011A1                 add     esp, 4
.text:000011A4                 cmp     ebp, esp
.text:000011A6                 call    __RTC_CheckEsp
.text:000011AB                 mov     esp, ebp
.text:000011AD                 pop     ebp
.text:000011AE                 retn
.text:000011AE _ssh_sspi_release_cred endp
.text:000011AE
.text:000011AE ; ---------------------------------------------------------------------------
.text:000011AF                 db 0Dh dup(0CCh)
.text:000011BC
.text:000011BC ; =============== S U B R O U T I N E =======================================
.text:000011BC
.text:000011BC ; Attributes: bp-based frame
.text:000011BC
.text:000011BC _ssh_sspi_release_name proc near        ; DATA XREF: _ssh_sspi_bind_fns+1Ao
.text:000011BC
.text:000011BC var_4           = dword ptr -4
.text:000011BC arg_4           = dword ptr  0Ch
.text:000011BC
.text:000011BC                 push    ebp
.text:000011BD                 mov     ebp, esp
.text:000011BF                 push    ecx
.text:000011C0                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000011C7                 mov     eax, [ebp+arg_4]
.text:000011CA                 mov     ecx, [eax]
.text:000011CC                 mov     [ebp+var_4], ecx
.text:000011CF                 cmp     [ebp+var_4], 0
.text:000011D3                 jnz     short loc_11DC
.text:000011D5                 mov     eax, 4
.text:000011DA                 jmp     short loc_11F3
.text:000011DC ; ---------------------------------------------------------------------------
.text:000011DC
.text:000011DC loc_11DC:                               ; CODE XREF: _ssh_sspi_release_name+17j
.text:000011DC                 mov     edx, [ebp+var_4]
.text:000011DF                 push    edx
.text:000011E0                 call    _safefree
.text:000011E5                 add     esp, 4
.text:000011E8                 mov     eax, [ebp+arg_4]
.text:000011EB                 mov     dword ptr [eax], 0
.text:000011F1                 xor     eax, eax
.text:000011F3
.text:000011F3 loc_11F3:                               ; CODE XREF: _ssh_sspi_release_name+1Ej
.text:000011F3                 add     esp, 4
.text:000011F6                 cmp     ebp, esp
.text:000011F8                 call    __RTC_CheckEsp
.text:000011FD                 mov     esp, ebp
.text:000011FF                 pop     ebp
.text:00001200                 retn
.text:00001200 _ssh_sspi_release_name endp
.text:00001200
.text:00001200 ; ---------------------------------------------------------------------------
.text:00001201                 db 0Bh dup(0CCh)
.text:0000120C
.text:0000120C ; =============== S U B R O U T I N E =======================================
.text:0000120C
.text:0000120C ; Attributes: bp-based frame
.text:0000120C
.text:0000120C _ssh_sspi_display_status proc near      ; DATA XREF: _ssh_sspi_bind_fns+60o
.text:0000120C
.text:0000120C var_C           = dword ptr -0Ch
.text:0000120C var_8           = dword ptr -8
.text:0000120C var_4           = dword ptr -4
.text:0000120C arg_4           = dword ptr  0Ch
.text:0000120C arg_8           = dword ptr  10h
.text:0000120C
.text:0000120C                 push    ebp
.text:0000120D                 mov     ebp, esp
.text:0000120F                 sub     esp, 0Ch
.text:00001212                 mov     [ebp+var_C], 0CCCCCCCCh
.text:00001219                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00001220                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00001227                 mov     eax, [ebp+arg_4]
.text:0000122A                 mov     [ebp+var_4], eax
.text:0000122D                 cmp     [ebp+var_4], 0
.text:00001231                 jnz     short loc_123D
.text:00001233                 mov     eax, 4
.text:00001238                 jmp     loc_1332
.text:0000123D ; ---------------------------------------------------------------------------
.text:0000123D
.text:0000123D loc_123D:                               ; CODE XREF: _ssh_sspi_display_status+25j
.text:0000123D                 mov     ecx, [ebp+var_4]
.text:00001240                 mov     edx, [ecx]
.text:00001242                 mov     [ebp+var_C], edx
.text:00001245                 cmp     [ebp+var_C], 80090308h
.text:0000124C                 ja      short loc_1295
.text:0000124E                 cmp     [ebp+var_C], 80090308h
.text:00001255                 jz      loc_12FA
.text:0000125B                 cmp     [ebp+var_C], 80090301h
.text:00001262                 ja      short loc_1281
.text:00001264                 cmp     [ebp+var_C], 80090301h
.text:0000126B                 jz      short loc_12BB
.text:0000126D                 cmp     [ebp+var_C], 0
.text:00001271                 jz      short loc_12B2
.text:00001273                 cmp     [ebp+var_C], 80090300h
.text:0000127A                 jz      short loc_12F1
.text:0000127C                 jmp     loc_1303
.text:00001281 ; ---------------------------------------------------------------------------
.text:00001281
.text:00001281 loc_1281:                               ; CODE XREF: _ssh_sspi_display_status+56j
.text:00001281                 cmp     [ebp+var_C], 80090303h
.text:00001288                 jz      short loc_12C4
.text:0000128A                 cmp     [ebp+var_C], 80090304h
.text:00001291                 jz      short loc_12D6
.text:00001293                 jmp     short loc_1303
.text:00001295 ; ---------------------------------------------------------------------------
.text:00001295
.text:00001295 loc_1295:                               ; CODE XREF: _ssh_sspi_display_status+40j
.text:00001295                 cmp     [ebp+var_C], 8009030Ch
.text:0000129C                 jz      short loc_12CD
.text:0000129E                 cmp     [ebp+var_C], 8009030Eh
.text:000012A5                 jz      short loc_12DF
.text:000012A7                 cmp     [ebp+var_C], 80090311h
.text:000012AE                 jz      short loc_12E8
.text:000012B0                 jmp     short loc_1303
.text:000012B2 ; ---------------------------------------------------------------------------
.text:000012B2
.text:000012B2 loc_12B2:                               ; CODE XREF: _ssh_sspi_display_status+65j
.text:000012B2                 mov     [ebp+var_8], offset $SG87384 ; "SSPI status OK"
.text:000012B9                 jmp     short loc_130A
.text:000012BB ; ---------------------------------------------------------------------------
.text:000012BB
.text:000012BB loc_12BB:                               ; CODE XREF: _ssh_sspi_display_status+5Fj
.text:000012BB                 mov     [ebp+var_8], offset $SG87387 ; "The handle passed to the function is in"...
.text:000012C2                 jmp     short loc_130A
.text:000012C4 ; ---------------------------------------------------------------------------
.text:000012C4
.text:000012C4 loc_12C4:                               ; CODE XREF: _ssh_sspi_display_status+7Cj
.text:000012C4                 mov     [ebp+var_8], offset $SG87390 ; "The target was not recognized."
.text:000012CB                 jmp     short loc_130A
.text:000012CD ; ---------------------------------------------------------------------------
.text:000012CD
.text:000012CD loc_12CD:                               ; CODE XREF: _ssh_sspi_display_status+90j
.text:000012CD                 mov     [ebp+var_8], offset $SG87393 ; "The logon failed."
.text:000012D4                 jmp     short loc_130A
.text:000012D6 ; ---------------------------------------------------------------------------
.text:000012D6
.text:000012D6 loc_12D6:                               ; CODE XREF: _ssh_sspi_display_status+85j
.text:000012D6                 mov     [ebp+var_8], offset $SG87396 ; "The Local Security Authority cannot be "...
.text:000012DD                 jmp     short loc_130A
.text:000012DF ; ---------------------------------------------------------------------------
.text:000012DF
.text:000012DF loc_12DF:                               ; CODE XREF: _ssh_sspi_display_status+99j
.text:000012DF                 mov     [ebp+var_8], offset $SG87399 ; "No credentials are available in the sec"...
.text:000012E6                 jmp     short loc_130A
.text:000012E8 ; ---------------------------------------------------------------------------
.text:000012E8
.text:000012E8 loc_12E8:                               ; CODE XREF: _ssh_sspi_display_status+A2j
.text:000012E8                 mov     [ebp+var_8], offset $SG87402 ; "No authority could be contacted for aut"...
.text:000012EF                 jmp     short loc_130A
.text:000012F1 ; ---------------------------------------------------------------------------
.text:000012F1
.text:000012F1 loc_12F1:                               ; CODE XREF: _ssh_sspi_display_status+6Ej
.text:000012F1                 mov     [ebp+var_8], offset $SG87405 ; "One or more of the SecBufferDesc struct"...
.text:000012F8                 jmp     short loc_130A
.text:000012FA ; ---------------------------------------------------------------------------
.text:000012FA
.text:000012FA loc_12FA:                               ; CODE XREF: _ssh_sspi_display_status+49j
.text:000012FA                 mov     [ebp+var_8], offset $SG87408 ; "The error is due to a malformed input t"...
.text:00001301                 jmp     short loc_130A
.text:00001303 ; ---------------------------------------------------------------------------
.text:00001303
.text:00001303 loc_1303:                               ; CODE XREF: _ssh_sspi_display_status+70j
.text:00001303                                         ; _ssh_sspi_display_status+87j ...
.text:00001303                 mov     [ebp+var_8], offset $SG87410 ; "Internal SSPI error"
.text:0000130A
.text:0000130A loc_130A:                               ; CODE XREF: _ssh_sspi_display_status+ADj
.text:0000130A                                         ; _ssh_sspi_display_status+B6j ...
.text:0000130A                 mov     eax, [ebp+var_8]
.text:0000130D                 push    eax
.text:0000130E                 call    _dupstr
.text:00001313                 add     esp, 4
.text:00001316                 mov     ecx, [ebp+arg_8]
.text:00001319                 mov     [ecx+4], eax
.text:0000131C                 mov     edx, [ebp+arg_8]
.text:0000131F                 mov     eax, [edx+4]
.text:00001322                 push    eax             ; Str
.text:00001323                 call    _strlen
.text:00001328                 add     esp, 4
.text:0000132B                 mov     ecx, [ebp+arg_8]
.text:0000132E                 mov     [ecx], eax
.text:00001330                 xor     eax, eax
.text:00001332
.text:00001332 loc_1332:                               ; CODE XREF: _ssh_sspi_display_status+2Cj
.text:00001332                 add     esp, 0Ch
.text:00001335                 cmp     ebp, esp
.text:00001337                 call    __RTC_CheckEsp
.text:0000133C                 mov     esp, ebp
.text:0000133E                 pop     ebp
.text:0000133F                 retn
.text:0000133F _ssh_sspi_display_status endp
.text:0000133F
.text:0000133F ; ---------------------------------------------------------------------------
.text:00001340                 db 0Ch dup(0CCh)
.text:0000134C
.text:0000134C ; =============== S U B R O U T I N E =======================================
.text:0000134C
.text:0000134C ; Attributes: bp-based frame
.text:0000134C
.text:0000134C _ssh_sspi_get_mic proc near             ; DATA XREF: _ssh_sspi_bind_fns+4Co
.text:0000134C
.text:0000134C var_54          = byte ptr -54h
.text:0000134C var_50          = dword ptr -50h
.text:0000134C var_4C          = dword ptr -4Ch
.text:0000134C var_48          = dword ptr -48h
.text:0000134C var_44          = dword ptr -44h
.text:0000134C var_40          = dword ptr -40h
.text:0000134C var_3C          = dword ptr -3Ch
.text:0000134C var_30          = dword ptr -30h
.text:0000134C var_2C          = dword ptr -2Ch
.text:0000134C var_28          = dword ptr -28h
.text:0000134C Dst             = byte ptr -1Ch
.text:0000134C var_18          = dword ptr -18h
.text:0000134C var_8           = dword ptr -8
.text:0000134C var_4           = dword ptr -4
.text:0000134C arg_4           = dword ptr  0Ch
.text:0000134C arg_8           = dword ptr  10h
.text:0000134C arg_C           = dword ptr  14h
.text:0000134C
.text:0000134C                 push    ebp
.text:0000134D                 mov     ebp, esp
.text:0000134F                 sub     esp, 54h
.text:00001352                 push    esi
.text:00001353                 push    edi
.text:00001354                 lea     edi, [ebp+var_54]
.text:00001357                 mov     ecx, 15h
.text:0000135C                 mov     eax, 0CCCCCCCCh
.text:00001361                 rep stosd
.text:00001363                 mov     eax, dword ptr ds:___security_cookie
.text:00001368                 xor     eax, ebp
.text:0000136A                 mov     [ebp+var_4], eax
.text:0000136D                 mov     eax, [ebp+arg_4]
.text:00001370                 mov     [ebp+var_8], eax
.text:00001373                 cmp     [ebp+var_8], 0
.text:00001377                 jnz     short loc_1383
.text:00001379                 mov     eax, 4
.text:0000137E                 jmp     loc_1460
.text:00001383 ; ---------------------------------------------------------------------------
.text:00001383
.text:00001383 loc_1383:                               ; CODE XREF: _ssh_sspi_get_mic+2Bj
.text:00001383                 mov     ecx, [ebp+var_8]
.text:00001386                 mov     dword ptr [ecx], 0
.text:0000138C                 push    10h             ; Size
.text:0000138E                 push    0               ; Val
.text:00001390                 lea     edx, [ebp+Dst]
.text:00001393                 push    edx             ; Dst
.text:00001394                 call    _memset
.text:00001399                 add     esp, 0Ch
.text:0000139C                 mov     esi, esp
.text:0000139E                 lea     eax, [ebp+Dst]
.text:000013A1                 push    eax
.text:000013A2                 push    0
.text:000013A4                 mov     ecx, [ebp+var_8]
.text:000013A7                 add     ecx, 10h
.text:000013AA                 push    ecx
.text:000013AB                 call    ds:_p_QueryContextAttributesA
.text:000013B1                 cmp     esi, esp
.text:000013B3                 call    __RTC_CheckEsp
.text:000013B8                 mov     edx, [ebp+var_8]
.text:000013BB                 mov     [edx], eax
.text:000013BD                 mov     eax, [ebp+var_8]
.text:000013C0                 cmp     dword ptr [eax], 0
.text:000013C3                 jnz     short loc_13CB
.text:000013C5                 cmp     [ebp+var_18], 0
.text:000013C9                 jnz     short loc_13D5
.text:000013CB
.text:000013CB loc_13CB:                               ; CODE XREF: _ssh_sspi_get_mic+77j
.text:000013CB                 mov     ecx, [ebp+var_8]
.text:000013CE                 mov     eax, [ecx]
.text:000013D0                 jmp     loc_1460
.text:000013D5 ; ---------------------------------------------------------------------------
.text:000013D5
.text:000013D5 loc_13D5:                               ; CODE XREF: _ssh_sspi_get_mic+7Dj
.text:000013D5                 mov     [ebp+var_2C], 2
.text:000013DC                 lea     edx, [ebp+var_50]
.text:000013DF                 mov     [ebp+var_28], edx
.text:000013E2                 mov     [ebp+var_30], 0
.text:000013E9                 mov     [ebp+var_4C], 1
.text:000013F0                 mov     eax, [ebp+arg_8]
.text:000013F3                 mov     ecx, [eax]
.text:000013F5                 mov     [ebp+var_50], ecx
.text:000013F8                 mov     edx, [ebp+arg_8]
.text:000013FB                 mov     eax, [edx+4]
.text:000013FE                 mov     [ebp+var_48], eax
.text:00001401                 mov     [ebp+var_40], 2
.text:00001408                 mov     ecx, [ebp+var_18]
.text:0000140B                 mov     [ebp+var_44], ecx
.text:0000140E                 push    1
.text:00001410                 mov     edx, [ebp+var_18]
.text:00001413                 push    edx
.text:00001414                 call    _safemalloc
.text:00001419                 add     esp, 8
.text:0000141C                 mov     [ebp+var_3C], eax
.text:0000141F                 mov     esi, esp
.text:00001421                 push    0
.text:00001423                 lea     eax, [ebp+var_30]
.text:00001426                 push    eax
.text:00001427                 push    0
.text:00001429                 mov     ecx, [ebp+var_8]
.text:0000142C                 add     ecx, 10h
.text:0000142F                 push    ecx
.text:00001430                 call    ds:_p_MakeSignature
.text:00001436                 cmp     esi, esp
.text:00001438                 call    __RTC_CheckEsp
.text:0000143D                 mov     edx, [ebp+var_8]
.text:00001440                 mov     [edx], eax
.text:00001442                 mov     eax, [ebp+var_8]
.text:00001445                 cmp     dword ptr [eax], 0
.text:00001448                 jnz     short loc_145B
.text:0000144A                 mov     ecx, [ebp+arg_C]
.text:0000144D                 mov     edx, [ebp+var_44]
.text:00001450                 mov     [ecx], edx
.text:00001452                 mov     eax, [ebp+arg_C]
.text:00001455                 mov     ecx, [ebp+var_3C]
.text:00001458                 mov     [eax+4], ecx
.text:0000145B
.text:0000145B loc_145B:                               ; CODE XREF: _ssh_sspi_get_mic+FCj
.text:0000145B                 mov     edx, [ebp+var_8]
.text:0000145E                 mov     eax, [edx]
.text:00001460
.text:00001460 loc_1460:                               ; CODE XREF: _ssh_sspi_get_mic+32j
.text:00001460                                         ; _ssh_sspi_get_mic+84j
.text:00001460                 push    edx
.text:00001461                 mov     ecx, ebp
.text:00001463                 push    eax
.text:00001464                 lea     edx, $LN11_0
.text:0000146A                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0000146F                 pop     eax
.text:00001470                 pop     edx
.text:00001471                 pop     edi
.text:00001472                 pop     esi
.text:00001473                 mov     ecx, [ebp+var_4]
.text:00001476                 xor     ecx, ebp
.text:00001478                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:0000147D                 add     esp, 54h
.text:00001480                 cmp     ebp, esp
.text:00001482                 call    __RTC_CheckEsp
.text:00001487                 mov     esp, ebp
.text:00001489                 pop     ebp
.text:0000148A                 retn
.text:0000148A _ssh_sspi_get_mic endp
.text:0000148A
.text:0000148A ; ---------------------------------------------------------------------------
.text:0000148B                 align 4
.text:0000148C $LN11_0         dd 3                    ; DATA XREF: _ssh_sspi_get_mic+118o
.text:00001490                 dd offset $LN10_0
.text:00001494 $LN10_0         dd 0FFFFFFE4h, 10h      ; DATA XREF: .text:00001490o
.text:0000149C                 dd offset $LN7_0        ; "ContextSizes"
.text:000014A0                 dd 0FFFFFFD0h, 0Ch
.text:000014A8                 dd offset $LN8_0        ; "InputBufferDescriptor"
.text:000014AC                 dd 0FFFFFFB0h, 18h
.text:000014B4                 dd offset $LN9_0        ; "InputSecurityToken"
.text:000014B8 $LN9_0          db 'InputSecurityToken',0 ; DATA XREF: .text:000014B4o
.text:000014CB $LN8_0          db 'InputBufferDescriptor',0 ; DATA XREF: .text:000014A8o
.text:000014E1 $LN7_0          db 'ContextSizes',0     ; DATA XREF: .text:0000149Co
.text:000014EE                 db 0Eh dup(0CCh)
.text:000014FC
.text:000014FC ; =============== S U B R O U T I N E =======================================
.text:000014FC
.text:000014FC ; Attributes: bp-based frame
.text:000014FC
.text:000014FC _ssh_sspi_free_mic proc near            ; DATA XREF: _ssh_sspi_bind_fns+56o
.text:000014FC
.text:000014FC arg_4           = dword ptr  0Ch
.text:000014FC
.text:000014FC                 push    ebp
.text:000014FD                 mov     ebp, esp
.text:000014FF                 mov     eax, [ebp+arg_4]
.text:00001502                 mov     ecx, [eax+4]
.text:00001505                 push    ecx
.text:00001506                 call    _safefree
.text:0000150B                 add     esp, 4
.text:0000150E                 xor     eax, eax
.text:00001510                 cmp     ebp, esp
.text:00001512                 call    __RTC_CheckEsp
.text:00001517                 pop     ebp
.text:00001518                 retn
.text:00001518 _ssh_sspi_free_mic endp
.text:00001518
.text:00001518 ; ---------------------------------------------------------------------------
.text:00001519                 align 4
.text:00001519 _text           ends
.text:00001519
.rtc$TMZ:0000151C ; ===========================================================================
.rtc$TMZ:0000151C
.rtc$TMZ:0000151C ; Segment type: Pure data
.rtc$TMZ:0000151C ; Segment permissions: Read
.rtc$TMZ:0000151C _rtc$TMZ        segment dword public 'DATA' use32
.rtc$TMZ:0000151C                 assume cs:_rtc$TMZ
.rtc$TMZ:0000151C                 ;org 151Ch
.rtc$TMZ:0000151C ; COMDAT (pick any)
.rtc$TMZ:0000151C __RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
.rtc$TMZ:0000151C _rtc$TMZ        ends
.rtc$TMZ:0000151C
.rtc$IMZ:00001520 ; ===========================================================================
.rtc$IMZ:00001520
.rtc$IMZ:00001520 ; Segment type: Pure data
.rtc$IMZ:00001520 ; Segment permissions: Read
.rtc$IMZ:00001520 _rtc$IMZ        segment dword public 'DATA' use32
.rtc$IMZ:00001520                 assume cs:_rtc$IMZ
.rtc$IMZ:00001520                 ;org 1520h
.rtc$IMZ:00001520 ; COMDAT (pick any)
.rtc$IMZ:00001520 __RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
.rtc$IMZ:00001520 _rtc$IMZ        ends
.rtc$IMZ:00001520
UNDEF:00001530 ; ===========================================================================
UNDEF:00001530
UNDEF:00001530 ; Segment type: Externs
UNDEF:00001530 ; UNDEF
UNDEF:00001530                 extrn _dupprintf:near   ; CODE XREF: _ssh_gss_setup+4B0p
UNDEF:00001534                 extrn _conf_get_filename:near
UNDEF:00001534                                         ; CODE XREF: _ssh_gss_setup+447p
UNDEF:00001538                 extrn _load_system32_dll:near
UNDEF:00001538                                         ; CODE XREF: _ssh_gss_setup+27Ap
UNDEF:0000153C                 extrn _ssh_gssapi_bind_fns:near
UNDEF:0000153C                                         ; CODE XREF: _ssh_gss_setup+26Dp
UNDEF:0000153C                                         ; _ssh_gss_setup+5BBp
UNDEF:00001540 ; FARPROC __stdcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
UNDEF:00001540                 extrn __imp__GetProcAddress@8:near
UNDEF:00001540                                         ; CODE XREF: _ssh_gss_setup+184p
UNDEF:00001540                                         ; _ssh_gss_setup+1A2p ...
UNDEF:00001544 ; LSTATUS __stdcall RegCloseKey(HKEY hKey)
UNDEF:00001544                 extrn __imp__RegCloseKey@4:near
UNDEF:00001544                                         ; CODE XREF: _ssh_gss_setup+126p
UNDEF:00001544                                         ; DATA XREF: _ssh_gss_setup+126r
UNDEF:00001548                 extrn _safefree:near    ; CODE XREF: _ssh_gss_setup+118p
UNDEF:00001548                                         ; _ssh_gss_cleanup+69p ...
UNDEF:0000154C ; HMODULE __stdcall LoadLibraryA(LPCSTR lpLibFileName)
UNDEF:0000154C                 extrn __imp__LoadLibraryA@4:near
UNDEF:0000154C                                         ; CODE XREF: _ssh_gss_setup+104p
UNDEF:0000154C                                         ; _ssh_gss_setup+464p
UNDEF:0000154C                                         ; DATA XREF: ...
UNDEF:00001550 ; char *__cdecl strcat(char *Dest, const char *Source)
UNDEF:00001550                 extrn _strcat:near      ; CODE XREF: _ssh_gss_setup+F6p
UNDEF:00001554 ; LSTATUS __stdcall RegQueryValueExA(HKEY hKey, LPCSTR lpValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE lpData, LPDWORD lpcbData)
UNDEF:00001554                 extrn __imp__RegQueryValueExA@24:near
UNDEF:00001554                                         ; CODE XREF: _ssh_gss_setup+84p
UNDEF:00001554                                         ; _ssh_gss_setup+D1p
UNDEF:00001554                                         ; DATA XREF: ...
UNDEF:00001558 ; LSTATUS __stdcall RegOpenKeyA(HKEY hKey, LPCSTR lpSubKey, PHKEY phkResult)
UNDEF:00001558                 extrn __imp__RegOpenKeyA@12:near
UNDEF:00001558                                         ; CODE XREF: _ssh_gss_setup+58p
UNDEF:00001558                                         ; DATA XREF: _ssh_gss_setup+58r
UNDEF:0000155C                 extrn _safemalloc:near  ; CODE XREF: _ssh_gss_setup+1Bp
UNDEF:0000155C                                         ; _ssh_gss_setup+2Ap ...
UNDEF:00001560 ; __fastcall _RTC_CheckStackVars(x, x)
UNDEF:00001560                 extrn @_RTC_CheckStackVars@8:near
UNDEF:00001560                                         ; CODE XREF: _ssh_gss_setup+5D0p
UNDEF:00001560                                         ; _ssh_sspi_init_sec_context+128p ...
UNDEF:00001564                 extrn __RTC_CheckEsp:near ; CODE XREF: _ssh_gss_setup+60p
UNDEF:00001564                                         ; _ssh_gss_setup+8Cp ...
UNDEF:00001568                 extrn __RTC_Shutdown:near
UNDEF:00001568                                         ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
UNDEF:0000156C                 extrn __RTC_InitBase:near
UNDEF:0000156C                                         ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
UNDEF:00001570 ; BOOL __stdcall FreeLibrary(HMODULE hLibModule)
UNDEF:00001570                 extrn __imp__FreeLibrary@4:near
UNDEF:00001570                                         ; CODE XREF: _ssh_gss_cleanup+3Bp
UNDEF:00001570                                         ; DATA XREF: _ssh_gss_cleanup+3Br
UNDEF:00001574                 extrn _dupcat:near      ; CODE XREF: _ssh_sspi_import_name+23p
UNDEF:00001578 ; void *__cdecl memset(void *Dst, int Val, size_t Size)
UNDEF:00001578                 extrn _memset:near      ; CODE XREF: _ssh_sspi_acquire_cred+23p
UNDEF:00001578                                         ; _ssh_sspi_get_mic+48p
UNDEF:0000157C ; size_t __cdecl strlen(const char *Str)
UNDEF:0000157C                 extrn _strlen:near      ; CODE XREF: _ssh_sspi_display_status+117p
UNDEF:00001580                 extrn _dupstr:near      ; CODE XREF: _ssh_sspi_display_status+102p
UNDEF:00001584                 extrn ___security_cookie:near
UNDEF:00001584                                         ; DATA XREF: _ssh_sspi_get_mic+17r
UNDEF:00001588 ; __fastcall __security_check_cookie(x)
UNDEF:00001588                 extrn @__security_check_cookie@4:near
UNDEF:00001588                                         ; CODE XREF: _ssh_sspi_get_mic+12Cp
UNDEF:00001588
UNDEF:00001588
UNDEF:00001588                 end
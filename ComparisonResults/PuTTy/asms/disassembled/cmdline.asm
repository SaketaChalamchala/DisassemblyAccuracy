.bss:00000000 ;
.bss:00000000 ; +-------------------------------------------------------------------------+
.bss:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.bss:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.bss:00000000 ; |                      License info: 48-3677-7074-51                      |
.bss:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.bss:00000000 ; +-------------------------------------------------------------------------+
.bss:00000000 ;
.bss:00000000 ; Input MD5   : D85107667161DBFDB092B98CB120B32B
.bss:00000000 ; Input CRC32 : 0714BBFA
.bss:00000000
.bss:00000000 ; File Name   : C:\workspace\Putty\windows\VS2010\putty\Debug\cmdline.obj
.bss:00000000 ; Format      : COFF (X386MAGIC)
.bss:00000000 ; includelib "uuid.lib"
.bss:00000000 ; includelib "LIBCMTD"
.bss:00000000 ; includelib "OLDNAMES"
.bss:00000000
.bss:00000000                 .686p
.bss:00000000                 .mmx
.bss:00000000                 .model flat
.bss:00000000 .intel_syntax noprefix
.bss:00000000
.bss:00000000 ; ===========================================================================
.bss:00000000
.bss:00000000 ; Segment type: Uninitialized
.bss:00000000 ; Segment permissions: Read/Write
.bss:00000000 _bss            segment dword public 'BSS' use32
.bss:00000000                 assume cs:_bss
.bss:00000000                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.bss:00000000 _saves          dd ?                    ; DATA XREF: _cmdline_cleanup+69r
.bss:00000000                                         ; _cmdline_cleanup+7Ew ...
.bss:00000004 dword_4         dd ?                    ; DATA XREF: _cmdline_cleanup+9Ew
.bss:00000004                                         ; _cmdline_save_param+Fr ...
.bss:00000008 dword_8         dd ?                    ; DATA XREF: _cmdline_cleanup+8Ew
.bss:00000008                                         ; _cmdline_save_param+15r ...
.bss:0000000C                 db    ? ;
.bss:0000000D                 db    ? ;
.bss:0000000E                 db    ? ;
.bss:0000000F                 db    ? ;
.bss:00000010                 db    ? ;
.bss:00000011                 db    ? ;
.bss:00000012                 db    ? ;
.bss:00000013                 db    ? ;
.bss:00000014                 db    ? ;
.bss:00000015                 db    ? ;
.bss:00000016                 db    ? ;
.bss:00000017                 db    ? ;
.bss:00000018 ; char *cmdline_password
.bss:00000018 _cmdline_password dd ?                  ; DATA XREF: _cmdline_cleanup+Br
.bss:00000018                                         ; _cmdline_cleanup+14r ...
.bss:0000001C ?tried_once@?1??cmdline_get_passwd_input@@9@9 dd ?
.bss:0000001C                                         ; DATA XREF: _cmdline_get_passwd_input:loc_3DAr
.bss:0000001C                                         ; _cmdline_get_passwd_input+8Aw
.bss:00000020                 public _cmdline_tooltype
.bss:00000020 _cmdline_tooltype dd ?                  ; DATA XREF: _cmdline_check_unavailable+3r
.bss:00000024 $SG85744        db    ? ;               ; DATA XREF: _cmdline_process_param:loc_B1Fo
.bss:00000025 $SG85837        db    ? ;               ; DATA XREF: _cmdline_process_param+B23o
.bss:00000026                 align 4
.bss:00000026 _bss            ends
.bss:00000026
.data:00000028 ; ===========================================================================
.data:00000028
.data:00000028 ; Segment type: Pure data
.data:00000028 ; Segment permissions: Read/Write
.data:00000028 _data           segment dword public 'DATA' use32
.data:00000028                 assume cs:_data
.data:00000028                 ;org 28h
.data:00000028 $SG85596        db 'option "%s" not available in this tool',0
.data:00000028                                         ; DATA XREF: _cmdline_check_unavailable+11o
.data:0000004F                 align 10h
.data:00000050 ; char _SG85608[]
.data:00000050 $SG85608        db '-load',0            ; DATA XREF: _cmdline_process_param+1Do
.data:00000056                 align 4
.data:00000058 ; char _SG85615[]
.data:00000058 $SG85615        db '-ssh',0             ; DATA XREF: _cmdline_process_param:loc_4F7o
.data:0000005D                 align 10h
.data:00000060 ; char _SG85630[]
.data:00000060 $SG85630        db '-telnet',0          ; DATA XREF: _cmdline_process_param:loc_5C3o
.data:00000068 ; char _SG85645[]
.data:00000068 $SG85645        db '-rlogin',0          ; DATA XREF: _cmdline_process_param:loc_68Fo
.data:00000070 ; char _SG85660[]
.data:00000070 $SG85660        db '-raw',0             ; DATA XREF: _cmdline_process_param:loc_75Bo
.data:00000070                                         ; .data:$SG85826o
.data:00000075                 align 4
.data:00000078 ; char _SG85675[]
.data:00000078 $SG85675        db '-serial',0          ; DATA XREF: _cmdline_process_param:loc_7FEo
.data:00000080 ; char _SG85690[]
.data:00000080 $SG85690        db '-v',0               ; DATA XREF: _cmdline_process_param:loc_8BDo
.data:00000083                 align 4
.data:00000084 ; char _SG85697[]
.data:00000084 $SG85697        db '-l',0               ; DATA XREF: _cmdline_process_param:loc_90Ao
.data:00000087                 align 4
.data:00000088 ; char _SG85712[]
.data:00000088 $SG85712        db '-loghost',0         ; DATA XREF: _cmdline_process_param:loc_9ABo
.data:00000091                 align 4
.data:00000094 ; char _SG85727[]
.data:00000094 $SG85727        db '-hostkey',0         ; DATA XREF: _cmdline_process_param:loc_A4Co
.data:0000009D                 align 10h
.data:000000A0 $SG85743        db 27h,'%s',27h,' is not a valid format for a manual host key specification'
.data:000000A0                                         ; DATA XREF: _cmdline_process_param+6A2o
.data:000000A0                 db 0
.data:000000DF                 align 10h
.data:000000E0 ; char _SG85747[]
.data:000000E0 $SG85747        db '-L',0               ; DATA XREF: _cmdline_process_param:loc_B45o
.data:000000E3                 align 4
.data:000000E4 ; char _SG85748[]
.data:000000E4 $SG85748        db '-R',0               ; DATA XREF: _cmdline_process_param+6FEo
.data:000000E7                 align 4
.data:000000E8 ; char _SG85749[]
.data:000000E8 $SG85749        db '-D',0               ; DATA XREF: _cmdline_process_param+713o
.data:000000EB                 align 4
.data:000000EC ; char _SG85769[]
.data:000000EC $SG85769        db '-D',0               ; DATA XREF: _cmdline_process_param+7A2o
.data:000000EF                 align 10h
.data:000000F0 $SG85776        db '-%c expects at least two colons in its argument',0
.data:000000F0                                         ; DATA XREF: _cmdline_process_param+814o
.data:00000120 $SG85778        db '%c%.*s',0           ; DATA XREF: _cmdline_process_param+839o
.data:00000127                 align 4
.data:00000128 $SG85780        db 'L%s',0              ; DATA XREF: _cmdline_process_param+861o
.data:0000012C $SG85781        dd offset $SG85596+1Ch  ; DATA XREF: _cmdline_process_param+871o
.data:0000012C                                         ; " this tool"
.data:00000130 ; char _SG85783[4]
.data:00000130 $SG85783        db '-nc',0              ; DATA XREF: _cmdline_process_param:loc_D0Eo
.data:00000134 $SG85800        db '-nc expects argument of form ',27h,'host:port',27h,0
.data:00000134                                         ; DATA XREF: _cmdline_process_param+958o
.data:0000015D                 align 10h
.data:00000160 $SG85802        db '%.*s',0             ; DATA XREF: _cmdline_process_param+978o
.data:00000165                 align 4
.data:00000168 ; char _SG85804[]
.data:00000168 $SG85804        db '-m',0               ; DATA XREF: _cmdline_process_param:loc_E20o
.data:0000016B                 align 4
.data:0000016C ; char _SG85826[]
.data:0000016C $SG85826        dd offset $SG85660+2    ; DATA XREF: _cmdline_process_param+A6Do
.data:0000016C                                         ; "aw"
.data:00000170 $SG85828        db 'unable to open command file "%s"',0
.data:00000170                                         ; DATA XREF: _cmdline_process_param+A8Bo
.data:00000191                 align 4
.data:00000194 ; char _SG85839[]
.data:00000194 $SG85839        db '-P',0               ; DATA XREF: _cmdline_process_param:loc_FAEo
.data:00000197                 align 4
.data:00000198 ; char _SG85854[]
.data:00000198 $SG85854        db '-pw',0              ; DATA XREF: _cmdline_process_param:loc_1058o
.data:0000019C $SG85869        db 'the -pw option can only be used with the SSH protocol',0
.data:0000019C                                         ; DATA XREF: _cmdline_process_param+C9Eo
.data:000001D2                 align 4
.data:000001D4 ; char _SG85873[]
.data:000001D4 $SG85873        db '-agent',0           ; DATA XREF: _cmdline_process_param:loc_1133o
.data:000001DB                 align 4
.data:000001DC ; char _SG85874[]
.data:000001DC $SG85874        db '-pagent',0          ; DATA XREF: _cmdline_process_param+CECo
.data:000001E4 ; char _SG85875[]
.data:000001E4 $SG85875        db '-pageant',0         ; DATA XREF: _cmdline_process_param+D01o
.data:000001ED                 align 10h
.data:000001F0 ; char _SG85891[]
.data:000001F0 $SG85891        db '-noagent',0         ; DATA XREF: _cmdline_process_param:loc_11EDo
.data:000001F9                 align 4
.data:000001FC ; char _SG85892[]
.data:000001FC $SG85892        db '-nopagent',0        ; DATA XREF: _cmdline_process_param+DA6o
.data:00000206                 align 4
.data:00000208 ; char _SG85893[]
.data:00000208 $SG85893        db '-nopageant',0       ; DATA XREF: _cmdline_process_param+DBBo
.data:00000213                 align 4
.data:00000214 ; char _SG85908[]
.data:00000214 $SG85908        db '-A',0               ; DATA XREF: _cmdline_process_param:loc_12A7o
.data:00000217                 align 4
.data:00000218 ; char _SG85923[]
.data:00000218 $SG85923        db '-a',0               ; DATA XREF: _cmdline_process_param:loc_1337o
.data:0000021B                 align 4
.data:0000021C ; char _SG85938[]
.data:0000021C $SG85938        db '-X',0               ; DATA XREF: _cmdline_process_param:loc_13C7o
.data:0000021F                 align 10h
.data:00000220 ; char _SG85953[]
.data:00000220 $SG85953        db '-x',0               ; DATA XREF: _cmdline_process_param:loc_145Ao
.data:00000223                 align 4
.data:00000224 ; char _SG85968[]
.data:00000224 $SG85968        db '-t',0               ; DATA XREF: _cmdline_process_param:loc_14EDo
.data:00000227                 align 4
.data:00000228 ; char _SG85983[]
.data:00000228 $SG85983        db '-T',0               ; DATA XREF: _cmdline_process_param:loc_157Do
.data:0000022B                 align 4
.data:0000022C ; char _SG85998[]
.data:0000022C $SG85998        db '-N',0               ; DATA XREF: _cmdline_process_param:loc_160Do
.data:0000022F                 align 10h
.data:00000230 ; char _SG86013[]
.data:00000230 $SG86013        db '-C',0               ; DATA XREF: _cmdline_process_param:loc_169Do
.data:00000233                 align 4
.data:00000234 ; char _SG86028[]
.data:00000234 $SG86028        db '-1',0               ; DATA XREF: _cmdline_process_param:loc_172Do
.data:00000237                 align 4
.data:00000238 ; char _SG86043[]
.data:00000238 $SG86043        db '-2',0               ; DATA XREF: _cmdline_process_param:loc_17BDo
.data:0000023B                 align 4
.data:0000023C ; char _SG86058[]
.data:0000023C $SG86058        db '-i',0               ; DATA XREF: _cmdline_process_param:loc_184Do
.data:0000023F                 align 10h
.data:00000240 ; char _SG86075[]
.data:00000240 $SG86075        db '-4',0               ; DATA XREF: _cmdline_process_param:loc_1909o
.data:00000243                 align 4
.data:00000244 ; char _SG86076[]
.data:00000244 $SG86076        db '-ipv4',0            ; DATA XREF: _cmdline_process_param+14C2o
.data:0000024A                 align 4
.data:0000024C ; char _SG86088[]
.data:0000024C $SG86088        db '-6',0               ; DATA XREF: _cmdline_process_param:loc_1990o
.data:0000024F                 align 10h
.data:00000250 ; char _SG86089[]
.data:00000250 $SG86089        db '-ipv6',0            ; DATA XREF: _cmdline_process_param+1549o
.data:00000256                 align 4
.data:00000258 ; char _SG86100[]
.data:00000258 $SG86100        db '-sercfg',0          ; DATA XREF: _cmdline_process_param:loc_1A17o
.data:00000260 $SG86116        db 'the -sercfg option can only be used with the serial protocol',0
.data:00000260                                         ; DATA XREF: _cmdline_process_param+165Do
.data:0000029D                 align 10h
.data:000002A0 $SG86142        db 'Unrecognised suboption "-sercfg %c"',0
.data:000002A0                                         ; DATA XREF: _cmdline_process_param+17EAo
.data:000002C4 ; char _SG86145[]
.data:000002C4 $SG86145        db '1.5',0              ; DATA XREF: _cmdline_process_param+1801o
.data:000002C8 $SG86150        db 'Unrecognised suboption "-sercfg %s"',0
.data:000002C8                                         ; DATA XREF: _cmdline_process_param+1855o
.data:000002C8 _data           ends
.data:000002C8
.text:000002EC ; ===========================================================================
.text:000002EC
.text:000002EC ; Segment type: Pure code
.text:000002EC ; Segment permissions: Read/Execute
.text:000002EC _text           segment para public 'CODE' use32
.text:000002EC                 assume cs:_text
.text:000002EC                 ;org 2ECh
.text:000002EC                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text:000002EC
.text:000002EC ; =============== S U B R O U T I N E =======================================
.text:000002EC
.text:000002EC ; Attributes: bp-based frame
.text:000002EC
.text:000002EC                 public _cmdline_cleanup
.text:000002EC _cmdline_cleanup proc near
.text:000002EC
.text:000002EC var_4           = dword ptr -4
.text:000002EC
.text:000002EC                 push    ebp
.text:000002ED                 mov     ebp, esp
.text:000002EF                 push    ecx
.text:000002F0                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000002F7                 cmp     ds:_cmdline_password, 0
.text:000002FE                 jz      short loc_337
.text:00000300                 mov     eax, ds:_cmdline_password
.text:00000305                 push    eax             ; char *
.text:00000306                 call    _strlen
.text:0000030B                 add     esp, 4
.text:0000030E                 push    eax
.text:0000030F                 mov     ecx, ds:_cmdline_password
.text:00000315                 push    ecx
.text:00000316                 call    _smemclr
.text:0000031B                 add     esp, 8
.text:0000031E                 mov     edx, ds:_cmdline_password
.text:00000324                 push    edx
.text:00000325                 call    _safefree
.text:0000032A                 add     esp, 4
.text:0000032D                 mov     ds:_cmdline_password, 0
.text:00000337
.text:00000337 loc_337:                                ; CODE XREF: _cmdline_cleanup+12j
.text:00000337                 mov     [ebp+var_4], 0
.text:0000033E                 jmp     short loc_349
.text:00000340 ; ---------------------------------------------------------------------------
.text:00000340
.text:00000340 loc_340:                                ; CODE XREF: _cmdline_cleanup+A8j
.text:00000340                 mov     eax, [ebp+var_4]
.text:00000343                 add     eax, 1
.text:00000346                 mov     [ebp+var_4], eax
.text:00000349
.text:00000349 loc_349:                                ; CODE XREF: _cmdline_cleanup+52j
.text:00000349                 cmp     [ebp+var_4], 2
.text:0000034D                 jge     short loc_396
.text:0000034F                 mov     ecx, [ebp+var_4]
.text:00000352                 imul    ecx, 0Ch
.text:00000355                 mov     edx, ds:_saves[ecx]
.text:0000035B                 push    edx
.text:0000035C                 call    _safefree
.text:00000361                 add     esp, 4
.text:00000364                 mov     eax, [ebp+var_4]
.text:00000367                 imul    eax, 0Ch
.text:0000036A                 mov     ds:_saves[eax], 0
.text:00000374                 mov     ecx, [ebp+var_4]
.text:00000377                 imul    ecx, 0Ch
.text:0000037A                 mov     ds:dword_8[ecx], 0
.text:00000384                 mov     edx, [ebp+var_4]
.text:00000387                 imul    edx, 0Ch
.text:0000038A                 mov     ds:dword_4[edx], 0
.text:00000394                 jmp     short loc_340
.text:00000396 ; ---------------------------------------------------------------------------
.text:00000396
.text:00000396 loc_396:                                ; CODE XREF: _cmdline_cleanup+61j
.text:00000396                 add     esp, 4
.text:00000399                 cmp     ebp, esp
.text:0000039B                 call    __RTC_CheckEsp
.text:000003A0                 mov     esp, ebp
.text:000003A2                 pop     ebp
.text:000003A3                 retn
.text:000003A3 _cmdline_cleanup endp
.text:000003A3
.text:000003A3 ; ---------------------------------------------------------------------------
.text:000003A4                 db 8 dup(0CCh)
.text:000003AC
.text:000003AC ; =============== S U B R O U T I N E =======================================
.text:000003AC
.text:000003AC ; Attributes: bp-based frame
.text:000003AC
.text:000003AC                 public _cmdline_get_passwd_input
.text:000003AC _cmdline_get_passwd_input proc near
.text:000003AC
.text:000003AC arg_0           = dword ptr  8
.text:000003AC arg_4           = dword ptr  0Ch
.text:000003AC
.text:000003AC                 push    ebp
.text:000003AD                 mov     ebp, esp
.text:000003AF                 cmp     ds:_cmdline_password, 0
.text:000003B6                 jz      short loc_3D5
.text:000003B8                 cmp     [ebp+arg_4], 0
.text:000003BC                 jnz     short loc_3D5
.text:000003BE                 mov     eax, [ebp+arg_0]
.text:000003C1                 cmp     dword ptr [eax+14h], 1
.text:000003C5                 jnz     short loc_3D5
.text:000003C7                 mov     ecx, [ebp+arg_0]
.text:000003CA                 mov     edx, [ecx+18h]
.text:000003CD                 mov     eax, [edx]
.text:000003CF                 cmp     dword ptr [eax+4], 0
.text:000003D3                 jz      short loc_3DA
.text:000003D5
.text:000003D5 loc_3D5:                                ; CODE XREF: _cmdline_get_passwd_input+Aj
.text:000003D5                                         ; _cmdline_get_passwd_input+10j ...
.text:000003D5                 or      eax, 0FFFFFFFFh
.text:000003D8                 jmp     short loc_445
.text:000003DA ; ---------------------------------------------------------------------------
.text:000003DA
.text:000003DA loc_3DA:                                ; CODE XREF: _cmdline_get_passwd_input+27j
.text:000003DA                 cmp     ds:?tried_once@?1??cmdline_get_passwd_input@@9@9, 0
.text:000003E1                 jz      short loc_3E7
.text:000003E3                 xor     eax, eax
.text:000003E5                 jmp     short loc_445
.text:000003E7 ; ---------------------------------------------------------------------------
.text:000003E7
.text:000003E7 loc_3E7:                                ; CODE XREF: _cmdline_get_passwd_input+35j
.text:000003E7                 mov     ecx, ds:_cmdline_password
.text:000003ED                 push    ecx
.text:000003EE                 mov     edx, [ebp+arg_0]
.text:000003F1                 mov     eax, [edx+18h]
.text:000003F4                 mov     ecx, [eax]
.text:000003F6                 push    ecx
.text:000003F7                 call    _prompt_set_result
.text:000003FC                 add     esp, 8
.text:000003FF                 mov     edx, ds:_cmdline_password
.text:00000405                 push    edx             ; char *
.text:00000406                 call    _strlen
.text:0000040B                 add     esp, 4
.text:0000040E                 push    eax
.text:0000040F                 mov     eax, ds:_cmdline_password
.text:00000414                 push    eax
.text:00000415                 call    _smemclr
.text:0000041A                 add     esp, 8
.text:0000041D                 mov     ecx, ds:_cmdline_password
.text:00000423                 push    ecx
.text:00000424                 call    _safefree
.text:00000429                 add     esp, 4
.text:0000042C                 mov     ds:_cmdline_password, 0
.text:00000436                 mov     ds:?tried_once@?1??cmdline_get_passwd_input@@9@9, 1
.text:00000440                 mov     eax, 1
.text:00000445
.text:00000445 loc_445:                                ; CODE XREF: _cmdline_get_passwd_input+2Cj
.text:00000445                                         ; _cmdline_get_passwd_input+39j
.text:00000445                 cmp     ebp, esp
.text:00000447                 call    __RTC_CheckEsp
.text:0000044C                 pop     ebp
.text:0000044D                 retn
.text:0000044D _cmdline_get_passwd_input endp
.text:0000044D
.text:0000044D ; ---------------------------------------------------------------------------
.text:0000044E                 db 0Eh dup(0CCh)
.text:0000045C
.text:0000045C ; =============== S U B R O U T I N E =======================================
.text:0000045C
.text:0000045C ; Attributes: bp-based frame
.text:0000045C
.text:0000045C ; int __cdecl cmdline_process_param(char *, char *, int, int)
.text:0000045C                 public _cmdline_process_param
.text:0000045C _cmdline_process_param proc near        ; CODE XREF: _cmdline_run_saved+7Cp
.text:0000045C
.text:0000045C var_60          = dword ptr -60h
.text:0000045C var_5C          = dword ptr -5Ch
.text:0000045C var_58          = dword ptr -58h
.text:0000045C var_54          = dword ptr -54h
.text:0000045C var_50          = dword ptr -50h
.text:0000045C var_4C          = dword ptr -4Ch
.text:0000045C var_48          = dword ptr -48h
.text:0000045C var_44          = dword ptr -44h
.text:0000045C var_40          = dword ptr -40h
.text:0000045C var_3C          = dword ptr -3Ch
.text:0000045C var_38          = dword ptr -38h
.text:0000045C var_34          = dword ptr -34h
.text:0000045C var_30          = dword ptr -30h
.text:0000045C var_2C          = dword ptr -2Ch
.text:0000045C var_28          = dword ptr -28h
.text:0000045C var_24          = dword ptr -24h
.text:0000045C var_20          = dword ptr -20h
.text:0000045C var_1C          = dword ptr -1Ch
.text:0000045C var_18          = dword ptr -18h
.text:0000045C var_14          = dword ptr -14h
.text:0000045C var_10          = dword ptr -10h
.text:0000045C var_9           = byte ptr -9
.text:0000045C var_8           = dword ptr -8
.text:0000045C var_4           = dword ptr -4
.text:0000045C arg_0           = dword ptr  8
.text:0000045C arg_4           = dword ptr  0Ch
.text:0000045C arg_8           = dword ptr  10h
.text:0000045C arg_C           = dword ptr  14h
.text:0000045C
.text:0000045C                 push    ebp
.text:0000045D                 mov     ebp, esp
.text:0000045F                 sub     esp, 60h
.text:00000462                 push    edi
.text:00000463                 lea     edi, [ebp+var_60]
.text:00000466                 mov     ecx, 18h
.text:0000046B                 mov     eax, 0CCCCCCCCh
.text:00000470                 rep stosd
.text:00000472                 mov     [ebp+var_4], 0
.text:00000479                 push    offset $SG85608 ; "-load"
.text:0000047E                 mov     eax, [ebp+arg_0]
.text:00000481                 push    eax             ; char *
.text:00000482                 call    _strcmp
.text:00000487                 add     esp, 8
.text:0000048A                 test    eax, eax
.text:0000048C                 jnz     short loc_4F7
.text:0000048E
.text:0000048E loc_48E:                                ; CODE XREF: _cmdline_process_param+64j
.text:0000048E                 mov     ecx, 1
.text:00000493                 test    ecx, ecx
.text:00000495                 jz      short loc_4A7
.text:00000497                 cmp     [ebp+arg_4], 0
.text:0000049B                 jnz     short loc_4A7
.text:0000049D                 mov     eax, 0FFFFFFFEh
.text:000004A2                 jmp     loc_1CD2
.text:000004A7 ; ---------------------------------------------------------------------------
.text:000004A7
.text:000004A7 loc_4A7:                                ; CODE XREF: _cmdline_process_param+39j
.text:000004A7                                         ; _cmdline_process_param+3Fj
.text:000004A7                 mov     [ebp+var_4], 2
.text:000004AE                 cmp     [ebp+arg_8], 0
.text:000004B2                 jge     short loc_4BE
.text:000004B4                 mov     eax, 2
.text:000004B9                 jmp     loc_1CD2
.text:000004BE ; ---------------------------------------------------------------------------
.text:000004BE
.text:000004BE loc_4BE:                                ; CODE XREF: _cmdline_process_param+56j
.text:000004BE                 xor     edx, edx
.text:000004C0                 jnz     short loc_48E
.text:000004C2                 mov     eax, [ebp+arg_C]
.text:000004C5                 push    eax
.text:000004C6                 mov     ecx, [ebp+arg_4]
.text:000004C9                 push    ecx
.text:000004CA                 call    _do_defaults
.text:000004CF                 add     esp, 8
.text:000004D2                 mov     dword ptr ds:_loaded_session, 1
.text:000004DC                 mov     edx, [ebp+arg_4]
.text:000004DF                 push    edx
.text:000004E0                 call    _dupstr
.text:000004E5                 add     esp, 4
.text:000004E8                 mov     dword ptr ds:_cmdline_session_name, eax
.text:000004ED                 mov     eax, 2
.text:000004F2                 jmp     loc_1CD2
.text:000004F7 ; ---------------------------------------------------------------------------
.text:000004F7
.text:000004F7 loc_4F7:                                ; CODE XREF: _cmdline_process_param+30j
.text:000004F7                 push    offset $SG85615 ; "-ssh"
.text:000004FC                 mov     eax, [ebp+arg_0]
.text:000004FF                 push    eax             ; char *
.text:00000500                 call    _strcmp
.text:00000505                 add     esp, 8
.text:00000508                 test    eax, eax
.text:0000050A                 jnz     loc_5C3
.text:00000510
.text:00000510 loc_510:                                ; CODE XREF: _cmdline_process_param+DBj
.text:00000510                 xor     ecx, ecx
.text:00000512                 jz      short loc_51E
.text:00000514                 mov     eax, 0FFFFFFFEh
.text:00000519                 jmp     loc_1CD2
.text:0000051E ; ---------------------------------------------------------------------------
.text:0000051E
.text:0000051E loc_51E:                                ; CODE XREF: _cmdline_process_param+B6j
.text:0000051E                 mov     [ebp+var_4], 1
.text:00000525                 cmp     [ebp+arg_8], 0
.text:00000529                 jge     short loc_535
.text:0000052B                 mov     eax, 1
.text:00000530                 jmp     loc_1CD2
.text:00000535 ; ---------------------------------------------------------------------------
.text:00000535
.text:00000535 loc_535:                                ; CODE XREF: _cmdline_process_param+CDj
.text:00000535                 xor     edx, edx
.text:00000537                 jnz     short loc_510
.text:00000539
.text:00000539 loc_539:                                ; CODE XREF: _cmdline_process_param+F9j
.text:00000539                 mov     eax, [ebp+arg_0]
.text:0000053C                 push    eax
.text:0000053D                 push    3
.text:0000053F                 call    _cmdline_check_unavailable
.text:00000544                 add     esp, 8
.text:00000547                 test    eax, eax
.text:00000549                 jz      short loc_553
.text:0000054B                 mov     eax, [ebp+var_4]
.text:0000054E                 jmp     loc_1CD2
.text:00000553 ; ---------------------------------------------------------------------------
.text:00000553
.text:00000553 loc_553:                                ; CODE XREF: _cmdline_process_param+EDj
.text:00000553                 xor     ecx, ecx
.text:00000555                 jnz     short loc_539
.text:00000557
.text:00000557 loc_557:                                ; CODE XREF: _cmdline_process_param+11Dj
.text:00000557                 cmp     [ebp+arg_8], 0
.text:0000055B                 jz      short loc_577
.text:0000055D                 push    0
.text:0000055F                 mov     edx, [ebp+arg_4]
.text:00000562                 push    edx
.text:00000563                 mov     eax, [ebp+arg_0]
.text:00000566                 push    eax
.text:00000567                 call    _cmdline_save_param
.text:0000056C                 add     esp, 0Ch
.text:0000056F                 mov     eax, [ebp+var_4]
.text:00000572                 jmp     loc_1CD2
.text:00000577 ; ---------------------------------------------------------------------------
.text:00000577
.text:00000577 loc_577:                                ; CODE XREF: _cmdline_process_param+FFj
.text:00000577                 xor     ecx, ecx
.text:00000579                 jnz     short loc_557
.text:0000057B                 mov     dword ptr ds:_default_protocol, 3
.text:00000585                 mov     dword ptr ds:_default_port, 16h
.text:0000058F                 mov     edx, dword ptr ds:_default_protocol
.text:00000595                 push    edx
.text:00000596                 push    2
.text:00000598                 mov     eax, [ebp+arg_C]
.text:0000059B                 push    eax
.text:0000059C                 call    _conf_set_int
.text:000005A1                 add     esp, 0Ch
.text:000005A4                 mov     ecx, dword ptr ds:_default_port
.text:000005AA                 push    ecx
.text:000005AB                 push    1
.text:000005AD                 mov     edx, [ebp+arg_C]
.text:000005B0                 push    edx
.text:000005B1                 call    _conf_set_int
.text:000005B6                 add     esp, 0Ch
.text:000005B9                 mov     eax, 1
.text:000005BE                 jmp     loc_1CD2
.text:000005C3 ; ---------------------------------------------------------------------------
.text:000005C3
.text:000005C3 loc_5C3:                                ; CODE XREF: _cmdline_process_param+AEj
.text:000005C3                 push    offset $SG85630 ; "-telnet"
.text:000005C8                 mov     eax, [ebp+arg_0]
.text:000005CB                 push    eax             ; char *
.text:000005CC                 call    _strcmp
.text:000005D1                 add     esp, 8
.text:000005D4                 test    eax, eax
.text:000005D6                 jnz     loc_68F
.text:000005DC
.text:000005DC loc_5DC:                                ; CODE XREF: _cmdline_process_param+1A7j
.text:000005DC                 xor     ecx, ecx
.text:000005DE                 jz      short loc_5EA
.text:000005E0                 mov     eax, 0FFFFFFFEh
.text:000005E5                 jmp     loc_1CD2
.text:000005EA ; ---------------------------------------------------------------------------
.text:000005EA
.text:000005EA loc_5EA:                                ; CODE XREF: _cmdline_process_param+182j
.text:000005EA                 mov     [ebp+var_4], 1
.text:000005F1                 cmp     [ebp+arg_8], 0
.text:000005F5                 jge     short loc_601
.text:000005F7                 mov     eax, 1
.text:000005FC                 jmp     loc_1CD2
.text:00000601 ; ---------------------------------------------------------------------------
.text:00000601
.text:00000601 loc_601:                                ; CODE XREF: _cmdline_process_param+199j
.text:00000601                 xor     edx, edx
.text:00000603                 jnz     short loc_5DC
.text:00000605
.text:00000605 loc_605:                                ; CODE XREF: _cmdline_process_param+1C5j
.text:00000605                 mov     eax, [ebp+arg_0]
.text:00000608                 push    eax
.text:00000609                 push    3
.text:0000060B                 call    _cmdline_check_unavailable
.text:00000610                 add     esp, 8
.text:00000613                 test    eax, eax
.text:00000615                 jz      short loc_61F
.text:00000617                 mov     eax, [ebp+var_4]
.text:0000061A                 jmp     loc_1CD2
.text:0000061F ; ---------------------------------------------------------------------------
.text:0000061F
.text:0000061F loc_61F:                                ; CODE XREF: _cmdline_process_param+1B9j
.text:0000061F                 xor     ecx, ecx
.text:00000621                 jnz     short loc_605
.text:00000623
.text:00000623 loc_623:                                ; CODE XREF: _cmdline_process_param+1E9j
.text:00000623                 cmp     [ebp+arg_8], 0
.text:00000627                 jz      short loc_643
.text:00000629                 push    0
.text:0000062B                 mov     edx, [ebp+arg_4]
.text:0000062E                 push    edx
.text:0000062F                 mov     eax, [ebp+arg_0]
.text:00000632                 push    eax
.text:00000633                 call    _cmdline_save_param
.text:00000638                 add     esp, 0Ch
.text:0000063B                 mov     eax, [ebp+var_4]
.text:0000063E                 jmp     loc_1CD2
.text:00000643 ; ---------------------------------------------------------------------------
.text:00000643
.text:00000643 loc_643:                                ; CODE XREF: _cmdline_process_param+1CBj
.text:00000643                 xor     ecx, ecx
.text:00000645                 jnz     short loc_623
.text:00000647                 mov     dword ptr ds:_default_protocol, 1
.text:00000651                 mov     dword ptr ds:_default_port, 17h
.text:0000065B                 mov     edx, dword ptr ds:_default_protocol
.text:00000661                 push    edx
.text:00000662                 push    2
.text:00000664                 mov     eax, [ebp+arg_C]
.text:00000667                 push    eax
.text:00000668                 call    _conf_set_int
.text:0000066D                 add     esp, 0Ch
.text:00000670                 mov     ecx, dword ptr ds:_default_port
.text:00000676                 push    ecx
.text:00000677                 push    1
.text:00000679                 mov     edx, [ebp+arg_C]
.text:0000067C                 push    edx
.text:0000067D                 call    _conf_set_int
.text:00000682                 add     esp, 0Ch
.text:00000685                 mov     eax, 1
.text:0000068A                 jmp     loc_1CD2
.text:0000068F ; ---------------------------------------------------------------------------
.text:0000068F
.text:0000068F loc_68F:                                ; CODE XREF: _cmdline_process_param+17Aj
.text:0000068F                 push    offset $SG85645 ; "-rlogin"
.text:00000694                 mov     eax, [ebp+arg_0]
.text:00000697                 push    eax             ; char *
.text:00000698                 call    _strcmp
.text:0000069D                 add     esp, 8
.text:000006A0                 test    eax, eax
.text:000006A2                 jnz     loc_75B
.text:000006A8
.text:000006A8 loc_6A8:                                ; CODE XREF: _cmdline_process_param+273j
.text:000006A8                 xor     ecx, ecx
.text:000006AA                 jz      short loc_6B6
.text:000006AC                 mov     eax, 0FFFFFFFEh
.text:000006B1                 jmp     loc_1CD2
.text:000006B6 ; ---------------------------------------------------------------------------
.text:000006B6
.text:000006B6 loc_6B6:                                ; CODE XREF: _cmdline_process_param+24Ej
.text:000006B6                 mov     [ebp+var_4], 1
.text:000006BD                 cmp     [ebp+arg_8], 0
.text:000006C1                 jge     short loc_6CD
.text:000006C3                 mov     eax, 1
.text:000006C8                 jmp     loc_1CD2
.text:000006CD ; ---------------------------------------------------------------------------
.text:000006CD
.text:000006CD loc_6CD:                                ; CODE XREF: _cmdline_process_param+265j
.text:000006CD                 xor     edx, edx
.text:000006CF                 jnz     short loc_6A8
.text:000006D1
.text:000006D1 loc_6D1:                                ; CODE XREF: _cmdline_process_param+291j
.text:000006D1                 mov     eax, [ebp+arg_0]
.text:000006D4                 push    eax
.text:000006D5                 push    3
.text:000006D7                 call    _cmdline_check_unavailable
.text:000006DC                 add     esp, 8
.text:000006DF                 test    eax, eax
.text:000006E1                 jz      short loc_6EB
.text:000006E3                 mov     eax, [ebp+var_4]
.text:000006E6                 jmp     loc_1CD2
.text:000006EB ; ---------------------------------------------------------------------------
.text:000006EB
.text:000006EB loc_6EB:                                ; CODE XREF: _cmdline_process_param+285j
.text:000006EB                 xor     ecx, ecx
.text:000006ED                 jnz     short loc_6D1
.text:000006EF
.text:000006EF loc_6EF:                                ; CODE XREF: _cmdline_process_param+2B5j
.text:000006EF                 cmp     [ebp+arg_8], 0
.text:000006F3                 jz      short loc_70F
.text:000006F5                 push    0
.text:000006F7                 mov     edx, [ebp+arg_4]
.text:000006FA                 push    edx
.text:000006FB                 mov     eax, [ebp+arg_0]
.text:000006FE                 push    eax
.text:000006FF                 call    _cmdline_save_param
.text:00000704                 add     esp, 0Ch
.text:00000707                 mov     eax, [ebp+var_4]
.text:0000070A                 jmp     loc_1CD2
.text:0000070F ; ---------------------------------------------------------------------------
.text:0000070F
.text:0000070F loc_70F:                                ; CODE XREF: _cmdline_process_param+297j
.text:0000070F                 xor     ecx, ecx
.text:00000711                 jnz     short loc_6EF
.text:00000713                 mov     dword ptr ds:_default_protocol, 2
.text:0000071D                 mov     dword ptr ds:_default_port, 201h
.text:00000727                 mov     edx, dword ptr ds:_default_protocol
.text:0000072D                 push    edx
.text:0000072E                 push    2
.text:00000730                 mov     eax, [ebp+arg_C]
.text:00000733                 push    eax
.text:00000734                 call    _conf_set_int
.text:00000739                 add     esp, 0Ch
.text:0000073C                 mov     ecx, dword ptr ds:_default_port
.text:00000742                 push    ecx
.text:00000743                 push    1
.text:00000745                 mov     edx, [ebp+arg_C]
.text:00000748                 push    edx
.text:00000749                 call    _conf_set_int
.text:0000074E                 add     esp, 0Ch
.text:00000751                 mov     eax, 1
.text:00000756                 jmp     loc_1CD2
.text:0000075B ; ---------------------------------------------------------------------------
.text:0000075B
.text:0000075B loc_75B:                                ; CODE XREF: _cmdline_process_param+246j
.text:0000075B                 push    offset $SG85660 ; "-raw"
.text:00000760                 mov     eax, [ebp+arg_0]
.text:00000763                 push    eax             ; char *
.text:00000764                 call    _strcmp
.text:00000769                 add     esp, 8
.text:0000076C                 test    eax, eax
.text:0000076E                 jnz     loc_7FE
.text:00000774
.text:00000774 loc_774:                                ; CODE XREF: _cmdline_process_param+33Fj
.text:00000774                 xor     ecx, ecx
.text:00000776                 jz      short loc_782
.text:00000778                 mov     eax, 0FFFFFFFEh
.text:0000077D                 jmp     loc_1CD2
.text:00000782 ; ---------------------------------------------------------------------------
.text:00000782
.text:00000782 loc_782:                                ; CODE XREF: _cmdline_process_param+31Aj
.text:00000782                 mov     [ebp+var_4], 1
.text:00000789                 cmp     [ebp+arg_8], 0
.text:0000078D                 jge     short loc_799
.text:0000078F                 mov     eax, 1
.text:00000794                 jmp     loc_1CD2
.text:00000799 ; ---------------------------------------------------------------------------
.text:00000799
.text:00000799 loc_799:                                ; CODE XREF: _cmdline_process_param+331j
.text:00000799                 xor     edx, edx
.text:0000079B                 jnz     short loc_774
.text:0000079D
.text:0000079D loc_79D:                                ; CODE XREF: _cmdline_process_param+35Dj
.text:0000079D                 mov     eax, [ebp+arg_0]
.text:000007A0                 push    eax
.text:000007A1                 push    3
.text:000007A3                 call    _cmdline_check_unavailable
.text:000007A8                 add     esp, 8
.text:000007AB                 test    eax, eax
.text:000007AD                 jz      short loc_7B7
.text:000007AF                 mov     eax, [ebp+var_4]
.text:000007B2                 jmp     loc_1CD2
.text:000007B7 ; ---------------------------------------------------------------------------
.text:000007B7
.text:000007B7 loc_7B7:                                ; CODE XREF: _cmdline_process_param+351j
.text:000007B7                 xor     ecx, ecx
.text:000007B9                 jnz     short loc_79D
.text:000007BB
.text:000007BB loc_7BB:                                ; CODE XREF: _cmdline_process_param+381j
.text:000007BB                 cmp     [ebp+arg_8], 0
.text:000007BF                 jz      short loc_7DB
.text:000007C1                 push    0
.text:000007C3                 mov     edx, [ebp+arg_4]
.text:000007C6                 push    edx
.text:000007C7                 mov     eax, [ebp+arg_0]
.text:000007CA                 push    eax
.text:000007CB                 call    _cmdline_save_param
.text:000007D0                 add     esp, 0Ch
.text:000007D3                 mov     eax, [ebp+var_4]
.text:000007D6                 jmp     loc_1CD2
.text:000007DB ; ---------------------------------------------------------------------------
.text:000007DB
.text:000007DB loc_7DB:                                ; CODE XREF: _cmdline_process_param+363j
.text:000007DB                 xor     ecx, ecx
.text:000007DD                 jnz     short loc_7BB
.text:000007DF                 mov     dword ptr ds:_default_protocol, 0
.text:000007E9                 mov     edx, dword ptr ds:_default_protocol
.text:000007EF                 push    edx
.text:000007F0                 push    2
.text:000007F2                 mov     eax, [ebp+arg_C]
.text:000007F5                 push    eax
.text:000007F6                 call    _conf_set_int
.text:000007FB                 add     esp, 0Ch
.text:000007FE
.text:000007FE loc_7FE:                                ; CODE XREF: _cmdline_process_param+312j
.text:000007FE                 push    offset $SG85675 ; "-serial"
.text:00000803                 mov     ecx, [ebp+arg_0]
.text:00000806                 push    ecx             ; char *
.text:00000807                 call    _strcmp
.text:0000080C                 add     esp, 8
.text:0000080F                 test    eax, eax
.text:00000811                 jnz     loc_8BD
.text:00000817
.text:00000817 loc_817:                                ; CODE XREF: _cmdline_process_param+3E2j
.text:00000817                 xor     edx, edx
.text:00000819                 jz      short loc_825
.text:0000081B                 mov     eax, 0FFFFFFFEh
.text:00000820                 jmp     loc_1CD2
.text:00000825 ; ---------------------------------------------------------------------------
.text:00000825
.text:00000825 loc_825:                                ; CODE XREF: _cmdline_process_param+3BDj
.text:00000825                 mov     [ebp+var_4], 1
.text:0000082C                 cmp     [ebp+arg_8], 0
.text:00000830                 jge     short loc_83C
.text:00000832                 mov     eax, 1
.text:00000837                 jmp     loc_1CD2
.text:0000083C ; ---------------------------------------------------------------------------
.text:0000083C
.text:0000083C loc_83C:                                ; CODE XREF: _cmdline_process_param+3D4j
.text:0000083C                 xor     eax, eax
.text:0000083E                 jnz     short loc_817
.text:00000840
.text:00000840 loc_840:                                ; CODE XREF: _cmdline_process_param+400j
.text:00000840                 mov     ecx, [ebp+arg_0]
.text:00000843                 push    ecx
.text:00000844                 push    3
.text:00000846                 call    _cmdline_check_unavailable
.text:0000084B                 add     esp, 8
.text:0000084E                 test    eax, eax
.text:00000850                 jz      short loc_85A
.text:00000852                 mov     eax, [ebp+var_4]
.text:00000855                 jmp     loc_1CD2
.text:0000085A ; ---------------------------------------------------------------------------
.text:0000085A
.text:0000085A loc_85A:                                ; CODE XREF: _cmdline_process_param+3F4j
.text:0000085A                 xor     edx, edx
.text:0000085C                 jnz     short loc_840
.text:0000085E
.text:0000085E loc_85E:                                ; CODE XREF: _cmdline_process_param+424j
.text:0000085E                 cmp     [ebp+arg_8], 0
.text:00000862                 jz      short loc_87E
.text:00000864                 push    0
.text:00000866                 mov     eax, [ebp+arg_4]
.text:00000869                 push    eax
.text:0000086A                 mov     ecx, [ebp+arg_0]
.text:0000086D                 push    ecx
.text:0000086E                 call    _cmdline_save_param
.text:00000873                 add     esp, 0Ch
.text:00000876                 mov     eax, [ebp+var_4]
.text:00000879                 jmp     loc_1CD2
.text:0000087E ; ---------------------------------------------------------------------------
.text:0000087E
.text:0000087E loc_87E:                                ; CODE XREF: _cmdline_process_param+406j
.text:0000087E                 xor     edx, edx
.text:00000880                 jnz     short loc_85E
.text:00000882                 mov     dword ptr ds:_default_protocol, 4
.text:0000088C                 mov     eax, dword ptr ds:_default_protocol
.text:00000891                 push    eax
.text:00000892                 push    2
.text:00000894                 mov     ecx, [ebp+arg_C]
.text:00000897                 push    ecx
.text:00000898                 call    _conf_set_int
.text:0000089D                 add     esp, 0Ch
.text:000008A0                 push    0
.text:000008A2                 mov     edx, [ebp+arg_C]
.text:000008A5                 push    edx
.text:000008A6                 call    _conf_get_str
.text:000008AB                 add     esp, 8
.text:000008AE                 push    eax
.text:000008AF                 push    37h ; '7'
.text:000008B1                 mov     eax, [ebp+arg_C]
.text:000008B4                 push    eax
.text:000008B5                 call    _conf_set_str
.text:000008BA                 add     esp, 0Ch
.text:000008BD
.text:000008BD loc_8BD:                                ; CODE XREF: _cmdline_process_param+3B5j
.text:000008BD                 push    offset $SG85690 ; "-v"
.text:000008C2                 mov     ecx, [ebp+arg_0]
.text:000008C5                 push    ecx             ; char *
.text:000008C6                 call    _strcmp
.text:000008CB                 add     esp, 8
.text:000008CE                 test    eax, eax
.text:000008D0                 jnz     short loc_90A
.text:000008D2
.text:000008D2 loc_8D2:                                ; CODE XREF: _cmdline_process_param+49Dj
.text:000008D2                 xor     edx, edx
.text:000008D4                 jz      short loc_8E0
.text:000008D6                 mov     eax, 0FFFFFFFEh
.text:000008DB                 jmp     loc_1CD2
.text:000008E0 ; ---------------------------------------------------------------------------
.text:000008E0
.text:000008E0 loc_8E0:                                ; CODE XREF: _cmdline_process_param+478j
.text:000008E0                 mov     [ebp+var_4], 1
.text:000008E7                 cmp     [ebp+arg_8], 0
.text:000008EB                 jge     short loc_8F7
.text:000008ED                 mov     eax, 1
.text:000008F2                 jmp     loc_1CD2
.text:000008F7 ; ---------------------------------------------------------------------------
.text:000008F7
.text:000008F7 loc_8F7:                                ; CODE XREF: _cmdline_process_param+48Fj
.text:000008F7                 xor     eax, eax
.text:000008F9                 jnz     short loc_8D2
.text:000008FB                 mov     ecx, dword ptr ds:_flags
.text:00000901                 or      ecx, 1
.text:00000904                 mov     dword ptr ds:_flags, ecx
.text:0000090A
.text:0000090A loc_90A:                                ; CODE XREF: _cmdline_process_param+474j
.text:0000090A                 push    offset $SG85697 ; "-l"
.text:0000090F                 mov     edx, [ebp+arg_0]
.text:00000912                 push    edx             ; char *
.text:00000913                 call    _strcmp
.text:00000918                 add     esp, 8
.text:0000091B                 test    eax, eax
.text:0000091D                 jnz     loc_9AB
.text:00000923
.text:00000923 loc_923:                                ; CODE XREF: _cmdline_process_param+4F9j
.text:00000923                 mov     eax, 1
.text:00000928                 test    eax, eax
.text:0000092A                 jz      short loc_93C
.text:0000092C                 cmp     [ebp+arg_4], 0
.text:00000930                 jnz     short loc_93C
.text:00000932                 mov     eax, 0FFFFFFFEh
.text:00000937                 jmp     loc_1CD2
.text:0000093C ; ---------------------------------------------------------------------------
.text:0000093C
.text:0000093C loc_93C:                                ; CODE XREF: _cmdline_process_param+4CEj
.text:0000093C                                         ; _cmdline_process_param+4D4j
.text:0000093C                 mov     [ebp+var_4], 2
.text:00000943                 cmp     [ebp+arg_8], 0
.text:00000947                 jge     short loc_953
.text:00000949                 mov     eax, 2
.text:0000094E                 jmp     loc_1CD2
.text:00000953 ; ---------------------------------------------------------------------------
.text:00000953
.text:00000953 loc_953:                                ; CODE XREF: _cmdline_process_param+4EBj
.text:00000953                 xor     ecx, ecx
.text:00000955                 jnz     short loc_923
.text:00000957
.text:00000957 loc_957:                                ; CODE XREF: _cmdline_process_param+517j
.text:00000957                 mov     edx, [ebp+arg_0]
.text:0000095A                 push    edx
.text:0000095B                 push    2
.text:0000095D                 call    _cmdline_check_unavailable
.text:00000962                 add     esp, 8
.text:00000965                 test    eax, eax
.text:00000967                 jz      short loc_971
.text:00000969                 mov     eax, [ebp+var_4]
.text:0000096C                 jmp     loc_1CD2
.text:00000971 ; ---------------------------------------------------------------------------
.text:00000971
.text:00000971 loc_971:                                ; CODE XREF: _cmdline_process_param+50Bj
.text:00000971                 xor     eax, eax
.text:00000973                 jnz     short loc_957
.text:00000975
.text:00000975 loc_975:                                ; CODE XREF: _cmdline_process_param+53Bj
.text:00000975                 cmp     [ebp+arg_8], 0
.text:00000979                 jz      short loc_995
.text:0000097B                 push    0
.text:0000097D                 mov     ecx, [ebp+arg_4]
.text:00000980                 push    ecx
.text:00000981                 mov     edx, [ebp+arg_0]
.text:00000984                 push    edx
.text:00000985                 call    _cmdline_save_param
.text:0000098A                 add     esp, 0Ch
.text:0000098D                 mov     eax, [ebp+var_4]
.text:00000990                 jmp     loc_1CD2
.text:00000995 ; ---------------------------------------------------------------------------
.text:00000995
.text:00000995 loc_995:                                ; CODE XREF: _cmdline_process_param+51Dj
.text:00000995                 xor     eax, eax
.text:00000997                 jnz     short loc_975
.text:00000999                 mov     ecx, [ebp+arg_4]
.text:0000099C                 push    ecx
.text:0000099D                 push    32h ; '2'
.text:0000099F                 mov     edx, [ebp+arg_C]
.text:000009A2                 push    edx
.text:000009A3                 call    _conf_set_str
.text:000009A8                 add     esp, 0Ch
.text:000009AB
.text:000009AB loc_9AB:                                ; CODE XREF: _cmdline_process_param+4C1j
.text:000009AB                 push    offset $SG85712 ; "-loghost"
.text:000009B0                 mov     eax, [ebp+arg_0]
.text:000009B3                 push    eax             ; char *
.text:000009B4                 call    _strcmp
.text:000009B9                 add     esp, 8
.text:000009BC                 test    eax, eax
.text:000009BE                 jnz     loc_A4C
.text:000009C4
.text:000009C4 loc_9C4:                                ; CODE XREF: _cmdline_process_param+59Aj
.text:000009C4                 mov     ecx, 1
.text:000009C9                 test    ecx, ecx
.text:000009CB                 jz      short loc_9DD
.text:000009CD                 cmp     [ebp+arg_4], 0
.text:000009D1                 jnz     short loc_9DD
.text:000009D3                 mov     eax, 0FFFFFFFEh
.text:000009D8                 jmp     loc_1CD2
.text:000009DD ; ---------------------------------------------------------------------------
.text:000009DD
.text:000009DD loc_9DD:                                ; CODE XREF: _cmdline_process_param+56Fj
.text:000009DD                                         ; _cmdline_process_param+575j
.text:000009DD                 mov     [ebp+var_4], 2
.text:000009E4                 cmp     [ebp+arg_8], 0
.text:000009E8                 jge     short loc_9F4
.text:000009EA                 mov     eax, 2
.text:000009EF                 jmp     loc_1CD2
.text:000009F4 ; ---------------------------------------------------------------------------
.text:000009F4
.text:000009F4 loc_9F4:                                ; CODE XREF: _cmdline_process_param+58Cj
.text:000009F4                 xor     edx, edx
.text:000009F6                 jnz     short loc_9C4
.text:000009F8
.text:000009F8 loc_9F8:                                ; CODE XREF: _cmdline_process_param+5B8j
.text:000009F8                 mov     eax, [ebp+arg_0]
.text:000009FB                 push    eax
.text:000009FC                 push    2
.text:000009FE                 call    _cmdline_check_unavailable
.text:00000A03                 add     esp, 8
.text:00000A06                 test    eax, eax
.text:00000A08                 jz      short loc_A12
.text:00000A0A                 mov     eax, [ebp+var_4]
.text:00000A0D                 jmp     loc_1CD2
.text:00000A12 ; ---------------------------------------------------------------------------
.text:00000A12
.text:00000A12 loc_A12:                                ; CODE XREF: _cmdline_process_param+5ACj
.text:00000A12                 xor     ecx, ecx
.text:00000A14                 jnz     short loc_9F8
.text:00000A16
.text:00000A16 loc_A16:                                ; CODE XREF: _cmdline_process_param+5DCj
.text:00000A16                 cmp     [ebp+arg_8], 0
.text:00000A1A                 jz      short loc_A36
.text:00000A1C                 push    0
.text:00000A1E                 mov     edx, [ebp+arg_4]
.text:00000A21                 push    edx
.text:00000A22                 mov     eax, [ebp+arg_0]
.text:00000A25                 push    eax
.text:00000A26                 call    _cmdline_save_param
.text:00000A2B                 add     esp, 0Ch
.text:00000A2E                 mov     eax, [ebp+var_4]
.text:00000A31                 jmp     loc_1CD2
.text:00000A36 ; ---------------------------------------------------------------------------
.text:00000A36
.text:00000A36 loc_A36:                                ; CODE XREF: _cmdline_process_param+5BEj
.text:00000A36                 xor     ecx, ecx
.text:00000A38                 jnz     short loc_A16
.text:00000A3A                 mov     edx, [ebp+arg_4]
.text:00000A3D                 push    edx
.text:00000A3E                 push    9
.text:00000A40                 mov     eax, [ebp+arg_C]
.text:00000A43                 push    eax
.text:00000A44                 call    _conf_set_str
.text:00000A49                 add     esp, 0Ch
.text:00000A4C
.text:00000A4C loc_A4C:                                ; CODE XREF: _cmdline_process_param+562j
.text:00000A4C                 push    offset $SG85727 ; "-hostkey"
.text:00000A51                 mov     ecx, [ebp+arg_0]
.text:00000A54                 push    ecx             ; char *
.text:00000A55                 call    _strcmp
.text:00000A5A                 add     esp, 8
.text:00000A5D                 test    eax, eax
.text:00000A5F                 jnz     loc_B45
.text:00000A65
.text:00000A65 loc_A65:                                ; CODE XREF: _cmdline_process_param+63Bj
.text:00000A65                 mov     edx, 1
.text:00000A6A                 test    edx, edx
.text:00000A6C                 jz      short loc_A7E
.text:00000A6E                 cmp     [ebp+arg_4], 0
.text:00000A72                 jnz     short loc_A7E
.text:00000A74                 mov     eax, 0FFFFFFFEh
.text:00000A79                 jmp     loc_1CD2
.text:00000A7E ; ---------------------------------------------------------------------------
.text:00000A7E
.text:00000A7E loc_A7E:                                ; CODE XREF: _cmdline_process_param+610j
.text:00000A7E                                         ; _cmdline_process_param+616j
.text:00000A7E                 mov     [ebp+var_4], 2
.text:00000A85                 cmp     [ebp+arg_8], 0
.text:00000A89                 jge     short loc_A95
.text:00000A8B                 mov     eax, 2
.text:00000A90                 jmp     loc_1CD2
.text:00000A95 ; ---------------------------------------------------------------------------
.text:00000A95
.text:00000A95 loc_A95:                                ; CODE XREF: _cmdline_process_param+62Dj
.text:00000A95                 xor     eax, eax
.text:00000A97                 jnz     short loc_A65
.text:00000A99
.text:00000A99 loc_A99:                                ; CODE XREF: _cmdline_process_param+659j
.text:00000A99                 mov     ecx, [ebp+arg_0]
.text:00000A9C                 push    ecx
.text:00000A9D                 push    2
.text:00000A9F                 call    _cmdline_check_unavailable
.text:00000AA4                 add     esp, 8
.text:00000AA7                 test    eax, eax
.text:00000AA9                 jz      short loc_AB3
.text:00000AAB                 mov     eax, [ebp+var_4]
.text:00000AAE                 jmp     loc_1CD2
.text:00000AB3 ; ---------------------------------------------------------------------------
.text:00000AB3
.text:00000AB3 loc_AB3:                                ; CODE XREF: _cmdline_process_param+64Dj
.text:00000AB3                 xor     edx, edx
.text:00000AB5                 jnz     short loc_A99
.text:00000AB7
.text:00000AB7 loc_AB7:                                ; CODE XREF: _cmdline_process_param+67Dj
.text:00000AB7                 cmp     [ebp+arg_8], 0
.text:00000ABB                 jz      short loc_AD7
.text:00000ABD                 push    0
.text:00000ABF                 mov     eax, [ebp+arg_4]
.text:00000AC2                 push    eax
.text:00000AC3                 mov     ecx, [ebp+arg_0]
.text:00000AC6                 push    ecx
.text:00000AC7                 call    _cmdline_save_param
.text:00000ACC                 add     esp, 0Ch
.text:00000ACF                 mov     eax, [ebp+var_4]
.text:00000AD2                 jmp     loc_1CD2
.text:00000AD7 ; ---------------------------------------------------------------------------
.text:00000AD7
.text:00000AD7 loc_AD7:                                ; CODE XREF: _cmdline_process_param+65Fj
.text:00000AD7                 xor     edx, edx
.text:00000AD9                 jnz     short loc_AB7
.text:00000ADB                 mov     eax, [ebp+arg_4]
.text:00000ADE                 push    eax
.text:00000ADF                 call    _dupstr
.text:00000AE4                 add     esp, 4
.text:00000AE7                 mov     [ebp+var_8], eax
.text:00000AEA                 mov     ecx, [ebp+var_8]
.text:00000AED                 push    ecx
.text:00000AEE                 call    _validate_manual_hostkey
.text:00000AF3                 add     esp, 4
.text:00000AF6                 test    eax, eax
.text:00000AF8                 jnz     short loc_B1F
.text:00000AFA                 mov     edx, [ebp+arg_4]
.text:00000AFD                 push    edx
.text:00000AFE                 push    offset $SG85743 ; "'%s' is not a valid format for a manual"...
.text:00000B03                 call    _cmdline_error
.text:00000B08                 add     esp, 8
.text:00000B0B                 mov     eax, [ebp+var_8]
.text:00000B0E                 push    eax
.text:00000B0F                 call    _safefree
.text:00000B14                 add     esp, 4
.text:00000B17                 mov     eax, [ebp+var_4]
.text:00000B1A                 jmp     loc_1CD2
.text:00000B1F ; ---------------------------------------------------------------------------
.text:00000B1F
.text:00000B1F loc_B1F:                                ; CODE XREF: _cmdline_process_param+69Cj
.text:00000B1F                 push    offset $SG85744
.text:00000B24                 mov     ecx, [ebp+var_8]
.text:00000B27                 push    ecx
.text:00000B28                 push    0A7h ; 'º'
.text:00000B2D                 mov     edx, [ebp+arg_C]
.text:00000B30                 push    edx
.text:00000B31                 call    _conf_set_str_str
.text:00000B36                 add     esp, 10h
.text:00000B39                 mov     eax, [ebp+var_8]
.text:00000B3C                 push    eax
.text:00000B3D                 call    _safefree
.text:00000B42                 add     esp, 4
.text:00000B45
.text:00000B45 loc_B45:                                ; CODE XREF: _cmdline_process_param+603j
.text:00000B45                 push    offset $SG85747 ; "-L"
.text:00000B4A                 mov     ecx, [ebp+arg_0]
.text:00000B4D                 push    ecx             ; char *
.text:00000B4E                 call    _strcmp
.text:00000B53                 add     esp, 8
.text:00000B56                 test    eax, eax
.text:00000B58                 jz      short loc_B88
.text:00000B5A                 push    offset $SG85748 ; "-R"
.text:00000B5F                 mov     edx, [ebp+arg_0]
.text:00000B62                 push    edx             ; char *
.text:00000B63                 call    _strcmp
.text:00000B68                 add     esp, 8
.text:00000B6B                 test    eax, eax
.text:00000B6D                 jz      short loc_B88
.text:00000B6F                 push    offset $SG85749 ; "-D"
.text:00000B74                 mov     eax, [ebp+arg_0]
.text:00000B77                 push    eax             ; char *
.text:00000B78                 call    _strcmp
.text:00000B7D                 add     esp, 8
.text:00000B80                 test    eax, eax
.text:00000B82                 jnz     loc_D0E
.text:00000B88
.text:00000B88 loc_B88:                                ; CODE XREF: _cmdline_process_param+6FCj
.text:00000B88                                         ; _cmdline_process_param+711j ...
.text:00000B88                 mov     ecx, 1
.text:00000B8D                 test    ecx, ecx
.text:00000B8F                 jz      short loc_BA1
.text:00000B91                 cmp     [ebp+arg_4], 0
.text:00000B95                 jnz     short loc_BA1
.text:00000B97                 mov     eax, 0FFFFFFFEh
.text:00000B9C                 jmp     loc_1CD2
.text:00000BA1 ; ---------------------------------------------------------------------------
.text:00000BA1
.text:00000BA1 loc_BA1:                                ; CODE XREF: _cmdline_process_param+733j
.text:00000BA1                                         ; _cmdline_process_param+739j
.text:00000BA1                 mov     [ebp+var_4], 2
.text:00000BA8                 cmp     [ebp+arg_8], 0
.text:00000BAC                 jge     short loc_BB8
.text:00000BAE                 mov     eax, 2
.text:00000BB3                 jmp     loc_1CD2
.text:00000BB8 ; ---------------------------------------------------------------------------
.text:00000BB8
.text:00000BB8 loc_BB8:                                ; CODE XREF: _cmdline_process_param+750j
.text:00000BB8                 xor     edx, edx
.text:00000BBA                 jnz     short loc_B88
.text:00000BBC
.text:00000BBC loc_BBC:                                ; CODE XREF: _cmdline_process_param+77Cj
.text:00000BBC                 mov     eax, [ebp+arg_0]
.text:00000BBF                 push    eax
.text:00000BC0                 push    3
.text:00000BC2                 call    _cmdline_check_unavailable
.text:00000BC7                 add     esp, 8
.text:00000BCA                 test    eax, eax
.text:00000BCC                 jz      short loc_BD6
.text:00000BCE                 mov     eax, [ebp+var_4]
.text:00000BD1                 jmp     loc_1CD2
.text:00000BD6 ; ---------------------------------------------------------------------------
.text:00000BD6
.text:00000BD6 loc_BD6:                                ; CODE XREF: _cmdline_process_param+770j
.text:00000BD6                 xor     ecx, ecx
.text:00000BD8                 jnz     short loc_BBC
.text:00000BDA
.text:00000BDA loc_BDA:                                ; CODE XREF: _cmdline_process_param+7A0j
.text:00000BDA                 cmp     [ebp+arg_8], 0
.text:00000BDE                 jz      short loc_BFA
.text:00000BE0                 push    0
.text:00000BE2                 mov     edx, [ebp+arg_4]
.text:00000BE5                 push    edx
.text:00000BE6                 mov     eax, [ebp+arg_0]
.text:00000BE9                 push    eax
.text:00000BEA                 call    _cmdline_save_param
.text:00000BEF                 add     esp, 0Ch
.text:00000BF2                 mov     eax, [ebp+var_4]
.text:00000BF5                 jmp     loc_1CD2
.text:00000BFA ; ---------------------------------------------------------------------------
.text:00000BFA
.text:00000BFA loc_BFA:                                ; CODE XREF: _cmdline_process_param+782j
.text:00000BFA                 xor     ecx, ecx
.text:00000BFC                 jnz     short loc_BDA
.text:00000BFE                 push    offset $SG85769 ; "-D"
.text:00000C03                 mov     edx, [ebp+arg_0]
.text:00000C06                 push    edx             ; char *
.text:00000C07                 call    _strcmp
.text:00000C0C                 add     esp, 8
.text:00000C0F                 test    eax, eax
.text:00000C11                 jz      loc_CB9
.text:00000C17                 mov     eax, [ebp+arg_0]
.text:00000C1A                 mov     cl, [eax+1]
.text:00000C1D                 mov     [ebp+var_9], cl
.text:00000C20                 push    3Ah ; ':'
.text:00000C22                 mov     edx, [ebp+arg_4]
.text:00000C25                 push    edx
.text:00000C26                 call    _host_strchr
.text:00000C2B                 add     esp, 8
.text:00000C2E                 mov     [ebp+var_14], eax
.text:00000C31                 mov     eax, [ebp+var_14]
.text:00000C34                 mov     [ebp+var_10], eax
.text:00000C37
.text:00000C37 loc_C37:                                ; CODE XREF: _cmdline_process_param+807j
.text:00000C37                 cmp     [ebp+var_14], 0
.text:00000C3B                 jz      short loc_C65
.text:00000C3D                 push    3Ah ; ':'
.text:00000C3F                 mov     ecx, [ebp+var_14]
.text:00000C42                 add     ecx, 1
.text:00000C45                 push    ecx
.text:00000C46                 call    _host_strchr
.text:00000C4B                 add     esp, 8
.text:00000C4E                 mov     [ebp+var_20], eax
.text:00000C51                 cmp     [ebp+var_20], 0
.text:00000C55                 jz      short loc_C5D
.text:00000C57                 mov     edx, [ebp+var_14]
.text:00000C5A                 mov     [ebp+var_10], edx
.text:00000C5D
.text:00000C5D loc_C5D:                                ; CODE XREF: _cmdline_process_param+7F9j
.text:00000C5D                 mov     eax, [ebp+var_20]
.text:00000C60                 mov     [ebp+var_14], eax
.text:00000C63                 jmp     short loc_C37
.text:00000C65 ; ---------------------------------------------------------------------------
.text:00000C65
.text:00000C65 loc_C65:                                ; CODE XREF: _cmdline_process_param+7DFj
.text:00000C65                 cmp     [ebp+var_10], 0
.text:00000C69                 jnz     short loc_C85
.text:00000C6B                 movsx   ecx, [ebp+var_9]
.text:00000C6F                 push    ecx
.text:00000C70                 push    offset $SG85776 ; "-%c expects at least two colons in its "...
.text:00000C75                 call    _cmdline_error
.text:00000C7A                 add     esp, 8
.text:00000C7D                 mov     eax, [ebp+var_4]
.text:00000C80                 jmp     loc_1CD2
.text:00000C85 ; ---------------------------------------------------------------------------
.text:00000C85
.text:00000C85 loc_C85:                                ; CODE XREF: _cmdline_process_param+80Dj
.text:00000C85                 mov     edx, [ebp+arg_4]
.text:00000C88                 push    edx
.text:00000C89                 mov     eax, [ebp+var_10]
.text:00000C8C                 sub     eax, [ebp+arg_4]
.text:00000C8F                 push    eax
.text:00000C90                 movsx   ecx, [ebp+var_9]
.text:00000C94                 push    ecx
.text:00000C95                 push    offset $SG85778 ; "%c%.*s"
.text:00000C9A                 call    _dupprintf
.text:00000C9F                 add     esp, 10h
.text:00000CA2                 mov     [ebp+var_18], eax
.text:00000CA5                 mov     edx, [ebp+var_10]
.text:00000CA8                 add     edx, 1
.text:00000CAB                 push    edx
.text:00000CAC                 call    _dupstr
.text:00000CB1                 add     esp, 4
.text:00000CB4                 mov     [ebp+var_1C], eax
.text:00000CB7                 jmp     short loc_CDD
.text:00000CB9 ; ---------------------------------------------------------------------------
.text:00000CB9
.text:00000CB9 loc_CB9:                                ; CODE XREF: _cmdline_process_param+7B5j
.text:00000CB9                 mov     eax, [ebp+arg_4]
.text:00000CBC                 push    eax
.text:00000CBD                 push    offset $SG85780 ; "L%s"
.text:00000CC2                 call    _dupprintf
.text:00000CC7                 add     esp, 8
.text:00000CCA                 mov     [ebp+var_18], eax
.text:00000CCD                 push    offset $SG85781
.text:00000CD2                 call    _dupstr
.text:00000CD7                 add     esp, 4
.text:00000CDA                 mov     [ebp+var_1C], eax
.text:00000CDD
.text:00000CDD loc_CDD:                                ; CODE XREF: _cmdline_process_param+85Bj
.text:00000CDD                 mov     ecx, [ebp+var_1C]
.text:00000CE0                 push    ecx
.text:00000CE1                 mov     edx, [ebp+var_18]
.text:00000CE4                 push    edx
.text:00000CE5                 push    96h ; 'û'
.text:00000CEA                 mov     eax, [ebp+arg_C]
.text:00000CED                 push    eax
.text:00000CEE                 call    _conf_set_str_str
.text:00000CF3                 add     esp, 10h
.text:00000CF6                 mov     ecx, [ebp+var_18]
.text:00000CF9                 push    ecx
.text:00000CFA                 call    _safefree
.text:00000CFF                 add     esp, 4
.text:00000D02                 mov     edx, [ebp+var_1C]
.text:00000D05                 push    edx
.text:00000D06                 call    _safefree
.text:00000D0B                 add     esp, 4
.text:00000D0E
.text:00000D0E loc_D0E:                                ; CODE XREF: _cmdline_process_param+726j
.text:00000D0E                 push    offset $SG85783 ; "-nc"
.text:00000D13                 mov     eax, [ebp+arg_0]
.text:00000D16                 push    eax             ; char *
.text:00000D17                 call    _strcmp
.text:00000D1C                 add     esp, 8
.text:00000D1F                 test    eax, eax
.text:00000D21                 jnz     loc_E20
.text:00000D27
.text:00000D27 loc_D27:                                ; CODE XREF: _cmdline_process_param+8FDj
.text:00000D27                 mov     ecx, 1
.text:00000D2C                 test    ecx, ecx
.text:00000D2E                 jz      short loc_D40
.text:00000D30                 cmp     [ebp+arg_4], 0
.text:00000D34                 jnz     short loc_D40
.text:00000D36                 mov     eax, 0FFFFFFFEh
.text:00000D3B                 jmp     loc_1CD2
.text:00000D40 ; ---------------------------------------------------------------------------
.text:00000D40
.text:00000D40 loc_D40:                                ; CODE XREF: _cmdline_process_param+8D2j
.text:00000D40                                         ; _cmdline_process_param+8D8j
.text:00000D40                 mov     [ebp+var_4], 2
.text:00000D47                 cmp     [ebp+arg_8], 0
.text:00000D4B                 jge     short loc_D57
.text:00000D4D                 mov     eax, 2
.text:00000D52                 jmp     loc_1CD2
.text:00000D57 ; ---------------------------------------------------------------------------
.text:00000D57
.text:00000D57 loc_D57:                                ; CODE XREF: _cmdline_process_param+8EFj
.text:00000D57                 xor     edx, edx
.text:00000D59                 jnz     short loc_D27
.text:00000D5B
.text:00000D5B loc_D5B:                                ; CODE XREF: _cmdline_process_param+91Bj
.text:00000D5B                 mov     eax, [ebp+arg_0]
.text:00000D5E                 push    eax
.text:00000D5F                 push    3
.text:00000D61                 call    _cmdline_check_unavailable
.text:00000D66                 add     esp, 8
.text:00000D69                 test    eax, eax
.text:00000D6B                 jz      short loc_D75
.text:00000D6D                 mov     eax, [ebp+var_4]
.text:00000D70                 jmp     loc_1CD2
.text:00000D75 ; ---------------------------------------------------------------------------
.text:00000D75
.text:00000D75 loc_D75:                                ; CODE XREF: _cmdline_process_param+90Fj
.text:00000D75                 xor     ecx, ecx
.text:00000D77                 jnz     short loc_D5B
.text:00000D79
.text:00000D79 loc_D79:                                ; CODE XREF: _cmdline_process_param+93Fj
.text:00000D79                 cmp     [ebp+arg_8], 0
.text:00000D7D                 jz      short loc_D99
.text:00000D7F                 push    0
.text:00000D81                 mov     edx, [ebp+arg_4]
.text:00000D84                 push    edx
.text:00000D85                 mov     eax, [ebp+arg_0]
.text:00000D88                 push    eax
.text:00000D89                 call    _cmdline_save_param
.text:00000D8E                 add     esp, 0Ch
.text:00000D91                 mov     eax, [ebp+var_4]
.text:00000D94                 jmp     loc_1CD2
.text:00000D99 ; ---------------------------------------------------------------------------
.text:00000D99
.text:00000D99 loc_D99:                                ; CODE XREF: _cmdline_process_param+921j
.text:00000D99                 xor     ecx, ecx
.text:00000D9B                 jnz     short loc_D79
.text:00000D9D                 push    3Ah ; ':'
.text:00000D9F                 mov     edx, [ebp+arg_4]
.text:00000DA2                 push    edx
.text:00000DA3                 call    _host_strchr
.text:00000DA8                 add     esp, 8
.text:00000DAB                 mov     [ebp+var_28], eax
.text:00000DAE                 cmp     [ebp+var_28], 0
.text:00000DB2                 jnz     short loc_DC9
.text:00000DB4                 push    offset $SG85800 ; "-nc expects argument of form 'host:port"...
.text:00000DB9                 call    _cmdline_error
.text:00000DBE                 add     esp, 4
.text:00000DC1                 mov     eax, [ebp+var_4]
.text:00000DC4                 jmp     loc_1CD2
.text:00000DC9 ; ---------------------------------------------------------------------------
.text:00000DC9
.text:00000DC9 loc_DC9:                                ; CODE XREF: _cmdline_process_param+956j
.text:00000DC9                 mov     eax, [ebp+arg_4]
.text:00000DCC                 push    eax
.text:00000DCD                 mov     ecx, [ebp+var_28]
.text:00000DD0                 sub     ecx, [ebp+arg_4]
.text:00000DD3                 push    ecx
.text:00000DD4                 push    offset $SG85802 ; "%.*s"
.text:00000DD9                 call    _dupprintf
.text:00000DDE                 add     esp, 0Ch
.text:00000DE1                 mov     [ebp+var_24], eax
.text:00000DE4                 mov     edx, [ebp+var_24]
.text:00000DE7                 push    edx
.text:00000DE8                 push    2Ch ; ','
.text:00000DEA                 mov     eax, [ebp+arg_C]
.text:00000DED                 push    eax
.text:00000DEE                 call    _conf_set_str
.text:00000DF3                 add     esp, 0Ch
.text:00000DF6                 mov     ecx, [ebp+var_28]
.text:00000DF9                 add     ecx, 1
.text:00000DFC                 push    ecx             ; char *
.text:00000DFD                 call    _atoi
.text:00000E02                 add     esp, 4
.text:00000E05                 push    eax
.text:00000E06                 push    2Dh ; '-'
.text:00000E08                 mov     edx, [ebp+arg_C]
.text:00000E0B                 push    edx
.text:00000E0C                 call    _conf_set_int
.text:00000E11                 add     esp, 0Ch
.text:00000E14                 mov     eax, [ebp+var_24]
.text:00000E17                 push    eax
.text:00000E18                 call    _safefree
.text:00000E1D                 add     esp, 4
.text:00000E20
.text:00000E20 loc_E20:                                ; CODE XREF: _cmdline_process_param+8C5j
.text:00000E20                 push    offset $SG85804 ; "-m"
.text:00000E25                 mov     ecx, [ebp+arg_0]
.text:00000E28                 push    ecx             ; char *
.text:00000E29                 call    _strcmp
.text:00000E2E                 add     esp, 8
.text:00000E31                 test    eax, eax
.text:00000E33                 jnz     loc_FAE
.text:00000E39
.text:00000E39 loc_E39:                                ; CODE XREF: _cmdline_process_param+A0Fj
.text:00000E39                 mov     edx, 1
.text:00000E3E                 test    edx, edx
.text:00000E40                 jz      short loc_E52
.text:00000E42                 cmp     [ebp+arg_4], 0
.text:00000E46                 jnz     short loc_E52
.text:00000E48                 mov     eax, 0FFFFFFFEh
.text:00000E4D                 jmp     loc_1CD2
.text:00000E52 ; ---------------------------------------------------------------------------
.text:00000E52
.text:00000E52 loc_E52:                                ; CODE XREF: _cmdline_process_param+9E4j
.text:00000E52                                         ; _cmdline_process_param+9EAj
.text:00000E52                 mov     [ebp+var_4], 2
.text:00000E59                 cmp     [ebp+arg_8], 0
.text:00000E5D                 jge     short loc_E69
.text:00000E5F                 mov     eax, 2
.text:00000E64                 jmp     loc_1CD2
.text:00000E69 ; ---------------------------------------------------------------------------
.text:00000E69
.text:00000E69 loc_E69:                                ; CODE XREF: _cmdline_process_param+A01j
.text:00000E69                 xor     eax, eax
.text:00000E6B                 jnz     short loc_E39
.text:00000E6D
.text:00000E6D loc_E6D:                                ; CODE XREF: _cmdline_process_param+A2Dj
.text:00000E6D                 mov     ecx, [ebp+arg_0]
.text:00000E70                 push    ecx
.text:00000E71                 push    3
.text:00000E73                 call    _cmdline_check_unavailable
.text:00000E78                 add     esp, 8
.text:00000E7B                 test    eax, eax
.text:00000E7D                 jz      short loc_E87
.text:00000E7F                 mov     eax, [ebp+var_4]
.text:00000E82                 jmp     loc_1CD2
.text:00000E87 ; ---------------------------------------------------------------------------
.text:00000E87
.text:00000E87 loc_E87:                                ; CODE XREF: _cmdline_process_param+A21j
.text:00000E87                 xor     edx, edx
.text:00000E89                 jnz     short loc_E6D
.text:00000E8B
.text:00000E8B loc_E8B:                                ; CODE XREF: _cmdline_process_param+A51j
.text:00000E8B                 cmp     [ebp+arg_8], 0
.text:00000E8F                 jz      short loc_EAB
.text:00000E91                 push    0
.text:00000E93                 mov     eax, [ebp+arg_4]
.text:00000E96                 push    eax
.text:00000E97                 mov     ecx, [ebp+arg_0]
.text:00000E9A                 push    ecx
.text:00000E9B                 call    _cmdline_save_param
.text:00000EA0                 add     esp, 0Ch
.text:00000EA3                 mov     eax, [ebp+var_4]
.text:00000EA6                 jmp     loc_1CD2
.text:00000EAB ; ---------------------------------------------------------------------------
.text:00000EAB
.text:00000EAB loc_EAB:                                ; CODE XREF: _cmdline_process_param+A33j
.text:00000EAB                 xor     edx, edx
.text:00000EAD                 jnz     short loc_E8B
.text:00000EAF                 mov     eax, [ebp+arg_4]
.text:00000EB2                 mov     [ebp+var_2C], eax
.text:00000EB5                 mov     [ebp+var_38], 0
.text:00000EBC                 mov     ecx, [ebp+var_38]
.text:00000EBF                 mov     [ebp+var_34], ecx
.text:00000EC2                 mov     [ebp+var_30], 0
.text:00000EC9                 push    offset $SG85826 ; char *
.text:00000ECE                 mov     edx, [ebp+var_2C]
.text:00000ED1                 push    edx             ; char *
.text:00000ED2                 call    _fopen
.text:00000ED7                 add     esp, 8
.text:00000EDA                 mov     [ebp+var_3C], eax
.text:00000EDD                 cmp     [ebp+var_3C], 0
.text:00000EE1                 jnz     short loc_EFC
.text:00000EE3                 mov     eax, [ebp+var_2C]
.text:00000EE6                 push    eax
.text:00000EE7                 push    offset $SG85828 ; "unable to open command file \"%s\""
.text:00000EEC                 call    _cmdline_error
.text:00000EF1                 add     esp, 8
.text:00000EF4                 mov     eax, [ebp+var_4]
.text:00000EF7                 jmp     loc_1CD2
.text:00000EFC ; ---------------------------------------------------------------------------
.text:00000EFC
.text:00000EFC loc_EFC:                                ; CODE XREF: _cmdline_process_param+A85j
.text:00000EFC                                         ; _cmdline_process_param+B03j
.text:00000EFC                 mov     ecx, [ebp+var_3C]
.text:00000EFF                 push    ecx             ; FILE *
.text:00000F00                 call    _fgetc
.text:00000F05                 add     esp, 4
.text:00000F08                 mov     [ebp+var_40], eax
.text:00000F0B                 mov     edx, [ebp+var_40]
.text:00000F0E                 mov     [ebp+var_44], edx
.text:00000F11                 cmp     [ebp+var_40], 0FFFFFFFFh
.text:00000F15                 jnz     short loc_F1E
.text:00000F17                 mov     [ebp+var_44], 0
.text:00000F1E
.text:00000F1E loc_F1E:                                ; CODE XREF: _cmdline_process_param+AB9j
.text:00000F1E                 mov     eax, [ebp+var_34]
.text:00000F21                 cmp     eax, [ebp+var_38]
.text:00000F24                 jl      short loc_F47
.text:00000F26                 mov     ecx, [ebp+var_34]
.text:00000F29                 add     ecx, 200h
.text:00000F2F                 mov     [ebp+var_38], ecx
.text:00000F32                 push    1
.text:00000F34                 mov     edx, [ebp+var_38]
.text:00000F37                 push    edx
.text:00000F38                 mov     eax, [ebp+var_30]
.text:00000F3B                 push    eax
.text:00000F3C                 call    _saferealloc
.text:00000F41                 add     esp, 0Ch
.text:00000F44                 mov     [ebp+var_30], eax
.text:00000F47
.text:00000F47 loc_F47:                                ; CODE XREF: _cmdline_process_param+AC8j
.text:00000F47                 mov     ecx, [ebp+var_30]
.text:00000F4A                 add     ecx, [ebp+var_34]
.text:00000F4D                 mov     dl, byte ptr [ebp+var_44]
.text:00000F50                 mov     [ecx], dl
.text:00000F52                 mov     eax, [ebp+var_34]
.text:00000F55                 add     eax, 1
.text:00000F58                 mov     [ebp+var_34], eax
.text:00000F5B                 cmp     [ebp+var_40], 0FFFFFFFFh
.text:00000F5F                 jnz     short loc_EFC
.text:00000F61                 mov     ecx, [ebp+var_3C]
.text:00000F64                 push    ecx             ; FILE *
.text:00000F65                 call    _fclose
.text:00000F6A                 add     esp, 4
.text:00000F6D                 mov     edx, [ebp+var_30]
.text:00000F70                 push    edx
.text:00000F71                 push    13h
.text:00000F73                 mov     eax, [ebp+arg_C]
.text:00000F76                 push    eax
.text:00000F77                 call    _conf_set_str
.text:00000F7C                 add     esp, 0Ch
.text:00000F7F                 push    offset $SG85837
.text:00000F84                 push    14h
.text:00000F86                 mov     ecx, [ebp+arg_C]
.text:00000F89                 push    ecx
.text:00000F8A                 call    _conf_set_str
.text:00000F8F                 add     esp, 0Ch
.text:00000F92                 push    1
.text:00000F94                 push    15h
.text:00000F96                 mov     edx, [ebp+arg_C]
.text:00000F99                 push    edx
.text:00000F9A                 call    _conf_set_int
.text:00000F9F                 add     esp, 0Ch
.text:00000FA2                 mov     eax, [ebp+var_30]
.text:00000FA5                 push    eax
.text:00000FA6                 call    _safefree
.text:00000FAB                 add     esp, 4
.text:00000FAE
.text:00000FAE loc_FAE:                                ; CODE XREF: _cmdline_process_param+9D7j
.text:00000FAE                 push    offset $SG85839 ; "-P"
.text:00000FB3                 mov     ecx, [ebp+arg_0]
.text:00000FB6                 push    ecx             ; char *
.text:00000FB7                 call    _strcmp
.text:00000FBC                 add     esp, 8
.text:00000FBF                 test    eax, eax
.text:00000FC1                 jnz     loc_1058
.text:00000FC7
.text:00000FC7 loc_FC7:                                ; CODE XREF: _cmdline_process_param+B9Dj
.text:00000FC7                 mov     edx, 1
.text:00000FCC                 test    edx, edx
.text:00000FCE                 jz      short loc_FE0
.text:00000FD0                 cmp     [ebp+arg_4], 0
.text:00000FD4                 jnz     short loc_FE0
.text:00000FD6                 mov     eax, 0FFFFFFFEh
.text:00000FDB                 jmp     loc_1CD2
.text:00000FE0 ; ---------------------------------------------------------------------------
.text:00000FE0
.text:00000FE0 loc_FE0:                                ; CODE XREF: _cmdline_process_param+B72j
.text:00000FE0                                         ; _cmdline_process_param+B78j
.text:00000FE0                 mov     [ebp+var_4], 2
.text:00000FE7                 cmp     [ebp+arg_8], 0
.text:00000FEB                 jge     short loc_FF7
.text:00000FED                 mov     eax, 2
.text:00000FF2                 jmp     loc_1CD2
.text:00000FF7 ; ---------------------------------------------------------------------------
.text:00000FF7
.text:00000FF7 loc_FF7:                                ; CODE XREF: _cmdline_process_param+B8Fj
.text:00000FF7                 xor     eax, eax
.text:00000FF9                 jnz     short loc_FC7
.text:00000FFB
.text:00000FFB loc_FFB:                                ; CODE XREF: _cmdline_process_param+BBBj
.text:00000FFB                 mov     ecx, [ebp+arg_0]
.text:00000FFE                 push    ecx
.text:00000FFF                 push    2
.text:00001001                 call    _cmdline_check_unavailable
.text:00001006                 add     esp, 8
.text:00001009                 test    eax, eax
.text:0000100B                 jz      short loc_1015
.text:0000100D                 mov     eax, [ebp+var_4]
.text:00001010                 jmp     loc_1CD2
.text:00001015 ; ---------------------------------------------------------------------------
.text:00001015
.text:00001015 loc_1015:                               ; CODE XREF: _cmdline_process_param+BAFj
.text:00001015                 xor     edx, edx
.text:00001017                 jnz     short loc_FFB
.text:00001019
.text:00001019 loc_1019:                               ; CODE XREF: _cmdline_process_param+BDFj
.text:00001019                 cmp     [ebp+arg_8], 0
.text:0000101D                 jz      short loc_1039
.text:0000101F                 push    1
.text:00001021                 mov     eax, [ebp+arg_4]
.text:00001024                 push    eax
.text:00001025                 mov     ecx, [ebp+arg_0]
.text:00001028                 push    ecx
.text:00001029                 call    _cmdline_save_param
.text:0000102E                 add     esp, 0Ch
.text:00001031                 mov     eax, [ebp+var_4]
.text:00001034                 jmp     loc_1CD2
.text:00001039 ; ---------------------------------------------------------------------------
.text:00001039
.text:00001039 loc_1039:                               ; CODE XREF: _cmdline_process_param+BC1j
.text:00001039                 xor     edx, edx
.text:0000103B                 jnz     short loc_1019
.text:0000103D                 mov     eax, [ebp+arg_4]
.text:00001040                 push    eax             ; char *
.text:00001041                 call    _atoi
.text:00001046                 add     esp, 4
.text:00001049                 push    eax
.text:0000104A                 push    1
.text:0000104C                 mov     ecx, [ebp+arg_C]
.text:0000104F                 push    ecx
.text:00001050                 call    _conf_set_int
.text:00001055                 add     esp, 0Ch
.text:00001058
.text:00001058 loc_1058:                               ; CODE XREF: _cmdline_process_param+B65j
.text:00001058                 push    offset $SG85854 ; "-pw"
.text:0000105D                 mov     edx, [ebp+arg_0]
.text:00001060                 push    edx             ; char *
.text:00001061                 call    _strcmp
.text:00001066                 add     esp, 8
.text:00001069                 test    eax, eax
.text:0000106B                 jnz     loc_1133
.text:00001071
.text:00001071 loc_1071:                               ; CODE XREF: _cmdline_process_param+C47j
.text:00001071                 mov     eax, 1
.text:00001076                 test    eax, eax
.text:00001078                 jz      short loc_108A
.text:0000107A                 cmp     [ebp+arg_4], 0
.text:0000107E                 jnz     short loc_108A
.text:00001080                 mov     eax, 0FFFFFFFEh
.text:00001085                 jmp     loc_1CD2
.text:0000108A ; ---------------------------------------------------------------------------
.text:0000108A
.text:0000108A loc_108A:                               ; CODE XREF: _cmdline_process_param+C1Cj
.text:0000108A                                         ; _cmdline_process_param+C22j
.text:0000108A                 mov     [ebp+var_4], 2
.text:00001091                 cmp     [ebp+arg_8], 0
.text:00001095                 jge     short loc_10A1
.text:00001097                 mov     eax, 2
.text:0000109C                 jmp     loc_1CD2
.text:000010A1 ; ---------------------------------------------------------------------------
.text:000010A1
.text:000010A1 loc_10A1:                               ; CODE XREF: _cmdline_process_param+C39j
.text:000010A1                 xor     ecx, ecx
.text:000010A3                 jnz     short loc_1071
.text:000010A5
.text:000010A5 loc_10A5:                               ; CODE XREF: _cmdline_process_param+C65j
.text:000010A5                 mov     edx, [ebp+arg_0]
.text:000010A8                 push    edx
.text:000010A9                 push    2
.text:000010AB                 call    _cmdline_check_unavailable
.text:000010B0                 add     esp, 8
.text:000010B3                 test    eax, eax
.text:000010B5                 jz      short loc_10BF
.text:000010B7                 mov     eax, [ebp+var_4]
.text:000010BA                 jmp     loc_1CD2
.text:000010BF ; ---------------------------------------------------------------------------
.text:000010BF
.text:000010BF loc_10BF:                               ; CODE XREF: _cmdline_process_param+C59j
.text:000010BF                 xor     eax, eax
.text:000010C1                 jnz     short loc_10A5
.text:000010C3
.text:000010C3 loc_10C3:                               ; CODE XREF: _cmdline_process_param+C89j
.text:000010C3                 cmp     [ebp+arg_8], 0
.text:000010C7                 jz      short loc_10E3
.text:000010C9                 push    1
.text:000010CB                 mov     ecx, [ebp+arg_4]
.text:000010CE                 push    ecx
.text:000010CF                 mov     edx, [ebp+arg_0]
.text:000010D2                 push    edx
.text:000010D3                 call    _cmdline_save_param
.text:000010D8                 add     esp, 0Ch
.text:000010DB                 mov     eax, [ebp+var_4]
.text:000010DE                 jmp     loc_1CD2
.text:000010E3 ; ---------------------------------------------------------------------------
.text:000010E3
.text:000010E3 loc_10E3:                               ; CODE XREF: _cmdline_process_param+C6Bj
.text:000010E3                 xor     eax, eax
.text:000010E5                 jnz     short loc_10C3
.text:000010E7                 push    2
.text:000010E9                 mov     ecx, [ebp+arg_C]
.text:000010EC                 push    ecx
.text:000010ED                 call    _conf_get_int
.text:000010F2                 add     esp, 8
.text:000010F5                 cmp     eax, 3
.text:000010F8                 jz      short loc_1109
.text:000010FA                 push    offset $SG85869 ; "the -pw option can only be used with th"...
.text:000010FF                 call    _cmdline_error
.text:00001104                 add     esp, 4
.text:00001107                 jmp     short loc_1133
.text:00001109 ; ---------------------------------------------------------------------------
.text:00001109
.text:00001109 loc_1109:                               ; CODE XREF: _cmdline_process_param+C9Cj
.text:00001109                 mov     edx, [ebp+arg_4]
.text:0000110C                 push    edx
.text:0000110D                 call    _dupstr
.text:00001112                 add     esp, 4
.text:00001115                 mov     ds:_cmdline_password, eax
.text:0000111A                 mov     eax, [ebp+arg_4]
.text:0000111D                 push    eax             ; char *
.text:0000111E                 call    _strlen
.text:00001123                 add     esp, 4
.text:00001126                 push    eax
.text:00001127                 mov     ecx, [ebp+arg_4]
.text:0000112A                 push    ecx
.text:0000112B                 call    _smemclr
.text:00001130                 add     esp, 8
.text:00001133
.text:00001133 loc_1133:                               ; CODE XREF: _cmdline_process_param+C0Fj
.text:00001133                                         ; _cmdline_process_param+CABj
.text:00001133                 push    offset $SG85873 ; "-agent"
.text:00001138                 mov     edx, [ebp+arg_0]
.text:0000113B                 push    edx             ; char *
.text:0000113C                 call    _strcmp
.text:00001141                 add     esp, 8
.text:00001144                 test    eax, eax
.text:00001146                 jz      short loc_1172
.text:00001148                 push    offset $SG85874 ; "-pagent"
.text:0000114D                 mov     eax, [ebp+arg_0]
.text:00001150                 push    eax             ; char *
.text:00001151                 call    _strcmp
.text:00001156                 add     esp, 8
.text:00001159                 test    eax, eax
.text:0000115B                 jz      short loc_1172
.text:0000115D                 push    offset $SG85875 ; "-pageant"
.text:00001162                 mov     ecx, [ebp+arg_0]
.text:00001165                 push    ecx             ; char *
.text:00001166                 call    _strcmp
.text:0000116B                 add     esp, 8
.text:0000116E                 test    eax, eax
.text:00001170                 jnz     short loc_11ED
.text:00001172
.text:00001172 loc_1172:                               ; CODE XREF: _cmdline_process_param+CEAj
.text:00001172                                         ; _cmdline_process_param+CFFj ...
.text:00001172                 xor     edx, edx
.text:00001174                 jz      short loc_1180
.text:00001176                 mov     eax, 0FFFFFFFEh
.text:0000117B                 jmp     loc_1CD2
.text:00001180 ; ---------------------------------------------------------------------------
.text:00001180
.text:00001180 loc_1180:                               ; CODE XREF: _cmdline_process_param+D18j
.text:00001180                 mov     [ebp+var_4], 1
.text:00001187                 cmp     [ebp+arg_8], 0
.text:0000118B                 jge     short loc_1197
.text:0000118D                 mov     eax, 1
.text:00001192                 jmp     loc_1CD2
.text:00001197 ; ---------------------------------------------------------------------------
.text:00001197
.text:00001197 loc_1197:                               ; CODE XREF: _cmdline_process_param+D2Fj
.text:00001197                 xor     eax, eax
.text:00001199                 jnz     short loc_1172
.text:0000119B
.text:0000119B loc_119B:                               ; CODE XREF: _cmdline_process_param+D5Bj
.text:0000119B                 mov     ecx, [ebp+arg_0]
.text:0000119E                 push    ecx
.text:0000119F                 push    2
.text:000011A1                 call    _cmdline_check_unavailable
.text:000011A6                 add     esp, 8
.text:000011A9                 test    eax, eax
.text:000011AB                 jz      short loc_11B5
.text:000011AD                 mov     eax, [ebp+var_4]
.text:000011B0                 jmp     loc_1CD2
.text:000011B5 ; ---------------------------------------------------------------------------
.text:000011B5
.text:000011B5 loc_11B5:                               ; CODE XREF: _cmdline_process_param+D4Fj
.text:000011B5                 xor     edx, edx
.text:000011B7                 jnz     short loc_119B
.text:000011B9
.text:000011B9 loc_11B9:                               ; CODE XREF: _cmdline_process_param+D7Fj
.text:000011B9                 cmp     [ebp+arg_8], 0
.text:000011BD                 jz      short loc_11D9
.text:000011BF                 push    0
.text:000011C1                 mov     eax, [ebp+arg_4]
.text:000011C4                 push    eax
.text:000011C5                 mov     ecx, [ebp+arg_0]
.text:000011C8                 push    ecx
.text:000011C9                 call    _cmdline_save_param
.text:000011CE                 add     esp, 0Ch
.text:000011D1                 mov     eax, [ebp+var_4]
.text:000011D4                 jmp     loc_1CD2
.text:000011D9 ; ---------------------------------------------------------------------------
.text:000011D9
.text:000011D9 loc_11D9:                               ; CODE XREF: _cmdline_process_param+D61j
.text:000011D9                 xor     edx, edx
.text:000011DB                 jnz     short loc_11B9
.text:000011DD                 push    1
.text:000011DF                 push    1Ah
.text:000011E1                 mov     eax, [ebp+arg_C]
.text:000011E4                 push    eax
.text:000011E5                 call    _conf_set_int
.text:000011EA                 add     esp, 0Ch
.text:000011ED
.text:000011ED loc_11ED:                               ; CODE XREF: _cmdline_process_param+D14j
.text:000011ED                 push    offset $SG85891 ; "-noagent"
.text:000011F2                 mov     ecx, [ebp+arg_0]
.text:000011F5                 push    ecx             ; char *
.text:000011F6                 call    _strcmp
.text:000011FB                 add     esp, 8
.text:000011FE                 test    eax, eax
.text:00001200                 jz      short loc_122C
.text:00001202                 push    offset $SG85892 ; "-nopagent"
.text:00001207                 mov     edx, [ebp+arg_0]
.text:0000120A                 push    edx             ; char *
.text:0000120B                 call    _strcmp
.text:00001210                 add     esp, 8
.text:00001213                 test    eax, eax
.text:00001215                 jz      short loc_122C
.text:00001217                 push    offset $SG85893 ; "-nopageant"
.text:0000121C                 mov     eax, [ebp+arg_0]
.text:0000121F                 push    eax             ; char *
.text:00001220                 call    _strcmp
.text:00001225                 add     esp, 8
.text:00001228                 test    eax, eax
.text:0000122A                 jnz     short loc_12A7
.text:0000122C
.text:0000122C loc_122C:                               ; CODE XREF: _cmdline_process_param+DA4j
.text:0000122C                                         ; _cmdline_process_param+DB9j ...
.text:0000122C                 xor     ecx, ecx
.text:0000122E                 jz      short loc_123A
.text:00001230                 mov     eax, 0FFFFFFFEh
.text:00001235                 jmp     loc_1CD2
.text:0000123A ; ---------------------------------------------------------------------------
.text:0000123A
.text:0000123A loc_123A:                               ; CODE XREF: _cmdline_process_param+DD2j
.text:0000123A                 mov     [ebp+var_4], 1
.text:00001241                 cmp     [ebp+arg_8], 0
.text:00001245                 jge     short loc_1251
.text:00001247                 mov     eax, 1
.text:0000124C                 jmp     loc_1CD2
.text:00001251 ; ---------------------------------------------------------------------------
.text:00001251
.text:00001251 loc_1251:                               ; CODE XREF: _cmdline_process_param+DE9j
.text:00001251                 xor     edx, edx
.text:00001253                 jnz     short loc_122C
.text:00001255
.text:00001255 loc_1255:                               ; CODE XREF: _cmdline_process_param+E15j
.text:00001255                 mov     eax, [ebp+arg_0]
.text:00001258                 push    eax
.text:00001259                 push    2
.text:0000125B                 call    _cmdline_check_unavailable
.text:00001260                 add     esp, 8
.text:00001263                 test    eax, eax
.text:00001265                 jz      short loc_126F
.text:00001267                 mov     eax, [ebp+var_4]
.text:0000126A                 jmp     loc_1CD2
.text:0000126F ; ---------------------------------------------------------------------------
.text:0000126F
.text:0000126F loc_126F:                               ; CODE XREF: _cmdline_process_param+E09j
.text:0000126F                 xor     ecx, ecx
.text:00001271                 jnz     short loc_1255
.text:00001273
.text:00001273 loc_1273:                               ; CODE XREF: _cmdline_process_param+E39j
.text:00001273                 cmp     [ebp+arg_8], 0
.text:00001277                 jz      short loc_1293
.text:00001279                 push    0
.text:0000127B                 mov     edx, [ebp+arg_4]
.text:0000127E                 push    edx
.text:0000127F                 mov     eax, [ebp+arg_0]
.text:00001282                 push    eax
.text:00001283                 call    _cmdline_save_param
.text:00001288                 add     esp, 0Ch
.text:0000128B                 mov     eax, [ebp+var_4]
.text:0000128E                 jmp     loc_1CD2
.text:00001293 ; ---------------------------------------------------------------------------
.text:00001293
.text:00001293 loc_1293:                               ; CODE XREF: _cmdline_process_param+E1Bj
.text:00001293                 xor     ecx, ecx
.text:00001295                 jnz     short loc_1273
.text:00001297                 push    0
.text:00001299                 push    1Ah
.text:0000129B                 mov     edx, [ebp+arg_C]
.text:0000129E                 push    edx
.text:0000129F                 call    _conf_set_int
.text:000012A4                 add     esp, 0Ch
.text:000012A7
.text:000012A7 loc_12A7:                               ; CODE XREF: _cmdline_process_param+DCEj
.text:000012A7                 push    offset $SG85908 ; "-A"
.text:000012AC                 mov     eax, [ebp+arg_0]
.text:000012AF                 push    eax             ; char *
.text:000012B0                 call    _strcmp
.text:000012B5                 add     esp, 8
.text:000012B8                 test    eax, eax
.text:000012BA                 jnz     short loc_1337
.text:000012BC
.text:000012BC loc_12BC:                               ; CODE XREF: _cmdline_process_param+E87j
.text:000012BC                 xor     ecx, ecx
.text:000012BE                 jz      short loc_12CA
.text:000012C0                 mov     eax, 0FFFFFFFEh
.text:000012C5                 jmp     loc_1CD2
.text:000012CA ; ---------------------------------------------------------------------------
.text:000012CA
.text:000012CA loc_12CA:                               ; CODE XREF: _cmdline_process_param+E62j
.text:000012CA                 mov     [ebp+var_4], 1
.text:000012D1                 cmp     [ebp+arg_8], 0
.text:000012D5                 jge     short loc_12E1
.text:000012D7                 mov     eax, 1
.text:000012DC                 jmp     loc_1CD2
.text:000012E1 ; ---------------------------------------------------------------------------
.text:000012E1
.text:000012E1 loc_12E1:                               ; CODE XREF: _cmdline_process_param+E79j
.text:000012E1                 xor     edx, edx
.text:000012E3                 jnz     short loc_12BC
.text:000012E5
.text:000012E5 loc_12E5:                               ; CODE XREF: _cmdline_process_param+EA5j
.text:000012E5                 mov     eax, [ebp+arg_0]
.text:000012E8                 push    eax
.text:000012E9                 push    3
.text:000012EB                 call    _cmdline_check_unavailable
.text:000012F0                 add     esp, 8
.text:000012F3                 test    eax, eax
.text:000012F5                 jz      short loc_12FF
.text:000012F7                 mov     eax, [ebp+var_4]
.text:000012FA                 jmp     loc_1CD2
.text:000012FF ; ---------------------------------------------------------------------------
.text:000012FF
.text:000012FF loc_12FF:                               ; CODE XREF: _cmdline_process_param+E99j
.text:000012FF                 xor     ecx, ecx
.text:00001301                 jnz     short loc_12E5
.text:00001303
.text:00001303 loc_1303:                               ; CODE XREF: _cmdline_process_param+EC9j
.text:00001303                 cmp     [ebp+arg_8], 0
.text:00001307                 jz      short loc_1323
.text:00001309                 push    0
.text:0000130B                 mov     edx, [ebp+arg_4]
.text:0000130E                 push    edx
.text:0000130F                 mov     eax, [ebp+arg_0]
.text:00001312                 push    eax
.text:00001313                 call    _cmdline_save_param
.text:00001318                 add     esp, 0Ch
.text:0000131B                 mov     eax, [ebp+var_4]
.text:0000131E                 jmp     loc_1CD2
.text:00001323 ; ---------------------------------------------------------------------------
.text:00001323
.text:00001323 loc_1323:                               ; CODE XREF: _cmdline_process_param+EABj
.text:00001323                 xor     ecx, ecx
.text:00001325                 jnz     short loc_1303
.text:00001327                 push    1
.text:00001329                 push    1Bh
.text:0000132B                 mov     edx, [ebp+arg_C]
.text:0000132E                 push    edx
.text:0000132F                 call    _conf_set_int
.text:00001334                 add     esp, 0Ch
.text:00001337
.text:00001337 loc_1337:                               ; CODE XREF: _cmdline_process_param+E5Ej
.text:00001337                 push    offset $SG85923 ; "-a"
.text:0000133C                 mov     eax, [ebp+arg_0]
.text:0000133F                 push    eax             ; char *
.text:00001340                 call    _strcmp
.text:00001345                 add     esp, 8
.text:00001348                 test    eax, eax
.text:0000134A                 jnz     short loc_13C7
.text:0000134C
.text:0000134C loc_134C:                               ; CODE XREF: _cmdline_process_param+F17j
.text:0000134C                 xor     ecx, ecx
.text:0000134E                 jz      short loc_135A
.text:00001350                 mov     eax, 0FFFFFFFEh
.text:00001355                 jmp     loc_1CD2
.text:0000135A ; ---------------------------------------------------------------------------
.text:0000135A
.text:0000135A loc_135A:                               ; CODE XREF: _cmdline_process_param+EF2j
.text:0000135A                 mov     [ebp+var_4], 1
.text:00001361                 cmp     [ebp+arg_8], 0
.text:00001365                 jge     short loc_1371
.text:00001367                 mov     eax, 1
.text:0000136C                 jmp     loc_1CD2
.text:00001371 ; ---------------------------------------------------------------------------
.text:00001371
.text:00001371 loc_1371:                               ; CODE XREF: _cmdline_process_param+F09j
.text:00001371                 xor     edx, edx
.text:00001373                 jnz     short loc_134C
.text:00001375
.text:00001375 loc_1375:                               ; CODE XREF: _cmdline_process_param+F35j
.text:00001375                 mov     eax, [ebp+arg_0]
.text:00001378                 push    eax
.text:00001379                 push    3
.text:0000137B                 call    _cmdline_check_unavailable
.text:00001380                 add     esp, 8
.text:00001383                 test    eax, eax
.text:00001385                 jz      short loc_138F
.text:00001387                 mov     eax, [ebp+var_4]
.text:0000138A                 jmp     loc_1CD2
.text:0000138F ; ---------------------------------------------------------------------------
.text:0000138F
.text:0000138F loc_138F:                               ; CODE XREF: _cmdline_process_param+F29j
.text:0000138F                 xor     ecx, ecx
.text:00001391                 jnz     short loc_1375
.text:00001393
.text:00001393 loc_1393:                               ; CODE XREF: _cmdline_process_param+F59j
.text:00001393                 cmp     [ebp+arg_8], 0
.text:00001397                 jz      short loc_13B3
.text:00001399                 push    0
.text:0000139B                 mov     edx, [ebp+arg_4]
.text:0000139E                 push    edx
.text:0000139F                 mov     eax, [ebp+arg_0]
.text:000013A2                 push    eax
.text:000013A3                 call    _cmdline_save_param
.text:000013A8                 add     esp, 0Ch
.text:000013AB                 mov     eax, [ebp+var_4]
.text:000013AE                 jmp     loc_1CD2
.text:000013B3 ; ---------------------------------------------------------------------------
.text:000013B3
.text:000013B3 loc_13B3:                               ; CODE XREF: _cmdline_process_param+F3Bj
.text:000013B3                 xor     ecx, ecx
.text:000013B5                 jnz     short loc_1393
.text:000013B7                 push    0
.text:000013B9                 push    1Bh
.text:000013BB                 mov     edx, [ebp+arg_C]
.text:000013BE                 push    edx
.text:000013BF                 call    _conf_set_int
.text:000013C4                 add     esp, 0Ch
.text:000013C7
.text:000013C7 loc_13C7:                               ; CODE XREF: _cmdline_process_param+EEEj
.text:000013C7                 push    offset $SG85938 ; "-X"
.text:000013CC                 mov     eax, [ebp+arg_0]
.text:000013CF                 push    eax             ; char *
.text:000013D0                 call    _strcmp
.text:000013D5                 add     esp, 8
.text:000013D8                 test    eax, eax
.text:000013DA                 jnz     short loc_145A
.text:000013DC
.text:000013DC loc_13DC:                               ; CODE XREF: _cmdline_process_param+FA7j
.text:000013DC                 xor     ecx, ecx
.text:000013DE                 jz      short loc_13EA
.text:000013E0                 mov     eax, 0FFFFFFFEh
.text:000013E5                 jmp     loc_1CD2
.text:000013EA ; ---------------------------------------------------------------------------
.text:000013EA
.text:000013EA loc_13EA:                               ; CODE XREF: _cmdline_process_param+F82j
.text:000013EA                 mov     [ebp+var_4], 1
.text:000013F1                 cmp     [ebp+arg_8], 0
.text:000013F5                 jge     short loc_1401
.text:000013F7                 mov     eax, 1
.text:000013FC                 jmp     loc_1CD2
.text:00001401 ; ---------------------------------------------------------------------------
.text:00001401
.text:00001401 loc_1401:                               ; CODE XREF: _cmdline_process_param+F99j
.text:00001401                 xor     edx, edx
.text:00001403                 jnz     short loc_13DC
.text:00001405
.text:00001405 loc_1405:                               ; CODE XREF: _cmdline_process_param+FC5j
.text:00001405                 mov     eax, [ebp+arg_0]
.text:00001408                 push    eax
.text:00001409                 push    3
.text:0000140B                 call    _cmdline_check_unavailable
.text:00001410                 add     esp, 8
.text:00001413                 test    eax, eax
.text:00001415                 jz      short loc_141F
.text:00001417                 mov     eax, [ebp+var_4]
.text:0000141A                 jmp     loc_1CD2
.text:0000141F ; ---------------------------------------------------------------------------
.text:0000141F
.text:0000141F loc_141F:                               ; CODE XREF: _cmdline_process_param+FB9j
.text:0000141F                 xor     ecx, ecx
.text:00001421                 jnz     short loc_1405
.text:00001423
.text:00001423 loc_1423:                               ; CODE XREF: _cmdline_process_param+FE9j
.text:00001423                 cmp     [ebp+arg_8], 0
.text:00001427                 jz      short loc_1443
.text:00001429                 push    0
.text:0000142B                 mov     edx, [ebp+arg_4]
.text:0000142E                 push    edx
.text:0000142F                 mov     eax, [ebp+arg_0]
.text:00001432                 push    eax
.text:00001433                 call    _cmdline_save_param
.text:00001438                 add     esp, 0Ch
.text:0000143B                 mov     eax, [ebp+var_4]
.text:0000143E                 jmp     loc_1CD2
.text:00001443 ; ---------------------------------------------------------------------------
.text:00001443
.text:00001443 loc_1443:                               ; CODE XREF: _cmdline_process_param+FCBj
.text:00001443                 xor     ecx, ecx
.text:00001445                 jnz     short loc_1423
.text:00001447                 push    1
.text:00001449                 push    90h ; 'É'
.text:0000144E                 mov     edx, [ebp+arg_C]
.text:00001451                 push    edx
.text:00001452                 call    _conf_set_int
.text:00001457                 add     esp, 0Ch
.text:0000145A
.text:0000145A loc_145A:                               ; CODE XREF: _cmdline_process_param+F7Ej
.text:0000145A                 push    offset $SG85953 ; "-x"
.text:0000145F                 mov     eax, [ebp+arg_0]
.text:00001462                 push    eax             ; char *
.text:00001463                 call    _strcmp
.text:00001468                 add     esp, 8
.text:0000146B                 test    eax, eax
.text:0000146D                 jnz     short loc_14ED
.text:0000146F
.text:0000146F loc_146F:                               ; CODE XREF: _cmdline_process_param+103Aj
.text:0000146F                 xor     ecx, ecx
.text:00001471                 jz      short loc_147D
.text:00001473                 mov     eax, 0FFFFFFFEh
.text:00001478                 jmp     loc_1CD2
.text:0000147D ; ---------------------------------------------------------------------------
.text:0000147D
.text:0000147D loc_147D:                               ; CODE XREF: _cmdline_process_param+1015j
.text:0000147D                 mov     [ebp+var_4], 1
.text:00001484                 cmp     [ebp+arg_8], 0
.text:00001488                 jge     short loc_1494
.text:0000148A                 mov     eax, 1
.text:0000148F                 jmp     loc_1CD2
.text:00001494 ; ---------------------------------------------------------------------------
.text:00001494
.text:00001494 loc_1494:                               ; CODE XREF: _cmdline_process_param+102Cj
.text:00001494                 xor     edx, edx
.text:00001496                 jnz     short loc_146F
.text:00001498
.text:00001498 loc_1498:                               ; CODE XREF: _cmdline_process_param+1058j
.text:00001498                 mov     eax, [ebp+arg_0]
.text:0000149B                 push    eax
.text:0000149C                 push    3
.text:0000149E                 call    _cmdline_check_unavailable
.text:000014A3                 add     esp, 8
.text:000014A6                 test    eax, eax
.text:000014A8                 jz      short loc_14B2
.text:000014AA                 mov     eax, [ebp+var_4]
.text:000014AD                 jmp     loc_1CD2
.text:000014B2 ; ---------------------------------------------------------------------------
.text:000014B2
.text:000014B2 loc_14B2:                               ; CODE XREF: _cmdline_process_param+104Cj
.text:000014B2                 xor     ecx, ecx
.text:000014B4                 jnz     short loc_1498
.text:000014B6
.text:000014B6 loc_14B6:                               ; CODE XREF: _cmdline_process_param+107Cj
.text:000014B6                 cmp     [ebp+arg_8], 0
.text:000014BA                 jz      short loc_14D6
.text:000014BC                 push    0
.text:000014BE                 mov     edx, [ebp+arg_4]
.text:000014C1                 push    edx
.text:000014C2                 mov     eax, [ebp+arg_0]
.text:000014C5                 push    eax
.text:000014C6                 call    _cmdline_save_param
.text:000014CB                 add     esp, 0Ch
.text:000014CE                 mov     eax, [ebp+var_4]
.text:000014D1                 jmp     loc_1CD2
.text:000014D6 ; ---------------------------------------------------------------------------
.text:000014D6
.text:000014D6 loc_14D6:                               ; CODE XREF: _cmdline_process_param+105Ej
.text:000014D6                 xor     ecx, ecx
.text:000014D8                 jnz     short loc_14B6
.text:000014DA                 push    0
.text:000014DC                 push    90h ; 'É'
.text:000014E1                 mov     edx, [ebp+arg_C]
.text:000014E4                 push    edx
.text:000014E5                 call    _conf_set_int
.text:000014EA                 add     esp, 0Ch
.text:000014ED
.text:000014ED loc_14ED:                               ; CODE XREF: _cmdline_process_param+1011j
.text:000014ED                 push    offset $SG85968 ; "-t"
.text:000014F2                 mov     eax, [ebp+arg_0]
.text:000014F5                 push    eax             ; char *
.text:000014F6                 call    _strcmp
.text:000014FB                 add     esp, 8
.text:000014FE                 test    eax, eax
.text:00001500                 jnz     short loc_157D
.text:00001502
.text:00001502 loc_1502:                               ; CODE XREF: _cmdline_process_param+10CDj
.text:00001502                 xor     ecx, ecx
.text:00001504                 jz      short loc_1510
.text:00001506                 mov     eax, 0FFFFFFFEh
.text:0000150B                 jmp     loc_1CD2
.text:00001510 ; ---------------------------------------------------------------------------
.text:00001510
.text:00001510 loc_1510:                               ; CODE XREF: _cmdline_process_param+10A8j
.text:00001510                 mov     [ebp+var_4], 1
.text:00001517                 cmp     [ebp+arg_8], 0
.text:0000151B                 jge     short loc_1527
.text:0000151D                 mov     eax, 1
.text:00001522                 jmp     loc_1CD2
.text:00001527 ; ---------------------------------------------------------------------------
.text:00001527
.text:00001527 loc_1527:                               ; CODE XREF: _cmdline_process_param+10BFj
.text:00001527                 xor     edx, edx
.text:00001529                 jnz     short loc_1502
.text:0000152B
.text:0000152B loc_152B:                               ; CODE XREF: _cmdline_process_param+10EBj
.text:0000152B                 mov     eax, [ebp+arg_0]
.text:0000152E                 push    eax
.text:0000152F                 push    3
.text:00001531                 call    _cmdline_check_unavailable
.text:00001536                 add     esp, 8
.text:00001539                 test    eax, eax
.text:0000153B                 jz      short loc_1545
.text:0000153D                 mov     eax, [ebp+var_4]
.text:00001540                 jmp     loc_1CD2
.text:00001545 ; ---------------------------------------------------------------------------
.text:00001545
.text:00001545 loc_1545:                               ; CODE XREF: _cmdline_process_param+10DFj
.text:00001545                 xor     ecx, ecx
.text:00001547                 jnz     short loc_152B
.text:00001549
.text:00001549 loc_1549:                               ; CODE XREF: _cmdline_process_param+110Fj
.text:00001549                 cmp     [ebp+arg_8], 0
.text:0000154D                 jz      short loc_1569
.text:0000154F                 push    1
.text:00001551                 mov     edx, [ebp+arg_4]
.text:00001554                 push    edx
.text:00001555                 mov     eax, [ebp+arg_0]
.text:00001558                 push    eax
.text:00001559                 call    _cmdline_save_param
.text:0000155E                 add     esp, 0Ch
.text:00001561                 mov     eax, [ebp+var_4]
.text:00001564                 jmp     loc_1CD2
.text:00001569 ; ---------------------------------------------------------------------------
.text:00001569
.text:00001569 loc_1569:                               ; CODE XREF: _cmdline_process_param+10F1j
.text:00001569                 xor     ecx, ecx
.text:0000156B                 jnz     short loc_1549
.text:0000156D                 push    0
.text:0000156F                 push    15h
.text:00001571                 mov     edx, [ebp+arg_C]
.text:00001574                 push    edx
.text:00001575                 call    _conf_set_int
.text:0000157A                 add     esp, 0Ch
.text:0000157D
.text:0000157D loc_157D:                               ; CODE XREF: _cmdline_process_param+10A4j
.text:0000157D                 push    offset $SG85983 ; "-T"
.text:00001582                 mov     eax, [ebp+arg_0]
.text:00001585                 push    eax             ; char *
.text:00001586                 call    _strcmp
.text:0000158B                 add     esp, 8
.text:0000158E                 test    eax, eax
.text:00001590                 jnz     short loc_160D
.text:00001592
.text:00001592 loc_1592:                               ; CODE XREF: _cmdline_process_param+115Dj
.text:00001592                 xor     ecx, ecx
.text:00001594                 jz      short loc_15A0
.text:00001596                 mov     eax, 0FFFFFFFEh
.text:0000159B                 jmp     loc_1CD2
.text:000015A0 ; ---------------------------------------------------------------------------
.text:000015A0
.text:000015A0 loc_15A0:                               ; CODE XREF: _cmdline_process_param+1138j
.text:000015A0                 mov     [ebp+var_4], 1
.text:000015A7                 cmp     [ebp+arg_8], 0
.text:000015AB                 jge     short loc_15B7
.text:000015AD                 mov     eax, 1
.text:000015B2                 jmp     loc_1CD2
.text:000015B7 ; ---------------------------------------------------------------------------
.text:000015B7
.text:000015B7 loc_15B7:                               ; CODE XREF: _cmdline_process_param+114Fj
.text:000015B7                 xor     edx, edx
.text:000015B9                 jnz     short loc_1592
.text:000015BB
.text:000015BB loc_15BB:                               ; CODE XREF: _cmdline_process_param+117Bj
.text:000015BB                 mov     eax, [ebp+arg_0]
.text:000015BE                 push    eax
.text:000015BF                 push    3
.text:000015C1                 call    _cmdline_check_unavailable
.text:000015C6                 add     esp, 8
.text:000015C9                 test    eax, eax
.text:000015CB                 jz      short loc_15D5
.text:000015CD                 mov     eax, [ebp+var_4]
.text:000015D0                 jmp     loc_1CD2
.text:000015D5 ; ---------------------------------------------------------------------------
.text:000015D5
.text:000015D5 loc_15D5:                               ; CODE XREF: _cmdline_process_param+116Fj
.text:000015D5                 xor     ecx, ecx
.text:000015D7                 jnz     short loc_15BB
.text:000015D9
.text:000015D9 loc_15D9:                               ; CODE XREF: _cmdline_process_param+119Fj
.text:000015D9                 cmp     [ebp+arg_8], 0
.text:000015DD                 jz      short loc_15F9
.text:000015DF                 push    1
.text:000015E1                 mov     edx, [ebp+arg_4]
.text:000015E4                 push    edx
.text:000015E5                 mov     eax, [ebp+arg_0]
.text:000015E8                 push    eax
.text:000015E9                 call    _cmdline_save_param
.text:000015EE                 add     esp, 0Ch
.text:000015F1                 mov     eax, [ebp+var_4]
.text:000015F4                 jmp     loc_1CD2
.text:000015F9 ; ---------------------------------------------------------------------------
.text:000015F9
.text:000015F9 loc_15F9:                               ; CODE XREF: _cmdline_process_param+1181j
.text:000015F9                 xor     ecx, ecx
.text:000015FB                 jnz     short loc_15D9
.text:000015FD                 push    1
.text:000015FF                 push    15h
.text:00001601                 mov     edx, [ebp+arg_C]
.text:00001604                 push    edx
.text:00001605                 call    _conf_set_int
.text:0000160A                 add     esp, 0Ch
.text:0000160D
.text:0000160D loc_160D:                               ; CODE XREF: _cmdline_process_param+1134j
.text:0000160D                 push    offset $SG85998 ; "-N"
.text:00001612                 mov     eax, [ebp+arg_0]
.text:00001615                 push    eax             ; char *
.text:00001616                 call    _strcmp
.text:0000161B                 add     esp, 8
.text:0000161E                 test    eax, eax
.text:00001620                 jnz     short loc_169D
.text:00001622
.text:00001622 loc_1622:                               ; CODE XREF: _cmdline_process_param+11EDj
.text:00001622                 xor     ecx, ecx
.text:00001624                 jz      short loc_1630
.text:00001626                 mov     eax, 0FFFFFFFEh
.text:0000162B                 jmp     loc_1CD2
.text:00001630 ; ---------------------------------------------------------------------------
.text:00001630
.text:00001630 loc_1630:                               ; CODE XREF: _cmdline_process_param+11C8j
.text:00001630                 mov     [ebp+var_4], 1
.text:00001637                 cmp     [ebp+arg_8], 0
.text:0000163B                 jge     short loc_1647
.text:0000163D                 mov     eax, 1
.text:00001642                 jmp     loc_1CD2
.text:00001647 ; ---------------------------------------------------------------------------
.text:00001647
.text:00001647 loc_1647:                               ; CODE XREF: _cmdline_process_param+11DFj
.text:00001647                 xor     edx, edx
.text:00001649                 jnz     short loc_1622
.text:0000164B
.text:0000164B loc_164B:                               ; CODE XREF: _cmdline_process_param+120Bj
.text:0000164B                 mov     eax, [ebp+arg_0]
.text:0000164E                 push    eax
.text:0000164F                 push    3
.text:00001651                 call    _cmdline_check_unavailable
.text:00001656                 add     esp, 8
.text:00001659                 test    eax, eax
.text:0000165B                 jz      short loc_1665
.text:0000165D                 mov     eax, [ebp+var_4]
.text:00001660                 jmp     loc_1CD2
.text:00001665 ; ---------------------------------------------------------------------------
.text:00001665
.text:00001665 loc_1665:                               ; CODE XREF: _cmdline_process_param+11FFj
.text:00001665                 xor     ecx, ecx
.text:00001667                 jnz     short loc_164B
.text:00001669
.text:00001669 loc_1669:                               ; CODE XREF: _cmdline_process_param+122Fj
.text:00001669                 cmp     [ebp+arg_8], 0
.text:0000166D                 jz      short loc_1689
.text:0000166F                 push    0
.text:00001671                 mov     edx, [ebp+arg_4]
.text:00001674                 push    edx
.text:00001675                 mov     eax, [ebp+arg_0]
.text:00001678                 push    eax
.text:00001679                 call    _cmdline_save_param
.text:0000167E                 add     esp, 0Ch
.text:00001681                 mov     eax, [ebp+var_4]
.text:00001684                 jmp     loc_1CD2
.text:00001689 ; ---------------------------------------------------------------------------
.text:00001689
.text:00001689 loc_1689:                               ; CODE XREF: _cmdline_process_param+1211j
.text:00001689                 xor     ecx, ecx
.text:0000168B                 jnz     short loc_1669
.text:0000168D                 push    1
.text:0000168F                 push    2Bh ; '+'
.text:00001691                 mov     edx, [ebp+arg_C]
.text:00001694                 push    edx
.text:00001695                 call    _conf_set_int
.text:0000169A                 add     esp, 0Ch
.text:0000169D
.text:0000169D loc_169D:                               ; CODE XREF: _cmdline_process_param+11C4j
.text:0000169D                 push    offset $SG86013 ; "-C"
.text:000016A2                 mov     eax, [ebp+arg_0]
.text:000016A5                 push    eax             ; char *
.text:000016A6                 call    _strcmp
.text:000016AB                 add     esp, 8
.text:000016AE                 test    eax, eax
.text:000016B0                 jnz     short loc_172D
.text:000016B2
.text:000016B2 loc_16B2:                               ; CODE XREF: _cmdline_process_param+127Dj
.text:000016B2                 xor     ecx, ecx
.text:000016B4                 jz      short loc_16C0
.text:000016B6                 mov     eax, 0FFFFFFFEh
.text:000016BB                 jmp     loc_1CD2
.text:000016C0 ; ---------------------------------------------------------------------------
.text:000016C0
.text:000016C0 loc_16C0:                               ; CODE XREF: _cmdline_process_param+1258j
.text:000016C0                 mov     [ebp+var_4], 1
.text:000016C7                 cmp     [ebp+arg_8], 0
.text:000016CB                 jge     short loc_16D7
.text:000016CD                 mov     eax, 1
.text:000016D2                 jmp     loc_1CD2
.text:000016D7 ; ---------------------------------------------------------------------------
.text:000016D7
.text:000016D7 loc_16D7:                               ; CODE XREF: _cmdline_process_param+126Fj
.text:000016D7                 xor     edx, edx
.text:000016D9                 jnz     short loc_16B2
.text:000016DB
.text:000016DB loc_16DB:                               ; CODE XREF: _cmdline_process_param+129Bj
.text:000016DB                 mov     eax, [ebp+arg_0]
.text:000016DE                 push    eax
.text:000016DF                 push    2
.text:000016E1                 call    _cmdline_check_unavailable
.text:000016E6                 add     esp, 8
.text:000016E9                 test    eax, eax
.text:000016EB                 jz      short loc_16F5
.text:000016ED                 mov     eax, [ebp+var_4]
.text:000016F0                 jmp     loc_1CD2
.text:000016F5 ; ---------------------------------------------------------------------------
.text:000016F5
.text:000016F5 loc_16F5:                               ; CODE XREF: _cmdline_process_param+128Fj
.text:000016F5                 xor     ecx, ecx
.text:000016F7                 jnz     short loc_16DB
.text:000016F9
.text:000016F9 loc_16F9:                               ; CODE XREF: _cmdline_process_param+12BFj
.text:000016F9                 cmp     [ebp+arg_8], 0
.text:000016FD                 jz      short loc_1719
.text:000016FF                 push    0
.text:00001701                 mov     edx, [ebp+arg_4]
.text:00001704                 push    edx
.text:00001705                 mov     eax, [ebp+arg_0]
.text:00001708                 push    eax
.text:00001709                 call    _cmdline_save_param
.text:0000170E                 add     esp, 0Ch
.text:00001711                 mov     eax, [ebp+var_4]
.text:00001714                 jmp     loc_1CD2
.text:00001719 ; ---------------------------------------------------------------------------
.text:00001719
.text:00001719 loc_1719:                               ; CODE XREF: _cmdline_process_param+12A1j
.text:00001719                 xor     ecx, ecx
.text:0000171B                 jnz     short loc_16F9
.text:0000171D                 push    1
.text:0000171F                 push    16h
.text:00001721                 mov     edx, [ebp+arg_C]
.text:00001724                 push    edx
.text:00001725                 call    _conf_set_int
.text:0000172A                 add     esp, 0Ch
.text:0000172D
.text:0000172D loc_172D:                               ; CODE XREF: _cmdline_process_param+1254j
.text:0000172D                 push    offset $SG86028 ; "-1"
.text:00001732                 mov     eax, [ebp+arg_0]
.text:00001735                 push    eax             ; char *
.text:00001736                 call    _strcmp
.text:0000173B                 add     esp, 8
.text:0000173E                 test    eax, eax
.text:00001740                 jnz     short loc_17BD
.text:00001742
.text:00001742 loc_1742:                               ; CODE XREF: _cmdline_process_param+130Dj
.text:00001742                 xor     ecx, ecx
.text:00001744                 jz      short loc_1750
.text:00001746                 mov     eax, 0FFFFFFFEh
.text:0000174B                 jmp     loc_1CD2
.text:00001750 ; ---------------------------------------------------------------------------
.text:00001750
.text:00001750 loc_1750:                               ; CODE XREF: _cmdline_process_param+12E8j
.text:00001750                 mov     [ebp+var_4], 1
.text:00001757                 cmp     [ebp+arg_8], 0
.text:0000175B                 jge     short loc_1767
.text:0000175D                 mov     eax, 1
.text:00001762                 jmp     loc_1CD2
.text:00001767 ; ---------------------------------------------------------------------------
.text:00001767
.text:00001767 loc_1767:                               ; CODE XREF: _cmdline_process_param+12FFj
.text:00001767                 xor     edx, edx
.text:00001769                 jnz     short loc_1742
.text:0000176B
.text:0000176B loc_176B:                               ; CODE XREF: _cmdline_process_param+132Bj
.text:0000176B                 mov     eax, [ebp+arg_0]
.text:0000176E                 push    eax
.text:0000176F                 push    2
.text:00001771                 call    _cmdline_check_unavailable
.text:00001776                 add     esp, 8
.text:00001779                 test    eax, eax
.text:0000177B                 jz      short loc_1785
.text:0000177D                 mov     eax, [ebp+var_4]
.text:00001780                 jmp     loc_1CD2
.text:00001785 ; ---------------------------------------------------------------------------
.text:00001785
.text:00001785 loc_1785:                               ; CODE XREF: _cmdline_process_param+131Fj
.text:00001785                 xor     ecx, ecx
.text:00001787                 jnz     short loc_176B
.text:00001789
.text:00001789 loc_1789:                               ; CODE XREF: _cmdline_process_param+134Fj
.text:00001789                 cmp     [ebp+arg_8], 0
.text:0000178D                 jz      short loc_17A9
.text:0000178F                 push    0
.text:00001791                 mov     edx, [ebp+arg_4]
.text:00001794                 push    edx
.text:00001795                 mov     eax, [ebp+arg_0]
.text:00001798                 push    eax
.text:00001799                 call    _cmdline_save_param
.text:0000179E                 add     esp, 0Ch
.text:000017A1                 mov     eax, [ebp+var_4]
.text:000017A4                 jmp     loc_1CD2
.text:000017A9 ; ---------------------------------------------------------------------------
.text:000017A9
.text:000017A9 loc_17A9:                               ; CODE XREF: _cmdline_process_param+1331j
.text:000017A9                 xor     ecx, ecx
.text:000017AB                 jnz     short loc_1789
.text:000017AD                 push    0
.text:000017AF                 push    1Fh
.text:000017B1                 mov     edx, [ebp+arg_C]
.text:000017B4                 push    edx
.text:000017B5                 call    _conf_set_int
.text:000017BA                 add     esp, 0Ch
.text:000017BD
.text:000017BD loc_17BD:                               ; CODE XREF: _cmdline_process_param+12E4j
.text:000017BD                 push    offset $SG86043 ; "-2"
.text:000017C2                 mov     eax, [ebp+arg_0]
.text:000017C5                 push    eax             ; char *
.text:000017C6                 call    _strcmp
.text:000017CB                 add     esp, 8
.text:000017CE                 test    eax, eax
.text:000017D0                 jnz     short loc_184D
.text:000017D2
.text:000017D2 loc_17D2:                               ; CODE XREF: _cmdline_process_param+139Dj
.text:000017D2                 xor     ecx, ecx
.text:000017D4                 jz      short loc_17E0
.text:000017D6                 mov     eax, 0FFFFFFFEh
.text:000017DB                 jmp     loc_1CD2
.text:000017E0 ; ---------------------------------------------------------------------------
.text:000017E0
.text:000017E0 loc_17E0:                               ; CODE XREF: _cmdline_process_param+1378j
.text:000017E0                 mov     [ebp+var_4], 1
.text:000017E7                 cmp     [ebp+arg_8], 0
.text:000017EB                 jge     short loc_17F7
.text:000017ED                 mov     eax, 1
.text:000017F2                 jmp     loc_1CD2
.text:000017F7 ; ---------------------------------------------------------------------------
.text:000017F7
.text:000017F7 loc_17F7:                               ; CODE XREF: _cmdline_process_param+138Fj
.text:000017F7                 xor     edx, edx
.text:000017F9                 jnz     short loc_17D2
.text:000017FB
.text:000017FB loc_17FB:                               ; CODE XREF: _cmdline_process_param+13BBj
.text:000017FB                 mov     eax, [ebp+arg_0]
.text:000017FE                 push    eax
.text:000017FF                 push    2
.text:00001801                 call    _cmdline_check_unavailable
.text:00001806                 add     esp, 8
.text:00001809                 test    eax, eax
.text:0000180B                 jz      short loc_1815
.text:0000180D                 mov     eax, [ebp+var_4]
.text:00001810                 jmp     loc_1CD2
.text:00001815 ; ---------------------------------------------------------------------------
.text:00001815
.text:00001815 loc_1815:                               ; CODE XREF: _cmdline_process_param+13AFj
.text:00001815                 xor     ecx, ecx
.text:00001817                 jnz     short loc_17FB
.text:00001819
.text:00001819 loc_1819:                               ; CODE XREF: _cmdline_process_param+13DFj
.text:00001819                 cmp     [ebp+arg_8], 0
.text:0000181D                 jz      short loc_1839
.text:0000181F                 push    0
.text:00001821                 mov     edx, [ebp+arg_4]
.text:00001824                 push    edx
.text:00001825                 mov     eax, [ebp+arg_0]
.text:00001828                 push    eax
.text:00001829                 call    _cmdline_save_param
.text:0000182E                 add     esp, 0Ch
.text:00001831                 mov     eax, [ebp+var_4]
.text:00001834                 jmp     loc_1CD2
.text:00001839 ; ---------------------------------------------------------------------------
.text:00001839
.text:00001839 loc_1839:                               ; CODE XREF: _cmdline_process_param+13C1j
.text:00001839                 xor     ecx, ecx
.text:0000183B                 jnz     short loc_1819
.text:0000183D                 push    3
.text:0000183F                 push    1Fh
.text:00001841                 mov     edx, [ebp+arg_C]
.text:00001844                 push    edx
.text:00001845                 call    _conf_set_int
.text:0000184A                 add     esp, 0Ch
.text:0000184D
.text:0000184D loc_184D:                               ; CODE XREF: _cmdline_process_param+1374j
.text:0000184D                 push    offset $SG86058 ; "-i"
.text:00001852                 mov     eax, [ebp+arg_0]
.text:00001855                 push    eax             ; char *
.text:00001856                 call    _strcmp
.text:0000185B                 add     esp, 8
.text:0000185E                 test    eax, eax
.text:00001860                 jnz     loc_1909
.text:00001866
.text:00001866 loc_1866:                               ; CODE XREF: _cmdline_process_param+143Cj
.text:00001866                 mov     ecx, 1
.text:0000186B                 test    ecx, ecx
.text:0000186D                 jz      short loc_187F
.text:0000186F                 cmp     [ebp+arg_4], 0
.text:00001873                 jnz     short loc_187F
.text:00001875                 mov     eax, 0FFFFFFFEh
.text:0000187A                 jmp     loc_1CD2
.text:0000187F ; ---------------------------------------------------------------------------
.text:0000187F
.text:0000187F loc_187F:                               ; CODE XREF: _cmdline_process_param+1411j
.text:0000187F                                         ; _cmdline_process_param+1417j
.text:0000187F                 mov     [ebp+var_4], 2
.text:00001886                 cmp     [ebp+arg_8], 0
.text:0000188A                 jge     short loc_1896
.text:0000188C                 mov     eax, 2
.text:00001891                 jmp     loc_1CD2
.text:00001896 ; ---------------------------------------------------------------------------
.text:00001896
.text:00001896 loc_1896:                               ; CODE XREF: _cmdline_process_param+142Ej
.text:00001896                 xor     edx, edx
.text:00001898                 jnz     short loc_1866
.text:0000189A
.text:0000189A loc_189A:                               ; CODE XREF: _cmdline_process_param+145Aj
.text:0000189A                 mov     eax, [ebp+arg_0]
.text:0000189D                 push    eax
.text:0000189E                 push    2
.text:000018A0                 call    _cmdline_check_unavailable
.text:000018A5                 add     esp, 8
.text:000018A8                 test    eax, eax
.text:000018AA                 jz      short loc_18B4
.text:000018AC                 mov     eax, [ebp+var_4]
.text:000018AF                 jmp     loc_1CD2
.text:000018B4 ; ---------------------------------------------------------------------------
.text:000018B4
.text:000018B4 loc_18B4:                               ; CODE XREF: _cmdline_process_param+144Ej
.text:000018B4                 xor     ecx, ecx
.text:000018B6                 jnz     short loc_189A
.text:000018B8
.text:000018B8 loc_18B8:                               ; CODE XREF: _cmdline_process_param+147Ej
.text:000018B8                 cmp     [ebp+arg_8], 0
.text:000018BC                 jz      short loc_18D8
.text:000018BE                 push    0
.text:000018C0                 mov     edx, [ebp+arg_4]
.text:000018C3                 push    edx
.text:000018C4                 mov     eax, [ebp+arg_0]
.text:000018C7                 push    eax
.text:000018C8                 call    _cmdline_save_param
.text:000018CD                 add     esp, 0Ch
.text:000018D0                 mov     eax, [ebp+var_4]
.text:000018D3                 jmp     loc_1CD2
.text:000018D8 ; ---------------------------------------------------------------------------
.text:000018D8
.text:000018D8 loc_18D8:                               ; CODE XREF: _cmdline_process_param+1460j
.text:000018D8                 xor     ecx, ecx
.text:000018DA                 jnz     short loc_18B8
.text:000018DC                 mov     edx, [ebp+arg_4]
.text:000018DF                 push    edx
.text:000018E0                 call    _filename_from_str
.text:000018E5                 add     esp, 4
.text:000018E8                 mov     [ebp+var_48], eax
.text:000018EB                 mov     eax, [ebp+var_48]
.text:000018EE                 push    eax
.text:000018EF                 push    1Eh
.text:000018F1                 mov     ecx, [ebp+arg_C]
.text:000018F4                 push    ecx
.text:000018F5                 call    _conf_set_filename
.text:000018FA                 add     esp, 0Ch
.text:000018FD                 mov     edx, [ebp+var_48]
.text:00001900                 push    edx
.text:00001901                 call    _filename_free
.text:00001906                 add     esp, 4
.text:00001909
.text:00001909 loc_1909:                               ; CODE XREF: _cmdline_process_param+1404j
.text:00001909                 push    offset $SG86075 ; "-4"
.text:0000190E                 mov     eax, [ebp+arg_0]
.text:00001911                 push    eax             ; char *
.text:00001912                 call    _strcmp
.text:00001917                 add     esp, 8
.text:0000191A                 test    eax, eax
.text:0000191C                 jz      short loc_1933
.text:0000191E                 push    offset $SG86076 ; "-ipv4"
.text:00001923                 mov     ecx, [ebp+arg_0]
.text:00001926                 push    ecx             ; char *
.text:00001927                 call    _strcmp
.text:0000192C                 add     esp, 8
.text:0000192F                 test    eax, eax
.text:00001931                 jnz     short loc_1990
.text:00001933
.text:00001933 loc_1933:                               ; CODE XREF: _cmdline_process_param+14C0j
.text:00001933                                         ; _cmdline_process_param+14FEj
.text:00001933                 xor     edx, edx
.text:00001935                 jz      short loc_1941
.text:00001937                 mov     eax, 0FFFFFFFEh
.text:0000193C                 jmp     loc_1CD2
.text:00001941 ; ---------------------------------------------------------------------------
.text:00001941
.text:00001941 loc_1941:                               ; CODE XREF: _cmdline_process_param+14D9j
.text:00001941                 mov     [ebp+var_4], 1
.text:00001948                 cmp     [ebp+arg_8], 0
.text:0000194C                 jge     short loc_1958
.text:0000194E                 mov     eax, 1
.text:00001953                 jmp     loc_1CD2
.text:00001958 ; ---------------------------------------------------------------------------
.text:00001958
.text:00001958 loc_1958:                               ; CODE XREF: _cmdline_process_param+14F0j
.text:00001958                 xor     eax, eax
.text:0000195A                 jnz     short loc_1933
.text:0000195C
.text:0000195C loc_195C:                               ; CODE XREF: _cmdline_process_param+1522j
.text:0000195C                 cmp     [ebp+arg_8], 0
.text:00001960                 jz      short loc_197C
.text:00001962                 push    1
.text:00001964                 mov     ecx, [ebp+arg_4]
.text:00001967                 push    ecx
.text:00001968                 mov     edx, [ebp+arg_0]
.text:0000196B                 push    edx
.text:0000196C                 call    _cmdline_save_param
.text:00001971                 add     esp, 0Ch
.text:00001974                 mov     eax, [ebp+var_4]
.text:00001977                 jmp     loc_1CD2
.text:0000197C ; ---------------------------------------------------------------------------
.text:0000197C
.text:0000197C loc_197C:                               ; CODE XREF: _cmdline_process_param+1504j
.text:0000197C                 xor     eax, eax
.text:0000197E                 jnz     short loc_195C
.text:00001980                 push    1
.text:00001982                 push    3
.text:00001984                 mov     ecx, [ebp+arg_C]
.text:00001987                 push    ecx
.text:00001988                 call    _conf_set_int
.text:0000198D                 add     esp, 0Ch
.text:00001990
.text:00001990 loc_1990:                               ; CODE XREF: _cmdline_process_param+14D5j
.text:00001990                 push    offset $SG86088 ; "-6"
.text:00001995                 mov     edx, [ebp+arg_0]
.text:00001998                 push    edx             ; char *
.text:00001999                 call    _strcmp
.text:0000199E                 add     esp, 8
.text:000019A1                 test    eax, eax
.text:000019A3                 jz      short loc_19BA
.text:000019A5                 push    offset $SG86089 ; "-ipv6"
.text:000019AA                 mov     eax, [ebp+arg_0]
.text:000019AD                 push    eax             ; char *
.text:000019AE                 call    _strcmp
.text:000019B3                 add     esp, 8
.text:000019B6                 test    eax, eax
.text:000019B8                 jnz     short loc_1A17
.text:000019BA
.text:000019BA loc_19BA:                               ; CODE XREF: _cmdline_process_param+1547j
.text:000019BA                                         ; _cmdline_process_param+1585j
.text:000019BA                 xor     ecx, ecx
.text:000019BC                 jz      short loc_19C8
.text:000019BE                 mov     eax, 0FFFFFFFEh
.text:000019C3                 jmp     loc_1CD2
.text:000019C8 ; ---------------------------------------------------------------------------
.text:000019C8
.text:000019C8 loc_19C8:                               ; CODE XREF: _cmdline_process_param+1560j
.text:000019C8                 mov     [ebp+var_4], 1
.text:000019CF                 cmp     [ebp+arg_8], 0
.text:000019D3                 jge     short loc_19DF
.text:000019D5                 mov     eax, 1
.text:000019DA                 jmp     loc_1CD2
.text:000019DF ; ---------------------------------------------------------------------------
.text:000019DF
.text:000019DF loc_19DF:                               ; CODE XREF: _cmdline_process_param+1577j
.text:000019DF                 xor     edx, edx
.text:000019E1                 jnz     short loc_19BA
.text:000019E3
.text:000019E3 loc_19E3:                               ; CODE XREF: _cmdline_process_param+15A9j
.text:000019E3                 cmp     [ebp+arg_8], 0
.text:000019E7                 jz      short loc_1A03
.text:000019E9                 push    1
.text:000019EB                 mov     eax, [ebp+arg_4]
.text:000019EE                 push    eax
.text:000019EF                 mov     ecx, [ebp+arg_0]
.text:000019F2                 push    ecx
.text:000019F3                 call    _cmdline_save_param
.text:000019F8                 add     esp, 0Ch
.text:000019FB                 mov     eax, [ebp+var_4]
.text:000019FE                 jmp     loc_1CD2
.text:00001A03 ; ---------------------------------------------------------------------------
.text:00001A03
.text:00001A03 loc_1A03:                               ; CODE XREF: _cmdline_process_param+158Bj
.text:00001A03                 xor     edx, edx
.text:00001A05                 jnz     short loc_19E3
.text:00001A07                 push    2
.text:00001A09                 push    3
.text:00001A0B                 mov     eax, [ebp+arg_C]
.text:00001A0E                 push    eax
.text:00001A0F                 call    _conf_set_int
.text:00001A14                 add     esp, 0Ch
.text:00001A17
.text:00001A17 loc_1A17:                               ; CODE XREF: _cmdline_process_param+155Cj
.text:00001A17                 push    offset $SG86100 ; "-sercfg"
.text:00001A1C                 mov     ecx, [ebp+arg_0]
.text:00001A1F                 push    ecx             ; char *
.text:00001A20                 call    _strcmp
.text:00001A25                 add     esp, 8
.text:00001A28                 test    eax, eax
.text:00001A2A                 jnz     loc_1CCF
.text:00001A30
.text:00001A30 loc_1A30:                               ; CODE XREF: _cmdline_process_param+1606j
.text:00001A30                 mov     edx, 1
.text:00001A35                 test    edx, edx
.text:00001A37                 jz      short loc_1A49
.text:00001A39                 cmp     [ebp+arg_4], 0
.text:00001A3D                 jnz     short loc_1A49
.text:00001A3F                 mov     eax, 0FFFFFFFEh
.text:00001A44                 jmp     loc_1CD2
.text:00001A49 ; ---------------------------------------------------------------------------
.text:00001A49
.text:00001A49 loc_1A49:                               ; CODE XREF: _cmdline_process_param+15DBj
.text:00001A49                                         ; _cmdline_process_param+15E1j
.text:00001A49                 mov     [ebp+var_4], 2
.text:00001A50                 cmp     [ebp+arg_8], 0
.text:00001A54                 jge     short loc_1A60
.text:00001A56                 mov     eax, 2
.text:00001A5B                 jmp     loc_1CD2
.text:00001A60 ; ---------------------------------------------------------------------------
.text:00001A60
.text:00001A60 loc_1A60:                               ; CODE XREF: _cmdline_process_param+15F8j
.text:00001A60                 xor     eax, eax
.text:00001A62                 jnz     short loc_1A30
.text:00001A64
.text:00001A64 loc_1A64:                               ; CODE XREF: _cmdline_process_param+1624j
.text:00001A64                 mov     ecx, [ebp+arg_0]
.text:00001A67                 push    ecx
.text:00001A68                 push    3
.text:00001A6A                 call    _cmdline_check_unavailable
.text:00001A6F                 add     esp, 8
.text:00001A72                 test    eax, eax
.text:00001A74                 jz      short loc_1A7E
.text:00001A76                 mov     eax, [ebp+var_4]
.text:00001A79                 jmp     loc_1CD2
.text:00001A7E ; ---------------------------------------------------------------------------
.text:00001A7E
.text:00001A7E loc_1A7E:                               ; CODE XREF: _cmdline_process_param+1618j
.text:00001A7E                 xor     edx, edx
.text:00001A80                 jnz     short loc_1A64
.text:00001A82
.text:00001A82 loc_1A82:                               ; CODE XREF: _cmdline_process_param+1648j
.text:00001A82                 cmp     [ebp+arg_8], 0
.text:00001A86                 jz      short loc_1AA2
.text:00001A88                 push    1
.text:00001A8A                 mov     eax, [ebp+arg_4]
.text:00001A8D                 push    eax
.text:00001A8E                 mov     ecx, [ebp+arg_0]
.text:00001A91                 push    ecx
.text:00001A92                 call    _cmdline_save_param
.text:00001A97                 add     esp, 0Ch
.text:00001A9A                 mov     eax, [ebp+var_4]
.text:00001A9D                 jmp     loc_1CD2
.text:00001AA2 ; ---------------------------------------------------------------------------
.text:00001AA2
.text:00001AA2 loc_1AA2:                               ; CODE XREF: _cmdline_process_param+162Aj
.text:00001AA2                 xor     edx, edx
.text:00001AA4                 jnz     short loc_1A82
.text:00001AA6                 push    2
.text:00001AA8                 mov     eax, [ebp+arg_C]
.text:00001AAB                 push    eax
.text:00001AAC                 call    _conf_get_int
.text:00001AB1                 add     esp, 8
.text:00001AB4                 cmp     eax, 4
.text:00001AB7                 jz      short loc_1AC6
.text:00001AB9                 push    offset $SG86116 ; "the -sercfg option can only be used wit"...
.text:00001ABE                 call    _cmdline_error
.text:00001AC3                 add     esp, 4
.text:00001AC6
.text:00001AC6 loc_1AC6:                               ; CODE XREF: _cmdline_process_param+165Bj
.text:00001AC6                 mov     ecx, [ebp+arg_4]
.text:00001AC9                 mov     [ebp+var_4C], ecx
.text:00001ACC
.text:00001ACC loc_1ACC:                               ; CODE XREF: _cmdline_process_param+186Ej
.text:00001ACC                 mov     edx, [ebp+var_4C]
.text:00001ACF                 movsx   eax, byte ptr [edx]
.text:00001AD2                 test    eax, eax
.text:00001AD4                 jz      loc_1CCF
.text:00001ADA                 push    2Ch ; ','       ; int
.text:00001ADC                 mov     ecx, [ebp+var_4C]
.text:00001ADF                 push    ecx             ; char *
.text:00001AE0                 call    _strchr
.text:00001AE5                 add     esp, 8
.text:00001AE8                 mov     [ebp+var_58], eax
.text:00001AEB                 cmp     [ebp+var_58], 0
.text:00001AEF                 jnz     short loc_1B09
.text:00001AF1                 mov     edx, [ebp+var_4C]
.text:00001AF4                 push    edx             ; char *
.text:00001AF5                 call    _strlen
.text:00001AFA                 add     esp, 4
.text:00001AFD                 mov     [ebp+var_50], eax
.text:00001B00                 mov     [ebp+var_54], 0
.text:00001B07                 jmp     short loc_1B22
.text:00001B09 ; ---------------------------------------------------------------------------
.text:00001B09
.text:00001B09 loc_1B09:                               ; CODE XREF: _cmdline_process_param+1693j
.text:00001B09                 mov     eax, [ebp+var_58]
.text:00001B0C                 sub     eax, [ebp+var_4C]
.text:00001B0F                 mov     [ebp+var_50], eax
.text:00001B12                 mov     ecx, [ebp+var_4C]
.text:00001B15                 add     ecx, [ebp+var_50]
.text:00001B18                 mov     byte ptr [ecx], 0
.text:00001B1B                 mov     [ebp+var_54], 1
.text:00001B22
.text:00001B22 loc_1B22:                               ; CODE XREF: _cmdline_process_param+16ABj
.text:00001B22                 cmp     [ebp+var_50], 1
.text:00001B26                 jnz     loc_1C55
.text:00001B2C                 mov     edx, [ebp+var_4C]
.text:00001B2F                 movsx   eax, byte ptr [edx]
.text:00001B32                 mov     [ebp+var_60], eax
.text:00001B35                 mov     ecx, [ebp+var_60]
.text:00001B38                 sub     ecx, 31h ; '1'
.text:00001B3B                 mov     [ebp+var_60], ecx
.text:00001B3E                 cmp     [ebp+var_60], 42h ; 'B' ; switch 67 cases
.text:00001B42                 ja      $LN6            ; jumptable 00001B52 default case
.text:00001B48                 mov     edx, [ebp+var_60]
.text:00001B4B                 movzx   eax, ds:$LN459[edx]
.text:00001B52                 jmp     ds:$LN460[eax*4] ; switch jump
.text:00001B59 ; ---------------------------------------------------------------------------
.text:00001B59
.text:00001B59 $LN17:                                  ; CODE XREF: _cmdline_process_param+16F6j
.text:00001B59                                         ; DATA XREF: .text:$LN460o
.text:00001B59                 mov     ecx, [ebp+var_4C] ; jumptable 00001B52 cases 0,1
.text:00001B5C                 movsx   edx, byte ptr [ecx]
.text:00001B5F                 lea     eax, [edx+edx-60h]
.text:00001B63                 push    eax
.text:00001B64                 push    3Ah ; ':'
.text:00001B66                 mov     ecx, [ebp+arg_C]
.text:00001B69                 push    ecx
.text:00001B6A                 call    _conf_set_int
.text:00001B6F                 add     esp, 0Ch
.text:00001B72                 jmp     loc_1C53
.text:00001B77 ; ---------------------------------------------------------------------------
.text:00001B77
.text:00001B77 $LN16:                                  ; CODE XREF: _cmdline_process_param+16F6j
.text:00001B77                                         ; DATA XREF: .text:$LN460o
.text:00001B77                 mov     edx, [ebp+var_4C] ; jumptable 00001B52 cases 4-8
.text:00001B7A                 movsx   eax, byte ptr [edx]
.text:00001B7D                 sub     eax, 30h ; '0'
.text:00001B80                 push    eax
.text:00001B81                 push    39h ; '9'
.text:00001B83                 mov     ecx, [ebp+arg_C]
.text:00001B86                 push    ecx
.text:00001B87                 call    _conf_set_int
.text:00001B8C                 add     esp, 0Ch
.text:00001B8F                 jmp     loc_1C53
.text:00001B94 ; ---------------------------------------------------------------------------
.text:00001B94
.text:00001B94 $LN15:                                  ; CODE XREF: _cmdline_process_param+16F6j
.text:00001B94                                         ; DATA XREF: .text:$LN460o
.text:00001B94                 push    0               ; jumptable 00001B52 case 61
.text:00001B96                 push    3Bh ; ';'
.text:00001B98                 mov     edx, [ebp+arg_C]
.text:00001B9B                 push    edx
.text:00001B9C                 call    _conf_set_int
.text:00001BA1                 add     esp, 0Ch
.text:00001BA4                 jmp     loc_1C53
.text:00001BA9 ; ---------------------------------------------------------------------------
.text:00001BA9
.text:00001BA9 $LN14:                                  ; CODE XREF: _cmdline_process_param+16F6j
.text:00001BA9                                         ; DATA XREF: .text:$LN460o
.text:00001BA9                 push    1               ; jumptable 00001B52 case 62
.text:00001BAB                 push    3Bh ; ';'
.text:00001BAD                 mov     eax, [ebp+arg_C]
.text:00001BB0                 push    eax
.text:00001BB1                 call    _conf_set_int
.text:00001BB6                 add     esp, 0Ch
.text:00001BB9                 jmp     loc_1C53
.text:00001BBE ; ---------------------------------------------------------------------------
.text:00001BBE
.text:00001BBE $LN13:                                  ; CODE XREF: _cmdline_process_param+16F6j
.text:00001BBE                                         ; DATA XREF: .text:$LN460o
.text:00001BBE                 push    2               ; jumptable 00001B52 case 52
.text:00001BC0                 push    3Bh ; ';'
.text:00001BC2                 mov     ecx, [ebp+arg_C]
.text:00001BC5                 push    ecx
.text:00001BC6                 call    _conf_set_int
.text:00001BCB                 add     esp, 0Ch
.text:00001BCE                 jmp     loc_1C53
.text:00001BD3 ; ---------------------------------------------------------------------------
.text:00001BD3
.text:00001BD3 $LN12:                                  ; CODE XREF: _cmdline_process_param+16F6j
.text:00001BD3                                         ; DATA XREF: .text:$LN460o
.text:00001BD3                 push    3               ; jumptable 00001B52 case 60
.text:00001BD5                 push    3Bh ; ';'
.text:00001BD7                 mov     edx, [ebp+arg_C]
.text:00001BDA                 push    edx
.text:00001BDB                 call    _conf_set_int
.text:00001BE0                 add     esp, 0Ch
.text:00001BE3                 jmp     short loc_1C53
.text:00001BE5 ; ---------------------------------------------------------------------------
.text:00001BE5
.text:00001BE5 $LN11:                                  ; CODE XREF: _cmdline_process_param+16F6j
.text:00001BE5                                         ; DATA XREF: .text:$LN460o
.text:00001BE5                 push    4               ; jumptable 00001B52 case 66
.text:00001BE7                 push    3Bh ; ';'
.text:00001BE9                 mov     eax, [ebp+arg_C]
.text:00001BEC                 push    eax
.text:00001BED                 call    _conf_set_int
.text:00001BF2                 add     esp, 0Ch
.text:00001BF5                 jmp     short loc_1C53
.text:00001BF7 ; ---------------------------------------------------------------------------
.text:00001BF7
.text:00001BF7 $LN10:                                  ; CODE XREF: _cmdline_process_param+16F6j
.text:00001BF7                                         ; DATA XREF: .text:$LN460o
.text:00001BF7                 push    0               ; jumptable 00001B52 case 29
.text:00001BF9                 push    3Ch ; '<'
.text:00001BFB                 mov     ecx, [ebp+arg_C]
.text:00001BFE                 push    ecx
.text:00001BFF                 call    _conf_set_int
.text:00001C04                 add     esp, 0Ch
.text:00001C07                 jmp     short loc_1C53
.text:00001C09 ; ---------------------------------------------------------------------------
.text:00001C09
.text:00001C09 $LN9:                                   ; CODE XREF: _cmdline_process_param+16F6j
.text:00001C09                                         ; DATA XREF: .text:$LN460o
.text:00001C09                 push    1               ; jumptable 00001B52 case 39
.text:00001C0B                 push    3Ch ; '<'
.text:00001C0D                 mov     edx, [ebp+arg_C]
.text:00001C10                 push    edx
.text:00001C11                 call    _conf_set_int
.text:00001C16                 add     esp, 0Ch
.text:00001C19                 jmp     short loc_1C53
.text:00001C1B ; ---------------------------------------------------------------------------
.text:00001C1B
.text:00001C1B $LN8:                                   ; CODE XREF: _cmdline_process_param+16F6j
.text:00001C1B                                         ; DATA XREF: .text:$LN460o
.text:00001C1B                 push    2               ; jumptable 00001B52 case 33
.text:00001C1D                 push    3Ch ; '<'
.text:00001C1F                 mov     eax, [ebp+arg_C]
.text:00001C22                 push    eax
.text:00001C23                 call    _conf_set_int
.text:00001C28                 add     esp, 0Ch
.text:00001C2B                 jmp     short loc_1C53
.text:00001C2D ; ---------------------------------------------------------------------------
.text:00001C2D
.text:00001C2D $LN7:                                   ; CODE XREF: _cmdline_process_param+16F6j
.text:00001C2D                                         ; DATA XREF: .text:$LN460o
.text:00001C2D                 push    3               ; jumptable 00001B52 case 19
.text:00001C2F                 push    3Ch ; '<'
.text:00001C31                 mov     ecx, [ebp+arg_C]
.text:00001C34                 push    ecx
.text:00001C35                 call    _conf_set_int
.text:00001C3A                 add     esp, 0Ch
.text:00001C3D                 jmp     short loc_1C53
.text:00001C3F ; ---------------------------------------------------------------------------
.text:00001C3F
.text:00001C3F $LN6:                                   ; CODE XREF: _cmdline_process_param+16E6j
.text:00001C3F                                         ; _cmdline_process_param+16F6j
.text:00001C3F                                         ; DATA XREF: ...
.text:00001C3F                 mov     edx, [ebp+var_4C] ; jumptable 00001B52 default case
.text:00001C42                 movsx   eax, byte ptr [edx]
.text:00001C45                 push    eax
.text:00001C46                 push    offset $SG86142 ; "Unrecognised suboption \"-sercfg %c\""
.text:00001C4B                 call    _cmdline_error
.text:00001C50                 add     esp, 8
.text:00001C53
.text:00001C53 loc_1C53:                               ; CODE XREF: _cmdline_process_param+1716j
.text:00001C53                                         ; _cmdline_process_param+1733j ...
.text:00001C53                 jmp     short loc_1CBE
.text:00001C55 ; ---------------------------------------------------------------------------
.text:00001C55
.text:00001C55 loc_1C55:                               ; CODE XREF: _cmdline_process_param+16CAj
.text:00001C55                 cmp     [ebp+var_50], 3
.text:00001C59                 jnz     short loc_1C84
.text:00001C5B                 push    3               ; size_t
.text:00001C5D                 push    offset $SG86145 ; "1.5"
.text:00001C62                 mov     ecx, [ebp+var_4C]
.text:00001C65                 push    ecx             ; char *
.text:00001C66                 call    _strncmp
.text:00001C6B                 add     esp, 0Ch
.text:00001C6E                 test    eax, eax
.text:00001C70                 jnz     short loc_1C84
.text:00001C72                 push    3
.text:00001C74                 push    3Ah ; ':'
.text:00001C76                 mov     edx, [ebp+arg_C]
.text:00001C79                 push    edx
.text:00001C7A                 call    _conf_set_int
.text:00001C7F                 add     esp, 0Ch
.text:00001C82                 jmp     short loc_1CBE
.text:00001C84 ; ---------------------------------------------------------------------------
.text:00001C84
.text:00001C84 loc_1C84:                               ; CODE XREF: _cmdline_process_param+17FDj
.text:00001C84                                         ; _cmdline_process_param+1814j
.text:00001C84                 mov     eax, [ebp+var_4C]
.text:00001C87                 push    eax             ; char *
.text:00001C88                 call    _atoi
.text:00001C8D                 add     esp, 4
.text:00001C90                 mov     [ebp+var_5C], eax
.text:00001C93                 cmp     [ebp+var_5C], 0
.text:00001C97                 jz      short loc_1CAD
.text:00001C99                 mov     ecx, [ebp+var_5C]
.text:00001C9C                 push    ecx
.text:00001C9D                 push    38h ; '8'
.text:00001C9F                 mov     edx, [ebp+arg_C]
.text:00001CA2                 push    edx
.text:00001CA3                 call    _conf_set_int
.text:00001CA8                 add     esp, 0Ch
.text:00001CAB                 jmp     short loc_1CBE
.text:00001CAD ; ---------------------------------------------------------------------------
.text:00001CAD
.text:00001CAD loc_1CAD:                               ; CODE XREF: _cmdline_process_param+183Bj
.text:00001CAD                 mov     eax, [ebp+var_4C]
.text:00001CB0                 push    eax
.text:00001CB1                 push    offset $SG86150 ; "Unrecognised suboption \"-sercfg %s\""
.text:00001CB6                 call    _cmdline_error
.text:00001CBB                 add     esp, 8
.text:00001CBE
.text:00001CBE loc_1CBE:                               ; CODE XREF: _cmdline_process_param:loc_1C53j
.text:00001CBE                                         ; _cmdline_process_param+1826j ...
.text:00001CBE                 mov     ecx, [ebp+var_50]
.text:00001CC1                 add     ecx, [ebp+var_54]
.text:00001CC4                 add     ecx, [ebp+var_4C]
.text:00001CC7                 mov     [ebp+var_4C], ecx
.text:00001CCA                 jmp     loc_1ACC
.text:00001CCF ; ---------------------------------------------------------------------------
.text:00001CCF
.text:00001CCF loc_1CCF:                               ; CODE XREF: _cmdline_process_param+15CEj
.text:00001CCF                                         ; _cmdline_process_param+1678j
.text:00001CCF                 mov     eax, [ebp+var_4]
.text:00001CD2
.text:00001CD2 loc_1CD2:                               ; CODE XREF: _cmdline_process_param+46j
.text:00001CD2                                         ; _cmdline_process_param+5Dj ...
.text:00001CD2                 pop     edi
.text:00001CD3                 add     esp, 60h
.text:00001CD6                 cmp     ebp, esp
.text:00001CD8                 call    __RTC_CheckEsp
.text:00001CDD                 mov     esp, ebp
.text:00001CDF                 pop     ebp
.text:00001CE0                 retn
.text:00001CE0 _cmdline_process_param endp
.text:00001CE0
.text:00001CE0 ; ---------------------------------------------------------------------------
.text:00001CE1                 align 4
.text:00001CE4 $LN460          dd offset $LN17, offset $LN16, offset $LN7, offset $LN10
.text:00001CE4                                         ; DATA XREF: _cmdline_process_param+16F6r
.text:00001CE4                 dd offset $LN8, offset $LN9, offset $LN13, offset $LN12 ; jump table for switch statement
.text:00001CE4                 dd offset $LN15, offset $LN14, offset $LN11, offset $LN6
.text:00001D14 $LN459          db      0,     0,   0Bh,   0Bh
.text:00001D14                                         ; DATA XREF: _cmdline_process_param+16EFr
.text:00001D14                 db      1,     1,     1,     1 ; indirect table for switch statement
.text:00001D14                 db      1,   0Bh,   0Bh,   0Bh
.text:00001D14                 db    0Bh,   0Bh,   0Bh,   0Bh
.text:00001D14                 db    0Bh,   0Bh,   0Bh,     2
.text:00001D14                 db    0Bh,   0Bh,   0Bh,   0Bh
.text:00001D14                 db    0Bh,   0Bh,   0Bh,   0Bh
.text:00001D14                 db    0Bh,     3,   0Bh,   0Bh
.text:00001D14                 db    0Bh,     4,   0Bh,   0Bh
.text:00001D14                 db    0Bh,   0Bh,   0Bh,     5
.text:00001D14                 db    0Bh,   0Bh,   0Bh,   0Bh
.text:00001D14                 db    0Bh,   0Bh,   0Bh,   0Bh
.text:00001D14                 db    0Bh,   0Bh,   0Bh,   0Bh
.text:00001D14                 db      6,   0Bh,   0Bh,   0Bh
.text:00001D14                 db    0Bh,   0Bh,   0Bh,   0Bh
.text:00001D14                 db      7,     8,     9,   0Bh
.text:00001D14                 db    0Bh,   0Bh,   0Ah
.text:00001D57                 db 5 dup(0CCh)
.text:00001D5C
.text:00001D5C ; =============== S U B R O U T I N E =======================================
.text:00001D5C
.text:00001D5C ; Attributes: bp-based frame
.text:00001D5C
.text:00001D5C _cmdline_save_param proc near           ; CODE XREF: _cmdline_process_param+10Bp
.text:00001D5C                                         ; _cmdline_process_param+1D7p ...
.text:00001D5C
.text:00001D5C arg_0           = dword ptr  8
.text:00001D5C arg_4           = dword ptr  0Ch
.text:00001D5C arg_8           = dword ptr  10h
.text:00001D5C
.text:00001D5C                 push    ebp
.text:00001D5D                 mov     ebp, esp
.text:00001D5F                 mov     eax, [ebp+arg_8]
.text:00001D62                 imul    eax, 0Ch
.text:00001D65                 mov     ecx, [ebp+arg_8]
.text:00001D68                 imul    ecx, 0Ch
.text:00001D6B                 mov     edx, ds:dword_4[eax]
.text:00001D71                 cmp     edx, ds:dword_8[ecx]
.text:00001D77                 jl      short loc_1DC4
.text:00001D79                 mov     eax, [ebp+arg_8]
.text:00001D7C                 imul    eax, 0Ch
.text:00001D7F                 mov     ecx, ds:dword_4[eax]
.text:00001D85                 add     ecx, 20h ; ' '
.text:00001D88                 mov     edx, [ebp+arg_8]
.text:00001D8B                 imul    edx, 0Ch
.text:00001D8E                 mov     ds:dword_8[edx], ecx
.text:00001D94                 push    8
.text:00001D96                 mov     eax, [ebp+arg_8]
.text:00001D99                 imul    eax, 0Ch
.text:00001D9C                 mov     ecx, ds:dword_8[eax]
.text:00001DA2                 push    ecx
.text:00001DA3                 mov     edx, [ebp+arg_8]
.text:00001DA6                 imul    edx, 0Ch
.text:00001DA9                 mov     eax, ds:_saves[edx]
.text:00001DAF                 push    eax
.text:00001DB0                 call    _saferealloc
.text:00001DB5                 add     esp, 0Ch
.text:00001DB8                 mov     ecx, [ebp+arg_8]
.text:00001DBB                 imul    ecx, 0Ch
.text:00001DBE                 mov     ds:_saves[ecx], eax
.text:00001DC4
.text:00001DC4 loc_1DC4:                               ; CODE XREF: _cmdline_save_param+1Bj
.text:00001DC4                 mov     edx, [ebp+arg_8]
.text:00001DC7                 imul    edx, 0Ch
.text:00001DCA                 mov     eax, [ebp+arg_8]
.text:00001DCD                 imul    eax, 0Ch
.text:00001DD0                 mov     ecx, ds:dword_4[eax]
.text:00001DD6                 mov     edx, ds:_saves[edx]
.text:00001DDC                 mov     eax, [ebp+arg_0]
.text:00001DDF                 mov     [edx+ecx*8], eax
.text:00001DE2                 mov     ecx, [ebp+arg_8]
.text:00001DE5                 imul    ecx, 0Ch
.text:00001DE8                 mov     edx, [ebp+arg_8]
.text:00001DEB                 imul    edx, 0Ch
.text:00001DEE                 mov     eax, ds:dword_4[edx]
.text:00001DF4                 mov     ecx, ds:_saves[ecx]
.text:00001DFA                 mov     edx, [ebp+arg_4]
.text:00001DFD                 mov     [ecx+eax*8+4], edx
.text:00001E01                 mov     eax, [ebp+arg_8]
.text:00001E04                 imul    eax, 0Ch
.text:00001E07                 mov     ecx, ds:dword_4[eax]
.text:00001E0D                 add     ecx, 1
.text:00001E10                 mov     edx, [ebp+arg_8]
.text:00001E13                 imul    edx, 0Ch
.text:00001E16                 mov     ds:dword_4[edx], ecx
.text:00001E1C                 cmp     ebp, esp
.text:00001E1E                 call    __RTC_CheckEsp
.text:00001E23                 pop     ebp
.text:00001E24                 retn
.text:00001E24 _cmdline_save_param endp
.text:00001E24
.text:00001E24 ; ---------------------------------------------------------------------------
.text:00001E25                 db 7 dup(0CCh)
.text:00001E2C
.text:00001E2C ; =============== S U B R O U T I N E =======================================
.text:00001E2C
.text:00001E2C ; Attributes: bp-based frame
.text:00001E2C
.text:00001E2C _cmdline_check_unavailable proc near    ; CODE XREF: _cmdline_process_param+E3p
.text:00001E2C                                         ; _cmdline_process_param+1AFp ...
.text:00001E2C
.text:00001E2C arg_0           = dword ptr  8
.text:00001E2C arg_4           = dword ptr  0Ch
.text:00001E2C
.text:00001E2C                 push    ebp
.text:00001E2D                 mov     ebp, esp
.text:00001E2F                 mov     eax, ds:_cmdline_tooltype
.text:00001E34                 and     eax, [ebp+arg_0]
.text:00001E37                 jz      short loc_1E51
.text:00001E39                 mov     ecx, [ebp+arg_4]
.text:00001E3C                 push    ecx
.text:00001E3D                 push    offset $SG85596 ; "option \"%s\" not available in this too"...
.text:00001E42                 call    _cmdline_error
.text:00001E47                 add     esp, 8
.text:00001E4A                 mov     eax, 1
.text:00001E4F                 jmp     short loc_1E53
.text:00001E51 ; ---------------------------------------------------------------------------
.text:00001E51
.text:00001E51 loc_1E51:                               ; CODE XREF: _cmdline_check_unavailable+Bj
.text:00001E51                 xor     eax, eax
.text:00001E53
.text:00001E53 loc_1E53:                               ; CODE XREF: _cmdline_check_unavailable+23j
.text:00001E53                 cmp     ebp, esp
.text:00001E55                 call    __RTC_CheckEsp
.text:00001E5A                 pop     ebp
.text:00001E5B                 retn
.text:00001E5B _cmdline_check_unavailable endp
.text:00001E5B
.text:00001E5C
.text:00001E5C ; =============== S U B R O U T I N E =======================================
.text:00001E5C
.text:00001E5C ; Attributes: bp-based frame
.text:00001E5C
.text:00001E5C                 public _cmdline_run_saved
.text:00001E5C _cmdline_run_saved proc near
.text:00001E5C
.text:00001E5C var_8           = dword ptr -8
.text:00001E5C var_4           = dword ptr -4
.text:00001E5C arg_0           = dword ptr  8
.text:00001E5C
.text:00001E5C                 push    ebp
.text:00001E5D                 mov     ebp, esp
.text:00001E5F                 sub     esp, 8
.text:00001E62                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00001E69                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00001E70                 mov     [ebp+var_4], 0
.text:00001E77                 jmp     short loc_1E82
.text:00001E79 ; ---------------------------------------------------------------------------
.text:00001E79
.text:00001E79 loc_1E79:                               ; CODE XREF: _cmdline_run_saved:loc_1EE2j
.text:00001E79                 mov     eax, [ebp+var_4]
.text:00001E7C                 add     eax, 1
.text:00001E7F                 mov     [ebp+var_4], eax
.text:00001E82
.text:00001E82 loc_1E82:                               ; CODE XREF: _cmdline_run_saved+1Bj
.text:00001E82                 cmp     [ebp+var_4], 2
.text:00001E86                 jge     short loc_1EE4
.text:00001E88                 mov     [ebp+var_8], 0
.text:00001E8F                 jmp     short loc_1E9A
.text:00001E91 ; ---------------------------------------------------------------------------
.text:00001E91
.text:00001E91 loc_1E91:                               ; CODE XREF: _cmdline_run_saved+84j
.text:00001E91                 mov     ecx, [ebp+var_8]
.text:00001E94                 add     ecx, 1
.text:00001E97                 mov     [ebp+var_8], ecx
.text:00001E9A
.text:00001E9A loc_1E9A:                               ; CODE XREF: _cmdline_run_saved+33j
.text:00001E9A                 mov     edx, [ebp+var_4]
.text:00001E9D                 imul    edx, 0Ch
.text:00001EA0                 mov     eax, [ebp+var_8]
.text:00001EA3                 cmp     eax, ds:dword_4[edx]
.text:00001EA9                 jge     short loc_1EE2
.text:00001EAB                 mov     ecx, [ebp+arg_0]
.text:00001EAE                 push    ecx             ; int
.text:00001EAF                 push    0               ; int
.text:00001EB1                 mov     edx, [ebp+var_4]
.text:00001EB4                 imul    edx, 0Ch
.text:00001EB7                 mov     eax, ds:_saves[edx]
.text:00001EBD                 mov     ecx, [ebp+var_8]
.text:00001EC0                 mov     edx, [eax+ecx*8+4]
.text:00001EC4                 push    edx             ; char *
.text:00001EC5                 mov     eax, [ebp+var_4]
.text:00001EC8                 imul    eax, 0Ch
.text:00001ECB                 mov     ecx, ds:_saves[eax]
.text:00001ED1                 mov     edx, [ebp+var_8]
.text:00001ED4                 mov     eax, [ecx+edx*8]
.text:00001ED7                 push    eax             ; char *
.text:00001ED8                 call    _cmdline_process_param
.text:00001EDD                 add     esp, 10h
.text:00001EE0                 jmp     short loc_1E91
.text:00001EE2 ; ---------------------------------------------------------------------------
.text:00001EE2
.text:00001EE2 loc_1EE2:                               ; CODE XREF: _cmdline_run_saved+4Dj
.text:00001EE2                 jmp     short loc_1E79
.text:00001EE4 ; ---------------------------------------------------------------------------
.text:00001EE4
.text:00001EE4 loc_1EE4:                               ; CODE XREF: _cmdline_run_saved+2Aj
.text:00001EE4                 add     esp, 8
.text:00001EE7                 cmp     ebp, esp
.text:00001EE9                 call    __RTC_CheckEsp
.text:00001EEE                 mov     esp, ebp
.text:00001EF0                 pop     ebp
.text:00001EF1                 retn
.text:00001EF1 _cmdline_run_saved endp
.text:00001EF1
.text:00001EF1 ; ---------------------------------------------------------------------------
.text:00001EF2                 align 4
.text:00001EF2 _text           ends
.text:00001EF2
.rtc$TMZ:00001EF4 ; ===========================================================================
.rtc$TMZ:00001EF4
.rtc$TMZ:00001EF4 ; Segment type: Pure data
.rtc$TMZ:00001EF4 ; Segment permissions: Read
.rtc$TMZ:00001EF4 _rtc$TMZ        segment dword public 'DATA' use32
.rtc$TMZ:00001EF4                 assume cs:_rtc$TMZ
.rtc$TMZ:00001EF4                 ;org 1EF4h
.rtc$TMZ:00001EF4 ; COMDAT (pick any)
.rtc$TMZ:00001EF4 __RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
.rtc$TMZ:00001EF4 _rtc$TMZ        ends
.rtc$TMZ:00001EF4
.rtc$IMZ:00001EF8 ; ===========================================================================
.rtc$IMZ:00001EF8
.rtc$IMZ:00001EF8 ; Segment type: Pure data
.rtc$IMZ:00001EF8 ; Segment permissions: Read
.rtc$IMZ:00001EF8 _rtc$IMZ        segment dword public 'DATA' use32
.rtc$IMZ:00001EF8                 assume cs:_rtc$IMZ
.rtc$IMZ:00001EF8                 ;org 1EF8h
.rtc$IMZ:00001EF8 ; COMDAT (pick any)
.rtc$IMZ:00001EF8 __RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
.rtc$IMZ:00001EF8 _rtc$IMZ        ends
.rtc$IMZ:00001EF8
UNDEF:00001F00 ; ===========================================================================
UNDEF:00001F00
UNDEF:00001F00 ; Segment type: Externs
UNDEF:00001F00 ; UNDEF
UNDEF:00001F00                 extrn _safefree:near    ; CODE XREF: _cmdline_cleanup+39p
UNDEF:00001F00                                         ; _cmdline_cleanup+70p ...
UNDEF:00001F04                 extrn _smemclr:near     ; CODE XREF: _cmdline_cleanup+2Ap
UNDEF:00001F04                                         ; _cmdline_get_passwd_input+69p ...
UNDEF:00001F08 ; size_t __cdecl strlen(const char *)
UNDEF:00001F08                 extrn _strlen:near      ; CODE XREF: _cmdline_cleanup+1Ap
UNDEF:00001F08                                         ; _cmdline_get_passwd_input+5Ap ...
UNDEF:00001F0C                 extrn __RTC_CheckEsp:near ; CODE XREF: _cmdline_cleanup+AFp
UNDEF:00001F0C                                         ; _cmdline_get_passwd_input+9Bp ...
UNDEF:00001F10                 extrn __RTC_Shutdown:near
UNDEF:00001F10                                         ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
UNDEF:00001F14                 extrn __RTC_InitBase:near
UNDEF:00001F14                                         ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
UNDEF:00001F18                 extrn _prompt_set_result:near
UNDEF:00001F18                                         ; CODE XREF: _cmdline_get_passwd_input+4Bp
UNDEF:00001F1C ; int __cdecl strncmp(const char *, const char *, size_t)
UNDEF:00001F1C                 extrn _strncmp:near     ; CODE XREF: _cmdline_process_param+180Ap
UNDEF:00001F20 ; char *__cdecl strchr(const char *, int)
UNDEF:00001F20                 extrn _strchr:near      ; CODE XREF: _cmdline_process_param+1684p
UNDEF:00001F24                 extrn _filename_free:near
UNDEF:00001F24                                         ; CODE XREF: _cmdline_process_param+14A5p
UNDEF:00001F28                 extrn _conf_set_filename:near
UNDEF:00001F28                                         ; CODE XREF: _cmdline_process_param+1499p
UNDEF:00001F2C                 extrn _filename_from_str:near
UNDEF:00001F2C                                         ; CODE XREF: _cmdline_process_param+1484p
UNDEF:00001F30                 extrn _conf_get_int:near
UNDEF:00001F30                                         ; CODE XREF: _cmdline_process_param+C91p
UNDEF:00001F30                                         ; _cmdline_process_param+1650p
UNDEF:00001F34 ; int __cdecl fclose(FILE *)
UNDEF:00001F34                 extrn _fclose:near      ; CODE XREF: _cmdline_process_param+B09p
UNDEF:00001F38                 extrn _saferealloc:near ; CODE XREF: _cmdline_process_param+AE0p
UNDEF:00001F38                                         ; _cmdline_save_param+54p
UNDEF:00001F3C ; int __cdecl fgetc(FILE *)
UNDEF:00001F3C                 extrn _fgetc:near       ; CODE XREF: _cmdline_process_param+AA4p
UNDEF:00001F40 ; FILE *__cdecl fopen(const char *, const char *)
UNDEF:00001F40                 extrn _fopen:near       ; CODE XREF: _cmdline_process_param+A76p
UNDEF:00001F44 ; int __cdecl atoi(const char *)
UNDEF:00001F44                 extrn _atoi:near        ; CODE XREF: _cmdline_process_param+9A1p
UNDEF:00001F44                                         ; _cmdline_process_param+BE5p ...
UNDEF:00001F48                 extrn _dupprintf:near   ; CODE XREF: _cmdline_process_param+83Ep
UNDEF:00001F48                                         ; _cmdline_process_param+866p ...
UNDEF:00001F4C                 extrn _host_strchr:near ; CODE XREF: _cmdline_process_param+7CAp
UNDEF:00001F4C                                         ; _cmdline_process_param+7EAp ...
UNDEF:00001F50                 extrn _conf_set_str_str:near
UNDEF:00001F50                                         ; CODE XREF: _cmdline_process_param+6D5p
UNDEF:00001F50                                         ; _cmdline_process_param+892p
UNDEF:00001F54                 extrn _cmdline_error:near
UNDEF:00001F54                                         ; CODE XREF: _cmdline_process_param+6A7p
UNDEF:00001F54                                         ; _cmdline_process_param+819p ...
UNDEF:00001F58                 extrn _validate_manual_hostkey:near
UNDEF:00001F58                                         ; CODE XREF: _cmdline_process_param+692p
UNDEF:00001F5C                 extrn _flags:near       ; DATA XREF: _cmdline_process_param+49Fr
UNDEF:00001F5C                                         ; _cmdline_process_param+4A8w
UNDEF:00001F60                 extrn _conf_set_str:near
UNDEF:00001F60                                         ; CODE XREF: _cmdline_process_param+459p
UNDEF:00001F60                                         ; _cmdline_process_param+547p ...
UNDEF:00001F64                 extrn _conf_get_str:near
UNDEF:00001F64                                         ; CODE XREF: _cmdline_process_param+44Ap
UNDEF:00001F68                 extrn _conf_set_int:near
UNDEF:00001F68                                         ; CODE XREF: _cmdline_process_param+140p
UNDEF:00001F68                                         ; _cmdline_process_param+155p ...
UNDEF:00001F6C                 extrn _default_port:near
UNDEF:00001F6C                                         ; DATA XREF: _cmdline_process_param+129w
UNDEF:00001F6C                                         ; _cmdline_process_param+148r ...
UNDEF:00001F70                 extrn _default_protocol:near
UNDEF:00001F70                                         ; DATA XREF: _cmdline_process_param+11Fw
UNDEF:00001F70                                         ; _cmdline_process_param+133r ...
UNDEF:00001F74                 extrn _cmdline_session_name:near
UNDEF:00001F74                                         ; DATA XREF: _cmdline_process_param+8Cw
UNDEF:00001F78                 extrn _dupstr:near      ; CODE XREF: _cmdline_process_param+84p
UNDEF:00001F78                                         ; _cmdline_process_param+683p ...
UNDEF:00001F7C                 extrn _loaded_session:near
UNDEF:00001F7C                                         ; DATA XREF: _cmdline_process_param+76w
UNDEF:00001F80                 extrn _do_defaults:near ; CODE XREF: _cmdline_process_param+6Ep
UNDEF:00001F84 ; int __cdecl strcmp(const char *, const char *)
UNDEF:00001F84                 extrn _strcmp:near      ; CODE XREF: _cmdline_process_param+26p
UNDEF:00001F84                                         ; _cmdline_process_param+A4p ...
UNDEF:00001F84
UNDEF:00001F84
UNDEF:00001F84                 end
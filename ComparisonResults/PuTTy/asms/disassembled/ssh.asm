.data:00000000 ;
.data:00000000 ; +-------------------------------------------------------------------------+
.data:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.data:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.data:00000000 ; |                      License info: 48-3677-7074-51                      |
.data:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.data:00000000 ; +-------------------------------------------------------------------------+
.data:00000000 ;
.data:00000000 ; Input MD5   : 0F039DD8033B46515102BBDF961AFB1A
.data:00000000 ; Input CRC32 : BBB2F3FB
.data:00000000
.data:00000000 ; File Name   : C:\workspace\Putty\windows\VS2010\putty\Debug\ssh.obj
.data:00000000 ; Format      : COFF (X386MAGIC)
.data:00000000 ; includelib "uuid.lib"
.data:00000000 ; includelib "LIBCMTD"
.data:00000000 ; includelib "OLDNAMES"
.data:00000000
.data:00000000                 include uni.inc ; see unicode subdir of ida for info on unicode
.data:00000000
.data:00000000                 .686p
.data:00000000                 .mmx
.data:00000000                 .model flat
.data:00000000
.data:00000000 ; ===========================================================================
.data:00000000
.data:00000000 ; Segment type: Pure data
.data:00000000 ; Segment permissions: Read/Write
.data:00000000 ; Segment alignment 'qword' can not be represented in assembly
.data:00000000 _data           segment para public 'DATA' use32
.data:00000000                 assume cs:_data
.data:00000000 $SG87294        db 'host not allowed to connect',0
.data:00000000                                         ; DATA XREF: .rdata:00006280o
.data:0000001C $SG87295        db 'protocol error',0   ; DATA XREF: .rdata:00006284o
.data:0000001C                                         ; .rdata:000063B0o ...
.data:0000002B unk_2B          db    0                 ; DATA XREF: .data:$SG87389o
.data:0000002C $SG87296        db  6Bh ; k             ; DATA XREF: .data:$SG91611o
.data:0000002C                                         ; .data:$SG91617o ...
.data:0000002D aEyExchangeFail db 'ey exchange failed',0 ; DATA XREF: .data:$SG87396o
.data:0000002D                                         ; .data:$SG89307o ...
.data:00000040 $SG87297        db  68h ; h             ; DATA XREF: .rdata:0000628Co
.data:00000041                 db  6Fh ; o
.data:00000042                 db  73h ; s
.data:00000043                 db  74h ; t
.data:00000044 aAuthentication db ' authentication failed',0 ; DATA XREF: .data:$SG90925o
.data:00000044                                         ; .rdata:000064C4o ...
.data:0000005B unk_5B          db    0                 ; DATA XREF: .rdata:00006518o
.data:0000005C $SG87298        db 'MAC error',0        ; DATA XREF: .rdata:00006290o
.data:0000005C                                         ; .rdata:00006524o ...
.data:00000066                 align 4
.data:00000068 $SG87299        db 'compression error',0 ; DATA XREF: .rdata:00006294o
.data:0000007A                 align 4
.data:0000007C $SG87300        db 'service not available',0 ; DATA XREF: .rdata:00006298o
.data:00000092                 align 4
.data:00000094 $SG87301        db 'protocol version not supported',0
.data:00000094                                         ; DATA XREF: .rdata:0000629Co
.data:000000B3                 align 4
.data:000000B4 $SG87302        db 'host key not verifiable',0 ; DATA XREF: .rdata:000062A0o
.data:000000CC $SG87303        db 'connection lost',0  ; DATA XREF: .rdata:000062A4o
.data:000000DC $SG87304        db 'by application',0   ; DATA XREF: .rdata:000062A8o
.data:000000EB                 align 4
.data:000000EC $SG87305        db 'too many connections',0 ; DATA XREF: .rdata:000062ACo
.data:00000101                 align 4
.data:00000104 $SG87306        db 'auth cancelled by user',0 ; DATA XREF: .rdata:000062B0o
.data:0000011B                 align 4
.data:0000011C $SG87307        db 'no more auth methods available',0
.data:0000011C                                         ; DATA XREF: .rdata:000062B4o
.data:0000013B                 align 4
.data:0000013C $SG87308        db 'illegal user name',0 ; DATA XREF: .rdata:000062B8o
.data:0000014E                 align 10h
.data:00000150 $SG87317        db 'INTR',0             ; DATA XREF: .rdata:_ssh_ttymodeso
.data:00000155                 align 4
.data:00000158 $SG87318        db 'QUIT',0             ; DATA XREF: .rdata:000062C8o
.data:0000015D                 align 10h
.data:00000160 $SG87319        db 'ERASE',0            ; DATA XREF: .rdata:000062D4o
.data:00000166                 align 4
.data:00000168 $SG87320        db 'KILL',0             ; DATA XREF: .rdata:000062E0o
.data:0000016D                 align 10h
.data:00000170 $SG87321        db 'EOF',0              ; DATA XREF: .rdata:000062ECo
.data:00000174 $SG87322        db 'EOL',0              ; DATA XREF: .rdata:000062F8o
.data:00000178 $SG87323        db 'EOL2',0             ; DATA XREF: .rdata:00006304o
.data:0000017D                 align 10h
.data:00000180 $SG87324        db 'START',0            ; DATA XREF: .rdata:00006310o
.data:00000186                 align 4
.data:00000188 $SG87325        db 'STOP',0             ; DATA XREF: .rdata:0000631Co
.data:0000018D                 align 10h
.data:00000190 $SG87326        db 'SUSP',0             ; DATA XREF: .rdata:00006328o
.data:00000195                 align 4
.data:00000198 $SG87327        db 'DSUSP',0            ; DATA XREF: .rdata:00006334o
.data:0000019E                 align 10h
.data:000001A0 $SG87328        db 'REPRINT',0          ; DATA XREF: .rdata:00006340o
.data:000001A8 $SG87329        db 'WERASE',0           ; DATA XREF: .rdata:0000634Co
.data:000001AF                 align 10h
.data:000001B0 $SG87330        db 'LNEXT',0            ; DATA XREF: .rdata:00006358o
.data:000001B6                 align 4
.data:000001B8 $SG87331        db 'FLUSH',0            ; DATA XREF: .rdata:00006364o
.data:000001BE                 align 10h
.data:000001C0 $SG87332        db 'SWTCH',0            ; DATA XREF: .rdata:00006370o
.data:000001C6                 align 4
.data:000001C8 $SG87333        db 'STATUS',0           ; DATA XREF: .rdata:0000637Co
.data:000001CF                 align 10h
.data:000001D0 $SG87334        db 'DISCARD',0          ; DATA XREF: .rdata:00006388o
.data:000001D8 $SG87335        db 'IGNPAR',0           ; DATA XREF: .rdata:00006394o
.data:000001DF                 align 10h
.data:000001E0 $SG87336        db 'PARMRK',0           ; DATA XREF: .rdata:000063A0o
.data:000001E7                 align 4
.data:000001E8 $SG87337        db 'INPCK',0            ; DATA XREF: .rdata:000063ACo
.data:000001EE                 align 10h
.data:000001F0 $SG87338        db 'ISTRIP',0           ; DATA XREF: .rdata:000063B8o
.data:000001F7                 align 4
.data:000001F8 $SG87339        db 'INLCR',0            ; DATA XREF: .rdata:000063C4o
.data:000001FE                 align 10h
.data:00000200 $SG87340        db 'IGNCR',0            ; DATA XREF: .rdata:000063D0o
.data:00000206                 align 4
.data:00000208 $SG87341        db 'ICRNL',0            ; DATA XREF: .rdata:000063DCo
.data:0000020E                 align 10h
.data:00000210 $SG87342        db 'IUCLC',0            ; DATA XREF: .rdata:000063E8o
.data:00000216                 align 4
.data:00000218 $SG87343        db 'IXON',0             ; DATA XREF: .rdata:000063F4o
.data:0000021D                 align 10h
.data:00000220 $SG87344        db 'IXANY',0            ; DATA XREF: .rdata:00006400o
.data:00000226                 align 4
.data:00000228 $SG87345        db 'IXOFF',0            ; DATA XREF: .rdata:0000640Co
.data:0000022E                 align 10h
.data:00000230 $SG87346        db 'IMAXBEL',0          ; DATA XREF: .rdata:00006418o
.data:00000238 $SG87347        db 'ISIG',0             ; DATA XREF: .rdata:00006424o
.data:0000023D                 align 10h
.data:00000240 $SG87348        db 'ICANON',0           ; DATA XREF: .rdata:00006430o
.data:00000247                 align 4
.data:00000248 $SG87349        db 'XCASE',0            ; DATA XREF: .rdata:0000643Co
.data:0000024E                 align 10h
.data:00000250 $SG87350        db 'ECHO',0             ; DATA XREF: .rdata:00006448o
.data:00000255                 align 4
.data:00000258 $SG87351        db 'ECHOE',0            ; DATA XREF: .rdata:00006454o
.data:0000025E                 align 10h
.data:00000260 $SG87352        db 'ECHOK',0            ; DATA XREF: .rdata:00006460o
.data:00000266                 align 4
.data:00000268 $SG87353        db 'ECHONL',0           ; DATA XREF: .rdata:0000646Co
.data:0000026F                 align 10h
.data:00000270 $SG87354        db 'NOFLSH',0           ; DATA XREF: .rdata:00006478o
.data:00000277                 align 4
.data:00000278 $SG87355        db 'TOSTOP',0           ; DATA XREF: .rdata:00006484o
.data:0000027F                 align 10h
.data:00000280 $SG87356        db 'IEXTEN',0           ; DATA XREF: .rdata:00006490o
.data:00000287                 align 4
.data:00000288 $SG87357        db 'ECHOCTL',0          ; DATA XREF: .rdata:0000649Co
.data:00000290 $SG87358        db 'ECHOKE',0           ; DATA XREF: .rdata:000064A8o
.data:00000297                 align 4
.data:00000298 $SG87359        db 'PENDIN',0           ; DATA XREF: .rdata:000064B4o
.data:0000029F                 align 10h
.data:000002A0 $SG87360        db 'OPOST',0            ; DATA XREF: .rdata:000064C0o
.data:000002A6                 align 4
.data:000002A8 $SG87361        db 'OLCUC',0            ; DATA XREF: .rdata:000064CCo
.data:000002AE                 align 10h
.data:000002B0 $SG87362        db 'ONLCR',0            ; DATA XREF: .rdata:000064D8o
.data:000002B6                 align 4
.data:000002B8 $SG87363        db 'OCRNL',0            ; DATA XREF: .rdata:000064E4o
.data:000002BE                 align 10h
.data:000002C0 $SG87364        db 'ONOCR',0            ; DATA XREF: .rdata:000064F0o
.data:000002C6                 align 4
.data:000002C8 $SG87365        db 'ONLRET',0           ; DATA XREF: .rdata:000064FCo
.data:000002CF                 align 10h
.data:000002D0 $SG87366        db 'CS7',0              ; DATA XREF: .rdata:00006508o
.data:000002D4 $SG87367        db 'CS8',0              ; DATA XREF: .rdata:00006514o
.data:000002D8 $SG87368        db 'PARENB',0           ; DATA XREF: .rdata:00006520o
.data:000002DF                 align 10h
.data:000002E0 $SG87369        db 'PARODD',0           ; DATA XREF: .rdata:0000652Co
.data:000002E7                 align 4
.data:000002E8 ; char _SG87386[4]
.data:000002E8 $SG87386        db 'yes',0              ; DATA XREF: _ssh_tty_parse_boolean+3o
.data:000002EC ; char _SG87387[]
.data:000002EC $SG87387        dd offset loc_6E6F      ; DATA XREF: _ssh_tty_parse_boolean+18o
.data:000002F0 ; char _SG87388[]
.data:000002F0 $SG87388        db 'true',0             ; DATA XREF: _ssh_tty_parse_boolean+2Do
.data:000002F5                 align 4
.data:000002F8 ; char _SG87389[]
.data:000002F8 $SG87389        dd offset unk_2B        ; DATA XREF: _ssh_tty_parse_boolean+42o
.data:000002FC ; char _SG87393[]
.data:000002FC $SG87393        dd offset loc_6F6C+2    ; DATA XREF: _ssh_tty_parse_boolean:loc_1A3E8o
.data:00000300 ; char _SG87394[4]
.data:00000300 $SG87394        db 'off',0              ; DATA XREF: _ssh_tty_parse_boolean+75o
.data:00000304 ; char _SG87395[]
.data:00000304 $SG87395        db 'false',0            ; DATA XREF: _ssh_tty_parse_boolean+8Ao
.data:0000030A                 align 4
.data:0000030C ; char _SG87396[]
.data:0000030C $SG87396        dd offset aEyExchangeFail
.data:0000030C                                         ; DATA XREF: _ssh_tty_parse_boolean+9Fo
.data:0000030C                                         ; "ey exchange failed"
.data:00000310 $SG87403        db 'SSH1_MSG_DISCONNECT',0 ; DATA XREF: _ssh1_pkt_type+9o
.data:00000324 $SG87405        db 'SSH1_SMSG_PUBLIC_KEY',0 ; DATA XREF: _ssh1_pkt_type+19o
.data:00000339                 align 4
.data:0000033C $SG87407        db 'SSH1_CMSG_SESSION_KEY',0 ; DATA XREF: _ssh1_pkt_type+29o
.data:00000352                 align 4
.data:00000354 $SG87409        db 'SSH1_CMSG_USER',0   ; DATA XREF: _ssh1_pkt_type+39o
.data:00000363                 align 4
.data:00000364 $SG87411        db 'SSH1_CMSG_AUTH_RSA',0 ; DATA XREF: _ssh1_pkt_type+49o
.data:00000377                 align 4
.data:00000378 $SG87413        db 'SSH1_SMSG_AUTH_RSA_CHALLENGE',0
.data:00000378                                         ; DATA XREF: _ssh1_pkt_type+59o
.data:00000395                 align 4
.data:00000398 $SG87415        db 'SSH1_CMSG_AUTH_RSA_RESPONSE',0
.data:00000398                                         ; DATA XREF: _ssh1_pkt_type+69o
.data:000003B4 $SG87417        db 'SSH1_CMSG_AUTH_PASSWORD',0
.data:000003B4                                         ; DATA XREF: _ssh1_pkt_type+79o
.data:000003CC $SG87419        db 'SSH1_CMSG_REQUEST_PTY',0 ; DATA XREF: _ssh1_pkt_type+89o
.data:000003E2                 align 4
.data:000003E4 $SG87421        db 'SSH1_CMSG_WINDOW_SIZE',0 ; DATA XREF: _ssh1_pkt_type+99o
.data:000003FA                 align 4
.data:000003FC $SG87423        db 'SSH1_CMSG_EXEC_SHELL',0 ; DATA XREF: _ssh1_pkt_type+A9o
.data:00000411                 align 4
.data:00000414 $SG87425        db 'SSH1_CMSG_EXEC_CMD',0 ; DATA XREF: _ssh1_pkt_type+B9o
.data:00000427                 align 4
.data:00000428 $SG87427        db 'SSH1_SMSG_SUCCESS',0 ; DATA XREF: _ssh1_pkt_type+C9o
.data:0000043A                 align 4
.data:0000043C $SG87429        db 'SSH1_SMSG_FAILURE',0 ; DATA XREF: _ssh1_pkt_type+D9o
.data:0000044E                 align 10h
.data:00000450 $SG87431        db 'SSH1_CMSG_STDIN_DATA',0 ; DATA XREF: _ssh1_pkt_type+E9o
.data:00000465                 align 4
.data:00000468 $SG87433        db 'SSH1_SMSG_STDOUT_DATA',0 ; DATA XREF: _ssh1_pkt_type+F9o
.data:0000047E                 align 10h
.data:00000480 $SG87435        db 'SSH1_SMSG_STDERR_DATA',0 ; DATA XREF: _ssh1_pkt_type+109o
.data:00000496                 align 4
.data:00000498 $SG87437        db 'SSH1_CMSG_EOF',0    ; DATA XREF: _ssh1_pkt_type+119o
.data:000004A6                 align 4
.data:000004A8 $SG87439        db 'SSH1_SMSG_EXIT_STATUS',0 ; DATA XREF: _ssh1_pkt_type+129o
.data:000004BE                 align 10h
.data:000004C0 $SG87441        db 'SSH1_MSG_CHANNEL_OPEN_CONFIRMATION',0
.data:000004C0                                         ; DATA XREF: _ssh1_pkt_type+139o
.data:000004E3                 align 4
.data:000004E4 $SG87443        db 'SSH1_MSG_CHANNEL_OPEN_FAILURE',0
.data:000004E4                                         ; DATA XREF: _ssh1_pkt_type+149o
.data:00000502                 align 4
.data:00000504 $SG87445        db 'SSH1_MSG_CHANNEL_DATA',0 ; DATA XREF: _ssh1_pkt_type+159o
.data:0000051A                 align 4
.data:0000051C $SG87447        db 'SSH1_MSG_CHANNEL_CLOSE',0
.data:0000051C                                         ; DATA XREF: _ssh1_pkt_type+169o
.data:00000533                 align 4
.data:00000534 $SG87449        db 'SSH1_MSG_CHANNEL_CLOSE_CONFIRMATION',0
.data:00000534                                         ; DATA XREF: _ssh1_pkt_type+179o
.data:00000558 $SG87451        db 'SSH1_SMSG_X11_OPEN',0 ; DATA XREF: _ssh1_pkt_type+189o
.data:0000056B                 align 4
.data:0000056C $SG87453        db 'SSH1_CMSG_PORT_FORWARD_REQUEST',0
.data:0000056C                                         ; DATA XREF: _ssh1_pkt_type+199o
.data:0000058B                 align 4
.data:0000058C $SG87455        db 'SSH1_MSG_PORT_OPEN',0 ; DATA XREF: _ssh1_pkt_type+1A9o
.data:0000059F                 align 10h
.data:000005A0 $SG87457        db 'SSH1_CMSG_AGENT_REQUEST_FORWARDING',0
.data:000005A0                                         ; DATA XREF: _ssh1_pkt_type+1B9o
.data:000005C3                 align 4
.data:000005C4 $SG87459        db 'SSH1_SMSG_AGENT_OPEN',0 ; DATA XREF: _ssh1_pkt_type+1C9o
.data:000005D9                 align 4
.data:000005DC $SG87461        db 'SSH1_MSG_IGNORE',0  ; DATA XREF: _ssh1_pkt_type+1D9o
.data:000005EC $SG87463        db 'SSH1_CMSG_EXIT_CONFIRMATION',0
.data:000005EC                                         ; DATA XREF: _ssh1_pkt_type+1E9o
.data:00000608 $SG87465        db 'SSH1_CMSG_X11_REQUEST_FORWARDING',0
.data:00000608                                         ; DATA XREF: _ssh1_pkt_type+1F9o
.data:00000629                 align 4
.data:0000062C $SG87467        db 'SSH1_CMSG_AUTH_RHOSTS_RSA',0
.data:0000062C                                         ; DATA XREF: _ssh1_pkt_type+206o
.data:00000646                 align 4
.data:00000648 $SG87469        db 'SSH1_MSG_DEBUG',0   ; DATA XREF: _ssh1_pkt_type+213o
.data:00000657                 align 4
.data:00000658 $SG87471        db 'SSH1_CMSG_REQUEST_COMPRESSION',0
.data:00000658                                         ; DATA XREF: _ssh1_pkt_type+220o
.data:00000676                 align 4
.data:00000678 $SG87473        db 'SSH1_CMSG_AUTH_TIS',0 ; DATA XREF: _ssh1_pkt_type+22Do
.data:0000068B                 align 4
.data:0000068C $SG87475        db 'SSH1_SMSG_AUTH_TIS_CHALLENGE',0
.data:0000068C                                         ; DATA XREF: _ssh1_pkt_type+23Ao
.data:000006A9                 align 4
.data:000006AC $SG87477        db 'SSH1_CMSG_AUTH_TIS_RESPONSE',0
.data:000006AC                                         ; DATA XREF: _ssh1_pkt_type+247o
.data:000006C8 $SG87479        db 'SSH1_CMSG_AUTH_CCARD',0 ; DATA XREF: _ssh1_pkt_type+254o
.data:000006DD                 align 10h
.data:000006E0 $SG87481        db 'SSH1_SMSG_AUTH_CCARD_CHALLENGE',0
.data:000006E0                                         ; DATA XREF: _ssh1_pkt_type+261o
.data:000006FF                 align 10h
.data:00000700 $SG87483        db 'SSH1_CMSG_AUTH_CCARD_RESPONSE',0
.data:00000700                                         ; DATA XREF: _ssh1_pkt_type+26Eo
.data:0000071E                 align 10h
.data:00000720 $SG87484        db 'unknown',0          ; DATA XREF: _ssh1_pkt_type:loc_801Do
.data:00000728 $SG87494        db 'SSH2_MSG_USERAUTH_GSSAPI_RESPONSE',0
.data:00000728                                         ; DATA XREF: _ssh2_pkt_type+Fo
.data:0000074A                 align 4
.data:0000074C $SG87496        db 'SSH2_MSG_USERAUTH_GSSAPI_TOKEN',0
.data:0000074C                                         ; DATA XREF: _ssh2_pkt_type+25o
.data:0000076B                 align 4
.data:0000076C $SG87498        db 'SSH2_MSG_USERAUTH_GSSAPI_EXCHANGE_COMPLETE',0
.data:0000076C                                         ; DATA XREF: _ssh2_pkt_type+3Bo
.data:00000797                 align 4
.data:00000798 $SG87500        db 'SSH2_MSG_USERAUTH_GSSAPI_ERROR',0
.data:00000798                                         ; DATA XREF: _ssh2_pkt_type+51o
.data:000007B7                 align 4
.data:000007B8 $SG87502        db 'SSH2_MSG_USERAUTH_GSSAPI_ERRTOK',0
.data:000007B8                                         ; DATA XREF: _ssh2_pkt_type+67o
.data:000007D8 $SG87504        db 'SSH2_MSG_USERAUTH_GSSAPI_MIC',0
.data:000007D8                                         ; DATA XREF: _ssh2_pkt_type+7Do
.data:000007F5                 align 4
.data:000007F8 $SG87506        db 'SSH2_MSG_DISCONNECT',0 ; DATA XREF: _ssh2_pkt_type+8Do
.data:0000080C $SG87508        db 'SSH2_MSG_IGNORE',0  ; DATA XREF: _ssh2_pkt_type+9Do
.data:0000081C $SG87510        db 'SSH2_MSG_UNIMPLEMENTED',0 ; DATA XREF: _ssh2_pkt_type+ADo
.data:00000833                 align 4
.data:00000834 $SG87512        db 'SSH2_MSG_DEBUG',0   ; DATA XREF: _ssh2_pkt_type+BDo
.data:00000843                 align 4
.data:00000844 $SG87514        db 'SSH2_MSG_SERVICE_REQUEST',0
.data:00000844                                         ; DATA XREF: _ssh2_pkt_type+CDo
.data:0000085D                 align 10h
.data:00000860 $SG87516        db 'SSH2_MSG_SERVICE_ACCEPT',0
.data:00000860                                         ; DATA XREF: _ssh2_pkt_type+DDo
.data:00000878 $SG87518        db 'SSH2_MSG_KEXINIT',0 ; DATA XREF: _ssh2_pkt_type+EDo
.data:00000889                 align 4
.data:0000088C $SG87520        db 'SSH2_MSG_NEWKEYS',0 ; DATA XREF: _ssh2_pkt_type+FDo
.data:0000089D                 align 10h
.data:000008A0 $SG87522        db 'SSH2_MSG_KEXDH_INIT',0 ; DATA XREF: _ssh2_pkt_type+113o
.data:000008B4 $SG87524        db 'SSH2_MSG_KEXDH_REPLY',0 ; DATA XREF: _ssh2_pkt_type+129o
.data:000008C9                 align 4
.data:000008CC $SG87526        db 'SSH2_MSG_KEX_DH_GEX_REQUEST',0
.data:000008CC                                         ; DATA XREF: _ssh2_pkt_type+13Fo
.data:000008E8 $SG87528        db 'SSH2_MSG_KEX_DH_GEX_GROUP',0
.data:000008E8                                         ; DATA XREF: _ssh2_pkt_type+155o
.data:00000902                 align 4
.data:00000904 $SG87530        db 'SSH2_MSG_KEX_DH_GEX_INIT',0
.data:00000904                                         ; DATA XREF: _ssh2_pkt_type+16Bo
.data:0000091D                 align 10h
.data:00000920 $SG87532        db 'SSH2_MSG_KEX_DH_GEX_REPLY',0
.data:00000920                                         ; DATA XREF: _ssh2_pkt_type+181o
.data:0000093A                 align 4
.data:0000093C $SG87534        db 'SSH2_MSG_KEXRSA_PUBKEY',0
.data:0000093C                                         ; DATA XREF: _ssh2_pkt_type+197o
.data:00000953                 align 4
.data:00000954 $SG87536        db 'SSH2_MSG_KEXRSA_SECRET',0
.data:00000954                                         ; DATA XREF: _ssh2_pkt_type+1ADo
.data:0000096B                 align 4
.data:0000096C $SG87538        db 'SSH2_MSG_KEXRSA_DONE',0 ; DATA XREF: _ssh2_pkt_type+1C3o
.data:00000981                 align 4
.data:00000984 $SG87540        db 'SSH2_MSG_USERAUTH_REQUEST',0
.data:00000984                                         ; DATA XREF: _ssh2_pkt_type+1D3o
.data:0000099E                 align 10h
.data:000009A0 $SG87542        db 'SSH2_MSG_USERAUTH_FAILURE',0
.data:000009A0                                         ; DATA XREF: _ssh2_pkt_type+1E3o
.data:000009BA                 align 4
.data:000009BC $SG87544        db 'SSH2_MSG_USERAUTH_SUCCESS',0
.data:000009BC                                         ; DATA XREF: _ssh2_pkt_type+1F3o
.data:000009D6                 align 4
.data:000009D8 $SG87546        db 'SSH2_MSG_USERAUTH_BANNER',0
.data:000009D8                                         ; DATA XREF: _ssh2_pkt_type+203o
.data:000009F1                 align 4
.data:000009F4 $SG87548        db 'SSH2_MSG_USERAUTH_PK_OK',0
.data:000009F4                                         ; DATA XREF: _ssh2_pkt_type+219o
.data:00000A0C $SG87550        db 'SSH2_MSG_USERAUTH_PASSWD_CHANGEREQ',0
.data:00000A0C                                         ; DATA XREF: _ssh2_pkt_type+22Fo
.data:00000A0C                                         ; .data:$SG89424o ...
.data:00000A2F                 align 10h
.data:00000A30 $SG87552        db 'SSH2_MSG_USERAUTH_INFO_REQUEST',0
.data:00000A30                                         ; DATA XREF: _ssh2_pkt_type+245o
.data:00000A4F                 align 10h
.data:00000A50 $SG87554        db 'SSH2_MSG_USERAUTH_INFO_RESPONSE',0
.data:00000A50                                         ; DATA XREF: _ssh2_pkt_type+25Bo
.data:00000A70 $SG87556        db 'SSH2_MSG_GLOBAL_REQUEST',0
.data:00000A70                                         ; DATA XREF: _ssh2_pkt_type+26Bo
.data:00000A88 $SG87558        db 'SSH2_MSG_REQUEST_SUCCESS',0
.data:00000A88                                         ; DATA XREF: _ssh2_pkt_type+27Bo
.data:00000AA1                 align 4
.data:00000AA4 $SG87560        db 'SSH2_MSG_REQUEST_FAILURE',0
.data:00000AA4                                         ; DATA XREF: _ssh2_pkt_type+28Bo
.data:00000ABD                 align 10h
.data:00000AC0 $SG87562        db 'SSH2_MSG_CHANNEL_OPEN',0 ; DATA XREF: _ssh2_pkt_type+29Bo
.data:00000AD6                 align 4
.data:00000AD8 $SG87564        db 'SSH2_MSG_CHANNEL_OPEN_CONFIRMATION',0
.data:00000AD8                                         ; DATA XREF: _ssh2_pkt_type+2ABo
.data:00000AFB                 align 4
.data:00000AFC $SG87566        db 'SSH2_MSG_CHANNEL_OPEN_FAILURE',0
.data:00000AFC                                         ; DATA XREF: _ssh2_pkt_type+2B8o
.data:00000B1A                 align 4
.data:00000B1C $SG87568        db 'SSH2_MSG_CHANNEL_WINDOW_ADJUST',0
.data:00000B1C                                         ; DATA XREF: _ssh2_pkt_type+2C5o
.data:00000B3B                 align 4
.data:00000B3C $SG87570        db 'SSH2_MSG_CHANNEL_DATA',0 ; DATA XREF: _ssh2_pkt_type+2D2o
.data:00000B52                 align 4
.data:00000B54 $SG87572        db 'SSH2_MSG_CHANNEL_EXTENDED_DATA',0
.data:00000B54                                         ; DATA XREF: _ssh2_pkt_type+2DFo
.data:00000B73                 align 4
.data:00000B74 $SG87574        db 'SSH2_MSG_CHANNEL_EOF',0 ; DATA XREF: _ssh2_pkt_type+2ECo
.data:00000B89                 align 4
.data:00000B8C $SG87576        db 'SSH2_MSG_CHANNEL_CLOSE',0
.data:00000B8C                                         ; DATA XREF: _ssh2_pkt_type+2F9o
.data:00000BA3                 align 4
.data:00000BA4 $SG87578        db 'SSH2_MSG_CHANNEL_REQUEST',0
.data:00000BA4                                         ; DATA XREF: _ssh2_pkt_type+306o
.data:00000BBD                 align 10h
.data:00000BC0 $SG87580        db 'SSH2_MSG_CHANNEL_SUCCESS',0
.data:00000BC0                                         ; DATA XREF: _ssh2_pkt_type+313o
.data:00000BD9                 align 4
.data:00000BDC $SG87582        db 'SSH2_MSG_CHANNEL_FAILURE',0
.data:00000BDC                                         ; DATA XREF: _ssh2_pkt_type+320o
.data:00000BF5                 align 4
.data:00000BF8 $SG87583        db 'unknown',0          ; DATA XREF: _ssh2_pkt_type:loc_936Fo
.data:00000C00 _hostkey_algs   dd offset _ssh_rsa      ; DATA XREF: _do_ssh2_transport+6E8r
.data:00000C00                                         ; _do_ssh2_transport+D92r ...
.data:00000C04                 dd offset _ssh_dss
.data:00000C08 _macs           dd offset _ssh_hmac_sha256
.data:00000C08                                         ; DATA XREF: _do_ssh2_transport+24Co
.data:00000C0C                 dd offset _ssh_hmac_sha1
.data:00000C10                 dd offset _ssh_hmac_sha1_96
.data:00000C14                 dd offset _ssh_hmac_md5
.data:00000C18 _buggymacs      dd offset _ssh_hmac_sha1_buggy
.data:00000C18                                         ; DATA XREF: _do_ssh2_transport+236o
.data:00000C1C                 dd offset _ssh_hmac_sha1_96_buggy
.data:00000C20                 dd offset _ssh_hmac_md5
.data:00000C24 $SG87710        db  6Eh ; n             ; DATA XREF: .rdata:_ssh_comp_noneo
.data:00000C25                 db  6Fh ; o
.data:00000C26                 db  6Eh ; n
.data:00000C27                 db  65h ; e
.data:00000C28 dword_C28       dd 0                    ; DATA XREF: _do_ssh2_transport+1263r
.data:00000C28                                         ; _do_ssh2_transport+1362r
.data:00000C2C _compressions   dd offset _ssh_zlib     ; DATA XREF: _do_ssh2_transport+998r
.data:00000C30                 dd offset _ssh_comp_none
.data:00000C34 $SG88133        dd offset loc_7323+2    ; DATA XREF: _bomb_out+2Bo
.data:00000C38 ; wchar_t _SG88263
.data:00000C38 $SG88263:                               ; DATA XREF: _alloc_channel_id+CDo
.data:00000C38                 unicode 0, <..\..\..\ssh.c>,0
.data:00000C56                 align 4
.data:00000C58 ; wchar_t _SG88264
.data:00000C58 $SG88264:                               ; DATA XREF: _alloc_channel_id+D2o
.data:00000C58                 unicode 0, <NULL == find234(ssh->
.data:00000C58                 dw 3Eh
.data:00000C58                 unicode 0, <channels, &i, ssh_channelfind)>,0
.data:00000CC0 $SG88380        db 'Extremely large packet length from server suggests data stream co'
.data:00000CC0                                         ; DATA XREF: _ssh1_rdpkt+156o
.data:00000CC0                 db 'rruption',0
.data:00000D0A                 align 4
.data:00000D0C $SG88401        db 'Network attack (CRC compensation) detected!',0
.data:00000D0C                                         ; DATA XREF: _ssh1_rdpkt+2BAo
.data:00000D38 $SG88416        db 'Incorrect CRC received on packet',0
.data:00000D38                                         ; DATA XREF: _ssh1_rdpkt+3C4o
.data:00000D59                 align 4
.data:00000D5C $SG88425        db 'Zlib decompression encountered invalid data',0
.data:00000D5C                                         ; DATA XREF: _ssh1_rdpkt+461o
.data:00000D88 $SG88466        db 'password',0         ; DATA XREF: _ssh2_log_outgoing_packet+158o
.data:00000D91                 align 4
.data:00000D94 $SG88478        db 'x11-req',0          ; DATA XREF: _ssh2_log_outgoing_packet+32Fo
.data:00000D9C $SG88541        db 'No valid incoming packet found',0
.data:00000D9C                                         ; DATA XREF: _ssh2_rdpkt+3EEo
.data:00000DBB                 align 4
.data:00000DBC $SG88574        db 'Incoming packet was garbled on decryption',0
.data:00000DBC                                         ; DATA XREF: _ssh2_rdpkt:loc_1C746o
.data:00000DE6                 align 4
.data:00000DE8 $SG88595        db 'Incorrect MAC received on packet',0
.data:00000DE8                                         ; DATA XREF: _ssh2_rdpkt+752o
.data:00000E09                 align 4
.data:00000E0C $SG88602        db 'Invalid padding length on received packet',0
.data:00000E0C                                         ; DATA XREF: _ssh2_rdpkt:loc_1C943o
.data:00000E36                 align 4
.data:00000E38 ; wchar_t _SG88608
.data:00000E38 $SG88608:                               ; DATA XREF: _ssh2_rdpkt+86Eo
.data:00000E38                 unicode 0, <..\..\..\ssh.c>,0
.data:00000E56                 align 4
.data:00000E58 ; wchar_t _SG88609
.data:00000E58 $SG88609:                               ; DATA XREF: _ssh2_rdpkt+873o
.data:00000E58                 unicode 0, <st->
.data:00000E58                 dw 3Eh
.data:00000E58                 unicode 0, <pktin->
.data:00000E58                 dw 3Eh
.data:00000E58                 unicode 0, <length >
.data:00000E58                 dw 3Eh
.data:00000E58                 unicode 0, <= 0>,0
.data:00000E86                 align 4
.data:00000E88 ; wchar_t _SG88618
.data:00000E88 $SG88618:                               ; DATA XREF: _ssh2_rdpkt+9A5o
.data:00000E88                 unicode 0, <..\..\..\ssh.c>,0
.data:00000EA6                 align 4
.data:00000EA8 ; wchar_t _SG88619
.data:00000EA8 $SG88619:                               ; DATA XREF: _ssh2_rdpkt+9AAo
.data:00000EA8                 unicode 0, <st->
.data:00000EA8                 dw 3Eh
.data:00000EA8                 unicode 0, <pktin->
.data:00000EA8                 dw 3Eh
.data:00000EA8                 unicode 0, <length >
.data:00000EA8                 dw 3Eh
.data:00000EA8                 unicode 0, <= 0>,0
.data:00000ED6                 align 4
.data:00000ED8 $SG88657        db 'Invalid packet length received',0
.data:00000ED8                                         ; DATA XREF: _ssh2_bare_connection_rdpkt:loc_1DAA6o
.data:00000EF7                 align 4
.data:00000EF8 ; wchar_t _SG89020
.data:00000EF8 $SG89020:                               ; DATA XREF: _ssh2_pkt_construct+1BFo
.data:00000EF8                 unicode 0, <..\..\..\ssh.c>,0
.data:00000F16                 align 4
.data:00000F18 ; wchar_t _SG89021
.data:00000F18 $SG89021:                               ; DATA XREF: _ssh2_pkt_construct+1C4o
.data:00000F18                 unicode 0, <padding >
.data:00000F18                 dw 3Ch
.data:00000F18                 unicode 0, <= 255>,0
.data:00000F36                 align 4
.data:00000F38 $SG89049        db 'too much data sent',0
.data:00000F38                                         ; DATA XREF: _ssh2_pkt_send_noqueue+EAo
.data:00000F4B                 align 4
.data:00000F4C ; wchar_t _SG89072
.data:00000F4C $SG89072:                               ; DATA XREF: _ssh2_pkt_queue+14o
.data:00000F4C                 unicode 0, <..\..\..\ssh.c>,0
.data:00000F6A                 align 4
.data:00000F6C ; wchar_t _SG89073
.data:00000F6C $SG89073:                               ; DATA XREF: _ssh2_pkt_queue+19o
.data:00000F6C                 unicode 0, <ssh->
.data:00000F6C                 dw 3Eh
.data:00000F6C                 unicode 0, <queueing>,0
.data:00000F88 $SG89101        db 'too much data sent',0 ; DATA XREF: _ssh_pkt_defersend+D9o
.data:00000F9B                 align 4
.data:00000F9C ; wchar_t _SG89125
.data:00000F9C $SG89125:                               ; DATA XREF: _ssh2_pkt_queuesend+1Co
.data:00000F9C                 unicode 0, <..\..\..\ssh.c>,0
.data:00000FBA                 align 4
.data:00000FBC ; wchar_t _SG89126
.data:00000FBC $SG89126:                               ; DATA XREF: _ssh2_pkt_queuesend+21o
.data:00000FBC                 unicode 0, <!ssh->
.data:00000FBC                 dw 3Eh
.data:00000FBC                 unicode 0, <queueing>,0
.data:00000FDA                 align 4
.data:00000FDC ; wchar_t _SG89198
.data:00000FDC $SG89198:                               ; DATA XREF: _ssh1_pkt_getrsakey+64o
.data:00000FDC                 unicode 0, <..\..\..\ssh.c>,0
.data:00000FFA                 align 4
.data:00000FFC ; wchar_t _SG89199
.data:00000FFC $SG89199:                               ; DATA XREF: _ssh1_pkt_getrsakey+69o
.data:00000FFC                 unicode 0, <pkt->
.data:00000FFC                 dw 3Eh
.data:00000FFC                 unicode 0, <savedpos >
.data:00000FFC                 dw 3Ch
.data:00000FFC                 unicode 0, < pkt->
.data:00000FFC                 dw 3Eh
.data:00000FFC                 unicode 0, <length>,0
.data:00001034 $SG89247        db 'ssh-rsa',0          ; DATA XREF: _ssh2_add_sigblob+80o
.data:0000103C ; char _SG89307[]
.data:0000103C $SG89307        dd offset aEyExchangeFail ; DATA XREF: _ssh_detect_bugs+11o
.data:0000103C                                         ; "ey exchange failed"
.data:00001040 ; char _SG89309[]
.data:00001040 $SG89309        dd offset aEyExchangeFail
.data:00001040                                         ; DATA XREF: _ssh_detect_bugs:loc_1CDB3o
.data:00001040                                         ; "ey exchange failed"
.data:00001044 ; char _SG89314[]
.data:00001044 $SG89314        db '1.2.18',0           ; DATA XREF: _ssh_detect_bugs+AEo
.data:0000104B                 align 4
.data:0000104C ; char _SG89315[]
.data:0000104C $SG89315        db '1.2.19',0           ; DATA XREF: _ssh_detect_bugs+C7o
.data:00001053                 align 4
.data:00001054 ; char _SG89316[]
.data:00001054 $SG89316        db '1.2.20',0           ; DATA XREF: _ssh_detect_bugs+DCo
.data:0000105B                 align 4
.data:0000105C ; char _SG89317[]
.data:0000105C $SG89317        db '1.2.21',0           ; DATA XREF: _ssh_detect_bugs+F1o
.data:00001063                 align 4
.data:00001064 ; char _SG89318[]
.data:00001064 $SG89318        db '1.2.22',0           ; DATA XREF: _ssh_detect_bugs+106o
.data:0000106B                 align 4
.data:0000106C ; char _SG89319[]
.data:0000106C $SG89319        db 'Cisco-1.25',0       ; DATA XREF: _ssh_detect_bugs+11Bo
.data:00001077                 align 4
.data:00001078 ; char _SG89320[]
.data:00001078 $SG89320        db 'OSU_1.4alpha3',0    ; DATA XREF: _ssh_detect_bugs+130o
.data:00001086                 align 4
.data:00001088 ; char _SG89321[]
.data:00001088 $SG89321        db 'OSU_1.5alpha4',0    ; DATA XREF: _ssh_detect_bugs+145o
.data:00001096                 align 4
.data:00001098 $SG89322        db 'We believe remote version has SSH-1 ignore bug',0
.data:00001098                                         ; DATA XREF: _ssh_detect_bugs+169o
.data:000010C7                 align 4
.data:000010C8 ; char _SG89326[]
.data:000010C8 $SG89326        db 'Cisco-1.25',0       ; DATA XREF: _ssh_detect_bugs+1B7o
.data:000010D3                 align 4
.data:000010D4 ; char _SG89327[]
.data:000010D4 $SG89327        db 'OSU_1.4alpha3',0    ; DATA XREF: _ssh_detect_bugs+1CCo
.data:000010E2                 align 4
.data:000010E4 $SG89328        db 'We believe remote version needs a plain SSH-1 password',0
.data:000010E4                                         ; DATA XREF: _ssh_detect_bugs+1F0o
.data:0000111B                 align 4
.data:0000111C ; char _SG89331[]
.data:0000111C $SG89331        db 'Cisco-1.25',0       ; DATA XREF: _ssh_detect_bugs+23Eo
.data:00001127                 align 4
.data:00001128 $SG89332        db 'We believe remote version can',27h,'t handle SSH-1 RSA authenticatio'
.data:00001128                                         ; DATA XREF: _ssh_detect_bugs+262o
.data:00001128                 db 'n',0
.data:00001168 $SG89335        db '* VShell',0         ; DATA XREF: _ssh_detect_bugs+2BCo
.data:00001171                 align 4
.data:00001174 $SG89337        db '2.1.0*',0           ; DATA XREF: _ssh_detect_bugs+2D5o
.data:0000117B                 align 4
.data:0000117C $SG89338        db '2.0.*',0            ; DATA XREF: _ssh_detect_bugs+2EAo
.data:00001182                 align 4
.data:00001184 $SG89339        db '2.2.0*',0           ; DATA XREF: _ssh_detect_bugs+2FFo
.data:0000118B                 align 4
.data:0000118C $SG89340        db '2.3.0*',0           ; DATA XREF: _ssh_detect_bugs+314o
.data:00001193                 align 4
.data:00001194 $SG89341        db '2.1 *',0            ; DATA XREF: _ssh_detect_bugs+329o
.data:0000119A                 align 4
.data:0000119C $SG89342        db 'We believe remote version has SSH-2 HMAC bug',0
.data:0000119C                                         ; DATA XREF: _ssh_detect_bugs+349o
.data:000011C9                 align 4
.data:000011CC $SG89345        db '* VShell',0         ; DATA XREF: _ssh_detect_bugs+39Bo
.data:000011D5                 align 4
.data:000011D8 $SG89347        db '2.0.0*',0           ; DATA XREF: _ssh_detect_bugs+3B0o
.data:000011DF                 align 10h
.data:000011E0 $SG89348        db '2.0.10*',0          ; DATA XREF: _ssh_detect_bugs+3C5o
.data:000011E8 $SG89349        db 'We believe remote version has SSH-2 key-derivation bug',0
.data:000011E8                                         ; DATA XREF: _ssh_detect_bugs+3E5o
.data:0000121F                 align 10h
.data:00001220 $SG89353        db 'OpenSSH_2.[5-9]*',0 ; DATA XREF: _ssh_detect_bugs+437o
.data:00001231                 align 4
.data:00001234 $SG89354        db 'OpenSSH_3.[0-2]*',0 ; DATA XREF: _ssh_detect_bugs+44Co
.data:00001245                 align 4
.data:00001248 $SG89355        db 'mod_sftp/0.[0-8]*',0 ; DATA XREF: _ssh_detect_bugs+461o
.data:0000125A                 align 4
.data:0000125C $SG89356        db 'mod_sftp/0.9.[0-8]',0 ; DATA XREF: _ssh_detect_bugs+476o
.data:0000126F                 align 10h
.data:00001270 $SG89357        db 'We believe remote version has SSH-2 RSA padding bug',0
.data:00001270                                         ; DATA XREF: _ssh_detect_bugs+496o
.data:000012A4 $SG89360        db 'OpenSSH_2.[0-2]*',0 ; DATA XREF: _ssh_detect_bugs+4E8o
.data:000012B5                 align 4
.data:000012B8 $SG89361        db 'We believe remote version has SSH-2 public-key-session-ID bug',0
.data:000012B8                                         ; DATA XREF: _ssh_detect_bugs+50Bo
.data:000012F6                 align 4
.data:000012F8 $SG89365        db 'DigiSSH_2.0',0      ; DATA XREF: _ssh_detect_bugs+565o
.data:00001304 $SG89366        db 'OpenSSH_2.[0-4]*',0 ; DATA XREF: _ssh_detect_bugs+57Ao
.data:00001315                 align 4
.data:00001318 $SG89367        db 'OpenSSH_2.5.[0-3]*',0 ; DATA XREF: _ssh_detect_bugs+58Fo
.data:0000132B                 align 4
.data:0000132C $SG89368        db 'Sun_SSH_1.0',0      ; DATA XREF: _ssh_detect_bugs+5A4o
.data:00001338 $SG89369        db 'Sun_SSH_1.0.1',0    ; DATA XREF: _ssh_detect_bugs+5B9o
.data:00001346                 align 4
.data:00001348 $SG89370        db 'WeOnlyDo-*',0       ; DATA XREF: _ssh_detect_bugs+5CEo
.data:00001353                 align 4
.data:00001354 $SG89371        db 'We believe remote version has SSH-2 rekey bug',0
.data:00001354                                         ; DATA XREF: _ssh_detect_bugs+5EEo
.data:00001382                 align 4
.data:00001384 $SG89375        db '1.36_sshlib GlobalSCAPE',0
.data:00001384                                         ; DATA XREF: _ssh_detect_bugs+640o
.data:0000139C $SG89376        db '1.36 sshlib: GlobalScape',0
.data:0000139C                                         ; DATA XREF: _ssh_detect_bugs+655o
.data:000013B5                 align 4
.data:000013B8 $SG89377        db 'We believe remote version ignores SSH-2 maximum packet size',0
.data:000013B8                                         ; DATA XREF: _ssh_detect_bugs+677o
.data:000013F4 $SG89379        db 'We believe remote version has SSH-2 ignore bug',0
.data:000013F4                                         ; DATA XREF: _ssh_detect_bugs+6BBo
.data:00001423                 align 4
.data:00001424 $SG89381        db 'We believe remote version has winadj bug',0
.data:00001424                                         ; DATA XREF: _ssh_detect_bugs+6FFo
.data:0000144D                 align 10h
.data:00001450 $SG89385        db 'OpenSSH_[2-5].*',0  ; DATA XREF: _ssh_detect_bugs+751o
.data:00001460 $SG89386        db 'OpenSSH_6.[0-6]*',0 ; DATA XREF: _ssh_detect_bugs+766o
.data:00001471                 align 4
.data:00001474 $SG89387        db 'We believe remote version has SSH-2 channel request bug',0
.data:00001474                                         ; DATA XREF: _ssh_detect_bugs+789o
.data:000014AC ; wchar_t _SG89396
.data:000014AC $SG89396:                               ; DATA XREF: _ssh_fix_verstring+33o
.data:000014AC                 unicode 0, <..\..\..\ssh.c>,0
.data:000014CA                 align 4
.data:000014CC ; wchar_t _SG89397
.data:000014CC $SG89397:                               ; DATA XREF: _ssh_fix_verstring+38o
.data:000014CC                 unicode 0, <*str == >
.data:000014CC                 dw 27h
.data:000014CC                 unicode 0, <->
.data:000014CC                 dw 27h, 0
.data:000014E4 $SG89413        db '%s2.0-%s',0Dh,0Ah,0 ; DATA XREF: _ssh_send_verstring+30o
.data:000014EF                 align 10h
.data:000014F0 ; char _SG89416[]
.data:000014F0 $SG89416        db 'SSH-',0             ; DATA XREF: _ssh_send_verstring:loc_1B19Ao
.data:000014F5                 align 4
.data:000014F8 ; wchar_t _SG89417
.data:000014F8 $SG89417:                               ; DATA XREF: _ssh_send_verstring+5Co
.data:000014F8                 unicode 0, <..\..\..\ssh.c>,0
.data:00001516                 align 4
.data:00001518 ; wchar_t _SG89418
.data:00001518 $SG89418:                               ; DATA XREF: _ssh_send_verstring+61o
.data:00001518                 unicode 0, <!strcmp(protoname, "SSH-")>,0
.data:0000154E                 align 10h
.data:00001550 ; char _SG89419[]
.data:00001550 $SG89419        db '1.5',0              ; DATA XREF: _ssh_send_verstring:loc_1B1C6o
.data:00001554 $SG89420        db '1.5',0              ; DATA XREF: _ssh_send_verstring:loc_1B1E3o
.data:00001558 $SG89421        db 'SSH-%s-%s',0Ah,0    ; DATA XREF: _ssh_send_verstring+9Bo
.data:00001563                 align 4
.data:00001564 ; char _SG89424[]
.data:00001564 $SG89424        dd offset $SG87550+1    ; DATA XREF: _ssh_send_verstring+CFo
.data:00001564                                         ; "SH2_MSG_USERAUTH_PASSWD_CHANGEREQ"
.data:00001568 ; char _SG89427[]
.data:00001568 $SG89427        dd offset $SG87550+1    ; DATA XREF: _ssh_send_verstring+122o
.data:00001568                                         ; "SH2_MSG_USERAUTH_PASSWD_CHANGEREQ"
.data:0000156C $SG89428        db 'We claim version: %.*s',0
.data:0000156C                                         ; DATA XREF: _ssh_send_verstring+134o
.data:00001583                 align 4
.data:00001584 ; char _SG89499[]
.data:00001584 $SG89499        dd offset $SG87550+1    ; DATA XREF: _do_ssh_init+2B1o
.data:00001584                                         ; "SH2_MSG_USERAUTH_PASSWD_CHANGEREQ"
.data:00001588 $SG89500        db 'Server version: %s',0 ; DATA XREF: _do_ssh_init+2D6o
.data:0000159B                 align 4
.data:0000159C ; char _SG89501[]
.data:0000159C $SG89501        db '2.0',0              ; DATA XREF: _do_ssh_init+2FAo
.data:000015A0 ; char _SG89502[]
.data:000015A0 $SG89502        db '1.99',0             ; DATA XREF: _do_ssh_init+31Bo
.data:000015A5                 align 4
.data:000015A8 $SG89504        db 'SSH protocol version 1 required by configuration but not provided'
.data:000015A8                                         ; DATA XREF: _do_ssh_init+35Do
.data:000015A8                 db ' by server',0
.data:000015F4 ; char _SG89520[]
.data:000015F4 $SG89520        dd offset $SG87550+1    ; DATA XREF: _do_ssh_init+47Ao
.data:000015F4                                         ; "SH2_MSG_USERAUTH_PASSWD_CHANGEREQ"
.data:000015F8 $SG89509        db 'SSH protocol version 2 required by configuration but not provided'
.data:000015F8                                         ; DATA XREF: _do_ssh_init+3ADo
.data:000015F8                 db ' by server',0
.data:00001644 $SG89516        db 'Using SSH protocol version %d',0
.data:00001644                                         ; DATA XREF: _do_ssh_init+42Co
.data:00001662                 align 4
.data:00001664 ; char _SG89595[]
.data:00001664 $SG89595        dd offset $SG87550+1    ; DATA XREF: _do_ssh_connection_init+2AEo
.data:00001664                                         ; "SH2_MSG_USERAUTH_PASSWD_CHANGEREQ"
.data:00001668 $SG89596        db 'Server version: %s',0
.data:00001668                                         ; DATA XREF: _do_ssh_connection_init+2D3o
.data:0000167B                 align 4
.data:0000167C ; char _SG89598[]
.data:0000167C $SG89598        db '2.0',0              ; DATA XREF: _do_ssh_connection_init+2F7o
.data:00001680 $SG89599        db 'Server announces compatibility with SSH-1 in bare ssh-connection '
.data:00001680                                         ; DATA XREF: _do_ssh_connection_init+30Fo
.data:00001680                 db 'protocol',0
.data:000016CA                 align 4
.data:000016CC $SG89604        db 'Bare ssh-connection protocol cannot be run in SSH-1-only mode',0
.data:000016CC                                         ; DATA XREF: _do_ssh_connection_init+355o
.data:0000170A                 align 4
.data:0000170C $SG89608        db 'Using bare ssh-connection protocol',0
.data:0000170C                                         ; DATA XREF: _do_ssh_connection_init+390o
.data:0000172F                 align 10h
.data:00001730 $SG89753        db 'Connecting to %s port %d',0
.data:00001730                                         ; DATA XREF: _ssh_socket_log+76o
.data:00001749                 align 4
.data:0000174C $SG89755        db 'Connecting to %s',0 ; DATA XREF: _ssh_socket_log+92o
.data:0000175D                 align 10h
.data:00001760 $SG89757        db 'Failed to connect to %s: %s',0
.data:00001760                                         ; DATA XREF: _ssh_socket_log+B2o
.data:0000177C $SG89771        db 'Could not set up connection sharing: %s',0
.data:0000177C                                         ; DATA XREF: _ssh_connshare_log+13o
.data:000017A4 $SG89774        db 'Could not set up connection sharing as downstream: %s',0
.data:000017A4                                         ; DATA XREF: _ssh_connshare_log+30o
.data:000017DA                 align 4
.data:000017DC $SG89776        db 'Could not set up connection sharing as upstream: %s',0
.data:000017DC                                         ; DATA XREF: _ssh_connshare_log+4Bo
.data:00001810 $SG89779        db 'Using existing shared connection at %s',0
.data:00001810                                         ; DATA XREF: _ssh_connshare_log+68o
.data:00001837                 align 4
.data:00001838 ; char _SG89782[]
.data:00001838 $SG89782        db 'Reusing a shared connection to this server.',0Dh,0Ah,0
.data:00001838                                         ; DATA XREF: _ssh_connshare_log:loc_6936o
.data:00001866                 align 4
.data:00001868 $SG89785        db 'Sharing this connection at %s',0
.data:00001868                                         ; DATA XREF: _ssh_connshare_log+ABo
.data:00001886                 align 4
.data:00001888 $SG89801        db 'Server unexpectedly closed network connection',0
.data:00001888                                         ; DATA XREF: _ssh_closing+3Do
.data:000018B6                 align 4
.data:000018B8 $SG89803        db 'Server closed network connection',0
.data:000018B8                                         ; DATA XREF: _ssh_closing:loc_6B2Eo
.data:000018D9                 align 4
.data:000018DC $SG89809        dd offset loc_7323+2    ; DATA XREF: _ssh_closing+CEo
.data:000018E0 $SG89867        db ' (IPv4)',0          ; DATA XREF: _connect_to_host+1EBo
.data:000018E8 $SG89868        db ' (IPv6)',0          ; DATA XREF: _connect_to_host+1FAo
.data:000018F0 $SG89870        db 'Looking up host "%s"%s',0
.data:000018F0                                         ; DATA XREF: _connect_to_host+218o
.data:00001907                 align 4
.data:00001908 ; char _SG89880[]
.data:00001908 $SG89880        db 'SSH-',0             ; DATA XREF: _connect_to_host+35Co
.data:0000190D                 align 10h
.data:00001910 ; wchar_t _SG89891
.data:00001910 $SG89891:                               ; DATA XREF: _ssh_throttle_conn+3Do
.data:00001910                 unicode 0, <..\..\..\ssh.c>,0
.data:0000192E                 align 10h
.data:00001930 ; wchar_t _SG89892
.data:00001930 $SG89892:                               ; DATA XREF: _ssh_throttle_conn+42o
.data:00001930                 unicode 0, <ssh->
.data:00001930                 dw 3Eh
.data:00001930                 unicode 0, <conn_throttle_count >
.data:00001930                 dw 3Eh
.data:00001930                 unicode 0, <= 0>,0
.data:0000196C $SG89962        db    0                 ; DATA XREF: _ssh_agentf_callback+44o
.data:0000196D                 db    0
.data:0000196E                 db    0
.data:0000196F                 db    1
.data:00001970                 db    5
.data:00001971                 db    0
.data:00001972                 db    0
.data:00001973                 db    0
.data:00001974 $SG89982        db 'Disconnected: %s',0 ; DATA XREF: _ssh_disconnect+2Ao
.data:00001985                 align 4
.data:00001988 $SG89984        db 'Disconnected',0     ; DATA XREF: _ssh_disconnect:loc_D8E4o
.data:00001995                 align 4
.data:00001998 ; char _SG89990[]
.data:00001998 $SG89990        dd offset loc_6E60+5    ; DATA XREF: _ssh_disconnect+AFo
.data:0000199C ; wchar_t _SG90006
.data:0000199C $SG90006:                               ; DATA XREF: _verify_ssh_manual_host_key+9Ao
.data:0000199C                 unicode 0, <..\..\..\ssh.c>,0
.data:000019BA                 align 4
.data:000019BC ; wchar_t _SG90010
.data:000019BC $SG90010:                               ; DATA XREF: _verify_ssh_manual_host_key+C2o
.data:000019BC                 unicode 0, <fingerprint[2] == >
.data:000019BC                 dw 27h
.data:000019BC                 unicode 0, <:>
.data:000019BC                 dw 27h, 0
.data:000019E8 ; wchar_t _SG90007
.data:000019E8 $SG90007:                               ; DATA XREF: _verify_ssh_manual_host_key+9Fo
.data:000019E8                 unicode 0, <strlen(fingerprint) == 16*3 - 1>,0
.data:00001A28 ; wchar_t _SG90009
.data:00001A28 $SG90009:                               ; DATA XREF: _verify_ssh_manual_host_key+BDo
.data:00001A28                 unicode 0, <..\..\..\ssh.c>,0
.data:00001A46                 align 4
.data:00001A48 ; char _SG90012[]
.data:00001A48 $SG90012        db '0123456789abcdef:',0
.data:00001A48                                         ; DATA XREF: _verify_ssh_manual_host_key:loc_7447o
.data:00001A5A                 align 4
.data:00001A5C ; wchar_t _SG90013
.data:00001A5C $SG90013:                               ; DATA XREF: _verify_ssh_manual_host_key+F0o
.data:00001A5C                 unicode 0, <..\..\..\ssh.c>,0
.data:00001A7A                 align 4
.data:00001A7C $SG90098        db 'Public key packet not received',0
.data:00001A7C                                         ; DATA XREF: _do_ssh1_login+210o
.data:00001A9B                 align 4
.data:00001A9C $SG90110        db 'Failed to read SSH-1 public keys from public key packet',0
.data:00001A9C                                         ; DATA XREF: _do_ssh1_login:loc_DCC8o
.data:00001AD4 $SG90115        db 'Host key fingerprint is:',0
.data:00001AD4                                         ; DATA XREF: _do_ssh1_login:loc_DCF9o
.data:00001AED                 align 10h
.data:00001AF0 ; wchar_t _SG90014
.data:00001AF0 $SG90014:                               ; DATA XREF: _verify_ssh_manual_host_key+F5o
.data:00001AF0                 unicode 0, <fingerprint[strspn(fingerprint, "0123456789abcdef:")] == >
.data:00001AF0                 unicode 0, <0>,0
.data:00001B66                 align 4
.data:00001B68 $SG90102        db 'Received public keys',0
.data:00001B68                                         ; DATA XREF: _do_ssh1_login:loc_DC09o
.data:00001B7D                 align 10h
.data:00001B80 $SG90104        db 'SSH-1 public key packet stopped before random cookie',0
.data:00001B80                                         ; DATA XREF: _do_ssh1_login+26Fo
.data:00001BB5                 align 4
.data:00001BB8 ; char _SG90116[]
.data:00001BB8 $SG90116        db '      ',0           ; DATA XREF: _do_ssh1_login+348o
.data:00001BBF                 align 10h
.data:00001BC0 $SG90124        db 'SSH-1 public keys were badly formatted',0
.data:00001BC0                                         ; DATA XREF: _do_ssh1_login:loc_DEF5o
.data:00001BE7                 align 4
.data:00001BE8 $SG90138        db 'Host key did not appear in manually configured list',0
.data:00001BE8                                         ; DATA XREF: _do_ssh1_login+667o
.data:00001C1C $SG90144        db 'rsa',0              ; DATA XREF: _do_ssh1_login+6E4o
.data:00001C20 $SG90154        db 'Unexpected data from server while waiting for user host key respo'
.data:00001C20                                         ; DATA XREF: _do_ssh1_login+756o
.data:00001C20                 db 'nse',0
.data:00001C65                 align 4
.data:00001C68 $SG90160        db 'User aborted at host key verification',0
.data:00001C68                                         ; DATA XREF: _do_ssh1_login+7CBo
.data:00001C8E                 align 10h
.data:00001C90 $SG90174        db 'SSH-1 public key encryptions failed due to bad formatting',0
.data:00001C90                                         ; DATA XREF: _do_ssh1_login+93Co
.data:00001CCA                 align 4
.data:00001CCC $SG90178        db 'Encrypted session key',0
.data:00001CCC                                         ; DATA XREF: _do_ssh1_login:loc_E335o
.data:00001CE2                 align 4
.data:00001CE4 $SG90191        db 'AES not supported in SSH-1, skipping',0
.data:00001CE4                                         ; DATA XREF: _do_ssh1_login+A19o
.data:00001D09                 align 4
.data:00001D0C $SG90198        db '3DES',0             ; DATA XREF: _do_ssh1_login+A6Bo
.data:00001D11                 align 4
.data:00001D14 $SG90200        db 'Blowfish',0         ; DATA XREF: _do_ssh1_login+A84o
.data:00001D1D                 align 10h
.data:00001D20 $SG90202        db 'single-DES',0       ; DATA XREF: _do_ssh1_login+A9Do
.data:00001D2B                 align 4
.data:00001D2C $SG90208        db 'No supported ciphers found',0
.data:00001D2C                                         ; DATA XREF: _do_ssh1_login:loc_E4CCo
.data:00001D47                 align 4
.data:00001D48 $SG90206        db 'Server violates SSH-1 protocol by not supporting 3DES encryption',0
.data:00001D48                                         ; DATA XREF: _do_ssh1_login+AE8o
.data:00001D89                 align 4
.data:00001D8C $SG90213        db 'cipher',0           ; DATA XREF: _do_ssh1_login+B60o
.data:00001D93                 align 4
.data:00001D94 $SG90223        db 'Unexpected data from server while waiting for user response',0
.data:00001D94                                         ; DATA XREF: _do_ssh1_login+BAFo
.data:00001DD0 $SG90229        db 'User aborted at cipher warning',0
.data:00001DD0                                         ; DATA XREF: _do_ssh1_login+C24o
.data:00001DEF                 align 10h
.data:00001DF0 $SG90238        db 'Using 3DES encryption',0
.data:00001DF0                                         ; DATA XREF: _do_ssh1_login:loc_E640o
.data:00001E06                 align 4
.data:00001E08 $SG90240        db 'Using single-DES encryption',0
.data:00001E08                                         ; DATA XREF: _do_ssh1_login:loc_E659o
.data:00001E24 $SG90242        db 'Using Blowfish encryption',0
.data:00001E24                                         ; DATA XREF: _do_ssh1_login:loc_E672o
.data:00001E3E                 align 10h
.data:00001E40 $SG90243        db 'Trying to enable encryption...',0
.data:00001E40                                         ; DATA XREF: _do_ssh1_login+D2Bo
.data:00001E5F                 align 10h
.data:00001E60 $SG90244        db 'Initialised %s encryption',0
.data:00001E60                                         ; DATA XREF: _do_ssh1_login+DEEo
.data:00001E7A                 align 4
.data:00001E7C $SG90245        db 'Installing CRC compensation attack detector',0
.data:00001E7C                                         ; DATA XREF: _do_ssh1_login+E0Ao
.data:00001EA8 $SG90262        db 'Encryption not successfully enabled',0
.data:00001EA8                                         ; DATA XREF: _do_ssh1_login+F17o
.data:00001ECC $SG90266        db 'Successfully started encryption',0
.data:00001ECC                                         ; DATA XREF: _do_ssh1_login:loc_E910o
.data:00001EEC $SG90270        db 'SSH login name',0   ; DATA XREF: _do_ssh1_login+FCEo
.data:00001EFB                 align 4
.data:00001EFC $SG90271        db 'login as: ',0       ; DATA XREF: _do_ssh1_login+FE9o
.data:00001F07                 align 4
.data:00001F08 $SG90285        db 'No username provided',0 ; DATA XREF: _do_ssh1_login+10A8o
.data:00001F1D                 align 10h
.data:00001F20 $SG90290        db 'Sent username "%s"',0 ; DATA XREF: _do_ssh1_login+112Bo
.data:00001F33                 align 4
.data:00001F34 ; char _SG90293[]
.data:00001F34 $SG90293        dd offset $SG87550+1    ; DATA XREF: _do_ssh1_login+118Ao
.data:00001F34                                         ; "SH2_MSG_USERAUTH_PASSWD_CHANGEREQ"
.data:00001F38 $SG90305        db 'Reading private key file "%.150s"',0
.data:00001F38                                         ; DATA XREF: _do_ssh1_login+1278o
.data:00001F5A                 align 4
.data:00001F5C $SG90312        db 'Unable to load private key (%s)',0
.data:00001F5C                                         ; DATA XREF: _do_ssh1_login+1318o
.data:00001F7C $SG90313        db 'Unable to load private key file "%.150s" (%s)',0Dh,0Ah,0
.data:00001F7C                                         ; DATA XREF: _do_ssh1_login+1346o
.data:00001FAC $SG90317        db 'Unable to use this key file (%s)',0
.data:00001FAC                                         ; DATA XREF: _do_ssh1_login+139Do
.data:00001FCD                 align 10h
.data:00001FD0 $SG90318        db 'Unable to use key file "%.150s" (%s)',0Dh,0Ah,0
.data:00001FD0                                         ; DATA XREF: _do_ssh1_login+13D4o
.data:00001FF7                 align 4
.data:00001FF8 $SG90327        db 'Pageant is running. Requesting keys.',0
.data:00001FF8                                         ; DATA XREF: _do_ssh1_login+1492o
.data:0000201D                 align 10h
.data:00002020 $SG90341        db 'Unexpected data from server while waiting for agent response',0
.data:00002020                                         ; DATA XREF: _do_ssh1_login+152Ao
.data:0000205D                 align 10h
.data:00002060 $SG90356        db 'Pageant reported negative key count %d',0
.data:00002060                                         ; DATA XREF: _do_ssh1_login+164Co
.data:00002087                 align 4
.data:00002088 $SG90357        db 'Pageant has %d SSH-1 keys',0
.data:00002088                                         ; DATA XREF: _do_ssh1_login+1689o
.data:000020A2                 align 4
.data:000020A4 $SG90382        db 'Pageant key list packet was truncated',0
.data:000020A4                                         ; DATA XREF: _do_ssh1_login+190Do
.data:000020CA                 align 4
.data:000020CC $SG90385        db 'Pageant key #%d matches configured key file',0
.data:000020CC                                         ; DATA XREF: _do_ssh1_login+1966o
.data:000020F8 $SG90387        db 'Trying Pageant key #%d',0
.data:000020F8                                         ; DATA XREF: _do_ssh1_login+1995o
.data:0000210F                 align 10h
.data:00002110 $SG90396        db 'Key refused',0      ; DATA XREF: _do_ssh1_login+19EBo
.data:0000211C $SG90397        db 'Received RSA challenge',0
.data:0000211C                                         ; DATA XREF: _do_ssh1_login:loc_F3CFo
.data:00002133                 align 4
.data:00002134 $SG90400        db 'Server',27h,'s RSA challenge was badly formatted',0
.data:00002134                                         ; DATA XREF: _do_ssh1_login+1A4Bo
.data:0000215F                 align 10h
.data:00002160 $SG90433        db 'Unexpected data from server while waiting for agent response',0
.data:00002160                                         ; DATA XREF: _do_ssh1_login+1D48o
.data:0000219D                 align 10h
.data:000021A0 $SG90440        db 'Sending Pageant',27h,'s response',0
.data:000021A0                                         ; DATA XREF: _do_ssh1_login+1DE0o
.data:000021BB                 align 4
.data:000021BC $SG90449        db 'Pageant',27h,'s response accepted',0
.data:000021BC                                         ; DATA XREF: _do_ssh1_login+1E4Ao
.data:000021D8 ; char _SG90451[]
.data:000021D8 $SG90451        db 'Authenticated using RSA key "',0
.data:000021D8                                         ; DATA XREF: _do_ssh1_login+1E6Bo
.data:000021F6                 align 4
.data:000021F8 ; char _SG90452[]
.data:000021F8 $SG90452        db '" from agent',0Dh,0Ah,0 ; DATA XREF: _do_ssh1_login+1EA2o
.data:00002207                 align 4
.data:00002208 $SG90454        db 'Pageant',27h,'s response not accepted',0
.data:00002208                                         ; DATA XREF: _do_ssh1_login:loc_F88Ao
.data:00002228 $SG90456        db 'Pageant failed to answer challenge',0
.data:00002228                                         ; DATA XREF: _do_ssh1_login:loc_F8A3o
.data:0000224B                 align 4
.data:0000224C $SG90458        db 'No reply received from Pageant',0
.data:0000224C                                         ; DATA XREF: _do_ssh1_login:loc_F8CBo
.data:0000226B                 align 4
.data:0000226C $SG90461        db 'Configured key file not in Pageant',0
.data:0000226C                                         ; DATA XREF: _do_ssh1_login+1F96o
.data:0000228F                 align 10h
.data:00002290 $SG90463        db 'Failed to get reply from Pageant',0
.data:00002290                                         ; DATA XREF: _do_ssh1_login:loc_F977o
.data:000022B1                 align 4
.data:000022B4 ; char _SG90468[]
.data:000022B4 $SG90468        db 'Trying public key authentication.',0Dh,0Ah,0
.data:000022B4                                         ; DATA XREF: _do_ssh1_login+2002o
.data:000022D8 $SG90469        db 'Trying public key "%s"',0
.data:000022D8                                         ; DATA XREF: _do_ssh1_login+2049o
.data:000022EF                 align 10h
.data:000022F0 ; char _SG90478[]
.data:000022F0 $SG90478        db 'No passphrase required.',0Dh,0Ah,0
.data:000022F0                                         ; DATA XREF: _do_ssh1_login+209Fo
.data:0000230A                 align 4
.data:0000230C $SG90482        db 'SSH key passphrase',0 ; DATA XREF: _do_ssh1_login+20E9o
.data:0000231F                 align 10h
.data:00002320 $SG90483        db 'Passphrase for key "%.100s": ',0
.data:00002320                                         ; DATA XREF: _do_ssh1_login+210Eo
.data:0000233E                 align 10h
.data:00002340 ; char _SG90497[]
.data:00002340 $SG90497        db 'Unable to authenticate',0
.data:00002340                                         ; DATA XREF: _do_ssh1_login+21CBo
.data:00002357                 align 4
.data:00002358 ; char _SG90505[]
.data:00002358 $SG90505        db 'Couldn',27h,'t load private key from ',0
.data:00002358                                         ; DATA XREF: _do_ssh1_login+22C9o
.data:00002378 ; char _SG90506[]
.data:00002378 $SG90506        dd offset $SG90692+4    ; DATA XREF: _do_ssh1_login+22FCo
.data:00002378                                         ; "ing unpadded password"
.data:0000237C ; char _SG90507[]
.data:0000237C $SG90507        db ').',0Dh,0Ah,0       ; DATA XREF: _do_ssh1_login+2320o
.data:00002381                 align 4
.data:00002384 ; char _SG90510[]
.data:00002384 $SG90510        db 'Wrong passphrase.',0Dh,0Ah,0
.data:00002384                                         ; DATA XREF: _do_ssh1_login+2345o
.data:00002398 ; wchar_t _SG90513
.data:00002398 $SG90513:                               ; DATA XREF: _do_ssh1_login+236Bo
.data:00002398                 unicode 0, <..\..\..\ssh.c>,0
.data:000023B6                 align 4
.data:000023B8 ; wchar_t _SG90514
.data:000023B8 $SG90514:                               ; DATA XREF: _do_ssh1_login+2370o
.data:000023B8                 unicode 0, <0 && "unexpected return from loadrsakey()">,0
.data:0000240E                 align 10h
.data:00002410 ; char _SG90524[]
.data:00002410 $SG90524        db 'Server refused our public key.',0Dh,0Ah,0
.data:00002410                                         ; DATA XREF: _do_ssh1_login+23DEo
.data:00002431                 align 4
.data:00002434 $SG90526        db 'Bizarre response to offer of public key',0
.data:00002434                                         ; DATA XREF: _do_ssh1_login+23FDo
.data:0000245C $SG90536        db 'Server',27h,'s RSA challenge was badly formatted',0
.data:0000245C                                         ; DATA XREF: _do_ssh1_login+2449o
.data:00002487                 align 4
.data:00002488 ; char _SG90552[]
.data:00002488 $SG90552        db 'Failed to authenticate with our public key.',0Dh,0Ah,0
.data:00002488                                         ; DATA XREF: _do_ssh1_login+25BEo
.data:000024B6                 align 4
.data:000024B8 $SG90555        db 'Bizarre response to RSA authentication response',0
.data:000024B8                                         ; DATA XREF: _do_ssh1_login+25DFo
.data:000024E8 $SG90560        db 'Requested TIS authentication',0
.data:000024E8                                         ; DATA XREF: _do_ssh1_login+267Bo
.data:00002505                 align 4
.data:00002508 $SG90569        db 'TIS authentication declined',0
.data:00002508                                         ; DATA XREF: _do_ssh1_login+26C8o
.data:00002524 ; char _SG90571[]
.data:00002524 $SG90571        db 'TIS authentication refused.',0Dh,0Ah,0
.data:00002524                                         ; DATA XREF: _do_ssh1_login+26EAo
.data:00002542                 align 4
.data:00002544 $SG90578        db 'TIS challenge packet was badly formed',0
.data:00002544                                         ; DATA XREF: _do_ssh1_login+2735o
.data:0000256A                 align 4
.data:0000256C $SG90582        db 'Received TIS challenge',0
.data:0000256C                                         ; DATA XREF: _do_ssh1_login:loc_1012Eo
.data:00002583                 align 4
.data:00002584 $SG90583        db 'SSH TIS authentication',0
.data:00002584                                         ; DATA XREF: _do_ssh1_login+278Co
.data:0000259B                 align 4
.data:0000259C $SG90586        db '%.*s',0             ; DATA XREF: _do_ssh1_login+27E2o
.data:000025A1                 align 4
.data:000025A4 $SG90588        db '%.*s',0             ; DATA XREF: _do_ssh1_login+2805o
.data:000025A9                 align 4
.data:000025AC $SG90589        db 'Response: ',0       ; DATA XREF: _do_ssh1_login+2818o
.data:000025B7                 align 4
.data:000025B8 $SG90590        db 0Ah,0                ; DATA XREF: _do_ssh1_login+2838o
.data:000025BA                 align 4
.data:000025BC $SG90592        db 'Using TIS authentication.%s%s',0
.data:000025BC                                         ; DATA XREF: _do_ssh1_login+285Co
.data:000025DA                 align 4
.data:000025DC $SG90594        db 'Requested CryptoCard authentication',0
.data:000025DC                                         ; DATA XREF: _do_ssh1_login+28FCo
.data:00002600 $SG90603        db 'CryptoCard authentication declined',0
.data:00002600                                         ; DATA XREF: _do_ssh1_login+2949o
.data:00002623                 align 4
.data:00002624 ; char _SG90604[]
.data:00002624 $SG90604        db 'CryptoCard authentication refused.',0Dh,0Ah,0
.data:00002624                                         ; DATA XREF: _do_ssh1_login+2960o
.data:00002649                 align 4
.data:0000264C $SG90611        db 'CryptoCard challenge packet was badly formed',0
.data:0000264C                                         ; DATA XREF: _do_ssh1_login+29ABo
.data:00002679                 align 4
.data:0000267C $SG90615        db 'Received CryptoCard challenge',0
.data:0000267C                                         ; DATA XREF: _do_ssh1_login:loc_103A4o
.data:0000269A                 align 4
.data:0000269C $SG90616        db 'SSH CryptoCard authentication',0
.data:0000269C                                         ; DATA XREF: _do_ssh1_login+2A02o
.data:000026BA                 align 4
.data:000026BC $SG90619        db '%.*s',0             ; DATA XREF: _do_ssh1_login+2A68o
.data:000026C1                 align 4
.data:000026C4 $SG90621        db '%.*s',0             ; DATA XREF: _do_ssh1_login+2A8Bo
.data:000026C9                 align 4
.data:000026CC $SG90622        db 'Response: ',0       ; DATA XREF: _do_ssh1_login+2A9Eo
.data:000026D7                 align 4
.data:000026D8 $SG90623        db 0Ah,0                ; DATA XREF: _do_ssh1_login+2ABEo
.data:000026DA                 align 4
.data:000026DC $SG90625        db 'Using CryptoCard authentication.%s%s',0
.data:000026DC                                         ; DATA XREF: _do_ssh1_login+2AE2o
.data:00002701                 align 4
.data:00002704 $SG90628        db 'No supported authentication methods available',0
.data:00002704                                         ; DATA XREF: _do_ssh1_login+2B53o
.data:00002732                 align 4
.data:00002734 $SG90632        db 'SSH password',0     ; DATA XREF: _do_ssh1_login+2B93o
.data:00002741                 align 4
.data:00002744 $SG90633        db '%s@%s',27h,'s password: ',0
.data:00002744                                         ; DATA XREF: _do_ssh1_login+2BC2o
.data:00002757                 align 4
.data:00002758 ; char _SG90648[]
.data:00002758 $SG90648        db 'Unable to authenticate',0
.data:00002758                                         ; DATA XREF: _do_ssh1_login+2C7Fo
.data:0000276F                 align 10h
.data:00002770 ; wchar_t _SG90662
.data:00002770 $SG90662:                               ; DATA XREF: _do_ssh1_login+2D55o
.data:00002770                 unicode 0, <..\..\..\ssh.c>,0
.data:0000278E                 align 10h
.data:00002790 ; wchar_t _SG90663
.data:00002790 $SG90663:                               ; DATA XREF: _do_ssh1_login+2D5Ao
.data:00002790                 unicode 0, <pwlen >
.data:00002790                 dw 3Eh
.data:00002790                 unicode 0, <= bottom && pwlen >
.data:00002790                 dw 3Ch
.data:00002790                 unicode 0, <= top>,0
.data:000027D0 $SG90677        db 'Sending password with camouflage packets',0
.data:000027D0                                         ; DATA XREF: _do_ssh1_login:loc_10820o
.data:000027F9                 align 4
.data:000027FC $SG90689        db 'Sending length-padded password',0
.data:000027FC                                         ; DATA XREF: _do_ssh1_login:loc_10910o
.data:0000281B                 align 4
.data:0000281C $SG90692        db 'Sending unpadded password',0
.data:0000281C                                         ; DATA XREF: _do_ssh1_login+2FB2o
.data:0000281C                                         ; .data:$SG90506o
.data:00002836                 align 4
.data:00002838 $SG90694        db 'Sent password',0    ; DATA XREF: _do_ssh1_login:loc_109FBo
.data:00002846                 align 4
.data:00002848 ; char _SG90704[]
.data:00002848 $SG90704        db 'Access denied',0Dh,0Ah,0
.data:00002848                                         ; DATA XREF: _do_ssh1_login+308Do
.data:00002858 $SG90705        db 'Authentication refused',0
.data:00002858                                         ; DATA XREF: _do_ssh1_login:loc_10A66o
.data:0000286F                 align 10h
.data:00002870 $SG90708        db 'Strange packet received, type %d',0
.data:00002870                                         ; DATA XREF: _do_ssh1_login+30C7o
.data:00002891                 align 4
.data:00002894 $SG90713        db 'Authentication successful',0
.data:00002894                                         ; DATA XREF: _do_ssh1_login:loc_10AF2o
.data:000028AE                 align 10h
.data:000028B0 ; wchar_t _SG90720
.data:000028B0 $SG90720:                               ; DATA XREF: _ssh_channel_try_eof+2Ao
.data:000028B0                 unicode 0, <..\..\..\ssh.c>,0
.data:000028CE                 align 10h
.data:000028D0 ; wchar_t _SG90721
.data:000028D0 $SG90721:                               ; DATA XREF: _ssh_channel_try_eof+2Fo
.data:000028D0                 unicode 0, <c->
.data:000028D0                 dw 3Eh
.data:000028D0                 unicode 0, <pending_eof>,0
.data:000028EE                 align 10h
.data:000028F0 $SG90749        db 'Forwarded X11 connection terminated due to local error: %s',0
.data:000028F0                                         ; DATA XREF: _sshfwd_unclean_close+5Do
.data:0000292B                 align 4
.data:0000292C $SG90751        db 'Forwarded port closed due to local error: %s',0
.data:0000292C                                         ; DATA XREF: _sshfwd_unclean_close+83o
.data:00002959                 align 4
.data:0000295C ; wchar_t _SG90783
.data:0000295C $SG90783:                               ; DATA XREF: _ssh_queueing_handler+23o
.data:0000295C                 unicode 0, <..\..\..\ssh.c>,0
.data:0000297A                 align 4
.data:0000297C ; wchar_t _SG90784
.data:0000297C $SG90784:                               ; DATA XREF: _ssh_queueing_handler+28o
.data:0000297C                 unicode 0, <qh != NULL>,0
.data:00002992                 align 4
.data:00002994 ; wchar_t _SG90786
.data:00002994 $SG90786:                               ; DATA XREF: _ssh_queueing_handler+55o
.data:00002994                 unicode 0, <..\..\..\ssh.c>,0
.data:000029B2                 align 4
.data:000029B4 $SG90834        db 'Remote port forwarding from %s enabled',0
.data:000029B4                                         ; DATA XREF: _ssh_rportfwd_succfail+3Fo
.data:000029DB                 align 4
.data:000029DC ; wchar_t _SG90839
.data:000029DC $SG90839:                               ; DATA XREF: _ssh_rportfwd_succfail+95o
.data:000029DC                 unicode 0, <rpf == pf>,0
.data:000029F0 ; wchar_t _SG90787
.data:000029F0 $SG90787:                               ; DATA XREF: _ssh_queueing_handler+5Ao
.data:000029F0                 unicode 0, <pktin->
.data:000029F0                 dw 3Eh
.data:000029F0                 unicode 0, <type == qh->
.data:000029F0                 dw 3Eh
.data:000029F0                 unicode 0, <msg1 || pktin->
.data:000029F0                 dw 3Eh
.data:000029F0                 unicode 0, <type == qh->
.data:000029F0                 dw 3Eh
.data:000029F0                 unicode 0, <msg2>,0
.data:00002A56                 align 4
.data:00002A58 ; wchar_t _SG90790
.data:00002A58 $SG90790:                               ; DATA XREF: _ssh_queueing_handler+89o
.data:00002A58                 unicode 0, <..\..\..\ssh.c>,0
.data:00002A76                 align 4
.data:00002A78 ; wchar_t _SG90791
.data:00002A78 $SG90791:                               ; DATA XREF: _ssh_queueing_handler+8Eo
.data:00002A78                 unicode 0, <ssh->
.data:00002A78                 dw 3Eh
.data:00002A78                 unicode 0, <packet_dispatch[qh->
.data:00002A78                 dw 3Eh
.data:00002A78                 unicode 0, <msg1] == ssh_queueing_handler>,0
.data:00002AE6                 align 4
.data:00002AE8 ; wchar_t _SG90794
.data:00002AE8 $SG90794:                               ; DATA XREF: _ssh_queueing_handler+D7o
.data:00002AE8                 unicode 0, <..\..\..\ssh.c>,0
.data:00002B06                 align 4
.data:00002B08 ; wchar_t _SG90795
.data:00002B08 $SG90795:                               ; DATA XREF: _ssh_queueing_handler+DCo
.data:00002B08                 unicode 0, <ssh->
.data:00002B08                 dw 3Eh
.data:00002B08                 unicode 0, <packet_dispatch[qh->
.data:00002B08                 dw 3Eh
.data:00002B08                 unicode 0, <msg2] == ssh_queueing_handler>,0
.data:00002B76                 align 4
.data:00002B78 $SG90836        db 'Remote port forwarding from %s refused',0
.data:00002B78                                         ; DATA XREF: _ssh_rportfwd_succfail+59o
.data:00002B9F                 align 10h
.data:00002BA0 ; wchar_t _SG90838
.data:00002BA0 $SG90838:                               ; DATA XREF: _ssh_rportfwd_succfail+90o
.data:00002BA0                 unicode 0, <..\..\..\ssh.c>,0
.data:00002BBE                 align 10h
.data:00002BC0 ; wchar_t _SG90857
.data:00002BC0 $SG90857:                               ; DATA XREF: _ssh_alloc_sharing_rportfwd+78o
.data:00002BC0                 unicode 0, <..\..\..\ssh.c>,0
.data:00002BDE                 align 10h
.data:00002BE0 ; wchar_t _SG90858
.data:00002BE0 $SG90858:                               ; DATA XREF: _ssh_alloc_sharing_rportfwd+7Do
.data:00002BE0                 unicode 0, <ssh->
.data:00002BE0                 dw 3Eh
.data:00002BE0                 unicode 0, <version == 2>,0
.data:00002C04 $SG90918        db '%.*s',0             ; DATA XREF: _ssh_setup_portfwd+147o
.data:00002C09                 align 4
.data:00002C0C $SG90923        db 'Service lookup failed for source port "%s"',0
.data:00002C0C                                         ; DATA XREF: _ssh_setup_portfwd+1C6o
.data:00002C37                 align 4
.data:00002C38 ; char _SG90925[]
.data:00002C38 $SG90925        dd offset aAuthentication
.data:00002C38                                         ; DATA XREF: _ssh_setup_portfwd+1E0o
.data:00002C38                                         ; " authentication failed"
.data:00002C3C $SG90929        dd offset aEyExchangeFail+0Dh
.data:00002C3C                                         ; DATA XREF: _ssh_setup_portfwd+220o
.data:00002C3C                                         ; "ailed"
.data:00002C40 $SG90931        db '%.*s',0             ; DATA XREF: _ssh_setup_portfwd+242o
.data:00002C45                 align 4
.data:00002C48 $SG90935        db 'Service lookup failed for destination port "%s"',0
.data:00002C48                                         ; DATA XREF: _ssh_setup_portfwd+2A7o
.data:00002C78 $SG90956        dd offset aEyExchangeFail+0Dh
.data:00002C78                                         ; DATA XREF: _ssh_setup_portfwd+4A9o
.data:00002C78                                         ; "ailed"
.data:00002C7C $SG90959        db 'local',0            ; DATA XREF: _ssh_setup_portfwd+4E9o
.data:00002C82                 align 4
.data:00002C84 $SG90960        db 'remote',0           ; DATA XREF: _ssh_setup_portfwd+4FEo
.data:00002C8B                 align 4
.data:00002C8C $SG90961        db 'dynamic',0          ; DATA XREF: _ssh_setup_portfwd:loc_16F92o
.data:00002C94 $SG90962        db '%s port forwarding from %s%s%d',0
.data:00002C94                                         ; DATA XREF: _ssh_setup_portfwd+53Co
.data:00002CB3                 align 4
.data:00002CB4 $SG90965        db '%s to %s:%d',0      ; DATA XREF: _ssh_setup_portfwd+567o
.data:00002CC0 $SG90966        db 'Cancelling %s',0    ; DATA XREF: _ssh_setup_portfwd+58Do
.data:00002CCE                 align 10h
.data:00002CD0 ; char _SG90972[]
.data:00002CD0 $SG90972        db 'cancel-tcpip-forward',0
.data:00002CD0                                         ; DATA XREF: _ssh_setup_portfwd+5DEo
.data:00002CE5                 align 4
.data:00002CE8 ; char _SG90978[]
.data:00002CE8 $SG90978        db 'localhost',0        ; DATA XREF: _ssh_setup_portfwd:loc_170CBo
.data:00002CF2                 align 4
.data:00002CF4 $SG90989        dd offset $SG87295+0Dh  ; DATA XREF: _ssh_setup_portfwd+76Fo
.data:00002CF4                                         ; "r"
.data:00002CF8 $SG90991        dd offset $SG87295+0Ch  ; DATA XREF: _ssh_setup_portfwd+78Eo
.data:00002CF8                                         ; "or"
.data:00002CFC $SG90994        dd offset aEyExchangeFail+0Dh
.data:00002CFC                                         ; DATA XREF: _ssh_setup_portfwd+7CEo
.data:00002CFC                                         ; "ailed"
.data:00002D00 $SG90997        db '%s%s%s%s%d%s',0     ; DATA XREF: _ssh_setup_portfwd+82Fo
.data:00002D0D                 align 10h
.data:00002D10 $SG91001        dd offset $SG87295+0Dh  ; DATA XREF: _ssh_setup_portfwd+85Do
.data:00002D10                                         ; "r"
.data:00002D14 $SG91003        dd offset $SG87295+0Ch  ; DATA XREF: _ssh_setup_portfwd+87Co
.data:00002D14                                         ; "or"
.data:00002D18 $SG91006        db '%s:%s%s%d%s',0      ; DATA XREF: _ssh_setup_portfwd+8D6o
.data:00002D24 $SG91010        db ' failed: ',0        ; DATA XREF: _ssh_setup_portfwd+951o
.data:00002D2E                 align 10h
.data:00002D30 $SG91012        db 'IPv4 ',0            ; DATA XREF: _ssh_setup_portfwd+970o
.data:00002D36                 align 4
.data:00002D38 $SG91013        db 'IPv6 ',0            ; DATA XREF: _ssh_setup_portfwd+985o
.data:00002D3E                 align 10h
.data:00002D40 $SG91015        db 'Local %sport %s forwarding to %s%s%s',0
.data:00002D40                                         ; DATA XREF: _ssh_setup_portfwd+9C4o
.data:00002D65                 align 4
.data:00002D68 $SG91022        db ' failed: ',0        ; DATA XREF: _ssh_setup_portfwd+A4Do
.data:00002D72                 align 4
.data:00002D74 $SG91024        db 'IPv4 ',0            ; DATA XREF: _ssh_setup_portfwd+A6Co
.data:00002D7A                 align 4
.data:00002D7C $SG91025        db 'IPv6 ',0            ; DATA XREF: _ssh_setup_portfwd+A81o
.data:00002D82                 align 4
.data:00002D84 $SG91027        db 'Local %sport %s SOCKS dynamic forwarding%s%s',0
.data:00002D84                                         ; DATA XREF: _ssh_setup_portfwd+ABCo
.data:00002DB1                 align 4
.data:00002DB4 $SG91042        db 'localhost',0        ; DATA XREF: _ssh_setup_portfwd:loc_17648o
.data:00002DBE                 align 10h
.data:00002DC0 $SG91044        db 'Duplicate remote port forwarding to %s:%d',0
.data:00002DC0                                         ; DATA XREF: _ssh_setup_portfwd+C13o
.data:00002DEA                 align 4
.data:00002DEC $SG91046        db 'Requesting remote port %s forward to %s',0
.data:00002DEC                                         ; DATA XREF: _ssh_setup_portfwd+C40o
.data:00002E14 ; char _SG91051[]
.data:00002E14 $SG91051        db 'tcpip-forward',0    ; DATA XREF: _ssh_setup_portfwd+CE4o
.data:00002E22                 align 4
.data:00002E24 $SG91063        db 'Incoming terminal data packet was badly formed',0
.data:00002E24                                         ; DATA XREF: _ssh1_smsg_stdout_stderr_data+3Ao
.data:00002E53                 align 4
.data:00002E54 $SG91073        db 'Received X11 connect request',0
.data:00002E54                                         ; DATA XREF: _ssh1_smsg_x11_open+23o
.data:00002E71                 align 4
.data:00002E74 $SG91075        db 'Rejected X11 connect request',0
.data:00002E74                                         ; DATA XREF: _ssh1_smsg_x11_open+59o
.data:00002E91                 align 4
.data:00002E94 $SG91080        db 'Opened X11 forward channel',0
.data:00002E94                                         ; DATA XREF: _ssh1_smsg_x11_open+131o
.data:00002EAF                 align 10h
.data:00002EB0 $SG91107        db '%.*s',0             ; DATA XREF: _ssh1_msg_port_open+50o
.data:00002EB5                 align 4
.data:00002EB8 $SG91111        db 'Rejected remote port open request for %s:%d',0
.data:00002EB8                                         ; DATA XREF: _ssh1_msg_port_open+8Fo
.data:00002EE4 $SG91116        db 'Received remote port open request for %s:%d',0
.data:00002EE4                                         ; DATA XREF: _ssh1_msg_port_open+DAo
.data:00002F10 $SG91119        db 'Port open failed: %s',0
.data:00002F10                                         ; DATA XREF: _ssh1_msg_port_open+127o
.data:00002F25                 align 4
.data:00002F28 $SG91121        db 'Forwarded port opened successfully',0
.data:00002F28                                         ; DATA XREF: _ssh1_msg_port_open+1F0o
.data:00002F4B                 align 4
.data:00002F4C $SG91142        db 'Forwarded connection refused by server',0
.data:00002F4C                                         ; DATA XREF: _ssh1_msg_channel_open_failure+53o
.data:00002F73                 align 4
.data:00002F74 $SG91172        db 'half-open',0        ; DATA XREF: _ssh1_msg_channel_close+1E9o
.data:00002F7E                 align 10h
.data:00002F80 $SG91168        db 'Received CHANNEL_CLOSE_CONFIRMATION for channel %d for which we n'
.data:00002F80                                         ; DATA XREF: _ssh1_msg_channel_close+15Fo
.data:00002F80                 db 'ever sent CHANNEL_CLOSE',0Ah,0
.data:00002FDA                 align 4
.data:00002FDC $SG91173        db 'nonexistent',0      ; DATA XREF: _ssh1_msg_channel_close:loc_1F21Ao
.data:00002FE8 $SG91175        db '_CONFIRMATION',0    ; DATA XREF: _ssh1_msg_channel_close:loc_1F233o
.data:00002FF6                 align 4
.data:00002FF8 $SG91176        db 'Received CHANNEL_CLOSE%s for %s channel %d',0Ah,0
.data:00002FF8                                         ; DATA XREF: _ssh1_msg_channel_close+21Eo
.data:00003024 $SG91229        db 'Server sent command exit status %d',0
.data:00003024                                         ; DATA XREF: _ssh1_smsg_exit_status+22o
.data:00003047                 align 4
.data:00003048 $SG91274        db 'Requesting agent forwarding',0
.data:00003048                                         ; DATA XREF: _do_ssh1_connection+114o
.data:00003064 $SG91283        db 'Protocol confusion',0
.data:00003064                                         ; DATA XREF: _do_ssh1_connection+165o
.data:00003077                 align 4
.data:00003078 $SG91289        db 'Agent forwarding refused',0
.data:00003078                                         ; DATA XREF: _do_ssh1_connection+19Co
.data:00003091                 align 4
.data:00003094 $SG91291        db 'Agent forwarding enabled',0
.data:00003094                                         ; DATA XREF: _do_ssh1_connection:loc_1E06Do
.data:000030AD                 align 10h
.data:000030B0 $SG91294        db 'X11 forwarding not enabled: unable to initialise X display',0
.data:000030B0                                         ; DATA XREF: _do_ssh1_connection+241o
.data:000030EB                 align 4
.data:000030EC $SG91296        db 'Requesting X11 forwarding',0
.data:000030EC                                         ; DATA XREF: _do_ssh1_connection+2A5o
.data:00003106                 align 4
.data:00003108 $SG91307        db 'Protocol confusion',0
.data:00003108                                         ; DATA XREF: _do_ssh1_connection+35Eo
.data:0000311B                 align 4
.data:0000311C $SG91313        db 'X11 forwarding refused',0
.data:0000311C                                         ; DATA XREF: _do_ssh1_connection+395o
.data:00003133                 align 4
.data:00003134 $SG91315        db 'X11 forwarding enabled',0
.data:00003134                                         ; DATA XREF: _do_ssh1_connection:loc_1E266o
.data:0000314B                 align 4
.data:0000314C ; char _SG91318[]
.data:0000314C $SG91318        db '%d,%d',0            ; DATA XREF: _do_ssh1_connection+449o
.data:00003152                 align 4
.data:00003154 $SG91328        db 'Protocol confusion',0
.data:00003154                                         ; DATA XREF: _do_ssh1_connection+599o
.data:00003167                 align 4
.data:00003168 ; char _SG91334[]
.data:00003168 $SG91334        db 'Server refused to allocate pty',0Dh,0Ah,0
.data:00003168                                         ; DATA XREF: _do_ssh1_connection+5D0o
.data:00003189                 align 4
.data:0000318C $SG91336        db 'Allocated pty (ospeed %dbps, ispeed %dbps)',0
.data:0000318C                                         ; DATA XREF: _do_ssh1_connection+611o
.data:000031B7                 align 4
.data:000031B8 $SG91347        db 'Protocol confusion',0
.data:000031B8                                         ; DATA XREF: _do_ssh1_connection+6A5o
.data:000031CB                 align 4
.data:000031CC ; char _SG91353[]
.data:000031CC $SG91353        db 'Server refused to compress',0Dh,0Ah,0
.data:000031CC                                         ; DATA XREF: _do_ssh1_connection+6DCo
.data:000031E9                 align 4
.data:000031EC $SG91354        db 'Started compression',0
.data:000031EC                                         ; DATA XREF: _do_ssh1_connection:loc_1E5A5o
.data:00003200 $SG91355        db 'Initialised zlib (RFC1950) compression',0
.data:00003200                                         ; DATA XREF: _do_ssh1_connection+71Co
.data:00003227                 align 4
.data:00003228 $SG91356        db 'Initialised zlib (RFC1950) decompression',0
.data:00003228                                         ; DATA XREF: _do_ssh1_connection+741o
.data:00003251                 align 4
.data:00003254 $SG91361        db 'Started session',0  ; DATA XREF: _do_ssh1_connection:loc_1E6ADo
.data:00003264 $SG91378        db 'Strange packet received: type %d',0
.data:00003264                                         ; DATA XREF: _do_ssh1_connection+8E2o
.data:00003285                 align 4
.data:00003288 $SG91395        db 'Remote debug message: %.*s',0
.data:00003288                                         ; DATA XREF: _ssh1_msg_debug+39o
.data:000032A3                 align 4
.data:000032A4 $SG91404        db 'Server sent disconnect message:',0Ah
.data:000032A4                                         ; DATA XREF: _ssh1_msg_disconnect+39o
.data:000032A4                 db '"%.*s"',0
.data:000032CB                 align 4
.data:000032CC ; wchar_t _SG91548
.data:000032CC $SG91548:                               ; DATA XREF: _do_ssh2_transport+8Co
.data:000032CC                 unicode 0, <..\..\..\ssh.c>,0
.data:000032EA                 align 4
.data:000032EC ; wchar_t _SG91549
.data:000032EC $SG91549:                               ; DATA XREF: _do_ssh2_transport+91o
.data:000032EC                 unicode 0, <!ssh->
.data:000032EC                 dw 3Eh
.data:000032EC                 unicode 0, <bare_connection>,0
.data:00003318 ; char _SG91611[]
.data:00003318 $SG91611        dd offset $SG87296      ; DATA XREF: _do_ssh2_transport+669o
.data:0000331C ; char _SG91617[]
.data:0000331C $SG91617        dd offset $SG87296      ; DATA XREF: _do_ssh2_transport+70Bo
.data:00003320 ; wchar_t _SG91620
.data:00003320 $SG91620:                               ; DATA XREF: _do_ssh2_transport+737o
.data:00003320                 unicode 0, <..\..\..\ssh.c>,0
.data:0000333E                 align 10h
.data:00003340 ; wchar_t _SG91621
.data:00003340 $SG91621:                               ; DATA XREF: _do_ssh2_transport+73Co
.data:00003340                 unicode 0, <ssh->
.data:00003340                 dw 3Eh
.data:00003340                 unicode 0, <kex>,0
.data:00003352                 align 4
.data:00003354 ; char _SG91634[]
.data:00003354 $SG91634        dd offset $SG87296      ; DATA XREF: _do_ssh2_transport+7FBo
.data:00003358 ; char _SG91642[]
.data:00003358 $SG91642        dd offset $SG87296      ; DATA XREF: _do_ssh2_transport+8BEo
.data:0000335C ; char _SG91648[]
.data:0000335C $SG91648        dd offset $SG87296      ; DATA XREF: _do_ssh2_transport+943o
.data:00003360 ; char _SG91654[]
.data:00003360 $SG91654        dd offset $SG87296      ; DATA XREF: _do_ssh2_transport+9B0o
.data:00003364 ; char _SG91656[]
.data:00003364 $SG91656        dd offset $SG87296      ; DATA XREF: _do_ssh2_transport+9F4o
.data:00003368 $SG91673        db 'expected key exchange packet from server',0
.data:00003368                                         ; DATA XREF: _do_ssh2_transport+B08o
.data:00003391                 align 4
.data:00003394 $SG91686        db 'KEXINIT packet was incomplete',0
.data:00003394                                         ; DATA XREF: _do_ssh2_transport+BD1o
.data:000033B2                 align 4
.data:000033B4 $SG91704        db 'Couldn',27h,'t agree a key exchange algorithm (available: %.*s)',0
.data:000033B4                                         ; DATA XREF: _do_ssh2_transport+CE0o
.data:000033EE                 align 10h
.data:000033F0 $SG91709        db 'KEXINIT packet was incomplete',0
.data:000033F0                                         ; DATA XREF: _do_ssh2_transport+D43o
.data:0000340E                 align 10h
.data:00003410 $SG91718        db 'Couldn',27h,'t agree a host key algorithm (available: %.*s)',0
.data:00003410                                         ; DATA XREF: _do_ssh2_transport+DD4o
.data:00003446                 align 4
.data:00003448 $SG91723        db 'KEXINIT packet was incomplete',0
.data:00003448                                         ; DATA XREF: _do_ssh2_transport+E69o
.data:00003466                 align 4
.data:00003468 $SG91739        db 'Couldn',27h,'t agree a client-to-server cipher (available: %.*s)',0
.data:00003468                                         ; DATA XREF: _do_ssh2_transport+F52o
.data:000034A3                 align 4
.data:000034A4 $SG91744        db 'KEXINIT packet was incomplete',0
.data:000034A4                                         ; DATA XREF: _do_ssh2_transport+F98o
.data:000034C2                 align 4
.data:000034C4 $SG91760        db 'Couldn',27h,'t agree a server-to-client cipher (available: %.*s)',0
.data:000034C4                                         ; DATA XREF: _do_ssh2_transport+1081o
.data:000034FF                 align 10h
.data:00003500 $SG91765        db 'KEXINIT packet was incomplete',0
.data:00003500                                         ; DATA XREF: _do_ssh2_transport+10C7o
.data:0000351E                 align 10h
.data:00003520 $SG91774        db 'KEXINIT packet was incomplete',0
.data:00003520                                         ; DATA XREF: _do_ssh2_transport+1164o
.data:0000353E                 align 10h
.data:00003540 $SG91783        db 'KEXINIT packet was incomplete',0
.data:00003540                                         ; DATA XREF: _do_ssh2_transport+1201o
.data:0000355E                 align 10h
.data:00003560 $SG91797        db 'KEXINIT packet was incomplete',0
.data:00003560                                         ; DATA XREF: _do_ssh2_transport+1300o
.data:0000357E                 align 10h
.data:00003580 $SG91811        db 'Server supports delayed compression; will try this later',0
.data:00003580                                         ; DATA XREF: _do_ssh2_transport+13F1o
.data:000035B9                 align 4
.data:000035BC $SG91813        db 'key-exchange algorithm',0
.data:000035BC                                         ; DATA XREF: _do_ssh2_transport+158Eo
.data:000035D3                 align 4
.data:000035D4 $SG91823        db 'Unexpected data from server while waiting for user response',0
.data:000035D4                                         ; DATA XREF: _do_ssh2_transport+15D2o
.data:00003610 $SG91829        db 'User aborted at kex warning',0
.data:00003610                                         ; DATA XREF: _do_ssh2_transport+163Co
.data:0000362C $SG91834        db 'client-to-server cipher',0
.data:0000362C                                         ; DATA XREF: _do_ssh2_transport+168Do
.data:00003644 $SG91844        db 'Unexpected data from server while waiting for user response',0
.data:00003644                                         ; DATA XREF: _do_ssh2_transport+16D1o
.data:00003680 $SG91850        db 'User aborted at cipher warning',0
.data:00003680                                         ; DATA XREF: _do_ssh2_transport+173Bo
.data:0000369F                 align 10h
.data:000036A0 $SG91855        db 'server-to-client cipher',0
.data:000036A0                                         ; DATA XREF: _do_ssh2_transport+178Co
.data:000036B8 $SG91865        db 'Unexpected data from server while waiting for user response',0
.data:000036B8                                         ; DATA XREF: _do_ssh2_transport+17D0o
.data:000036F4 $SG91871        db 'User aborted at cipher warning',0
.data:000036F4                                         ; DATA XREF: _do_ssh2_transport+183Ao
.data:00003713                 align 4
.data:00003714 $SG91888        db 'Doing Diffie-Hellman group exchange',0
.data:00003714                                         ; DATA XREF: _do_ssh2_transport+1919o
.data:00003738 $SG91897        db 'expected key exchange group packet from server',0
.data:00003738                                         ; DATA XREF: _do_ssh2_transport+19C1o
.data:00003767                 align 4
.data:00003768 $SG91903        db 'unable to read mp-ints from incoming group packet',0
.data:00003768                                         ; DATA XREF: _do_ssh2_transport:loc_BADBo
.data:0000379A                 align 4
.data:0000379C $SG91908        db 'Using Diffie-Hellman with standard group "%s"',0
.data:0000379C                                         ; DATA XREF: _do_ssh2_transport+1ACDo
.data:000037CA                 align 4
.data:000037CC $SG91909        db 'Doing Diffie-Hellman key exchange with hash %s',0
.data:000037CC                                         ; DATA XREF: _do_ssh2_transport+1AEEo
.data:000037FB                 align 4
.data:000037FC $SG91918        db 'expected key exchange reply packet from server',0
.data:000037FC                                         ; DATA XREF: _do_ssh2_transport+1BB5o
.data:0000382B                 align 4
.data:0000382C $SG91923        db 'unable to parse key exchange reply packet',0
.data:0000382C                                         ; DATA XREF: _do_ssh2_transport+1C57o
.data:00003856                 align 4
.data:00003858 $SG91929        db 'key exchange reply failed validation: %s',0
.data:00003858                                         ; DATA XREF: _do_ssh2_transport+1CC3o
.data:00003881                 align 4
.data:00003884 $SG91936        db 'Doing RSA key exchange with hash %s',0
.data:00003884                                         ; DATA XREF: _do_ssh2_transport+1E6Do
.data:000038A8 $SG91945        db 'expected RSA public key packet from server',0
.data:000038A8                                         ; DATA XREF: _do_ssh2_transport+1EACo
.data:000038D3                 align 4
.data:000038D4 $SG91953        db 'unable to parse RSA public key from server',0
.data:000038D4                                         ; DATA XREF: _do_ssh2_transport+1FCBo
.data:000038FF                 align 10h
.data:00003900 $SG91988        db 'expected signature packet from server',0
.data:00003900                                         ; DATA XREF: _do_ssh2_transport+22E8o
.data:00003926                 align 4
.data:00003928 ; wchar_t _SG91993
.data:00003928 $SG91993:                               ; DATA XREF: _do_ssh2_transport+2377o
.data:00003928                 unicode 0, <..\..\..\ssh.c>,0
.data:00003946                 align 4
.data:00003948 ; wchar_t _SG91994
.data:00003948 $SG91994:                               ; DATA XREF: _do_ssh2_transport+237Co
.data:00003948                 unicode 0, <ssh->
.data:00003948                 dw 3Eh
.data:00003948                 unicode 0, <kex->
.data:00003948                 dw 3Eh
.data:00003948                 unicode 0, <hash->
.data:00003948                 dw 3Eh
.data:00003948                 unicode 0, <hlen >
.data:00003948                 dw 3Ch
.data:00003948                 unicode 0, <= sizeof(s->
.data:00003948                 dw 3Eh
.data:00003948                 unicode 0, <exchange_hash)>,0
.data:000039AA                 align 4
.data:000039AC $SG91999        db 'Server',27h,'s host key did not match the signature supplied',0
.data:000039AC                                         ; DATA XREF: _do_ssh2_transport:loc_C4D1o
.data:000039E3                 align 4
.data:000039E4 $SG92004        db 'Host key fingerprint is:',0
.data:000039E4                                         ; DATA XREF: _do_ssh2_transport+24A3o
.data:000039FD                 align 10h
.data:00003A00 $SG92006        db 'Host key did not appear in manually configured list',0
.data:00003A00                                         ; DATA XREF: _do_ssh2_transport+250Co
.data:00003A34 $SG92027        db 'Aborted at host key verification',0
.data:00003A34                                         ; DATA XREF: _do_ssh2_transport+263Co
.data:00003A55                 align 4
.data:00003A58 $SG92021        db 'Unexpected data from server while waiting for user host key respo'
.data:00003A58                                         ; DATA XREF: _do_ssh2_transport+25D2o
.data:00003A58                 db 'nse',0
.data:00003A9D                 align 10h
.data:00003AA0 $SG92033        db 'Host key was different in repeat key exchange',0
.data:00003AA0                                         ; DATA XREF: _do_ssh2_transport+269Co
.data:00003ACE                 align 10h
.data:00003AD0 ; wchar_t _SG92040
.data:00003AD0 $SG92040:                               ; DATA XREF: _do_ssh2_transport+274Ao
.data:00003AD0                 unicode 0, <..\..\..\ssh.c>,0
.data:00003AEE                 align 10h
.data:00003AF0 ; wchar_t _SG92041
.data:00003AF0 $SG92041:                               ; DATA XREF: _do_ssh2_transport+274Fo
.data:00003AF0                 unicode 0, <ssh->
.data:00003AF0                 dw 3Eh
.data:00003AF0                 unicode 0, <v2_session_id_len >
.data:00003AF0                 dw 3Ch
.data:00003AF0                 unicode 0, <= sizeof(ssh->
.data:00003AF0                 dw 3Eh
.data:00003AF0                 unicode 0, <v2_session_id)>,0
.data:00003B5A                 align 4
.data:00003B5C ; wchar_t _SG92047
.data:00003B5C $SG92047:                               ; DATA XREF: _do_ssh2_transport+28B1o
.data:00003B5C                 unicode 0, <..\..\..\ssh.c>,0
.data:00003B7A                 align 4
.data:00003B7C $SG92059        db 'Initialised %.200s client->server MAC algorithm',0
.data:00003B7C                                         ; DATA XREF: _do_ssh2_transport+2A81o
.data:00003BAC $SG92061        db 'Initialised %s compression',0
.data:00003BAC                                         ; DATA XREF: _do_ssh2_transport+2AAEo
.data:00003BC7                 align 4
.data:00003BC8 ; wchar_t _SG92048
.data:00003BC8 $SG92048:                               ; DATA XREF: _do_ssh2_transport+28B6o
.data:00003BC8                 unicode 0, <sizeof(keyspace) >
.data:00003BC8                 dw 3Eh
.data:00003BC8                 unicode 0, <= ssh->
.data:00003BC8                 dw 3Eh
.data:00003BC8                 unicode 0, <kex->
.data:00003BC8                 dw 3Eh
.data:00003BC8                 unicode 0, <hash->
.data:00003BC8                 dw 3Eh
.data:00003BC8                 unicode 0, <hlen * SSH2_MKKEY_ITERS>,0
.data:00003C40 ; wchar_t _SG92050
.data:00003C40 $SG92050:                               ; DATA XREF: _do_ssh2_transport+2918o
.data:00003C40                 unicode 0, <..\..\..\ssh.c>,0
.data:00003C5E                 align 10h
.data:00003C60 ; wchar_t _SG92051
.data:00003C60 $SG92051:                               ; DATA XREF: _do_ssh2_transport+291Do
.data:00003C60                 unicode 0, <(ssh->
.data:00003C60                 dw 3Eh
.data:00003C60                 unicode 0, <cscipher->
.data:00003C60                 dw 3Eh
.data:00003C60                 unicode 0, <keylen+7) / 8 >
.data:00003C60                 dw 3Ch
.data:00003C60                 unicode 0, <= ssh->
.data:00003C60                 dw 3Eh
.data:00003C60                 unicode 0, <kex->
.data:00003C60                 dw 3Eh
.data:00003C60                 unicode 0, <hash->
.data:00003C60                 dw 3Eh
.data:00003C60                 unicode 0, <hlen * SSH2_MKKEY_ITERS>,0
.data:00003CF2                 align 4
.data:00003CF4 ; wchar_t _SG92053
.data:00003CF4 $SG92053:                               ; DATA XREF: _do_ssh2_transport+2996o
.data:00003CF4                 unicode 0, <..\..\..\ssh.c>,0
.data:00003D12                 align 4
.data:00003D14 $SG92091        db 'Initialised %.200s server->client MAC algorithm',0
.data:00003D14                                         ; DATA XREF: _do_ssh2_transport+2E12o
.data:00003D44 $SG92112        db 'Server initiated key re-exchange',0
.data:00003D44                                         ; DATA XREF: _do_ssh2_transport+2F75o
.data:00003D65                 align 4
.data:00003D68 ; wchar_t _SG92054
.data:00003D68 $SG92054:                               ; DATA XREF: _do_ssh2_transport+299Bo
.data:00003D68                 unicode 0, <ssh->
.data:00003D68                 dw 3Eh
.data:00003D68                 unicode 0, <cscipher->
.data:00003D68                 dw 3Eh
.data:00003D68                 unicode 0, <blksize >
.data:00003D68                 dw 3Ch
.data:00003D68                 unicode 0, <= ssh->
.data:00003D68                 dw 3Eh
.data:00003D68                 unicode 0, <kex->
.data:00003D68                 dw 3Eh
.data:00003D68                 unicode 0, <hash->
.data:00003D68                 dw 3Eh
.data:00003D68                 unicode 0, <hlen * SSH2_MKKEY_ITERS>,0
.data:00003DEC ; wchar_t _SG92056
.data:00003DEC $SG92056:                               ; DATA XREF: _do_ssh2_transport+2A14o
.data:00003DEC                 unicode 0, <..\..\..\ssh.c>,0
.data:00003E0A                 align 4
.data:00003E0C $SG92121        db 'Server bug prevents key re-exchange (%s)',0
.data:00003E0C                                         ; DATA XREF: _do_ssh2_transport+2FF8o
.data:00003E35                 align 4
.data:00003E38 ; wchar_t _SG92057
.data:00003E38 $SG92057:                               ; DATA XREF: _do_ssh2_transport+2A19o
.data:00003E38                 unicode 0, <ssh->
.data:00003E38                 dw 3Eh
.data:00003E38                 unicode 0, <csmac->
.data:00003E38                 dw 3Eh
.data:00003E38                 unicode 0, <len >
.data:00003E38                 dw 3Ch
.data:00003E38                 unicode 0, <= ssh->
.data:00003E38                 dw 3Eh
.data:00003E38                 unicode 0, <kex->
.data:00003E38                 dw 3Eh
.data:00003E38                 unicode 0, <hash->
.data:00003E38                 dw 3Eh
.data:00003E38                 unicode 0, <hlen * SSH2_MKKEY_ITERS>,0
.data:00003EAE                 align 10h
.data:00003EB0 $SG92058        db 'Initialised %.200s client->server encryption',0
.data:00003EB0                                         ; DATA XREF: _do_ssh2_transport+2A66o
.data:00003EDD                 align 10h
.data:00003EE0 $SG92070        db 'expected new-keys packet from server',0
.data:00003EE0                                         ; DATA XREF: _do_ssh2_transport+2AF9o
.data:00003F05                 align 4
.data:00003F08 ; wchar_t _SG92079
.data:00003F08 $SG92079:                               ; DATA XREF: _do_ssh2_transport+2C44o
.data:00003F08                 unicode 0, <..\..\..\ssh.c>,0
.data:00003F26                 align 4
.data:00003F28 ; wchar_t _SG92080
.data:00003F28 $SG92080:                               ; DATA XREF: _do_ssh2_transport+2C49o
.data:00003F28                 unicode 0, <sizeof(keyspace) >
.data:00003F28                 dw 3Eh
.data:00003F28                 unicode 0, <= ssh->
.data:00003F28                 dw 3Eh
.data:00003F28                 unicode 0, <kex->
.data:00003F28                 dw 3Eh
.data:00003F28                 unicode 0, <hash->
.data:00003F28                 dw 3Eh
.data:00003F28                 unicode 0, <hlen * SSH2_MKKEY_ITERS>,0
.data:00003FA0 ; wchar_t _SG92082
.data:00003FA0 $SG92082:                               ; DATA XREF: _do_ssh2_transport+2CAAo
.data:00003FA0                 unicode 0, <..\..\..\ssh.c>,0
.data:00003FBE                 align 10h
.data:00003FC0 ; wchar_t _SG92083
.data:00003FC0 $SG92083:                               ; DATA XREF: _do_ssh2_transport+2CAFo
.data:00003FC0                 unicode 0, <(ssh->
.data:00003FC0                 dw 3Eh
.data:00003FC0                 unicode 0, <sccipher->
.data:00003FC0                 dw 3Eh
.data:00003FC0                 unicode 0, <keylen+7) / 8 >
.data:00003FC0                 dw 3Ch
.data:00003FC0                 unicode 0, <= ssh->
.data:00003FC0                 dw 3Eh
.data:00003FC0                 unicode 0, <kex->
.data:00003FC0                 dw 3Eh
.data:00003FC0                 unicode 0, <hash->
.data:00003FC0                 dw 3Eh
.data:00003FC0                 unicode 0, <hlen * SSH2_MKKEY_ITERS>,0
.data:00004052                 align 4
.data:00004054 ; wchar_t _SG92085
.data:00004054 $SG92085:                               ; DATA XREF: _do_ssh2_transport+2D28o
.data:00004054                 unicode 0, <..\..\..\ssh.c>,0
.data:00004072                 align 4
.data:00004074 $SG92125        db 'Initiating key re-exchange (%s)',0
.data:00004074                                         ; DATA XREF: _do_ssh2_transport+307Eo
.data:00004094 ; char _SG92236[]
.data:00004094 $SG92236        db 'winadj@putty.projects.tartarus.org',0
.data:00004094                                         ; DATA XREF: _ssh2_set_window+BAo
.data:000040B7                 align 4
.data:000040B8 ; wchar_t _SG92086
.data:000040B8 $SG92086:                               ; DATA XREF: _do_ssh2_transport+2D2Do
.data:000040B8                 unicode 0, <ssh->
.data:000040B8                 dw 3Eh
.data:000040B8                 unicode 0, <sccipher->
.data:000040B8                 dw 3Eh
.data:000040B8                 unicode 0, <blksize >
.data:000040B8                 dw 3Ch
.data:000040B8                 unicode 0, <= ssh->
.data:000040B8                 dw 3Eh
.data:000040B8                 unicode 0, <kex->
.data:000040B8                 dw 3Eh
.data:000040B8                 unicode 0, <hash->
.data:000040B8                 dw 3Eh
.data:000040B8                 unicode 0, <hlen * SSH2_MKKEY_ITERS>,0
.data:0000413C ; wchar_t _SG92088
.data:0000413C $SG92088:                               ; DATA XREF: _do_ssh2_transport+2DA5o
.data:0000413C                 unicode 0, <..\..\..\ssh.c>,0
.data:0000415A                 align 4
.data:0000415C $SG92250        db 'half-open',0        ; DATA XREF: _ssh2_channel_msg+86o
.data:00004166                 align 4
.data:00004168 ; wchar_t _SG92089
.data:00004168 $SG92089:                               ; DATA XREF: _do_ssh2_transport+2DAAo
.data:00004168                 unicode 0, <ssh->
.data:00004168                 dw 3Eh
.data:00004168                 unicode 0, <scmac->
.data:00004168                 dw 3Eh
.data:00004168                 unicode 0, <len >
.data:00004168                 dw 3Ch
.data:00004168                 unicode 0, <= ssh->
.data:00004168                 dw 3Eh
.data:00004168                 unicode 0, <kex->
.data:00004168                 dw 3Eh
.data:00004168                 unicode 0, <hash->
.data:00004168                 dw 3Eh
.data:00004168                 unicode 0, <hlen * SSH2_MKKEY_ITERS>,0
.data:000041DE                 align 10h
.data:000041E0 $SG92090        db 'Initialised %.200s server->client encryption',0
.data:000041E0                                         ; DATA XREF: _do_ssh2_transport+2DF7o
.data:0000420D                 align 10h
.data:00004210 $SG92093        db 'Initialised %s decompression',0
.data:00004210                                         ; DATA XREF: _do_ssh2_transport+2E3Fo
.data:0000422D                 align 10h
.data:00004230 ; wchar_t _SG92116
.data:00004230 $SG92116:                               ; DATA XREF: _do_ssh2_transport+2FA8o
.data:00004230                 unicode 0, <..\..\..\ssh.c>,0
.data:0000424E                 align 10h
.data:00004250 ; wchar_t _SG92117
.data:00004250 $SG92117:                               ; DATA XREF: _do_ssh2_transport+2FADo
.data:00004250                 unicode 0, <!s->
.data:00004250                 dw 3Eh
.data:00004250                 unicode 0, <userauth_succeeded>,0
.data:0000427E                 align 10h
.data:00004280 ; wchar_t _SG92195
.data:00004280 $SG92195:                               ; DATA XREF: _ssh2_queue_chanreq_handler+2Ao
.data:00004280                 unicode 0, <..\..\..\ssh.c>,0
.data:0000429E                 align 10h
.data:000042A0 ; wchar_t _SG92196
.data:000042A0 $SG92196:                               ; DATA XREF: _ssh2_queue_chanreq_handler+2Fo
.data:000042A0                 unicode 0, <!(c->
.data:000042A0                 dw 3Eh
.data:000042A0                 unicode 0, <closes & (CLOSES_SENT_CLOSE | CLOSES_RCVD_CLOSE))>,0
.data:0000430E                 align 10h
.data:00004310 ; wchar_t _SG92212
.data:00004310 $SG92212:                               ; DATA XREF: _ssh2_chanreq_init+1Bo
.data:00004310                 unicode 0, <..\..\..\ssh.c>,0
.data:0000432E                 align 10h
.data:00004330 ; wchar_t _SG92213
.data:00004330 $SG92213:                               ; DATA XREF: _ssh2_chanreq_init+20o
.data:00004330                 unicode 0, <!(c->
.data:00004330                 dw 3Eh
.data:00004330                 unicode 0, <closes & (CLOSES_SENT_CLOSE | CLOSES_RCVD_CLOSE))>,0
.data:0000439E                 align 10h
.data:000043A0 $SG92251        db 'nonexistent',0      ; DATA XREF: _ssh2_channel_msg:loc_18037o
.data:000043AC $SG92252        db 'Received %s for %s channel %u',0
.data:000043AC                                         ; DATA XREF: _ssh2_channel_msg+C2o
.data:000043CA                 align 4
.data:000043CC $SG92344        db 'All channels closed',0
.data:000043CC                                         ; DATA XREF: _ssh_check_termination+65o
.data:000043E0 $SG92350        db 'Connection sharing downstream #%u connected',0
.data:000043E0                                         ; DATA XREF: _ssh_sharing_downstream_connected+7o
.data:0000440C $SG92356        db 'Connection sharing downstream #%u disconnected',0
.data:0000440C                                         ; DATA XREF: _ssh_sharing_downstream_disconnected+7o
.data:0000443B                 align 4
.data:0000443C $SG92371        db 'Connection sharing downstream #%u: %s',0
.data:0000443C                                         ; DATA XREF: _ssh_sharing_logf+42o
.data:00004462                 align 4
.data:00004464 $SG92373        db 'Connection sharing: %s',0
.data:00004464                                         ; DATA XREF: _ssh_sharing_logf+59o
.data:0000447B                 align 4
.data:0000447C $SG92387        db 'Forwarded X11 connection terminated',0
.data:0000447C                                         ; DATA XREF: _ssh_channel_destroy:loc_11BAAo
.data:000044A0 $SG92392        db 'Forwarded port closed',0
.data:000044A0                                         ; DATA XREF: _ssh_channel_destroy:loc_11BECo
.data:000044B6                 align 4
.data:000044B8 ; wchar_t _SG92396
.data:000044B8 $SG92396:                               ; DATA XREF: _ssh_channel_destroy+10Ao
.data:000044B8                 unicode 0, <..\..\..\ssh.c>,0
.data:000044D6                 align 4
.data:000044D8 ; wchar_t _SG92397
.data:000044D8 $SG92397:                               ; DATA XREF: _ssh_channel_destroy+10Fo
.data:000044D8                 unicode 0, <c->
.data:000044D8                 dw 3Eh
.data:000044D8                 unicode 0, <v.v2.chanreq_head == NULL>,0
.data:00004512                 align 4
.data:00004514 ; wchar_t _SG92409
.data:00004514 $SG92409:                               ; DATA XREF: _ssh2_channel_check_close+AEo
.data:00004514                 unicode 0, <..\..\..\ssh.c>,0
.data:00004532                 align 4
.data:00004534 ; wchar_t _SG92410
.data:00004534 $SG92410:                               ; DATA XREF: _ssh2_channel_check_close+B3o
.data:00004534                 unicode 0, <c->
.data:00004534                 dw 3Eh
.data:00004534                 unicode 0, <v.v2.chanreq_head == NULL>,0
.data:0000456E                 align 10h
.data:00004570 ; wchar_t _SG92470
.data:00004570 $SG92470:                               ; DATA XREF: _ssh2_msg_channel_open_confirmation+68o
.data:00004570                 unicode 0, <..\..\..\ssh.c>,0
.data:0000458E                 align 10h
.data:00004590 ; wchar_t _SG92471
.data:00004590 $SG92471:                               ; DATA XREF: _ssh2_msg_channel_open_confirmation+6Do
.data:00004590                 unicode 0, <c->
.data:00004590                 dw 3Eh
.data:00004590                 unicode 0, <halfopen>,0
.data:000045A8 $SG92478        db 'Funny channel type in ssh2_msg_channel_open_confirmation',0
.data:000045A8                                         ; DATA XREF: _ssh2_msg_channel_open_confirmation:loc_18AD6o
.data:000045E1                 align 4
.data:000045E4 ; wchar_t _SG92479
.data:000045E4 $SG92479:                               ; DATA XREF: _ssh2_msg_channel_open_confirmation+10Co
.data:000045E4                 unicode 0, <..\..\..\ssh.c>,0
.data:00004602                 align 4
.data:00004604 $SG92491        db 'Administratively prohibited',0
.data:00004604                                         ; DATA XREF: .rdata:000065ACo
.data:00004620 ; wchar_t _SG92480
.data:00004620 $SG92480:                               ; DATA XREF: _ssh2_msg_channel_open_confirmation+111o
.data:00004620                 unicode 0, <!"Funny channel type in ssh2_msg_channel_open_confirmatio>
.data:00004620                 unicode 0, <n">,0
.data:00004698 $SG92490        db '<unknown reason code>',0
.data:00004698                                         ; DATA XREF: .rdata:`ssh2_msg_channel_open_failure'::`2'::reasonso
.data:000046AE                 align 10h
.data:000046B0 $SG92492        db 'Connect failed',0   ; DATA XREF: .rdata:000065B0o
.data:000046BF                 align 10h
.data:000046C0 $SG92493        db 'Unknown channel type',0 ; DATA XREF: .rdata:000065B4o
.data:000046D5                 align 4
.data:000046D8 $SG92494        db 'Resource shortage',0 ; DATA XREF: .rdata:000065B8o
.data:000046EA                 align 4
.data:000046EC ; wchar_t _SG92502
.data:000046EC $SG92502:                               ; DATA XREF: _ssh2_msg_channel_open_failure+80o
.data:000046EC                 unicode 0, <..\..\..\ssh.c>,0
.data:0000470A                 align 4
.data:0000470C ; wchar_t _SG92503
.data:0000470C $SG92503:                               ; DATA XREF: _ssh2_msg_channel_open_failure+85o
.data:0000470C                 unicode 0, <c->
.data:0000470C                 dw 3Eh
.data:0000470C                 unicode 0, <halfopen>,0
.data:00004724 $SG92506        db 'Forwarded connection refused by server: %s [%.*s]',0
.data:00004724                                         ; DATA XREF: _ssh2_msg_channel_open_failure+DEo
.data:00004756                 align 4
.data:00004758 $SG92511        db 'Funny channel type in ssh2_msg_channel_open_failure',0
.data:00004758                                         ; DATA XREF: _ssh2_msg_channel_open_failure:loc_18C33o
.data:0000478C ; wchar_t _SG92512
.data:0000478C $SG92512:                               ; DATA XREF: _ssh2_msg_channel_open_failure+119o
.data:0000478C                 unicode 0, <..\..\..\ssh.c>,0
.data:000047AA                 align 4
.data:000047AC $SG92531        db 'exit-status',0      ; DATA XREF: _ssh2_msg_channel_request+C1o
.data:000047B8 ; wchar_t _SG92513
.data:000047B8 $SG92513:                               ; DATA XREF: _ssh2_msg_channel_open_failure+11Eo
.data:000047B8                 unicode 0, <!"Funny channel type in ssh2_msg_channel_open_failure">,0
.data:00004826                 align 4
.data:00004828 $SG92532        db 'Server sent command exit status %d',0
.data:00004828                                         ; DATA XREF: _ssh2_msg_channel_request+F5o
.data:0000484B                 align 4
.data:0000484C $SG92535        db 'exit-signal',0      ; DATA XREF: _ssh2_msg_channel_request+11Eo
.data:00004858 $SG92611        db ' %d',0              ; DATA XREF: _ssh2_msg_channel_request+3F9o
.data:0000485C $SG92616        db ' "%.*s"',0          ; DATA XREF: _ssh2_msg_channel_request+44Bo
.data:00004864 $SG92620        db 'ABRT',0             ; DATA XREF: _ssh2_msg_channel_request+474o
.data:00004869                 align 4
.data:0000486C $SG92623        db 'FPE',0              ; DATA XREF: _ssh2_msg_channel_request+4ABo
.data:00004870 $SG92626        db 'ILL',0              ; DATA XREF: _ssh2_msg_channel_request+4E2o
.data:00004874 $SG92629        db 'INT',0              ; DATA XREF: _ssh2_msg_channel_request+519o
.data:00004878 $SG92632        db 'SEGV',0             ; DATA XREF: _ssh2_msg_channel_request+54Do
.data:0000487D                 align 10h
.data:00004880 $SG92635        db 'TERM',0             ; DATA XREF: _ssh2_msg_channel_request+581o
.data:00004885                 align 4
.data:00004888 $SG92638        db ' ("%.*s")',0        ; DATA XREF: _ssh2_msg_channel_request+5E3o
.data:00004892                 align 4
.data:00004894 $SG92639        db ' (core dumped)',0   ; DATA XREF: _ssh2_msg_channel_request+5F9o
.data:000048A3                 align 4
.data:000048A4 $SG92641        db 'Server exited on signal%s%s%s',0
.data:000048A4                                         ; DATA XREF: _ssh2_msg_channel_request+61Eo
.data:000048C2                 align 4
.data:000048C4 $SG92694        db 'x11',0              ; DATA XREF: _ssh2_msg_channel_open+8Eo
.data:000048C8 $SG92698        db 'Received X11 connect request from %s:%d',0
.data:000048C8                                         ; DATA XREF: _ssh2_msg_channel_open+103o
.data:000048F0 $SG92700        db 'X11 forwarding is not enabled',0
.data:000048F0                                         ; DATA XREF: _ssh2_msg_channel_open+129o
.data:0000490E                 align 10h
.data:00004910 $SG92703        db 'Opened X11 forward channel',0
.data:00004910                                         ; DATA XREF: _ssh2_msg_channel_open:loc_19655o
.data:0000492B                 align 4
.data:0000492C $SG92706        db 'forwarded-tcpip',0  ; DATA XREF: _ssh2_msg_channel_open+1B1o
.data:0000493C $SG92711        db '%.*s',0             ; DATA XREF: _ssh2_msg_channel_open+1F2o
.data:00004941                 align 4
.data:00004944 $SG92713        db 'Received remote port %s:%d open request from %s:%d',0
.data:00004944                                         ; DATA XREF: _ssh2_msg_channel_open+25Fo
.data:00004977                 align 4
.data:00004978 $SG92716        db 'Remote port is not recognised',0
.data:00004978                                         ; DATA XREF: _ssh2_msg_channel_open+282o
.data:00004996                 align 4
.data:00004998 $SG92720        db 'Attempting to forward remote port to %s:%d',0
.data:00004998                                         ; DATA XREF: _ssh2_msg_channel_open+314o
.data:000049C3                 align 4
.data:000049C4 $SG92723        db 'Port open failed: %s',0
.data:000049C4                                         ; DATA XREF: _ssh2_msg_channel_open+335o
.data:000049D9                 align 4
.data:000049DC $SG92724        db 'Port open failed',0 ; DATA XREF: _ssh2_msg_channel_open+355o
.data:000049ED                 align 10h
.data:000049F0 $SG92726        db 'Forwarded port opened successfully',0
.data:000049F0                                         ; DATA XREF: _ssh2_msg_channel_open:loc_19836o
.data:00004A13                 align 4
.data:00004A14 $SG92729        db 'auth-agent@openssh.com',0
.data:00004A14                                         ; DATA XREF: _ssh2_msg_channel_open+389o
.data:00004A2B                 align 4
.data:00004A2C $SG92731        db 'Agent forwarding is not enabled',0
.data:00004A2C                                         ; DATA XREF: _ssh2_msg_channel_open+3A7o
.data:00004A4C $SG92735        db 'Unsupported channel type requested',0
.data:00004A4C                                         ; DATA XREF: _ssh2_msg_channel_open:loc_198B2o
.data:00004A6F                 align 10h
.data:00004A70 ; char _SG92737[]
.data:00004A70 $SG92737        dd offset loc_6E60+5    ; DATA XREF: _ssh2_msg_channel_open+43Co
.data:00004A74 $SG92738        db 'Rejected channel open: %s',0
.data:00004A74                                         ; DATA XREF: _ssh2_msg_channel_open+461o
.data:00004A8E                 align 10h
.data:00004A90 $SG92820        db 'Requesting X11 forwarding',0
.data:00004A90                                         ; DATA XREF: _ssh2_setup_x11:loc_19C2Ao
.data:00004AAA                 align 4
.data:00004AAC ; char _SG92821[]
.data:00004AAC $SG92821        db 'x11-req',0          ; DATA XREF: _ssh2_setup_x11+92o
.data:00004AB4 $SG92828        db 'X11 forwarding enabled',0
.data:00004AB4                                         ; DATA XREF: _ssh2_setup_x11+133o
.data:00004ACB                 align 4
.data:00004ACC $SG92830        db 'X11 forwarding refused',0
.data:00004ACC                                         ; DATA XREF: _ssh2_setup_x11:loc_19D0Eo
.data:00004AE3                 align 4
.data:00004AE4 $SG92853        db 'Requesting OpenSSH-style agent forwarding',0
.data:00004AE4                                         ; DATA XREF: _ssh2_setup_agent:loc_19DB6o
.data:00004B0E                 align 10h
.data:00004B10 ; char _SG92854[]
.data:00004B10 $SG92854        db 'auth-agent-req@openssh.com',0
.data:00004B10                                         ; DATA XREF: _ssh2_setup_agent+8Eo
.data:00004B2B                 align 4
.data:00004B2C $SG92861        db 'Agent forwarding enabled',0
.data:00004B2C                                         ; DATA XREF: _ssh2_setup_agent+D6o
.data:00004B45                 align 4
.data:00004B48 $SG92863        db 'Agent forwarding refused',0
.data:00004B48                                         ; DATA XREF: _ssh2_setup_agent:loc_19E41o
.data:00004B61                 align 4
.data:00004B64 ; char _SG92886[]
.data:00004B64 $SG92886        db '%d,%d',0            ; DATA XREF: _ssh2_setup_pty+A0o
.data:00004B6A                 align 4
.data:00004B6C ; char _SG92887[]
.data:00004B6C $SG92887        db 'pty-req',0          ; DATA XREF: _ssh2_setup_pty+CBo
.data:00004B74 $SG92896        db 'Allocated pty (ospeed %dbps, ispeed %dbps)',0
.data:00004B74                                         ; DATA XREF: _ssh2_setup_pty+21Fo
.data:00004B9F                 align 10h
.data:00004BA0 ; char _SG92898[]
.data:00004BA0 $SG92898        db 'Server refused to allocate pty',0Dh,0Ah,0
.data:00004BA0                                         ; DATA XREF: _ssh2_setup_pty:loc_1A0B7o
.data:00004BC1                 align 4
.data:00004BC4 ; char _SG92931[]
.data:00004BC4 $SG92931        db 'env',0              ; DATA XREF: _ssh2_setup_env+D5o
.data:00004BC8 $SG92933        db 'Sent %d environment variables',0
.data:00004BC8                                         ; DATA XREF: _ssh2_setup_env+143o
.data:00004BE6                 align 4
.data:00004BE8 $SG92946        db 'All environment variables successfully set',0
.data:00004BE8                                         ; DATA XREF: _ssh2_setup_env+1D4o
.data:00004C13                 align 4
.data:00004C14 $SG92949        db 'All environment variables refused',0
.data:00004C14                                         ; DATA XREF: _ssh2_setup_env+1F6o
.data:00004C36                 align 4
.data:00004C38 ; char _SG92950[]
.data:00004C38 $SG92950        db 'Server refused to set environment variables',0Dh,0Ah,0
.data:00004C38                                         ; DATA XREF: _ssh2_setup_env+20Do
.data:00004C66                 align 4
.data:00004C68 $SG92952        db '%d environment variables refused',0
.data:00004C68                                         ; DATA XREF: _ssh2_setup_env+22Do
.data:00004C89                 align 4
.data:00004C8C ; char _SG92953[]
.data:00004C8C $SG92953        db 'Server refused to set all environment variables',0Dh,0Ah,0
.data:00004C8C                                         ; DATA XREF: _ssh2_setup_env+23Eo
.data:00004CBE                 align 10h
.data:00004CC0 ; char _SG93057[]
.data:00004CC0 $SG93057        db 'ssh-userauth',0     ; DATA XREF: _do_ssh2_authconn+380o
.data:00004CCD                 align 10h
.data:00004CD0 ; char _SG93067[]
.data:00004CD0 $SG93067        db 'ssh-connection',0   ; DATA XREF: _do_ssh2_authconn+3F8o
.data:00004CDF                 align 10h
.data:00004CE0 $SG93077        db 'Server refused service request',0
.data:00004CE0                                         ; DATA XREF: _do_ssh2_authconn:loc_1227Ao
.data:00004CFF                 align 10h
.data:00004D00 $SG93086        db 'Reading private key file "%.150s"',0
.data:00004D00                                         ; DATA XREF: _do_ssh2_authconn+509o
.data:00004D22                 align 4
.data:00004D24 $SG93093        db 'Unable to load private key (%s)',0
.data:00004D24                                         ; DATA XREF: _do_ssh2_authconn+593o
.data:00004D44 $SG93094        db 'Unable to load private key file "%.150s" (%s)',0Dh,0Ah,0
.data:00004D44                                         ; DATA XREF: _do_ssh2_authconn+5BBo
.data:00004D74 $SG93097        db 'Unable to use this key file (%s)',0
.data:00004D74                                         ; DATA XREF: _do_ssh2_authconn+5F6o
.data:00004D95                 align 4
.data:00004D98 $SG93098        db 'Unable to use key file "%.150s" (%s)',0Dh,0Ah,0
.data:00004D98                                         ; DATA XREF: _do_ssh2_authconn+627o
.data:00004DBF                 align 10h
.data:00004DC0 $SG93104        db 'Pageant is running. Requesting keys.',0
.data:00004DC0                                         ; DATA XREF: _do_ssh2_authconn+6A7o
.data:00004DE5                 align 4
.data:00004DE8 $SG93118        db 'Unexpected data from server while waiting for agent response',0
.data:00004DE8                                         ; DATA XREF: _do_ssh2_authconn+722o
.data:00004E25                 align 4
.data:00004E28 $SG93135        db 'Pageant response contained a negative key count %d',0
.data:00004E28                                         ; DATA XREF: _do_ssh2_authconn+809o
.data:00004E5B                 align 4
.data:00004E5C $SG93146        db 'Pageant response was truncated',0
.data:00004E5C                                         ; DATA XREF: _do_ssh2_authconn+870o
.data:00004E7B                 align 4
.data:00004E7C $SG93157        db 'Pageant response was truncated',0
.data:00004E7C                                         ; DATA XREF: _do_ssh2_authconn:loc_126FFo
.data:00004E9B                 align 4
.data:00004E9C $SG93168        db 'Pageant response was truncated',0
.data:00004E9C                                         ; DATA XREF: _do_ssh2_authconn:loc_12781o
.data:00004EBB                 align 4
.data:00004EBC $SG93169        db 'Pageant has %d SSH-2 keys',0
.data:00004EBC                                         ; DATA XREF: _do_ssh2_authconn+9AFo
.data:00004ED6                 align 4
.data:00004ED8 $SG93183        db 'Pageant key #%d matches configured key file',0
.data:00004ED8                                         ; DATA XREF: _do_ssh2_authconn+A63o
.data:00004F04 $SG93193        db 'Configured key file not in Pageant',0
.data:00004F04                                         ; DATA XREF: _do_ssh2_authconn+AE6o
.data:00004F27                 align 4
.data:00004F28 $SG93195        db 'Failed to get reply from Pageant',0
.data:00004F28                                         ; DATA XREF: _do_ssh2_authconn:loc_12934o
.data:00004F49                 align 4
.data:00004F4C $SG93204        db 'SSH login name',0   ; DATA XREF: _do_ssh2_authconn+BB8o
.data:00004F5B                 align 4
.data:00004F5C $SG93205        db 'login as: ',0       ; DATA XREF: _do_ssh2_authconn+BD0o
.data:00004F67                 align 4
.data:00004F68 $SG93219        db 'No username provided',0
.data:00004F68                                         ; DATA XREF: _do_ssh2_authconn+C72o
.data:00004F7D                 align 10h
.data:00004F80 $SG93227        db 'Using username "%s".',0Dh,0Ah,0
.data:00004F80                                         ; DATA XREF: _do_ssh2_authconn+CE6o
.data:00004F97                 align 4
.data:00004F98 ; char _SG93228[]
.data:00004F98 $SG93228        db 'ssh-connection',0   ; DATA XREF: _do_ssh2_authconn+D58o
.data:00004FA7                 align 4
.data:00004FA8 ; char _SG93229[]
.data:00004FA8 $SG93229        db 'none',0             ; DATA XREF: _do_ssh2_authconn+D6Fo
.data:00004FAD                 align 10h
.data:00004FB0 $SG93253        db 'Access granted',0   ; DATA XREF: _do_ssh2_authconn+EF3o
.data:00004FBF                 align 10h
.data:00004FC0 $SG93255        db 'Strange packet received during authentication: type %d',0
.data:00004FC0                                         ; DATA XREF: _do_ssh2_authconn+F3Co
.data:00004FF7                 align 4
.data:00004FF8 ; char _SG93266[]
.data:00004FF8 $SG93266        db 'Server refused our key',0Dh,0Ah,0
.data:00004FF8                                         ; DATA XREF: _do_ssh2_authconn+FDEo
.data:00005011                 align 4
.data:00005014 $SG93267        db 'Server refused our key',0
.data:00005014                                         ; DATA XREF: _do_ssh2_authconn:loc_12E17o
.data:0000502B                 align 4
.data:0000502C ; char _SG93270[]
.data:0000502C $SG93270        db 'Server refused public-key signature despite accepting key!',0Dh,0Ah,0
.data:0000502C                                         ; DATA XREF: _do_ssh2_authconn+1014o
.data:00005069                 align 4
.data:0000506C $SG93271        db 'Server refused public-key signature despite accepting key!',0
.data:0000506C                                         ; DATA XREF: _do_ssh2_authconn+1025o
.data:000050A7                 align 4
.data:000050A8 $SG93274        db 'Server refused keyboard-interactive authentication',0
.data:000050A8                                         ; DATA XREF: _do_ssh2_authconn+104Ao
.data:000050DB                 align 4
.data:000050DC $SG93279        db 'Keyboard-interactive authentication failed',0
.data:000050DC                                         ; DATA XREF: _do_ssh2_authconn+107Do
.data:00005107                 align 4
.data:00005108 ; char _SG93280[]
.data:00005108 $SG93280        db 'Access denied',0Dh,0Ah,0
.data:00005108                                         ; DATA XREF: _do_ssh2_authconn+1094o
.data:00005118 ; wchar_t _SG93283
.data:00005118 $SG93283:                               ; DATA XREF: _do_ssh2_authconn+10B5o
.data:00005118                 unicode 0, <..\..\..\ssh.c>,0
.data:00005136                 align 4
.data:00005138 ; wchar_t _SG93284
.data:00005138 $SG93284:                               ; DATA XREF: _do_ssh2_authconn+10BAo
.data:00005138                 unicode 0, <s->
.data:00005138                 dw 3Eh
.data:00005138                 unicode 0, <type == AUTH_TYPE_PASSWORD>,0
.data:00005174 $SG93285        db 'Password authentication failed',0
.data:00005174                                         ; DATA XREF: _do_ssh2_authconn:loc_12EEFo
.data:00005193                 align 4
.data:00005194 ; char _SG93286[]
.data:00005194 $SG93286        db 'Access denied',0Dh,0Ah,0
.data:00005194                                         ; DATA XREF: _do_ssh2_authconn+10DEo
.data:000051A4 ; char _SG93289[]
.data:000051A4 $SG93289        db 'Further authentication required',0Dh,0Ah,0
.data:000051A4                                         ; DATA XREF: _do_ssh2_authconn:loc_12F40o
.data:000051C6                 align 4
.data:000051C8 $SG93290        db 'Further authentication required',0
.data:000051C8                                         ; DATA XREF: _do_ssh2_authconn+1129o
.data:000051E8 ; char _SG93291[]
.data:000051E8 $SG93291        db 'publickey',0        ; DATA XREF: _do_ssh2_authconn+1174o
.data:000051F2                 align 4
.data:000051F4 ; char _SG93292[]
.data:000051F4 $SG93292        db 'password',0         ; DATA XREF: _do_ssh2_authconn+11BBo
.data:000051FD                 align 10h
.data:00005200 ; char _SG93293[]
.data:00005200 $SG93293        db 'keyboard-interactive',0
.data:00005200                                         ; DATA XREF: _do_ssh2_authconn+121Ao
.data:00005215                 align 4
.data:00005218 ; char _SG93295[]
.data:00005218 $SG93295        db 'gssapi-with-mic',0  ; DATA XREF: _do_ssh2_authconn+12C0o
.data:00005228 $SG93297        db 'Trying Pageant key #%d',0
.data:00005228                                         ; DATA XREF: _do_ssh2_authconn+134Do
.data:0000523F                 align 10h
.data:00005240 ; char _SG93324[]
.data:00005240 $SG93324        db 'ssh-connection',0   ; DATA XREF: _do_ssh2_authconn+14ECo
.data:0000524F                 align 10h
.data:00005250 ; char _SG93325[]
.data:00005250 $SG93325        db 'publickey',0        ; DATA XREF: _do_ssh2_authconn+1503o
.data:0000525A                 align 4
.data:0000525C ; char _SG93337[]
.data:0000525C $SG93337        db 'Authenticating with public key "',0
.data:0000525C                                         ; DATA XREF: _do_ssh2_authconn+15F8o
.data:0000527D                 align 10h
.data:00005280 ; char _SG93338[]
.data:00005280 $SG93338        db '" from agent',0Dh,0Ah,0
.data:00005280                                         ; DATA XREF: _do_ssh2_authconn+1629o
.data:0000528F                 align 10h
.data:00005290 ; char _SG93339[]
.data:00005290 $SG93339        db 'ssh-connection',0   ; DATA XREF: _do_ssh2_authconn+1669o
.data:0000529F                 align 10h
.data:000052A0 ; char _SG93340[]
.data:000052A0 $SG93340        db 'publickey',0        ; DATA XREF: _do_ssh2_authconn+1680o
.data:000052AA                 align 4
.data:000052AC $SG93374        db 'Unexpected data from server while waiting for agent response',0
.data:000052AC                                         ; DATA XREF: _do_ssh2_authconn+1B2Ao
.data:000052E9                 align 4
.data:000052EC $SG93389        db 'Sending Pageant',27h,'s response',0
.data:000052EC                                         ; DATA XREF: _do_ssh2_authconn+1C2Bo
.data:00005307                 align 4
.data:00005308 $SG93399        db 'Pageant failed to answer challenge',0
.data:00005308                                         ; DATA XREF: _do_ssh2_authconn:loc_13B07o
.data:0000532B                 align 4
.data:0000532C ; char _SG93410[]
.data:0000532C $SG93410        db 'ssh-connection',0   ; DATA XREF: _do_ssh2_authconn+1DC6o
.data:0000533B                 align 4
.data:0000533C ; char _SG93411[]
.data:0000533C $SG93411        db 'publickey',0        ; DATA XREF: _do_ssh2_authconn+1DDDo
.data:00005346                 align 4
.data:00005348 $SG93413        db 'Offered public key',0
.data:00005348                                         ; DATA XREF: _do_ssh2_authconn+1E69o
.data:0000535B                 align 4
.data:0000535C $SG93422        db 'Offer of public key accepted',0
.data:0000535C                                         ; DATA XREF: _do_ssh2_authconn:loc_13CE2o
.data:00005379                 align 4
.data:0000537C ; char _SG93424[]
.data:0000537C $SG93424        db 'Authenticating with public key "',0
.data:0000537C                                         ; DATA XREF: _do_ssh2_authconn+1EDBo
.data:0000539D                 align 10h
.data:000053A0 ; char _SG93425[]
.data:000053A0 $SG93425        db '"',0Dh,0Ah,0        ; DATA XREF: _do_ssh2_authconn+1EFFo
.data:000053A4 $SG93433        db 'SSH key passphrase',0
.data:000053A4                                         ; DATA XREF: _do_ssh2_authconn+1F52o
.data:000053B7                 align 4
.data:000053B8 $SG93434        db 'Passphrase for key "%.100s": ',0
.data:000053B8                                         ; DATA XREF: _do_ssh2_authconn+1F71o
.data:000053D6                 align 4
.data:000053D8 ; char _SG93448[]
.data:000053D8 $SG93448        db 'Unable to authenticate',0
.data:000053D8                                         ; DATA XREF: _do_ssh2_authconn+201Do
.data:000053EF                 align 10h
.data:000053F0 ; char _SG93459[]
.data:000053F0 $SG93459        db 'Wrong passphrase',0Dh,0Ah,0
.data:000053F0                                         ; DATA XREF: _do_ssh2_authconn+20FAo
.data:00005403                 align 4
.data:00005404 ; char _SG93462[]
.data:00005404 $SG93462        db 'Unable to load private key (',0
.data:00005404                                         ; DATA XREF: _do_ssh2_authconn:loc_13F3Co
.data:00005421                 align 4
.data:00005424 ; char _SG93463[]
.data:00005424 $SG93463        db ')',0Dh,0Ah,0        ; DATA XREF: _do_ssh2_authconn+2138o
.data:00005428 ; char _SG93473[]
.data:00005428 $SG93473        db 'ssh-connection',0   ; DATA XREF: _do_ssh2_authconn+2190o
.data:00005437                 align 4
.data:00005438 ; char _SG93474[]
.data:00005438 $SG93474        db 'publickey',0        ; DATA XREF: _do_ssh2_authconn+21A7o
.data:00005442                 align 4
.data:00005444 ; wchar_t _SG93485
.data:00005444 $SG93485:                               ; DATA XREF: _do_ssh2_authconn+23C9o
.data:00005444                 unicode 0, <..\..\..\ssh.c>,0
.data:00005462                 align 4
.data:00005464 ; wchar_t _SG93486
.data:00005464 $SG93486:                               ; DATA XREF: _do_ssh2_authconn+23CEo
.data:00005464                 unicode 0, <p == sigdata_len>,0
.data:00005486                 align 4
.data:00005488 $SG93488        db 'Sent public key signature',0
.data:00005488                                         ; DATA XREF: _do_ssh2_authconn+2488o
.data:000054A2                 align 4
.data:000054A4 ; wchar_t _SG93508
.data:000054A4 $SG93508:                               ; DATA XREF: _do_ssh2_authconn+25F0o
.data:000054A4                 unicode 0, <..\..\..\ssh.c>,0
.data:000054C2                 align 4
.data:000054C4 ; wchar_t _SG93509
.data:000054C4 $SG93509:                               ; DATA XREF: _do_ssh2_authconn+25F5o
.data:000054C4                 unicode 0, <s->
.data:000054C4                 dw 3Eh
.data:000054C4                 unicode 0, <gsslib>,0
.data:000054D8 ; char _SG93511[]
.data:000054D8 $SG93511        db 'ssh-connection',0   ; DATA XREF: _do_ssh2_authconn+265Fo
.data:000054E7                 align 4
.data:000054E8 ; char _SG93512[]
.data:000054E8 $SG93512        db 'gssapi-with-mic',0  ; DATA XREF: _do_ssh2_authconn+2676o
.data:000054F8 $SG93513        db 'Attempting GSSAPI authentication',0
.data:000054F8                                         ; DATA XREF: _do_ssh2_authconn+268Do
.data:00005519                 align 4
.data:0000551C $SG93523        db 'GSSAPI authentication request refused',0
.data:0000551C                                         ; DATA XREF: _do_ssh2_authconn+2792o
.data:00005542                 align 4
.data:00005544 $SG93529        db 'GSSAPI authentication - wrong response from server',0
.data:00005544                                         ; DATA XREF: _do_ssh2_authconn:loc_1467Bo
.data:00005577                 align 4
.data:00005578 $SG93532        db 'GSSAPI import name failed - Bad service name',0
.data:00005578                                         ; DATA XREF: _do_ssh2_authconn+28C7o
.data:000055A5                 align 4
.data:000055A8 $SG93534        db 'GSSAPI import name failed',0
.data:000055A8                                         ; DATA XREF: _do_ssh2_authconn:loc_14708o
.data:000055C2                 align 4
.data:000055C4 $SG93536        db 'GSSAPI authentication failed to get credentials',0
.data:000055C4                                         ; DATA XREF: _do_ssh2_authconn+293Eo
.data:000055F4 $SG93549        db 'GSSAPI authentication initialisation failed',0
.data:000055F4                                         ; DATA XREF: _do_ssh2_authconn+2A4Do
.data:00005620 $SG93551        db 'GSSAPI authentication initialised',0
.data:00005620                                         ; DATA XREF: _do_ssh2_authconn:loc_148FBo
.data:00005642                 align 4
.data:00005644 $SG93562        db 'GSSAPI authentication - bad server response',0
.data:00005644                                         ; DATA XREF: _do_ssh2_authconn+2BB6o
.data:00005670 $SG93564        db 'GSSAPI authentication loop finished OK',0
.data:00005670                                         ; DATA XREF: _do_ssh2_authconn:loc_14AB9o
.data:00005697                 align 4
.data:00005698 ; char _SG93566[]
.data:00005698 $SG93566        db 'ssh-connection',0   ; DATA XREF: _do_ssh2_authconn+2D33o
.data:000056A7                 align 4
.data:000056A8 ; char _SG93567[]
.data:000056A8 $SG93567        db 'gssapi-with-mic',0  ; DATA XREF: _do_ssh2_authconn+2D4Ao
.data:000056B8 ; char _SG93571[]
.data:000056B8 $SG93571        db 'ssh-connection',0   ; DATA XREF: _do_ssh2_authconn+2F29o
.data:000056C7                 align 4
.data:000056C8 ; char _SG93572[]
.data:000056C8 $SG93572        db 'keyboard-interactive',0
.data:000056C8                                         ; DATA XREF: _do_ssh2_authconn+2F40o
.data:000056DD                 align 10h
.data:000056E0 $SG93575        db 'Attempting keyboard-interactive authentication',0
.data:000056E0                                         ; DATA XREF: _do_ssh2_authconn+2F9Bo
.data:0000570F                 align 10h
.data:00005710 ; `do_ssh2_authconn'[::I]::noprompt
.data:00005710 ?noprompt@?II@??do_ssh2_authconn@@9@9 db '<server failed to send prompt>: ',0
.data:00005710                                         ; DATA XREF: _do_ssh2_authconn+30E9o
.data:00005731                 align 4
.data:00005734 $SG93603        db '%.*s',0             ; DATA XREF: _do_ssh2_authconn+3112o
.data:00005739                 align 4
.data:0000573C $SG93605        db 'SSH server: %.*s',0 ; DATA XREF: _do_ssh2_authconn+314Bo
.data:0000574D                 align 10h
.data:00005750 $SG93607        db 'SSH server authentication',0
.data:00005750                                         ; DATA XREF: _do_ssh2_authconn:loc_14F98o
.data:0000576A                 align 4
.data:0000576C $SG93610        db 0Ah,0                ; DATA XREF: _do_ssh2_authconn+31B7o
.data:0000576E                 align 10h
.data:00005770 $SG93612        db 'Using keyboard-interactive authentication.%s%.*s',0
.data:00005770                                         ; DATA XREF: _do_ssh2_authconn+31E2o
.data:000057A1                 align 4
.data:000057A4 ; char _SG93628[]
.data:000057A4 $SG93628        db 'Unable to authenticate',0
.data:000057A4                                         ; DATA XREF: _do_ssh2_authconn+32A3o
.data:000057BB                 align 4
.data:000057BC $SG93646        db 'SSH password',0     ; DATA XREF: _do_ssh2_authconn+33DBo
.data:000057C9                 align 4
.data:000057CC $SG93647        db '%s@%s',27h,'s password: ',0
.data:000057CC                                         ; DATA XREF: _do_ssh2_authconn+3407o
.data:000057DF                 align 10h
.data:000057E0 ; char _SG93661[]
.data:000057E0 $SG93661        db 'Unable to authenticate',0
.data:000057E0                                         ; DATA XREF: _do_ssh2_authconn+34B3o
.data:000057F7                 align 4
.data:000057F8 ; char _SG93665[]
.data:000057F8 $SG93665        db 'ssh-connection',0   ; DATA XREF: _do_ssh2_authconn+3533o
.data:00005807                 align 4
.data:00005808 ; char _SG93666[]
.data:00005808 $SG93666        db 'password',0         ; DATA XREF: _do_ssh2_authconn+354Ao
.data:00005811                 align 4
.data:00005814 $SG93667        db 'Sent password',0    ; DATA XREF: _do_ssh2_authconn+35A9o
.data:00005822                 align 4
.data:00005824 $SG93683        db 'Server requested password change',0
.data:00005824                                         ; DATA XREF: _do_ssh2_authconn+360Co
.data:00005845                 align 4
.data:00005848 $SG93685        db 'Server rejected new password',0
.data:00005848                                         ; DATA XREF: _do_ssh2_authconn:loc_15440o
.data:00005865                 align 4
.data:00005868 ; char _SG93686[]
.data:00005868 $SG93686        dd offset $SG87550+1    ; DATA XREF: _do_ssh2_authconn+364Eo
.data:00005868                                         ; "SH2_MSG_USERAUTH_PASSWD_CHANGEREQ"
.data:0000586C $SG93687        db 'New SSH password',0 ; DATA XREF: _do_ssh2_authconn+369Do
.data:0000587D                 align 10h
.data:00005880 $SG93688        db '%.*s',0             ; DATA XREF: _do_ssh2_authconn+36C1o
.data:00005885                 align 4
.data:00005888 $SG93689        db 'Current password (blank for previously entered password): ',0
.data:00005888                                         ; DATA XREF: _do_ssh2_authconn+36E6o
.data:000058C3                 align 4
.data:000058C4 $SG93690        db 'Enter new password: ',0
.data:000058C4                                         ; DATA XREF: _do_ssh2_authconn+3705o
.data:000058D9                 align 4
.data:000058DC $SG93691        db 'Confirm new password: ',0
.data:000058DC                                         ; DATA XREF: _do_ssh2_authconn+3724o
.data:000058F3                 align 4
.data:000058F4 ; char _SG93708[]
.data:000058F4 $SG93708        db 'Unable to authenticate',0
.data:000058F4                                         ; DATA XREF: _do_ssh2_authconn+380Bo
.data:0000590B                 align 4
.data:0000590C ; char _SG93714[]
.data:0000590C $SG93714        db 'Passwords do not match',0Dh,0Ah,0
.data:0000590C                                         ; DATA XREF: _do_ssh2_authconn+38C7o
.data:00005925                 align 4
.data:00005928 ; char _SG93715[]
.data:00005928 $SG93715        db 'ssh-connection',0   ; DATA XREF: _do_ssh2_authconn+390Co
.data:00005937                 align 4
.data:00005938 ; char _SG93716[]
.data:00005938 $SG93716        db 'password',0         ; DATA XREF: _do_ssh2_authconn+3923o
.data:00005941                 align 4
.data:00005944 $SG93717        db 'Sent new password',0 ; DATA XREF: _do_ssh2_authconn+39B3o
.data:00005956                 align 4
.data:00005958 $SG93727        db 'No supported authentication methods available (server sent: %.*s)'
.data:00005958                                         ; DATA XREF: _do_ssh2_authconn+3A62o
.data:00005958                 db 0
.data:0000599A                 align 4
.data:0000599C ; char _SG93728[]
.data:0000599C $SG93728        db 'No supported authentication methods available',0
.data:0000599C                                         ; DATA XREF: _do_ssh2_authconn+3A79o
.data:000059CA                 align 4
.data:000059CC $SG93737        db 'enabling delayed compression',0
.data:000059CC                                         ; DATA XREF: _do_ssh2_authconn+3B21o
.data:000059E9                 align 4
.data:000059EC $SG93744        db 'main channel',0     ; DATA XREF: _do_ssh2_authconn+3BDCo
.data:000059F9                 align 4
.data:000059FC ; char _SG93746[]
.data:000059FC $SG93746        db 'session',0          ; DATA XREF: _do_ssh2_authconn:loc_15A54o
.data:00005A04 $SG93747        db 'Opening session as main channel',0
.data:00005A04                                         ; DATA XREF: _do_ssh2_authconn+3C4Co
.data:00005A24 $SG93756        db 'Server refused to open channel',0
.data:00005A24                                         ; DATA XREF: _do_ssh2_authconn+3CA7o
.data:00005A43                 align 4
.data:00005A44 $SG93761        db 'Server',27h,'s channel confirmation cited wrong channel',0
.data:00005A44                                         ; DATA XREF: _do_ssh2_authconn+3CEDo
.data:00005A76                 align 4
.data:00005A78 $SG93765        db 'Opened main channel',0
.data:00005A78                                         ; DATA XREF: _do_ssh2_authconn+3DAFo
.data:00005A8C ; char _SG93770[]
.data:00005A8C $SG93770        db 'simple@putty.projects.tartarus.org',0
.data:00005A8C                                         ; DATA XREF: _do_ssh2_authconn+3E92o
.data:00005AAF                 align 10h
.data:00005AB0 $SG93774        db 'X11 forwarding not enabled: unable to initialise X display',0
.data:00005AB0                                         ; DATA XREF: _do_ssh2_authconn+3F5Co
.data:00005AEB                 align 4
.data:00005AEC ; char _SG93795[]
.data:00005AEC $SG93795        db 'subsystem',0        ; DATA XREF: _do_ssh2_authconn+40D0o
.data:00005AF6                 align 4
.data:00005AF8 ; char _SG93799[]
.data:00005AF8 $SG93799        db 'exec',0             ; DATA XREF: _do_ssh2_authconn+411Fo
.data:00005AFD                 align 10h
.data:00005B00 ; char _SG93802[]
.data:00005B00 $SG93802        db 'shell',0            ; DATA XREF: _do_ssh2_authconn+4161o
.data:00005B06                 align 4
.data:00005B08 $SG93812        db 'Unexpected response to shell/command request: packet type %d',0
.data:00005B08                                         ; DATA XREF: _do_ssh2_authconn+41CCo
.data:00005B45                 align 4
.data:00005B48 $SG93817        db 'Primary command failed; attempting fallback',0
.data:00005B48                                         ; DATA XREF: _do_ssh2_authconn+421Fo
.data:00005B74 $SG93818        db 'Server refused to start a shell/command',0
.data:00005B74                                         ; DATA XREF: _do_ssh2_authconn:loc_16070o
.data:00005B9C $SG93823        db 'Started a shell/command',0
.data:00005B9C                                         ; DATA XREF: _do_ssh2_authconn:loc_1609Eo
.data:00005BB4 $SG93838        db 'Strange packet received: type %d',0
.data:00005BB4                                         ; DATA XREF: _do_ssh2_authconn+4373o
.data:00005BD5                 align 4
.data:00005BD8 $SG93863        db 'Received disconnect message (%s)',0
.data:00005BD8                                         ; DATA XREF: _ssh2_msg_disconnect+60o
.data:00005BF9                 align 4
.data:00005BFC $SG93865        db 'Received disconnect message (unknown type %d)',0
.data:00005BFC                                         ; DATA XREF: _ssh2_msg_disconnect+76o
.data:00005C2A                 align 4
.data:00005C2C $SG93866        db 'Disconnection message text: %.*s',0
.data:00005C2C                                         ; DATA XREF: _ssh2_msg_disconnect+B0o
.data:00005C4D                 align 10h
.data:00005C50 $SG93867        db 'unknown',0          ; DATA XREF: _ssh2_msg_disconnect:loc_1FA09o
.data:00005C58 $SG93868        db 'Server sent disconnect message',0Ah
.data:00005C58                                         ; DATA XREF: _ssh2_msg_disconnect+108o
.data:00005C58                 db 'type %d (%s):',0Ah
.data:00005C58                 db '"%.*s"',0
.data:00005C8C $SG93877        db 'Remote debug message: %.*s',0
.data:00005C8C                                         ; DATA XREF: _ssh2_msg_debug+45o
.data:00005CA7                 align 4
.data:00005CA8 $SG93891        db 'Server protocol violation: unexpected %s packet',0
.data:00005CA8                                         ; DATA XREF: _ssh2_msg_unexpected+2Fo
.data:00005CD8 $SG93924        db 'timeout',0          ; DATA XREF: _ssh2_timer+61o
.data:00005CE0 $SG93940        db 'too much data received',0 ; DATA XREF: _ssh2_protocol+71o
.data:00005CF7                 align 4
.data:00005CF8 $SG94120        db 'timeout shortened',0 ; DATA XREF: _ssh_reconfig+E7o
.data:00005D0A                 align 4
.data:00005D0C $SG94125        db 'data limit lowered',0
.data:00005D0C                                         ; DATA XREF: _ssh_reconfig:loc_205FDo
.data:00005D1F                 align 10h
.data:00005D20 $SG94127        db 'compression setting changed',0
.data:00005D20                                         ; DATA XREF: _ssh_reconfig+1B4o
.data:00005D3C $SG94132        db 'cipher settings changed',0
.data:00005D3C                                         ; DATA XREF: _ssh_reconfig+207o
.data:00005D54 $SG94134        db 'cipher settings changed',0
.data:00005D54                                         ; DATA XREF: _ssh_reconfig+23Co
.data:00005D6C ; char _SG94196[]
.data:00005D6C $SG94196        db 'window-change',0    ; DATA XREF: _ssh_size+DAo
.data:00005D7A                 align 4
.data:00005D7C $SG94203        db 'IGNORE message',0   ; DATA XREF: .rdata:`ssh_get_specials'::`2'::ssh1_ignore_specialo
.data:00005D8B                 align 4
.data:00005D8C $SG94206        db 'IGNORE message',0   ; DATA XREF: .rdata:`ssh_get_specials'::`2'::ssh2_ignore_specialo
.data:00005D9B                 align 4
.data:00005D9C $SG94209        db 'Repeat key exchange',0
.data:00005D9C                                         ; DATA XREF: .rdata:`ssh_get_specials'::`2'::ssh2_rekey_specialo
.data:00005DB0 $SG94213        db 'Break',0            ; DATA XREF: .rdata:000065DCo
.data:00005DB6                 align 4
.data:00005DB8 $SG94214        db 'SIGINT (Interrupt)',0 ; DATA XREF: .rdata:000065E4o
.data:00005DCB                 align 4
.data:00005DCC $SG94215        db 'SIGTERM (Terminate)',0 ; DATA XREF: .rdata:000065ECo
.data:00005DE0 $SG94216        db 'SIGKILL (Kill)',0   ; DATA XREF: .rdata:000065F4o
.data:00005DEF                 align 10h
.data:00005DF0 $SG94217        db 'SIGQUIT (Quit)',0   ; DATA XREF: .rdata:000065FCo
.data:00005DFF                 align 10h
.data:00005E00 $SG94218        db 'SIGHUP (Hangup)',0  ; DATA XREF: .rdata:00006604o
.data:00005E10 $SG94219        db 'More signals',0     ; DATA XREF: .rdata:0000660Co
.data:00005E1D                 align 10h
.data:00005E20 $SG94220        db 'SIGABRT',0          ; DATA XREF: .rdata:00006614o
.data:00005E28 $SG94221        db 'SIGALRM',0          ; DATA XREF: .rdata:0000661Co
.data:00005E30 $SG94222        db 'SIGFPE',0           ; DATA XREF: .rdata:00006624o
.data:00005E37                 align 4
.data:00005E38 $SG94223        db 'SIGILL',0           ; DATA XREF: .rdata:0000662Co
.data:00005E3F                 align 10h
.data:00005E40 $SG94224        db 'SIGPIPE',0          ; DATA XREF: .rdata:00006634o
.data:00005E48 $SG94225        db 'SIGSEGV',0          ; DATA XREF: .rdata:0000663Co
.data:00005E50 $SG94226        db 'SIGUSR1',0          ; DATA XREF: .rdata:00006644o
.data:00005E58 $SG94227        db 'SIGUSR2',0          ; DATA XREF: .rdata:0000664Co
.data:00005E60 ; wchar_t _SG94243
.data:00005E60 $SG94243:                               ; DATA XREF: _ssh_get_specials+48o
.data:00005E60                 unicode 0, <..\..\..\ssh.c>,0
.data:00005E7E                 align 10h
.data:00005E80 ; wchar_t _SG94244
.data:00005E80 $SG94244:                               ; DATA XREF: _ssh_get_specials+4Do
.data:00005E80                 unicode 0, <(i + lenof(ssh1_ignore_special)) >
.data:00005E80                 dw 3Ch
.data:00005E80                 unicode 0, <= lenof(ssh_specials)>,0
.data:00005EF0 ; wchar_t _SG94252
.data:00005EF0 $SG94252:                               ; DATA XREF: _ssh_get_specials+B3o
.data:00005EF0                 unicode 0, <..\..\..\ssh.c>,0
.data:00005F0E                 align 10h
.data:00005F10 ; wchar_t _SG94253
.data:00005F10 $SG94253:                               ; DATA XREF: _ssh_get_specials+B8o
.data:00005F10                 unicode 0, <(i + lenof(ssh2_ignore_special)) >
.data:00005F10                 dw 3Ch
.data:00005F10                 unicode 0, <= lenof(ssh_specials)>,0
.data:00005F80 ; wchar_t _SG94259
.data:00005F80 $SG94259:                               ; DATA XREF: _ssh_get_specials+113o
.data:00005F80                 unicode 0, <..\..\..\ssh.c>,0
.data:00005F9E                 align 10h
.data:00005FA0 ; wchar_t _SG94260
.data:00005FA0 $SG94260:                               ; DATA XREF: _ssh_get_specials+118o
.data:00005FA0                 unicode 0, <(i + lenof(ssh2_rekey_special)) >
.data:00005FA0                 dw 3Ch
.data:00005FA0                 unicode 0, <= lenof(ssh_specials)>,0
.data:0000600E                 align 10h
.data:00006010 ; wchar_t _SG94266
.data:00006010 $SG94266:                               ; DATA XREF: _ssh_get_specials+168o
.data:00006010                 unicode 0, <..\..\..\ssh.c>,0
.data:0000602E                 align 10h
.data:00006030 ; wchar_t _SG94267
.data:00006030 $SG94267:                               ; DATA XREF: _ssh_get_specials+16Do
.data:00006030                 unicode 0, <(i + lenof(ssh2_session_specials)) >
.data:00006030                 dw 3Ch
.data:00006030                 unicode 0, <= lenof(ssh_specials)>,0
.data:000060A4 ; wchar_t _SG94273
.data:000060A4 $SG94273:                               ; DATA XREF: _ssh_get_specials+1BAo
.data:000060A4                 unicode 0, <..\..\..\ssh.c>,0
.data:000060C2                 align 4
.data:000060C4 $SG94291        db 'Sent EOF message',0 ; DATA XREF: _ssh_special:loc_20CA0o
.data:000060D5                 align 4
.data:000060D8 ; wchar_t _SG94274
.data:000060D8 $SG94274:                               ; DATA XREF: _ssh_get_specials+1BFo
.data:000060D8                 unicode 0, <(i + lenof(specials_end)) >
.data:000060D8                 dw 3Ch
.data:000060D8                 unicode 0, <= lenof(ssh_specials)>,0
.data:0000613A                 align 4
.data:0000613C $SG94306        db 'at user request',0  ; DATA XREF: _ssh_special+17Ao
.data:0000614C $SG94312        db 'Unable to send BREAK signal in SSH-1',0
.data:0000614C                                         ; DATA XREF: _ssh_special+1C3o
.data:00006171                 align 4
.data:00006174 ; char _SG94317[]
.data:00006174 $SG94317        db 'break',0            ; DATA XREF: _ssh_special+1ECo
.data:0000617A                 align 4
.data:0000617C $SG94322        db 'ABRT',0             ; DATA XREF: _ssh_special+236o
.data:00006181                 align 4
.data:00006184 $SG94324        db 'ALRM',0             ; DATA XREF: _ssh_special+243o
.data:00006189                 align 4
.data:0000618C $SG94326        db 'FPE',0              ; DATA XREF: _ssh_special+250o
.data:00006190 $SG94328        db 'HUP',0              ; DATA XREF: _ssh_special+25Do
.data:00006194 $SG94330        db 'ILL',0              ; DATA XREF: _ssh_special+26Ao
.data:00006198 $SG94332        db 'INT',0              ; DATA XREF: _ssh_special+277o
.data:0000619C $SG94334        db 'KILL',0             ; DATA XREF: _ssh_special+284o
.data:000061A1                 align 4
.data:000061A4 $SG94336        db 'PIPE',0             ; DATA XREF: _ssh_special+291o
.data:000061A9                 align 4
.data:000061AC $SG94338        db 'QUIT',0             ; DATA XREF: _ssh_special+29Eo
.data:000061B1                 align 4
.data:000061B4 $SG94340        db 'SEGV',0             ; DATA XREF: _ssh_special+2ABo
.data:000061B9                 align 4
.data:000061BC $SG94342        db 'TERM',0             ; DATA XREF: _ssh_special+2B8o
.data:000061C1                 align 4
.data:000061C4 $SG94344        db 'USR1',0             ; DATA XREF: _ssh_special+2C5o
.data:000061C9                 align 4
.data:000061CC $SG94346        db 'USR2',0             ; DATA XREF: _ssh_special+2D2o
.data:000061D1                 align 4
.data:000061D4 ; char _SG94351[]
.data:000061D4 $SG94351        db 'signal',0           ; DATA XREF: _ssh_special+2FBo
.data:000061DB                 align 4
.data:000061DC $SG94352        db 'Sent signal SIG%s',0 ; DATA XREF: _ssh_special+339o
.data:000061EE                 align 10h
.data:000061F0 $SG94422        db 'Opening connection to %s:%d for %s',0
.data:000061F0                                         ; DATA XREF: _ssh_send_port_open+31o
.data:00006213                 align 4
.data:00006214 ; char _SG94425[]
.data:00006214 $SG94425        db 'direct-tcpip',0     ; DATA XREF: _ssh_send_port_open:loc_212BDo
.data:00006221                 align 4
.data:00006224 ; char _SG94427[]
.data:00006224 $SG94427        db '0.0.0.0',0          ; DATA XREF: _ssh_send_port_open+C4o
.data:0000622C $SG94491        db 'ssh',0              ; DATA XREF: .data:00006270o
.data:00006230                 public _ssh_backend
.data:00006230 _ssh_backend    dd offset _ssh_init     ; DATA XREF: _do_ssh_init+55Eo
.data:00006230                                         ; _do_ssh_connection_init+402o
.data:00006234                 dd offset _ssh_free
.data:00006238                 dd offset _ssh_reconfig
.data:0000623C                 dd offset _ssh_send
.data:00006240                 dd offset _ssh_sendbuffer
.data:00006244                 dd offset _ssh_size
.data:00006248                 dd offset _ssh_special
.data:0000624C                 dd offset _ssh_get_specials
.data:00006250                 dd offset _ssh_connected
.data:00006254                 dd offset _ssh_return_exitcode
.data:00006258                 dd offset _ssh_sendok
.data:0000625C                 dd offset _ssh_ldisc
.data:00006260                 dd offset _ssh_provide_ldisc
.data:00006264                 dd offset _ssh_provide_logctx
.data:00006268                 dd offset _ssh_unthrottle
.data:0000626C                 dd offset _ssh_cfg_info
.data:00006270                 dd offset $SG94491      ; "ssh"
.data:00006274                 db    3
.data:00006275                 db    0
.data:00006276                 db    0
.data:00006277                 db    0
.data:00006278                 db  16h
.data:00006279                 db    0
.data:0000627A                 db    0
.data:0000627B                 db    0
.data:0000627B _data           ends
.data:0000627B
.rdata:0000627C ; ===========================================================================
.rdata:0000627C
.rdata:0000627C ; Segment type: Pure data
.rdata:0000627C ; Segment permissions: Read
.rdata:0000627C ; Segment alignment 'qword' can not be represented in assembly
.rdata:0000627C _rdata          segment para public 'DATA' use32
.rdata:0000627C                 assume cs:_rdata
.rdata:0000627C                 ;org 627Ch
.rdata:0000627C _ssh2_disconnect_reasons dd 0           ; DATA XREF: _ssh2_msg_disconnect+58r
.rdata:0000627C                                         ; _ssh2_msg_disconnect+E5r
.rdata:00006280                 dd offset $SG87294      ; "host not allowed to connect"
.rdata:00006284                 dd offset $SG87295      ; "protocol error"
.rdata:00006288                 dd offset $SG87296
.rdata:0000628C                 dd offset $SG87297
.rdata:00006290                 dd offset $SG87298      ; "MAC error"
.rdata:00006294                 dd offset $SG87299      ; "compression error"
.rdata:00006298                 dd offset $SG87300      ; "service not available"
.rdata:0000629C                 dd offset $SG87301      ; "protocol version not supported"
.rdata:000062A0                 dd offset $SG87302      ; "host key not verifiable"
.rdata:000062A4                 dd offset $SG87303      ; "connection lost"
.rdata:000062A8                 dd offset $SG87304      ; "by application"
.rdata:000062AC                 dd offset $SG87305      ; "too many connections"
.rdata:000062B0                 dd offset $SG87306      ; "auth cancelled by user"
.rdata:000062B4                 dd offset $SG87307      ; "no more auth methods available"
.rdata:000062B8                 dd offset $SG87308      ; "illegal user name"
.rdata:000062BC _ssh_ttymodes   dd offset $SG87317      ; DATA XREF: _ssh2_send_ttymode+31r
.rdata:000062BC                                         ; _ssh1_send_ttymode+31r
.rdata:000062BC                                         ; "INTR"
.rdata:000062C0 byte_62C0       db 1                    ; DATA XREF: _ssh2_send_ttymode+9Er
.rdata:000062C0                                         ; _ssh1_send_ttymode+9Er
.rdata:000062C1                 align 4
.rdata:000062C4 dword_62C4      dd 0                    ; DATA XREF: _ssh2_send_ttymode+61r
.rdata:000062C4                                         ; _ssh1_send_ttymode+61r
.rdata:000062C8                 dd offset $SG87318      ; "QUIT"
.rdata:000062CC                 db    2
.rdata:000062CD                 db    0
.rdata:000062CE                 db    0
.rdata:000062CF                 db    0
.rdata:000062D0                 db    0
.rdata:000062D1                 db    0
.rdata:000062D2                 db    0
.rdata:000062D3                 db    0
.rdata:000062D4                 dd offset $SG87319      ; "ERASE"
.rdata:000062D8                 db    3
.rdata:000062D9                 db    0
.rdata:000062DA                 db    0
.rdata:000062DB                 db    0
.rdata:000062DC                 db    0
.rdata:000062DD                 db    0
.rdata:000062DE                 db    0
.rdata:000062DF                 db    0
.rdata:000062E0                 dd offset $SG87320      ; "KILL"
.rdata:000062E4                 db    4
.rdata:000062E5                 db    0
.rdata:000062E6                 db    0
.rdata:000062E7                 db    0
.rdata:000062E8                 db    0
.rdata:000062E9                 db    0
.rdata:000062EA                 db    0
.rdata:000062EB                 db    0
.rdata:000062EC                 dd offset $SG87321      ; "EOF"
.rdata:000062F0                 db    5
.rdata:000062F1                 db    0
.rdata:000062F2                 db    0
.rdata:000062F3                 db    0
.rdata:000062F4                 db    0
.rdata:000062F5                 db    0
.rdata:000062F6                 db    0
.rdata:000062F7                 db    0
.rdata:000062F8                 dd offset $SG87322      ; "EOL"
.rdata:000062FC                 db    6
.rdata:000062FD                 db    0
.rdata:000062FE                 db    0
.rdata:000062FF                 db    0
.rdata:00006300                 db    0
.rdata:00006301                 db    0
.rdata:00006302                 db    0
.rdata:00006303                 db    0
.rdata:00006304                 dd offset $SG87323      ; "EOL2"
.rdata:00006308                 db    7
.rdata:00006309                 db    0
.rdata:0000630A                 db    0
.rdata:0000630B                 db    0
.rdata:0000630C                 db    0
.rdata:0000630D                 db    0
.rdata:0000630E                 db    0
.rdata:0000630F                 db    0
.rdata:00006310                 dd offset $SG87324      ; "START"
.rdata:00006314                 db    8
.rdata:00006315                 db    0
.rdata:00006316                 db    0
.rdata:00006317                 db    0
.rdata:00006318                 db    0
.rdata:00006319                 db    0
.rdata:0000631A                 db    0
.rdata:0000631B                 db    0
.rdata:0000631C                 dd offset $SG87325      ; "STOP"
.rdata:00006320                 db    9
.rdata:00006321                 db    0
.rdata:00006322                 db    0
.rdata:00006323                 db    0
.rdata:00006324                 db    0
.rdata:00006325                 db    0
.rdata:00006326                 db    0
.rdata:00006327                 db    0
.rdata:00006328                 dd offset $SG87326      ; "SUSP"
.rdata:0000632C                 db  0Ah
.rdata:0000632D                 db    0
.rdata:0000632E                 db    0
.rdata:0000632F                 db    0
.rdata:00006330                 db    0
.rdata:00006331                 db    0
.rdata:00006332                 db    0
.rdata:00006333                 db    0
.rdata:00006334                 dd offset $SG87327      ; "DSUSP"
.rdata:00006338                 db  0Bh
.rdata:00006339                 db    0
.rdata:0000633A                 db    0
.rdata:0000633B                 db    0
.rdata:0000633C                 db    0
.rdata:0000633D                 db    0
.rdata:0000633E                 db    0
.rdata:0000633F                 db    0
.rdata:00006340                 dd offset $SG87328      ; "REPRINT"
.rdata:00006344                 db  0Ch
.rdata:00006345                 db    0
.rdata:00006346                 db    0
.rdata:00006347                 db    0
.rdata:00006348                 db    0
.rdata:00006349                 db    0
.rdata:0000634A                 db    0
.rdata:0000634B                 db    0
.rdata:0000634C                 dd offset $SG87329      ; "WERASE"
.rdata:00006350                 db  0Dh
.rdata:00006351                 db    0
.rdata:00006352                 db    0
.rdata:00006353                 db    0
.rdata:00006354                 db    0
.rdata:00006355                 db    0
.rdata:00006356                 db    0
.rdata:00006357                 db    0
.rdata:00006358                 dd offset $SG87330      ; "LNEXT"
.rdata:0000635C                 db  0Eh
.rdata:0000635D                 db    0
.rdata:0000635E                 db    0
.rdata:0000635F                 db    0
.rdata:00006360                 db    0
.rdata:00006361                 db    0
.rdata:00006362                 db    0
.rdata:00006363                 db    0
.rdata:00006364                 dd offset $SG87331      ; "FLUSH"
.rdata:00006368                 db  0Fh
.rdata:00006369                 db    0
.rdata:0000636A                 db    0
.rdata:0000636B                 db    0
.rdata:0000636C                 db    0
.rdata:0000636D                 db    0
.rdata:0000636E                 db    0
.rdata:0000636F                 db    0
.rdata:00006370                 dd offset $SG87332      ; "SWTCH"
.rdata:00006374                 db  10h
.rdata:00006375                 db    0
.rdata:00006376                 db    0
.rdata:00006377                 db    0
.rdata:00006378                 db    0
.rdata:00006379                 db    0
.rdata:0000637A                 db    0
.rdata:0000637B                 db    0
.rdata:0000637C                 dd offset $SG87333      ; "STATUS"
.rdata:00006380                 db  11h
.rdata:00006381                 db    0
.rdata:00006382                 db    0
.rdata:00006383                 db    0
.rdata:00006384                 db    0
.rdata:00006385                 db    0
.rdata:00006386                 db    0
.rdata:00006387                 db    0
.rdata:00006388                 dd offset $SG87334      ; "DISCARD"
.rdata:0000638C                 db  12h
.rdata:0000638D                 db    0
.rdata:0000638E                 db    0
.rdata:0000638F                 db    0
.rdata:00006390                 db    0
.rdata:00006391                 db    0
.rdata:00006392                 db    0
.rdata:00006393                 db    0
.rdata:00006394                 dd offset $SG87335      ; "IGNPAR"
.rdata:00006398                 db  1Eh
.rdata:00006399                 db    0
.rdata:0000639A                 db    0
.rdata:0000639B                 db    0
.rdata:0000639C                 db    1
.rdata:0000639D                 db    0
.rdata:0000639E                 db    0
.rdata:0000639F                 db    0
.rdata:000063A0                 dd offset $SG87336      ; "PARMRK"
.rdata:000063A4                 db  1Fh
.rdata:000063A5                 db    0
.rdata:000063A6                 db    0
.rdata:000063A7                 db    0
.rdata:000063A8                 db    1
.rdata:000063A9                 db    0
.rdata:000063AA                 db    0
.rdata:000063AB                 db    0
.rdata:000063AC                 dd offset $SG87337      ; "INPCK"
.rdata:000063B0                 dd offset $SG87295+4    ; "ocol error"
.rdata:000063B4                 db    1
.rdata:000063B5                 db    0
.rdata:000063B6                 db    0
.rdata:000063B7                 db    0
.rdata:000063B8                 dd offset $SG87338      ; "ISTRIP"
.rdata:000063BC                 dd offset $SG87295+5    ; "col error"
.rdata:000063C0                 db    1
.rdata:000063C1                 db    0
.rdata:000063C2                 db    0
.rdata:000063C3                 db    0
.rdata:000063C4                 dd offset $SG87339      ; "INLCR"
.rdata:000063C8                 dd offset $SG87295+6    ; "ol error"
.rdata:000063CC                 db    1
.rdata:000063CD                 db    0
.rdata:000063CE                 db    0
.rdata:000063CF                 db    0
.rdata:000063D0                 dd offset $SG87340      ; "IGNCR"
.rdata:000063D4                 dd offset $SG87295+7    ; "l error"
.rdata:000063D8                 db    1
.rdata:000063D9                 db    0
.rdata:000063DA                 db    0
.rdata:000063DB                 db    0
.rdata:000063DC                 dd offset $SG87341      ; "ICRNL"
.rdata:000063E0                 dd offset $SG87295+8    ; " error"
.rdata:000063E4                 db    1
.rdata:000063E5                 db    0
.rdata:000063E6                 db    0
.rdata:000063E7                 db    0
.rdata:000063E8                 dd offset $SG87342      ; "IUCLC"
.rdata:000063EC                 dd offset $SG87295+9    ; "error"
.rdata:000063F0                 db    1
.rdata:000063F1                 db    0
.rdata:000063F2                 db    0
.rdata:000063F3                 db    0
.rdata:000063F4                 dd offset $SG87343      ; "IXON"
.rdata:000063F8                 dd offset $SG87295+0Ah  ; "rror"
.rdata:000063FC                 db    1
.rdata:000063FD                 db    0
.rdata:000063FE                 db    0
.rdata:000063FF                 db    0
.rdata:00006400                 dd offset $SG87344      ; "IXANY"
.rdata:00006404                 dd offset $SG87295+0Bh  ; "ror"
.rdata:00006408                 db    1
.rdata:00006409                 db    0
.rdata:0000640A                 db    0
.rdata:0000640B                 db    0
.rdata:0000640C                 dd offset $SG87345      ; "IXOFF"
.rdata:00006410                 dd offset $SG87295+0Ch  ; "or"
.rdata:00006414                 db    1
.rdata:00006415                 db    0
.rdata:00006416                 db    0
.rdata:00006417                 db    0
.rdata:00006418                 dd offset $SG87346      ; "IMAXBEL"
.rdata:0000641C                 dd offset $SG87295+0Dh  ; "r"
.rdata:00006420                 db    1
.rdata:00006421                 db    0
.rdata:00006422                 db    0
.rdata:00006423                 db    0
.rdata:00006424                 dd offset $SG87347      ; "ISIG"
.rdata:00006428                 dd offset aEyExchangeFail+5 ; "change failed"
.rdata:0000642C                 db    1
.rdata:0000642D                 db    0
.rdata:0000642E                 db    0
.rdata:0000642F                 db    0
.rdata:00006430                 dd offset $SG87348      ; "ICANON"
.rdata:00006434                 dd offset aEyExchangeFail+6 ; "hange failed"
.rdata:00006438                 db    1
.rdata:00006439                 db    0
.rdata:0000643A                 db    0
.rdata:0000643B                 db    0
.rdata:0000643C                 dd offset $SG87349      ; "XCASE"
.rdata:00006440                 dd offset aEyExchangeFail+7 ; "ange failed"
.rdata:00006444                 db    1
.rdata:00006445                 db    0
.rdata:00006446                 db    0
.rdata:00006447                 db    0
.rdata:00006448                 dd offset $SG87350      ; "ECHO"
.rdata:0000644C                 dd offset aEyExchangeFail+8 ; "nge failed"
.rdata:00006450                 db    1
.rdata:00006451                 db    0
.rdata:00006452                 db    0
.rdata:00006453                 db    0
.rdata:00006454                 dd offset $SG87351      ; "ECHOE"
.rdata:00006458                 dd offset aEyExchangeFail+9 ; "ge failed"
.rdata:0000645C                 db    1
.rdata:0000645D                 db    0
.rdata:0000645E                 db    0
.rdata:0000645F                 db    0
.rdata:00006460                 dd offset $SG87352      ; "ECHOK"
.rdata:00006464                 dd offset aEyExchangeFail+0Ah ; "e failed"
.rdata:00006468                 db    1
.rdata:00006469                 db    0
.rdata:0000646A                 db    0
.rdata:0000646B                 db    0
.rdata:0000646C                 dd offset $SG87353      ; "ECHONL"
.rdata:00006470                 dd offset aEyExchangeFail+0Bh ; " failed"
.rdata:00006474                 db    1
.rdata:00006475                 db    0
.rdata:00006476                 db    0
.rdata:00006477                 db    0
.rdata:00006478                 dd offset $SG87354      ; "NOFLSH"
.rdata:0000647C                 dd offset aEyExchangeFail+0Ch ; "failed"
.rdata:00006480                 db    1
.rdata:00006481                 db    0
.rdata:00006482                 db    0
.rdata:00006483                 db    0
.rdata:00006484                 dd offset $SG87355      ; "TOSTOP"
.rdata:00006488                 dd offset aEyExchangeFail+0Dh ; "ailed"
.rdata:0000648C                 db    1
.rdata:0000648D                 db    0
.rdata:0000648E                 db    0
.rdata:0000648F                 db    0
.rdata:00006490                 dd offset $SG87356      ; "IEXTEN"
.rdata:00006494                 dd offset aEyExchangeFail+0Eh ; "iled"
.rdata:00006498                 db    1
.rdata:00006499                 db    0
.rdata:0000649A                 db    0
.rdata:0000649B                 db    0
.rdata:0000649C                 dd offset $SG87357      ; "ECHOCTL"
.rdata:000064A0                 dd offset aEyExchangeFail+0Fh ; "led"
.rdata:000064A4                 db    1
.rdata:000064A5                 db    0
.rdata:000064A6                 db    0
.rdata:000064A7                 db    0
.rdata:000064A8                 dd offset $SG87358      ; "ECHOKE"
.rdata:000064AC                 dd offset aEyExchangeFail+10h ; "ed"
.rdata:000064B0                 db    1
.rdata:000064B1                 db    0
.rdata:000064B2                 db    0
.rdata:000064B3                 db    0
.rdata:000064B4                 dd offset $SG87359      ; "PENDIN"
.rdata:000064B8                 dd offset aEyExchangeFail+11h ; "d"
.rdata:000064BC                 db    1
.rdata:000064BD                 db    0
.rdata:000064BE                 db    0
.rdata:000064BF                 db    0
.rdata:000064C0                 dd offset $SG87360      ; "OPOST"
.rdata:000064C4                 dd offset aAuthentication+2 ; "uthentication failed"
.rdata:000064C8                 db    1
.rdata:000064C9                 db    0
.rdata:000064CA                 db    0
.rdata:000064CB                 db    0
.rdata:000064CC                 dd offset $SG87361      ; "OLCUC"
.rdata:000064D0                 dd offset aAuthentication+3 ; "thentication failed"
.rdata:000064D4                 db    1
.rdata:000064D5                 db    0
.rdata:000064D6                 db    0
.rdata:000064D7                 db    0
.rdata:000064D8                 dd offset $SG87362      ; "ONLCR"
.rdata:000064DC                 dd offset aAuthentication+4 ; "hentication failed"
.rdata:000064E0                 db    1
.rdata:000064E1                 db    0
.rdata:000064E2                 db    0
.rdata:000064E3                 db    0
.rdata:000064E4                 dd offset $SG87363      ; "OCRNL"
.rdata:000064E8                 dd offset aAuthentication+5 ; "entication failed"
.rdata:000064EC                 db    1
.rdata:000064ED                 db    0
.rdata:000064EE                 db    0
.rdata:000064EF                 db    0
.rdata:000064F0                 dd offset $SG87364      ; "ONOCR"
.rdata:000064F4                 dd offset aAuthentication+6 ; "ntication failed"
.rdata:000064F8                 db    1
.rdata:000064F9                 db    0
.rdata:000064FA                 db    0
.rdata:000064FB                 db    0
.rdata:000064FC                 dd offset $SG87365      ; "ONLRET"
.rdata:00006500                 dd offset aAuthentication+7 ; "tication failed"
.rdata:00006504                 db    1
.rdata:00006505                 db    0
.rdata:00006506                 db    0
.rdata:00006507                 db    0
.rdata:00006508                 dd offset $SG87366      ; "CS7"
.rdata:0000650C                 dd offset aAuthentication+16h ; ""
.rdata:00006510                 db    1
.rdata:00006511                 db    0
.rdata:00006512                 db    0
.rdata:00006513                 db    0
.rdata:00006514                 dd offset $SG87367      ; "CS8"
.rdata:00006518                 dd offset unk_5B
.rdata:0000651C                 db    1
.rdata:0000651D                 db    0
.rdata:0000651E                 db    0
.rdata:0000651F                 db    0
.rdata:00006520                 dd offset $SG87368      ; "PARENB"
.rdata:00006524                 dd offset $SG87298      ; "MAC error"
.rdata:00006528                 db    1
.rdata:00006529                 db    0
.rdata:0000652A                 db    0
.rdata:0000652B                 db    0
.rdata:0000652C                 dd offset $SG87369      ; "PARODD"
.rdata:00006530                 dd offset $SG87298+1    ; "AC error"
.rdata:00006534                 db    1
.rdata:00006535                 db    0
.rdata:00006536                 db    0
.rdata:00006537                 db    0
.rdata:00006538 _ssh_comp_none  dd offset $SG87710      ; DATA XREF: .data:00000C30o
.rdata:00006538                                         ; _do_ssh2_transport+589o
.rdata:0000653C                 align 10h
.rdata:00006540                 dd offset _ssh_comp_none_init
.rdata:00006544                 dd offset _ssh_comp_none_cleanup
.rdata:00006548                 dd offset _ssh_comp_none_block
.rdata:0000654C                 dd offset _ssh_comp_none_init
.rdata:00006550                 dd offset _ssh_comp_none_cleanup
.rdata:00006554                 dd offset _ssh_comp_none_block
.rdata:00006558                 dd offset _ssh_comp_none_disable
.rdata:0000655C                 align 10h
.rdata:00006560 ; char `do_ssh_init'::`2'::protoname
.rdata:00006560 ?protoname@?1??do_ssh_init@@9@9 db 53h  ; DATA XREF: _do_ssh_init+D4r
.rdata:00006560                                         ; _do_ssh_init+E9r ...
.rdata:00006561                 db  53h ; S
.rdata:00006562                 db  48h ; H
.rdata:00006563                 db  2Dh ; -
.rdata:00006564                 db    0
.rdata:00006565                 db    0
.rdata:00006566                 db    0
.rdata:00006567                 db    0
.rdata:00006568 ; char `do_ssh_connection_init'::`2'::protoname
.rdata:00006568 ?protoname@?1??do_ssh_connection_init@@9@9 db 53h
.rdata:00006568                                         ; DATA XREF: _do_ssh_connection_init+D1r
.rdata:00006568                                         ; _do_ssh_connection_init+E6r ...
.rdata:00006569 aShconnection@p db 'SHCONNECTION@putty.projects.tartarus.org-',0
.rdata:00006593                 align 4
.rdata:00006594 ; `connect_to_host'::`2'::fn_table
.rdata:00006594 ?fn_table@?1??connect_to_host@@9@9 dd offset _ssh_socket_log
.rdata:00006594                                         ; DATA XREF: _connect_to_host+114o
.rdata:00006598                 dd offset _ssh_closing
.rdata:0000659C                 dd offset _ssh_receive
.rdata:000065A0                 dd offset _ssh_sent
.rdata:000065A4                 align 8
.rdata:000065A8 ; `ssh2_msg_channel_open_failure'::`2'::reasons
.rdata:000065A8 ?reasons@?1??ssh2_msg_channel_open_failure@@9@9 dd offset $SG92490
.rdata:000065A8                                         ; DATA XREF: _ssh2_msg_channel_open_failure+D6r
.rdata:000065A8                                         ; "<unknown reason code>"
.rdata:000065AC                 dd offset $SG92491      ; "Administratively prohibited"
.rdata:000065B0                 dd offset $SG92492      ; "Connect failed"
.rdata:000065B4                 dd offset $SG92493      ; "Unknown channel type"
.rdata:000065B8                 dd offset $SG92494      ; "Resource shortage"
.rdata:000065BC ; `ssh_get_specials'::`2'::ssh1_ignore_special
.rdata:000065BC ?ssh1_ignore_special@?1??ssh_get_specials@@9@9 dd offset $SG94203
.rdata:000065BC                                         ; DATA XREF: _ssh_get_specials+5Co
.rdata:000065BC                                         ; "IGNORE message"
.rdata:000065C0                 db    6
.rdata:000065C1                 db    0
.rdata:000065C2                 db    0
.rdata:000065C3                 db    0
.rdata:000065C4 ; `ssh_get_specials'::`2'::ssh2_ignore_special
.rdata:000065C4 ?ssh2_ignore_special@?1??ssh_get_specials@@9@9 dd offset $SG94206
.rdata:000065C4                                         ; DATA XREF: _ssh_get_specials+C7o
.rdata:000065C4                                         ; "IGNORE message"
.rdata:000065C8                 db    6
.rdata:000065C9                 db    0
.rdata:000065CA                 db    0
.rdata:000065CB                 db    0
.rdata:000065CC ; `ssh_get_specials'::`2'::ssh2_rekey_special
.rdata:000065CC ?ssh2_rekey_special@?1??ssh_get_specials@@9@9 dd offset $SG94209
.rdata:000065CC                                         ; DATA XREF: _ssh_get_specials+127o
.rdata:000065CC                                         ; "Repeat key exchange"
.rdata:000065D0                 db  11h
.rdata:000065D1                 db    0
.rdata:000065D2                 db    0
.rdata:000065D3                 db    0
.rdata:000065D4 ; `ssh_get_specials'::`2'::ssh2_session_specials
.rdata:000065D4 ?ssh2_session_specials@?1??ssh_get_specials@@9@9 db    0
.rdata:000065D4                                         ; DATA XREF: _ssh_get_specials+17Fo
.rdata:000065D5                 db    0
.rdata:000065D6                 db    0
.rdata:000065D7                 db    0
.rdata:000065D8                 db  1Fh
.rdata:000065D9                 db    0
.rdata:000065DA                 db    0
.rdata:000065DB                 db    0
.rdata:000065DC                 dd offset $SG94213      ; "Break"
.rdata:000065E0                 db    1
.rdata:000065E1                 db    0
.rdata:000065E2                 db    0
.rdata:000065E3                 db    0
.rdata:000065E4                 dd offset $SG94214      ; "SIGINT (Interrupt)"
.rdata:000065E8                 db  17h
.rdata:000065E9                 db    0
.rdata:000065EA                 db    0
.rdata:000065EB                 db    0
.rdata:000065EC                 dd offset $SG94215      ; "SIGTERM (Terminate)"
.rdata:000065F0                 db  1Ch
.rdata:000065F1                 db    0
.rdata:000065F2                 db    0
.rdata:000065F3                 db    0
.rdata:000065F4                 dd offset $SG94216      ; "SIGKILL (Kill)"
.rdata:000065F8                 db  18h
.rdata:000065F9                 db    0
.rdata:000065FA                 db    0
.rdata:000065FB                 db    0
.rdata:000065FC                 dd offset $SG94217      ; "SIGQUIT (Quit)"
.rdata:00006600                 db  1Ah
.rdata:00006601                 db    0
.rdata:00006602                 db    0
.rdata:00006603                 db    0
.rdata:00006604                 dd offset $SG94218      ; "SIGHUP (Hangup)"
.rdata:00006608                 db  15h
.rdata:00006609                 db    0
.rdata:0000660A                 db    0
.rdata:0000660B                 db    0
.rdata:0000660C                 dd offset $SG94219      ; "More signals"
.rdata:00006610                 dd offset $SG87295+4    ; "ocol error"
.rdata:00006614                 dd offset $SG94220      ; "SIGABRT"
.rdata:00006618                 db  12h
.rdata:00006619                 db    0
.rdata:0000661A                 db    0
.rdata:0000661B                 db    0
.rdata:0000661C                 dd offset $SG94221      ; "SIGALRM"
.rdata:00006620                 db  13h
.rdata:00006621                 db    0
.rdata:00006622                 db    0
.rdata:00006623                 db    0
.rdata:00006624                 dd offset $SG94222      ; "SIGFPE"
.rdata:00006628                 db  14h
.rdata:00006629                 db    0
.rdata:0000662A                 db    0
.rdata:0000662B                 db    0
.rdata:0000662C                 dd offset $SG94223      ; "SIGILL"
.rdata:00006630                 db  16h
.rdata:00006631                 db    0
.rdata:00006632                 db    0
.rdata:00006633                 db    0
.rdata:00006634                 dd offset $SG94224      ; "SIGPIPE"
.rdata:00006638                 db  19h
.rdata:00006639                 db    0
.rdata:0000663A                 db    0
.rdata:0000663B                 db    0
.rdata:0000663C                 dd offset $SG94225      ; "SIGSEGV"
.rdata:00006640                 db  1Bh
.rdata:00006641                 db    0
.rdata:00006642                 db    0
.rdata:00006643                 db    0
.rdata:00006644                 dd offset $SG94226      ; "SIGUSR1"
.rdata:00006648                 db  1Dh
.rdata:00006649                 db    0
.rdata:0000664A                 db    0
.rdata:0000664B                 db    0
.rdata:0000664C                 dd offset $SG94227      ; "SIGUSR2"
.rdata:00006650                 db  1Eh
.rdata:00006651                 db    0
.rdata:00006652                 db    0
.rdata:00006653                 db    0
.rdata:00006654                 db    0
.rdata:00006655                 db    0
.rdata:00006656                 db    0
.rdata:00006657                 db    0
.rdata:00006658                 db  21h ; !
.rdata:00006659                 db    0
.rdata:0000665A                 db    0
.rdata:0000665B                 db    0
.rdata:0000665C ; `ssh_get_specials'::`2'::specials_end
.rdata:0000665C ?specials_end@?1??ssh_get_specials@@9@9 db    0
.rdata:0000665C                                         ; DATA XREF: _ssh_get_specials+1CEo
.rdata:0000665D                 db    0
.rdata:0000665E                 db    0
.rdata:0000665F                 db    0
.rdata:00006660                 db  21h ; !
.rdata:00006661                 db    0
.rdata:00006662                 db    0
.rdata:00006663                 db    0
.rdata:00006663 _rdata          ends
.rdata:00006663
.bss:00006664 ; ===========================================================================
.bss:00006664
.bss:00006664 ; Segment type: Uninitialized
.bss:00006664 ; Segment permissions: Read/Write
.bss:00006664 ; Segment alignment 'qword' can not be represented in assembly
.bss:00006664 _bss            segment para public 'BSS' use32
.bss:00006664                 assume cs:_bss
.bss:00006664                 ;org 6664h
.bss:00006664                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.bss:00006664 ; `ssh_get_specials'::`2'::ssh_specials
.bss:00006664 ?ssh_specials@?1??ssh_get_specials@@9@9 db    ? ;
.bss:00006664                                         ; DATA XREF: _ssh_get_specials+64o
.bss:00006664                                         ; _ssh_get_specials+CFo ...
.bss:00006665                 db    ? ;
.bss:00006666                 db    ? ;
.bss:00006667                 db    ? ;
.bss:00006668                 db    ? ;
.bss:00006669                 db    ? ;
.bss:0000666A                 db    ? ;
.bss:0000666B                 db    ? ;
.bss:0000666C                 db    ? ;
.bss:0000666D                 db    ? ;
.bss:0000666E                 db    ? ;
.bss:0000666F                 db    ? ;
.bss:00006670                 db    ? ;
.bss:00006671                 db    ? ;
.bss:00006672                 db    ? ;
.bss:00006673                 db    ? ;
.bss:00006674                 db    ? ;
.bss:00006675                 db    ? ;
.bss:00006676                 db    ? ;
.bss:00006677                 db    ? ;
.bss:00006678                 db    ? ;
.bss:00006679                 db    ? ;
.bss:0000667A                 db    ? ;
.bss:0000667B                 db    ? ;
.bss:0000667C                 db    ? ;
.bss:0000667D                 db    ? ;
.bss:0000667E                 db    ? ;
.bss:0000667F                 db    ? ;
.bss:00006680                 db    ? ;
.bss:00006681                 db    ? ;
.bss:00006682                 db    ? ;
.bss:00006683                 db    ? ;
.bss:00006684                 db    ? ;
.bss:00006685                 db    ? ;
.bss:00006686                 db    ? ;
.bss:00006687                 db    ? ;
.bss:00006688                 db    ? ;
.bss:00006689                 db    ? ;
.bss:0000668A                 db    ? ;
.bss:0000668B                 db    ? ;
.bss:0000668C                 db    ? ;
.bss:0000668D                 db    ? ;
.bss:0000668E                 db    ? ;
.bss:0000668F                 db    ? ;
.bss:00006690                 db    ? ;
.bss:00006691                 db    ? ;
.bss:00006692                 db    ? ;
.bss:00006693                 db    ? ;
.bss:00006694                 db    ? ;
.bss:00006695                 db    ? ;
.bss:00006696                 db    ? ;
.bss:00006697                 db    ? ;
.bss:00006698                 db    ? ;
.bss:00006699                 db    ? ;
.bss:0000669A                 db    ? ;
.bss:0000669B                 db    ? ;
.bss:0000669C                 db    ? ;
.bss:0000669D                 db    ? ;
.bss:0000669E                 db    ? ;
.bss:0000669F                 db    ? ;
.bss:000066A0                 db    ? ;
.bss:000066A1                 db    ? ;
.bss:000066A2                 db    ? ;
.bss:000066A3                 db    ? ;
.bss:000066A4                 db    ? ;
.bss:000066A5                 db    ? ;
.bss:000066A6                 db    ? ;
.bss:000066A7                 db    ? ;
.bss:000066A8                 db    ? ;
.bss:000066A9                 db    ? ;
.bss:000066AA                 db    ? ;
.bss:000066AB                 db    ? ;
.bss:000066AC                 db    ? ;
.bss:000066AD                 db    ? ;
.bss:000066AE                 db    ? ;
.bss:000066AF                 db    ? ;
.bss:000066B0                 db    ? ;
.bss:000066B1                 db    ? ;
.bss:000066B2                 db    ? ;
.bss:000066B3                 db    ? ;
.bss:000066B4                 db    ? ;
.bss:000066B5                 db    ? ;
.bss:000066B6                 db    ? ;
.bss:000066B7                 db    ? ;
.bss:000066B8                 db    ? ;
.bss:000066B9                 db    ? ;
.bss:000066BA                 db    ? ;
.bss:000066BB                 db    ? ;
.bss:000066BC                 db    ? ;
.bss:000066BD                 db    ? ;
.bss:000066BE                 db    ? ;
.bss:000066BF                 db    ? ;
.bss:000066C0                 db    ? ;
.bss:000066C1                 db    ? ;
.bss:000066C2                 db    ? ;
.bss:000066C3                 db    ? ;
.bss:000066C4                 db    ? ;
.bss:000066C5                 db    ? ;
.bss:000066C6                 db    ? ;
.bss:000066C7                 db    ? ;
.bss:000066C8                 db    ? ;
.bss:000066C9                 db    ? ;
.bss:000066CA                 db    ? ;
.bss:000066CB                 db    ? ;
.bss:000066CC                 db    ? ;
.bss:000066CD                 db    ? ;
.bss:000066CE                 db    ? ;
.bss:000066CF                 db    ? ;
.bss:000066D0                 db    ? ;
.bss:000066D1                 db    ? ;
.bss:000066D2                 db    ? ;
.bss:000066D3                 db    ? ;
.bss:000066D4                 db    ? ;
.bss:000066D5                 db    ? ;
.bss:000066D6                 db    ? ;
.bss:000066D7                 db    ? ;
.bss:000066D8                 db    ? ;
.bss:000066D9                 db    ? ;
.bss:000066DA                 db    ? ;
.bss:000066DB                 db    ? ;
.bss:000066DC                 db    ? ;
.bss:000066DD                 db    ? ;
.bss:000066DE                 db    ? ;
.bss:000066DF                 db    ? ;
.bss:000066E0                 db    ? ;
.bss:000066E1                 db    ? ;
.bss:000066E2                 db    ? ;
.bss:000066E3                 db    ? ;
.bss:000066E4                 db    ? ;
.bss:000066E5                 db    ? ;
.bss:000066E6                 db    ? ;
.bss:000066E7                 db    ? ;
.bss:000066E8                 db    ? ;
.bss:000066E9                 db    ? ;
.bss:000066EA                 db    ? ;
.bss:000066EB                 db    ? ;
.bss:000066EC                 db    ? ;
.bss:000066ED                 db    ? ;
.bss:000066EE                 db    ? ;
.bss:000066EF                 db    ? ;
.bss:000066F0                 db    ? ;
.bss:000066F1                 db    ? ;
.bss:000066F2                 db    ? ;
.bss:000066F3                 db    ? ;
.bss:000066F4                 db    ? ;
.bss:000066F5                 db    ? ;
.bss:000066F6                 db    ? ;
.bss:000066F7                 db    ? ;
.bss:000066F8                 db    ? ;
.bss:000066F9                 db    ? ;
.bss:000066FA                 db    ? ;
.bss:000066FB                 db    ? ;
.bss:000066FC                 db    ? ;
.bss:000066FD                 db    ? ;
.bss:000066FE                 db    ? ;
.bss:000066FF                 db    ? ;
.bss:00006700                 db    ? ;
.bss:00006701                 db    ? ;
.bss:00006702                 db    ? ;
.bss:00006703                 db    ? ;
.bss:00006704 $SG89869        db    ? ;               ; DATA XREF: _connect_to_host:loc_1AFABo
.bss:00006705 $SG90585        db    ? ;               ; DATA XREF: _do_ssh1_login+27C1o
.bss:00006706 $SG90591        db    ? ;               ; DATA XREF: _do_ssh1_login:loc_1020Co
.bss:00006707 $SG90618        db    ? ;               ; DATA XREF: _do_ssh1_login+2A47o
.bss:00006708 $SG90624        db    ? ;               ; DATA XREF: _do_ssh1_login:loc_10492o
.bss:00006709 $SG90957        db    ? ;               ; DATA XREF: _ssh_setup_portfwd:loc_16F3Do
.bss:0000670A $SG90958        db    ? ;               ; DATA XREF: _ssh_setup_portfwd:loc_16F5Eo
.bss:0000670B ; char _SG90976
.bss:0000670B $SG90976        db ?                    ; DATA XREF: _ssh_setup_portfwd+630o
.bss:0000670C $SG90990        db    ? ;               ; DATA XREF: _ssh_setup_portfwd:loc_17203o
.bss:0000670D $SG90992        db    ? ;               ; DATA XREF: _ssh_setup_portfwd:loc_17222o
.bss:0000670E $SG90993        db    ? ;               ; DATA XREF: _ssh_setup_portfwd:loc_17243o
.bss:0000670F $SG90995        db    ? ;               ; DATA XREF: _ssh_setup_portfwd:loc_17262o
.bss:00006710 $SG90996        db    ? ;               ; DATA XREF: _ssh_setup_portfwd:loc_17283o
.bss:00006711 $SG91002        db    ? ;               ; DATA XREF: _ssh_setup_portfwd:loc_172F1o
.bss:00006712 $SG91004        db    ? ;               ; DATA XREF: _ssh_setup_portfwd:loc_17310o
.bss:00006713 $SG91005        db    ? ;               ; DATA XREF: _ssh_setup_portfwd:loc_17331o
.bss:00006714 $SG91009        db    ? ;               ; DATA XREF: _ssh_setup_portfwd:loc_173C9o
.bss:00006715 $SG91011        db    ? ;               ; DATA XREF: _ssh_setup_portfwd:loc_173E5o
.bss:00006716 $SG91014        db    ? ;               ; DATA XREF: _ssh_setup_portfwd:loc_17419o
.bss:00006717 $SG91021        db    ? ;               ; DATA XREF: _ssh_setup_portfwd:loc_174C5o
.bss:00006718 $SG91023        db    ? ;               ; DATA XREF: _ssh_setup_portfwd:loc_174E1o
.bss:00006719 $SG91026        db    ? ;               ; DATA XREF: _ssh_setup_portfwd:loc_17515o
.bss:0000671A $SG91040        db    ? ;               ; DATA XREF: _ssh_setup_portfwd+BA8o
.bss:0000671B $SG91174        db    ? ;               ; DATA XREF: _ssh1_msg_channel_close+202o
.bss:0000671C $SG92539        db    ? ;               ; DATA XREF: _ssh2_msg_channel_request+145o
.bss:0000671D $SG92541        db    ? ;               ; DATA XREF: _ssh2_msg_channel_request+14Co
.bss:0000671E $SG92640        db    ? ;               ; DATA XREF: _ssh2_msg_channel_request:loc_192DDo
.bss:0000671F ; char _SG93573
.bss:0000671F $SG93573        db ?                    ; DATA XREF: _do_ssh2_authconn+2F57o
.bss:00006720 $SG92889        db    ? ;               ; DATA XREF: _ssh2_setup_pty+1BFo
.bss:00006721                 db    ? ;
.bss:00006722 ; char _SG93574
.bss:00006722 $SG93574        db ?                    ; DATA XREF: _do_ssh2_authconn+2F6Eo
.bss:00006723 $SG93611        db    ? ;               ; DATA XREF: _do_ssh2_authconn:loc_14FEBo
.bss:00006724 $SG94299        db    ? ;               ; DATA XREF: _ssh_special+FAo
.bss:00006725                 align 4
.bss:00006725 _bss            ends
.bss:00006725
.text:00006728 ; ===========================================================================
.text:00006728
.text:00006728 ; Segment type: Pure code
.text:00006728 ; Segment permissions: Read/Execute
.text:00006728 _text           segment para public 'CODE' use32
.text:00006728                 assume cs:_text
.text:00006728                 ;org 6728h
.text:00006728                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text:00006728
.text:00006728 ; =============== S U B R O U T I N E =======================================
.text:00006728
.text:00006728 ; Attributes: bp-based frame
.text:00006728
.text:00006728 _ssh_comp_none_init proc near           ; DATA XREF: .rdata:00006540o
.text:00006728                                         ; .rdata:0000654Co
.text:00006728                 push    ebp
.text:00006729                 mov     ebp, esp
.text:0000672B                 xor     eax, eax
.text:0000672D                 pop     ebp
.text:0000672E                 retn
.text:0000672E _ssh_comp_none_init endp
.text:0000672E
.text:0000672E ; ---------------------------------------------------------------------------
.text:0000672F                 db 9 dup(0CCh)
.text:00006738
.text:00006738 ; =============== S U B R O U T I N E =======================================
.text:00006738
.text:00006738 ; Attributes: bp-based frame
.text:00006738
.text:00006738 _ssh_comp_none_cleanup proc near        ; DATA XREF: .rdata:00006544o
.text:00006738                                         ; .rdata:00006550o
.text:00006738                 push    ebp
.text:00006739                 mov     ebp, esp
.text:0000673B                 pop     ebp
.text:0000673C                 retn
.text:0000673C _ssh_comp_none_cleanup endp
.text:0000673C
.text:0000673C ; ---------------------------------------------------------------------------
.text:0000673D                 db 0Bh dup(0CCh)
.text:00006748
.text:00006748 ; =============== S U B R O U T I N E =======================================
.text:00006748
.text:00006748 ; Attributes: bp-based frame
.text:00006748
.text:00006748 _ssh_comp_none_block proc near          ; DATA XREF: .rdata:00006548o
.text:00006748                                         ; .rdata:00006554o
.text:00006748                 push    ebp
.text:00006749                 mov     ebp, esp
.text:0000674B                 xor     eax, eax
.text:0000674D                 pop     ebp
.text:0000674E                 retn
.text:0000674E _ssh_comp_none_block endp
.text:0000674E
.text:0000674E ; ---------------------------------------------------------------------------
.text:0000674F                 db 9 dup(0CCh)
.text:00006758
.text:00006758 ; =============== S U B R O U T I N E =======================================
.text:00006758
.text:00006758 ; Attributes: bp-based frame
.text:00006758
.text:00006758 _ssh_comp_none_disable proc near        ; DATA XREF: .rdata:00006558o
.text:00006758                 push    ebp
.text:00006759                 mov     ebp, esp
.text:0000675B                 xor     eax, eax
.text:0000675D                 pop     ebp
.text:0000675E                 retn
.text:0000675E _ssh_comp_none_disable endp
.text:0000675E
.text:0000675E ; ---------------------------------------------------------------------------
.text:0000675F                 db 9 dup(0CCh)
.text:00006768
.text:00006768 ; =============== S U B R O U T I N E =======================================
.text:00006768
.text:00006768 ; Attributes: bp-based frame
.text:00006768
.text:00006768 _ssh_socket_log proc near               ; DATA XREF: .rdata:`connect_to_host'::`2'::fn_tableo
.text:00006768
.text:00006768 var_114         = dword ptr -114h
.text:00006768 var_10C         = byte ptr -10Ch
.text:00006768 var_8           = dword ptr -8
.text:00006768 var_4           = dword ptr -4
.text:00006768 arg_0           = dword ptr  8
.text:00006768 arg_4           = dword ptr  0Ch
.text:00006768 arg_8           = dword ptr  10h
.text:00006768 arg_C           = dword ptr  14h
.text:00006768 arg_10          = dword ptr  18h
.text:00006768
.text:00006768                 push    ebp
.text:00006769                 mov     ebp, esp
.text:0000676B                 sub     esp, 114h
.text:00006771                 push    edi
.text:00006772                 lea     edi, [ebp+var_114]
.text:00006778                 mov     ecx, 45h ; 'E'
.text:0000677D                 mov     eax, 0CCCCCCCCh
.text:00006782                 rep stosd
.text:00006784                 mov     eax, dword ptr ds:___security_cookie
.text:00006789                 xor     eax, ebp
.text:0000678B                 mov     [ebp+var_4], eax
.text:0000678E                 mov     eax, [ebp+arg_0]
.text:00006791                 mov     [ebp+var_8], eax
.text:00006794                 mov     ecx, [ebp+var_8]
.text:00006797                 cmp     dword ptr [ecx+0C8h], 0
.text:0000679E                 jz      short loc_67A5
.text:000067A0                 jmp     loc_6855
.text:000067A5 ; ---------------------------------------------------------------------------
.text:000067A5
.text:000067A5 loc_67A5:                               ; CODE XREF: _ssh_socket_log+36j
.text:000067A5                 push    100h
.text:000067AA                 lea     edx, [ebp+var_10C]
.text:000067B0                 push    edx
.text:000067B1                 mov     eax, [ebp+arg_8]
.text:000067B4                 push    eax
.text:000067B5                 call    _sk_getaddr
.text:000067BA                 add     esp, 0Ch
.text:000067BD                 cmp     [ebp+arg_4], 0
.text:000067C1                 jnz     short loc_680F
.text:000067C3                 mov     ecx, [ebp+arg_8]
.text:000067C6                 push    ecx
.text:000067C7                 call    _sk_addr_needs_port
.text:000067CC                 add     esp, 4
.text:000067CF                 test    eax, eax
.text:000067D1                 jz      short loc_67F3
.text:000067D3                 mov     edx, [ebp+arg_C]
.text:000067D6                 push    edx
.text:000067D7                 lea     eax, [ebp+var_10C]
.text:000067DD                 push    eax
.text:000067DE                 push    offset $SG89753 ; "Connecting to %s port %d"
.text:000067E3                 call    _dupprintf
.text:000067E8                 add     esp, 0Ch
.text:000067EB                 mov     [ebp+var_114], eax
.text:000067F1                 jmp     short loc_680D
.text:000067F3 ; ---------------------------------------------------------------------------
.text:000067F3
.text:000067F3 loc_67F3:                               ; CODE XREF: _ssh_socket_log+69j
.text:000067F3                 lea     ecx, [ebp+var_10C]
.text:000067F9                 push    ecx
.text:000067FA                 push    offset $SG89755 ; "Connecting to %s"
.text:000067FF                 call    _dupprintf
.text:00006804                 add     esp, 8
.text:00006807                 mov     [ebp+var_114], eax
.text:0000680D
.text:0000680D loc_680D:                               ; CODE XREF: _ssh_socket_log+89j
.text:0000680D                 jmp     short loc_682D
.text:0000680F ; ---------------------------------------------------------------------------
.text:0000680F
.text:0000680F loc_680F:                               ; CODE XREF: _ssh_socket_log+59j
.text:0000680F                 mov     edx, [ebp+arg_10]
.text:00006812                 push    edx
.text:00006813                 lea     eax, [ebp+var_10C]
.text:00006819                 push    eax
.text:0000681A                 push    offset $SG89757 ; "Failed to connect to %s: %s"
.text:0000681F                 call    _dupprintf
.text:00006824                 add     esp, 0Ch
.text:00006827                 mov     [ebp+var_114], eax
.text:0000682D
.text:0000682D loc_682D:                               ; CODE XREF: _ssh_socket_log:loc_680Dj
.text:0000682D                 mov     ecx, [ebp+var_114]
.text:00006833                 push    ecx
.text:00006834                 mov     edx, [ebp+var_8]
.text:00006837                 mov     eax, [edx+0E4h]
.text:0000683D                 push    eax
.text:0000683E                 call    _logevent
.text:00006843                 add     esp, 8
.text:00006846                 mov     ecx, [ebp+var_114]
.text:0000684C                 push    ecx
.text:0000684D                 call    _safefree
.text:00006852                 add     esp, 4
.text:00006855
.text:00006855 loc_6855:                               ; CODE XREF: _ssh_socket_log+38j
.text:00006855                 push    edx
.text:00006856                 mov     ecx, ebp
.text:00006858                 push    eax
.text:00006859                 lea     edx, $LN11
.text:0000685F                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00006864                 pop     eax
.text:00006865                 pop     edx
.text:00006866                 pop     edi
.text:00006867                 mov     ecx, [ebp+var_4]
.text:0000686A                 xor     ecx, ebp
.text:0000686C                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00006871                 add     esp, 114h
.text:00006877                 cmp     ebp, esp
.text:00006879                 call    __RTC_CheckEsp
.text:0000687E                 mov     esp, ebp
.text:00006880                 pop     ebp
.text:00006881                 retn
.text:00006881 _ssh_socket_log endp
.text:00006881
.text:00006881 ; ---------------------------------------------------------------------------
.text:00006882                 align 4
.text:00006884 $LN11           dd 1                    ; DATA XREF: _ssh_socket_log+F1o
.text:00006888                 dd offset $LN10
.text:0000688C $LN10           dd 0FFFFFEF4h, 100h     ; DATA XREF: .text:00006888o
.text:00006894                 dd offset $LN9          ; "addrbuf"
.text:00006898 $LN9            db 'addrbuf',0          ; DATA XREF: .text:00006894o
.text:000068A0                 db 8 dup(0CCh)
.text:000068A8
.text:000068A8 ; =============== S U B R O U T I N E =======================================
.text:000068A8
.text:000068A8 ; Attributes: bp-based frame
.text:000068A8
.text:000068A8                 public _ssh_connshare_log
.text:000068A8 _ssh_connshare_log proc near
.text:000068A8
.text:000068A8 arg_0           = dword ptr  8
.text:000068A8 arg_4           = dword ptr  0Ch
.text:000068A8 arg_8           = dword ptr  10h
.text:000068A8 arg_C           = dword ptr  14h
.text:000068A8 arg_10          = dword ptr  18h
.text:000068A8
.text:000068A8                 push    ebp
.text:000068A9                 mov     ebp, esp
.text:000068AB                 cmp     [ebp+arg_4], 0
.text:000068AF                 jnz     short loc_6906
.text:000068B1                 cmp     [ebp+arg_8], 0
.text:000068B5                 jz      short loc_68CE
.text:000068B7                 mov     eax, [ebp+arg_8]
.text:000068BA                 push    eax
.text:000068BB                 push    offset $SG89771 ; "Could not set up connection sharing: %s"
.text:000068C0                 mov     ecx, [ebp+arg_0]
.text:000068C3                 push    ecx
.text:000068C4                 call    _logeventf
.text:000068C9                 add     esp, 0Ch
.text:000068CC                 jmp     short loc_6904
.text:000068CE ; ---------------------------------------------------------------------------
.text:000068CE
.text:000068CE loc_68CE:                               ; CODE XREF: _ssh_connshare_log+Dj
.text:000068CE                 cmp     [ebp+arg_C], 0
.text:000068D2                 jz      short loc_68E9
.text:000068D4                 mov     edx, [ebp+arg_C]
.text:000068D7                 push    edx
.text:000068D8                 push    offset $SG89774 ; "Could not set up connection sharing as "...
.text:000068DD                 mov     eax, [ebp+arg_0]
.text:000068E0                 push    eax
.text:000068E1                 call    _logeventf
.text:000068E6                 add     esp, 0Ch
.text:000068E9
.text:000068E9 loc_68E9:                               ; CODE XREF: _ssh_connshare_log+2Aj
.text:000068E9                 cmp     [ebp+arg_10], 0
.text:000068ED                 jz      short loc_6904
.text:000068EF                 mov     ecx, [ebp+arg_10]
.text:000068F2                 push    ecx
.text:000068F3                 push    offset $SG89776 ; "Could not set up connection sharing as "...
.text:000068F8                 mov     edx, [ebp+arg_0]
.text:000068FB                 push    edx
.text:000068FC                 call    _logeventf
.text:00006901                 add     esp, 0Ch
.text:00006904
.text:00006904 loc_6904:                               ; CODE XREF: _ssh_connshare_log+24j
.text:00006904                                         ; _ssh_connshare_log+45j
.text:00006904                 jmp     short loc_6964
.text:00006906 ; ---------------------------------------------------------------------------
.text:00006906
.text:00006906 loc_6906:                               ; CODE XREF: _ssh_connshare_log+7j
.text:00006906                 cmp     [ebp+arg_4], 1
.text:0000690A                 jnz     short loc_6949
.text:0000690C                 mov     eax, [ebp+arg_8]
.text:0000690F                 push    eax
.text:00006910                 push    offset $SG89779 ; "Using existing shared connection at %s"
.text:00006915                 mov     ecx, [ebp+arg_0]
.text:00006918                 push    ecx
.text:00006919                 call    _logeventf
.text:0000691E                 add     esp, 0Ch
.text:00006921                 mov     edx, dword ptr ds:_flags
.text:00006927                 and     edx, 1
.text:0000692A                 jnz     short loc_6936
.text:0000692C                 mov     eax, dword ptr ds:_flags
.text:00006931                 and     eax, 4
.text:00006934                 jz      short loc_6947
.text:00006936
.text:00006936 loc_6936:                               ; CODE XREF: _ssh_connshare_log+82j
.text:00006936                 push    offset $SG89782 ; "Reusing a shared connection to this ser"...
.text:0000693B                 mov     ecx, [ebp+arg_0]
.text:0000693E                 push    ecx             ; int
.text:0000693F                 call    _c_write_str
.text:00006944                 add     esp, 8
.text:00006947
.text:00006947 loc_6947:                               ; CODE XREF: _ssh_connshare_log+8Cj
.text:00006947                 jmp     short loc_6964
.text:00006949 ; ---------------------------------------------------------------------------
.text:00006949
.text:00006949 loc_6949:                               ; CODE XREF: _ssh_connshare_log+62j
.text:00006949                 cmp     [ebp+arg_4], 2
.text:0000694D                 jnz     short loc_6964
.text:0000694F                 mov     edx, [ebp+arg_8]
.text:00006952                 push    edx
.text:00006953                 push    offset $SG89785 ; "Sharing this connection at %s"
.text:00006958                 mov     eax, [ebp+arg_0]
.text:0000695B                 push    eax
.text:0000695C                 call    _logeventf
.text:00006961                 add     esp, 0Ch
.text:00006964
.text:00006964 loc_6964:                               ; CODE XREF: _ssh_connshare_log:loc_6904j
.text:00006964                                         ; _ssh_connshare_log:loc_6947j ...
.text:00006964                 cmp     ebp, esp
.text:00006966                 call    __RTC_CheckEsp
.text:0000696B                 pop     ebp
.text:0000696C                 retn
.text:0000696C _ssh_connshare_log endp
.text:0000696C
.text:0000696C ; ---------------------------------------------------------------------------
.text:0000696D                 db 0Bh dup(0CCh)
.text:00006978
.text:00006978 ; =============== S U B R O U T I N E =======================================
.text:00006978
.text:00006978 ; Attributes: bp-based frame
.text:00006978
.text:00006978 _logeventf      proc near               ; CODE XREF: _ssh_connshare_log+1Cp
.text:00006978                                         ; _ssh_connshare_log+39p ...
.text:00006978
.text:00006978 var_8           = dword ptr -8
.text:00006978 var_4           = dword ptr -4
.text:00006978 arg_0           = dword ptr  8
.text:00006978 arg_4           = dword ptr  0Ch
.text:00006978 arg_8           = byte ptr  10h
.text:00006978
.text:00006978                 push    ebp
.text:00006979                 mov     ebp, esp
.text:0000697B                 sub     esp, 8
.text:0000697E                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00006985                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000698C                 lea     eax, [ebp+arg_8]
.text:0000698F                 mov     [ebp+var_4], eax
.text:00006992                 mov     ecx, [ebp+var_4]
.text:00006995                 push    ecx
.text:00006996                 mov     edx, [ebp+arg_4]
.text:00006999                 push    edx
.text:0000699A                 call    _dupvprintf
.text:0000699F                 add     esp, 8
.text:000069A2                 mov     [ebp+var_8], eax
.text:000069A5                 mov     [ebp+var_4], 0
.text:000069AC                 mov     eax, [ebp+var_8]
.text:000069AF                 push    eax
.text:000069B0                 mov     ecx, [ebp+arg_0]
.text:000069B3                 mov     edx, [ecx+0E4h]
.text:000069B9                 push    edx
.text:000069BA                 call    _logevent
.text:000069BF                 add     esp, 8
.text:000069C2                 mov     eax, [ebp+var_8]
.text:000069C5                 push    eax
.text:000069C6                 call    _safefree
.text:000069CB                 add     esp, 4
.text:000069CE                 add     esp, 8
.text:000069D1                 cmp     ebp, esp
.text:000069D3                 call    __RTC_CheckEsp
.text:000069D8                 mov     esp, ebp
.text:000069DA                 pop     ebp
.text:000069DB                 retn
.text:000069DB _logeventf      endp
.text:000069DB
.text:000069DB ; ---------------------------------------------------------------------------
.text:000069DC                 db 0Ch dup(0CCh)
.text:000069E8
.text:000069E8 ; =============== S U B R O U T I N E =======================================
.text:000069E8
.text:000069E8 ; Attributes: bp-based frame
.text:000069E8
.text:000069E8 ; int __cdecl c_write_str(int, char *Str)
.text:000069E8 _c_write_str    proc near               ; CODE XREF: _ssh_connshare_log+97p
.text:000069E8                                         ; _do_ssh1_login+1182p ...
.text:000069E8
.text:000069E8 arg_0           = dword ptr  8
.text:000069E8 Str             = dword ptr  0Ch
.text:000069E8
.text:000069E8                 push    ebp
.text:000069E9                 mov     ebp, esp
.text:000069EB                 mov     eax, [ebp+Str]
.text:000069EE                 push    eax             ; Str
.text:000069EF                 call    _strlen
.text:000069F4                 add     esp, 4
.text:000069F7                 push    eax
.text:000069F8                 mov     ecx, [ebp+Str]
.text:000069FB                 push    ecx
.text:000069FC                 mov     edx, [ebp+arg_0]
.text:000069FF                 push    edx
.text:00006A00                 call    _c_write
.text:00006A05                 add     esp, 0Ch
.text:00006A08                 cmp     ebp, esp
.text:00006A0A                 call    __RTC_CheckEsp
.text:00006A0F                 pop     ebp
.text:00006A10                 retn
.text:00006A10 _c_write_str    endp
.text:00006A10
.text:00006A10 ; ---------------------------------------------------------------------------
.text:00006A11                 align 8
.text:00006A18
.text:00006A18 ; =============== S U B R O U T I N E =======================================
.text:00006A18
.text:00006A18 ; Attributes: bp-based frame
.text:00006A18
.text:00006A18 _c_write        proc near               ; CODE XREF: _c_write_str+18p
.text:00006A18                                         ; _do_ssh1_login+1E9Ap ...
.text:00006A18
.text:00006A18 arg_0           = dword ptr  8
.text:00006A18 arg_4           = dword ptr  0Ch
.text:00006A18 arg_8           = dword ptr  10h
.text:00006A18
.text:00006A18                 push    ebp
.text:00006A19                 mov     ebp, esp
.text:00006A1B                 mov     eax, dword ptr ds:_flags
.text:00006A20                 and     eax, 2
.text:00006A23                 jz      short loc_6A39
.text:00006A25                 mov     ecx, [ebp+arg_8]
.text:00006A28                 push    ecx
.text:00006A29                 mov     edx, [ebp+arg_4]
.text:00006A2C                 push    edx
.text:00006A2D                 push    1
.text:00006A2F                 call    _c_write_stderr
.text:00006A34                 add     esp, 0Ch
.text:00006A37                 jmp     short loc_6A55
.text:00006A39 ; ---------------------------------------------------------------------------
.text:00006A39
.text:00006A39 loc_6A39:                               ; CODE XREF: _c_write+Bj
.text:00006A39                 mov     eax, [ebp+arg_8]
.text:00006A3C                 push    eax
.text:00006A3D                 mov     ecx, [ebp+arg_4]
.text:00006A40                 push    ecx
.text:00006A41                 push    1
.text:00006A43                 mov     edx, [ebp+arg_0]
.text:00006A46                 mov     eax, [edx+0E4h]
.text:00006A4C                 push    eax
.text:00006A4D                 call    _from_backend
.text:00006A52                 add     esp, 10h
.text:00006A55
.text:00006A55 loc_6A55:                               ; CODE XREF: _c_write+1Fj
.text:00006A55                 cmp     ebp, esp
.text:00006A57                 call    __RTC_CheckEsp
.text:00006A5C                 pop     ebp
.text:00006A5D                 retn
.text:00006A5D _c_write        endp
.text:00006A5D
.text:00006A5D ; ---------------------------------------------------------------------------
.text:00006A5E                 db 0Ah dup(0CCh)
.text:00006A68
.text:00006A68 ; =============== S U B R O U T I N E =======================================
.text:00006A68
.text:00006A68 ; Attributes: bp-based frame
.text:00006A68
.text:00006A68 _c_write_stderr proc near               ; CODE XREF: _c_write+17p
.text:00006A68                                         ; _c_write_untrusted+17p
.text:00006A68
.text:00006A68 var_4           = dword ptr -4
.text:00006A68 arg_0           = dword ptr  8
.text:00006A68 arg_4           = dword ptr  0Ch
.text:00006A68 arg_8           = dword ptr  10h
.text:00006A68
.text:00006A68                 push    ebp
.text:00006A69                 mov     ebp, esp
.text:00006A6B                 push    ecx
.text:00006A6C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00006A73                 mov     [ebp+var_4], 0
.text:00006A7A                 jmp     short loc_6A85
.text:00006A7C ; ---------------------------------------------------------------------------
.text:00006A7C
.text:00006A7C loc_6A7C:                               ; CODE XREF: _c_write_stderr:loc_6AD8j
.text:00006A7C                 mov     eax, [ebp+var_4]
.text:00006A7F                 add     eax, 1
.text:00006A82                 mov     [ebp+var_4], eax
.text:00006A85
.text:00006A85 loc_6A85:                               ; CODE XREF: _c_write_stderr+12j
.text:00006A85                 mov     ecx, [ebp+var_4]
.text:00006A88                 cmp     ecx, [ebp+arg_8]
.text:00006A8B                 jge     short loc_6ADA
.text:00006A8D                 mov     edx, [ebp+arg_4]
.text:00006A90                 add     edx, [ebp+var_4]
.text:00006A93                 movsx   eax, byte ptr [edx]
.text:00006A96                 cmp     eax, 0Dh
.text:00006A99                 jz      short loc_6AD8
.text:00006A9B                 cmp     [ebp+arg_0], 0
.text:00006A9F                 jnz     short loc_6ABD
.text:00006AA1                 mov     ecx, [ebp+arg_4]
.text:00006AA4                 add     ecx, [ebp+var_4]
.text:00006AA7                 movsx   edx, byte ptr [ecx]
.text:00006AAA                 cmp     edx, 0Ah
.text:00006AAD                 jz      short loc_6ABD
.text:00006AAF                 mov     eax, [ebp+arg_4]
.text:00006AB2                 add     eax, [ebp+var_4]
.text:00006AB5                 movsx   ecx, byte ptr [eax]
.text:00006AB8                 and     ecx, 60h
.text:00006ABB                 jz      short loc_6AD8
.text:00006ABD
.text:00006ABD loc_6ABD:                               ; CODE XREF: _c_write_stderr+37j
.text:00006ABD                                         ; _c_write_stderr+45j
.text:00006ABD                 call    ___iob_func
.text:00006AC2                 add     eax, 40h ; '@'
.text:00006AC5                 push    eax             ; File
.text:00006AC6                 mov     edx, [ebp+arg_4]
.text:00006AC9                 add     edx, [ebp+var_4]
.text:00006ACC                 movsx   eax, byte ptr [edx]
.text:00006ACF                 push    eax             ; Ch
.text:00006AD0                 call    _fputc
.text:00006AD5                 add     esp, 8
.text:00006AD8
.text:00006AD8 loc_6AD8:                               ; CODE XREF: _c_write_stderr+31j
.text:00006AD8                                         ; _c_write_stderr+53j
.text:00006AD8                 jmp     short loc_6A7C
.text:00006ADA ; ---------------------------------------------------------------------------
.text:00006ADA
.text:00006ADA loc_6ADA:                               ; CODE XREF: _c_write_stderr+23j
.text:00006ADA                 add     esp, 4
.text:00006ADD                 cmp     ebp, esp
.text:00006ADF                 call    __RTC_CheckEsp
.text:00006AE4                 mov     esp, ebp
.text:00006AE6                 pop     ebp
.text:00006AE7                 retn
.text:00006AE7 _c_write_stderr endp
.text:00006AE7
.text:00006AE8
.text:00006AE8 ; =============== S U B R O U T I N E =======================================
.text:00006AE8
.text:00006AE8 ; Attributes: bp-based frame
.text:00006AE8
.text:00006AE8 _ssh_closing    proc near               ; CODE XREF: _ssh_disconnect+F5p
.text:00006AE8                                         ; DATA XREF: .rdata:00006598o
.text:00006AE8
.text:00006AE8 var_8           = dword ptr -8
.text:00006AE8 var_4           = dword ptr -4
.text:00006AE8 arg_0           = dword ptr  8
.text:00006AE8 arg_4           = dword ptr  0Ch
.text:00006AE8
.text:00006AE8                 push    ebp
.text:00006AE9                 mov     ebp, esp
.text:00006AEB                 sub     esp, 8
.text:00006AEE                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00006AF5                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00006AFC                 mov     eax, [ebp+arg_0]
.text:00006AFF                 mov     [ebp+var_4], eax
.text:00006B02                 push    0
.text:00006B04                 mov     ecx, [ebp+var_4]
.text:00006B07                 push    ecx
.text:00006B08                 call    _ssh_do_close
.text:00006B0D                 add     esp, 8
.text:00006B10                 mov     [ebp+var_8], eax
.text:00006B13                 cmp     [ebp+arg_4], 0
.text:00006B17                 jnz     short loc_6B35
.text:00006B19                 mov     edx, [ebp+var_4]
.text:00006B1C                 cmp     dword ptr [edx+108h], 0
.text:00006B23                 jnz     short loc_6B2E
.text:00006B25                 mov     [ebp+arg_4], offset $SG89801 ; "Server unexpectedly closed network conn"...
.text:00006B2C                 jmp     short loc_6B35
.text:00006B2E ; ---------------------------------------------------------------------------
.text:00006B2E
.text:00006B2E loc_6B2E:                               ; CODE XREF: _ssh_closing+3Bj
.text:00006B2E                 mov     [ebp+arg_4], offset $SG89803 ; "Server closed network connection"
.text:00006B35
.text:00006B35 loc_6B35:                               ; CODE XREF: _ssh_closing+2Fj
.text:00006B35                                         ; _ssh_closing+44j
.text:00006B35                 mov     eax, [ebp+var_4]
.text:00006B38                 cmp     dword ptr [eax+108h], 0
.text:00006B3F                 jz      short loc_6B66
.text:00006B41                 mov     ecx, [ebp+var_4]
.text:00006B44                 cmp     dword ptr [ecx+10Ch], 0
.text:00006B4B                 jz      short loc_6B66
.text:00006B4D                 mov     edx, [ebp+var_4]
.text:00006B50                 cmp     dword ptr [edx+104h], 0
.text:00006B57                 jge     short loc_6B66
.text:00006B59                 mov     eax, [ebp+var_4]
.text:00006B5C                 mov     dword ptr [eax+104h], 0
.text:00006B66
.text:00006B66 loc_6B66:                               ; CODE XREF: _ssh_closing+57j
.text:00006B66                                         ; _ssh_closing+63j ...
.text:00006B66                 cmp     [ebp+var_8], 0
.text:00006B6A                 jz      short loc_6B7E
.text:00006B6C                 mov     ecx, [ebp+var_4]
.text:00006B6F                 mov     edx, [ecx+0E4h]
.text:00006B75                 push    edx
.text:00006B76                 call    _notify_remote_exit
.text:00006B7B                 add     esp, 4
.text:00006B7E
.text:00006B7E loc_6B7E:                               ; CODE XREF: _ssh_closing+82j
.text:00006B7E                 cmp     [ebp+arg_4], 0
.text:00006B82                 jz      short loc_6B9A
.text:00006B84                 mov     eax, [ebp+arg_4]
.text:00006B87                 push    eax
.text:00006B88                 mov     ecx, [ebp+var_4]
.text:00006B8B                 mov     edx, [ecx+0E4h]
.text:00006B91                 push    edx
.text:00006B92                 call    _logevent
.text:00006B97                 add     esp, 8
.text:00006B9A
.text:00006B9A loc_6B9A:                               ; CODE XREF: _ssh_closing+9Aj
.text:00006B9A                 mov     eax, [ebp+var_4]
.text:00006B9D                 cmp     dword ptr [eax+108h], 0
.text:00006BA4                 jz      short loc_6BB2
.text:00006BA6                 mov     ecx, [ebp+var_4]
.text:00006BA9                 cmp     dword ptr [ecx+10Ch], 0
.text:00006BB0                 jnz     short loc_6BCD
.text:00006BB2
.text:00006BB2 loc_6BB2:                               ; CODE XREF: _ssh_closing+BCj
.text:00006BB2                 mov     edx, [ebp+arg_4]
.text:00006BB5                 push    edx
.text:00006BB6                 push    offset $SG89809
.text:00006BBB                 mov     eax, [ebp+var_4]
.text:00006BBE                 mov     ecx, [eax+0E4h]
.text:00006BC4                 push    ecx
.text:00006BC5                 call    _connection_fatal
.text:00006BCA                 add     esp, 0Ch
.text:00006BCD
.text:00006BCD loc_6BCD:                               ; CODE XREF: _ssh_closing+C8j
.text:00006BCD                 xor     eax, eax
.text:00006BCF                 add     esp, 8
.text:00006BD2                 cmp     ebp, esp
.text:00006BD4                 call    __RTC_CheckEsp
.text:00006BD9                 mov     esp, ebp
.text:00006BDB                 pop     ebp
.text:00006BDC                 retn
.text:00006BDC _ssh_closing    endp
.text:00006BDC
.text:00006BDC ; ---------------------------------------------------------------------------
.text:00006BDD                 db 0Bh dup(0CCh)
.text:00006BE8
.text:00006BE8 ; =============== S U B R O U T I N E =======================================
.text:00006BE8
.text:00006BE8 ; Attributes: bp-based frame
.text:00006BE8
.text:00006BE8 _ssh_do_close   proc near               ; CODE XREF: _ssh_closing+20p
.text:00006BE8                                         ; _ssh_receive:loc_6E6Fp ...
.text:00006BE8
.text:00006BE8 var_10          = dword ptr -10h
.text:00006BE8 var_C           = dword ptr -0Ch
.text:00006BE8 var_8           = dword ptr -8
.text:00006BE8 var_4           = dword ptr -4
.text:00006BE8 arg_0           = dword ptr  8
.text:00006BE8 arg_4           = dword ptr  0Ch
.text:00006BE8
.text:00006BE8                 push    ebp
.text:00006BE9                 mov     ebp, esp
.text:00006BEB                 sub     esp, 10h
.text:00006BEE                 push    esi
.text:00006BEF                 mov     eax, 0CCCCCCCCh
.text:00006BF4                 mov     [ebp+var_10], eax
.text:00006BF7                 mov     [ebp+var_C], eax
.text:00006BFA                 mov     [ebp+var_8], eax
.text:00006BFD                 mov     [ebp+var_4], eax
.text:00006C00                 mov     [ebp+var_4], 0
.text:00006C07                 mov     eax, [ebp+arg_0]
.text:00006C0A                 mov     dword ptr [eax+118h], 4
.text:00006C14                 mov     ecx, [ebp+arg_0]
.text:00006C17                 push    ecx
.text:00006C18                 call    _expire_timer_context
.text:00006C1D                 add     esp, 4
.text:00006C20                 mov     edx, [ebp+arg_0]
.text:00006C23                 cmp     dword ptr [edx+10h], 0
.text:00006C27                 jz      short loc_6C74
.text:00006C29                 mov     esi, esp
.text:00006C2B                 mov     eax, [ebp+arg_0]
.text:00006C2E                 mov     ecx, [eax+10h]
.text:00006C31                 push    ecx
.text:00006C32                 mov     edx, [ebp+arg_0]
.text:00006C35                 mov     eax, [edx+10h]
.text:00006C38                 mov     ecx, [eax]
.text:00006C3A                 mov     edx, [ecx+4]
.text:00006C3D                 call    edx
.text:00006C3F                 add     esp, 4
.text:00006C42                 cmp     esi, esp
.text:00006C44                 call    __RTC_CheckEsp
.text:00006C49                 mov     eax, [ebp+arg_0]
.text:00006C4C                 mov     dword ptr [eax+10h], 0
.text:00006C53                 cmp     [ebp+arg_4], 0
.text:00006C57                 jz      short loc_6C6D
.text:00006C59                 mov     ecx, [ebp+arg_0]
.text:00006C5C                 mov     edx, [ecx+0E4h]
.text:00006C62                 push    edx
.text:00006C63                 call    _notify_remote_exit
.text:00006C68                 add     esp, 4
.text:00006C6B                 jmp     short loc_6C74
.text:00006C6D ; ---------------------------------------------------------------------------
.text:00006C6D
.text:00006C6D loc_6C6D:                               ; CODE XREF: _ssh_do_close+6Fj
.text:00006C6D                 mov     [ebp+var_4], 1
.text:00006C74
.text:00006C74 loc_6C74:                               ; CODE XREF: _ssh_do_close+3Fj
.text:00006C74                                         ; _ssh_do_close+83j
.text:00006C74                 mov     eax, [ebp+arg_0]
.text:00006C77                 cmp     dword ptr [eax+0F8h], 0
.text:00006C7E                 jz      loc_6D20
.text:00006C84
.text:00006C84 loc_6C84:                               ; CODE XREF: _ssh_do_close+133j
.text:00006C84                 push    0
.text:00006C86                 mov     ecx, [ebp+arg_0]
.text:00006C89                 mov     edx, [ecx+0F8h]
.text:00006C8F                 push    edx
.text:00006C90                 call    _index234
.text:00006C95                 add     esp, 8
.text:00006C98                 mov     [ebp+var_8], eax
.text:00006C9B                 cmp     [ebp+var_8], 0
.text:00006C9F                 jz      short loc_6D20
.text:00006CA1                 mov     eax, [ebp+var_8]
.text:00006CA4                 mov     ecx, [eax+0Ch]
.text:00006CA7                 mov     [ebp+var_10], ecx
.text:00006CAA                 cmp     [ebp+var_10], 1
.text:00006CAE                 jz      short loc_6CBE
.text:00006CB0                 cmp     [ebp+var_10], 2
.text:00006CB4                 jle     short loc_6CDE
.text:00006CB6                 cmp     [ebp+var_10], 4
.text:00006CBA                 jle     short loc_6CCF
.text:00006CBC                 jmp     short loc_6CDE
.text:00006CBE ; ---------------------------------------------------------------------------
.text:00006CBE
.text:00006CBE loc_6CBE:                               ; CODE XREF: _ssh_do_close+C6j
.text:00006CBE                 mov     edx, [ebp+var_8]
.text:00006CC1                 mov     eax, [edx+4Ch]
.text:00006CC4                 push    eax
.text:00006CC5                 call    _x11_close
.text:00006CCA                 add     esp, 4
.text:00006CCD                 jmp     short loc_6CDE
.text:00006CCF ; ---------------------------------------------------------------------------
.text:00006CCF
.text:00006CCF loc_6CCF:                               ; CODE XREF: _ssh_do_close+D2j
.text:00006CCF                 mov     ecx, [ebp+var_8]
.text:00006CD2                 mov     edx, [ecx+4Ch]
.text:00006CD5                 push    edx
.text:00006CD6                 call    _pfd_close
.text:00006CDB                 add     esp, 4
.text:00006CDE
.text:00006CDE loc_6CDE:                               ; CODE XREF: _ssh_do_close+CCj
.text:00006CDE                                         ; _ssh_do_close+D4j ...
.text:00006CDE                 mov     eax, [ebp+var_8]
.text:00006CE1                 push    eax
.text:00006CE2                 mov     ecx, [ebp+arg_0]
.text:00006CE5                 mov     edx, [ecx+0F8h]
.text:00006CEB                 push    edx
.text:00006CEC                 call    _del234
.text:00006CF1                 add     esp, 8
.text:00006CF4                 mov     eax, [ebp+arg_0]
.text:00006CF7                 cmp     dword ptr [eax+16Ch], 2
.text:00006CFE                 jnz     short loc_6D0F
.text:00006D00                 mov     ecx, [ebp+var_8]
.text:00006D03                 add     ecx, 20h ; ' '
.text:00006D06                 push    ecx
.text:00006D07                 call    _bufchain_clear
.text:00006D0C                 add     esp, 4
.text:00006D0F
.text:00006D0F loc_6D0F:                               ; CODE XREF: _ssh_do_close+116j
.text:00006D0F                 mov     edx, [ebp+var_8]
.text:00006D12                 push    edx
.text:00006D13                 call    _safefree
.text:00006D18                 add     esp, 4
.text:00006D1B                 jmp     loc_6C84
.text:00006D20 ; ---------------------------------------------------------------------------
.text:00006D20
.text:00006D20 loc_6D20:                               ; CODE XREF: _ssh_do_close+96j
.text:00006D20                                         ; _ssh_do_close+B7j
.text:00006D20                 mov     eax, [ebp+arg_0]
.text:00006D23                 cmp     dword ptr [eax+114h], 0
.text:00006D2A                 jz      loc_6DF1
.text:00006D30
.text:00006D30 loc_6D30:                               ; CODE XREF: _ssh_do_close+1E5j
.text:00006D30                 push    0
.text:00006D32                 mov     ecx, [ebp+arg_0]
.text:00006D35                 mov     edx, [ecx+114h]
.text:00006D3B                 push    edx
.text:00006D3C                 call    _index234
.text:00006D41                 add     esp, 8
.text:00006D44                 mov     [ebp+var_C], eax
.text:00006D47                 cmp     [ebp+var_C], 0
.text:00006D4B                 jz      loc_6DD2
.text:00006D51                 mov     eax, [ebp+var_C]
.text:00006D54                 cmp     dword ptr [eax+28h], 0
.text:00006D58                 jz      short loc_6D69
.text:00006D5A                 mov     ecx, [ebp+var_C]
.text:00006D5D                 mov     edx, [ecx+28h]
.text:00006D60                 push    edx
.text:00006D61                 call    _pfl_terminate
.text:00006D66                 add     esp, 4
.text:00006D69
.text:00006D69 loc_6D69:                               ; CODE XREF: _ssh_do_close+170j
.text:00006D69                 mov     eax, [ebp+var_C]
.text:00006D6C                 push    eax
.text:00006D6D                 mov     ecx, [ebp+arg_0]
.text:00006D70                 mov     edx, [ecx+114h]
.text:00006D76                 push    edx
.text:00006D77                 call    _del234
.text:00006D7C                 add     esp, 8
.text:00006D7F                 cmp     [ebp+var_C], 0
.text:00006D83                 jz      short loc_6DC1
.text:00006D85                 mov     eax, [ebp+var_C]
.text:00006D88                 mov     ecx, [eax+10h]
.text:00006D8B                 push    ecx
.text:00006D8C                 call    _safefree
.text:00006D91                 add     esp, 4
.text:00006D94                 mov     edx, [ebp+var_C]
.text:00006D97                 mov     eax, [edx+14h]
.text:00006D9A                 push    eax
.text:00006D9B                 call    _safefree
.text:00006DA0                 add     esp, 4
.text:00006DA3                 mov     ecx, [ebp+var_C]
.text:00006DA6                 mov     edx, [ecx+18h]
.text:00006DA9                 push    edx
.text:00006DAA                 call    _safefree
.text:00006DAF                 add     esp, 4
.text:00006DB2                 mov     eax, [ebp+var_C]
.text:00006DB5                 mov     ecx, [eax+1Ch]
.text:00006DB8                 push    ecx
.text:00006DB9                 call    _safefree
.text:00006DBE                 add     esp, 4
.text:00006DC1
.text:00006DC1 loc_6DC1:                               ; CODE XREF: _ssh_do_close+19Bj
.text:00006DC1                 mov     edx, [ebp+var_C]
.text:00006DC4                 push    edx
.text:00006DC5                 call    _safefree
.text:00006DCA                 add     esp, 4
.text:00006DCD                 jmp     loc_6D30
.text:00006DD2 ; ---------------------------------------------------------------------------
.text:00006DD2
.text:00006DD2 loc_6DD2:                               ; CODE XREF: _ssh_do_close+163j
.text:00006DD2                 mov     eax, [ebp+arg_0]
.text:00006DD5                 mov     ecx, [eax+114h]
.text:00006DDB                 push    ecx
.text:00006DDC                 call    _freetree234
.text:00006DE1                 add     esp, 4
.text:00006DE4                 mov     edx, [ebp+arg_0]
.text:00006DE7                 mov     dword ptr [edx+114h], 0
.text:00006DF1
.text:00006DF1 loc_6DF1:                               ; CODE XREF: _ssh_do_close+142j
.text:00006DF1                 mov     eax, [ebp+arg_0]
.text:00006DF4                 cmp     dword ptr [eax+0CCh], 0
.text:00006DFB                 jz      short loc_6E1C
.text:00006DFD                 mov     ecx, [ebp+arg_0]
.text:00006E00                 mov     edx, [ecx+0CCh]
.text:00006E06                 push    edx
.text:00006E07                 call    _sharestate_free
.text:00006E0C                 add     esp, 4
.text:00006E0F                 mov     eax, [ebp+arg_0]
.text:00006E12                 mov     dword ptr [eax+0CCh], 0
.text:00006E1C
.text:00006E1C loc_6E1C:                               ; CODE XREF: _ssh_do_close+213j
.text:00006E1C                 mov     eax, [ebp+var_4]
.text:00006E1F                 pop     esi
.text:00006E20                 add     esp, 10h
.text:00006E23                 cmp     ebp, esp
.text:00006E25                 call    __RTC_CheckEsp
.text:00006E2A                 mov     esp, ebp
.text:00006E2C                 pop     ebp
.text:00006E2D                 retn
.text:00006E2D _ssh_do_close   endp
.text:00006E2D
.text:00006E2D ; ---------------------------------------------------------------------------
.text:00006E2E                 db 0Ah dup(0CCh)
.text:00006E38
.text:00006E38 ; =============== S U B R O U T I N E =======================================
.text:00006E38
.text:00006E38 ; Attributes: bp-based frame
.text:00006E38
.text:00006E38 _ssh_receive    proc near               ; DATA XREF: .rdata:0000659Co
.text:00006E38
.text:00006E38 var_4           = dword ptr -4
.text:00006E38 arg_0           = dword ptr  8
.text:00006E38 arg_8           = dword ptr  10h
.text:00006E38 arg_C           = dword ptr  14h
.text:00006E38
.text:00006E38                 push    ebp
.text:00006E39                 mov     ebp, esp
.text:00006E3B                 push    ecx
.text:00006E3C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00006E43                 mov     eax, [ebp+arg_0]
.text:00006E46                 mov     [ebp+var_4], eax
.text:00006E49                 mov     ecx, [ebp+arg_C]
.text:00006E4C                 push    ecx
.text:00006E4D                 mov     edx, [ebp+arg_8]
.text:00006E50                 push    edx
.text:00006E51                 mov     eax, [ebp+var_4]
.text:00006E54                 push    eax
.text:00006E55                 call    _ssh_gotdata
.text:00006E5A                 add     esp, 0Ch
.text:00006E5D                 mov     ecx, [ebp+var_4]
.text:00006E60
.text:00006E60 loc_6E60:                               ; DATA XREF: .data:$SG89990o
.text:00006E60                                         ; .data:$SG92737o
.text:00006E60                 cmp     dword ptr [ecx+118h], 4
.text:00006E67                 jnz     short loc_6E7B
.text:00006E69                 push    1
.text:00006E6B                 mov     edx, [ebp+var_4]
.text:00006E6E                 push    edx
.text:00006E6F
.text:00006E6F loc_6E6F:                               ; DATA XREF: .data:$SG87387o
.text:00006E6F                 call    _ssh_do_close
.text:00006E74                 add     esp, 8
.text:00006E77                 xor     eax, eax
.text:00006E79                 jmp     short loc_6E80
.text:00006E7B ; ---------------------------------------------------------------------------
.text:00006E7B
.text:00006E7B loc_6E7B:                               ; CODE XREF: _ssh_receive+2Fj
.text:00006E7B                 mov     eax, 1
.text:00006E80
.text:00006E80 loc_6E80:                               ; CODE XREF: _ssh_receive+41j
.text:00006E80                 add     esp, 4
.text:00006E83                 cmp     ebp, esp
.text:00006E85                 call    __RTC_CheckEsp
.text:00006E8A                 mov     esp, ebp
.text:00006E8C                 pop     ebp
.text:00006E8D                 retn
.text:00006E8D _ssh_receive    endp
.text:00006E8D
.text:00006E8D ; ---------------------------------------------------------------------------
.text:00006E8E                 db 0Ah dup(0CCh)
.text:00006E98
.text:00006E98 ; =============== S U B R O U T I N E =======================================
.text:00006E98
.text:00006E98 ; Attributes: bp-based frame
.text:00006E98
.text:00006E98 _ssh_gotdata    proc near               ; CODE XREF: _ssh_receive+1Dp
.text:00006E98
.text:00006E98 var_C           = dword ptr -0Ch
.text:00006E98 var_8           = dword ptr -8
.text:00006E98 var_4           = dword ptr -4
.text:00006E98 arg_0           = dword ptr  8
.text:00006E98 arg_4           = dword ptr  0Ch
.text:00006E98 arg_8           = dword ptr  10h
.text:00006E98
.text:00006E98                 push    ebp
.text:00006E99                 mov     ebp, esp
.text:00006E9B                 sub     esp, 0Ch
.text:00006E9E                 push    esi
.text:00006E9F                 mov     [ebp+var_C], 0CCCCCCCCh
.text:00006EA6                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00006EAD                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00006EB4                 mov     eax, [ebp+arg_0]
.text:00006EB7                 cmp     dword ptr [eax+18h], 0
.text:00006EBB                 jz      short loc_6EE4
.text:00006EBD                 push    0
.text:00006EBF                 push    0
.text:00006EC1                 push    0
.text:00006EC3                 push    0
.text:00006EC5                 push    0
.text:00006EC7                 mov     ecx, [ebp+arg_8]
.text:00006ECA                 push    ecx
.text:00006ECB                 mov     edx, [ebp+arg_4]
.text:00006ECE                 push    edx
.text:00006ECF                 push    0
.text:00006ED1                 push    0FFFFFFFFh
.text:00006ED3                 push    0
.text:00006ED5                 mov     eax, [ebp+arg_0]
.text:00006ED8                 mov     ecx, [eax+18h]
.text:00006EDB                 push    ecx
.text:00006EDC                 call    _log_packet
.text:00006EE1                 add     esp, 2Ch
.text:00006EE4
.text:00006EE4 loc_6EE4:                               ; CODE XREF: _ssh_gotdata+23j
.text:00006EE4                 mov     edx, [ebp+arg_0]
.text:00006EE7                 add     edx, 190h
.text:00006EED                 mov     [ebp+var_4], edx
.text:00006EF0                 mov     eax, [ebp+arg_0]
.text:00006EF3                 mov     ecx, [eax+190h]
.text:00006EF9                 mov     [ebp+var_C], ecx
.text:00006EFC                 cmp     [ebp+var_C], 0
.text:00006F00                 jz      short loc_6F1D
.text:00006F02                 cmp     [ebp+var_C], 0C7Bh
.text:00006F09                 jz      short loc_6F3A
.text:00006F0B                 cmp     [ebp+var_C], 0CA0h
.text:00006F12                 jz      loc_7021
.text:00006F18                 jmp     loc_702A
.text:00006F1D ; ---------------------------------------------------------------------------
.text:00006F1D
.text:00006F1D loc_6F1D:                               ; CODE XREF: _ssh_gotdata+68j
.text:00006F1D                                         ; _ssh_gotdata:loc_6F7Dj
.text:00006F1D                 mov     edx, 1
.text:00006F22                 test    edx, edx
.text:00006F24                 jz      short loc_6F7F
.text:00006F26                 cmp     [ebp+arg_8], 0
.text:00006F2A                 jnz     short loc_6F3E
.text:00006F2C
.text:00006F2C loc_6F2C:                               ; CODE XREF: _ssh_gotdata+A4j
.text:00006F2C                 mov     eax, [ebp+var_4]
.text:00006F2F                 mov     dword ptr [eax], 0C7Bh
.text:00006F35                 jmp     loc_7033
.text:00006F3A ; ---------------------------------------------------------------------------
.text:00006F3A
.text:00006F3A loc_6F3A:                               ; CODE XREF: _ssh_gotdata+71j
.text:00006F3A                 xor     ecx, ecx
.text:00006F3C                 jnz     short loc_6F2C
.text:00006F3E
.text:00006F3E loc_6F3E:                               ; CODE XREF: _ssh_gotdata+92j
.text:00006F3E                 mov     esi, esp
.text:00006F40                 mov     edx, [ebp+arg_4]
.text:00006F43                 movzx   eax, byte ptr [edx]
.text:00006F46                 push    eax
.text:00006F47                 mov     ecx, [ebp+arg_0]
.text:00006F4A                 push    ecx
.text:00006F4B                 mov     edx, [ebp+arg_0]
.text:00006F4E                 mov     eax, [edx+218h]
.text:00006F54                 call    eax
.text:00006F56                 add     esp, 8
.text:00006F59                 cmp     esi, esp
.text:00006F5B                 call    __RTC_CheckEsp
.text:00006F60                 mov     [ebp+var_8], eax
.text:00006F63                 mov     ecx, [ebp+arg_4]
.text:00006F66                 add     ecx, 1
.text:00006F69                 mov     [ebp+arg_4], ecx
.text:00006F6C
.text:00006F6C loc_6F6C:                               ; DATA XREF: .data:$SG87393o
.text:00006F6C                 mov     edx, [ebp+arg_8]
.text:00006F6F                 sub     edx, 1
.text:00006F72                 mov     [ebp+arg_8], edx
.text:00006F75                 cmp     [ebp+var_8], 0
.text:00006F79                 jnz     short loc_6F7D
.text:00006F7B                 jmp     short loc_6F7F
.text:00006F7D ; ---------------------------------------------------------------------------
.text:00006F7D
.text:00006F7D loc_6F7D:                               ; CODE XREF: _ssh_gotdata+E1j
.text:00006F7D                 jmp     short loc_6F1D
.text:00006F7F ; ---------------------------------------------------------------------------
.text:00006F7F
.text:00006F7F loc_6F7F:                               ; CODE XREF: _ssh_gotdata+8Cj
.text:00006F7F                                         ; _ssh_gotdata+E3j ...
.text:00006F7F                 mov     eax, 1
.text:00006F84                 test    eax, eax
.text:00006F86                 jz      loc_702A
.text:00006F8C
.text:00006F8C loc_6F8C:                               ; CODE XREF: _ssh_gotdata:loc_7011j
.text:00006F8C                 mov     ecx, [ebp+arg_0]
.text:00006F8F                 add     ecx, 238h
.text:00006F95                 push    ecx
.text:00006F96                 call    _bufchain_size
.text:00006F9B                 add     esp, 4
.text:00006F9E                 test    eax, eax
.text:00006FA0                 jg      short loc_6FA8
.text:00006FA2                 cmp     [ebp+arg_8], 0
.text:00006FA6                 jle     short loc_7016
.text:00006FA8
.text:00006FA8 loc_6FA8:                               ; CODE XREF: _ssh_gotdata+108j
.text:00006FA8                 mov     edx, [ebp+arg_0]
.text:00006FAB                 cmp     dword ptr [edx+234h], 0
.text:00006FB2                 jz      short loc_6FCC
.text:00006FB4                 lea     eax, [ebp+arg_8]
.text:00006FB7                 push    eax
.text:00006FB8                 lea     ecx, [ebp+arg_4]
.text:00006FBB                 push    ecx
.text:00006FBC                 mov     edx, [ebp+arg_0]
.text:00006FBF                 push    edx
.text:00006FC0                 call    _ssh_queue_incoming_data
.text:00006FC5                 add     esp, 0Ch
.text:00006FC8                 jmp     short loc_7016
.text:00006FCA ; ---------------------------------------------------------------------------
.text:00006FCA                 jmp     short loc_7003
.text:00006FCC ; ---------------------------------------------------------------------------
.text:00006FCC
.text:00006FCC loc_6FCC:                               ; CODE XREF: _ssh_gotdata+11Aj
.text:00006FCC                 mov     eax, [ebp+arg_0]
.text:00006FCF                 add     eax, 238h
.text:00006FD4                 push    eax
.text:00006FD5                 call    _bufchain_size
.text:00006FDA                 add     esp, 4
.text:00006FDD                 test    eax, eax
.text:00006FDF                 jle     short loc_6FEF
.text:00006FE1                 mov     ecx, [ebp+arg_0]
.text:00006FE4                 push    ecx
.text:00006FE5                 call    _ssh_process_queued_incoming_data
.text:00006FEA                 add     esp, 4
.text:00006FED                 jmp     short loc_7003
.text:00006FEF ; ---------------------------------------------------------------------------
.text:00006FEF
.text:00006FEF loc_6FEF:                               ; CODE XREF: _ssh_gotdata+147j
.text:00006FEF                 lea     edx, [ebp+arg_8]
.text:00006FF2                 push    edx
.text:00006FF3                 lea     eax, [ebp+arg_4]
.text:00006FF6                 push    eax
.text:00006FF7                 mov     ecx, [ebp+arg_0]
.text:00006FFA                 push    ecx
.text:00006FFB                 call    _ssh_process_incoming_data
.text:00007000                 add     esp, 0Ch
.text:00007003
.text:00007003 loc_7003:                               ; CODE XREF: _ssh_gotdata+132j
.text:00007003                                         ; _ssh_gotdata+155j
.text:00007003                 mov     edx, [ebp+arg_0]
.text:00007006                 cmp     dword ptr [edx+118h], 4
.text:0000700D                 jnz     short loc_7011
.text:0000700F                 jmp     short loc_7033
.text:00007011 ; ---------------------------------------------------------------------------
.text:00007011
.text:00007011 loc_7011:                               ; CODE XREF: _ssh_gotdata+175j
.text:00007011                 jmp     loc_6F8C
.text:00007016 ; ---------------------------------------------------------------------------
.text:00007016
.text:00007016 loc_7016:                               ; CODE XREF: _ssh_gotdata+10Ej
.text:00007016                                         ; _ssh_gotdata+130j ...
.text:00007016                 mov     eax, [ebp+var_4]
.text:00007019                 mov     dword ptr [eax], 0CA0h
.text:0000701F                 jmp     short loc_7033
.text:00007021 ; ---------------------------------------------------------------------------
.text:00007021
.text:00007021 loc_7021:                               ; CODE XREF: _ssh_gotdata+7Aj
.text:00007021                 xor     ecx, ecx
.text:00007023                 jnz     short loc_7016
.text:00007025                 jmp     loc_6F7F
.text:0000702A ; ---------------------------------------------------------------------------
.text:0000702A
.text:0000702A loc_702A:                               ; CODE XREF: _ssh_gotdata+80j
.text:0000702A                                         ; _ssh_gotdata+EEj
.text:0000702A                 mov     edx, [ebp+var_4]
.text:0000702D                 mov     dword ptr [edx], 0
.text:00007033
.text:00007033 loc_7033:                               ; CODE XREF: _ssh_gotdata+9Dj
.text:00007033                                         ; _ssh_gotdata+177j ...
.text:00007033                 pop     esi
.text:00007034                 add     esp, 0Ch
.text:00007037                 cmp     ebp, esp
.text:00007039                 call    __RTC_CheckEsp
.text:0000703E                 mov     esp, ebp
.text:00007040                 pop     ebp
.text:00007041                 retn
.text:00007041 _ssh_gotdata    endp
.text:00007041
.text:00007041 ; ---------------------------------------------------------------------------
.text:00007042                 align 8
.text:00007048
.text:00007048 ; =============== S U B R O U T I N E =======================================
.text:00007048
.text:00007048 ; Attributes: bp-based frame
.text:00007048
.text:00007048 _ssh_process_incoming_data proc near    ; CODE XREF: _ssh_gotdata+163p
.text:00007048                                         ; _ssh_process_queued_incoming_data+80p
.text:00007048
.text:00007048 var_4           = dword ptr -4
.text:00007048 arg_0           = dword ptr  8
.text:00007048 arg_4           = dword ptr  0Ch
.text:00007048 arg_8           = dword ptr  10h
.text:00007048
.text:00007048                 push    ebp
.text:00007049                 mov     ebp, esp
.text:0000704B                 push    ecx
.text:0000704C                 push    esi
.text:0000704D                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00007054                 mov     esi, esp
.text:00007056                 mov     eax, [ebp+arg_8]
.text:00007059                 push    eax
.text:0000705A                 mov     ecx, [ebp+arg_4]
.text:0000705D                 push    ecx
.text:0000705E                 mov     edx, [ebp+arg_0]
.text:00007061                 push    edx
.text:00007062                 mov     eax, [ebp+arg_0]
.text:00007065                 mov     ecx, [eax+214h]
.text:0000706B                 call    ecx
.text:0000706D                 add     esp, 0Ch
.text:00007070                 cmp     esi, esp
.text:00007072                 call    __RTC_CheckEsp
.text:00007077                 mov     [ebp+var_4], eax
.text:0000707A                 cmp     [ebp+var_4], 0
.text:0000707E                 jz      short loc_70AF
.text:00007080                 mov     esi, esp
.text:00007082                 mov     edx, [ebp+var_4]
.text:00007085                 push    edx
.text:00007086                 push    0
.text:00007088                 push    0
.text:0000708A                 mov     eax, [ebp+arg_0]
.text:0000708D                 push    eax
.text:0000708E                 mov     ecx, [ebp+arg_0]
.text:00007091                 mov     edx, [ecx+210h]
.text:00007097                 call    edx
.text:00007099                 add     esp, 10h
.text:0000709C                 cmp     esi, esp
.text:0000709E                 call    __RTC_CheckEsp
.text:000070A3                 mov     eax, [ebp+var_4]
.text:000070A6                 push    eax
.text:000070A7                 call    _ssh_free_packet
.text:000070AC                 add     esp, 4
.text:000070AF
.text:000070AF loc_70AF:                               ; CODE XREF: _ssh_process_incoming_data+36j
.text:000070AF                 pop     esi
.text:000070B0                 add     esp, 4
.text:000070B3                 cmp     ebp, esp
.text:000070B5                 call    __RTC_CheckEsp
.text:000070BA                 mov     esp, ebp
.text:000070BC                 pop     ebp
.text:000070BD                 retn
.text:000070BD _ssh_process_incoming_data endp
.text:000070BD
.text:000070BD ; ---------------------------------------------------------------------------
.text:000070BE                 db 0Ah dup(0CCh)
.text:000070C8
.text:000070C8 ; =============== S U B R O U T I N E =======================================
.text:000070C8
.text:000070C8 ; Attributes: bp-based frame
.text:000070C8
.text:000070C8 _ssh_free_packet proc near              ; CODE XREF: _ssh_process_incoming_data+5Fp
.text:000070C8                                         ; _s_wrpkt+6Dp ...
.text:000070C8
.text:000070C8 arg_0           = dword ptr  8
.text:000070C8
.text:000070C8                 push    ebp
.text:000070C9                 mov     ebp, esp
.text:000070CB                 mov     eax, [ebp+arg_0]
.text:000070CE                 mov     ecx, [eax+10h]
.text:000070D1                 push    ecx
.text:000070D2                 call    _safefree
.text:000070D7                 add     esp, 4
.text:000070DA                 mov     edx, [ebp+arg_0]
.text:000070DD                 push    edx
.text:000070DE                 call    _safefree
.text:000070E3                 add     esp, 4
.text:000070E6                 cmp     ebp, esp
.text:000070E8                 call    __RTC_CheckEsp
.text:000070ED                 pop     ebp
.text:000070EE                 retn
.text:000070EE _ssh_free_packet endp
.text:000070EE
.text:000070EE ; ---------------------------------------------------------------------------
.text:000070EF                 db 9 dup(0CCh)
.text:000070F8
.text:000070F8 ; =============== S U B R O U T I N E =======================================
.text:000070F8
.text:000070F8 ; Attributes: bp-based frame
.text:000070F8
.text:000070F8 _ssh_queue_incoming_data proc near      ; CODE XREF: _ssh_gotdata+128p
.text:000070F8
.text:000070F8 arg_0           = dword ptr  8
.text:000070F8 arg_4           = dword ptr  0Ch
.text:000070F8 arg_8           = dword ptr  10h
.text:000070F8
.text:000070F8                 push    ebp
.text:000070F9                 mov     ebp, esp
.text:000070FB                 mov     eax, [ebp+arg_8]
.text:000070FE                 mov     ecx, [eax]
.text:00007100                 push    ecx
.text:00007101                 mov     edx, [ebp+arg_4]
.text:00007104                 mov     eax, [edx]
.text:00007106                 push    eax
.text:00007107                 mov     ecx, [ebp+arg_0]
.text:0000710A                 add     ecx, 238h
.text:00007110                 push    ecx
.text:00007111                 call    _bufchain_add
.text:00007116                 add     esp, 0Ch
.text:00007119                 mov     edx, [ebp+arg_4]
.text:0000711C                 mov     eax, [edx]
.text:0000711E                 mov     ecx, [ebp+arg_8]
.text:00007121                 add     eax, [ecx]
.text:00007123                 mov     edx, [ebp+arg_4]
.text:00007126                 mov     [edx], eax
.text:00007128                 mov     eax, [ebp+arg_8]
.text:0000712B                 mov     dword ptr [eax], 0
.text:00007131                 cmp     ebp, esp
.text:00007133                 call    __RTC_CheckEsp
.text:00007138                 pop     ebp
.text:00007139                 retn
.text:00007139 _ssh_queue_incoming_data endp
.text:00007139
.text:00007139 ; ---------------------------------------------------------------------------
.text:0000713A                 db 0Eh dup(0CCh)
.text:00007148
.text:00007148 ; =============== S U B R O U T I N E =======================================
.text:00007148
.text:00007148 ; Attributes: bp-based frame
.text:00007148
.text:00007148 _ssh_process_queued_incoming_data proc near ; CODE XREF: _ssh_gotdata+14Dp
.text:00007148                                         ; _ssh_dialog_callback+53p ...
.text:00007148
.text:00007148 var_28          = dword ptr -28h
.text:00007148 var_20          = dword ptr -20h
.text:00007148 var_14          = dword ptr -14h
.text:00007148 var_8           = dword ptr -8
.text:00007148 arg_0           = dword ptr  8
.text:00007148
.text:00007148                 push    ebp
.text:00007149                 mov     ebp, esp
.text:0000714B                 sub     esp, 28h
.text:0000714E                 push    edi
.text:0000714F                 lea     edi, [ebp+var_28]
.text:00007152                 mov     ecx, 0Ah
.text:00007157                 mov     eax, 0CCCCCCCCh
.text:0000715C                 rep stosd
.text:0000715E
.text:0000715E loc_715E:                               ; CODE XREF: _ssh_process_queued_incoming_data:loc_71F3j
.text:0000715E                 mov     eax, [ebp+arg_0]
.text:00007161                 cmp     dword ptr [eax+234h], 0
.text:00007168                 jnz     loc_71F8
.text:0000716E                 mov     ecx, [ebp+arg_0]
.text:00007171                 add     ecx, 238h
.text:00007177                 push    ecx
.text:00007178                 call    _bufchain_size
.text:0000717D                 add     esp, 4
.text:00007180                 test    eax, eax
.text:00007182                 jz      short loc_71F8
.text:00007184                 lea     edx, [ebp+var_20]
.text:00007187                 push    edx
.text:00007188                 lea     eax, [ebp+var_8]
.text:0000718B                 push    eax
.text:0000718C                 mov     ecx, [ebp+arg_0]
.text:0000718F                 add     ecx, 238h
.text:00007195                 push    ecx
.text:00007196                 call    _bufchain_prefix
.text:0000719B                 add     esp, 0Ch
.text:0000719E                 mov     edx, [ebp+var_8]
.text:000071A1                 mov     [ebp+var_14], edx
.text:000071A4                 mov     eax, [ebp+var_20]
.text:000071A7                 mov     [ebp+var_28], eax
.text:000071AA
.text:000071AA loc_71AA:                               ; CODE XREF: _ssh_process_queued_incoming_data+88j
.text:000071AA                 mov     ecx, [ebp+arg_0]
.text:000071AD                 cmp     dword ptr [ecx+234h], 0
.text:000071B4                 jnz     short loc_71D2
.text:000071B6                 cmp     [ebp+var_20], 0
.text:000071BA                 jle     short loc_71D2
.text:000071BC                 lea     edx, [ebp+var_20]
.text:000071BF                 push    edx
.text:000071C0                 lea     eax, [ebp+var_14]
.text:000071C3                 push    eax
.text:000071C4                 mov     ecx, [ebp+arg_0]
.text:000071C7                 push    ecx
.text:000071C8                 call    _ssh_process_incoming_data
.text:000071CD                 add     esp, 0Ch
.text:000071D0                 jmp     short loc_71AA
.text:000071D2 ; ---------------------------------------------------------------------------
.text:000071D2
.text:000071D2 loc_71D2:                               ; CODE XREF: _ssh_process_queued_incoming_data+6Cj
.text:000071D2                                         ; _ssh_process_queued_incoming_data+72j
.text:000071D2                 mov     edx, [ebp+var_28]
.text:000071D5                 cmp     edx, [ebp+var_20]
.text:000071D8                 jle     short loc_71F3
.text:000071DA                 mov     eax, [ebp+var_28]
.text:000071DD                 sub     eax, [ebp+var_20]
.text:000071E0                 push    eax
.text:000071E1                 mov     ecx, [ebp+arg_0]
.text:000071E4                 add     ecx, 238h
.text:000071EA                 push    ecx
.text:000071EB                 call    _bufchain_consume
.text:000071F0                 add     esp, 8
.text:000071F3
.text:000071F3 loc_71F3:                               ; CODE XREF: _ssh_process_queued_incoming_data+90j
.text:000071F3                 jmp     loc_715E
.text:000071F8 ; ---------------------------------------------------------------------------
.text:000071F8
.text:000071F8 loc_71F8:                               ; CODE XREF: _ssh_process_queued_incoming_data+20j
.text:000071F8                                         ; _ssh_process_queued_incoming_data+3Aj
.text:000071F8                 push    edx
.text:000071F9                 mov     ecx, ebp
.text:000071FB                 push    eax
.text:000071FC                 lea     edx, $LN12
.text:00007202                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00007207                 pop     eax
.text:00007208                 pop     edx
.text:00007209                 pop     edi
.text:0000720A                 add     esp, 28h
.text:0000720D                 cmp     ebp, esp
.text:0000720F                 call    __RTC_CheckEsp
.text:00007214                 mov     esp, ebp
.text:00007216                 pop     ebp
.text:00007217                 retn
.text:00007217 _ssh_process_queued_incoming_data endp
.text:00007217
.text:00007217 ; ---------------------------------------------------------------------------
.text:00007218 $LN12           dd 3                    ; DATA XREF: _ssh_process_queued_incoming_data+B4o
.text:0000721C                 dd offset $LN11_0
.text:00007220 $LN11_0         dd 0FFFFFFF8h, 4        ; DATA XREF: .text:0000721Co
.text:00007228                 dd offset $LN8          ; "vdata"
.text:0000722C                 dd 0FFFFFFECh, 4
.text:00007234                 dd offset $LN9_0        ; "data"
.text:00007238                 dd 0FFFFFFE0h, 4
.text:00007240                 dd offset $LN10_0
.text:00007244 $LN10_0         dd 6E656Ch              ; DATA XREF: .text:00007240o
.text:00007248 $LN9_0          db 'data',0             ; DATA XREF: .text:00007234o
.text:0000724D $LN8            db 'vdata',0            ; DATA XREF: .text:00007228o
.text:00007253                 align 8
.text:00007258
.text:00007258 ; =============== S U B R O U T I N E =======================================
.text:00007258
.text:00007258 ; Attributes: bp-based frame
.text:00007258
.text:00007258 _ssh_sent       proc near               ; DATA XREF: .rdata:000065A0o
.text:00007258
.text:00007258 var_4           = dword ptr -4
.text:00007258 arg_0           = dword ptr  8
.text:00007258 arg_4           = dword ptr  0Ch
.text:00007258
.text:00007258                 push    ebp
.text:00007259                 mov     ebp, esp
.text:0000725B                 push    ecx
.text:0000725C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00007263                 mov     eax, [ebp+arg_0]
.text:00007266                 mov     [ebp+var_4], eax
.text:00007269                 cmp     [ebp+arg_4], 8000h
.text:00007270                 jge     short loc_7284
.text:00007272                 mov     ecx, [ebp+arg_4]
.text:00007275                 push    ecx
.text:00007276                 push    0
.text:00007278                 mov     edx, [ebp+var_4]
.text:0000727B                 push    edx
.text:0000727C                 call    _ssh_throttle_all
.text:00007281                 add     esp, 0Ch
.text:00007284
.text:00007284 loc_7284:                               ; CODE XREF: _ssh_sent+18j
.text:00007284                 add     esp, 4
.text:00007287                 cmp     ebp, esp
.text:00007289                 call    __RTC_CheckEsp
.text:0000728E                 mov     esp, ebp
.text:00007290                 pop     ebp
.text:00007291                 retn
.text:00007291 _ssh_sent       endp
.text:00007291
.text:00007291 ; ---------------------------------------------------------------------------
.text:00007292                 align 8
.text:00007298
.text:00007298 ; =============== S U B R O U T I N E =======================================
.text:00007298
.text:00007298 ; Attributes: bp-based frame
.text:00007298
.text:00007298 _ssh_throttle_all proc near             ; CODE XREF: _ssh_sent+24p
.text:00007298                                         ; _s_wrpkt+61p ...
.text:00007298
.text:00007298 var_C           = dword ptr -0Ch
.text:00007298 var_8           = dword ptr -8
.text:00007298 var_4           = dword ptr -4
.text:00007298 arg_0           = dword ptr  8
.text:00007298 arg_4           = dword ptr  0Ch
.text:00007298 arg_8           = dword ptr  10h
.text:00007298
.text:00007298                 push    ebp
.text:00007299                 mov     ebp, esp
.text:0000729B                 sub     esp, 0Ch
.text:0000729E                 mov     [ebp+var_C], 0CCCCCCCCh
.text:000072A5                 mov     [ebp+var_8], 0CCCCCCCCh
.text:000072AC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000072B3                 mov     eax, [ebp+arg_0]
.text:000072B6                 mov     ecx, [ebp+arg_4]
.text:000072B9                 cmp     ecx, [eax+178h]
.text:000072BF                 jnz     short loc_72C6
.text:000072C1                 jmp     loc_7362
.text:000072C6 ; ---------------------------------------------------------------------------
.text:000072C6
.text:000072C6 loc_72C6:                               ; CODE XREF: _ssh_throttle_all+27j
.text:000072C6                 mov     edx, [ebp+arg_0]
.text:000072C9                 mov     eax, [ebp+arg_4]
.text:000072CC                 mov     [edx+178h], eax
.text:000072D2                 mov     ecx, [ebp+arg_0]
.text:000072D5                 mov     edx, [ebp+arg_8]
.text:000072D8                 mov     [ecx+174h], edx
.text:000072DE                 mov     eax, [ebp+arg_0]
.text:000072E1                 cmp     dword ptr [eax+0F8h], 0
.text:000072E8                 jnz     short loc_72EC
.text:000072EA                 jmp     short loc_7362
.text:000072EC ; ---------------------------------------------------------------------------
.text:000072EC
.text:000072EC loc_72EC:                               ; CODE XREF: _ssh_throttle_all+50j
.text:000072EC                 mov     [ebp+var_4], 0
.text:000072F3                 jmp     short loc_72FE
.text:000072F5 ; ---------------------------------------------------------------------------
.text:000072F5
.text:000072F5 loc_72F5:                               ; CODE XREF: _ssh_throttle_all:loc_7360j
.text:000072F5                 mov     ecx, [ebp+var_4]
.text:000072F8                 add     ecx, 1
.text:000072FB                 mov     [ebp+var_4], ecx
.text:000072FE
.text:000072FE loc_72FE:                               ; CODE XREF: _ssh_throttle_all+5Bj
.text:000072FE                 mov     edx, [ebp+var_4]
.text:00007301                 push    edx
.text:00007302                 mov     eax, [ebp+arg_0]
.text:00007305                 mov     ecx, [eax+0F8h]
.text:0000730B                 push    ecx
.text:0000730C                 call    _index234
.text:00007311                 add     esp, 8
.text:00007314                 mov     [ebp+var_8], eax
.text:00007317                 cmp     [ebp+var_8], 0
.text:0000731B                 jz      short loc_7362
.text:0000731D                 mov     edx, [ebp+var_8]
.text:00007320                 mov     eax, [edx+0Ch]
.text:00007323
.text:00007323 loc_7323:                               ; DATA XREF: .data:$SG88133o
.text:00007323                                         ; .data:$SG89809o
.text:00007323                 mov     [ebp+var_C], eax
.text:00007326                 cmp     [ebp+var_C], 1
.text:0000732A                 jz      short loc_7336
.text:0000732C                 cmp     [ebp+var_C], 3
.text:00007330                 jz      short loc_734D
.text:00007332                 jmp     short loc_7360
.text:00007334 ; ---------------------------------------------------------------------------
.text:00007334                 jmp     short loc_7360
.text:00007336 ; ---------------------------------------------------------------------------
.text:00007336
.text:00007336 loc_7336:                               ; CODE XREF: _ssh_throttle_all+92j
.text:00007336                 mov     ecx, [ebp+arg_4]
.text:00007339                 push    ecx
.text:0000733A                 mov     edx, [ebp+var_8]
.text:0000733D                 mov     eax, [edx+4Ch]
.text:00007340                 push    eax
.text:00007341                 call    _x11_override_throttle
.text:00007346                 add     esp, 8
.text:00007349                 jmp     short loc_7360
.text:0000734B ; ---------------------------------------------------------------------------
.text:0000734B                 jmp     short loc_7360
.text:0000734D ; ---------------------------------------------------------------------------
.text:0000734D
.text:0000734D loc_734D:                               ; CODE XREF: _ssh_throttle_all+98j
.text:0000734D                 mov     ecx, [ebp+arg_4]
.text:00007350                 push    ecx
.text:00007351                 mov     edx, [ebp+var_8]
.text:00007354                 mov     eax, [edx+4Ch]
.text:00007357                 push    eax
.text:00007358                 call    _pfd_override_throttle
.text:0000735D                 add     esp, 8
.text:00007360
.text:00007360 loc_7360:                               ; CODE XREF: _ssh_throttle_all+9Aj
.text:00007360                                         ; _ssh_throttle_all+9Cj ...
.text:00007360                 jmp     short loc_72F5
.text:00007362 ; ---------------------------------------------------------------------------
.text:00007362
.text:00007362 loc_7362:                               ; CODE XREF: _ssh_throttle_all+29j
.text:00007362                                         ; _ssh_throttle_all+52j ...
.text:00007362                 add     esp, 0Ch
.text:00007365                 cmp     ebp, esp
.text:00007367                 call    __RTC_CheckEsp
.text:0000736C                 mov     esp, ebp
.text:0000736E                 pop     ebp
.text:0000736F                 retn
.text:0000736F _ssh_throttle_all endp
.text:0000736F
.text:0000736F ; ---------------------------------------------------------------------------
.text:00007370                 db 8 dup(0CCh)
.text:00007378
.text:00007378 ; =============== S U B R O U T I N E =======================================
.text:00007378
.text:00007378 ; Attributes: bp-based frame
.text:00007378
.text:00007378 ; int __cdecl verify_ssh_manual_host_key(int, char *Str, int, int)
.text:00007378                 public _verify_ssh_manual_host_key
.text:00007378 _verify_ssh_manual_host_key proc near   ; CODE XREF: _do_ssh2_transport+24EFp
.text:00007378                                         ; _do_ssh1_login+644p
.text:00007378
.text:00007378 var_24          = dword ptr -24h
.text:00007378 var_20          = dword ptr -20h
.text:00007378 var_1C          = dword ptr -1Ch
.text:00007378 var_18          = dword ptr -18h
.text:00007378 var_14          = dword ptr -14h
.text:00007378 var_10          = dword ptr -10h
.text:00007378 var_C           = dword ptr -0Ch
.text:00007378 var_8           = dword ptr -8
.text:00007378 var_4           = dword ptr -4
.text:00007378 arg_0           = dword ptr  8
.text:00007378 Str             = dword ptr  0Ch
.text:00007378 arg_8           = dword ptr  10h
.text:00007378 arg_C           = dword ptr  14h
.text:00007378
.text:00007378                 push    ebp
.text:00007379                 mov     ebp, esp
.text:0000737B                 sub     esp, 24h
.text:0000737E                 push    esi
.text:0000737F                 mov     eax, 0CCCCCCCCh
.text:00007384                 mov     [ebp+var_24], eax
.text:00007387                 mov     [ebp+var_20], eax
.text:0000738A                 mov     [ebp+var_1C], eax
.text:0000738D                 mov     [ebp+var_18], eax
.text:00007390                 mov     [ebp+var_14], eax
.text:00007393                 mov     [ebp+var_10], eax
.text:00007396                 mov     [ebp+var_C], eax
.text:00007399                 mov     [ebp+var_8], eax
.text:0000739C                 mov     [ebp+var_4], eax
.text:0000739F                 push    0
.text:000073A1                 push    0A7h ; 'º'
.text:000073A6                 mov     eax, [ebp+arg_0]
.text:000073A9                 mov     ecx, [eax+21Ch]
.text:000073AF                 push    ecx
.text:000073B0                 call    _conf_get_str_nthstrkey
.text:000073B5                 add     esp, 0Ch
.text:000073B8                 test    eax, eax
.text:000073BA                 jnz     short loc_73C4
.text:000073BC                 or      eax, 0FFFFFFFFh
.text:000073BF                 jmp     loc_758F
.text:000073C4 ; ---------------------------------------------------------------------------
.text:000073C4
.text:000073C4 loc_73C4:                               ; CODE XREF: _verify_ssh_manual_host_key+42j
.text:000073C4                 cmp     [ebp+Str], 0
.text:000073C8                 jz      loc_74A3
.text:000073CE                 push    20h ; ' '       ; Ch
.text:000073D0                 mov     edx, [ebp+Str]
.text:000073D3                 push    edx             ; Str
.text:000073D4                 call    _strrchr
.text:000073D9                 add     esp, 8
.text:000073DC                 mov     [ebp+var_4], eax
.text:000073DF                 cmp     [ebp+var_4], 0
.text:000073E3                 jz      short loc_73F0
.text:000073E5                 mov     eax, [ebp+var_4]
.text:000073E8                 add     eax, 1
.text:000073EB                 mov     [ebp+var_24], eax
.text:000073EE                 jmp     short loc_73F6
.text:000073F0 ; ---------------------------------------------------------------------------
.text:000073F0
.text:000073F0 loc_73F0:                               ; CODE XREF: _verify_ssh_manual_host_key+6Bj
.text:000073F0                 mov     ecx, [ebp+Str]
.text:000073F3                 mov     [ebp+var_24], ecx
.text:000073F6
.text:000073F6 loc_73F6:                               ; CODE XREF: _verify_ssh_manual_host_key+76j
.text:000073F6                 mov     edx, [ebp+var_24]
.text:000073F9                 mov     [ebp+Str], edx
.text:000073FC                 mov     eax, [ebp+Str]
.text:000073FF                 push    eax             ; Str
.text:00007400                 call    _strlen
.text:00007405                 add     esp, 4
.text:00007408                 cmp     eax, 2Fh ; '/'
.text:0000740B                 jz      short loc_7424
.text:0000740D                 push    0E7Ch           ; Line
.text:00007412                 push    offset $SG90006 ; "..\\..\\..\\ssh.c"
.text:00007417                 push    offset $SG90007 ; "strlen(fingerprint) == 16*3 - 1"
.text:0000741C                 call    __wassert
.text:00007421 ; ---------------------------------------------------------------------------
.text:00007421                 add     esp, 0Ch
.text:00007424
.text:00007424 loc_7424:                               ; CODE XREF: _verify_ssh_manual_host_key+93j
.text:00007424                 mov     edx, [ebp+Str]
.text:00007427                 movsx   eax, byte ptr [edx+2]
.text:0000742B                 cmp     eax, 3Ah ; ':'
.text:0000742E                 jz      short loc_7447
.text:00007430                 push    0E7Dh           ; Line
.text:00007435                 push    offset $SG90009 ; "..\\..\\..\\ssh.c"
.text:0000743A                 push    offset $SG90010 ; "fingerprint[2] == ':'"
.text:0000743F                 call    __wassert
.text:00007444 ; ---------------------------------------------------------------------------
.text:00007444                 add     esp, 0Ch
.text:00007447
.text:00007447 loc_7447:                               ; CODE XREF: _verify_ssh_manual_host_key+B6j
.text:00007447                 push    offset $SG90012 ; "0123456789abcdef:"
.text:0000744C                 mov     edx, [ebp+Str]
.text:0000744F                 push    edx             ; Str
.text:00007450                 call    _strspn
.text:00007455                 add     esp, 8
.text:00007458                 mov     ecx, [ebp+Str]
.text:0000745B                 movsx   edx, byte ptr [ecx+eax]
.text:0000745F                 test    edx, edx
.text:00007461                 jz      short loc_747A
.text:00007463                 push    0E7Eh           ; Line
.text:00007468                 push    offset $SG90013 ; "..\\..\\..\\ssh.c"
.text:0000746D                 push    offset $SG90014 ; "fingerprint[strspn(fingerprint, \"01234"...
.text:00007472                 call    __wassert
.text:00007477 ; ---------------------------------------------------------------------------
.text:00007477                 add     esp, 0Ch
.text:0000747A
.text:0000747A loc_747A:                               ; CODE XREF: _verify_ssh_manual_host_key+E9j
.text:0000747A                 mov     ecx, [ebp+Str]
.text:0000747D                 push    ecx
.text:0000747E                 push    0A7h ; 'º'
.text:00007483                 mov     edx, [ebp+arg_0]
.text:00007486                 mov     eax, [edx+21Ch]
.text:0000748C                 push    eax
.text:0000748D                 call    _conf_get_str_str_opt
.text:00007492                 add     esp, 0Ch
.text:00007495                 test    eax, eax
.text:00007497                 jz      short loc_74A3
.text:00007499                 mov     eax, 1
.text:0000749E                 jmp     loc_758F
.text:000074A3 ; ---------------------------------------------------------------------------
.text:000074A3
.text:000074A3 loc_74A3:                               ; CODE XREF: _verify_ssh_manual_host_key+50j
.text:000074A3                                         ; _verify_ssh_manual_host_key+11Fj
.text:000074A3                 cmp     [ebp+arg_C], 0
.text:000074A7                 jz      loc_758D
.text:000074AD                 mov     esi, esp
.text:000074AF                 lea     ecx, [ebp+var_14]
.text:000074B2                 push    ecx
.text:000074B3                 mov     edx, [ebp+arg_C]
.text:000074B6                 push    edx
.text:000074B7                 mov     eax, [ebp+arg_8]
.text:000074BA                 mov     ecx, [eax+0Ch]
.text:000074BD                 call    ecx
.text:000074BF                 add     esp, 8
.text:000074C2                 cmp     esi, esp
.text:000074C4                 call    __RTC_CheckEsp
.text:000074C9                 mov     [ebp+var_8], eax
.text:000074CC                 mov     eax, [ebp+var_14]
.text:000074CF                 add     eax, 2
.text:000074D2                 cdq
.text:000074D3                 mov     ecx, 3
.text:000074D8                 idiv    ecx
.text:000074DA                 mov     [ebp+var_1C], eax
.text:000074DD                 push    1
.text:000074DF                 mov     edx, [ebp+var_1C]
.text:000074E2                 lea     eax, ds:1[edx*4]
.text:000074E9                 push    eax
.text:000074EA                 call    _safemalloc
.text:000074EF                 add     esp, 8
.text:000074F2                 mov     [ebp+var_C], eax
.text:000074F5                 mov     [ebp+var_20], 0
.text:000074FC                 jmp     short loc_7507
.text:000074FE ; ---------------------------------------------------------------------------
.text:000074FE
.text:000074FE loc_74FE:                               ; CODE XREF: _verify_ssh_manual_host_key+1BFj
.text:000074FE                 mov     ecx, [ebp+var_20]
.text:00007501                 add     ecx, 1
.text:00007504                 mov     [ebp+var_20], ecx
.text:00007507
.text:00007507 loc_7507:                               ; CODE XREF: _verify_ssh_manual_host_key+184j
.text:00007507                 mov     edx, [ebp+var_20]
.text:0000750A                 cmp     edx, [ebp+var_1C]
.text:0000750D                 jge     short loc_7539
.text:0000750F                 mov     eax, [ebp+var_20]
.text:00007512                 mov     ecx, [ebp+var_C]
.text:00007515                 lea     edx, [ecx+eax*4]
.text:00007518                 push    edx
.text:00007519                 mov     eax, [ebp+var_20]
.text:0000751C                 imul    eax, 3
.text:0000751F                 mov     ecx, [ebp+var_14]
.text:00007522                 sub     ecx, eax
.text:00007524                 push    ecx
.text:00007525                 mov     edx, [ebp+var_20]
.text:00007528                 imul    edx, 3
.text:0000752B                 add     edx, [ebp+var_8]
.text:0000752E                 push    edx
.text:0000752F                 call    _base64_encode_atom
.text:00007534                 add     esp, 0Ch
.text:00007537                 jmp     short loc_74FE
.text:00007539 ; ---------------------------------------------------------------------------
.text:00007539
.text:00007539 loc_7539:                               ; CODE XREF: _verify_ssh_manual_host_key+195j
.text:00007539                 mov     eax, [ebp+var_1C]
.text:0000753C                 mov     ecx, [ebp+var_C]
.text:0000753F                 mov     byte ptr [ecx+eax*4], 0
.text:00007543                 mov     edx, [ebp+var_8]
.text:00007546                 push    edx
.text:00007547                 call    _safefree
.text:0000754C                 add     esp, 4
.text:0000754F                 mov     eax, [ebp+var_C]
.text:00007552                 push    eax
.text:00007553                 push    0A7h ; 'º'
.text:00007558                 mov     ecx, [ebp+arg_0]
.text:0000755B                 mov     edx, [ecx+21Ch]
.text:00007561                 push    edx
.text:00007562                 call    _conf_get_str_str_opt
.text:00007567                 add     esp, 0Ch
.text:0000756A                 test    eax, eax
.text:0000756C                 jz      short loc_7581
.text:0000756E                 mov     eax, [ebp+var_C]
.text:00007571                 push    eax
.text:00007572                 call    _safefree
.text:00007577                 add     esp, 4
.text:0000757A                 mov     eax, 1
.text:0000757F                 jmp     short loc_758F
.text:00007581 ; ---------------------------------------------------------------------------
.text:00007581
.text:00007581 loc_7581:                               ; CODE XREF: _verify_ssh_manual_host_key+1F4j
.text:00007581                 mov     ecx, [ebp+var_C]
.text:00007584                 push    ecx
.text:00007585                 call    _safefree
.text:0000758A                 add     esp, 4
.text:0000758D
.text:0000758D loc_758D:                               ; CODE XREF: _verify_ssh_manual_host_key+12Fj
.text:0000758D                 xor     eax, eax
.text:0000758F
.text:0000758F loc_758F:                               ; CODE XREF: _verify_ssh_manual_host_key+47j
.text:0000758F                                         ; _verify_ssh_manual_host_key+126j ...
.text:0000758F                 push    edx
.text:00007590                 mov     ecx, ebp
.text:00007592                 push    eax
.text:00007593                 lea     edx, $LN18
.text:00007599                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0000759E                 pop     eax
.text:0000759F                 pop     edx
.text:000075A0                 pop     esi
.text:000075A1                 add     esp, 24h
.text:000075A4                 cmp     ebp, esp
.text:000075A6                 call    __RTC_CheckEsp
.text:000075AB                 mov     esp, ebp
.text:000075AD                 pop     ebp
.text:000075AE                 retn
.text:000075AE _verify_ssh_manual_host_key endp
.text:000075AE
.text:000075AE ; ---------------------------------------------------------------------------
.text:000075AF                 align 10h
.text:000075B0 $LN18           dd 1                    ; DATA XREF: _verify_ssh_manual_host_key+21Bo
.text:000075B4                 dd offset $LN17
.text:000075B8 $LN17           dd 0FFFFFFECh, 4        ; DATA XREF: .text:000075B4o
.text:000075C0                 dd offset $LN16         ; "binlen"
.text:000075C4 $LN16           db 'binlen',0           ; DATA XREF: .text:000075C0o
.text:000075CB                 db 0Dh dup(0CCh)
.text:000075D8
.text:000075D8 ; =============== S U B R O U T I N E =======================================
.text:000075D8
.text:000075D8 ; Attributes: bp-based frame
.text:000075D8
.text:000075D8                 public _sshfwd_get_conf
.text:000075D8 _sshfwd_get_conf proc near
.text:000075D8
.text:000075D8 var_4           = dword ptr -4
.text:000075D8 arg_0           = dword ptr  8
.text:000075D8
.text:000075D8                 push    ebp
.text:000075D9                 mov     ebp, esp
.text:000075DB                 push    ecx
.text:000075DC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000075E3                 mov     eax, [ebp+arg_0]
.text:000075E6                 mov     ecx, [eax]
.text:000075E8                 mov     [ebp+var_4], ecx
.text:000075EB                 mov     edx, [ebp+var_4]
.text:000075EE                 mov     eax, [edx+21Ch]
.text:000075F4                 mov     esp, ebp
.text:000075F6                 pop     ebp
.text:000075F7                 retn
.text:000075F7 _sshfwd_get_conf endp
.text:000075F7
.text:000075F8
.text:000075F8 ; =============== S U B R O U T I N E =======================================
.text:000075F8
.text:000075F8 ; Attributes: bp-based frame
.text:000075F8
.text:000075F8                 public _sshfwd_write_eof
.text:000075F8 _sshfwd_write_eof proc near             ; CODE XREF: _ssh_agentf_callback+D3p
.text:000075F8                                         ; _ssh2_channel_got_eof+5Dp ...
.text:000075F8
.text:000075F8 var_4           = dword ptr -4
.text:000075F8 arg_0           = dword ptr  8
.text:000075F8
.text:000075F8                 push    ebp
.text:000075F9                 mov     ebp, esp
.text:000075FB                 push    ecx
.text:000075FC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00007603                 mov     eax, [ebp+arg_0]
.text:00007606                 mov     ecx, [eax]
.text:00007608                 mov     [ebp+var_4], ecx
.text:0000760B                 mov     edx, [ebp+var_4]
.text:0000760E                 cmp     dword ptr [edx+118h], 4
.text:00007615                 jnz     short loc_7619
.text:00007617                 jmp     short loc_763C
.text:00007619 ; ---------------------------------------------------------------------------
.text:00007619
.text:00007619 loc_7619:                               ; CODE XREF: _sshfwd_write_eof+1Dj
.text:00007619                 mov     eax, [ebp+arg_0]
.text:0000761C                 mov     ecx, [eax+14h]
.text:0000761F                 and     ecx, 1
.text:00007622                 jz      short loc_7626
.text:00007624                 jmp     short loc_763C
.text:00007626 ; ---------------------------------------------------------------------------
.text:00007626
.text:00007626 loc_7626:                               ; CODE XREF: _sshfwd_write_eof+2Aj
.text:00007626                 mov     edx, [ebp+arg_0]
.text:00007629                 mov     dword ptr [edx+18h], 1
.text:00007630                 mov     eax, [ebp+arg_0]
.text:00007633                 push    eax
.text:00007634                 call    _ssh_channel_try_eof
.text:00007639                 add     esp, 4
.text:0000763C
.text:0000763C loc_763C:                               ; CODE XREF: _sshfwd_write_eof+1Fj
.text:0000763C                                         ; _sshfwd_write_eof+2Cj
.text:0000763C                 add     esp, 4
.text:0000763F                 cmp     ebp, esp
.text:00007641                 call    __RTC_CheckEsp
.text:00007646                 mov     esp, ebp
.text:00007648                 pop     ebp
.text:00007649                 retn
.text:00007649 _sshfwd_write_eof endp
.text:00007649
.text:00007649 ; ---------------------------------------------------------------------------
.text:0000764A                 db 0Eh dup(0CCh)
.text:00007658
.text:00007658 ; =============== S U B R O U T I N E =======================================
.text:00007658
.text:00007658 ; Attributes: bp-based frame
.text:00007658
.text:00007658 _ssh_channel_try_eof proc near          ; CODE XREF: _sshfwd_write_eof+3Cp
.text:00007658                                         ; _ssh2_try_send+12Dp ...
.text:00007658
.text:00007658 var_8           = dword ptr -8
.text:00007658 var_4           = dword ptr -4
.text:00007658 arg_0           = dword ptr  8
.text:00007658
.text:00007658                 push    ebp
.text:00007659                 mov     ebp, esp
.text:0000765B                 sub     esp, 8
.text:0000765E                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00007665                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000766C                 mov     eax, [ebp+arg_0]
.text:0000766F                 mov     ecx, [eax]
.text:00007671                 mov     [ebp+var_4], ecx
.text:00007674                 mov     edx, [ebp+arg_0]
.text:00007677                 cmp     dword ptr [edx+18h], 0
.text:0000767B                 jnz     short loc_7694
.text:0000767D                 push    1283h           ; Line
.text:00007682                 push    offset $SG90720 ; "..\\..\\..\\ssh.c"
.text:00007687                 push    offset $SG90721 ; "c->pending_eof"
.text:0000768C                 call    __wassert
.text:00007691 ; ---------------------------------------------------------------------------
.text:00007691                 add     esp, 0Ch
.text:00007694
.text:00007694 loc_7694:                               ; CODE XREF: _ssh_channel_try_eof+23j
.text:00007694                 mov     ecx, [ebp+arg_0]
.text:00007697                 cmp     dword ptr [ecx+10h], 0
.text:0000769B                 jz      short loc_76A2
.text:0000769D                 jmp     loc_7751
.text:000076A2 ; ---------------------------------------------------------------------------
.text:000076A2
.text:000076A2 loc_76A2:                               ; CODE XREF: _ssh_channel_try_eof+43j
.text:000076A2                 mov     edx, [ebp+var_4]
.text:000076A5                 cmp     dword ptr [edx+16Ch], 2
.text:000076AC                 jnz     short loc_76C6
.text:000076AE                 mov     eax, [ebp+arg_0]
.text:000076B1                 add     eax, 20h ; ' '
.text:000076B4                 push    eax
.text:000076B5                 call    _bufchain_size
.text:000076BA                 add     esp, 4
.text:000076BD                 test    eax, eax
.text:000076BF                 jle     short loc_76C6
.text:000076C1                 jmp     loc_7751
.text:000076C6 ; ---------------------------------------------------------------------------
.text:000076C6
.text:000076C6 loc_76C6:                               ; CODE XREF: _ssh_channel_try_eof+54j
.text:000076C6                                         ; _ssh_channel_try_eof+67j
.text:000076C6                 mov     ecx, [ebp+arg_0]
.text:000076C9                 mov     dword ptr [ecx+18h], 0
.text:000076D0                 mov     edx, [ebp+var_4]
.text:000076D3                 cmp     dword ptr [edx+16Ch], 1
.text:000076DA                 jnz     short loc_7706
.text:000076DC                 push    0
.text:000076DE                 mov     eax, [ebp+arg_0]
.text:000076E1                 mov     ecx, [eax+4]
.text:000076E4                 push    ecx
.text:000076E5                 push    1
.text:000076E7                 push    18h
.text:000076E9                 mov     edx, [ebp+var_4]
.text:000076EC                 push    edx
.text:000076ED                 call    _send_packet
.text:000076F2                 add     esp, 14h
.text:000076F5                 mov     eax, [ebp+arg_0]
.text:000076F8                 mov     ecx, [eax+14h]
.text:000076FB                 or      ecx, 1
.text:000076FE                 mov     edx, [ebp+arg_0]
.text:00007701                 mov     [edx+14h], ecx
.text:00007704                 jmp     short loc_7751
.text:00007706 ; ---------------------------------------------------------------------------
.text:00007706
.text:00007706 loc_7706:                               ; CODE XREF: _ssh_channel_try_eof+82j
.text:00007706                 push    60h ; '`'
.text:00007708                 call    _ssh2_pkt_init
.text:0000770D                 add     esp, 4
.text:00007710                 mov     [ebp+var_8], eax
.text:00007713                 mov     eax, [ebp+arg_0]
.text:00007716                 mov     ecx, [eax+4]
.text:00007719                 push    ecx
.text:0000771A                 mov     edx, [ebp+var_8]
.text:0000771D                 push    edx
.text:0000771E                 call    _ssh_pkt_adduint32
.text:00007723                 add     esp, 8
.text:00007726                 mov     eax, [ebp+var_8]
.text:00007729                 push    eax
.text:0000772A                 mov     ecx, [ebp+var_4]
.text:0000772D                 push    ecx
.text:0000772E                 call    _ssh2_pkt_send
.text:00007733                 add     esp, 8
.text:00007736                 mov     edx, [ebp+arg_0]
.text:00007739                 mov     eax, [edx+14h]
.text:0000773C                 or      eax, 1
.text:0000773F                 mov     ecx, [ebp+arg_0]
.text:00007742                 mov     [ecx+14h], eax
.text:00007745                 mov     edx, [ebp+arg_0]
.text:00007748                 push    edx
.text:00007749                 call    _ssh2_channel_check_close
.text:0000774E                 add     esp, 4
.text:00007751
.text:00007751 loc_7751:                               ; CODE XREF: _ssh_channel_try_eof+45j
.text:00007751                                         ; _ssh_channel_try_eof+69j ...
.text:00007751                 add     esp, 8
.text:00007754                 cmp     ebp, esp
.text:00007756                 call    __RTC_CheckEsp
.text:0000775B                 mov     esp, ebp
.text:0000775D                 pop     ebp
.text:0000775E                 retn
.text:0000775E _ssh_channel_try_eof endp
.text:0000775E
.text:0000775E ; ---------------------------------------------------------------------------
.text:0000775F                 db 9 dup(0CCh)
.text:00007768
.text:00007768 ; =============== S U B R O U T I N E =======================================
.text:00007768
.text:00007768 ; Attributes: bp-based frame
.text:00007768
.text:00007768 _send_packet    proc near               ; CODE XREF: _ssh_channel_try_eof+95p
.text:00007768                                         ; _sshfwd_write+50p ...
.text:00007768
.text:00007768 var_8           = dword ptr -8
.text:00007768 var_4           = dword ptr -4
.text:00007768 arg_0           = dword ptr  8
.text:00007768 arg_4           = dword ptr  0Ch
.text:00007768 arg_8           = byte ptr  10h
.text:00007768
.text:00007768                 push    ebp
.text:00007769                 mov     ebp, esp
.text:0000776B                 sub     esp, 8
.text:0000776E                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00007775                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000777C                 lea     eax, [ebp+arg_8]
.text:0000777F                 mov     [ebp+var_8], eax
.text:00007782                 mov     ecx, [ebp+var_8]
.text:00007785                 push    ecx
.text:00007786                 mov     edx, [ebp+arg_4]
.text:00007789                 push    edx
.text:0000778A                 mov     eax, [ebp+arg_0]
.text:0000778D                 push    eax
.text:0000778E                 call    _construct_packet
.text:00007793                 add     esp, 0Ch
.text:00007796                 mov     [ebp+var_4], eax
.text:00007799                 mov     [ebp+var_8], 0
.text:000077A0                 mov     ecx, [ebp+var_4]
.text:000077A3                 push    ecx
.text:000077A4                 mov     edx, [ebp+arg_0]
.text:000077A7                 push    edx
.text:000077A8                 call    _s_wrpkt
.text:000077AD                 add     esp, 8
.text:000077B0                 add     esp, 8
.text:000077B3                 cmp     ebp, esp
.text:000077B5                 call    __RTC_CheckEsp
.text:000077BA                 mov     esp, ebp
.text:000077BC                 pop     ebp
.text:000077BD                 retn
.text:000077BD _send_packet    endp
.text:000077BD
.text:000077BD ; ---------------------------------------------------------------------------
.text:000077BE                 db 0Ah dup(0CCh)
.text:000077C8
.text:000077C8 ; =============== S U B R O U T I N E =======================================
.text:000077C8
.text:000077C8 ; Attributes: bp-based frame
.text:000077C8
.text:000077C8 _s_wrpkt        proc near               ; CODE XREF: _send_packet+40p
.text:000077C8                                         ; _do_ssh1_connection+55Ap
.text:000077C8
.text:000077C8 var_14          = dword ptr -14h
.text:000077C8 var_10          = dword ptr -10h
.text:000077C8 var_C           = dword ptr -0Ch
.text:000077C8 var_8           = dword ptr -8
.text:000077C8 var_4           = dword ptr -4
.text:000077C8 arg_0           = dword ptr  8
.text:000077C8 arg_4           = dword ptr  0Ch
.text:000077C8
.text:000077C8                 push    ebp
.text:000077C9                 mov     ebp, esp
.text:000077CB                 sub     esp, 14h
.text:000077CE                 mov     eax, 0CCCCCCCCh
.text:000077D3                 mov     [ebp+var_14], eax
.text:000077D6                 mov     [ebp+var_10], eax
.text:000077D9                 mov     [ebp+var_C], eax
.text:000077DC                 mov     [ebp+var_8], eax
.text:000077DF                 mov     [ebp+var_4], eax
.text:000077E2                 lea     eax, [ebp+var_10]
.text:000077E5                 push    eax
.text:000077E6                 mov     ecx, [ebp+arg_4]
.text:000077E9                 push    ecx
.text:000077EA                 mov     edx, [ebp+arg_0]
.text:000077ED                 push    edx
.text:000077EE                 call    _s_wrpkt_prepare
.text:000077F3                 add     esp, 0Ch
.text:000077F6                 mov     [ebp+var_4], eax
.text:000077F9                 mov     eax, [ebp+var_4]
.text:000077FC                 push    eax
.text:000077FD                 mov     ecx, [ebp+arg_4]
.text:00007800                 mov     edx, [ecx+10h]
.text:00007803                 add     edx, [ebp+var_10]
.text:00007806                 push    edx
.text:00007807                 mov     eax, [ebp+arg_0]
.text:0000780A                 push    eax
.text:0000780B                 call    _s_write
.text:00007810                 add     esp, 0Ch
.text:00007813                 mov     [ebp+var_8], eax
.text:00007816                 cmp     [ebp+var_8], 8000h
.text:0000781D                 jle     short loc_7831
.text:0000781F                 mov     ecx, [ebp+var_8]
.text:00007822                 push    ecx
.text:00007823                 push    1
.text:00007825                 mov     edx, [ebp+arg_0]
.text:00007828                 push    edx
.text:00007829                 call    _ssh_throttle_all
.text:0000782E                 add     esp, 0Ch
.text:00007831
.text:00007831 loc_7831:                               ; CODE XREF: _s_wrpkt+55j
.text:00007831                 mov     eax, [ebp+arg_4]
.text:00007834                 push    eax
.text:00007835                 call    _ssh_free_packet
.text:0000783A                 add     esp, 4
.text:0000783D                 push    edx
.text:0000783E                 mov     ecx, ebp
.text:00007840                 push    eax
.text:00007841                 lea     edx, $LN6
.text:00007847                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0000784C                 pop     eax
.text:0000784D                 pop     edx
.text:0000784E                 add     esp, 14h
.text:00007851                 cmp     ebp, esp
.text:00007853                 call    __RTC_CheckEsp
.text:00007858                 mov     esp, ebp
.text:0000785A                 pop     ebp
.text:0000785B                 retn
.text:0000785B _s_wrpkt        endp
.text:0000785B
.text:0000785B ; ---------------------------------------------------------------------------
.text:0000785C $LN6            dd 1                    ; DATA XREF: _s_wrpkt+79o
.text:00007860                 dd offset $LN5
.text:00007864 $LN5            dd 0FFFFFFF0h, 4        ; DATA XREF: .text:00007860o
.text:0000786C                 dd offset $LN4          ; "offset"
.text:00007870 $LN4            db 'offset',0           ; DATA XREF: .text:0000786Co
.text:00007877                 align 4
.text:00007878
.text:00007878 ; =============== S U B R O U T I N E =======================================
.text:00007878
.text:00007878 ; Attributes: bp-based frame
.text:00007878
.text:00007878 _s_wrpkt_prepare proc near              ; CODE XREF: _s_wrpkt+26p
.text:00007878                                         ; _s_wrpkt_defer+23p
.text:00007878
.text:00007878 var_30          = byte ptr -30h
.text:00007878 Size            = dword ptr -2Ch
.text:00007878 Src             = dword ptr -20h
.text:00007878 var_18          = dword ptr -18h
.text:00007878 var_14          = dword ptr -14h
.text:00007878 var_10          = dword ptr -10h
.text:00007878 var_C           = dword ptr -0Ch
.text:00007878 var_8           = dword ptr -8
.text:00007878 var_4           = dword ptr -4
.text:00007878 arg_0           = dword ptr  8
.text:00007878 arg_4           = dword ptr  0Ch
.text:00007878 arg_8           = dword ptr  10h
.text:00007878
.text:00007878                 push    ebp
.text:00007879                 mov     ebp, esp
.text:0000787B                 sub     esp, 30h
.text:0000787E                 push    esi
.text:0000787F                 push    edi
.text:00007880                 lea     edi, [ebp+var_30]
.text:00007883                 mov     ecx, 0Ch
.text:00007888                 mov     eax, 0CCCCCCCCh
.text:0000788D                 rep stosd
.text:0000788F                 mov     eax, [ebp+arg_0]
.text:00007892                 cmp     dword ptr [eax+18h], 0
.text:00007896                 jz      short loc_78A8
.text:00007898                 mov     ecx, [ebp+arg_4]
.text:0000789B                 push    ecx
.text:0000789C                 mov     edx, [ebp+arg_0]
.text:0000789F                 push    edx
.text:000078A0                 call    _ssh1_log_outgoing_packet
.text:000078A5                 add     esp, 8
.text:000078A8
.text:000078A8 loc_78A8:                               ; CODE XREF: _s_wrpkt_prepare+1Ej
.text:000078A8                 mov     eax, [ebp+arg_0]
.text:000078AB                 cmp     dword ptr [eax+3Ch], 0
.text:000078AF                 jz      short loc_7922
.text:000078B1                 lea     ecx, [ebp+Size]
.text:000078B4                 push    ecx
.text:000078B5                 lea     edx, [ebp+Src]
.text:000078B8                 push    edx
.text:000078B9                 mov     eax, [ebp+arg_4]
.text:000078BC                 mov     ecx, [eax]
.text:000078BE                 sub     ecx, 0Ch
.text:000078C1                 push    ecx
.text:000078C2                 mov     edx, [ebp+arg_4]
.text:000078C5                 mov     eax, [edx+10h]
.text:000078C8                 add     eax, 0Ch
.text:000078CB                 push    eax
.text:000078CC                 mov     ecx, [ebp+arg_0]
.text:000078CF                 mov     edx, [ecx+88h]
.text:000078D5                 push    edx
.text:000078D6                 call    _zlib_compress_block
.text:000078DB                 add     esp, 14h
.text:000078DE                 mov     eax, [ebp+Size]
.text:000078E1                 add     eax, 2
.text:000078E4                 push    eax
.text:000078E5                 mov     ecx, [ebp+arg_4]
.text:000078E8                 push    ecx
.text:000078E9                 call    _ssh_pkt_ensure
.text:000078EE                 add     esp, 8
.text:000078F1                 mov     edx, [ebp+Size]
.text:000078F4                 push    edx             ; Size
.text:000078F5                 mov     eax, [ebp+Src]
.text:000078F8                 push    eax             ; Src
.text:000078F9                 mov     ecx, [ebp+arg_4]
.text:000078FC                 mov     edx, [ecx+10h]
.text:000078FF                 add     edx, 0Ch
.text:00007902                 push    edx             ; Dst
.text:00007903                 call    _memcpy
.text:00007908                 add     esp, 0Ch
.text:0000790B                 mov     eax, [ebp+Src]
.text:0000790E                 push    eax
.text:0000790F                 call    _safefree
.text:00007914                 add     esp, 4
.text:00007917                 mov     ecx, [ebp+Size]
.text:0000791A                 add     ecx, 0Ch
.text:0000791D                 mov     edx, [ebp+arg_4]
.text:00007920                 mov     [edx], ecx
.text:00007922
.text:00007922 loc_7922:                               ; CODE XREF: _s_wrpkt_prepare+37j
.text:00007922                 mov     eax, [ebp+arg_4]
.text:00007925                 mov     ecx, [eax]
.text:00007927                 add     ecx, 4
.text:0000792A                 push    ecx
.text:0000792B                 mov     edx, [ebp+arg_4]
.text:0000792E                 push    edx
.text:0000792F                 call    _ssh_pkt_ensure
.text:00007934                 add     esp, 8
.text:00007937                 mov     eax, [ebp+arg_4]
.text:0000793A                 mov     ecx, [eax]
.text:0000793C                 add     ecx, 4
.text:0000793F                 mov     edx, [ebp+arg_4]
.text:00007942                 mov     [edx], ecx
.text:00007944                 mov     eax, [ebp+arg_4]
.text:00007947                 mov     ecx, [eax]
.text:00007949                 sub     ecx, 0Ch
.text:0000794C                 mov     [ebp+var_18], ecx
.text:0000794F                 mov     edx, [ebp+var_18]
.text:00007952                 and     edx, 80000007h
.text:00007958                 jns     short loc_795F
.text:0000795A                 dec     edx
.text:0000795B                 or      edx, 0FFFFFFF8h
.text:0000795E                 inc     edx
.text:0000795F
.text:0000795F loc_795F:                               ; CODE XREF: _s_wrpkt_prepare+E0j
.text:0000795F                 mov     eax, 8
.text:00007964                 sub     eax, edx
.text:00007966                 mov     [ebp+var_4], eax
.text:00007969                 mov     ecx, 8
.text:0000796E                 sub     ecx, [ebp+var_4]
.text:00007971                 mov     [ebp+var_10], ecx
.text:00007974                 mov     edx, [ebp+var_18]
.text:00007977                 add     edx, [ebp+var_4]
.text:0000797A                 mov     [ebp+var_8], edx
.text:0000797D                 mov     eax, [ebp+var_10]
.text:00007980                 mov     [ebp+var_C], eax
.text:00007983                 jmp     short loc_798E
.text:00007985 ; ---------------------------------------------------------------------------
.text:00007985
.text:00007985 loc_7985:                               ; CODE XREF: _s_wrpkt_prepare+12Dj
.text:00007985                 mov     ecx, [ebp+var_C]
.text:00007988                 add     ecx, 1
.text:0000798B                 mov     [ebp+var_C], ecx
.text:0000798E
.text:0000798E loc_798E:                               ; CODE XREF: _s_wrpkt_prepare+10Bj
.text:0000798E                 cmp     [ebp+var_C], 0Ch
.text:00007992                 jge     short loc_79A7
.text:00007994                 call    _random_byte
.text:00007999                 mov     edx, [ebp+arg_4]
.text:0000799C                 mov     ecx, [edx+10h]
.text:0000799F                 mov     edx, [ebp+var_C]
.text:000079A2                 mov     [ecx+edx], al
.text:000079A5                 jmp     short loc_7985
.text:000079A7 ; ---------------------------------------------------------------------------
.text:000079A7
.text:000079A7 loc_79A7:                               ; CODE XREF: _s_wrpkt_prepare+11Aj
.text:000079A7                 mov     eax, [ebp+var_8]
.text:000079AA                 sub     eax, 4
.text:000079AD                 push    eax
.text:000079AE                 mov     ecx, [ebp+arg_4]
.text:000079B1                 mov     edx, [ecx+10h]
.text:000079B4                 mov     eax, [ebp+var_10]
.text:000079B7                 lea     ecx, [edx+eax+4]
.text:000079BB                 push    ecx
.text:000079BC                 call    _crc32_compute
.text:000079C1                 add     esp, 8
.text:000079C4                 mov     [ebp+var_14], eax
.text:000079C7                 mov     edx, [ebp+var_14]
.text:000079CA                 shr     edx, 18h
.text:000079CD                 mov     eax, [ebp+arg_4]
.text:000079D0                 mov     ecx, [eax+10h]
.text:000079D3                 add     ecx, [ebp+var_10]
.text:000079D6                 mov     eax, [ebp+var_8]
.text:000079D9                 mov     [ecx+eax], dl
.text:000079DC                 mov     ecx, [ebp+var_14]
.text:000079DF                 shr     ecx, 10h
.text:000079E2                 mov     edx, [ebp+arg_4]
.text:000079E5                 mov     eax, [edx+10h]
.text:000079E8                 add     eax, [ebp+var_10]
.text:000079EB                 mov     edx, [ebp+var_8]
.text:000079EE                 mov     [eax+edx+1], cl
.text:000079F2                 mov     eax, [ebp+var_14]
.text:000079F5                 shr     eax, 8
.text:000079F8                 mov     ecx, [ebp+arg_4]
.text:000079FB                 mov     edx, [ecx+10h]
.text:000079FE                 add     edx, [ebp+var_10]
.text:00007A01                 mov     ecx, [ebp+var_8]
.text:00007A04                 mov     [edx+ecx+2], al
.text:00007A08                 mov     edx, [ebp+arg_4]
.text:00007A0B                 mov     eax, [edx+10h]
.text:00007A0E                 add     eax, [ebp+var_10]
.text:00007A11                 mov     ecx, [ebp+var_8]
.text:00007A14                 mov     dl, byte ptr [ebp+var_14]
.text:00007A17                 mov     [eax+ecx+3], dl
.text:00007A1B                 mov     eax, [ebp+var_18]
.text:00007A1E                 sar     eax, 18h
.text:00007A21                 mov     ecx, [ebp+arg_4]
.text:00007A24                 mov     edx, [ecx+10h]
.text:00007A27                 mov     ecx, [ebp+var_10]
.text:00007A2A                 mov     [edx+ecx], al
.text:00007A2D                 mov     edx, [ebp+var_18]
.text:00007A30                 sar     edx, 10h
.text:00007A33                 mov     eax, [ebp+arg_4]
.text:00007A36                 mov     ecx, [eax+10h]
.text:00007A39                 mov     eax, [ebp+var_10]
.text:00007A3C                 mov     [ecx+eax+1], dl
.text:00007A40                 mov     ecx, [ebp+var_18]
.text:00007A43                 sar     ecx, 8
.text:00007A46                 mov     edx, [ebp+arg_4]
.text:00007A49                 mov     eax, [edx+10h]
.text:00007A4C                 mov     edx, [ebp+var_10]
.text:00007A4F                 mov     [eax+edx+2], cl
.text:00007A53                 mov     eax, [ebp+arg_4]
.text:00007A56                 mov     ecx, [eax+10h]
.text:00007A59                 mov     edx, [ebp+var_10]
.text:00007A5C                 mov     al, byte ptr [ebp+var_18]
.text:00007A5F                 mov     [ecx+edx+3], al
.text:00007A63                 mov     ecx, [ebp+arg_0]
.text:00007A66                 cmp     dword ptr [ecx+54h], 0
.text:00007A6A                 jz      short loc_7A9C
.text:00007A6C                 mov     esi, esp
.text:00007A6E                 mov     edx, [ebp+var_8]
.text:00007A71                 push    edx
.text:00007A72                 mov     eax, [ebp+arg_4]
.text:00007A75                 mov     ecx, [eax+10h]
.text:00007A78                 mov     edx, [ebp+var_10]
.text:00007A7B                 lea     eax, [ecx+edx+4]
.text:00007A7F                 push    eax
.text:00007A80                 mov     ecx, [ebp+arg_0]
.text:00007A83                 mov     edx, [ecx+58h]
.text:00007A86                 push    edx
.text:00007A87                 mov     eax, [ebp+arg_0]
.text:00007A8A                 mov     ecx, [eax+54h]
.text:00007A8D                 mov     edx, [ecx+0Ch]
.text:00007A90                 call    edx
.text:00007A92                 add     esp, 0Ch
.text:00007A95                 cmp     esi, esp
.text:00007A97                 call    __RTC_CheckEsp
.text:00007A9C
.text:00007A9C loc_7A9C:                               ; CODE XREF: _s_wrpkt_prepare+1F2j
.text:00007A9C                 cmp     [ebp+arg_8], 0
.text:00007AA0                 jz      short loc_7AAA
.text:00007AA2                 mov     eax, [ebp+arg_8]
.text:00007AA5                 mov     ecx, [ebp+var_10]
.text:00007AA8                 mov     [eax], ecx
.text:00007AAA
.text:00007AAA loc_7AAA:                               ; CODE XREF: _s_wrpkt_prepare+228j
.text:00007AAA                 mov     eax, [ebp+var_8]
.text:00007AAD                 add     eax, 4
.text:00007AB0                 push    edx
.text:00007AB1                 mov     ecx, ebp
.text:00007AB3                 push    eax
.text:00007AB4                 lea     edx, $LN13
.text:00007ABA                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00007ABF                 pop     eax
.text:00007AC0                 pop     edx
.text:00007AC1                 pop     edi
.text:00007AC2                 pop     esi
.text:00007AC3                 add     esp, 30h
.text:00007AC6                 cmp     ebp, esp
.text:00007AC8                 call    __RTC_CheckEsp
.text:00007ACD                 mov     esp, ebp
.text:00007ACF                 pop     ebp
.text:00007AD0                 retn
.text:00007AD0 _s_wrpkt_prepare endp
.text:00007AD0
.text:00007AD0 ; ---------------------------------------------------------------------------
.text:00007AD1                 align 4
.text:00007AD4 $LN13           dd 2                    ; DATA XREF: _s_wrpkt_prepare+23Co
.text:00007AD8                 dd offset $LN12_0
.text:00007ADC $LN12_0         dd 0FFFFFFE0h, 4        ; DATA XREF: .text:00007AD8o
.text:00007AE4                 dd offset $LN10_1       ; "compblk"
.text:00007AE8                 dd 0FFFFFFD4h, 4
.text:00007AF0                 dd offset $LN11_1       ; "complen"
.text:00007AF4 $LN11_1         db 'complen',0          ; DATA XREF: .text:00007AF0o
.text:00007AFC $LN10_1         db 'compblk',0          ; DATA XREF: .text:00007AE4o
.text:00007B04                 align 8
.text:00007B08
.text:00007B08 ; =============== S U B R O U T I N E =======================================
.text:00007B08
.text:00007B08 ; Attributes: bp-based frame
.text:00007B08
.text:00007B08 _ssh1_log_outgoing_packet proc near     ; CODE XREF: _s_wrpkt_prepare+28p
.text:00007B08
.text:00007B08 var_58          = byte ptr -58h
.text:00007B08 var_54          = dword ptr -54h
.text:00007B08 var_48          = dword ptr -48h
.text:00007B08 var_3C          = dword ptr -3Ch
.text:00007B08 var_38          = dword ptr -38h
.text:00007B08 var_34          = dword ptr -34h
.text:00007B08 var_8           = dword ptr -8
.text:00007B08 var_4           = dword ptr -4
.text:00007B08 arg_0           = dword ptr  8
.text:00007B08 arg_4           = dword ptr  0Ch
.text:00007B08
.text:00007B08                 push    ebp
.text:00007B09                 mov     ebp, esp
.text:00007B0B                 sub     esp, 58h
.text:00007B0E                 push    edi
.text:00007B0F                 lea     edi, [ebp+var_58]
.text:00007B12                 mov     ecx, 16h
.text:00007B17                 mov     eax, 0CCCCCCCCh
.text:00007B1C                 rep stosd
.text:00007B1E                 mov     eax, dword ptr ds:___security_cookie
.text:00007B23                 xor     eax, ebp
.text:00007B25                 mov     [ebp+var_4], eax
.text:00007B28                 mov     [ebp+var_8], 0
.text:00007B2F                 mov     eax, [ebp+arg_4]
.text:00007B32                 mov     ecx, [ebp+arg_4]
.text:00007B35                 mov     edx, [eax+14h]
.text:00007B38                 sub     edx, [ecx+10h]
.text:00007B3B                 mov     eax, [ebp+arg_4]
.text:00007B3E                 mov     ecx, [eax]
.text:00007B40                 sub     ecx, edx
.text:00007B42                 mov     edx, [ebp+arg_4]
.text:00007B45                 mov     [edx], ecx
.text:00007B47                 mov     eax, [ebp+arg_4]
.text:00007B4A                 mov     dword ptr [eax+18h], 0
.text:00007B51                 mov     ecx, [ebp+arg_0]
.text:00007B54                 cmp     dword ptr [ecx+220h], 0
.text:00007B5B                 jz      short loc_7BD5
.text:00007B5D                 mov     edx, [ebp+arg_4]
.text:00007B60                 cmp     dword ptr [edx+8], 10h
.text:00007B64                 jz      short loc_7B6F
.text:00007B66                 mov     eax, [ebp+arg_4]
.text:00007B69                 cmp     dword ptr [eax+8], 17h
.text:00007B6D                 jnz     short loc_7BD5
.text:00007B6F
.text:00007B6F loc_7B6F:                               ; CODE XREF: _ssh1_log_outgoing_packet+5Cj
.text:00007B6F                 mov     ecx, [ebp+arg_4]
.text:00007B72                 cmp     dword ptr [ecx+8], 17h
.text:00007B76                 jnz     short loc_7B84
.text:00007B78                 mov     edx, [ebp+arg_4]
.text:00007B7B                 push    edx
.text:00007B7C                 call    _ssh_pkt_getuint32
.text:00007B81                 add     esp, 4
.text:00007B84
.text:00007B84 loc_7B84:                               ; CODE XREF: _ssh1_log_outgoing_packet+6Ej
.text:00007B84                 mov     eax, [ebp+arg_4]
.text:00007B87                 mov     ecx, [eax+18h]
.text:00007B8A                 add     ecx, 4
.text:00007B8D                 mov     edx, [ebp+var_8]
.text:00007B90                 imul    edx, 0Ch
.text:00007B93                 mov     [ebp+edx+var_3C], ecx
.text:00007B97                 mov     eax, [ebp+var_8]
.text:00007B9A                 imul    eax, 0Ch
.text:00007B9D                 mov     [ebp+eax+var_34], 2
.text:00007BA5                 lea     ecx, [ebp+var_54]
.text:00007BA8                 push    ecx
.text:00007BA9                 lea     edx, [ebp+var_48]
.text:00007BAC                 push    edx
.text:00007BAD                 mov     eax, [ebp+arg_4]
.text:00007BB0                 push    eax
.text:00007BB1                 call    _ssh_pkt_getstring
.text:00007BB6                 add     esp, 0Ch
.text:00007BB9                 cmp     [ebp+var_48], 0
.text:00007BBD                 jz      short loc_7BD5
.text:00007BBF                 mov     ecx, [ebp+var_8]
.text:00007BC2                 imul    ecx, 0Ch
.text:00007BC5                 mov     edx, [ebp+var_54]
.text:00007BC8                 mov     [ebp+ecx+var_38], edx
.text:00007BCC                 mov     eax, [ebp+var_8]
.text:00007BCF                 add     eax, 1
.text:00007BD2                 mov     [ebp+var_8], eax
.text:00007BD5
.text:00007BD5 loc_7BD5:                               ; CODE XREF: _ssh1_log_outgoing_packet+53j
.text:00007BD5                                         ; _ssh1_log_outgoing_packet+65j ...
.text:00007BD5                 mov     ecx, [ebp+arg_4]
.text:00007BD8                 cmp     dword ptr [ecx+8], 9
.text:00007BDC                 jz      short loc_7BF0
.text:00007BDE                 mov     edx, [ebp+arg_4]
.text:00007BE1                 cmp     dword ptr [edx+8], 29h ; ')'
.text:00007BE5                 jz      short loc_7BF0
.text:00007BE7                 mov     eax, [ebp+arg_4]
.text:00007BEA                 cmp     dword ptr [eax+8], 48h ; 'H'
.text:00007BEE                 jnz     short loc_7C41
.text:00007BF0
.text:00007BF0 loc_7BF0:                               ; CODE XREF: _ssh1_log_outgoing_packet+D4j
.text:00007BF0                                         ; _ssh1_log_outgoing_packet+DDj
.text:00007BF0                 push    76h ; 'v'
.text:00007BF2                 mov     ecx, [ebp+arg_0]
.text:00007BF5                 mov     edx, [ecx+21Ch]
.text:00007BFB                 push    edx
.text:00007BFC                 call    _conf_get_int
.text:00007C01                 add     esp, 8
.text:00007C04                 test    eax, eax
.text:00007C06                 jz      short loc_7C41
.text:00007C08                 mov     eax, [ebp+var_8]
.text:00007C0B                 imul    eax, 0Ch
.text:00007C0E                 mov     [ebp+eax+var_3C], 0
.text:00007C16                 mov     ecx, [ebp+var_8]
.text:00007C19                 imul    ecx, 0Ch
.text:00007C1C                 mov     edx, [ebp+arg_4]
.text:00007C1F                 mov     eax, [edx]
.text:00007C21                 mov     [ebp+ecx+var_38], eax
.text:00007C25                 mov     ecx, [ebp+var_8]
.text:00007C28                 imul    ecx, 0Ch
.text:00007C2B                 mov     [ebp+ecx+var_34], 1
.text:00007C33                 mov     edx, [ebp+var_8]
.text:00007C36                 add     edx, 1
.text:00007C39                 mov     [ebp+var_8], edx
.text:00007C3C                 jmp     loc_7CDF
.text:00007C41 ; ---------------------------------------------------------------------------
.text:00007C41
.text:00007C41 loc_7C41:                               ; CODE XREF: _ssh1_log_outgoing_packet+E6j
.text:00007C41                                         ; _ssh1_log_outgoing_packet+FEj
.text:00007C41                 mov     eax, [ebp+arg_4]
.text:00007C44                 cmp     dword ptr [eax+8], 22h ; '"'
.text:00007C48                 jnz     loc_7CDF
.text:00007C4E                 push    76h ; 'v'
.text:00007C50                 mov     ecx, [ebp+arg_0]
.text:00007C53                 mov     edx, [ecx+21Ch]
.text:00007C59                 push    edx
.text:00007C5A                 call    _conf_get_int
.text:00007C5F                 add     esp, 8
.text:00007C62                 test    eax, eax
.text:00007C64                 jz      short loc_7CDF
.text:00007C66                 mov     eax, [ebp+arg_4]
.text:00007C69                 mov     dword ptr [eax+18h], 0
.text:00007C70                 lea     ecx, [ebp+var_54]
.text:00007C73                 push    ecx
.text:00007C74                 lea     edx, [ebp+var_48]
.text:00007C77                 push    edx
.text:00007C78                 mov     eax, [ebp+arg_4]
.text:00007C7B                 push    eax
.text:00007C7C                 call    _ssh_pkt_getstring
.text:00007C81                 add     esp, 0Ch
.text:00007C84                 mov     ecx, [ebp+var_8]
.text:00007C87                 imul    ecx, 0Ch
.text:00007C8A                 mov     edx, [ebp+arg_4]
.text:00007C8D                 mov     eax, [edx+18h]
.text:00007C90                 mov     [ebp+ecx+var_3C], eax
.text:00007C94                 mov     ecx, [ebp+var_8]
.text:00007C97                 imul    ecx, 0Ch
.text:00007C9A                 mov     [ebp+ecx+var_34], 1
.text:00007CA2                 lea     edx, [ebp+var_54]
.text:00007CA5                 push    edx
.text:00007CA6                 lea     eax, [ebp+var_48]
.text:00007CA9                 push    eax
.text:00007CAA                 mov     ecx, [ebp+arg_4]
.text:00007CAD                 push    ecx
.text:00007CAE                 call    _ssh_pkt_getstring
.text:00007CB3                 add     esp, 0Ch
.text:00007CB6                 cmp     [ebp+var_48], 0
.text:00007CBA                 jz      short loc_7CDF
.text:00007CBC                 mov     edx, [ebp+var_8]
.text:00007CBF                 imul    edx, 0Ch
.text:00007CC2                 mov     eax, [ebp+arg_4]
.text:00007CC5                 mov     ecx, [eax+18h]
.text:00007CC8                 sub     ecx, [ebp+edx+var_3C]
.text:00007CCC                 mov     edx, [ebp+var_8]
.text:00007CCF                 imul    edx, 0Ch
.text:00007CD2                 mov     [ebp+edx+var_38], ecx
.text:00007CD6                 mov     eax, [ebp+var_8]
.text:00007CD9                 add     eax, 1
.text:00007CDC                 mov     [ebp+var_8], eax
.text:00007CDF
.text:00007CDF loc_7CDF:                               ; CODE XREF: _ssh1_log_outgoing_packet+134j
.text:00007CDF                                         ; _ssh1_log_outgoing_packet+140j ...
.text:00007CDF                 push    0
.text:00007CE1                 push    0
.text:00007CE3                 push    0
.text:00007CE5                 lea     ecx, [ebp+var_3C]
.text:00007CE8                 push    ecx
.text:00007CE9                 mov     edx, [ebp+var_8]
.text:00007CEC                 push    edx
.text:00007CED                 mov     eax, [ebp+arg_4]
.text:00007CF0                 mov     ecx, [eax]
.text:00007CF2                 push    ecx
.text:00007CF3                 mov     edx, [ebp+arg_4]
.text:00007CF6                 mov     eax, [edx+14h]
.text:00007CF9                 push    eax
.text:00007CFA                 mov     ecx, [ebp+arg_4]
.text:00007CFD                 mov     edx, [ecx+10h]
.text:00007D00                 movzx   eax, byte ptr [edx+0Ch]
.text:00007D04                 push    eax
.text:00007D05                 call    _ssh1_pkt_type
.text:00007D0A                 add     esp, 4
.text:00007D0D                 push    eax
.text:00007D0E                 mov     ecx, [ebp+arg_4]
.text:00007D11                 mov     edx, [ecx+10h]
.text:00007D14                 movzx   eax, byte ptr [edx+0Ch]
.text:00007D18                 push    eax
.text:00007D19                 push    1
.text:00007D1B                 mov     ecx, [ebp+arg_0]
.text:00007D1E                 mov     edx, [ecx+18h]
.text:00007D21                 push    edx
.text:00007D22                 call    _log_packet
.text:00007D27                 add     esp, 2Ch
.text:00007D2A                 mov     eax, [ebp+arg_4]
.text:00007D2D                 mov     ecx, [ebp+arg_4]
.text:00007D30                 mov     edx, [eax+14h]
.text:00007D33                 sub     edx, [ecx+10h]
.text:00007D36                 mov     eax, [ebp+arg_4]
.text:00007D39                 add     edx, [eax]
.text:00007D3B                 mov     ecx, [ebp+arg_4]
.text:00007D3E                 mov     [ecx], edx
.text:00007D40                 push    edx
.text:00007D41                 mov     ecx, ebp
.text:00007D43                 push    eax
.text:00007D44                 lea     edx, $LN16_0
.text:00007D4A                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00007D4F                 pop     eax
.text:00007D50                 pop     edx
.text:00007D51                 pop     edi
.text:00007D52                 mov     ecx, [ebp+var_4]
.text:00007D55                 xor     ecx, ebp
.text:00007D57                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00007D5C                 add     esp, 58h
.text:00007D5F                 cmp     ebp, esp
.text:00007D61                 call    __RTC_CheckEsp
.text:00007D66                 mov     esp, ebp
.text:00007D68                 pop     ebp
.text:00007D69                 retn
.text:00007D69 _ssh1_log_outgoing_packet endp
.text:00007D69
.text:00007D69 ; ---------------------------------------------------------------------------
.text:00007D6A                 align 4
.text:00007D6C $LN16_0         dd 3                    ; DATA XREF: _ssh1_log_outgoing_packet+23Co
.text:00007D70                 dd offset $LN15
.text:00007D74 $LN15           dd 0FFFFFFC4h, 30h      ; DATA XREF: .text:00007D70o
.text:00007D7C                 dd offset $LN12_1       ; "blanks"
.text:00007D80                 dd 0FFFFFFB8h, 4
.text:00007D88                 dd offset $LN13_0       ; "str"
.text:00007D8C                 dd 0FFFFFFACh, 4
.text:00007D94                 dd offset $LN14         ; "slen"
.text:00007D98 $LN14           db 'slen',0             ; DATA XREF: .text:00007D94o
.text:00007D9D $LN13_0         db 'str',0              ; DATA XREF: .text:00007D88o
.text:00007DA1 $LN12_1         db 'blanks',0           ; DATA XREF: .text:00007D7Co
.text:00007DA8
.text:00007DA8 ; =============== S U B R O U T I N E =======================================
.text:00007DA8
.text:00007DA8 ; Attributes: bp-based frame
.text:00007DA8
.text:00007DA8 _ssh1_pkt_type  proc near               ; CODE XREF: _ssh1_log_outgoing_packet+1FDp
.text:00007DA8                                         ; _ssh1_log_incoming_packet+E4p
.text:00007DA8
.text:00007DA8 arg_0           = dword ptr  8
.text:00007DA8
.text:00007DA8                 push    ebp
.text:00007DA9                 mov     ebp, esp
.text:00007DAB                 cmp     [ebp+arg_0], 1
.text:00007DAF                 jnz     short loc_7DBB
.text:00007DB1                 mov     eax, offset $SG87403 ; "SSH1_MSG_DISCONNECT"
.text:00007DB6                 jmp     loc_8022
.text:00007DBB ; ---------------------------------------------------------------------------
.text:00007DBB
.text:00007DBB loc_7DBB:                               ; CODE XREF: _ssh1_pkt_type+7j
.text:00007DBB                 cmp     [ebp+arg_0], 2
.text:00007DBF                 jnz     short loc_7DCB
.text:00007DC1                 mov     eax, offset $SG87405 ; "SSH1_SMSG_PUBLIC_KEY"
.text:00007DC6                 jmp     loc_8022
.text:00007DCB ; ---------------------------------------------------------------------------
.text:00007DCB
.text:00007DCB loc_7DCB:                               ; CODE XREF: _ssh1_pkt_type+17j
.text:00007DCB                 cmp     [ebp+arg_0], 3
.text:00007DCF                 jnz     short loc_7DDB
.text:00007DD1                 mov     eax, offset $SG87407 ; "SSH1_CMSG_SESSION_KEY"
.text:00007DD6                 jmp     loc_8022
.text:00007DDB ; ---------------------------------------------------------------------------
.text:00007DDB
.text:00007DDB loc_7DDB:                               ; CODE XREF: _ssh1_pkt_type+27j
.text:00007DDB                 cmp     [ebp+arg_0], 4
.text:00007DDF                 jnz     short loc_7DEB
.text:00007DE1                 mov     eax, offset $SG87409 ; "SSH1_CMSG_USER"
.text:00007DE6                 jmp     loc_8022
.text:00007DEB ; ---------------------------------------------------------------------------
.text:00007DEB
.text:00007DEB loc_7DEB:                               ; CODE XREF: _ssh1_pkt_type+37j
.text:00007DEB                 cmp     [ebp+arg_0], 6
.text:00007DEF                 jnz     short loc_7DFB
.text:00007DF1                 mov     eax, offset $SG87411 ; "SSH1_CMSG_AUTH_RSA"
.text:00007DF6                 jmp     loc_8022
.text:00007DFB ; ---------------------------------------------------------------------------
.text:00007DFB
.text:00007DFB loc_7DFB:                               ; CODE XREF: _ssh1_pkt_type+47j
.text:00007DFB                 cmp     [ebp+arg_0], 7
.text:00007DFF                 jnz     short loc_7E0B
.text:00007E01                 mov     eax, offset $SG87413 ; "SSH1_SMSG_AUTH_RSA_CHALLENGE"
.text:00007E06                 jmp     loc_8022
.text:00007E0B ; ---------------------------------------------------------------------------
.text:00007E0B
.text:00007E0B loc_7E0B:                               ; CODE XREF: _ssh1_pkt_type+57j
.text:00007E0B                 cmp     [ebp+arg_0], 8
.text:00007E0F                 jnz     short loc_7E1B
.text:00007E11                 mov     eax, offset $SG87415 ; "SSH1_CMSG_AUTH_RSA_RESPONSE"
.text:00007E16                 jmp     loc_8022
.text:00007E1B ; ---------------------------------------------------------------------------
.text:00007E1B
.text:00007E1B loc_7E1B:                               ; CODE XREF: _ssh1_pkt_type+67j
.text:00007E1B                 cmp     [ebp+arg_0], 9
.text:00007E1F                 jnz     short loc_7E2B
.text:00007E21                 mov     eax, offset $SG87417 ; "SSH1_CMSG_AUTH_PASSWORD"
.text:00007E26                 jmp     loc_8022
.text:00007E2B ; ---------------------------------------------------------------------------
.text:00007E2B
.text:00007E2B loc_7E2B:                               ; CODE XREF: _ssh1_pkt_type+77j
.text:00007E2B                 cmp     [ebp+arg_0], 0Ah
.text:00007E2F                 jnz     short loc_7E3B
.text:00007E31                 mov     eax, offset $SG87419 ; "SSH1_CMSG_REQUEST_PTY"
.text:00007E36                 jmp     loc_8022
.text:00007E3B ; ---------------------------------------------------------------------------
.text:00007E3B
.text:00007E3B loc_7E3B:                               ; CODE XREF: _ssh1_pkt_type+87j
.text:00007E3B                 cmp     [ebp+arg_0], 0Bh
.text:00007E3F                 jnz     short loc_7E4B
.text:00007E41                 mov     eax, offset $SG87421 ; "SSH1_CMSG_WINDOW_SIZE"
.text:00007E46                 jmp     loc_8022
.text:00007E4B ; ---------------------------------------------------------------------------
.text:00007E4B
.text:00007E4B loc_7E4B:                               ; CODE XREF: _ssh1_pkt_type+97j
.text:00007E4B                 cmp     [ebp+arg_0], 0Ch
.text:00007E4F                 jnz     short loc_7E5B
.text:00007E51                 mov     eax, offset $SG87423 ; "SSH1_CMSG_EXEC_SHELL"
.text:00007E56                 jmp     loc_8022
.text:00007E5B ; ---------------------------------------------------------------------------
.text:00007E5B
.text:00007E5B loc_7E5B:                               ; CODE XREF: _ssh1_pkt_type+A7j
.text:00007E5B                 cmp     [ebp+arg_0], 0Dh
.text:00007E5F                 jnz     short loc_7E6B
.text:00007E61                 mov     eax, offset $SG87425 ; "SSH1_CMSG_EXEC_CMD"
.text:00007E66                 jmp     loc_8022
.text:00007E6B ; ---------------------------------------------------------------------------
.text:00007E6B
.text:00007E6B loc_7E6B:                               ; CODE XREF: _ssh1_pkt_type+B7j
.text:00007E6B                 cmp     [ebp+arg_0], 0Eh
.text:00007E6F                 jnz     short loc_7E7B
.text:00007E71                 mov     eax, offset $SG87427 ; "SSH1_SMSG_SUCCESS"
.text:00007E76                 jmp     loc_8022
.text:00007E7B ; ---------------------------------------------------------------------------
.text:00007E7B
.text:00007E7B loc_7E7B:                               ; CODE XREF: _ssh1_pkt_type+C7j
.text:00007E7B                 cmp     [ebp+arg_0], 0Fh
.text:00007E7F                 jnz     short loc_7E8B
.text:00007E81                 mov     eax, offset $SG87429 ; "SSH1_SMSG_FAILURE"
.text:00007E86                 jmp     loc_8022
.text:00007E8B ; ---------------------------------------------------------------------------
.text:00007E8B
.text:00007E8B loc_7E8B:                               ; CODE XREF: _ssh1_pkt_type+D7j
.text:00007E8B                 cmp     [ebp+arg_0], 10h
.text:00007E8F                 jnz     short loc_7E9B
.text:00007E91                 mov     eax, offset $SG87431 ; "SSH1_CMSG_STDIN_DATA"
.text:00007E96                 jmp     loc_8022
.text:00007E9B ; ---------------------------------------------------------------------------
.text:00007E9B
.text:00007E9B loc_7E9B:                               ; CODE XREF: _ssh1_pkt_type+E7j
.text:00007E9B                 cmp     [ebp+arg_0], 11h
.text:00007E9F                 jnz     short loc_7EAB
.text:00007EA1                 mov     eax, offset $SG87433 ; "SSH1_SMSG_STDOUT_DATA"
.text:00007EA6                 jmp     loc_8022
.text:00007EAB ; ---------------------------------------------------------------------------
.text:00007EAB
.text:00007EAB loc_7EAB:                               ; CODE XREF: _ssh1_pkt_type+F7j
.text:00007EAB                 cmp     [ebp+arg_0], 12h
.text:00007EAF                 jnz     short loc_7EBB
.text:00007EB1                 mov     eax, offset $SG87435 ; "SSH1_SMSG_STDERR_DATA"
.text:00007EB6                 jmp     loc_8022
.text:00007EBB ; ---------------------------------------------------------------------------
.text:00007EBB
.text:00007EBB loc_7EBB:                               ; CODE XREF: _ssh1_pkt_type+107j
.text:00007EBB                 cmp     [ebp+arg_0], 13h
.text:00007EBF                 jnz     short loc_7ECB
.text:00007EC1                 mov     eax, offset $SG87437 ; "SSH1_CMSG_EOF"
.text:00007EC6                 jmp     loc_8022
.text:00007ECB ; ---------------------------------------------------------------------------
.text:00007ECB
.text:00007ECB loc_7ECB:                               ; CODE XREF: _ssh1_pkt_type+117j
.text:00007ECB                 cmp     [ebp+arg_0], 14h
.text:00007ECF                 jnz     short loc_7EDB
.text:00007ED1                 mov     eax, offset $SG87439 ; "SSH1_SMSG_EXIT_STATUS"
.text:00007ED6                 jmp     loc_8022
.text:00007EDB ; ---------------------------------------------------------------------------
.text:00007EDB
.text:00007EDB loc_7EDB:                               ; CODE XREF: _ssh1_pkt_type+127j
.text:00007EDB                 cmp     [ebp+arg_0], 15h
.text:00007EDF                 jnz     short loc_7EEB
.text:00007EE1                 mov     eax, offset $SG87441 ; "SSH1_MSG_CHANNEL_OPEN_CONFIRMATION"
.text:00007EE6                 jmp     loc_8022
.text:00007EEB ; ---------------------------------------------------------------------------
.text:00007EEB
.text:00007EEB loc_7EEB:                               ; CODE XREF: _ssh1_pkt_type+137j
.text:00007EEB                 cmp     [ebp+arg_0], 16h
.text:00007EEF                 jnz     short loc_7EFB
.text:00007EF1                 mov     eax, offset $SG87443 ; "SSH1_MSG_CHANNEL_OPEN_FAILURE"
.text:00007EF6                 jmp     loc_8022
.text:00007EFB ; ---------------------------------------------------------------------------
.text:00007EFB
.text:00007EFB loc_7EFB:                               ; CODE XREF: _ssh1_pkt_type+147j
.text:00007EFB                 cmp     [ebp+arg_0], 17h
.text:00007EFF                 jnz     short loc_7F0B
.text:00007F01                 mov     eax, offset $SG87445 ; "SSH1_MSG_CHANNEL_DATA"
.text:00007F06                 jmp     loc_8022
.text:00007F0B ; ---------------------------------------------------------------------------
.text:00007F0B
.text:00007F0B loc_7F0B:                               ; CODE XREF: _ssh1_pkt_type+157j
.text:00007F0B                 cmp     [ebp+arg_0], 18h
.text:00007F0F                 jnz     short loc_7F1B
.text:00007F11                 mov     eax, offset $SG87447 ; "SSH1_MSG_CHANNEL_CLOSE"
.text:00007F16                 jmp     loc_8022
.text:00007F1B ; ---------------------------------------------------------------------------
.text:00007F1B
.text:00007F1B loc_7F1B:                               ; CODE XREF: _ssh1_pkt_type+167j
.text:00007F1B                 cmp     [ebp+arg_0], 19h
.text:00007F1F                 jnz     short loc_7F2B
.text:00007F21                 mov     eax, offset $SG87449 ; "SSH1_MSG_CHANNEL_CLOSE_CONFIRMATION"
.text:00007F26                 jmp     loc_8022
.text:00007F2B ; ---------------------------------------------------------------------------
.text:00007F2B
.text:00007F2B loc_7F2B:                               ; CODE XREF: _ssh1_pkt_type+177j
.text:00007F2B                 cmp     [ebp+arg_0], 1Bh
.text:00007F2F                 jnz     short loc_7F3B
.text:00007F31                 mov     eax, offset $SG87451 ; "SSH1_SMSG_X11_OPEN"
.text:00007F36                 jmp     loc_8022
.text:00007F3B ; ---------------------------------------------------------------------------
.text:00007F3B
.text:00007F3B loc_7F3B:                               ; CODE XREF: _ssh1_pkt_type+187j
.text:00007F3B                 cmp     [ebp+arg_0], 1Ch
.text:00007F3F                 jnz     short loc_7F4B
.text:00007F41                 mov     eax, offset $SG87453 ; "SSH1_CMSG_PORT_FORWARD_REQUEST"
.text:00007F46                 jmp     loc_8022
.text:00007F4B ; ---------------------------------------------------------------------------
.text:00007F4B
.text:00007F4B loc_7F4B:                               ; CODE XREF: _ssh1_pkt_type+197j
.text:00007F4B                 cmp     [ebp+arg_0], 1Dh
.text:00007F4F                 jnz     short loc_7F5B
.text:00007F51                 mov     eax, offset $SG87455 ; "SSH1_MSG_PORT_OPEN"
.text:00007F56                 jmp     loc_8022
.text:00007F5B ; ---------------------------------------------------------------------------
.text:00007F5B
.text:00007F5B loc_7F5B:                               ; CODE XREF: _ssh1_pkt_type+1A7j
.text:00007F5B                 cmp     [ebp+arg_0], 1Eh
.text:00007F5F                 jnz     short loc_7F6B
.text:00007F61                 mov     eax, offset $SG87457 ; "SSH1_CMSG_AGENT_REQUEST_FORWARDING"
.text:00007F66                 jmp     loc_8022
.text:00007F6B ; ---------------------------------------------------------------------------
.text:00007F6B
.text:00007F6B loc_7F6B:                               ; CODE XREF: _ssh1_pkt_type+1B7j
.text:00007F6B                 cmp     [ebp+arg_0], 1Fh
.text:00007F6F                 jnz     short loc_7F7B
.text:00007F71                 mov     eax, offset $SG87459 ; "SSH1_SMSG_AGENT_OPEN"
.text:00007F76                 jmp     loc_8022
.text:00007F7B ; ---------------------------------------------------------------------------
.text:00007F7B
.text:00007F7B loc_7F7B:                               ; CODE XREF: _ssh1_pkt_type+1C7j
.text:00007F7B                 cmp     [ebp+arg_0], 20h ; ' '
.text:00007F7F                 jnz     short loc_7F8B
.text:00007F81                 mov     eax, offset $SG87461 ; "SSH1_MSG_IGNORE"
.text:00007F86                 jmp     loc_8022
.text:00007F8B ; ---------------------------------------------------------------------------
.text:00007F8B
.text:00007F8B loc_7F8B:                               ; CODE XREF: _ssh1_pkt_type+1D7j
.text:00007F8B                 cmp     [ebp+arg_0], 21h ; '!'
.text:00007F8F                 jnz     short loc_7F9B
.text:00007F91                 mov     eax, offset $SG87463 ; "SSH1_CMSG_EXIT_CONFIRMATION"
.text:00007F96                 jmp     loc_8022
.text:00007F9B ; ---------------------------------------------------------------------------
.text:00007F9B
.text:00007F9B loc_7F9B:                               ; CODE XREF: _ssh1_pkt_type+1E7j
.text:00007F9B                 cmp     [ebp+arg_0], 22h ; '"'
.text:00007F9F                 jnz     short loc_7FA8
.text:00007FA1                 mov     eax, offset $SG87465 ; "SSH1_CMSG_X11_REQUEST_FORWARDING"
.text:00007FA6                 jmp     short loc_8022
.text:00007FA8 ; ---------------------------------------------------------------------------
.text:00007FA8
.text:00007FA8 loc_7FA8:                               ; CODE XREF: _ssh1_pkt_type+1F7j
.text:00007FA8                 cmp     [ebp+arg_0], 23h ; '#'
.text:00007FAC                 jnz     short loc_7FB5
.text:00007FAE                 mov     eax, offset $SG87467 ; "SSH1_CMSG_AUTH_RHOSTS_RSA"
.text:00007FB3                 jmp     short loc_8022
.text:00007FB5 ; ---------------------------------------------------------------------------
.text:00007FB5
.text:00007FB5 loc_7FB5:                               ; CODE XREF: _ssh1_pkt_type+204j
.text:00007FB5                 cmp     [ebp+arg_0], 24h ; '$'
.text:00007FB9                 jnz     short loc_7FC2
.text:00007FBB                 mov     eax, offset $SG87469 ; "SSH1_MSG_DEBUG"
.text:00007FC0                 jmp     short loc_8022
.text:00007FC2 ; ---------------------------------------------------------------------------
.text:00007FC2
.text:00007FC2 loc_7FC2:                               ; CODE XREF: _ssh1_pkt_type+211j
.text:00007FC2                 cmp     [ebp+arg_0], 25h ; '%'
.text:00007FC6                 jnz     short loc_7FCF
.text:00007FC8                 mov     eax, offset $SG87471 ; "SSH1_CMSG_REQUEST_COMPRESSION"
.text:00007FCD                 jmp     short loc_8022
.text:00007FCF ; ---------------------------------------------------------------------------
.text:00007FCF
.text:00007FCF loc_7FCF:                               ; CODE XREF: _ssh1_pkt_type+21Ej
.text:00007FCF                 cmp     [ebp+arg_0], 27h ; '''
.text:00007FD3                 jnz     short loc_7FDC
.text:00007FD5                 mov     eax, offset $SG87473 ; "SSH1_CMSG_AUTH_TIS"
.text:00007FDA                 jmp     short loc_8022
.text:00007FDC ; ---------------------------------------------------------------------------
.text:00007FDC
.text:00007FDC loc_7FDC:                               ; CODE XREF: _ssh1_pkt_type+22Bj
.text:00007FDC                 cmp     [ebp+arg_0], 28h ; '('
.text:00007FE0                 jnz     short loc_7FE9
.text:00007FE2                 mov     eax, offset $SG87475 ; "SSH1_SMSG_AUTH_TIS_CHALLENGE"
.text:00007FE7                 jmp     short loc_8022
.text:00007FE9 ; ---------------------------------------------------------------------------
.text:00007FE9
.text:00007FE9 loc_7FE9:                               ; CODE XREF: _ssh1_pkt_type+238j
.text:00007FE9                 cmp     [ebp+arg_0], 29h ; ')'
.text:00007FED                 jnz     short loc_7FF6
.text:00007FEF                 mov     eax, offset $SG87477 ; "SSH1_CMSG_AUTH_TIS_RESPONSE"
.text:00007FF4                 jmp     short loc_8022
.text:00007FF6 ; ---------------------------------------------------------------------------
.text:00007FF6
.text:00007FF6 loc_7FF6:                               ; CODE XREF: _ssh1_pkt_type+245j
.text:00007FF6                 cmp     [ebp+arg_0], 46h ; 'F'
.text:00007FFA                 jnz     short loc_8003
.text:00007FFC                 mov     eax, offset $SG87479 ; "SSH1_CMSG_AUTH_CCARD"
.text:00008001                 jmp     short loc_8022
.text:00008003 ; ---------------------------------------------------------------------------
.text:00008003
.text:00008003 loc_8003:                               ; CODE XREF: _ssh1_pkt_type+252j
.text:00008003                 cmp     [ebp+arg_0], 47h ; 'G'
.text:00008007                 jnz     short loc_8010
.text:00008009                 mov     eax, offset $SG87481 ; "SSH1_SMSG_AUTH_CCARD_CHALLENGE"
.text:0000800E                 jmp     short loc_8022
.text:00008010 ; ---------------------------------------------------------------------------
.text:00008010
.text:00008010 loc_8010:                               ; CODE XREF: _ssh1_pkt_type+25Fj
.text:00008010                 cmp     [ebp+arg_0], 48h ; 'H'
.text:00008014                 jnz     short loc_801D
.text:00008016                 mov     eax, offset $SG87483 ; "SSH1_CMSG_AUTH_CCARD_RESPONSE"
.text:0000801B                 jmp     short loc_8022
.text:0000801D ; ---------------------------------------------------------------------------
.text:0000801D
.text:0000801D loc_801D:                               ; CODE XREF: _ssh1_pkt_type+26Cj
.text:0000801D                 mov     eax, offset $SG87484 ; "unknown"
.text:00008022
.text:00008022 loc_8022:                               ; CODE XREF: _ssh1_pkt_type+Ej
.text:00008022                                         ; _ssh1_pkt_type+1Ej ...
.text:00008022                 pop     ebp
.text:00008023                 retn
.text:00008023 _ssh1_pkt_type  endp
.text:00008023
.text:00008023 ; ---------------------------------------------------------------------------
.text:00008024                 align 8
.text:00008028
.text:00008028 ; =============== S U B R O U T I N E =======================================
.text:00008028
.text:00008028 ; Attributes: bp-based frame
.text:00008028
.text:00008028 _s_write        proc near               ; CODE XREF: _s_wrpkt+43p
.text:00008028                                         ; _ssh2_pkt_send_noqueue+70p ...
.text:00008028
.text:00008028 arg_0           = dword ptr  8
.text:00008028 arg_4           = dword ptr  0Ch
.text:00008028 arg_8           = dword ptr  10h
.text:00008028
.text:00008028                 push    ebp
.text:00008029                 mov     ebp, esp
.text:0000802B                 push    esi
.text:0000802C                 mov     eax, [ebp+arg_0]
.text:0000802F                 cmp     dword ptr [eax+18h], 0
.text:00008033                 jz      short loc_805C
.text:00008035                 push    0
.text:00008037                 push    0
.text:00008039                 push    0
.text:0000803B                 push    0
.text:0000803D                 push    0
.text:0000803F                 mov     ecx, [ebp+arg_8]
.text:00008042                 push    ecx
.text:00008043                 mov     edx, [ebp+arg_4]
.text:00008046                 push    edx
.text:00008047                 push    0
.text:00008049                 push    0FFFFFFFFh
.text:0000804B                 push    1
.text:0000804D                 mov     eax, [ebp+arg_0]
.text:00008050                 mov     ecx, [eax+18h]
.text:00008053                 push    ecx
.text:00008054                 call    _log_packet
.text:00008059                 add     esp, 2Ch
.text:0000805C
.text:0000805C loc_805C:                               ; CODE XREF: _s_write+Bj
.text:0000805C                 mov     edx, [ebp+arg_0]
.text:0000805F                 cmp     dword ptr [edx+10h], 0
.text:00008063                 jnz     short loc_8069
.text:00008065                 xor     eax, eax
.text:00008067                 jmp     short loc_8091
.text:00008069 ; ---------------------------------------------------------------------------
.text:00008069
.text:00008069 loc_8069:                               ; CODE XREF: _s_write+3Bj
.text:00008069                 mov     esi, esp
.text:0000806B                 mov     eax, [ebp+arg_8]
.text:0000806E                 push    eax
.text:0000806F                 mov     ecx, [ebp+arg_4]
.text:00008072                 push    ecx
.text:00008073                 mov     edx, [ebp+arg_0]
.text:00008076                 mov     eax, [edx+10h]
.text:00008079                 push    eax
.text:0000807A                 mov     ecx, [ebp+arg_0]
.text:0000807D                 mov     edx, [ecx+10h]
.text:00008080                 mov     eax, [edx]
.text:00008082                 mov     ecx, [eax+8]
.text:00008085                 call    ecx
.text:00008087                 add     esp, 0Ch
.text:0000808A                 cmp     esi, esp
.text:0000808C                 call    __RTC_CheckEsp
.text:00008091
.text:00008091 loc_8091:                               ; CODE XREF: _s_write+3Fj
.text:00008091                 pop     esi
.text:00008092                 cmp     ebp, esp
.text:00008094                 call    __RTC_CheckEsp
.text:00008099                 pop     ebp
.text:0000809A                 retn
.text:0000809A _s_write        endp
.text:0000809A
.text:0000809A ; ---------------------------------------------------------------------------
.text:0000809B                 db 0Dh dup(0CCh)
.text:000080A8
.text:000080A8 ; =============== S U B R O U T I N E =======================================
.text:000080A8
.text:000080A8 ; Attributes: bp-based frame
.text:000080A8
.text:000080A8 _construct_packet proc near             ; CODE XREF: _send_packet+26p
.text:000080A8                                         ; _defer_packet+26p
.text:000080A8
.text:000080A8 var_24          = dword ptr -24h
.text:000080A8 Size            = dword ptr -20h
.text:000080A8 var_1C          = dword ptr -1Ch
.text:000080A8 Str             = dword ptr -18h
.text:000080A8 var_14          = dword ptr -14h
.text:000080A8 Src             = dword ptr -10h
.text:000080A8 var_C           = dword ptr -0Ch
.text:000080A8 var_8           = dword ptr -8
.text:000080A8 var_4           = dword ptr -4
.text:000080A8 arg_4           = dword ptr  0Ch
.text:000080A8 arg_8           = dword ptr  10h
.text:000080A8
.text:000080A8                 push    ebp
.text:000080A9                 mov     ebp, esp
.text:000080AB                 sub     esp, 24h
.text:000080AE                 mov     eax, 0CCCCCCCCh
.text:000080B3                 mov     [ebp+var_24], eax
.text:000080B6                 mov     [ebp+Size], eax
.text:000080B9                 mov     [ebp+var_1C], eax
.text:000080BC                 mov     [ebp+Str], eax
.text:000080BF                 mov     [ebp+var_14], eax
.text:000080C2                 mov     [ebp+Src], eax
.text:000080C5                 mov     [ebp+var_C], eax
.text:000080C8                 mov     [ebp+var_8], eax
.text:000080CB                 mov     [ebp+var_4], eax
.text:000080CE                 mov     eax, [ebp+arg_4]
.text:000080D1                 push    eax
.text:000080D2                 call    _ssh1_pkt_init
.text:000080D7                 add     esp, 4
.text:000080DA                 mov     [ebp+var_C], eax
.text:000080DD
.text:000080DD loc_80DD:                               ; CODE XREF: _construct_packet:loc_81EBj
.text:000080DD                 mov     ecx, [ebp+arg_8]
.text:000080E0                 add     ecx, 4
.text:000080E3                 mov     [ebp+arg_8], ecx
.text:000080E6                 mov     edx, [ebp+arg_8]
.text:000080E9                 mov     eax, [edx-4]
.text:000080EC                 mov     [ebp+var_4], eax
.text:000080EF                 cmp     [ebp+var_4], 0
.text:000080F3                 jz      loc_81F0
.text:000080F9                 mov     ecx, [ebp+var_4]
.text:000080FC                 mov     [ebp+var_24], ecx
.text:000080FF                 mov     edx, [ebp+var_24]
.text:00008102                 sub     edx, 1
.text:00008105                 mov     [ebp+var_24], edx
.text:00008108                 cmp     [ebp+var_24], 4 ; switch 5 cases
.text:0000810C                 ja      loc_81EB        ; jumptable 00008115 default case
.text:00008112                 mov     eax, [ebp+var_24]
.text:00008115                 jmp     ds:$LN12_2[eax*4] ; switch jump
.text:0000811C ; ---------------------------------------------------------------------------
.text:0000811C
.text:0000811C $LN5_0:                                 ; CODE XREF: _construct_packet+6Dj
.text:0000811C                                         ; DATA XREF: .text:$LN12_2o
.text:0000811C                 mov     ecx, [ebp+arg_8] ; jumptable 00008115 case 0
.text:0000811F                 add     ecx, 4
.text:00008122                 mov     [ebp+arg_8], ecx
.text:00008125                 mov     edx, [ebp+arg_8]
.text:00008128                 mov     eax, [edx-4]
.text:0000812B                 mov     [ebp+var_1C], eax
.text:0000812E                 mov     ecx, [ebp+var_1C]
.text:00008131                 push    ecx
.text:00008132                 mov     edx, [ebp+var_C]
.text:00008135                 push    edx
.text:00008136                 call    _ssh_pkt_adduint32
.text:0000813B                 add     esp, 8
.text:0000813E                 jmp     loc_81EB        ; jumptable 00008115 default case
.text:00008143 ; ---------------------------------------------------------------------------
.text:00008143
.text:00008143 $LN4_0:                                 ; CODE XREF: _construct_packet+6Dj
.text:00008143                                         ; DATA XREF: .text:$LN12_2o
.text:00008143                 mov     eax, [ebp+arg_8] ; jumptable 00008115 case 1
.text:00008146                 add     eax, 4
.text:00008149                 mov     [ebp+arg_8], eax
.text:0000814C                 mov     ecx, [ebp+arg_8]
.text:0000814F                 mov     dl, [ecx-4]
.text:00008152                 mov     byte ptr [ebp+var_14+3], dl
.text:00008155                 movzx   eax, byte ptr [ebp+var_14+3]
.text:00008159                 push    eax             ; Src
.text:0000815A                 mov     ecx, [ebp+var_C]
.text:0000815D                 push    ecx             ; int
.text:0000815E                 call    _ssh_pkt_addbyte
.text:00008163                 add     esp, 8
.text:00008166                 jmp     loc_81EB        ; jumptable 00008115 default case
.text:0000816B ; ---------------------------------------------------------------------------
.text:0000816B
.text:0000816B $LN3:                                   ; CODE XREF: _construct_packet+6Dj
.text:0000816B                                         ; DATA XREF: .text:$LN12_2o
.text:0000816B                 mov     edx, [ebp+arg_8] ; jumptable 00008115 case 2
.text:0000816E                 add     edx, 4
.text:00008171                 mov     [ebp+arg_8], edx
.text:00008174                 mov     eax, [ebp+arg_8]
.text:00008177                 mov     ecx, [eax-4]
.text:0000817A                 mov     [ebp+Src], ecx
.text:0000817D                 mov     edx, [ebp+arg_8]
.text:00008180                 add     edx, 4
.text:00008183                 mov     [ebp+arg_8], edx
.text:00008186                 mov     eax, [ebp+arg_8]
.text:00008189                 mov     ecx, [eax-4]
.text:0000818C                 mov     [ebp+Size], ecx
.text:0000818F                 mov     edx, [ebp+Size]
.text:00008192                 push    edx             ; Size
.text:00008193                 mov     eax, [ebp+Src]
.text:00008196                 push    eax             ; Src
.text:00008197                 mov     ecx, [ebp+var_C]
.text:0000819A                 push    ecx             ; int
.text:0000819B                 call    _ssh_pkt_adddata
.text:000081A0                 add     esp, 0Ch
.text:000081A3                 jmp     short loc_81EB  ; jumptable 00008115 default case
.text:000081A5 ; ---------------------------------------------------------------------------
.text:000081A5
.text:000081A5 $LN2:                                   ; CODE XREF: _construct_packet+6Dj
.text:000081A5                                         ; DATA XREF: .text:$LN12_2o
.text:000081A5                 mov     edx, [ebp+arg_8] ; jumptable 00008115 case 3
.text:000081A8                 add     edx, 4
.text:000081AB                 mov     [ebp+arg_8], edx
.text:000081AE                 mov     eax, [ebp+arg_8]
.text:000081B1                 mov     ecx, [eax-4]
.text:000081B4                 mov     [ebp+Str], ecx
.text:000081B7                 mov     edx, [ebp+Str]
.text:000081BA                 push    edx             ; Str
.text:000081BB                 mov     eax, [ebp+var_C]
.text:000081BE                 push    eax             ; int
.text:000081BF                 call    _ssh_pkt_addstring
.text:000081C4                 add     esp, 8
.text:000081C7                 jmp     short loc_81EB  ; jumptable 00008115 default case
.text:000081C9 ; ---------------------------------------------------------------------------
.text:000081C9
.text:000081C9 $LN1:                                   ; CODE XREF: _construct_packet+6Dj
.text:000081C9                                         ; DATA XREF: .text:$LN12_2o
.text:000081C9                 mov     ecx, [ebp+arg_8] ; jumptable 00008115 case 4
.text:000081CC                 add     ecx, 4
.text:000081CF                 mov     [ebp+arg_8], ecx
.text:000081D2                 mov     edx, [ebp+arg_8]
.text:000081D5                 mov     eax, [edx-4]
.text:000081D8                 mov     [ebp+var_8], eax
.text:000081DB                 mov     ecx, [ebp+var_8]
.text:000081DE                 push    ecx
.text:000081DF                 mov     edx, [ebp+var_C]
.text:000081E2                 push    edx
.text:000081E3                 call    _ssh1_pkt_addmp
.text:000081E8                 add     esp, 8
.text:000081EB
.text:000081EB loc_81EB:                               ; CODE XREF: _construct_packet+64j
.text:000081EB                                         ; _construct_packet+96j ...
.text:000081EB                 jmp     loc_80DD        ; jumptable 00008115 default case
.text:000081F0 ; ---------------------------------------------------------------------------
.text:000081F0
.text:000081F0 loc_81F0:                               ; CODE XREF: _construct_packet+4Bj
.text:000081F0                 mov     eax, [ebp+var_C]
.text:000081F3                 add     esp, 24h
.text:000081F6                 cmp     ebp, esp
.text:000081F8                 call    __RTC_CheckEsp
.text:000081FD                 mov     esp, ebp
.text:000081FF                 pop     ebp
.text:00008200                 retn
.text:00008200 _construct_packet endp
.text:00008200
.text:00008200 ; ---------------------------------------------------------------------------
.text:00008201                 align 4
.text:00008204 $LN12_2         dd offset $LN5_0        ; DATA XREF: _construct_packet+6Dr
.text:00008204                 dd offset $LN4_0        ; jump table for switch statement
.text:00008204                 dd offset $LN3
.text:00008204                 dd offset $LN2
.text:00008204                 dd offset $LN1
.text:00008218
.text:00008218 ; =============== S U B R O U T I N E =======================================
.text:00008218
.text:00008218 ; Attributes: bp-based frame
.text:00008218
.text:00008218 _ssh_pkt_ensure proc near               ; CODE XREF: _s_wrpkt_prepare+71p
.text:00008218                                         ; _s_wrpkt_prepare+B7p ...
.text:00008218
.text:00008218 var_C           = dword ptr -0Ch
.text:00008218 var_8           = dword ptr -8
.text:00008218 var_4           = dword ptr -4
.text:00008218 arg_0           = dword ptr  8
.text:00008218 arg_4           = dword ptr  0Ch
.text:00008218
.text:00008218                 push    ebp
.text:00008219                 mov     ebp, esp
.text:0000821B                 sub     esp, 0Ch
.text:0000821E                 mov     [ebp+var_C], 0CCCCCCCCh
.text:00008225                 mov     [ebp+var_8], 0CCCCCCCCh
.text:0000822C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00008233                 mov     eax, [ebp+arg_0]
.text:00008236                 mov     ecx, [eax+1Ch]
.text:00008239                 cmp     ecx, [ebp+arg_4]
.text:0000823C                 jge     short loc_82AA
.text:0000823E                 mov     edx, [ebp+arg_0]
.text:00008241                 mov     eax, [edx+14h]
.text:00008244                 mov     [ebp+var_4], eax
.text:00008247                 cmp     [ebp+var_4], 0
.text:0000824B                 jz      short loc_825B
.text:0000824D                 mov     ecx, [ebp+arg_0]
.text:00008250                 mov     edx, [ebp+var_4]
.text:00008253                 sub     edx, [ecx+10h]
.text:00008256                 mov     [ebp+var_C], edx
.text:00008259                 jmp     short loc_8262
.text:0000825B ; ---------------------------------------------------------------------------
.text:0000825B
.text:0000825B loc_825B:                               ; CODE XREF: _ssh_pkt_ensure+33j
.text:0000825B                 mov     [ebp+var_C], 0
.text:00008262
.text:00008262 loc_8262:                               ; CODE XREF: _ssh_pkt_ensure+41j
.text:00008262                 mov     eax, [ebp+var_C]
.text:00008265                 mov     [ebp+var_8], eax
.text:00008268                 mov     ecx, [ebp+arg_4]
.text:0000826B                 add     ecx, 100h
.text:00008271                 mov     edx, [ebp+arg_0]
.text:00008274                 mov     [edx+1Ch], ecx
.text:00008277                 push    1
.text:00008279                 mov     eax, [ebp+arg_0]
.text:0000827C                 mov     ecx, [eax+1Ch]
.text:0000827F                 push    ecx
.text:00008280                 mov     edx, [ebp+arg_0]
.text:00008283                 mov     eax, [edx+10h]
.text:00008286                 push    eax
.text:00008287                 call    _saferealloc
.text:0000828C                 add     esp, 0Ch
.text:0000828F                 mov     ecx, [ebp+arg_0]
.text:00008292                 mov     [ecx+10h], eax
.text:00008295                 cmp     [ebp+var_4], 0
.text:00008299                 jz      short loc_82AA
.text:0000829B                 mov     edx, [ebp+arg_0]
.text:0000829E                 mov     eax, [edx+10h]
.text:000082A1                 add     eax, [ebp+var_8]
.text:000082A4                 mov     ecx, [ebp+arg_0]
.text:000082A7                 mov     [ecx+14h], eax
.text:000082AA
.text:000082AA loc_82AA:                               ; CODE XREF: _ssh_pkt_ensure+24j
.text:000082AA                                         ; _ssh_pkt_ensure+81j
.text:000082AA                 add     esp, 0Ch
.text:000082AD                 cmp     ebp, esp
.text:000082AF                 call    __RTC_CheckEsp
.text:000082B4                 mov     esp, ebp
.text:000082B6                 pop     ebp
.text:000082B7                 retn
.text:000082B7 _ssh_pkt_ensure endp
.text:000082B7
.text:000082B8
.text:000082B8 ; =============== S U B R O U T I N E =======================================
.text:000082B8
.text:000082B8 ; Attributes: bp-based frame
.text:000082B8
.text:000082B8 ; int __cdecl ssh_pkt_adddata(int, void *Src, size_t Size)
.text:000082B8 _ssh_pkt_adddata proc near              ; CODE XREF: _construct_packet+F3p
.text:000082B8                                         ; _ssh_pkt_addbyte+Dp ...
.text:000082B8
.text:000082B8 arg_0           = dword ptr  8
.text:000082B8 Src             = dword ptr  0Ch
.text:000082B8 Size            = dword ptr  10h
.text:000082B8
.text:000082B8                 push    ebp
.text:000082B9                 mov     ebp, esp
.text:000082BB                 mov     eax, [ebp+arg_0]
.text:000082BE                 mov     ecx, [eax]
.text:000082C0                 add     ecx, [ebp+Size]
.text:000082C3                 mov     edx, [ebp+arg_0]
.text:000082C6                 mov     [edx], ecx
.text:000082C8                 mov     eax, [ebp+arg_0]
.text:000082CB                 mov     ecx, [eax]
.text:000082CD                 push    ecx
.text:000082CE                 mov     edx, [ebp+arg_0]
.text:000082D1                 push    edx
.text:000082D2                 call    _ssh_pkt_ensure
.text:000082D7                 add     esp, 8
.text:000082DA                 mov     eax, [ebp+Size]
.text:000082DD                 push    eax             ; Size
.text:000082DE                 mov     ecx, [ebp+Src]
.text:000082E1                 push    ecx             ; Src
.text:000082E2                 mov     edx, [ebp+arg_0]
.text:000082E5                 mov     eax, [edx+10h]
.text:000082E8                 mov     ecx, [ebp+arg_0]
.text:000082EB                 add     eax, [ecx]
.text:000082ED                 sub     eax, [ebp+Size]
.text:000082F0                 push    eax             ; Dst
.text:000082F1                 call    _memcpy
.text:000082F6                 add     esp, 0Ch
.text:000082F9                 cmp     ebp, esp
.text:000082FB                 call    __RTC_CheckEsp
.text:00008300                 pop     ebp
.text:00008301                 retn
.text:00008301 _ssh_pkt_adddata endp
.text:00008301
.text:00008301 ; ---------------------------------------------------------------------------
.text:00008302                 align 8
.text:00008308
.text:00008308 ; =============== S U B R O U T I N E =======================================
.text:00008308
.text:00008308 ; Attributes: bp-based frame
.text:00008308
.text:00008308 ; int __cdecl ssh_pkt_addbyte(int, char Src)
.text:00008308 _ssh_pkt_addbyte proc near              ; CODE XREF: _construct_packet+B6p
.text:00008308                                         ; _ssh1_pkt_init+25p ...
.text:00008308
.text:00008308 arg_0           = dword ptr  8
.text:00008308 Src             = byte ptr  0Ch
.text:00008308
.text:00008308                 push    ebp
.text:00008309                 mov     ebp, esp
.text:0000830B                 push    1               ; Size
.text:0000830D                 lea     eax, [ebp+Src]
.text:00008310                 push    eax             ; Src
.text:00008311                 mov     ecx, [ebp+arg_0]
.text:00008314                 push    ecx             ; int
.text:00008315                 call    _ssh_pkt_adddata
.text:0000831A                 add     esp, 0Ch
.text:0000831D                 cmp     ebp, esp
.text:0000831F                 call    __RTC_CheckEsp
.text:00008324                 pop     ebp
.text:00008325                 retn
.text:00008325 _ssh_pkt_addbyte endp
.text:00008325
.text:00008325 ; ---------------------------------------------------------------------------
.text:00008326                 align 4
.text:00008328
.text:00008328 ; =============== S U B R O U T I N E =======================================
.text:00008328
.text:00008328 ; Attributes: bp-based frame
.text:00008328
.text:00008328 _ssh_pkt_adduint32 proc near            ; CODE XREF: _ssh_channel_try_eof+C6p
.text:00008328                                         ; _construct_packet+8Ep ...
.text:00008328
.text:00008328 var_C           = dword ptr -0Ch
.text:00008328 Src             = dword ptr -8
.text:00008328 var_4           = dword ptr -4
.text:00008328 arg_0           = dword ptr  8
.text:00008328 arg_4           = dword ptr  0Ch
.text:00008328
.text:00008328                 push    ebp
.text:00008329                 mov     ebp, esp
.text:0000832B                 sub     esp, 0Ch
.text:0000832E                 mov     [ebp+var_C], 0CCCCCCCCh
.text:00008335                 mov     [ebp+Src], 0CCCCCCCCh
.text:0000833C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00008343                 mov     eax, [ebp+arg_4]
.text:00008346                 shr     eax, 18h
.text:00008349                 mov     byte ptr [ebp+Src], al
.text:0000834C                 mov     ecx, [ebp+arg_4]
.text:0000834F                 shr     ecx, 10h
.text:00008352                 mov     byte ptr [ebp+Src+1], cl
.text:00008355                 mov     edx, [ebp+arg_4]
.text:00008358                 shr     edx, 8
.text:0000835B                 mov     byte ptr [ebp+Src+2], dl
.text:0000835E                 mov     al, byte ptr [ebp+arg_4]
.text:00008361                 mov     byte ptr [ebp+Src+3], al
.text:00008364                 push    4               ; Size
.text:00008366                 lea     ecx, [ebp+Src]
.text:00008369                 push    ecx             ; Src
.text:0000836A                 mov     edx, [ebp+arg_0]
.text:0000836D                 push    edx             ; int
.text:0000836E                 call    _ssh_pkt_adddata
.text:00008373                 add     esp, 0Ch
.text:00008376                 push    edx
.text:00008377                 mov     ecx, ebp
.text:00008379                 push    eax
.text:0000837A                 lea     edx, $LN5_1
.text:00008380                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00008385                 pop     eax
.text:00008386                 pop     edx
.text:00008387                 add     esp, 0Ch
.text:0000838A                 cmp     ebp, esp
.text:0000838C                 call    __RTC_CheckEsp
.text:00008391                 mov     esp, ebp
.text:00008393                 pop     ebp
.text:00008394                 retn
.text:00008394 _ssh_pkt_adduint32 endp
.text:00008394
.text:00008394 ; ---------------------------------------------------------------------------
.text:00008395                 align 4
.text:00008398 $LN5_1          dd 1                    ; DATA XREF: _ssh_pkt_adduint32+52o
.text:0000839C                 dd offset $LN4_1
.text:000083A0 $LN4_1          dd 0FFFFFFF8h, 4        ; DATA XREF: .text:0000839Co
.text:000083A8                 dd offset $LN3_0
.text:000083AC $LN3_0          dd 0CCCC0078h, 2 dup(0CCCCCCCCh) ; DATA XREF: .text:000083A8o
.text:000083B8
.text:000083B8 ; =============== S U B R O U T I N E =======================================
.text:000083B8
.text:000083B8 ; Attributes: bp-based frame
.text:000083B8
.text:000083B8 ; int __cdecl ssh_pkt_addstring(int, char *Str)
.text:000083B8 _ssh_pkt_addstring proc near            ; CODE XREF: _construct_packet+117p
.text:000083B8                                         ; _do_ssh2_transport+760p ...
.text:000083B8
.text:000083B8 arg_0           = dword ptr  8
.text:000083B8 Str             = dword ptr  0Ch
.text:000083B8
.text:000083B8                 push    ebp
.text:000083B9                 mov     ebp, esp
.text:000083BB                 mov     eax, [ebp+arg_0]
.text:000083BE                 push    eax
.text:000083BF                 call    _ssh_pkt_addstring_start
.text:000083C4                 add     esp, 4
.text:000083C7                 mov     ecx, [ebp+Str]
.text:000083CA                 push    ecx             ; Str
.text:000083CB                 mov     edx, [ebp+arg_0]
.text:000083CE                 push    edx             ; int
.text:000083CF                 call    _ssh_pkt_addstring_str
.text:000083D4                 add     esp, 8
.text:000083D7                 cmp     ebp, esp
.text:000083D9                 call    __RTC_CheckEsp
.text:000083DE                 pop     ebp
.text:000083DF                 retn
.text:000083DF _ssh_pkt_addstring endp
.text:000083DF
.text:000083DF ; ---------------------------------------------------------------------------
.text:000083E0                 db 8 dup(0CCh)
.text:000083E8
.text:000083E8 ; =============== S U B R O U T I N E =======================================
.text:000083E8
.text:000083E8 ; Attributes: bp-based frame
.text:000083E8
.text:000083E8 _ssh_pkt_addstring_start proc near      ; CODE XREF: _ssh_pkt_addstring+7p
.text:000083E8                                         ; _ssh2_pkt_defer_noqueue+5Bp ...
.text:000083E8
.text:000083E8 arg_0           = dword ptr  8
.text:000083E8
.text:000083E8                 push    ebp
.text:000083E9                 mov     ebp, esp
.text:000083EB                 push    0
.text:000083ED                 mov     eax, [ebp+arg_0]
.text:000083F0                 push    eax
.text:000083F1                 call    _ssh_pkt_adduint32
.text:000083F6                 add     esp, 8
.text:000083F9                 mov     ecx, [ebp+arg_0]
.text:000083FC                 mov     edx, [ebp+arg_0]
.text:000083FF                 mov     eax, [edx]
.text:00008401                 mov     [ecx+18h], eax
.text:00008404                 cmp     ebp, esp
.text:00008406                 call    __RTC_CheckEsp
.text:0000840B                 pop     ebp
.text:0000840C                 retn
.text:0000840C _ssh_pkt_addstring_start endp
.text:0000840C
.text:0000840C ; ---------------------------------------------------------------------------
.text:0000840D                 db 0Bh dup(0CCh)
.text:00008418
.text:00008418 ; =============== S U B R O U T I N E =======================================
.text:00008418
.text:00008418 ; Attributes: bp-based frame
.text:00008418
.text:00008418 ; int __cdecl ssh_pkt_addstring_str(int, char *Str)
.text:00008418 _ssh_pkt_addstring_str proc near        ; CODE XREF: _ssh_pkt_addstring+17p
.text:00008418                                         ; _do_ssh2_transport+678p ...
.text:00008418
.text:00008418 arg_0           = dword ptr  8
.text:00008418 Str             = dword ptr  0Ch
.text:00008418
.text:00008418                 push    ebp
.text:00008419                 mov     ebp, esp
.text:0000841B                 mov     eax, [ebp+Str]
.text:0000841E                 push    eax             ; Str
.text:0000841F                 call    _strlen
.text:00008424                 add     esp, 4
.text:00008427                 push    eax             ; Size
.text:00008428                 mov     ecx, [ebp+Str]
.text:0000842B                 push    ecx             ; Src
.text:0000842C                 mov     edx, [ebp+arg_0]
.text:0000842F                 push    edx             ; int
.text:00008430                 call    _ssh_pkt_adddata
.text:00008435                 add     esp, 0Ch
.text:00008438                 mov     eax, [ebp+arg_0]
.text:0000843B                 mov     ecx, [ebp+arg_0]
.text:0000843E                 mov     edx, [eax]
.text:00008440                 sub     edx, [ecx+18h]
.text:00008443                 sar     edx, 18h
.text:00008446                 mov     eax, [ebp+arg_0]
.text:00008449                 mov     ecx, [eax+10h]
.text:0000844C                 mov     eax, [ebp+arg_0]
.text:0000844F                 mov     eax, [eax+18h]
.text:00008452                 mov     [ecx+eax-4], dl
.text:00008456                 mov     ecx, [ebp+arg_0]
.text:00008459                 mov     edx, [ebp+arg_0]
.text:0000845C                 mov     eax, [ecx]
.text:0000845E                 sub     eax, [edx+18h]
.text:00008461                 sar     eax, 10h
.text:00008464                 mov     ecx, [ebp+arg_0]
.text:00008467                 mov     edx, [ecx+10h]
.text:0000846A                 mov     ecx, [ebp+arg_0]
.text:0000846D                 mov     ecx, [ecx+18h]
.text:00008470                 mov     [edx+ecx-3], al
.text:00008474                 mov     edx, [ebp+arg_0]
.text:00008477                 mov     eax, [ebp+arg_0]
.text:0000847A                 mov     ecx, [edx]
.text:0000847C                 sub     ecx, [eax+18h]
.text:0000847F                 sar     ecx, 8
.text:00008482
.text:00008482 loc_8482:                               ; DATA XREF: .text:off_20000o
.text:00008482                 mov     edx, [ebp+arg_0]
.text:00008485                 mov     eax, [edx+10h]
.text:00008488                 mov     edx, [ebp+arg_0]
.text:0000848B                 mov     edx, [edx+18h]
.text:0000848E                 mov     [eax+edx-2], cl
.text:00008492                 mov     eax, [ebp+arg_0]
.text:00008495                 mov     ecx, [ebp+arg_0]
.text:00008498                 mov     edx, [eax]
.text:0000849A                 sub     edx, [ecx+18h]
.text:0000849D                 mov     eax, [ebp+arg_0]
.text:000084A0                 mov     ecx, [eax+10h]
.text:000084A3                 mov     eax, [ebp+arg_0]
.text:000084A6                 mov     eax, [eax+18h]
.text:000084A9                 mov     [ecx+eax-1], dl
.text:000084AD                 cmp     ebp, esp
.text:000084AF                 call    __RTC_CheckEsp
.text:000084B4                 pop     ebp
.text:000084B5                 retn
.text:000084B5 _ssh_pkt_addstring_str endp
.text:000084B5
.text:000084B5 ; ---------------------------------------------------------------------------
.text:000084B6                 align 4
.text:000084B8
.text:000084B8 ; =============== S U B R O U T I N E =======================================
.text:000084B8
.text:000084B8 ; Attributes: bp-based frame
.text:000084B8
.text:000084B8 _ssh1_pkt_addmp proc near               ; CODE XREF: _construct_packet+13Bp
.text:000084B8
.text:000084B8 Src             = dword ptr -8
.text:000084B8 Size            = dword ptr -4
.text:000084B8 arg_0           = dword ptr  8
.text:000084B8 arg_4           = dword ptr  0Ch
.text:000084B8
.text:000084B8                 push    ebp
.text:000084B9                 mov     ebp, esp
.text:000084BB                 sub     esp, 8
.text:000084BE                 mov     [ebp+Src], 0CCCCCCCCh
.text:000084C5                 mov     [ebp+Size], 0CCCCCCCCh
.text:000084CC                 mov     eax, [ebp+arg_4]
.text:000084CF                 push    eax
.text:000084D0                 call    _ssh1_bignum_length
.text:000084D5                 add     esp, 4
.text:000084D8                 mov     [ebp+Size], eax
.text:000084DB                 push    1
.text:000084DD                 mov     ecx, [ebp+Size]
.text:000084E0                 push    ecx
.text:000084E1                 call    _safemalloc
.text:000084E6                 add     esp, 8
.text:000084E9                 mov     [ebp+Src], eax
.text:000084EC                 mov     edx, [ebp+arg_4]
.text:000084EF                 push    edx
.text:000084F0                 mov     eax, [ebp+Src]
.text:000084F3                 push    eax
.text:000084F4                 call    _ssh1_write_bignum
.text:000084F9                 add     esp, 8
.text:000084FC                 mov     ecx, [ebp+Size]
.text:000084FF                 push    ecx             ; Size
.text:00008500                 mov     edx, [ebp+Src]
.text:00008503                 push    edx             ; Src
.text:00008504                 mov     eax, [ebp+arg_0]
.text:00008507                 push    eax             ; int
.text:00008508                 call    _ssh_pkt_adddata
.text:0000850D                 add     esp, 0Ch
.text:00008510                 mov     ecx, [ebp+Src]
.text:00008513                 push    ecx
.text:00008514                 call    _safefree
.text:00008519                 add     esp, 4
.text:0000851C                 add     esp, 8
.text:0000851F                 cmp     ebp, esp
.text:00008521                 call    __RTC_CheckEsp
.text:00008526                 mov     esp, ebp
.text:00008528                 pop     ebp
.text:00008529                 retn
.text:00008529 _ssh1_pkt_addmp endp
.text:00008529
.text:00008529 ; ---------------------------------------------------------------------------
.text:0000852A                 db 0Eh dup(0CCh)
.text:00008538
.text:00008538 ; =============== S U B R O U T I N E =======================================
.text:00008538
.text:00008538 ; Attributes: bp-based frame
.text:00008538
.text:00008538 _ssh1_pkt_init  proc near               ; CODE XREF: _construct_packet+2Ap
.text:00008538                                         ; _do_ssh1_connection+46Dp
.text:00008538
.text:00008538 var_4           = dword ptr -4
.text:00008538 arg_0           = dword ptr  8
.text:00008538
.text:00008538                 push    ebp
.text:00008539                 mov     ebp, esp
.text:0000853B                 push    ecx
.text:0000853C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00008543                 call    _ssh_new_packet
.text:00008548                 mov     [ebp+var_4], eax
.text:0000854B                 mov     eax, [ebp+var_4]
.text:0000854E                 mov     dword ptr [eax], 0Ch
.text:00008554                 movzx   ecx, byte ptr [ebp+arg_0]
.text:00008558                 push    ecx             ; Src
.text:00008559                 mov     edx, [ebp+var_4]
.text:0000855C                 push    edx             ; int
.text:0000855D                 call    _ssh_pkt_addbyte
.text:00008562                 add     esp, 8
.text:00008565                 mov     eax, [ebp+var_4]
.text:00008568                 mov     ecx, [eax+10h]
.text:0000856B                 mov     edx, [ebp+var_4]
.text:0000856E                 add     ecx, [edx]
.text:00008570                 mov     eax, [ebp+var_4]
.text:00008573                 mov     [eax+14h], ecx
.text:00008576                 mov     ecx, [ebp+var_4]
.text:00008579                 mov     edx, [ebp+arg_0]
.text:0000857C                 mov     [ecx+8], edx
.text:0000857F                 mov     eax, [ebp+var_4]
.text:00008582                 mov     dword ptr [eax+24h], 0
.text:00008589                 mov     ecx, [ebp+var_4]
.text:0000858C                 mov     dword ptr [ecx+28h], 0
.text:00008593                 mov     eax, [ebp+var_4]
.text:00008596                 add     esp, 4
.text:00008599                 cmp     ebp, esp
.text:0000859B                 call    __RTC_CheckEsp
.text:000085A0                 mov     esp, ebp
.text:000085A2                 pop     ebp
.text:000085A3                 retn
.text:000085A3 _ssh1_pkt_init  endp
.text:000085A3
.text:000085A3 ; ---------------------------------------------------------------------------
.text:000085A4                 align 8
.text:000085A8
.text:000085A8 ; =============== S U B R O U T I N E =======================================
.text:000085A8
.text:000085A8 ; Attributes: bp-based frame
.text:000085A8
.text:000085A8 _ssh_new_packet proc near               ; CODE XREF: _ssh1_pkt_init+Bp
.text:000085A8                                         ; _ssh2_pkt_init+Bp ...
.text:000085A8
.text:000085A8 var_4           = dword ptr -4
.text:000085A8
.text:000085A8                 push    ebp
.text:000085A9                 mov     ebp, esp
.text:000085AB                 push    ecx
.text:000085AC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000085B3                 push    2Ch ; ','
.text:000085B5                 push    1
.text:000085B7                 call    _safemalloc
.text:000085BC                 add     esp, 8
.text:000085BF                 mov     [ebp+var_4], eax
.text:000085C2                 mov     eax, [ebp+var_4]
.text:000085C5                 mov     dword ptr [eax+10h], 0
.text:000085CC                 mov     ecx, [ebp+var_4]
.text:000085CF                 mov     dword ptr [ecx+14h], 0
.text:000085D6                 mov     edx, [ebp+var_4]
.text:000085D9                 mov     dword ptr [edx+1Ch], 0
.text:000085E0                 mov     eax, [ebp+var_4]
.text:000085E3                 add     esp, 4
.text:000085E6                 cmp     ebp, esp
.text:000085E8                 call    __RTC_CheckEsp
.text:000085ED                 mov     esp, ebp
.text:000085EF                 pop     ebp
.text:000085F0                 retn
.text:000085F0 _ssh_new_packet endp
.text:000085F0
.text:000085F0 ; ---------------------------------------------------------------------------
.text:000085F1                 align 8
.text:000085F8
.text:000085F8 ; =============== S U B R O U T I N E =======================================
.text:000085F8
.text:000085F8 ; Attributes: bp-based frame
.text:000085F8
.text:000085F8 _ssh2_pkt_init  proc near               ; CODE XREF: _ssh_channel_try_eof+B0p
.text:000085F8                                         ; _ssh2_pkt_defer_noqueue+4Cp ...
.text:000085F8
.text:000085F8 var_4           = dword ptr -4
.text:000085F8 arg_0           = dword ptr  8
.text:000085F8
.text:000085F8                 push    ebp
.text:000085F9                 mov     ebp, esp
.text:000085FB                 push    ecx
.text:000085FC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00008603                 call    _ssh_new_packet
.text:00008608                 mov     [ebp+var_4], eax
.text:0000860B                 mov     eax, [ebp+var_4]
.text:0000860E                 mov     dword ptr [eax], 5
.text:00008614                 mov     ecx, [ebp+var_4]
.text:00008617                 mov     dword ptr [ecx+4], 0
.text:0000861E                 mov     edx, [ebp+var_4]
.text:00008621                 mov     eax, [ebp+arg_0]
.text:00008624                 mov     [edx+8], eax
.text:00008627                 movzx   ecx, byte ptr [ebp+arg_0]
.text:0000862B                 push    ecx             ; Src
.text:0000862C                 mov     edx, [ebp+var_4]
.text:0000862F                 push    edx             ; int
.text:00008630                 call    _ssh_pkt_addbyte
.text:00008635                 add     esp, 8
.text:00008638                 mov     eax, [ebp+var_4]
.text:0000863B                 mov     ecx, [eax+10h]
.text:0000863E                 mov     edx, [ebp+var_4]
.text:00008641                 add     ecx, [edx]
.text:00008643                 mov     eax, [ebp+var_4]
.text:00008646                 mov     [eax+14h], ecx
.text:00008649                 mov     ecx, [ebp+var_4]
.text:0000864C                 mov     dword ptr [ecx+24h], 0
.text:00008653                 mov     edx, [ebp+var_4]
.text:00008656                 mov     dword ptr [edx+28h], 0
.text:0000865D                 mov     eax, [ebp+var_4]
.text:00008660                 add     esp, 4
.text:00008663                 cmp     ebp, esp
.text:00008665                 call    __RTC_CheckEsp
.text:0000866A                 mov     esp, ebp
.text:0000866C                 pop     ebp
.text:0000866D                 retn
.text:0000866D _ssh2_pkt_init  endp
.text:0000866D
.text:0000866D ; ---------------------------------------------------------------------------
.text:0000866E                 db 0Ah dup(0CCh)
.text:00008678
.text:00008678 ; =============== S U B R O U T I N E =======================================
.text:00008678
.text:00008678 ; Attributes: bp-based frame
.text:00008678
.text:00008678 _ssh2_pkt_send  proc near               ; CODE XREF: _ssh_channel_try_eof+D6p
.text:00008678                                         ; _ssh2_try_send+D9p ...
.text:00008678
.text:00008678 arg_0           = dword ptr  8
.text:00008678 arg_4           = dword ptr  0Ch
.text:00008678
.text:00008678                 push    ebp
.text:00008679                 mov     ebp, esp
.text:0000867B                 mov     eax, [ebp+arg_0]
.text:0000867E                 cmp     dword ptr [eax+138h], 0
.text:00008685                 jz      short loc_8699
.text:00008687                 mov     ecx, [ebp+arg_4]
.text:0000868A                 push    ecx
.text:0000868B                 mov     edx, [ebp+arg_0]
.text:0000868E                 push    edx
.text:0000868F                 call    _ssh2_pkt_queue
.text:00008694                 add     esp, 8
.text:00008697                 jmp     short loc_86A9
.text:00008699 ; ---------------------------------------------------------------------------
.text:00008699
.text:00008699 loc_8699:                               ; CODE XREF: _ssh2_pkt_send+Dj
.text:00008699                 mov     eax, [ebp+arg_4]
.text:0000869C                 push    eax
.text:0000869D                 mov     ecx, [ebp+arg_0]
.text:000086A0                 push    ecx
.text:000086A1                 call    _ssh2_pkt_send_noqueue
.text:000086A6                 add     esp, 8
.text:000086A9
.text:000086A9 loc_86A9:                               ; CODE XREF: _ssh2_pkt_send+1Fj
.text:000086A9                 cmp     ebp, esp
.text:000086AB                 call    __RTC_CheckEsp
.text:000086B0                 pop     ebp
.text:000086B1                 retn
.text:000086B1 _ssh2_pkt_send  endp
.text:000086B1
.text:000086B1 ; ---------------------------------------------------------------------------
.text:000086B2                 align 8
.text:000086B8
.text:000086B8 ; =============== S U B R O U T I N E =======================================
.text:000086B8
.text:000086B8 ; Attributes: bp-based frame
.text:000086B8
.text:000086B8 _ssh2_pkt_send_noqueue proc near        ; CODE XREF: _ssh2_pkt_send+29p
.text:000086B8                                         ; _do_ssh2_transport+AD9p ...
.text:000086B8
.text:000086B8 var_8           = dword ptr -8
.text:000086B8 var_4           = dword ptr -4
.text:000086B8 arg_0           = dword ptr  8
.text:000086B8 arg_4           = dword ptr  0Ch
.text:000086B8
.text:000086B8                 push    ebp
.text:000086B9                 mov     ebp, esp
.text:000086BB                 sub     esp, 8
.text:000086BE                 mov     [ebp+var_8], 0CCCCCCCCh
.text:000086C5                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000086CC                 mov     eax, [ebp+arg_0]
.text:000086CF                 cmp     dword ptr [eax+60h], 0
.text:000086D3                 jz      short loc_8706
.text:000086D5                 mov     ecx, [ebp+arg_0]
.text:000086D8                 mov     edx, [ecx+60h]
.text:000086DB                 mov     eax, [edx+24h]
.text:000086DE                 and     eax, 1
.text:000086E1                 jz      short loc_8706
.text:000086E3                 push    0
.text:000086E5                 mov     ecx, [ebp+arg_4]
.text:000086E8                 push    ecx
.text:000086E9                 mov     edx, [ebp+arg_0]
.text:000086EC                 push    edx
.text:000086ED                 call    _ssh2_pkt_defer_noqueue
.text:000086F2                 add     esp, 0Ch
.text:000086F5                 mov     eax, [ebp+arg_0]
.text:000086F8                 push    eax
.text:000086F9                 call    _ssh_pkt_defersend
.text:000086FE                 add     esp, 4
.text:00008701                 jmp     loc_87BF
.text:00008706 ; ---------------------------------------------------------------------------
.text:00008706
.text:00008706 loc_8706:                               ; CODE XREF: _ssh2_pkt_send_noqueue+1Bj
.text:00008706                                         ; _ssh2_pkt_send_noqueue+29j
.text:00008706                 mov     ecx, [ebp+arg_4]
.text:00008709                 push    ecx
.text:0000870A                 mov     edx, [ebp+arg_0]
.text:0000870D                 push    edx
.text:0000870E                 call    _ssh2_pkt_construct
.text:00008713                 add     esp, 8
.text:00008716                 mov     [ebp+var_4], eax
.text:00008719                 mov     eax, [ebp+var_4]
.text:0000871C                 push    eax
.text:0000871D                 mov     ecx, [ebp+arg_4]
.text:00008720                 mov     edx, [ecx+14h]
.text:00008723                 push    edx
.text:00008724                 mov     eax, [ebp+arg_0]
.text:00008727                 push    eax
.text:00008728                 call    _s_write
.text:0000872D                 add     esp, 0Ch
.text:00008730                 mov     [ebp+var_8], eax
.text:00008733                 cmp     [ebp+var_8], 8000h
.text:0000873A                 jle     short loc_874E
.text:0000873C                 mov     ecx, [ebp+var_8]
.text:0000873F                 push    ecx
.text:00008740                 push    1
.text:00008742                 mov     edx, [ebp+arg_0]
.text:00008745                 push    edx
.text:00008746                 call    _ssh_throttle_all
.text:0000874B                 add     esp, 0Ch
.text:0000874E
.text:0000874E loc_874E:                               ; CODE XREF: _ssh2_pkt_send_noqueue+82j
.text:0000874E                 mov     eax, [ebp+arg_0]
.text:00008751                 mov     ecx, [eax+65Ch]
.text:00008757                 mov     edx, [ebp+arg_4]
.text:0000875A                 add     ecx, [edx+20h]
.text:0000875D                 mov     eax, [ebp+arg_0]
.text:00008760                 mov     [eax+65Ch], ecx
.text:00008766                 mov     ecx, [ebp+arg_0]
.text:00008769                 cmp     dword ptr [ecx+668h], 0
.text:00008770                 jnz     short loc_87B3
.text:00008772                 mov     edx, [ebp+arg_0]
.text:00008775                 cmp     dword ptr [edx+0C4h], 0
.text:0000877C                 jnz     short loc_87B3
.text:0000877E                 mov     eax, [ebp+arg_0]
.text:00008781                 cmp     dword ptr [eax+664h], 0
.text:00008788                 jz      short loc_87B3
.text:0000878A                 mov     ecx, [ebp+arg_0]
.text:0000878D                 mov     edx, [ebp+arg_0]
.text:00008790                 mov     eax, [ecx+65Ch]
.text:00008796                 cmp     eax, [edx+664h]
.text:0000879C                 jbe     short loc_87B3
.text:0000879E                 push    0
.text:000087A0                 push    0FFFFFFFFh
.text:000087A2                 push    offset $SG89049 ; "too much data sent"
.text:000087A7                 mov     ecx, [ebp+arg_0]
.text:000087AA                 push    ecx
.text:000087AB                 call    _do_ssh2_transport
.text:000087B0                 add     esp, 10h
.text:000087B3
.text:000087B3 loc_87B3:                               ; CODE XREF: _ssh2_pkt_send_noqueue+B8j
.text:000087B3                                         ; _ssh2_pkt_send_noqueue+C4j ...
.text:000087B3                 mov     edx, [ebp+arg_4]
.text:000087B6                 push    edx
.text:000087B7                 call    _ssh_free_packet
.text:000087BC                 add     esp, 4
.text:000087BF
.text:000087BF loc_87BF:                               ; CODE XREF: _ssh2_pkt_send_noqueue+49j
.text:000087BF                 add     esp, 8
.text:000087C2                 cmp     ebp, esp
.text:000087C4                 call    __RTC_CheckEsp
.text:000087C9                 mov     esp, ebp
.text:000087CB                 pop     ebp
.text:000087CC                 retn
.text:000087CC _ssh2_pkt_send_noqueue endp
.text:000087CC
.text:000087CC ; ---------------------------------------------------------------------------
.text:000087CD                 db 0Bh dup(0CCh)
.text:000087D8
.text:000087D8 ; =============== S U B R O U T I N E =======================================
.text:000087D8
.text:000087D8 ; Attributes: bp-based frame
.text:000087D8
.text:000087D8 _ssh2_pkt_construct proc near           ; CODE XREF: _ssh2_pkt_send_noqueue+56p
.text:000087D8                                         ; _ssh2_pkt_defer_noqueue+7Dp
.text:000087D8
.text:000087D8 var_34          = dword ptr -34h
.text:000087D8 var_30          = dword ptr -30h
.text:000087D8 var_2C          = dword ptr -2Ch
.text:000087D8 Size            = dword ptr -24h
.text:000087D8 Src             = dword ptr -18h
.text:000087D8 var_10          = dword ptr -10h
.text:000087D8 var_C           = dword ptr -0Ch
.text:000087D8 var_8           = dword ptr -8
.text:000087D8 var_4           = dword ptr -4
.text:000087D8 arg_0           = dword ptr  8
.text:000087D8 arg_4           = dword ptr  0Ch
.text:000087D8
.text:000087D8                 push    ebp
.text:000087D9                 mov     ebp, esp
.text:000087DB                 sub     esp, 34h
.text:000087DE                 push    esi
.text:000087DF                 push    edi
.text:000087E0                 lea     edi, [ebp+var_34]
.text:000087E3                 mov     ecx, 0Dh
.text:000087E8                 mov     eax, 0CCCCCCCCh
.text:000087ED                 rep stosd
.text:000087EF                 mov     eax, [ebp+arg_0]
.text:000087F2                 cmp     dword ptr [eax+18h], 0
.text:000087F6                 jz      short loc_8808
.text:000087F8                 mov     ecx, [ebp+arg_4]
.text:000087FB                 push    ecx
.text:000087FC                 mov     edx, [ebp+arg_0]
.text:000087FF                 push    edx
.text:00008800                 call    _ssh2_log_outgoing_packet
.text:00008805                 add     esp, 8
.text:00008808
.text:00008808 loc_8808:                               ; CODE XREF: _ssh2_pkt_construct+1Ej
.text:00008808                 mov     eax, [ebp+arg_0]
.text:0000880B                 cmp     dword ptr [eax+0C4h], 0
.text:00008812                 jz      short loc_8892
.text:00008814                 mov     ecx, [ebp+arg_4]
.text:00008817                 mov     edx, [ecx]
.text:00008819                 sub     edx, 5
.text:0000881C                 sar     edx, 18h
.text:0000881F                 mov     eax, [ebp+arg_4]
.text:00008822                 mov     ecx, [eax+10h]
.text:00008825                 mov     [ecx+1], dl
.text:00008828                 mov     edx, [ebp+arg_4]
.text:0000882B                 mov     eax, [edx]
.text:0000882D                 sub     eax, 5
.text:00008830                 sar     eax, 10h
.text:00008833                 mov     ecx, [ebp+arg_4]
.text:00008836                 mov     edx, [ecx+10h]
.text:00008839                 mov     [edx+2], al
.text:0000883C                 mov     eax, [ebp+arg_4]
.text:0000883F                 mov     ecx, [eax]
.text:00008841                 sub     ecx, 5
.text:00008844                 sar     ecx, 8
.text:00008847                 mov     edx, [ebp+arg_4]
.text:0000884A                 mov     eax, [edx+10h]
.text:0000884D                 mov     [eax+3], cl
.text:00008850                 mov     ecx, [ebp+arg_4]
.text:00008853                 mov     edx, [ecx]
.text:00008855                 sub     edx, 5
.text:00008858                 mov     eax, [ebp+arg_4]
.text:0000885B                 mov     ecx, [eax+10h]
.text:0000885E                 mov     [ecx+4], dl
.text:00008861                 mov     edx, [ebp+arg_4]
.text:00008864                 mov     eax, [edx+10h]
.text:00008867                 add     eax, 1
.text:0000886A                 mov     ecx, [ebp+arg_4]
.text:0000886D                 mov     [ecx+14h], eax
.text:00008870                 mov     edx, [ebp+arg_0]
.text:00008873                 mov     eax, [edx+180h]
.text:00008879                 add     eax, 1
.text:0000887C                 mov     ecx, [ebp+arg_0]
.text:0000887F                 mov     [ecx+180h], eax
.text:00008885                 mov     edx, [ebp+arg_4]
.text:00008888                 mov     eax, [edx]
.text:0000888A                 sub     eax, 1
.text:0000888D                 jmp     loc_8B31
.text:00008892 ; ---------------------------------------------------------------------------
.text:00008892
.text:00008892 loc_8892:                               ; CODE XREF: _ssh2_pkt_construct+3Aj
.text:00008892                 mov     eax, [ebp+arg_0]
.text:00008895                 cmp     dword ptr [eax+80h], 0
.text:0000889C                 jz      short loc_890A
.text:0000889E                 mov     esi, esp
.text:000088A0                 lea     ecx, [ebp+Size]
.text:000088A3                 push    ecx
.text:000088A4                 lea     edx, [ebp+Src]
.text:000088A7                 push    edx
.text:000088A8                 mov     eax, [ebp+arg_4]
.text:000088AB                 mov     ecx, [eax]
.text:000088AD                 sub     ecx, 5
.text:000088B0                 push    ecx
.text:000088B1                 mov     edx, [ebp+arg_4]
.text:000088B4                 mov     eax, [edx+10h]
.text:000088B7                 add     eax, 5
.text:000088BA                 push    eax
.text:000088BB                 mov     ecx, [ebp+arg_0]
.text:000088BE                 mov     edx, [ecx+88h]
.text:000088C4                 push    edx
.text:000088C5                 mov     eax, [ebp+arg_0]
.text:000088C8                 mov     ecx, [eax+80h]
.text:000088CE                 mov     edx, [ecx+10h]
.text:000088D1                 call    edx
.text:000088D3                 add     esp, 14h
.text:000088D6                 cmp     esi, esp
.text:000088D8                 call    __RTC_CheckEsp
.text:000088DD                 test    eax, eax
.text:000088DF                 jz      short loc_890A
.text:000088E1                 mov     eax, [ebp+arg_4]
.text:000088E4                 mov     dword ptr [eax], 5
.text:000088EA                 mov     ecx, [ebp+Size]
.text:000088ED                 push    ecx             ; Size
.text:000088EE                 mov     edx, [ebp+Src]
.text:000088F1                 push    edx             ; Src
.text:000088F2                 mov     eax, [ebp+arg_4]
.text:000088F5                 push    eax             ; int
.text:000088F6                 call    _ssh_pkt_adddata
.text:000088FB                 add     esp, 0Ch
.text:000088FE                 mov     ecx, [ebp+Src]
.text:00008901                 push    ecx
.text:00008902                 call    _safefree
.text:00008907                 add     esp, 4
.text:0000890A
.text:0000890A loc_890A:                               ; CODE XREF: _ssh2_pkt_construct+C4j
.text:0000890A                                         ; _ssh2_pkt_construct+107j
.text:0000890A                 mov     edx, [ebp+arg_0]
.text:0000890D                 cmp     dword ptr [edx+60h], 0
.text:00008911                 jz      short loc_8921
.text:00008913                 mov     eax, [ebp+arg_0]
.text:00008916                 mov     ecx, [eax+60h]
.text:00008919                 mov     edx, [ecx+1Ch]
.text:0000891C                 mov     [ebp+var_2C], edx
.text:0000891F                 jmp     short loc_8928
.text:00008921 ; ---------------------------------------------------------------------------
.text:00008921
.text:00008921 loc_8921:                               ; CODE XREF: _ssh2_pkt_construct+139j
.text:00008921                 mov     [ebp+var_2C], 8
.text:00008928
.text:00008928 loc_8928:                               ; CODE XREF: _ssh2_pkt_construct+147j
.text:00008928                 mov     eax, [ebp+var_2C]
.text:0000892B                 mov     [ebp+var_4], eax
.text:0000892E                 cmp     [ebp+var_4], 8
.text:00008932                 jge     short loc_893D
.text:00008934                 mov     [ebp+var_30], 8
.text:0000893B                 jmp     short loc_8943
.text:0000893D ; ---------------------------------------------------------------------------
.text:0000893D
.text:0000893D loc_893D:                               ; CODE XREF: _ssh2_pkt_construct+15Aj
.text:0000893D                 mov     ecx, [ebp+var_4]
.text:00008940                 mov     [ebp+var_30], ecx
.text:00008943
.text:00008943 loc_8943:                               ; CODE XREF: _ssh2_pkt_construct+163j
.text:00008943                 mov     edx, [ebp+var_30]
.text:00008946                 mov     [ebp+var_4], edx
.text:00008949                 mov     [ebp+var_C], 4
.text:00008950                 mov     eax, [ebp+arg_4]
.text:00008953                 mov     ecx, [eax]
.text:00008955                 add     ecx, [ebp+var_C]
.text:00008958                 mov     edx, [ebp+arg_4]
.text:0000895B                 cmp     ecx, [edx+4]
.text:0000895E                 jge     short loc_896E
.text:00008960                 mov     eax, [ebp+arg_4]
.text:00008963                 mov     ecx, [ebp+arg_4]
.text:00008966                 mov     edx, [eax+4]
.text:00008969                 sub     edx, [ecx]
.text:0000896B                 mov     [ebp+var_C], edx
.text:0000896E
.text:0000896E loc_896E:                               ; CODE XREF: _ssh2_pkt_construct+186j
.text:0000896E                 mov     eax, [ebp+arg_4]
.text:00008971                 mov     eax, [eax]
.text:00008973                 add     eax, [ebp+var_C]
.text:00008976                 cdq
.text:00008977                 idiv    [ebp+var_4]
.text:0000897A                 mov     eax, [ebp+var_4]
.text:0000897D                 sub     eax, edx
.text:0000897F                 cdq
.text:00008980                 idiv    [ebp+var_4]
.text:00008983                 add     edx, [ebp+var_C]
.text:00008986                 mov     [ebp+var_C], edx
.text:00008989                 cmp     [ebp+var_C], 0FFh
.text:00008990                 jle     short loc_89A9
.text:00008992                 push    887h            ; Line
.text:00008997                 push    offset $SG89020 ; "..\\..\\..\\ssh.c"
.text:0000899C                 push    offset $SG89021 ; "padding <= 255"
.text:000089A1                 call    __wassert
.text:000089A6 ; ---------------------------------------------------------------------------
.text:000089A6                 add     esp, 0Ch
.text:000089A9
.text:000089A9 loc_89A9:                               ; CODE XREF: _ssh2_pkt_construct+1B8j
.text:000089A9                 mov     edx, [ebp+arg_0]
.text:000089AC                 cmp     dword ptr [edx+70h], 0
.text:000089B0                 jz      short loc_89C0
.text:000089B2                 mov     eax, [ebp+arg_0]
.text:000089B5                 mov     ecx, [eax+70h]
.text:000089B8                 mov     edx, [ecx+28h]
.text:000089BB                 mov     [ebp+var_34], edx
.text:000089BE                 jmp     short loc_89C7
.text:000089C0 ; ---------------------------------------------------------------------------
.text:000089C0
.text:000089C0 loc_89C0:                               ; CODE XREF: _ssh2_pkt_construct+1D8j
.text:000089C0                 mov     [ebp+var_34], 0
.text:000089C7
.text:000089C7 loc_89C7:                               ; CODE XREF: _ssh2_pkt_construct+1E6j
.text:000089C7                 mov     eax, [ebp+var_34]
.text:000089CA                 mov     [ebp+var_8], eax
.text:000089CD                 mov     ecx, [ebp+arg_4]
.text:000089D0                 mov     edx, [ecx]
.text:000089D2                 add     edx, [ebp+var_C]
.text:000089D5                 add     edx, [ebp+var_8]
.text:000089D8                 push    edx
.text:000089D9                 mov     eax, [ebp+arg_4]
.text:000089DC                 push    eax
.text:000089DD                 call    _ssh_pkt_ensure
.text:000089E2                 add     esp, 8
.text:000089E5                 mov     ecx, [ebp+arg_4]
.text:000089E8                 mov     edx, [ecx+10h]
.text:000089EB                 mov     al, byte ptr [ebp+var_C]
.text:000089EE                 mov     [edx+4], al
.text:000089F1                 mov     [ebp+var_10], 0
.text:000089F8                 jmp     short loc_8A03
.text:000089FA ; ---------------------------------------------------------------------------
.text:000089FA
.text:000089FA loc_89FA:                               ; CODE XREF: _ssh2_pkt_construct+249j
.text:000089FA                 mov     ecx, [ebp+var_10]
.text:000089FD                 add     ecx, 1
.text:00008A00                 mov     [ebp+var_10], ecx
.text:00008A03
.text:00008A03 loc_8A03:                               ; CODE XREF: _ssh2_pkt_construct+220j
.text:00008A03                 mov     edx, [ebp+var_10]
.text:00008A06                 cmp     edx, [ebp+var_C]
.text:00008A09                 jge     short loc_8A23
.text:00008A0B                 call    _random_byte
.text:00008A10                 mov     ecx, [ebp+arg_4]
.text:00008A13                 mov     edx, [ecx]
.text:00008A15                 add     edx, [ebp+var_10]
.text:00008A18                 mov     ecx, [ebp+arg_4]
.text:00008A1B                 mov     ecx, [ecx+10h]
.text:00008A1E                 mov     [edx+ecx], al
.text:00008A21                 jmp     short loc_89FA
.text:00008A23 ; ---------------------------------------------------------------------------
.text:00008A23
.text:00008A23 loc_8A23:                               ; CODE XREF: _ssh2_pkt_construct+231j
.text:00008A23                 mov     edx, [ebp+arg_4]
.text:00008A26                 mov     eax, [edx]
.text:00008A28                 mov     ecx, [ebp+var_C]
.text:00008A2B                 lea     edx, [eax+ecx-4]
.text:00008A2F                 sar     edx, 18h
.text:00008A32                 mov     eax, [ebp+arg_4]
.text:00008A35                 mov     ecx, [eax+10h]
.text:00008A38                 mov     [ecx], dl
.text:00008A3A                 mov     edx, [ebp+arg_4]
.text:00008A3D                 mov     eax, [edx]
.text:00008A3F                 mov     ecx, [ebp+var_C]
.text:00008A42                 lea     edx, [eax+ecx-4]
.text:00008A46                 sar     edx, 10h
.text:00008A49                 mov     eax, [ebp+arg_4]
.text:00008A4C                 mov     ecx, [eax+10h]
.text:00008A4F                 mov     [ecx+1], dl
.text:00008A52                 mov     edx, [ebp+arg_4]
.text:00008A55                 mov     eax, [edx]
.text:00008A57                 mov     ecx, [ebp+var_C]
.text:00008A5A                 lea     edx, [eax+ecx-4]
.text:00008A5E                 sar     edx, 8
.text:00008A61                 mov     eax, [ebp+arg_4]
.text:00008A64                 mov     ecx, [eax+10h]
.text:00008A67                 mov     [ecx+2], dl
.text:00008A6A                 mov     edx, [ebp+arg_4]
.text:00008A6D                 mov     eax, [edx]
.text:00008A6F                 mov     ecx, [ebp+var_C]
.text:00008A72                 lea     edx, [eax+ecx-4]
.text:00008A76                 mov     eax, [ebp+arg_4]
.text:00008A79                 mov     ecx, [eax+10h]
.text:00008A7C                 mov     [ecx+3], dl
.text:00008A7F                 mov     edx, [ebp+arg_0]
.text:00008A82                 cmp     dword ptr [edx+70h], 0
.text:00008A86                 jz      short loc_8AC0
.text:00008A88                 mov     esi, esp
.text:00008A8A                 mov     eax, [ebp+arg_0]
.text:00008A8D                 mov     ecx, [eax+180h]
.text:00008A93                 push    ecx
.text:00008A94                 mov     edx, [ebp+arg_4]
.text:00008A97                 mov     eax, [edx]
.text:00008A99                 add     eax, [ebp+var_C]
.text:00008A9C                 push    eax
.text:00008A9D                 mov     ecx, [ebp+arg_4]
.text:00008AA0                 mov     edx, [ecx+10h]
.text:00008AA3                 push    edx
.text:00008AA4                 mov     eax, [ebp+arg_0]
.text:00008AA7                 mov     ecx, [eax+78h]
.text:00008AAA                 push    ecx
.text:00008AAB                 mov     edx, [ebp+arg_0]
.text:00008AAE                 mov     eax, [edx+70h]
.text:00008AB1                 mov     ecx, [eax+0Ch]
.text:00008AB4                 call    ecx
.text:00008AB6                 add     esp, 10h
.text:00008AB9                 cmp     esi, esp
.text:00008ABB                 call    __RTC_CheckEsp
.text:00008AC0
.text:00008AC0 loc_8AC0:                               ; CODE XREF: _ssh2_pkt_construct+2AEj
.text:00008AC0                 mov     edx, [ebp+arg_0]
.text:00008AC3                 mov     eax, [edx+180h]
.text:00008AC9                 add     eax, 1
.text:00008ACC                 mov     ecx, [ebp+arg_0]
.text:00008ACF                 mov     [ecx+180h], eax
.text:00008AD5                 mov     edx, [ebp+arg_0]
.text:00008AD8                 cmp     dword ptr [edx+60h], 0
.text:00008ADC                 jz      short loc_8B0C
.text:00008ADE                 mov     eax, [ebp+arg_4]
.text:00008AE1                 mov     ecx, [eax]
.text:00008AE3                 add     ecx, [ebp+var_C]
.text:00008AE6                 mov     esi, esp
.text:00008AE8                 push    ecx
.text:00008AE9                 mov     edx, [ebp+arg_4]
.text:00008AEC                 mov     eax, [edx+10h]
.text:00008AEF                 push    eax
.text:00008AF0                 mov     ecx, [ebp+arg_0]
.text:00008AF3                 mov     edx, [ecx+68h]
.text:00008AF6                 push    edx
.text:00008AF7                 mov     eax, [ebp+arg_0]
.text:00008AFA                 mov     ecx, [eax+60h]
.text:00008AFD                 mov     edx, [ecx+10h]
.text:00008B00                 call    edx
.text:00008B02                 add     esp, 0Ch
.text:00008B05                 cmp     esi, esp
.text:00008B07                 call    __RTC_CheckEsp
.text:00008B0C
.text:00008B0C loc_8B0C:                               ; CODE XREF: _ssh2_pkt_construct+304j
.text:00008B0C                 mov     eax, [ebp+arg_4]
.text:00008B0F                 mov     ecx, [eax]
.text:00008B11                 add     ecx, [ebp+var_C]
.text:00008B14                 mov     edx, [ebp+arg_4]
.text:00008B17                 mov     [edx+20h], ecx
.text:00008B1A                 mov     eax, [ebp+arg_4]
.text:00008B1D                 mov     ecx, [ebp+arg_4]
.text:00008B20                 mov     edx, [ecx+10h]
.text:00008B23                 mov     [eax+14h], edx
.text:00008B26                 mov     eax, [ebp+arg_4]
.text:00008B29                 mov     eax, [eax]
.text:00008B2B                 add     eax, [ebp+var_C]
.text:00008B2E                 add     eax, [ebp+var_8]
.text:00008B31
.text:00008B31 loc_8B31:                               ; CODE XREF: _ssh2_pkt_construct+B5j
.text:00008B31                 push    edx
.text:00008B32                 mov     ecx, ebp
.text:00008B34                 push    eax
.text:00008B35                 lea     edx, $LN22
.text:00008B3B                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00008B40                 pop     eax
.text:00008B41                 pop     edx
.text:00008B42                 pop     edi
.text:00008B43                 pop     esi
.text:00008B44                 add     esp, 34h
.text:00008B47                 cmp     ebp, esp
.text:00008B49                 call    __RTC_CheckEsp
.text:00008B4E                 mov     esp, ebp
.text:00008B50                 pop     ebp
.text:00008B51                 retn
.text:00008B51 _ssh2_pkt_construct endp
.text:00008B51
.text:00008B51 ; ---------------------------------------------------------------------------
.text:00008B52                 align 4
.text:00008B54 $LN22           dd 2                    ; DATA XREF: _ssh2_pkt_construct+35Do
.text:00008B58                 dd offset $LN21
.text:00008B5C $LN21           dd 0FFFFFFE8h, 4        ; DATA XREF: .text:00008B58o
.text:00008B64                 dd offset $LN19         ; "newpayload"
.text:00008B68                 dd 0FFFFFFDCh, 4
.text:00008B70                 dd offset $LN20         ; "newlen"
.text:00008B74 $LN20           db 'newlen',0           ; DATA XREF: .text:00008B70o
.text:00008B7B $LN19           db 'newpayload',0       ; DATA XREF: .text:00008B64o
.text:00008B86                 align 4
.text:00008B88
.text:00008B88 ; =============== S U B R O U T I N E =======================================
.text:00008B88
.text:00008B88 ; Attributes: bp-based frame
.text:00008B88
.text:00008B88 _ssh2_log_outgoing_packet proc near     ; CODE XREF: _ssh2_pkt_construct+28p
.text:00008B88
.text:00008B88 var_58          = byte ptr -58h
.text:00008B88 var_54          = dword ptr -54h
.text:00008B88 Buf1            = dword ptr -48h
.text:00008B88 var_3C          = dword ptr -3Ch
.text:00008B88 var_38          = dword ptr -38h
.text:00008B88 var_34          = dword ptr -34h
.text:00008B88 var_8           = dword ptr -8
.text:00008B88 var_4           = dword ptr -4
.text:00008B88 arg_0           = dword ptr  8
.text:00008B88 arg_4           = dword ptr  0Ch
.text:00008B88
.text:00008B88                 push    ebp
.text:00008B89                 mov     ebp, esp
.text:00008B8B                 sub     esp, 58h
.text:00008B8E                 push    edi
.text:00008B8F                 lea     edi, [ebp+var_58]
.text:00008B92                 mov     ecx, 16h
.text:00008B97                 mov     eax, 0CCCCCCCCh
.text:00008B9C                 rep stosd
.text:00008B9E                 mov     eax, dword ptr ds:___security_cookie
.text:00008BA3                 xor     eax, ebp
.text:00008BA5                 mov     [ebp+var_4], eax
.text:00008BA8                 mov     [ebp+var_8], 0
.text:00008BAF                 mov     eax, [ebp+arg_4]
.text:00008BB2                 mov     ecx, [ebp+arg_4]
.text:00008BB5                 mov     edx, [eax+14h]
.text:00008BB8                 sub     edx, [ecx+10h]
.text:00008BBB                 mov     eax, [ebp+arg_4]
.text:00008BBE                 mov     ecx, [eax]
.text:00008BC0                 sub     ecx, edx
.text:00008BC2                 mov     edx, [ebp+arg_4]
.text:00008BC5                 mov     [edx], ecx
.text:00008BC7                 mov     eax, [ebp+arg_4]
.text:00008BCA                 mov     dword ptr [eax+18h], 0
.text:00008BD1                 mov     ecx, [ebp+arg_0]
.text:00008BD4                 cmp     dword ptr [ecx+220h], 0
.text:00008BDB                 jz      loc_8C65
.text:00008BE1                 mov     edx, [ebp+arg_4]
.text:00008BE4                 cmp     dword ptr [edx+8], 5Eh ; '^'
.text:00008BE8                 jz      short loc_8BF3
.text:00008BEA                 mov     eax, [ebp+arg_4]
.text:00008BED                 cmp     dword ptr [eax+8], 5Fh ; '_'
.text:00008BF1                 jnz     short loc_8C65
.text:00008BF3
.text:00008BF3 loc_8BF3:                               ; CODE XREF: _ssh2_log_outgoing_packet+60j
.text:00008BF3                 mov     ecx, [ebp+arg_4]
.text:00008BF6                 push    ecx
.text:00008BF7                 call    _ssh_pkt_getuint32
.text:00008BFC                 add     esp, 4
.text:00008BFF                 mov     edx, [ebp+arg_4]
.text:00008C02                 cmp     dword ptr [edx+8], 5Fh ; '_'
.text:00008C06                 jnz     short loc_8C14
.text:00008C08                 mov     eax, [ebp+arg_4]
.text:00008C0B                 push    eax
.text:00008C0C                 call    _ssh_pkt_getuint32
.text:00008C11                 add     esp, 4
.text:00008C14
.text:00008C14 loc_8C14:                               ; CODE XREF: _ssh2_log_outgoing_packet+7Ej
.text:00008C14                 mov     ecx, [ebp+arg_4]
.text:00008C17                 mov     edx, [ecx+18h]
.text:00008C1A                 add     edx, 4
.text:00008C1D                 mov     eax, [ebp+var_8]
.text:00008C20                 imul    eax, 0Ch
.text:00008C23                 mov     [ebp+eax+var_3C], edx
.text:00008C27                 mov     ecx, [ebp+var_8]
.text:00008C2A                 imul    ecx, 0Ch
.text:00008C2D                 mov     [ebp+ecx+var_34], 2
.text:00008C35                 lea     edx, [ebp+var_54]
.text:00008C38                 push    edx
.text:00008C39                 lea     eax, [ebp+Buf1]
.text:00008C3C                 push    eax
.text:00008C3D                 mov     ecx, [ebp+arg_4]
.text:00008C40                 push    ecx
.text:00008C41                 call    _ssh_pkt_getstring
.text:00008C46                 add     esp, 0Ch
.text:00008C49                 cmp     [ebp+Buf1], 0
.text:00008C4D                 jz      short loc_8C65
.text:00008C4F                 mov     edx, [ebp+var_8]
.text:00008C52                 imul    edx, 0Ch
.text:00008C55                 mov     eax, [ebp+var_54]
.text:00008C58                 mov     [ebp+edx+var_38], eax
.text:00008C5C                 mov     ecx, [ebp+var_8]
.text:00008C5F                 add     ecx, 1
.text:00008C62                 mov     [ebp+var_8], ecx
.text:00008C65
.text:00008C65 loc_8C65:                               ; CODE XREF: _ssh2_log_outgoing_packet+53j
.text:00008C65                                         ; _ssh2_log_outgoing_packet+69j ...
.text:00008C65                 mov     edx, [ebp+arg_4]
.text:00008C68                 cmp     dword ptr [edx+8], 32h ; '2'
.text:00008C6C                 jnz     loc_8D9C
.text:00008C72                 push    76h ; 'v'
.text:00008C74                 mov     eax, [ebp+arg_0]
.text:00008C77                 mov     ecx, [eax+21Ch]
.text:00008C7D                 push    ecx
.text:00008C7E                 call    _conf_get_int
.text:00008C83                 add     esp, 8
.text:00008C86                 test    eax, eax
.text:00008C88                 jz      loc_8D9C
.text:00008C8E                 mov     edx, [ebp+arg_4]
.text:00008C91                 mov     dword ptr [edx+18h], 0
.text:00008C98                 lea     eax, [ebp+var_54]
.text:00008C9B                 push    eax
.text:00008C9C                 lea     ecx, [ebp+Buf1]
.text:00008C9F                 push    ecx
.text:00008CA0                 mov     edx, [ebp+arg_4]
.text:00008CA3                 push    edx
.text:00008CA4                 call    _ssh_pkt_getstring
.text:00008CA9                 add     esp, 0Ch
.text:00008CAC                 lea     eax, [ebp+var_54]
.text:00008CAF                 push    eax
.text:00008CB0                 lea     ecx, [ebp+Buf1]
.text:00008CB3                 push    ecx
.text:00008CB4                 mov     edx, [ebp+arg_4]
.text:00008CB7                 push    edx
.text:00008CB8                 call    _ssh_pkt_getstring
.text:00008CBD                 add     esp, 0Ch
.text:00008CC0                 lea     eax, [ebp+var_54]
.text:00008CC3                 push    eax
.text:00008CC4                 lea     ecx, [ebp+Buf1]
.text:00008CC7                 push    ecx
.text:00008CC8                 mov     edx, [ebp+arg_4]
.text:00008CCB                 push    edx
.text:00008CCC                 call    _ssh_pkt_getstring
.text:00008CD1                 add     esp, 0Ch
.text:00008CD4                 cmp     [ebp+var_54], 8
.text:00008CD8                 jnz     loc_8D97
.text:00008CDE                 push    8               ; Size
.text:00008CE0                 push    offset $SG88466 ; "password"
.text:00008CE5                 mov     eax, [ebp+Buf1]
.text:00008CE8                 push    eax             ; Buf1
.text:00008CE9                 call    _memcmp
.text:00008CEE                 add     esp, 0Ch
.text:00008CF1                 test    eax, eax
.text:00008CF3                 jnz     loc_8D97
.text:00008CF9                 mov     ecx, [ebp+arg_4]
.text:00008CFC                 push    ecx
.text:00008CFD                 call    _ssh2_pkt_getbool
.text:00008D02                 add     esp, 4
.text:00008D05                 mov     edx, [ebp+var_8]
.text:00008D08                 imul    edx, 0Ch
.text:00008D0B                 mov     eax, [ebp+arg_4]
.text:00008D0E                 mov     ecx, [eax+18h]
.text:00008D11                 mov     [ebp+edx+var_3C], ecx
.text:00008D15                 mov     edx, [ebp+var_8]
.text:00008D18                 imul    edx, 0Ch
.text:00008D1B                 mov     [ebp+edx+var_34], 1
.text:00008D23                 lea     eax, [ebp+var_54]
.text:00008D26                 push    eax
.text:00008D27                 lea     ecx, [ebp+Buf1]
.text:00008D2A                 push    ecx
.text:00008D2B                 mov     edx, [ebp+arg_4]
.text:00008D2E                 push    edx
.text:00008D2F                 call    _ssh_pkt_getstring
.text:00008D34                 add     esp, 0Ch
.text:00008D37                 cmp     [ebp+Buf1], 0
.text:00008D3B                 jz      short loc_8D97
.text:00008D3D                 mov     eax, [ebp+var_8]
.text:00008D40                 imul    eax, 0Ch
.text:00008D43                 mov     ecx, [ebp+arg_4]
.text:00008D46                 mov     edx, [ecx+18h]
.text:00008D49                 sub     edx, [ebp+eax+var_3C]
.text:00008D4D                 mov     eax, [ebp+var_8]
.text:00008D50                 imul    eax, 0Ch
.text:00008D53                 mov     [ebp+eax+var_38], edx
.text:00008D57                 mov     ecx, [ebp+var_8]
.text:00008D5A                 add     ecx, 1
.text:00008D5D                 mov     [ebp+var_8], ecx
.text:00008D60                 lea     edx, [ebp+var_54]
.text:00008D63                 push    edx
.text:00008D64                 lea     eax, [ebp+Buf1]
.text:00008D67                 push    eax
.text:00008D68                 mov     ecx, [ebp+arg_4]
.text:00008D6B                 push    ecx
.text:00008D6C                 call    _ssh_pkt_getstring
.text:00008D71                 add     esp, 0Ch
.text:00008D74                 cmp     [ebp+Buf1], 0
.text:00008D78                 jz      short loc_8D97
.text:00008D7A                 mov     edx, [ebp+var_8]
.text:00008D7D                 imul    edx, 0Ch
.text:00008D80                 mov     eax, [ebp+arg_4]
.text:00008D83                 mov     ecx, [eax+18h]
.text:00008D86                 sub     ecx, [ebp+edx+var_3C]
.text:00008D8A                 mov     edx, [ebp+var_8]
.text:00008D8D                 sub     edx, 1
.text:00008D90                 imul    edx, 0Ch
.text:00008D93                 mov     [ebp+edx+var_38], ecx
.text:00008D97
.text:00008D97 loc_8D97:                               ; CODE XREF: _ssh2_log_outgoing_packet+150j
.text:00008D97                                         ; _ssh2_log_outgoing_packet+16Bj ...
.text:00008D97                 jmp     loc_8F57
.text:00008D9C ; ---------------------------------------------------------------------------
.text:00008D9C
.text:00008D9C loc_8D9C:                               ; CODE XREF: _ssh2_log_outgoing_packet+E4j
.text:00008D9C                                         ; _ssh2_log_outgoing_packet+100j
.text:00008D9C                 mov     eax, [ebp+arg_0]
.text:00008D9F                 cmp     dword ptr [eax+15Ch], 4
.text:00008DA6                 jnz     loc_8E58
.text:00008DAC                 mov     ecx, [ebp+arg_4]
.text:00008DAF                 cmp     dword ptr [ecx+8], 3Dh ; '='
.text:00008DB3                 jnz     loc_8E58
.text:00008DB9                 push    76h ; 'v'
.text:00008DBB                 mov     edx, [ebp+arg_0]
.text:00008DBE                 mov     eax, [edx+21Ch]
.text:00008DC4                 push    eax
.text:00008DC5                 call    _conf_get_int
.text:00008DCA                 add     esp, 8
.text:00008DCD                 test    eax, eax
.text:00008DCF                 jz      loc_8E58
.text:00008DD5                 mov     ecx, [ebp+arg_4]
.text:00008DD8                 mov     dword ptr [ecx+18h], 0
.text:00008DDF                 mov     edx, [ebp+arg_4]
.text:00008DE2                 push    edx
.text:00008DE3                 call    _ssh_pkt_getuint32
.text:00008DE8                 add     esp, 4
.text:00008DEB                 mov     eax, [ebp+var_8]
.text:00008DEE                 imul    eax, 0Ch
.text:00008DF1                 mov     ecx, [ebp+arg_4]
.text:00008DF4                 mov     edx, [ecx+18h]
.text:00008DF7                 mov     [ebp+eax+var_3C], edx
.text:00008DFB                 mov     eax, [ebp+var_8]
.text:00008DFE                 imul    eax, 0Ch
.text:00008E01                 mov     [ebp+eax+var_34], 1
.text:00008E09
.text:00008E09 loc_8E09:                               ; CODE XREF: _ssh2_log_outgoing_packet:loc_8E2Ej
.text:00008E09                 mov     ecx, 1
.text:00008E0E                 test    ecx, ecx
.text:00008E10                 jz      short loc_8E30
.text:00008E12                 lea     edx, [ebp+var_54]
.text:00008E15                 push    edx
.text:00008E16                 lea     eax, [ebp+Buf1]
.text:00008E19                 push    eax
.text:00008E1A                 mov     ecx, [ebp+arg_4]
.text:00008E1D                 push    ecx
.text:00008E1E                 call    _ssh_pkt_getstring
.text:00008E23                 add     esp, 0Ch
.text:00008E26                 cmp     [ebp+Buf1], 0
.text:00008E2A                 jnz     short loc_8E2E
.text:00008E2C                 jmp     short loc_8E30
.text:00008E2E ; ---------------------------------------------------------------------------
.text:00008E2E
.text:00008E2E loc_8E2E:                               ; CODE XREF: _ssh2_log_outgoing_packet+2A2j
.text:00008E2E                 jmp     short loc_8E09
.text:00008E30 ; ---------------------------------------------------------------------------
.text:00008E30
.text:00008E30 loc_8E30:                               ; CODE XREF: _ssh2_log_outgoing_packet+288j
.text:00008E30                                         ; _ssh2_log_outgoing_packet+2A4j
.text:00008E30                 mov     edx, [ebp+var_8]
.text:00008E33                 imul    edx, 0Ch
.text:00008E36                 mov     eax, [ebp+arg_4]
.text:00008E39                 mov     ecx, [eax+18h]
.text:00008E3C                 sub     ecx, [ebp+edx+var_3C]
.text:00008E40                 mov     edx, [ebp+var_8]
.text:00008E43                 imul    edx, 0Ch
.text:00008E46                 mov     [ebp+edx+var_38], ecx
.text:00008E4A                 mov     eax, [ebp+var_8]
.text:00008E4D                 add     eax, 1
.text:00008E50                 mov     [ebp+var_8], eax
.text:00008E53                 jmp     loc_8F57
.text:00008E58 ; ---------------------------------------------------------------------------
.text:00008E58
.text:00008E58 loc_8E58:                               ; CODE XREF: _ssh2_log_outgoing_packet+21Ej
.text:00008E58                                         ; _ssh2_log_outgoing_packet+22Bj ...
.text:00008E58                 mov     ecx, [ebp+arg_4]
.text:00008E5B                 cmp     dword ptr [ecx+8], 62h ; 'b'
.text:00008E5F                 jnz     loc_8F57
.text:00008E65                 push    76h ; 'v'
.text:00008E67                 mov     edx, [ebp+arg_0]
.text:00008E6A                 mov     eax, [edx+21Ch]
.text:00008E70                 push    eax
.text:00008E71                 call    _conf_get_int
.text:00008E76                 add     esp, 8
.text:00008E79                 test    eax, eax
.text:00008E7B                 jz      loc_8F57
.text:00008E81                 mov     ecx, [ebp+arg_4]
.text:00008E84                 mov     dword ptr [ecx+18h], 0
.text:00008E8B                 mov     edx, [ebp+arg_4]
.text:00008E8E                 push    edx
.text:00008E8F                 call    _ssh_pkt_getuint32
.text:00008E94                 add     esp, 4
.text:00008E97                 lea     eax, [ebp+var_54]
.text:00008E9A                 push    eax
.text:00008E9B                 lea     ecx, [ebp+Buf1]
.text:00008E9E                 push    ecx
.text:00008E9F                 mov     edx, [ebp+arg_4]
.text:00008EA2                 push    edx
.text:00008EA3                 call    _ssh_pkt_getstring
.text:00008EA8                 add     esp, 0Ch
.text:00008EAB                 cmp     [ebp+var_54], 7
.text:00008EAF                 jnz     loc_8F57
.text:00008EB5                 push    0               ; Size
.text:00008EB7                 push    offset $SG88478 ; "x11-req"
.text:00008EBC                 mov     eax, [ebp+Buf1]
.text:00008EBF                 push    eax             ; Buf1
.text:00008EC0                 call    _memcmp
.text:00008EC5                 add     esp, 0Ch
.text:00008EC8                 test    eax, eax
.text:00008ECA                 jnz     loc_8F57
.text:00008ED0                 mov     ecx, [ebp+arg_4]
.text:00008ED3                 push    ecx
.text:00008ED4                 call    _ssh2_pkt_getbool
.text:00008ED9                 add     esp, 4
.text:00008EDC                 mov     edx, [ebp+arg_4]
.text:00008EDF                 push    edx
.text:00008EE0                 call    _ssh2_pkt_getbool
.text:00008EE5                 add     esp, 4
.text:00008EE8                 lea     eax, [ebp+var_54]
.text:00008EEB                 push    eax
.text:00008EEC                 lea     ecx, [ebp+Buf1]
.text:00008EEF                 push    ecx
.text:00008EF0                 mov     edx, [ebp+arg_4]
.text:00008EF3                 push    edx
.text:00008EF4                 call    _ssh_pkt_getstring
.text:00008EF9                 add     esp, 0Ch
.text:00008EFC                 mov     eax, [ebp+var_8]
.text:00008EFF                 imul    eax, 0Ch
.text:00008F02                 mov     ecx, [ebp+arg_4]
.text:00008F05                 mov     edx, [ecx+18h]
.text:00008F08                 mov     [ebp+eax+var_3C], edx
.text:00008F0C                 mov     eax, [ebp+var_8]
.text:00008F0F                 imul    eax, 0Ch
.text:00008F12                 mov     [ebp+eax+var_34], 1
.text:00008F1A                 lea     ecx, [ebp+var_54]
.text:00008F1D                 push    ecx
.text:00008F1E                 lea     edx, [ebp+Buf1]
.text:00008F21                 push    edx
.text:00008F22                 mov     eax, [ebp+arg_4]
.text:00008F25                 push    eax
.text:00008F26                 call    _ssh_pkt_getstring
.text:00008F2B                 add     esp, 0Ch
.text:00008F2E                 cmp     [ebp+Buf1], 0
.text:00008F32                 jz      short loc_8F57
.text:00008F34                 mov     ecx, [ebp+var_8]
.text:00008F37                 imul    ecx, 0Ch
.text:00008F3A                 mov     edx, [ebp+arg_4]
.text:00008F3D                 mov     eax, [edx+18h]
.text:00008F40                 sub     eax, [ebp+ecx+var_3C]
.text:00008F44                 mov     ecx, [ebp+var_8]
.text:00008F47                 imul    ecx, 0Ch
.text:00008F4A                 mov     [ebp+ecx+var_38], eax
.text:00008F4E                 mov     edx, [ebp+var_8]
.text:00008F51                 add     edx, 1
.text:00008F54                 mov     [ebp+var_8], edx
.text:00008F57
.text:00008F57 loc_8F57:                               ; CODE XREF: _ssh2_log_outgoing_packet:loc_8D97j
.text:00008F57                                         ; _ssh2_log_outgoing_packet+2CBj ...
.text:00008F57                 mov     eax, [ebp+arg_4]
.text:00008F5A                 mov     ecx, [eax+28h]
.text:00008F5D                 push    ecx
.text:00008F5E                 mov     edx, [ebp+arg_4]
.text:00008F61                 mov     eax, [edx+24h]
.text:00008F64                 push    eax
.text:00008F65                 mov     ecx, [ebp+arg_0]
.text:00008F68                 add     ecx, 180h
.text:00008F6E                 push    ecx
.text:00008F6F                 lea     edx, [ebp+var_3C]
.text:00008F72                 push    edx
.text:00008F73                 mov     eax, [ebp+var_8]
.text:00008F76                 push    eax
.text:00008F77                 mov     ecx, [ebp+arg_4]
.text:00008F7A                 mov     edx, [ecx]
.text:00008F7C                 push    edx
.text:00008F7D                 mov     eax, [ebp+arg_4]
.text:00008F80                 mov     ecx, [eax+14h]
.text:00008F83                 push    ecx
.text:00008F84                 mov     edx, [ebp+arg_4]
.text:00008F87                 mov     eax, [edx+10h]
.text:00008F8A                 movzx   ecx, byte ptr [eax+5]
.text:00008F8E                 push    ecx
.text:00008F8F                 mov     edx, [ebp+arg_0]
.text:00008F92                 mov     eax, [edx+15Ch]
.text:00008F98                 push    eax
.text:00008F99                 mov     ecx, [ebp+arg_0]
.text:00008F9C                 mov     edx, [ecx+158h]
.text:00008FA2                 push    edx
.text:00008FA3                 call    _ssh2_pkt_type
.text:00008FA8                 add     esp, 0Ch
.text:00008FAB                 push    eax
.text:00008FAC                 mov     eax, [ebp+arg_4]
.text:00008FAF                 mov     ecx, [eax+10h]
.text:00008FB2                 movzx   edx, byte ptr [ecx+5]
.text:00008FB6                 push    edx
.text:00008FB7                 push    1
.text:00008FB9                 mov     eax, [ebp+arg_0]
.text:00008FBC                 mov     ecx, [eax+18h]
.text:00008FBF                 push    ecx
.text:00008FC0                 call    _log_packet
.text:00008FC5                 add     esp, 2Ch
.text:00008FC8                 mov     edx, [ebp+arg_4]
.text:00008FCB                 mov     eax, [ebp+arg_4]
.text:00008FCE                 mov     ecx, [edx+14h]
.text:00008FD1                 sub     ecx, [eax+10h]
.text:00008FD4                 mov     edx, [ebp+arg_4]
.text:00008FD7                 add     ecx, [edx]
.text:00008FD9                 mov     eax, [ebp+arg_4]
.text:00008FDC                 mov     [eax], ecx
.text:00008FDE                 push    edx
.text:00008FDF                 mov     ecx, ebp
.text:00008FE1                 push    eax
.text:00008FE2                 lea     edx, $LN24
.text:00008FE8                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00008FED                 pop     eax
.text:00008FEE                 pop     edx
.text:00008FEF                 pop     edi
.text:00008FF0                 mov     ecx, [ebp+var_4]
.text:00008FF3                 xor     ecx, ebp
.text:00008FF5                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00008FFA                 add     esp, 58h
.text:00008FFD                 cmp     ebp, esp
.text:00008FFF                 call    __RTC_CheckEsp
.text:00009004                 mov     esp, ebp
.text:00009006                 pop     ebp
.text:00009007                 retn
.text:00009007 _ssh2_log_outgoing_packet endp
.text:00009007
.text:00009007 ; ---------------------------------------------------------------------------
.text:00009008 $LN24           dd 3                    ; DATA XREF: _ssh2_log_outgoing_packet+45Ao
.text:0000900C                 dd offset $LN23
.text:00009010 $LN23           dd 0FFFFFFC4h, 30h      ; DATA XREF: .text:0000900Co
.text:00009018                 dd offset $LN20_0       ; "blanks"
.text:0000901C                 dd 0FFFFFFB8h, 4
.text:00009024                 dd offset $LN21_0       ; "str"
.text:00009028                 dd 0FFFFFFACh, 4
.text:00009030                 dd offset $LN22_0       ; "slen"
.text:00009034 $LN22_0         db 'slen',0             ; DATA XREF: .text:00009030o
.text:00009039 $LN21_0         db 'str',0              ; DATA XREF: .text:00009024o
.text:0000903D $LN20_0         db 'blanks',0           ; DATA XREF: .text:00009018o
.text:00009044                 align 8
.text:00009048
.text:00009048 ; =============== S U B R O U T I N E =======================================
.text:00009048
.text:00009048 ; Attributes: bp-based frame
.text:00009048
.text:00009048 _ssh2_pkt_type  proc near               ; CODE XREF: _ssh2_log_outgoing_packet+41Bp
.text:00009048                                         ; _ssh2_channel_msg+B9p ...
.text:00009048
.text:00009048 arg_0           = dword ptr  8
.text:00009048 arg_4           = dword ptr  0Ch
.text:00009048 arg_8           = dword ptr  10h
.text:00009048
.text:00009048                 push    ebp
.text:00009049                 mov     ebp, esp
.text:0000904B                 cmp     [ebp+arg_8], 3Ch ; '<'
.text:0000904F                 jnz     short loc_9061
.text:00009051                 cmp     [ebp+arg_4], 3
.text:00009055                 jnz     short loc_9061
.text:00009057                 mov     eax, offset $SG87494 ; "SSH2_MSG_USERAUTH_GSSAPI_RESPONSE"
.text:0000905C                 jmp     loc_9374
.text:00009061 ; ---------------------------------------------------------------------------
.text:00009061
.text:00009061 loc_9061:                               ; CODE XREF: _ssh2_pkt_type+7j
.text:00009061                                         ; _ssh2_pkt_type+Dj
.text:00009061                 cmp     [ebp+arg_8], 3Dh ; '='
.text:00009065                 jnz     short loc_9077
.text:00009067                 cmp     [ebp+arg_4], 3
.text:0000906B                 jnz     short loc_9077
.text:0000906D                 mov     eax, offset $SG87496 ; "SSH2_MSG_USERAUTH_GSSAPI_TOKEN"
.text:00009072                 jmp     loc_9374
.text:00009077 ; ---------------------------------------------------------------------------
.text:00009077
.text:00009077 loc_9077:                               ; CODE XREF: _ssh2_pkt_type+1Dj
.text:00009077                                         ; _ssh2_pkt_type+23j
.text:00009077                 cmp     [ebp+arg_8], 3Fh ; '?'
.text:0000907B                 jnz     short loc_908D
.text:0000907D                 cmp     [ebp+arg_4], 3
.text:00009081                 jnz     short loc_908D
.text:00009083                 mov     eax, offset $SG87498 ; "SSH2_MSG_USERAUTH_GSSAPI_EXCHANGE_COMPL"...
.text:00009088                 jmp     loc_9374
.text:0000908D ; ---------------------------------------------------------------------------
.text:0000908D
.text:0000908D loc_908D:                               ; CODE XREF: _ssh2_pkt_type+33j
.text:0000908D                                         ; _ssh2_pkt_type+39j
.text:0000908D                 cmp     [ebp+arg_8], 40h ; '@'
.text:00009091                 jnz     short loc_90A3
.text:00009093                 cmp     [ebp+arg_4], 3
.text:00009097                 jnz     short loc_90A3
.text:00009099                 mov     eax, offset $SG87500 ; "SSH2_MSG_USERAUTH_GSSAPI_ERROR"
.text:0000909E                 jmp     loc_9374
.text:000090A3 ; ---------------------------------------------------------------------------
.text:000090A3
.text:000090A3 loc_90A3:                               ; CODE XREF: _ssh2_pkt_type+49j
.text:000090A3                                         ; _ssh2_pkt_type+4Fj
.text:000090A3                 cmp     [ebp+arg_8], 41h ; 'A'
.text:000090A7                 jnz     short loc_90B9
.text:000090A9                 cmp     [ebp+arg_4], 3
.text:000090AD                 jnz     short loc_90B9
.text:000090AF                 mov     eax, offset $SG87502 ; "SSH2_MSG_USERAUTH_GSSAPI_ERRTOK"
.text:000090B4                 jmp     loc_9374
.text:000090B9 ; ---------------------------------------------------------------------------
.text:000090B9
.text:000090B9 loc_90B9:                               ; CODE XREF: _ssh2_pkt_type+5Fj
.text:000090B9                                         ; _ssh2_pkt_type+65j
.text:000090B9                 cmp     [ebp+arg_8], 42h ; 'B'
.text:000090BD                 jnz     short loc_90CF
.text:000090BF                 cmp     [ebp+arg_4], 3
.text:000090C3                 jnz     short loc_90CF
.text:000090C5                 mov     eax, offset $SG87504 ; "SSH2_MSG_USERAUTH_GSSAPI_MIC"
.text:000090CA                 jmp     loc_9374
.text:000090CF ; ---------------------------------------------------------------------------
.text:000090CF
.text:000090CF loc_90CF:                               ; CODE XREF: _ssh2_pkt_type+75j
.text:000090CF                                         ; _ssh2_pkt_type+7Bj
.text:000090CF                 cmp     [ebp+arg_8], 1
.text:000090D3                 jnz     short loc_90DF
.text:000090D5                 mov     eax, offset $SG87506 ; "SSH2_MSG_DISCONNECT"
.text:000090DA                 jmp     loc_9374
.text:000090DF ; ---------------------------------------------------------------------------
.text:000090DF
.text:000090DF loc_90DF:                               ; CODE XREF: _ssh2_pkt_type+8Bj
.text:000090DF                 cmp     [ebp+arg_8], 2
.text:000090E3                 jnz     short loc_90EF
.text:000090E5                 mov     eax, offset $SG87508 ; "SSH2_MSG_IGNORE"
.text:000090EA                 jmp     loc_9374
.text:000090EF ; ---------------------------------------------------------------------------
.text:000090EF
.text:000090EF loc_90EF:                               ; CODE XREF: _ssh2_pkt_type+9Bj
.text:000090EF                 cmp     [ebp+arg_8], 3
.text:000090F3                 jnz     short loc_90FF
.text:000090F5                 mov     eax, offset $SG87510 ; "SSH2_MSG_UNIMPLEMENTED"
.text:000090FA                 jmp     loc_9374
.text:000090FF ; ---------------------------------------------------------------------------
.text:000090FF
.text:000090FF loc_90FF:                               ; CODE XREF: _ssh2_pkt_type+ABj
.text:000090FF                 cmp     [ebp+arg_8], 4
.text:00009103                 jnz     short loc_910F
.text:00009105                 mov     eax, offset $SG87512 ; "SSH2_MSG_DEBUG"
.text:0000910A                 jmp     loc_9374
.text:0000910F ; ---------------------------------------------------------------------------
.text:0000910F
.text:0000910F loc_910F:                               ; CODE XREF: _ssh2_pkt_type+BBj
.text:0000910F                 cmp     [ebp+arg_8], 5
.text:00009113                 jnz     short loc_911F
.text:00009115                 mov     eax, offset $SG87514 ; "SSH2_MSG_SERVICE_REQUEST"
.text:0000911A                 jmp     loc_9374
.text:0000911F ; ---------------------------------------------------------------------------
.text:0000911F
.text:0000911F loc_911F:                               ; CODE XREF: _ssh2_pkt_type+CBj
.text:0000911F                 cmp     [ebp+arg_8], 6
.text:00009123                 jnz     short loc_912F
.text:00009125                 mov     eax, offset $SG87516 ; "SSH2_MSG_SERVICE_ACCEPT"
.text:0000912A                 jmp     loc_9374
.text:0000912F ; ---------------------------------------------------------------------------
.text:0000912F
.text:0000912F loc_912F:                               ; CODE XREF: _ssh2_pkt_type+DBj
.text:0000912F                 cmp     [ebp+arg_8], 14h
.text:00009133                 jnz     short loc_913F
.text:00009135                 mov     eax, offset $SG87518 ; "SSH2_MSG_KEXINIT"
.text:0000913A                 jmp     loc_9374
.text:0000913F ; ---------------------------------------------------------------------------
.text:0000913F
.text:0000913F loc_913F:                               ; CODE XREF: _ssh2_pkt_type+EBj
.text:0000913F                 cmp     [ebp+arg_8], 15h
.text:00009143                 jnz     short loc_914F
.text:00009145                 mov     eax, offset $SG87520 ; "SSH2_MSG_NEWKEYS"
.text:0000914A                 jmp     loc_9374
.text:0000914F ; ---------------------------------------------------------------------------
.text:0000914F
.text:0000914F loc_914F:                               ; CODE XREF: _ssh2_pkt_type+FBj
.text:0000914F                 cmp     [ebp+arg_8], 1Eh
.text:00009153                 jnz     short loc_9165
.text:00009155                 cmp     [ebp+arg_0], 1
.text:00009159                 jnz     short loc_9165
.text:0000915B                 mov     eax, offset $SG87522 ; "SSH2_MSG_KEXDH_INIT"
.text:00009160                 jmp     loc_9374
.text:00009165 ; ---------------------------------------------------------------------------
.text:00009165
.text:00009165 loc_9165:                               ; CODE XREF: _ssh2_pkt_type+10Bj
.text:00009165                                         ; _ssh2_pkt_type+111j
.text:00009165                 cmp     [ebp+arg_8], 1Fh
.text:00009169                 jnz     short loc_917B
.text:0000916B                 cmp     [ebp+arg_0], 1
.text:0000916F                 jnz     short loc_917B
.text:00009171                 mov     eax, offset $SG87524 ; "SSH2_MSG_KEXDH_REPLY"
.text:00009176                 jmp     loc_9374
.text:0000917B ; ---------------------------------------------------------------------------
.text:0000917B
.text:0000917B loc_917B:                               ; CODE XREF: _ssh2_pkt_type+121j
.text:0000917B                                         ; _ssh2_pkt_type+127j
.text:0000917B                 cmp     [ebp+arg_8], 1Eh
.text:0000917F                 jnz     short loc_9191
.text:00009181                 cmp     [ebp+arg_0], 2
.text:00009185                 jnz     short loc_9191
.text:00009187                 mov     eax, offset $SG87526 ; "SSH2_MSG_KEX_DH_GEX_REQUEST"
.text:0000918C                 jmp     loc_9374
.text:00009191 ; ---------------------------------------------------------------------------
.text:00009191
.text:00009191 loc_9191:                               ; CODE XREF: _ssh2_pkt_type+137j
.text:00009191                                         ; _ssh2_pkt_type+13Dj
.text:00009191                 cmp     [ebp+arg_8], 1Fh
.text:00009195                 jnz     short loc_91A7
.text:00009197                 cmp     [ebp+arg_0], 2
.text:0000919B                 jnz     short loc_91A7
.text:0000919D                 mov     eax, offset $SG87528 ; "SSH2_MSG_KEX_DH_GEX_GROUP"
.text:000091A2                 jmp     loc_9374
.text:000091A7 ; ---------------------------------------------------------------------------
.text:000091A7
.text:000091A7 loc_91A7:                               ; CODE XREF: _ssh2_pkt_type+14Dj
.text:000091A7                                         ; _ssh2_pkt_type+153j
.text:000091A7                 cmp     [ebp+arg_8], 20h ; ' '
.text:000091AB                 jnz     short loc_91BD
.text:000091AD                 cmp     [ebp+arg_0], 2
.text:000091B1                 jnz     short loc_91BD
.text:000091B3                 mov     eax, offset $SG87530 ; "SSH2_MSG_KEX_DH_GEX_INIT"
.text:000091B8                 jmp     loc_9374
.text:000091BD ; ---------------------------------------------------------------------------
.text:000091BD
.text:000091BD loc_91BD:                               ; CODE XREF: _ssh2_pkt_type+163j
.text:000091BD                                         ; _ssh2_pkt_type+169j
.text:000091BD                 cmp     [ebp+arg_8], 21h ; '!'
.text:000091C1                 jnz     short loc_91D3
.text:000091C3                 cmp     [ebp+arg_0], 2
.text:000091C7                 jnz     short loc_91D3
.text:000091C9                 mov     eax, offset $SG87532 ; "SSH2_MSG_KEX_DH_GEX_REPLY"
.text:000091CE                 jmp     loc_9374
.text:000091D3 ; ---------------------------------------------------------------------------
.text:000091D3
.text:000091D3 loc_91D3:                               ; CODE XREF: _ssh2_pkt_type+179j
.text:000091D3                                         ; _ssh2_pkt_type+17Fj
.text:000091D3                 cmp     [ebp+arg_8], 1Eh
.text:000091D7                 jnz     short loc_91E9
.text:000091D9                 cmp     [ebp+arg_0], 3
.text:000091DD                 jnz     short loc_91E9
.text:000091DF                 mov     eax, offset $SG87534 ; "SSH2_MSG_KEXRSA_PUBKEY"
.text:000091E4                 jmp     loc_9374
.text:000091E9 ; ---------------------------------------------------------------------------
.text:000091E9
.text:000091E9 loc_91E9:                               ; CODE XREF: _ssh2_pkt_type+18Fj
.text:000091E9                                         ; _ssh2_pkt_type+195j
.text:000091E9                 cmp     [ebp+arg_8], 1Fh
.text:000091ED                 jnz     short loc_91FF
.text:000091EF                 cmp     [ebp+arg_0], 3
.text:000091F3                 jnz     short loc_91FF
.text:000091F5                 mov     eax, offset $SG87536 ; "SSH2_MSG_KEXRSA_SECRET"
.text:000091FA                 jmp     loc_9374
.text:000091FF ; ---------------------------------------------------------------------------
.text:000091FF
.text:000091FF loc_91FF:                               ; CODE XREF: _ssh2_pkt_type+1A5j
.text:000091FF                                         ; _ssh2_pkt_type+1ABj
.text:000091FF                 cmp     [ebp+arg_8], 20h ; ' '
.text:00009203                 jnz     short loc_9215
.text:00009205                 cmp     [ebp+arg_0], 3
.text:00009209                 jnz     short loc_9215
.text:0000920B                 mov     eax, offset $SG87538 ; "SSH2_MSG_KEXRSA_DONE"
.text:00009210                 jmp     loc_9374
.text:00009215 ; ---------------------------------------------------------------------------
.text:00009215
.text:00009215 loc_9215:                               ; CODE XREF: _ssh2_pkt_type+1BBj
.text:00009215                                         ; _ssh2_pkt_type+1C1j
.text:00009215                 cmp     [ebp+arg_8], 32h ; '2'
.text:00009219                 jnz     short loc_9225
.text:0000921B                 mov     eax, offset $SG87540 ; "SSH2_MSG_USERAUTH_REQUEST"
.text:00009220                 jmp     loc_9374
.text:00009225 ; ---------------------------------------------------------------------------
.text:00009225
.text:00009225 loc_9225:                               ; CODE XREF: _ssh2_pkt_type+1D1j
.text:00009225                 cmp     [ebp+arg_8], 33h ; '3'
.text:00009229                 jnz     short loc_9235
.text:0000922B                 mov     eax, offset $SG87542 ; "SSH2_MSG_USERAUTH_FAILURE"
.text:00009230                 jmp     loc_9374
.text:00009235 ; ---------------------------------------------------------------------------
.text:00009235
.text:00009235 loc_9235:                               ; CODE XREF: _ssh2_pkt_type+1E1j
.text:00009235                 cmp     [ebp+arg_8], 34h ; '4'
.text:00009239                 jnz     short loc_9245
.text:0000923B                 mov     eax, offset $SG87544 ; "SSH2_MSG_USERAUTH_SUCCESS"
.text:00009240                 jmp     loc_9374
.text:00009245 ; ---------------------------------------------------------------------------
.text:00009245
.text:00009245 loc_9245:                               ; CODE XREF: _ssh2_pkt_type+1F1j
.text:00009245                 cmp     [ebp+arg_8], 35h ; '5'
.text:00009249                 jnz     short loc_9255
.text:0000924B                 mov     eax, offset $SG87546 ; "SSH2_MSG_USERAUTH_BANNER"
.text:00009250                 jmp     loc_9374
.text:00009255 ; ---------------------------------------------------------------------------
.text:00009255
.text:00009255 loc_9255:                               ; CODE XREF: _ssh2_pkt_type+201j
.text:00009255                 cmp     [ebp+arg_8], 3Ch ; '<'
.text:00009259                 jnz     short loc_926B
.text:0000925B                 cmp     [ebp+arg_4], 1
.text:0000925F                 jnz     short loc_926B
.text:00009261                 mov     eax, offset $SG87548 ; "SSH2_MSG_USERAUTH_PK_OK"
.text:00009266                 jmp     loc_9374
.text:0000926B ; ---------------------------------------------------------------------------
.text:0000926B
.text:0000926B loc_926B:                               ; CODE XREF: _ssh2_pkt_type+211j
.text:0000926B                                         ; _ssh2_pkt_type+217j
.text:0000926B                 cmp     [ebp+arg_8], 3Ch ; '<'
.text:0000926F                 jnz     short loc_9281
.text:00009271                 cmp     [ebp+arg_4], 2
.text:00009275                 jnz     short loc_9281
.text:00009277                 mov     eax, offset $SG87550 ; "SSH2_MSG_USERAUTH_PASSWD_CHANGEREQ"
.text:0000927C                 jmp     loc_9374
.text:00009281 ; ---------------------------------------------------------------------------
.text:00009281
.text:00009281 loc_9281:                               ; CODE XREF: _ssh2_pkt_type+227j
.text:00009281                                         ; _ssh2_pkt_type+22Dj
.text:00009281                 cmp     [ebp+arg_8], 3Ch ; '<'
.text:00009285                 jnz     short loc_9297
.text:00009287                 cmp     [ebp+arg_4], 4
.text:0000928B                 jnz     short loc_9297
.text:0000928D                 mov     eax, offset $SG87552 ; "SSH2_MSG_USERAUTH_INFO_REQUEST"
.text:00009292                 jmp     loc_9374
.text:00009297 ; ---------------------------------------------------------------------------
.text:00009297
.text:00009297 loc_9297:                               ; CODE XREF: _ssh2_pkt_type+23Dj
.text:00009297                                         ; _ssh2_pkt_type+243j
.text:00009297                 cmp     [ebp+arg_8], 3Dh ; '='
.text:0000929B                 jnz     short loc_92AD
.text:0000929D                 cmp     [ebp+arg_4], 4
.text:000092A1                 jnz     short loc_92AD
.text:000092A3                 mov     eax, offset $SG87554 ; "SSH2_MSG_USERAUTH_INFO_RESPONSE"
.text:000092A8                 jmp     loc_9374
.text:000092AD ; ---------------------------------------------------------------------------
.text:000092AD
.text:000092AD loc_92AD:                               ; CODE XREF: _ssh2_pkt_type+253j
.text:000092AD                                         ; _ssh2_pkt_type+259j
.text:000092AD                 cmp     [ebp+arg_8], 50h ; 'P'
.text:000092B1                 jnz     short loc_92BD
.text:000092B3                 mov     eax, offset $SG87556 ; "SSH2_MSG_GLOBAL_REQUEST"
.text:000092B8                 jmp     loc_9374
.text:000092BD ; ---------------------------------------------------------------------------
.text:000092BD
.text:000092BD loc_92BD:                               ; CODE XREF: _ssh2_pkt_type+269j
.text:000092BD                 cmp     [ebp+arg_8], 51h ; 'Q'
.text:000092C1                 jnz     short loc_92CD
.text:000092C3                 mov     eax, offset $SG87558 ; "SSH2_MSG_REQUEST_SUCCESS"
.text:000092C8                 jmp     loc_9374
.text:000092CD ; ---------------------------------------------------------------------------
.text:000092CD
.text:000092CD loc_92CD:                               ; CODE XREF: _ssh2_pkt_type+279j
.text:000092CD                 cmp     [ebp+arg_8], 52h ; 'R'
.text:000092D1                 jnz     short loc_92DD
.text:000092D3                 mov     eax, offset $SG87560 ; "SSH2_MSG_REQUEST_FAILURE"
.text:000092D8                 jmp     loc_9374
.text:000092DD ; ---------------------------------------------------------------------------
.text:000092DD
.text:000092DD loc_92DD:                               ; CODE XREF: _ssh2_pkt_type+289j
.text:000092DD                 cmp     [ebp+arg_8], 5Ah ; 'Z'
.text:000092E1                 jnz     short loc_92ED
.text:000092E3                 mov     eax, offset $SG87562 ; "SSH2_MSG_CHANNEL_OPEN"
.text:000092E8                 jmp     loc_9374
.text:000092ED ; ---------------------------------------------------------------------------
.text:000092ED
.text:000092ED loc_92ED:                               ; CODE XREF: _ssh2_pkt_type+299j
.text:000092ED                 cmp     [ebp+arg_8], 5Bh ; '['
.text:000092F1                 jnz     short loc_92FA
.text:000092F3                 mov     eax, offset $SG87564 ; "SSH2_MSG_CHANNEL_OPEN_CONFIRMATION"
.text:000092F8                 jmp     short loc_9374
.text:000092FA ; ---------------------------------------------------------------------------
.text:000092FA
.text:000092FA loc_92FA:                               ; CODE XREF: _ssh2_pkt_type+2A9j
.text:000092FA                 cmp     [ebp+arg_8], 5Ch ; '\'
.text:000092FE                 jnz     short loc_9307
.text:00009300                 mov     eax, offset $SG87566 ; "SSH2_MSG_CHANNEL_OPEN_FAILURE"
.text:00009305                 jmp     short loc_9374
.text:00009307 ; ---------------------------------------------------------------------------
.text:00009307
.text:00009307 loc_9307:                               ; CODE XREF: _ssh2_pkt_type+2B6j
.text:00009307                 cmp     [ebp+arg_8], 5Dh ; ']'
.text:0000930B                 jnz     short loc_9314
.text:0000930D                 mov     eax, offset $SG87568 ; "SSH2_MSG_CHANNEL_WINDOW_ADJUST"
.text:00009312                 jmp     short loc_9374
.text:00009314 ; ---------------------------------------------------------------------------
.text:00009314
.text:00009314 loc_9314:                               ; CODE XREF: _ssh2_pkt_type+2C3j
.text:00009314                 cmp     [ebp+arg_8], 5Eh ; '^'
.text:00009318                 jnz     short loc_9321
.text:0000931A                 mov     eax, offset $SG87570 ; "SSH2_MSG_CHANNEL_DATA"
.text:0000931F                 jmp     short loc_9374
.text:00009321 ; ---------------------------------------------------------------------------
.text:00009321
.text:00009321 loc_9321:                               ; CODE XREF: _ssh2_pkt_type+2D0j
.text:00009321                 cmp     [ebp+arg_8], 5Fh ; '_'
.text:00009325                 jnz     short loc_932E
.text:00009327                 mov     eax, offset $SG87572 ; "SSH2_MSG_CHANNEL_EXTENDED_DATA"
.text:0000932C                 jmp     short loc_9374
.text:0000932E ; ---------------------------------------------------------------------------
.text:0000932E
.text:0000932E loc_932E:                               ; CODE XREF: _ssh2_pkt_type+2DDj
.text:0000932E                 cmp     [ebp+arg_8], 60h ; '`'
.text:00009332                 jnz     short loc_933B
.text:00009334                 mov     eax, offset $SG87574 ; "SSH2_MSG_CHANNEL_EOF"
.text:00009339                 jmp     short loc_9374
.text:0000933B ; ---------------------------------------------------------------------------
.text:0000933B
.text:0000933B loc_933B:                               ; CODE XREF: _ssh2_pkt_type+2EAj
.text:0000933B                 cmp     [ebp+arg_8], 61h ; 'a'
.text:0000933F                 jnz     short loc_9348
.text:00009341                 mov     eax, offset $SG87576 ; "SSH2_MSG_CHANNEL_CLOSE"
.text:00009346                 jmp     short loc_9374
.text:00009348 ; ---------------------------------------------------------------------------
.text:00009348
.text:00009348 loc_9348:                               ; CODE XREF: _ssh2_pkt_type+2F7j
.text:00009348                 cmp     [ebp+arg_8], 62h ; 'b'
.text:0000934C                 jnz     short loc_9355
.text:0000934E                 mov     eax, offset $SG87578 ; "SSH2_MSG_CHANNEL_REQUEST"
.text:00009353                 jmp     short loc_9374
.text:00009355 ; ---------------------------------------------------------------------------
.text:00009355
.text:00009355 loc_9355:                               ; CODE XREF: _ssh2_pkt_type+304j
.text:00009355                 cmp     [ebp+arg_8], 63h ; 'c'
.text:00009359                 jnz     short loc_9362
.text:0000935B                 mov     eax, offset $SG87580 ; "SSH2_MSG_CHANNEL_SUCCESS"
.text:00009360                 jmp     short loc_9374
.text:00009362 ; ---------------------------------------------------------------------------
.text:00009362
.text:00009362 loc_9362:                               ; CODE XREF: _ssh2_pkt_type+311j
.text:00009362                 cmp     [ebp+arg_8], 64h ; 'd'
.text:00009366                 jnz     short loc_936F
.text:00009368                 mov     eax, offset $SG87582 ; "SSH2_MSG_CHANNEL_FAILURE"
.text:0000936D                 jmp     short loc_9374
.text:0000936F ; ---------------------------------------------------------------------------
.text:0000936F
.text:0000936F loc_936F:                               ; CODE XREF: _ssh2_pkt_type+31Ej
.text:0000936F                 mov     eax, offset $SG87583 ; "unknown"
.text:00009374
.text:00009374 loc_9374:                               ; CODE XREF: _ssh2_pkt_type+14j
.text:00009374                                         ; _ssh2_pkt_type+2Aj ...
.text:00009374                 pop     ebp
.text:00009375                 retn
.text:00009375 _ssh2_pkt_type  endp
.text:00009375
.text:00009375 ; ---------------------------------------------------------------------------
.text:00009376                 align 4
.text:00009378
.text:00009378 ; =============== S U B R O U T I N E =======================================
.text:00009378
.text:00009378 ; Attributes: bp-based frame
.text:00009378
.text:00009378 _ssh2_pkt_defer_noqueue proc near       ; CODE XREF: _ssh2_pkt_send_noqueue+35p
.text:00009378                                         ; _ssh2_pkt_defer_noqueue+6Dp ...
.text:00009378
.text:00009378 var_8           = dword ptr -8
.text:00009378 Size            = dword ptr -4
.text:00009378 arg_0           = dword ptr  8
.text:00009378 arg_4           = dword ptr  0Ch
.text:00009378 arg_8           = dword ptr  10h
.text:00009378
.text:00009378                 push    ebp
.text:00009379                 mov     ebp, esp
.text:0000937B                 sub     esp, 8
.text:0000937E                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00009385                 mov     [ebp+Size], 0CCCCCCCCh
.text:0000938C                 mov     eax, [ebp+arg_0]
.text:0000938F                 cmp     dword ptr [eax+60h], 0
.text:00009393                 jz      short loc_93ED
.text:00009395                 mov     ecx, [ebp+arg_0]
.text:00009398                 mov     edx, [ecx+60h]
.text:0000939B                 mov     eax, [edx+24h]
.text:0000939E                 and     eax, 1
.text:000093A1                 jz      short loc_93ED
.text:000093A3                 mov     ecx, [ebp+arg_0]
.text:000093A6                 cmp     dword ptr [ecx+140h], 0
.text:000093AD                 jnz     short loc_93ED
.text:000093AF                 cmp     [ebp+arg_8], 0
.text:000093B3                 jnz     short loc_93ED
.text:000093B5                 mov     edx, [ebp+arg_0]
.text:000093B8                 mov     eax, [edx+50h]
.text:000093BB                 and     eax, 200h
.text:000093C0                 jnz     short loc_93ED
.text:000093C2                 push    2
.text:000093C4                 call    _ssh2_pkt_init
.text:000093C9                 add     esp, 4
.text:000093CC                 mov     [ebp+var_8], eax
.text:000093CF                 mov     ecx, [ebp+var_8]
.text:000093D2                 push    ecx
.text:000093D3                 call    _ssh_pkt_addstring_start
.text:000093D8                 add     esp, 4
.text:000093DB                 push    1
.text:000093DD                 mov     edx, [ebp+var_8]
.text:000093E0                 push    edx
.text:000093E1                 mov     eax, [ebp+arg_0]
.text:000093E4                 push    eax
.text:000093E5                 call    _ssh2_pkt_defer_noqueue
.text:000093EA                 add     esp, 0Ch
.text:000093ED
.text:000093ED loc_93ED:                               ; CODE XREF: _ssh2_pkt_defer_noqueue+1Bj
.text:000093ED                                         ; _ssh2_pkt_defer_noqueue+29j ...
.text:000093ED                 mov     ecx, [ebp+arg_4]
.text:000093F0                 push    ecx
.text:000093F1                 mov     edx, [ebp+arg_0]
.text:000093F4                 push    edx
.text:000093F5                 call    _ssh2_pkt_construct
.text:000093FA                 add     esp, 8
.text:000093FD                 mov     [ebp+Size], eax
.text:00009400                 mov     eax, [ebp+arg_0]
.text:00009403                 mov     ecx, [eax+140h]
.text:00009409                 add     ecx, [ebp+Size]
.text:0000940C                 mov     edx, [ebp+arg_0]
.text:0000940F                 cmp     ecx, [edx+144h]
.text:00009415                 jle     short loc_945A
.text:00009417                 mov     eax, [ebp+arg_0]
.text:0000941A                 mov     ecx, [eax+140h]
.text:00009420                 mov     edx, [ebp+Size]
.text:00009423                 lea     eax, [ecx+edx+80h]
.text:0000942A                 mov     ecx, [ebp+arg_0]
.text:0000942D                 mov     [ecx+144h], eax
.text:00009433                 push    1
.text:00009435                 mov     edx, [ebp+arg_0]
.text:00009438                 mov     eax, [edx+144h]
.text:0000943E                 push    eax
.text:0000943F                 mov     ecx, [ebp+arg_0]
.text:00009442                 mov     edx, [ecx+13Ch]
.text:00009448                 push    edx
.text:00009449                 call    _saferealloc
.text:0000944E                 add     esp, 0Ch
.text:00009451                 mov     ecx, [ebp+arg_0]
.text:00009454                 mov     [ecx+13Ch], eax
.text:0000945A
.text:0000945A loc_945A:                               ; CODE XREF: _ssh2_pkt_defer_noqueue+9Dj
.text:0000945A                 mov     edx, [ebp+Size]
.text:0000945D                 push    edx             ; Size
.text:0000945E                 mov     eax, [ebp+arg_4]
.text:00009461                 mov     ecx, [eax+14h]
.text:00009464                 push    ecx             ; Src
.text:00009465                 mov     edx, [ebp+arg_0]
.text:00009468                 mov     eax, [edx+13Ch]
.text:0000946E                 mov     ecx, [ebp+arg_0]
.text:00009471                 add     eax, [ecx+140h]
.text:00009477                 push    eax             ; Dst
.text:00009478                 call    _memcpy
.text:0000947D                 add     esp, 0Ch
.text:00009480                 mov     edx, [ebp+arg_0]
.text:00009483                 mov     eax, [edx+140h]
.text:00009489                 add     eax, [ebp+Size]
.text:0000948C                 mov     ecx, [ebp+arg_0]
.text:0000948F                 mov     [ecx+140h], eax
.text:00009495                 mov     edx, [ebp+arg_0]
.text:00009498                 mov     eax, [edx+660h]
.text:0000949E                 mov     ecx, [ebp+arg_4]
.text:000094A1                 add     eax, [ecx+20h]
.text:000094A4                 mov     edx, [ebp+arg_0]
.text:000094A7                 mov     [edx+660h], eax
.text:000094AD                 mov     eax, [ebp+arg_4]
.text:000094B0                 push    eax
.text:000094B1                 call    _ssh_free_packet
.text:000094B6                 add     esp, 4
.text:000094B9                 add     esp, 8
.text:000094BC                 cmp     ebp, esp
.text:000094BE                 call    __RTC_CheckEsp
.text:000094C3                 mov     esp, ebp
.text:000094C5                 pop     ebp
.text:000094C6                 retn
.text:000094C6 _ssh2_pkt_defer_noqueue endp
.text:000094C6
.text:000094C6 ; ---------------------------------------------------------------------------
.text:000094C7                 align 4
.text:000094C8
.text:000094C8 ; =============== S U B R O U T I N E =======================================
.text:000094C8
.text:000094C8 ; Attributes: bp-based frame
.text:000094C8
.text:000094C8 _ssh2_pkt_queue proc near               ; CODE XREF: _ssh2_pkt_send+17p
.text:000094C8                                         ; _ssh2_pkt_defer+17p
.text:000094C8
.text:000094C8 arg_0           = dword ptr  8
.text:000094C8 arg_4           = dword ptr  0Ch
.text:000094C8
.text:000094C8                 push    ebp
.text:000094C9                 mov     ebp, esp
.text:000094CB                 mov     eax, [ebp+arg_0]
.text:000094CE                 cmp     dword ptr [eax+138h], 0
.text:000094D5                 jnz     short loc_94EE
.text:000094D7                 push    906h            ; Line
.text:000094DC                 push    offset $SG89072 ; "..\\..\\..\\ssh.c"
.text:000094E1                 push    offset $SG89073 ; "ssh->queueing"
.text:000094E6                 call    __wassert
.text:000094EB ; ---------------------------------------------------------------------------
.text:000094EB                 add     esp, 0Ch
.text:000094EE
.text:000094EE loc_94EE:                               ; CODE XREF: _ssh2_pkt_queue+Dj
.text:000094EE                 mov     edx, [ebp+arg_0]
.text:000094F1                 mov     eax, [ebp+arg_0]
.text:000094F4                 mov     ecx, [edx+130h]
.text:000094FA                 cmp     ecx, [eax+134h]
.text:00009500                 jl      short loc_953E
.text:00009502                 mov     edx, [ebp+arg_0]
.text:00009505                 mov     eax, [edx+130h]
.text:0000950B                 add     eax, 20h ; ' '
.text:0000950E                 mov     ecx, [ebp+arg_0]
.text:00009511                 mov     [ecx+134h], eax
.text:00009517                 push    4
.text:00009519                 mov     edx, [ebp+arg_0]
.text:0000951C                 mov     eax, [edx+134h]
.text:00009522                 push    eax
.text:00009523                 mov     ecx, [ebp+arg_0]
.text:00009526                 mov     edx, [ecx+12Ch]
.text:0000952C                 push    edx
.text:0000952D                 call    _saferealloc
.text:00009532                 add     esp, 0Ch
.text:00009535                 mov     ecx, [ebp+arg_0]
.text:00009538                 mov     [ecx+12Ch], eax
.text:0000953E
.text:0000953E loc_953E:                               ; CODE XREF: _ssh2_pkt_queue+38j
.text:0000953E                 mov     edx, [ebp+arg_0]
.text:00009541                 mov     eax, [edx+130h]
.text:00009547                 mov     ecx, [ebp+arg_0]
.text:0000954A                 mov     edx, [ecx+12Ch]
.text:00009550                 mov     ecx, [ebp+arg_4]
.text:00009553                 mov     [edx+eax*4], ecx
.text:00009556                 mov     edx, [ebp+arg_0]
.text:00009559                 mov     eax, [edx+130h]
.text:0000955F                 add     eax, 1
.text:00009562                 mov     ecx, [ebp+arg_0]
.text:00009565                 mov     [ecx+130h], eax
.text:0000956B                 cmp     ebp, esp
.text:0000956D                 call    __RTC_CheckEsp
.text:00009572                 pop     ebp
.text:00009573                 retn
.text:00009573 _ssh2_pkt_queue endp
.text:00009573
.text:00009573 ; ---------------------------------------------------------------------------
.text:00009574                 align 8
.text:00009578
.text:00009578 ; =============== S U B R O U T I N E =======================================
.text:00009578
.text:00009578 ; Attributes: bp-based frame
.text:00009578
.text:00009578 _ssh_pkt_defersend proc near            ; CODE XREF: _ssh2_pkt_send_noqueue+41p
.text:00009578                                         ; _ssh2_pkt_queuesend+7Fp ...
.text:00009578
.text:00009578 var_4           = dword ptr -4
.text:00009578 arg_0           = dword ptr  8
.text:00009578
.text:00009578                 push    ebp
.text:00009579                 mov     ebp, esp
.text:0000957B                 push    ecx
.text:0000957C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00009583                 mov     eax, [ebp+arg_0]
.text:00009586                 mov     ecx, [eax+140h]
.text:0000958C                 push    ecx
.text:0000958D                 mov     edx, [ebp+arg_0]
.text:00009590                 mov     eax, [edx+13Ch]
.text:00009596                 push    eax
.text:00009597                 mov     ecx, [ebp+arg_0]
.text:0000959A                 push    ecx
.text:0000959B                 call    _s_write
.text:000095A0                 add     esp, 0Ch
.text:000095A3                 mov     [ebp+var_4], eax
.text:000095A6                 mov     edx, [ebp+arg_0]
.text:000095A9                 mov     dword ptr [edx+144h], 0
.text:000095B3                 mov     eax, [ebp+arg_0]
.text:000095B6                 mov     dword ptr [eax+140h], 0
.text:000095C0                 mov     ecx, [ebp+arg_0]
.text:000095C3                 mov     edx, [ecx+13Ch]
.text:000095C9                 push    edx
.text:000095CA                 call    _safefree
.text:000095CF                 add     esp, 4
.text:000095D2                 mov     eax, [ebp+arg_0]
.text:000095D5                 mov     dword ptr [eax+13Ch], 0
.text:000095DF                 cmp     [ebp+var_4], 8000h
.text:000095E6                 jle     short loc_95FA
.text:000095E8                 mov     ecx, [ebp+var_4]
.text:000095EB                 push    ecx
.text:000095EC                 push    1
.text:000095EE                 mov     edx, [ebp+arg_0]
.text:000095F1                 push    edx
.text:000095F2                 call    _ssh_throttle_all
.text:000095F7                 add     esp, 0Ch
.text:000095FA
.text:000095FA loc_95FA:                               ; CODE XREF: _ssh_pkt_defersend+6Ej
.text:000095FA                 mov     eax, [ebp+arg_0]
.text:000095FD                 mov     ecx, [eax+65Ch]
.text:00009603                 mov     edx, [ebp+arg_0]
.text:00009606                 add     ecx, [edx+660h]
.text:0000960C                 mov     eax, [ebp+arg_0]
.text:0000960F                 mov     [eax+65Ch], ecx
.text:00009615                 mov     ecx, [ebp+arg_0]
.text:00009618                 cmp     dword ptr [ecx+668h], 0
.text:0000961F                 jnz     short loc_9662
.text:00009621                 mov     edx, [ebp+arg_0]
.text:00009624                 cmp     dword ptr [edx+0C4h], 0
.text:0000962B                 jnz     short loc_9662
.text:0000962D                 mov     eax, [ebp+arg_0]
.text:00009630                 cmp     dword ptr [eax+664h], 0
.text:00009637                 jz      short loc_9662
.text:00009639                 mov     ecx, [ebp+arg_0]
.text:0000963C                 mov     edx, [ebp+arg_0]
.text:0000963F                 mov     eax, [ecx+65Ch]
.text:00009645                 cmp     eax, [edx+664h]
.text:0000964B                 jbe     short loc_9662
.text:0000964D                 push    0
.text:0000964F                 push    0FFFFFFFFh
.text:00009651                 push    offset $SG89101 ; "too much data sent"
.text:00009656                 mov     ecx, [ebp+arg_0]
.text:00009659                 push    ecx
.text:0000965A                 call    _do_ssh2_transport
.text:0000965F                 add     esp, 10h
.text:00009662
.text:00009662 loc_9662:                               ; CODE XREF: _ssh_pkt_defersend+A7j
.text:00009662                                         ; _ssh_pkt_defersend+B3j ...
.text:00009662                 mov     edx, [ebp+arg_0]
.text:00009665                 mov     dword ptr [edx+660h], 0
.text:0000966F                 add     esp, 4
.text:00009672                 cmp     ebp, esp
.text:00009674                 call    __RTC_CheckEsp
.text:00009679                 mov     esp, ebp
.text:0000967B                 pop     ebp
.text:0000967C                 retn
.text:0000967C _ssh_pkt_defersend endp
.text:0000967C
.text:0000967C ; ---------------------------------------------------------------------------
.text:0000967D                 db 0Bh dup(0CCh)
.text:00009688
.text:00009688 ; =============== S U B R O U T I N E =======================================
.text:00009688
.text:00009688 ; Attributes: bp-based frame
.text:00009688
.text:00009688 _ssh_pkt_getuint32 proc near            ; CODE XREF: _ssh1_log_outgoing_packet+74p
.text:00009688                                         ; _ssh2_log_outgoing_packet+6Fp ...
.text:00009688
.text:00009688 var_4           = dword ptr -4
.text:00009688 arg_0           = dword ptr  8
.text:00009688
.text:00009688                 push    ebp
.text:00009689                 mov     ebp, esp
.text:0000968B                 push    ecx
.text:0000968C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00009693                 mov     eax, [ebp+arg_0]
.text:00009696                 mov     ecx, [ebp+arg_0]
.text:00009699                 mov     edx, [eax]
.text:0000969B                 sub     edx, [ecx+18h]
.text:0000969E                 cmp     edx, 4
.text:000096A1                 jge     short loc_96A7
.text:000096A3                 xor     eax, eax
.text:000096A5                 jmp     short loc_970E
.text:000096A7 ; ---------------------------------------------------------------------------
.text:000096A7
.text:000096A7 loc_96A7:                               ; CODE XREF: _ssh_pkt_getuint32+19j
.text:000096A7                 mov     eax, [ebp+arg_0]
.text:000096AA                 mov     ecx, [eax+14h]
.text:000096AD                 mov     edx, [ebp+arg_0]
.text:000096B0                 mov     eax, [edx+18h]
.text:000096B3                 movzx   ecx, byte ptr [ecx+eax]
.text:000096B7                 shl     ecx, 18h
.text:000096BA                 mov     edx, [ebp+arg_0]
.text:000096BD                 mov     eax, [edx+14h]
.text:000096C0                 mov     edx, [ebp+arg_0]
.text:000096C3                 mov     edx, [edx+18h]
.text:000096C6                 movzx   eax, byte ptr [eax+edx+1]
.text:000096CB                 shl     eax, 10h
.text:000096CE                 or      ecx, eax
.text:000096D0                 mov     edx, [ebp+arg_0]
.text:000096D3                 mov     eax, [edx+14h]
.text:000096D6                 mov     edx, [ebp+arg_0]
.text:000096D9                 mov     edx, [edx+18h]
.text:000096DC                 movzx   eax, byte ptr [eax+edx+2]
.text:000096E1                 shl     eax, 8
.text:000096E4                 or      ecx, eax
.text:000096E6                 mov     edx, [ebp+arg_0]
.text:000096E9                 mov     eax, [edx+14h]
.text:000096EC                 mov     edx, [ebp+arg_0]
.text:000096EF                 mov     edx, [edx+18h]
.text:000096F2                 movzx   eax, byte ptr [eax+edx+3]
.text:000096F7                 or      ecx, eax
.text:000096F9                 mov     [ebp+var_4], ecx
.text:000096FC                 mov     ecx, [ebp+arg_0]
.text:000096FF                 mov     edx, [ecx+18h]
.text:00009702                 add     edx, 4
.text:00009705                 mov     eax, [ebp+arg_0]
.text:00009708                 mov     [eax+18h], edx
.text:0000970B                 mov     eax, [ebp+var_4]
.text:0000970E
.text:0000970E loc_970E:                               ; CODE XREF: _ssh_pkt_getuint32+1Dj
.text:0000970E                 mov     esp, ebp
.text:00009710                 pop     ebp
.text:00009711                 retn
.text:00009711 _ssh_pkt_getuint32 endp
.text:00009711
.text:00009711 ; ---------------------------------------------------------------------------
.text:00009712                 align 8
.text:00009718
.text:00009718 ; =============== S U B R O U T I N E =======================================
.text:00009718
.text:00009718 ; Attributes: bp-based frame
.text:00009718
.text:00009718 _ssh2_pkt_getbool proc near             ; CODE XREF: _ssh2_log_outgoing_packet+175p
.text:00009718                                         ; _ssh2_log_outgoing_packet+34Cp ...
.text:00009718
.text:00009718 var_4           = dword ptr -4
.text:00009718 arg_0           = dword ptr  8
.text:00009718
.text:00009718                 push    ebp
.text:00009719                 mov     ebp, esp
.text:0000971B                 push    ecx
.text:0000971C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00009723                 mov     eax, [ebp+arg_0]
.text:00009726                 mov     ecx, [ebp+arg_0]
.text:00009729                 mov     edx, [eax]
.text:0000972B                 sub     edx, [ecx+18h]
.text:0000972E                 cmp     edx, 1
.text:00009731                 jge     short loc_9737
.text:00009733                 xor     eax, eax
.text:00009735                 jmp     short loc_9762
.text:00009737 ; ---------------------------------------------------------------------------
.text:00009737
.text:00009737 loc_9737:                               ; CODE XREF: _ssh2_pkt_getbool+19j
.text:00009737                 mov     eax, [ebp+arg_0]
.text:0000973A                 mov     ecx, [eax+14h]
.text:0000973D                 mov     edx, [ebp+arg_0]
.text:00009740                 mov     eax, [edx+18h]
.text:00009743                 movzx   ecx, byte ptr [ecx+eax]
.text:00009747                 neg     ecx
.text:00009749                 sbb     ecx, ecx
.text:0000974B                 neg     ecx
.text:0000974D                 mov     [ebp+var_4], ecx
.text:00009750                 mov     edx, [ebp+arg_0]
.text:00009753                 mov     eax, [edx+18h]
.text:00009756                 add     eax, 1
.text:00009759                 mov     ecx, [ebp+arg_0]
.text:0000975C                 mov     [ecx+18h], eax
.text:0000975F                 mov     eax, [ebp+var_4]
.text:00009762
.text:00009762 loc_9762:                               ; CODE XREF: _ssh2_pkt_getbool+1Dj
.text:00009762                 mov     esp, ebp
.text:00009764                 pop     ebp
.text:00009765                 retn
.text:00009765 _ssh2_pkt_getbool endp
.text:00009765
.text:00009765 ; ---------------------------------------------------------------------------
.text:00009766                 align 4
.text:00009768
.text:00009768 ; =============== S U B R O U T I N E =======================================
.text:00009768
.text:00009768 ; Attributes: bp-based frame
.text:00009768
.text:00009768 _ssh_pkt_getstring proc near            ; CODE XREF: _ssh1_log_outgoing_packet+A9p
.text:00009768                                         ; _ssh1_log_outgoing_packet+174p ...
.text:00009768
.text:00009768 var_4           = dword ptr -4
.text:00009768 arg_0           = dword ptr  8
.text:00009768 arg_4           = dword ptr  0Ch
.text:00009768 arg_8           = dword ptr  10h
.text:00009768
.text:00009768                 push    ebp
.text:00009769                 mov     ebp, esp
.text:0000976B                 push    ecx
.text:0000976C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00009773                 mov     eax, [ebp+arg_4]
.text:00009776                 mov     dword ptr [eax], 0
.text:0000977C                 mov     ecx, [ebp+arg_8]
.text:0000977F                 mov     dword ptr [ecx], 0
.text:00009785                 mov     edx, [ebp+arg_0]
.text:00009788                 mov     eax, [ebp+arg_0]
.text:0000978B                 mov     ecx, [edx]
.text:0000978D                 sub     ecx, [eax+18h]
.text:00009790                 cmp     ecx, 4
.text:00009793                 jge     short loc_979A
.text:00009795                 jmp     loc_984D
.text:0000979A ; ---------------------------------------------------------------------------
.text:0000979A
.text:0000979A loc_979A:                               ; CODE XREF: _ssh_pkt_getstring+2Bj
.text:0000979A                 mov     edx, [ebp+arg_0]
.text:0000979D                 mov     eax, [edx+14h]
.text:000097A0                 mov     ecx, [ebp+arg_0]
.text:000097A3                 mov     edx, [ecx+18h]
.text:000097A6                 movzx   eax, byte ptr [eax+edx]
.text:000097AA                 shl     eax, 18h
.text:000097AD                 mov     ecx, [ebp+arg_0]
.text:000097B0                 mov     edx, [ecx+14h]
.text:000097B3                 mov     ecx, [ebp+arg_0]
.text:000097B6                 mov     ecx, [ecx+18h]
.text:000097B9                 movzx   edx, byte ptr [edx+ecx+1]
.text:000097BE                 shl     edx, 10h
.text:000097C1                 or      eax, edx
.text:000097C3                 mov     ecx, [ebp+arg_0]
.text:000097C6                 mov     edx, [ecx+14h]
.text:000097C9                 mov     ecx, [ebp+arg_0]
.text:000097CC                 mov     ecx, [ecx+18h]
.text:000097CF                 movzx   edx, byte ptr [edx+ecx+2]
.text:000097D4                 shl     edx, 8
.text:000097D7                 or      eax, edx
.text:000097D9                 mov     ecx, [ebp+arg_0]
.text:000097DC                 mov     edx, [ecx+14h]
.text:000097DF                 mov     ecx, [ebp+arg_0]
.text:000097E2                 mov     ecx, [ecx+18h]
.text:000097E5                 movzx   edx, byte ptr [edx+ecx+3]
.text:000097EA                 or      eax, edx
.text:000097EC                 push    eax
.text:000097ED                 call    _toint
.text:000097F2                 add     esp, 4
.text:000097F5                 mov     [ebp+var_4], eax
.text:000097F8                 cmp     [ebp+var_4], 0
.text:000097FC                 jge     short loc_9800
.text:000097FE                 jmp     short loc_984D
.text:00009800 ; ---------------------------------------------------------------------------
.text:00009800
.text:00009800 loc_9800:                               ; CODE XREF: _ssh_pkt_getstring+94j
.text:00009800                 mov     eax, [ebp+arg_8]
.text:00009803                 mov     ecx, [ebp+var_4]
.text:00009806                 mov     [eax], ecx
.text:00009808                 mov     edx, [ebp+arg_0]
.text:0000980B                 mov     eax, [edx+18h]
.text:0000980E                 add     eax, 4
.text:00009811                 mov     ecx, [ebp+arg_0]
.text:00009814                 mov     [ecx+18h], eax
.text:00009817                 mov     edx, [ebp+arg_0]
.text:0000981A                 mov     eax, [ebp+arg_0]
.text:0000981D                 mov     ecx, [edx]
.text:0000981F                 sub     ecx, [eax+18h]
.text:00009822                 mov     edx, [ebp+arg_8]
.text:00009825                 cmp     ecx, [edx]
.text:00009827                 jge     short loc_982B
.text:00009829                 jmp     short loc_984D
.text:0000982B ; ---------------------------------------------------------------------------
.text:0000982B
.text:0000982B loc_982B:                               ; CODE XREF: _ssh_pkt_getstring+BFj
.text:0000982B                 mov     eax, [ebp+arg_0]
.text:0000982E                 mov     ecx, [eax+14h]
.text:00009831                 mov     edx, [ebp+arg_0]
.text:00009834                 add     ecx, [edx+18h]
.text:00009837                 mov     eax, [ebp+arg_4]
.text:0000983A                 mov     [eax], ecx
.text:0000983C                 mov     ecx, [ebp+arg_0]
.text:0000983F                 mov     edx, [ecx+18h]
.text:00009842                 mov     eax, [ebp+arg_8]
.text:00009845                 add     edx, [eax]
.text:00009847                 mov     ecx, [ebp+arg_0]
.text:0000984A                 mov     [ecx+18h], edx
.text:0000984D
.text:0000984D loc_984D:                               ; CODE XREF: _ssh_pkt_getstring+2Dj
.text:0000984D                                         ; _ssh_pkt_getstring+96j ...
.text:0000984D                 add     esp, 4
.text:00009850                 cmp     ebp, esp
.text:00009852                 call    __RTC_CheckEsp
.text:00009857                 mov     esp, ebp
.text:00009859                 pop     ebp
.text:0000985A                 retn
.text:0000985A _ssh_pkt_getstring endp
.text:0000985A
.text:0000985A ; ---------------------------------------------------------------------------
.text:0000985B                 db 0Dh dup(0CCh)
.text:00009868
.text:00009868 ; =============== S U B R O U T I N E =======================================
.text:00009868
.text:00009868 ; Attributes: bp-based frame
.text:00009868
.text:00009868                 public _sshfwd_unclean_close
.text:00009868 _sshfwd_unclean_close proc near
.text:00009868
.text:00009868 var_8           = dword ptr -8
.text:00009868 var_4           = dword ptr -4
.text:00009868 arg_0           = dword ptr  8
.text:00009868 arg_4           = dword ptr  0Ch
.text:00009868
.text:00009868                 push    ebp
.text:00009869                 mov     ebp, esp
.text:0000986B                 sub     esp, 8
.text:0000986E                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00009875                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000987C                 mov     eax, [ebp+arg_0]
.text:0000987F                 mov     ecx, [eax]
.text:00009881                 mov     [ebp+var_4], ecx
.text:00009884                 mov     edx, [ebp+var_4]
.text:00009887                 cmp     dword ptr [edx+118h], 4
.text:0000988E                 jnz     short loc_9895
.text:00009890                 jmp     loc_991C
.text:00009895 ; ---------------------------------------------------------------------------
.text:00009895
.text:00009895 loc_9895:                               ; CODE XREF: _sshfwd_unclean_close+26j
.text:00009895                 mov     eax, [ebp+arg_0]
.text:00009898                 mov     ecx, [eax+0Ch]
.text:0000989B                 mov     [ebp+var_8], ecx
.text:0000989E                 cmp     [ebp+var_8], 1
.text:000098A2                 jz      short loc_98B2
.text:000098A4                 cmp     [ebp+var_8], 2
.text:000098A8                 jle     short loc_98FC
.text:000098AA                 cmp     [ebp+var_8], 4
.text:000098AE                 jle     short loc_98D8
.text:000098B0                 jmp     short loc_98FC
.text:000098B2 ; ---------------------------------------------------------------------------
.text:000098B2
.text:000098B2 loc_98B2:                               ; CODE XREF: _sshfwd_unclean_close+3Aj
.text:000098B2                 mov     edx, [ebp+arg_0]
.text:000098B5                 mov     eax, [edx+4Ch]
.text:000098B8                 push    eax
.text:000098B9                 call    _x11_close
.text:000098BE                 add     esp, 4
.text:000098C1                 mov     ecx, [ebp+arg_4]
.text:000098C4                 push    ecx
.text:000098C5                 push    offset $SG90749 ; "Forwarded X11 connection terminated due"...
.text:000098CA                 mov     edx, [ebp+var_4]
.text:000098CD                 push    edx
.text:000098CE                 call    _logeventf
.text:000098D3                 add     esp, 0Ch
.text:000098D6                 jmp     short loc_98FC
.text:000098D8 ; ---------------------------------------------------------------------------
.text:000098D8
.text:000098D8 loc_98D8:                               ; CODE XREF: _sshfwd_unclean_close+46j
.text:000098D8                 mov     eax, [ebp+arg_0]
.text:000098DB                 mov     ecx, [eax+4Ch]
.text:000098DE                 push    ecx
.text:000098DF                 call    _pfd_close
.text:000098E4                 add     esp, 4
.text:000098E7                 mov     edx, [ebp+arg_4]
.text:000098EA                 push    edx
.text:000098EB                 push    offset $SG90751 ; "Forwarded port closed due to local erro"...
.text:000098F0                 mov     eax, [ebp+var_4]
.text:000098F3                 push    eax
.text:000098F4                 call    _logeventf
.text:000098F9                 add     esp, 0Ch
.text:000098FC
.text:000098FC loc_98FC:                               ; CODE XREF: _sshfwd_unclean_close+40j
.text:000098FC                                         ; _sshfwd_unclean_close+48j ...
.text:000098FC                 mov     ecx, [ebp+arg_0]
.text:000098FF                 mov     dword ptr [ecx+0Ch], 6
.text:00009906                 mov     edx, [ebp+arg_0]
.text:00009909                 mov     dword ptr [edx+18h], 0
.text:00009910                 mov     eax, [ebp+arg_0]
.text:00009913                 push    eax
.text:00009914                 call    _ssh2_channel_check_close
.text:00009919                 add     esp, 4
.text:0000991C
.text:0000991C loc_991C:                               ; CODE XREF: _sshfwd_unclean_close+28j
.text:0000991C                 add     esp, 8
.text:0000991F                 cmp     ebp, esp
.text:00009921                 call    __RTC_CheckEsp
.text:00009926                 mov     esp, ebp
.text:00009928                 pop     ebp
.text:00009929                 retn
.text:00009929 _sshfwd_unclean_close endp
.text:00009929
.text:00009929 ; ---------------------------------------------------------------------------
.text:0000992A                 db 0Eh dup(0CCh)
.text:00009938
.text:00009938 ; =============== S U B R O U T I N E =======================================
.text:00009938
.text:00009938 ; Attributes: bp-based frame
.text:00009938
.text:00009938                 public _sshfwd_write
.text:00009938 _sshfwd_write   proc near
.text:00009938
.text:00009938 var_4           = dword ptr -4
.text:00009938 arg_0           = dword ptr  8
.text:00009938 arg_4           = dword ptr  0Ch
.text:00009938 arg_8           = dword ptr  10h
.text:00009938
.text:00009938                 push    ebp
.text:00009939                 mov     ebp, esp
.text:0000993B                 push    ecx
.text:0000993C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00009943                 mov     eax, [ebp+arg_0]
.text:00009946                 mov     ecx, [eax]
.text:00009948                 mov     [ebp+var_4], ecx
.text:0000994B                 mov     edx, [ebp+var_4]
.text:0000994E                 cmp     dword ptr [edx+118h], 4
.text:00009955                 jnz     short loc_995B
.text:00009957                 xor     eax, eax
.text:00009959                 jmp     short loc_99B6
.text:0000995B ; ---------------------------------------------------------------------------
.text:0000995B
.text:0000995B loc_995B:                               ; CODE XREF: _sshfwd_write+1Dj
.text:0000995B                 mov     eax, [ebp+var_4]
.text:0000995E                 cmp     dword ptr [eax+16Ch], 1
.text:00009965                 jnz     short loc_9996
.text:00009967                 push    0
.text:00009969                 mov     ecx, [ebp+arg_8]
.text:0000996C                 push    ecx
.text:0000996D                 mov     edx, [ebp+arg_4]
.text:00009970                 push    edx
.text:00009971                 push    3
.text:00009973                 mov     eax, [ebp+arg_8]
.text:00009976                 push    eax
.text:00009977                 push    1
.text:00009979                 mov     ecx, [ebp+arg_0]
.text:0000997C                 mov     edx, [ecx+4]
.text:0000997F                 push    edx
.text:00009980                 push    1
.text:00009982                 push    17h
.text:00009984                 mov     eax, [ebp+var_4]
.text:00009987                 push    eax
.text:00009988                 call    _send_packet
.text:0000998D                 add     esp, 28h
.text:00009990                 xor     eax, eax
.text:00009992                 jmp     short loc_99B6
.text:00009994 ; ---------------------------------------------------------------------------
.text:00009994                 jmp     short loc_99B6
.text:00009996 ; ---------------------------------------------------------------------------
.text:00009996
.text:00009996 loc_9996:                               ; CODE XREF: _sshfwd_write+2Dj
.text:00009996                 mov     ecx, [ebp+arg_8]
.text:00009999                 push    ecx
.text:0000999A                 mov     edx, [ebp+arg_4]
.text:0000999D                 push    edx
.text:0000999E                 mov     eax, [ebp+arg_0]
.text:000099A1                 push    eax
.text:000099A2                 call    _ssh2_add_channel_data
.text:000099A7                 add     esp, 0Ch
.text:000099AA                 mov     ecx, [ebp+arg_0]
.text:000099AD                 push    ecx
.text:000099AE                 call    _ssh2_try_send
.text:000099B3                 add     esp, 4
.text:000099B6
.text:000099B6 loc_99B6:                               ; CODE XREF: _sshfwd_write+21j
.text:000099B6                                         ; _sshfwd_write+5Aj ...
.text:000099B6                 add     esp, 4
.text:000099B9                 cmp     ebp, esp
.text:000099BB                 call    __RTC_CheckEsp
.text:000099C0                 mov     esp, ebp
.text:000099C2                 pop     ebp
.text:000099C3                 retn
.text:000099C3 _sshfwd_write   endp
.text:000099C3
.text:000099C3 ; ---------------------------------------------------------------------------
.text:000099C4                 align 8
.text:000099C8
.text:000099C8 ; =============== S U B R O U T I N E =======================================
.text:000099C8
.text:000099C8 ; Attributes: bp-based frame
.text:000099C8
.text:000099C8                 public _sshfwd_unthrottle
.text:000099C8 _sshfwd_unthrottle proc near
.text:000099C8
.text:000099C8 var_C           = dword ptr -0Ch
.text:000099C8 var_8           = dword ptr -8
.text:000099C8 var_4           = dword ptr -4
.text:000099C8 arg_0           = dword ptr  8
.text:000099C8 arg_4           = dword ptr  0Ch
.text:000099C8
.text:000099C8                 push    ebp
.text:000099C9                 mov     ebp, esp
.text:000099CB                 sub     esp, 0Ch
.text:000099CE                 mov     [ebp+var_C], 0CCCCCCCCh
.text:000099D5                 mov     [ebp+var_8], 0CCCCCCCCh
.text:000099DC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000099E3                 mov     eax, [ebp+arg_0]
.text:000099E6                 mov     ecx, [eax]
.text:000099E8                 mov     [ebp+var_4], ecx
.text:000099EB                 mov     edx, [ebp+var_4]
.text:000099EE                 cmp     dword ptr [edx+118h], 4
.text:000099F5                 jnz     short loc_99F9
.text:000099F7                 jmp     short loc_9A6A
.text:000099F9 ; ---------------------------------------------------------------------------
.text:000099F9
.text:000099F9 loc_99F9:                               ; CODE XREF: _sshfwd_unthrottle+2Dj
.text:000099F9                 mov     eax, [ebp+var_4]
.text:000099FC                 cmp     dword ptr [eax+16Ch], 1
.text:00009A03                 jnz     short loc_9A0E
.text:00009A05                 mov     [ebp+var_8], 8000h
.text:00009A0C                 jmp     short loc_9A41
.text:00009A0E ; ---------------------------------------------------------------------------
.text:00009A0E
.text:00009A0E loc_9A0E:                               ; CODE XREF: _sshfwd_unthrottle+3Bj
.text:00009A0E                 mov     ecx, [ebp+arg_0]
.text:00009A11                 mov     edx, [ecx+38h]
.text:00009A14                 mov     [ebp+var_8], edx
.text:00009A17                 mov     eax, [ebp+arg_4]
.text:00009A1A                 cmp     eax, [ebp+var_8]
.text:00009A1D                 jge     short loc_9A2A
.text:00009A1F                 mov     ecx, [ebp+var_8]
.text:00009A22                 sub     ecx, [ebp+arg_4]
.text:00009A25                 mov     [ebp+var_C], ecx
.text:00009A28                 jmp     short loc_9A31
.text:00009A2A ; ---------------------------------------------------------------------------
.text:00009A2A
.text:00009A2A loc_9A2A:                               ; CODE XREF: _sshfwd_unthrottle+55j
.text:00009A2A                 mov     [ebp+var_C], 0
.text:00009A31
.text:00009A31 loc_9A31:                               ; CODE XREF: _sshfwd_unthrottle+60j
.text:00009A31                 mov     edx, [ebp+var_C]
.text:00009A34                 push    edx
.text:00009A35                 mov     eax, [ebp+arg_0]
.text:00009A38                 push    eax
.text:00009A39                 call    _ssh2_set_window
.text:00009A3E                 add     esp, 8
.text:00009A41
.text:00009A41 loc_9A41:                               ; CODE XREF: _sshfwd_unthrottle+44j
.text:00009A41                 mov     ecx, [ebp+arg_0]
.text:00009A44                 cmp     dword ptr [ecx+1Ch], 0
.text:00009A48                 jz      short loc_9A6A
.text:00009A4A                 mov     edx, [ebp+arg_4]
.text:00009A4D                 cmp     edx, [ebp+var_8]
.text:00009A50                 jg      short loc_9A6A
.text:00009A52                 mov     eax, [ebp+arg_0]
.text:00009A55                 mov     dword ptr [eax+1Ch], 0
.text:00009A5C                 push    0FFFFFFFFh
.text:00009A5E                 mov     ecx, [ebp+var_4]
.text:00009A61                 push    ecx
.text:00009A62                 call    _ssh_throttle_conn
.text:00009A67                 add     esp, 8
.text:00009A6A
.text:00009A6A loc_9A6A:                               ; CODE XREF: _sshfwd_unthrottle+2Fj
.text:00009A6A                                         ; _sshfwd_unthrottle+80j ...
.text:00009A6A                 add     esp, 0Ch
.text:00009A6D                 cmp     ebp, esp
.text:00009A6F                 call    __RTC_CheckEsp
.text:00009A74                 mov     esp, ebp
.text:00009A76                 pop     ebp
.text:00009A77                 retn
.text:00009A77 _sshfwd_unthrottle endp
.text:00009A77
.text:00009A78
.text:00009A78 ; =============== S U B R O U T I N E =======================================
.text:00009A78
.text:00009A78 ; Attributes: bp-based frame
.text:00009A78
.text:00009A78 _ssh_throttle_conn proc near            ; CODE XREF: _sshfwd_unthrottle+9Ap
.text:00009A78                                         ; _ssh2_msg_channel_data+3DAp ...
.text:00009A78
.text:00009A78 var_4           = dword ptr -4
.text:00009A78 arg_0           = dword ptr  8
.text:00009A78 arg_4           = dword ptr  0Ch
.text:00009A78
.text:00009A78                 push    ebp
.text:00009A79                 mov     ebp, esp
.text:00009A7B                 push    ecx
.text:00009A7C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00009A83                 mov     eax, [ebp+arg_0]
.text:00009A86                 mov     ecx, [eax+170h]
.text:00009A8C                 mov     [ebp+var_4], ecx
.text:00009A8F                 mov     edx, [ebp+arg_0]
.text:00009A92                 mov     eax, [edx+170h]
.text:00009A98                 add     eax, [ebp+arg_4]
.text:00009A9B                 mov     ecx, [ebp+arg_0]
.text:00009A9E                 mov     [ecx+170h], eax
.text:00009AA4                 mov     edx, [ebp+arg_0]
.text:00009AA7                 cmp     dword ptr [edx+170h], 0
.text:00009AAE                 jge     short loc_9AC7
.text:00009AB0                 push    0DDFh           ; Line
.text:00009AB5                 push    offset $SG89891 ; "..\\..\\..\\ssh.c"
.text:00009ABA                 push    offset $SG89892 ; "ssh->conn_throttle_count >= 0"
.text:00009ABF                 call    __wassert
.text:00009AC4 ; ---------------------------------------------------------------------------
.text:00009AC4                 add     esp, 0Ch
.text:00009AC7
.text:00009AC7 loc_9AC7:                               ; CODE XREF: _ssh_throttle_conn+36j
.text:00009AC7                 mov     ecx, [ebp+arg_0]
.text:00009ACA                 cmp     dword ptr [ecx+170h], 0
.text:00009AD1                 jz      short loc_9AE9
.text:00009AD3                 cmp     [ebp+var_4], 0
.text:00009AD7                 jnz     short loc_9AE9
.text:00009AD9                 push    1
.text:00009ADB                 mov     edx, [ebp+arg_0]
.text:00009ADE                 push    edx
.text:00009ADF                 call    _ssh_set_frozen
.text:00009AE4                 add     esp, 8
.text:00009AE7                 jmp     short loc_9B09
.text:00009AE9 ; ---------------------------------------------------------------------------
.text:00009AE9
.text:00009AE9 loc_9AE9:                               ; CODE XREF: _ssh_throttle_conn+59j
.text:00009AE9                                         ; _ssh_throttle_conn+5Fj
.text:00009AE9                 mov     eax, [ebp+arg_0]
.text:00009AEC                 cmp     dword ptr [eax+170h], 0
.text:00009AF3                 jnz     short loc_9B09
.text:00009AF5                 cmp     [ebp+var_4], 0
.text:00009AF9                 jz      short loc_9B09
.text:00009AFB                 push    0
.text:00009AFD                 mov     ecx, [ebp+arg_0]
.text:00009B00                 push    ecx
.text:00009B01                 call    _ssh_set_frozen
.text:00009B06                 add     esp, 8
.text:00009B09
.text:00009B09 loc_9B09:                               ; CODE XREF: _ssh_throttle_conn+6Fj
.text:00009B09                                         ; _ssh_throttle_conn+7Bj ...
.text:00009B09                 add     esp, 4
.text:00009B0C                 cmp     ebp, esp
.text:00009B0E                 call    __RTC_CheckEsp
.text:00009B13                 mov     esp, ebp
.text:00009B15                 pop     ebp
.text:00009B16                 retn
.text:00009B16 _ssh_throttle_conn endp
.text:00009B16
.text:00009B16 ; ---------------------------------------------------------------------------
.text:00009B17                 align 4
.text:00009B18
.text:00009B18 ; =============== S U B R O U T I N E =======================================
.text:00009B18
.text:00009B18 ; Attributes: bp-based frame
.text:00009B18
.text:00009B18 _ssh_set_frozen proc near               ; CODE XREF: _ssh_throttle_conn+67p
.text:00009B18                                         ; _ssh_throttle_conn+89p ...
.text:00009B18
.text:00009B18 arg_0           = dword ptr  8
.text:00009B18 arg_4           = dword ptr  0Ch
.text:00009B18
.text:00009B18                 push    ebp
.text:00009B19                 mov     ebp, esp
.text:00009B1B                 push    esi
.text:00009B1C                 mov     eax, [ebp+arg_0]
.text:00009B1F                 cmp     dword ptr [eax+10h], 0
.text:00009B23                 jz      short loc_9B49
.text:00009B25                 mov     esi, esp
.text:00009B27                 mov     ecx, [ebp+arg_4]
.text:00009B2A                 push    ecx
.text:00009B2B                 mov     edx, [ebp+arg_0]
.text:00009B2E                 mov     eax, [edx+10h]
.text:00009B31                 push    eax
.text:00009B32                 mov     ecx, [ebp+arg_0]
.text:00009B35                 mov     edx, [ecx+10h]
.text:00009B38                 mov     eax, [edx]
.text:00009B3A                 mov     ecx, [eax+18h]
.text:00009B3D                 call    ecx
.text:00009B3F                 add     esp, 8
.text:00009B42                 cmp     esi, esp
.text:00009B44                 call    __RTC_CheckEsp
.text:00009B49
.text:00009B49 loc_9B49:                               ; CODE XREF: _ssh_set_frozen+Bj
.text:00009B49                 mov     edx, [ebp+arg_0]
.text:00009B4C                 mov     eax, [ebp+arg_4]
.text:00009B4F                 mov     [edx+234h], eax
.text:00009B55                 pop     esi
.text:00009B56                 cmp     ebp, esp
.text:00009B58                 call    __RTC_CheckEsp
.text:00009B5D                 pop     ebp
.text:00009B5E                 retn
.text:00009B5E _ssh_set_frozen endp
.text:00009B5E
.text:00009B5E ; ---------------------------------------------------------------------------
.text:00009B5F                 db 9 dup(0CCh)
.text:00009B68
.text:00009B68 ; =============== S U B R O U T I N E =======================================
.text:00009B68
.text:00009B68 ; Attributes: bp-based frame
.text:00009B68
.text:00009B68                 public _ssh_alloc_sharing_rportfwd
.text:00009B68 _ssh_alloc_sharing_rportfwd proc near
.text:00009B68
.text:00009B68 var_4           = dword ptr -4
.text:00009B68 arg_0           = dword ptr  8
.text:00009B68 arg_4           = dword ptr  0Ch
.text:00009B68 arg_8           = dword ptr  10h
.text:00009B68 arg_C           = dword ptr  14h
.text:00009B68
.text:00009B68                 push    ebp
.text:00009B69                 mov     ebp, esp
.text:00009B6B                 push    ecx
.text:00009B6C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00009B73                 push    1Ch
.text:00009B75                 push    1
.text:00009B77                 call    _safemalloc
.text:00009B7C                 add     esp, 8
.text:00009B7F                 mov     [ebp+var_4], eax
.text:00009B82                 mov     eax, [ebp+var_4]
.text:00009B85                 mov     dword ptr [eax+0Ch], 0
.text:00009B8C                 mov     ecx, [ebp+var_4]
.text:00009B8F                 mov     dword ptr [ecx+4], 0
.text:00009B96                 mov     edx, [ebp+var_4]
.text:00009B99                 mov     eax, [ebp+arg_C]
.text:00009B9C                 mov     [edx+14h], eax
.text:00009B9F                 mov     ecx, [ebp+arg_4]
.text:00009BA2                 push    ecx
.text:00009BA3                 call    _dupstr
.text:00009BA8                 add     esp, 4
.text:00009BAB                 mov     edx, [ebp+var_4]
.text:00009BAE                 mov     [edx+8], eax
.text:00009BB1                 mov     eax, [ebp+var_4]
.text:00009BB4                 mov     ecx, [ebp+arg_8]
.text:00009BB7                 mov     [eax], ecx
.text:00009BB9                 mov     edx, [ebp+var_4]
.text:00009BBC                 mov     dword ptr [edx+10h], 0
.text:00009BC3                 mov     eax, [ebp+arg_0]
.text:00009BC6                 cmp     dword ptr [eax+110h], 0
.text:00009BCD                 jnz     short loc_9C08
.text:00009BCF                 mov     ecx, [ebp+arg_0]
.text:00009BD2                 cmp     dword ptr [ecx+16Ch], 2
.text:00009BD9                 jz      short loc_9BF2
.text:00009BDB                 push    1353h           ; Line
.text:00009BE0                 push    offset $SG90857 ; "..\\..\\..\\ssh.c"
.text:00009BE5                 push    offset $SG90858 ; "ssh->version == 2"
.text:00009BEA                 call    __wassert
.text:00009BEF ; ---------------------------------------------------------------------------
.text:00009BEF                 add     esp, 0Ch
.text:00009BF2
.text:00009BF2 loc_9BF2:                               ; CODE XREF: _ssh_alloc_sharing_rportfwd+71j
.text:00009BF2                 push    offset _ssh_rportcmp_ssh2
.text:00009BF7                 call    _newtree234
.text:00009BFC                 add     esp, 4
.text:00009BFF                 mov     ecx, [ebp+arg_0]
.text:00009C02                 mov     [ecx+110h], eax
.text:00009C08
.text:00009C08 loc_9C08:                               ; CODE XREF: _ssh_alloc_sharing_rportfwd+65j
.text:00009C08                 mov     edx, [ebp+var_4]
.text:00009C0B                 push    edx
.text:00009C0C                 mov     eax, [ebp+arg_0]
.text:00009C0F                 mov     ecx, [eax+110h]
.text:00009C15                 push    ecx
.text:00009C16                 call    _add234
.text:00009C1B                 add     esp, 8
.text:00009C1E                 cmp     eax, [ebp+var_4]
.text:00009C21                 jz      short loc_9C42
.text:00009C23                 mov     edx, [ebp+var_4]
.text:00009C26                 mov     eax, [edx+8]
.text:00009C29                 push    eax
.text:00009C2A                 call    _safefree
.text:00009C2F                 add     esp, 4
.text:00009C32                 mov     ecx, [ebp+var_4]
.text:00009C35                 push    ecx
.text:00009C36                 call    _safefree
.text:00009C3B                 add     esp, 4
.text:00009C3E                 xor     eax, eax
.text:00009C40                 jmp     short loc_9C47
.text:00009C42 ; ---------------------------------------------------------------------------
.text:00009C42
.text:00009C42 loc_9C42:                               ; CODE XREF: _ssh_alloc_sharing_rportfwd+B9j
.text:00009C42                 mov     eax, 1
.text:00009C47
.text:00009C47 loc_9C47:                               ; CODE XREF: _ssh_alloc_sharing_rportfwd+D8j
.text:00009C47                 add     esp, 4
.text:00009C4A                 cmp     ebp, esp
.text:00009C4C                 call    __RTC_CheckEsp
.text:00009C51                 mov     esp, ebp
.text:00009C53                 pop     ebp
.text:00009C54                 retn
.text:00009C54 _ssh_alloc_sharing_rportfwd endp
.text:00009C54
.text:00009C54 ; ---------------------------------------------------------------------------
.text:00009C55                 align 4
.text:00009C58
.text:00009C58 ; =============== S U B R O U T I N E =======================================
.text:00009C58
.text:00009C58 ; Attributes: bp-based frame
.text:00009C58
.text:00009C58 _ssh_rportcmp_ssh2 proc near            ; DATA XREF: _ssh_alloc_sharing_rportfwd:loc_9BF2o
.text:00009C58                                         ; _ssh_setup_portfwd:loc_1759Co
.text:00009C58
.text:00009C58 var_C           = dword ptr -0Ch
.text:00009C58 var_8           = dword ptr -8
.text:00009C58 var_4           = dword ptr -4
.text:00009C58 arg_0           = dword ptr  8
.text:00009C58 arg_4           = dword ptr  0Ch
.text:00009C58
.text:00009C58                 push    ebp
.text:00009C59                 mov     ebp, esp
.text:00009C5B                 sub     esp, 0Ch
.text:00009C5E                 mov     [ebp+var_C], 0CCCCCCCCh
.text:00009C65                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00009C6C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00009C73                 mov     eax, [ebp+arg_0]
.text:00009C76                 mov     [ebp+var_4], eax
.text:00009C79                 mov     ecx, [ebp+arg_4]
.text:00009C7C                 mov     [ebp+var_8], ecx
.text:00009C7F                 mov     edx, [ebp+var_8]
.text:00009C82                 mov     eax, [edx+8]
.text:00009C85                 push    eax             ; Str2
.text:00009C86                 mov     ecx, [ebp+var_4]
.text:00009C89                 mov     edx, [ecx+8]
.text:00009C8C                 push    edx             ; Str1
.text:00009C8D                 call    _strcmp
.text:00009C92                 add     esp, 8
.text:00009C95                 mov     [ebp+var_C], eax
.text:00009C98                 cmp     [ebp+var_C], 0
.text:00009C9C                 jz      short loc_9CAD
.text:00009C9E                 xor     eax, eax
.text:00009CA0                 cmp     [ebp+var_C], 0
.text:00009CA4                 setnl   al
.text:00009CA7                 lea     eax, [eax+eax-1]
.text:00009CAB                 jmp     short loc_9CD3
.text:00009CAD ; ---------------------------------------------------------------------------
.text:00009CAD
.text:00009CAD loc_9CAD:                               ; CODE XREF: _ssh_rportcmp_ssh2+44j
.text:00009CAD                 mov     eax, [ebp+var_4]
.text:00009CB0                 mov     ecx, [ebp+var_8]
.text:00009CB3                 mov     edx, [eax]
.text:00009CB5                 cmp     edx, [ecx]
.text:00009CB7                 jbe     short loc_9CC0
.text:00009CB9                 mov     eax, 1
.text:00009CBE                 jmp     short loc_9CD3
.text:00009CC0 ; ---------------------------------------------------------------------------
.text:00009CC0
.text:00009CC0 loc_9CC0:                               ; CODE XREF: _ssh_rportcmp_ssh2+5Fj
.text:00009CC0                 mov     eax, [ebp+var_4]
.text:00009CC3                 mov     ecx, [ebp+var_8]
.text:00009CC6                 mov     edx, [eax]
.text:00009CC8                 cmp     edx, [ecx]
.text:00009CCA                 jnb     short loc_9CD1
.text:00009CCC                 or      eax, 0FFFFFFFFh
.text:00009CCF                 jmp     short loc_9CD3
.text:00009CD1 ; ---------------------------------------------------------------------------
.text:00009CD1
.text:00009CD1 loc_9CD1:                               ; CODE XREF: _ssh_rportcmp_ssh2+72j
.text:00009CD1                 xor     eax, eax
.text:00009CD3
.text:00009CD3 loc_9CD3:                               ; CODE XREF: _ssh_rportcmp_ssh2+53j
.text:00009CD3                                         ; _ssh_rportcmp_ssh2+66j ...
.text:00009CD3                 add     esp, 0Ch
.text:00009CD6                 cmp     ebp, esp
.text:00009CD8                 call    __RTC_CheckEsp
.text:00009CDD                 mov     esp, ebp
.text:00009CDF                 pop     ebp
.text:00009CE0                 retn
.text:00009CE0 _ssh_rportcmp_ssh2 endp
.text:00009CE0
.text:00009CE0 ; ---------------------------------------------------------------------------
.text:00009CE1                 align 8
.text:00009CE8
.text:00009CE8 ; =============== S U B R O U T I N E =======================================
.text:00009CE8
.text:00009CE8 ; Attributes: bp-based frame
.text:00009CE8
.text:00009CE8                 public _ssh_sharing_queue_global_request
.text:00009CE8 _ssh_sharing_queue_global_request proc near
.text:00009CE8
.text:00009CE8 arg_0           = dword ptr  8
.text:00009CE8 arg_4           = dword ptr  0Ch
.text:00009CE8
.text:00009CE8                 push    ebp
.text:00009CE9                 mov     ebp, esp
.text:00009CEB                 mov     eax, [ebp+arg_4]
.text:00009CEE                 push    eax
.text:00009CEF                 push    offset _ssh_sharing_global_request_response
.text:00009CF4                 push    52h ; 'R'
.text:00009CF6                 push    51h ; 'Q'
.text:00009CF8                 mov     ecx, [ebp+arg_0]
.text:00009CFB                 push    ecx
.text:00009CFC                 call    _ssh_queue_handler
.text:00009D01                 add     esp, 14h
.text:00009D04                 cmp     ebp, esp
.text:00009D06                 call    __RTC_CheckEsp
.text:00009D0B                 pop     ebp
.text:00009D0C                 retn
.text:00009D0C _ssh_sharing_queue_global_request endp
.text:00009D0C
.text:00009D0C ; ---------------------------------------------------------------------------
.text:00009D0D                 db 0Bh dup(0CCh)
.text:00009D18
.text:00009D18 ; =============== S U B R O U T I N E =======================================
.text:00009D18
.text:00009D18 ; Attributes: bp-based frame
.text:00009D18
.text:00009D18 _ssh_queue_handler proc near            ; CODE XREF: _ssh_sharing_queue_global_request+14p
.text:00009D18                                         ; _ssh_setup_portfwd+CC7p ...
.text:00009D18
.text:00009D18 var_4           = dword ptr -4
.text:00009D18 arg_0           = dword ptr  8
.text:00009D18 arg_4           = dword ptr  0Ch
.text:00009D18 arg_8           = dword ptr  10h
.text:00009D18 arg_C           = dword ptr  14h
.text:00009D18 arg_10          = dword ptr  18h
.text:00009D18
.text:00009D18                 push    ebp
.text:00009D19                 mov     ebp, esp
.text:00009D1B                 push    ecx
.text:00009D1C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00009D23                 push    14h
.text:00009D25                 push    1
.text:00009D27                 call    _safemalloc
.text:00009D2C                 add     esp, 8
.text:00009D2F                 mov     [ebp+var_4], eax
.text:00009D32                 mov     eax, [ebp+var_4]
.text:00009D35                 mov     ecx, [ebp+arg_4]
.text:00009D38                 mov     [eax], ecx
.text:00009D3A                 mov     edx, [ebp+var_4]
.text:00009D3D                 mov     eax, [ebp+arg_8]
.text:00009D40                 mov     [edx+4], eax
.text:00009D43                 mov     ecx, [ebp+var_4]
.text:00009D46                 mov     edx, [ebp+arg_C]
.text:00009D49                 mov     [ecx+8], edx
.text:00009D4C                 mov     eax, [ebp+var_4]
.text:00009D4F                 mov     ecx, [ebp+arg_10]
.text:00009D52                 mov     [eax+0Ch], ecx
.text:00009D55                 mov     edx, [ebp+var_4]
.text:00009D58                 mov     dword ptr [edx+10h], 0
.text:00009D5F                 mov     eax, [ebp+arg_0]
.text:00009D62                 cmp     dword ptr [eax+648h], 0
.text:00009D69                 jnz     loc_9DF2
.text:00009D6F                 mov     ecx, [ebp+arg_0]
.text:00009D72                 mov     edx, [ebp+var_4]
.text:00009D75                 mov     [ecx+644h], edx
.text:00009D7B                 mov     eax, [ebp+var_4]
.text:00009D7E                 cmp     dword ptr [eax], 0
.text:00009D81                 jle     short loc_9DB4
.text:00009D83                 mov     ecx, [ebp+arg_0]
.text:00009D86                 mov     edx, [ecx+644h]
.text:00009D8C                 mov     eax, [edx]
.text:00009D8E                 mov     ecx, [ebp+arg_0]
.text:00009D91                 mov     edx, [ebp+arg_0]
.text:00009D94                 mov     eax, [edx+eax*4+244h]
.text:00009D9B                 mov     [ecx+64Ch], eax
.text:00009DA1                 mov     ecx, [ebp+var_4]
.text:00009DA4                 mov     edx, [ecx]
.text:00009DA6                 mov     eax, [ebp+arg_0]
.text:00009DA9                 mov     dword ptr [eax+edx*4+244h], offset _ssh_queueing_handler
.text:00009DB4
.text:00009DB4 loc_9DB4:                               ; CODE XREF: _ssh_queue_handler+69j
.text:00009DB4                 mov     ecx, [ebp+var_4]
.text:00009DB7                 cmp     dword ptr [ecx+4], 0
.text:00009DBB                 jle     short loc_9DF0
.text:00009DBD                 mov     edx, [ebp+arg_0]
.text:00009DC0                 mov     eax, [edx+644h]
.text:00009DC6                 mov     ecx, [eax+4]
.text:00009DC9                 mov     edx, [ebp+arg_0]
.text:00009DCC                 mov     eax, [ebp+arg_0]
.text:00009DCF                 mov     ecx, [eax+ecx*4+244h]
.text:00009DD6                 mov     [edx+650h], ecx
.text:00009DDC                 mov     edx, [ebp+var_4]
.text:00009DDF                 mov     eax, [edx+4]
.text:00009DE2                 mov     ecx, [ebp+arg_0]
.text:00009DE5                 mov     dword ptr [ecx+eax*4+244h], offset _ssh_queueing_handler
.text:00009DF0
.text:00009DF0 loc_9DF0:                               ; CODE XREF: _ssh_queue_handler+A3j
.text:00009DF0                 jmp     short loc_9E01
.text:00009DF2 ; ---------------------------------------------------------------------------
.text:00009DF2
.text:00009DF2 loc_9DF2:                               ; CODE XREF: _ssh_queue_handler+51j
.text:00009DF2                 mov     edx, [ebp+arg_0]
.text:00009DF5                 mov     eax, [edx+648h]
.text:00009DFB                 mov     ecx, [ebp+var_4]
.text:00009DFE                 mov     [eax+10h], ecx
.text:00009E01
.text:00009E01 loc_9E01:                               ; CODE XREF: _ssh_queue_handler:loc_9DF0j
.text:00009E01                 mov     edx, [ebp+arg_0]
.text:00009E04                 mov     eax, [ebp+var_4]
.text:00009E07                 mov     [edx+648h], eax
.text:00009E0D                 add     esp, 4
.text:00009E10                 cmp     ebp, esp
.text:00009E12                 call    __RTC_CheckEsp
.text:00009E17                 mov     esp, ebp
.text:00009E19                 pop     ebp
.text:00009E1A                 retn
.text:00009E1A _ssh_queue_handler endp
.text:00009E1A
.text:00009E1A ; ---------------------------------------------------------------------------
.text:00009E1B                 db 0Dh dup(0CCh)
.text:00009E28
.text:00009E28 ; =============== S U B R O U T I N E =======================================
.text:00009E28
.text:00009E28 ; Attributes: bp-based frame
.text:00009E28
.text:00009E28 _ssh_queueing_handler proc near         ; DATA XREF: _ssh_queue_handler+91o
.text:00009E28                                         ; _ssh_queue_handler+CDo ...
.text:00009E28
.text:00009E28 var_4           = dword ptr -4
.text:00009E28 arg_0           = dword ptr  8
.text:00009E28 arg_4           = dword ptr  0Ch
.text:00009E28
.text:00009E28                 push    ebp
.text:00009E29                 mov     ebp, esp
.text:00009E2B                 push    ecx
.text:00009E2C                 push    esi
.text:00009E2D                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00009E34                 mov     eax, [ebp+arg_0]
.text:00009E37                 mov     ecx, [eax+644h]
.text:00009E3D                 mov     [ebp+var_4], ecx
.text:00009E40                 cmp     [ebp+var_4], 0
.text:00009E44                 jnz     short loc_9E5D
.text:00009E46                 push    12F7h           ; Line
.text:00009E4B                 push    offset $SG90783 ; "..\\..\\..\\ssh.c"
.text:00009E50                 push    offset $SG90784 ; "qh != NULL"
.text:00009E55                 call    __wassert
.text:00009E5A ; ---------------------------------------------------------------------------
.text:00009E5A                 add     esp, 0Ch
.text:00009E5D
.text:00009E5D loc_9E5D:                               ; CODE XREF: _ssh_queueing_handler+1Cj
.text:00009E5D                 mov     eax, [ebp+arg_4]
.text:00009E60                 mov     ecx, [ebp+var_4]
.text:00009E63                 mov     edx, [eax+8]
.text:00009E66                 cmp     edx, [ecx]
.text:00009E68                 jz      short loc_9E8F
.text:00009E6A                 mov     eax, [ebp+arg_4]
.text:00009E6D                 mov     ecx, [ebp+var_4]
.text:00009E70                 mov     edx, [eax+8]
.text:00009E73                 cmp     edx, [ecx+4]
.text:00009E76                 jz      short loc_9E8F
.text:00009E78                 push    12F9h           ; Line
.text:00009E7D                 push    offset $SG90786 ; "..\\..\\..\\ssh.c"
.text:00009E82                 push    offset $SG90787 ; "pktin->type == qh->msg1 || pktin->type "...
.text:00009E87                 call    __wassert
.text:00009E8C ; ---------------------------------------------------------------------------
.text:00009E8C                 add     esp, 0Ch
.text:00009E8F
.text:00009E8F loc_9E8F:                               ; CODE XREF: _ssh_queueing_handler+40j
.text:00009E8F                                         ; _ssh_queueing_handler+4Ej
.text:00009E8F                 mov     ecx, [ebp+var_4]
.text:00009E92                 cmp     dword ptr [ecx], 0
.text:00009E95                 jle     short loc_9EDB
.text:00009E97                 mov     edx, [ebp+var_4]
.text:00009E9A                 mov     eax, [edx]
.text:00009E9C                 mov     ecx, [ebp+arg_0]
.text:00009E9F                 cmp     dword ptr [ecx+eax*4+244h], offset _ssh_queueing_handler
.text:00009EAA                 jz      short loc_9EC3
.text:00009EAC                 push    12FCh           ; Line
.text:00009EB1                 push    offset $SG90790 ; "..\\..\\..\\ssh.c"
.text:00009EB6                 push    offset $SG90791 ; "ssh->packet_dispatch[qh->msg1] == ssh_q"...
.text:00009EBB                 call    __wassert
.text:00009EC0 ; ---------------------------------------------------------------------------
.text:00009EC0                 add     esp, 0Ch
.text:00009EC3
.text:00009EC3 loc_9EC3:                               ; CODE XREF: _ssh_queueing_handler+82j
.text:00009EC3                 mov     eax, [ebp+var_4]
.text:00009EC6                 mov     ecx, [eax]
.text:00009EC8                 mov     edx, [ebp+arg_0]
.text:00009ECB                 mov     eax, [ebp+arg_0]
.text:00009ECE                 mov     eax, [eax+64Ch]
.text:00009ED4                 mov     [edx+ecx*4+244h], eax
.text:00009EDB
.text:00009EDB loc_9EDB:                               ; CODE XREF: _ssh_queueing_handler+6Dj
.text:00009EDB                 mov     ecx, [ebp+var_4]
.text:00009EDE                 cmp     dword ptr [ecx+4], 0
.text:00009EE2                 jle     short loc_9F2A
.text:00009EE4                 mov     edx, [ebp+var_4]
.text:00009EE7                 mov     eax, [edx+4]
.text:00009EEA                 mov     ecx, [ebp+arg_0]
.text:00009EED                 cmp     dword ptr [ecx+eax*4+244h], offset _ssh_queueing_handler
.text:00009EF8                 jz      short loc_9F11
.text:00009EFA                 push    1300h           ; Line
.text:00009EFF                 push    offset $SG90794 ; "..\\..\\..\\ssh.c"
.text:00009F04                 push    offset $SG90795 ; "ssh->packet_dispatch[qh->msg2] == ssh_q"...
.text:00009F09                 call    __wassert
.text:00009F0E ; ---------------------------------------------------------------------------
.text:00009F0E                 add     esp, 0Ch
.text:00009F11
.text:00009F11 loc_9F11:                               ; CODE XREF: _ssh_queueing_handler+D0j
.text:00009F11                 mov     eax, [ebp+var_4]
.text:00009F14                 mov     ecx, [eax+4]
.text:00009F17                 mov     edx, [ebp+arg_0]
.text:00009F1A                 mov     eax, [ebp+arg_0]
.text:00009F1D                 mov     eax, [eax+650h]
.text:00009F23                 mov     [edx+ecx*4+244h], eax
.text:00009F2A
.text:00009F2A loc_9F2A:                               ; CODE XREF: _ssh_queueing_handler+BAj
.text:00009F2A                 mov     ecx, [ebp+var_4]
.text:00009F2D                 cmp     dword ptr [ecx+10h], 0
.text:00009F31                 jz      loc_9FD5
.text:00009F37                 mov     edx, [ebp+arg_0]
.text:00009F3A                 mov     eax, [ebp+var_4]
.text:00009F3D                 mov     ecx, [eax+10h]
.text:00009F40                 mov     [edx+644h], ecx
.text:00009F46                 mov     edx, [ebp+arg_0]
.text:00009F49                 mov     eax, [edx+644h]
.text:00009F4F                 cmp     dword ptr [eax], 0
.text:00009F52                 jle     short loc_9F8B
.text:00009F54                 mov     ecx, [ebp+arg_0]
.text:00009F57                 mov     edx, [ecx+644h]
.text:00009F5D                 mov     eax, [edx]
.text:00009F5F                 mov     ecx, [ebp+arg_0]
.text:00009F62                 mov     edx, [ebp+arg_0]
.text:00009F65                 mov     eax, [edx+eax*4+244h]
.text:00009F6C                 mov     [ecx+64Ch], eax
.text:00009F72                 mov     ecx, [ebp+arg_0]
.text:00009F75                 mov     edx, [ecx+644h]
.text:00009F7B                 mov     eax, [edx]
.text:00009F7D                 mov     ecx, [ebp+arg_0]
.text:00009F80                 mov     dword ptr [ecx+eax*4+244h], offset _ssh_queueing_handler
.text:00009F8B
.text:00009F8B loc_9F8B:                               ; CODE XREF: _ssh_queueing_handler+12Aj
.text:00009F8B                 mov     edx, [ebp+arg_0]
.text:00009F8E                 mov     eax, [edx+644h]
.text:00009F94                 cmp     dword ptr [eax+4], 0
.text:00009F98                 jle     short loc_9FD3
.text:00009F9A                 mov     ecx, [ebp+arg_0]
.text:00009F9D                 mov     edx, [ecx+644h]
.text:00009FA3                 mov     eax, [edx+4]
.text:00009FA6                 mov     ecx, [ebp+arg_0]
.text:00009FA9                 mov     edx, [ebp+arg_0]
.text:00009FAC                 mov     eax, [edx+eax*4+244h]
.text:00009FB3                 mov     [ecx+650h], eax
.text:00009FB9                 mov     ecx, [ebp+arg_0]
.text:00009FBC                 mov     edx, [ecx+644h]
.text:00009FC2                 mov     eax, [edx+4]
.text:00009FC5                 mov     ecx, [ebp+arg_0]
.text:00009FC8                 mov     dword ptr [ecx+eax*4+244h], offset _ssh_queueing_handler
.text:00009FD3
.text:00009FD3 loc_9FD3:                               ; CODE XREF: _ssh_queueing_handler+170j
.text:00009FD3                 jmp     short loc_9FEF
.text:00009FD5 ; ---------------------------------------------------------------------------
.text:00009FD5
.text:00009FD5 loc_9FD5:                               ; CODE XREF: _ssh_queueing_handler+109j
.text:00009FD5                 mov     edx, [ebp+arg_0]
.text:00009FD8                 mov     dword ptr [edx+648h], 0
.text:00009FE2                 mov     eax, [ebp+arg_0]
.text:00009FE5                 mov     dword ptr [eax+644h], 0
.text:00009FEF
.text:00009FEF loc_9FEF:                               ; CODE XREF: _ssh_queueing_handler:loc_9FD3j
.text:00009FEF                 mov     esi, esp
.text:00009FF1                 mov     ecx, [ebp+var_4]
.text:00009FF4                 mov     edx, [ecx+0Ch]
.text:00009FF7                 push    edx
.text:00009FF8                 mov     eax, [ebp+arg_4]
.text:00009FFB                 push    eax
.text:00009FFC                 mov     ecx, [ebp+arg_0]
.text:00009FFF                 push    ecx
.text:0000A000                 mov     edx, [ebp+var_4]
.text:0000A003                 mov     eax, [edx+8]
.text:0000A006                 call    eax
.text:0000A008                 add     esp, 0Ch
.text:0000A00B                 cmp     esi, esp
.text:0000A00D                 call    __RTC_CheckEsp
.text:0000A012                 mov     ecx, [ebp+var_4]
.text:0000A015                 push    ecx
.text:0000A016                 call    _safefree
.text:0000A01B                 add     esp, 4
.text:0000A01E                 pop     esi
.text:0000A01F                 add     esp, 4
.text:0000A022                 cmp     ebp, esp
.text:0000A024                 call    __RTC_CheckEsp
.text:0000A029                 mov     esp, ebp
.text:0000A02B                 pop     ebp
.text:0000A02C                 retn
.text:0000A02C _ssh_queueing_handler endp
.text:0000A02C
.text:0000A02C ; ---------------------------------------------------------------------------
.text:0000A02D                 db 0Bh dup(0CCh)
.text:0000A038
.text:0000A038 ; =============== S U B R O U T I N E =======================================
.text:0000A038
.text:0000A038 ; Attributes: bp-based frame
.text:0000A038
.text:0000A038 _ssh_sharing_global_request_response proc near
.text:0000A038                                         ; DATA XREF: _ssh_sharing_queue_global_request+7o
.text:0000A038
.text:0000A038 arg_4           = dword ptr  0Ch
.text:0000A038 arg_8           = dword ptr  10h
.text:0000A038
.text:0000A038                 push    ebp
.text:0000A039                 mov     ebp, esp
.text:0000A03B                 mov     eax, [ebp+arg_4]
.text:0000A03E                 mov     ecx, [eax]
.text:0000A040                 push    ecx
.text:0000A041                 mov     edx, [ebp+arg_4]
.text:0000A044                 mov     eax, [edx+14h]
.text:0000A047                 push    eax
.text:0000A048                 mov     ecx, [ebp+arg_4]
.text:0000A04B                 mov     edx, [ecx+8]
.text:0000A04E                 push    edx
.text:0000A04F                 mov     eax, [ebp+arg_8]
.text:0000A052                 push    eax
.text:0000A053                 call    _share_got_pkt_from_server
.text:0000A058                 add     esp, 10h
.text:0000A05B                 cmp     ebp, esp
.text:0000A05D                 call    __RTC_CheckEsp
.text:0000A062                 pop     ebp
.text:0000A063                 retn
.text:0000A063 _ssh_sharing_global_request_response endp
.text:0000A063
.text:0000A063 ; ---------------------------------------------------------------------------
.text:0000A064                 align 8
.text:0000A068
.text:0000A068 ; =============== S U B R O U T I N E =======================================
.text:0000A068
.text:0000A068 ; Attributes: bp-based frame
.text:0000A068
.text:0000A068                 public _ssh_agent_forwarding_permitted
.text:0000A068 _ssh_agent_forwarding_permitted proc near
.text:0000A068                                         ; CODE XREF: _do_ssh2_authconn+3FD7p
.text:0000A068                                         ; _do_ssh1_connection+104p
.text:0000A068
.text:0000A068 var_4           = dword ptr -4
.text:0000A068 arg_0           = dword ptr  8
.text:0000A068
.text:0000A068                 push    ebp
.text:0000A069                 mov     ebp, esp
.text:0000A06B                 push    ecx
.text:0000A06C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000A073                 push    1Bh
.text:0000A075                 mov     eax, [ebp+arg_0]
.text:0000A078                 mov     ecx, [eax+21Ch]
.text:0000A07E                 push    ecx
.text:0000A07F                 call    _conf_get_int
.text:0000A084                 add     esp, 8
.text:0000A087                 test    eax, eax
.text:0000A089                 jz      short loc_A09D
.text:0000A08B                 call    _agent_exists
.text:0000A090                 test    eax, eax
.text:0000A092                 jz      short loc_A09D
.text:0000A094                 mov     [ebp+var_4], 1
.text:0000A09B                 jmp     short loc_A0A4
.text:0000A09D ; ---------------------------------------------------------------------------
.text:0000A09D
.text:0000A09D loc_A09D:                               ; CODE XREF: _ssh_agent_forwarding_permitted+21j
.text:0000A09D                                         ; _ssh_agent_forwarding_permitted+2Aj
.text:0000A09D                 mov     [ebp+var_4], 0
.text:0000A0A4
.text:0000A0A4 loc_A0A4:                               ; CODE XREF: _ssh_agent_forwarding_permitted+33j
.text:0000A0A4                 mov     eax, [ebp+var_4]
.text:0000A0A7                 add     esp, 4
.text:0000A0AA                 cmp     ebp, esp
.text:0000A0AC                 call    __RTC_CheckEsp
.text:0000A0B1                 mov     esp, ebp
.text:0000A0B3                 pop     ebp
.text:0000A0B4                 retn
.text:0000A0B4 _ssh_agent_forwarding_permitted endp
.text:0000A0B4
.text:0000A0B4 ; ---------------------------------------------------------------------------
.text:0000A0B5                 align 4
.text:0000A0B8
.text:0000A0B8 ; =============== S U B R O U T I N E =======================================
.text:0000A0B8
.text:0000A0B8 ; Attributes: bp-based frame
.text:0000A0B8
.text:0000A0B8 _do_ssh2_transport proc near            ; CODE XREF: _ssh2_pkt_send_noqueue+F3p
.text:0000A0B8                                         ; _ssh_pkt_defersend+E2p ...
.text:0000A0B8
.text:0000A0B8 var_160         = dword ptr -160h
.text:0000A0B8 var_15C         = dword ptr -15Ch
.text:0000A0B8 var_158         = dword ptr -158h
.text:0000A0B8 var_154         = dword ptr -154h
.text:0000A0B8 var_150         = dword ptr -150h
.text:0000A0B8 var_14C         = dword ptr -14Ch
.text:0000A0B8 var_148         = dword ptr -148h
.text:0000A0B8 var_144         = dword ptr -144h
.text:0000A0B8 var_140         = dword ptr -140h
.text:0000A0B8 var_138         = byte ptr -138h
.text:0000A0B8 var_F0          = byte ptr -0F0h
.text:0000A0B8 var_AC          = dword ptr -0ACh
.text:0000A0B8 var_A8          = dword ptr -0A8h
.text:0000A0B8 Size            = dword ptr -0A0h
.text:0000A0B8 var_98          = dword ptr -98h
.text:0000A0B8 var_94          = dword ptr -94h
.text:0000A0B8 var_90          = dword ptr -90h
.text:0000A0B8 var_8C          = dword ptr -8Ch
.text:0000A0B8 var_88          = dword ptr -88h
.text:0000A0B8 var_84          = dword ptr -84h
.text:0000A0B8 var_80          = dword ptr -80h
.text:0000A0B8 Src             = dword ptr -78h
.text:0000A0B8 var_70          = dword ptr -70h
.text:0000A0B8 var_6C          = dword ptr -6Ch
.text:0000A0B8 var_68          = dword ptr -68h
.text:0000A0B8 var_64          = dword ptr -64h
.text:0000A0B8 var_60          = dword ptr -60h
.text:0000A0B8 var_5C          = dword ptr -5Ch
.text:0000A0B8 var_58          = dword ptr -58h
.text:0000A0B8 var_54          = dword ptr -54h
.text:0000A0B8 var_4C          = dword ptr -4Ch
.text:0000A0B8 var_44          = dword ptr -44h
.text:0000A0B8 var_40          = dword ptr -40h
.text:0000A0B8 Str             = dword ptr -3Ch
.text:0000A0B8 Buf2            = dword ptr -34h
.text:0000A0B8 var_2C          = dword ptr -2Ch
.text:0000A0B8 var_28          = dword ptr -28h
.text:0000A0B8 var_24          = dword ptr -24h
.text:0000A0B8 var_20          = dword ptr -20h
.text:0000A0B8 var_1C          = dword ptr -1Ch
.text:0000A0B8 var_18          = dword ptr -18h
.text:0000A0B8 var_14          = dword ptr -14h
.text:0000A0B8 var_10          = dword ptr -10h
.text:0000A0B8 var_C           = dword ptr -0Ch
.text:0000A0B8 var_8           = dword ptr -8
.text:0000A0B8 var_4           = dword ptr -4
.text:0000A0B8 arg_0           = dword ptr  8
.text:0000A0B8 arg_4           = dword ptr  0Ch
.text:0000A0B8 arg_8           = dword ptr  10h
.text:0000A0B8 arg_C           = dword ptr  14h
.text:0000A0B8
.text:0000A0B8                 push    ebp
.text:0000A0B9                 mov     ebp, esp
.text:0000A0BB                 sub     esp, 160h
.text:0000A0C1                 push    esi
.text:0000A0C2                 push    edi
.text:0000A0C3                 lea     edi, [ebp+var_160]
.text:0000A0C9                 mov     ecx, 58h ; 'X'
.text:0000A0CE                 mov     eax, 0CCCCCCCCh
.text:0000A0D3                 rep stosd
.text:0000A0D5                 mov     eax, dword ptr ds:___security_cookie
.text:0000A0DA                 xor     eax, ebp
.text:0000A0DC                 mov     [ebp+var_4], eax
.text:0000A0DF                 mov     eax, [ebp+arg_4]
.text:0000A0E2                 mov     [ebp+var_8], eax
.text:0000A0E5                 mov     ecx, [ebp+arg_0]
.text:0000A0E8                 cmp     dword ptr [ecx+1A0h], 0
.text:0000A0EF                 jnz     short loc_A127
.text:0000A0F1                 push    0FCh ; 'n'
.text:0000A0F6                 push    1
.text:0000A0F8                 call    _safemalloc
.text:0000A0FD                 add     esp, 8
.text:0000A100                 mov     [ebp+var_140], eax
.text:0000A106                 mov     edx, [ebp+arg_0]
.text:0000A109                 mov     eax, [ebp+var_140]
.text:0000A10F                 mov     [edx+1A0h], eax
.text:0000A115                 mov     ecx, [ebp+var_140]
.text:0000A11B                 mov     [ebp+var_C], ecx
.text:0000A11E                 mov     edx, [ebp+var_C]
.text:0000A121                 mov     dword ptr [edx], 0
.text:0000A127
.text:0000A127 loc_A127:                               ; CODE XREF: _do_ssh2_transport+37j
.text:0000A127                 mov     eax, [ebp+arg_0]
.text:0000A12A                 mov     ecx, [eax+1A0h]
.text:0000A130                 mov     [ebp+var_C], ecx
.text:0000A133                 mov     edx, [ebp+arg_0]
.text:0000A136                 cmp     dword ptr [edx+0C4h], 0
.text:0000A13D                 jz      short loc_A156
.text:0000A13F                 push    17A8h           ; Line
.text:0000A144                 push    offset $SG91548 ; "..\\..\\..\\ssh.c"
.text:0000A149                 push    offset $SG91549 ; "!ssh->bare_connection"
.text:0000A14E                 call    __wassert
.text:0000A153 ; ---------------------------------------------------------------------------
.text:0000A153                 add     esp, 0Ch
.text:0000A156
.text:0000A156 loc_A156:                               ; CODE XREF: _do_ssh2_transport+85j
.text:0000A156                 mov     ecx, [ebp+var_C]
.text:0000A159                 mov     [ebp+var_10], ecx
.text:0000A15C                 mov     edx, [ebp+var_C]
.text:0000A15F                 mov     eax, [edx]
.text:0000A161                 mov     [ebp+var_144], eax
.text:0000A167                 cmp     [ebp+var_144], 19C6h
.text:0000A171                 jg      loc_A1FA
.text:0000A177                 cmp     [ebp+var_144], 19C6h
.text:0000A181                 jz      loc_BA66
.text:0000A187                 cmp     [ebp+var_144], 1976h
.text:0000A191                 jg      short loc_A1D5
.text:0000A193                 cmp     [ebp+var_144], 1976h
.text:0000A19D                 jz      loc_B77F
.text:0000A1A3                 cmp     [ebp+var_144], 0
.text:0000A1AA                 jz      loc_A270
.text:0000A1B0                 cmp     [ebp+var_144], 1884h
.text:0000A1BA                 jz      loc_ABAD
.text:0000A1C0                 cmp     [ebp+var_144], 195Dh
.text:0000A1CA                 jz      loc_B680
.text:0000A1D0                 jmp     loc_D14C
.text:0000A1D5 ; ---------------------------------------------------------------------------
.text:0000A1D5
.text:0000A1D5 loc_A1D5:                               ; CODE XREF: _do_ssh2_transport+D9j
.text:0000A1D5                 cmp     [ebp+var_144], 198Fh
.text:0000A1DF                 jz      loc_B87E
.text:0000A1E5                 cmp     [ebp+var_144], 19A1h
.text:0000A1EF                 jz      loc_B92F
.text:0000A1F5                 jmp     loc_D14C
.text:0000A1FA ; ---------------------------------------------------------------------------
.text:0000A1FA
.text:0000A1FA loc_A1FA:                               ; CODE XREF: _do_ssh2_transport+B9j
.text:0000A1FA                 cmp     [ebp+var_144], 1AA5h
.text:0000A204                 jg      short loc_A24B
.text:0000A206                 cmp     [ebp+var_144], 1AA5h
.text:0000A210                 jz      loc_C680
.text:0000A216                 cmp     [ebp+var_144], 19E9h
.text:0000A220                 jz      loc_BC55
.text:0000A226                 cmp     [ebp+var_144], 1A1Ch
.text:0000A230                 jz      loc_BF51
.text:0000A236                 cmp     [ebp+var_144], 1A6Eh
.text:0000A240                 jz      loc_C37E
.text:0000A246                 jmp     loc_D14C
.text:0000A24B ; ---------------------------------------------------------------------------
.text:0000A24B
.text:0000A24B loc_A24B:                               ; CODE XREF: _do_ssh2_transport+14Cj
.text:0000A24B                 cmp     [ebp+var_144], 1B1Ah
.text:0000A255                 jz      loc_CB9E
.text:0000A25B                 cmp     [ebp+var_144], 1B83h
.text:0000A265                 jz      loc_D021
.text:0000A26B                 jmp     loc_D14C
.text:0000A270 ; ---------------------------------------------------------------------------
.text:0000A270
.text:0000A270 loc_A270:                               ; CODE XREF: _do_ssh2_transport+F2j
.text:0000A270                 mov     ecx, [ebp+var_C]
.text:0000A273                 mov     dword ptr [ecx+48h], 0
.text:0000A27A                 mov     edx, [ebp+var_C]
.text:0000A27D                 mov     dword ptr [edx+44h], 0
.text:0000A284                 mov     eax, [ebp+var_C]
.text:0000A287                 mov     dword ptr [eax+50h], 0
.text:0000A28E                 mov     ecx, [ebp+var_C]
.text:0000A291                 mov     dword ptr [ecx+4Ch], 0
.text:0000A298                 mov     edx, [ebp+var_C]
.text:0000A29B                 mov     dword ptr [edx+58h], 0
.text:0000A2A2                 mov     eax, [ebp+var_C]
.text:0000A2A5                 mov     dword ptr [eax+54h], 0
.text:0000A2AC                 mov     ecx, [ebp+var_C]
.text:0000A2AF                 mov     dword ptr [ecx+0E8h], 0
.text:0000A2B9                 mov     edx, [ebp+var_C]
.text:0000A2BC                 mov     dword ptr [edx+0E4h], 0
.text:0000A2C6                 mov     eax, [ebp+var_C]
.text:0000A2C9                 mov     dword ptr [eax+0DCh], 0
.text:0000A2D3                 mov     ecx, [ebp+var_C]
.text:0000A2D6                 mov     dword ptr [ecx+0E0h], 0
.text:0000A2E0                 mov     edx, [ebp+arg_0]
.text:0000A2E3                 mov     eax, [edx+50h]
.text:0000A2E6                 and     eax, 2
.text:0000A2E9                 jz      short loc_A301
.text:0000A2EB                 mov     ecx, [ebp+var_C]
.text:0000A2EE                 mov     dword ptr [ecx+3Ch], offset _buggymacs
.text:0000A2F5                 mov     edx, [ebp+var_C]
.text:0000A2F8                 mov     dword ptr [edx+40h], 3
.text:0000A2FF                 jmp     short $begin_key_exchange$91561
.text:0000A301 ; ---------------------------------------------------------------------------
.text:0000A301
.text:0000A301 loc_A301:                               ; CODE XREF: _do_ssh2_transport+231j
.text:0000A301                 mov     eax, [ebp+var_C]
.text:0000A304                 mov     dword ptr [eax+3Ch], offset _macs
.text:0000A30B                 mov     ecx, [ebp+var_C]
.text:0000A30E                 mov     dword ptr [ecx+40h], 4
.text:0000A315
.text:0000A315 $begin_key_exchange$91561:              ; CODE XREF: _do_ssh2_transport+247j
.text:0000A315                                         ; _do_ssh2_transport+2E9Bj ...
.text:0000A315                 mov     edx, [ebp+arg_0]
.text:0000A318                 mov     dword ptr [edx+158h], 0
.text:0000A322                 mov     eax, [ebp+var_C]
.text:0000A325                 mov     dword ptr [eax+0A4h], 0
.text:0000A32F                 mov     [ebp+var_14], 0
.text:0000A336                 jmp     short loc_A341
.text:0000A338 ; ---------------------------------------------------------------------------
.text:0000A338
.text:0000A338 loc_A338:                               ; CODE XREF: _do_ssh2_transport:loc_A473j
.text:0000A338                 mov     ecx, [ebp+var_14]
.text:0000A33B                 add     ecx, 1
.text:0000A33E                 mov     [ebp+var_14], ecx
.text:0000A341
.text:0000A341 loc_A341:                               ; CODE XREF: _do_ssh2_transport+27Ej
.text:0000A341                 cmp     [ebp+var_14], 5
.text:0000A345                 jge     loc_A478
.text:0000A34B                 mov     edx, [ebp+var_14]
.text:0000A34E                 push    edx
.text:0000A34F                 push    17h
.text:0000A351                 mov     eax, [ebp+arg_0]
.text:0000A354                 mov     ecx, [eax+21Ch]
.text:0000A35A                 push    ecx
.text:0000A35B                 call    _conf_get_int_int
.text:0000A360                 add     esp, 0Ch
.text:0000A363                 mov     [ebp+var_148], eax
.text:0000A369                 cmp     [ebp+var_148], 4 ; switch 5 cases
.text:0000A370                 ja      loc_A473        ; jumptable 0000A37C default case
.text:0000A376                 mov     edx, [ebp+var_148]
.text:0000A37C                 jmp     ds:$LN435[edx*4] ; switch jump
.text:0000A383 ; ---------------------------------------------------------------------------
.text:0000A383
.text:0000A383 $LN387:                                 ; CODE XREF: _do_ssh2_transport+2C4j
.text:0000A383                                         ; DATA XREF: .text:$LN435o
.text:0000A383                 mov     eax, [ebp+var_C] ; jumptable 0000A37C case 3
.text:0000A386                 mov     ecx, [eax+0A4h]
.text:0000A38C                 mov     edx, [ebp+var_C]
.text:0000A38F                 mov     dword ptr [edx+ecx*4+0A8h], offset _ssh_diffiehellman_gex
.text:0000A39A                 mov     eax, [ebp+var_C]
.text:0000A39D                 mov     ecx, [eax+0A4h]
.text:0000A3A3                 add     ecx, 1
.text:0000A3A6                 mov     edx, [ebp+var_C]
.text:0000A3A9                 mov     [edx+0A4h], ecx
.text:0000A3AF                 jmp     loc_A473        ; jumptable 0000A37C default case
.text:0000A3B4 ; ---------------------------------------------------------------------------
.text:0000A3B4
.text:0000A3B4 $LN386:                                 ; CODE XREF: _do_ssh2_transport+2C4j
.text:0000A3B4                                         ; DATA XREF: .text:$LN435o
.text:0000A3B4                 mov     eax, [ebp+var_C] ; jumptable 0000A37C case 2
.text:0000A3B7                 mov     ecx, [eax+0A4h]
.text:0000A3BD                 mov     edx, [ebp+var_C]
.text:0000A3C0                 mov     dword ptr [edx+ecx*4+0A8h], offset _ssh_diffiehellman_group14
.text:0000A3CB                 mov     eax, [ebp+var_C]
.text:0000A3CE                 mov     ecx, [eax+0A4h]
.text:0000A3D4                 add     ecx, 1
.text:0000A3D7                 mov     edx, [ebp+var_C]
.text:0000A3DA                 mov     [edx+0A4h], ecx
.text:0000A3E0                 jmp     loc_A473        ; jumptable 0000A37C default case
.text:0000A3E5 ; ---------------------------------------------------------------------------
.text:0000A3E5
.text:0000A3E5 $LN385:                                 ; CODE XREF: _do_ssh2_transport+2C4j
.text:0000A3E5                                         ; DATA XREF: .text:$LN435o
.text:0000A3E5                 mov     eax, [ebp+var_C] ; jumptable 0000A37C case 1
.text:0000A3E8                 mov     ecx, [eax+0A4h]
.text:0000A3EE                 mov     edx, [ebp+var_C]
.text:0000A3F1                 mov     dword ptr [edx+ecx*4+0A8h], offset _ssh_diffiehellman_group1
.text:0000A3FC                 mov     eax, [ebp+var_C]
.text:0000A3FF                 mov     ecx, [eax+0A4h]
.text:0000A405                 add     ecx, 1
.text:0000A408                 mov     edx, [ebp+var_C]
.text:0000A40B                 mov     [edx+0A4h], ecx
.text:0000A411                 jmp     short loc_A473  ; jumptable 0000A37C default case
.text:0000A413 ; ---------------------------------------------------------------------------
.text:0000A413
.text:0000A413 $LN384:                                 ; CODE XREF: _do_ssh2_transport+2C4j
.text:0000A413                                         ; DATA XREF: .text:$LN435o
.text:0000A413                 mov     eax, [ebp+var_C] ; jumptable 0000A37C case 4
.text:0000A416                 mov     ecx, [eax+0A4h]
.text:0000A41C                 mov     edx, [ebp+var_C]
.text:0000A41F                 mov     dword ptr [edx+ecx*4+0A8h], offset _ssh_rsa_kex
.text:0000A42A                 mov     eax, [ebp+var_C]
.text:0000A42D                 mov     ecx, [eax+0A4h]
.text:0000A433                 add     ecx, 1
.text:0000A436                 mov     edx, [ebp+var_C]
.text:0000A439                 mov     [edx+0A4h], ecx
.text:0000A43F                 jmp     short loc_A473  ; jumptable 0000A37C default case
.text:0000A441 ; ---------------------------------------------------------------------------
.text:0000A441
.text:0000A441 $LN383:                                 ; CODE XREF: _do_ssh2_transport+2C4j
.text:0000A441                                         ; DATA XREF: .text:$LN435o
.text:0000A441                 cmp     [ebp+var_14], 4 ; jumptable 0000A37C case 0
.text:0000A445                 jge     short loc_A473  ; jumptable 0000A37C default case
.text:0000A447                 mov     eax, [ebp+var_C]
.text:0000A44A                 mov     ecx, [eax+0A4h]
.text:0000A450                 mov     edx, [ebp+var_C]
.text:0000A453                 mov     dword ptr [edx+ecx*4+0A8h], 0
.text:0000A45E                 mov     eax, [ebp+var_C]
.text:0000A461                 mov     ecx, [eax+0A4h]
.text:0000A467                 add     ecx, 1
.text:0000A46A                 mov     edx, [ebp+var_C]
.text:0000A46D                 mov     [edx+0A4h], ecx
.text:0000A473
.text:0000A473 loc_A473:                               ; CODE XREF: _do_ssh2_transport+2B8j
.text:0000A473                                         ; _do_ssh2_transport+2F7j ...
.text:0000A473                 jmp     loc_A338        ; jumptable 0000A37C default case
.text:0000A478 ; ---------------------------------------------------------------------------
.text:0000A478
.text:0000A478 loc_A478:                               ; CODE XREF: _do_ssh2_transport+28Dj
.text:0000A478                 mov     eax, [ebp+var_C]
.text:0000A47B                 mov     dword ptr [eax+0BCh], 0
.text:0000A485                 mov     [ebp+var_14], 0
.text:0000A48C                 jmp     short loc_A497
.text:0000A48E ; ---------------------------------------------------------------------------
.text:0000A48E
.text:0000A48E loc_A48E:                               ; CODE XREF: _do_ssh2_transport:loc_A612j
.text:0000A48E                 mov     ecx, [ebp+var_14]
.text:0000A491                 add     ecx, 1
.text:0000A494                 mov     [ebp+var_14], ecx
.text:0000A497
.text:0000A497 loc_A497:                               ; CODE XREF: _do_ssh2_transport+3D4j
.text:0000A497                 cmp     [ebp+var_14], 6
.text:0000A49B                 jge     loc_A617
.text:0000A4A1                 mov     edx, [ebp+var_14]
.text:0000A4A4                 push    edx
.text:0000A4A5                 push    1Dh
.text:0000A4A7                 mov     eax, [ebp+arg_0]
.text:0000A4AA                 mov     ecx, [eax+21Ch]
.text:0000A4B0                 push    ecx
.text:0000A4B1                 call    _conf_get_int_int
.text:0000A4B6                 add     esp, 0Ch
.text:0000A4B9                 mov     [ebp+var_14C], eax
.text:0000A4BF                 cmp     [ebp+var_14C], 5 ; switch 6 cases
.text:0000A4C6                 ja      loc_A612        ; jumptable 0000A4D2 default case
.text:0000A4CC                 mov     edx, [ebp+var_14C]
.text:0000A4D2                 jmp     ds:$LN436[edx*4] ; switch jump
.text:0000A4D9 ; ---------------------------------------------------------------------------
.text:0000A4D9
.text:0000A4D9 $LN376:                                 ; CODE XREF: _do_ssh2_transport+41Aj
.text:0000A4D9                                         ; DATA XREF: .text:$LN436o
.text:0000A4D9                 mov     eax, [ebp+var_C] ; jumptable 0000A4D2 case 2
.text:0000A4DC                 mov     ecx, [eax+0BCh]
.text:0000A4E2                 mov     edx, [ebp+var_C]
.text:0000A4E5                 mov     dword ptr [edx+ecx*4+0C0h], offset _ssh2_blowfish
.text:0000A4F0                 mov     eax, [ebp+var_C]
.text:0000A4F3                 mov     ecx, [eax+0BCh]
.text:0000A4F9                 add     ecx, 1
.text:0000A4FC                 mov     edx, [ebp+var_C]
.text:0000A4FF                 mov     [edx+0BCh], ecx
.text:0000A505                 jmp     loc_A612        ; jumptable 0000A4D2 default case
.text:0000A50A ; ---------------------------------------------------------------------------
.text:0000A50A
.text:0000A50A $LN375:                                 ; CODE XREF: _do_ssh2_transport+41Aj
.text:0000A50A                                         ; DATA XREF: .text:$LN436o
.text:0000A50A                 push    20h ; ' '       ; jumptable 0000A4D2 case 4
.text:0000A50C                 mov     eax, [ebp+arg_0]
.text:0000A50F                 mov     ecx, [eax+21Ch]
.text:0000A515                 push    ecx
.text:0000A516                 call    _conf_get_int
.text:0000A51B                 add     esp, 8
.text:0000A51E                 test    eax, eax
.text:0000A520                 jz      short loc_A54E
.text:0000A522                 mov     edx, [ebp+var_C]
.text:0000A525                 mov     eax, [edx+0BCh]
.text:0000A52B                 mov     ecx, [ebp+var_C]
.text:0000A52E                 mov     dword ptr [ecx+eax*4+0C0h], offset _ssh2_des
.text:0000A539                 mov     edx, [ebp+var_C]
.text:0000A53C                 mov     eax, [edx+0BCh]
.text:0000A542                 add     eax, 1
.text:0000A545                 mov     ecx, [ebp+var_C]
.text:0000A548                 mov     [ecx+0BCh], eax
.text:0000A54E
.text:0000A54E loc_A54E:                               ; CODE XREF: _do_ssh2_transport+468j
.text:0000A54E                 jmp     loc_A612        ; jumptable 0000A4D2 default case
.text:0000A553 ; ---------------------------------------------------------------------------
.text:0000A553
.text:0000A553 $LN373:                                 ; CODE XREF: _do_ssh2_transport+41Aj
.text:0000A553                                         ; DATA XREF: .text:$LN436o
.text:0000A553                 mov     edx, [ebp+var_C] ; jumptable 0000A4D2 case 1
.text:0000A556                 mov     eax, [edx+0BCh]
.text:0000A55C                 mov     ecx, [ebp+var_C]
.text:0000A55F                 mov     dword ptr [ecx+eax*4+0C0h], offset _ssh2_3des
.text:0000A56A                 mov     edx, [ebp+var_C]
.text:0000A56D                 mov     eax, [edx+0BCh]
.text:0000A573                 add     eax, 1
.text:0000A576                 mov     ecx, [ebp+var_C]
.text:0000A579                 mov     [ecx+0BCh], eax
.text:0000A57F                 jmp     loc_A612        ; jumptable 0000A4D2 default case
.text:0000A584 ; ---------------------------------------------------------------------------
.text:0000A584
.text:0000A584 $LN372:                                 ; CODE XREF: _do_ssh2_transport+41Aj
.text:0000A584                                         ; DATA XREF: .text:$LN436o
.text:0000A584                 mov     edx, [ebp+var_C] ; jumptable 0000A4D2 case 3
.text:0000A587                 mov     eax, [edx+0BCh]
.text:0000A58D                 mov     ecx, [ebp+var_C]
.text:0000A590                 mov     dword ptr [ecx+eax*4+0C0h], offset _ssh2_aes
.text:0000A59B                 mov     edx, [ebp+var_C]
.text:0000A59E                 mov     eax, [edx+0BCh]
.text:0000A5A4                 add     eax, 1
.text:0000A5A7                 mov     ecx, [ebp+var_C]
.text:0000A5AA                 mov     [ecx+0BCh], eax
.text:0000A5B0                 jmp     short loc_A612  ; jumptable 0000A4D2 default case
.text:0000A5B2 ; ---------------------------------------------------------------------------
.text:0000A5B2
.text:0000A5B2 $LN371:                                 ; CODE XREF: _do_ssh2_transport+41Aj
.text:0000A5B2                                         ; DATA XREF: .text:$LN436o
.text:0000A5B2                 mov     edx, [ebp+var_C] ; jumptable 0000A4D2 case 5
.text:0000A5B5                 mov     eax, [edx+0BCh]
.text:0000A5BB                 mov     ecx, [ebp+var_C]
.text:0000A5BE                 mov     dword ptr [ecx+eax*4+0C0h], offset _ssh2_arcfour
.text:0000A5C9                 mov     edx, [ebp+var_C]
.text:0000A5CC                 mov     eax, [edx+0BCh]
.text:0000A5D2                 add     eax, 1
.text:0000A5D5                 mov     ecx, [ebp+var_C]
.text:0000A5D8                 mov     [ecx+0BCh], eax
.text:0000A5DE                 jmp     short loc_A612  ; jumptable 0000A4D2 default case
.text:0000A5E0 ; ---------------------------------------------------------------------------
.text:0000A5E0
.text:0000A5E0 $LN370:                                 ; CODE XREF: _do_ssh2_transport+41Aj
.text:0000A5E0                                         ; DATA XREF: .text:$LN436o
.text:0000A5E0                 cmp     [ebp+var_14], 5 ; jumptable 0000A4D2 case 0
.text:0000A5E4                 jge     short loc_A612  ; jumptable 0000A4D2 default case
.text:0000A5E6                 mov     edx, [ebp+var_C]
.text:0000A5E9                 mov     eax, [edx+0BCh]
.text:0000A5EF                 mov     ecx, [ebp+var_C]
.text:0000A5F2                 mov     dword ptr [ecx+eax*4+0C0h], 0
.text:0000A5FD                 mov     edx, [ebp+var_C]
.text:0000A600                 mov     eax, [edx+0BCh]
.text:0000A606                 add     eax, 1
.text:0000A609                 mov     ecx, [ebp+var_C]
.text:0000A60C                 mov     [ecx+0BCh], eax
.text:0000A612
.text:0000A612 loc_A612:                               ; CODE XREF: _do_ssh2_transport+40Ej
.text:0000A612                                         ; _do_ssh2_transport+44Dj ...
.text:0000A612                 jmp     loc_A48E        ; jumptable 0000A4D2 default case
.text:0000A617 ; ---------------------------------------------------------------------------
.text:0000A617
.text:0000A617 loc_A617:                               ; CODE XREF: _do_ssh2_transport+3E3j
.text:0000A617                 push    16h
.text:0000A619                 mov     edx, [ebp+arg_0]
.text:0000A61C                 mov     eax, [edx+21Ch]
.text:0000A622                 push    eax
.text:0000A623                 call    _conf_get_int
.text:0000A628                 add     esp, 8
.text:0000A62B                 test    eax, eax
.text:0000A62D                 jz      short loc_A63E
.text:0000A62F                 mov     ecx, [ebp+var_C]
.text:0000A632                 mov     dword ptr [ecx+0D8h], offset _ssh_zlib
.text:0000A63C                 jmp     short loc_A64B
.text:0000A63E ; ---------------------------------------------------------------------------
.text:0000A63E
.text:0000A63E loc_A63E:                               ; CODE XREF: _do_ssh2_transport+575j
.text:0000A63E                 mov     edx, [ebp+var_C]
.text:0000A641                 mov     dword ptr [edx+0D8h], offset _ssh_comp_none
.text:0000A64B
.text:0000A64B loc_A64B:                               ; CODE XREF: _do_ssh2_transport+584j
.text:0000A64B                 mov     eax, [ebp+arg_0]
.text:0000A64E                 mov     dword ptr [eax+138h], 1
.text:0000A658                 mov     ecx, [ebp+arg_0]
.text:0000A65B                 mov     dword ptr [ecx+668h], 1
.text:0000A665                 push    14h
.text:0000A667                 call    _ssh2_pkt_init
.text:0000A66C                 add     esp, 4
.text:0000A66F                 mov     edx, [ebp+var_C]
.text:0000A672                 mov     [edx+0ECh], eax
.text:0000A678                 mov     [ebp+var_14], 0
.text:0000A67F                 jmp     short loc_A68A
.text:0000A681 ; ---------------------------------------------------------------------------
.text:0000A681
.text:0000A681 loc_A681:                               ; CODE XREF: _do_ssh2_transport+5F0j
.text:0000A681                 mov     eax, [ebp+var_14]
.text:0000A684                 add     eax, 1
.text:0000A687                 mov     [ebp+var_14], eax
.text:0000A68A
.text:0000A68A loc_A68A:                               ; CODE XREF: _do_ssh2_transport+5C7j
.text:0000A68A                 cmp     [ebp+var_14], 10h
.text:0000A68E                 jge     short loc_A6AA
.text:0000A690                 call    _random_byte
.text:0000A695                 push    eax             ; Src
.text:0000A696                 mov     ecx, [ebp+var_C]
.text:0000A699                 mov     edx, [ecx+0ECh]
.text:0000A69F                 push    edx             ; int
.text:0000A6A0                 call    _ssh_pkt_addbyte
.text:0000A6A5                 add     esp, 8
.text:0000A6A8                 jmp     short loc_A681
.text:0000A6AA ; ---------------------------------------------------------------------------
.text:0000A6AA
.text:0000A6AA loc_A6AA:                               ; CODE XREF: _do_ssh2_transport+5D6j
.text:0000A6AA                 mov     eax, [ebp+var_C]
.text:0000A6AD                 mov     ecx, [eax+0ECh]
.text:0000A6B3                 push    ecx
.text:0000A6B4                 call    _ssh_pkt_addstring_start
.text:0000A6B9                 add     esp, 4
.text:0000A6BC                 mov     [ebp+var_20], 0
.text:0000A6C3                 mov     [ebp+var_14], 0
.text:0000A6CA                 jmp     short loc_A6D5
.text:0000A6CC ; ---------------------------------------------------------------------------
.text:0000A6CC
.text:0000A6CC loc_A6CC:                               ; CODE XREF: _do_ssh2_transport+645j
.text:0000A6CC                                         ; _do_ssh2_transport:loc_A762j
.text:0000A6CC                 mov     edx, [ebp+var_14]
.text:0000A6CF                 add     edx, 1
.text:0000A6D2                 mov     [ebp+var_14], edx
.text:0000A6D5
.text:0000A6D5 loc_A6D5:                               ; CODE XREF: _do_ssh2_transport+612j
.text:0000A6D5                 mov     eax, [ebp+var_C]
.text:0000A6D8                 mov     ecx, [ebp+var_14]
.text:0000A6DB                 cmp     ecx, [eax+0A4h]
.text:0000A6E1                 jge     loc_A767
.text:0000A6E7                 mov     edx, [ebp+var_14]
.text:0000A6EA                 mov     eax, [ebp+var_C]
.text:0000A6ED                 mov     ecx, [eax+edx*4+0A8h]
.text:0000A6F4                 mov     [ebp+var_24], ecx
.text:0000A6F7                 cmp     [ebp+var_24], 0
.text:0000A6FB                 jnz     short loc_A6FF
.text:0000A6FD                 jmp     short loc_A6CC
.text:0000A6FF ; ---------------------------------------------------------------------------
.text:0000A6FF
.text:0000A6FF loc_A6FF:                               ; CODE XREF: _do_ssh2_transport+643j
.text:0000A6FF                 mov     [ebp+var_18], 0
.text:0000A706                 jmp     short loc_A711
.text:0000A708 ; ---------------------------------------------------------------------------
.text:0000A708
.text:0000A708 loc_A708:                               ; CODE XREF: _do_ssh2_transport+6A8j
.text:0000A708                 mov     edx, [ebp+var_18]
.text:0000A70B                 add     edx, 1
.text:0000A70E                 mov     [ebp+var_18], edx
.text:0000A711
.text:0000A711 loc_A711:                               ; CODE XREF: _do_ssh2_transport+64Ej
.text:0000A711                 mov     eax, [ebp+var_24]
.text:0000A714                 mov     ecx, [ebp+var_18]
.text:0000A717                 cmp     ecx, [eax]
.text:0000A719                 jge     short loc_A762
.text:0000A71B                 cmp     [ebp+var_20], 0
.text:0000A71F                 jz      short loc_A738
.text:0000A721                 push    offset $SG91611 ; Str
.text:0000A726                 mov     edx, [ebp+var_C]
.text:0000A729                 mov     eax, [edx+0ECh]
.text:0000A72F                 push    eax             ; int
.text:0000A730                 call    _ssh_pkt_addstring_str
.text:0000A735                 add     esp, 8
.text:0000A738
.text:0000A738 loc_A738:                               ; CODE XREF: _do_ssh2_transport+667j
.text:0000A738                 mov     ecx, [ebp+var_24]
.text:0000A73B                 mov     edx, [ecx+4]
.text:0000A73E                 mov     eax, [ebp+var_18]
.text:0000A741                 mov     ecx, [edx+eax*4]
.text:0000A744                 mov     edx, [ecx]
.text:0000A746                 push    edx             ; Str
.text:0000A747                 mov     eax, [ebp+var_C]
.text:0000A74A                 mov     ecx, [eax+0ECh]
.text:0000A750                 push    ecx             ; int
.text:0000A751                 call    _ssh_pkt_addstring_str
.text:0000A756                 add     esp, 8
.text:0000A759                 mov     [ebp+var_20], 1
.text:0000A760                 jmp     short loc_A708
.text:0000A762 ; ---------------------------------------------------------------------------
.text:0000A762
.text:0000A762 loc_A762:                               ; CODE XREF: _do_ssh2_transport+661j
.text:0000A762                 jmp     loc_A6CC
.text:0000A767 ; ---------------------------------------------------------------------------
.text:0000A767
.text:0000A767 loc_A767:                               ; CODE XREF: _do_ssh2_transport+629j
.text:0000A767                 mov     edx, [ebp+var_C]
.text:0000A76A                 cmp     dword ptr [edx+0E4h], 0
.text:0000A771                 jnz     short loc_A7DE
.text:0000A773                 mov     eax, [ebp+var_C]
.text:0000A776                 mov     ecx, [eax+0ECh]
.text:0000A77C                 push    ecx
.text:0000A77D                 call    _ssh_pkt_addstring_start
.text:0000A782                 add     esp, 4
.text:0000A785                 mov     [ebp+var_14], 0
.text:0000A78C                 jmp     short loc_A797
.text:0000A78E ; ---------------------------------------------------------------------------
.text:0000A78E
.text:0000A78E loc_A78E:                               ; CODE XREF: _do_ssh2_transport:loc_A7DAj
.text:0000A78E                 mov     edx, [ebp+var_14]
.text:0000A791                 add     edx, 1
.text:0000A794                 mov     [ebp+var_14], edx
.text:0000A797
.text:0000A797 loc_A797:                               ; CODE XREF: _do_ssh2_transport+6D4j
.text:0000A797                 cmp     [ebp+var_14], 2
.text:0000A79B                 jnb     short loc_A7DC
.text:0000A79D                 mov     eax, [ebp+var_14]
.text:0000A7A0                 mov     ecx, _hostkey_algs[eax*4]
.text:0000A7A7                 mov     edx, [ecx+30h]
.text:0000A7AA                 push    edx             ; Str
.text:0000A7AB                 mov     eax, [ebp+var_C]
.text:0000A7AE                 mov     ecx, [eax+0ECh]
.text:0000A7B4                 push    ecx             ; int
.text:0000A7B5                 call    _ssh_pkt_addstring_str
.text:0000A7BA                 add     esp, 8
.text:0000A7BD                 cmp     [ebp+var_14], 1
.text:0000A7C1                 jnb     short loc_A7DA
.text:0000A7C3                 push    offset $SG91617 ; Str
.text:0000A7C8                 mov     edx, [ebp+var_C]
.text:0000A7CB                 mov     eax, [edx+0ECh]
.text:0000A7D1                 push    eax             ; int
.text:0000A7D2                 call    _ssh_pkt_addstring_str
.text:0000A7D7                 add     esp, 8
.text:0000A7DA
.text:0000A7DA loc_A7DA:                               ; CODE XREF: _do_ssh2_transport+709j
.text:0000A7DA                 jmp     short loc_A78E
.text:0000A7DC ; ---------------------------------------------------------------------------
.text:0000A7DC
.text:0000A7DC loc_A7DC:                               ; CODE XREF: _do_ssh2_transport+6E3j
.text:0000A7DC                 jmp     short loc_A820
.text:0000A7DE ; ---------------------------------------------------------------------------
.text:0000A7DE
.text:0000A7DE loc_A7DE:                               ; CODE XREF: _do_ssh2_transport+6B9j
.text:0000A7DE                 mov     ecx, [ebp+arg_0]
.text:0000A7E1                 cmp     dword ptr [ecx+90h], 0
.text:0000A7E8                 jnz     short loc_A801
.text:0000A7EA                 push    183Ch           ; Line
.text:0000A7EF                 push    offset $SG91620 ; "..\\..\\..\\ssh.c"
.text:0000A7F4                 push    offset $SG91621 ; "ssh->kex"
.text:0000A7F9                 call    __wassert
.text:0000A7FE ; ---------------------------------------------------------------------------
.text:0000A7FE                 add     esp, 0Ch
.text:0000A801
.text:0000A801 loc_A801:                               ; CODE XREF: _do_ssh2_transport+730j
.text:0000A801                 mov     eax, [ebp+arg_0]
.text:0000A804                 mov     ecx, [eax+94h]
.text:0000A80A                 mov     edx, [ecx+30h]
.text:0000A80D                 push    edx             ; Str
.text:0000A80E                 mov     eax, [ebp+var_C]
.text:0000A811                 mov     ecx, [eax+0ECh]
.text:0000A817                 push    ecx             ; int
.text:0000A818                 call    _ssh_pkt_addstring
.text:0000A81D                 add     esp, 8
.text:0000A820
.text:0000A820 loc_A820:                               ; CODE XREF: _do_ssh2_transport:loc_A7DCj
.text:0000A820                 mov     [ebp+var_1C], 0
.text:0000A827                 jmp     short loc_A832
.text:0000A829 ; ---------------------------------------------------------------------------
.text:0000A829
.text:0000A829 loc_A829:                               ; CODE XREF: _do_ssh2_transport:loc_A8FAj
.text:0000A829                 mov     edx, [ebp+var_1C]
.text:0000A82C                 add     edx, 1
.text:0000A82F                 mov     [ebp+var_1C], edx
.text:0000A832
.text:0000A832 loc_A832:                               ; CODE XREF: _do_ssh2_transport+76Fj
.text:0000A832                 cmp     [ebp+var_1C], 2
.text:0000A836                 jge     loc_A8FF
.text:0000A83C                 mov     eax, [ebp+var_C]
.text:0000A83F                 mov     ecx, [eax+0ECh]
.text:0000A845                 push    ecx
.text:0000A846                 call    _ssh_pkt_addstring_start
.text:0000A84B                 add     esp, 4
.text:0000A84E                 mov     [ebp+var_20], 0
.text:0000A855                 mov     [ebp+var_14], 0
.text:0000A85C                 jmp     short loc_A867
.text:0000A85E ; ---------------------------------------------------------------------------
.text:0000A85E
.text:0000A85E loc_A85E:                               ; CODE XREF: _do_ssh2_transport+7D7j
.text:0000A85E                                         ; _do_ssh2_transport:loc_A8F5j
.text:0000A85E                 mov     edx, [ebp+var_14]
.text:0000A861                 add     edx, 1
.text:0000A864                 mov     [ebp+var_14], edx
.text:0000A867
.text:0000A867 loc_A867:                               ; CODE XREF: _do_ssh2_transport+7A4j
.text:0000A867                 mov     eax, [ebp+var_C]
.text:0000A86A                 mov     ecx, [ebp+var_14]
.text:0000A86D                 cmp     ecx, [eax+0BCh]
.text:0000A873                 jge     loc_A8FA
.text:0000A879                 mov     edx, [ebp+var_14]
.text:0000A87C                 mov     eax, [ebp+var_C]
.text:0000A87F                 mov     ecx, [eax+edx*4+0C0h]
.text:0000A886                 mov     [ebp+var_28], ecx
.text:0000A889                 cmp     [ebp+var_28], 0
.text:0000A88D                 jnz     short loc_A891
.text:0000A88F                 jmp     short loc_A85E
.text:0000A891 ; ---------------------------------------------------------------------------
.text:0000A891
.text:0000A891 loc_A891:                               ; CODE XREF: _do_ssh2_transport+7D5j
.text:0000A891                 mov     [ebp+var_18], 0
.text:0000A898                 jmp     short loc_A8A3
.text:0000A89A ; ---------------------------------------------------------------------------
.text:0000A89A
.text:0000A89A loc_A89A:                               ; CODE XREF: _do_ssh2_transport+83Bj
.text:0000A89A                 mov     edx, [ebp+var_18]
.text:0000A89D                 add     edx, 1
.text:0000A8A0                 mov     [ebp+var_18], edx
.text:0000A8A3
.text:0000A8A3 loc_A8A3:                               ; CODE XREF: _do_ssh2_transport+7E0j
.text:0000A8A3                 mov     eax, [ebp+var_28]
.text:0000A8A6                 mov     ecx, [ebp+var_18]
.text:0000A8A9                 cmp     ecx, [eax]
.text:0000A8AB                 jge     short loc_A8F5
.text:0000A8AD                 cmp     [ebp+var_20], 0
.text:0000A8B1                 jz      short loc_A8CA
.text:0000A8B3                 push    offset $SG91634 ; Str
.text:0000A8B8                 mov     edx, [ebp+var_C]
.text:0000A8BB                 mov     eax, [edx+0ECh]
.text:0000A8C1                 push    eax             ; int
.text:0000A8C2                 call    _ssh_pkt_addstring_str
.text:0000A8C7                 add     esp, 8
.text:0000A8CA
.text:0000A8CA loc_A8CA:                               ; CODE XREF: _do_ssh2_transport+7F9j
.text:0000A8CA                 mov     ecx, [ebp+var_28]
.text:0000A8CD                 mov     edx, [ecx+4]
.text:0000A8D0                 mov     eax, [ebp+var_18]
.text:0000A8D3                 mov     ecx, [edx+eax*4]
.text:0000A8D6                 mov     edx, [ecx+18h]
.text:0000A8D9                 push    edx             ; Str
.text:0000A8DA                 mov     eax, [ebp+var_C]
.text:0000A8DD                 mov     ecx, [eax+0ECh]
.text:0000A8E3                 push    ecx             ; int
.text:0000A8E4                 call    _ssh_pkt_addstring_str
.text:0000A8E9                 add     esp, 8
.text:0000A8EC                 mov     [ebp+var_20], 1
.text:0000A8F3                 jmp     short loc_A89A
.text:0000A8F5 ; ---------------------------------------------------------------------------
.text:0000A8F5
.text:0000A8F5 loc_A8F5:                               ; CODE XREF: _do_ssh2_transport+7F3j
.text:0000A8F5                 jmp     loc_A85E
.text:0000A8FA ; ---------------------------------------------------------------------------
.text:0000A8FA
.text:0000A8FA loc_A8FA:                               ; CODE XREF: _do_ssh2_transport+7BBj
.text:0000A8FA                 jmp     loc_A829
.text:0000A8FF ; ---------------------------------------------------------------------------
.text:0000A8FF
.text:0000A8FF loc_A8FF:                               ; CODE XREF: _do_ssh2_transport+77Ej
.text:0000A8FF                 mov     [ebp+var_18], 0
.text:0000A906                 jmp     short loc_A911
.text:0000A908 ; ---------------------------------------------------------------------------
.text:0000A908
.text:0000A908 loc_A908:                               ; CODE XREF: _do_ssh2_transport:loc_A98Fj
.text:0000A908                 mov     edx, [ebp+var_18]
.text:0000A90B                 add     edx, 1
.text:0000A90E                 mov     [ebp+var_18], edx
.text:0000A911
.text:0000A911 loc_A911:                               ; CODE XREF: _do_ssh2_transport+84Ej
.text:0000A911                 cmp     [ebp+var_18], 2
.text:0000A915                 jge     short loc_A994
.text:0000A917                 mov     eax, [ebp+var_C]
.text:0000A91A                 mov     ecx, [eax+0ECh]
.text:0000A920                 push    ecx
.text:0000A921                 call    _ssh_pkt_addstring_start
.text:0000A926                 add     esp, 4
.text:0000A929                 mov     [ebp+var_14], 0
.text:0000A930                 jmp     short loc_A93B
.text:0000A932 ; ---------------------------------------------------------------------------
.text:0000A932
.text:0000A932 loc_A932:                               ; CODE XREF: _do_ssh2_transport:loc_A98Dj
.text:0000A932                 mov     edx, [ebp+var_14]
.text:0000A935                 add     edx, 1
.text:0000A938                 mov     [ebp+var_14], edx
.text:0000A93B
.text:0000A93B loc_A93B:                               ; CODE XREF: _do_ssh2_transport+878j
.text:0000A93B                 mov     eax, [ebp+var_C]
.text:0000A93E                 mov     ecx, [ebp+var_14]
.text:0000A941                 cmp     ecx, [eax+40h]
.text:0000A944                 jge     short loc_A98F
.text:0000A946                 mov     edx, [ebp+var_C]
.text:0000A949                 mov     eax, [edx+3Ch]
.text:0000A94C                 mov     ecx, [ebp+var_14]
.text:0000A94F                 mov     edx, [eax+ecx*4]
.text:0000A952                 mov     eax, [edx+24h]
.text:0000A955                 push    eax             ; Str
.text:0000A956                 mov     ecx, [ebp+var_C]
.text:0000A959                 mov     edx, [ecx+0ECh]
.text:0000A95F                 push    edx             ; int
.text:0000A960                 call    _ssh_pkt_addstring_str
.text:0000A965                 add     esp, 8
.text:0000A968                 mov     eax, [ebp+var_C]
.text:0000A96B                 mov     ecx, [eax+40h]
.text:0000A96E                 sub     ecx, 1
.text:0000A971                 cmp     [ebp+var_14], ecx
.text:0000A974                 jge     short loc_A98D
.text:0000A976                 push    offset $SG91642 ; Str
.text:0000A97B                 mov     edx, [ebp+var_C]
.text:0000A97E                 mov     eax, [edx+0ECh]
.text:0000A984                 push    eax             ; int
.text:0000A985                 call    _ssh_pkt_addstring_str
.text:0000A98A                 add     esp, 8
.text:0000A98D
.text:0000A98D loc_A98D:                               ; CODE XREF: _do_ssh2_transport+8BCj
.text:0000A98D                 jmp     short loc_A932
.text:0000A98F ; ---------------------------------------------------------------------------
.text:0000A98F
.text:0000A98F loc_A98F:                               ; CODE XREF: _do_ssh2_transport+88Cj
.text:0000A98F                 jmp     loc_A908
.text:0000A994 ; ---------------------------------------------------------------------------
.text:0000A994
.text:0000A994 loc_A994:                               ; CODE XREF: _do_ssh2_transport+85Dj
.text:0000A994                 mov     [ebp+var_18], 0
.text:0000A99B                 jmp     short loc_A9A6
.text:0000A99D ; ---------------------------------------------------------------------------
.text:0000A99D
.text:0000A99D loc_A99D:                               ; CODE XREF: _do_ssh2_transport:loc_AAE1j
.text:0000A99D                 mov     ecx, [ebp+var_18]
.text:0000A9A0                 add     ecx, 1
.text:0000A9A3                 mov     [ebp+var_18], ecx
.text:0000A9A6
.text:0000A9A6 loc_A9A6:                               ; CODE XREF: _do_ssh2_transport+8E3j
.text:0000A9A6                 cmp     [ebp+var_18], 2
.text:0000A9AA                 jge     loc_AAE6
.text:0000A9B0                 mov     edx, [ebp+var_C]
.text:0000A9B3                 mov     eax, [edx+0ECh]
.text:0000A9B9                 push    eax
.text:0000A9BA                 call    _ssh_pkt_addstring_start
.text:0000A9BF                 add     esp, 4
.text:0000A9C2                 mov     ecx, [ebp+var_C]
.text:0000A9C5                 mov     edx, [ecx+0D8h]
.text:0000A9CB                 mov     eax, [edx]
.text:0000A9CD                 push    eax             ; Str
.text:0000A9CE                 mov     ecx, [ebp+var_C]
.text:0000A9D1                 mov     edx, [ecx+0ECh]
.text:0000A9D7                 push    edx             ; int
.text:0000A9D8                 call    _ssh_pkt_addstring_str
.text:0000A9DD                 add     esp, 8
.text:0000A9E0                 mov     eax, [ebp+var_C]
.text:0000A9E3                 cmp     dword ptr [eax+0DCh], 0
.text:0000A9EA                 jz      short loc_AA31
.text:0000A9EC                 mov     ecx, [ebp+var_C]
.text:0000A9EF                 mov     edx, [ecx+0D8h]
.text:0000A9F5                 cmp     dword ptr [edx+4], 0
.text:0000A9F9                 jz      short loc_AA31
.text:0000A9FB                 push    offset $SG91648 ; Str
.text:0000AA00                 mov     eax, [ebp+var_C]
.text:0000AA03                 mov     ecx, [eax+0ECh]
.text:0000AA09                 push    ecx             ; int
.text:0000AA0A                 call    _ssh_pkt_addstring_str
.text:0000AA0F                 add     esp, 8
.text:0000AA12                 mov     edx, [ebp+var_C]
.text:0000AA15                 mov     eax, [edx+0D8h]
.text:0000AA1B                 mov     ecx, [eax+4]
.text:0000AA1E                 push    ecx             ; Str
.text:0000AA1F                 mov     edx, [ebp+var_C]
.text:0000AA22                 mov     eax, [edx+0ECh]
.text:0000AA28                 push    eax             ; int
.text:0000AA29                 call    _ssh_pkt_addstring_str
.text:0000AA2E                 add     esp, 8
.text:0000AA31
.text:0000AA31 loc_AA31:                               ; CODE XREF: _do_ssh2_transport+932j
.text:0000AA31                                         ; _do_ssh2_transport+941j
.text:0000AA31                 mov     [ebp+var_14], 0
.text:0000AA38                 jmp     short loc_AA43
.text:0000AA3A ; ---------------------------------------------------------------------------
.text:0000AA3A
.text:0000AA3A loc_AA3A:                               ; CODE XREF: _do_ssh2_transport:loc_AADCj
.text:0000AA3A                 mov     ecx, [ebp+var_14]
.text:0000AA3D                 add     ecx, 1
.text:0000AA40                 mov     [ebp+var_14], ecx
.text:0000AA43
.text:0000AA43 loc_AA43:                               ; CODE XREF: _do_ssh2_transport+980j
.text:0000AA43                 cmp     [ebp+var_14], 2
.text:0000AA47                 jnb     loc_AAE1
.text:0000AA4D                 mov     edx, [ebp+var_14]
.text:0000AA50                 mov     eax, _compressions[edx*4]
.text:0000AA57                 mov     [ebp+var_2C], eax
.text:0000AA5A                 mov     ecx, [ebp+var_C]
.text:0000AA5D                 mov     edx, [ebp+var_2C]
.text:0000AA60                 cmp     edx, [ecx+0D8h]
.text:0000AA66                 jz      short loc_AADC
.text:0000AA68                 push    offset $SG91654 ; Str
.text:0000AA6D                 mov     eax, [ebp+var_C]
.text:0000AA70                 mov     ecx, [eax+0ECh]
.text:0000AA76                 push    ecx             ; int
.text:0000AA77                 call    _ssh_pkt_addstring_str
.text:0000AA7C                 add     esp, 8
.text:0000AA7F                 mov     edx, [ebp+var_2C]
.text:0000AA82                 mov     eax, [edx]
.text:0000AA84                 push    eax             ; Str
.text:0000AA85                 mov     ecx, [ebp+var_C]
.text:0000AA88                 mov     edx, [ecx+0ECh]
.text:0000AA8E                 push    edx             ; int
.text:0000AA8F                 call    _ssh_pkt_addstring_str
.text:0000AA94                 add     esp, 8
.text:0000AA97                 mov     eax, [ebp+var_C]
.text:0000AA9A                 cmp     dword ptr [eax+0DCh], 0
.text:0000AAA1                 jz      short loc_AADC
.text:0000AAA3                 mov     ecx, [ebp+var_2C]
.text:0000AAA6                 cmp     dword ptr [ecx+4], 0
.text:0000AAAA                 jz      short loc_AADC
.text:0000AAAC                 push    offset $SG91656 ; Str
.text:0000AAB1                 mov     edx, [ebp+var_C]
.text:0000AAB4                 mov     eax, [edx+0ECh]
.text:0000AABA                 push    eax             ; int
.text:0000AABB                 call    _ssh_pkt_addstring_str
.text:0000AAC0                 add     esp, 8
.text:0000AAC3                 mov     ecx, [ebp+var_2C]
.text:0000AAC6                 mov     edx, [ecx+4]
.text:0000AAC9                 push    edx             ; Str
.text:0000AACA                 mov     eax, [ebp+var_C]
.text:0000AACD                 mov     ecx, [eax+0ECh]
.text:0000AAD3                 push    ecx             ; int
.text:0000AAD4                 call    _ssh_pkt_addstring_str
.text:0000AAD9                 add     esp, 8
.text:0000AADC
.text:0000AADC loc_AADC:                               ; CODE XREF: _do_ssh2_transport+9AEj
.text:0000AADC                                         ; _do_ssh2_transport+9E9j ...
.text:0000AADC                 jmp     loc_AA3A
.text:0000AAE1 ; ---------------------------------------------------------------------------
.text:0000AAE1
.text:0000AAE1 loc_AAE1:                               ; CODE XREF: _do_ssh2_transport+98Fj
.text:0000AAE1                 jmp     loc_A99D
.text:0000AAE6 ; ---------------------------------------------------------------------------
.text:0000AAE6
.text:0000AAE6 loc_AAE6:                               ; CODE XREF: _do_ssh2_transport+8F2j
.text:0000AAE6                 mov     edx, [ebp+var_C]
.text:0000AAE9                 mov     eax, [edx+0ECh]
.text:0000AAEF                 push    eax
.text:0000AAF0                 call    _ssh_pkt_addstring_start
.text:0000AAF5                 add     esp, 4
.text:0000AAF8                 mov     ecx, [ebp+var_C]
.text:0000AAFB                 mov     edx, [ecx+0ECh]
.text:0000AB01                 push    edx
.text:0000AB02                 call    _ssh_pkt_addstring_start
.text:0000AB07                 add     esp, 4
.text:0000AB0A                 push    0               ; Src
.text:0000AB0C                 mov     eax, [ebp+var_C]
.text:0000AB0F                 mov     ecx, [eax+0ECh]
.text:0000AB15                 push    ecx             ; int
.text:0000AB16                 call    _ssh2_pkt_addbool
.text:0000AB1B                 add     esp, 8
.text:0000AB1E                 push    0
.text:0000AB20                 mov     edx, [ebp+var_C]
.text:0000AB23                 mov     eax, [edx+0ECh]
.text:0000AB29                 push    eax
.text:0000AB2A                 call    _ssh_pkt_adduint32
.text:0000AB2F                 add     esp, 8
.text:0000AB32                 mov     ecx, [ebp+var_C]
.text:0000AB35                 mov     edx, [ecx+0ECh]
.text:0000AB3B                 mov     eax, [edx]
.text:0000AB3D                 sub     eax, 5
.text:0000AB40                 mov     ecx, [ebp+var_C]
.text:0000AB43                 mov     [ecx+30h], eax
.text:0000AB46                 push    1
.text:0000AB48                 mov     edx, [ebp+var_C]
.text:0000AB4B                 mov     eax, [edx+30h]
.text:0000AB4E                 push    eax
.text:0000AB4F                 call    _safemalloc
.text:0000AB54                 add     esp, 8
.text:0000AB57                 mov     ecx, [ebp+var_C]
.text:0000AB5A                 mov     [ecx+2Ch], eax
.text:0000AB5D                 mov     edx, [ebp+var_C]
.text:0000AB60                 mov     eax, [edx+30h]
.text:0000AB63                 push    eax             ; Size
.text:0000AB64                 mov     ecx, [ebp+var_C]
.text:0000AB67                 mov     edx, [ecx+0ECh]
.text:0000AB6D                 mov     eax, [edx+10h]
.text:0000AB70                 add     eax, 5
.text:0000AB73                 push    eax             ; Src
.text:0000AB74                 mov     ecx, [ebp+var_C]
.text:0000AB77                 mov     edx, [ecx+2Ch]
.text:0000AB7A                 push    edx             ; Dst
.text:0000AB7B                 call    _memcpy
.text:0000AB80                 add     esp, 0Ch
.text:0000AB83                 mov     eax, [ebp+var_C]
.text:0000AB86                 mov     ecx, [eax+0ECh]
.text:0000AB8C                 push    ecx
.text:0000AB8D                 mov     edx, [ebp+arg_0]
.text:0000AB90                 push    edx
.text:0000AB91                 call    _ssh2_pkt_send_noqueue
.text:0000AB96                 add     esp, 8
.text:0000AB99                 cmp     [ebp+arg_C], 0
.text:0000AB9D                 jnz     short loc_ABB7
.text:0000AB9F
.text:0000AB9F loc_AB9F:                               ; CODE XREF: _do_ssh2_transport+AF7j
.text:0000AB9F                                         ; _do_ssh2_transport+AFDj
.text:0000AB9F                 mov     eax, [ebp+var_10]
.text:0000ABA2                 mov     dword ptr [eax], 1884h
.text:0000ABA8                 jmp     loc_D155
.text:0000ABAD ; ---------------------------------------------------------------------------
.text:0000ABAD
.text:0000ABAD loc_ABAD:                               ; CODE XREF: _do_ssh2_transport+102j
.text:0000ABAD                 xor     ecx, ecx
.text:0000ABAF                 jnz     short loc_AB9F
.text:0000ABB1                 cmp     [ebp+arg_C], 0
.text:0000ABB5                 jz      short loc_AB9F
.text:0000ABB7
.text:0000ABB7 loc_ABB7:                               ; CODE XREF: _do_ssh2_transport+AE5j
.text:0000ABB7                 mov     edx, [ebp+arg_C]
.text:0000ABBA                 cmp     dword ptr [edx+8], 14h
.text:0000ABBE                 jz      short loc_ABEC
.text:0000ABC0                 push    offset $SG91673 ; "expected key exchange packet from serve"...
.text:0000ABC5                 call    _dupprintf
.text:0000ABCA                 add     esp, 4
.text:0000ABCD                 push    eax
.text:0000ABCE                 mov     eax, [ebp+arg_0]
.text:0000ABD1                 push    eax
.text:0000ABD2                 call    _bomb_out
.text:0000ABD7                 add     esp, 8
.text:0000ABDA
.text:0000ABDA loc_ABDA:                               ; CODE XREF: _do_ssh2_transport+B32j
.text:0000ABDA                 mov     ecx, [ebp+var_10]
.text:0000ABDD                 mov     dword ptr [ecx], 0
.text:0000ABE3                 jmp     loc_D155
.text:0000ABE8 ; ---------------------------------------------------------------------------
.text:0000ABE8                 xor     edx, edx
.text:0000ABEA                 jnz     short loc_ABDA
.text:0000ABEC
.text:0000ABEC loc_ABEC:                               ; CODE XREF: _do_ssh2_transport+B06j
.text:0000ABEC                 mov     eax, [ebp+arg_0]
.text:0000ABEF                 mov     dword ptr [eax+90h], 0
.text:0000ABF9                 mov     ecx, [ebp+arg_0]
.text:0000ABFC                 mov     dword ptr [ecx+94h], 0
.text:0000AC06                 mov     edx, [ebp+var_C]
.text:0000AC09                 mov     dword ptr [edx+44h], 0
.text:0000AC10                 mov     eax, [ebp+var_C]
.text:0000AC13                 mov     dword ptr [eax+48h], 0
.text:0000AC1A                 mov     ecx, [ebp+var_C]
.text:0000AC1D                 mov     dword ptr [ecx+4Ch], 0
.text:0000AC24                 mov     edx, [ebp+var_C]
.text:0000AC27                 mov     dword ptr [edx+50h], 0
.text:0000AC2E                 mov     eax, [ebp+var_C]
.text:0000AC31                 mov     dword ptr [eax+54h], 0
.text:0000AC38                 mov     ecx, [ebp+var_C]
.text:0000AC3B                 mov     dword ptr [ecx+58h], 0
.text:0000AC42                 mov     edx, [ebp+var_C]
.text:0000AC45                 mov     dword ptr [edx+14h], 0
.text:0000AC4C                 mov     eax, [ebp+var_C]
.text:0000AC4F                 mov     dword ptr [eax+10h], 0
.text:0000AC56                 mov     ecx, [ebp+var_C]
.text:0000AC59                 mov     dword ptr [ecx+0Ch], 0
.text:0000AC60                 mov     edx, [ebp+arg_C]
.text:0000AC63                 mov     eax, [edx+18h]
.text:0000AC66                 add     eax, 10h
.text:0000AC69                 mov     ecx, [ebp+arg_C]
.text:0000AC6C                 mov     [ecx+18h], eax
.text:0000AC6F                 lea     edx, [ebp+var_4C]
.text:0000AC72                 push    edx
.text:0000AC73                 lea     eax, [ebp+Buf2]
.text:0000AC76                 push    eax
.text:0000AC77                 mov     ecx, [ebp+arg_C]
.text:0000AC7A                 push    ecx
.text:0000AC7B                 call    _ssh_pkt_getstring
.text:0000AC80                 add     esp, 0Ch
.text:0000AC83                 cmp     [ebp+Buf2], 0
.text:0000AC87                 jnz     short loc_ACB5
.text:0000AC89                 push    offset $SG91686 ; "KEXINIT packet was incomplete"
.text:0000AC8E                 call    _dupprintf
.text:0000AC93                 add     esp, 4
.text:0000AC96                 push    eax
.text:0000AC97                 mov     edx, [ebp+arg_0]
.text:0000AC9A                 push    edx
.text:0000AC9B                 call    _bomb_out
.text:0000ACA0                 add     esp, 8
.text:0000ACA3
.text:0000ACA3 loc_ACA3:                               ; CODE XREF: _do_ssh2_transport+BFBj
.text:0000ACA3                 mov     eax, [ebp+var_10]
.text:0000ACA6                 mov     dword ptr [eax], 0
.text:0000ACAC                 jmp     loc_D155
.text:0000ACB1 ; ---------------------------------------------------------------------------
.text:0000ACB1                 xor     ecx, ecx
.text:0000ACB3                 jnz     short loc_ACA3
.text:0000ACB5
.text:0000ACB5 loc_ACB5:                               ; CODE XREF: _do_ssh2_transport+BCFj
.text:0000ACB5                 mov     [ebp+Str], 0
.text:0000ACBC                 mov     [ebp+var_40], 0
.text:0000ACC3                 jmp     short loc_ACCE
.text:0000ACC5 ; ---------------------------------------------------------------------------
.text:0000ACC5
.text:0000ACC5 loc_ACC5:                               ; CODE XREF: _do_ssh2_transport:loc_AD7Fj
.text:0000ACC5                 mov     edx, [ebp+var_40]
.text:0000ACC8                 add     edx, 1
.text:0000ACCB                 mov     [ebp+var_40], edx
.text:0000ACCE
.text:0000ACCE loc_ACCE:                               ; CODE XREF: _do_ssh2_transport+C0Bj
.text:0000ACCE                 mov     eax, [ebp+var_C]
.text:0000ACD1                 mov     ecx, [ebp+var_40]
.text:0000ACD4                 cmp     ecx, [eax+0A4h]
.text:0000ACDA                 jge     loc_AD84
.text:0000ACE0                 mov     edx, [ebp+var_40]
.text:0000ACE3                 mov     eax, [ebp+var_C]
.text:0000ACE6                 mov     ecx, [eax+edx*4+0A8h]
.text:0000ACED                 mov     [ebp+var_54], ecx
.text:0000ACF0                 cmp     [ebp+var_54], 0
.text:0000ACF4                 jnz     short loc_AD02
.text:0000ACF6                 mov     edx, [ebp+var_C]
.text:0000ACF9                 mov     dword ptr [edx+0Ch], 1
.text:0000AD00                 jmp     short loc_AD71
.text:0000AD02 ; ---------------------------------------------------------------------------
.text:0000AD02
.text:0000AD02 loc_AD02:                               ; CODE XREF: _do_ssh2_transport+C3Cj
.text:0000AD02                 mov     [ebp+var_44], 0
.text:0000AD09                 jmp     short loc_AD14
.text:0000AD0B ; ---------------------------------------------------------------------------
.text:0000AD0B
.text:0000AD0B loc_AD0B:                               ; CODE XREF: _do_ssh2_transport:loc_AD6Fj
.text:0000AD0B                 mov     eax, [ebp+var_44]
.text:0000AD0E                 add     eax, 1
.text:0000AD11                 mov     [ebp+var_44], eax
.text:0000AD14
.text:0000AD14 loc_AD14:                               ; CODE XREF: _do_ssh2_transport+C51j
.text:0000AD14                 mov     ecx, [ebp+var_54]
.text:0000AD17                 mov     edx, [ebp+var_44]
.text:0000AD1A                 cmp     edx, [ecx]
.text:0000AD1C                 jge     short loc_AD71
.text:0000AD1E                 cmp     [ebp+Str], 0
.text:0000AD22                 jnz     short loc_AD35
.text:0000AD24                 mov     eax, [ebp+var_54]
.text:0000AD27                 mov     ecx, [eax+4]
.text:0000AD2A                 mov     edx, [ebp+var_44]
.text:0000AD2D                 mov     eax, [ecx+edx*4]
.text:0000AD30                 mov     ecx, [eax]
.text:0000AD32                 mov     [ebp+Str], ecx
.text:0000AD35
.text:0000AD35 loc_AD35:                               ; CODE XREF: _do_ssh2_transport+C6Aj
.text:0000AD35                 mov     edx, [ebp+var_4C]
.text:0000AD38                 push    edx             ; int
.text:0000AD39                 mov     eax, [ebp+Buf2]
.text:0000AD3C                 push    eax             ; Buf2
.text:0000AD3D                 mov     ecx, [ebp+var_54]
.text:0000AD40                 mov     edx, [ecx+4]
.text:0000AD43                 mov     eax, [ebp+var_44]
.text:0000AD46                 mov     ecx, [edx+eax*4]
.text:0000AD49                 mov     edx, [ecx]
.text:0000AD4B                 push    edx             ; Str
.text:0000AD4C                 call    _in_commasep_string
.text:0000AD51                 add     esp, 0Ch
.text:0000AD54                 test    eax, eax
.text:0000AD56                 jz      short loc_AD6F
.text:0000AD58                 mov     eax, [ebp+var_54]
.text:0000AD5B                 mov     ecx, [eax+4]
.text:0000AD5E                 mov     edx, [ebp+arg_0]
.text:0000AD61                 mov     eax, [ebp+var_44]
.text:0000AD64                 mov     ecx, [ecx+eax*4]
.text:0000AD67                 mov     [edx+90h], ecx
.text:0000AD6D                 jmp     short loc_AD71
.text:0000AD6F ; ---------------------------------------------------------------------------
.text:0000AD6F
.text:0000AD6F loc_AD6F:                               ; CODE XREF: _do_ssh2_transport+C9Ej
.text:0000AD6F                 jmp     short loc_AD0B
.text:0000AD71 ; ---------------------------------------------------------------------------
.text:0000AD71
.text:0000AD71 loc_AD71:                               ; CODE XREF: _do_ssh2_transport+C48j
.text:0000AD71                                         ; _do_ssh2_transport+C64j ...
.text:0000AD71                 mov     edx, [ebp+arg_0]
.text:0000AD74                 cmp     dword ptr [edx+90h], 0
.text:0000AD7B                 jz      short loc_AD7F
.text:0000AD7D                 jmp     short loc_AD84
.text:0000AD7F ; ---------------------------------------------------------------------------
.text:0000AD7F
.text:0000AD7F loc_AD7F:                               ; CODE XREF: _do_ssh2_transport+CC3j
.text:0000AD7F                 jmp     loc_ACC5
.text:0000AD84 ; ---------------------------------------------------------------------------
.text:0000AD84
.text:0000AD84 loc_AD84:                               ; CODE XREF: _do_ssh2_transport+C22j
.text:0000AD84                                         ; _do_ssh2_transport+CC5j
.text:0000AD84                 mov     eax, [ebp+arg_0]
.text:0000AD87                 cmp     dword ptr [eax+90h], 0
.text:0000AD8E                 jnz     short loc_ADC4
.text:0000AD90                 mov     ecx, [ebp+Buf2]
.text:0000AD93                 push    ecx
.text:0000AD94                 mov     edx, [ebp+var_4C]
.text:0000AD97                 push    edx
.text:0000AD98                 push    offset $SG91704 ; "Couldn't agree a key exchange algorithm"...
.text:0000AD9D                 call    _dupprintf
.text:0000ADA2                 add     esp, 0Ch
.text:0000ADA5                 push    eax
.text:0000ADA6                 mov     eax, [ebp+arg_0]
.text:0000ADA9                 push    eax
.text:0000ADAA                 call    _bomb_out
.text:0000ADAF                 add     esp, 8
.text:0000ADB2
.text:0000ADB2 loc_ADB2:                               ; CODE XREF: _do_ssh2_transport+D0Aj
.text:0000ADB2                 mov     ecx, [ebp+var_10]
.text:0000ADB5                 mov     dword ptr [ecx], 0
.text:0000ADBB                 jmp     loc_D155
.text:0000ADC0 ; ---------------------------------------------------------------------------
.text:0000ADC0                 xor     edx, edx
.text:0000ADC2                 jnz     short loc_ADB2
.text:0000ADC4
.text:0000ADC4 loc_ADC4:                               ; CODE XREF: _do_ssh2_transport+CD6j
.text:0000ADC4                 mov     eax, [ebp+var_4C]
.text:0000ADC7                 push    eax             ; int
.text:0000ADC8                 mov     ecx, [ebp+Buf2]
.text:0000ADCB                 push    ecx             ; Buf2
.text:0000ADCC                 mov     edx, [ebp+Str]
.text:0000ADCF                 push    edx             ; Str
.text:0000ADD0                 call    _first_in_commasep_string
.text:0000ADD5                 add     esp, 0Ch
.text:0000ADD8                 mov     ecx, [ebp+var_C]
.text:0000ADDB                 mov     [ecx+0F4h], eax
.text:0000ADE1                 lea     edx, [ebp+var_4C]
.text:0000ADE4                 push    edx
.text:0000ADE5                 lea     eax, [ebp+Buf2]
.text:0000ADE8                 push    eax
.text:0000ADE9                 mov     ecx, [ebp+arg_C]
.text:0000ADEC                 push    ecx
.text:0000ADED                 call    _ssh_pkt_getstring
.text:0000ADF2                 add     esp, 0Ch
.text:0000ADF5                 cmp     [ebp+Buf2], 0
.text:0000ADF9                 jnz     short loc_AE27
.text:0000ADFB                 push    offset $SG91709 ; "KEXINIT packet was incomplete"
.text:0000AE00                 call    _dupprintf
.text:0000AE05                 add     esp, 4
.text:0000AE08                 push    eax
.text:0000AE09                 mov     edx, [ebp+arg_0]
.text:0000AE0C                 push    edx
.text:0000AE0D                 call    _bomb_out
.text:0000AE12                 add     esp, 8
.text:0000AE15
.text:0000AE15 loc_AE15:                               ; CODE XREF: _do_ssh2_transport+D6Dj
.text:0000AE15                 mov     eax, [ebp+var_10]
.text:0000AE18                 mov     dword ptr [eax], 0
.text:0000AE1E                 jmp     loc_D155
.text:0000AE23 ; ---------------------------------------------------------------------------
.text:0000AE23                 xor     ecx, ecx
.text:0000AE25                 jnz     short loc_AE15
.text:0000AE27
.text:0000AE27 loc_AE27:                               ; CODE XREF: _do_ssh2_transport+D41j
.text:0000AE27                 mov     [ebp+var_40], 0
.text:0000AE2E                 jmp     short loc_AE39
.text:0000AE30 ; ---------------------------------------------------------------------------
.text:0000AE30
.text:0000AE30 loc_AE30:                               ; CODE XREF: _do_ssh2_transport:loc_AE76j
.text:0000AE30                 mov     edx, [ebp+var_40]
.text:0000AE33                 add     edx, 1
.text:0000AE36                 mov     [ebp+var_40], edx
.text:0000AE39
.text:0000AE39 loc_AE39:                               ; CODE XREF: _do_ssh2_transport+D76j
.text:0000AE39                 cmp     [ebp+var_40], 2
.text:0000AE3D                 jnb     short loc_AE78
.text:0000AE3F                 mov     eax, [ebp+var_4C]
.text:0000AE42                 push    eax             ; int
.text:0000AE43                 mov     ecx, [ebp+Buf2]
.text:0000AE46                 push    ecx             ; Buf2
.text:0000AE47                 mov     edx, [ebp+var_40]
.text:0000AE4A                 mov     eax, _hostkey_algs[edx*4]
.text:0000AE51                 mov     ecx, [eax+30h]
.text:0000AE54                 push    ecx             ; Str
.text:0000AE55                 call    _in_commasep_string
.text:0000AE5A                 add     esp, 0Ch
.text:0000AE5D                 test    eax, eax
.text:0000AE5F                 jz      short loc_AE76
.text:0000AE61                 mov     edx, [ebp+arg_0]
.text:0000AE64                 mov     eax, [ebp+var_40]
.text:0000AE67                 mov     ecx, _hostkey_algs[eax*4]
.text:0000AE6E                 mov     [edx+94h], ecx
.text:0000AE74                 jmp     short loc_AE78
.text:0000AE76 ; ---------------------------------------------------------------------------
.text:0000AE76
.text:0000AE76 loc_AE76:                               ; CODE XREF: _do_ssh2_transport+DA7j
.text:0000AE76                 jmp     short loc_AE30
.text:0000AE78 ; ---------------------------------------------------------------------------
.text:0000AE78
.text:0000AE78 loc_AE78:                               ; CODE XREF: _do_ssh2_transport+D85j
.text:0000AE78                                         ; _do_ssh2_transport+DBCj
.text:0000AE78                 mov     edx, [ebp+arg_0]
.text:0000AE7B                 cmp     dword ptr [edx+94h], 0
.text:0000AE82                 jnz     short loc_AEB8
.text:0000AE84                 mov     eax, [ebp+Buf2]
.text:0000AE87                 push    eax
.text:0000AE88                 mov     ecx, [ebp+var_4C]
.text:0000AE8B                 push    ecx
.text:0000AE8C                 push    offset $SG91718 ; "Couldn't agree a host key algorithm (av"...
.text:0000AE91                 call    _dupprintf
.text:0000AE96                 add     esp, 0Ch
.text:0000AE99                 push    eax
.text:0000AE9A                 mov     edx, [ebp+arg_0]
.text:0000AE9D                 push    edx
.text:0000AE9E                 call    _bomb_out
.text:0000AEA3                 add     esp, 8
.text:0000AEA6
.text:0000AEA6 loc_AEA6:                               ; CODE XREF: _do_ssh2_transport+DFEj
.text:0000AEA6                 mov     eax, [ebp+var_10]
.text:0000AEA9                 mov     dword ptr [eax], 0
.text:0000AEAF                 jmp     loc_D155
.text:0000AEB4 ; ---------------------------------------------------------------------------
.text:0000AEB4                 xor     ecx, ecx
.text:0000AEB6                 jnz     short loc_AEA6
.text:0000AEB8
.text:0000AEB8 loc_AEB8:                               ; CODE XREF: _do_ssh2_transport+DCAj
.text:0000AEB8                 mov     edx, [ebp+var_C]
.text:0000AEBB                 cmp     dword ptr [edx+0F4h], 0
.text:0000AEC2                 jz      short loc_AEEE
.text:0000AEC4                 mov     eax, [ebp+var_4C]
.text:0000AEC7                 push    eax             ; int
.text:0000AEC8                 mov     ecx, [ebp+Buf2]
.text:0000AECB                 push    ecx             ; Buf2
.text:0000AECC                 mov     edx, _hostkey_algs
.text:0000AED2                 mov     eax, [edx+30h]
.text:0000AED5                 push    eax             ; Str
.text:0000AED6                 call    _first_in_commasep_string
.text:0000AEDB                 add     esp, 0Ch
.text:0000AEDE                 test    eax, eax
.text:0000AEE0                 jz      short loc_AEEE
.text:0000AEE2                 mov     [ebp+var_150], 1
.text:0000AEEC                 jmp     short loc_AEF8
.text:0000AEEE ; ---------------------------------------------------------------------------
.text:0000AEEE
.text:0000AEEE loc_AEEE:                               ; CODE XREF: _do_ssh2_transport+E0Aj
.text:0000AEEE                                         ; _do_ssh2_transport+E28j
.text:0000AEEE                 mov     [ebp+var_150], 0
.text:0000AEF8
.text:0000AEF8 loc_AEF8:                               ; CODE XREF: _do_ssh2_transport+E34j
.text:0000AEF8                 mov     ecx, [ebp+var_C]
.text:0000AEFB                 mov     edx, [ebp+var_150]
.text:0000AF01                 mov     [ecx+0F4h], edx
.text:0000AF07                 lea     eax, [ebp+var_4C]
.text:0000AF0A                 push    eax
.text:0000AF0B                 lea     ecx, [ebp+Buf2]
.text:0000AF0E                 push    ecx
.text:0000AF0F                 mov     edx, [ebp+arg_C]
.text:0000AF12                 push    edx
.text:0000AF13                 call    _ssh_pkt_getstring
.text:0000AF18                 add     esp, 0Ch
.text:0000AF1B                 cmp     [ebp+Buf2], 0
.text:0000AF1F                 jnz     short loc_AF4D
.text:0000AF21                 push    offset $SG91723 ; "KEXINIT packet was incomplete"
.text:0000AF26                 call    _dupprintf
.text:0000AF2B                 add     esp, 4
.text:0000AF2E                 push    eax
.text:0000AF2F                 mov     eax, [ebp+arg_0]
.text:0000AF32                 push    eax
.text:0000AF33                 call    _bomb_out
.text:0000AF38                 add     esp, 8
.text:0000AF3B
.text:0000AF3B loc_AF3B:                               ; CODE XREF: _do_ssh2_transport+E93j
.text:0000AF3B                 mov     ecx, [ebp+var_10]
.text:0000AF3E                 mov     dword ptr [ecx], 0
.text:0000AF44                 jmp     loc_D155
.text:0000AF49 ; ---------------------------------------------------------------------------
.text:0000AF49                 xor     edx, edx
.text:0000AF4B                 jnz     short loc_AF3B
.text:0000AF4D
.text:0000AF4D loc_AF4D:                               ; CODE XREF: _do_ssh2_transport+E67j
.text:0000AF4D                 mov     [ebp+var_40], 0
.text:0000AF54                 jmp     short loc_AF5F
.text:0000AF56 ; ---------------------------------------------------------------------------
.text:0000AF56
.text:0000AF56 loc_AF56:                               ; CODE XREF: _do_ssh2_transport:loc_AFF4j
.text:0000AF56                 mov     eax, [ebp+var_40]
.text:0000AF59                 add     eax, 1
.text:0000AF5C                 mov     [ebp+var_40], eax
.text:0000AF5F
.text:0000AF5F loc_AF5F:                               ; CODE XREF: _do_ssh2_transport+E9Cj
.text:0000AF5F                 mov     ecx, [ebp+var_C]
.text:0000AF62                 mov     edx, [ebp+var_40]
.text:0000AF65                 cmp     edx, [ecx+0BCh]
.text:0000AF6B                 jge     loc_AFF9
.text:0000AF71                 mov     eax, [ebp+var_40]
.text:0000AF74                 mov     ecx, [ebp+var_C]
.text:0000AF77                 mov     edx, [ecx+eax*4+0C0h]
.text:0000AF7E                 mov     [ebp+var_58], edx
.text:0000AF81                 cmp     [ebp+var_58], 0
.text:0000AF85                 jnz     short loc_AF93
.text:0000AF87                 mov     eax, [ebp+var_C]
.text:0000AF8A                 mov     dword ptr [eax+10h], 1
.text:0000AF91                 jmp     short loc_AFE9
.text:0000AF93 ; ---------------------------------------------------------------------------
.text:0000AF93
.text:0000AF93 loc_AF93:                               ; CODE XREF: _do_ssh2_transport+ECDj
.text:0000AF93                 mov     [ebp+var_44], 0
.text:0000AF9A                 jmp     short loc_AFA5
.text:0000AF9C ; ---------------------------------------------------------------------------
.text:0000AF9C
.text:0000AF9C loc_AF9C:                               ; CODE XREF: _do_ssh2_transport:loc_AFE7j
.text:0000AF9C                 mov     ecx, [ebp+var_44]
.text:0000AF9F                 add     ecx, 1
.text:0000AFA2                 mov     [ebp+var_44], ecx
.text:0000AFA5
.text:0000AFA5 loc_AFA5:                               ; CODE XREF: _do_ssh2_transport+EE2j
.text:0000AFA5                 mov     edx, [ebp+var_58]
.text:0000AFA8                 mov     eax, [ebp+var_44]
.text:0000AFAB                 cmp     eax, [edx]
.text:0000AFAD                 jge     short loc_AFE9
.text:0000AFAF                 mov     ecx, [ebp+var_4C]
.text:0000AFB2                 push    ecx             ; int
.text:0000AFB3                 mov     edx, [ebp+Buf2]
.text:0000AFB6                 push    edx             ; Buf2
.text:0000AFB7                 mov     eax, [ebp+var_58]
.text:0000AFBA                 mov     ecx, [eax+4]
.text:0000AFBD                 mov     edx, [ebp+var_44]
.text:0000AFC0                 mov     eax, [ecx+edx*4]
.text:0000AFC3                 mov     ecx, [eax+18h]
.text:0000AFC6                 push    ecx             ; Str
.text:0000AFC7                 call    _in_commasep_string
.text:0000AFCC                 add     esp, 0Ch
.text:0000AFCF                 test    eax, eax
.text:0000AFD1                 jz      short loc_AFE7
.text:0000AFD3                 mov     edx, [ebp+var_58]
.text:0000AFD6                 mov     eax, [edx+4]
.text:0000AFD9                 mov     ecx, [ebp+var_C]
.text:0000AFDC                 mov     edx, [ebp+var_44]
.text:0000AFDF                 mov     eax, [eax+edx*4]
.text:0000AFE2                 mov     [ecx+44h], eax
.text:0000AFE5                 jmp     short loc_AFE9
.text:0000AFE7 ; ---------------------------------------------------------------------------
.text:0000AFE7
.text:0000AFE7 loc_AFE7:                               ; CODE XREF: _do_ssh2_transport+F19j
.text:0000AFE7                 jmp     short loc_AF9C
.text:0000AFE9 ; ---------------------------------------------------------------------------
.text:0000AFE9
.text:0000AFE9 loc_AFE9:                               ; CODE XREF: _do_ssh2_transport+ED9j
.text:0000AFE9                                         ; _do_ssh2_transport+EF5j ...
.text:0000AFE9                 mov     ecx, [ebp+var_C]
.text:0000AFEC                 cmp     dword ptr [ecx+44h], 0
.text:0000AFF0                 jz      short loc_AFF4
.text:0000AFF2                 jmp     short loc_AFF9
.text:0000AFF4 ; ---------------------------------------------------------------------------
.text:0000AFF4
.text:0000AFF4 loc_AFF4:                               ; CODE XREF: _do_ssh2_transport+F38j
.text:0000AFF4                 jmp     loc_AF56
.text:0000AFF9 ; ---------------------------------------------------------------------------
.text:0000AFF9
.text:0000AFF9 loc_AFF9:                               ; CODE XREF: _do_ssh2_transport+EB3j
.text:0000AFF9                                         ; _do_ssh2_transport+F3Aj
.text:0000AFF9                 mov     edx, [ebp+var_C]
.text:0000AFFC                 cmp     dword ptr [edx+44h], 0
.text:0000B000                 jnz     short loc_B036
.text:0000B002                 mov     eax, [ebp+Buf2]
.text:0000B005                 push    eax
.text:0000B006                 mov     ecx, [ebp+var_4C]
.text:0000B009                 push    ecx
.text:0000B00A                 push    offset $SG91739 ; "Couldn't agree a client-to-server ciphe"...
.text:0000B00F                 call    _dupprintf
.text:0000B014                 add     esp, 0Ch
.text:0000B017                 push    eax
.text:0000B018                 mov     edx, [ebp+arg_0]
.text:0000B01B                 push    edx
.text:0000B01C                 call    _bomb_out
.text:0000B021                 add     esp, 8
.text:0000B024
.text:0000B024 loc_B024:                               ; CODE XREF: _do_ssh2_transport+F7Cj
.text:0000B024                 mov     eax, [ebp+var_10]
.text:0000B027                 mov     dword ptr [eax], 0
.text:0000B02D                 jmp     loc_D155
.text:0000B032 ; ---------------------------------------------------------------------------
.text:0000B032                 xor     ecx, ecx
.text:0000B034                 jnz     short loc_B024
.text:0000B036
.text:0000B036 loc_B036:                               ; CODE XREF: _do_ssh2_transport+F48j
.text:0000B036                 lea     edx, [ebp+var_4C]
.text:0000B039                 push    edx
.text:0000B03A                 lea     eax, [ebp+Buf2]
.text:0000B03D                 push    eax
.text:0000B03E                 mov     ecx, [ebp+arg_C]
.text:0000B041                 push    ecx
.text:0000B042                 call    _ssh_pkt_getstring
.text:0000B047                 add     esp, 0Ch
.text:0000B04A                 cmp     [ebp+Buf2], 0
.text:0000B04E                 jnz     short loc_B07C
.text:0000B050                 push    offset $SG91744 ; "KEXINIT packet was incomplete"
.text:0000B055                 call    _dupprintf
.text:0000B05A                 add     esp, 4
.text:0000B05D                 push    eax
.text:0000B05E                 mov     edx, [ebp+arg_0]
.text:0000B061                 push    edx
.text:0000B062                 call    _bomb_out
.text:0000B067                 add     esp, 8
.text:0000B06A
.text:0000B06A loc_B06A:                               ; CODE XREF: _do_ssh2_transport+FC2j
.text:0000B06A                 mov     eax, [ebp+var_10]
.text:0000B06D                 mov     dword ptr [eax], 0
.text:0000B073                 jmp     loc_D155
.text:0000B078 ; ---------------------------------------------------------------------------
.text:0000B078                 xor     ecx, ecx
.text:0000B07A                 jnz     short loc_B06A
.text:0000B07C
.text:0000B07C loc_B07C:                               ; CODE XREF: _do_ssh2_transport+F96j
.text:0000B07C                 mov     [ebp+var_40], 0
.text:0000B083                 jmp     short loc_B08E
.text:0000B085 ; ---------------------------------------------------------------------------
.text:0000B085
.text:0000B085 loc_B085:                               ; CODE XREF: _do_ssh2_transport:loc_B123j
.text:0000B085                 mov     edx, [ebp+var_40]
.text:0000B088                 add     edx, 1
.text:0000B08B                 mov     [ebp+var_40], edx
.text:0000B08E
.text:0000B08E loc_B08E:                               ; CODE XREF: _do_ssh2_transport+FCBj
.text:0000B08E                 mov     eax, [ebp+var_C]
.text:0000B091                 mov     ecx, [ebp+var_40]
.text:0000B094                 cmp     ecx, [eax+0BCh]
.text:0000B09A                 jge     loc_B128
.text:0000B0A0                 mov     edx, [ebp+var_40]
.text:0000B0A3                 mov     eax, [ebp+var_C]
.text:0000B0A6                 mov     ecx, [eax+edx*4+0C0h]
.text:0000B0AD                 mov     [ebp+var_5C], ecx
.text:0000B0B0                 cmp     [ebp+var_5C], 0
.text:0000B0B4                 jnz     short loc_B0C2
.text:0000B0B6                 mov     edx, [ebp+var_C]
.text:0000B0B9                 mov     dword ptr [edx+14h], 1
.text:0000B0C0                 jmp     short loc_B118
.text:0000B0C2 ; ---------------------------------------------------------------------------
.text:0000B0C2
.text:0000B0C2 loc_B0C2:                               ; CODE XREF: _do_ssh2_transport+FFCj
.text:0000B0C2                 mov     [ebp+var_44], 0
.text:0000B0C9                 jmp     short loc_B0D4
.text:0000B0CB ; ---------------------------------------------------------------------------
.text:0000B0CB
.text:0000B0CB loc_B0CB:                               ; CODE XREF: _do_ssh2_transport:loc_B116j
.text:0000B0CB                 mov     eax, [ebp+var_44]
.text:0000B0CE                 add     eax, 1
.text:0000B0D1                 mov     [ebp+var_44], eax
.text:0000B0D4
.text:0000B0D4 loc_B0D4:                               ; CODE XREF: _do_ssh2_transport+1011j
.text:0000B0D4                 mov     ecx, [ebp+var_5C]
.text:0000B0D7                 mov     edx, [ebp+var_44]
.text:0000B0DA                 cmp     edx, [ecx]
.text:0000B0DC                 jge     short loc_B118
.text:0000B0DE                 mov     eax, [ebp+var_4C]
.text:0000B0E1                 push    eax             ; int
.text:0000B0E2                 mov     ecx, [ebp+Buf2]
.text:0000B0E5                 push    ecx             ; Buf2
.text:0000B0E6                 mov     edx, [ebp+var_5C]
.text:0000B0E9                 mov     eax, [edx+4]
.text:0000B0EC                 mov     ecx, [ebp+var_44]
.text:0000B0EF                 mov     edx, [eax+ecx*4]
.text:0000B0F2                 mov     eax, [edx+18h]
.text:0000B0F5                 push    eax             ; Str
.text:0000B0F6                 call    _in_commasep_string
.text:0000B0FB                 add     esp, 0Ch
.text:0000B0FE                 test    eax, eax
.text:0000B100                 jz      short loc_B116
.text:0000B102                 mov     ecx, [ebp+var_5C]
.text:0000B105                 mov     edx, [ecx+4]
.text:0000B108                 mov     eax, [ebp+var_C]
.text:0000B10B                 mov     ecx, [ebp+var_44]
.text:0000B10E                 mov     edx, [edx+ecx*4]
.text:0000B111                 mov     [eax+48h], edx
.text:0000B114                 jmp     short loc_B118
.text:0000B116 ; ---------------------------------------------------------------------------
.text:0000B116
.text:0000B116 loc_B116:                               ; CODE XREF: _do_ssh2_transport+1048j
.text:0000B116                 jmp     short loc_B0CB
.text:0000B118 ; ---------------------------------------------------------------------------
.text:0000B118
.text:0000B118 loc_B118:                               ; CODE XREF: _do_ssh2_transport+1008j
.text:0000B118                                         ; _do_ssh2_transport+1024j ...
.text:0000B118                 mov     eax, [ebp+var_C]
.text:0000B11B                 cmp     dword ptr [eax+48h], 0
.text:0000B11F                 jz      short loc_B123
.text:0000B121                 jmp     short loc_B128
.text:0000B123 ; ---------------------------------------------------------------------------
.text:0000B123
.text:0000B123 loc_B123:                               ; CODE XREF: _do_ssh2_transport+1067j
.text:0000B123                 jmp     loc_B085
.text:0000B128 ; ---------------------------------------------------------------------------
.text:0000B128
.text:0000B128 loc_B128:                               ; CODE XREF: _do_ssh2_transport+FE2j
.text:0000B128                                         ; _do_ssh2_transport+1069j
.text:0000B128                 mov     ecx, [ebp+var_C]
.text:0000B12B                 cmp     dword ptr [ecx+48h], 0
.text:0000B12F                 jnz     short loc_B165
.text:0000B131                 mov     edx, [ebp+Buf2]
.text:0000B134                 push    edx
.text:0000B135                 mov     eax, [ebp+var_4C]
.text:0000B138                 push    eax
.text:0000B139                 push    offset $SG91760 ; "Couldn't agree a server-to-client ciphe"...
.text:0000B13E                 call    _dupprintf
.text:0000B143                 add     esp, 0Ch
.text:0000B146                 push    eax
.text:0000B147                 mov     ecx, [ebp+arg_0]
.text:0000B14A                 push    ecx
.text:0000B14B                 call    _bomb_out
.text:0000B150                 add     esp, 8
.text:0000B153
.text:0000B153 loc_B153:                               ; CODE XREF: _do_ssh2_transport+10ABj
.text:0000B153                 mov     edx, [ebp+var_10]
.text:0000B156                 mov     dword ptr [edx], 0
.text:0000B15C                 jmp     loc_D155
.text:0000B161 ; ---------------------------------------------------------------------------
.text:0000B161                 xor     eax, eax
.text:0000B163                 jnz     short loc_B153
.text:0000B165
.text:0000B165 loc_B165:                               ; CODE XREF: _do_ssh2_transport+1077j
.text:0000B165                 lea     ecx, [ebp+var_4C]
.text:0000B168                 push    ecx
.text:0000B169                 lea     edx, [ebp+Buf2]
.text:0000B16C                 push    edx
.text:0000B16D                 mov     eax, [ebp+arg_C]
.text:0000B170                 push    eax
.text:0000B171                 call    _ssh_pkt_getstring
.text:0000B176                 add     esp, 0Ch
.text:0000B179                 cmp     [ebp+Buf2], 0
.text:0000B17D                 jnz     short loc_B1AB
.text:0000B17F                 push    offset $SG91765 ; "KEXINIT packet was incomplete"
.text:0000B184                 call    _dupprintf
.text:0000B189                 add     esp, 4
.text:0000B18C                 push    eax
.text:0000B18D                 mov     ecx, [ebp+arg_0]
.text:0000B190                 push    ecx
.text:0000B191                 call    _bomb_out
.text:0000B196                 add     esp, 8
.text:0000B199
.text:0000B199 loc_B199:                               ; CODE XREF: _do_ssh2_transport+10F1j
.text:0000B199                 mov     edx, [ebp+var_10]
.text:0000B19C                 mov     dword ptr [edx], 0
.text:0000B1A2                 jmp     loc_D155
.text:0000B1A7 ; ---------------------------------------------------------------------------
.text:0000B1A7                 xor     eax, eax
.text:0000B1A9                 jnz     short loc_B199
.text:0000B1AB
.text:0000B1AB loc_B1AB:                               ; CODE XREF: _do_ssh2_transport+10C5j
.text:0000B1AB                 mov     [ebp+var_40], 0
.text:0000B1B2                 jmp     short loc_B1BD
.text:0000B1B4 ; ---------------------------------------------------------------------------
.text:0000B1B4
.text:0000B1B4 loc_B1B4:                               ; CODE XREF: _do_ssh2_transport:loc_B200j
.text:0000B1B4                 mov     ecx, [ebp+var_40]
.text:0000B1B7                 add     ecx, 1
.text:0000B1BA                 mov     [ebp+var_40], ecx
.text:0000B1BD
.text:0000B1BD loc_B1BD:                               ; CODE XREF: _do_ssh2_transport+10FAj
.text:0000B1BD                 mov     edx, [ebp+var_C]
.text:0000B1C0                 mov     eax, [ebp+var_40]
.text:0000B1C3                 cmp     eax, [edx+40h]
.text:0000B1C6                 jge     short loc_B202
.text:0000B1C8                 mov     ecx, [ebp+var_4C]
.text:0000B1CB                 push    ecx             ; int
.text:0000B1CC                 mov     edx, [ebp+Buf2]
.text:0000B1CF                 push    edx             ; Buf2
.text:0000B1D0                 mov     eax, [ebp+var_C]
.text:0000B1D3                 mov     ecx, [eax+3Ch]
.text:0000B1D6                 mov     edx, [ebp+var_40]
.text:0000B1D9                 mov     eax, [ecx+edx*4]
.text:0000B1DC                 mov     ecx, [eax+24h]
.text:0000B1DF                 push    ecx             ; Str
.text:0000B1E0                 call    _in_commasep_string
.text:0000B1E5                 add     esp, 0Ch
.text:0000B1E8                 test    eax, eax
.text:0000B1EA                 jz      short loc_B200
.text:0000B1EC                 mov     edx, [ebp+var_C]
.text:0000B1EF                 mov     eax, [edx+3Ch]
.text:0000B1F2                 mov     ecx, [ebp+var_C]
.text:0000B1F5                 mov     edx, [ebp+var_40]
.text:0000B1F8                 mov     eax, [eax+edx*4]
.text:0000B1FB                 mov     [ecx+4Ch], eax
.text:0000B1FE                 jmp     short loc_B202
.text:0000B200 ; ---------------------------------------------------------------------------
.text:0000B200
.text:0000B200 loc_B200:                               ; CODE XREF: _do_ssh2_transport+1132j
.text:0000B200                 jmp     short loc_B1B4
.text:0000B202 ; ---------------------------------------------------------------------------
.text:0000B202
.text:0000B202 loc_B202:                               ; CODE XREF: _do_ssh2_transport+110Ej
.text:0000B202                                         ; _do_ssh2_transport+1146j
.text:0000B202                 lea     ecx, [ebp+var_4C]
.text:0000B205                 push    ecx
.text:0000B206                 lea     edx, [ebp+Buf2]
.text:0000B209                 push    edx
.text:0000B20A                 mov     eax, [ebp+arg_C]
.text:0000B20D                 push    eax
.text:0000B20E                 call    _ssh_pkt_getstring
.text:0000B213                 add     esp, 0Ch
.text:0000B216                 cmp     [ebp+Buf2], 0
.text:0000B21A                 jnz     short loc_B248
.text:0000B21C                 push    offset $SG91774 ; "KEXINIT packet was incomplete"
.text:0000B221                 call    _dupprintf
.text:0000B226                 add     esp, 4
.text:0000B229                 push    eax
.text:0000B22A                 mov     ecx, [ebp+arg_0]
.text:0000B22D                 push    ecx
.text:0000B22E                 call    _bomb_out
.text:0000B233                 add     esp, 8
.text:0000B236
.text:0000B236 loc_B236:                               ; CODE XREF: _do_ssh2_transport+118Ej
.text:0000B236                 mov     edx, [ebp+var_10]
.text:0000B239                 mov     dword ptr [edx], 0
.text:0000B23F                 jmp     loc_D155
.text:0000B244 ; ---------------------------------------------------------------------------
.text:0000B244                 xor     eax, eax
.text:0000B246                 jnz     short loc_B236
.text:0000B248
.text:0000B248 loc_B248:                               ; CODE XREF: _do_ssh2_transport+1162j
.text:0000B248                 mov     [ebp+var_40], 0
.text:0000B24F                 jmp     short loc_B25A
.text:0000B251 ; ---------------------------------------------------------------------------
.text:0000B251
.text:0000B251 loc_B251:                               ; CODE XREF: _do_ssh2_transport:loc_B29Dj
.text:0000B251                 mov     ecx, [ebp+var_40]
.text:0000B254                 add     ecx, 1
.text:0000B257                 mov     [ebp+var_40], ecx
.text:0000B25A
.text:0000B25A loc_B25A:                               ; CODE XREF: _do_ssh2_transport+1197j
.text:0000B25A                 mov     edx, [ebp+var_C]
.text:0000B25D                 mov     eax, [ebp+var_40]
.text:0000B260                 cmp     eax, [edx+40h]
.text:0000B263                 jge     short loc_B29F
.text:0000B265                 mov     ecx, [ebp+var_4C]
.text:0000B268                 push    ecx             ; int
.text:0000B269                 mov     edx, [ebp+Buf2]
.text:0000B26C                 push    edx             ; Buf2
.text:0000B26D                 mov     eax, [ebp+var_C]
.text:0000B270                 mov     ecx, [eax+3Ch]
.text:0000B273                 mov     edx, [ebp+var_40]
.text:0000B276                 mov     eax, [ecx+edx*4]
.text:0000B279                 mov     ecx, [eax+24h]
.text:0000B27C                 push    ecx             ; Str
.text:0000B27D                 call    _in_commasep_string
.text:0000B282                 add     esp, 0Ch
.text:0000B285                 test    eax, eax
.text:0000B287                 jz      short loc_B29D
.text:0000B289                 mov     edx, [ebp+var_C]
.text:0000B28C                 mov     eax, [edx+3Ch]
.text:0000B28F                 mov     ecx, [ebp+var_C]
.text:0000B292                 mov     edx, [ebp+var_40]
.text:0000B295                 mov     eax, [eax+edx*4]
.text:0000B298                 mov     [ecx+50h], eax
.text:0000B29B                 jmp     short loc_B29F
.text:0000B29D ; ---------------------------------------------------------------------------
.text:0000B29D
.text:0000B29D loc_B29D:                               ; CODE XREF: _do_ssh2_transport+11CFj
.text:0000B29D                 jmp     short loc_B251
.text:0000B29F ; ---------------------------------------------------------------------------
.text:0000B29F
.text:0000B29F loc_B29F:                               ; CODE XREF: _do_ssh2_transport+11ABj
.text:0000B29F                                         ; _do_ssh2_transport+11E3j
.text:0000B29F                 lea     ecx, [ebp+var_4C]
.text:0000B2A2                 push    ecx
.text:0000B2A3                 lea     edx, [ebp+Buf2]
.text:0000B2A6                 push    edx
.text:0000B2A7                 mov     eax, [ebp+arg_C]
.text:0000B2AA                 push    eax
.text:0000B2AB                 call    _ssh_pkt_getstring
.text:0000B2B0                 add     esp, 0Ch
.text:0000B2B3                 cmp     [ebp+Buf2], 0
.text:0000B2B7                 jnz     short loc_B2E5
.text:0000B2B9                 push    offset $SG91783 ; "KEXINIT packet was incomplete"
.text:0000B2BE                 call    _dupprintf
.text:0000B2C3                 add     esp, 4
.text:0000B2C6                 push    eax
.text:0000B2C7                 mov     ecx, [ebp+arg_0]
.text:0000B2CA                 push    ecx
.text:0000B2CB                 call    _bomb_out
.text:0000B2D0                 add     esp, 8
.text:0000B2D3
.text:0000B2D3 loc_B2D3:                               ; CODE XREF: _do_ssh2_transport+122Bj
.text:0000B2D3                 mov     edx, [ebp+var_10]
.text:0000B2D6                 mov     dword ptr [edx], 0
.text:0000B2DC                 jmp     loc_D155
.text:0000B2E1 ; ---------------------------------------------------------------------------
.text:0000B2E1                 xor     eax, eax
.text:0000B2E3                 jnz     short loc_B2D3
.text:0000B2E5
.text:0000B2E5 loc_B2E5:                               ; CODE XREF: _do_ssh2_transport+11FFj
.text:0000B2E5                 mov     [ebp+var_40], 0
.text:0000B2EC                 jmp     short loc_B2F7
.text:0000B2EE ; ---------------------------------------------------------------------------
.text:0000B2EE
.text:0000B2EE loc_B2EE:                               ; CODE XREF: _do_ssh2_transport:loc_B399j
.text:0000B2EE                 mov     ecx, [ebp+var_40]
.text:0000B2F1                 add     ecx, 1
.text:0000B2F4                 mov     [ebp+var_40], ecx
.text:0000B2F7
.text:0000B2F7 loc_B2F7:                               ; CODE XREF: _do_ssh2_transport+1234j
.text:0000B2F7                 cmp     [ebp+var_40], 3
.text:0000B2FB                 jnb     loc_B39E
.text:0000B301                 cmp     [ebp+var_40], 0
.text:0000B305                 jnz     short loc_B318
.text:0000B307                 mov     edx, [ebp+var_C]
.text:0000B30A                 mov     eax, [edx+0D8h]
.text:0000B310                 mov     [ebp+var_154], eax
.text:0000B316                 jmp     short loc_B328
.text:0000B318 ; ---------------------------------------------------------------------------
.text:0000B318
.text:0000B318 loc_B318:                               ; CODE XREF: _do_ssh2_transport+124Dj
.text:0000B318                 mov     ecx, [ebp+var_40]
.text:0000B31B                 mov     edx, dword_C28[ecx*4]
.text:0000B322                 mov     [ebp+var_154], edx
.text:0000B328
.text:0000B328 loc_B328:                               ; CODE XREF: _do_ssh2_transport+125Ej
.text:0000B328                 mov     eax, [ebp+var_154]
.text:0000B32E                 mov     [ebp+var_60], eax
.text:0000B331                 mov     ecx, [ebp+var_4C]
.text:0000B334                 push    ecx             ; int
.text:0000B335                 mov     edx, [ebp+Buf2]
.text:0000B338                 push    edx             ; Buf2
.text:0000B339                 mov     eax, [ebp+var_60]
.text:0000B33C                 mov     ecx, [eax]
.text:0000B33E                 push    ecx             ; Str
.text:0000B33F                 call    _in_commasep_string
.text:0000B344                 add     esp, 0Ch
.text:0000B347                 test    eax, eax
.text:0000B349                 jz      short loc_B358
.text:0000B34B                 mov     edx, [ebp+var_C]
.text:0000B34E                 mov     eax, [ebp+var_60]
.text:0000B351                 mov     [edx+54h], eax
.text:0000B354                 jmp     short loc_B39E
.text:0000B356 ; ---------------------------------------------------------------------------
.text:0000B356                 jmp     short loc_B399
.text:0000B358 ; ---------------------------------------------------------------------------
.text:0000B358
.text:0000B358 loc_B358:                               ; CODE XREF: _do_ssh2_transport+1291j
.text:0000B358                 mov     ecx, [ebp+var_4C]
.text:0000B35B                 push    ecx             ; int
.text:0000B35C                 mov     edx, [ebp+Buf2]
.text:0000B35F                 push    edx             ; Buf2
.text:0000B360                 mov     eax, [ebp+var_60]
.text:0000B363                 mov     ecx, [eax+4]
.text:0000B366                 push    ecx             ; Str
.text:0000B367                 call    _in_commasep_string
.text:0000B36C                 add     esp, 0Ch
.text:0000B36F                 test    eax, eax
.text:0000B371                 jz      short loc_B399
.text:0000B373                 mov     edx, [ebp+var_C]
.text:0000B376                 cmp     dword ptr [edx+0DCh], 0
.text:0000B37D                 jz      short loc_B38C
.text:0000B37F                 mov     eax, [ebp+var_C]
.text:0000B382                 mov     ecx, [ebp+var_60]
.text:0000B385                 mov     [eax+54h], ecx
.text:0000B388                 jmp     short loc_B39E
.text:0000B38A ; ---------------------------------------------------------------------------
.text:0000B38A                 jmp     short loc_B399
.text:0000B38C ; ---------------------------------------------------------------------------
.text:0000B38C
.text:0000B38C loc_B38C:                               ; CODE XREF: _do_ssh2_transport+12C5j
.text:0000B38C                 mov     edx, [ebp+var_C]
.text:0000B38F                 mov     dword ptr [edx+0E0h], 1
.text:0000B399
.text:0000B399 loc_B399:                               ; CODE XREF: _do_ssh2_transport+129Ej
.text:0000B399                                         ; _do_ssh2_transport+12B9j ...
.text:0000B399                 jmp     loc_B2EE
.text:0000B39E ; ---------------------------------------------------------------------------
.text:0000B39E
.text:0000B39E loc_B39E:                               ; CODE XREF: _do_ssh2_transport+1243j
.text:0000B39E                                         ; _do_ssh2_transport+129Cj ...
.text:0000B39E                 lea     eax, [ebp+var_4C]
.text:0000B3A1                 push    eax
.text:0000B3A2                 lea     ecx, [ebp+Buf2]
.text:0000B3A5                 push    ecx
.text:0000B3A6                 mov     edx, [ebp+arg_C]
.text:0000B3A9                 push    edx
.text:0000B3AA                 call    _ssh_pkt_getstring
.text:0000B3AF                 add     esp, 0Ch
.text:0000B3B2                 cmp     [ebp+Buf2], 0
.text:0000B3B6                 jnz     short loc_B3E4
.text:0000B3B8                 push    offset $SG91797 ; "KEXINIT packet was incomplete"
.text:0000B3BD                 call    _dupprintf
.text:0000B3C2                 add     esp, 4
.text:0000B3C5                 push    eax
.text:0000B3C6                 mov     eax, [ebp+arg_0]
.text:0000B3C9                 push    eax
.text:0000B3CA                 call    _bomb_out
.text:0000B3CF                 add     esp, 8
.text:0000B3D2
.text:0000B3D2 loc_B3D2:                               ; CODE XREF: _do_ssh2_transport+132Aj
.text:0000B3D2                 mov     ecx, [ebp+var_10]
.text:0000B3D5                 mov     dword ptr [ecx], 0
.text:0000B3DB                 jmp     loc_D155
.text:0000B3E0 ; ---------------------------------------------------------------------------
.text:0000B3E0                 xor     edx, edx
.text:0000B3E2                 jnz     short loc_B3D2
.text:0000B3E4
.text:0000B3E4 loc_B3E4:                               ; CODE XREF: _do_ssh2_transport+12FEj
.text:0000B3E4                 mov     [ebp+var_40], 0
.text:0000B3EB                 jmp     short loc_B3F6
.text:0000B3ED ; ---------------------------------------------------------------------------
.text:0000B3ED
.text:0000B3ED loc_B3ED:                               ; CODE XREF: _do_ssh2_transport:loc_B498j
.text:0000B3ED                 mov     eax, [ebp+var_40]
.text:0000B3F0                 add     eax, 1
.text:0000B3F3                 mov     [ebp+var_40], eax
.text:0000B3F6
.text:0000B3F6 loc_B3F6:                               ; CODE XREF: _do_ssh2_transport+1333j
.text:0000B3F6                 cmp     [ebp+var_40], 3
.text:0000B3FA                 jnb     loc_B49D
.text:0000B400                 cmp     [ebp+var_40], 0
.text:0000B404                 jnz     short loc_B417
.text:0000B406                 mov     ecx, [ebp+var_C]
.text:0000B409                 mov     edx, [ecx+0D8h]
.text:0000B40F                 mov     [ebp+var_158], edx
.text:0000B415                 jmp     short loc_B427
.text:0000B417 ; ---------------------------------------------------------------------------
.text:0000B417
.text:0000B417 loc_B417:                               ; CODE XREF: _do_ssh2_transport+134Cj
.text:0000B417                 mov     eax, [ebp+var_40]
.text:0000B41A                 mov     ecx, dword_C28[eax*4]
.text:0000B421                 mov     [ebp+var_158], ecx
.text:0000B427
.text:0000B427 loc_B427:                               ; CODE XREF: _do_ssh2_transport+135Dj
.text:0000B427                 mov     edx, [ebp+var_158]
.text:0000B42D                 mov     [ebp+var_64], edx
.text:0000B430                 mov     eax, [ebp+var_4C]
.text:0000B433                 push    eax             ; int
.text:0000B434                 mov     ecx, [ebp+Buf2]
.text:0000B437                 push    ecx             ; Buf2
.text:0000B438                 mov     edx, [ebp+var_64]
.text:0000B43B                 mov     eax, [edx]
.text:0000B43D                 push    eax             ; Str
.text:0000B43E                 call    _in_commasep_string
.text:0000B443                 add     esp, 0Ch
.text:0000B446                 test    eax, eax
.text:0000B448                 jz      short loc_B457
.text:0000B44A                 mov     ecx, [ebp+var_C]
.text:0000B44D                 mov     edx, [ebp+var_64]
.text:0000B450                 mov     [ecx+58h], edx
.text:0000B453                 jmp     short loc_B49D
.text:0000B455 ; ---------------------------------------------------------------------------
.text:0000B455                 jmp     short loc_B498
.text:0000B457 ; ---------------------------------------------------------------------------
.text:0000B457
.text:0000B457 loc_B457:                               ; CODE XREF: _do_ssh2_transport+1390j
.text:0000B457                 mov     eax, [ebp+var_4C]
.text:0000B45A                 push    eax             ; int
.text:0000B45B                 mov     ecx, [ebp+Buf2]
.text:0000B45E                 push    ecx             ; Buf2
.text:0000B45F                 mov     edx, [ebp+var_64]
.text:0000B462                 mov     eax, [edx+4]
.text:0000B465                 push    eax             ; Str
.text:0000B466                 call    _in_commasep_string
.text:0000B46B                 add     esp, 0Ch
.text:0000B46E                 test    eax, eax
.text:0000B470                 jz      short loc_B498
.text:0000B472                 mov     ecx, [ebp+var_C]
.text:0000B475                 cmp     dword ptr [ecx+0DCh], 0
.text:0000B47C                 jz      short loc_B48B
.text:0000B47E                 mov     edx, [ebp+var_C]
.text:0000B481                 mov     eax, [ebp+var_64]
.text:0000B484                 mov     [edx+58h], eax
.text:0000B487                 jmp     short loc_B49D
.text:0000B489 ; ---------------------------------------------------------------------------
.text:0000B489                 jmp     short loc_B498
.text:0000B48B ; ---------------------------------------------------------------------------
.text:0000B48B
.text:0000B48B loc_B48B:                               ; CODE XREF: _do_ssh2_transport+13C4j
.text:0000B48B                 mov     ecx, [ebp+var_C]
.text:0000B48E                 mov     dword ptr [ecx+0E0h], 1
.text:0000B498
.text:0000B498 loc_B498:                               ; CODE XREF: _do_ssh2_transport+139Dj
.text:0000B498                                         ; _do_ssh2_transport+13B8j ...
.text:0000B498                 jmp     loc_B3ED
.text:0000B49D ; ---------------------------------------------------------------------------
.text:0000B49D
.text:0000B49D loc_B49D:                               ; CODE XREF: _do_ssh2_transport+1342j
.text:0000B49D                                         ; _do_ssh2_transport+139Bj ...
.text:0000B49D                 mov     edx, [ebp+var_C]
.text:0000B4A0                 cmp     dword ptr [edx+0E0h], 0
.text:0000B4A7                 jz      short loc_B4C0
.text:0000B4A9                 push    offset $SG91811 ; "Server supports delayed compression; wi"...
.text:0000B4AE                 mov     eax, [ebp+arg_0]
.text:0000B4B1                 mov     ecx, [eax+0E4h]
.text:0000B4B7                 push    ecx
.text:0000B4B8                 call    _logevent
.text:0000B4BD                 add     esp, 8
.text:0000B4C0
.text:0000B4C0 loc_B4C0:                               ; CODE XREF: _do_ssh2_transport+13EFj
.text:0000B4C0                 lea     edx, [ebp+var_4C]
.text:0000B4C3                 push    edx
.text:0000B4C4                 lea     eax, [ebp+Buf2]
.text:0000B4C7                 push    eax
.text:0000B4C8                 mov     ecx, [ebp+arg_C]
.text:0000B4CB                 push    ecx
.text:0000B4CC                 call    _ssh_pkt_getstring
.text:0000B4D1                 add     esp, 0Ch
.text:0000B4D4                 lea     edx, [ebp+var_4C]
.text:0000B4D7                 push    edx
.text:0000B4D8                 lea     eax, [ebp+Buf2]
.text:0000B4DB                 push    eax
.text:0000B4DC                 mov     ecx, [ebp+arg_C]
.text:0000B4DF                 push    ecx
.text:0000B4E0                 call    _ssh_pkt_getstring
.text:0000B4E5                 add     esp, 0Ch
.text:0000B4E8                 mov     edx, [ebp+arg_C]
.text:0000B4EB                 push    edx
.text:0000B4EC                 call    _ssh2_pkt_getbool
.text:0000B4F1                 add     esp, 4
.text:0000B4F4                 test    eax, eax
.text:0000B4F6                 jz      short loc_B510
.text:0000B4F8                 mov     eax, [ebp+var_C]
.text:0000B4FB                 cmp     dword ptr [eax+0F4h], 0
.text:0000B502                 jnz     short loc_B510
.text:0000B504                 mov     [ebp+var_15C], 1
.text:0000B50E                 jmp     short loc_B51A
.text:0000B510 ; ---------------------------------------------------------------------------
.text:0000B510
.text:0000B510 loc_B510:                               ; CODE XREF: _do_ssh2_transport+143Ej
.text:0000B510                                         ; _do_ssh2_transport+144Aj
.text:0000B510                 mov     [ebp+var_15C], 0
.text:0000B51A
.text:0000B51A loc_B51A:                               ; CODE XREF: _do_ssh2_transport+1456j
.text:0000B51A                 mov     ecx, [ebp+var_C]
.text:0000B51D                 mov     edx, [ebp+var_15C]
.text:0000B523                 mov     [ecx+0F8h], edx
.text:0000B529                 mov     eax, [ebp+arg_0]
.text:0000B52C                 mov     ecx, [eax+90h]
.text:0000B532                 mov     edx, [ecx+1Ch]
.text:0000B535                 mov     esi, esp
.text:0000B537                 mov     eax, [edx]
.text:0000B539                 call    eax
.text:0000B53B                 cmp     esi, esp
.text:0000B53D                 call    __RTC_CheckEsp
.text:0000B542                 mov     ecx, [ebp+arg_0]
.text:0000B545                 mov     [ecx+0Ch], eax
.text:0000B548                 mov     edx, [ebp+arg_0]
.text:0000B54B                 mov     eax, [edx+4]
.text:0000B54E                 push    eax             ; Str
.text:0000B54F                 call    _strlen
.text:0000B554                 add     esp, 4
.text:0000B557                 push    eax
.text:0000B558                 mov     ecx, [ebp+arg_0]
.text:0000B55B                 mov     edx, [ecx+4]
.text:0000B55E                 push    edx
.text:0000B55F                 mov     eax, [ebp+arg_0]
.text:0000B562                 mov     ecx, [eax+0Ch]
.text:0000B565                 push    ecx
.text:0000B566                 mov     edx, [ebp+arg_0]
.text:0000B569                 mov     eax, [edx+90h]
.text:0000B56F                 mov     ecx, [eax+1Ch]
.text:0000B572                 push    ecx
.text:0000B573                 call    _hash_string
.text:0000B578                 add     esp, 10h
.text:0000B57B                 mov     edx, [ebp+arg_0]
.text:0000B57E                 mov     eax, [edx+8]
.text:0000B581                 push    eax             ; Str
.text:0000B582                 call    _strlen
.text:0000B587                 add     esp, 4
.text:0000B58A                 push    eax
.text:0000B58B                 mov     ecx, [ebp+arg_0]
.text:0000B58E                 mov     edx, [ecx+8]
.text:0000B591                 push    edx
.text:0000B592                 mov     eax, [ebp+arg_0]
.text:0000B595                 mov     ecx, [eax+0Ch]
.text:0000B598                 push    ecx
.text:0000B599                 mov     edx, [ebp+arg_0]
.text:0000B59C                 mov     eax, [edx+90h]
.text:0000B5A2                 mov     ecx, [eax+1Ch]
.text:0000B5A5                 push    ecx
.text:0000B5A6                 call    _hash_string
.text:0000B5AB                 add     esp, 10h
.text:0000B5AE                 mov     edx, [ebp+var_C]
.text:0000B5B1                 mov     eax, [edx+30h]
.text:0000B5B4                 push    eax
.text:0000B5B5                 mov     ecx, [ebp+var_C]
.text:0000B5B8                 mov     edx, [ecx+2Ch]
.text:0000B5BB                 push    edx
.text:0000B5BC                 mov     eax, [ebp+arg_0]
.text:0000B5BF                 mov     ecx, [eax+0Ch]
.text:0000B5C2                 push    ecx
.text:0000B5C3                 mov     edx, [ebp+arg_0]
.text:0000B5C6                 mov     eax, [edx+90h]
.text:0000B5CC                 mov     ecx, [eax+1Ch]
.text:0000B5CF                 push    ecx
.text:0000B5D0                 call    _hash_string
.text:0000B5D5                 add     esp, 10h
.text:0000B5D8                 mov     edx, [ebp+var_C]
.text:0000B5DB                 mov     eax, [edx+2Ch]
.text:0000B5DE                 push    eax
.text:0000B5DF                 call    _safefree
.text:0000B5E4                 add     esp, 4
.text:0000B5E7                 mov     ecx, [ebp+arg_C]
.text:0000B5EA                 mov     edx, [ecx]
.text:0000B5EC                 add     edx, 1
.text:0000B5EF                 push    edx
.text:0000B5F0                 mov     eax, [ebp+arg_C]
.text:0000B5F3                 mov     ecx, [eax+14h]
.text:0000B5F6                 sub     ecx, 1
.text:0000B5F9                 push    ecx
.text:0000B5FA                 mov     edx, [ebp+arg_0]
.text:0000B5FD                 mov     eax, [edx+0Ch]
.text:0000B600                 push    eax
.text:0000B601                 mov     ecx, [ebp+arg_0]
.text:0000B604                 mov     edx, [ecx+90h]
.text:0000B60A                 mov     eax, [edx+1Ch]
.text:0000B60D                 push    eax
.text:0000B60E                 call    _hash_string
.text:0000B613                 add     esp, 10h
.text:0000B616                 mov     ecx, [ebp+var_C]
.text:0000B619                 cmp     dword ptr [ecx+0Ch], 0
.text:0000B61D                 jz      loc_B717
.text:0000B623                 push    1
.text:0000B625                 mov     edx, [ebp+arg_0]
.text:0000B628                 push    edx
.text:0000B629                 call    _ssh_set_frozen
.text:0000B62E                 add     esp, 8
.text:0000B631                 mov     eax, [ebp+arg_0]
.text:0000B634                 push    eax
.text:0000B635                 push    offset _ssh_dialog_callback
.text:0000B63A                 mov     ecx, [ebp+arg_0]
.text:0000B63D                 mov     edx, [ecx+90h]
.text:0000B643                 mov     eax, [edx]
.text:0000B645                 push    eax
.text:0000B646                 push    offset $SG91813 ; "key-exchange algorithm"
.text:0000B64B                 mov     ecx, [ebp+arg_0]
.text:0000B64E                 mov     edx, [ecx+0E4h]
.text:0000B654                 push    edx
.text:0000B655                 call    _askalg
.text:0000B65A                 add     esp, 14h
.text:0000B65D                 mov     ecx, [ebp+var_C]
.text:0000B660                 mov     [ecx+0F0h], eax
.text:0000B666                 mov     edx, [ebp+var_C]
.text:0000B669                 cmp     dword ptr [edx+0F0h], 0
.text:0000B670                 jge     short loc_B6D4
.text:0000B672
.text:0000B672 loc_B672:                               ; CODE XREF: _do_ssh2_transport+15CAj
.text:0000B672                                         ; _do_ssh2_transport+1602j ...
.text:0000B672                 mov     eax, [ebp+var_10]
.text:0000B675                 mov     dword ptr [eax], 195Dh
.text:0000B67B                 jmp     loc_D155
.text:0000B680 ; ---------------------------------------------------------------------------
.text:0000B680
.text:0000B680 loc_B680:                               ; CODE XREF: _do_ssh2_transport+112j
.text:0000B680                 xor     ecx, ecx
.text:0000B682                 jnz     short loc_B672
.text:0000B684                 cmp     [ebp+arg_C], 0
.text:0000B688                 jz      short loc_B6B6
.text:0000B68A                 push    offset $SG91823 ; "Unexpected data from server while waiti"...
.text:0000B68F                 call    _dupprintf
.text:0000B694                 add     esp, 4
.text:0000B697                 push    eax
.text:0000B698                 mov     edx, [ebp+arg_0]
.text:0000B69B                 push    edx
.text:0000B69C                 call    _bomb_out
.text:0000B6A1                 add     esp, 8
.text:0000B6A4
.text:0000B6A4 loc_B6A4:                               ; CODE XREF: _do_ssh2_transport+15FCj
.text:0000B6A4                 mov     eax, [ebp+var_10]
.text:0000B6A7                 mov     dword ptr [eax], 0
.text:0000B6AD                 jmp     loc_D155
.text:0000B6B2 ; ---------------------------------------------------------------------------
.text:0000B6B2                 xor     ecx, ecx
.text:0000B6B4                 jnz     short loc_B6A4
.text:0000B6B6
.text:0000B6B6 loc_B6B6:                               ; CODE XREF: _do_ssh2_transport+15D0j
.text:0000B6B6                 cmp     [ebp+arg_C], 0
.text:0000B6BA                 jnz     short loc_B672
.text:0000B6BC                 cmp     [ebp+arg_8], 0
.text:0000B6C0                 jg      short loc_B672
.text:0000B6C2                 mov     edx, [ebp+var_C]
.text:0000B6C5                 mov     eax, [ebp+arg_0]
.text:0000B6C8                 mov     ecx, [eax+230h]
.text:0000B6CE                 mov     [edx+0F0h], ecx
.text:0000B6D4
.text:0000B6D4 loc_B6D4:                               ; CODE XREF: _do_ssh2_transport+15B8j
.text:0000B6D4                 push    0
.text:0000B6D6                 mov     edx, [ebp+arg_0]
.text:0000B6D9                 push    edx
.text:0000B6DA                 call    _ssh_set_frozen
.text:0000B6DF                 add     esp, 8
.text:0000B6E2                 mov     eax, [ebp+var_C]
.text:0000B6E5                 cmp     dword ptr [eax+0F0h], 0
.text:0000B6EC                 jnz     short loc_B717
.text:0000B6EE                 push    1               ; int
.text:0000B6F0                 push    0               ; int
.text:0000B6F2                 push    0               ; Str
.text:0000B6F4                 push    offset $SG91829 ; "User aborted at kex warning"
.text:0000B6F9                 mov     ecx, [ebp+arg_0]
.text:0000B6FC                 push    ecx             ; int
.text:0000B6FD                 call    _ssh_disconnect
.text:0000B702                 add     esp, 14h
.text:0000B705
.text:0000B705 loc_B705:                               ; CODE XREF: _do_ssh2_transport+165Dj
.text:0000B705                 mov     edx, [ebp+var_10]
.text:0000B708                 mov     dword ptr [edx], 0
.text:0000B70E                 jmp     loc_D155
.text:0000B713 ; ---------------------------------------------------------------------------
.text:0000B713                 xor     eax, eax
.text:0000B715                 jnz     short loc_B705
.text:0000B717
.text:0000B717 loc_B717:                               ; CODE XREF: _do_ssh2_transport+1565j
.text:0000B717                                         ; _do_ssh2_transport+1634j
.text:0000B717                 mov     ecx, [ebp+var_C]
.text:0000B71A                 cmp     dword ptr [ecx+10h], 0
.text:0000B71E                 jz      loc_B816
.text:0000B724                 push    1
.text:0000B726                 mov     edx, [ebp+arg_0]
.text:0000B729                 push    edx
.text:0000B72A                 call    _ssh_set_frozen
.text:0000B72F                 add     esp, 8
.text:0000B732                 mov     eax, [ebp+arg_0]
.text:0000B735                 push    eax
.text:0000B736                 push    offset _ssh_dialog_callback
.text:0000B73B                 mov     ecx, [ebp+var_C]
.text:0000B73E                 mov     edx, [ecx+44h]
.text:0000B741                 mov     eax, [edx+18h]
.text:0000B744                 push    eax
.text:0000B745                 push    offset $SG91834 ; "client-to-server cipher"
.text:0000B74A                 mov     ecx, [ebp+arg_0]
.text:0000B74D                 mov     edx, [ecx+0E4h]
.text:0000B753                 push    edx
.text:0000B754                 call    _askalg
.text:0000B759                 add     esp, 14h
.text:0000B75C                 mov     ecx, [ebp+var_C]
.text:0000B75F                 mov     [ecx+0F0h], eax
.text:0000B765                 mov     edx, [ebp+var_C]
.text:0000B768                 cmp     dword ptr [edx+0F0h], 0
.text:0000B76F                 jge     short loc_B7D3
.text:0000B771
.text:0000B771 loc_B771:                               ; CODE XREF: _do_ssh2_transport+16C9j
.text:0000B771                                         ; _do_ssh2_transport+1701j ...
.text:0000B771                 mov     eax, [ebp+var_10]
.text:0000B774                 mov     dword ptr [eax], 1976h
.text:0000B77A                 jmp     loc_D155
.text:0000B77F ; ---------------------------------------------------------------------------
.text:0000B77F
.text:0000B77F loc_B77F:                               ; CODE XREF: _do_ssh2_transport+E5j
.text:0000B77F                 xor     ecx, ecx
.text:0000B781                 jnz     short loc_B771
.text:0000B783                 cmp     [ebp+arg_C], 0
.text:0000B787                 jz      short loc_B7B5
.text:0000B789                 push    offset $SG91844 ; "Unexpected data from server while waiti"...
.text:0000B78E                 call    _dupprintf
.text:0000B793                 add     esp, 4
.text:0000B796                 push    eax
.text:0000B797                 mov     edx, [ebp+arg_0]
.text:0000B79A                 push    edx
.text:0000B79B                 call    _bomb_out
.text:0000B7A0                 add     esp, 8
.text:0000B7A3
.text:0000B7A3 loc_B7A3:                               ; CODE XREF: _do_ssh2_transport+16FBj
.text:0000B7A3                 mov     eax, [ebp+var_10]
.text:0000B7A6                 mov     dword ptr [eax], 0
.text:0000B7AC                 jmp     loc_D155
.text:0000B7B1 ; ---------------------------------------------------------------------------
.text:0000B7B1                 xor     ecx, ecx
.text:0000B7B3                 jnz     short loc_B7A3
.text:0000B7B5
.text:0000B7B5 loc_B7B5:                               ; CODE XREF: _do_ssh2_transport+16CFj
.text:0000B7B5                 cmp     [ebp+arg_C], 0
.text:0000B7B9                 jnz     short loc_B771
.text:0000B7BB                 cmp     [ebp+arg_8], 0
.text:0000B7BF                 jg      short loc_B771
.text:0000B7C1                 mov     edx, [ebp+var_C]
.text:0000B7C4                 mov     eax, [ebp+arg_0]
.text:0000B7C7                 mov     ecx, [eax+230h]
.text:0000B7CD                 mov     [edx+0F0h], ecx
.text:0000B7D3
.text:0000B7D3 loc_B7D3:                               ; CODE XREF: _do_ssh2_transport+16B7j
.text:0000B7D3                 push    0
.text:0000B7D5                 mov     edx, [ebp+arg_0]
.text:0000B7D8                 push    edx
.text:0000B7D9                 call    _ssh_set_frozen
.text:0000B7DE                 add     esp, 8
.text:0000B7E1                 mov     eax, [ebp+var_C]
.text:0000B7E4                 cmp     dword ptr [eax+0F0h], 0
.text:0000B7EB                 jnz     short loc_B816
.text:0000B7ED                 push    1               ; int
.text:0000B7EF                 push    0               ; int
.text:0000B7F1                 push    0               ; Str
.text:0000B7F3                 push    offset $SG91850 ; "User aborted at cipher warning"
.text:0000B7F8                 mov     ecx, [ebp+arg_0]
.text:0000B7FB                 push    ecx             ; int
.text:0000B7FC                 call    _ssh_disconnect
.text:0000B801                 add     esp, 14h
.text:0000B804
.text:0000B804 loc_B804:                               ; CODE XREF: _do_ssh2_transport+175Cj
.text:0000B804                 mov     edx, [ebp+var_10]
.text:0000B807                 mov     dword ptr [edx], 0
.text:0000B80D                 jmp     loc_D155
.text:0000B812 ; ---------------------------------------------------------------------------
.text:0000B812                 xor     eax, eax
.text:0000B814                 jnz     short loc_B804
.text:0000B816
.text:0000B816 loc_B816:                               ; CODE XREF: _do_ssh2_transport+1666j
.text:0000B816                                         ; _do_ssh2_transport+1733j
.text:0000B816                 mov     ecx, [ebp+var_C]
.text:0000B819                 cmp     dword ptr [ecx+14h], 0
.text:0000B81D                 jz      loc_B915
.text:0000B823                 push    1
.text:0000B825                 mov     edx, [ebp+arg_0]
.text:0000B828                 push    edx
.text:0000B829                 call    _ssh_set_frozen
.text:0000B82E                 add     esp, 8
.text:0000B831                 mov     eax, [ebp+arg_0]
.text:0000B834                 push    eax
.text:0000B835                 push    offset _ssh_dialog_callback
.text:0000B83A                 mov     ecx, [ebp+var_C]
.text:0000B83D                 mov     edx, [ecx+48h]
.text:0000B840                 mov     eax, [edx+18h]
.text:0000B843                 push    eax
.text:0000B844                 push    offset $SG91855 ; "server-to-client cipher"
.text:0000B849                 mov     ecx, [ebp+arg_0]
.text:0000B84C                 mov     edx, [ecx+0E4h]
.text:0000B852                 push    edx
.text:0000B853                 call    _askalg
.text:0000B858                 add     esp, 14h
.text:0000B85B                 mov     ecx, [ebp+var_C]
.text:0000B85E                 mov     [ecx+0F0h], eax
.text:0000B864                 mov     edx, [ebp+var_C]
.text:0000B867                 cmp     dword ptr [edx+0F0h], 0
.text:0000B86E                 jge     short loc_B8D2
.text:0000B870
.text:0000B870 loc_B870:                               ; CODE XREF: _do_ssh2_transport+17C8j
.text:0000B870                                         ; _do_ssh2_transport+1800j ...
.text:0000B870                 mov     eax, [ebp+var_10]
.text:0000B873                 mov     dword ptr [eax], 198Fh
.text:0000B879                 jmp     loc_D155
.text:0000B87E ; ---------------------------------------------------------------------------
.text:0000B87E
.text:0000B87E loc_B87E:                               ; CODE XREF: _do_ssh2_transport+127j
.text:0000B87E                 xor     ecx, ecx
.text:0000B880                 jnz     short loc_B870
.text:0000B882                 cmp     [ebp+arg_C], 0
.text:0000B886                 jz      short loc_B8B4
.text:0000B888                 push    offset $SG91865 ; "Unexpected data from server while waiti"...
.text:0000B88D                 call    _dupprintf
.text:0000B892                 add     esp, 4
.text:0000B895                 push    eax
.text:0000B896                 mov     edx, [ebp+arg_0]
.text:0000B899                 push    edx
.text:0000B89A                 call    _bomb_out
.text:0000B89F                 add     esp, 8
.text:0000B8A2
.text:0000B8A2 loc_B8A2:                               ; CODE XREF: _do_ssh2_transport+17FAj
.text:0000B8A2                 mov     eax, [ebp+var_10]
.text:0000B8A5                 mov     dword ptr [eax], 0
.text:0000B8AB                 jmp     loc_D155
.text:0000B8B0 ; ---------------------------------------------------------------------------
.text:0000B8B0                 xor     ecx, ecx
.text:0000B8B2                 jnz     short loc_B8A2
.text:0000B8B4
.text:0000B8B4 loc_B8B4:                               ; CODE XREF: _do_ssh2_transport+17CEj
.text:0000B8B4                 cmp     [ebp+arg_C], 0
.text:0000B8B8                 jnz     short loc_B870
.text:0000B8BA                 cmp     [ebp+arg_8], 0
.text:0000B8BE                 jg      short loc_B870
.text:0000B8C0                 mov     edx, [ebp+var_C]
.text:0000B8C3                 mov     eax, [ebp+arg_0]
.text:0000B8C6                 mov     ecx, [eax+230h]
.text:0000B8CC                 mov     [edx+0F0h], ecx
.text:0000B8D2
.text:0000B8D2 loc_B8D2:                               ; CODE XREF: _do_ssh2_transport+17B6j
.text:0000B8D2                 push    0
.text:0000B8D4                 mov     edx, [ebp+arg_0]
.text:0000B8D7                 push    edx
.text:0000B8D8                 call    _ssh_set_frozen
.text:0000B8DD                 add     esp, 8
.text:0000B8E0                 mov     eax, [ebp+var_C]
.text:0000B8E3                 cmp     dword ptr [eax+0F0h], 0
.text:0000B8EA                 jnz     short loc_B915
.text:0000B8EC                 push    1               ; int
.text:0000B8EE                 push    0               ; int
.text:0000B8F0                 push    0               ; Str
.text:0000B8F2                 push    offset $SG91871 ; "User aborted at cipher warning"
.text:0000B8F7                 mov     ecx, [ebp+arg_0]
.text:0000B8FA                 push    ecx             ; int
.text:0000B8FB                 call    _ssh_disconnect
.text:0000B900                 add     esp, 14h
.text:0000B903
.text:0000B903 loc_B903:                               ; CODE XREF: _do_ssh2_transport+185Bj
.text:0000B903                 mov     edx, [ebp+var_10]
.text:0000B906                 mov     dword ptr [edx], 0
.text:0000B90C                 jmp     loc_D155
.text:0000B911 ; ---------------------------------------------------------------------------
.text:0000B911                 xor     eax, eax
.text:0000B913                 jnz     short loc_B903
.text:0000B915
.text:0000B915 loc_B915:                               ; CODE XREF: _do_ssh2_transport+1765j
.text:0000B915                                         ; _do_ssh2_transport+1832j
.text:0000B915                 mov     ecx, [ebp+var_C]
.text:0000B918                 cmp     dword ptr [ecx+0F8h], 0
.text:0000B91F                 jz      short loc_B939
.text:0000B921
.text:0000B921 loc_B921:                               ; CODE XREF: _do_ssh2_transport+1879j
.text:0000B921                                         ; _do_ssh2_transport+187Fj
.text:0000B921                 mov     edx, [ebp+var_10]
.text:0000B924                 mov     dword ptr [edx], 19A1h
.text:0000B92A                 jmp     loc_D155
.text:0000B92F ; ---------------------------------------------------------------------------
.text:0000B92F
.text:0000B92F loc_B92F:                               ; CODE XREF: _do_ssh2_transport+137j
.text:0000B92F                 xor     eax, eax
.text:0000B931                 jnz     short loc_B921
.text:0000B933                 cmp     [ebp+arg_C], 0
.text:0000B937                 jz      short loc_B921
.text:0000B939
.text:0000B939 loc_B939:                               ; CODE XREF: _do_ssh2_transport+1867j
.text:0000B939                 mov     ecx, [ebp+arg_0]
.text:0000B93C                 mov     edx, [ecx+90h]
.text:0000B942                 cmp     dword ptr [edx+8], 0
.text:0000B946                 jnz     loc_BF15
.text:0000B94C                 mov     eax, [ebp+var_C]
.text:0000B94F                 mov     ecx, [eax+44h]
.text:0000B952                 mov     edx, [ecx+20h]
.text:0000B955                 mov     [ebp+var_68], edx
.text:0000B958                 mov     eax, [ebp+var_C]
.text:0000B95B                 mov     ecx, [eax+48h]
.text:0000B95E                 mov     edx, [ecx+20h]
.text:0000B961                 mov     [ebp+var_6C], edx
.text:0000B964                 mov     eax, [ebp+var_68]
.text:0000B967                 cmp     eax, [ebp+var_6C]
.text:0000B96A                 jle     short loc_B977
.text:0000B96C                 mov     ecx, [ebp+var_68]
.text:0000B96F                 mov     [ebp+var_160], ecx
.text:0000B975                 jmp     short loc_B980
.text:0000B977 ; ---------------------------------------------------------------------------
.text:0000B977
.text:0000B977 loc_B977:                               ; CODE XREF: _do_ssh2_transport+18B2j
.text:0000B977                 mov     edx, [ebp+var_6C]
.text:0000B97A                 mov     [ebp+var_160], edx
.text:0000B980
.text:0000B980 loc_B980:                               ; CODE XREF: _do_ssh2_transport+18BDj
.text:0000B980                 mov     eax, [ebp+var_C]
.text:0000B983                 mov     ecx, [ebp+var_160]
.text:0000B989                 mov     [eax+4], ecx
.text:0000B98C                 mov     edx, [ebp+arg_0]
.text:0000B98F                 mov     eax, [edx+90h]
.text:0000B995                 mov     ecx, [eax+1Ch]
.text:0000B998                 mov     edx, [ecx+0Ch]
.text:0000B99B                 shl     edx, 3
.text:0000B99E                 mov     eax, [ebp+var_C]
.text:0000B9A1                 cmp     [eax+4], edx
.text:0000B9A4                 jle     short loc_B9BE
.text:0000B9A6                 mov     ecx, [ebp+arg_0]
.text:0000B9A9                 mov     edx, [ecx+90h]
.text:0000B9AF                 mov     eax, [edx+1Ch]
.text:0000B9B2                 mov     ecx, [eax+0Ch]
.text:0000B9B5                 shl     ecx, 3
.text:0000B9B8                 mov     edx, [ebp+var_C]
.text:0000B9BB                 mov     [edx+4], ecx
.text:0000B9BE
.text:0000B9BE loc_B9BE:                               ; CODE XREF: _do_ssh2_transport+18ECj
.text:0000B9BE                 mov     eax, [ebp+arg_0]
.text:0000B9C1                 mov     ecx, [eax+90h]
.text:0000B9C7                 cmp     dword ptr [ecx+0Ch], 0
.text:0000B9CB                 jnz     loc_BB3C
.text:0000B9D1                 push    offset $SG91888 ; "Doing Diffie-Hellman group exchange"
.text:0000B9D6                 mov     edx, [ebp+arg_0]
.text:0000B9D9                 mov     eax, [edx+0E4h]
.text:0000B9DF                 push    eax
.text:0000B9E0                 call    _logevent
.text:0000B9E5                 add     esp, 8
.text:0000B9E8                 mov     ecx, [ebp+arg_0]
.text:0000B9EB                 mov     dword ptr [ecx+158h], 2
.text:0000B9F5                 mov     edx, [ebp+var_C]
.text:0000B9F8                 mov     eax, [edx+4]
.text:0000B9FB                 sub     eax, 1
.text:0000B9FE                 cdq
.text:0000B9FF                 and     edx, 3Fh
.text:0000BA02                 add     eax, edx
.text:0000BA04                 sar     eax, 6
.text:0000BA07                 mov     edx, 200h
.text:0000BA0C                 mov     ecx, eax
.text:0000BA0E                 shl     edx, cl
.text:0000BA10                 mov     eax, [ebp+var_C]
.text:0000BA13                 mov     [eax+8], edx
.text:0000BA16                 push    1Eh
.text:0000BA18                 call    _ssh2_pkt_init
.text:0000BA1D                 add     esp, 4
.text:0000BA20                 mov     ecx, [ebp+var_C]
.text:0000BA23                 mov     [ecx+0ECh], eax
.text:0000BA29                 mov     edx, [ebp+var_C]
.text:0000BA2C                 mov     eax, [edx+8]
.text:0000BA2F                 push    eax
.text:0000BA30                 mov     ecx, [ebp+var_C]
.text:0000BA33                 mov     edx, [ecx+0ECh]
.text:0000BA39                 push    edx
.text:0000BA3A                 call    _ssh_pkt_adduint32
.text:0000BA3F                 add     esp, 8
.text:0000BA42                 mov     eax, [ebp+var_C]
.text:0000BA45                 mov     ecx, [eax+0ECh]
.text:0000BA4B                 push    ecx
.text:0000BA4C                 mov     edx, [ebp+arg_0]
.text:0000BA4F                 push    edx
.text:0000BA50                 call    _ssh2_pkt_send_noqueue
.text:0000BA55                 add     esp, 8
.text:0000BA58
.text:0000BA58 loc_BA58:                               ; CODE XREF: _do_ssh2_transport+19B0j
.text:0000BA58                                         ; _do_ssh2_transport+19B6j
.text:0000BA58                 mov     eax, [ebp+var_10]
.text:0000BA5B                 mov     dword ptr [eax], 19C6h
.text:0000BA61                 jmp     loc_D155
.text:0000BA66 ; ---------------------------------------------------------------------------
.text:0000BA66
.text:0000BA66 loc_BA66:                               ; CODE XREF: _do_ssh2_transport+C9j
.text:0000BA66                 xor     ecx, ecx
.text:0000BA68                 jnz     short loc_BA58
.text:0000BA6A                 cmp     [ebp+arg_C], 0
.text:0000BA6E                 jz      short loc_BA58
.text:0000BA70                 mov     edx, [ebp+arg_C]
.text:0000BA73                 cmp     dword ptr [edx+8], 1Fh
.text:0000BA77                 jz      short loc_BAA5
.text:0000BA79                 push    offset $SG91897 ; "expected key exchange group packet from"...
.text:0000BA7E                 call    _dupprintf
.text:0000BA83                 add     esp, 4
.text:0000BA86                 push    eax
.text:0000BA87                 mov     eax, [ebp+arg_0]
.text:0000BA8A                 push    eax
.text:0000BA8B                 call    _bomb_out
.text:0000BA90                 add     esp, 8
.text:0000BA93
.text:0000BA93 loc_BA93:                               ; CODE XREF: _do_ssh2_transport+19EBj
.text:0000BA93                 mov     ecx, [ebp+var_10]
.text:0000BA96                 mov     dword ptr [ecx], 0
.text:0000BA9C                 jmp     loc_D155
.text:0000BAA1 ; ---------------------------------------------------------------------------
.text:0000BAA1                 xor     edx, edx
.text:0000BAA3                 jnz     short loc_BA93
.text:0000BAA5
.text:0000BAA5 loc_BAA5:                               ; CODE XREF: _do_ssh2_transport+19BFj
.text:0000BAA5                 mov     eax, [ebp+arg_C]
.text:0000BAA8                 push    eax
.text:0000BAA9                 call    _ssh2_pkt_getmp
.text:0000BAAE                 add     esp, 4
.text:0000BAB1                 mov     ecx, [ebp+var_C]
.text:0000BAB4                 mov     [ecx+18h], eax
.text:0000BAB7                 mov     edx, [ebp+arg_C]
.text:0000BABA                 push    edx
.text:0000BABB                 call    _ssh2_pkt_getmp
.text:0000BAC0                 add     esp, 4
.text:0000BAC3                 mov     ecx, [ebp+var_C]
.text:0000BAC6                 mov     [ecx+1Ch], eax
.text:0000BAC9                 mov     edx, [ebp+var_C]
.text:0000BACC                 cmp     dword ptr [edx+18h], 0
.text:0000BAD0                 jz      short loc_BADB
.text:0000BAD2                 mov     eax, [ebp+var_C]
.text:0000BAD5                 cmp     dword ptr [eax+1Ch], 0
.text:0000BAD9                 jnz     short loc_BB07
.text:0000BADB
.text:0000BADB loc_BADB:                               ; CODE XREF: _do_ssh2_transport+1A18j
.text:0000BADB                 push    offset $SG91903 ; "unable to read mp-ints from incoming gr"...
.text:0000BAE0                 call    _dupprintf
.text:0000BAE5                 add     esp, 4
.text:0000BAE8                 push    eax
.text:0000BAE9                 mov     ecx, [ebp+arg_0]
.text:0000BAEC                 push    ecx
.text:0000BAED                 call    _bomb_out
.text:0000BAF2                 add     esp, 8
.text:0000BAF5
.text:0000BAF5 loc_BAF5:                               ; CODE XREF: _do_ssh2_transport+1A4Dj
.text:0000BAF5                 mov     edx, [ebp+var_10]
.text:0000BAF8                 mov     dword ptr [edx], 0
.text:0000BAFE                 jmp     loc_D155
.text:0000BB03 ; ---------------------------------------------------------------------------
.text:0000BB03                 xor     eax, eax
.text:0000BB05                 jnz     short loc_BAF5
.text:0000BB07
.text:0000BB07 loc_BB07:                               ; CODE XREF: _do_ssh2_transport+1A21j
.text:0000BB07                 mov     ecx, [ebp+var_C]
.text:0000BB0A                 mov     edx, [ecx+1Ch]
.text:0000BB0D                 push    edx
.text:0000BB0E                 mov     eax, [ebp+var_C]
.text:0000BB11                 mov     ecx, [eax+18h]
.text:0000BB14                 push    ecx
.text:0000BB15                 call    _dh_setup_gex
.text:0000BB1A                 add     esp, 8
.text:0000BB1D                 mov     edx, [ebp+arg_0]
.text:0000BB20                 mov     [edx+0C0h], eax
.text:0000BB26                 mov     eax, [ebp+var_C]
.text:0000BB29                 mov     dword ptr [eax+34h], 20h ; ' '
.text:0000BB30                 mov     ecx, [ebp+var_C]
.text:0000BB33                 mov     dword ptr [ecx+38h], 21h ; '!'
.text:0000BB3A                 jmp     short loc_BB96
.text:0000BB3C ; ---------------------------------------------------------------------------
.text:0000BB3C
.text:0000BB3C loc_BB3C:                               ; CODE XREF: _do_ssh2_transport+1913j
.text:0000BB3C                 mov     edx, [ebp+arg_0]
.text:0000BB3F                 mov     dword ptr [edx+158h], 1
.text:0000BB49                 mov     eax, [ebp+arg_0]
.text:0000BB4C                 mov     ecx, [eax+90h]
.text:0000BB52                 push    ecx
.text:0000BB53                 call    _dh_setup_group
.text:0000BB58                 add     esp, 4
.text:0000BB5B                 mov     edx, [ebp+arg_0]
.text:0000BB5E                 mov     [edx+0C0h], eax
.text:0000BB64                 mov     eax, [ebp+var_C]
.text:0000BB67                 mov     dword ptr [eax+34h], 1Eh
.text:0000BB6E                 mov     ecx, [ebp+var_C]
.text:0000BB71                 mov     dword ptr [ecx+38h], 1Fh
.text:0000BB78                 mov     edx, [ebp+arg_0]
.text:0000BB7B                 mov     eax, [edx+90h]
.text:0000BB81                 mov     ecx, [eax+4]
.text:0000BB84                 push    ecx
.text:0000BB85                 push    offset $SG91908 ; "Using Diffie-Hellman with standard grou"...
.text:0000BB8A                 mov     edx, [ebp+arg_0]
.text:0000BB8D                 push    edx
.text:0000BB8E                 call    _logeventf
.text:0000BB93                 add     esp, 0Ch
.text:0000BB96
.text:0000BB96 loc_BB96:                               ; CODE XREF: _do_ssh2_transport+1A82j
.text:0000BB96                 mov     eax, [ebp+arg_0]
.text:0000BB99                 mov     ecx, [eax+90h]
.text:0000BB9F                 mov     edx, [ecx+1Ch]
.text:0000BBA2                 mov     eax, [edx+10h]
.text:0000BBA5                 push    eax
.text:0000BBA6                 push    offset $SG91909 ; "Doing Diffie-Hellman key exchange with "...
.text:0000BBAB                 mov     ecx, [ebp+arg_0]
.text:0000BBAE                 push    ecx
.text:0000BBAF                 call    _logeventf
.text:0000BBB4                 add     esp, 0Ch
.text:0000BBB7                 push    2
.text:0000BBB9                 mov     edx, [ebp+arg_0]
.text:0000BBBC                 mov     eax, [edx+0E4h]
.text:0000BBC2                 push    eax
.text:0000BBC3                 call    _set_busy_status
.text:0000BBC8                 add     esp, 8
.text:0000BBCB                 mov     ecx, [ebp+var_C]
.text:0000BBCE                 mov     edx, [ecx+4]
.text:0000BBD1                 shl     edx, 1
.text:0000BBD3                 push    edx
.text:0000BBD4                 mov     eax, [ebp+arg_0]
.text:0000BBD7                 mov     ecx, [eax+0C0h]
.text:0000BBDD                 push    ecx
.text:0000BBDE                 call    _dh_create_e
.text:0000BBE3                 add     esp, 8
.text:0000BBE6                 mov     edx, [ebp+var_C]
.text:0000BBE9                 mov     [edx+20h], eax
.text:0000BBEC                 mov     eax, [ebp+var_C]
.text:0000BBEF                 mov     ecx, [eax+34h]
.text:0000BBF2                 push    ecx
.text:0000BBF3                 call    _ssh2_pkt_init
.text:0000BBF8                 add     esp, 4
.text:0000BBFB                 mov     edx, [ebp+var_C]
.text:0000BBFE                 mov     [edx+0ECh], eax
.text:0000BC04                 mov     eax, [ebp+var_C]
.text:0000BC07                 mov     ecx, [eax+20h]
.text:0000BC0A                 push    ecx
.text:0000BC0B                 mov     edx, [ebp+var_C]
.text:0000BC0E                 mov     eax, [edx+0ECh]
.text:0000BC14                 push    eax
.text:0000BC15                 call    _ssh2_pkt_addmp
.text:0000BC1A                 add     esp, 8
.text:0000BC1D                 mov     ecx, [ebp+var_C]
.text:0000BC20                 mov     edx, [ecx+0ECh]
.text:0000BC26                 push    edx
.text:0000BC27                 mov     eax, [ebp+arg_0]
.text:0000BC2A                 push    eax
.text:0000BC2B                 call    _ssh2_pkt_send_noqueue
.text:0000BC30                 add     esp, 8
.text:0000BC33                 push    1
.text:0000BC35                 mov     ecx, [ebp+arg_0]
.text:0000BC38                 mov     edx, [ecx+0E4h]
.text:0000BC3E                 push    edx
.text:0000BC3F                 call    _set_busy_status
.text:0000BC44                 add     esp, 8
.text:0000BC47
.text:0000BC47 loc_BC47:                               ; CODE XREF: _do_ssh2_transport+1B9Fj
.text:0000BC47                                         ; _do_ssh2_transport+1BA5j
.text:0000BC47                 mov     eax, [ebp+var_10]
.text:0000BC4A                 mov     dword ptr [eax], 19E9h
.text:0000BC50                 jmp     loc_D155
.text:0000BC55 ; ---------------------------------------------------------------------------
.text:0000BC55
.text:0000BC55 loc_BC55:                               ; CODE XREF: _do_ssh2_transport+168j
.text:0000BC55                 xor     ecx, ecx
.text:0000BC57                 jnz     short loc_BC47
.text:0000BC59                 cmp     [ebp+arg_C], 0
.text:0000BC5D                 jz      short loc_BC47
.text:0000BC5F                 mov     edx, [ebp+arg_C]
.text:0000BC62                 mov     eax, [ebp+var_C]
.text:0000BC65                 mov     ecx, [edx+8]
.text:0000BC68                 cmp     ecx, [eax+38h]
.text:0000BC6B                 jz      short loc_BC99
.text:0000BC6D                 push    offset $SG91918 ; "expected key exchange reply packet from"...
.text:0000BC72                 call    _dupprintf
.text:0000BC77                 add     esp, 4
.text:0000BC7A                 push    eax
.text:0000BC7B                 mov     edx, [ebp+arg_0]
.text:0000BC7E                 push    edx
.text:0000BC7F                 call    _bomb_out
.text:0000BC84                 add     esp, 8
.text:0000BC87
.text:0000BC87 loc_BC87:                               ; CODE XREF: _do_ssh2_transport+1BDFj
.text:0000BC87                 mov     eax, [ebp+var_10]
.text:0000BC8A                 mov     dword ptr [eax], 0
.text:0000BC90                 jmp     loc_D155
.text:0000BC95 ; ---------------------------------------------------------------------------
.text:0000BC95                 xor     ecx, ecx
.text:0000BC97                 jnz     short loc_BC87
.text:0000BC99
.text:0000BC99 loc_BC99:                               ; CODE XREF: _do_ssh2_transport+1BB3j
.text:0000BC99                 push    2
.text:0000BC9B                 mov     edx, [ebp+arg_0]
.text:0000BC9E                 mov     eax, [edx+0E4h]
.text:0000BCA4                 push    eax
.text:0000BCA5                 call    _set_busy_status
.text:0000BCAA                 add     esp, 8
.text:0000BCAD                 mov     ecx, [ebp+var_C]
.text:0000BCB0                 add     ecx, 70h ; 'p'
.text:0000BCB3                 push    ecx
.text:0000BCB4                 mov     edx, [ebp+var_C]
.text:0000BCB7                 add     edx, 5Ch ; '\'
.text:0000BCBA                 push    edx
.text:0000BCBB                 mov     eax, [ebp+arg_C]
.text:0000BCBE                 push    eax
.text:0000BCBF                 call    _ssh_pkt_getstring
.text:0000BCC4                 add     esp, 0Ch
.text:0000BCC7                 mov     esi, esp
.text:0000BCC9                 mov     ecx, [ebp+var_C]
.text:0000BCCC                 mov     edx, [ecx+70h]
.text:0000BCCF                 push    edx
.text:0000BCD0                 mov     eax, [ebp+var_C]
.text:0000BCD3                 mov     ecx, [eax+5Ch]
.text:0000BCD6                 push    ecx
.text:0000BCD7                 mov     edx, [ebp+arg_0]
.text:0000BCDA                 mov     eax, [edx+94h]
.text:0000BCE0                 mov     ecx, [eax]
.text:0000BCE2                 call    ecx
.text:0000BCE4                 add     esp, 8
.text:0000BCE7                 cmp     esi, esp
.text:0000BCE9                 call    __RTC_CheckEsp
.text:0000BCEE                 mov     edx, [ebp+var_C]
.text:0000BCF1                 mov     [edx+7Ch], eax
.text:0000BCF4                 mov     eax, [ebp+arg_C]
.text:0000BCF7                 push    eax
.text:0000BCF8                 call    _ssh2_pkt_getmp
.text:0000BCFD                 add     esp, 4
.text:0000BD00                 mov     ecx, [ebp+var_C]
.text:0000BD03                 mov     [ecx+24h], eax
.text:0000BD06                 mov     edx, [ebp+var_C]
.text:0000BD09                 cmp     dword ptr [edx+24h], 0
.text:0000BD0D                 jnz     short loc_BD3B
.text:0000BD0F                 push    offset $SG91923 ; "unable to parse key exchange reply pack"...
.text:0000BD14                 call    _dupprintf
.text:0000BD19                 add     esp, 4
.text:0000BD1C                 push    eax
.text:0000BD1D                 mov     eax, [ebp+arg_0]
.text:0000BD20                 push    eax
.text:0000BD21                 call    _bomb_out
.text:0000BD26                 add     esp, 8
.text:0000BD29
.text:0000BD29 loc_BD29:                               ; CODE XREF: _do_ssh2_transport+1C81j
.text:0000BD29                 mov     ecx, [ebp+var_10]
.text:0000BD2C                 mov     dword ptr [ecx], 0
.text:0000BD32                 jmp     loc_D155
.text:0000BD37 ; ---------------------------------------------------------------------------
.text:0000BD37                 xor     edx, edx
.text:0000BD39                 jnz     short loc_BD29
.text:0000BD3B
.text:0000BD3B loc_BD3B:                               ; CODE XREF: _do_ssh2_transport+1C55j
.text:0000BD3B                 mov     eax, [ebp+var_C]
.text:0000BD3E                 add     eax, 74h ; 't'
.text:0000BD41                 push    eax
.text:0000BD42                 mov     ecx, [ebp+var_C]
.text:0000BD45                 add     ecx, 60h ; '`'
.text:0000BD48                 push    ecx
.text:0000BD49                 mov     edx, [ebp+arg_C]
.text:0000BD4C                 push    edx
.text:0000BD4D                 call    _ssh_pkt_getstring
.text:0000BD52                 add     esp, 0Ch
.text:0000BD55                 mov     eax, [ebp+var_C]
.text:0000BD58                 mov     ecx, [eax+24h]
.text:0000BD5B                 push    ecx
.text:0000BD5C                 mov     edx, [ebp+arg_0]
.text:0000BD5F                 mov     eax, [edx+0C0h]
.text:0000BD65                 push    eax
.text:0000BD66                 call    _dh_validate_f
.text:0000BD6B                 add     esp, 8
.text:0000BD6E                 mov     [ebp+var_70], eax
.text:0000BD71                 cmp     [ebp+var_70], 0
.text:0000BD75                 jz      short loc_BDA7
.text:0000BD77                 mov     ecx, [ebp+var_70]
.text:0000BD7A                 push    ecx
.text:0000BD7B                 push    offset $SG91929 ; "key exchange reply failed validation: %"...
.text:0000BD80                 call    _dupprintf
.text:0000BD85                 add     esp, 8
.text:0000BD88                 push    eax
.text:0000BD89                 mov     edx, [ebp+arg_0]
.text:0000BD8C                 push    edx
.text:0000BD8D                 call    _bomb_out
.text:0000BD92                 add     esp, 8
.text:0000BD95
.text:0000BD95 loc_BD95:                               ; CODE XREF: _do_ssh2_transport+1CEDj
.text:0000BD95                 mov     eax, [ebp+var_10]
.text:0000BD98                 mov     dword ptr [eax], 0
.text:0000BD9E                 jmp     loc_D155
.text:0000BDA3 ; ---------------------------------------------------------------------------
.text:0000BDA3                 xor     ecx, ecx
.text:0000BDA5                 jnz     short loc_BD95
.text:0000BDA7
.text:0000BDA7 loc_BDA7:                               ; CODE XREF: _do_ssh2_transport+1CBDj
.text:0000BDA7                 mov     edx, [ebp+var_C]
.text:0000BDAA                 mov     eax, [edx+24h]
.text:0000BDAD                 push    eax
.text:0000BDAE                 mov     ecx, [ebp+arg_0]
.text:0000BDB1                 mov     edx, [ecx+0C0h]
.text:0000BDB7                 push    edx
.text:0000BDB8                 call    _dh_find_K
.text:0000BDBD                 add     esp, 8
.text:0000BDC0                 mov     ecx, [ebp+var_C]
.text:0000BDC3                 mov     [ecx+28h], eax
.text:0000BDC6                 push    0
.text:0000BDC8                 mov     edx, [ebp+arg_0]
.text:0000BDCB                 mov     eax, [edx+0E4h]
.text:0000BDD1                 push    eax
.text:0000BDD2                 call    _set_busy_status
.text:0000BDD7                 add     esp, 8
.text:0000BDDA                 mov     ecx, [ebp+var_C]
.text:0000BDDD                 mov     edx, [ecx+70h]
.text:0000BDE0                 push    edx
.text:0000BDE1                 mov     eax, [ebp+var_C]
.text:0000BDE4                 mov     ecx, [eax+5Ch]
.text:0000BDE7                 push    ecx
.text:0000BDE8                 mov     edx, [ebp+arg_0]
.text:0000BDEB                 mov     eax, [edx+0Ch]
.text:0000BDEE                 push    eax
.text:0000BDEF                 mov     ecx, [ebp+arg_0]
.text:0000BDF2                 mov     edx, [ecx+90h]
.text:0000BDF8                 mov     eax, [edx+1Ch]
.text:0000BDFB                 push    eax
.text:0000BDFC                 call    _hash_string
.text:0000BE01                 add     esp, 10h
.text:0000BE04                 mov     ecx, [ebp+arg_0]
.text:0000BE07                 mov     edx, [ecx+90h]
.text:0000BE0D                 cmp     dword ptr [edx+0Ch], 0
.text:0000BE11                 jnz     short loc_BE7C
.text:0000BE13                 mov     eax, [ebp+var_C]
.text:0000BE16                 mov     ecx, [eax+8]
.text:0000BE19                 push    ecx
.text:0000BE1A                 mov     edx, [ebp+arg_0]
.text:0000BE1D                 mov     eax, [edx+0Ch]
.text:0000BE20                 push    eax
.text:0000BE21                 mov     ecx, [ebp+arg_0]
.text:0000BE24                 mov     edx, [ecx+90h]
.text:0000BE2A                 mov     eax, [edx+1Ch]
.text:0000BE2D                 push    eax
.text:0000BE2E                 call    _hash_uint32
.text:0000BE33                 add     esp, 0Ch
.text:0000BE36                 mov     ecx, [ebp+var_C]
.text:0000BE39                 mov     edx, [ecx+18h]
.text:0000BE3C                 push    edx
.text:0000BE3D                 mov     eax, [ebp+arg_0]
.text:0000BE40                 mov     ecx, [eax+0Ch]
.text:0000BE43                 push    ecx
.text:0000BE44                 mov     edx, [ebp+arg_0]
.text:0000BE47                 mov     eax, [edx+90h]
.text:0000BE4D                 mov     ecx, [eax+1Ch]
.text:0000BE50                 push    ecx
.text:0000BE51                 call    _hash_mpint
.text:0000BE56                 add     esp, 0Ch
.text:0000BE59                 mov     edx, [ebp+var_C]
.text:0000BE5C                 mov     eax, [edx+1Ch]
.text:0000BE5F                 push    eax
.text:0000BE60                 mov     ecx, [ebp+arg_0]
.text:0000BE63                 mov     edx, [ecx+0Ch]
.text:0000BE66                 push    edx
.text:0000BE67                 mov     eax, [ebp+arg_0]
.text:0000BE6A                 mov     ecx, [eax+90h]
.text:0000BE70                 mov     edx, [ecx+1Ch]
.text:0000BE73                 push    edx
.text:0000BE74                 call    _hash_mpint
.text:0000BE79                 add     esp, 0Ch
.text:0000BE7C
.text:0000BE7C loc_BE7C:                               ; CODE XREF: _do_ssh2_transport+1D59j
.text:0000BE7C                 mov     eax, [ebp+var_C]
.text:0000BE7F                 mov     ecx, [eax+20h]
.text:0000BE82                 push    ecx
.text:0000BE83                 mov     edx, [ebp+arg_0]
.text:0000BE86                 mov     eax, [edx+0Ch]
.text:0000BE89                 push    eax
.text:0000BE8A                 mov     ecx, [ebp+arg_0]
.text:0000BE8D                 mov     edx, [ecx+90h]
.text:0000BE93                 mov     eax, [edx+1Ch]
.text:0000BE96                 push    eax
.text:0000BE97                 call    _hash_mpint
.text:0000BE9C                 add     esp, 0Ch
.text:0000BE9F                 mov     ecx, [ebp+var_C]
.text:0000BEA2                 mov     edx, [ecx+24h]
.text:0000BEA5                 push    edx
.text:0000BEA6                 mov     eax, [ebp+arg_0]
.text:0000BEA9                 mov     ecx, [eax+0Ch]
.text:0000BEAC                 push    ecx
.text:0000BEAD                 mov     edx, [ebp+arg_0]
.text:0000BEB0                 mov     eax, [edx+90h]
.text:0000BEB6                 mov     ecx, [eax+1Ch]
.text:0000BEB9                 push    ecx
.text:0000BEBA                 call    _hash_mpint
.text:0000BEBF                 add     esp, 0Ch
.text:0000BEC2                 mov     edx, [ebp+arg_0]
.text:0000BEC5                 mov     eax, [edx+0C0h]
.text:0000BECB                 push    eax
.text:0000BECC                 call    _dh_cleanup
.text:0000BED1                 add     esp, 4
.text:0000BED4                 mov     ecx, [ebp+var_C]
.text:0000BED7                 mov     edx, [ecx+24h]
.text:0000BEDA                 push    edx
.text:0000BEDB                 call    _freebn
.text:0000BEE0                 add     esp, 4
.text:0000BEE3                 mov     eax, [ebp+arg_0]
.text:0000BEE6                 mov     ecx, [eax+90h]
.text:0000BEEC                 cmp     dword ptr [ecx+0Ch], 0
.text:0000BEF0                 jnz     short loc_BF10
.text:0000BEF2                 mov     edx, [ebp+var_C]
.text:0000BEF5                 mov     eax, [edx+1Ch]
.text:0000BEF8                 push    eax
.text:0000BEF9                 call    _freebn
.text:0000BEFE                 add     esp, 4
.text:0000BF01                 mov     ecx, [ebp+var_C]
.text:0000BF04                 mov     edx, [ecx+18h]
.text:0000BF07                 push    edx
.text:0000BF08                 call    _freebn
.text:0000BF0D                 add     esp, 4
.text:0000BF10
.text:0000BF10 loc_BF10:                               ; CODE XREF: _do_ssh2_transport+1E38j
.text:0000BF10                 jmp     loc_C3F5
.text:0000BF15 ; ---------------------------------------------------------------------------
.text:0000BF15
.text:0000BF15 loc_BF15:                               ; CODE XREF: _do_ssh2_transport+188Ej
.text:0000BF15                 mov     eax, [ebp+arg_0]
.text:0000BF18                 mov     ecx, [eax+90h]
.text:0000BF1E                 mov     edx, [ecx+1Ch]
.text:0000BF21                 mov     eax, [edx+10h]
.text:0000BF24                 push    eax
.text:0000BF25                 push    offset $SG91936 ; "Doing RSA key exchange with hash %s"
.text:0000BF2A                 mov     ecx, [ebp+arg_0]
.text:0000BF2D                 push    ecx
.text:0000BF2E                 call    _logeventf
.text:0000BF33                 add     esp, 0Ch
.text:0000BF36                 mov     edx, [ebp+arg_0]
.text:0000BF39                 mov     dword ptr [edx+158h], 3
.text:0000BF43
.text:0000BF43 loc_BF43:                               ; CODE XREF: _do_ssh2_transport+1E9Bj
.text:0000BF43                                         ; _do_ssh2_transport+1EA1j
.text:0000BF43                 mov     eax, [ebp+var_10]
.text:0000BF46                 mov     dword ptr [eax], 1A1Ch
.text:0000BF4C                 jmp     loc_D155
.text:0000BF51 ; ---------------------------------------------------------------------------
.text:0000BF51
.text:0000BF51 loc_BF51:                               ; CODE XREF: _do_ssh2_transport+178j
.text:0000BF51                 xor     ecx, ecx
.text:0000BF53                 jnz     short loc_BF43
.text:0000BF55                 cmp     [ebp+arg_C], 0
.text:0000BF59                 jz      short loc_BF43
.text:0000BF5B                 mov     edx, [ebp+arg_C]
.text:0000BF5E                 cmp     dword ptr [edx+8], 1Eh
.text:0000BF62                 jz      short loc_BF90
.text:0000BF64                 push    offset $SG91945 ; "expected RSA public key packet from ser"...
.text:0000BF69                 call    _dupprintf
.text:0000BF6E                 add     esp, 4
.text:0000BF71                 push    eax
.text:0000BF72                 mov     eax, [ebp+arg_0]
.text:0000BF75                 push    eax
.text:0000BF76                 call    _bomb_out
.text:0000BF7B                 add     esp, 8
.text:0000BF7E
.text:0000BF7E loc_BF7E:                               ; CODE XREF: _do_ssh2_transport+1ED6j
.text:0000BF7E                 mov     ecx, [ebp+var_10]
.text:0000BF81                 mov     dword ptr [ecx], 0
.text:0000BF87                 jmp     loc_D155
.text:0000BF8C ; ---------------------------------------------------------------------------
.text:0000BF8C                 xor     edx, edx
.text:0000BF8E                 jnz     short loc_BF7E
.text:0000BF90
.text:0000BF90 loc_BF90:                               ; CODE XREF: _do_ssh2_transport+1EAAj
.text:0000BF90                 mov     eax, [ebp+var_C]
.text:0000BF93                 add     eax, 70h ; 'p'
.text:0000BF96                 push    eax
.text:0000BF97                 mov     ecx, [ebp+var_C]
.text:0000BF9A                 add     ecx, 5Ch ; '\'
.text:0000BF9D                 push    ecx
.text:0000BF9E                 mov     edx, [ebp+arg_C]
.text:0000BFA1                 push    edx
.text:0000BFA2                 call    _ssh_pkt_getstring
.text:0000BFA7                 add     esp, 0Ch
.text:0000BFAA                 mov     eax, [ebp+var_C]
.text:0000BFAD                 mov     ecx, [eax+70h]
.text:0000BFB0                 push    ecx
.text:0000BFB1                 mov     edx, [ebp+var_C]
.text:0000BFB4                 mov     eax, [edx+5Ch]
.text:0000BFB7                 push    eax
.text:0000BFB8                 mov     ecx, [ebp+arg_0]
.text:0000BFBB                 mov     edx, [ecx+0Ch]
.text:0000BFBE                 push    edx
.text:0000BFBF                 mov     eax, [ebp+arg_0]
.text:0000BFC2                 mov     ecx, [eax+90h]
.text:0000BFC8                 mov     edx, [ecx+1Ch]
.text:0000BFCB                 push    edx
.text:0000BFCC                 call    _hash_string
.text:0000BFD1                 add     esp, 10h
.text:0000BFD4                 mov     esi, esp
.text:0000BFD6                 mov     eax, [ebp+var_C]
.text:0000BFD9                 mov     ecx, [eax+70h]
.text:0000BFDC                 push    ecx
.text:0000BFDD                 mov     edx, [ebp+var_C]
.text:0000BFE0                 mov     eax, [edx+5Ch]
.text:0000BFE3                 push    eax
.text:0000BFE4                 mov     ecx, [ebp+arg_0]
.text:0000BFE7                 mov     edx, [ecx+94h]
.text:0000BFED                 mov     eax, [edx]
.text:0000BFEF                 call    eax
.text:0000BFF1                 add     esp, 8
.text:0000BFF4                 cmp     esi, esp
.text:0000BFF6                 call    __RTC_CheckEsp
.text:0000BFFB                 mov     ecx, [ebp+var_C]
.text:0000BFFE                 mov     [ecx+7Ch], eax
.text:0000C001                 mov     edx, [ebp+var_C]
.text:0000C004                 add     edx, 78h ; 'x'
.text:0000C007                 push    edx
.text:0000C008                 lea     eax, [ebp+Src]
.text:0000C00B                 push    eax
.text:0000C00C                 mov     ecx, [ebp+arg_C]
.text:0000C00F                 push    ecx
.text:0000C010                 call    _ssh_pkt_getstring
.text:0000C015                 add     esp, 0Ch
.text:0000C018                 push    1
.text:0000C01A                 mov     edx, [ebp+var_C]
.text:0000C01D                 mov     eax, [edx+78h]
.text:0000C020                 push    eax
.text:0000C021                 call    _safemalloc
.text:0000C026                 add     esp, 8
.text:0000C029                 mov     ecx, [ebp+var_C]
.text:0000C02C                 mov     [ecx+64h], eax
.text:0000C02F                 mov     edx, [ebp+var_C]
.text:0000C032                 mov     eax, [edx+78h]
.text:0000C035                 push    eax             ; Size
.text:0000C036                 mov     ecx, [ebp+Src]
.text:0000C039                 push    ecx             ; Src
.text:0000C03A                 mov     edx, [ebp+var_C]
.text:0000C03D                 mov     eax, [edx+64h]
.text:0000C040                 push    eax             ; Dst
.text:0000C041                 call    _memcpy
.text:0000C046                 add     esp, 0Ch
.text:0000C049                 mov     ecx, [ebp+var_C]
.text:0000C04C                 mov     edx, [ecx+78h]
.text:0000C04F                 push    edx
.text:0000C050                 mov     eax, [ebp+var_C]
.text:0000C053                 mov     ecx, [eax+64h]
.text:0000C056                 push    ecx
.text:0000C057                 call    _ssh_rsakex_newkey
.text:0000C05C                 add     esp, 8
.text:0000C05F                 mov     edx, [ebp+var_C]
.text:0000C062                 mov     [edx+80h], eax
.text:0000C068                 mov     eax, [ebp+var_C]
.text:0000C06B                 cmp     dword ptr [eax+80h], 0
.text:0000C072                 jnz     short loc_C0AF
.text:0000C074                 mov     ecx, [ebp+var_C]
.text:0000C077                 mov     edx, [ecx+64h]
.text:0000C07A                 push    edx
.text:0000C07B                 call    _safefree
.text:0000C080                 add     esp, 4
.text:0000C083                 push    offset $SG91953 ; "unable to parse RSA public key from ser"...
.text:0000C088                 call    _dupprintf
.text:0000C08D                 add     esp, 4
.text:0000C090                 push    eax
.text:0000C091                 mov     eax, [ebp+arg_0]
.text:0000C094                 push    eax
.text:0000C095                 call    _bomb_out
.text:0000C09A                 add     esp, 8
.text:0000C09D
.text:0000C09D loc_C09D:                               ; CODE XREF: _do_ssh2_transport+1FF5j
.text:0000C09D                 mov     ecx, [ebp+var_10]
.text:0000C0A0                 mov     dword ptr [ecx], 0
.text:0000C0A6                 jmp     loc_D155
.text:0000C0AB ; ---------------------------------------------------------------------------
.text:0000C0AB                 xor     edx, edx
.text:0000C0AD                 jnz     short loc_C09D
.text:0000C0AF
.text:0000C0AF loc_C0AF:                               ; CODE XREF: _do_ssh2_transport+1FBAj
.text:0000C0AF                 mov     eax, [ebp+var_C]
.text:0000C0B2                 mov     ecx, [eax+78h]
.text:0000C0B5                 push    ecx
.text:0000C0B6                 mov     edx, [ebp+var_C]
.text:0000C0B9                 mov     eax, [edx+64h]
.text:0000C0BC                 push    eax
.text:0000C0BD                 mov     ecx, [ebp+arg_0]
.text:0000C0C0                 mov     edx, [ecx+0Ch]
.text:0000C0C3                 push    edx
.text:0000C0C4                 mov     eax, [ebp+arg_0]
.text:0000C0C7                 mov     ecx, [eax+90h]
.text:0000C0CD                 mov     edx, [ecx+1Ch]
.text:0000C0D0                 push    edx
.text:0000C0D1                 call    _hash_string
.text:0000C0D6                 add     esp, 10h
.text:0000C0D9                 mov     eax, [ebp+var_C]
.text:0000C0DC                 mov     ecx, [eax+80h]
.text:0000C0E2                 push    ecx
.text:0000C0E3                 call    _ssh_rsakex_klen
.text:0000C0E8                 add     esp, 4
.text:0000C0EB                 mov     [ebp+var_80], eax
.text:0000C0EE                 mov     edx, [ebp+arg_0]
.text:0000C0F1                 mov     eax, [edx+90h]
.text:0000C0F7                 mov     ecx, [eax+1Ch]
.text:0000C0FA                 mov     edx, [ecx+0Ch]
.text:0000C0FD                 shl     edx, 1
.text:0000C0FF                 lea     eax, ds:31h[edx*8]
.text:0000C106                 mov     ecx, [ebp+var_80]
.text:0000C109                 sub     ecx, eax
.text:0000C10B                 mov     [ebp+var_84], ecx
.text:0000C111                 mov     [ebp+var_8C], 0
.text:0000C11B                 mov     edx, [ebp+var_84]
.text:0000C121                 sub     edx, 1
.text:0000C124                 push    edx
.text:0000C125                 call    _bn_power_2
.text:0000C12A                 add     esp, 4
.text:0000C12D                 mov     ecx, [ebp+var_C]
.text:0000C130                 mov     [ecx+28h], eax
.text:0000C133                 mov     [ebp+var_88], 0
.text:0000C13D                 jmp     short loc_C14E
.text:0000C13F ; ---------------------------------------------------------------------------
.text:0000C13F
.text:0000C13F loc_C13F:                               ; CODE XREF: _do_ssh2_transport+20E5j
.text:0000C13F                 mov     edx, [ebp+var_88]
.text:0000C145                 add     edx, 1
.text:0000C148                 mov     [ebp+var_88], edx
.text:0000C14E
.text:0000C14E loc_C14E:                               ; CODE XREF: _do_ssh2_transport+2085j
.text:0000C14E                 mov     eax, [ebp+var_88]
.text:0000C154                 cmp     eax, [ebp+var_84]
.text:0000C15A                 jge     short loc_C19F
.text:0000C15C                 mov     ecx, [ebp+var_88]
.text:0000C162                 and     ecx, 7
.text:0000C165                 jnz     short loc_C172
.text:0000C167                 call    _random_byte
.text:0000C16C                 mov     [ebp+var_8C], eax
.text:0000C172
.text:0000C172 loc_C172:                               ; CODE XREF: _do_ssh2_transport+20ADj
.text:0000C172                 mov     ecx, [ebp+var_88]
.text:0000C178                 and     ecx, 7
.text:0000C17B                 mov     edx, [ebp+var_8C]
.text:0000C181                 sar     edx, cl
.text:0000C183                 and     edx, 1
.text:0000C186                 push    edx
.text:0000C187                 mov     eax, [ebp+var_88]
.text:0000C18D                 push    eax
.text:0000C18E                 mov     ecx, [ebp+var_C]
.text:0000C191                 mov     edx, [ecx+28h]
.text:0000C194                 push    edx
.text:0000C195                 call    _bignum_set_bit
.text:0000C19A                 add     esp, 0Ch
.text:0000C19D                 jmp     short loc_C13F
.text:0000C19F ; ---------------------------------------------------------------------------
.text:0000C19F
.text:0000C19F loc_C19F:                               ; CODE XREF: _do_ssh2_transport+20A2j
.text:0000C19F                 lea     eax, [ebp+Size]
.text:0000C1A5                 push    eax
.text:0000C1A6                 mov     ecx, [ebp+var_C]
.text:0000C1A9                 mov     edx, [ecx+28h]
.text:0000C1AC                 push    edx
.text:0000C1AD                 call    _ssh2_mpint_fmt
.text:0000C1B2                 add     esp, 8
.text:0000C1B5                 mov     [ebp+var_90], eax
.text:0000C1BB                 mov     eax, [ebp+Size]
.text:0000C1C1                 add     eax, 4
.text:0000C1C4                 mov     [ebp+var_A8], eax
.text:0000C1CA                 push    1
.text:0000C1CC                 mov     ecx, [ebp+var_A8]
.text:0000C1D2                 push    ecx
.text:0000C1D3                 call    _safemalloc
.text:0000C1D8                 add     esp, 8
.text:0000C1DB                 mov     [ebp+var_94], eax
.text:0000C1E1                 mov     edx, [ebp+Size]
.text:0000C1E7                 sar     edx, 18h
.text:0000C1EA                 mov     eax, [ebp+var_94]
.text:0000C1F0                 mov     [eax], dl
.text:0000C1F2                 mov     ecx, [ebp+Size]
.text:0000C1F8                 sar     ecx, 10h
.text:0000C1FB                 mov     edx, [ebp+var_94]
.text:0000C201                 mov     [edx+1], cl
.text:0000C204                 mov     eax, [ebp+Size]
.text:0000C20A                 sar     eax, 8
.text:0000C20D                 mov     ecx, [ebp+var_94]
.text:0000C213                 mov     [ecx+2], al
.text:0000C216                 mov     edx, [ebp+var_94]
.text:0000C21C                 mov     al, byte ptr [ebp+Size]
.text:0000C222                 mov     [edx+3], al
.text:0000C225                 mov     ecx, [ebp+Size]
.text:0000C22B                 push    ecx             ; Size
.text:0000C22C                 mov     edx, [ebp+var_90]
.text:0000C232                 push    edx             ; Src
.text:0000C233                 mov     eax, [ebp+var_94]
.text:0000C239                 add     eax, 4
.text:0000C23C                 push    eax             ; Dst
.text:0000C23D                 call    _memcpy
.text:0000C242                 add     esp, 0Ch
.text:0000C245                 mov     eax, [ebp+var_80]
.text:0000C248                 add     eax, 7
.text:0000C24B                 cdq
.text:0000C24C                 and     edx, 7
.text:0000C24F                 add     eax, edx
.text:0000C251                 sar     eax, 3
.text:0000C254                 mov     [ebp+var_AC], eax
.text:0000C25A                 push    1
.text:0000C25C                 mov     ecx, [ebp+var_AC]
.text:0000C262                 push    ecx
.text:0000C263                 call    _safemalloc
.text:0000C268                 add     esp, 8
.text:0000C26B                 mov     [ebp+var_98], eax
.text:0000C271                 mov     edx, [ebp+var_C]
.text:0000C274                 mov     eax, [edx+80h]
.text:0000C27A                 push    eax
.text:0000C27B                 mov     ecx, [ebp+var_AC]
.text:0000C281                 push    ecx
.text:0000C282                 mov     edx, [ebp+var_98]
.text:0000C288                 push    edx
.text:0000C289                 mov     eax, [ebp+var_A8]
.text:0000C28F                 push    eax
.text:0000C290                 mov     ecx, [ebp+var_94]
.text:0000C296                 push    ecx
.text:0000C297                 mov     edx, [ebp+arg_0]
.text:0000C29A                 mov     eax, [edx+90h]
.text:0000C2A0                 mov     ecx, [eax+1Ch]
.text:0000C2A3                 push    ecx
.text:0000C2A4                 call    _ssh_rsakex_encrypt
.text:0000C2A9                 add     esp, 18h
.text:0000C2AC                 push    1Fh
.text:0000C2AE                 call    _ssh2_pkt_init
.text:0000C2B3                 add     esp, 4
.text:0000C2B6                 mov     edx, [ebp+var_C]
.text:0000C2B9                 mov     [edx+0ECh], eax
.text:0000C2BF                 mov     eax, [ebp+var_C]
.text:0000C2C2                 mov     ecx, [eax+0ECh]
.text:0000C2C8                 push    ecx
.text:0000C2C9                 call    _ssh_pkt_addstring_start
.text:0000C2CE                 add     esp, 4
.text:0000C2D1                 mov     edx, [ebp+var_AC]
.text:0000C2D7                 push    edx             ; Size
.text:0000C2D8                 mov     eax, [ebp+var_98]
.text:0000C2DE                 push    eax             ; Src
.text:0000C2DF                 mov     ecx, [ebp+var_C]
.text:0000C2E2                 mov     edx, [ecx+0ECh]
.text:0000C2E8                 push    edx             ; int
.text:0000C2E9                 call    _ssh_pkt_addstring_data
.text:0000C2EE                 add     esp, 0Ch
.text:0000C2F1                 mov     eax, [ebp+var_C]
.text:0000C2F4                 mov     ecx, [eax+0ECh]
.text:0000C2FA                 push    ecx
.text:0000C2FB                 mov     edx, [ebp+arg_0]
.text:0000C2FE                 push    edx
.text:0000C2FF                 call    _ssh2_pkt_send_noqueue
.text:0000C304                 add     esp, 8
.text:0000C307                 mov     eax, [ebp+var_AC]
.text:0000C30D                 push    eax
.text:0000C30E                 mov     ecx, [ebp+var_98]
.text:0000C314                 push    ecx
.text:0000C315                 mov     edx, [ebp+arg_0]
.text:0000C318                 mov     eax, [edx+0Ch]
.text:0000C31B                 push    eax
.text:0000C31C                 mov     ecx, [ebp+arg_0]
.text:0000C31F                 mov     edx, [ecx+90h]
.text:0000C325                 mov     eax, [edx+1Ch]
.text:0000C328                 push    eax
.text:0000C329                 call    _hash_string
.text:0000C32E                 add     esp, 10h
.text:0000C331                 mov     ecx, [ebp+var_94]
.text:0000C337                 push    ecx
.text:0000C338                 call    _safefree
.text:0000C33D                 add     esp, 4
.text:0000C340                 mov     edx, [ebp+var_90]
.text:0000C346                 push    edx
.text:0000C347                 call    _safefree
.text:0000C34C                 add     esp, 4
.text:0000C34F                 mov     eax, [ebp+var_98]
.text:0000C355                 push    eax
.text:0000C356                 call    _safefree
.text:0000C35B                 add     esp, 4
.text:0000C35E                 mov     ecx, [ebp+var_C]
.text:0000C361                 mov     edx, [ecx+80h]
.text:0000C367                 push    edx
.text:0000C368                 call    _ssh_rsakex_freekey
.text:0000C36D                 add     esp, 4
.text:0000C370
.text:0000C370 loc_C370:                               ; CODE XREF: _do_ssh2_transport+22C8j
.text:0000C370                                         ; _do_ssh2_transport+22CEj
.text:0000C370                 mov     eax, [ebp+var_10]
.text:0000C373                 mov     dword ptr [eax], 1A6Eh
.text:0000C379                 jmp     loc_D155
.text:0000C37E ; ---------------------------------------------------------------------------
.text:0000C37E
.text:0000C37E loc_C37E:                               ; CODE XREF: _do_ssh2_transport+188j
.text:0000C37E                 xor     ecx, ecx
.text:0000C380                 jnz     short loc_C370
.text:0000C382                 cmp     [ebp+arg_C], 0
.text:0000C386                 jz      short loc_C370
.text:0000C388                 mov     edx, [ebp+arg_C]
.text:0000C38B                 cmp     dword ptr [edx+8], 20h ; ' '
.text:0000C38F                 jz      short loc_C3CC
.text:0000C391                 mov     eax, [ebp+var_C]
.text:0000C394                 mov     ecx, [eax+64h]
.text:0000C397                 push    ecx
.text:0000C398                 call    _safefree
.text:0000C39D                 add     esp, 4
.text:0000C3A0                 push    offset $SG91988 ; "expected signature packet from server"
.text:0000C3A5                 call    _dupprintf
.text:0000C3AA                 add     esp, 4
.text:0000C3AD                 push    eax
.text:0000C3AE                 mov     edx, [ebp+arg_0]
.text:0000C3B1                 push    edx
.text:0000C3B2                 call    _bomb_out
.text:0000C3B7                 add     esp, 8
.text:0000C3BA
.text:0000C3BA loc_C3BA:                               ; CODE XREF: _do_ssh2_transport+2312j
.text:0000C3BA                 mov     eax, [ebp+var_10]
.text:0000C3BD                 mov     dword ptr [eax], 0
.text:0000C3C3                 jmp     loc_D155
.text:0000C3C8 ; ---------------------------------------------------------------------------
.text:0000C3C8                 xor     ecx, ecx
.text:0000C3CA                 jnz     short loc_C3BA
.text:0000C3CC
.text:0000C3CC loc_C3CC:                               ; CODE XREF: _do_ssh2_transport+22D7j
.text:0000C3CC                 mov     edx, [ebp+var_C]
.text:0000C3CF                 add     edx, 74h ; 't'
.text:0000C3D2                 push    edx
.text:0000C3D3                 mov     eax, [ebp+var_C]
.text:0000C3D6                 add     eax, 60h ; '`'
.text:0000C3D9                 push    eax
.text:0000C3DA                 mov     ecx, [ebp+arg_C]
.text:0000C3DD                 push    ecx
.text:0000C3DE                 call    _ssh_pkt_getstring
.text:0000C3E3                 add     esp, 0Ch
.text:0000C3E6                 mov     edx, [ebp+var_C]
.text:0000C3E9                 mov     eax, [edx+64h]
.text:0000C3EC                 push    eax
.text:0000C3ED                 call    _safefree
.text:0000C3F2                 add     esp, 4
.text:0000C3F5
.text:0000C3F5 loc_C3F5:                               ; CODE XREF: _do_ssh2_transport:loc_BF10j
.text:0000C3F5                 mov     ecx, [ebp+var_C]
.text:0000C3F8                 mov     edx, [ecx+28h]
.text:0000C3FB                 push    edx
.text:0000C3FC                 mov     eax, [ebp+arg_0]
.text:0000C3FF                 mov     ecx, [eax+0Ch]
.text:0000C402                 push    ecx
.text:0000C403                 mov     edx, [ebp+arg_0]
.text:0000C406                 mov     eax, [edx+90h]
.text:0000C40C                 mov     ecx, [eax+1Ch]
.text:0000C40F                 push    ecx
.text:0000C410                 call    _hash_mpint
.text:0000C415                 add     esp, 0Ch
.text:0000C418                 mov     edx, [ebp+arg_0]
.text:0000C41B                 mov     eax, [edx+90h]
.text:0000C421                 mov     ecx, [eax+1Ch]
.text:0000C424                 cmp     dword ptr [ecx+0Ch], 20h ; ' '
.text:0000C428                 jbe     short loc_C441
.text:0000C42A                 push    1A7Bh           ; Line
.text:0000C42F                 push    offset $SG91993 ; "..\\..\\..\\ssh.c"
.text:0000C434                 push    offset $SG91994 ; "ssh->kex->hash->hlen <= sizeof(s->excha"...
.text:0000C439                 call    __wassert
.text:0000C43E ; ---------------------------------------------------------------------------
.text:0000C43E                 add     esp, 0Ch
.text:0000C441
.text:0000C441 loc_C441:                               ; CODE XREF: _do_ssh2_transport+2370j
.text:0000C441                 mov     eax, [ebp+var_C]
.text:0000C444                 add     eax, 84h ; 'ä'
.text:0000C449                 mov     esi, esp
.text:0000C44B                 push    eax
.text:0000C44C                 mov     ecx, [ebp+arg_0]
.text:0000C44F                 mov     edx, [ecx+0Ch]
.text:0000C452                 push    edx
.text:0000C453                 mov     eax, [ebp+arg_0]
.text:0000C456                 mov     ecx, [eax+90h]
.text:0000C45C                 mov     edx, [ecx+1Ch]
.text:0000C45F                 mov     eax, [edx+8]
.text:0000C462                 call    eax
.text:0000C464                 add     esp, 8
.text:0000C467                 cmp     esi, esp
.text:0000C469                 call    __RTC_CheckEsp
.text:0000C46E                 mov     ecx, [ebp+arg_0]
.text:0000C471                 mov     dword ptr [ecx+0C0h], 0
.text:0000C47B                 mov     edx, [ebp+var_C]
.text:0000C47E                 cmp     dword ptr [edx+7Ch], 0
.text:0000C482                 jz      short loc_C4D1
.text:0000C484                 mov     eax, [ebp+arg_0]
.text:0000C487                 mov     ecx, [eax+90h]
.text:0000C48D                 mov     edx, [ecx+1Ch]
.text:0000C490                 mov     esi, esp
.text:0000C492                 mov     eax, [edx+0Ch]
.text:0000C495                 push    eax
.text:0000C496                 mov     ecx, [ebp+var_C]
.text:0000C499                 add     ecx, 84h ; 'ä'
.text:0000C49F                 push    ecx
.text:0000C4A0                 mov     edx, [ebp+var_C]
.text:0000C4A3                 mov     eax, [edx+74h]
.text:0000C4A6                 push    eax
.text:0000C4A7                 mov     ecx, [ebp+var_C]
.text:0000C4AA                 mov     edx, [ecx+60h]
.text:0000C4AD                 push    edx
.text:0000C4AE                 mov     eax, [ebp+var_C]
.text:0000C4B1                 mov     ecx, [eax+7Ch]
.text:0000C4B4                 push    ecx
.text:0000C4B5                 mov     edx, [ebp+arg_0]
.text:0000C4B8                 mov     eax, [edx+94h]
.text:0000C4BE                 mov     ecx, [eax+28h]
.text:0000C4C1                 call    ecx
.text:0000C4C3                 add     esp, 14h
.text:0000C4C6                 cmp     esi, esp
.text:0000C4C8                 call    __RTC_CheckEsp
.text:0000C4CD                 test    eax, eax
.text:0000C4CF                 jnz     short loc_C4FD
.text:0000C4D1
.text:0000C4D1 loc_C4D1:                               ; CODE XREF: _do_ssh2_transport+23CAj
.text:0000C4D1                 push    offset $SG91999 ; "Server's host key did not match the sig"...
.text:0000C4D6                 call    _dupprintf
.text:0000C4DB                 add     esp, 4
.text:0000C4DE                 push    eax
.text:0000C4DF                 mov     edx, [ebp+arg_0]
.text:0000C4E2                 push    edx
.text:0000C4E3                 call    _bomb_out
.text:0000C4E8                 add     esp, 8
.text:0000C4EB
.text:0000C4EB loc_C4EB:                               ; CODE XREF: _do_ssh2_transport+2443j
.text:0000C4EB                 mov     eax, [ebp+var_10]
.text:0000C4EE                 mov     dword ptr [eax], 0
.text:0000C4F4                 jmp     loc_D155
.text:0000C4F9 ; ---------------------------------------------------------------------------
.text:0000C4F9                 xor     ecx, ecx
.text:0000C4FB                 jnz     short loc_C4EB
.text:0000C4FD
.text:0000C4FD loc_C4FD:                               ; CODE XREF: _do_ssh2_transport+2417j
.text:0000C4FD                 mov     esi, esp
.text:0000C4FF                 mov     edx, [ebp+var_C]
.text:0000C502                 mov     eax, [edx+7Ch]
.text:0000C505                 push    eax
.text:0000C506                 mov     ecx, [ebp+arg_0]
.text:0000C509                 mov     edx, [ecx+94h]
.text:0000C50F                 mov     eax, [edx+8]
.text:0000C512                 call    eax
.text:0000C514                 add     esp, 4
.text:0000C517                 cmp     esi, esp
.text:0000C519                 call    __RTC_CheckEsp
.text:0000C51E                 mov     ecx, [ebp+var_C]
.text:0000C521                 mov     [ecx+68h], eax
.text:0000C524                 mov     edx, [ebp+var_C]
.text:0000C527                 cmp     dword ptr [edx+0E4h], 0
.text:0000C52E                 jnz     loc_C737
.text:0000C534                 mov     esi, esp
.text:0000C536                 mov     eax, [ebp+var_C]
.text:0000C539                 mov     ecx, [eax+7Ch]
.text:0000C53C                 push    ecx
.text:0000C53D                 mov     edx, [ebp+arg_0]
.text:0000C540                 mov     eax, [edx+94h]
.text:0000C546                 mov     ecx, [eax+24h]
.text:0000C549                 call    ecx
.text:0000C54B                 add     esp, 4
.text:0000C54E                 cmp     esi, esp
.text:0000C550                 call    __RTC_CheckEsp
.text:0000C555                 mov     edx, [ebp+var_C]
.text:0000C558                 mov     [edx+6Ch], eax
.text:0000C55B                 push    offset $SG92004 ; "Host key fingerprint is:"
.text:0000C560                 mov     eax, [ebp+arg_0]
.text:0000C563                 mov     ecx, [eax+0E4h]
.text:0000C569                 push    ecx
.text:0000C56A                 call    _logevent
.text:0000C56F                 add     esp, 8
.text:0000C572                 mov     edx, [ebp+var_C]
.text:0000C575                 mov     eax, [edx+6Ch]
.text:0000C578                 push    eax
.text:0000C579                 mov     ecx, [ebp+arg_0]
.text:0000C57C                 mov     edx, [ecx+0E4h]
.text:0000C582                 push    edx
.text:0000C583                 call    _logevent
.text:0000C588                 add     esp, 8
.text:0000C58B                 mov     eax, [ebp+var_C]
.text:0000C58E                 mov     ecx, [eax+7Ch]
.text:0000C591                 push    ecx             ; int
.text:0000C592                 mov     edx, [ebp+arg_0]
.text:0000C595                 mov     eax, [edx+94h]
.text:0000C59B                 push    eax             ; int
.text:0000C59C                 mov     ecx, [ebp+var_C]
.text:0000C59F                 mov     edx, [ecx+6Ch]
.text:0000C5A2                 push    edx             ; Str
.text:0000C5A3                 mov     eax, [ebp+arg_0]
.text:0000C5A6                 push    eax             ; int
.text:0000C5A7                 call    _verify_ssh_manual_host_key
.text:0000C5AC                 add     esp, 10h
.text:0000C5AF                 mov     ecx, [ebp+var_C]
.text:0000C5B2                 mov     [ecx+0F0h], eax
.text:0000C5B8                 mov     edx, [ebp+var_C]
.text:0000C5BB                 cmp     dword ptr [edx+0F0h], 0
.text:0000C5C2                 jnz     short loc_C5F5
.text:0000C5C4                 push    offset $SG92006 ; "Host key did not appear in manually con"...
.text:0000C5C9                 call    _dupprintf
.text:0000C5CE                 add     esp, 4
.text:0000C5D1                 push    eax
.text:0000C5D2                 mov     eax, [ebp+arg_0]
.text:0000C5D5                 push    eax
.text:0000C5D6                 call    _bomb_out
.text:0000C5DB                 add     esp, 8
.text:0000C5DE
.text:0000C5DE loc_C5DE:                               ; CODE XREF: _do_ssh2_transport+2536j
.text:0000C5DE                 mov     ecx, [ebp+var_10]
.text:0000C5E1                 mov     dword ptr [ecx], 0
.text:0000C5E7                 jmp     loc_D155
.text:0000C5EC ; ---------------------------------------------------------------------------
.text:0000C5EC                 xor     edx, edx
.text:0000C5EE                 jnz     short loc_C5DE
.text:0000C5F0                 jmp     loc_C717
.text:0000C5F5 ; ---------------------------------------------------------------------------
.text:0000C5F5
.text:0000C5F5 loc_C5F5:                               ; CODE XREF: _do_ssh2_transport+250Aj
.text:0000C5F5                 mov     eax, [ebp+var_C]
.text:0000C5F8                 cmp     dword ptr [eax+0F0h], 0
.text:0000C5FF                 jge     loc_C717
.text:0000C605                 push    1
.text:0000C607                 mov     ecx, [ebp+arg_0]
.text:0000C60A                 push    ecx
.text:0000C60B                 call    _ssh_set_frozen
.text:0000C610                 add     esp, 8
.text:0000C613                 mov     edx, [ebp+arg_0]
.text:0000C616                 push    edx
.text:0000C617                 push    offset _ssh_dialog_callback
.text:0000C61C                 mov     eax, [ebp+var_C]
.text:0000C61F                 mov     ecx, [eax+6Ch]
.text:0000C622                 push    ecx
.text:0000C623                 mov     edx, [ebp+var_C]
.text:0000C626                 mov     eax, [edx+68h]
.text:0000C629                 push    eax
.text:0000C62A                 mov     ecx, [ebp+arg_0]
.text:0000C62D                 mov     edx, [ecx+94h]
.text:0000C633                 mov     eax, [edx+34h]
.text:0000C636                 push    eax
.text:0000C637                 mov     ecx, [ebp+arg_0]
.text:0000C63A                 mov     edx, [ecx+0D4h]
.text:0000C640                 push    edx
.text:0000C641                 mov     eax, [ebp+arg_0]
.text:0000C644                 mov     ecx, [eax+0D0h]
.text:0000C64A                 push    ecx
.text:0000C64B                 mov     edx, [ebp+arg_0]
.text:0000C64E                 mov     eax, [edx+0E4h]
.text:0000C654                 push    eax
.text:0000C655                 call    _verify_ssh_host_key
.text:0000C65A                 add     esp, 20h
.text:0000C65D                 mov     ecx, [ebp+var_C]
.text:0000C660                 mov     [ecx+0F0h], eax
.text:0000C666                 mov     edx, [ebp+var_C]
.text:0000C669                 cmp     dword ptr [edx+0F0h], 0
.text:0000C670                 jge     short loc_C6D4
.text:0000C672
.text:0000C672 loc_C672:                               ; CODE XREF: _do_ssh2_transport+25CAj
.text:0000C672                                         ; _do_ssh2_transport+2602j ...
.text:0000C672                 mov     eax, [ebp+var_10]
.text:0000C675                 mov     dword ptr [eax], 1AA5h
.text:0000C67B                 jmp     loc_D155
.text:0000C680 ; ---------------------------------------------------------------------------
.text:0000C680
.text:0000C680 loc_C680:                               ; CODE XREF: _do_ssh2_transport+158j
.text:0000C680                 xor     ecx, ecx
.text:0000C682                 jnz     short loc_C672
.text:0000C684                 cmp     [ebp+arg_C], 0
.text:0000C688                 jz      short loc_C6B6
.text:0000C68A                 push    offset $SG92021 ; "Unexpected data from server while waiti"...
.text:0000C68F                 call    _dupprintf
.text:0000C694                 add     esp, 4
.text:0000C697                 push    eax
.text:0000C698                 mov     edx, [ebp+arg_0]
.text:0000C69B                 push    edx
.text:0000C69C                 call    _bomb_out
.text:0000C6A1                 add     esp, 8
.text:0000C6A4
.text:0000C6A4 loc_C6A4:                               ; CODE XREF: _do_ssh2_transport+25FCj
.text:0000C6A4                 mov     eax, [ebp+var_10]
.text:0000C6A7                 mov     dword ptr [eax], 0
.text:0000C6AD                 jmp     loc_D155
.text:0000C6B2 ; ---------------------------------------------------------------------------
.text:0000C6B2                 xor     ecx, ecx
.text:0000C6B4                 jnz     short loc_C6A4
.text:0000C6B6
.text:0000C6B6 loc_C6B6:                               ; CODE XREF: _do_ssh2_transport+25D0j
.text:0000C6B6                 cmp     [ebp+arg_C], 0
.text:0000C6BA                 jnz     short loc_C672
.text:0000C6BC                 cmp     [ebp+arg_8], 0
.text:0000C6C0                 jg      short loc_C672
.text:0000C6C2                 mov     edx, [ebp+var_C]
.text:0000C6C5                 mov     eax, [ebp+arg_0]
.text:0000C6C8                 mov     ecx, [eax+230h]
.text:0000C6CE                 mov     [edx+0F0h], ecx
.text:0000C6D4
.text:0000C6D4 loc_C6D4:                               ; CODE XREF: _do_ssh2_transport+25B8j
.text:0000C6D4                 push    0
.text:0000C6D6                 mov     edx, [ebp+arg_0]
.text:0000C6D9                 push    edx
.text:0000C6DA                 call    _ssh_set_frozen
.text:0000C6DF                 add     esp, 8
.text:0000C6E2                 mov     eax, [ebp+var_C]
.text:0000C6E5                 cmp     dword ptr [eax+0F0h], 0
.text:0000C6EC                 jnz     short loc_C717
.text:0000C6EE                 push    1               ; int
.text:0000C6F0                 push    0               ; int
.text:0000C6F2                 push    0               ; Str
.text:0000C6F4                 push    offset $SG92027 ; "Aborted at host key verification"
.text:0000C6F9                 mov     ecx, [ebp+arg_0]
.text:0000C6FC                 push    ecx             ; int
.text:0000C6FD                 call    _ssh_disconnect
.text:0000C702                 add     esp, 14h
.text:0000C705
.text:0000C705 loc_C705:                               ; CODE XREF: _do_ssh2_transport+265Dj
.text:0000C705                 mov     edx, [ebp+var_10]
.text:0000C708                 mov     dword ptr [edx], 0
.text:0000C70E                 jmp     loc_D155
.text:0000C713 ; ---------------------------------------------------------------------------
.text:0000C713                 xor     eax, eax
.text:0000C715                 jnz     short loc_C705
.text:0000C717
.text:0000C717 loc_C717:                               ; CODE XREF: _do_ssh2_transport+2538j
.text:0000C717                                         ; _do_ssh2_transport+2547j ...
.text:0000C717                 mov     ecx, [ebp+var_C]
.text:0000C71A                 mov     edx, [ecx+6Ch]
.text:0000C71D                 push    edx
.text:0000C71E                 call    _safefree
.text:0000C723                 add     esp, 4
.text:0000C726                 mov     eax, [ebp+arg_0]
.text:0000C729                 mov     ecx, [ebp+var_C]
.text:0000C72C                 mov     edx, [ecx+68h]
.text:0000C72F                 mov     [eax+98h], edx
.text:0000C735                 jmp     short loc_C78F
.text:0000C737 ; ---------------------------------------------------------------------------
.text:0000C737
.text:0000C737 loc_C737:                               ; CODE XREF: _do_ssh2_transport+2476j
.text:0000C737                 mov     eax, [ebp+var_C]
.text:0000C73A                 mov     ecx, [eax+68h]
.text:0000C73D                 push    ecx             ; Str2
.text:0000C73E                 mov     edx, [ebp+arg_0]
.text:0000C741                 mov     eax, [edx+98h]
.text:0000C747                 push    eax             ; Str1
.text:0000C748                 call    _strcmp
.text:0000C74D                 add     esp, 8
.text:0000C750                 test    eax, eax
.text:0000C752                 jz      short loc_C780
.text:0000C754                 push    offset $SG92033 ; "Host key was different in repeat key ex"...
.text:0000C759                 call    _dupprintf
.text:0000C75E                 add     esp, 4
.text:0000C761                 push    eax
.text:0000C762                 mov     ecx, [ebp+arg_0]
.text:0000C765                 push    ecx
.text:0000C766                 call    _bomb_out
.text:0000C76B                 add     esp, 8
.text:0000C76E
.text:0000C76E loc_C76E:                               ; CODE XREF: _do_ssh2_transport+26C6j
.text:0000C76E                 mov     edx, [ebp+var_10]
.text:0000C771                 mov     dword ptr [edx], 0
.text:0000C777                 jmp     loc_D155
.text:0000C77C ; ---------------------------------------------------------------------------
.text:0000C77C                 xor     eax, eax
.text:0000C77E                 jnz     short loc_C76E
.text:0000C780
.text:0000C780 loc_C780:                               ; CODE XREF: _do_ssh2_transport+269Aj
.text:0000C780                 mov     ecx, [ebp+var_C]
.text:0000C783                 mov     edx, [ecx+68h]
.text:0000C786                 push    edx
.text:0000C787                 call    _safefree
.text:0000C78C                 add     esp, 4
.text:0000C78F
.text:0000C78F loc_C78F:                               ; CODE XREF: _do_ssh2_transport+267Dj
.text:0000C78F                 mov     esi, esp
.text:0000C791                 mov     eax, [ebp+var_C]
.text:0000C794                 mov     ecx, [eax+7Ch]
.text:0000C797                 push    ecx
.text:0000C798                 mov     edx, [ebp+arg_0]
.text:0000C79B                 mov     eax, [edx+94h]
.text:0000C7A1                 mov     ecx, [eax+4]
.text:0000C7A4                 call    ecx
.text:0000C7A6                 add     esp, 4
.text:0000C7A9                 cmp     esi, esp
.text:0000C7AB                 call    __RTC_CheckEsp
.text:0000C7B0                 mov     edx, [ebp+var_C]
.text:0000C7B3                 cmp     dword ptr [edx+0E4h], 0
.text:0000C7BA                 jnz     short loc_C821
.text:0000C7BC                 push    20h ; ' '       ; Size
.text:0000C7BE                 mov     eax, [ebp+var_C]
.text:0000C7C1                 add     eax, 84h ; 'ä'
.text:0000C7C6                 push    eax             ; Src
.text:0000C7C7                 mov     ecx, [ebp+arg_0]
.text:0000C7CA                 add     ecx, 9Ch ; '£'
.text:0000C7D0                 push    ecx             ; Dst
.text:0000C7D1                 call    _memcpy
.text:0000C7D6                 add     esp, 0Ch
.text:0000C7D9                 mov     edx, [ebp+arg_0]
.text:0000C7DC                 mov     eax, [edx+90h]
.text:0000C7E2                 mov     ecx, [eax+1Ch]
.text:0000C7E5                 mov     edx, [ebp+arg_0]
.text:0000C7E8                 mov     eax, [ecx+0Ch]
.text:0000C7EB                 mov     [edx+0BCh], eax
.text:0000C7F1                 mov     ecx, [ebp+arg_0]
.text:0000C7F4                 cmp     dword ptr [ecx+0BCh], 20h ; ' '
.text:0000C7FB                 jbe     short loc_C814
.text:0000C7FD                 push    1AD4h           ; Line
.text:0000C802                 push    offset $SG92040 ; "..\\..\\..\\ssh.c"
.text:0000C807                 push    offset $SG92041 ; "ssh->v2_session_id_len <= sizeof(ssh->v"...
.text:0000C80C                 call    __wassert
.text:0000C811 ; ---------------------------------------------------------------------------
.text:0000C811                 add     esp, 0Ch
.text:0000C814
.text:0000C814 loc_C814:                               ; CODE XREF: _do_ssh2_transport+2743j
.text:0000C814                 mov     eax, [ebp+var_C]
.text:0000C817                 mov     dword ptr [eax+0E4h], 1
.text:0000C821
.text:0000C821 loc_C821:                               ; CODE XREF: _do_ssh2_transport+2702j
.text:0000C821                 push    15h
.text:0000C823                 call    _ssh2_pkt_init
.text:0000C828                 add     esp, 4
.text:0000C82B                 mov     ecx, [ebp+var_C]
.text:0000C82E                 mov     [ecx+0ECh], eax
.text:0000C834                 mov     edx, [ebp+var_C]
.text:0000C837                 mov     eax, [edx+0ECh]
.text:0000C83D                 push    eax
.text:0000C83E                 mov     ecx, [ebp+arg_0]
.text:0000C841                 push    ecx
.text:0000C842                 call    _ssh2_pkt_send_noqueue
.text:0000C847                 add     esp, 8
.text:0000C84A                 mov     edx, [ebp+arg_0]
.text:0000C84D                 mov     dword ptr [edx+65Ch], 0
.text:0000C857                 mov     eax, [ebp+arg_0]
.text:0000C85A                 cmp     dword ptr [eax+68h], 0
.text:0000C85E                 jz      short loc_C87E
.text:0000C860                 mov     esi, esp
.text:0000C862                 mov     ecx, [ebp+arg_0]
.text:0000C865                 mov     edx, [ecx+68h]
.text:0000C868                 push    edx
.text:0000C869                 mov     eax, [ebp+arg_0]
.text:0000C86C                 mov     ecx, [eax+60h]
.text:0000C86F                 mov     edx, [ecx+4]
.text:0000C872                 call    edx
.text:0000C874                 add     esp, 4
.text:0000C877                 cmp     esi, esp
.text:0000C879                 call    __RTC_CheckEsp
.text:0000C87E
.text:0000C87E loc_C87E:                               ; CODE XREF: _do_ssh2_transport+27A6j
.text:0000C87E                 mov     eax, [ebp+arg_0]
.text:0000C881                 mov     ecx, [ebp+var_C]
.text:0000C884                 mov     edx, [ecx+44h]
.text:0000C887                 mov     [eax+60h], edx
.text:0000C88A                 mov     eax, [ebp+arg_0]
.text:0000C88D                 mov     ecx, [eax+60h]
.text:0000C890                 mov     esi, esp
.text:0000C892                 mov     edx, [ecx]
.text:0000C894                 call    edx
.text:0000C896                 cmp     esi, esp
.text:0000C898                 call    __RTC_CheckEsp
.text:0000C89D                 mov     ecx, [ebp+arg_0]
.text:0000C8A0                 mov     [ecx+68h], eax
.text:0000C8A3                 mov     edx, [ebp+arg_0]
.text:0000C8A6                 cmp     dword ptr [edx+78h], 0
.text:0000C8AA                 jz      short loc_C8CA
.text:0000C8AC                 mov     esi, esp
.text:0000C8AE                 mov     eax, [ebp+arg_0]
.text:0000C8B1                 mov     ecx, [eax+78h]
.text:0000C8B4                 push    ecx
.text:0000C8B5                 mov     edx, [ebp+arg_0]
.text:0000C8B8                 mov     eax, [edx+70h]
.text:0000C8BB                 mov     ecx, [eax+4]
.text:0000C8BE                 call    ecx
.text:0000C8C0                 add     esp, 4
.text:0000C8C3                 cmp     esi, esp
.text:0000C8C5                 call    __RTC_CheckEsp
.text:0000C8CA
.text:0000C8CA loc_C8CA:                               ; CODE XREF: _do_ssh2_transport+27F2j
.text:0000C8CA                 mov     edx, [ebp+arg_0]
.text:0000C8CD                 mov     eax, [ebp+var_C]
.text:0000C8D0                 mov     ecx, [eax+4Ch]
.text:0000C8D3                 mov     [edx+70h], ecx
.text:0000C8D6                 mov     edx, [ebp+arg_0]
.text:0000C8D9                 mov     eax, [edx+70h]
.text:0000C8DC                 mov     esi, esp
.text:0000C8DE                 mov     ecx, [eax]
.text:0000C8E0                 call    ecx
.text:0000C8E2                 cmp     esi, esp
.text:0000C8E4                 call    __RTC_CheckEsp
.text:0000C8E9                 mov     edx, [ebp+arg_0]
.text:0000C8EC                 mov     [edx+78h], eax
.text:0000C8EF                 mov     eax, [ebp+arg_0]
.text:0000C8F2                 cmp     dword ptr [eax+88h], 0
.text:0000C8F9                 jz      short loc_C91F
.text:0000C8FB                 mov     esi, esp
.text:0000C8FD                 mov     ecx, [ebp+arg_0]
.text:0000C900                 mov     edx, [ecx+88h]
.text:0000C906                 push    edx
.text:0000C907                 mov     eax, [ebp+arg_0]
.text:0000C90A                 mov     ecx, [eax+80h]
.text:0000C910                 mov     edx, [ecx+0Ch]
.text:0000C913                 call    edx
.text:0000C915                 add     esp, 4
.text:0000C918                 cmp     esi, esp
.text:0000C91A                 call    __RTC_CheckEsp
.text:0000C91F
.text:0000C91F loc_C91F:                               ; CODE XREF: _do_ssh2_transport+2841j
.text:0000C91F                 mov     eax, [ebp+arg_0]
.text:0000C922                 mov     ecx, [ebp+var_C]
.text:0000C925                 mov     edx, [ecx+54h]
.text:0000C928                 mov     [eax+80h], edx
.text:0000C92E                 mov     eax, [ebp+arg_0]
.text:0000C931                 mov     ecx, [eax+80h]
.text:0000C937                 mov     esi, esp
.text:0000C939                 mov     edx, [ecx+8]
.text:0000C93C                 call    edx
.text:0000C93E                 cmp     esi, esp
.text:0000C940                 call    __RTC_CheckEsp
.text:0000C945                 mov     ecx, [ebp+arg_0]
.text:0000C948                 mov     [ecx+88h], eax
.text:0000C94E                 mov     edx, [ebp+arg_0]
.text:0000C951                 mov     eax, [edx+90h]
.text:0000C957                 mov     ecx, [eax+1Ch]
.text:0000C95A                 mov     edx, [ecx+0Ch]
.text:0000C95D                 shl     edx, 1
.text:0000C95F                 cmp     edx, 40h ; '@'
.text:0000C962                 jbe     short loc_C97B
.text:0000C964                 push    1AF8h           ; Line
.text:0000C969                 push    offset $SG92047 ; "..\\..\\..\\ssh.c"
.text:0000C96E                 push    offset $SG92048 ; "sizeof(keyspace) >= ssh->kex->hash->hle"...
.text:0000C973                 call    __wassert
.text:0000C978 ; ---------------------------------------------------------------------------
.text:0000C978                 add     esp, 0Ch
.text:0000C97B
.text:0000C97B loc_C97B:                               ; CODE XREF: _do_ssh2_transport+28AAj
.text:0000C97B                 lea     ecx, [ebp+var_F0]
.text:0000C981                 push    ecx
.text:0000C982                 push    43h ; 'C'
.text:0000C984                 mov     edx, [ebp+var_C]
.text:0000C987                 add     edx, 84h ; 'ä'
.text:0000C98D                 push    edx
.text:0000C98E                 mov     eax, [ebp+var_C]
.text:0000C991                 mov     ecx, [eax+28h]
.text:0000C994                 push    ecx
.text:0000C995                 mov     edx, [ebp+arg_0]
.text:0000C998                 push    edx
.text:0000C999                 call    _ssh2_mkkey
.text:0000C99E                 add     esp, 14h
.text:0000C9A1                 mov     eax, [ebp+arg_0]
.text:0000C9A4                 mov     ecx, [eax+60h]
.text:0000C9A7                 mov     eax, [ecx+20h]
.text:0000C9AA                 add     eax, 7
.text:0000C9AD                 cdq
.text:0000C9AE                 and     edx, 7
.text:0000C9B1                 add     eax, edx
.text:0000C9B3                 sar     eax, 3
.text:0000C9B6                 mov     edx, [ebp+arg_0]
.text:0000C9B9                 mov     ecx, [edx+90h]
.text:0000C9BF                 mov     edx, [ecx+1Ch]
.text:0000C9C2                 mov     ecx, [edx+0Ch]
.text:0000C9C5                 shl     ecx, 1
.text:0000C9C7                 cmp     eax, ecx
.text:0000C9C9                 jle     short loc_C9E2
.text:0000C9CB                 push    1AFBh           ; Line
.text:0000C9D0                 push    offset $SG92050 ; "..\\..\\..\\ssh.c"
.text:0000C9D5                 push    offset $SG92051 ; "(ssh->cscipher->keylen+7) / 8 <= ssh->k"...
.text:0000C9DA                 call    __wassert
.text:0000C9DF ; ---------------------------------------------------------------------------
.text:0000C9DF                 add     esp, 0Ch
.text:0000C9E2
.text:0000C9E2 loc_C9E2:                               ; CODE XREF: _do_ssh2_transport+2911j
.text:0000C9E2                 mov     esi, esp
.text:0000C9E4                 lea     eax, [ebp+var_F0]
.text:0000C9EA                 push    eax
.text:0000C9EB                 mov     ecx, [ebp+arg_0]
.text:0000C9EE                 mov     edx, [ecx+68h]
.text:0000C9F1                 push    edx
.text:0000C9F2                 mov     eax, [ebp+arg_0]
.text:0000C9F5                 mov     ecx, [eax+60h]
.text:0000C9F8                 mov     edx, [ecx+0Ch]
.text:0000C9FB                 call    edx
.text:0000C9FD                 add     esp, 8
.text:0000CA00                 cmp     esi, esp
.text:0000CA02                 call    __RTC_CheckEsp
.text:0000CA07                 lea     eax, [ebp+var_F0]
.text:0000CA0D                 push    eax
.text:0000CA0E                 push    41h ; 'A'
.text:0000CA10                 mov     ecx, [ebp+var_C]
.text:0000CA13                 add     ecx, 84h ; 'ä'
.text:0000CA19                 push    ecx
.text:0000CA1A                 mov     edx, [ebp+var_C]
.text:0000CA1D                 mov     eax, [edx+28h]
.text:0000CA20                 push    eax
.text:0000CA21                 mov     ecx, [ebp+arg_0]
.text:0000CA24                 push    ecx
.text:0000CA25                 call    _ssh2_mkkey
.text:0000CA2A                 add     esp, 14h
.text:0000CA2D                 mov     edx, [ebp+arg_0]
.text:0000CA30                 mov     eax, [edx+60h]
.text:0000CA33                 mov     ecx, [ebp+arg_0]
.text:0000CA36                 mov     edx, [ecx+90h]
.text:0000CA3C                 mov     ecx, [edx+1Ch]
.text:0000CA3F                 mov     edx, [ecx+0Ch]
.text:0000CA42                 shl     edx, 1
.text:0000CA44                 cmp     [eax+1Ch], edx
.text:0000CA47                 jle     short loc_CA60
.text:0000CA49                 push    1AFFh           ; Line
.text:0000CA4E                 push    offset $SG92053 ; "..\\..\\..\\ssh.c"
.text:0000CA53                 push    offset $SG92054 ; "ssh->cscipher->blksize <= ssh->kex->has"...
.text:0000CA58                 call    __wassert
.text:0000CA5D ; ---------------------------------------------------------------------------
.text:0000CA5D                 add     esp, 0Ch
.text:0000CA60
.text:0000CA60 loc_CA60:                               ; CODE XREF: _do_ssh2_transport+298Fj
.text:0000CA60                 mov     esi, esp
.text:0000CA62                 lea     ecx, [ebp+var_F0]
.text:0000CA68                 push    ecx
.text:0000CA69                 mov     edx, [ebp+arg_0]
.text:0000CA6C                 mov     eax, [edx+68h]
.text:0000CA6F                 push    eax
.text:0000CA70                 mov     ecx, [ebp+arg_0]
.text:0000CA73                 mov     edx, [ecx+60h]
.text:0000CA76                 mov     eax, [edx+8]
.text:0000CA79                 call    eax
.text:0000CA7B                 add     esp, 8
.text:0000CA7E                 cmp     esi, esp
.text:0000CA80                 call    __RTC_CheckEsp
.text:0000CA85                 lea     ecx, [ebp+var_F0]
.text:0000CA8B                 push    ecx
.text:0000CA8C                 push    45h ; 'E'
.text:0000CA8E                 mov     edx, [ebp+var_C]
.text:0000CA91                 add     edx, 84h ; 'ä'
.text:0000CA97                 push    edx
.text:0000CA98                 mov     eax, [ebp+var_C]
.text:0000CA9B                 mov     ecx, [eax+28h]
.text:0000CA9E                 push    ecx
.text:0000CA9F                 mov     edx, [ebp+arg_0]
.text:0000CAA2                 push    edx
.text:0000CAA3                 call    _ssh2_mkkey
.text:0000CAA8                 add     esp, 14h
.text:0000CAAB                 mov     eax, [ebp+arg_0]
.text:0000CAAE                 mov     ecx, [eax+70h]
.text:0000CAB1                 mov     edx, [ebp+arg_0]
.text:0000CAB4                 mov     eax, [edx+90h]
.text:0000CABA                 mov     edx, [eax+1Ch]
.text:0000CABD                 mov     eax, [edx+0Ch]
.text:0000CAC0                 shl     eax, 1
.text:0000CAC2                 cmp     [ecx+28h], eax
.text:0000CAC5                 jle     short loc_CADE
.text:0000CAC7                 push    1B03h           ; Line
.text:0000CACC                 push    offset $SG92056 ; "..\\..\\..\\ssh.c"
.text:0000CAD1                 push    offset $SG92057 ; "ssh->csmac->len <= ssh->kex->hash->hlen"...
.text:0000CAD6                 call    __wassert
.text:0000CADB ; ---------------------------------------------------------------------------
.text:0000CADB                 add     esp, 0Ch
.text:0000CADE
.text:0000CADE loc_CADE:                               ; CODE XREF: _do_ssh2_transport+2A0Dj
.text:0000CADE                 mov     esi, esp
.text:0000CAE0                 lea     edx, [ebp+var_F0]
.text:0000CAE6                 push    edx
.text:0000CAE7                 mov     eax, [ebp+arg_0]
.text:0000CAEA                 mov     ecx, [eax+78h]
.text:0000CAED                 push    ecx
.text:0000CAEE                 mov     edx, [ebp+arg_0]
.text:0000CAF1                 mov     eax, [edx+70h]
.text:0000CAF4                 mov     ecx, [eax+8]
.text:0000CAF7                 call    ecx
.text:0000CAF9                 add     esp, 8
.text:0000CAFC                 cmp     esi, esp
.text:0000CAFE                 call    __RTC_CheckEsp
.text:0000CB03                 push    40h ; '@'
.text:0000CB05                 lea     edx, [ebp+var_F0]
.text:0000CB0B                 push    edx
.text:0000CB0C                 call    _smemclr
.text:0000CB11                 add     esp, 8
.text:0000CB14                 mov     eax, [ebp+arg_0]
.text:0000CB17                 mov     ecx, [eax+60h]
.text:0000CB1A                 mov     edx, [ecx+28h]
.text:0000CB1D                 push    edx
.text:0000CB1E                 push    offset $SG92058 ; "Initialised %.200s client->server encry"...
.text:0000CB23                 mov     eax, [ebp+arg_0]
.text:0000CB26                 push    eax
.text:0000CB27                 call    _logeventf
.text:0000CB2C                 add     esp, 0Ch
.text:0000CB2F                 mov     ecx, [ebp+arg_0]
.text:0000CB32                 mov     edx, [ecx+70h]
.text:0000CB35                 mov     eax, [edx+2Ch]
.text:0000CB38                 push    eax
.text:0000CB39                 push    offset $SG92059 ; "Initialised %.200s client->server MAC a"...
.text:0000CB3E                 mov     ecx, [ebp+arg_0]
.text:0000CB41                 push    ecx
.text:0000CB42                 call    _logeventf
.text:0000CB47                 add     esp, 0Ch
.text:0000CB4A                 mov     edx, [ebp+arg_0]
.text:0000CB4D                 mov     eax, [edx+80h]
.text:0000CB53                 cmp     dword ptr [eax+24h], 0
.text:0000CB57                 jz      short loc_CB77
.text:0000CB59                 mov     ecx, [ebp+arg_0]
.text:0000CB5C                 mov     edx, [ecx+80h]
.text:0000CB62                 mov     eax, [edx+24h]
.text:0000CB65                 push    eax
.text:0000CB66                 push    offset $SG92061 ; "Initialised %s compression"
.text:0000CB6B                 mov     ecx, [ebp+arg_0]
.text:0000CB6E                 push    ecx
.text:0000CB6F                 call    _logeventf
.text:0000CB74                 add     esp, 0Ch
.text:0000CB77
.text:0000CB77 loc_CB77:                               ; CODE XREF: _do_ssh2_transport+2A9Fj
.text:0000CB77                 mov     edx, [ebp+arg_0]
.text:0000CB7A                 mov     dword ptr [edx+138h], 0
.text:0000CB84                 mov     eax, [ebp+arg_0]
.text:0000CB87                 push    eax
.text:0000CB88                 call    _ssh2_pkt_queuesend
.text:0000CB8D                 add     esp, 4
.text:0000CB90
.text:0000CB90 loc_CB90:                               ; CODE XREF: _do_ssh2_transport+2AE8j
.text:0000CB90                                         ; _do_ssh2_transport+2AEEj
.text:0000CB90                 mov     ecx, [ebp+var_10]
.text:0000CB93                 mov     dword ptr [ecx], 1B1Ah
.text:0000CB99                 jmp     loc_D155
.text:0000CB9E ; ---------------------------------------------------------------------------
.text:0000CB9E
.text:0000CB9E loc_CB9E:                               ; CODE XREF: _do_ssh2_transport+19Dj
.text:0000CB9E                 xor     edx, edx
.text:0000CBA0                 jnz     short loc_CB90
.text:0000CBA2                 cmp     [ebp+arg_C], 0
.text:0000CBA6                 jz      short loc_CB90
.text:0000CBA8                 mov     eax, [ebp+arg_C]
.text:0000CBAB                 cmp     dword ptr [eax+8], 15h
.text:0000CBAF                 jz      short loc_CBDD
.text:0000CBB1                 push    offset $SG92070 ; "expected new-keys packet from server"
.text:0000CBB6                 call    _dupprintf
.text:0000CBBB                 add     esp, 4
.text:0000CBBE                 push    eax
.text:0000CBBF                 mov     ecx, [ebp+arg_0]
.text:0000CBC2                 push    ecx
.text:0000CBC3                 call    _bomb_out
.text:0000CBC8                 add     esp, 8
.text:0000CBCB
.text:0000CBCB loc_CBCB:                               ; CODE XREF: _do_ssh2_transport+2B23j
.text:0000CBCB                 mov     edx, [ebp+var_10]
.text:0000CBCE                 mov     dword ptr [edx], 0
.text:0000CBD4                 jmp     loc_D155
.text:0000CBD9 ; ---------------------------------------------------------------------------
.text:0000CBD9                 xor     eax, eax
.text:0000CBDB                 jnz     short loc_CBCB
.text:0000CBDD
.text:0000CBDD loc_CBDD:                               ; CODE XREF: _do_ssh2_transport+2AF7j
.text:0000CBDD                 mov     ecx, [ebp+arg_0]
.text:0000CBE0                 mov     dword ptr [ecx+658h], 0
.text:0000CBEA                 mov     edx, [ebp+arg_0]
.text:0000CBED                 cmp     dword ptr [edx+6Ch], 0
.text:0000CBF1                 jz      short loc_CC11
.text:0000CBF3                 mov     esi, esp
.text:0000CBF5                 mov     eax, [ebp+arg_0]
.text:0000CBF8                 mov     ecx, [eax+6Ch]
.text:0000CBFB                 push    ecx
.text:0000CBFC                 mov     edx, [ebp+arg_0]
.text:0000CBFF                 mov     eax, [edx+64h]
.text:0000CC02                 mov     ecx, [eax+4]
.text:0000CC05                 call    ecx
.text:0000CC07                 add     esp, 4
.text:0000CC0A                 cmp     esi, esp
.text:0000CC0C                 call    __RTC_CheckEsp
.text:0000CC11
.text:0000CC11 loc_CC11:                               ; CODE XREF: _do_ssh2_transport+2B39j
.text:0000CC11                 mov     edx, [ebp+arg_0]
.text:0000CC14                 mov     eax, [ebp+var_C]
.text:0000CC17                 mov     ecx, [eax+48h]
.text:0000CC1A                 mov     [edx+64h], ecx
.text:0000CC1D                 mov     edx, [ebp+arg_0]
.text:0000CC20                 mov     eax, [edx+64h]
.text:0000CC23                 mov     esi, esp
.text:0000CC25                 mov     ecx, [eax]
.text:0000CC27                 call    ecx
.text:0000CC29                 cmp     esi, esp
.text:0000CC2B                 call    __RTC_CheckEsp
.text:0000CC30                 mov     edx, [ebp+arg_0]
.text:0000CC33                 mov     [edx+6Ch], eax
.text:0000CC36                 mov     eax, [ebp+arg_0]
.text:0000CC39                 cmp     dword ptr [eax+7Ch], 0
.text:0000CC3D                 jz      short loc_CC5D
.text:0000CC3F                 mov     esi, esp
.text:0000CC41                 mov     ecx, [ebp+arg_0]
.text:0000CC44                 mov     edx, [ecx+7Ch]
.text:0000CC47                 push    edx
.text:0000CC48                 mov     eax, [ebp+arg_0]
.text:0000CC4B                 mov     ecx, [eax+74h]
.text:0000CC4E                 mov     edx, [ecx+4]
.text:0000CC51                 call    edx
.text:0000CC53                 add     esp, 4
.text:0000CC56                 cmp     esi, esp
.text:0000CC58                 call    __RTC_CheckEsp
.text:0000CC5D
.text:0000CC5D loc_CC5D:                               ; CODE XREF: _do_ssh2_transport+2B85j
.text:0000CC5D                 mov     eax, [ebp+arg_0]
.text:0000CC60                 mov     ecx, [ebp+var_C]
.text:0000CC63                 mov     edx, [ecx+50h]
.text:0000CC66                 mov     [eax+74h], edx
.text:0000CC69                 mov     eax, [ebp+arg_0]
.text:0000CC6C                 mov     ecx, [eax+74h]
.text:0000CC6F                 mov     esi, esp
.text:0000CC71                 mov     edx, [ecx]
.text:0000CC73                 call    edx
.text:0000CC75                 cmp     esi, esp
.text:0000CC77                 call    __RTC_CheckEsp
.text:0000CC7C                 mov     ecx, [ebp+arg_0]
.text:0000CC7F                 mov     [ecx+7Ch], eax
.text:0000CC82                 mov     edx, [ebp+arg_0]
.text:0000CC85                 cmp     dword ptr [edx+8Ch], 0
.text:0000CC8C                 jz      short loc_CCB2
.text:0000CC8E                 mov     esi, esp
.text:0000CC90                 mov     eax, [ebp+arg_0]
.text:0000CC93                 mov     ecx, [eax+8Ch]
.text:0000CC99                 push    ecx
.text:0000CC9A                 mov     edx, [ebp+arg_0]
.text:0000CC9D                 mov     eax, [edx+84h]
.text:0000CCA3                 mov     ecx, [eax+18h]
.text:0000CCA6                 call    ecx
.text:0000CCA8                 add     esp, 4
.text:0000CCAB                 cmp     esi, esp
.text:0000CCAD                 call    __RTC_CheckEsp
.text:0000CCB2
.text:0000CCB2 loc_CCB2:                               ; CODE XREF: _do_ssh2_transport+2BD4j
.text:0000CCB2                 mov     edx, [ebp+arg_0]
.text:0000CCB5                 mov     eax, [ebp+var_C]
.text:0000CCB8                 mov     ecx, [eax+58h]
.text:0000CCBB                 mov     [edx+84h], ecx
.text:0000CCC1                 mov     edx, [ebp+arg_0]
.text:0000CCC4                 mov     eax, [edx+84h]
.text:0000CCCA                 mov     esi, esp
.text:0000CCCC                 mov     ecx, [eax+14h]
.text:0000CCCF                 call    ecx
.text:0000CCD1                 cmp     esi, esp
.text:0000CCD3                 call    __RTC_CheckEsp
.text:0000CCD8                 mov     edx, [ebp+arg_0]
.text:0000CCDB                 mov     [edx+8Ch], eax
.text:0000CCE1                 mov     eax, [ebp+arg_0]
.text:0000CCE4                 mov     ecx, [eax+90h]
.text:0000CCEA                 mov     edx, [ecx+1Ch]
.text:0000CCED                 mov     eax, [edx+0Ch]
.text:0000CCF0                 shl     eax, 1
.text:0000CCF2                 cmp     eax, 40h ; '@'
.text:0000CCF5                 jbe     short loc_CD0E
.text:0000CCF7                 push    1B3Ah           ; Line
.text:0000CCFC                 push    offset $SG92079 ; "..\\..\\..\\ssh.c"
.text:0000CD01                 push    offset $SG92080 ; "sizeof(keyspace) >= ssh->kex->hash->hle"...
.text:0000CD06                 call    __wassert
.text:0000CD0B ; ---------------------------------------------------------------------------
.text:0000CD0B                 add     esp, 0Ch
.text:0000CD0E
.text:0000CD0E loc_CD0E:                               ; CODE XREF: _do_ssh2_transport+2C3Dj
.text:0000CD0E                 lea     edx, [ebp+var_138]
.text:0000CD14                 push    edx
.text:0000CD15                 push    44h ; 'D'
.text:0000CD17                 mov     eax, [ebp+var_C]
.text:0000CD1A                 add     eax, 84h ; 'ä'
.text:0000CD1F                 push    eax
.text:0000CD20                 mov     ecx, [ebp+var_C]
.text:0000CD23                 mov     edx, [ecx+28h]
.text:0000CD26                 push    edx
.text:0000CD27                 mov     eax, [ebp+arg_0]
.text:0000CD2A                 push    eax
.text:0000CD2B                 call    _ssh2_mkkey
.text:0000CD30                 add     esp, 14h
.text:0000CD33                 mov     ecx, [ebp+arg_0]
.text:0000CD36                 mov     edx, [ecx+64h]
.text:0000CD39                 mov     eax, [edx+20h]
.text:0000CD3C                 add     eax, 7
.text:0000CD3F                 cdq
.text:0000CD40                 and     edx, 7
.text:0000CD43                 add     eax, edx
.text:0000CD45                 sar     eax, 3
.text:0000CD48                 mov     ecx, [ebp+arg_0]
.text:0000CD4B                 mov     edx, [ecx+90h]
.text:0000CD51                 mov     ecx, [edx+1Ch]
.text:0000CD54                 mov     edx, [ecx+0Ch]
.text:0000CD57                 shl     edx, 1
.text:0000CD59                 cmp     eax, edx
.text:0000CD5B                 jle     short loc_CD74
.text:0000CD5D                 push    1B3Dh           ; Line
.text:0000CD62                 push    offset $SG92082 ; "..\\..\\..\\ssh.c"
.text:0000CD67                 push    offset $SG92083 ; "(ssh->sccipher->keylen+7) / 8 <= ssh->k"...
.text:0000CD6C                 call    __wassert
.text:0000CD71 ; ---------------------------------------------------------------------------
.text:0000CD71                 add     esp, 0Ch
.text:0000CD74
.text:0000CD74 loc_CD74:                               ; CODE XREF: _do_ssh2_transport+2CA3j
.text:0000CD74                 mov     esi, esp
.text:0000CD76                 lea     ecx, [ebp+var_138]
.text:0000CD7C                 push    ecx
.text:0000CD7D                 mov     edx, [ebp+arg_0]
.text:0000CD80                 mov     eax, [edx+6Ch]
.text:0000CD83                 push    eax
.text:0000CD84                 mov     ecx, [ebp+arg_0]
.text:0000CD87                 mov     edx, [ecx+64h]
.text:0000CD8A                 mov     eax, [edx+0Ch]
.text:0000CD8D                 call    eax
.text:0000CD8F                 add     esp, 8
.text:0000CD92                 cmp     esi, esp
.text:0000CD94                 call    __RTC_CheckEsp
.text:0000CD99                 lea     ecx, [ebp+var_138]
.text:0000CD9F                 push    ecx
.text:0000CDA0                 push    42h ; 'B'
.text:0000CDA2                 mov     edx, [ebp+var_C]
.text:0000CDA5                 add     edx, 84h ; 'ä'
.text:0000CDAB                 push    edx
.text:0000CDAC                 mov     eax, [ebp+var_C]
.text:0000CDAF                 mov     ecx, [eax+28h]
.text:0000CDB2                 push    ecx
.text:0000CDB3                 mov     edx, [ebp+arg_0]
.text:0000CDB6                 push    edx
.text:0000CDB7                 call    _ssh2_mkkey
.text:0000CDBC                 add     esp, 14h
.text:0000CDBF                 mov     eax, [ebp+arg_0]
.text:0000CDC2                 mov     ecx, [eax+64h]
.text:0000CDC5                 mov     edx, [ebp+arg_0]
.text:0000CDC8                 mov     eax, [edx+90h]
.text:0000CDCE                 mov     edx, [eax+1Ch]
.text:0000CDD1                 mov     eax, [edx+0Ch]
.text:0000CDD4                 shl     eax, 1
.text:0000CDD6                 cmp     [ecx+1Ch], eax
.text:0000CDD9                 jle     short loc_CDF2
.text:0000CDDB                 push    1B41h           ; Line
.text:0000CDE0                 push    offset $SG92085 ; "..\\..\\..\\ssh.c"
.text:0000CDE5                 push    offset $SG92086 ; "ssh->sccipher->blksize <= ssh->kex->has"...
.text:0000CDEA                 call    __wassert
.text:0000CDEF ; ---------------------------------------------------------------------------
.text:0000CDEF                 add     esp, 0Ch
.text:0000CDF2
.text:0000CDF2 loc_CDF2:                               ; CODE XREF: _do_ssh2_transport+2D21j
.text:0000CDF2                 mov     esi, esp
.text:0000CDF4                 lea     edx, [ebp+var_138]
.text:0000CDFA                 push    edx
.text:0000CDFB                 mov     eax, [ebp+arg_0]
.text:0000CDFE                 mov     ecx, [eax+6Ch]
.text:0000CE01                 push    ecx
.text:0000CE02                 mov     edx, [ebp+arg_0]
.text:0000CE05                 mov     eax, [edx+64h]
.text:0000CE08                 mov     ecx, [eax+8]
.text:0000CE0B                 call    ecx
.text:0000CE0D                 add     esp, 8
.text:0000CE10                 cmp     esi, esp
.text:0000CE12                 call    __RTC_CheckEsp
.text:0000CE17                 lea     edx, [ebp+var_138]
.text:0000CE1D                 push    edx
.text:0000CE1E                 push    46h ; 'F'
.text:0000CE20                 mov     eax, [ebp+var_C]
.text:0000CE23                 add     eax, 84h ; 'ä'
.text:0000CE28                 push    eax
.text:0000CE29                 mov     ecx, [ebp+var_C]
.text:0000CE2C                 mov     edx, [ecx+28h]
.text:0000CE2F                 push    edx
.text:0000CE30                 mov     eax, [ebp+arg_0]
.text:0000CE33                 push    eax
.text:0000CE34                 call    _ssh2_mkkey
.text:0000CE39                 add     esp, 14h
.text:0000CE3C                 mov     ecx, [ebp+arg_0]
.text:0000CE3F                 mov     edx, [ecx+74h]
.text:0000CE42                 mov     eax, [ebp+arg_0]
.text:0000CE45                 mov     ecx, [eax+90h]
.text:0000CE4B                 mov     eax, [ecx+1Ch]
.text:0000CE4E                 mov     ecx, [eax+0Ch]
.text:0000CE51                 shl     ecx, 1
.text:0000CE53                 cmp     [edx+28h], ecx
.text:0000CE56                 jle     short loc_CE6F
.text:0000CE58                 push    1B45h           ; Line
.text:0000CE5D                 push    offset $SG92088 ; "..\\..\\..\\ssh.c"
.text:0000CE62                 push    offset $SG92089 ; "ssh->scmac->len <= ssh->kex->hash->hlen"...
.text:0000CE67                 call    __wassert
.text:0000CE6C ; ---------------------------------------------------------------------------
.text:0000CE6C                 add     esp, 0Ch
.text:0000CE6F
.text:0000CE6F loc_CE6F:                               ; CODE XREF: _do_ssh2_transport+2D9Ej
.text:0000CE6F                 mov     esi, esp
.text:0000CE71                 lea     eax, [ebp+var_138]
.text:0000CE77                 push    eax
.text:0000CE78                 mov     ecx, [ebp+arg_0]
.text:0000CE7B                 mov     edx, [ecx+7Ch]
.text:0000CE7E                 push    edx
.text:0000CE7F                 mov     eax, [ebp+arg_0]
.text:0000CE82                 mov     ecx, [eax+74h]
.text:0000CE85                 mov     edx, [ecx+8]
.text:0000CE88                 call    edx
.text:0000CE8A                 add     esp, 8
.text:0000CE8D                 cmp     esi, esp
.text:0000CE8F                 call    __RTC_CheckEsp
.text:0000CE94                 push    40h ; '@'
.text:0000CE96                 lea     eax, [ebp+var_138]
.text:0000CE9C                 push    eax
.text:0000CE9D                 call    _smemclr
.text:0000CEA2                 add     esp, 8
.text:0000CEA5                 mov     ecx, [ebp+arg_0]
.text:0000CEA8                 mov     edx, [ecx+64h]
.text:0000CEAB                 mov     eax, [edx+28h]
.text:0000CEAE                 push    eax
.text:0000CEAF                 push    offset $SG92090 ; "Initialised %.200s server->client encry"...
.text:0000CEB4                 mov     ecx, [ebp+arg_0]
.text:0000CEB7                 push    ecx
.text:0000CEB8                 call    _logeventf
.text:0000CEBD                 add     esp, 0Ch
.text:0000CEC0                 mov     edx, [ebp+arg_0]
.text:0000CEC3                 mov     eax, [edx+74h]
.text:0000CEC6                 mov     ecx, [eax+2Ch]
.text:0000CEC9                 push    ecx
.text:0000CECA                 push    offset $SG92091 ; "Initialised %.200s server->client MAC a"...
.text:0000CECF                 mov     edx, [ebp+arg_0]
.text:0000CED2                 push    edx
.text:0000CED3                 call    _logeventf
.text:0000CED8                 add     esp, 0Ch
.text:0000CEDB                 mov     eax, [ebp+arg_0]
.text:0000CEDE                 mov     ecx, [eax+84h]
.text:0000CEE4                 cmp     dword ptr [ecx+24h], 0
.text:0000CEE8                 jz      short loc_CF08
.text:0000CEEA                 mov     edx, [ebp+arg_0]
.text:0000CEED                 mov     eax, [edx+84h]
.text:0000CEF3                 mov     ecx, [eax+24h]
.text:0000CEF6                 push    ecx
.text:0000CEF7                 push    offset $SG92093 ; "Initialised %s decompression"
.text:0000CEFC                 mov     edx, [ebp+arg_0]
.text:0000CEFF                 push    edx
.text:0000CF00                 call    _logeventf
.text:0000CF05                 add     esp, 0Ch
.text:0000CF08
.text:0000CF08 loc_CF08:                               ; CODE XREF: _do_ssh2_transport+2E30j
.text:0000CF08                 mov     eax, [ebp+var_C]
.text:0000CF0B                 mov     ecx, [eax+28h]
.text:0000CF0E                 push    ecx
.text:0000CF0F                 call    _freebn
.text:0000CF14                 add     esp, 4
.text:0000CF17                 mov     edx, [ebp+arg_0]
.text:0000CF1A                 cmp     dword ptr [edx+674h], 0
.text:0000CF21                 jz      short loc_CF58
.text:0000CF23                 mov     eax, [ebp+arg_0]
.text:0000CF26                 mov     ecx, [eax+674h]
.text:0000CF2C                 push    ecx
.text:0000CF2D                 mov     edx, [ebp+arg_0]
.text:0000CF30                 mov     eax, [edx+0E4h]
.text:0000CF36                 push    eax
.text:0000CF37                 call    _logevent
.text:0000CF3C                 add     esp, 8
.text:0000CF3F                 mov     [ebp+arg_C], 0
.text:0000CF46                 mov     ecx, [ebp+arg_0]
.text:0000CF49                 mov     dword ptr [ecx+674h], 0
.text:0000CF53                 jmp     $begin_key_exchange$91561
.text:0000CF58 ; ---------------------------------------------------------------------------
.text:0000CF58
.text:0000CF58 loc_CF58:                               ; CODE XREF: _do_ssh2_transport+2E69j
.text:0000CF58                 mov     edx, [ebp+arg_0]
.text:0000CF5B                 mov     dword ptr [edx+668h], 0
.text:0000CF65                 mov     esi, esp
.text:0000CF67                 call    dword ptr ds:__imp__GetTickCount@0 ; GetTickCount()
.text:0000CF6D                 cmp     esi, esp
.text:0000CF6F                 call    __RTC_CheckEsp
.text:0000CF74                 mov     ecx, [ebp+arg_0]
.text:0000CF77                 mov     [ecx+670h], eax
.text:0000CF7D                 push    18h
.text:0000CF7F                 mov     edx, [ebp+arg_0]
.text:0000CF82                 mov     eax, [edx+21Ch]
.text:0000CF88                 push    eax
.text:0000CF89                 call    _conf_get_int
.text:0000CF8E                 add     esp, 8
.text:0000CF91                 test    eax, eax
.text:0000CF93                 jz      short loc_CFCD
.text:0000CF95                 mov     ecx, [ebp+arg_0]
.text:0000CF98                 push    ecx
.text:0000CF99                 push    offset _ssh2_timer
.text:0000CF9E                 push    18h
.text:0000CFA0                 mov     edx, [ebp+arg_0]
.text:0000CFA3                 mov     eax, [edx+21Ch]
.text:0000CFA9                 push    eax
.text:0000CFAA                 call    _conf_get_int
.text:0000CFAF                 add     esp, 8
.text:0000CFB2                 imul    eax, 3Ch
.text:0000CFB5                 imul    eax, 3E8h
.text:0000CFBB                 push    eax
.text:0000CFBC                 call    _schedule_timer
.text:0000CFC1                 add     esp, 0Ch
.text:0000CFC4                 mov     ecx, [ebp+arg_0]
.text:0000CFC7                 mov     [ecx+66Ch], eax
.text:0000CFCD
.text:0000CFCD loc_CFCD:                               ; CODE XREF: _do_ssh2_transport+2EDBj
.text:0000CFCD                                         ; _do_ssh2_transport+2F6Dj
.text:0000CFCD                 cmp     [ebp+arg_C], 0
.text:0000CFD1                 jz      short loc_CFDC
.text:0000CFD3                 mov     edx, [ebp+arg_C]
.text:0000CFD6                 cmp     dword ptr [edx+8], 14h
.text:0000CFDA                 jz      short loc_D027
.text:0000CFDC
.text:0000CFDC loc_CFDC:                               ; CODE XREF: _do_ssh2_transport+2F19j
.text:0000CFDC                 cmp     [ebp+arg_C], 0
.text:0000CFE0                 jnz     short $wait_for_rekey$92103
.text:0000CFE2                 cmp     [ebp+arg_8], 0
.text:0000CFE6                 jl      short loc_D027
.text:0000CFE8
.text:0000CFE8 $wait_for_rekey$92103:                  ; CODE XREF: _do_ssh2_transport+2F28j
.text:0000CFE8                                         ; _do_ssh2_transport+2FD3j ...
.text:0000CFE8                 mov     eax, [ebp+arg_0]
.text:0000CFEB                 cmp     dword ptr [eax+20Ch], 0
.text:0000CFF2                 jnz     short loc_D013
.text:0000CFF4                 mov     ecx, [ebp+arg_0]
.text:0000CFF7                 mov     dword ptr [ecx+20Ch], 1
.text:0000D001                 push    0
.text:0000D003                 push    0
.text:0000D005                 push    0
.text:0000D007                 mov     edx, [ebp+arg_0]
.text:0000D00A                 push    edx
.text:0000D00B                 call    _do_ssh2_authconn
.text:0000D010                 add     esp, 10h
.text:0000D013
.text:0000D013 loc_D013:                               ; CODE XREF: _do_ssh2_transport+2F3Aj
.text:0000D013                                         ; _do_ssh2_transport+2F6Bj
.text:0000D013                 mov     eax, [ebp+var_10]
.text:0000D016                 mov     dword ptr [eax], 1B83h
.text:0000D01C                 jmp     loc_D155
.text:0000D021 ; ---------------------------------------------------------------------------
.text:0000D021
.text:0000D021 loc_D021:                               ; CODE XREF: _do_ssh2_transport+1ADj
.text:0000D021                 xor     ecx, ecx
.text:0000D023                 jnz     short loc_D013
.text:0000D025                 jmp     short loc_CFCD
.text:0000D027 ; ---------------------------------------------------------------------------
.text:0000D027
.text:0000D027 loc_D027:                               ; CODE XREF: _do_ssh2_transport+2F22j
.text:0000D027                                         ; _do_ssh2_transport+2F2Ej
.text:0000D027                 cmp     [ebp+arg_C], 0
.text:0000D02B                 jz      short loc_D049
.text:0000D02D                 push    offset $SG92112 ; "Server initiated key re-exchange"
.text:0000D032                 mov     edx, [ebp+arg_0]
.text:0000D035                 mov     eax, [edx+0E4h]
.text:0000D03B                 push    eax
.text:0000D03C                 call    _logevent
.text:0000D041                 add     esp, 8
.text:0000D044                 jmp     loc_D147
.text:0000D049 ; ---------------------------------------------------------------------------
.text:0000D049
.text:0000D049 loc_D049:                               ; CODE XREF: _do_ssh2_transport+2F73j
.text:0000D049                 cmp     [ebp+arg_8], 0FFFFFFFEh
.text:0000D04D                 jnz     short loc_D09D
.text:0000D04F                 mov     ecx, [ebp+var_C]
.text:0000D052                 cmp     dword ptr [ecx+0DCh], 0
.text:0000D059                 jz      short loc_D072
.text:0000D05B                 push    1B9Bh           ; Line
.text:0000D060                 push    offset $SG92116 ; "..\\..\\..\\ssh.c"
.text:0000D065                 push    offset $SG92117 ; "!s->userauth_succeeded"
.text:0000D06A                 call    __wassert
.text:0000D06F ; ---------------------------------------------------------------------------
.text:0000D06F                 add     esp, 0Ch
.text:0000D072
.text:0000D072 loc_D072:                               ; CODE XREF: _do_ssh2_transport+2FA1j
.text:0000D072                 mov     eax, [ebp+var_C]
.text:0000D075                 mov     dword ptr [eax+0DCh], 1
.text:0000D07F                 mov     ecx, [ebp+var_C]
.text:0000D082                 cmp     dword ptr [ecx+0E0h], 0
.text:0000D089                 jnz     short loc_D090
.text:0000D08B                 jmp     $wait_for_rekey$92103
.text:0000D090 ; ---------------------------------------------------------------------------
.text:0000D090
.text:0000D090 loc_D090:                               ; CODE XREF: _do_ssh2_transport+2FD1j
.text:0000D090                 mov     edx, [ebp+var_C]
.text:0000D093                 mov     dword ptr [edx+0E0h], 0
.text:0000D09D
.text:0000D09D loc_D09D:                               ; CODE XREF: _do_ssh2_transport+2F95j
.text:0000D09D                 mov     eax, [ebp+arg_0]
.text:0000D0A0                 mov     ecx, [eax+50h]
.text:0000D0A3                 and     ecx, 40h
.text:0000D0A6                 jz      loc_D132
.text:0000D0AC                 mov     edx, [ebp+var_8]
.text:0000D0AF                 push    edx
.text:0000D0B0                 push    offset $SG92121 ; "Server bug prevents key re-exchange (%s"...
.text:0000D0B5                 mov     eax, [ebp+arg_0]
.text:0000D0B8                 push    eax
.text:0000D0B9                 call    _logeventf
.text:0000D0BE                 add     esp, 0Ch
.text:0000D0C1                 mov     ecx, [ebp+arg_0]
.text:0000D0C4                 mov     dword ptr [ecx+65Ch], 0
.text:0000D0CE                 mov     edx, [ebp+arg_0]
.text:0000D0D1                 mov     dword ptr [edx+658h], 0
.text:0000D0DB                 push    18h
.text:0000D0DD                 mov     eax, [ebp+arg_0]
.text:0000D0E0                 mov     ecx, [eax+21Ch]
.text:0000D0E6                 push    ecx
.text:0000D0E7                 call    _conf_get_int
.text:0000D0EC                 add     esp, 8
.text:0000D0EF                 test    eax, eax
.text:0000D0F1                 jz      short loc_D12B
.text:0000D0F3                 mov     edx, [ebp+arg_0]
.text:0000D0F6                 push    edx
.text:0000D0F7                 push    offset _ssh2_timer
.text:0000D0FC                 push    18h
.text:0000D0FE                 mov     eax, [ebp+arg_0]
.text:0000D101                 mov     ecx, [eax+21Ch]
.text:0000D107                 push    ecx
.text:0000D108                 call    _conf_get_int
.text:0000D10D                 add     esp, 8
.text:0000D110                 imul    eax, 3Ch
.text:0000D113                 imul    eax, 3E8h
.text:0000D119                 push    eax
.text:0000D11A                 call    _schedule_timer
.text:0000D11F                 add     esp, 0Ch
.text:0000D122                 mov     edx, [ebp+arg_0]
.text:0000D125                 mov     [edx+66Ch], eax
.text:0000D12B
.text:0000D12B loc_D12B:                               ; CODE XREF: _do_ssh2_transport+3039j
.text:0000D12B                 jmp     $wait_for_rekey$92103
.text:0000D130 ; ---------------------------------------------------------------------------
.text:0000D130                 jmp     short loc_D147
.text:0000D132 ; ---------------------------------------------------------------------------
.text:0000D132
.text:0000D132 loc_D132:                               ; CODE XREF: _do_ssh2_transport+2FEEj
.text:0000D132                 mov     eax, [ebp+var_8]
.text:0000D135                 push    eax
.text:0000D136                 push    offset $SG92125 ; "Initiating key re-exchange (%s)"
.text:0000D13B                 mov     ecx, [ebp+arg_0]
.text:0000D13E                 push    ecx
.text:0000D13F                 call    _logeventf
.text:0000D144                 add     esp, 0Ch
.text:0000D147
.text:0000D147 loc_D147:                               ; CODE XREF: _do_ssh2_transport+2F8Cj
.text:0000D147                                         ; _do_ssh2_transport+3078j
.text:0000D147                 jmp     $begin_key_exchange$91561
.text:0000D14C ; ---------------------------------------------------------------------------
.text:0000D14C
.text:0000D14C loc_D14C:                               ; CODE XREF: _do_ssh2_transport+118j
.text:0000D14C                                         ; _do_ssh2_transport+13Dj ...
.text:0000D14C                 mov     edx, [ebp+var_10]
.text:0000D14F                 mov     dword ptr [edx], 0
.text:0000D155
.text:0000D155 loc_D155:                               ; CODE XREF: _do_ssh2_transport+AF0j
.text:0000D155                                         ; _do_ssh2_transport+B2Bj ...
.text:0000D155                 push    edx
.text:0000D156                 mov     ecx, ebp
.text:0000D158                 push    eax
.text:0000D159                 lea     edx, $LN434
.text:0000D15F                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0000D164                 pop     eax
.text:0000D165                 pop     edx
.text:0000D166                 pop     edi
.text:0000D167                 pop     esi
.text:0000D168                 mov     ecx, [ebp+var_4]
.text:0000D16B                 xor     ecx, ebp
.text:0000D16D                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:0000D172                 add     esp, 160h
.text:0000D178                 cmp     ebp, esp
.text:0000D17A                 call    __RTC_CheckEsp
.text:0000D17F                 mov     esp, ebp
.text:0000D181                 pop     ebp
.text:0000D182                 retn
.text:0000D182 _do_ssh2_transport endp
.text:0000D182
.text:0000D182 ; ---------------------------------------------------------------------------
.text:0000D183                 align 4
.text:0000D184 $LN434          dd 6                    ; DATA XREF: _do_ssh2_transport+30A1o
.text:0000D188                 dd offset $LN433
.text:0000D18C $LN433          db 0CCh                 ; DATA XREF: .text:0000D188o
.text:0000D18D                 db 3 dup(0FFh)
.text:0000D190                 dd 4
.text:0000D194                 dd offset $LN427        ; "str"
.text:0000D198                 dd 0FFFFFFB4h, 4
.text:0000D1A0                 dd offset $LN428        ; "len"
.text:0000D1A4                 db 88h, 0FFh
.text:0000D1A6                 dw 0FFFFh
.text:0000D1A8                 dd 4
.text:0000D1AC                 dd offset $LN429        ; "keydata"
.text:0000D1B0                 dd 0FFFFFF60h, 4
.text:0000D1B8                 dd offset $LN430        ; "kstr1len"
.text:0000D1BC                 dd 0FFFFFF10h, 40h
.text:0000D1C4                 dd offset $LN431        ; "keyspace"
.text:0000D1C8                 dd 0FFFFFEC8h, 40h
.text:0000D1D0                 dd offset $LN432        ; "keyspace"
.text:0000D1D4 $LN432          db 'keyspace',0         ; DATA XREF: .text:0000D1D0o
.text:0000D1DD $LN431          db 'keyspace',0         ; DATA XREF: .text:0000D1C4o
.text:0000D1E6 $LN430          db 'kstr1len',0         ; DATA XREF: .text:0000D1B8o
.text:0000D1EF $LN429          db 'keydata',0          ; DATA XREF: .text:0000D1ACo
.text:0000D1F7 $LN428          db 'len',0              ; DATA XREF: .text:0000D1A0o
.text:0000D1FB $LN427          db 'str',0              ; DATA XREF: .text:0000D194o
.text:0000D1FF                 align 10h
.text:0000D200 $LN435          dd offset $LN383        ; DATA XREF: _do_ssh2_transport+2C4r
.text:0000D200                 dd offset $LN385        ; jump table for switch statement
.text:0000D200                 dd offset $LN386
.text:0000D200                 dd offset $LN387
.text:0000D200                 dd offset $LN384
.text:0000D214 $LN436          dd offset $LN370        ; DATA XREF: _do_ssh2_transport+41Ar
.text:0000D214                 dd offset $LN373        ; jump table for switch statement
.text:0000D214                 dd offset $LN376
.text:0000D214                 dd offset $LN372
.text:0000D214                 dd offset $LN375
.text:0000D214                 dd offset $LN371
.text:0000D22C                 db 0Ch dup(0CCh)
.text:0000D238
.text:0000D238 ; =============== S U B R O U T I N E =======================================
.text:0000D238
.text:0000D238 ; Attributes: bp-based frame
.text:0000D238
.text:0000D238 _bomb_out       proc near               ; CODE XREF: _do_ssh2_transport+B1Ap
.text:0000D238                                         ; _do_ssh2_transport+BE3p ...
.text:0000D238
.text:0000D238 arg_0           = dword ptr  8
.text:0000D238 arg_4           = dword ptr  0Ch
.text:0000D238
.text:0000D238                 push    ebp
.text:0000D239                 mov     ebp, esp
.text:0000D23B                 push    0
.text:0000D23D                 mov     eax, [ebp+arg_0]
.text:0000D240                 push    eax
.text:0000D241                 call    _ssh_do_close
.text:0000D246                 add     esp, 8
.text:0000D249                 mov     ecx, [ebp+arg_4]
.text:0000D24C                 push    ecx
.text:0000D24D                 mov     edx, [ebp+arg_0]
.text:0000D250                 mov     eax, [edx+0E4h]
.text:0000D256                 push    eax
.text:0000D257                 call    _logevent
.text:0000D25C                 add     esp, 8
.text:0000D25F                 mov     ecx, [ebp+arg_4]
.text:0000D262                 push    ecx
.text:0000D263                 push    offset $SG88133
.text:0000D268                 mov     edx, [ebp+arg_0]
.text:0000D26B                 mov     eax, [edx+0E4h]
.text:0000D271                 push    eax
.text:0000D272                 call    _connection_fatal
.text:0000D277                 add     esp, 0Ch
.text:0000D27A                 mov     ecx, [ebp+arg_4]
.text:0000D27D                 push    ecx
.text:0000D27E                 call    _safefree
.text:0000D283                 add     esp, 4
.text:0000D286                 cmp     ebp, esp
.text:0000D288                 call    __RTC_CheckEsp
.text:0000D28D                 pop     ebp
.text:0000D28E                 retn
.text:0000D28E _bomb_out       endp
.text:0000D28E
.text:0000D28E ; ---------------------------------------------------------------------------
.text:0000D28F                 db 9 dup(0CCh)
.text:0000D298
.text:0000D298 ; =============== S U B R O U T I N E =======================================
.text:0000D298
.text:0000D298 ; Attributes: bp-based frame
.text:0000D298
.text:0000D298 _hash_string    proc near               ; CODE XREF: _do_ssh2_transport+14BBp
.text:0000D298                                         ; _do_ssh2_transport+14EEp ...
.text:0000D298
.text:0000D298 var_C           = dword ptr -0Ch
.text:0000D298 var_8           = dword ptr -8
.text:0000D298 var_4           = dword ptr -4
.text:0000D298 arg_0           = dword ptr  8
.text:0000D298 arg_4           = dword ptr  0Ch
.text:0000D298 arg_8           = dword ptr  10h
.text:0000D298 arg_C           = dword ptr  14h
.text:0000D298
.text:0000D298                 push    ebp
.text:0000D299                 mov     ebp, esp
.text:0000D29B                 sub     esp, 0Ch
.text:0000D29E                 push    esi
.text:0000D29F                 mov     [ebp+var_C], 0CCCCCCCCh
.text:0000D2A6                 mov     [ebp+var_8], 0CCCCCCCCh
.text:0000D2AD                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000D2B4                 mov     eax, [ebp+arg_C]
.text:0000D2B7                 sar     eax, 18h
.text:0000D2BA                 mov     byte ptr [ebp+var_8], al
.text:0000D2BD                 mov     ecx, [ebp+arg_C]
.text:0000D2C0                 sar     ecx, 10h
.text:0000D2C3                 mov     byte ptr [ebp+var_8+1], cl
.text:0000D2C6                 mov     edx, [ebp+arg_C]
.text:0000D2C9                 sar     edx, 8
.text:0000D2CC                 mov     byte ptr [ebp+var_8+2], dl
.text:0000D2CF                 mov     al, byte ptr [ebp+arg_C]
.text:0000D2D2                 mov     byte ptr [ebp+var_8+3], al
.text:0000D2D5                 mov     esi, esp
.text:0000D2D7                 push    4
.text:0000D2D9                 lea     ecx, [ebp+var_8]
.text:0000D2DC                 push    ecx
.text:0000D2DD                 mov     edx, [ebp+arg_4]
.text:0000D2E0                 push    edx
.text:0000D2E1                 mov     eax, [ebp+arg_0]
.text:0000D2E4                 mov     ecx, [eax+4]
.text:0000D2E7                 call    ecx
.text:0000D2E9                 add     esp, 0Ch
.text:0000D2EC                 cmp     esi, esp
.text:0000D2EE                 call    __RTC_CheckEsp
.text:0000D2F3                 mov     esi, esp
.text:0000D2F5                 mov     edx, [ebp+arg_C]
.text:0000D2F8                 push    edx
.text:0000D2F9                 mov     eax, [ebp+arg_8]
.text:0000D2FC                 push    eax
.text:0000D2FD                 mov     ecx, [ebp+arg_4]
.text:0000D300                 push    ecx
.text:0000D301                 mov     edx, [ebp+arg_0]
.text:0000D304                 mov     eax, [edx+4]
.text:0000D307                 call    eax
.text:0000D309                 add     esp, 0Ch
.text:0000D30C                 cmp     esi, esp
.text:0000D30E                 call    __RTC_CheckEsp
.text:0000D313                 push    edx
.text:0000D314                 mov     ecx, ebp
.text:0000D316                 push    eax
.text:0000D317                 lea     edx, $LN5_2
.text:0000D31D                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0000D322                 pop     eax
.text:0000D323                 pop     edx
.text:0000D324                 pop     esi
.text:0000D325                 add     esp, 0Ch
.text:0000D328                 cmp     ebp, esp
.text:0000D32A                 call    __RTC_CheckEsp
.text:0000D32F                 mov     esp, ebp
.text:0000D331                 pop     ebp
.text:0000D332                 retn
.text:0000D332 _hash_string    endp
.text:0000D332
.text:0000D332 ; ---------------------------------------------------------------------------
.text:0000D333                 align 4
.text:0000D334 $LN5_2          dd 1                    ; DATA XREF: _hash_string+7Fo
.text:0000D338                 dd offset $LN4_2
.text:0000D33C $LN4_2          dd 0FFFFFFF8h, 4        ; DATA XREF: .text:0000D338o
.text:0000D344                 dd offset $LN3_1        ; "lenblk"
.text:0000D348 $LN3_1          db 'lenblk',0           ; DATA XREF: .text:0000D344o
.text:0000D34F                 db 9 dup(0CCh)
.text:0000D358
.text:0000D358 ; =============== S U B R O U T I N E =======================================
.text:0000D358
.text:0000D358 ; Attributes: bp-based frame
.text:0000D358
.text:0000D358 _hash_uint32    proc near               ; CODE XREF: _do_ssh2_transport+1D76p
.text:0000D358
.text:0000D358 var_C           = dword ptr -0Ch
.text:0000D358 var_8           = dword ptr -8
.text:0000D358 var_4           = dword ptr -4
.text:0000D358 arg_0           = dword ptr  8
.text:0000D358 arg_4           = dword ptr  0Ch
.text:0000D358 arg_8           = dword ptr  10h
.text:0000D358
.text:0000D358                 push    ebp
.text:0000D359                 mov     ebp, esp
.text:0000D35B                 sub     esp, 0Ch
.text:0000D35E                 push    esi
.text:0000D35F                 mov     [ebp+var_C], 0CCCCCCCCh
.text:0000D366                 mov     [ebp+var_8], 0CCCCCCCCh
.text:0000D36D                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000D374                 mov     eax, [ebp+arg_8]
.text:0000D377                 shr     eax, 18h
.text:0000D37A                 mov     byte ptr [ebp+var_8], al
.text:0000D37D                 mov     ecx, [ebp+arg_8]
.text:0000D380                 shr     ecx, 10h
.text:0000D383                 mov     byte ptr [ebp+var_8+1], cl
.text:0000D386                 mov     edx, [ebp+arg_8]
.text:0000D389                 shr     edx, 8
.text:0000D38C                 mov     byte ptr [ebp+var_8+2], dl
.text:0000D38F                 mov     al, byte ptr [ebp+arg_8]
.text:0000D392                 mov     byte ptr [ebp+var_8+3], al
.text:0000D395                 mov     esi, esp
.text:0000D397                 push    4
.text:0000D399                 lea     ecx, [ebp+var_8]
.text:0000D39C                 push    ecx
.text:0000D39D                 mov     edx, [ebp+arg_4]
.text:0000D3A0                 push    edx
.text:0000D3A1                 mov     eax, [ebp+arg_0]
.text:0000D3A4                 mov     ecx, [eax+4]
.text:0000D3A7                 call    ecx
.text:0000D3A9                 add     esp, 0Ch
.text:0000D3AC                 cmp     esi, esp
.text:0000D3AE                 call    __RTC_CheckEsp
.text:0000D3B3                 push    edx
.text:0000D3B4                 mov     ecx, ebp
.text:0000D3B6                 push    eax
.text:0000D3B7                 lea     edx, $LN5_3
.text:0000D3BD                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0000D3C2                 pop     eax
.text:0000D3C3                 pop     edx
.text:0000D3C4                 pop     esi
.text:0000D3C5                 add     esp, 0Ch
.text:0000D3C8                 cmp     ebp, esp
.text:0000D3CA                 call    __RTC_CheckEsp
.text:0000D3CF                 mov     esp, ebp
.text:0000D3D1                 pop     ebp
.text:0000D3D2                 retn
.text:0000D3D2 _hash_uint32    endp
.text:0000D3D2
.text:0000D3D2 ; ---------------------------------------------------------------------------
.text:0000D3D3                 align 4
.text:0000D3D4 $LN5_3          dd 1                    ; DATA XREF: _hash_uint32+5Fo
.text:0000D3D8                 dd offset $LN4_3
.text:0000D3DC $LN4_3          dd 0FFFFFFF8h, 4        ; DATA XREF: .text:0000D3D8o
.text:0000D3E4                 dd offset $LN3_2        ; "intblk"
.text:0000D3E8 $LN3_2          db 'intblk',0           ; DATA XREF: .text:0000D3E4o
.text:0000D3EF                 db 9 dup(0CCh)
.text:0000D3F8
.text:0000D3F8 ; =============== S U B R O U T I N E =======================================
.text:0000D3F8
.text:0000D3F8 ; Attributes: bp-based frame
.text:0000D3F8
.text:0000D3F8 ; int __cdecl ssh2_pkt_addbool(int, char Src)
.text:0000D3F8 _ssh2_pkt_addbool proc near             ; CODE XREF: _do_ssh2_transport+A5Ep
.text:0000D3F8                                         ; _ssh2_chanreq_init+6Ep ...
.text:0000D3F8
.text:0000D3F8 arg_0           = dword ptr  8
.text:0000D3F8 Src             = byte ptr  0Ch
.text:0000D3F8
.text:0000D3F8                 push    ebp
.text:0000D3F9                 mov     ebp, esp
.text:0000D3FB                 push    1               ; Size
.text:0000D3FD                 lea     eax, [ebp+Src]
.text:0000D400                 push    eax             ; Src
.text:0000D401                 mov     ecx, [ebp+arg_0]
.text:0000D404                 push    ecx             ; int
.text:0000D405                 call    _ssh_pkt_adddata
.text:0000D40A                 add     esp, 0Ch
.text:0000D40D                 cmp     ebp, esp
.text:0000D40F                 call    __RTC_CheckEsp
.text:0000D414                 pop     ebp
.text:0000D415                 retn
.text:0000D415 _ssh2_pkt_addbool endp
.text:0000D415
.text:0000D415 ; ---------------------------------------------------------------------------
.text:0000D416                 align 4
.text:0000D418
.text:0000D418 ; =============== S U B R O U T I N E =======================================
.text:0000D418
.text:0000D418 ; Attributes: bp-based frame
.text:0000D418
.text:0000D418 ; int __cdecl ssh_pkt_addstring_data(int, void *Src, size_t Size)
.text:0000D418 _ssh_pkt_addstring_data proc near       ; CODE XREF: _do_ssh2_transport+2231p
.text:0000D418                                         ; _ssh2_pkt_addmp+42p ...
.text:0000D418
.text:0000D418 arg_0           = dword ptr  8
.text:0000D418 Src             = dword ptr  0Ch
.text:0000D418 Size            = dword ptr  10h
.text:0000D418
.text:0000D418                 push    ebp
.text:0000D419                 mov     ebp, esp
.text:0000D41B                 mov     eax, [ebp+Size]
.text:0000D41E                 push    eax             ; Size
.text:0000D41F                 mov     ecx, [ebp+Src]
.text:0000D422                 push    ecx             ; Src
.text:0000D423                 mov     edx, [ebp+arg_0]
.text:0000D426                 push    edx             ; int
.text:0000D427                 call    _ssh_pkt_adddata
.text:0000D42C                 add     esp, 0Ch
.text:0000D42F                 mov     eax, [ebp+arg_0]
.text:0000D432                 mov     ecx, [ebp+arg_0]
.text:0000D435                 mov     edx, [eax]
.text:0000D437                 sub     edx, [ecx+18h]
.text:0000D43A                 sar     edx, 18h
.text:0000D43D                 mov     eax, [ebp+arg_0]
.text:0000D440                 mov     ecx, [eax+10h]
.text:0000D443                 mov     eax, [ebp+arg_0]
.text:0000D446                 mov     eax, [eax+18h]
.text:0000D449                 mov     [ecx+eax-4], dl
.text:0000D44D                 mov     ecx, [ebp+arg_0]
.text:0000D450                 mov     edx, [ebp+arg_0]
.text:0000D453                 mov     eax, [ecx]
.text:0000D455                 sub     eax, [edx+18h]
.text:0000D458                 sar     eax, 10h
.text:0000D45B                 mov     ecx, [ebp+arg_0]
.text:0000D45E                 mov     edx, [ecx+10h]
.text:0000D461                 mov     ecx, [ebp+arg_0]
.text:0000D464                 mov     ecx, [ecx+18h]
.text:0000D467                 mov     [edx+ecx-3], al
.text:0000D46B                 mov     edx, [ebp+arg_0]
.text:0000D46E                 mov     eax, [ebp+arg_0]
.text:0000D471                 mov     ecx, [edx]
.text:0000D473                 sub     ecx, [eax+18h]
.text:0000D476                 sar     ecx, 8
.text:0000D479                 mov     edx, [ebp+arg_0]
.text:0000D47C                 mov     eax, [edx+10h]
.text:0000D47F                 mov     edx, [ebp+arg_0]
.text:0000D482                 mov     edx, [edx+18h]
.text:0000D485                 mov     [eax+edx-2], cl
.text:0000D489                 mov     eax, [ebp+arg_0]
.text:0000D48C                 mov     ecx, [ebp+arg_0]
.text:0000D48F                 mov     edx, [eax]
.text:0000D491                 sub     edx, [ecx+18h]
.text:0000D494                 mov     eax, [ebp+arg_0]
.text:0000D497                 mov     ecx, [eax+10h]
.text:0000D49A                 mov     eax, [ebp+arg_0]
.text:0000D49D                 mov     eax, [eax+18h]
.text:0000D4A0                 mov     [ecx+eax-1], dl
.text:0000D4A4                 cmp     ebp, esp
.text:0000D4A6                 call    __RTC_CheckEsp
.text:0000D4AB                 pop     ebp
.text:0000D4AC                 retn
.text:0000D4AC _ssh_pkt_addstring_data endp
.text:0000D4AC
.text:0000D4AC ; ---------------------------------------------------------------------------
.text:0000D4AD                 db 0Bh dup(0CCh)
.text:0000D4B8
.text:0000D4B8 ; =============== S U B R O U T I N E =======================================
.text:0000D4B8
.text:0000D4B8 ; Attributes: bp-based frame
.text:0000D4B8
.text:0000D4B8 _ssh2_mpint_fmt proc near               ; CODE XREF: _do_ssh2_transport+20F5p
.text:0000D4B8                                         ; _ssh2_pkt_addmp+1Fp ...
.text:0000D4B8
.text:0000D4B8 var_C           = dword ptr -0Ch
.text:0000D4B8 var_8           = dword ptr -8
.text:0000D4B8 Dst             = dword ptr -4
.text:0000D4B8 arg_0           = dword ptr  8
.text:0000D4B8 arg_4           = dword ptr  0Ch
.text:0000D4B8
.text:0000D4B8                 push    ebp
.text:0000D4B9                 mov     ebp, esp
.text:0000D4BB                 sub     esp, 0Ch
.text:0000D4BE                 mov     [ebp+var_C], 0CCCCCCCCh
.text:0000D4C5                 mov     [ebp+var_8], 0CCCCCCCCh
.text:0000D4CC                 mov     [ebp+Dst], 0CCCCCCCCh
.text:0000D4D3                 mov     eax, [ebp+arg_0]
.text:0000D4D6                 push    eax
.text:0000D4D7                 call    _bignum_bitcount
.text:0000D4DC                 add     esp, 4
.text:0000D4DF                 add     eax, 7
.text:0000D4E2                 cdq
.text:0000D4E3                 and     edx, 7
.text:0000D4E6                 add     eax, edx
.text:0000D4E8                 sar     eax, 3
.text:0000D4EB                 mov     [ebp+var_C], eax
.text:0000D4EE                 push    1
.text:0000D4F0                 mov     ecx, [ebp+var_C]
.text:0000D4F3                 add     ecx, 1
.text:0000D4F6                 push    ecx
.text:0000D4F7                 call    _safemalloc
.text:0000D4FC                 add     esp, 8
.text:0000D4FF                 mov     [ebp+Dst], eax
.text:0000D502                 mov     edx, [ebp+Dst]
.text:0000D505                 mov     byte ptr [edx], 0
.text:0000D508                 mov     [ebp+var_8], 1
.text:0000D50F                 jmp     short loc_D51A
.text:0000D511 ; ---------------------------------------------------------------------------
.text:0000D511
.text:0000D511 loc_D511:                               ; CODE XREF: _ssh2_mpint_fmt+85j
.text:0000D511                 mov     eax, [ebp+var_8]
.text:0000D514                 add     eax, 1
.text:0000D517                 mov     [ebp+var_8], eax
.text:0000D51A
.text:0000D51A loc_D51A:                               ; CODE XREF: _ssh2_mpint_fmt+57j
.text:0000D51A                 mov     ecx, [ebp+var_8]
.text:0000D51D                 cmp     ecx, [ebp+var_C]
.text:0000D520                 jg      short loc_D53F
.text:0000D522                 mov     edx, [ebp+var_C]
.text:0000D525                 sub     edx, [ebp+var_8]
.text:0000D528                 push    edx
.text:0000D529                 mov     eax, [ebp+arg_0]
.text:0000D52C                 push    eax
.text:0000D52D                 call    _bignum_byte
.text:0000D532                 add     esp, 8
.text:0000D535                 mov     ecx, [ebp+Dst]
.text:0000D538                 add     ecx, [ebp+var_8]
.text:0000D53B                 mov     [ecx], al
.text:0000D53D                 jmp     short loc_D511
.text:0000D53F ; ---------------------------------------------------------------------------
.text:0000D53F
.text:0000D53F loc_D53F:                               ; CODE XREF: _ssh2_mpint_fmt+68j
.text:0000D53F                 mov     [ebp+var_8], 0
.text:0000D546
.text:0000D546 loc_D546:                               ; CODE XREF: _ssh2_mpint_fmt+BDj
.text:0000D546                 mov     edx, [ebp+var_8]
.text:0000D549                 cmp     edx, [ebp+var_C]
.text:0000D54C                 jg      short loc_D577
.text:0000D54E                 mov     eax, [ebp+Dst]
.text:0000D551                 add     eax, [ebp+var_8]
.text:0000D554                 movzx   ecx, byte ptr [eax]
.text:0000D557                 test    ecx, ecx
.text:0000D559                 jnz     short loc_D577
.text:0000D55B                 mov     edx, [ebp+Dst]
.text:0000D55E                 add     edx, [ebp+var_8]
.text:0000D561                 movzx   eax, byte ptr [edx+1]
.text:0000D565                 and     eax, 80h
.text:0000D56A                 jnz     short loc_D577
.text:0000D56C                 mov     ecx, [ebp+var_8]
.text:0000D56F                 add     ecx, 1
.text:0000D572                 mov     [ebp+var_8], ecx
.text:0000D575                 jmp     short loc_D546
.text:0000D577 ; ---------------------------------------------------------------------------
.text:0000D577
.text:0000D577 loc_D577:                               ; CODE XREF: _ssh2_mpint_fmt+94j
.text:0000D577                                         ; _ssh2_mpint_fmt+A1j ...
.text:0000D577                 mov     edx, [ebp+var_C]
.text:0000D57A                 add     edx, 1
.text:0000D57D                 sub     edx, [ebp+var_8]
.text:0000D580                 push    edx             ; Size
.text:0000D581                 mov     eax, [ebp+Dst]
.text:0000D584                 add     eax, [ebp+var_8]
.text:0000D587                 push    eax             ; Src
.text:0000D588                 mov     ecx, [ebp+Dst]
.text:0000D58B                 push    ecx             ; Dst
.text:0000D58C                 call    _memmove
.text:0000D591                 add     esp, 0Ch
.text:0000D594                 mov     edx, [ebp+var_C]
.text:0000D597                 add     edx, 1
.text:0000D59A                 sub     edx, [ebp+var_8]
.text:0000D59D                 mov     eax, [ebp+arg_4]
.text:0000D5A0                 mov     [eax], edx
.text:0000D5A2                 mov     eax, [ebp+Dst]
.text:0000D5A5                 add     esp, 0Ch
.text:0000D5A8                 cmp     ebp, esp
.text:0000D5AA                 call    __RTC_CheckEsp
.text:0000D5AF                 mov     esp, ebp
.text:0000D5B1                 pop     ebp
.text:0000D5B2                 retn
.text:0000D5B2 _ssh2_mpint_fmt endp
.text:0000D5B2
.text:0000D5B2 ; ---------------------------------------------------------------------------
.text:0000D5B3                 align 8
.text:0000D5B8
.text:0000D5B8 ; =============== S U B R O U T I N E =======================================
.text:0000D5B8
.text:0000D5B8 ; Attributes: bp-based frame
.text:0000D5B8
.text:0000D5B8 _ssh2_pkt_addmp proc near               ; CODE XREF: _do_ssh2_transport+1B5Dp
.text:0000D5B8
.text:0000D5B8 var_10          = dword ptr -10h
.text:0000D5B8 Size            = dword ptr -0Ch
.text:0000D5B8 var_8           = dword ptr -8
.text:0000D5B8 Src             = dword ptr -4
.text:0000D5B8 arg_0           = dword ptr  8
.text:0000D5B8 arg_4           = dword ptr  0Ch
.text:0000D5B8
.text:0000D5B8                 push    ebp
.text:0000D5B9                 mov     ebp, esp
.text:0000D5BB                 sub     esp, 10h
.text:0000D5BE                 mov     eax, 0CCCCCCCCh
.text:0000D5C3                 mov     [ebp+var_10], eax
.text:0000D5C6                 mov     [ebp+Size], eax
.text:0000D5C9                 mov     [ebp+var_8], eax
.text:0000D5CC                 mov     [ebp+Src], eax
.text:0000D5CF                 lea     eax, [ebp+Size]
.text:0000D5D2                 push    eax
.text:0000D5D3                 mov     ecx, [ebp+arg_4]
.text:0000D5D6                 push    ecx
.text:0000D5D7                 call    _ssh2_mpint_fmt
.text:0000D5DC                 add     esp, 8
.text:0000D5DF                 mov     [ebp+Src], eax
.text:0000D5E2                 mov     edx, [ebp+arg_0]
.text:0000D5E5                 push    edx
.text:0000D5E6                 call    _ssh_pkt_addstring_start
.text:0000D5EB                 add     esp, 4
.text:0000D5EE                 mov     eax, [ebp+Size]
.text:0000D5F1                 push    eax             ; Size
.text:0000D5F2                 mov     ecx, [ebp+Src]
.text:0000D5F5                 push    ecx             ; Src
.text:0000D5F6                 mov     edx, [ebp+arg_0]
.text:0000D5F9                 push    edx             ; int
.text:0000D5FA                 call    _ssh_pkt_addstring_data
.text:0000D5FF                 add     esp, 0Ch
.text:0000D602                 mov     eax, [ebp+Src]
.text:0000D605                 push    eax
.text:0000D606                 call    _safefree
.text:0000D60B                 add     esp, 4
.text:0000D60E                 push    edx
.text:0000D60F                 mov     ecx, ebp
.text:0000D611                 push    eax
.text:0000D612                 lea     edx, $LN5_4
.text:0000D618                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0000D61D                 pop     eax
.text:0000D61E                 pop     edx
.text:0000D61F                 add     esp, 10h
.text:0000D622                 cmp     ebp, esp
.text:0000D624                 call    __RTC_CheckEsp
.text:0000D629                 mov     esp, ebp
.text:0000D62B                 pop     ebp
.text:0000D62C                 retn
.text:0000D62C _ssh2_pkt_addmp endp
.text:0000D62C
.text:0000D62C ; ---------------------------------------------------------------------------
.text:0000D62D                 align 10h
.text:0000D630 $LN5_4          dd 1                    ; DATA XREF: _ssh2_pkt_addmp+5Ao
.text:0000D634                 dd offset $LN4_4
.text:0000D638 $LN4_4          dd 0FFFFFFF4h, 4        ; DATA XREF: .text:0000D634o
.text:0000D640                 dd offset $LN3_3
.text:0000D644 $LN3_3          dd 6E656Ch              ; DATA XREF: .text:0000D640o
.text:0000D648
.text:0000D648 ; =============== S U B R O U T I N E =======================================
.text:0000D648
.text:0000D648 ; Attributes: bp-based frame
.text:0000D648
.text:0000D648 _ssh2_pkt_queuesend proc near           ; CODE XREF: _do_ssh2_transport+2AD0p
.text:0000D648
.text:0000D648 var_4           = dword ptr -4
.text:0000D648 arg_0           = dword ptr  8
.text:0000D648
.text:0000D648                 push    ebp
.text:0000D649                 mov     ebp, esp
.text:0000D64B                 push    ecx
.text:0000D64C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000D653                 mov     eax, [ebp+arg_0]
.text:0000D656                 cmp     dword ptr [eax+138h], 0
.text:0000D65D                 jz      short loc_D676
.text:0000D65F                 push    996h            ; Line
.text:0000D664                 push    offset $SG89125 ; "..\\..\\..\\ssh.c"
.text:0000D669                 push    offset $SG89126 ; "!ssh->queueing"
.text:0000D66E                 call    __wassert
.text:0000D673 ; ---------------------------------------------------------------------------
.text:0000D673                 add     esp, 0Ch
.text:0000D676
.text:0000D676 loc_D676:                               ; CODE XREF: _ssh2_pkt_queuesend+15j
.text:0000D676                 mov     [ebp+var_4], 0
.text:0000D67D                 jmp     short loc_D688
.text:0000D67F ; ---------------------------------------------------------------------------
.text:0000D67F
.text:0000D67F loc_D67F:                               ; CODE XREF: _ssh2_pkt_queuesend+6Cj
.text:0000D67F                 mov     edx, [ebp+var_4]
.text:0000D682                 add     edx, 1
.text:0000D685                 mov     [ebp+var_4], edx
.text:0000D688
.text:0000D688 loc_D688:                               ; CODE XREF: _ssh2_pkt_queuesend+35j
.text:0000D688                 mov     eax, [ebp+arg_0]
.text:0000D68B                 mov     ecx, [ebp+var_4]
.text:0000D68E                 cmp     ecx, [eax+130h]
.text:0000D694                 jge     short loc_D6B6
.text:0000D696                 push    0
.text:0000D698                 mov     edx, [ebp+arg_0]
.text:0000D69B                 mov     eax, [edx+12Ch]
.text:0000D6A1                 mov     ecx, [ebp+var_4]
.text:0000D6A4                 mov     edx, [eax+ecx*4]
.text:0000D6A7                 push    edx
.text:0000D6A8                 mov     eax, [ebp+arg_0]
.text:0000D6AB                 push    eax
.text:0000D6AC                 call    _ssh2_pkt_defer_noqueue
.text:0000D6B1                 add     esp, 0Ch
.text:0000D6B4                 jmp     short loc_D67F
.text:0000D6B6 ; ---------------------------------------------------------------------------
.text:0000D6B6
.text:0000D6B6 loc_D6B6:                               ; CODE XREF: _ssh2_pkt_queuesend+4Cj
.text:0000D6B6                 mov     ecx, [ebp+arg_0]
.text:0000D6B9                 mov     dword ptr [ecx+130h], 0
.text:0000D6C3                 mov     edx, [ebp+arg_0]
.text:0000D6C6                 push    edx
.text:0000D6C7                 call    _ssh_pkt_defersend
.text:0000D6CC                 add     esp, 4
.text:0000D6CF                 add     esp, 4
.text:0000D6D2                 cmp     ebp, esp
.text:0000D6D4                 call    __RTC_CheckEsp
.text:0000D6D9                 mov     esp, ebp
.text:0000D6DB                 pop     ebp
.text:0000D6DC                 retn
.text:0000D6DC _ssh2_pkt_queuesend endp
.text:0000D6DC
.text:0000D6DC ; ---------------------------------------------------------------------------
.text:0000D6DD                 db 0Bh dup(0CCh)
.text:0000D6E8
.text:0000D6E8 ; =============== S U B R O U T I N E =======================================
.text:0000D6E8
.text:0000D6E8 ; Attributes: bp-based frame
.text:0000D6E8
.text:0000D6E8 _hash_mpint     proc near               ; CODE XREF: _do_ssh2_transport+1D99p
.text:0000D6E8                                         ; _do_ssh2_transport+1DBCp ...
.text:0000D6E8
.text:0000D6E8 var_10          = dword ptr -10h
.text:0000D6E8 var_C           = dword ptr -0Ch
.text:0000D6E8 var_8           = dword ptr -8
.text:0000D6E8 var_4           = dword ptr -4
.text:0000D6E8 arg_0           = dword ptr  8
.text:0000D6E8 arg_4           = dword ptr  0Ch
.text:0000D6E8 arg_8           = dword ptr  10h
.text:0000D6E8
.text:0000D6E8                 push    ebp
.text:0000D6E9                 mov     ebp, esp
.text:0000D6EB                 sub     esp, 10h
.text:0000D6EE                 mov     eax, 0CCCCCCCCh
.text:0000D6F3                 mov     [ebp+var_10], eax
.text:0000D6F6                 mov     [ebp+var_C], eax
.text:0000D6F9                 mov     [ebp+var_8], eax
.text:0000D6FC                 mov     [ebp+var_4], eax
.text:0000D6FF                 lea     eax, [ebp+var_C]
.text:0000D702                 push    eax
.text:0000D703                 mov     ecx, [ebp+arg_8]
.text:0000D706                 push    ecx
.text:0000D707                 call    _ssh2_mpint_fmt
.text:0000D70C                 add     esp, 8
.text:0000D70F                 mov     [ebp+var_4], eax
.text:0000D712                 mov     edx, [ebp+var_C]
.text:0000D715                 push    edx
.text:0000D716                 mov     eax, [ebp+var_4]
.text:0000D719                 push    eax
.text:0000D71A                 mov     ecx, [ebp+arg_4]
.text:0000D71D                 push    ecx
.text:0000D71E                 mov     edx, [ebp+arg_0]
.text:0000D721                 push    edx
.text:0000D722                 call    _hash_string
.text:0000D727                 add     esp, 10h
.text:0000D72A                 mov     eax, [ebp+var_4]
.text:0000D72D                 push    eax
.text:0000D72E                 call    _safefree
.text:0000D733                 add     esp, 4
.text:0000D736                 push    edx
.text:0000D737                 mov     ecx, ebp
.text:0000D739                 push    eax
.text:0000D73A                 lea     edx, $LN5_5
.text:0000D740                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0000D745                 pop     eax
.text:0000D746                 pop     edx
.text:0000D747                 add     esp, 10h
.text:0000D74A                 cmp     ebp, esp
.text:0000D74C                 call    __RTC_CheckEsp
.text:0000D751                 mov     esp, ebp
.text:0000D753                 pop     ebp
.text:0000D754                 retn
.text:0000D754 _hash_mpint     endp
.text:0000D754
.text:0000D754 ; ---------------------------------------------------------------------------
.text:0000D755                 align 4
.text:0000D758 $LN5_5          dd 1                    ; DATA XREF: _hash_mpint+52o
.text:0000D75C                 dd offset $LN4_5
.text:0000D760 $LN4_5          dd 0FFFFFFF4h, 4        ; DATA XREF: .text:0000D75Co
.text:0000D768                 dd offset $LN3_4
.text:0000D76C $LN3_4          dd 6E656Ch, 2 dup(0CCCCCCCCh) ; DATA XREF: .text:0000D768o
.text:0000D778
.text:0000D778 ; =============== S U B R O U T I N E =======================================
.text:0000D778
.text:0000D778 ; Attributes: bp-based frame
.text:0000D778
.text:0000D778 _ssh2_pkt_getmp proc near               ; CODE XREF: _do_ssh2_transport+19F1p
.text:0000D778                                         ; _do_ssh2_transport+1A03p ...
.text:0000D778
.text:0000D778 var_1C          = dword ptr -1Ch
.text:0000D778 var_18          = dword ptr -18h
.text:0000D778 var_14          = dword ptr -14h
.text:0000D778 var_10          = dword ptr -10h
.text:0000D778 var_C           = dword ptr -0Ch
.text:0000D778 var_8           = dword ptr -8
.text:0000D778 var_4           = dword ptr -4
.text:0000D778 arg_0           = dword ptr  8
.text:0000D778
.text:0000D778                 push    ebp
.text:0000D779                 mov     ebp, esp
.text:0000D77B                 sub     esp, 1Ch
.text:0000D77E                 mov     eax, 0CCCCCCCCh
.text:0000D783                 mov     [ebp+var_1C], eax
.text:0000D786                 mov     [ebp+var_18], eax
.text:0000D789                 mov     [ebp+var_14], eax
.text:0000D78C                 mov     [ebp+var_10], eax
.text:0000D78F                 mov     [ebp+var_C], eax
.text:0000D792                 mov     [ebp+var_8], eax
.text:0000D795                 mov     [ebp+var_4], eax
.text:0000D798                 lea     eax, [ebp+var_14]
.text:0000D79B                 push    eax
.text:0000D79C                 lea     ecx, [ebp+var_8]
.text:0000D79F                 push    ecx
.text:0000D7A0                 mov     edx, [ebp+arg_0]
.text:0000D7A3                 push    edx
.text:0000D7A4                 call    _ssh_pkt_getstring
.text:0000D7A9                 add     esp, 0Ch
.text:0000D7AC                 cmp     [ebp+var_8], 0
.text:0000D7B0                 jnz     short loc_D7B6
.text:0000D7B2                 xor     eax, eax
.text:0000D7B4                 jmp     short loc_D7DE
.text:0000D7B6 ; ---------------------------------------------------------------------------
.text:0000D7B6
.text:0000D7B6 loc_D7B6:                               ; CODE XREF: _ssh2_pkt_getmp+38j
.text:0000D7B6                 mov     eax, [ebp+var_8]
.text:0000D7B9                 movsx   ecx, byte ptr [eax]
.text:0000D7BC                 and     ecx, 80h
.text:0000D7C2                 jz      short loc_D7C8
.text:0000D7C4                 xor     eax, eax
.text:0000D7C6                 jmp     short loc_D7DE
.text:0000D7C8 ; ---------------------------------------------------------------------------
.text:0000D7C8
.text:0000D7C8 loc_D7C8:                               ; CODE XREF: _ssh2_pkt_getmp+4Aj
.text:0000D7C8                 mov     edx, [ebp+var_14]
.text:0000D7CB                 push    edx
.text:0000D7CC                 mov     eax, [ebp+var_8]
.text:0000D7CF                 push    eax
.text:0000D7D0                 call    _bignum_from_bytes
.text:0000D7D5                 add     esp, 8
.text:0000D7D8                 mov     [ebp+var_1C], eax
.text:0000D7DB                 mov     eax, [ebp+var_1C]
.text:0000D7DE
.text:0000D7DE loc_D7DE:                               ; CODE XREF: _ssh2_pkt_getmp+3Cj
.text:0000D7DE                                         ; _ssh2_pkt_getmp+4Ej
.text:0000D7DE                 push    edx
.text:0000D7DF                 mov     ecx, ebp
.text:0000D7E1                 push    eax
.text:0000D7E2                 lea     edx, $LN8_0
.text:0000D7E8                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0000D7ED                 pop     eax
.text:0000D7EE                 pop     edx
.text:0000D7EF                 add     esp, 1Ch
.text:0000D7F2                 cmp     ebp, esp
.text:0000D7F4                 call    __RTC_CheckEsp
.text:0000D7F9                 mov     esp, ebp
.text:0000D7FB                 pop     ebp
.text:0000D7FC                 retn
.text:0000D7FC _ssh2_pkt_getmp endp
.text:0000D7FC
.text:0000D7FC ; ---------------------------------------------------------------------------
.text:0000D7FD                 align 10h
.text:0000D800 $LN8_0          dd 2                    ; DATA XREF: _ssh2_pkt_getmp+6Ao
.text:0000D804                 dd offset $LN7
.text:0000D808 $LN7            dd 0FFFFFFF8h, 4        ; DATA XREF: .text:0000D804o
.text:0000D810                 dd offset $LN5_6        ; "p"
.text:0000D814                 dd 0FFFFFFECh, 4
.text:0000D81C                 dd offset $LN6_0        ; "length"
.text:0000D820 $LN6_0          db 'length',0           ; DATA XREF: .text:0000D81Co
.text:0000D827 $LN5_6          db 'p',0                ; DATA XREF: .text:0000D810o
.text:0000D829                 db 0Fh dup(0CCh)
.text:0000D838
.text:0000D838 ; =============== S U B R O U T I N E =======================================
.text:0000D838
.text:0000D838 ; Attributes: bp-based frame
.text:0000D838
.text:0000D838 _ssh_dialog_callback proc near          ; DATA XREF: _do_ssh2_transport+157Do
.text:0000D838                                         ; _do_ssh2_transport+167Eo ...
.text:0000D838
.text:0000D838 var_4           = dword ptr -4
.text:0000D838 arg_0           = dword ptr  8
.text:0000D838 arg_4           = dword ptr  0Ch
.text:0000D838
.text:0000D838                 push    ebp
.text:0000D839                 mov     ebp, esp
.text:0000D83B                 push    ecx
.text:0000D83C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000D843                 mov     eax, [ebp+arg_0]
.text:0000D846                 mov     [ebp+var_4], eax
.text:0000D849                 mov     ecx, [ebp+var_4]
.text:0000D84C                 mov     edx, [ebp+arg_4]
.text:0000D84F                 mov     [ecx+230h], edx
.text:0000D855                 mov     eax, [ebp+var_4]
.text:0000D858                 cmp     dword ptr [eax+16Ch], 1
.text:0000D85F                 jnz     short loc_D875
.text:0000D861                 push    0
.text:0000D863                 push    0FFFFFFFFh
.text:0000D865                 push    0
.text:0000D867                 mov     ecx, [ebp+var_4]
.text:0000D86A                 push    ecx
.text:0000D86B                 call    _do_ssh1_login
.text:0000D870                 add     esp, 10h
.text:0000D873                 jmp     short loc_D887
.text:0000D875 ; ---------------------------------------------------------------------------
.text:0000D875
.text:0000D875 loc_D875:                               ; CODE XREF: _ssh_dialog_callback+27j
.text:0000D875                 push    0
.text:0000D877                 push    0FFFFFFFFh
.text:0000D879                 push    0
.text:0000D87B                 mov     edx, [ebp+var_4]
.text:0000D87E                 push    edx
.text:0000D87F                 call    _do_ssh2_transport
.text:0000D884                 add     esp, 10h
.text:0000D887
.text:0000D887 loc_D887:                               ; CODE XREF: _ssh_dialog_callback+3Bj
.text:0000D887                 mov     eax, [ebp+var_4]
.text:0000D88A                 push    eax
.text:0000D88B                 call    _ssh_process_queued_incoming_data
.text:0000D890                 add     esp, 4
.text:0000D893                 add     esp, 4
.text:0000D896                 cmp     ebp, esp
.text:0000D898                 call    __RTC_CheckEsp
.text:0000D89D                 mov     esp, ebp
.text:0000D89F                 pop     ebp
.text:0000D8A0                 retn
.text:0000D8A0 _ssh_dialog_callback endp
.text:0000D8A0
.text:0000D8A0 ; ---------------------------------------------------------------------------
.text:0000D8A1                 align 8
.text:0000D8A8
.text:0000D8A8 ; =============== S U B R O U T I N E =======================================
.text:0000D8A8
.text:0000D8A8 ; Attributes: bp-based frame
.text:0000D8A8
.text:0000D8A8 ; int __cdecl ssh_disconnect(int, int, char *Str, int, int)
.text:0000D8A8 _ssh_disconnect proc near               ; CODE XREF: _do_ssh2_transport+1645p
.text:0000D8A8                                         ; _do_ssh2_transport+1744p ...
.text:0000D8A8
.text:0000D8A8 var_8           = dword ptr -8
.text:0000D8A8 var_4           = dword ptr -4
.text:0000D8A8 arg_0           = dword ptr  8
.text:0000D8A8 arg_4           = dword ptr  0Ch
.text:0000D8A8 Str             = dword ptr  10h
.text:0000D8A8 arg_C           = dword ptr  14h
.text:0000D8A8 arg_10          = dword ptr  18h
.text:0000D8A8
.text:0000D8A8                 push    ebp
.text:0000D8A9                 mov     ebp, esp
.text:0000D8AB                 sub     esp, 8
.text:0000D8AE                 mov     [ebp+var_8], 0CCCCCCCCh
.text:0000D8B5                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0000D8BC                 cmp     [ebp+arg_4], 0
.text:0000D8C0                 jnz     short loc_D8C8
.text:0000D8C2                 mov     eax, [ebp+Str]
.text:0000D8C5                 mov     [ebp+arg_4], eax
.text:0000D8C8
.text:0000D8C8 loc_D8C8:                               ; CODE XREF: _ssh_disconnect+18j
.text:0000D8C8                 cmp     [ebp+arg_4], 0
.text:0000D8CC                 jz      short loc_D8E4
.text:0000D8CE                 mov     ecx, [ebp+arg_4]
.text:0000D8D1                 push    ecx
.text:0000D8D2                 push    offset $SG89982 ; "Disconnected: %s"
.text:0000D8D7                 call    _dupprintf
.text:0000D8DC                 add     esp, 8
.text:0000D8DF                 mov     [ebp+var_4], eax
.text:0000D8E2                 jmp     short loc_D8F4
.text:0000D8E4 ; ---------------------------------------------------------------------------
.text:0000D8E4
.text:0000D8E4 loc_D8E4:                               ; CODE XREF: _ssh_disconnect+24j
.text:0000D8E4                 push    offset $SG89984 ; "Disconnected"
.text:0000D8E9                 call    _dupstr
.text:0000D8EE                 add     esp, 4
.text:0000D8F1                 mov     [ebp+var_4], eax
.text:0000D8F4
.text:0000D8F4 loc_D8F4:                               ; CODE XREF: _ssh_disconnect+3Aj
.text:0000D8F4                 cmp     [ebp+Str], 0
.text:0000D8F8                 jz      short loc_D978
.text:0000D8FA                 mov     edx, [ebp+arg_0]
.text:0000D8FD                 cmp     dword ptr [edx+16Ch], 1
.text:0000D904                 jnz     short loc_D91E
.text:0000D906                 push    0
.text:0000D908                 mov     eax, [ebp+Str]
.text:0000D90B                 push    eax
.text:0000D90C                 push    4
.text:0000D90E                 push    1
.text:0000D910                 mov     ecx, [ebp+arg_0]
.text:0000D913                 push    ecx
.text:0000D914                 call    _send_packet
.text:0000D919                 add     esp, 14h
.text:0000D91C                 jmp     short loc_D978
.text:0000D91E ; ---------------------------------------------------------------------------
.text:0000D91E
.text:0000D91E loc_D91E:                               ; CODE XREF: _ssh_disconnect+5Cj
.text:0000D91E                 mov     edx, [ebp+arg_0]
.text:0000D921                 cmp     dword ptr [edx+16Ch], 2
.text:0000D928                 jnz     short loc_D978
.text:0000D92A                 push    1
.text:0000D92C                 call    _ssh2_pkt_init
.text:0000D931                 add     esp, 4
.text:0000D934                 mov     [ebp+var_8], eax
.text:0000D937                 mov     eax, [ebp+arg_C]
.text:0000D93A                 push    eax
.text:0000D93B                 mov     ecx, [ebp+var_8]
.text:0000D93E                 push    ecx
.text:0000D93F                 call    _ssh_pkt_adduint32
.text:0000D944                 add     esp, 8
.text:0000D947                 mov     edx, [ebp+Str]
.text:0000D94A                 push    edx             ; Str
.text:0000D94B                 mov     eax, [ebp+var_8]
.text:0000D94E                 push    eax             ; int
.text:0000D94F                 call    _ssh_pkt_addstring
.text:0000D954                 add     esp, 8
.text:0000D957                 push    offset $SG89990 ; Str
.text:0000D95C                 mov     ecx, [ebp+var_8]
.text:0000D95F                 push    ecx             ; int
.text:0000D960                 call    _ssh_pkt_addstring
.text:0000D965                 add     esp, 8
.text:0000D968                 mov     edx, [ebp+var_8]
.text:0000D96B                 push    edx
.text:0000D96C                 mov     eax, [ebp+arg_0]
.text:0000D96F                 push    eax
.text:0000D970                 call    _ssh2_pkt_send_noqueue
.text:0000D975                 add     esp, 8
.text:0000D978
.text:0000D978 loc_D978:                               ; CODE XREF: _ssh_disconnect+50j
.text:0000D978                                         ; _ssh_disconnect+74j ...
.text:0000D978                 mov     ecx, [ebp+arg_0]
.text:0000D97B                 mov     dword ptr [ecx+108h], 1
.text:0000D985                 mov     edx, [ebp+arg_0]
.text:0000D988                 mov     eax, [ebp+arg_10]
.text:0000D98B                 mov     [edx+10Ch], eax
.text:0000D991                 push    0
.text:0000D993                 push    0
.text:0000D995                 mov     ecx, [ebp+var_4]
.text:0000D998                 push    ecx
.text:0000D999                 mov     edx, [ebp+arg_0]
.text:0000D99C                 push    edx
.text:0000D99D                 call    _ssh_closing
.text:0000D9A2                 add     esp, 10h
.text:0000D9A5                 mov     eax, [ebp+var_4]
.text:0000D9A8                 push    eax
.text:0000D9A9                 call    _safefree
.text:0000D9AE                 add     esp, 4
.text:0000D9B1                 add     esp, 8
.text:0000D9B4                 cmp     ebp, esp
.text:0000D9B6                 call    __RTC_CheckEsp
.text:0000D9BB                 mov     esp, ebp
.text:0000D9BD                 pop     ebp
.text:0000D9BE                 retn
.text:0000D9BE _ssh_disconnect endp
.text:0000D9BE
.text:0000D9BE ; ---------------------------------------------------------------------------
.text:0000D9BF                 db 9 dup(0CCh)
.text:0000D9C8
.text:0000D9C8 ; =============== S U B R O U T I N E =======================================
.text:0000D9C8
.text:0000D9C8 ; Attributes: bp-based frame
.text:0000D9C8
.text:0000D9C8 _do_ssh1_login  proc near               ; CODE XREF: _ssh_dialog_callback+33p
.text:0000D9C8                                         ; _ssh_agent_callback+3Fp ...
.text:0000D9C8
.text:0000D9C8 var_2F4         = dword ptr -2F4h
.text:0000D9C8 var_2F0         = dword ptr -2F0h
.text:0000D9C8 var_2EC         = dword ptr -2ECh
.text:0000D9C8 var_2E8         = dword ptr -2E8h
.text:0000D9C8 var_2E4         = dword ptr -2E4h
.text:0000D9C8 var_2E0         = dword ptr -2E0h
.text:0000D9C8 var_2DC         = dword ptr -2DCh
.text:0000D9C8 var_2D8         = dword ptr -2D8h
.text:0000D9C8 var_2D4         = dword ptr -2D4h
.text:0000D9C8 var_2D0         = dword ptr -2D0h
.text:0000D9C8 var_2CC         = dword ptr -2CCh
.text:0000D9C8 var_2C8         = dword ptr -2C8h
.text:0000D9C8 var_2C4         = dword ptr -2C4h
.text:0000D9C8 var_2C0         = dword ptr -2C0h
.text:0000D9C8 var_2B8         = byte ptr -2B8h
.text:0000D9C8 var_274         = dword ptr -274h
.text:0000D9C8 var_270         = dword ptr -270h
.text:0000D9C8 var_26C         = dword ptr -26Ch
.text:0000D9C8 var_268         = dword ptr -268h
.text:0000D9C8 var_264         = dword ptr -264h
.text:0000D9C8 var_260         = dword ptr -260h
.text:0000D9C8 var_25C         = dword ptr -25Ch
.text:0000D9C8 var_258         = dword ptr -258h
.text:0000D9C8 var_250         = dword ptr -250h
.text:0000D9C8 var_244         = dword ptr -244h
.text:0000D9C8 var_23C         = dword ptr -23Ch
.text:0000D9C8 var_238         = dword ptr -238h
.text:0000D9C8 MaxCount        = dword ptr -230h
.text:0000D9C8 Buf             = dword ptr -224h
.text:0000D9C8 var_21C         = dword ptr -21Ch
.text:0000D9C8 var_218         = dword ptr -218h
.text:0000D9C8 var_210         = byte ptr -210h
.text:0000D9C8 var_1EC         = dword ptr -1ECh
.text:0000D9C8 var_1E8         = dword ptr -1E8h
.text:0000D9C8 var_1E0         = dword ptr -1E0h
.text:0000D9C8 Str             = dword ptr -1D8h
.text:0000D9C8 var_1D4         = dword ptr -1D4h
.text:0000D9C8 var_1CC         = dword ptr -1CCh
.text:0000D9C8 var_1C4         = dword ptr -1C4h
.text:0000D9C8 var_1BC         = dword ptr -1BCh
.text:0000D9C8 var_1B4         = dword ptr -1B4h
.text:0000D9C8 var_1B0         = dword ptr -1B0h
.text:0000D9C8 var_1AC         = dword ptr -1ACh
.text:0000D9C8 var_1A8         = dword ptr -1A8h
.text:0000D9C8 var_1A4         = dword ptr -1A4h
.text:0000D9C8 Buf1            = dword ptr -1A0h
.text:0000D9C8 var_198         = dword ptr -198h
.text:0000D9C8 var_190         = dword ptr -190h
.text:0000D9C8 var_18C         = dword ptr -18Ch
.text:0000D9C8 var_184         = dword ptr -184h
.text:0000D9C8 var_17C         = dword ptr -17Ch
.text:0000D9C8 var_178         = dword ptr -178h
.text:0000D9C8 var_174         = dword ptr -174h
.text:0000D9C8 var_170         = dword ptr -170h
.text:0000D9C8 var_16C         = dword ptr -16Ch
.text:0000D9C8 var_168         = dword ptr -168h
.text:0000D9C8 var_164         = dword ptr -164h
.text:0000D9C8 var_160         = dword ptr -160h
.text:0000D9C8 var_15C         = dword ptr -15Ch
.text:0000D9C8 var_154         = byte ptr -154h
.text:0000D9C8 var_EC          = dword ptr -0ECh
.text:0000D9C8 Dest            = byte ptr -0E4h
.text:0000D9C8 var_90          = dword ptr -90h
.text:0000D9C8 var_8C          = dword ptr -8Ch
.text:0000D9C8 var_84          = byte ptr -84h
.text:0000D9C8 Src             = dword ptr -24h
.text:0000D9C8 Dst             = byte ptr -1Ch
.text:0000D9C8 var_10          = dword ptr -10h
.text:0000D9C8 var_C           = dword ptr -0Ch
.text:0000D9C8 var_8           = dword ptr -8
.text:0000D9C8 var_4           = dword ptr -4
.text:0000D9C8 arg_0           = dword ptr  8
.text:0000D9C8 arg_4           = dword ptr  0Ch
.text:0000D9C8 arg_8           = dword ptr  10h
.text:0000D9C8 arg_C           = dword ptr  14h
.text:0000D9C8
.text:0000D9C8                 push    ebp
.text:0000D9C9                 mov     ebp, esp
.text:0000D9CB                 sub     esp, 2F4h
.text:0000D9D1                 push    esi
.text:0000D9D2                 push    edi
.text:0000D9D3                 lea     edi, [ebp+var_2F4]
.text:0000D9D9                 mov     ecx, 0BDh ; '+'
.text:0000D9DE                 mov     eax, 0CCCCCCCCh
.text:0000D9E3                 rep stosd
.text:0000D9E5                 mov     eax, dword ptr ds:___security_cookie
.text:0000D9EA                 xor     eax, ebp
.text:0000D9EC                 mov     [ebp+var_4], eax
.text:0000D9EF                 mov     eax, [ebp+arg_0]
.text:0000D9F2                 cmp     dword ptr [eax+19Ch], 0
.text:0000D9F9                 jnz     short loc_DA37
.text:0000D9FB                 push    0FCh ; 'n'
.text:0000DA00                 push    1
.text:0000DA02                 call    _safemalloc
.text:0000DA07                 add     esp, 8
.text:0000DA0A                 mov     [ebp+var_2CC], eax
.text:0000DA10                 mov     ecx, [ebp+arg_0]
.text:0000DA13                 mov     edx, [ebp+var_2CC]
.text:0000DA19                 mov     [ecx+19Ch], edx
.text:0000DA1F                 mov     eax, [ebp+var_2CC]
.text:0000DA25                 mov     [ebp+var_8C], eax
.text:0000DA2B                 mov     ecx, [ebp+var_8C]
.text:0000DA31                 mov     dword ptr [ecx], 0
.text:0000DA37
.text:0000DA37 loc_DA37:                               ; CODE XREF: _do_ssh1_login+31j
.text:0000DA37                 mov     edx, [ebp+arg_0]
.text:0000DA3A                 mov     eax, [edx+19Ch]
.text:0000DA40                 mov     [ebp+var_8C], eax
.text:0000DA46                 mov     ecx, [ebp+var_8C]
.text:0000DA4C                 mov     [ebp+var_90], ecx
.text:0000DA52                 mov     edx, [ebp+var_8C]
.text:0000DA58                 mov     eax, [edx]
.text:0000DA5A                 mov     [ebp+var_2D0], eax
.text:0000DA60                 cmp     [ebp+var_2D0], 10A4h
.text:0000DA6A                 jg      loc_DB25
.text:0000DA70                 cmp     [ebp+var_2D0], 10A4h
.text:0000DA7A                 jz      loc_F706
.text:0000DA80                 cmp     [ebp+var_2D0], 0FC2h
.text:0000DA8A                 jg      short loc_DAEF
.text:0000DA8C                 cmp     [ebp+var_2D0], 0FC2h
.text:0000DA96                 jz      loc_E8CC
.text:0000DA9C                 cmp     [ebp+var_2D0], 0F29h
.text:0000DAA6                 jg      short loc_DADA
.text:0000DAA8                 cmp     [ebp+var_2D0], 0F29h
.text:0000DAB2                 jz      loc_E114
.text:0000DAB8                 cmp     [ebp+var_2D0], 0
.text:0000DABF                 jz      loc_DBAC
.text:0000DAC5                 cmp     [ebp+var_2D0], 0EC9h
.text:0000DACF                 jz      loc_DBC5
.text:0000DAD5                 jmp     $LN379          ; jumptable 0000DB1E default case
.text:0000DADA ; ---------------------------------------------------------------------------
.text:0000DADA
.text:0000DADA loc_DADA:                               ; CODE XREF: _do_ssh1_login+DEj
.text:0000DADA                 cmp     [ebp+var_2D0], 0F7Fh
.text:0000DAE4                 jz      loc_E56D
.text:0000DAEA                 jmp     $LN379          ; jumptable 0000DB1E default case
.text:0000DAEF ; ---------------------------------------------------------------------------
.text:0000DAEF
.text:0000DAEF loc_DAEF:                               ; CODE XREF: _do_ssh1_login+C2j
.text:0000DAEF                 mov     ecx, [ebp+var_2D0]
.text:0000DAF5                 sub     ecx, 0FD6h
.text:0000DAFB                 mov     [ebp+var_2D0], ecx
.text:0000DB01                 cmp     [ebp+var_2D0], 0A9h ; '¬' ; switch 170 cases
.text:0000DB0B                 ja      $LN379          ; jumptable 0000DB1E default case
.text:0000DB11                 mov     edx, [ebp+var_2D0]
.text:0000DB17                 movzx   eax, ds:$LN401[edx]
.text:0000DB1E                 jmp     ds:$LN420[eax*4] ; switch jump
.text:0000DB25 ; ---------------------------------------------------------------------------
.text:0000DB25
.text:0000DB25 loc_DB25:                               ; CODE XREF: _do_ssh1_login+A2j
.text:0000DB25                 cmp     [ebp+var_2D0], 1177h
.text:0000DB2F                 jg      short loc_DB77
.text:0000DB31                 cmp     [ebp+var_2D0], 1177h
.text:0000DB3B                 jz      loc_1007D
.text:0000DB41                 mov     ecx, [ebp+var_2D0]
.text:0000DB47                 sub     ecx, 10B8h
.text:0000DB4D                 mov     [ebp+var_2D0], ecx
.text:0000DB53                 cmp     [ebp+var_2D0], 0A4h ; 'ñ' ; switch 165 cases
.text:0000DB5D                 ja      $LN379          ; jumptable 0000DB1E default case
.text:0000DB63                 mov     edx, [ebp+var_2D0]
.text:0000DB69                 movzx   eax, ds:$LN402[edx]
.text:0000DB70                 jmp     ds:$LN421[eax*4] ; switch jump
.text:0000DB77 ; ---------------------------------------------------------------------------
.text:0000DB77
.text:0000DB77 loc_DB77:                               ; CODE XREF: _do_ssh1_login+167j
.text:0000DB77                 cmp     [ebp+var_2D0], 11A2h
.text:0000DB81                 jz      loc_102FE
.text:0000DB87                 cmp     [ebp+var_2D0], 11DDh
.text:0000DB91                 jz      loc_105EF
.text:0000DB97                 cmp     [ebp+var_2D0], 126Ah
.text:0000DBA1                 jz      loc_10A37
.text:0000DBA7                 jmp     $LN379          ; jumptable 0000DB1E default case
.text:0000DBAC ; ---------------------------------------------------------------------------
.text:0000DBAC
.text:0000DBAC loc_DBAC:                               ; CODE XREF: _do_ssh1_login+F7j
.text:0000DBAC                 cmp     [ebp+arg_C], 0
.text:0000DBB0                 jnz     short loc_DBCF
.text:0000DBB2
.text:0000DBB2 loc_DBB2:                               ; CODE XREF: _do_ssh1_login+1FFj
.text:0000DBB2                                         ; _do_ssh1_login+205j
.text:0000DBB2                 mov     ecx, [ebp+var_90]
.text:0000DBB8                 mov     dword ptr [ecx], 0EC9h
.text:0000DBBE                 xor     eax, eax
.text:0000DBC0                 jmp     loc_10B1A
.text:0000DBC5 ; ---------------------------------------------------------------------------
.text:0000DBC5
.text:0000DBC5 loc_DBC5:                               ; CODE XREF: _do_ssh1_login+107j
.text:0000DBC5                 xor     edx, edx
.text:0000DBC7                 jnz     short loc_DBB2
.text:0000DBC9                 cmp     [ebp+arg_C], 0
.text:0000DBCD                 jz      short loc_DBB2
.text:0000DBCF
.text:0000DBCF loc_DBCF:                               ; CODE XREF: _do_ssh1_login+1E8j
.text:0000DBCF                 mov     eax, [ebp+arg_C]
.text:0000DBD2                 cmp     dword ptr [eax+8], 2
.text:0000DBD6                 jz      short loc_DC09
.text:0000DBD8                 push    offset $SG90098 ; "Public key packet not received"
.text:0000DBDD                 call    _dupprintf
.text:0000DBE2                 add     esp, 4
.text:0000DBE5                 push    eax
.text:0000DBE6                 mov     ecx, [ebp+arg_0]
.text:0000DBE9                 push    ecx
.text:0000DBEA                 call    _bomb_out
.text:0000DBEF                 add     esp, 8
.text:0000DBF2
.text:0000DBF2 loc_DBF2:                               ; CODE XREF: _do_ssh1_login+23Fj
.text:0000DBF2                 mov     edx, [ebp+var_90]
.text:0000DBF8                 mov     dword ptr [edx], 0
.text:0000DBFE                 xor     eax, eax
.text:0000DC00                 jmp     loc_10B1A
.text:0000DC05 ; ---------------------------------------------------------------------------
.text:0000DC05                 xor     eax, eax
.text:0000DC07                 jnz     short loc_DBF2
.text:0000DC09
.text:0000DC09 loc_DC09:                               ; CODE XREF: _do_ssh1_login+20Ej
.text:0000DC09                 push    offset $SG90102 ; "Received public keys"
.text:0000DC0E                 mov     ecx, [ebp+arg_0]
.text:0000DC11                 mov     edx, [ecx+0E4h]
.text:0000DC17                 push    edx
.text:0000DC18                 call    _logevent
.text:0000DC1D                 add     esp, 8
.text:0000DC20                 push    8
.text:0000DC22                 mov     eax, [ebp+arg_C]
.text:0000DC25                 push    eax
.text:0000DC26                 call    _ssh_pkt_getdata
.text:0000DC2B                 add     esp, 8
.text:0000DC2E                 mov     [ebp+Src], eax
.text:0000DC31                 cmp     [ebp+Src], 0
.text:0000DC35                 jnz     short loc_DC68
.text:0000DC37                 push    offset $SG90104 ; "SSH-1 public key packet stopped before "...
.text:0000DC3C                 call    _dupprintf
.text:0000DC41                 add     esp, 4
.text:0000DC44                 push    eax
.text:0000DC45                 mov     ecx, [ebp+arg_0]
.text:0000DC48                 push    ecx
.text:0000DC49                 call    _bomb_out
.text:0000DC4E                 add     esp, 8
.text:0000DC51
.text:0000DC51 loc_DC51:                               ; CODE XREF: _do_ssh1_login+29Ej
.text:0000DC51                 mov     edx, [ebp+var_90]
.text:0000DC57                 mov     dword ptr [edx], 0
.text:0000DC5D                 xor     eax, eax
.text:0000DC5F                 jmp     loc_10B1A
.text:0000DC64 ; ---------------------------------------------------------------------------
.text:0000DC64                 xor     eax, eax
.text:0000DC66                 jnz     short loc_DC51
.text:0000DC68
.text:0000DC68 loc_DC68:                               ; CODE XREF: _do_ssh1_login+26Dj
.text:0000DC68                 push    8               ; Size
.text:0000DC6A                 mov     ecx, [ebp+Src]
.text:0000DC6D                 push    ecx             ; Src
.text:0000DC6E                 lea     edx, [ebp+Dst]
.text:0000DC71                 push    edx             ; Dst
.text:0000DC72                 call    _memcpy
.text:0000DC77                 add     esp, 0Ch
.text:0000DC7A                 mov     eax, [ebp+var_8C]
.text:0000DC80                 add     eax, 0Ch
.text:0000DC83                 push    eax
.text:0000DC84                 mov     ecx, [ebp+var_8C]
.text:0000DC8A                 add     ecx, 0B4h ; '¦'
.text:0000DC90                 push    ecx
.text:0000DC91                 mov     edx, [ebp+arg_C]
.text:0000DC94                 push    edx
.text:0000DC95                 call    _ssh1_pkt_getrsakey
.text:0000DC9A                 add     esp, 0Ch
.text:0000DC9D                 test    eax, eax
.text:0000DC9F                 jz      short loc_DCC8
.text:0000DCA1                 mov     eax, [ebp+var_8C]
.text:0000DCA7                 add     eax, 10h
.text:0000DCAA                 push    eax
.text:0000DCAB                 mov     ecx, [ebp+var_8C]
.text:0000DCB1                 add     ecx, 0D8h ; '+'
.text:0000DCB7                 push    ecx
.text:0000DCB8                 mov     edx, [ebp+arg_C]
.text:0000DCBB                 push    edx
.text:0000DCBC                 call    _ssh1_pkt_getrsakey
.text:0000DCC1                 add     esp, 0Ch
.text:0000DCC4                 test    eax, eax
.text:0000DCC6                 jnz     short loc_DCF9
.text:0000DCC8
.text:0000DCC8 loc_DCC8:                               ; CODE XREF: _do_ssh1_login+2D7j
.text:0000DCC8                 push    offset $SG90110 ; "Failed to read SSH-1 public keys from p"...
.text:0000DCCD                 call    _dupprintf
.text:0000DCD2                 add     esp, 4
.text:0000DCD5                 push    eax
.text:0000DCD6                 mov     eax, [ebp+arg_0]
.text:0000DCD9                 push    eax
.text:0000DCDA                 call    _bomb_out
.text:0000DCDF                 add     esp, 8
.text:0000DCE2
.text:0000DCE2 loc_DCE2:                               ; CODE XREF: _do_ssh1_login+32Fj
.text:0000DCE2                 mov     ecx, [ebp+var_90]
.text:0000DCE8                 mov     dword ptr [ecx], 0
.text:0000DCEE                 xor     eax, eax
.text:0000DCF0                 jmp     loc_10B1A
.text:0000DCF5 ; ---------------------------------------------------------------------------
.text:0000DCF5                 xor     edx, edx
.text:0000DCF7                 jnz     short loc_DCE2
.text:0000DCF9
.text:0000DCF9 loc_DCF9:                               ; CODE XREF: _do_ssh1_login+2FEj
.text:0000DCF9                 push    offset $SG90115 ; "Host key fingerprint is:"
.text:0000DCFE                 mov     eax, [ebp+arg_0]
.text:0000DD01                 mov     ecx, [eax+0E4h]
.text:0000DD07                 push    ecx
.text:0000DD08                 call    _logevent
.text:0000DD0D                 add     esp, 8
.text:0000DD10                 push    offset $SG90116 ; "      "
.text:0000DD15                 lea     edx, [ebp+Dest]
.text:0000DD1B                 push    edx             ; Dest
.text:0000DD1C                 call    _strcpy
.text:0000DD21                 add     esp, 8
.text:0000DD24                 mov     eax, [ebp+var_8C]
.text:0000DD2A                 mov     dword ptr [eax+0F8h], 0
.text:0000DD34                 mov     ecx, [ebp+var_8C]
.text:0000DD3A                 add     ecx, 0D8h ; '+'
.text:0000DD40                 push    ecx
.text:0000DD41                 lea     edx, [ebp+Dest]
.text:0000DD47                 push    edx             ; Str
.text:0000DD48                 call    _strlen
.text:0000DD4D                 add     esp, 4
.text:0000DD50                 mov     ecx, 50h ; 'P'
.text:0000DD55                 sub     ecx, eax
.text:0000DD57                 push    ecx
.text:0000DD58                 lea     edx, [ebp+Dest]
.text:0000DD5E                 push    edx             ; Str
.text:0000DD5F                 call    _strlen
.text:0000DD64                 add     esp, 4
.text:0000DD67                 lea     eax, [ebp+eax+Dest]
.text:0000DD6E                 push    eax
.text:0000DD6F                 call    _rsa_fingerprint
.text:0000DD74                 add     esp, 0Ch
.text:0000DD77                 lea     ecx, [ebp+Dest]
.text:0000DD7D                 push    ecx
.text:0000DD7E                 mov     edx, [ebp+arg_0]
.text:0000DD81                 mov     eax, [edx+0E4h]
.text:0000DD87                 push    eax
.text:0000DD88                 call    _logevent
.text:0000DD8D                 add     esp, 8
.text:0000DD90                 mov     ecx, [ebp+arg_C]
.text:0000DD93                 push    ecx
.text:0000DD94                 call    _ssh_pkt_getuint32
.text:0000DD99                 add     esp, 4
.text:0000DD9C                 mov     edx, [ebp+arg_0]
.text:0000DD9F                 mov     [edx+40h], eax
.text:0000DDA2                 mov     eax, [ebp+arg_C]
.text:0000DDA5                 push    eax
.text:0000DDA6                 call    _ssh_pkt_getuint32
.text:0000DDAB                 add     esp, 4
.text:0000DDAE                 mov     ecx, [ebp+var_8C]
.text:0000DDB4                 mov     [ecx+14h], eax
.text:0000DDB7                 mov     edx, [ebp+arg_C]
.text:0000DDBA                 push    edx
.text:0000DDBB                 call    _ssh_pkt_getuint32
.text:0000DDC0                 add     esp, 4
.text:0000DDC3                 mov     ecx, [ebp+var_8C]
.text:0000DDC9                 mov     [ecx+18h], eax
.text:0000DDCC                 mov     edx, [ebp+arg_0]
.text:0000DDCF                 mov     eax, [edx+50h]
.text:0000DDD2                 and     eax, 8
.text:0000DDD5                 jz      short loc_DDEC
.text:0000DDD7                 mov     ecx, [ebp+var_8C]
.text:0000DDDD                 mov     edx, [ecx+18h]
.text:0000DDE0                 and     edx, 0FFFFFFFBh
.text:0000DDE3                 mov     eax, [ebp+var_8C]
.text:0000DDE9                 mov     [eax+18h], edx
.text:0000DDEC
.text:0000DDEC loc_DDEC:                               ; CODE XREF: _do_ssh1_login+40Dj
.text:0000DDEC                 mov     ecx, [ebp+arg_0]
.text:0000DDEF                 mov     edx, [ecx+40h]
.text:0000DDF2                 and     edx, 0
.text:0000DDF5                 mov     eax, [ebp+arg_0]
.text:0000DDF8                 mov     [eax+44h], edx
.text:0000DDFB                 mov     ecx, [ebp+arg_0]
.text:0000DDFE                 mov     edx, [ecx+44h]
.text:0000DE01                 or      edx, 1
.text:0000DE04                 mov     eax, [ebp+arg_0]
.text:0000DE07                 mov     [eax+44h], edx
.text:0000DE0A                 lea     ecx, [ebp+var_84]
.text:0000DE10                 push    ecx
.text:0000DE11                 call    _MD5Init
.text:0000DE16                 add     esp, 4
.text:0000DE19                 mov     edx, [ebp+var_8C]
.text:0000DE1F                 mov     eax, [edx+0DCh]
.text:0000DE25                 push    eax
.text:0000DE26                 mov     ecx, [ebp+var_8C]
.text:0000DE2C                 mov     edx, [ecx+10h]
.text:0000DE2F                 push    edx
.text:0000DE30                 lea     eax, [ebp+var_84]
.text:0000DE36                 push    eax
.text:0000DE37                 call    _MD5Update
.text:0000DE3C                 add     esp, 0Ch
.text:0000DE3F                 mov     ecx, [ebp+var_8C]
.text:0000DE45                 mov     edx, [ecx+0B8h]
.text:0000DE4B                 push    edx
.text:0000DE4C                 mov     eax, [ebp+var_8C]
.text:0000DE52                 mov     ecx, [eax+0Ch]
.text:0000DE55                 push    ecx
.text:0000DE56                 lea     edx, [ebp+var_84]
.text:0000DE5C                 push    edx
.text:0000DE5D                 call    _MD5Update
.text:0000DE62                 add     esp, 0Ch
.text:0000DE65                 push    8
.text:0000DE67                 lea     eax, [ebp+Dst]
.text:0000DE6A                 push    eax
.text:0000DE6B                 lea     ecx, [ebp+var_84]
.text:0000DE71                 push    ecx
.text:0000DE72                 call    _MD5Update
.text:0000DE77                 add     esp, 0Ch
.text:0000DE7A                 lea     edx, [ebp+var_84]
.text:0000DE80                 push    edx
.text:0000DE81                 mov     eax, [ebp+var_8C]
.text:0000DE87                 add     eax, 2Ch ; ','
.text:0000DE8A                 push    eax
.text:0000DE8B                 call    _MD5Final
.text:0000DE90                 add     esp, 8
.text:0000DE93                 mov     [ebp+var_8], 0
.text:0000DE9A                 jmp     short loc_DEA5
.text:0000DE9C ; ---------------------------------------------------------------------------
.text:0000DE9C
.text:0000DE9C loc_DE9C:                               ; CODE XREF: _do_ssh1_login+4F1j
.text:0000DE9C                 mov     ecx, [ebp+var_8]
.text:0000DE9F                 add     ecx, 1
.text:0000DEA2                 mov     [ebp+var_8], ecx
.text:0000DEA5
.text:0000DEA5 loc_DEA5:                               ; CODE XREF: _do_ssh1_login+4D2j
.text:0000DEA5                 cmp     [ebp+var_8], 20h ; ' '
.text:0000DEA9                 jge     short loc_DEBB
.text:0000DEAB                 call    _random_byte
.text:0000DEB0                 mov     edx, [ebp+arg_0]
.text:0000DEB3                 add     edx, [ebp+var_8]
.text:0000DEB6                 mov     [edx+1Ch], al
.text:0000DEB9                 jmp     short loc_DE9C
.text:0000DEBB ; ---------------------------------------------------------------------------
.text:0000DEBB
.text:0000DEBB loc_DEBB:                               ; CODE XREF: _do_ssh1_login+4E1j
.text:0000DEBB                 mov     eax, [ebp+var_8C]
.text:0000DEC1                 mov     ecx, [eax+0DCh]
.text:0000DEC7                 shl     ecx, 3
.text:0000DECA                 mov     edx, [ebp+var_8C]
.text:0000DED0                 cmp     [edx+0D8h], ecx
.text:0000DED6                 jg      short loc_DEF5
.text:0000DED8                 mov     eax, [ebp+var_8C]
.text:0000DEDE                 mov     ecx, [eax+0B8h]
.text:0000DEE4                 shl     ecx, 3
.text:0000DEE7                 mov     edx, [ebp+var_8C]
.text:0000DEED                 cmp     [edx+0B4h], ecx
.text:0000DEF3                 jle     short loc_DF26
.text:0000DEF5
.text:0000DEF5 loc_DEF5:                               ; CODE XREF: _do_ssh1_login+50Ej
.text:0000DEF5                 push    offset $SG90124 ; "SSH-1 public keys were badly formatted"
.text:0000DEFA                 call    _dupprintf
.text:0000DEFF                 add     esp, 4
.text:0000DF02                 push    eax
.text:0000DF03                 mov     eax, [ebp+arg_0]
.text:0000DF06                 push    eax
.text:0000DF07                 call    _bomb_out
.text:0000DF0C                 add     esp, 8
.text:0000DF0F
.text:0000DF0F loc_DF0F:                               ; CODE XREF: _do_ssh1_login+55Cj
.text:0000DF0F                 mov     ecx, [ebp+var_90]
.text:0000DF15                 mov     dword ptr [ecx], 0
.text:0000DF1B                 xor     eax, eax
.text:0000DF1D                 jmp     loc_10B1A
.text:0000DF22 ; ---------------------------------------------------------------------------
.text:0000DF22                 xor     edx, edx
.text:0000DF24                 jnz     short loc_DF0F
.text:0000DF26
.text:0000DF26 loc_DF26:                               ; CODE XREF: _do_ssh1_login+52Bj
.text:0000DF26                 mov     eax, [ebp+var_8C]
.text:0000DF2C                 mov     ecx, [ebp+var_8C]
.text:0000DF32                 mov     edx, [eax+0DCh]
.text:0000DF38                 cmp     edx, [ecx+0B8h]
.text:0000DF3E                 jle     short loc_DF54
.text:0000DF40                 mov     eax, [ebp+var_8C]
.text:0000DF46                 mov     ecx, [eax+0DCh]
.text:0000DF4C                 mov     [ebp+var_2D4], ecx
.text:0000DF52                 jmp     short loc_DF66
.text:0000DF54 ; ---------------------------------------------------------------------------
.text:0000DF54
.text:0000DF54 loc_DF54:                               ; CODE XREF: _do_ssh1_login+576j
.text:0000DF54                 mov     edx, [ebp+var_8C]
.text:0000DF5A                 mov     eax, [edx+0B8h]
.text:0000DF60                 mov     [ebp+var_2D4], eax
.text:0000DF66
.text:0000DF66 loc_DF66:                               ; CODE XREF: _do_ssh1_login+58Aj
.text:0000DF66                 mov     ecx, [ebp+var_8C]
.text:0000DF6C                 mov     edx, [ebp+var_2D4]
.text:0000DF72                 mov     [ecx+4], edx
.text:0000DF75                 push    1
.text:0000DF77                 mov     eax, [ebp+var_8C]
.text:0000DF7D                 mov     ecx, [eax+4]
.text:0000DF80                 push    ecx
.text:0000DF81                 call    _safemalloc
.text:0000DF86                 add     esp, 8
.text:0000DF89                 mov     edx, [ebp+var_8C]
.text:0000DF8F                 mov     [edx+8], eax
.text:0000DF92                 mov     eax, [ebp+var_8C]
.text:0000DF98                 add     eax, 0D8h ; '+'
.text:0000DF9D                 push    eax
.text:0000DF9E                 call    _rsastr_len
.text:0000DFA3                 add     esp, 4
.text:0000DFA6                 mov     [ebp+var_EC], eax
.text:0000DFAC                 push    1
.text:0000DFAE                 mov     ecx, [ebp+var_EC]
.text:0000DFB4                 push    ecx
.text:0000DFB5                 call    _safemalloc
.text:0000DFBA                 add     esp, 8
.text:0000DFBD                 mov     [ebp+var_15C], eax
.text:0000DFC3                 mov     edx, [ebp+var_8C]
.text:0000DFC9                 add     edx, 0D8h ; '+'
.text:0000DFCF                 push    edx
.text:0000DFD0                 mov     eax, [ebp+var_15C]
.text:0000DFD6                 push    eax
.text:0000DFD7                 call    _rsastr_fmt
.text:0000DFDC                 add     esp, 8
.text:0000DFDF                 mov     ecx, [ebp+var_8C]
.text:0000DFE5                 add     ecx, 0D8h ; '+'
.text:0000DFEB                 push    ecx
.text:0000DFEC                 push    64h ; 'd'
.text:0000DFEE                 lea     edx, [ebp+var_154]
.text:0000DFF4                 push    edx
.text:0000DFF5                 call    _rsa_fingerprint
.text:0000DFFA                 add     esp, 0Ch
.text:0000DFFD                 push    0               ; int
.text:0000DFFF                 push    0               ; int
.text:0000E001                 lea     eax, [ebp+var_154]
.text:0000E007                 push    eax             ; Str
.text:0000E008                 mov     ecx, [ebp+arg_0]
.text:0000E00B                 push    ecx             ; int
.text:0000E00C                 call    _verify_ssh_manual_host_key
.text:0000E011                 add     esp, 10h
.text:0000E014                 mov     edx, [ebp+var_8C]
.text:0000E01A                 mov     [edx+0ACh], eax
.text:0000E020                 mov     eax, [ebp+var_8C]
.text:0000E026                 cmp     dword ptr [eax+0ACh], 0
.text:0000E02D                 jnz     short loc_E074
.text:0000E02F                 push    offset $SG90138 ; "Host key did not appear in manually con"...
.text:0000E034                 call    _dupprintf
.text:0000E039                 add     esp, 4
.text:0000E03C                 push    eax
.text:0000E03D                 mov     ecx, [ebp+arg_0]
.text:0000E040                 push    ecx
.text:0000E041                 call    _bomb_out
.text:0000E046                 add     esp, 8
.text:0000E049                 mov     edx, [ebp+var_15C]
.text:0000E04F                 push    edx
.text:0000E050                 call    _safefree
.text:0000E055                 add     esp, 4
.text:0000E058
.text:0000E058 loc_E058:                               ; CODE XREF: _do_ssh1_login+6A5j
.text:0000E058                 mov     eax, [ebp+var_90]
.text:0000E05E                 mov     dword ptr [eax], 0
.text:0000E064                 xor     eax, eax
.text:0000E066                 jmp     loc_10B1A
.text:0000E06B ; ---------------------------------------------------------------------------
.text:0000E06B                 xor     ecx, ecx
.text:0000E06D                 jnz     short loc_E058
.text:0000E06F                 jmp     loc_E1CC
.text:0000E074 ; ---------------------------------------------------------------------------
.text:0000E074
.text:0000E074 loc_E074:                               ; CODE XREF: _do_ssh1_login+665j
.text:0000E074                 mov     edx, [ebp+var_8C]
.text:0000E07A                 cmp     dword ptr [edx+0ACh], 0
.text:0000E081                 jge     loc_E1BD
.text:0000E087                 push    1
.text:0000E089                 mov     eax, [ebp+arg_0]
.text:0000E08C                 push    eax
.text:0000E08D                 call    _ssh_set_frozen
.text:0000E092                 add     esp, 8
.text:0000E095                 mov     ecx, [ebp+arg_0]
.text:0000E098                 push    ecx
.text:0000E099                 push    offset _ssh_dialog_callback
.text:0000E09E                 lea     edx, [ebp+var_154]
.text:0000E0A4                 push    edx
.text:0000E0A5                 mov     eax, [ebp+var_15C]
.text:0000E0AB                 push    eax
.text:0000E0AC                 push    offset $SG90144 ; "rsa"
.text:0000E0B1                 mov     ecx, [ebp+arg_0]
.text:0000E0B4                 mov     edx, [ecx+0D4h]
.text:0000E0BA                 push    edx
.text:0000E0BB                 mov     eax, [ebp+arg_0]
.text:0000E0BE                 mov     ecx, [eax+0D0h]
.text:0000E0C4                 push    ecx
.text:0000E0C5                 mov     edx, [ebp+arg_0]
.text:0000E0C8                 mov     eax, [edx+0E4h]
.text:0000E0CE                 push    eax
.text:0000E0CF                 call    _verify_ssh_host_key
.text:0000E0D4                 add     esp, 20h
.text:0000E0D7                 mov     ecx, [ebp+var_8C]
.text:0000E0DD                 mov     [ecx+0ACh], eax
.text:0000E0E3                 mov     edx, [ebp+var_15C]
.text:0000E0E9                 push    edx
.text:0000E0EA                 call    _safefree
.text:0000E0EF                 add     esp, 4
.text:0000E0F2                 mov     eax, [ebp+var_8C]
.text:0000E0F8                 cmp     dword ptr [eax+0ACh], 0
.text:0000E0FF                 jge     short loc_E170
.text:0000E101
.text:0000E101 loc_E101:                               ; CODE XREF: _do_ssh1_login+74Ej
.text:0000E101                                         ; _do_ssh1_login+78Bj ...
.text:0000E101                 mov     ecx, [ebp+var_90]
.text:0000E107                 mov     dword ptr [ecx], 0F29h
.text:0000E10D                 xor     eax, eax
.text:0000E10F                 jmp     loc_10B1A
.text:0000E114 ; ---------------------------------------------------------------------------
.text:0000E114
.text:0000E114 loc_E114:                               ; CODE XREF: _do_ssh1_login+EAj
.text:0000E114                 xor     edx, edx
.text:0000E116                 jnz     short loc_E101
.text:0000E118                 cmp     [ebp+arg_C], 0
.text:0000E11C                 jz      short loc_E14F
.text:0000E11E                 push    offset $SG90154 ; "Unexpected data from server while waiti"...
.text:0000E123                 call    _dupprintf
.text:0000E128                 add     esp, 4
.text:0000E12B                 push    eax
.text:0000E12C                 mov     eax, [ebp+arg_0]
.text:0000E12F                 push    eax
.text:0000E130                 call    _bomb_out
.text:0000E135                 add     esp, 8
.text:0000E138
.text:0000E138 loc_E138:                               ; CODE XREF: _do_ssh1_login+785j
.text:0000E138                 mov     ecx, [ebp+var_90]
.text:0000E13E                 mov     dword ptr [ecx], 0
.text:0000E144                 xor     eax, eax
.text:0000E146                 jmp     loc_10B1A
.text:0000E14B ; ---------------------------------------------------------------------------
.text:0000E14B                 xor     edx, edx
.text:0000E14D                 jnz     short loc_E138
.text:0000E14F
.text:0000E14F loc_E14F:                               ; CODE XREF: _do_ssh1_login+754j
.text:0000E14F                 cmp     [ebp+arg_C], 0
.text:0000E153                 jnz     short loc_E101
.text:0000E155                 cmp     [ebp+arg_8], 0
.text:0000E159                 jg      short loc_E101
.text:0000E15B                 mov     eax, [ebp+var_8C]
.text:0000E161                 mov     ecx, [ebp+arg_0]
.text:0000E164                 mov     edx, [ecx+230h]
.text:0000E16A                 mov     [eax+0ACh], edx
.text:0000E170
.text:0000E170 loc_E170:                               ; CODE XREF: _do_ssh1_login+737j
.text:0000E170                 push    0
.text:0000E172                 mov     eax, [ebp+arg_0]
.text:0000E175                 push    eax
.text:0000E176                 call    _ssh_set_frozen
.text:0000E17B                 add     esp, 8
.text:0000E17E                 mov     ecx, [ebp+var_8C]
.text:0000E184                 cmp     dword ptr [ecx+0ACh], 0
.text:0000E18B                 jnz     short loc_E1BB
.text:0000E18D                 push    1               ; int
.text:0000E18F                 push    0               ; int
.text:0000E191                 push    0               ; Str
.text:0000E193                 push    offset $SG90160 ; "User aborted at host key verification"
.text:0000E198                 mov     edx, [ebp+arg_0]
.text:0000E19B                 push    edx             ; int
.text:0000E19C                 call    _ssh_disconnect
.text:0000E1A1                 add     esp, 14h
.text:0000E1A4
.text:0000E1A4 loc_E1A4:                               ; CODE XREF: _do_ssh1_login+7F1j
.text:0000E1A4                 mov     eax, [ebp+var_90]
.text:0000E1AA                 mov     dword ptr [eax], 0
.text:0000E1B0                 xor     eax, eax
.text:0000E1B2                 jmp     loc_10B1A
.text:0000E1B7 ; ---------------------------------------------------------------------------
.text:0000E1B7                 xor     ecx, ecx
.text:0000E1B9                 jnz     short loc_E1A4
.text:0000E1BB
.text:0000E1BB loc_E1BB:                               ; CODE XREF: _do_ssh1_login+7C3j
.text:0000E1BB                 jmp     short loc_E1CC
.text:0000E1BD ; ---------------------------------------------------------------------------
.text:0000E1BD
.text:0000E1BD loc_E1BD:                               ; CODE XREF: _do_ssh1_login+6B9j
.text:0000E1BD                 mov     edx, [ebp+var_15C]
.text:0000E1C3                 push    edx
.text:0000E1C4                 call    _safefree
.text:0000E1C9                 add     esp, 4
.text:0000E1CC
.text:0000E1CC loc_E1CC:                               ; CODE XREF: _do_ssh1_login+6A7j
.text:0000E1CC                                         ; _do_ssh1_login:loc_E1BBj
.text:0000E1CC                 mov     [ebp+var_8], 0
.text:0000E1D3                 jmp     short loc_E1DE
.text:0000E1D5 ; ---------------------------------------------------------------------------
.text:0000E1D5
.text:0000E1D5 loc_E1D5:                               ; CODE XREF: _do_ssh1_login:loc_E230j
.text:0000E1D5                 mov     eax, [ebp+var_8]
.text:0000E1D8                 add     eax, 1
.text:0000E1DB                 mov     [ebp+var_8], eax
.text:0000E1DE
.text:0000E1DE loc_E1DE:                               ; CODE XREF: _do_ssh1_login+80Bj
.text:0000E1DE                 cmp     [ebp+var_8], 20h ; ' '
.text:0000E1E2                 jge     short loc_E232
.text:0000E1E4                 mov     ecx, [ebp+var_8C]
.text:0000E1EA                 mov     edx, [ecx+8]
.text:0000E1ED                 mov     eax, [ebp+arg_0]
.text:0000E1F0                 add     eax, [ebp+var_8]
.text:0000E1F3                 mov     ecx, [ebp+var_8]
.text:0000E1F6                 mov     al, [eax+1Ch]
.text:0000E1F9                 mov     [edx+ecx], al
.text:0000E1FC                 cmp     [ebp+var_8], 10h
.text:0000E200                 jge     short loc_E230
.text:0000E202                 mov     ecx, [ebp+var_8C]
.text:0000E208                 mov     edx, [ecx+8]
.text:0000E20B                 mov     eax, [ebp+var_8C]
.text:0000E211                 add     eax, [ebp+var_8]
.text:0000E214                 movzx   ecx, byte ptr [eax+2Ch]
.text:0000E218                 mov     eax, [ebp+var_8]
.text:0000E21B                 movzx   edx, byte ptr [edx+eax]
.text:0000E21F                 xor     edx, ecx
.text:0000E221                 mov     eax, [ebp+var_8C]
.text:0000E227                 mov     ecx, [eax+8]
.text:0000E22A                 mov     eax, [ebp+var_8]
.text:0000E22D                 mov     [ecx+eax], dl
.text:0000E230
.text:0000E230 loc_E230:                               ; CODE XREF: _do_ssh1_login+838j
.text:0000E230                 jmp     short loc_E1D5
.text:0000E232 ; ---------------------------------------------------------------------------
.text:0000E232
.text:0000E232 loc_E232:                               ; CODE XREF: _do_ssh1_login+81Aj
.text:0000E232                 mov     ecx, [ebp+var_8C]
.text:0000E238                 mov     edx, [ebp+var_8C]
.text:0000E23E                 mov     eax, [ecx+0DCh]
.text:0000E244                 cmp     eax, [edx+0B8h]
.text:0000E24A                 jle     short loc_E2A7
.text:0000E24C                 mov     ecx, [ebp+var_8C]
.text:0000E252                 add     ecx, 0B4h ; '¦'
.text:0000E258                 push    ecx
.text:0000E259                 push    20h ; ' '
.text:0000E25B                 mov     edx, [ebp+var_8C]
.text:0000E261                 mov     eax, [edx+8]
.text:0000E264                 push    eax
.text:0000E265                 call    _rsaencrypt
.text:0000E26A                 add     esp, 0Ch
.text:0000E26D                 mov     [ebp+var_10], eax
.text:0000E270                 cmp     [ebp+var_10], 0
.text:0000E274                 jz      short loc_E2A5
.text:0000E276                 mov     ecx, [ebp+var_8C]
.text:0000E27C                 add     ecx, 0D8h ; '+'
.text:0000E282                 push    ecx
.text:0000E283                 mov     edx, [ebp+var_8C]
.text:0000E289                 mov     eax, [edx+0B8h]
.text:0000E28F                 push    eax
.text:0000E290                 mov     ecx, [ebp+var_8C]
.text:0000E296                 mov     edx, [ecx+8]
.text:0000E299                 push    edx
.text:0000E29A                 call    _rsaencrypt
.text:0000E29F                 add     esp, 0Ch
.text:0000E2A2                 mov     [ebp+var_10], eax
.text:0000E2A5
.text:0000E2A5 loc_E2A5:                               ; CODE XREF: _do_ssh1_login+8ACj
.text:0000E2A5                 jmp     short loc_E2FE
.text:0000E2A7 ; ---------------------------------------------------------------------------
.text:0000E2A7
.text:0000E2A7 loc_E2A7:                               ; CODE XREF: _do_ssh1_login+882j
.text:0000E2A7                 mov     eax, [ebp+var_8C]
.text:0000E2AD                 add     eax, 0D8h ; '+'
.text:0000E2B2                 push    eax
.text:0000E2B3                 push    20h ; ' '
.text:0000E2B5                 mov     ecx, [ebp+var_8C]
.text:0000E2BB                 mov     edx, [ecx+8]
.text:0000E2BE                 push    edx
.text:0000E2BF                 call    _rsaencrypt
.text:0000E2C4                 add     esp, 0Ch
.text:0000E2C7                 mov     [ebp+var_10], eax
.text:0000E2CA                 cmp     [ebp+var_10], 0
.text:0000E2CE                 jz      short loc_E2FE
.text:0000E2D0                 mov     eax, [ebp+var_8C]
.text:0000E2D6                 add     eax, 0B4h ; '¦'
.text:0000E2DB                 push    eax
.text:0000E2DC                 mov     ecx, [ebp+var_8C]
.text:0000E2E2                 mov     edx, [ecx+0DCh]
.text:0000E2E8                 push    edx
.text:0000E2E9                 mov     eax, [ebp+var_8C]
.text:0000E2EF                 mov     ecx, [eax+8]
.text:0000E2F2                 push    ecx
.text:0000E2F3                 call    _rsaencrypt
.text:0000E2F8                 add     esp, 0Ch
.text:0000E2FB                 mov     [ebp+var_10], eax
.text:0000E2FE
.text:0000E2FE loc_E2FE:                               ; CODE XREF: _do_ssh1_login:loc_E2A5j
.text:0000E2FE                                         ; _do_ssh1_login+906j
.text:0000E2FE                 cmp     [ebp+var_10], 0
.text:0000E302                 jnz     short loc_E335
.text:0000E304                 push    offset $SG90174 ; "SSH-1 public key encryptions failed due"...
.text:0000E309                 call    _dupprintf
.text:0000E30E                 add     esp, 4
.text:0000E311                 push    eax
.text:0000E312                 mov     edx, [ebp+arg_0]
.text:0000E315                 push    edx
.text:0000E316                 call    _bomb_out
.text:0000E31B                 add     esp, 8
.text:0000E31E
.text:0000E31E loc_E31E:                               ; CODE XREF: _do_ssh1_login+96Bj
.text:0000E31E                 mov     eax, [ebp+var_90]
.text:0000E324                 mov     dword ptr [eax], 0
.text:0000E32A                 xor     eax, eax
.text:0000E32C                 jmp     loc_10B1A
.text:0000E331 ; ---------------------------------------------------------------------------
.text:0000E331                 xor     ecx, ecx
.text:0000E333                 jnz     short loc_E31E
.text:0000E335
.text:0000E335 loc_E335:                               ; CODE XREF: _do_ssh1_login+93Aj
.text:0000E335                 push    offset $SG90178 ; "Encrypted session key"
.text:0000E33A                 mov     edx, [ebp+arg_0]
.text:0000E33D                 mov     eax, [edx+0E4h]
.text:0000E343                 push    eax
.text:0000E344                 call    _logevent
.text:0000E349                 add     esp, 8
.text:0000E34C                 mov     [ebp+var_160], 0
.text:0000E356                 mov     [ebp+var_164], 0
.text:0000E360                 mov     [ebp+var_168], 0
.text:0000E36A                 mov     [ebp+var_16C], 0
.text:0000E374                 jmp     short loc_E385
.text:0000E376 ; ---------------------------------------------------------------------------
.text:0000E376
.text:0000E376 loc_E376:                               ; CODE XREF: _do_ssh1_login:loc_E494j
.text:0000E376                 mov     ecx, [ebp+var_16C]
.text:0000E37C                 add     ecx, 1
.text:0000E37F                 mov     [ebp+var_16C], ecx
.text:0000E385
.text:0000E385 loc_E385:                               ; CODE XREF: _do_ssh1_login+9ACj
.text:0000E385                 cmp     [ebp+var_160], 0
.text:0000E38C                 jnz     loc_E499
.text:0000E392                 cmp     [ebp+var_16C], 6
.text:0000E399                 jge     loc_E499
.text:0000E39F                 mov     edx, [ebp+var_16C]
.text:0000E3A5                 push    edx
.text:0000E3A6                 push    1Dh
.text:0000E3A8                 mov     eax, [ebp+arg_0]
.text:0000E3AB                 mov     ecx, [eax+21Ch]
.text:0000E3B1                 push    ecx
.text:0000E3B2                 call    _conf_get_int_int
.text:0000E3B7                 add     esp, 0Ch
.text:0000E3BA                 mov     [ebp+var_170], eax
.text:0000E3C0                 cmp     [ebp+var_170], 0
.text:0000E3C7                 jnz     short loc_E3D8
.text:0000E3C9                 mov     [ebp+var_164], 1
.text:0000E3D3                 jmp     loc_E494
.text:0000E3D8 ; ---------------------------------------------------------------------------
.text:0000E3D8
.text:0000E3D8 loc_E3D8:                               ; CODE XREF: _do_ssh1_login+9FFj
.text:0000E3D8                 cmp     [ebp+var_170], 3
.text:0000E3DF                 jnz     short loc_E3FD
.text:0000E3E1                 push    offset $SG90191 ; "AES not supported in SSH-1, skipping"
.text:0000E3E6                 mov     edx, [ebp+arg_0]
.text:0000E3E9                 mov     eax, [edx+0E4h]
.text:0000E3EF                 push    eax
.text:0000E3F0                 call    _logevent
.text:0000E3F5                 add     esp, 8
.text:0000E3F8                 jmp     loc_E494
.text:0000E3FD ; ---------------------------------------------------------------------------
.text:0000E3FD
.text:0000E3FD loc_E3FD:                               ; CODE XREF: _do_ssh1_login+A17j
.text:0000E3FD                 mov     ecx, [ebp+var_170]
.text:0000E403                 mov     [ebp+var_2D8], ecx
.text:0000E409                 cmp     [ebp+var_2D8], 1
.text:0000E410                 jz      short loc_E426
.text:0000E412                 cmp     [ebp+var_2D8], 2
.text:0000E419                 jz      short loc_E43F
.text:0000E41B                 cmp     [ebp+var_2D8], 4
.text:0000E422                 jz      short loc_E458
.text:0000E424                 jmp     short loc_E46F
.text:0000E426 ; ---------------------------------------------------------------------------
.text:0000E426
.text:0000E426 loc_E426:                               ; CODE XREF: _do_ssh1_login+A48j
.text:0000E426                 mov     edx, [ebp+var_8C]
.text:0000E42C                 mov     dword ptr [edx+3Ch], 3
.text:0000E433                 mov     [ebp+var_168], offset $SG90198 ; "3DES"
.text:0000E43D                 jmp     short loc_E46F
.text:0000E43F ; ---------------------------------------------------------------------------
.text:0000E43F
.text:0000E43F loc_E43F:                               ; CODE XREF: _do_ssh1_login+A51j
.text:0000E43F                 mov     eax, [ebp+var_8C]
.text:0000E445                 mov     dword ptr [eax+3Ch], 6
.text:0000E44C                 mov     [ebp+var_168], offset $SG90200 ; "Blowfish"
.text:0000E456                 jmp     short loc_E46F
.text:0000E458 ; ---------------------------------------------------------------------------
.text:0000E458
.text:0000E458 loc_E458:                               ; CODE XREF: _do_ssh1_login+A5Aj
.text:0000E458                 mov     ecx, [ebp+var_8C]
.text:0000E45E                 mov     dword ptr [ecx+3Ch], 2
.text:0000E465                 mov     [ebp+var_168], offset $SG90202 ; "single-DES"
.text:0000E46F
.text:0000E46F loc_E46F:                               ; CODE XREF: _do_ssh1_login+A5Cj
.text:0000E46F                                         ; _do_ssh1_login+A75j ...
.text:0000E46F                 mov     edx, [ebp+var_8C]
.text:0000E475                 mov     eax, 1
.text:0000E47A                 mov     ecx, [edx+3Ch]
.text:0000E47D                 shl     eax, cl
.text:0000E47F                 mov     ecx, [ebp+var_8C]
.text:0000E485                 and     eax, [ecx+14h]
.text:0000E488                 jz      short loc_E494
.text:0000E48A                 mov     [ebp+var_160], 1
.text:0000E494
.text:0000E494 loc_E494:                               ; CODE XREF: _do_ssh1_login+A0Bj
.text:0000E494                                         ; _do_ssh1_login+A30j ...
.text:0000E494                 jmp     loc_E376
.text:0000E499 ; ---------------------------------------------------------------------------
.text:0000E499
.text:0000E499 loc_E499:                               ; CODE XREF: _do_ssh1_login+9C4j
.text:0000E499                                         ; _do_ssh1_login+9D1j
.text:0000E499                 cmp     [ebp+var_160], 0
.text:0000E4A0                 jnz     short loc_E4FD
.text:0000E4A2                 mov     edx, [ebp+var_8C]
.text:0000E4A8                 mov     eax, [edx+14h]
.text:0000E4AB                 and     eax, 8
.text:0000E4AE                 jnz     short loc_E4CC
.text:0000E4B0                 push    offset $SG90206 ; "Server violates SSH-1 protocol by not s"...
.text:0000E4B5                 call    _dupprintf
.text:0000E4BA                 add     esp, 4
.text:0000E4BD                 push    eax
.text:0000E4BE                 mov     ecx, [ebp+arg_0]
.text:0000E4C1                 push    ecx
.text:0000E4C2                 call    _bomb_out
.text:0000E4C7                 add     esp, 8
.text:0000E4CA                 jmp     short loc_E4E6
.text:0000E4CC ; ---------------------------------------------------------------------------
.text:0000E4CC
.text:0000E4CC loc_E4CC:                               ; CODE XREF: _do_ssh1_login+AE6j
.text:0000E4CC                 push    offset $SG90208 ; "No supported ciphers found"
.text:0000E4D1                 call    _dupprintf
.text:0000E4D6                 add     esp, 4
.text:0000E4D9                 push    eax
.text:0000E4DA                 mov     edx, [ebp+arg_0]
.text:0000E4DD                 push    edx
.text:0000E4DE                 call    _bomb_out
.text:0000E4E3                 add     esp, 8
.text:0000E4E6
.text:0000E4E6 loc_E4E6:                               ; CODE XREF: _do_ssh1_login+B02j
.text:0000E4E6                                         ; _do_ssh1_login+B33j
.text:0000E4E6                 mov     eax, [ebp+var_90]
.text:0000E4EC                 mov     dword ptr [eax], 0
.text:0000E4F2                 xor     eax, eax
.text:0000E4F4                 jmp     loc_10B1A
.text:0000E4F9 ; ---------------------------------------------------------------------------
.text:0000E4F9                 xor     ecx, ecx
.text:0000E4FB                 jnz     short loc_E4E6
.text:0000E4FD
.text:0000E4FD loc_E4FD:                               ; CODE XREF: _do_ssh1_login+AD8j
.text:0000E4FD                 cmp     [ebp+var_164], 0
.text:0000E504                 jz      loc_E614
.text:0000E50A                 push    1
.text:0000E50C                 mov     edx, [ebp+arg_0]
.text:0000E50F                 push    edx
.text:0000E510                 call    _ssh_set_frozen
.text:0000E515                 add     esp, 8
.text:0000E518                 mov     eax, [ebp+arg_0]
.text:0000E51B                 push    eax
.text:0000E51C                 push    offset _ssh_dialog_callback
.text:0000E521                 mov     ecx, [ebp+var_168]
.text:0000E527                 push    ecx
.text:0000E528                 push    offset $SG90213 ; "cipher"
.text:0000E52D                 mov     edx, [ebp+arg_0]
.text:0000E530                 mov     eax, [edx+0E4h]
.text:0000E536                 push    eax
.text:0000E537                 call    _askalg
.text:0000E53C                 add     esp, 14h
.text:0000E53F                 mov     ecx, [ebp+var_8C]
.text:0000E545                 mov     [ecx+0ACh], eax
.text:0000E54B                 mov     edx, [ebp+var_8C]
.text:0000E551                 cmp     dword ptr [edx+0ACh], 0
.text:0000E558                 jge     short loc_E5C9
.text:0000E55A
.text:0000E55A loc_E55A:                               ; CODE XREF: _do_ssh1_login+BA7j
.text:0000E55A                                         ; _do_ssh1_login+BE4j ...
.text:0000E55A                 mov     eax, [ebp+var_90]
.text:0000E560                 mov     dword ptr [eax], 0F7Fh
.text:0000E566                 xor     eax, eax
.text:0000E568                 jmp     loc_10B1A
.text:0000E56D ; ---------------------------------------------------------------------------
.text:0000E56D
.text:0000E56D loc_E56D:                               ; CODE XREF: _do_ssh1_login+11Cj
.text:0000E56D                 xor     ecx, ecx
.text:0000E56F                 jnz     short loc_E55A
.text:0000E571                 cmp     [ebp+arg_C], 0
.text:0000E575                 jz      short loc_E5A8
.text:0000E577                 push    offset $SG90223 ; "Unexpected data from server while waiti"...
.text:0000E57C                 call    _dupprintf
.text:0000E581                 add     esp, 4
.text:0000E584                 push    eax
.text:0000E585                 mov     edx, [ebp+arg_0]
.text:0000E588                 push    edx
.text:0000E589                 call    _bomb_out
.text:0000E58E                 add     esp, 8
.text:0000E591
.text:0000E591 loc_E591:                               ; CODE XREF: _do_ssh1_login+BDEj
.text:0000E591                 mov     eax, [ebp+var_90]
.text:0000E597                 mov     dword ptr [eax], 0
.text:0000E59D                 xor     eax, eax
.text:0000E59F                 jmp     loc_10B1A
.text:0000E5A4 ; ---------------------------------------------------------------------------
.text:0000E5A4                 xor     ecx, ecx
.text:0000E5A6                 jnz     short loc_E591
.text:0000E5A8
.text:0000E5A8 loc_E5A8:                               ; CODE XREF: _do_ssh1_login+BADj
.text:0000E5A8                 cmp     [ebp+arg_C], 0
.text:0000E5AC                 jnz     short loc_E55A
.text:0000E5AE                 cmp     [ebp+arg_8], 0
.text:0000E5B2                 jg      short loc_E55A
.text:0000E5B4                 mov     edx, [ebp+var_8C]
.text:0000E5BA                 mov     eax, [ebp+arg_0]
.text:0000E5BD                 mov     ecx, [eax+230h]
.text:0000E5C3                 mov     [edx+0ACh], ecx
.text:0000E5C9
.text:0000E5C9 loc_E5C9:                               ; CODE XREF: _do_ssh1_login+B90j
.text:0000E5C9                 push    0
.text:0000E5CB                 mov     edx, [ebp+arg_0]
.text:0000E5CE                 push    edx
.text:0000E5CF                 call    _ssh_set_frozen
.text:0000E5D4                 add     esp, 8
.text:0000E5D7                 mov     eax, [ebp+var_8C]
.text:0000E5DD                 cmp     dword ptr [eax+0ACh], 0
.text:0000E5E4                 jnz     short loc_E614
.text:0000E5E6                 push    1               ; int
.text:0000E5E8                 push    0               ; int
.text:0000E5EA                 push    0               ; Str
.text:0000E5EC                 push    offset $SG90229 ; "User aborted at cipher warning"
.text:0000E5F1                 mov     ecx, [ebp+arg_0]
.text:0000E5F4                 push    ecx             ; int
.text:0000E5F5                 call    _ssh_disconnect
.text:0000E5FA                 add     esp, 14h
.text:0000E5FD
.text:0000E5FD loc_E5FD:                               ; CODE XREF: _do_ssh1_login+C4Aj
.text:0000E5FD                 mov     edx, [ebp+var_90]
.text:0000E603                 mov     dword ptr [edx], 0
.text:0000E609                 xor     eax, eax
.text:0000E60B                 jmp     loc_10B1A
.text:0000E610 ; ---------------------------------------------------------------------------
.text:0000E610                 xor     eax, eax
.text:0000E612                 jnz     short loc_E5FD
.text:0000E614
.text:0000E614 loc_E614:                               ; CODE XREF: _do_ssh1_login+B3Cj
.text:0000E614                                         ; _do_ssh1_login+C1Cj
.text:0000E614                 mov     ecx, [ebp+var_8C]
.text:0000E61A                 mov     edx, [ecx+3Ch]
.text:0000E61D                 mov     [ebp+var_2DC], edx
.text:0000E623                 cmp     [ebp+var_2DC], 2
.text:0000E62A                 jz      short loc_E659
.text:0000E62C                 cmp     [ebp+var_2DC], 3
.text:0000E633                 jz      short loc_E640
.text:0000E635                 cmp     [ebp+var_2DC], 6
.text:0000E63C                 jz      short loc_E672
.text:0000E63E                 jmp     short loc_E689
.text:0000E640 ; ---------------------------------------------------------------------------
.text:0000E640
.text:0000E640 loc_E640:                               ; CODE XREF: _do_ssh1_login+C6Bj
.text:0000E640                 push    offset $SG90238 ; "Using 3DES encryption"
.text:0000E645                 mov     eax, [ebp+arg_0]
.text:0000E648                 mov     ecx, [eax+0E4h]
.text:0000E64E                 push    ecx
.text:0000E64F                 call    _logevent
.text:0000E654                 add     esp, 8
.text:0000E657                 jmp     short loc_E689
.text:0000E659 ; ---------------------------------------------------------------------------
.text:0000E659
.text:0000E659 loc_E659:                               ; CODE XREF: _do_ssh1_login+C62j
.text:0000E659                 push    offset $SG90240 ; "Using single-DES encryption"
.text:0000E65E                 mov     edx, [ebp+arg_0]
.text:0000E661                 mov     eax, [edx+0E4h]
.text:0000E667                 push    eax
.text:0000E668                 call    _logevent
.text:0000E66D                 add     esp, 8
.text:0000E670                 jmp     short loc_E689
.text:0000E672 ; ---------------------------------------------------------------------------
.text:0000E672
.text:0000E672 loc_E672:                               ; CODE XREF: _do_ssh1_login+C74j
.text:0000E672                 push    offset $SG90242 ; "Using Blowfish encryption"
.text:0000E677                 mov     ecx, [ebp+arg_0]
.text:0000E67A                 mov     edx, [ecx+0E4h]
.text:0000E680                 push    edx
.text:0000E681                 call    _logevent
.text:0000E686                 add     esp, 8
.text:0000E689
.text:0000E689 loc_E689:                               ; CODE XREF: _do_ssh1_login+C76j
.text:0000E689                                         ; _do_ssh1_login+C8Fj ...
.text:0000E689                 push    0
.text:0000E68B                 mov     eax, [ebp+arg_0]
.text:0000E68E                 mov     ecx, [eax+44h]
.text:0000E691                 push    ecx
.text:0000E692                 push    1
.text:0000E694                 mov     edx, [ebp+var_8C]
.text:0000E69A                 mov     eax, [edx+4]
.text:0000E69D                 push    eax
.text:0000E69E                 mov     ecx, [ebp+var_8C]
.text:0000E6A4                 mov     edx, [ecx+8]
.text:0000E6A7                 push    edx
.text:0000E6A8                 push    3
.text:0000E6AA                 mov     eax, [ebp+var_8C]
.text:0000E6B0                 mov     ecx, [eax+4]
.text:0000E6B3                 shl     ecx, 3
.text:0000E6B6                 and     ecx, 0FFh
.text:0000E6BC                 push    ecx
.text:0000E6BD                 push    2
.text:0000E6BF                 mov     edx, [ebp+var_8C]
.text:0000E6C5                 mov     eax, [edx+4]
.text:0000E6C8                 shl     eax, 3
.text:0000E6CB                 sar     eax, 8
.text:0000E6CE                 push    eax
.text:0000E6CF                 push    2
.text:0000E6D1                 push    8
.text:0000E6D3                 lea     ecx, [ebp+Dst]
.text:0000E6D6                 push    ecx
.text:0000E6D7                 push    3
.text:0000E6D9                 mov     edx, [ebp+var_8C]
.text:0000E6DF                 mov     eax, [edx+3Ch]
.text:0000E6E2                 push    eax
.text:0000E6E3                 push    2
.text:0000E6E5                 push    3
.text:0000E6E7                 mov     ecx, [ebp+arg_0]
.text:0000E6EA                 push    ecx
.text:0000E6EB                 call    _send_packet
.text:0000E6F0                 add     esp, 44h
.text:0000E6F3                 push    offset $SG90243 ; "Trying to enable encryption..."
.text:0000E6F8                 mov     edx, [ebp+arg_0]
.text:0000E6FB                 mov     eax, [edx+0E4h]
.text:0000E701                 push    eax
.text:0000E702                 call    _logevent
.text:0000E707                 add     esp, 8
.text:0000E70A                 mov     ecx, [ebp+var_8C]
.text:0000E710                 mov     edx, [ecx+8]
.text:0000E713                 push    edx
.text:0000E714                 call    _safefree
.text:0000E719                 add     esp, 4
.text:0000E71C                 mov     eax, [ebp+var_8C]
.text:0000E722                 cmp     dword ptr [eax+3Ch], 6
.text:0000E726                 jnz     short loc_E734
.text:0000E728                 mov     [ebp+var_2E0], offset _ssh_blowfish_ssh1
.text:0000E732                 jmp     short loc_E762
.text:0000E734 ; ---------------------------------------------------------------------------
.text:0000E734
.text:0000E734 loc_E734:                               ; CODE XREF: _do_ssh1_login+D5Ej
.text:0000E734                 mov     ecx, [ebp+var_8C]
.text:0000E73A                 cmp     dword ptr [ecx+3Ch], 2
.text:0000E73E                 jnz     short loc_E74C
.text:0000E740                 mov     [ebp+var_2E4], offset _ssh_des
.text:0000E74A                 jmp     short loc_E756
.text:0000E74C ; ---------------------------------------------------------------------------
.text:0000E74C
.text:0000E74C loc_E74C:                               ; CODE XREF: _do_ssh1_login+D76j
.text:0000E74C                 mov     [ebp+var_2E4], offset _ssh_3des
.text:0000E756
.text:0000E756 loc_E756:                               ; CODE XREF: _do_ssh1_login+D82j
.text:0000E756                 mov     edx, [ebp+var_2E4]
.text:0000E75C                 mov     [ebp+var_2E0], edx
.text:0000E762
.text:0000E762 loc_E762:                               ; CODE XREF: _do_ssh1_login+D6Aj
.text:0000E762                 mov     eax, [ebp+arg_0]
.text:0000E765                 mov     ecx, [ebp+var_2E0]
.text:0000E76B                 mov     [eax+54h], ecx
.text:0000E76E                 mov     edx, [ebp+arg_0]
.text:0000E771                 mov     eax, [edx+54h]
.text:0000E774                 mov     esi, esp
.text:0000E776                 mov     ecx, [eax]
.text:0000E778                 call    ecx
.text:0000E77A                 cmp     esi, esp
.text:0000E77C                 call    __RTC_CheckEsp
.text:0000E781                 mov     edx, [ebp+arg_0]
.text:0000E784                 mov     [edx+58h], eax
.text:0000E787                 mov     eax, [ebp+arg_0]
.text:0000E78A                 add     eax, 1Ch
.text:0000E78D                 mov     esi, esp
.text:0000E78F                 push    eax
.text:0000E790                 mov     ecx, [ebp+arg_0]
.text:0000E793                 mov     edx, [ecx+58h]
.text:0000E796                 push    edx
.text:0000E797                 mov     eax, [ebp+arg_0]
.text:0000E79A                 mov     ecx, [eax+54h]
.text:0000E79D                 mov     edx, [ecx+8]
.text:0000E7A0                 call    edx
.text:0000E7A2                 add     esp, 8
.text:0000E7A5                 cmp     esi, esp
.text:0000E7A7                 call    __RTC_CheckEsp
.text:0000E7AC                 mov     eax, [ebp+arg_0]
.text:0000E7AF                 mov     ecx, [eax+54h]
.text:0000E7B2                 mov     edx, [ecx+18h]
.text:0000E7B5                 push    edx
.text:0000E7B6                 push    offset $SG90244 ; "Initialised %s encryption"
.text:0000E7BB                 mov     eax, [ebp+arg_0]
.text:0000E7BE                 push    eax
.text:0000E7BF                 call    _logeventf
.text:0000E7C4                 add     esp, 0Ch
.text:0000E7C7                 call    _crcda_make_context
.text:0000E7CC                 mov     ecx, [ebp+arg_0]
.text:0000E7CF                 mov     [ecx+5Ch], eax
.text:0000E7D2                 push    offset $SG90245 ; "Installing CRC compensation attack dete"...
.text:0000E7D7                 mov     edx, [ebp+arg_0]
.text:0000E7DA                 mov     eax, [edx+0E4h]
.text:0000E7E0                 push    eax
.text:0000E7E1                 call    _logevent
.text:0000E7E6                 add     esp, 8
.text:0000E7E9                 mov     ecx, [ebp+var_8C]
.text:0000E7EF                 cmp     dword ptr [ecx+0BCh], 0
.text:0000E7F6                 jz      short loc_E81D
.text:0000E7F8                 mov     edx, [ebp+var_8C]
.text:0000E7FE                 mov     eax, [edx+0BCh]
.text:0000E804                 push    eax
.text:0000E805                 call    _safefree
.text:0000E80A                 add     esp, 4
.text:0000E80D                 mov     ecx, [ebp+var_8C]
.text:0000E813                 mov     dword ptr [ecx+0BCh], 0
.text:0000E81D
.text:0000E81D loc_E81D:                               ; CODE XREF: _do_ssh1_login+E2Ej
.text:0000E81D                 mov     edx, [ebp+var_8C]
.text:0000E823                 cmp     dword ptr [edx+0C0h], 0
.text:0000E82A                 jz      short loc_E851
.text:0000E82C                 mov     eax, [ebp+var_8C]
.text:0000E832                 mov     ecx, [eax+0C0h]
.text:0000E838                 push    ecx
.text:0000E839                 call    _safefree
.text:0000E83E                 add     esp, 4
.text:0000E841                 mov     edx, [ebp+var_8C]
.text:0000E847                 mov     dword ptr [edx+0C0h], 0
.text:0000E851
.text:0000E851 loc_E851:                               ; CODE XREF: _do_ssh1_login+E62j
.text:0000E851                 mov     eax, [ebp+var_8C]
.text:0000E857                 cmp     dword ptr [eax+0E0h], 0
.text:0000E85E                 jz      short loc_E885
.text:0000E860                 mov     ecx, [ebp+var_8C]
.text:0000E866                 mov     edx, [ecx+0E0h]
.text:0000E86C                 push    edx
.text:0000E86D                 call    _safefree
.text:0000E872                 add     esp, 4
.text:0000E875                 mov     eax, [ebp+var_8C]
.text:0000E87B                 mov     dword ptr [eax+0E0h], 0
.text:0000E885
.text:0000E885 loc_E885:                               ; CODE XREF: _do_ssh1_login+E96j
.text:0000E885                 mov     ecx, [ebp+var_8C]
.text:0000E88B                 cmp     dword ptr [ecx+0E4h], 0
.text:0000E892                 jz      short loc_E8B9
.text:0000E894                 mov     edx, [ebp+var_8C]
.text:0000E89A                 mov     eax, [edx+0E4h]
.text:0000E8A0                 push    eax
.text:0000E8A1                 call    _safefree
.text:0000E8A6                 add     esp, 4
.text:0000E8A9                 mov     ecx, [ebp+var_8C]
.text:0000E8AF                 mov     dword ptr [ecx+0E4h], 0
.text:0000E8B9
.text:0000E8B9 loc_E8B9:                               ; CODE XREF: _do_ssh1_login+ECAj
.text:0000E8B9                                         ; _do_ssh1_login+F06j ...
.text:0000E8B9                 mov     edx, [ebp+var_90]
.text:0000E8BF                 mov     dword ptr [edx], 0FC2h
.text:0000E8C5                 xor     eax, eax
.text:0000E8C7                 jmp     loc_10B1A
.text:0000E8CC ; ---------------------------------------------------------------------------
.text:0000E8CC
.text:0000E8CC loc_E8CC:                               ; CODE XREF: _do_ssh1_login+CEj
.text:0000E8CC                 xor     eax, eax
.text:0000E8CE                 jnz     short loc_E8B9
.text:0000E8D0                 cmp     [ebp+arg_C], 0
.text:0000E8D4                 jz      short loc_E8B9
.text:0000E8D6                 mov     ecx, [ebp+arg_C]
.text:0000E8D9                 cmp     dword ptr [ecx+8], 0Eh
.text:0000E8DD                 jz      short loc_E910
.text:0000E8DF                 push    offset $SG90262 ; "Encryption not successfully enabled"
.text:0000E8E4                 call    _dupprintf
.text:0000E8E9                 add     esp, 4
.text:0000E8EC                 push    eax
.text:0000E8ED                 mov     edx, [ebp+arg_0]
.text:0000E8F0                 push    edx
.text:0000E8F1                 call    _bomb_out
.text:0000E8F6                 add     esp, 8
.text:0000E8F9
.text:0000E8F9 loc_E8F9:                               ; CODE XREF: _do_ssh1_login+F46j
.text:0000E8F9                 mov     eax, [ebp+var_90]
.text:0000E8FF                 mov     dword ptr [eax], 0
.text:0000E905                 xor     eax, eax
.text:0000E907                 jmp     loc_10B1A
.text:0000E90C ; ---------------------------------------------------------------------------
.text:0000E90C                 xor     ecx, ecx
.text:0000E90E                 jnz     short loc_E8F9
.text:0000E910
.text:0000E910 loc_E910:                               ; CODE XREF: _do_ssh1_login+F15j
.text:0000E910                 push    offset $SG90266 ; "Successfully started encryption"
.text:0000E915                 mov     edx, [ebp+arg_0]
.text:0000E918                 mov     eax, [edx+0E4h]
.text:0000E91E                 push    eax
.text:0000E91F                 call    _logevent
.text:0000E924                 add     esp, 8
.text:0000E927                 call    ___iob_func
.text:0000E92C                 add     eax, 20h ; ' '
.text:0000E92F                 push    eax             ; File
.text:0000E930                 call    _fflush
.text:0000E935                 add     esp, 4
.text:0000E938                 mov     ecx, [ebp+arg_0]
.text:0000E93B                 mov     edx, [ecx+21Ch]
.text:0000E941                 push    edx
.text:0000E942                 call    _get_remote_username
.text:0000E947                 add     esp, 4
.text:0000E94A                 mov     [ebp+var_2E8], eax
.text:0000E950                 mov     eax, [ebp+arg_0]
.text:0000E953                 mov     ecx, [ebp+var_2E8]
.text:0000E959                 mov     [eax+224h], ecx
.text:0000E95F                 cmp     [ebp+var_2E8], 0
.text:0000E966                 jnz     loc_EACD
.text:0000E96C                 mov     edx, [ebp+arg_0]
.text:0000E96F                 mov     eax, [edx+0E4h]
.text:0000E975                 push    eax
.text:0000E976                 call    _new_prompts
.text:0000E97B                 add     esp, 4
.text:0000E97E                 mov     ecx, [ebp+var_8C]
.text:0000E984                 mov     [ecx+50h], eax
.text:0000E987                 mov     edx, [ebp+var_8C]
.text:0000E98D                 mov     eax, [edx+50h]
.text:0000E990                 mov     dword ptr [eax], 1
.text:0000E996                 push    offset $SG90270 ; "SSH login name"
.text:0000E99B                 call    _dupstr
.text:0000E9A0                 add     esp, 4
.text:0000E9A3                 mov     ecx, [ebp+var_8C]
.text:0000E9A9                 mov     edx, [ecx+50h]
.text:0000E9AC                 mov     [edx+4], eax
.text:0000E9AF                 push    1
.text:0000E9B1                 push    offset $SG90271 ; "login as: "
.text:0000E9B6                 call    _dupstr
.text:0000E9BB                 add     esp, 4
.text:0000E9BE                 push    eax
.text:0000E9BF                 mov     eax, [ebp+var_8C]
.text:0000E9C5                 mov     ecx, [eax+50h]
.text:0000E9C8                 push    ecx
.text:0000E9C9                 call    _add_prompt
.text:0000E9CE                 add     esp, 0Ch
.text:0000E9D1                 push    0
.text:0000E9D3                 push    0
.text:0000E9D5                 mov     edx, [ebp+var_8C]
.text:0000E9DB                 mov     eax, [edx+50h]
.text:0000E9DE                 push    eax
.text:0000E9DF                 call    _get_userpass_input
.text:0000E9E4                 add     esp, 0Ch
.text:0000E9E7                 mov     [ebp+var_174], eax
.text:0000E9ED
.text:0000E9ED loc_E9ED:                               ; CODE XREF: _do_ssh1_login+1085j
.text:0000E9ED                 cmp     [ebp+var_174], 0
.text:0000E9F4                 jge     short loc_EA4F
.text:0000E9F6                 mov     ecx, [ebp+arg_0]
.text:0000E9F9                 mov     dword ptr [ecx+0D8h], 1
.text:0000EA03
.text:0000EA03 loc_EA03:                               ; CODE XREF: _do_ssh1_login+1050j
.text:0000EA03                                         ; _do_ssh1_login+1056j
.text:0000EA03                 mov     edx, [ebp+var_90]
.text:0000EA09                 mov     dword ptr [edx], 0FD6h
.text:0000EA0F                 xor     eax, eax
.text:0000EA11                 jmp     loc_10B1A
.text:0000EA16 ; ---------------------------------------------------------------------------
.text:0000EA16
.text:0000EA16 $LN249:                                 ; CODE XREF: _do_ssh1_login+156j
.text:0000EA16                                         ; DATA XREF: .text:$LN420o
.text:0000EA16                 xor     eax, eax        ; jumptable 0000DB1E case 0
.text:0000EA18                 jnz     short loc_EA03
.text:0000EA1A                 cmp     [ebp+arg_C], 0
.text:0000EA1E                 jnz     short loc_EA03
.text:0000EA20                 mov     ecx, [ebp+arg_8]
.text:0000EA23                 push    ecx
.text:0000EA24                 mov     edx, [ebp+arg_4]
.text:0000EA27                 push    edx
.text:0000EA28                 mov     eax, [ebp+var_8C]
.text:0000EA2E                 mov     ecx, [eax+50h]
.text:0000EA31                 push    ecx
.text:0000EA32                 call    _get_userpass_input
.text:0000EA37                 add     esp, 0Ch
.text:0000EA3A                 mov     [ebp+var_174], eax
.text:0000EA40                 mov     edx, [ebp+arg_0]
.text:0000EA43                 mov     dword ptr [edx+0D8h], 0
.text:0000EA4D                 jmp     short loc_E9ED
.text:0000EA4F ; ---------------------------------------------------------------------------
.text:0000EA4F
.text:0000EA4F loc_EA4F:                               ; CODE XREF: _do_ssh1_login+102Cj
.text:0000EA4F                 cmp     [ebp+var_174], 0
.text:0000EA56                 jnz     short loc_EA98
.text:0000EA58                 mov     eax, [ebp+var_8C]
.text:0000EA5E                 mov     ecx, [eax+50h]
.text:0000EA61                 push    ecx
.text:0000EA62                 call    _free_prompts
.text:0000EA67                 add     esp, 4
.text:0000EA6A                 push    1               ; int
.text:0000EA6C                 push    0               ; int
.text:0000EA6E                 push    0               ; Str
.text:0000EA70                 push    offset $SG90285 ; "No username provided"
.text:0000EA75                 mov     edx, [ebp+arg_0]
.text:0000EA78                 push    edx             ; int
.text:0000EA79                 call    _ssh_disconnect
.text:0000EA7E                 add     esp, 14h
.text:0000EA81
.text:0000EA81 loc_EA81:                               ; CODE XREF: _do_ssh1_login+10CEj
.text:0000EA81                 mov     eax, [ebp+var_90]
.text:0000EA87                 mov     dword ptr [eax], 0
.text:0000EA8D                 xor     eax, eax
.text:0000EA8F                 jmp     loc_10B1A
.text:0000EA94 ; ---------------------------------------------------------------------------
.text:0000EA94                 xor     ecx, ecx
.text:0000EA96                 jnz     short loc_EA81
.text:0000EA98
.text:0000EA98 loc_EA98:                               ; CODE XREF: _do_ssh1_login+108Ej
.text:0000EA98                 mov     edx, [ebp+var_8C]
.text:0000EA9E                 mov     eax, [edx+50h]
.text:0000EAA1                 mov     ecx, [eax+18h]
.text:0000EAA4                 mov     edx, [ecx]
.text:0000EAA6                 mov     eax, [edx+8]
.text:0000EAA9                 push    eax
.text:0000EAAA                 call    _dupstr
.text:0000EAAF                 add     esp, 4
.text:0000EAB2                 mov     ecx, [ebp+arg_0]
.text:0000EAB5                 mov     [ecx+224h], eax
.text:0000EABB                 mov     edx, [ebp+var_8C]
.text:0000EAC1                 mov     eax, [edx+50h]
.text:0000EAC4                 push    eax
.text:0000EAC5                 call    _free_prompts
.text:0000EACA                 add     esp, 4
.text:0000EACD
.text:0000EACD loc_EACD:                               ; CODE XREF: _do_ssh1_login+F9Ej
.text:0000EACD                 push    0
.text:0000EACF                 mov     ecx, [ebp+arg_0]
.text:0000EAD2                 mov     edx, [ecx+224h]
.text:0000EAD8                 push    edx
.text:0000EAD9                 push    4
.text:0000EADB                 push    4
.text:0000EADD                 mov     eax, [ebp+arg_0]
.text:0000EAE0                 push    eax
.text:0000EAE1                 call    _send_packet
.text:0000EAE6                 add     esp, 14h
.text:0000EAE9                 mov     ecx, [ebp+arg_0]
.text:0000EAEC                 mov     edx, [ecx+224h]
.text:0000EAF2                 push    edx
.text:0000EAF3                 push    offset $SG90290 ; "Sent username \"%s\""
.text:0000EAF8                 call    _dupprintf
.text:0000EAFD                 add     esp, 8
.text:0000EB00                 mov     [ebp+var_178], eax
.text:0000EB06                 mov     eax, [ebp+var_178]
.text:0000EB0C                 push    eax
.text:0000EB0D                 mov     ecx, [ebp+arg_0]
.text:0000EB10                 mov     edx, [ecx+0E4h]
.text:0000EB16                 push    edx
.text:0000EB17                 call    _logevent
.text:0000EB1C                 add     esp, 8
.text:0000EB1F                 mov     eax, dword ptr ds:_flags
.text:0000EB24                 and     eax, 4
.text:0000EB27                 jz      short loc_EB63
.text:0000EB29                 mov     ecx, dword ptr ds:_flags
.text:0000EB2F                 and     ecx, 2
.text:0000EB32                 jz      short loc_EB3F
.text:0000EB34                 mov     edx, dword ptr ds:_flags
.text:0000EB3A                 and     edx, 1
.text:0000EB3D                 jnz     short loc_EB63
.text:0000EB3F
.text:0000EB3F loc_EB3F:                               ; CODE XREF: _do_ssh1_login+116Aj
.text:0000EB3F                 mov     eax, [ebp+var_178]
.text:0000EB45                 push    eax             ; Str
.text:0000EB46                 mov     ecx, [ebp+arg_0]
.text:0000EB49                 push    ecx             ; int
.text:0000EB4A                 call    _c_write_str
.text:0000EB4F                 add     esp, 8
.text:0000EB52                 push    offset $SG90293 ; Str
.text:0000EB57                 mov     edx, [ebp+arg_0]
.text:0000EB5A                 push    edx             ; int
.text:0000EB5B                 call    _c_write_str
.text:0000EB60                 add     esp, 8
.text:0000EB63
.text:0000EB63 loc_EB63:                               ; CODE XREF: _do_ssh1_login+115Fj
.text:0000EB63                                         ; _do_ssh1_login+1175j
.text:0000EB63                 mov     eax, [ebp+var_178]
.text:0000EB69                 push    eax
.text:0000EB6A                 call    _safefree
.text:0000EB6F                 add     esp, 4
.text:0000EB72
.text:0000EB72 loc_EB72:                               ; CODE XREF: _do_ssh1_login+11BFj
.text:0000EB72                                         ; _do_ssh1_login+11C5j
.text:0000EB72                 mov     ecx, [ebp+var_90]
.text:0000EB78                 mov     dword ptr [ecx], 0FF3h
.text:0000EB7E                 xor     eax, eax
.text:0000EB80                 jmp     loc_10B1A
.text:0000EB85 ; ---------------------------------------------------------------------------
.text:0000EB85
.text:0000EB85 $LN236:                                 ; CODE XREF: _do_ssh1_login+156j
.text:0000EB85                                         ; DATA XREF: .text:$LN420o
.text:0000EB85                 xor     edx, edx        ; jumptable 0000DB1E case 29
.text:0000EB87                 jnz     short loc_EB72
.text:0000EB89                 cmp     [ebp+arg_C], 0
.text:0000EB8D                 jz      short loc_EB72
.text:0000EB8F                 mov     eax, [ebp+var_8C]
.text:0000EB95                 mov     ecx, [eax+18h]
.text:0000EB98                 and     ecx, 4
.text:0000EB9B                 jnz     short loc_EBB9
.text:0000EB9D                 mov     edx, [ebp+var_8C]
.text:0000EBA3                 mov     dword ptr [edx+20h], 1
.text:0000EBAA                 mov     eax, [ebp+var_8C]
.text:0000EBB0                 mov     dword ptr [eax+1Ch], 1
.text:0000EBB7                 jmp     short loc_EBD3
.text:0000EBB9 ; ---------------------------------------------------------------------------
.text:0000EBB9
.text:0000EBB9 loc_EBB9:                               ; CODE XREF: _do_ssh1_login+11D3j
.text:0000EBB9                 mov     ecx, [ebp+var_8C]
.text:0000EBBF                 mov     dword ptr [ecx+20h], 0
.text:0000EBC6                 mov     edx, [ebp+var_8C]
.text:0000EBCC                 mov     dword ptr [edx+1Ch], 0
.text:0000EBD3
.text:0000EBD3 loc_EBD3:                               ; CODE XREF: _do_ssh1_login+11EFj
.text:0000EBD3                 mov     eax, [ebp+var_8C]
.text:0000EBD9                 mov     dword ptr [eax+28h], 0
.text:0000EBE0                 mov     ecx, [ebp+var_8C]
.text:0000EBE6                 mov     dword ptr [ecx+24h], 0
.text:0000EBED                 push    1Eh
.text:0000EBEF                 mov     edx, [ebp+arg_0]
.text:0000EBF2                 mov     eax, [edx+21Ch]
.text:0000EBF8                 push    eax
.text:0000EBF9                 call    _conf_get_filename
.text:0000EBFE                 add     esp, 8
.text:0000EC01                 mov     ecx, [ebp+var_8C]
.text:0000EC07                 mov     [ecx+0B0h], eax
.text:0000EC0D                 mov     edx, [ebp+var_8C]
.text:0000EC13                 mov     eax, [edx+0B0h]
.text:0000EC19                 push    eax
.text:0000EC1A                 call    _filename_is_null
.text:0000EC1F                 add     esp, 4
.text:0000EC22                 test    eax, eax
.text:0000EC24                 jnz     loc_EDE0
.text:0000EC2A                 mov     ecx, [ebp+var_8C]
.text:0000EC30                 mov     edx, [ecx+0B0h]
.text:0000EC36                 push    edx
.text:0000EC37                 call    _filename_to_str
.text:0000EC3C                 add     esp, 4
.text:0000EC3F                 push    eax
.text:0000EC40                 push    offset $SG90305 ; "Reading private key file \"%.150s\""
.text:0000EC45                 mov     eax, [ebp+arg_0]
.text:0000EC48                 push    eax
.text:0000EC49                 call    _logeventf
.text:0000EC4E                 add     esp, 0Ch
.text:0000EC51                 mov     ecx, [ebp+var_8C]
.text:0000EC57                 mov     edx, [ecx+0B0h]
.text:0000EC5D                 push    edx
.text:0000EC5E                 call    _key_type
.text:0000EC63                 add     esp, 4
.text:0000EC66                 mov     [ebp+var_17C], eax
.text:0000EC6C                 cmp     [ebp+var_17C], 2
.text:0000EC73                 jnz     loc_ED55
.text:0000EC79                 lea     eax, [ebp+var_184]
.text:0000EC7F                 push    eax
.text:0000EC80                 mov     ecx, [ebp+var_8C]
.text:0000EC86                 add     ecx, 48h ; 'H'
.text:0000EC89                 push    ecx
.text:0000EC8A                 mov     edx, [ebp+var_8C]
.text:0000EC90                 add     edx, 44h ; 'D'
.text:0000EC93                 push    edx
.text:0000EC94                 mov     eax, [ebp+var_8C]
.text:0000EC9A                 add     eax, 40h ; '@'
.text:0000EC9D                 push    eax
.text:0000EC9E                 mov     ecx, [ebp+var_8C]
.text:0000ECA4                 mov     edx, [ecx+0B0h]
.text:0000ECAA                 push    edx
.text:0000ECAB                 call    _rsakey_pubblob
.text:0000ECB0                 add     esp, 14h
.text:0000ECB3                 test    eax, eax
.text:0000ECB5                 jz      short loc_ECD9
.text:0000ECB7                 push    0
.text:0000ECB9                 mov     eax, [ebp+var_8C]
.text:0000ECBF                 mov     ecx, [eax+0B0h]
.text:0000ECC5                 push    ecx
.text:0000ECC6                 call    _rsakey_encrypted
.text:0000ECCB                 add     esp, 8
.text:0000ECCE                 mov     edx, [ebp+var_8C]
.text:0000ECD4                 mov     [edx+4Ch], eax
.text:0000ECD7                 jmp     short loc_ED50
.text:0000ECD9 ; ---------------------------------------------------------------------------
.text:0000ECD9
.text:0000ECD9 loc_ECD9:                               ; CODE XREF: _do_ssh1_login+12EDj
.text:0000ECD9                 mov     eax, [ebp+var_184]
.text:0000ECDF                 push    eax
.text:0000ECE0                 push    offset $SG90312 ; "Unable to load private key (%s)"
.text:0000ECE5                 mov     ecx, [ebp+arg_0]
.text:0000ECE8                 push    ecx
.text:0000ECE9                 call    _logeventf
.text:0000ECEE                 add     esp, 0Ch
.text:0000ECF1                 mov     edx, [ebp+var_184]
.text:0000ECF7                 push    edx
.text:0000ECF8                 mov     eax, [ebp+var_8C]
.text:0000ECFE                 mov     ecx, [eax+0B0h]
.text:0000ED04                 push    ecx
.text:0000ED05                 call    _filename_to_str
.text:0000ED0A                 add     esp, 4
.text:0000ED0D                 push    eax
.text:0000ED0E                 push    offset $SG90313 ; "Unable to load private key file \"%.150"...
.text:0000ED13                 call    _dupprintf
.text:0000ED18                 add     esp, 0Ch
.text:0000ED1B                 mov     [ebp+var_18C], eax
.text:0000ED21                 mov     edx, [ebp+var_18C]
.text:0000ED27                 push    edx             ; Str
.text:0000ED28                 mov     eax, [ebp+arg_0]
.text:0000ED2B                 push    eax             ; int
.text:0000ED2C                 call    _c_write_str
.text:0000ED31                 add     esp, 8
.text:0000ED34                 mov     ecx, [ebp+var_18C]
.text:0000ED3A                 push    ecx
.text:0000ED3B                 call    _safefree
.text:0000ED40                 add     esp, 4
.text:0000ED43                 mov     edx, [ebp+var_8C]
.text:0000ED49                 mov     dword ptr [edx+40h], 0
.text:0000ED50
.text:0000ED50 loc_ED50:                               ; CODE XREF: _do_ssh1_login+130Fj
.text:0000ED50                 jmp     loc_EDDE
.text:0000ED55 ; ---------------------------------------------------------------------------
.text:0000ED55
.text:0000ED55 loc_ED55:                               ; CODE XREF: _do_ssh1_login+12ABj
.text:0000ED55                 mov     eax, [ebp+var_17C]
.text:0000ED5B                 push    eax
.text:0000ED5C                 call    _key_type_to_str
.text:0000ED61                 add     esp, 4
.text:0000ED64                 push    eax
.text:0000ED65                 push    offset $SG90317 ; "Unable to use this key file (%s)"
.text:0000ED6A                 mov     ecx, [ebp+arg_0]
.text:0000ED6D                 push    ecx
.text:0000ED6E                 call    _logeventf
.text:0000ED73                 add     esp, 0Ch
.text:0000ED76                 mov     edx, [ebp+var_17C]
.text:0000ED7C                 push    edx
.text:0000ED7D                 call    _key_type_to_str
.text:0000ED82                 add     esp, 4
.text:0000ED85                 push    eax
.text:0000ED86                 mov     eax, [ebp+var_8C]
.text:0000ED8C                 mov     ecx, [eax+0B0h]
.text:0000ED92                 push    ecx
.text:0000ED93                 call    _filename_to_str
.text:0000ED98                 add     esp, 4
.text:0000ED9B                 push    eax
.text:0000ED9C                 push    offset $SG90318 ; "Unable to use key file \"%.150s\" (%s)\"...
.text:0000EDA1                 call    _dupprintf
.text:0000EDA6                 add     esp, 0Ch
.text:0000EDA9                 mov     [ebp+var_190], eax
.text:0000EDAF                 mov     edx, [ebp+var_190]
.text:0000EDB5                 push    edx             ; Str
.text:0000EDB6                 mov     eax, [ebp+arg_0]
.text:0000EDB9                 push    eax             ; int
.text:0000EDBA                 call    _c_write_str
.text:0000EDBF                 add     esp, 8
.text:0000EDC2                 mov     ecx, [ebp+var_190]
.text:0000EDC8                 push    ecx
.text:0000EDC9                 call    _safefree
.text:0000EDCE                 add     esp, 4
.text:0000EDD1                 mov     edx, [ebp+var_8C]
.text:0000EDD7                 mov     dword ptr [edx+40h], 0
.text:0000EDDE
.text:0000EDDE loc_EDDE:                               ; CODE XREF: _do_ssh1_login:loc_ED50j
.text:0000EDDE                 jmp     short loc_EDED
.text:0000EDE0 ; ---------------------------------------------------------------------------
.text:0000EDE0
.text:0000EDE0 loc_EDE0:                               ; CODE XREF: _do_ssh1_login+125Cj
.text:0000EDE0                 mov     eax, [ebp+var_8C]
.text:0000EDE6                 mov     dword ptr [eax+40h], 0
.text:0000EDED
.text:0000EDED loc_EDED:                               ; CODE XREF: _do_ssh1_login:loc_EDDEj
.text:0000EDED                                         ; _do_ssh1_login+23EFj ...
.text:0000EDED                 mov     ecx, [ebp+arg_C]
.text:0000EDF0                 cmp     dword ptr [ecx+8], 0Fh
.text:0000EDF4                 jnz     loc_10AC2
.text:0000EDFA                 mov     edx, [ebp+var_8C]
.text:0000EE00                 mov     dword ptr [edx+58h], 9
.text:0000EE07                 push    1Ah
.text:0000EE09                 mov     eax, [ebp+arg_0]
.text:0000EE0C                 mov     ecx, [eax+21Ch]
.text:0000EE12                 push    ecx
.text:0000EE13                 call    _conf_get_int
.text:0000EE18                 add     esp, 8
.text:0000EE1B                 test    eax, eax
.text:0000EE1D                 jz      loc_F99F
.text:0000EE23                 call    _agent_exists
.text:0000EE28                 test    eax, eax
.text:0000EE2A                 jz      loc_F99F
.text:0000EE30                 mov     edx, [ebp+var_8C]
.text:0000EE36                 cmp     dword ptr [edx+20h], 0
.text:0000EE3A                 jnz     loc_F99F
.text:0000EE40                 mov     eax, [ebp+var_8C]
.text:0000EE46                 mov     dword ptr [eax+78h], 0
.text:0000EE4D                 mov     ecx, [ebp+var_8C]
.text:0000EE53                 mov     dword ptr [ecx+20h], 1
.text:0000EE5A                 push    offset $SG90327 ; "Pageant is running. Requesting keys."
.text:0000EE5F                 mov     edx, [ebp+arg_0]
.text:0000EE62                 mov     eax, [edx+0E4h]
.text:0000EE68                 push    eax
.text:0000EE69                 call    _logevent
.text:0000EE6E                 add     esp, 8
.text:0000EE71                 mov     ecx, [ebp+var_8C]
.text:0000EE77                 mov     byte ptr [ecx+5Ch], 0
.text:0000EE7B                 mov     edx, [ebp+var_8C]
.text:0000EE81                 mov     byte ptr [edx+5Dh], 0
.text:0000EE85                 mov     eax, [ebp+var_8C]
.text:0000EE8B                 mov     byte ptr [eax+5Eh], 0
.text:0000EE8F                 mov     ecx, [ebp+var_8C]
.text:0000EE95                 mov     byte ptr [ecx+5Fh], 1
.text:0000EE99                 mov     edx, [ebp+var_8C]
.text:0000EE9F                 mov     byte ptr [edx+60h], 1
.text:0000EEA3                 mov     eax, [ebp+arg_0]
.text:0000EEA6                 push    eax
.text:0000EEA7                 push    offset _ssh_agent_callback
.text:0000EEAC                 mov     ecx, [ebp+var_8C]
.text:0000EEB2                 add     ecx, 6Ch ; 'l'
.text:0000EEB5                 push    ecx
.text:0000EEB6                 lea     edx, [ebp+var_198]
.text:0000EEBC                 push    edx
.text:0000EEBD                 push    5
.text:0000EEBF                 mov     eax, [ebp+var_8C]
.text:0000EEC5                 add     eax, 5Ch ; '\'
.text:0000EEC8                 push    eax
.text:0000EEC9                 call    _agent_query
.text:0000EECE                 add     esp, 18h
.text:0000EED1                 test    eax, eax
.text:0000EED3                 jnz     short loc_EF50
.text:0000EED5
.text:0000EED5 loc_EED5:                               ; CODE XREF: _do_ssh1_login+1522j
.text:0000EED5                                         ; _do_ssh1_login+155Fj ...
.text:0000EED5                 mov     ecx, [ebp+var_90]
.text:0000EEDB                 mov     dword ptr [ecx], 1039h
.text:0000EEE1                 xor     eax, eax
.text:0000EEE3                 jmp     loc_10B1A
.text:0000EEE8 ; ---------------------------------------------------------------------------
.text:0000EEE8
.text:0000EEE8 $LN217:                                 ; CODE XREF: _do_ssh1_login+156j
.text:0000EEE8                                         ; DATA XREF: .text:$LN420o
.text:0000EEE8                 xor     edx, edx        ; jumptable 0000DB1E case 99
.text:0000EEEA                 jnz     short loc_EED5
.text:0000EEEC                 cmp     [ebp+arg_C], 0
.text:0000EEF0                 jz      short loc_EF23
.text:0000EEF2                 push    offset $SG90341 ; "Unexpected data from server while waiti"...
.text:0000EEF7                 call    _dupprintf
.text:0000EEFC                 add     esp, 4
.text:0000EEFF                 push    eax
.text:0000EF00                 mov     eax, [ebp+arg_0]
.text:0000EF03                 push    eax
.text:0000EF04                 call    _bomb_out
.text:0000EF09                 add     esp, 8
.text:0000EF0C
.text:0000EF0C loc_EF0C:                               ; CODE XREF: _do_ssh1_login+1559j
.text:0000EF0C                 mov     ecx, [ebp+var_90]
.text:0000EF12                 mov     dword ptr [ecx], 0
.text:0000EF18                 xor     eax, eax
.text:0000EF1A                 jmp     loc_10B1A
.text:0000EF1F ; ---------------------------------------------------------------------------
.text:0000EF1F                 xor     edx, edx
.text:0000EF21                 jnz     short loc_EF0C
.text:0000EF23
.text:0000EF23 loc_EF23:                               ; CODE XREF: _do_ssh1_login+1528j
.text:0000EF23                 cmp     [ebp+arg_C], 0
.text:0000EF27                 jnz     short loc_EED5
.text:0000EF29                 cmp     [ebp+arg_8], 0
.text:0000EF2D                 jg      short loc_EED5
.text:0000EF2F                 mov     eax, [ebp+arg_0]
.text:0000EF32                 mov     ecx, [eax+228h]
.text:0000EF38                 mov     [ebp+var_198], ecx
.text:0000EF3E                 mov     edx, [ebp+var_8C]
.text:0000EF44                 mov     eax, [ebp+arg_0]
.text:0000EF47                 mov     ecx, [eax+22Ch]
.text:0000EF4D                 mov     [edx+6Ch], ecx
.text:0000EF50
.text:0000EF50 loc_EF50:                               ; CODE XREF: _do_ssh1_login+150Bj
.text:0000EF50                 mov     edx, [ebp+var_8C]
.text:0000EF56                 mov     eax, [ebp+var_198]
.text:0000EF5C                 mov     [edx+64h], eax
.text:0000EF5F                 mov     ecx, [ebp+var_8C]
.text:0000EF65                 cmp     dword ptr [ecx+64h], 0
.text:0000EF69                 jz      loc_F977
.text:0000EF6F                 mov     edx, [ebp+var_8C]
.text:0000EF75                 cmp     dword ptr [edx+6Ch], 5
.text:0000EF79                 jl      loc_F977
.text:0000EF7F                 mov     eax, [ebp+var_8C]
.text:0000EF85                 mov     ecx, [eax+64h]
.text:0000EF88                 movzx   edx, byte ptr [ecx+4]
.text:0000EF8C                 cmp     edx, 2
.text:0000EF8F                 jnz     loc_F977
.text:0000EF95                 mov     eax, [ebp+var_8C]
.text:0000EF9B                 mov     ecx, [eax+64h]
.text:0000EF9E                 add     ecx, 5
.text:0000EFA1                 mov     edx, [ebp+var_8C]
.text:0000EFA7                 mov     [edx+68h], ecx
.text:0000EFAA                 mov     eax, [ebp+var_8C]
.text:0000EFB0                 mov     ecx, [eax+68h]
.text:0000EFB3                 movzx   edx, byte ptr [ecx]
.text:0000EFB6                 shl     edx, 18h
.text:0000EFB9                 mov     eax, [ebp+var_8C]
.text:0000EFBF                 mov     ecx, [eax+68h]
.text:0000EFC2                 movzx   eax, byte ptr [ecx+1]
.text:0000EFC6                 shl     eax, 10h
.text:0000EFC9                 or      edx, eax
.text:0000EFCB                 mov     ecx, [ebp+var_8C]
.text:0000EFD1                 mov     eax, [ecx+68h]
.text:0000EFD4                 movzx   ecx, byte ptr [eax+2]
.text:0000EFD8                 shl     ecx, 8
.text:0000EFDB                 or      edx, ecx
.text:0000EFDD                 mov     eax, [ebp+var_8C]
.text:0000EFE3                 mov     ecx, [eax+68h]
.text:0000EFE6                 movzx   eax, byte ptr [ecx+3]
.text:0000EFEA                 or      edx, eax
.text:0000EFEC                 push    edx
.text:0000EFED                 call    _toint
.text:0000EFF2                 add     esp, 4
.text:0000EFF5                 mov     ecx, [ebp+var_8C]
.text:0000EFFB                 mov     [ecx+74h], eax
.text:0000EFFE                 mov     edx, [ebp+var_8C]
.text:0000F004                 cmp     dword ptr [edx+74h], 0
.text:0000F008                 jge     short loc_F032
.text:0000F00A                 mov     eax, [ebp+var_8C]
.text:0000F010                 mov     ecx, [eax+74h]
.text:0000F013                 push    ecx
.text:0000F014                 push    offset $SG90356 ; "Pageant reported negative key count %d"
.text:0000F019                 mov     edx, [ebp+arg_0]
.text:0000F01C                 push    edx
.text:0000F01D                 call    _logeventf
.text:0000F022                 add     esp, 0Ch
.text:0000F025                 mov     eax, [ebp+var_8C]
.text:0000F02B                 mov     dword ptr [eax+74h], 0
.text:0000F032
.text:0000F032 loc_F032:                               ; CODE XREF: _do_ssh1_login+1640j
.text:0000F032                 mov     ecx, [ebp+var_8C]
.text:0000F038                 mov     edx, [ecx+68h]
.text:0000F03B                 add     edx, 4
.text:0000F03E                 mov     eax, [ebp+var_8C]
.text:0000F044                 mov     [eax+68h], edx
.text:0000F047                 mov     ecx, [ebp+var_8C]
.text:0000F04D                 mov     edx, [ecx+74h]
.text:0000F050                 push    edx
.text:0000F051                 push    offset $SG90357 ; "Pageant has %d SSH-1 keys"
.text:0000F056                 mov     eax, [ebp+arg_0]
.text:0000F059                 push    eax
.text:0000F05A                 call    _logeventf
.text:0000F05F                 add     esp, 0Ch
.text:0000F062                 mov     ecx, [ebp+var_8C]
.text:0000F068                 mov     dword ptr [ecx+70h], 0
.text:0000F06F                 jmp     short loc_F086
.text:0000F071 ; ---------------------------------------------------------------------------
.text:0000F071
.text:0000F071 loc_F071:                               ; CODE XREF: _do_ssh1_login:loc_F34Ej
.text:0000F071                                         ; _do_ssh1_login+1A02j ...
.text:0000F071                 mov     edx, [ebp+var_8C]
.text:0000F077                 mov     eax, [edx+70h]
.text:0000F07A                 add     eax, 1
.text:0000F07D                 mov     ecx, [ebp+var_8C]
.text:0000F083                 mov     [ecx+70h], eax
.text:0000F086
.text:0000F086 loc_F086:                               ; CODE XREF: _do_ssh1_login+16A7j
.text:0000F086                 mov     edx, [ebp+var_8C]
.text:0000F08C                 mov     eax, [ebp+var_8C]
.text:0000F092                 mov     ecx, [edx+70h]
.text:0000F095                 cmp     ecx, [eax+74h]
.text:0000F098                 jge     loc_F934
.text:0000F09E                 mov     edx, [ebp+var_8C]
.text:0000F0A4                 mov     eax, [edx+68h]
.text:0000F0A7                 mov     [ebp+Buf1], eax
.text:0000F0AD                 mov     ecx, [ebp+var_8C]
.text:0000F0B3                 mov     edx, [ecx+68h]
.text:0000F0B6                 add     edx, 4
.text:0000F0B9                 mov     eax, [ebp+var_8C]
.text:0000F0BF                 mov     [eax+68h], edx
.text:0000F0C2                 mov     [ebp+var_1A8], 0
.text:0000F0CC
.text:0000F0CC loc_F0CC:                               ; CODE XREF: _do_ssh1_login+18FEj
.text:0000F0CC                 mov     ecx, [ebp+var_8C]
.text:0000F0D2                 add     ecx, 88h ; 'ê'
.text:0000F0D8                 push    ecx
.text:0000F0D9                 mov     edx, [ebp+var_8C]
.text:0000F0DF                 mov     eax, [ebp+var_8C]
.text:0000F0E5                 mov     ecx, [edx+68h]
.text:0000F0E8                 sub     ecx, [eax+64h]
.text:0000F0EB                 mov     edx, [ebp+var_8C]
.text:0000F0F1                 mov     eax, [edx+6Ch]
.text:0000F0F4                 sub     eax, ecx
.text:0000F0F6                 push    eax
.text:0000F0F7                 call    _toint
.text:0000F0FC                 add     esp, 4
.text:0000F0FF                 push    eax
.text:0000F100                 mov     ecx, [ebp+var_8C]
.text:0000F106                 mov     edx, [ecx+68h]
.text:0000F109                 push    edx
.text:0000F10A                 call    _ssh1_read_bignum
.text:0000F10F                 add     esp, 0Ch
.text:0000F112                 mov     [ebp+var_1A4], eax
.text:0000F118                 cmp     [ebp+var_1A4], 0
.text:0000F11F                 jge     short loc_F126
.text:0000F121                 jmp     loc_F2CC
.text:0000F126 ; ---------------------------------------------------------------------------
.text:0000F126
.text:0000F126 loc_F126:                               ; CODE XREF: _do_ssh1_login+1757j
.text:0000F126                 mov     eax, [ebp+var_8C]
.text:0000F12C                 mov     ecx, [eax+68h]
.text:0000F12F                 add     ecx, [ebp+var_1A4]
.text:0000F135                 mov     edx, [ebp+var_8C]
.text:0000F13B                 mov     [edx+68h], ecx
.text:0000F13E                 mov     eax, [ebp+var_8C]
.text:0000F144                 add     eax, 84h ; 'ä'
.text:0000F149                 push    eax
.text:0000F14A                 mov     ecx, [ebp+var_8C]
.text:0000F150                 mov     edx, [ebp+var_8C]
.text:0000F156                 mov     eax, [ecx+68h]
.text:0000F159                 sub     eax, [edx+64h]
.text:0000F15C                 mov     ecx, [ebp+var_8C]
.text:0000F162                 mov     edx, [ecx+6Ch]
.text:0000F165                 sub     edx, eax
.text:0000F167                 push    edx
.text:0000F168                 call    _toint
.text:0000F16D                 add     esp, 4
.text:0000F170                 push    eax
.text:0000F171                 mov     eax, [ebp+var_8C]
.text:0000F177                 mov     ecx, [eax+68h]
.text:0000F17A                 push    ecx
.text:0000F17B                 call    _ssh1_read_bignum
.text:0000F180                 add     esp, 0Ch
.text:0000F183                 mov     [ebp+var_1A4], eax
.text:0000F189                 cmp     [ebp+var_1A4], 0
.text:0000F190                 jge     short loc_F197
.text:0000F192                 jmp     loc_F2CC
.text:0000F197 ; ---------------------------------------------------------------------------
.text:0000F197
.text:0000F197 loc_F197:                               ; CODE XREF: _do_ssh1_login+17C8j
.text:0000F197                 mov     edx, [ebp+var_8C]
.text:0000F19D                 mov     eax, [edx+68h]
.text:0000F1A0                 add     eax, [ebp+var_1A4]
.text:0000F1A6                 mov     ecx, [ebp+var_8C]
.text:0000F1AC                 mov     [ecx+68h], eax
.text:0000F1AF                 mov     edx, [ebp+var_8C]
.text:0000F1B5                 mov     eax, [ebp+var_8C]
.text:0000F1BB                 mov     ecx, [edx+68h]
.text:0000F1BE                 sub     ecx, [eax+64h]
.text:0000F1C1                 mov     edx, [ebp+var_8C]
.text:0000F1C7                 mov     eax, [edx+6Ch]
.text:0000F1CA                 sub     eax, ecx
.text:0000F1CC                 cmp     eax, 4
.text:0000F1CF                 jge     short loc_F1D6
.text:0000F1D1                 jmp     loc_F2CC
.text:0000F1D6 ; ---------------------------------------------------------------------------
.text:0000F1D6
.text:0000F1D6 loc_F1D6:                               ; CODE XREF: _do_ssh1_login+1807j
.text:0000F1D6                 mov     ecx, [ebp+var_8C]
.text:0000F1DC                 mov     edx, [ecx+68h]
.text:0000F1DF                 movzx   eax, byte ptr [edx]
.text:0000F1E2                 shl     eax, 18h
.text:0000F1E5                 mov     ecx, [ebp+var_8C]
.text:0000F1EB                 mov     edx, [ecx+68h]
.text:0000F1EE                 movzx   ecx, byte ptr [edx+1]
.text:0000F1F2                 shl     ecx, 10h
.text:0000F1F5                 or      eax, ecx
.text:0000F1F7                 mov     edx, [ebp+var_8C]
.text:0000F1FD                 mov     ecx, [edx+68h]
.text:0000F200                 movzx   edx, byte ptr [ecx+2]
.text:0000F204                 shl     edx, 8
.text:0000F207                 or      eax, edx
.text:0000F209                 mov     ecx, [ebp+var_8C]
.text:0000F20F                 mov     edx, [ecx+68h]
.text:0000F212                 movzx   ecx, byte ptr [edx+3]
.text:0000F216                 or      eax, ecx
.text:0000F218                 push    eax
.text:0000F219                 call    _toint
.text:0000F21E                 add     esp, 4
.text:0000F221                 mov     edx, [ebp+var_8C]
.text:0000F227                 mov     [edx+0A8h], eax
.text:0000F22D                 mov     eax, [ebp+var_8C]
.text:0000F233                 mov     ecx, [eax+68h]
.text:0000F236                 add     ecx, 4
.text:0000F239                 mov     edx, [ebp+var_8C]
.text:0000F23F                 mov     [edx+68h], ecx
.text:0000F242                 mov     eax, [ebp+var_8C]
.text:0000F248                 cmp     dword ptr [eax+0A8h], 0
.text:0000F24F                 jl      short loc_F285
.text:0000F251                 mov     ecx, [ebp+var_8C]
.text:0000F257                 mov     edx, [ebp+var_8C]
.text:0000F25D                 mov     eax, [ecx+68h]
.text:0000F260                 sub     eax, [edx+64h]
.text:0000F263                 mov     ecx, [ebp+var_8C]
.text:0000F269                 mov     edx, [ecx+6Ch]
.text:0000F26C                 sub     edx, eax
.text:0000F26E                 push    edx
.text:0000F26F                 call    _toint
.text:0000F274                 add     esp, 4
.text:0000F277                 mov     ecx, [ebp+var_8C]
.text:0000F27D                 cmp     eax, [ecx+0A8h]
.text:0000F283                 jge     short loc_F287
.text:0000F285
.text:0000F285 loc_F285:                               ; CODE XREF: _do_ssh1_login+1887j
.text:0000F285                 jmp     short loc_F2CC
.text:0000F287 ; ---------------------------------------------------------------------------
.text:0000F287
.text:0000F287 loc_F287:                               ; CODE XREF: _do_ssh1_login+18BBj
.text:0000F287                 mov     edx, [ebp+var_8C]
.text:0000F28D                 mov     eax, [ebp+var_8C]
.text:0000F293                 mov     ecx, [eax+68h]
.text:0000F296                 mov     [edx+0A4h], ecx
.text:0000F29C                 mov     edx, [ebp+var_8C]
.text:0000F2A2                 mov     eax, [edx+68h]
.text:0000F2A5                 mov     ecx, [ebp+var_8C]
.text:0000F2AB                 add     eax, [ecx+0A8h]
.text:0000F2B1                 mov     edx, [ebp+var_8C]
.text:0000F2B7                 mov     [edx+68h], eax
.text:0000F2BA                 mov     [ebp+var_1A8], 1
.text:0000F2C4                 xor     eax, eax
.text:0000F2C6                 jnz     loc_F0CC
.text:0000F2CC
.text:0000F2CC loc_F2CC:                               ; CODE XREF: _do_ssh1_login+1759j
.text:0000F2CC                                         ; _do_ssh1_login+17CAj ...
.text:0000F2CC                 cmp     [ebp+var_1A8], 0
.text:0000F2D3                 jnz     short loc_F2F1
.text:0000F2D5                 push    offset $SG90382 ; "Pageant key list packet was truncated"
.text:0000F2DA                 mov     ecx, [ebp+arg_0]
.text:0000F2DD                 mov     edx, [ecx+0E4h]
.text:0000F2E3                 push    edx
.text:0000F2E4                 call    _logevent
.text:0000F2E9                 add     esp, 8
.text:0000F2EC                 jmp     loc_F934
.text:0000F2F1 ; ---------------------------------------------------------------------------
.text:0000F2F1
.text:0000F2F1 loc_F2F1:                               ; CODE XREF: _do_ssh1_login+190Bj
.text:0000F2F1                 mov     eax, [ebp+var_8C]
.text:0000F2F7                 cmp     dword ptr [eax+40h], 0
.text:0000F2FB                 jz      short loc_F353
.text:0000F2FD                 mov     ecx, [ebp+var_8C]
.text:0000F303                 mov     edx, [ecx+44h]
.text:0000F306                 push    edx             ; Size
.text:0000F307                 mov     eax, [ebp+var_8C]
.text:0000F30D                 mov     ecx, [eax+40h]
.text:0000F310                 push    ecx             ; Buf2
.text:0000F311                 mov     edx, [ebp+Buf1]
.text:0000F317                 push    edx             ; Buf1
.text:0000F318                 call    _memcmp
.text:0000F31D                 add     esp, 0Ch
.text:0000F320                 test    eax, eax
.text:0000F322                 jnz     short loc_F34E
.text:0000F324                 mov     eax, [ebp+var_8C]
.text:0000F32A                 mov     ecx, [eax+70h]
.text:0000F32D                 push    ecx
.text:0000F32E                 push    offset $SG90385 ; "Pageant key #%d matches configured key "...
.text:0000F333                 mov     edx, [ebp+arg_0]
.text:0000F336                 push    edx
.text:0000F337                 call    _logeventf
.text:0000F33C                 add     esp, 0Ch
.text:0000F33F                 mov     eax, [ebp+var_8C]
.text:0000F345                 mov     dword ptr [eax+1Ch], 1
.text:0000F34C                 jmp     short loc_F353
.text:0000F34E ; ---------------------------------------------------------------------------
.text:0000F34E
.text:0000F34E loc_F34E:                               ; CODE XREF: _do_ssh1_login+195Aj
.text:0000F34E                 jmp     loc_F071
.text:0000F353 ; ---------------------------------------------------------------------------
.text:0000F353
.text:0000F353 loc_F353:                               ; CODE XREF: _do_ssh1_login+1933j
.text:0000F353                                         ; _do_ssh1_login+1984j
.text:0000F353                 mov     ecx, [ebp+var_8C]
.text:0000F359                 mov     edx, [ecx+70h]
.text:0000F35C                 push    edx
.text:0000F35D                 push    offset $SG90387 ; "Trying Pageant key #%d"
.text:0000F362                 mov     eax, [ebp+arg_0]
.text:0000F365                 push    eax
.text:0000F366                 call    _logeventf
.text:0000F36B                 add     esp, 0Ch
.text:0000F36E                 push    0
.text:0000F370                 mov     ecx, [ebp+var_8C]
.text:0000F376                 mov     edx, [ecx+84h]
.text:0000F37C                 push    edx
.text:0000F37D                 push    5
.text:0000F37F                 push    6
.text:0000F381                 mov     eax, [ebp+arg_0]
.text:0000F384                 push    eax
.text:0000F385                 call    _send_packet
.text:0000F38A                 add     esp, 14h
.text:0000F38D
.text:0000F38D loc_F38D:                               ; CODE XREF: _do_ssh1_login+19DAj
.text:0000F38D                                         ; _do_ssh1_login+19E0j
.text:0000F38D                 mov     ecx, [ebp+var_90]
.text:0000F393                 mov     dword ptr [ecx], 107Fh
.text:0000F399                 xor     eax, eax
.text:0000F39B                 jmp     loc_10B1A
.text:0000F3A0 ; ---------------------------------------------------------------------------
.text:0000F3A0
.text:0000F3A0 $LN189:                                 ; CODE XREF: _do_ssh1_login+156j
.text:0000F3A0                                         ; DATA XREF: .text:$LN420o
.text:0000F3A0                 xor     edx, edx        ; jumptable 0000DB1E case 169
.text:0000F3A2                 jnz     short loc_F38D
.text:0000F3A4                 cmp     [ebp+arg_C], 0
.text:0000F3A8                 jz      short loc_F38D
.text:0000F3AA                 mov     eax, [ebp+arg_C]
.text:0000F3AD                 cmp     dword ptr [eax+8], 7
.text:0000F3B1                 jz      short loc_F3CF
.text:0000F3B3                 push    offset $SG90396 ; "Key refused"
.text:0000F3B8                 mov     ecx, [ebp+arg_0]
.text:0000F3BB                 mov     edx, [ecx+0E4h]
.text:0000F3C1                 push    edx
.text:0000F3C2                 call    _logevent
.text:0000F3C7                 add     esp, 8
.text:0000F3CA                 jmp     loc_F071
.text:0000F3CF ; ---------------------------------------------------------------------------
.text:0000F3CF
.text:0000F3CF loc_F3CF:                               ; CODE XREF: _do_ssh1_login+19E9j
.text:0000F3CF                 push    offset $SG90397 ; "Received RSA challenge"
.text:0000F3D4                 mov     eax, [ebp+arg_0]
.text:0000F3D7                 mov     ecx, [eax+0E4h]
.text:0000F3DD                 push    ecx
.text:0000F3DE                 call    _logevent
.text:0000F3E3                 add     esp, 8
.text:0000F3E6                 mov     edx, [ebp+arg_C]
.text:0000F3E9                 push    edx
.text:0000F3EA                 call    _ssh1_pkt_getmp
.text:0000F3EF                 add     esp, 4
.text:0000F3F2                 mov     [ebp+var_2EC], eax
.text:0000F3F8                 mov     eax, [ebp+var_8C]
.text:0000F3FE                 mov     ecx, [ebp+var_2EC]
.text:0000F404                 mov     [eax+0A0h], ecx
.text:0000F40A                 cmp     [ebp+var_2EC], 0
.text:0000F411                 jnz     short loc_F444
.text:0000F413                 push    offset $SG90400 ; "Server's RSA challenge was badly format"...
.text:0000F418                 call    _dupprintf
.text:0000F41D                 add     esp, 4
.text:0000F420                 push    eax
.text:0000F421                 mov     edx, [ebp+arg_0]
.text:0000F424                 push    edx
.text:0000F425                 call    _bomb_out
.text:0000F42A                 add     esp, 8
.text:0000F42D
.text:0000F42D loc_F42D:                               ; CODE XREF: _do_ssh1_login+1A7Aj
.text:0000F42D                 mov     eax, [ebp+var_90]
.text:0000F433                 mov     dword ptr [eax], 0
.text:0000F439                 xor     eax, eax
.text:0000F43B                 jmp     loc_10B1A
.text:0000F440 ; ---------------------------------------------------------------------------
.text:0000F440                 xor     ecx, ecx
.text:0000F442                 jnz     short loc_F42D
.text:0000F444
.text:0000F444 loc_F444:                               ; CODE XREF: _do_ssh1_login+1A49j
.text:0000F444                 mov     [ebp+var_1C4], 5
.text:0000F44E                 mov     edx, [ebp+var_8C]
.text:0000F454                 mov     eax, [edx+88h]
.text:0000F45A                 push    eax
.text:0000F45B                 call    _ssh1_bignum_length
.text:0000F460                 add     esp, 4
.text:0000F463                 add     eax, [ebp+var_1C4]
.text:0000F469                 mov     [ebp+var_1C4], eax
.text:0000F46F                 mov     ecx, [ebp+var_8C]
.text:0000F475                 mov     edx, [ecx+84h]
.text:0000F47B                 push    edx
.text:0000F47C                 call    _ssh1_bignum_length
.text:0000F481                 add     esp, 4
.text:0000F484                 add     eax, [ebp+var_1C4]
.text:0000F48A                 mov     [ebp+var_1C4], eax
.text:0000F490                 mov     eax, [ebp+var_8C]
.text:0000F496                 mov     ecx, [eax+0A0h]
.text:0000F49C                 push    ecx
.text:0000F49D                 call    _ssh1_bignum_length
.text:0000F4A2                 add     esp, 4
.text:0000F4A5                 add     eax, [ebp+var_1C4]
.text:0000F4AB                 mov     [ebp+var_1C4], eax
.text:0000F4B1                 mov     edx, [ebp+var_1C4]
.text:0000F4B7                 add     edx, 10h
.text:0000F4BA                 mov     [ebp+var_1C4], edx
.text:0000F4C0                 mov     eax, [ebp+var_1C4]
.text:0000F4C6                 add     eax, 4
.text:0000F4C9                 mov     [ebp+var_1C4], eax
.text:0000F4CF                 push    1
.text:0000F4D1                 mov     ecx, [ebp+var_1C4]
.text:0000F4D7                 add     ecx, 4
.text:0000F4DA                 push    ecx
.text:0000F4DB                 call    _safemalloc
.text:0000F4E0                 add     esp, 8
.text:0000F4E3                 mov     [ebp+var_1AC], eax
.text:0000F4E9                 mov     edx, [ebp+var_1C4]
.text:0000F4EF                 sar     edx, 18h
.text:0000F4F2                 mov     eax, [ebp+var_1AC]
.text:0000F4F8                 mov     [eax], dl
.text:0000F4FA                 mov     ecx, [ebp+var_1C4]
.text:0000F500                 sar     ecx, 10h
.text:0000F503                 mov     edx, [ebp+var_1AC]
.text:0000F509                 mov     [edx+1], cl
.text:0000F50C                 mov     eax, [ebp+var_1C4]
.text:0000F512                 sar     eax, 8
.text:0000F515                 mov     ecx, [ebp+var_1AC]
.text:0000F51B                 mov     [ecx+2], al
.text:0000F51E                 mov     edx, [ebp+var_1AC]
.text:0000F524                 mov     al, byte ptr [ebp+var_1C4]
.text:0000F52A                 mov     [edx+3], al
.text:0000F52D                 mov     ecx, [ebp+var_1AC]
.text:0000F533                 add     ecx, 4
.text:0000F536                 mov     [ebp+var_1B0], ecx
.text:0000F53C                 mov     edx, [ebp+var_1B0]
.text:0000F542                 mov     byte ptr [edx], 3
.text:0000F545                 mov     eax, [ebp+var_1B0]
.text:0000F54B                 add     eax, 1
.text:0000F54E                 mov     [ebp+var_1B0], eax
.text:0000F554                 mov     ecx, [ebp+var_8C]
.text:0000F55A                 mov     edx, [ecx+84h]
.text:0000F560                 push    edx
.text:0000F561                 call    _bignum_bitcount
.text:0000F566                 add     esp, 4
.text:0000F569                 sar     eax, 18h
.text:0000F56C                 mov     ecx, [ebp+var_1B0]
.text:0000F572                 mov     [ecx], al
.text:0000F574                 mov     edx, [ebp+var_8C]
.text:0000F57A                 mov     eax, [edx+84h]
.text:0000F580                 push    eax
.text:0000F581                 call    _bignum_bitcount
.text:0000F586                 add     esp, 4
.text:0000F589                 sar     eax, 10h
.text:0000F58C                 mov     ecx, [ebp+var_1B0]
.text:0000F592                 mov     [ecx+1], al
.text:0000F595                 mov     edx, [ebp+var_8C]
.text:0000F59B                 mov     eax, [edx+84h]
.text:0000F5A1                 push    eax
.text:0000F5A2                 call    _bignum_bitcount
.text:0000F5A7                 add     esp, 4
.text:0000F5AA                 sar     eax, 8
.text:0000F5AD                 mov     ecx, [ebp+var_1B0]
.text:0000F5B3                 mov     [ecx+2], al
.text:0000F5B6                 mov     edx, [ebp+var_8C]
.text:0000F5BC                 mov     eax, [edx+84h]
.text:0000F5C2                 push    eax
.text:0000F5C3                 call    _bignum_bitcount
.text:0000F5C8                 add     esp, 4
.text:0000F5CB                 mov     ecx, [ebp+var_1B0]
.text:0000F5D1                 mov     [ecx+3], al
.text:0000F5D4                 mov     edx, [ebp+var_1B0]
.text:0000F5DA                 add     edx, 4
.text:0000F5DD                 mov     [ebp+var_1B0], edx
.text:0000F5E3                 mov     eax, [ebp+var_8C]
.text:0000F5E9                 mov     ecx, [eax+88h]
.text:0000F5EF                 push    ecx
.text:0000F5F0                 mov     edx, [ebp+var_1B0]
.text:0000F5F6                 push    edx
.text:0000F5F7                 call    _ssh1_write_bignum
.text:0000F5FC                 add     esp, 8
.text:0000F5FF                 add     eax, [ebp+var_1B0]
.text:0000F605                 mov     [ebp+var_1B0], eax
.text:0000F60B                 mov     eax, [ebp+var_8C]
.text:0000F611                 mov     ecx, [eax+84h]
.text:0000F617                 push    ecx
.text:0000F618                 mov     edx, [ebp+var_1B0]
.text:0000F61E                 push    edx
.text:0000F61F                 call    _ssh1_write_bignum
.text:0000F624                 add     esp, 8
.text:0000F627                 add     eax, [ebp+var_1B0]
.text:0000F62D                 mov     [ebp+var_1B0], eax
.text:0000F633                 mov     eax, [ebp+var_8C]
.text:0000F639                 mov     ecx, [eax+0A0h]
.text:0000F63F                 push    ecx
.text:0000F640                 mov     edx, [ebp+var_1B0]
.text:0000F646                 push    edx
.text:0000F647                 call    _ssh1_write_bignum
.text:0000F64C                 add     esp, 8
.text:0000F64F                 add     eax, [ebp+var_1B0]
.text:0000F655                 mov     [ebp+var_1B0], eax
.text:0000F65B                 push    10h             ; Size
.text:0000F65D                 mov     eax, [ebp+var_8C]
.text:0000F663                 add     eax, 2Ch ; ','
.text:0000F666                 push    eax             ; Src
.text:0000F667                 mov     ecx, [ebp+var_1B0]
.text:0000F66D                 push    ecx             ; Dst
.text:0000F66E                 call    _memcpy
.text:0000F673                 add     esp, 0Ch
.text:0000F676                 mov     edx, [ebp+var_1B0]
.text:0000F67C                 add     edx, 10h
.text:0000F67F                 mov     [ebp+var_1B0], edx
.text:0000F685                 mov     eax, [ebp+var_1B0]
.text:0000F68B                 mov     byte ptr [eax], 0
.text:0000F68E                 mov     ecx, [ebp+var_1B0]
.text:0000F694                 mov     byte ptr [ecx+1], 0
.text:0000F698                 mov     edx, [ebp+var_1B0]
.text:0000F69E                 mov     byte ptr [edx+2], 0
.text:0000F6A2                 mov     eax, [ebp+var_1B0]
.text:0000F6A8                 mov     byte ptr [eax+3], 1
.text:0000F6AC                 mov     ecx, [ebp+arg_0]
.text:0000F6AF                 push    ecx
.text:0000F6B0                 push    offset _ssh_agent_callback
.text:0000F6B5                 lea     edx, [ebp+var_1CC]
.text:0000F6BB                 push    edx
.text:0000F6BC                 lea     eax, [ebp+var_1BC]
.text:0000F6C2                 push    eax
.text:0000F6C3                 mov     ecx, [ebp+var_1C4]
.text:0000F6C9                 add     ecx, 4
.text:0000F6CC                 push    ecx
.text:0000F6CD                 mov     edx, [ebp+var_1AC]
.text:0000F6D3                 push    edx
.text:0000F6D4                 call    _agent_query
.text:0000F6D9                 add     esp, 18h
.text:0000F6DC                 test    eax, eax
.text:0000F6DE                 jnz     loc_F76D
.text:0000F6E4                 mov     eax, [ebp+var_1AC]
.text:0000F6EA                 push    eax
.text:0000F6EB                 call    _safefree
.text:0000F6F0                 add     esp, 4
.text:0000F6F3
.text:0000F6F3 loc_F6F3:                               ; CODE XREF: _do_ssh1_login+1D40j
.text:0000F6F3                                         ; _do_ssh1_login+1D7Dj ...
.text:0000F6F3                 mov     ecx, [ebp+var_90]
.text:0000F6F9                 mov     dword ptr [ecx], 10A4h
.text:0000F6FF                 xor     eax, eax
.text:0000F701                 jmp     loc_10B1A
.text:0000F706 ; ---------------------------------------------------------------------------
.text:0000F706
.text:0000F706 loc_F706:                               ; CODE XREF: _do_ssh1_login+B2j
.text:0000F706                 xor     edx, edx
.text:0000F708                 jnz     short loc_F6F3
.text:0000F70A                 cmp     [ebp+arg_C], 0
.text:0000F70E                 jz      short loc_F741
.text:0000F710                 push    offset $SG90433 ; "Unexpected data from server while waiti"...
.text:0000F715                 call    _dupprintf
.text:0000F71A                 add     esp, 4
.text:0000F71D                 push    eax
.text:0000F71E                 mov     eax, [ebp+arg_0]
.text:0000F721                 push    eax
.text:0000F722                 call    _bomb_out
.text:0000F727                 add     esp, 8
.text:0000F72A
.text:0000F72A loc_F72A:                               ; CODE XREF: _do_ssh1_login+1D77j
.text:0000F72A                 mov     ecx, [ebp+var_90]
.text:0000F730                 mov     dword ptr [ecx], 0
.text:0000F736                 xor     eax, eax
.text:0000F738                 jmp     loc_10B1A
.text:0000F73D ; ---------------------------------------------------------------------------
.text:0000F73D                 xor     edx, edx
.text:0000F73F                 jnz     short loc_F72A
.text:0000F741
.text:0000F741 loc_F741:                               ; CODE XREF: _do_ssh1_login+1D46j
.text:0000F741                 cmp     [ebp+arg_C], 0
.text:0000F745                 jnz     short loc_F6F3
.text:0000F747                 cmp     [ebp+arg_8], 0
.text:0000F74B                 jg      short loc_F6F3
.text:0000F74D                 mov     eax, [ebp+arg_0]
.text:0000F750                 mov     ecx, [eax+228h]
.text:0000F756                 mov     [ebp+var_1BC], ecx
.text:0000F75C                 mov     edx, [ebp+arg_0]
.text:0000F75F                 mov     eax, [edx+22Ch]
.text:0000F765                 mov     [ebp+var_1CC], eax
.text:0000F76B                 jmp     short loc_F77C
.text:0000F76D ; ---------------------------------------------------------------------------
.text:0000F76D
.text:0000F76D loc_F76D:                               ; CODE XREF: _do_ssh1_login+1D16j
.text:0000F76D                 mov     ecx, [ebp+var_1AC]
.text:0000F773                 push    ecx
.text:0000F774                 call    _safefree
.text:0000F779                 add     esp, 4
.text:0000F77C
.text:0000F77C loc_F77C:                               ; CODE XREF: _do_ssh1_login+1DA3j
.text:0000F77C                 mov     edx, [ebp+var_1BC]
.text:0000F782                 mov     [ebp+var_1B4], edx
.text:0000F788                 cmp     [ebp+var_1B4], 0
.text:0000F78F                 jz      loc_F8CB
.text:0000F795                 mov     eax, [ebp+var_1B4]
.text:0000F79B                 movsx   ecx, byte ptr [eax+4]
.text:0000F79F                 cmp     ecx, 4
.text:0000F7A2                 jnz     loc_F8A3
.text:0000F7A8                 push    offset $SG90440 ; "Sending Pageant's response"
.text:0000F7AD                 mov     edx, [ebp+arg_0]
.text:0000F7B0                 mov     eax, [edx+0E4h]
.text:0000F7B6                 push    eax
.text:0000F7B7                 call    _logevent
.text:0000F7BC                 add     esp, 8
.text:0000F7BF                 push    0
.text:0000F7C1                 push    10h
.text:0000F7C3                 mov     ecx, [ebp+var_1B4]
.text:0000F7C9                 add     ecx, 5
.text:0000F7CC                 push    ecx
.text:0000F7CD                 push    3
.text:0000F7CF                 push    8
.text:0000F7D1                 mov     edx, [ebp+arg_0]
.text:0000F7D4                 push    edx
.text:0000F7D5                 call    _send_packet
.text:0000F7DA                 add     esp, 18h
.text:0000F7DD                 mov     eax, [ebp+var_1B4]
.text:0000F7E3                 push    eax
.text:0000F7E4                 call    _safefree
.text:0000F7E9                 add     esp, 4
.text:0000F7EC
.text:0000F7EC loc_F7EC:                               ; CODE XREF: _do_ssh1_login+1E39j
.text:0000F7EC                                         ; _do_ssh1_login+1E3Fj
.text:0000F7EC                 mov     ecx, [ebp+var_90]
.text:0000F7F2                 mov     dword ptr [ecx], 10B8h
.text:0000F7F8                 xor     eax, eax
.text:0000F7FA                 jmp     loc_10B1A
.text:0000F7FF ; ---------------------------------------------------------------------------
.text:0000F7FF
.text:0000F7FF $LN162:                                 ; CODE XREF: _do_ssh1_login+1A8j
.text:0000F7FF                                         ; DATA XREF: .text:$LN421o
.text:0000F7FF                 xor     edx, edx        ; jumptable 0000DB70 case 0
.text:0000F801                 jnz     short loc_F7EC
.text:0000F803                 cmp     [ebp+arg_C], 0
.text:0000F807                 jz      short loc_F7EC
.text:0000F809                 mov     eax, [ebp+arg_C]
.text:0000F80C                 cmp     dword ptr [eax+8], 0Eh
.text:0000F810                 jnz     short loc_F88A
.text:0000F812                 push    offset $SG90449 ; "Pageant's response accepted"
.text:0000F817                 mov     ecx, [ebp+arg_0]
.text:0000F81A                 mov     edx, [ecx+0E4h]
.text:0000F820                 push    edx
.text:0000F821                 call    _logevent
.text:0000F826                 add     esp, 8
.text:0000F829                 mov     eax, dword ptr ds:_flags
.text:0000F82E                 and     eax, 1
.text:0000F831                 jz      short loc_F87B
.text:0000F833                 push    offset $SG90451 ; "Authenticated using RSA key \""
.text:0000F838                 mov     ecx, [ebp+arg_0]
.text:0000F83B                 push    ecx             ; int
.text:0000F83C                 call    _c_write_str
.text:0000F841                 add     esp, 8
.text:0000F844                 mov     edx, [ebp+var_8C]
.text:0000F84A                 mov     eax, [edx+0A8h]
.text:0000F850                 push    eax
.text:0000F851                 mov     ecx, [ebp+var_8C]
.text:0000F857                 mov     edx, [ecx+0A4h]
.text:0000F85D                 push    edx
.text:0000F85E                 mov     eax, [ebp+arg_0]
.text:0000F861                 push    eax
.text:0000F862                 call    _c_write
.text:0000F867                 add     esp, 0Ch
.text:0000F86A                 push    offset $SG90452 ; "\" from agent\r\n"
.text:0000F86F                 mov     ecx, [ebp+arg_0]
.text:0000F872                 push    ecx             ; int
.text:0000F873                 call    _c_write_str
.text:0000F878                 add     esp, 8
.text:0000F87B
.text:0000F87B loc_F87B:                               ; CODE XREF: _do_ssh1_login+1E69j
.text:0000F87B                 mov     edx, [ebp+var_8C]
.text:0000F881                 mov     dword ptr [edx+78h], 1
.text:0000F888                 jmp     short loc_F8A1
.text:0000F88A ; ---------------------------------------------------------------------------
.text:0000F88A
.text:0000F88A loc_F88A:                               ; CODE XREF: _do_ssh1_login+1E48j
.text:0000F88A                 push    offset $SG90454 ; "Pageant's response not accepted"
.text:0000F88F                 mov     eax, [ebp+arg_0]
.text:0000F892                 mov     ecx, [eax+0E4h]
.text:0000F898                 push    ecx
.text:0000F899                 call    _logevent
.text:0000F89E                 add     esp, 8
.text:0000F8A1
.text:0000F8A1 loc_F8A1:                               ; CODE XREF: _do_ssh1_login+1EC0j
.text:0000F8A1                 jmp     short loc_F8C9
.text:0000F8A3 ; ---------------------------------------------------------------------------
.text:0000F8A3
.text:0000F8A3 loc_F8A3:                               ; CODE XREF: _do_ssh1_login+1DDAj
.text:0000F8A3                 push    offset $SG90456 ; "Pageant failed to answer challenge"
.text:0000F8A8                 mov     edx, [ebp+arg_0]
.text:0000F8AB                 mov     eax, [edx+0E4h]
.text:0000F8B1                 push    eax
.text:0000F8B2                 call    _logevent
.text:0000F8B7                 add     esp, 8
.text:0000F8BA                 mov     ecx, [ebp+var_1B4]
.text:0000F8C0                 push    ecx
.text:0000F8C1                 call    _safefree
.text:0000F8C6                 add     esp, 4
.text:0000F8C9
.text:0000F8C9 loc_F8C9:                               ; CODE XREF: _do_ssh1_login:loc_F8A1j
.text:0000F8C9                 jmp     short loc_F8E2
.text:0000F8CB ; ---------------------------------------------------------------------------
.text:0000F8CB
.text:0000F8CB loc_F8CB:                               ; CODE XREF: _do_ssh1_login+1DC7j
.text:0000F8CB                 push    offset $SG90458 ; "No reply received from Pageant"
.text:0000F8D0                 mov     edx, [ebp+arg_0]
.text:0000F8D3                 mov     eax, [edx+0E4h]
.text:0000F8D9                 push    eax
.text:0000F8DA                 call    _logevent
.text:0000F8DF                 add     esp, 8
.text:0000F8E2
.text:0000F8E2 loc_F8E2:                               ; CODE XREF: _do_ssh1_login:loc_F8C9j
.text:0000F8E2                 mov     ecx, [ebp+var_8C]
.text:0000F8E8                 mov     edx, [ecx+88h]
.text:0000F8EE                 push    edx
.text:0000F8EF                 call    _freebn
.text:0000F8F4                 add     esp, 4
.text:0000F8F7                 mov     eax, [ebp+var_8C]
.text:0000F8FD                 mov     ecx, [eax+84h]
.text:0000F903                 push    ecx
.text:0000F904                 call    _freebn
.text:0000F909                 add     esp, 4
.text:0000F90C                 mov     edx, [ebp+var_8C]
.text:0000F912                 mov     eax, [edx+0A0h]
.text:0000F918                 push    eax
.text:0000F919                 call    _freebn
.text:0000F91E                 add     esp, 4
.text:0000F921                 mov     ecx, [ebp+var_8C]
.text:0000F927                 cmp     dword ptr [ecx+78h], 0
.text:0000F92B                 jz      short loc_F92F
.text:0000F92D                 jmp     short loc_F934
.text:0000F92F ; ---------------------------------------------------------------------------
.text:0000F92F
.text:0000F92F loc_F92F:                               ; CODE XREF: _do_ssh1_login+1F63j
.text:0000F92F                 jmp     loc_F071
.text:0000F934 ; ---------------------------------------------------------------------------
.text:0000F934
.text:0000F934 loc_F934:                               ; CODE XREF: _do_ssh1_login+16D0j
.text:0000F934                                         ; _do_ssh1_login+1924j ...
.text:0000F934                 mov     edx, [ebp+var_8C]
.text:0000F93A                 mov     eax, [edx+64h]
.text:0000F93D                 push    eax
.text:0000F93E                 call    _safefree
.text:0000F943                 add     esp, 4
.text:0000F946                 mov     ecx, [ebp+var_8C]
.text:0000F94C                 cmp     dword ptr [ecx+40h], 0
.text:0000F950                 jz      short loc_F975
.text:0000F952                 mov     edx, [ebp+var_8C]
.text:0000F958                 cmp     dword ptr [edx+1Ch], 0
.text:0000F95C                 jnz     short loc_F975
.text:0000F95E                 push    offset $SG90461 ; "Configured key file not in Pageant"
.text:0000F963                 mov     eax, [ebp+arg_0]
.text:0000F966                 mov     ecx, [eax+0E4h]
.text:0000F96C                 push    ecx
.text:0000F96D                 call    _logevent
.text:0000F972                 add     esp, 8
.text:0000F975
.text:0000F975 loc_F975:                               ; CODE XREF: _do_ssh1_login+1F88j
.text:0000F975                                         ; _do_ssh1_login+1F94j
.text:0000F975                 jmp     short loc_F98E
.text:0000F977 ; ---------------------------------------------------------------------------
.text:0000F977
.text:0000F977 loc_F977:                               ; CODE XREF: _do_ssh1_login+15A1j
.text:0000F977                                         ; _do_ssh1_login+15B1j ...
.text:0000F977                 push    offset $SG90463 ; "Failed to get reply from Pageant"
.text:0000F97C                 mov     edx, [ebp+arg_0]
.text:0000F97F                 mov     eax, [edx+0E4h]
.text:0000F985                 push    eax
.text:0000F986                 call    _logevent
.text:0000F98B                 add     esp, 8
.text:0000F98E
.text:0000F98E loc_F98E:                               ; CODE XREF: _do_ssh1_login:loc_F975j
.text:0000F98E                 mov     ecx, [ebp+var_8C]
.text:0000F994                 cmp     dword ptr [ecx+78h], 0
.text:0000F998                 jz      short loc_F99F
.text:0000F99A                 jmp     loc_10AC2
.text:0000F99F ; ---------------------------------------------------------------------------
.text:0000F99F
.text:0000F99F loc_F99F:                               ; CODE XREF: _do_ssh1_login+1455j
.text:0000F99F                                         ; _do_ssh1_login+1462j ...
.text:0000F99F                 mov     edx, [ebp+var_8C]
.text:0000F9A5                 cmp     dword ptr [edx+40h], 0
.text:0000F9A9                 jz      loc_FFDD
.text:0000F9AF                 mov     eax, [ebp+var_8C]
.text:0000F9B5                 cmp     dword ptr [eax+1Ch], 0
.text:0000F9B9                 jnz     loc_FFDD
.text:0000F9BF                 mov     ecx, dword ptr ds:_flags
.text:0000F9C5                 and     ecx, 1
.text:0000F9C8                 jz      short loc_F9DB
.text:0000F9CA                 push    offset $SG90468 ; "Trying public key authentication.\r\n"
.text:0000F9CF                 mov     edx, [ebp+arg_0]
.text:0000F9D2                 push    edx             ; int
.text:0000F9D3                 call    _c_write_str
.text:0000F9D8                 add     esp, 8
.text:0000F9DB
.text:0000F9DB loc_F9DB:                               ; CODE XREF: _do_ssh1_login+2000j
.text:0000F9DB                 push    1Eh
.text:0000F9DD                 mov     eax, [ebp+arg_0]
.text:0000F9E0                 mov     ecx, [eax+21Ch]
.text:0000F9E6                 push    ecx
.text:0000F9E7                 call    _conf_get_filename
.text:0000F9EC                 add     esp, 8
.text:0000F9EF                 mov     edx, [ebp+var_8C]
.text:0000F9F5                 mov     [edx+0B0h], eax
.text:0000F9FB                 mov     eax, [ebp+var_8C]
.text:0000FA01                 mov     ecx, [eax+0B0h]
.text:0000FA07                 push    ecx
.text:0000FA08                 call    _filename_to_str
.text:0000FA0D                 add     esp, 4
.text:0000FA10                 push    eax
.text:0000FA11                 push    offset $SG90469 ; "Trying public key \"%s\""
.text:0000FA16                 mov     edx, [ebp+arg_0]
.text:0000FA19                 push    edx
.text:0000FA1A                 call    _logeventf
.text:0000FA1F                 add     esp, 0Ch
.text:0000FA22                 mov     eax, [ebp+var_8C]
.text:0000FA28                 mov     dword ptr [eax+1Ch], 1
.text:0000FA2F                 mov     [ebp+var_1D4], 0
.text:0000FA39
.text:0000FA39 loc_FA39:                               ; CODE XREF: _do_ssh1_login:loc_FD4Fj
.text:0000FA39                 cmp     [ebp+var_1D4], 0
.text:0000FA40                 jnz     loc_FD54
.text:0000FA46                 mov     [ebp+Str], 0
.text:0000FA50                 mov     ecx, [ebp+var_8C]
.text:0000FA56                 cmp     dword ptr [ecx+4Ch], 0
.text:0000FA5A                 jnz     short loc_FA87
.text:0000FA5C                 mov     edx, dword ptr ds:_flags
.text:0000FA62                 and     edx, 1
.text:0000FA65                 jz      short loc_FA78
.text:0000FA67                 push    offset $SG90478 ; "No passphrase required.\r\n"
.text:0000FA6C                 mov     eax, [ebp+arg_0]
.text:0000FA6F                 push    eax             ; int
.text:0000FA70                 call    _c_write_str
.text:0000FA75                 add     esp, 8
.text:0000FA78
.text:0000FA78 loc_FA78:                               ; CODE XREF: _do_ssh1_login+209Dj
.text:0000FA78                 mov     [ebp+Str], 0
.text:0000FA82                 jmp     loc_FBEF
.text:0000FA87 ; ---------------------------------------------------------------------------
.text:0000FA87
.text:0000FA87 loc_FA87:                               ; CODE XREF: _do_ssh1_login+2092j
.text:0000FA87                 mov     ecx, [ebp+arg_0]
.text:0000FA8A                 mov     edx, [ecx+0E4h]
.text:0000FA90                 push    edx
.text:0000FA91                 call    _new_prompts
.text:0000FA96                 add     esp, 4
.text:0000FA99                 mov     ecx, [ebp+var_8C]
.text:0000FA9F                 mov     [ecx+50h], eax
.text:0000FAA2                 mov     edx, [ebp+var_8C]
.text:0000FAA8                 mov     eax, [edx+50h]
.text:0000FAAB                 mov     dword ptr [eax], 0
.text:0000FAB1                 push    offset $SG90482 ; "SSH key passphrase"
.text:0000FAB6                 call    _dupstr
.text:0000FABB                 add     esp, 4
.text:0000FABE                 mov     ecx, [ebp+var_8C]
.text:0000FAC4                 mov     edx, [ecx+50h]
.text:0000FAC7                 mov     [edx+4], eax
.text:0000FACA                 push    0
.text:0000FACC                 mov     eax, [ebp+var_8C]
.text:0000FAD2                 mov     ecx, [eax+48h]
.text:0000FAD5                 push    ecx
.text:0000FAD6                 push    offset $SG90483 ; "Passphrase for key \"%.100s\": "
.text:0000FADB                 call    _dupprintf
.text:0000FAE0                 add     esp, 8
.text:0000FAE3                 push    eax
.text:0000FAE4                 mov     edx, [ebp+var_8C]
.text:0000FAEA                 mov     eax, [edx+50h]
.text:0000FAED                 push    eax
.text:0000FAEE                 call    _add_prompt
.text:0000FAF3                 add     esp, 0Ch
.text:0000FAF6                 push    0
.text:0000FAF8                 push    0
.text:0000FAFA                 mov     ecx, [ebp+var_8C]
.text:0000FB00                 mov     edx, [ecx+50h]
.text:0000FB03                 push    edx
.text:0000FB04                 call    _get_userpass_input
.text:0000FB09                 add     esp, 0Ch
.text:0000FB0C                 mov     [ebp+var_1E8], eax
.text:0000FB12
.text:0000FB12 loc_FB12:                               ; CODE XREF: _do_ssh1_login+21AAj
.text:0000FB12                 cmp     [ebp+var_1E8], 0
.text:0000FB19                 jge     short loc_FB74
.text:0000FB1B                 mov     eax, [ebp+arg_0]
.text:0000FB1E                 mov     dword ptr [eax+0D8h], 1
.text:0000FB28
.text:0000FB28 loc_FB28:                               ; CODE XREF: _do_ssh1_login+2175j
.text:0000FB28                                         ; _do_ssh1_login+217Bj
.text:0000FB28                 mov     ecx, [ebp+var_90]
.text:0000FB2E                 mov     dword ptr [ecx], 1101h
.text:0000FB34                 xor     eax, eax
.text:0000FB36                 jmp     loc_10B1A
.text:0000FB3B ; ---------------------------------------------------------------------------
.text:0000FB3B
.text:0000FB3B $LN137:                                 ; CODE XREF: _do_ssh1_login+1A8j
.text:0000FB3B                                         ; DATA XREF: .text:$LN421o
.text:0000FB3B                 xor     edx, edx        ; jumptable 0000DB70 case 73
.text:0000FB3D                 jnz     short loc_FB28
.text:0000FB3F                 cmp     [ebp+arg_C], 0
.text:0000FB43                 jnz     short loc_FB28
.text:0000FB45                 mov     eax, [ebp+arg_8]
.text:0000FB48                 push    eax
.text:0000FB49                 mov     ecx, [ebp+arg_4]
.text:0000FB4C                 push    ecx
.text:0000FB4D                 mov     edx, [ebp+var_8C]
.text:0000FB53                 mov     eax, [edx+50h]
.text:0000FB56                 push    eax
.text:0000FB57                 call    _get_userpass_input
.text:0000FB5C                 add     esp, 0Ch
.text:0000FB5F                 mov     [ebp+var_1E8], eax
.text:0000FB65                 mov     ecx, [ebp+arg_0]
.text:0000FB68                 mov     dword ptr [ecx+0D8h], 0
.text:0000FB72                 jmp     short loc_FB12
.text:0000FB74 ; ---------------------------------------------------------------------------
.text:0000FB74
.text:0000FB74 loc_FB74:                               ; CODE XREF: _do_ssh1_login+2151j
.text:0000FB74                 cmp     [ebp+var_1E8], 0
.text:0000FB7B                 jnz     short loc_FBBD
.text:0000FB7D                 mov     edx, [ebp+var_8C]
.text:0000FB83                 mov     eax, [edx+50h]
.text:0000FB86                 push    eax
.text:0000FB87                 call    _free_prompts
.text:0000FB8C                 add     esp, 4
.text:0000FB8F                 push    1               ; int
.text:0000FB91                 push    0               ; int
.text:0000FB93                 push    offset $SG90497 ; "Unable to authenticate"
.text:0000FB98                 push    0               ; int
.text:0000FB9A                 mov     ecx, [ebp+arg_0]
.text:0000FB9D                 push    ecx             ; int
.text:0000FB9E                 call    _ssh_disconnect
.text:0000FBA3                 add     esp, 14h
.text:0000FBA6
.text:0000FBA6 loc_FBA6:                               ; CODE XREF: _do_ssh1_login+21F3j
.text:0000FBA6                 mov     edx, [ebp+var_90]
.text:0000FBAC                 mov     dword ptr [edx], 0
.text:0000FBB2                 xor     eax, eax
.text:0000FBB4                 jmp     loc_10B1A
.text:0000FBB9 ; ---------------------------------------------------------------------------
.text:0000FBB9                 xor     eax, eax
.text:0000FBBB                 jnz     short loc_FBA6
.text:0000FBBD
.text:0000FBBD loc_FBBD:                               ; CODE XREF: _do_ssh1_login+21B3j
.text:0000FBBD                 mov     ecx, [ebp+var_8C]
.text:0000FBC3                 mov     edx, [ecx+50h]
.text:0000FBC6                 mov     eax, [edx+18h]
.text:0000FBC9                 mov     ecx, [eax]
.text:0000FBCB                 mov     edx, [ecx+8]
.text:0000FBCE                 push    edx
.text:0000FBCF                 call    _dupstr
.text:0000FBD4                 add     esp, 4
.text:0000FBD7                 mov     [ebp+Str], eax
.text:0000FBDD                 mov     eax, [ebp+var_8C]
.text:0000FBE3                 mov     ecx, [eax+50h]
.text:0000FBE6                 push    ecx
.text:0000FBE7                 call    _free_prompts
.text:0000FBEC                 add     esp, 4
.text:0000FBEF
.text:0000FBEF loc_FBEF:                               ; CODE XREF: _do_ssh1_login+20BAj
.text:0000FBEF                 push    1Eh
.text:0000FBF1                 mov     edx, [ebp+arg_0]
.text:0000FBF4                 mov     eax, [edx+21Ch]
.text:0000FBFA                 push    eax
.text:0000FBFB                 call    _conf_get_filename
.text:0000FC00                 add     esp, 8
.text:0000FC03                 mov     ecx, [ebp+var_8C]
.text:0000FC09                 mov     [ecx+0B0h], eax
.text:0000FC0F                 lea     edx, [ebp+var_1E0]
.text:0000FC15                 push    edx
.text:0000FC16                 mov     eax, [ebp+Str]
.text:0000FC1C                 push    eax
.text:0000FC1D                 mov     ecx, [ebp+var_8C]
.text:0000FC23                 add     ecx, 7Ch ; '|'
.text:0000FC26                 push    ecx
.text:0000FC27                 mov     edx, [ebp+var_8C]
.text:0000FC2D                 mov     eax, [edx+0B0h]
.text:0000FC33                 push    eax
.text:0000FC34                 call    _loadrsakey
.text:0000FC39                 add     esp, 10h
.text:0000FC3C                 mov     [ebp+var_10], eax
.text:0000FC3F                 cmp     [ebp+Str], 0
.text:0000FC46                 jz      short loc_FC76
.text:0000FC48                 mov     ecx, [ebp+Str]
.text:0000FC4E                 push    ecx             ; Str
.text:0000FC4F                 call    _strlen
.text:0000FC54                 add     esp, 4
.text:0000FC57                 push    eax
.text:0000FC58                 mov     edx, [ebp+Str]
.text:0000FC5E                 push    edx
.text:0000FC5F                 call    _smemclr
.text:0000FC64                 add     esp, 8
.text:0000FC67                 mov     eax, [ebp+Str]
.text:0000FC6D                 push    eax
.text:0000FC6E                 call    _safefree
.text:0000FC73                 add     esp, 4
.text:0000FC76
.text:0000FC76 loc_FC76:                               ; CODE XREF: _do_ssh1_login+227Ej
.text:0000FC76                 cmp     [ebp+var_10], 1
.text:0000FC7A                 jnz     short loc_FC8B
.text:0000FC7C                 mov     [ebp+var_1D4], 1
.text:0000FC86                 jmp     loc_FD4F
.text:0000FC8B ; ---------------------------------------------------------------------------
.text:0000FC8B
.text:0000FC8B loc_FC8B:                               ; CODE XREF: _do_ssh1_login+22B2j
.text:0000FC8B                 cmp     [ebp+var_10], 0
.text:0000FC8F                 jnz     short loc_FD07
.text:0000FC91                 push    offset $SG90505 ; "Couldn't load private key from "
.text:0000FC96                 mov     ecx, [ebp+arg_0]
.text:0000FC99                 push    ecx             ; int
.text:0000FC9A                 call    _c_write_str
.text:0000FC9F                 add     esp, 8
.text:0000FCA2                 mov     edx, [ebp+var_8C]
.text:0000FCA8                 mov     eax, [edx+0B0h]
.text:0000FCAE                 push    eax
.text:0000FCAF                 call    _filename_to_str
.text:0000FCB4                 add     esp, 4
.text:0000FCB7                 push    eax             ; Str
.text:0000FCB8                 mov     ecx, [ebp+arg_0]
.text:0000FCBB                 push    ecx             ; int
.text:0000FCBC                 call    _c_write_str
.text:0000FCC1                 add     esp, 8
.text:0000FCC4                 push    offset $SG90506 ; Str
.text:0000FCC9                 mov     edx, [ebp+arg_0]
.text:0000FCCC                 push    edx             ; int
.text:0000FCCD                 call    _c_write_str
.text:0000FCD2                 add     esp, 8
.text:0000FCD5                 mov     eax, [ebp+var_1E0]
.text:0000FCDB                 push    eax             ; Str
.text:0000FCDC                 mov     ecx, [ebp+arg_0]
.text:0000FCDF                 push    ecx             ; int
.text:0000FCE0                 call    _c_write_str
.text:0000FCE5                 add     esp, 8
.text:0000FCE8                 push    offset $SG90507 ; ").\r\n"
.text:0000FCED                 mov     edx, [ebp+arg_0]
.text:0000FCF0                 push    edx             ; int
.text:0000FCF1                 call    _c_write_str
.text:0000FCF6                 add     esp, 8
.text:0000FCF9                 mov     [ebp+var_1D4], 0
.text:0000FD03                 jmp     short loc_FD54
.text:0000FD05 ; ---------------------------------------------------------------------------
.text:0000FD05                 jmp     short loc_FD4F
.text:0000FD07 ; ---------------------------------------------------------------------------
.text:0000FD07
.text:0000FD07 loc_FD07:                               ; CODE XREF: _do_ssh1_login+22C7j
.text:0000FD07                 cmp     [ebp+var_10], 0FFFFFFFFh
.text:0000FD0B                 jnz     short loc_FD2A
.text:0000FD0D                 push    offset $SG90510 ; "Wrong passphrase.\r\n"
.text:0000FD12                 mov     eax, [ebp+arg_0]
.text:0000FD15                 push    eax             ; int
.text:0000FD16                 call    _c_write_str
.text:0000FD1B                 add     esp, 8
.text:0000FD1E                 mov     [ebp+var_1D4], 0
.text:0000FD28                 jmp     short loc_FD4F
.text:0000FD2A ; ---------------------------------------------------------------------------
.text:0000FD2A
.text:0000FD2A loc_FD2A:                               ; CODE XREF: _do_ssh1_login+2343j
.text:0000FD2A                 xor     ecx, ecx
.text:0000FD2C                 jnz     short loc_FD45
.text:0000FD2E                 push    1129h           ; Line
.text:0000FD33                 push    offset $SG90513 ; "..\\..\\..\\ssh.c"
.text:0000FD38                 push    offset $SG90514 ; "0 && \"unexpected return from loadrsake"...
.text:0000FD3D                 call    __wassert
.text:0000FD42 ; ---------------------------------------------------------------------------
.text:0000FD42                 add     esp, 0Ch
.text:0000FD45
.text:0000FD45 loc_FD45:                               ; CODE XREF: _do_ssh1_login+2364j
.text:0000FD45                 mov     [ebp+var_1D4], 0
.text:0000FD4F
.text:0000FD4F loc_FD4F:                               ; CODE XREF: _do_ssh1_login+22BEj
.text:0000FD4F                                         ; _do_ssh1_login+233Dj ...
.text:0000FD4F                 jmp     loc_FA39
.text:0000FD54 ; ---------------------------------------------------------------------------
.text:0000FD54
.text:0000FD54 loc_FD54:                               ; CODE XREF: _do_ssh1_login+2078j
.text:0000FD54                                         ; _do_ssh1_login+233Bj
.text:0000FD54                 cmp     [ebp+var_1D4], 0
.text:0000FD5B                 jz      loc_FFDD
.text:0000FD61                 push    0
.text:0000FD63                 mov     eax, [ebp+var_8C]
.text:0000FD69                 mov     ecx, [eax+84h]
.text:0000FD6F                 push    ecx
.text:0000FD70                 push    5
.text:0000FD72                 push    6
.text:0000FD74                 mov     edx, [ebp+arg_0]
.text:0000FD77                 push    edx
.text:0000FD78                 call    _send_packet
.text:0000FD7D                 add     esp, 14h
.text:0000FD80
.text:0000FD80 loc_FD80:                               ; CODE XREF: _do_ssh1_login+23CDj
.text:0000FD80                                         ; _do_ssh1_login+23D3j
.text:0000FD80                 mov     eax, [ebp+var_90]
.text:0000FD86                 mov     dword ptr [eax], 1136h
.text:0000FD8C                 xor     eax, eax
.text:0000FD8E                 jmp     loc_10B1A
.text:0000FD93 ; ---------------------------------------------------------------------------
.text:0000FD93
.text:0000FD93 $LN118:                                 ; CODE XREF: _do_ssh1_login+1A8j
.text:0000FD93                                         ; DATA XREF: .text:$LN421o
.text:0000FD93                 xor     ecx, ecx        ; jumptable 0000DB70 case 126
.text:0000FD95                 jnz     short loc_FD80
.text:0000FD97                 cmp     [ebp+arg_C], 0
.text:0000FD9B                 jz      short loc_FD80
.text:0000FD9D                 mov     edx, [ebp+arg_C]
.text:0000FDA0                 cmp     dword ptr [edx+8], 0Fh
.text:0000FDA4                 jnz     short loc_FDBC
.text:0000FDA6                 push    offset $SG90524 ; "Server refused our public key.\r\n"
.text:0000FDAB                 mov     eax, [ebp+arg_0]
.text:0000FDAE                 push    eax             ; int
.text:0000FDAF                 call    _c_write_str
.text:0000FDB4                 add     esp, 8
.text:0000FDB7                 jmp     loc_EDED
.text:0000FDBC ; ---------------------------------------------------------------------------
.text:0000FDBC
.text:0000FDBC loc_FDBC:                               ; CODE XREF: _do_ssh1_login+23DCj
.text:0000FDBC                 mov     ecx, [ebp+arg_C]
.text:0000FDBF                 cmp     dword ptr [ecx+8], 7
.text:0000FDC3                 jz      short loc_FDF6
.text:0000FDC5                 push    offset $SG90526 ; "Bizarre response to offer of public key"
.text:0000FDCA                 call    _dupprintf
.text:0000FDCF                 add     esp, 4
.text:0000FDD2                 push    eax
.text:0000FDD3                 mov     edx, [ebp+arg_0]
.text:0000FDD6                 push    edx
.text:0000FDD7                 call    _bomb_out
.text:0000FDDC                 add     esp, 8
.text:0000FDDF
.text:0000FDDF loc_FDDF:                               ; CODE XREF: _do_ssh1_login+242Cj
.text:0000FDDF                 mov     eax, [ebp+var_90]
.text:0000FDE5                 mov     dword ptr [eax], 0
.text:0000FDEB                 xor     eax, eax
.text:0000FDED                 jmp     loc_10B1A
.text:0000FDF2 ; ---------------------------------------------------------------------------
.text:0000FDF2                 xor     ecx, ecx
.text:0000FDF4                 jnz     short loc_FDDF
.text:0000FDF6
.text:0000FDF6 loc_FDF6:                               ; CODE XREF: _do_ssh1_login+23FBj
.text:0000FDF6                 mov     edx, [ebp+arg_C]
.text:0000FDF9                 push    edx
.text:0000FDFA                 call    _ssh1_pkt_getmp
.text:0000FDFF                 add     esp, 4
.text:0000FE02                 mov     [ebp+var_218], eax
.text:0000FE08                 cmp     [ebp+var_218], 0
.text:0000FE0F                 jnz     short loc_FE42
.text:0000FE11                 push    offset $SG90536 ; "Server's RSA challenge was badly format"...
.text:0000FE16                 call    _dupprintf
.text:0000FE1B                 add     esp, 4
.text:0000FE1E                 push    eax
.text:0000FE1F                 mov     eax, [ebp+arg_0]
.text:0000FE22                 push    eax
.text:0000FE23                 call    _bomb_out
.text:0000FE28                 add     esp, 8
.text:0000FE2B
.text:0000FE2B loc_FE2B:                               ; CODE XREF: _do_ssh1_login+2478j
.text:0000FE2B                 mov     ecx, [ebp+var_90]
.text:0000FE31                 mov     dword ptr [ecx], 0
.text:0000FE37                 xor     eax, eax
.text:0000FE39                 jmp     loc_10B1A
.text:0000FE3E ; ---------------------------------------------------------------------------
.text:0000FE3E                 xor     edx, edx
.text:0000FE40                 jnz     short loc_FE2B
.text:0000FE42
.text:0000FE42 loc_FE42:                               ; CODE XREF: _do_ssh1_login+2447j
.text:0000FE42                 mov     eax, [ebp+var_8C]
.text:0000FE48                 add     eax, 7Ch ; '|'
.text:0000FE4B                 push    eax
.text:0000FE4C                 mov     ecx, [ebp+var_218]
.text:0000FE52                 push    ecx
.text:0000FE53                 call    _rsadecrypt
.text:0000FE58                 add     esp, 8
.text:0000FE5B                 mov     [ebp+var_21C], eax
.text:0000FE61                 mov     edx, [ebp+var_8C]
.text:0000FE67                 mov     eax, [edx+8Ch]
.text:0000FE6D                 push    eax
.text:0000FE6E                 call    _freebn
.text:0000FE73                 add     esp, 4
.text:0000FE76                 mov     [ebp+var_1EC], 0
.text:0000FE80                 jmp     short loc_FE91
.text:0000FE82 ; ---------------------------------------------------------------------------
.text:0000FE82
.text:0000FE82 loc_FE82:                               ; CODE XREF: _do_ssh1_login+24FAj
.text:0000FE82                 mov     ecx, [ebp+var_1EC]
.text:0000FE88                 add     ecx, 1
.text:0000FE8B                 mov     [ebp+var_1EC], ecx
.text:0000FE91
.text:0000FE91 loc_FE91:                               ; CODE XREF: _do_ssh1_login+24B8j
.text:0000FE91                 cmp     [ebp+var_1EC], 20h ; ' '
.text:0000FE98                 jge     short loc_FEC4
.text:0000FE9A                 mov     edx, 1Fh
.text:0000FE9F                 sub     edx, [ebp+var_1EC]
.text:0000FEA5                 push    edx
.text:0000FEA6                 mov     eax, [ebp+var_21C]
.text:0000FEAC                 push    eax
.text:0000FEAD                 call    _bignum_byte
.text:0000FEB2                 add     esp, 8
.text:0000FEB5                 mov     ecx, [ebp+var_1EC]
.text:0000FEBB                 mov     [ebp+ecx+var_210], al
.text:0000FEC2                 jmp     short loc_FE82
.text:0000FEC4 ; ---------------------------------------------------------------------------
.text:0000FEC4
.text:0000FEC4 loc_FEC4:                               ; CODE XREF: _do_ssh1_login+24D0j
.text:0000FEC4                 lea     edx, [ebp+var_84]
.text:0000FECA                 push    edx
.text:0000FECB                 call    _MD5Init
.text:0000FED0                 add     esp, 4
.text:0000FED3                 push    20h ; ' '
.text:0000FED5                 lea     eax, [ebp+var_210]
.text:0000FEDB                 push    eax
.text:0000FEDC                 lea     ecx, [ebp+var_84]
.text:0000FEE2                 push    ecx
.text:0000FEE3                 call    _MD5Update
.text:0000FEE8                 add     esp, 0Ch
.text:0000FEEB                 push    10h
.text:0000FEED                 mov     edx, [ebp+var_8C]
.text:0000FEF3                 add     edx, 2Ch ; ','
.text:0000FEF6                 push    edx
.text:0000FEF7                 lea     eax, [ebp+var_84]
.text:0000FEFD                 push    eax
.text:0000FEFE                 call    _MD5Update
.text:0000FF03                 add     esp, 0Ch
.text:0000FF06                 lea     ecx, [ebp+var_84]
.text:0000FF0C                 push    ecx
.text:0000FF0D                 lea     edx, [ebp+var_210]
.text:0000FF13                 push    edx
.text:0000FF14                 call    _MD5Final
.text:0000FF19                 add     esp, 8
.text:0000FF1C                 push    0
.text:0000FF1E                 push    10h
.text:0000FF20                 lea     eax, [ebp+var_210]
.text:0000FF26                 push    eax
.text:0000FF27                 push    3
.text:0000FF29                 push    8
.text:0000FF2B                 mov     ecx, [ebp+arg_0]
.text:0000FF2E                 push    ecx
.text:0000FF2F                 call    _send_packet
.text:0000FF34                 add     esp, 18h
.text:0000FF37                 mov     edx, [ebp+var_218]
.text:0000FF3D                 push    edx
.text:0000FF3E                 call    _freebn
.text:0000FF43                 add     esp, 4
.text:0000FF46                 mov     eax, [ebp+var_21C]
.text:0000FF4C                 push    eax
.text:0000FF4D                 call    _freebn
.text:0000FF52                 add     esp, 4
.text:0000FF55
.text:0000FF55 loc_FF55:                               ; CODE XREF: _do_ssh1_login+25A2j
.text:0000FF55                                         ; _do_ssh1_login+25A8j
.text:0000FF55                 mov     ecx, [ebp+var_90]
.text:0000FF5B                 mov     dword ptr [ecx], 115Ch
.text:0000FF61                 xor     eax, eax
.text:0000FF63                 jmp     loc_10B1A
.text:0000FF68 ; ---------------------------------------------------------------------------
.text:0000FF68
.text:0000FF68 $LN99:                                  ; CODE XREF: _do_ssh1_login+1A8j
.text:0000FF68                                         ; DATA XREF: .text:$LN421o
.text:0000FF68                 xor     edx, edx        ; jumptable 0000DB70 case 164
.text:0000FF6A                 jnz     short loc_FF55
.text:0000FF6C                 cmp     [ebp+arg_C], 0
.text:0000FF70                 jz      short loc_FF55
.text:0000FF72                 mov     eax, [ebp+arg_C]
.text:0000FF75                 cmp     dword ptr [eax+8], 0Fh
.text:0000FF79                 jnz     short loc_FF9E
.text:0000FF7B                 mov     ecx, dword ptr ds:_flags
.text:0000FF81                 and     ecx, 1
.text:0000FF84                 jz      short loc_FF97
.text:0000FF86                 push    offset $SG90552 ; "Failed to authenticate with our public "...
.text:0000FF8B                 mov     edx, [ebp+arg_0]
.text:0000FF8E                 push    edx             ; int
.text:0000FF8F                 call    _c_write_str
.text:0000FF94                 add     esp, 8
.text:0000FF97
.text:0000FF97 loc_FF97:                               ; CODE XREF: _do_ssh1_login+25BCj
.text:0000FF97                 jmp     loc_EDED
.text:0000FF9C ; ---------------------------------------------------------------------------
.text:0000FF9C                 jmp     short loc_FFD8
.text:0000FF9E ; ---------------------------------------------------------------------------
.text:0000FF9E
.text:0000FF9E loc_FF9E:                               ; CODE XREF: _do_ssh1_login+25B1j
.text:0000FF9E                 mov     eax, [ebp+arg_C]
.text:0000FFA1                 cmp     dword ptr [eax+8], 0Eh
.text:0000FFA5                 jz      short loc_FFD8
.text:0000FFA7                 push    offset $SG90555 ; "Bizarre response to RSA authentication "...
.text:0000FFAC                 call    _dupprintf
.text:0000FFB1                 add     esp, 4
.text:0000FFB4                 push    eax
.text:0000FFB5                 mov     ecx, [ebp+arg_0]
.text:0000FFB8                 push    ecx
.text:0000FFB9                 call    _bomb_out
.text:0000FFBE                 add     esp, 8
.text:0000FFC1
.text:0000FFC1 loc_FFC1:                               ; CODE XREF: _do_ssh1_login+260Ej
.text:0000FFC1                 mov     edx, [ebp+var_90]
.text:0000FFC7                 mov     dword ptr [edx], 0
.text:0000FFCD                 xor     eax, eax
.text:0000FFCF                 jmp     loc_10B1A
.text:0000FFD4 ; ---------------------------------------------------------------------------
.text:0000FFD4                 xor     eax, eax
.text:0000FFD6                 jnz     short loc_FFC1
.text:0000FFD8
.text:0000FFD8 loc_FFD8:                               ; CODE XREF: _do_ssh1_login+25D4j
.text:0000FFD8                                         ; _do_ssh1_login+25DDj
.text:0000FFD8                 jmp     loc_10AC2
.text:0000FFDD ; ---------------------------------------------------------------------------
.text:0000FFDD
.text:0000FFDD loc_FFDD:                               ; CODE XREF: _do_ssh1_login+1FE1j
.text:0000FFDD                                         ; _do_ssh1_login+1FF1j ...
.text:0000FFDD                 mov     ecx, [ebp+arg_0]
.text:0000FFE0                 mov     edx, [ecx+0E4h]
.text:0000FFE6                 push    edx
.text:0000FFE7                 call    _new_prompts
.text:0000FFEC                 add     esp, 4
.text:0000FFEF                 mov     ecx, [ebp+var_8C]
.text:0000FFF5                 mov     [ecx+50h], eax
.text:0000FFF8                 push    23h ; '#'
.text:0000FFFA                 mov     edx, [ebp+arg_0]
.text:0000FFFD                 mov     eax, [edx+21Ch]
.text:00010003                 push    eax
.text:00010004                 call    _conf_get_int
.text:00010009                 add     esp, 8
.text:0001000C                 test    eax, eax
.text:0001000E                 jz      loc_10277
.text:00010014                 mov     ecx, [ebp+var_8C]
.text:0001001A                 mov     edx, [ecx+18h]
.text:0001001D                 and     edx, 20h
.text:00010020                 jz      loc_10277
.text:00010026                 mov     eax, [ebp+var_8C]
.text:0001002C                 cmp     dword ptr [eax+24h], 0
.text:00010030                 jnz     loc_10277
.text:00010036                 mov     ecx, [ebp+var_8C]
.text:0001003C                 mov     dword ptr [ecx+58h], 29h ; ')'
.text:00010043                 push    offset $SG90560 ; "Requested TIS authentication"
.text:00010048                 mov     edx, [ebp+arg_0]
.text:0001004B                 mov     eax, [edx+0E4h]
.text:00010051                 push    eax
.text:00010052                 call    _logevent
.text:00010057                 add     esp, 8
.text:0001005A                 push    0
.text:0001005C                 push    27h ; '''
.text:0001005E                 mov     ecx, [ebp+arg_0]
.text:00010061                 push    ecx
.text:00010062                 call    _send_packet
.text:00010067                 add     esp, 0Ch
.text:0001006A
.text:0001006A loc_1006A:                              ; CODE XREF: _do_ssh1_login+26B7j
.text:0001006A                                         ; _do_ssh1_login+26BDj
.text:0001006A                 mov     edx, [ebp+var_90]
.text:00010070                 mov     dword ptr [edx], 1177h
.text:00010076                 xor     eax, eax
.text:00010078                 jmp     loc_10B1A
.text:0001007D ; ---------------------------------------------------------------------------
.text:0001007D
.text:0001007D loc_1007D:                              ; CODE XREF: _do_ssh1_login+173j
.text:0001007D                 xor     eax, eax
.text:0001007F                 jnz     short loc_1006A
.text:00010081                 cmp     [ebp+arg_C], 0
.text:00010085                 jz      short loc_1006A
.text:00010087                 mov     ecx, [ebp+arg_C]
.text:0001008A                 cmp     dword ptr [ecx+8], 28h ; '('
.text:0001008E                 jz      short loc_100DA
.text:00010090                 push    offset $SG90569 ; "TIS authentication declined"
.text:00010095                 mov     edx, [ebp+arg_0]
.text:00010098                 mov     eax, [edx+0E4h]
.text:0001009E                 push    eax
.text:0001009F                 call    _logevent
.text:000100A4                 add     esp, 8
.text:000100A7                 mov     ecx, dword ptr ds:_flags
.text:000100AD                 and     ecx, 4
.text:000100B0                 jz      short loc_100C3
.text:000100B2                 push    offset $SG90571 ; "TIS authentication refused.\r\n"
.text:000100B7                 mov     edx, [ebp+arg_0]
.text:000100BA                 push    edx             ; int
.text:000100BB                 call    _c_write_str
.text:000100C0                 add     esp, 8
.text:000100C3
.text:000100C3 loc_100C3:                              ; CODE XREF: _do_ssh1_login+26E8j
.text:000100C3                 mov     eax, [ebp+var_8C]
.text:000100C9                 mov     dword ptr [eax+24h], 1
.text:000100D0                 jmp     loc_EDED
.text:000100D5 ; ---------------------------------------------------------------------------
.text:000100D5                 jmp     loc_10277
.text:000100DA ; ---------------------------------------------------------------------------
.text:000100DA
.text:000100DA loc_100DA:                              ; CODE XREF: _do_ssh1_login+26C6j
.text:000100DA                 lea     ecx, [ebp+MaxCount]
.text:000100E0                 push    ecx
.text:000100E1                 lea     edx, [ebp+Buf]
.text:000100E7                 push    edx
.text:000100E8                 mov     eax, [ebp+arg_C]
.text:000100EB                 push    eax
.text:000100EC                 call    _ssh_pkt_getstring
.text:000100F1                 add     esp, 0Ch
.text:000100F4                 cmp     [ebp+Buf], 0
.text:000100FB                 jnz     short loc_1012E
.text:000100FD                 push    offset $SG90578 ; "TIS challenge packet was badly formed"
.text:00010102                 call    _dupprintf
.text:00010107                 add     esp, 4
.text:0001010A                 push    eax
.text:0001010B                 mov     ecx, [ebp+arg_0]
.text:0001010E                 push    ecx
.text:0001010F                 call    _bomb_out
.text:00010114                 add     esp, 8
.text:00010117
.text:00010117 loc_10117:                              ; CODE XREF: _do_ssh1_login+2764j
.text:00010117                 mov     edx, [ebp+var_90]
.text:0001011D                 mov     dword ptr [edx], 0
.text:00010123                 xor     eax, eax
.text:00010125                 jmp     loc_10B1A
.text:0001012A ; ---------------------------------------------------------------------------
.text:0001012A                 xor     eax, eax
.text:0001012C                 jnz     short loc_10117
.text:0001012E
.text:0001012E loc_1012E:                              ; CODE XREF: _do_ssh1_login+2733j
.text:0001012E                 push    offset $SG90582 ; "Received TIS challenge"
.text:00010133                 mov     ecx, [ebp+arg_0]
.text:00010136                 mov     edx, [ecx+0E4h]
.text:0001013C                 push    edx
.text:0001013D                 call    _logevent
.text:00010142                 add     esp, 8
.text:00010145                 mov     eax, [ebp+var_8C]
.text:0001014B                 mov     ecx, [eax+50h]
.text:0001014E                 mov     dword ptr [ecx], 1
.text:00010154                 push    offset $SG90583 ; "SSH TIS authentication"
.text:00010159                 call    _dupstr
.text:0001015E                 add     esp, 4
.text:00010161                 mov     edx, [ebp+var_8C]
.text:00010167                 mov     ecx, [edx+50h]
.text:0001016A                 mov     [ecx+4], eax
.text:0001016D                 mov     edx, [ebp+MaxCount]
.text:00010173                 push    edx             ; MaxCount
.text:00010174                 push    0Ah             ; Val
.text:00010176                 mov     eax, [ebp+Buf]
.text:0001017C                 push    eax             ; Buf
.text:0001017D                 call    _memchr
.text:00010182                 add     esp, 0Ch
.text:00010185                 test    eax, eax
.text:00010187                 jz      short loc_101BF
.text:00010189                 push    offset $SG90585
.text:0001018E                 call    _dupstr
.text:00010193                 add     esp, 4
.text:00010196                 mov     [ebp+var_238], eax
.text:0001019C                 mov     ecx, [ebp+Buf]
.text:000101A2                 push    ecx
.text:000101A3                 mov     edx, [ebp+MaxCount]
.text:000101A9                 push    edx
.text:000101AA                 push    offset $SG90586 ; "%.*s"
.text:000101AF                 call    _dupprintf
.text:000101B4                 add     esp, 0Ch
.text:000101B7                 mov     [ebp+var_23C], eax
.text:000101BD                 jmp     short loc_101F3
.text:000101BF ; ---------------------------------------------------------------------------
.text:000101BF
.text:000101BF loc_101BF:                              ; CODE XREF: _do_ssh1_login+27BFj
.text:000101BF                 mov     eax, [ebp+Buf]
.text:000101C5                 push    eax
.text:000101C6                 mov     ecx, [ebp+MaxCount]
.text:000101CC                 push    ecx
.text:000101CD                 push    offset $SG90588 ; "%.*s"
.text:000101D2                 call    _dupprintf
.text:000101D7                 add     esp, 0Ch
.text:000101DA                 mov     [ebp+var_238], eax
.text:000101E0                 push    offset $SG90589 ; "Response: "
.text:000101E5                 call    _dupstr
.text:000101EA                 add     esp, 4
.text:000101ED                 mov     [ebp+var_23C], eax
.text:000101F3
.text:000101F3 loc_101F3:                              ; CODE XREF: _do_ssh1_login+27F5j
.text:000101F3                 mov     edx, [ebp+var_238]
.text:000101F9                 movsx   eax, byte ptr [edx]
.text:000101FC                 test    eax, eax
.text:000101FE                 jz      short loc_1020C
.text:00010200                 mov     [ebp+var_2F0], offset $SG90590 ; "\n"
.text:0001020A                 jmp     short loc_10216
.text:0001020C ; ---------------------------------------------------------------------------
.text:0001020C
.text:0001020C loc_1020C:                              ; CODE XREF: _do_ssh1_login+2836j
.text:0001020C                 mov     [ebp+var_2F0], offset $SG90591
.text:00010216
.text:00010216 loc_10216:                              ; CODE XREF: _do_ssh1_login+2842j
.text:00010216                 mov     ecx, [ebp+var_238]
.text:0001021C                 push    ecx
.text:0001021D                 mov     edx, [ebp+var_2F0]
.text:00010223                 push    edx
.text:00010224                 push    offset $SG90592 ; "Using TIS authentication.%s%s"
.text:00010229                 call    _dupprintf
.text:0001022E                 add     esp, 0Ch
.text:00010231                 mov     ecx, [ebp+var_8C]
.text:00010237                 mov     edx, [ecx+50h]
.text:0001023A                 mov     [edx+0Ch], eax
.text:0001023D                 mov     eax, [ebp+var_8C]
.text:00010243                 mov     ecx, [eax+50h]
.text:00010246                 mov     dword ptr [ecx+10h], 1
.text:0001024D                 push    0
.text:0001024F                 mov     edx, [ebp+var_23C]
.text:00010255                 push    edx
.text:00010256                 mov     eax, [ebp+var_8C]
.text:0001025C                 mov     ecx, [eax+50h]
.text:0001025F                 push    ecx
.text:00010260                 call    _add_prompt
.text:00010265                 add     esp, 0Ch
.text:00010268                 mov     edx, [ebp+var_238]
.text:0001026E                 push    edx
.text:0001026F                 call    _safefree
.text:00010274                 add     esp, 4
.text:00010277
.text:00010277 loc_10277:                              ; CODE XREF: _do_ssh1_login+2646j
.text:00010277                                         ; _do_ssh1_login+2658j ...
.text:00010277                 push    23h ; '#'
.text:00010279                 mov     eax, [ebp+arg_0]
.text:0001027C                 mov     ecx, [eax+21Ch]
.text:00010282                 push    ecx
.text:00010283                 call    _conf_get_int
.text:00010288                 add     esp, 8
.text:0001028B                 test    eax, eax
.text:0001028D                 jz      loc_104FD
.text:00010293                 mov     edx, [ebp+var_8C]
.text:00010299                 mov     eax, [edx+18h]
.text:0001029C                 and     eax, 10000h
.text:000102A1                 jz      loc_104FD
.text:000102A7                 mov     ecx, [ebp+var_8C]
.text:000102AD                 cmp     dword ptr [ecx+28h], 0
.text:000102B1                 jnz     loc_104FD
.text:000102B7                 mov     edx, [ebp+var_8C]
.text:000102BD                 mov     dword ptr [edx+58h], 48h ; 'H'
.text:000102C4                 push    offset $SG90594 ; "Requested CryptoCard authentication"
.text:000102C9                 mov     eax, [ebp+arg_0]
.text:000102CC                 mov     ecx, [eax+0E4h]
.text:000102D2                 push    ecx
.text:000102D3                 call    _logevent
.text:000102D8                 add     esp, 8
.text:000102DB                 push    0
.text:000102DD                 push    46h ; 'F'
.text:000102DF                 mov     edx, [ebp+arg_0]
.text:000102E2                 push    edx
.text:000102E3                 call    _send_packet
.text:000102E8                 add     esp, 0Ch
.text:000102EB
.text:000102EB loc_102EB:                              ; CODE XREF: _do_ssh1_login+2938j
.text:000102EB                                         ; _do_ssh1_login+293Ej
.text:000102EB                 mov     eax, [ebp+var_90]
.text:000102F1                 mov     dword ptr [eax], 11A2h
.text:000102F7                 xor     eax, eax
.text:000102F9                 jmp     loc_10B1A
.text:000102FE ; ---------------------------------------------------------------------------
.text:000102FE
.text:000102FE loc_102FE:                              ; CODE XREF: _do_ssh1_login+1B9j
.text:000102FE                 xor     ecx, ecx
.text:00010300                 jnz     short loc_102EB
.text:00010302                 cmp     [ebp+arg_C], 0
.text:00010306                 jz      short loc_102EB
.text:00010308                 mov     edx, [ebp+arg_C]
.text:0001030B                 cmp     dword ptr [edx+8], 47h ; 'G'
.text:0001030F                 jz      short loc_10350
.text:00010311                 push    offset $SG90603 ; "CryptoCard authentication declined"
.text:00010316                 mov     eax, [ebp+arg_0]
.text:00010319                 mov     ecx, [eax+0E4h]
.text:0001031F                 push    ecx
.text:00010320                 call    _logevent
.text:00010325                 add     esp, 8
.text:00010328                 push    offset $SG90604 ; "CryptoCard authentication refused.\r\n"
.text:0001032D                 mov     edx, [ebp+arg_0]
.text:00010330                 push    edx             ; int
.text:00010331                 call    _c_write_str
.text:00010336                 add     esp, 8
.text:00010339                 mov     eax, [ebp+var_8C]
.text:0001033F                 mov     dword ptr [eax+28h], 1
.text:00010346                 jmp     loc_EDED
.text:0001034B ; ---------------------------------------------------------------------------
.text:0001034B                 jmp     loc_104FD
.text:00010350 ; ---------------------------------------------------------------------------
.text:00010350
.text:00010350 loc_10350:                              ; CODE XREF: _do_ssh1_login+2947j
.text:00010350                 lea     ecx, [ebp+var_250]
.text:00010356                 push    ecx
.text:00010357                 lea     edx, [ebp+var_244]
.text:0001035D                 push    edx
.text:0001035E                 mov     eax, [ebp+arg_C]
.text:00010361                 push    eax
.text:00010362                 call    _ssh_pkt_getstring
.text:00010367                 add     esp, 0Ch
.text:0001036A                 cmp     [ebp+var_244], 0
.text:00010371                 jnz     short loc_103A4
.text:00010373                 push    offset $SG90611 ; "CryptoCard challenge packet was badly f"...
.text:00010378                 call    _dupprintf
.text:0001037D                 add     esp, 4
.text:00010380                 push    eax
.text:00010381                 mov     ecx, [ebp+arg_0]
.text:00010384                 push    ecx
.text:00010385                 call    _bomb_out
.text:0001038A                 add     esp, 8
.text:0001038D
.text:0001038D loc_1038D:                              ; CODE XREF: _do_ssh1_login+29DAj
.text:0001038D                 mov     edx, [ebp+var_90]
.text:00010393                 mov     dword ptr [edx], 0
.text:00010399                 xor     eax, eax
.text:0001039B                 jmp     loc_10B1A
.text:000103A0 ; ---------------------------------------------------------------------------
.text:000103A0                 xor     eax, eax
.text:000103A2                 jnz     short loc_1038D
.text:000103A4
.text:000103A4 loc_103A4:                              ; CODE XREF: _do_ssh1_login+29A9j
.text:000103A4                 push    offset $SG90615 ; "Received CryptoCard challenge"
.text:000103A9                 mov     ecx, [ebp+arg_0]
.text:000103AC                 mov     edx, [ecx+0E4h]
.text:000103B2                 push    edx
.text:000103B3                 call    _logevent
.text:000103B8                 add     esp, 8
.text:000103BB                 mov     eax, [ebp+var_8C]
.text:000103C1                 mov     ecx, [eax+50h]
.text:000103C4                 mov     dword ptr [ecx], 1
.text:000103CA                 push    offset $SG90616 ; "SSH CryptoCard authentication"
.text:000103CF                 call    _dupstr
.text:000103D4                 add     esp, 4
.text:000103D7                 mov     edx, [ebp+var_8C]
.text:000103DD                 mov     ecx, [edx+50h]
.text:000103E0                 mov     [ecx+4], eax
.text:000103E3                 mov     edx, [ebp+var_8C]
.text:000103E9                 mov     eax, [edx+50h]
.text:000103EC                 mov     dword ptr [eax+8], 0
.text:000103F3                 mov     ecx, [ebp+var_250]
.text:000103F9                 push    ecx             ; MaxCount
.text:000103FA                 push    0Ah             ; Val
.text:000103FC                 mov     edx, [ebp+var_244]
.text:00010402                 push    edx             ; Buf
.text:00010403                 call    _memchr
.text:00010408                 add     esp, 0Ch
.text:0001040B                 test    eax, eax
.text:0001040D                 jz      short loc_10445
.text:0001040F                 push    offset $SG90618
.text:00010414                 call    _dupstr
.text:00010419                 add     esp, 4
.text:0001041C                 mov     [ebp+var_258], eax
.text:00010422                 mov     eax, [ebp+var_244]
.text:00010428                 push    eax
.text:00010429                 mov     ecx, [ebp+var_250]
.text:0001042F                 push    ecx
.text:00010430                 push    offset $SG90619 ; "%.*s"
.text:00010435                 call    _dupprintf
.text:0001043A                 add     esp, 0Ch
.text:0001043D                 mov     [ebp+var_25C], eax
.text:00010443                 jmp     short loc_10479
.text:00010445 ; ---------------------------------------------------------------------------
.text:00010445
.text:00010445 loc_10445:                              ; CODE XREF: _do_ssh1_login+2A45j
.text:00010445                 mov     edx, [ebp+var_244]
.text:0001044B                 push    edx
.text:0001044C                 mov     eax, [ebp+var_250]
.text:00010452                 push    eax
.text:00010453                 push    offset $SG90621 ; "%.*s"
.text:00010458                 call    _dupprintf
.text:0001045D                 add     esp, 0Ch
.text:00010460                 mov     [ebp+var_258], eax
.text:00010466                 push    offset $SG90622 ; "Response: "
.text:0001046B                 call    _dupstr
.text:00010470                 add     esp, 4
.text:00010473                 mov     [ebp+var_25C], eax
.text:00010479
.text:00010479 loc_10479:                              ; CODE XREF: _do_ssh1_login+2A7Bj
.text:00010479                 mov     ecx, [ebp+var_258]
.text:0001047F                 movsx   edx, byte ptr [ecx]
.text:00010482                 test    edx, edx
.text:00010484                 jz      short loc_10492
.text:00010486                 mov     [ebp+var_2F4], offset $SG90623 ; "\n"
.text:00010490                 jmp     short loc_1049C
.text:00010492 ; ---------------------------------------------------------------------------
.text:00010492
.text:00010492 loc_10492:                              ; CODE XREF: _do_ssh1_login+2ABCj
.text:00010492                 mov     [ebp+var_2F4], offset $SG90624
.text:0001049C
.text:0001049C loc_1049C:                              ; CODE XREF: _do_ssh1_login+2AC8j
.text:0001049C                 mov     eax, [ebp+var_258]
.text:000104A2                 push    eax
.text:000104A3                 mov     ecx, [ebp+var_2F4]
.text:000104A9                 push    ecx
.text:000104AA                 push    offset $SG90625 ; "Using CryptoCard authentication.%s%s"
.text:000104AF                 call    _dupprintf
.text:000104B4                 add     esp, 0Ch
.text:000104B7                 mov     edx, [ebp+var_8C]
.text:000104BD                 mov     ecx, [edx+50h]
.text:000104C0                 mov     [ecx+0Ch], eax
.text:000104C3                 mov     edx, [ebp+var_8C]
.text:000104C9                 mov     eax, [edx+50h]
.text:000104CC                 mov     dword ptr [eax+10h], 1
.text:000104D3                 push    0
.text:000104D5                 mov     ecx, [ebp+var_25C]
.text:000104DB                 push    ecx
.text:000104DC                 mov     edx, [ebp+var_8C]
.text:000104E2                 mov     eax, [edx+50h]
.text:000104E5                 push    eax
.text:000104E6                 call    _add_prompt
.text:000104EB                 add     esp, 0Ch
.text:000104EE                 mov     ecx, [ebp+var_258]
.text:000104F4                 push    ecx
.text:000104F5                 call    _safefree
.text:000104FA                 add     esp, 4
.text:000104FD
.text:000104FD loc_104FD:                              ; CODE XREF: _do_ssh1_login+28C5j
.text:000104FD                                         ; _do_ssh1_login+28D9j ...
.text:000104FD                 mov     edx, [ebp+var_8C]
.text:00010503                 cmp     dword ptr [edx+58h], 9
.text:00010507                 jnz     loc_105AA
.text:0001050D                 mov     eax, [ebp+var_8C]
.text:00010513                 mov     ecx, [eax+18h]
.text:00010516                 and     ecx, 8
.text:00010519                 jnz     short loc_1054C
.text:0001051B                 push    offset $SG90628 ; "No supported authentication methods ava"...
.text:00010520                 call    _dupprintf
.text:00010525                 add     esp, 4
.text:00010528                 push    eax
.text:00010529                 mov     edx, [ebp+arg_0]
.text:0001052C                 push    edx
.text:0001052D                 call    _bomb_out
.text:00010532                 add     esp, 8
.text:00010535
.text:00010535 loc_10535:                              ; CODE XREF: _do_ssh1_login+2B82j
.text:00010535                 mov     eax, [ebp+var_90]
.text:0001053B                 mov     dword ptr [eax], 0
.text:00010541                 xor     eax, eax
.text:00010543                 jmp     loc_10B1A
.text:00010548 ; ---------------------------------------------------------------------------
.text:00010548                 xor     ecx, ecx
.text:0001054A                 jnz     short loc_10535
.text:0001054C
.text:0001054C loc_1054C:                              ; CODE XREF: _do_ssh1_login+2B51j
.text:0001054C                 mov     edx, [ebp+var_8C]
.text:00010552                 mov     eax, [edx+50h]
.text:00010555                 mov     dword ptr [eax], 1
.text:0001055B                 push    offset $SG90632 ; "SSH password"
.text:00010560                 call    _dupstr
.text:00010565                 add     esp, 4
.text:00010568                 mov     ecx, [ebp+var_8C]
.text:0001056E                 mov     edx, [ecx+50h]
.text:00010571                 mov     [edx+4], eax
.text:00010574                 push    0
.text:00010576                 mov     eax, [ebp+arg_0]
.text:00010579                 mov     ecx, [eax+0D0h]
.text:0001057F                 push    ecx
.text:00010580                 mov     edx, [ebp+arg_0]
.text:00010583                 mov     eax, [edx+224h]
.text:00010589                 push    eax
.text:0001058A                 push    offset $SG90633 ; "%s@%s's password: "
.text:0001058F                 call    _dupprintf
.text:00010594                 add     esp, 0Ch
.text:00010597                 push    eax
.text:00010598                 mov     ecx, [ebp+var_8C]
.text:0001059E                 mov     edx, [ecx+50h]
.text:000105A1                 push    edx
.text:000105A2                 call    _add_prompt
.text:000105A7                 add     esp, 0Ch
.text:000105AA
.text:000105AA loc_105AA:                              ; CODE XREF: _do_ssh1_login+2B3Fj
.text:000105AA                 push    0
.text:000105AC                 push    0
.text:000105AE                 mov     eax, [ebp+var_8C]
.text:000105B4                 mov     ecx, [eax+50h]
.text:000105B7                 push    ecx
.text:000105B8                 call    _get_userpass_input
.text:000105BD                 add     esp, 0Ch
.text:000105C0                 mov     [ebp+var_260], eax
.text:000105C6
.text:000105C6 loc_105C6:                              ; CODE XREF: _do_ssh1_login+2C5Ej
.text:000105C6                 cmp     [ebp+var_260], 0
.text:000105CD                 jge     short loc_10628
.text:000105CF                 mov     edx, [ebp+arg_0]
.text:000105D2                 mov     dword ptr [edx+0D8h], 1
.text:000105DC
.text:000105DC loc_105DC:                              ; CODE XREF: _do_ssh1_login+2C29j
.text:000105DC                                         ; _do_ssh1_login+2C2Fj
.text:000105DC                 mov     eax, [ebp+var_90]
.text:000105E2                 mov     dword ptr [eax], 11DDh
.text:000105E8                 xor     eax, eax
.text:000105EA                 jmp     loc_10B1A
.text:000105EF ; ---------------------------------------------------------------------------
.text:000105EF
.text:000105EF loc_105EF:                              ; CODE XREF: _do_ssh1_login+1C9j
.text:000105EF                 xor     ecx, ecx
.text:000105F1                 jnz     short loc_105DC
.text:000105F3                 cmp     [ebp+arg_C], 0
.text:000105F7                 jnz     short loc_105DC
.text:000105F9                 mov     edx, [ebp+arg_8]
.text:000105FC                 push    edx
.text:000105FD                 mov     eax, [ebp+arg_4]
.text:00010600                 push    eax
.text:00010601                 mov     ecx, [ebp+var_8C]
.text:00010607                 mov     edx, [ecx+50h]
.text:0001060A                 push    edx
.text:0001060B                 call    _get_userpass_input
.text:00010610                 add     esp, 0Ch
.text:00010613                 mov     [ebp+var_260], eax
.text:00010619                 mov     eax, [ebp+arg_0]
.text:0001061C                 mov     dword ptr [eax+0D8h], 0
.text:00010626                 jmp     short loc_105C6
.text:00010628 ; ---------------------------------------------------------------------------
.text:00010628
.text:00010628 loc_10628:                              ; CODE XREF: _do_ssh1_login+2C05j
.text:00010628                 cmp     [ebp+var_260], 0
.text:0001062F                 jnz     short loc_10671
.text:00010631                 mov     ecx, [ebp+var_8C]
.text:00010637                 mov     edx, [ecx+50h]
.text:0001063A                 push    edx
.text:0001063B                 call    _free_prompts
.text:00010640                 add     esp, 4
.text:00010643                 push    1               ; int
.text:00010645                 push    0               ; int
.text:00010647                 push    offset $SG90648 ; "Unable to authenticate"
.text:0001064C                 push    0               ; int
.text:0001064E                 mov     eax, [ebp+arg_0]
.text:00010651                 push    eax             ; int
.text:00010652                 call    _ssh_disconnect
.text:00010657                 add     esp, 14h
.text:0001065A
.text:0001065A loc_1065A:                              ; CODE XREF: _do_ssh1_login+2CA7j
.text:0001065A                 mov     ecx, [ebp+var_90]
.text:00010660                 mov     dword ptr [ecx], 0
.text:00010666                 xor     eax, eax
.text:00010668                 jmp     loc_10B1A
.text:0001066D ; ---------------------------------------------------------------------------
.text:0001066D                 xor     edx, edx
.text:0001066F                 jnz     short loc_1065A
.text:00010671
.text:00010671 loc_10671:                              ; CODE XREF: _do_ssh1_login+2C67j
.text:00010671                 mov     eax, [ebp+var_8C]
.text:00010677                 cmp     dword ptr [eax+58h], 9
.text:0001067B                 jnz     loc_109CF
.text:00010681                 mov     ecx, [ebp+arg_0]
.text:00010684                 mov     edx, [ecx+50h]
.text:00010687                 and     edx, 1
.text:0001068A                 jnz     loc_10857
.text:00010690                 mov     eax, [ebp+arg_0]
.text:00010693                 mov     ecx, [eax+50h]
.text:00010696                 and     ecx, 4
.text:00010699                 jnz     loc_10857
.text:0001069F                 mov     edx, [ebp+var_8C]
.text:000106A5                 mov     eax, [edx+50h]
.text:000106A8                 mov     ecx, [eax+18h]
.text:000106AB                 mov     edx, [ecx]
.text:000106AD                 mov     eax, [edx+8]
.text:000106B0                 push    eax             ; Str
.text:000106B1                 call    _strlen
.text:000106B6                 add     esp, 4
.text:000106B9                 mov     [ebp+var_26C], eax
.text:000106BF                 cmp     [ebp+var_26C], 10h
.text:000106C6                 jge     short loc_106DE
.text:000106C8                 mov     [ebp+var_264], 0
.text:000106D2                 mov     [ebp+var_268], 0Fh
.text:000106DC                 jmp     short loc_106FC
.text:000106DE ; ---------------------------------------------------------------------------
.text:000106DE
.text:000106DE loc_106DE:                              ; CODE XREF: _do_ssh1_login+2CFEj
.text:000106DE                 mov     ecx, [ebp+var_26C]
.text:000106E4                 and     ecx, 0FFFFFFF8h
.text:000106E7                 mov     [ebp+var_264], ecx
.text:000106ED                 mov     edx, [ebp+var_264]
.text:000106F3                 add     edx, 7
.text:000106F6                 mov     [ebp+var_268], edx
.text:000106FC
.text:000106FC loc_106FC:                              ; CODE XREF: _do_ssh1_login+2D14j
.text:000106FC                 mov     eax, [ebp+var_26C]
.text:00010702                 cmp     eax, [ebp+var_264]
.text:00010708                 jl      short loc_10718
.text:0001070A                 mov     ecx, [ebp+var_26C]
.text:00010710                 cmp     ecx, [ebp+var_268]
.text:00010716                 jle     short loc_1072F
.text:00010718
.text:00010718 loc_10718:                              ; CODE XREF: _do_ssh1_login+2D40j
.text:00010718                 push    1225h           ; Line
.text:0001071D                 push    offset $SG90662 ; "..\\..\\..\\ssh.c"
.text:00010722                 push    offset $SG90663 ; "pwlen >= bottom && pwlen <= top"
.text:00010727                 call    __wassert
.text:0001072C ; ---------------------------------------------------------------------------
.text:0001072C                 add     esp, 0Ch
.text:0001072F
.text:0001072F loc_1072F:                              ; CODE XREF: _do_ssh1_login+2D4Ej
.text:0001072F                 push    1
.text:00010731                 mov     eax, [ebp+var_268]
.text:00010737                 add     eax, 1
.text:0001073A                 push    eax
.text:0001073B                 call    _safemalloc
.text:00010740                 add     esp, 8
.text:00010743                 mov     [ebp+var_274], eax
.text:00010749                 mov     ecx, [ebp+var_264]
.text:0001074F                 mov     [ebp+var_270], ecx
.text:00010755                 jmp     short loc_10766
.text:00010757 ; ---------------------------------------------------------------------------
.text:00010757
.text:00010757 loc_10757:                              ; CODE XREF: _do_ssh1_login:loc_1081Bj
.text:00010757                 mov     edx, [ebp+var_270]
.text:0001075D                 add     edx, 1
.text:00010760                 mov     [ebp+var_270], edx
.text:00010766
.text:00010766 loc_10766:                              ; CODE XREF: _do_ssh1_login+2D8Dj
.text:00010766                 mov     eax, [ebp+var_270]
.text:0001076C                 cmp     eax, [ebp+var_268]
.text:00010772                 jg      loc_10820
.text:00010778                 mov     ecx, [ebp+var_270]
.text:0001077E                 cmp     ecx, [ebp+var_26C]
.text:00010784                 jnz     short loc_107B4
.text:00010786                 push    0
.text:00010788                 mov     edx, [ebp+var_8C]
.text:0001078E                 mov     eax, [edx+50h]
.text:00010791                 mov     ecx, [eax+18h]
.text:00010794                 mov     edx, [ecx]
.text:00010796                 mov     eax, [edx+8]
.text:00010799                 push    eax
.text:0001079A                 push    4
.text:0001079C                 mov     ecx, [ebp+var_8C]
.text:000107A2                 mov     edx, [ecx+58h]
.text:000107A5                 push    edx
.text:000107A6                 mov     eax, [ebp+arg_0]
.text:000107A9                 push    eax
.text:000107AA                 call    _defer_packet
.text:000107AF                 add     esp, 14h
.text:000107B2                 jmp     short loc_1081B
.text:000107B4 ; ---------------------------------------------------------------------------
.text:000107B4
.text:000107B4 loc_107B4:                              ; CODE XREF: _do_ssh1_login+2DBCj
.text:000107B4                 mov     [ebp+var_C], 0
.text:000107BB                 jmp     short loc_107C6
.text:000107BD ; ---------------------------------------------------------------------------
.text:000107BD
.text:000107BD loc_107BD:                              ; CODE XREF: _do_ssh1_login+2E29j
.text:000107BD                 mov     ecx, [ebp+var_C]
.text:000107C0                 add     ecx, 1
.text:000107C3                 mov     [ebp+var_C], ecx
.text:000107C6
.text:000107C6 loc_107C6:                              ; CODE XREF: _do_ssh1_login+2DF3j
.text:000107C6                 mov     edx, [ebp+var_C]
.text:000107C9                 cmp     edx, [ebp+var_270]
.text:000107CF                 jge     short loc_107F3
.text:000107D1
.text:000107D1 loc_107D1:                              ; CODE XREF: _do_ssh1_login+2E27j
.text:000107D1                 call    _random_byte
.text:000107D6                 mov     ecx, [ebp+var_274]
.text:000107DC                 add     ecx, [ebp+var_C]
.text:000107DF                 mov     [ecx], al
.text:000107E1                 mov     edx, [ebp+var_274]
.text:000107E7                 add     edx, [ebp+var_C]
.text:000107EA                 movsx   eax, byte ptr [edx]
.text:000107ED                 test    eax, eax
.text:000107EF                 jz      short loc_107D1
.text:000107F1                 jmp     short loc_107BD
.text:000107F3 ; ---------------------------------------------------------------------------
.text:000107F3
.text:000107F3 loc_107F3:                              ; CODE XREF: _do_ssh1_login+2E07j
.text:000107F3                 mov     ecx, [ebp+var_274]
.text:000107F9                 add     ecx, [ebp+var_270]
.text:000107FF                 mov     byte ptr [ecx], 0
.text:00010802                 push    0
.text:00010804                 mov     edx, [ebp+var_274]
.text:0001080A                 push    edx
.text:0001080B                 push    4
.text:0001080D                 push    20h ; ' '
.text:0001080F                 mov     eax, [ebp+arg_0]
.text:00010812                 push    eax
.text:00010813                 call    _defer_packet
.text:00010818                 add     esp, 14h
.text:0001081B
.text:0001081B loc_1081B:                              ; CODE XREF: _do_ssh1_login+2DEAj
.text:0001081B                 jmp     loc_10757
.text:00010820 ; ---------------------------------------------------------------------------
.text:00010820
.text:00010820 loc_10820:                              ; CODE XREF: _do_ssh1_login+2DAAj
.text:00010820                 push    offset $SG90677 ; "Sending password with camouflage packet"...
.text:00010825                 mov     ecx, [ebp+arg_0]
.text:00010828                 mov     edx, [ecx+0E4h]
.text:0001082E                 push    edx
.text:0001082F                 call    _logevent
.text:00010834                 add     esp, 8
.text:00010837                 mov     eax, [ebp+arg_0]
.text:0001083A                 push    eax
.text:0001083B                 call    _ssh_pkt_defersend
.text:00010840                 add     esp, 4
.text:00010843                 mov     ecx, [ebp+var_274]
.text:00010849                 push    ecx
.text:0001084A                 call    _safefree
.text:0001084F                 add     esp, 4
.text:00010852                 jmp     loc_109CD
.text:00010857 ; ---------------------------------------------------------------------------
.text:00010857
.text:00010857 loc_10857:                              ; CODE XREF: _do_ssh1_login+2CC2j
.text:00010857                                         ; _do_ssh1_login+2CD1j
.text:00010857                 mov     edx, [ebp+arg_0]
.text:0001085A                 mov     eax, [edx+50h]
.text:0001085D                 and     eax, 4
.text:00010860                 jnz     loc_1095A
.text:00010866                 mov     ecx, [ebp+var_8C]
.text:0001086C                 mov     edx, [ecx+50h]
.text:0001086F                 mov     eax, [edx+18h]
.text:00010872                 mov     ecx, [eax]
.text:00010874                 mov     edx, [ecx+8]
.text:00010877                 push    edx             ; Str
.text:00010878                 call    _strlen
.text:0001087D                 add     esp, 4
.text:00010880                 mov     [ebp+var_2C4], eax
.text:00010886                 cmp     [ebp+var_2C4], 40h ; '@'
.text:0001088D                 jnb     short loc_108F9
.text:0001088F                 lea     eax, [ebp+var_2B8]
.text:00010895                 mov     [ebp+var_2C0], eax
.text:0001089B                 mov     ecx, [ebp+var_8C]
.text:000108A1                 mov     edx, [ecx+50h]
.text:000108A4                 mov     eax, [edx+18h]
.text:000108A7                 mov     ecx, [eax]
.text:000108A9                 mov     edx, [ecx+8]
.text:000108AC                 push    edx             ; Source
.text:000108AD                 lea     eax, [ebp+var_2B8]
.text:000108B3                 push    eax             ; Dest
.text:000108B4                 call    _strcpy
.text:000108B9                 add     esp, 8
.text:000108BC                 mov     ecx, [ebp+var_2C4]
.text:000108C2                 add     ecx, 1
.text:000108C5                 mov     [ebp+var_2C4], ecx
.text:000108CB
.text:000108CB loc_108CB:                              ; CODE XREF: _do_ssh1_login+2F2Dj
.text:000108CB                 cmp     [ebp+var_2C4], 40h ; '@'
.text:000108D2                 jnb     short loc_108F7
.text:000108D4                 call    _random_byte
.text:000108D9                 mov     edx, [ebp+var_2C4]
.text:000108DF                 mov     [ebp+edx+var_2B8], al
.text:000108E6                 mov     eax, [ebp+var_2C4]
.text:000108EC                 add     eax, 1
.text:000108EF                 mov     [ebp+var_2C4], eax
.text:000108F5                 jmp     short loc_108CB
.text:000108F7 ; ---------------------------------------------------------------------------
.text:000108F7
.text:000108F7 loc_108F7:                              ; CODE XREF: _do_ssh1_login+2F0Aj
.text:000108F7                 jmp     short loc_10910
.text:000108F9 ; ---------------------------------------------------------------------------
.text:000108F9
.text:000108F9 loc_108F9:                              ; CODE XREF: _do_ssh1_login+2EC5j
.text:000108F9                 mov     ecx, [ebp+var_8C]
.text:000108FF                 mov     edx, [ecx+50h]
.text:00010902                 mov     eax, [edx+18h]
.text:00010905                 mov     ecx, [eax]
.text:00010907                 mov     edx, [ecx+8]
.text:0001090A                 mov     [ebp+var_2C0], edx
.text:00010910
.text:00010910 loc_10910:                              ; CODE XREF: _do_ssh1_login:loc_108F7j
.text:00010910                 push    offset $SG90689 ; "Sending length-padded password"
.text:00010915                 mov     eax, [ebp+arg_0]
.text:00010918                 mov     ecx, [eax+0E4h]
.text:0001091E                 push    ecx
.text:0001091F                 call    _logevent
.text:00010924                 add     esp, 8
.text:00010927                 push    0
.text:00010929                 mov     edx, [ebp+var_2C4]
.text:0001092F                 push    edx
.text:00010930                 mov     eax, [ebp+var_2C0]
.text:00010936                 push    eax
.text:00010937                 push    3
.text:00010939                 mov     ecx, [ebp+var_2C4]
.text:0001093F                 push    ecx
.text:00010940                 push    1
.text:00010942                 mov     edx, [ebp+var_8C]
.text:00010948                 mov     eax, [edx+58h]
.text:0001094B                 push    eax
.text:0001094C                 mov     ecx, [ebp+arg_0]
.text:0001094F                 push    ecx
.text:00010950                 call    _send_packet
.text:00010955                 add     esp, 20h
.text:00010958                 jmp     short loc_109CD
.text:0001095A ; ---------------------------------------------------------------------------
.text:0001095A
.text:0001095A loc_1095A:                              ; CODE XREF: _do_ssh1_login+2E98j
.text:0001095A                 mov     edx, [ebp+var_8C]
.text:00010960                 mov     eax, [edx+50h]
.text:00010963                 mov     ecx, [eax+18h]
.text:00010966                 mov     edx, [ecx]
.text:00010968                 mov     eax, [edx+8]
.text:0001096B                 push    eax             ; Str
.text:0001096C                 call    _strlen
.text:00010971                 add     esp, 4
.text:00010974                 mov     [ebp+var_2C8], eax
.text:0001097A                 push    offset $SG90692 ; "Sending unpadded password"
.text:0001097F                 mov     ecx, [ebp+arg_0]
.text:00010982                 mov     edx, [ecx+0E4h]
.text:00010988                 push    edx
.text:00010989                 call    _logevent
.text:0001098E                 add     esp, 8
.text:00010991                 push    0
.text:00010993                 mov     eax, [ebp+var_2C8]
.text:00010999                 push    eax
.text:0001099A                 mov     ecx, [ebp+var_8C]
.text:000109A0                 mov     edx, [ecx+50h]
.text:000109A3                 mov     eax, [edx+18h]
.text:000109A6                 mov     ecx, [eax]
.text:000109A8                 mov     edx, [ecx+8]
.text:000109AB                 push    edx
.text:000109AC                 push    3
.text:000109AE                 mov     eax, [ebp+var_2C8]
.text:000109B4                 push    eax
.text:000109B5                 push    1
.text:000109B7                 mov     ecx, [ebp+var_8C]
.text:000109BD                 mov     edx, [ecx+58h]
.text:000109C0                 push    edx
.text:000109C1                 mov     eax, [ebp+arg_0]
.text:000109C4                 push    eax
.text:000109C5                 call    _send_packet
.text:000109CA                 add     esp, 20h
.text:000109CD
.text:000109CD loc_109CD:                              ; CODE XREF: _do_ssh1_login+2E8Aj
.text:000109CD                                         ; _do_ssh1_login+2F90j
.text:000109CD                 jmp     short loc_109FB
.text:000109CF ; ---------------------------------------------------------------------------
.text:000109CF
.text:000109CF loc_109CF:                              ; CODE XREF: _do_ssh1_login+2CB3j
.text:000109CF                 push    0
.text:000109D1                 mov     ecx, [ebp+var_8C]
.text:000109D7                 mov     edx, [ecx+50h]
.text:000109DA                 mov     eax, [edx+18h]
.text:000109DD                 mov     ecx, [eax]
.text:000109DF                 mov     edx, [ecx+8]
.text:000109E2                 push    edx
.text:000109E3                 push    4
.text:000109E5                 mov     eax, [ebp+var_8C]
.text:000109EB                 mov     ecx, [eax+58h]
.text:000109EE                 push    ecx
.text:000109EF                 mov     edx, [ebp+arg_0]
.text:000109F2                 push    edx
.text:000109F3                 call    _send_packet
.text:000109F8                 add     esp, 14h
.text:000109FB
.text:000109FB loc_109FB:                              ; CODE XREF: _do_ssh1_login:loc_109CDj
.text:000109FB                 push    offset $SG90694 ; "Sent password"
.text:00010A00                 mov     eax, [ebp+arg_0]
.text:00010A03                 mov     ecx, [eax+0E4h]
.text:00010A09                 push    ecx
.text:00010A0A                 call    _logevent
.text:00010A0F                 add     esp, 8
.text:00010A12                 mov     edx, [ebp+var_8C]
.text:00010A18                 mov     eax, [edx+50h]
.text:00010A1B                 push    eax
.text:00010A1C                 call    _free_prompts
.text:00010A21                 add     esp, 4
.text:00010A24
.text:00010A24 loc_10A24:                              ; CODE XREF: _do_ssh1_login+3071j
.text:00010A24                                         ; _do_ssh1_login+3077j
.text:00010A24                 mov     ecx, [ebp+var_90]
.text:00010A2A                 mov     dword ptr [ecx], 126Ah
.text:00010A30                 xor     eax, eax
.text:00010A32                 jmp     loc_10B1A
.text:00010A37 ; ---------------------------------------------------------------------------
.text:00010A37
.text:00010A37 loc_10A37:                              ; CODE XREF: _do_ssh1_login+1D9j
.text:00010A37                 xor     edx, edx
.text:00010A39                 jnz     short loc_10A24
.text:00010A3B                 cmp     [ebp+arg_C], 0
.text:00010A3F                 jz      short loc_10A24
.text:00010A41                 mov     eax, [ebp+arg_C]
.text:00010A44                 cmp     dword ptr [eax+8], 0Fh
.text:00010A48                 jnz     short loc_10A7F
.text:00010A4A                 mov     ecx, dword ptr ds:_flags
.text:00010A50                 and     ecx, 1
.text:00010A53                 jz      short loc_10A66
.text:00010A55                 push    offset $SG90704 ; "Access denied\r\n"
.text:00010A5A                 mov     edx, [ebp+arg_0]
.text:00010A5D                 push    edx             ; int
.text:00010A5E                 call    _c_write_str
.text:00010A63                 add     esp, 8
.text:00010A66
.text:00010A66 loc_10A66:                              ; CODE XREF: _do_ssh1_login+308Bj
.text:00010A66                 push    offset $SG90705 ; "Authentication refused"
.text:00010A6B                 mov     eax, [ebp+arg_0]
.text:00010A6E                 mov     ecx, [eax+0E4h]
.text:00010A74                 push    ecx
.text:00010A75                 call    _logevent
.text:00010A7A                 add     esp, 8
.text:00010A7D                 jmp     short loc_10ABD
.text:00010A7F ; ---------------------------------------------------------------------------
.text:00010A7F
.text:00010A7F loc_10A7F:                              ; CODE XREF: _do_ssh1_login+3080j
.text:00010A7F                 mov     edx, [ebp+arg_C]
.text:00010A82                 cmp     dword ptr [edx+8], 0Eh
.text:00010A86                 jz      short loc_10ABD
.text:00010A88                 mov     eax, [ebp+arg_C]
.text:00010A8B                 mov     ecx, [eax+8]
.text:00010A8E                 push    ecx
.text:00010A8F                 push    offset $SG90708 ; "Strange packet received, type %d"
.text:00010A94                 call    _dupprintf
.text:00010A99                 add     esp, 8
.text:00010A9C                 push    eax
.text:00010A9D                 mov     edx, [ebp+arg_0]
.text:00010AA0                 push    edx
.text:00010AA1                 call    _bomb_out
.text:00010AA6                 add     esp, 8
.text:00010AA9
.text:00010AA9 loc_10AA9:                              ; CODE XREF: _do_ssh1_login+30F3j
.text:00010AA9                 mov     eax, [ebp+var_90]
.text:00010AAF                 mov     dword ptr [eax], 0
.text:00010AB5                 xor     eax, eax
.text:00010AB7                 jmp     short loc_10B1A
.text:00010AB9 ; ---------------------------------------------------------------------------
.text:00010AB9                 xor     ecx, ecx
.text:00010ABB                 jnz     short loc_10AA9
.text:00010ABD
.text:00010ABD loc_10ABD:                              ; CODE XREF: _do_ssh1_login+30B5j
.text:00010ABD                                         ; _do_ssh1_login+30BEj
.text:00010ABD                 jmp     loc_EDED
.text:00010AC2 ; ---------------------------------------------------------------------------
.text:00010AC2
.text:00010AC2 loc_10AC2:                              ; CODE XREF: _do_ssh1_login+142Cj
.text:00010AC2                                         ; _do_ssh1_login+1FD2j ...
.text:00010AC2                 mov     edx, [ebp+var_8C]
.text:00010AC8                 cmp     dword ptr [edx+40h], 0
.text:00010ACC                 jz      short loc_10AF2
.text:00010ACE                 mov     eax, [ebp+var_8C]
.text:00010AD4                 mov     ecx, [eax+40h]
.text:00010AD7                 push    ecx
.text:00010AD8                 call    _safefree
.text:00010ADD                 add     esp, 4
.text:00010AE0                 mov     edx, [ebp+var_8C]
.text:00010AE6                 mov     eax, [edx+48h]
.text:00010AE9                 push    eax
.text:00010AEA                 call    _safefree
.text:00010AEF                 add     esp, 4
.text:00010AF2
.text:00010AF2 loc_10AF2:                              ; CODE XREF: _do_ssh1_login+3104j
.text:00010AF2                 push    offset $SG90713 ; "Authentication successful"
.text:00010AF7                 mov     ecx, [ebp+arg_0]
.text:00010AFA                 mov     edx, [ecx+0E4h]
.text:00010B00                 push    edx
.text:00010B01                 call    _logevent
.text:00010B06                 add     esp, 8
.text:00010B09
.text:00010B09 $LN379:                                 ; CODE XREF: _do_ssh1_login+10Dj
.text:00010B09                                         ; _do_ssh1_login+122j ...
.text:00010B09                 mov     eax, [ebp+var_90] ; jumptable 0000DB1E default case
.text:00010B0F                 mov     dword ptr [eax], 0
.text:00010B15                 mov     eax, 1
.text:00010B1A
.text:00010B1A loc_10B1A:                              ; CODE XREF: _do_ssh1_login+1F8j
.text:00010B1A                                         ; _do_ssh1_login+238j ...
.text:00010B1A                 push    edx
.text:00010B1B                 mov     ecx, ebp
.text:00010B1D                 push    eax
.text:00010B1E                 lea     edx, $LN419
.text:00010B24                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00010B29                 pop     eax
.text:00010B2A                 pop     edx
.text:00010B2B                 pop     edi
.text:00010B2C                 pop     esi
.text:00010B2D                 mov     ecx, [ebp+var_4]
.text:00010B30                 xor     ecx, ebp
.text:00010B32                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00010B37                 add     esp, 2F4h
.text:00010B3D                 cmp     ebp, esp
.text:00010B3F                 call    __RTC_CheckEsp
.text:00010B44                 mov     esp, ebp
.text:00010B46                 pop     ebp
.text:00010B47                 retn
.text:00010B47 _do_ssh1_login  endp
.text:00010B47
.text:00010B47 ; ---------------------------------------------------------------------------
.text:00010B48 $LN419          dd 0Fh                  ; DATA XREF: _do_ssh1_login+3156o
.text:00010B4C                 dd offset $LN418
.text:00010B50 $LN418          dd 0FFFFFFE4h, 8        ; DATA XREF: .text:00010B4Co
.text:00010B58                 dd offset $LN403        ; "cookie"
.text:00010B5C                 dd 0FFFFFF7Ch, 5Ch
.text:00010B64                 dd offset $LN404        ; "md5c"
.text:00010B68                 dd 0FFFFFF1Ch, 50h
.text:00010B70                 dd offset $LN405        ; "logmsg"
.text:00010B74                 dd 0FFFFFEACh, 64h
.text:00010B7C                 dd offset $LN406        ; "fingerprint"
.text:00010B80                 dd 0FFFFFE7Ch, 4
.text:00010B88                 dd offset $LN407        ; "error"
.text:00010B8C                 dd 0FFFFFE68h, 4
.text:00010B94                 dd offset $LN408        ; "r"
.text:00010B98                 dd 0FFFFFE44h, 4
.text:00010BA0                 dd offset $LN409        ; "vret"
.text:00010BA4                 dd 0FFFFFE34h, 4
.text:00010BAC                 dd offset $LN410        ; "retlen"
.text:00010BB0                 dd 0FFFFFE20h, 4
.text:00010BB8                 dd offset $LN411        ; "error"
.text:00010BBC                 dd 0FFFFFDF0h, 20h
.text:00010BC4                 dd offset $LN412        ; "buffer"
.text:00010BC8                 dd 0FFFFFDDCh, 4
.text:00010BD0                 dd offset $LN413        ; "challenge"
.text:00010BD4                 dd 0FFFFFDD0h, 4
.text:00010BDC                 dd offset $LN414        ; "challengelen"
.text:00010BE0                 dd 0FFFFFDBCh, 4
.text:00010BE8                 dd offset $LN415        ; "challenge"
.text:00010BEC                 dd 0FFFFFDB0h, 4
.text:00010BF4                 dd offset $LN416        ; "challengelen"
.text:00010BF8                 dd 0FFFFFD48h, 40h
.text:00010C00                 dd offset $LN417        ; "string"
.text:00010C04 $LN417          db 'string',0           ; DATA XREF: .text:00010C00o
.text:00010C0B $LN416          db 'challengelen',0     ; DATA XREF: .text:00010BF4o
.text:00010C18 $LN415          db 'challenge',0        ; DATA XREF: .text:00010BE8o
.text:00010C22 $LN414          db 'challengelen',0     ; DATA XREF: .text:00010BDCo
.text:00010C2F $LN413          db 'challenge',0        ; DATA XREF: .text:00010BD0o
.text:00010C39 $LN412          db 'buffer',0           ; DATA XREF: .text:00010BC4o
.text:00010C40 $LN411          db 'error',0            ; DATA XREF: .text:00010BB8o
.text:00010C46 $LN410          db 'retlen',0           ; DATA XREF: .text:00010BACo
.text:00010C4D $LN409          db 'vret',0             ; DATA XREF: .text:00010BA0o
.text:00010C52 $LN408          db 'r',0                ; DATA XREF: .text:00010B94o
.text:00010C54 $LN407          db 'error',0            ; DATA XREF: .text:00010B88o
.text:00010C5A $LN406          db 'fingerprint',0      ; DATA XREF: .text:00010B7Co
.text:00010C66 $LN405          db 'logmsg',0           ; DATA XREF: .text:00010B70o
.text:00010C6D $LN404          db 'md5c',0             ; DATA XREF: .text:00010B64o
.text:00010C72 $LN403          db 'cookie',0           ; DATA XREF: .text:00010B58o
.text:00010C79                 align 4
.text:00010C7C $LN420          dd offset $LN249, offset $LN236, offset $LN217, offset $LN189
.text:00010C7C                                         ; DATA XREF: _do_ssh1_login+156r
.text:00010C7C                 dd offset $LN379        ; jump table for switch statement
.text:00010C90 $LN401          db      0,     4,     4,     4
.text:00010C90                                         ; DATA XREF: _do_ssh1_login+14Fr
.text:00010C90                 db      4,     4,     4,     4 ; indirect table for switch statement
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     1,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     2
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     4,     4,     4
.text:00010C90                 db      4,     3
.text:00010D3A                 align 4
.text:00010D3C $LN421          dd offset $LN162, offset $LN137, offset $LN118, offset $LN99
.text:00010D3C                                         ; DATA XREF: _do_ssh1_login+1A8r
.text:00010D3C                 dd offset $LN379        ; jump table for switch statement
.text:00010D50 $LN402          db      0,     4,     4,     4
.text:00010D50                                         ; DATA XREF: _do_ssh1_login+1A1r
.text:00010D50                 db      4,     4,     4,     4 ; indirect table for switch statement
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     1,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     2,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      4,     4,     4,     4
.text:00010D50                 db      3
.text:00010DF5                 align 4
.text:00010DF8
.text:00010DF8 ; =============== S U B R O U T I N E =======================================
.text:00010DF8
.text:00010DF8 ; Attributes: bp-based frame
.text:00010DF8
.text:00010DF8 _defer_packet   proc near               ; CODE XREF: _do_ssh1_login+2DE2p
.text:00010DF8                                         ; _do_ssh1_login+2E4Bp
.text:00010DF8
.text:00010DF8 var_8           = dword ptr -8
.text:00010DF8 var_4           = dword ptr -4
.text:00010DF8 arg_0           = dword ptr  8
.text:00010DF8 arg_4           = dword ptr  0Ch
.text:00010DF8 arg_8           = byte ptr  10h
.text:00010DF8
.text:00010DF8                 push    ebp
.text:00010DF9                 mov     ebp, esp
.text:00010DFB                 sub     esp, 8
.text:00010DFE                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00010E05                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00010E0C                 lea     eax, [ebp+arg_8]
.text:00010E0F                 mov     [ebp+var_8], eax
.text:00010E12                 mov     ecx, [ebp+var_8]
.text:00010E15                 push    ecx
.text:00010E16                 mov     edx, [ebp+arg_4]
.text:00010E19                 push    edx
.text:00010E1A                 mov     eax, [ebp+arg_0]
.text:00010E1D                 push    eax
.text:00010E1E                 call    _construct_packet
.text:00010E23                 add     esp, 0Ch
.text:00010E26                 mov     [ebp+var_4], eax
.text:00010E29                 mov     [ebp+var_8], 0
.text:00010E30                 mov     ecx, [ebp+var_4]
.text:00010E33                 push    ecx
.text:00010E34                 mov     edx, [ebp+arg_0]
.text:00010E37                 push    edx
.text:00010E38                 call    _s_wrpkt_defer
.text:00010E3D                 add     esp, 8
.text:00010E40                 add     esp, 8
.text:00010E43                 cmp     ebp, esp
.text:00010E45                 call    __RTC_CheckEsp
.text:00010E4A                 mov     esp, ebp
.text:00010E4C                 pop     ebp
.text:00010E4D                 retn
.text:00010E4D _defer_packet   endp
.text:00010E4D
.text:00010E4D ; ---------------------------------------------------------------------------
.text:00010E4E                 db 0Ah dup(0CCh)
.text:00010E58
.text:00010E58 ; =============== S U B R O U T I N E =======================================
.text:00010E58
.text:00010E58 ; Attributes: bp-based frame
.text:00010E58
.text:00010E58 _s_wrpkt_defer  proc near               ; CODE XREF: _defer_packet+40p
.text:00010E58
.text:00010E58 var_10          = dword ptr -10h
.text:00010E58 var_C           = dword ptr -0Ch
.text:00010E58 var_8           = dword ptr -8
.text:00010E58 Size            = dword ptr -4
.text:00010E58 arg_0           = dword ptr  8
.text:00010E58 arg_4           = dword ptr  0Ch
.text:00010E58
.text:00010E58                 push    ebp
.text:00010E59                 mov     ebp, esp
.text:00010E5B                 sub     esp, 10h
.text:00010E5E                 mov     eax, 0CCCCCCCCh
.text:00010E63                 mov     [ebp+var_10], eax
.text:00010E66                 mov     [ebp+var_C], eax
.text:00010E69                 mov     [ebp+var_8], eax
.text:00010E6C                 mov     [ebp+Size], eax
.text:00010E6F                 lea     eax, [ebp+var_C]
.text:00010E72                 push    eax
.text:00010E73                 mov     ecx, [ebp+arg_4]
.text:00010E76                 push    ecx
.text:00010E77                 mov     edx, [ebp+arg_0]
.text:00010E7A                 push    edx
.text:00010E7B                 call    _s_wrpkt_prepare
.text:00010E80                 add     esp, 0Ch
.text:00010E83                 mov     [ebp+Size], eax
.text:00010E86                 mov     eax, [ebp+arg_0]
.text:00010E89                 mov     ecx, [eax+140h]
.text:00010E8F                 add     ecx, [ebp+Size]
.text:00010E92                 mov     edx, [ebp+arg_0]
.text:00010E95                 cmp     ecx, [edx+144h]
.text:00010E9B                 jle     short loc_10EE0
.text:00010E9D                 mov     eax, [ebp+arg_0]
.text:00010EA0                 mov     ecx, [eax+140h]
.text:00010EA6                 mov     edx, [ebp+Size]
.text:00010EA9                 lea     eax, [ecx+edx+80h]
.text:00010EB0                 mov     ecx, [ebp+arg_0]
.text:00010EB3                 mov     [ecx+144h], eax
.text:00010EB9                 push    1
.text:00010EBB                 mov     edx, [ebp+arg_0]
.text:00010EBE                 mov     eax, [edx+144h]
.text:00010EC4                 push    eax
.text:00010EC5                 mov     ecx, [ebp+arg_0]
.text:00010EC8                 mov     edx, [ecx+13Ch]
.text:00010ECE                 push    edx
.text:00010ECF                 call    _saferealloc
.text:00010ED4                 add     esp, 0Ch
.text:00010ED7                 mov     ecx, [ebp+arg_0]
.text:00010EDA                 mov     [ecx+13Ch], eax
.text:00010EE0
.text:00010EE0 loc_10EE0:                              ; CODE XREF: _s_wrpkt_defer+43j
.text:00010EE0                 mov     edx, [ebp+Size]
.text:00010EE3                 push    edx             ; Size
.text:00010EE4                 mov     eax, [ebp+arg_4]
.text:00010EE7                 mov     ecx, [eax+10h]
.text:00010EEA                 add     ecx, [ebp+var_C]
.text:00010EED                 push    ecx             ; Src
.text:00010EEE                 mov     edx, [ebp+arg_0]
.text:00010EF1                 mov     eax, [edx+13Ch]
.text:00010EF7                 mov     ecx, [ebp+arg_0]
.text:00010EFA                 add     eax, [ecx+140h]
.text:00010F00                 push    eax             ; Dst
.text:00010F01                 call    _memcpy
.text:00010F06                 add     esp, 0Ch
.text:00010F09                 mov     edx, [ebp+arg_0]
.text:00010F0C                 mov     eax, [edx+140h]
.text:00010F12                 add     eax, [ebp+Size]
.text:00010F15                 mov     ecx, [ebp+arg_0]
.text:00010F18                 mov     [ecx+140h], eax
.text:00010F1E                 mov     edx, [ebp+arg_4]
.text:00010F21                 push    edx
.text:00010F22                 call    _ssh_free_packet
.text:00010F27                 add     esp, 4
.text:00010F2A                 push    edx
.text:00010F2B                 mov     ecx, ebp
.text:00010F2D                 push    eax
.text:00010F2E                 lea     edx, $LN6_1
.text:00010F34                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00010F39                 pop     eax
.text:00010F3A                 pop     edx
.text:00010F3B                 add     esp, 10h
.text:00010F3E                 cmp     ebp, esp
.text:00010F40                 call    __RTC_CheckEsp
.text:00010F45                 mov     esp, ebp
.text:00010F47                 pop     ebp
.text:00010F48                 retn
.text:00010F48 _s_wrpkt_defer  endp
.text:00010F48
.text:00010F48 ; ---------------------------------------------------------------------------
.text:00010F49                 align 4
.text:00010F4C $LN6_1          dd 1                    ; DATA XREF: _s_wrpkt_defer+D6o
.text:00010F50                 dd offset $LN5_7
.text:00010F54 $LN5_7          dd 0FFFFFFF4h, 4        ; DATA XREF: .text:00010F50o
.text:00010F5C                 dd offset $LN4_6        ; "offset"
.text:00010F60 $LN4_6          db 'offset',0           ; DATA XREF: .text:00010F5Co
.text:00010F67                 align 4
.text:00010F68
.text:00010F68 ; =============== S U B R O U T I N E =======================================
.text:00010F68
.text:00010F68 ; Attributes: bp-based frame
.text:00010F68
.text:00010F68 _ssh_pkt_getdata proc near              ; CODE XREF: _do_ssh1_login+25Ep
.text:00010F68
.text:00010F68 arg_0           = dword ptr  8
.text:00010F68 arg_4           = dword ptr  0Ch
.text:00010F68
.text:00010F68                 push    ebp
.text:00010F69                 mov     ebp, esp
.text:00010F6B                 mov     eax, [ebp+arg_0]
.text:00010F6E                 mov     ecx, [ebp+arg_0]
.text:00010F71                 mov     edx, [eax]
.text:00010F73                 sub     edx, [ecx+18h]
.text:00010F76                 cmp     edx, [ebp+arg_4]
.text:00010F79                 jge     short loc_10F7F
.text:00010F7B                 xor     eax, eax
.text:00010F7D                 jmp     short loc_10F9D
.text:00010F7F ; ---------------------------------------------------------------------------
.text:00010F7F
.text:00010F7F loc_10F7F:                              ; CODE XREF: _ssh_pkt_getdata+11j
.text:00010F7F                 mov     eax, [ebp+arg_0]
.text:00010F82                 mov     ecx, [eax+18h]
.text:00010F85                 add     ecx, [ebp+arg_4]
.text:00010F88                 mov     edx, [ebp+arg_0]
.text:00010F8B                 mov     [edx+18h], ecx
.text:00010F8E                 mov     eax, [ebp+arg_0]
.text:00010F91                 mov     eax, [eax+18h]
.text:00010F94                 sub     eax, [ebp+arg_4]
.text:00010F97                 mov     ecx, [ebp+arg_0]
.text:00010F9A                 add     eax, [ecx+14h]
.text:00010F9D
.text:00010F9D loc_10F9D:                              ; CODE XREF: _ssh_pkt_getdata+15j
.text:00010F9D                 pop     ebp
.text:00010F9E                 retn
.text:00010F9E _ssh_pkt_getdata endp
.text:00010F9E
.text:00010F9E ; ---------------------------------------------------------------------------
.text:00010F9F                 db 9 dup(0CCh)
.text:00010FA8
.text:00010FA8 ; =============== S U B R O U T I N E =======================================
.text:00010FA8
.text:00010FA8 ; Attributes: bp-based frame
.text:00010FA8
.text:00010FA8 _ssh1_pkt_getrsakey proc near           ; CODE XREF: _do_ssh1_login+2CDp
.text:00010FA8                                         ; _do_ssh1_login+2F4p
.text:00010FA8
.text:00010FA8 var_4           = dword ptr -4
.text:00010FA8 arg_0           = dword ptr  8
.text:00010FA8 arg_4           = dword ptr  0Ch
.text:00010FA8 arg_8           = dword ptr  10h
.text:00010FA8
.text:00010FA8                 push    ebp
.text:00010FA9                 mov     ebp, esp
.text:00010FAB                 push    ecx
.text:00010FAC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00010FB3                 push    0
.text:00010FB5                 mov     eax, [ebp+arg_8]
.text:00010FB8                 push    eax
.text:00010FB9                 mov     ecx, [ebp+arg_4]
.text:00010FBC                 push    ecx
.text:00010FBD                 mov     edx, [ebp+arg_0]
.text:00010FC0                 mov     eax, [ebp+arg_0]
.text:00010FC3                 mov     ecx, [edx]
.text:00010FC5                 sub     ecx, [eax+18h]
.text:00010FC8                 push    ecx
.text:00010FC9                 mov     edx, [ebp+arg_0]
.text:00010FCC                 mov     eax, [edx+14h]
.text:00010FCF                 mov     ecx, [ebp+arg_0]
.text:00010FD2                 add     eax, [ecx+18h]
.text:00010FD5                 push    eax
.text:00010FD6                 call    _makekey
.text:00010FDB                 add     esp, 14h
.text:00010FDE                 mov     [ebp+var_4], eax
.text:00010FE1                 cmp     [ebp+var_4], 0
.text:00010FE5                 jge     short loc_10FEB
.text:00010FE7                 xor     eax, eax
.text:00010FE9                 jmp     short loc_11023
.text:00010FEB ; ---------------------------------------------------------------------------
.text:00010FEB
.text:00010FEB loc_10FEB:                              ; CODE XREF: _ssh1_pkt_getrsakey+3Dj
.text:00010FEB                 mov     edx, [ebp+arg_0]
.text:00010FEE                 mov     eax, [edx+18h]
.text:00010FF1                 add     eax, [ebp+var_4]
.text:00010FF4                 mov     ecx, [ebp+arg_0]
.text:00010FF7                 mov     [ecx+18h], eax
.text:00010FFA                 mov     edx, [ebp+arg_0]
.text:00010FFD                 mov     eax, [ebp+arg_0]
.text:00011000                 mov     ecx, [edx+18h]
.text:00011003                 cmp     ecx, [eax]
.text:00011005                 jl      short loc_1101E
.text:00011007                 push    9F0h            ; Line
.text:0001100C                 push    offset $SG89198 ; "..\\..\\..\\ssh.c"
.text:00011011                 push    offset $SG89199 ; "pkt->savedpos < pkt->length"
.text:00011016                 call    __wassert
.text:0001101B ; ---------------------------------------------------------------------------
.text:0001101B                 add     esp, 0Ch
.text:0001101E
.text:0001101E loc_1101E:                              ; CODE XREF: _ssh1_pkt_getrsakey+5Dj
.text:0001101E                 mov     eax, 1
.text:00011023
.text:00011023 loc_11023:                              ; CODE XREF: _ssh1_pkt_getrsakey+41j
.text:00011023                 add     esp, 4
.text:00011026                 cmp     ebp, esp
.text:00011028                 call    __RTC_CheckEsp
.text:0001102D                 mov     esp, ebp
.text:0001102F                 pop     ebp
.text:00011030                 retn
.text:00011030 _ssh1_pkt_getrsakey endp
.text:00011030
.text:00011030 ; ---------------------------------------------------------------------------
.text:00011031                 align 8
.text:00011038
.text:00011038 ; =============== S U B R O U T I N E =======================================
.text:00011038
.text:00011038 ; Attributes: bp-based frame
.text:00011038
.text:00011038 _ssh1_pkt_getmp proc near               ; CODE XREF: _do_ssh1_login+1A22p
.text:00011038                                         ; _do_ssh1_login+2432p
.text:00011038
.text:00011038 var_10          = dword ptr -10h
.text:00011038 var_C           = dword ptr -0Ch
.text:00011038 var_8           = dword ptr -8
.text:00011038 var_4           = dword ptr -4
.text:00011038 arg_0           = dword ptr  8
.text:00011038
.text:00011038                 push    ebp
.text:00011039                 mov     ebp, esp
.text:0001103B                 sub     esp, 10h
.text:0001103E                 mov     eax, 0CCCCCCCCh
.text:00011043                 mov     [ebp+var_10], eax
.text:00011046                 mov     [ebp+var_C], eax
.text:00011049                 mov     [ebp+var_8], eax
.text:0001104C                 mov     [ebp+var_4], eax
.text:0001104F                 lea     eax, [ebp+var_C]
.text:00011052                 push    eax
.text:00011053                 mov     ecx, [ebp+arg_0]
.text:00011056                 mov     edx, [ebp+arg_0]
.text:00011059                 mov     eax, [ecx]
.text:0001105B                 sub     eax, [edx+18h]
.text:0001105E                 push    eax
.text:0001105F                 mov     ecx, [ebp+arg_0]
.text:00011062                 mov     edx, [ecx+14h]
.text:00011065                 mov     eax, [ebp+arg_0]
.text:00011068                 add     edx, [eax+18h]
.text:0001106B                 push    edx
.text:0001106C                 call    _ssh1_read_bignum
.text:00011071                 add     esp, 0Ch
.text:00011074                 mov     [ebp+var_4], eax
.text:00011077                 cmp     [ebp+var_4], 0
.text:0001107B                 jge     short loc_11081
.text:0001107D                 xor     eax, eax
.text:0001107F                 jmp     short loc_11093
.text:00011081 ; ---------------------------------------------------------------------------
.text:00011081
.text:00011081 loc_11081:                              ; CODE XREF: _ssh1_pkt_getmp+43j
.text:00011081                 mov     ecx, [ebp+arg_0]
.text:00011084                 mov     edx, [ecx+18h]
.text:00011087                 add     edx, [ebp+var_4]
.text:0001108A                 mov     eax, [ebp+arg_0]
.text:0001108D                 mov     [eax+18h], edx
.text:00011090                 mov     eax, [ebp+var_C]
.text:00011093
.text:00011093 loc_11093:                              ; CODE XREF: _ssh1_pkt_getmp+47j
.text:00011093                 push    edx
.text:00011094                 mov     ecx, ebp
.text:00011096                 push    eax
.text:00011097                 lea     edx, $LN6_2
.text:0001109D                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:000110A2                 pop     eax
.text:000110A3                 pop     edx
.text:000110A4                 add     esp, 10h
.text:000110A7                 cmp     ebp, esp
.text:000110A9                 call    __RTC_CheckEsp
.text:000110AE                 mov     esp, ebp
.text:000110B0                 pop     ebp
.text:000110B1                 retn
.text:000110B1 _ssh1_pkt_getmp endp
.text:000110B1
.text:000110B1 ; ---------------------------------------------------------------------------
.text:000110B2                 align 4
.text:000110B4 $LN6_2          dd 1                    ; DATA XREF: _ssh1_pkt_getmp+5Fo
.text:000110B8                 dd offset $LN5_8
.text:000110BC $LN5_8          dd 0FFFFFFF4h, 4        ; DATA XREF: .text:000110B8o
.text:000110C4                 dd offset $LN4_7
.text:000110C8 $LN4_7          dd 0CCCC0062h, 3 dup(0CCCCCCCCh) ; DATA XREF: .text:000110C4o
.text:000110D8
.text:000110D8 ; =============== S U B R O U T I N E =======================================
.text:000110D8
.text:000110D8 ; Attributes: bp-based frame
.text:000110D8
.text:000110D8 _ssh_agent_callback proc near           ; DATA XREF: _do_ssh1_login+14DFo
.text:000110D8                                         ; _do_ssh1_login+1CE8o ...
.text:000110D8
.text:000110D8 var_4           = dword ptr -4
.text:000110D8 arg_0           = dword ptr  8
.text:000110D8 arg_4           = dword ptr  0Ch
.text:000110D8 arg_8           = dword ptr  10h
.text:000110D8
.text:000110D8                 push    ebp
.text:000110D9                 mov     ebp, esp
.text:000110DB                 push    ecx
.text:000110DC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000110E3                 mov     eax, [ebp+arg_0]
.text:000110E6                 mov     [ebp+var_4], eax
.text:000110E9                 mov     ecx, [ebp+var_4]
.text:000110EC                 mov     edx, [ebp+arg_4]
.text:000110EF                 mov     [ecx+228h], edx
.text:000110F5                 mov     eax, [ebp+var_4]
.text:000110F8                 mov     ecx, [ebp+arg_8]
.text:000110FB                 mov     [eax+22Ch], ecx
.text:00011101                 mov     edx, [ebp+var_4]
.text:00011104                 cmp     dword ptr [edx+16Ch], 1
.text:0001110B                 jnz     short loc_11121
.text:0001110D                 push    0
.text:0001110F                 push    0FFFFFFFFh
.text:00011111                 push    0
.text:00011113                 mov     eax, [ebp+var_4]
.text:00011116                 push    eax
.text:00011117                 call    _do_ssh1_login
.text:0001111C                 add     esp, 10h
.text:0001111F                 jmp     short loc_11133
.text:00011121 ; ---------------------------------------------------------------------------
.text:00011121
.text:00011121 loc_11121:                              ; CODE XREF: _ssh_agent_callback+33j
.text:00011121                 push    0
.text:00011123                 push    0FFFFFFFFh
.text:00011125                 push    0
.text:00011127                 mov     ecx, [ebp+var_4]
.text:0001112A                 push    ecx
.text:0001112B                 call    _do_ssh2_authconn
.text:00011130                 add     esp, 10h
.text:00011133
.text:00011133 loc_11133:                              ; CODE XREF: _ssh_agent_callback+47j
.text:00011133                 add     esp, 4
.text:00011136                 cmp     ebp, esp
.text:00011138                 call    __RTC_CheckEsp
.text:0001113D                 mov     esp, ebp
.text:0001113F                 pop     ebp
.text:00011140                 retn
.text:00011140 _ssh_agent_callback endp
.text:00011140
.text:00011140 ; ---------------------------------------------------------------------------
.text:00011141                 align 8
.text:00011148
.text:00011148 ; =============== S U B R O U T I N E =======================================
.text:00011148
.text:00011148 ; Attributes: bp-based frame
.text:00011148
.text:00011148 ; int __cdecl in_commasep_string(char *Str, void *Buf2, int)
.text:00011148 _in_commasep_string proc near           ; CODE XREF: _do_ssh2_transport+C94p
.text:00011148                                         ; _do_ssh2_transport+D9Dp ...
.text:00011148
.text:00011148 Size            = dword ptr -4
.text:00011148 Str             = dword ptr  8
.text:00011148 Buf2            = dword ptr  0Ch
.text:00011148 arg_8           = dword ptr  10h
.text:00011148
.text:00011148                 push    ebp
.text:00011149                 mov     ebp, esp
.text:0001114B                 push    ecx
.text:0001114C                 mov     [ebp+Size], 0CCCCCCCCh
.text:00011153                 cmp     [ebp+Str], 0
.text:00011157                 jz      short loc_1115F
.text:00011159                 cmp     [ebp+Buf2], 0
.text:0001115D                 jnz     short loc_11166
.text:0001115F
.text:0001115F loc_1115F:                              ; CODE XREF: _in_commasep_string+Fj
.text:0001115F                 xor     eax, eax
.text:00011161                 jmp     loc_11205
.text:00011166 ; ---------------------------------------------------------------------------
.text:00011166
.text:00011166 loc_11166:                              ; CODE XREF: _in_commasep_string+15j
.text:00011166                 mov     eax, [ebp+Str]
.text:00011169                 push    eax             ; Str
.text:0001116A                 call    _strlen
.text:0001116F                 add     esp, 4
.text:00011172                 mov     [ebp+Size], eax
.text:00011175
.text:00011175 loc_11175:                              ; CODE XREF: _in_commasep_string+B8j
.text:00011175                 mov     ecx, 1
.text:0001117A                 test    ecx, ecx
.text:0001117C                 jz      loc_11205
.text:00011182                 mov     edx, [ebp+arg_8]
.text:00011185                 cmp     edx, [ebp+Size]
.text:00011188                 jl      short loc_111BF
.text:0001118A                 mov     eax, [ebp+Size]
.text:0001118D                 push    eax             ; Size
.text:0001118E                 mov     ecx, [ebp+Buf2]
.text:00011191                 push    ecx             ; Buf2
.text:00011192                 mov     edx, [ebp+Str]
.text:00011195                 push    edx             ; Buf1
.text:00011196                 call    _memcmp
.text:0001119B                 add     esp, 0Ch
.text:0001119E                 test    eax, eax
.text:000111A0                 jnz     short loc_111BF
.text:000111A2                 mov     eax, [ebp+arg_8]
.text:000111A5                 cmp     eax, [ebp+Size]
.text:000111A8                 jz      short loc_111B8
.text:000111AA                 mov     ecx, [ebp+Buf2]
.text:000111AD                 add     ecx, [ebp+Size]
.text:000111B0                 movsx   edx, byte ptr [ecx]
.text:000111B3                 cmp     edx, 2Ch ; ','
.text:000111B6                 jnz     short loc_111BF
.text:000111B8
.text:000111B8 loc_111B8:                              ; CODE XREF: _in_commasep_string+60j
.text:000111B8                 mov     eax, 1
.text:000111BD                 jmp     short loc_11205
.text:000111BF ; ---------------------------------------------------------------------------
.text:000111BF
.text:000111BF loc_111BF:                              ; CODE XREF: _in_commasep_string+40j
.text:000111BF                                         ; _in_commasep_string+58j ...
.text:000111BF                 cmp     [ebp+arg_8], 0
.text:000111C3                 jle     short loc_111E4
.text:000111C5                 mov     eax, [ebp+Buf2]
.text:000111C8                 movsx   ecx, byte ptr [eax]
.text:000111CB                 cmp     ecx, 2Ch ; ','
.text:000111CE                 jz      short loc_111E4
.text:000111D0                 mov     edx, [ebp+arg_8]
.text:000111D3                 sub     edx, 1
.text:000111D6                 mov     [ebp+arg_8], edx
.text:000111D9                 mov     eax, [ebp+Buf2]
.text:000111DC                 add     eax, 1
.text:000111DF                 mov     [ebp+Buf2], eax
.text:000111E2                 jmp     short loc_111BF
.text:000111E4 ; ---------------------------------------------------------------------------
.text:000111E4
.text:000111E4 loc_111E4:                              ; CODE XREF: _in_commasep_string+7Bj
.text:000111E4                                         ; _in_commasep_string+86j
.text:000111E4                 cmp     [ebp+arg_8], 0
.text:000111E8                 jnz     short loc_111EE
.text:000111EA                 xor     eax, eax
.text:000111EC                 jmp     short loc_11205
.text:000111EE ; ---------------------------------------------------------------------------
.text:000111EE
.text:000111EE loc_111EE:                              ; CODE XREF: _in_commasep_string+A0j
.text:000111EE                 mov     ecx, [ebp+arg_8]
.text:000111F1                 sub     ecx, 1
.text:000111F4                 mov     [ebp+arg_8], ecx
.text:000111F7                 mov     edx, [ebp+Buf2]
.text:000111FA                 add     edx, 1
.text:000111FD                 mov     [ebp+Buf2], edx
.text:00011200                 jmp     loc_11175
.text:00011205 ; ---------------------------------------------------------------------------
.text:00011205
.text:00011205 loc_11205:                              ; CODE XREF: _in_commasep_string+19j
.text:00011205                                         ; _in_commasep_string+34j ...
.text:00011205                 add     esp, 4
.text:00011208                 cmp     ebp, esp
.text:0001120A                 call    __RTC_CheckEsp
.text:0001120F                 mov     esp, ebp
.text:00011211                 pop     ebp
.text:00011212                 retn
.text:00011212 _in_commasep_string endp
.text:00011212
.text:00011212 ; ---------------------------------------------------------------------------
.text:00011213                 align 8
.text:00011218
.text:00011218 ; =============== S U B R O U T I N E =======================================
.text:00011218
.text:00011218 ; Attributes: bp-based frame
.text:00011218
.text:00011218 ; int __cdecl first_in_commasep_string(char *Str, void *Buf2, int)
.text:00011218 _first_in_commasep_string proc near     ; CODE XREF: _do_ssh2_transport+D18p
.text:00011218                                         ; _do_ssh2_transport+E1Ep
.text:00011218
.text:00011218 Size            = dword ptr -4
.text:00011218 Str             = dword ptr  8
.text:00011218 Buf2            = dword ptr  0Ch
.text:00011218 arg_8           = dword ptr  10h
.text:00011218
.text:00011218                 push    ebp
.text:00011219                 mov     ebp, esp
.text:0001121B                 push    ecx
.text:0001121C                 mov     [ebp+Size], 0CCCCCCCCh
.text:00011223                 cmp     [ebp+Str], 0
.text:00011227                 jz      short loc_1122F
.text:00011229                 cmp     [ebp+Buf2], 0
.text:0001122D                 jnz     short loc_11233
.text:0001122F
.text:0001122F loc_1122F:                              ; CODE XREF: _first_in_commasep_string+Fj
.text:0001122F                 xor     eax, eax
.text:00011231                 jmp     short loc_11281
.text:00011233 ; ---------------------------------------------------------------------------
.text:00011233
.text:00011233 loc_11233:                              ; CODE XREF: _first_in_commasep_string+15j
.text:00011233                 mov     eax, [ebp+Str]
.text:00011236                 push    eax             ; Str
.text:00011237                 call    _strlen
.text:0001123C                 add     esp, 4
.text:0001123F                 mov     [ebp+Size], eax
.text:00011242                 mov     ecx, [ebp+arg_8]
.text:00011245                 cmp     ecx, [ebp+Size]
.text:00011248                 jl      short loc_1127F
.text:0001124A                 mov     edx, [ebp+Size]
.text:0001124D                 push    edx             ; Size
.text:0001124E                 mov     eax, [ebp+Buf2]
.text:00011251                 push    eax             ; Buf2
.text:00011252                 mov     ecx, [ebp+Str]
.text:00011255                 push    ecx             ; Buf1
.text:00011256                 call    _memcmp
.text:0001125B                 add     esp, 0Ch
.text:0001125E                 test    eax, eax
.text:00011260                 jnz     short loc_1127F
.text:00011262                 mov     edx, [ebp+arg_8]
.text:00011265                 cmp     edx, [ebp+Size]
.text:00011268                 jz      short loc_11278
.text:0001126A                 mov     eax, [ebp+Buf2]
.text:0001126D                 add     eax, [ebp+Size]
.text:00011270                 movsx   ecx, byte ptr [eax]
.text:00011273                 cmp     ecx, 2Ch ; ','
.text:00011276                 jnz     short loc_1127F
.text:00011278
.text:00011278 loc_11278:                              ; CODE XREF: _first_in_commasep_string+50j
.text:00011278                 mov     eax, 1
.text:0001127D                 jmp     short loc_11281
.text:0001127F ; ---------------------------------------------------------------------------
.text:0001127F
.text:0001127F loc_1127F:                              ; CODE XREF: _first_in_commasep_string+30j
.text:0001127F                                         ; _first_in_commasep_string+48j ...
.text:0001127F                 xor     eax, eax
.text:00011281
.text:00011281 loc_11281:                              ; CODE XREF: _first_in_commasep_string+19j
.text:00011281                                         ; _first_in_commasep_string+65j
.text:00011281                 add     esp, 4
.text:00011284                 cmp     ebp, esp
.text:00011286                 call    __RTC_CheckEsp
.text:0001128B                 mov     esp, ebp
.text:0001128D                 pop     ebp
.text:0001128E                 retn
.text:0001128E _first_in_commasep_string endp
.text:0001128E
.text:0001128E ; ---------------------------------------------------------------------------
.text:0001128F                 db 9 dup(0CCh)
.text:00011298
.text:00011298 ; =============== S U B R O U T I N E =======================================
.text:00011298
.text:00011298 ; Attributes: bp-based frame
.text:00011298
.text:00011298 _ssh2_mkkey     proc near               ; CODE XREF: _do_ssh2_transport+28E1p
.text:00011298                                         ; _do_ssh2_transport+296Dp ...
.text:00011298
.text:00011298 var_8           = dword ptr -8
.text:00011298 var_4           = dword ptr -4
.text:00011298 arg_0           = dword ptr  8
.text:00011298 arg_4           = dword ptr  0Ch
.text:00011298 arg_8           = dword ptr  10h
.text:00011298 arg_C           = byte ptr  14h
.text:00011298 arg_10          = dword ptr  18h
.text:00011298
.text:00011298                 push    ebp
.text:00011299                 mov     ebp, esp
.text:0001129B                 sub     esp, 8
.text:0001129E                 push    esi
.text:0001129F                 mov     [ebp+var_8], 0CCCCCCCCh
.text:000112A6                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000112AD                 mov     eax, [ebp+arg_0]
.text:000112B0                 mov     ecx, [eax+90h]
.text:000112B6                 mov     edx, [ecx+1Ch]
.text:000112B9                 mov     [ebp+var_4], edx
.text:000112BC                 mov     eax, [ebp+var_4]
.text:000112BF                 mov     esi, esp
.text:000112C1                 mov     ecx, [eax]
.text:000112C3                 call    ecx
.text:000112C5                 cmp     esi, esp
.text:000112C7                 call    __RTC_CheckEsp
.text:000112CC                 mov     [ebp+var_8], eax
.text:000112CF                 mov     edx, [ebp+arg_0]
.text:000112D2                 mov     eax, [edx+50h]
.text:000112D5                 and     eax, 20h
.text:000112D8                 jnz     short loc_112EE
.text:000112DA                 mov     ecx, [ebp+arg_4]
.text:000112DD                 push    ecx
.text:000112DE                 mov     edx, [ebp+var_8]
.text:000112E1                 push    edx
.text:000112E2                 mov     eax, [ebp+var_4]
.text:000112E5                 push    eax
.text:000112E6                 call    _hash_mpint
.text:000112EB                 add     esp, 0Ch
.text:000112EE
.text:000112EE loc_112EE:                              ; CODE XREF: _ssh2_mkkey+40j
.text:000112EE                 mov     esi, esp
.text:000112F0                 mov     ecx, [ebp+var_4]
.text:000112F3                 mov     edx, [ecx+0Ch]
.text:000112F6                 push    edx
.text:000112F7                 mov     eax, [ebp+arg_8]
.text:000112FA                 push    eax
.text:000112FB                 mov     ecx, [ebp+var_8]
.text:000112FE                 push    ecx
.text:000112FF                 mov     edx, [ebp+var_4]
.text:00011302                 mov     eax, [edx+4]
.text:00011305                 call    eax
.text:00011307                 add     esp, 0Ch
.text:0001130A                 cmp     esi, esp
.text:0001130C                 call    __RTC_CheckEsp
.text:00011311                 mov     esi, esp
.text:00011313                 push    1
.text:00011315                 lea     ecx, [ebp+arg_C]
.text:00011318                 push    ecx
.text:00011319                 mov     edx, [ebp+var_8]
.text:0001131C                 push    edx
.text:0001131D                 mov     eax, [ebp+var_4]
.text:00011320                 mov     ecx, [eax+4]
.text:00011323                 call    ecx
.text:00011325                 add     esp, 0Ch
.text:00011328                 cmp     esi, esp
.text:0001132A                 call    __RTC_CheckEsp
.text:0001132F                 mov     esi, esp
.text:00011331                 mov     edx, [ebp+arg_0]
.text:00011334                 mov     eax, [edx+0BCh]
.text:0001133A                 push    eax
.text:0001133B                 mov     ecx, [ebp+arg_0]
.text:0001133E                 add     ecx, 9Ch ; '£'
.text:00011344                 push    ecx
.text:00011345                 mov     edx, [ebp+var_8]
.text:00011348                 push    edx
.text:00011349                 mov     eax, [ebp+var_4]
.text:0001134C                 mov     ecx, [eax+4]
.text:0001134F                 call    ecx
.text:00011351                 add     esp, 0Ch
.text:00011354                 cmp     esi, esp
.text:00011356                 call    __RTC_CheckEsp
.text:0001135B                 mov     esi, esp
.text:0001135D                 mov     edx, [ebp+arg_10]
.text:00011360                 push    edx
.text:00011361                 mov     eax, [ebp+var_8]
.text:00011364                 push    eax
.text:00011365                 mov     ecx, [ebp+var_4]
.text:00011368                 mov     edx, [ecx+8]
.text:0001136B                 call    edx
.text:0001136D                 add     esp, 8
.text:00011370                 cmp     esi, esp
.text:00011372                 call    __RTC_CheckEsp
.text:00011377                 mov     eax, [ebp+var_4]
.text:0001137A                 mov     esi, esp
.text:0001137C                 mov     ecx, [eax]
.text:0001137E                 call    ecx
.text:00011380                 cmp     esi, esp
.text:00011382                 call    __RTC_CheckEsp
.text:00011387                 mov     [ebp+var_8], eax
.text:0001138A                 mov     edx, [ebp+arg_0]
.text:0001138D                 mov     eax, [edx+50h]
.text:00011390                 and     eax, 20h
.text:00011393                 jnz     short loc_113A9
.text:00011395                 mov     ecx, [ebp+arg_4]
.text:00011398                 push    ecx
.text:00011399                 mov     edx, [ebp+var_8]
.text:0001139C                 push    edx
.text:0001139D                 mov     eax, [ebp+var_4]
.text:000113A0                 push    eax
.text:000113A1                 call    _hash_mpint
.text:000113A6                 add     esp, 0Ch
.text:000113A9
.text:000113A9 loc_113A9:                              ; CODE XREF: _ssh2_mkkey+FBj
.text:000113A9                 mov     esi, esp
.text:000113AB                 mov     ecx, [ebp+var_4]
.text:000113AE                 mov     edx, [ecx+0Ch]
.text:000113B1                 push    edx
.text:000113B2                 mov     eax, [ebp+arg_8]
.text:000113B5                 push    eax
.text:000113B6                 mov     ecx, [ebp+var_8]
.text:000113B9                 push    ecx
.text:000113BA                 mov     edx, [ebp+var_4]
.text:000113BD                 mov     eax, [edx+4]
.text:000113C0                 call    eax
.text:000113C2                 add     esp, 0Ch
.text:000113C5                 cmp     esi, esp
.text:000113C7                 call    __RTC_CheckEsp
.text:000113CC                 mov     esi, esp
.text:000113CE                 mov     ecx, [ebp+var_4]
.text:000113D1                 mov     edx, [ecx+0Ch]
.text:000113D4                 push    edx
.text:000113D5                 mov     eax, [ebp+arg_10]
.text:000113D8                 push    eax
.text:000113D9                 mov     ecx, [ebp+var_8]
.text:000113DC                 push    ecx
.text:000113DD                 mov     edx, [ebp+var_4]
.text:000113E0                 mov     eax, [edx+4]
.text:000113E3                 call    eax
.text:000113E5                 add     esp, 0Ch
.text:000113E8                 cmp     esi, esp
.text:000113EA                 call    __RTC_CheckEsp
.text:000113EF                 mov     ecx, [ebp+var_4]
.text:000113F2                 mov     edx, [ebp+arg_10]
.text:000113F5                 add     edx, [ecx+0Ch]
.text:000113F8                 mov     esi, esp
.text:000113FA                 push    edx
.text:000113FB                 mov     eax, [ebp+var_8]
.text:000113FE                 push    eax
.text:000113FF                 mov     ecx, [ebp+var_4]
.text:00011402                 mov     edx, [ecx+8]
.text:00011405                 call    edx
.text:00011407                 add     esp, 8
.text:0001140A                 cmp     esi, esp
.text:0001140C                 call    __RTC_CheckEsp
.text:00011411                 pop     esi
.text:00011412                 add     esp, 8
.text:00011415                 cmp     ebp, esp
.text:00011417                 call    __RTC_CheckEsp
.text:0001141C                 mov     esp, ebp
.text:0001141E                 pop     ebp
.text:0001141F                 retn
.text:0001141F _ssh2_mkkey     endp
.text:0001141F
.text:0001141F ; ---------------------------------------------------------------------------
.text:00011420                 db 8 dup(0CCh)
.text:00011428
.text:00011428 ; =============== S U B R O U T I N E =======================================
.text:00011428
.text:00011428 ; Attributes: bp-based frame
.text:00011428
.text:00011428 _ssh2_add_channel_data proc near        ; CODE XREF: _sshfwd_write+6Ap
.text:00011428                                         ; _do_ssh2_authconn+43BFp ...
.text:00011428
.text:00011428 arg_0           = dword ptr  8
.text:00011428 arg_4           = dword ptr  0Ch
.text:00011428 arg_8           = dword ptr  10h
.text:00011428
.text:00011428                 push    ebp
.text:00011429                 mov     ebp, esp
.text:0001142B                 mov     eax, [ebp+arg_8]
.text:0001142E                 push    eax
.text:0001142F                 mov     ecx, [ebp+arg_4]
.text:00011432                 push    ecx
.text:00011433                 mov     edx, [ebp+arg_0]
.text:00011436                 add     edx, 20h ; ' '
.text:00011439                 push    edx
.text:0001143A                 call    _bufchain_add
.text:0001143F                 add     esp, 0Ch
.text:00011442                 cmp     ebp, esp
.text:00011444                 call    __RTC_CheckEsp
.text:00011449                 pop     ebp
.text:0001144A                 retn
.text:0001144A _ssh2_add_channel_data endp
.text:0001144A
.text:0001144A ; ---------------------------------------------------------------------------
.text:0001144B                 db 0Dh dup(0CCh)
.text:00011458
.text:00011458 ; =============== S U B R O U T I N E =======================================
.text:00011458
.text:00011458 ; Attributes: bp-based frame
.text:00011458
.text:00011458 _ssh2_try_send  proc near               ; CODE XREF: _sshfwd_write+76p
.text:00011458                                         ; _ssh2_try_send_and_unthrottle+25p ...
.text:00011458
.text:00011458 var_24          = dword ptr -24h
.text:00011458 Src             = dword ptr -20h
.text:00011458 var_1C          = dword ptr -1Ch
.text:00011458 var_18          = dword ptr -18h
.text:00011458 Size            = dword ptr -14h
.text:00011458 var_10          = dword ptr -10h
.text:00011458 var_C           = dword ptr -0Ch
.text:00011458 var_8           = dword ptr -8
.text:00011458 var_4           = dword ptr -4
.text:00011458 arg_0           = dword ptr  8
.text:00011458
.text:00011458                 push    ebp
.text:00011459                 mov     ebp, esp
.text:0001145B                 sub     esp, 24h
.text:0001145E                 mov     eax, 0CCCCCCCCh
.text:00011463                 mov     [ebp+var_24], eax
.text:00011466                 mov     [ebp+Src], eax
.text:00011469                 mov     [ebp+var_1C], eax
.text:0001146C                 mov     [ebp+var_18], eax
.text:0001146F                 mov     [ebp+Size], eax
.text:00011472                 mov     [ebp+var_10], eax
.text:00011475                 mov     [ebp+var_C], eax
.text:00011478                 mov     [ebp+var_8], eax
.text:0001147B                 mov     [ebp+var_4], eax
.text:0001147E                 mov     eax, [ebp+arg_0]
.text:00011481                 mov     ecx, [eax]
.text:00011483                 mov     [ebp+var_4], ecx
.text:00011486
.text:00011486 loc_11486:                              ; CODE XREF: _ssh2_try_send+103j
.text:00011486                 mov     edx, [ebp+arg_0]
.text:00011489                 cmp     dword ptr [edx+2Ch], 0
.text:0001148D                 jbe     loc_11560
.text:00011493                 mov     eax, [ebp+arg_0]
.text:00011496                 add     eax, 20h ; ' '
.text:00011499                 push    eax
.text:0001149A                 call    _bufchain_size
.text:0001149F                 add     esp, 4
.text:000114A2                 test    eax, eax
.text:000114A4                 jle     loc_11560
.text:000114AA                 lea     ecx, [ebp+Size]
.text:000114AD                 push    ecx
.text:000114AE                 lea     edx, [ebp+Src]
.text:000114B1                 push    edx
.text:000114B2                 mov     eax, [ebp+arg_0]
.text:000114B5                 add     eax, 20h ; ' '
.text:000114B8                 push    eax
.text:000114B9                 call    _bufchain_prefix
.text:000114BE                 add     esp, 0Ch
.text:000114C1                 mov     ecx, [ebp+arg_0]
.text:000114C4                 mov     edx, [ebp+Size]
.text:000114C7                 cmp     edx, [ecx+2Ch]
.text:000114CA                 jbe     short loc_114D5
.text:000114CC                 mov     eax, [ebp+arg_0]
.text:000114CF                 mov     ecx, [eax+2Ch]
.text:000114D2                 mov     [ebp+Size], ecx
.text:000114D5
.text:000114D5 loc_114D5:                              ; CODE XREF: _ssh2_try_send+72j
.text:000114D5                 mov     edx, [ebp+arg_0]
.text:000114D8                 mov     eax, [ebp+Size]
.text:000114DB                 cmp     eax, [edx+30h]
.text:000114DE                 jbe     short loc_114E9
.text:000114E0                 mov     ecx, [ebp+arg_0]
.text:000114E3                 mov     edx, [ecx+30h]
.text:000114E6                 mov     [ebp+Size], edx
.text:000114E9
.text:000114E9 loc_114E9:                              ; CODE XREF: _ssh2_try_send+86j
.text:000114E9                 push    5Eh ; '^'
.text:000114EB                 call    _ssh2_pkt_init
.text:000114F0                 add     esp, 4
.text:000114F3                 mov     [ebp+var_8], eax
.text:000114F6                 mov     eax, [ebp+arg_0]
.text:000114F9                 mov     ecx, [eax+4]
.text:000114FC                 push    ecx
.text:000114FD                 mov     edx, [ebp+var_8]
.text:00011500                 push    edx
.text:00011501                 call    _ssh_pkt_adduint32
.text:00011506                 add     esp, 8
.text:00011509                 mov     eax, [ebp+var_8]
.text:0001150C                 push    eax
.text:0001150D                 call    _ssh_pkt_addstring_start
.text:00011512                 add     esp, 4
.text:00011515                 mov     ecx, [ebp+Size]
.text:00011518                 push    ecx             ; Size
.text:00011519                 mov     edx, [ebp+Src]
.text:0001151C                 push    edx             ; Src
.text:0001151D                 mov     eax, [ebp+var_8]
.text:00011520                 push    eax             ; int
.text:00011521                 call    _ssh_pkt_addstring_data
.text:00011526                 add     esp, 0Ch
.text:00011529                 mov     ecx, [ebp+var_8]
.text:0001152C                 push    ecx
.text:0001152D                 mov     edx, [ebp+var_4]
.text:00011530                 push    edx
.text:00011531                 call    _ssh2_pkt_send
.text:00011536                 add     esp, 8
.text:00011539                 mov     eax, [ebp+Size]
.text:0001153C                 push    eax
.text:0001153D                 mov     ecx, [ebp+arg_0]
.text:00011540                 add     ecx, 20h ; ' '
.text:00011543                 push    ecx
.text:00011544                 call    _bufchain_consume
.text:00011549                 add     esp, 8
.text:0001154C                 mov     edx, [ebp+arg_0]
.text:0001154F                 mov     eax, [edx+2Ch]
.text:00011552                 sub     eax, [ebp+Size]
.text:00011555                 mov     ecx, [ebp+arg_0]
.text:00011558                 mov     [ecx+2Ch], eax
.text:0001155B                 jmp     loc_11486
.text:00011560 ; ---------------------------------------------------------------------------
.text:00011560
.text:00011560 loc_11560:                              ; CODE XREF: _ssh2_try_send+35j
.text:00011560                                         ; _ssh2_try_send+4Cj
.text:00011560                 mov     edx, [ebp+arg_0]
.text:00011563                 add     edx, 20h ; ' '
.text:00011566                 push    edx
.text:00011567                 call    _bufchain_size
.text:0001156C                 add     esp, 4
.text:0001156F                 mov     [ebp+var_C], eax
.text:00011572                 cmp     [ebp+var_C], 0
.text:00011576                 jnz     short loc_1158D
.text:00011578                 mov     eax, [ebp+arg_0]
.text:0001157B                 cmp     dword ptr [eax+18h], 0
.text:0001157F                 jz      short loc_1158D
.text:00011581                 mov     ecx, [ebp+arg_0]
.text:00011584                 push    ecx
.text:00011585                 call    _ssh_channel_try_eof
.text:0001158A                 add     esp, 4
.text:0001158D
.text:0001158D loc_1158D:                              ; CODE XREF: _ssh2_try_send+11Ej
.text:0001158D                                         ; _ssh2_try_send+127j
.text:0001158D                 mov     eax, [ebp+var_C]
.text:00011590                 push    edx
.text:00011591                 mov     ecx, ebp
.text:00011593                 push    eax
.text:00011594                 lea     edx, $LN11_2
.text:0001159A                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0001159F                 pop     eax
.text:000115A0                 pop     edx
.text:000115A1                 add     esp, 24h
.text:000115A4                 cmp     ebp, esp
.text:000115A6                 call    __RTC_CheckEsp
.text:000115AB                 mov     esp, ebp
.text:000115AD                 pop     ebp
.text:000115AE                 retn
.text:000115AE _ssh2_try_send  endp
.text:000115AE
.text:000115AE ; ---------------------------------------------------------------------------
.text:000115AF                 align 10h
.text:000115B0 $LN11_2         dd 2                    ; DATA XREF: _ssh2_try_send+13Co
.text:000115B4                 dd offset $LN10_2
.text:000115B8 $LN10_2         dd 0FFFFFFECh, 4        ; DATA XREF: .text:000115B4o
.text:000115C0                 dd offset $LN8_1        ; "len"
.text:000115C4                 dd 0FFFFFFE0h, 4
.text:000115CC                 dd offset $LN9_1        ; "data"
.text:000115D0 $LN9_1          db 'data',0             ; DATA XREF: .text:000115CCo
.text:000115D5 $LN8_1          db 'len',0              ; DATA XREF: .text:000115C0o
.text:000115D9                 db 0Fh dup(0CCh)
.text:000115E8
.text:000115E8 ; =============== S U B R O U T I N E =======================================
.text:000115E8
.text:000115E8 ; Attributes: bp-based frame
.text:000115E8
.text:000115E8 _ssh2_set_window proc near              ; CODE XREF: _sshfwd_unthrottle+71p
.text:000115E8                                         ; _sshfwd_x11_is_local+2Ep ...
.text:000115E8
.text:000115E8 var_C           = dword ptr -0Ch
.text:000115E8 var_8           = dword ptr -8
.text:000115E8 var_4           = dword ptr -4
.text:000115E8 arg_0           = dword ptr  8
.text:000115E8 arg_4           = dword ptr  0Ch
.text:000115E8
.text:000115E8                 push    ebp
.text:000115E9                 mov     ebp, esp
.text:000115EB                 sub     esp, 0Ch
.text:000115EE                 mov     [ebp+var_C], 0CCCCCCCCh
.text:000115F5                 mov     [ebp+var_8], 0CCCCCCCCh
.text:000115FC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00011603                 mov     eax, [ebp+arg_0]
.text:00011606                 mov     ecx, [eax]
.text:00011608                 mov     [ebp+var_4], ecx
.text:0001160B                 mov     edx, [ebp+arg_0]
.text:0001160E                 mov     eax, [edx+14h]
.text:00011611                 and     eax, 6
.text:00011614                 jz      short loc_1161B
.text:00011616                 jmp     loc_1173D
.text:0001161B ; ---------------------------------------------------------------------------
.text:0001161B
.text:0001161B loc_1161B:                              ; CODE XREF: _ssh2_set_window+2Cj
.text:0001161B                 mov     ecx, [ebp+arg_0]
.text:0001161E                 cmp     dword ptr [ecx+0Ch], 1
.text:00011622                 jnz     short loc_11632
.text:00011624                 mov     edx, [ebp+arg_0]
.text:00011627                 cmp     dword ptr [edx+50h], 0
.text:0001162B                 jz      short loc_11632
.text:0001162D                 jmp     loc_1173D
.text:00011632 ; ---------------------------------------------------------------------------
.text:00011632
.text:00011632 loc_11632:                              ; CODE XREF: _ssh2_set_window+3Aj
.text:00011632                                         ; _ssh2_set_window+43j
.text:00011632                 mov     eax, [ebp+var_4]
.text:00011635                 mov     ecx, [eax+50h]
.text:00011638                 and     ecx, 100h
.text:0001163E                 jz      short loc_11650
.text:00011640                 cmp     [ebp+arg_4], 4000h
.text:00011647                 jbe     short loc_11650
.text:00011649                 mov     [ebp+arg_4], 4000h
.text:00011650
.text:00011650 loc_11650:                              ; CODE XREF: _ssh2_set_window+56j
.text:00011650                                         ; _ssh2_set_window+5Fj
.text:00011650                 mov     eax, [ebp+arg_4]
.text:00011653                 cdq
.text:00011654                 sub     eax, edx
.text:00011656                 sar     eax, 1
.text:00011658                 mov     edx, [ebp+arg_0]
.text:0001165B                 cmp     eax, [edx+34h]
.text:0001165E                 jl      loc_1173D
.text:00011664                 mov     eax, [ebp+arg_0]
.text:00011667                 mov     ecx, [ebp+arg_4]
.text:0001166A                 cmp     ecx, [eax+38h]
.text:0001166D                 jnz     short loc_116DB
.text:0001166F                 mov     edx, [ebp+var_4]
.text:00011672                 mov     eax, [edx+50h]
.text:00011675                 and     eax, 400h
.text:0001167A                 jnz     short loc_116DB
.text:0001167C                 push    4
.text:0001167E                 push    1
.text:00011680                 call    _safemalloc
.text:00011685                 add     esp, 8
.text:00011688                 mov     [ebp+var_C], eax
.text:0001168B                 mov     ecx, [ebp+arg_0]
.text:0001168E                 mov     edx, [ebp+arg_4]
.text:00011691                 sub     edx, [ecx+34h]
.text:00011694                 mov     eax, [ebp+var_C]
.text:00011697                 mov     [eax], edx
.text:00011699                 mov     ecx, [ebp+var_C]
.text:0001169C                 push    ecx             ; int
.text:0001169D                 push    offset _ssh2_handle_winadj_response ; int
.text:000116A2                 push    offset $SG92236 ; "winadj@putty.projects.tartarus.org"
.text:000116A7                 mov     edx, [ebp+arg_0]
.text:000116AA                 push    edx             ; int
.text:000116AB                 call    _ssh2_chanreq_init
.text:000116B0                 add     esp, 10h
.text:000116B3                 mov     [ebp+var_8], eax
.text:000116B6                 mov     eax, [ebp+var_8]
.text:000116B9                 push    eax
.text:000116BA                 mov     ecx, [ebp+var_4]
.text:000116BD                 push    ecx
.text:000116BE                 call    _ssh2_pkt_send
.text:000116C3                 add     esp, 8
.text:000116C6                 mov     edx, [ebp+arg_0]
.text:000116C9                 cmp     dword ptr [edx+48h], 2
.text:000116CD                 jz      short loc_116D9
.text:000116CF                 mov     eax, [ebp+arg_0]
.text:000116D2                 mov     dword ptr [eax+48h], 1
.text:000116D9
.text:000116D9 loc_116D9:                              ; CODE XREF: _ssh2_set_window+E5j
.text:000116D9                 jmp     short loc_116EE
.text:000116DB ; ---------------------------------------------------------------------------
.text:000116DB
.text:000116DB loc_116DB:                              ; CODE XREF: _ssh2_set_window+85j
.text:000116DB                                         ; _ssh2_set_window+92j
.text:000116DB                 mov     ecx, [ebp+arg_0]
.text:000116DE                 mov     edx, [ebp+arg_4]
.text:000116E1                 mov     [ecx+3Ch], edx
.text:000116E4                 mov     eax, [ebp+arg_0]
.text:000116E7                 mov     dword ptr [eax+48h], 0
.text:000116EE
.text:000116EE loc_116EE:                              ; CODE XREF: _ssh2_set_window:loc_116D9j
.text:000116EE                 push    5Dh ; ']'
.text:000116F0                 call    _ssh2_pkt_init
.text:000116F5                 add     esp, 4
.text:000116F8                 mov     [ebp+var_8], eax
.text:000116FB                 mov     ecx, [ebp+arg_0]
.text:000116FE                 mov     edx, [ecx+4]
.text:00011701                 push    edx
.text:00011702                 mov     eax, [ebp+var_8]
.text:00011705                 push    eax
.text:00011706                 call    _ssh_pkt_adduint32
.text:0001170B                 add     esp, 8
.text:0001170E                 mov     ecx, [ebp+arg_0]
.text:00011711                 mov     edx, [ebp+arg_4]
.text:00011714                 sub     edx, [ecx+34h]
.text:00011717                 push    edx
.text:00011718                 mov     eax, [ebp+var_8]
.text:0001171B                 push    eax
.text:0001171C                 call    _ssh_pkt_adduint32
.text:00011721                 add     esp, 8
.text:00011724                 mov     ecx, [ebp+var_8]
.text:00011727                 push    ecx
.text:00011728                 mov     edx, [ebp+var_4]
.text:0001172B                 push    edx
.text:0001172C                 call    _ssh2_pkt_send
.text:00011731                 add     esp, 8
.text:00011734                 mov     eax, [ebp+arg_0]
.text:00011737                 mov     ecx, [ebp+arg_4]
.text:0001173A                 mov     [eax+34h], ecx
.text:0001173D
.text:0001173D loc_1173D:                              ; CODE XREF: _ssh2_set_window+2Ej
.text:0001173D                                         ; _ssh2_set_window+45j ...
.text:0001173D                 add     esp, 0Ch
.text:00011740                 cmp     ebp, esp
.text:00011742                 call    __RTC_CheckEsp
.text:00011747                 mov     esp, ebp
.text:00011749                 pop     ebp
.text:0001174A                 retn
.text:0001174A _ssh2_set_window endp
.text:0001174A
.text:0001174A ; ---------------------------------------------------------------------------
.text:0001174B                 db 0Dh dup(0CCh)
.text:00011758
.text:00011758 ; =============== S U B R O U T I N E =======================================
.text:00011758
.text:00011758 ; Attributes: bp-based frame
.text:00011758
.text:00011758 ; int __cdecl ssh2_chanreq_init(int, char *Str, int, int)
.text:00011758 _ssh2_chanreq_init proc near            ; CODE XREF: _ssh2_set_window+C3p
.text:00011758                                         ; _do_ssh2_authconn+3EA1p ...
.text:00011758
.text:00011758 var_4           = dword ptr -4
.text:00011758 arg_0           = dword ptr  8
.text:00011758 Str             = dword ptr  0Ch
.text:00011758 arg_8           = dword ptr  10h
.text:00011758 arg_C           = dword ptr  14h
.text:00011758
.text:00011758                 push    ebp
.text:00011759                 mov     ebp, esp
.text:0001175B                 push    ecx
.text:0001175C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00011763                 mov     eax, [ebp+arg_0]
.text:00011766                 mov     ecx, [eax+14h]
.text:00011769                 and     ecx, 0Ah
.text:0001176C                 jz      short loc_11785
.text:0001176E                 push    1C63h           ; Line
.text:00011773                 push    offset $SG92212 ; "..\\..\\..\\ssh.c"
.text:00011778                 push    offset $SG92213 ; "!(c->closes & (CLOSES_SENT_CLOSE | CLOS"...
.text:0001177D                 call    __wassert
.text:00011782 ; ---------------------------------------------------------------------------
.text:00011782                 add     esp, 0Ch
.text:00011785
.text:00011785 loc_11785:                              ; CODE XREF: _ssh2_chanreq_init+14j
.text:00011785                 push    62h ; 'b'
.text:00011787                 call    _ssh2_pkt_init
.text:0001178C                 add     esp, 4
.text:0001178F                 mov     [ebp+var_4], eax
.text:00011792                 mov     eax, [ebp+arg_0]
.text:00011795                 mov     ecx, [eax+4]
.text:00011798                 push    ecx
.text:00011799                 mov     edx, [ebp+var_4]
.text:0001179C                 push    edx
.text:0001179D                 call    _ssh_pkt_adduint32
.text:000117A2                 add     esp, 8
.text:000117A5                 mov     eax, [ebp+Str]
.text:000117A8                 push    eax             ; Str
.text:000117A9                 mov     ecx, [ebp+var_4]
.text:000117AC                 push    ecx             ; int
.text:000117AD                 call    _ssh_pkt_addstring
.text:000117B2                 add     esp, 8
.text:000117B5                 xor     edx, edx
.text:000117B7                 cmp     [ebp+arg_8], 0
.text:000117BB                 setnz   dl
.text:000117BE                 movzx   eax, dl
.text:000117C1                 push    eax             ; Src
.text:000117C2                 mov     ecx, [ebp+var_4]
.text:000117C5                 push    ecx             ; int
.text:000117C6                 call    _ssh2_pkt_addbool
.text:000117CB                 add     esp, 8
.text:000117CE                 cmp     [ebp+arg_8], 0
.text:000117D2                 jz      short loc_117E8
.text:000117D4                 mov     edx, [ebp+arg_C]
.text:000117D7                 push    edx
.text:000117D8                 mov     eax, [ebp+arg_8]
.text:000117DB                 push    eax
.text:000117DC                 mov     ecx, [ebp+arg_0]
.text:000117DF                 push    ecx
.text:000117E0                 call    _ssh2_queue_chanreq_handler
.text:000117E5                 add     esp, 0Ch
.text:000117E8
.text:000117E8 loc_117E8:                              ; CODE XREF: _ssh2_chanreq_init+7Aj
.text:000117E8                 mov     eax, [ebp+var_4]
.text:000117EB                 add     esp, 4
.text:000117EE                 cmp     ebp, esp
.text:000117F0                 call    __RTC_CheckEsp
.text:000117F5                 mov     esp, ebp
.text:000117F7                 pop     ebp
.text:000117F8                 retn
.text:000117F8 _ssh2_chanreq_init endp
.text:000117F8
.text:000117F8 ; ---------------------------------------------------------------------------
.text:000117F9                 db 0Fh dup(0CCh)
.text:00011808
.text:00011808 ; =============== S U B R O U T I N E =======================================
.text:00011808
.text:00011808 ; Attributes: bp-based frame
.text:00011808
.text:00011808 _ssh2_queue_chanreq_handler proc near   ; CODE XREF: _ssh2_chanreq_init+88p
.text:00011808
.text:00011808 var_4           = dword ptr -4
.text:00011808 arg_0           = dword ptr  8
.text:00011808 arg_4           = dword ptr  0Ch
.text:00011808 arg_8           = dword ptr  10h
.text:00011808
.text:00011808                 push    ebp
.text:00011809                 mov     ebp, esp
.text:0001180B                 push    ecx
.text:0001180C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00011813                 push    0Ch
.text:00011815                 push    1
.text:00011817                 call    _safemalloc
.text:0001181C                 add     esp, 8
.text:0001181F                 mov     [ebp+var_4], eax
.text:00011822                 mov     eax, [ebp+arg_0]
.text:00011825                 mov     ecx, [eax+14h]
.text:00011828                 and     ecx, 0Ah
.text:0001182B                 jz      short loc_11844
.text:0001182D                 push    1C46h           ; Line
.text:00011832                 push    offset $SG92195 ; "..\\..\\..\\ssh.c"
.text:00011837                 push    offset $SG92196 ; "!(c->closes & (CLOSES_SENT_CLOSE | CLOS"...
.text:0001183C                 call    __wassert
.text:00011841 ; ---------------------------------------------------------------------------
.text:00011841                 add     esp, 0Ch
.text:00011844
.text:00011844 loc_11844:                              ; CODE XREF: _ssh2_queue_chanreq_handler+23j
.text:00011844                 mov     eax, [ebp+var_4]
.text:00011847                 mov     ecx, [ebp+arg_4]
.text:0001184A                 mov     [eax], ecx
.text:0001184C                 mov     edx, [ebp+var_4]
.text:0001184F                 mov     eax, [ebp+arg_8]
.text:00011852                 mov     [edx+4], eax
.text:00011855                 mov     ecx, [ebp+var_4]
.text:00011858                 mov     dword ptr [ecx+8], 0
.text:0001185F                 mov     edx, [ebp+arg_0]
.text:00011862                 cmp     dword ptr [edx+40h], 0
.text:00011866                 jnz     short loc_11873
.text:00011868                 mov     eax, [ebp+arg_0]
.text:0001186B                 mov     ecx, [ebp+var_4]
.text:0001186E                 mov     [eax+40h], ecx
.text:00011871                 jmp     short loc_1187F
.text:00011873 ; ---------------------------------------------------------------------------
.text:00011873
.text:00011873 loc_11873:                              ; CODE XREF: _ssh2_queue_chanreq_handler+5Ej
.text:00011873                 mov     edx, [ebp+arg_0]
.text:00011876                 mov     eax, [edx+44h]
.text:00011879                 mov     ecx, [ebp+var_4]
.text:0001187C                 mov     [eax+8], ecx
.text:0001187F
.text:0001187F loc_1187F:                              ; CODE XREF: _ssh2_queue_chanreq_handler+69j
.text:0001187F                 mov     edx, [ebp+arg_0]
.text:00011882                 mov     eax, [ebp+var_4]
.text:00011885                 mov     [edx+44h], eax
.text:00011888                 add     esp, 4
.text:0001188B                 cmp     ebp, esp
.text:0001188D                 call    __RTC_CheckEsp
.text:00011892                 mov     esp, ebp
.text:00011894                 pop     ebp
.text:00011895                 retn
.text:00011895 _ssh2_queue_chanreq_handler endp
.text:00011895
.text:00011895 ; ---------------------------------------------------------------------------
.text:00011896                 align 4
.text:00011898
.text:00011898 ; =============== S U B R O U T I N E =======================================
.text:00011898
.text:00011898 ; Attributes: bp-based frame
.text:00011898
.text:00011898 _ssh2_handle_winadj_response proc near  ; DATA XREF: _ssh2_set_window+B5o
.text:00011898
.text:00011898 var_4           = dword ptr -4
.text:00011898 arg_0           = dword ptr  8
.text:00011898 arg_8           = dword ptr  10h
.text:00011898
.text:00011898                 push    ebp
.text:00011899                 mov     ebp, esp
.text:0001189B                 push    ecx
.text:0001189C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000118A3                 mov     eax, [ebp+arg_8]
.text:000118A6                 mov     [ebp+var_4], eax
.text:000118A9                 mov     ecx, [ebp+arg_0]
.text:000118AC                 mov     edx, [ecx+3Ch]
.text:000118AF                 mov     eax, [ebp+var_4]
.text:000118B2                 add     edx, [eax]
.text:000118B4                 mov     ecx, [ebp+arg_0]
.text:000118B7                 mov     [ecx+3Ch], edx
.text:000118BA                 mov     edx, [ebp+var_4]
.text:000118BD                 push    edx
.text:000118BE                 call    _safefree
.text:000118C3                 add     esp, 4
.text:000118C6                 mov     eax, [ebp+arg_0]
.text:000118C9                 cmp     dword ptr [eax+48h], 1
.text:000118CD                 jnz     short loc_118D9
.text:000118CF                 mov     ecx, [ebp+arg_0]
.text:000118D2                 mov     dword ptr [ecx+48h], 2
.text:000118D9
.text:000118D9 loc_118D9:                              ; CODE XREF: _ssh2_handle_winadj_response+35j
.text:000118D9                 add     esp, 4
.text:000118DC                 cmp     ebp, esp
.text:000118DE                 call    __RTC_CheckEsp
.text:000118E3                 mov     esp, ebp
.text:000118E5                 pop     ebp
.text:000118E6                 retn
.text:000118E6 _ssh2_handle_winadj_response endp
.text:000118E6
.text:000118E6 ; ---------------------------------------------------------------------------
.text:000118E7                 align 4
.text:000118E8
.text:000118E8 ; =============== S U B R O U T I N E =======================================
.text:000118E8
.text:000118E8 ; Attributes: bp-based frame
.text:000118E8
.text:000118E8                 public _ssh_sharing_downstream_connected
.text:000118E8 _ssh_sharing_downstream_connected proc near
.text:000118E8
.text:000118E8 arg_0           = dword ptr  8
.text:000118E8 arg_4           = dword ptr  0Ch
.text:000118E8
.text:000118E8                 push    ebp
.text:000118E9                 mov     ebp, esp
.text:000118EB                 mov     eax, [ebp+arg_4]
.text:000118EE                 push    eax
.text:000118EF                 push    offset $SG92350 ; "Connection sharing downstream #%u conne"...
.text:000118F4                 mov     ecx, [ebp+arg_0]
.text:000118F7                 push    ecx
.text:000118F8                 call    _logeventf
.text:000118FD                 add     esp, 0Ch
.text:00011900                 cmp     ebp, esp
.text:00011902                 call    __RTC_CheckEsp
.text:00011907                 pop     ebp
.text:00011908                 retn
.text:00011908 _ssh_sharing_downstream_connected endp
.text:00011908
.text:00011908 ; ---------------------------------------------------------------------------
.text:00011909                 db 0Fh dup(0CCh)
.text:00011918
.text:00011918 ; =============== S U B R O U T I N E =======================================
.text:00011918
.text:00011918 ; Attributes: bp-based frame
.text:00011918
.text:00011918                 public _ssh_sharing_downstream_disconnected
.text:00011918 _ssh_sharing_downstream_disconnected proc near
.text:00011918
.text:00011918 arg_0           = dword ptr  8
.text:00011918 arg_4           = dword ptr  0Ch
.text:00011918
.text:00011918                 push    ebp
.text:00011919                 mov     ebp, esp
.text:0001191B                 mov     eax, [ebp+arg_4]
.text:0001191E                 push    eax
.text:0001191F                 push    offset $SG92356 ; "Connection sharing downstream #%u disco"...
.text:00011924                 mov     ecx, [ebp+arg_0]
.text:00011927                 push    ecx
.text:00011928                 call    _logeventf
.text:0001192D                 add     esp, 0Ch
.text:00011930                 mov     edx, [ebp+arg_0]
.text:00011933                 push    edx
.text:00011934                 call    _ssh_check_termination
.text:00011939                 add     esp, 4
.text:0001193C                 cmp     ebp, esp
.text:0001193E                 call    __RTC_CheckEsp
.text:00011943                 pop     ebp
.text:00011944                 retn
.text:00011944 _ssh_sharing_downstream_disconnected endp
.text:00011944
.text:00011944 ; ---------------------------------------------------------------------------
.text:00011945                 align 4
.text:00011948
.text:00011948 ; =============== S U B R O U T I N E =======================================
.text:00011948
.text:00011948 ; Attributes: bp-based frame
.text:00011948
.text:00011948 _ssh_check_termination proc near        ; CODE XREF: _ssh_sharing_downstream_disconnected+1Cp
.text:00011948                                         ; _ssh_channel_destroy+12Cp
.text:00011948
.text:00011948 arg_0           = dword ptr  8
.text:00011948
.text:00011948                 push    ebp
.text:00011949                 mov     ebp, esp
.text:0001194B                 mov     eax, [ebp+arg_0]
.text:0001194E                 cmp     dword ptr [eax+16Ch], 2
.text:00011955                 jnz     short loc_119BE
.text:00011957                 push    2Bh ; '+'
.text:00011959                 mov     ecx, [ebp+arg_0]
.text:0001195C                 mov     edx, [ecx+21Ch]
.text:00011962                 push    edx
.text:00011963                 call    _conf_get_int
.text:00011968                 add     esp, 8
.text:0001196B                 test    eax, eax
.text:0001196D                 jnz     short loc_119BE
.text:0001196F                 mov     eax, [ebp+arg_0]
.text:00011972                 mov     ecx, [eax+0F8h]
.text:00011978                 push    ecx
.text:00011979                 call    _count234
.text:0001197E                 add     esp, 4
.text:00011981                 test    eax, eax
.text:00011983                 jnz     short loc_119BE
.text:00011985                 mov     edx, [ebp+arg_0]
.text:00011988                 cmp     dword ptr [edx+0CCh], 0
.text:0001198F                 jz      short loc_119A7
.text:00011991                 mov     eax, [ebp+arg_0]
.text:00011994                 mov     ecx, [eax+0CCh]
.text:0001199A                 push    ecx
.text:0001199B                 call    _share_ndownstreams
.text:000119A0                 add     esp, 4
.text:000119A3                 test    eax, eax
.text:000119A5                 jg      short loc_119BE
.text:000119A7
.text:000119A7 loc_119A7:                              ; CODE XREF: _ssh_check_termination+47j
.text:000119A7                 push    1               ; int
.text:000119A9                 push    0               ; int
.text:000119AB                 push    0               ; Str
.text:000119AD                 push    offset $SG92344 ; "All channels closed"
.text:000119B2                 mov     edx, [ebp+arg_0]
.text:000119B5                 push    edx             ; int
.text:000119B6                 call    _ssh_disconnect
.text:000119BB                 add     esp, 14h
.text:000119BE
.text:000119BE loc_119BE:                              ; CODE XREF: _ssh_check_termination+Dj
.text:000119BE                                         ; _ssh_check_termination+25j ...
.text:000119BE                 cmp     ebp, esp
.text:000119C0                 call    __RTC_CheckEsp
.text:000119C5                 pop     ebp
.text:000119C6                 retn
.text:000119C6 _ssh_check_termination endp
.text:000119C6
.text:000119C6 ; ---------------------------------------------------------------------------
.text:000119C7                 align 4
.text:000119C8
.text:000119C8 ; =============== S U B R O U T I N E =======================================
.text:000119C8
.text:000119C8 ; Attributes: bp-based frame
.text:000119C8
.text:000119C8                 public _ssh_sharing_logf
.text:000119C8 _ssh_sharing_logf proc near
.text:000119C8
.text:000119C8 var_8           = dword ptr -8
.text:000119C8 var_4           = dword ptr -4
.text:000119C8 arg_0           = dword ptr  8
.text:000119C8 arg_4           = dword ptr  0Ch
.text:000119C8 arg_8           = dword ptr  10h
.text:000119C8 arg_C           = byte ptr  14h
.text:000119C8
.text:000119C8                 push    ebp
.text:000119C9                 mov     ebp, esp
.text:000119CB                 sub     esp, 8
.text:000119CE                 mov     [ebp+var_8], 0CCCCCCCCh
.text:000119D5                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000119DC                 lea     eax, [ebp+arg_C]
.text:000119DF                 mov     [ebp+var_4], eax
.text:000119E2                 mov     ecx, [ebp+var_4]
.text:000119E5                 push    ecx
.text:000119E6                 mov     edx, [ebp+arg_8]
.text:000119E9                 push    edx
.text:000119EA                 call    _dupvprintf
.text:000119EF                 add     esp, 8
.text:000119F2                 mov     [ebp+var_8], eax
.text:000119F5                 mov     [ebp+var_4], 0
.text:000119FC                 cmp     [ebp+arg_4], 0
.text:00011A00                 jz      short loc_11A1D
.text:00011A02                 mov     eax, [ebp+var_8]
.text:00011A05                 push    eax
.text:00011A06                 mov     ecx, [ebp+arg_4]
.text:00011A09                 push    ecx
.text:00011A0A                 push    offset $SG92371 ; "Connection sharing downstream #%u: %s"
.text:00011A0F                 mov     edx, [ebp+arg_0]
.text:00011A12                 push    edx
.text:00011A13                 call    _logeventf
.text:00011A18                 add     esp, 10h
.text:00011A1B                 jmp     short loc_11A32
.text:00011A1D ; ---------------------------------------------------------------------------
.text:00011A1D
.text:00011A1D loc_11A1D:                              ; CODE XREF: _ssh_sharing_logf+38j
.text:00011A1D                 mov     eax, [ebp+var_8]
.text:00011A20                 push    eax
.text:00011A21                 push    offset $SG92373 ; "Connection sharing: %s"
.text:00011A26                 mov     ecx, [ebp+arg_0]
.text:00011A29                 push    ecx
.text:00011A2A                 call    _logeventf
.text:00011A2F                 add     esp, 0Ch
.text:00011A32
.text:00011A32 loc_11A32:                              ; CODE XREF: _ssh_sharing_logf+53j
.text:00011A32                 mov     edx, [ebp+var_8]
.text:00011A35                 push    edx
.text:00011A36                 call    _safefree
.text:00011A3B                 add     esp, 4
.text:00011A3E                 add     esp, 8
.text:00011A41                 cmp     ebp, esp
.text:00011A43                 call    __RTC_CheckEsp
.text:00011A48                 mov     esp, ebp
.text:00011A4A                 pop     ebp
.text:00011A4B                 retn
.text:00011A4B _ssh_sharing_logf endp
.text:00011A4B
.text:00011A4B ; ---------------------------------------------------------------------------
.text:00011A4C                 db 0Ch dup(0CCh)
.text:00011A58
.text:00011A58 ; =============== S U B R O U T I N E =======================================
.text:00011A58
.text:00011A58 ; Attributes: bp-based frame
.text:00011A58
.text:00011A58 _ssh2_channel_check_close proc near     ; CODE XREF: _ssh_channel_try_eof+F1p
.text:00011A58                                         ; _sshfwd_unclean_close+ACp ...
.text:00011A58
.text:00011A58 var_8           = dword ptr -8
.text:00011A58 var_4           = dword ptr -4
.text:00011A58 arg_0           = dword ptr  8
.text:00011A58
.text:00011A58                 push    ebp
.text:00011A59                 mov     ebp, esp
.text:00011A5B                 sub     esp, 8
.text:00011A5E                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00011A65                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00011A6C                 mov     eax, [ebp+arg_0]
.text:00011A6F                 mov     ecx, [eax]
.text:00011A71                 mov     [ebp+var_4], ecx
.text:00011A74                 mov     edx, [ebp+arg_0]
.text:00011A77                 cmp     dword ptr [edx+10h], 0
.text:00011A7B                 jz      short loc_11A82
.text:00011A7D                 jmp     loc_11B24
.text:00011A82 ; ---------------------------------------------------------------------------
.text:00011A82
.text:00011A82 loc_11A82:                              ; CODE XREF: _ssh2_channel_check_close+23j
.text:00011A82                 mov     eax, [ebp+arg_0]
.text:00011A85                 mov     ecx, [eax+14h]
.text:00011A88                 not     ecx
.text:00011A8A                 and     ecx, 5
.text:00011A8D                 jz      short loc_11A98
.text:00011A8F                 mov     edx, [ebp+arg_0]
.text:00011A92                 cmp     dword ptr [edx+0Ch], 6
.text:00011A96                 jnz     short loc_11AEB
.text:00011A98
.text:00011A98 loc_11A98:                              ; CODE XREF: _ssh2_channel_check_close+35j
.text:00011A98                 mov     eax, [ebp+arg_0]
.text:00011A9B                 cmp     dword ptr [eax+40h], 0
.text:00011A9F                 jnz     short loc_11AEB
.text:00011AA1                 mov     ecx, [ebp+arg_0]
.text:00011AA4                 mov     edx, [ecx+14h]
.text:00011AA7                 and     edx, 2
.text:00011AAA                 jnz     short loc_11AEB
.text:00011AAC                 push    61h ; 'a'
.text:00011AAE                 call    _ssh2_pkt_init
.text:00011AB3                 add     esp, 4
.text:00011AB6                 mov     [ebp+var_8], eax
.text:00011AB9                 mov     eax, [ebp+arg_0]
.text:00011ABC                 mov     ecx, [eax+4]
.text:00011ABF                 push    ecx
.text:00011AC0                 mov     edx, [ebp+var_8]
.text:00011AC3                 push    edx
.text:00011AC4                 call    _ssh_pkt_adduint32
.text:00011AC9                 add     esp, 8
.text:00011ACC                 mov     eax, [ebp+var_8]
.text:00011ACF                 push    eax
.text:00011AD0                 mov     ecx, [ebp+var_4]
.text:00011AD3                 push    ecx
.text:00011AD4                 call    _ssh2_pkt_send
.text:00011AD9                 add     esp, 8
.text:00011ADC                 mov     edx, [ebp+arg_0]
.text:00011ADF                 mov     eax, [edx+14h]
.text:00011AE2                 or      eax, 3
.text:00011AE5                 mov     ecx, [ebp+arg_0]
.text:00011AE8                 mov     [ecx+14h], eax
.text:00011AEB
.text:00011AEB loc_11AEB:                              ; CODE XREF: _ssh2_channel_check_close+3Ej
.text:00011AEB                                         ; _ssh2_channel_check_close+47j ...
.text:00011AEB                 mov     edx, [ebp+arg_0]
.text:00011AEE                 mov     eax, [edx+14h]
.text:00011AF1                 not     eax
.text:00011AF3                 and     eax, 0Ah
.text:00011AF6                 jnz     short loc_11B24
.text:00011AF8                 mov     ecx, [ebp+arg_0]
.text:00011AFB                 cmp     dword ptr [ecx+40h], 0
.text:00011AFF                 jz      short loc_11B18
.text:00011B01                 push    1DF7h           ; Line
.text:00011B06                 push    offset $SG92409 ; "..\\..\\..\\ssh.c"
.text:00011B0B                 push    offset $SG92410 ; "c->v.v2.chanreq_head == NULL"
.text:00011B10                 call    __wassert
.text:00011B15 ; ---------------------------------------------------------------------------
.text:00011B15                 add     esp, 0Ch
.text:00011B18
.text:00011B18 loc_11B18:                              ; CODE XREF: _ssh2_channel_check_close+A7j
.text:00011B18                 mov     eax, [ebp+arg_0]
.text:00011B1B                 push    eax
.text:00011B1C                 call    _ssh_channel_destroy
.text:00011B21                 add     esp, 4
.text:00011B24
.text:00011B24 loc_11B24:                              ; CODE XREF: _ssh2_channel_check_close+25j
.text:00011B24                                         ; _ssh2_channel_check_close+9Ej
.text:00011B24                 add     esp, 8
.text:00011B27                 cmp     ebp, esp
.text:00011B29                 call    __RTC_CheckEsp
.text:00011B2E                 mov     esp, ebp
.text:00011B30                 pop     ebp
.text:00011B31                 retn
.text:00011B31 _ssh2_channel_check_close endp
.text:00011B31
.text:00011B31 ; ---------------------------------------------------------------------------
.text:00011B32                 align 8
.text:00011B38
.text:00011B38 ; =============== S U B R O U T I N E =======================================
.text:00011B38
.text:00011B38 ; Attributes: bp-based frame
.text:00011B38
.text:00011B38 _ssh_channel_destroy proc near          ; CODE XREF: _ssh2_channel_check_close+C4p
.text:00011B38                                         ; _ssh1_msg_channel_close+1D9p ...
.text:00011B38
.text:00011B38 var_8           = dword ptr -8
.text:00011B38 var_4           = dword ptr -4
.text:00011B38 arg_0           = dword ptr  8
.text:00011B38
.text:00011B38                 push    ebp
.text:00011B39                 mov     ebp, esp
.text:00011B3B                 sub     esp, 8
.text:00011B3E                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00011B45                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00011B4C                 mov     eax, [ebp+arg_0]
.text:00011B4F                 mov     ecx, [eax]
.text:00011B51                 mov     [ebp+var_4], ecx
.text:00011B54                 mov     edx, [ebp+arg_0]
.text:00011B57                 mov     eax, [edx+0Ch]
.text:00011B5A                 mov     [ebp+var_8], eax
.text:00011B5D                 cmp     [ebp+var_8], 3  ; switch 4 cases
.text:00011B61                 ja      loc_11C03       ; jumptable 00011B6A default case
.text:00011B67                 mov     ecx, [ebp+var_8]
.text:00011B6A                 jmp     ds:$LN13_1[ecx*4] ; switch jump
.text:00011B71 ; ---------------------------------------------------------------------------
.text:00011B71
.text:00011B71 $LN7_0:                                 ; CODE XREF: _ssh_channel_destroy+32j
.text:00011B71                                         ; DATA XREF: .text:$LN13_1o
.text:00011B71                 mov     edx, [ebp+var_4] ; jumptable 00011B6A case 0
.text:00011B74                 mov     dword ptr [edx+0FCh], 0
.text:00011B7E                 mov     eax, [ebp+var_4]
.text:00011B81                 mov     ecx, [eax+0E4h]
.text:00011B87                 push    ecx
.text:00011B88                 call    _update_specials_menu
.text:00011B8D                 add     esp, 4
.text:00011B90                 jmp     short loc_11C03 ; jumptable 00011B6A default case
.text:00011B92 ; ---------------------------------------------------------------------------
.text:00011B92
.text:00011B92 $LN6_3:                                 ; CODE XREF: _ssh_channel_destroy+32j
.text:00011B92                                         ; DATA XREF: .text:$LN13_1o
.text:00011B92                 mov     edx, [ebp+arg_0] ; jumptable 00011B6A case 1
.text:00011B95                 cmp     dword ptr [edx+4Ch], 0
.text:00011B99                 jz      short loc_11BAA
.text:00011B9B                 mov     eax, [ebp+arg_0]
.text:00011B9E                 mov     ecx, [eax+4Ch]
.text:00011BA1                 push    ecx
.text:00011BA2                 call    _x11_close
.text:00011BA7                 add     esp, 4
.text:00011BAA
.text:00011BAA loc_11BAA:                              ; CODE XREF: _ssh_channel_destroy+61j
.text:00011BAA                 push    offset $SG92387 ; "Forwarded X11 connection terminated"
.text:00011BAF                 mov     edx, [ebp+var_4]
.text:00011BB2                 mov     eax, [edx+0E4h]
.text:00011BB8                 push    eax
.text:00011BB9                 call    _logevent
.text:00011BBE                 add     esp, 8
.text:00011BC1                 jmp     short loc_11C03 ; jumptable 00011B6A default case
.text:00011BC3 ; ---------------------------------------------------------------------------
.text:00011BC3
.text:00011BC3 $LN4_8:                                 ; CODE XREF: _ssh_channel_destroy+32j
.text:00011BC3                                         ; DATA XREF: .text:$LN13_1o
.text:00011BC3                 mov     ecx, [ebp+arg_0] ; jumptable 00011B6A case 2
.text:00011BC6                 mov     edx, [ecx+4Ch]
.text:00011BC9                 push    edx
.text:00011BCA                 call    _safefree
.text:00011BCF                 add     esp, 4
.text:00011BD2                 jmp     short loc_11C03 ; jumptable 00011B6A default case
.text:00011BD4 ; ---------------------------------------------------------------------------
.text:00011BD4
.text:00011BD4 $LN3_5:                                 ; CODE XREF: _ssh_channel_destroy+32j
.text:00011BD4                                         ; DATA XREF: .text:$LN13_1o
.text:00011BD4                 mov     eax, [ebp+arg_0] ; jumptable 00011B6A case 3
.text:00011BD7                 cmp     dword ptr [eax+4Ch], 0
.text:00011BDB                 jz      short loc_11BEC
.text:00011BDD                 mov     ecx, [ebp+arg_0]
.text:00011BE0                 mov     edx, [ecx+4Ch]
.text:00011BE3                 push    edx
.text:00011BE4                 call    _pfd_close
.text:00011BE9                 add     esp, 4
.text:00011BEC
.text:00011BEC loc_11BEC:                              ; CODE XREF: _ssh_channel_destroy+A3j
.text:00011BEC                 push    offset $SG92392 ; "Forwarded port closed"
.text:00011BF1                 mov     eax, [ebp+var_4]
.text:00011BF4                 mov     ecx, [eax+0E4h]
.text:00011BFA                 push    ecx
.text:00011BFB                 call    _logevent
.text:00011C00                 add     esp, 8
.text:00011C03
.text:00011C03 loc_11C03:                              ; CODE XREF: _ssh_channel_destroy+29j
.text:00011C03                                         ; _ssh_channel_destroy+58j ...
.text:00011C03                 mov     edx, [ebp+arg_0] ; jumptable 00011B6A default case
.text:00011C06                 push    edx
.text:00011C07                 mov     eax, [ebp+var_4]
.text:00011C0A                 mov     ecx, [eax+0F8h]
.text:00011C10                 push    ecx
.text:00011C11                 call    _del234
.text:00011C16                 add     esp, 8
.text:00011C19                 mov     edx, [ebp+var_4]
.text:00011C1C                 cmp     dword ptr [edx+16Ch], 2
.text:00011C23                 jnz     short loc_11C54
.text:00011C25                 mov     eax, [ebp+arg_0]
.text:00011C28                 add     eax, 20h ; ' '
.text:00011C2B                 push    eax
.text:00011C2C                 call    _bufchain_clear
.text:00011C31                 add     esp, 4
.text:00011C34                 mov     ecx, [ebp+arg_0]
.text:00011C37                 cmp     dword ptr [ecx+40h], 0
.text:00011C3B                 jz      short loc_11C54
.text:00011C3D                 push    1DCDh           ; Line
.text:00011C42                 push    offset $SG92396 ; "..\\..\\..\\ssh.c"
.text:00011C47                 push    offset $SG92397 ; "c->v.v2.chanreq_head == NULL"
.text:00011C4C                 call    __wassert
.text:00011C51 ; ---------------------------------------------------------------------------
.text:00011C51                 add     esp, 0Ch
.text:00011C54
.text:00011C54 loc_11C54:                              ; CODE XREF: _ssh_channel_destroy+EBj
.text:00011C54                                         ; _ssh_channel_destroy+103j
.text:00011C54                 mov     eax, [ebp+arg_0]
.text:00011C57                 push    eax
.text:00011C58                 call    _safefree
.text:00011C5D                 add     esp, 4
.text:00011C60                 mov     ecx, [ebp+var_4]
.text:00011C63                 push    ecx
.text:00011C64                 call    _ssh_check_termination
.text:00011C69                 add     esp, 4
.text:00011C6C                 add     esp, 8
.text:00011C6F                 cmp     ebp, esp
.text:00011C71                 call    __RTC_CheckEsp
.text:00011C76                 mov     esp, ebp
.text:00011C78                 pop     ebp
.text:00011C79                 retn
.text:00011C79 _ssh_channel_destroy endp
.text:00011C79
.text:00011C79 ; ---------------------------------------------------------------------------
.text:00011C7A                 align 4
.text:00011C7C $LN13_1         dd offset $LN7_0        ; DATA XREF: _ssh_channel_destroy+32r
.text:00011C7C                 dd offset $LN6_3        ; jump table for switch statement
.text:00011C7C                 dd offset $LN4_8
.text:00011C7C                 dd offset $LN3_5
.text:00011C8C                 db 0Ch dup(0CCh)
.text:00011C98
.text:00011C98 ; =============== S U B R O U T I N E =======================================
.text:00011C98
.text:00011C98 ; Attributes: bp-based frame
.text:00011C98
.text:00011C98                 public _ssh_sharing_add_x11_display
.text:00011C98 _ssh_sharing_add_x11_display proc near
.text:00011C98
.text:00011C98 var_4           = dword ptr -4
.text:00011C98 arg_0           = dword ptr  8
.text:00011C98 arg_4           = dword ptr  0Ch
.text:00011C98 arg_8           = dword ptr  10h
.text:00011C98 arg_C           = dword ptr  14h
.text:00011C98
.text:00011C98                 push    ebp
.text:00011C99                 mov     ebp, esp
.text:00011C9B                 push    ecx
.text:00011C9C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00011CA3                 mov     eax, [ebp+arg_4]
.text:00011CA6                 push    eax
.text:00011CA7                 mov     ecx, [ebp+arg_0]
.text:00011CAA                 mov     edx, [ecx+168h]
.text:00011CB0                 push    edx
.text:00011CB1                 call    _x11_invent_fake_auth
.text:00011CB6                 add     esp, 8
.text:00011CB9                 mov     [ebp+var_4], eax
.text:00011CBC                 mov     eax, [ebp+var_4]
.text:00011CBF                 mov     ecx, [ebp+arg_8]
.text:00011CC2                 mov     [eax+20h], ecx
.text:00011CC5                 mov     edx, [ebp+var_4]
.text:00011CC8                 mov     eax, [ebp+arg_C]
.text:00011CCB                 mov     [edx+24h], eax
.text:00011CCE                 mov     eax, [ebp+var_4]
.text:00011CD1                 add     esp, 4
.text:00011CD4                 cmp     ebp, esp
.text:00011CD6                 call    __RTC_CheckEsp
.text:00011CDB                 mov     esp, ebp
.text:00011CDD                 pop     ebp
.text:00011CDE                 retn
.text:00011CDE _ssh_sharing_add_x11_display endp
.text:00011CDE
.text:00011CDE ; ---------------------------------------------------------------------------
.text:00011CDF                 db 9 dup(0CCh)
.text:00011CE8
.text:00011CE8 ; =============== S U B R O U T I N E =======================================
.text:00011CE8
.text:00011CE8 ; Attributes: bp-based frame
.text:00011CE8
.text:00011CE8                 public _ssh_sharing_remove_x11_display
.text:00011CE8 _ssh_sharing_remove_x11_display proc near
.text:00011CE8
.text:00011CE8 arg_0           = dword ptr  8
.text:00011CE8 arg_4           = dword ptr  0Ch
.text:00011CE8
.text:00011CE8                 push    ebp
.text:00011CE9                 mov     ebp, esp
.text:00011CEB                 mov     eax, [ebp+arg_4]
.text:00011CEE                 push    eax
.text:00011CEF                 mov     ecx, [ebp+arg_0]
.text:00011CF2                 mov     edx, [ecx+168h]
.text:00011CF8                 push    edx
.text:00011CF9                 call    _del234
.text:00011CFE                 add     esp, 8
.text:00011D01                 mov     eax, [ebp+arg_4]
.text:00011D04                 push    eax
.text:00011D05                 call    _x11_free_fake_auth
.text:00011D0A                 add     esp, 4
.text:00011D0D                 cmp     ebp, esp
.text:00011D0F                 call    __RTC_CheckEsp
.text:00011D14                 pop     ebp
.text:00011D15                 retn
.text:00011D15 _ssh_sharing_remove_x11_display endp
.text:00011D15
.text:00011D15 ; ---------------------------------------------------------------------------
.text:00011D16                 align 4
.text:00011D18
.text:00011D18 ; =============== S U B R O U T I N E =======================================
.text:00011D18
.text:00011D18 ; Attributes: bp-based frame
.text:00011D18
.text:00011D18                 public _sshfwd_x11_sharing_handover
.text:00011D18 _sshfwd_x11_sharing_handover proc near
.text:00011D18
.text:00011D18 arg_0           = dword ptr  8
.text:00011D18 arg_4           = dword ptr  0Ch
.text:00011D18 arg_8           = dword ptr  10h
.text:00011D18 arg_C           = dword ptr  14h
.text:00011D18 arg_10          = dword ptr  18h
.text:00011D18 arg_14          = dword ptr  1Ch
.text:00011D18 arg_18          = dword ptr  20h
.text:00011D18 arg_1C          = dword ptr  24h
.text:00011D18 arg_20          = dword ptr  28h
.text:00011D18 arg_24          = dword ptr  2Ch
.text:00011D18
.text:00011D18                 push    ebp
.text:00011D19                 mov     ebp, esp
.text:00011D1B                 mov     eax, [ebp+arg_0]
.text:00011D1E                 mov     dword ptr [eax+0Ch], 5
.text:00011D25                 mov     ecx, [ebp+arg_0]
.text:00011D28                 mov     edx, [ebp+arg_4]
.text:00011D2B                 mov     [ecx+4Ch], edx
.text:00011D2E                 mov     eax, [ebp+arg_24]
.text:00011D31                 push    eax
.text:00011D32                 mov     ecx, [ebp+arg_20]
.text:00011D35                 push    ecx
.text:00011D36                 mov     edx, [ebp+arg_1C]
.text:00011D39                 push    edx
.text:00011D3A                 mov     eax, [ebp+arg_18]
.text:00011D3D                 push    eax
.text:00011D3E                 mov     ecx, [ebp+arg_14]
.text:00011D41                 push    ecx
.text:00011D42                 mov     edx, [ebp+arg_10]
.text:00011D45                 push    edx
.text:00011D46                 mov     eax, [ebp+arg_C]
.text:00011D49                 push    eax
.text:00011D4A                 mov     ecx, [ebp+arg_0]
.text:00011D4D                 mov     edx, [ecx+34h]
.text:00011D50                 push    edx
.text:00011D51                 mov     eax, [ebp+arg_0]
.text:00011D54                 mov     ecx, [eax+30h]
.text:00011D57                 push    ecx
.text:00011D58                 mov     edx, [ebp+arg_0]
.text:00011D5B                 mov     eax, [edx+2Ch]
.text:00011D5E                 push    eax
.text:00011D5F                 mov     ecx, [ebp+arg_0]
.text:00011D62                 mov     edx, [ecx+4]
.text:00011D65                 push    edx
.text:00011D66                 mov     eax, [ebp+arg_0]
.text:00011D69                 mov     ecx, [eax+8]
.text:00011D6C                 push    ecx
.text:00011D6D                 mov     edx, [ebp+arg_8]
.text:00011D70                 push    edx
.text:00011D71                 mov     eax, [ebp+arg_4]
.text:00011D74                 push    eax
.text:00011D75                 call    _share_setup_x11_channel
.text:00011D7A                 add     esp, 38h
.text:00011D7D                 cmp     ebp, esp
.text:00011D7F                 call    __RTC_CheckEsp
.text:00011D84                 pop     ebp
.text:00011D85                 retn
.text:00011D85 _sshfwd_x11_sharing_handover endp
.text:00011D85
.text:00011D85 ; ---------------------------------------------------------------------------
.text:00011D86                 align 4
.text:00011D88
.text:00011D88 ; =============== S U B R O U T I N E =======================================
.text:00011D88
.text:00011D88 ; Attributes: bp-based frame
.text:00011D88
.text:00011D88                 public _sshfwd_x11_is_local
.text:00011D88 _sshfwd_x11_is_local proc near
.text:00011D88
.text:00011D88 arg_0           = dword ptr  8
.text:00011D88
.text:00011D88                 push    ebp
.text:00011D89                 mov     ebp, esp
.text:00011D8B                 mov     eax, [ebp+arg_0]
.text:00011D8E                 mov     dword ptr [eax+50h], 0
.text:00011D95                 mov     ecx, [ebp+arg_0]
.text:00011D98                 mov     edx, [ecx]
.text:00011D9A                 push    edx
.text:00011D9B                 call    _ssh_is_simple
.text:00011DA0                 add     esp, 4
.text:00011DA3                 neg     eax
.text:00011DA5                 sbb     eax, eax
.text:00011DA7                 and     eax, 7FFFBFFFh
.text:00011DAC                 add     eax, 4000h
.text:00011DB1                 push    eax
.text:00011DB2                 mov     eax, [ebp+arg_0]
.text:00011DB5                 push    eax
.text:00011DB6                 call    _ssh2_set_window
.text:00011DBB                 add     esp, 8
.text:00011DBE                 cmp     ebp, esp
.text:00011DC0                 call    __RTC_CheckEsp
.text:00011DC5                 pop     ebp
.text:00011DC6                 retn
.text:00011DC6 _sshfwd_x11_is_local endp
.text:00011DC6
.text:00011DC6 ; ---------------------------------------------------------------------------
.text:00011DC7                 align 4
.text:00011DC8
.text:00011DC8 ; =============== S U B R O U T I N E =======================================
.text:00011DC8
.text:00011DC8 ; Attributes: bp-based frame
.text:00011DC8
.text:00011DC8 _ssh_is_simple  proc near               ; CODE XREF: _sshfwd_x11_is_local+13p
.text:00011DC8                                         ; _do_ssh2_authconn+3E82p ...
.text:00011DC8
.text:00011DC8 var_4           = dword ptr -4
.text:00011DC8 arg_0           = dword ptr  8
.text:00011DC8
.text:00011DC8                 push    ebp
.text:00011DC9                 mov     ebp, esp
.text:00011DCB                 push    ecx
.text:00011DCC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00011DD3                 push    0A3h ; 'ú'
.text:00011DD8                 mov     eax, [ebp+arg_0]
.text:00011DDB                 mov     ecx, [eax+21Ch]
.text:00011DE1                 push    ecx
.text:00011DE2                 call    _conf_get_int
.text:00011DE7                 add     esp, 8
.text:00011DEA                 test    eax, eax
.text:00011DEC                 jz      short loc_11E0F
.text:00011DEE                 mov     edx, [ebp+arg_0]
.text:00011DF1                 cmp     dword ptr [edx+0C4h], 0
.text:00011DF8                 jnz     short loc_11E0F
.text:00011DFA                 mov     eax, [ebp+arg_0]
.text:00011DFD                 cmp     dword ptr [eax+0CCh], 0
.text:00011E04                 jnz     short loc_11E0F
.text:00011E06                 mov     [ebp+var_4], 1
.text:00011E0D                 jmp     short loc_11E16
.text:00011E0F ; ---------------------------------------------------------------------------
.text:00011E0F
.text:00011E0F loc_11E0F:                              ; CODE XREF: _ssh_is_simple+24j
.text:00011E0F                                         ; _ssh_is_simple+30j ...
.text:00011E0F                 mov     [ebp+var_4], 0
.text:00011E16
.text:00011E16 loc_11E16:                              ; CODE XREF: _ssh_is_simple+45j
.text:00011E16                 mov     eax, [ebp+var_4]
.text:00011E19                 add     esp, 4
.text:00011E1C                 cmp     ebp, esp
.text:00011E1E                 call    __RTC_CheckEsp
.text:00011E23                 mov     esp, ebp
.text:00011E25                 pop     ebp
.text:00011E26                 retn
.text:00011E26 _ssh_is_simple  endp
.text:00011E26
.text:00011E26 ; ---------------------------------------------------------------------------
.text:00011E27                 align 4
.text:00011E28
.text:00011E28 ; =============== S U B R O U T I N E =======================================
.text:00011E28
.text:00011E28 ; Attributes: bp-based frame
.text:00011E28
.text:00011E28 _do_ssh2_authconn proc near             ; CODE XREF: _do_ssh2_transport+2F53p
.text:00011E28                                         ; _ssh_agent_callback+53p ...
.text:00011E28
.text:00011E28 var_1B8         = dword ptr -1B8h
.text:00011E28 var_1B4         = dword ptr -1B4h
.text:00011E28 var_1B0         = dword ptr -1B0h
.text:00011E28 var_1AC         = dword ptr -1ACh
.text:00011E28 var_1A8         = dword ptr -1A8h
.text:00011E28 var_1A4         = dword ptr -1A4h
.text:00011E28 var_19E         = byte ptr -19Eh
.text:00011E28 var_19D         = byte ptr -19Dh
.text:00011E28 var_19C         = dword ptr -19Ch
.text:00011E28 var_198         = dword ptr -198h
.text:00011E28 var_194         = dword ptr -194h
.text:00011E28 var_190         = dword ptr -190h
.text:00011E28 var_18C         = dword ptr -18Ch
.text:00011E28 var_188         = dword ptr -188h
.text:00011E28 var_180         = dword ptr -180h
.text:00011E28 var_174         = dword ptr -174h
.text:00011E28 var_16C         = dword ptr -16Ch
.text:00011E28 var_168         = dword ptr -168h
.text:00011E28 var_164         = dword ptr -164h
.text:00011E28 var_160         = dword ptr -160h
.text:00011E28 var_15C         = dword ptr -15Ch
.text:00011E28 var_154         = dword ptr -154h
.text:00011E28 var_148         = dword ptr -148h
.text:00011E28 var_140         = dword ptr -140h
.text:00011E28 var_138         = byte ptr -138h
.text:00011E28 var_12C         = dword ptr -12Ch
.text:00011E28 var_120         = dword ptr -120h
.text:00011E28 var_114         = byte ptr -114h
.text:00011E28 var_108         = dword ptr -108h
.text:00011E28 var_FC          = dword ptr -0FCh
.text:00011E28 var_F4          = dword ptr -0F4h
.text:00011E28 var_F0          = dword ptr -0F0h
.text:00011E28 var_EC          = dword ptr -0ECh
.text:00011E28 var_E4          = dword ptr -0E4h
.text:00011E28 var_E0          = dword ptr -0E0h
.text:00011E28 var_D4          = dword ptr -0D4h
.text:00011E28 var_C8          = dword ptr -0C8h
.text:00011E28 var_C0          = dword ptr -0C0h
.text:00011E28 var_BC          = dword ptr -0BCh
.text:00011E28 var_B8          = dword ptr -0B8h
.text:00011E28 var_B0          = dword ptr -0B0h
.text:00011E28 Size            = dword ptr -0A4h
.text:00011E28 var_9C          = dword ptr -9Ch
.text:00011E28 var_98          = dword ptr -98h
.text:00011E28 Src             = dword ptr -94h
.text:00011E28 var_90          = dword ptr -90h
.text:00011E28 var_88          = dword ptr -88h
.text:00011E28 Str             = dword ptr -80h
.text:00011E28 var_7C          = dword ptr -7Ch
.text:00011E28 var_74          = dword ptr -74h
.text:00011E28 var_6C          = dword ptr -6Ch
.text:00011E28 var_68          = dword ptr -68h
.text:00011E28 var_60          = dword ptr -60h
.text:00011E28 Buf2            = dword ptr -54h
.text:00011E28 var_4C          = dword ptr -4Ch
.text:00011E28 var_48          = dword ptr -48h
.text:00011E28 var_44          = dword ptr -44h
.text:00011E28 var_40          = dword ptr -40h
.text:00011E28 var_3C          = dword ptr -3Ch
.text:00011E28 var_38          = dword ptr -38h
.text:00011E28 var_34          = dword ptr -34h
.text:00011E28 var_30          = dword ptr -30h
.text:00011E28 var_28          = dword ptr -28h
.text:00011E28 var_20          = dword ptr -20h
.text:00011E28 var_1C          = dword ptr -1Ch
.text:00011E28 var_14          = dword ptr -14h
.text:00011E28 var_C           = dword ptr -0Ch
.text:00011E28 var_8           = dword ptr -8
.text:00011E28 var_4           = dword ptr -4
.text:00011E28 arg_0           = dword ptr  8
.text:00011E28 arg_4           = dword ptr  0Ch
.text:00011E28 arg_8           = dword ptr  10h
.text:00011E28 arg_C           = dword ptr  14h
.text:00011E28
.text:00011E28                 push    ebp
.text:00011E29                 mov     ebp, esp
.text:00011E2B                 sub     esp, 1B8h
.text:00011E31                 push    esi
.text:00011E32                 push    edi
.text:00011E33                 lea     edi, [ebp+var_1B8]
.text:00011E39                 mov     ecx, 6Eh ; 'n'
.text:00011E3E                 mov     eax, 0CCCCCCCCh
.text:00011E43                 rep stosd
.text:00011E45                 mov     eax, [ebp+arg_0]
.text:00011E48                 cmp     dword ptr [eax+1A4h], 0
.text:00011E4F                 jnz     short loc_11E87
.text:00011E51                 push    0E8h ; 'F'
.text:00011E56                 push    1
.text:00011E58                 call    _safemalloc
.text:00011E5D                 add     esp, 8
.text:00011E60                 mov     [ebp+var_1A4], eax
.text:00011E66                 mov     ecx, [ebp+arg_0]
.text:00011E69                 mov     edx, [ebp+var_1A4]
.text:00011E6F                 mov     [ecx+1A4h], edx
.text:00011E75                 mov     eax, [ebp+var_1A4]
.text:00011E7B                 mov     [ebp+var_4], eax
.text:00011E7E                 mov     ecx, [ebp+var_4]
.text:00011E81                 mov     dword ptr [ecx], 0
.text:00011E87
.text:00011E87 loc_11E87:                              ; CODE XREF: _do_ssh2_authconn+27j
.text:00011E87                 mov     edx, [ebp+arg_0]
.text:00011E8A                 mov     eax, [edx+1A4h]
.text:00011E90                 mov     [ebp+var_4], eax
.text:00011E93                 mov     ecx, [ebp+var_4]
.text:00011E96                 mov     [ebp+var_8], ecx
.text:00011E99                 mov     edx, [ebp+var_4]
.text:00011E9C                 mov     eax, [edx]
.text:00011E9E                 mov     [ebp+var_1A8], eax
.text:00011EA4                 cmp     [ebp+var_1A8], 2567h
.text:00011EAE                 jg      loc_11FA9
.text:00011EB4                 cmp     [ebp+var_1A8], 2567h
.text:00011EBE                 jz      loc_149CB
.text:00011EC4                 cmp     [ebp+var_1A8], 230Ch
.text:00011ECE                 jg      short loc_11F43
.text:00011ED0                 cmp     [ebp+var_1A8], 230Ch
.text:00011EDA                 jz      loc_12C87
.text:00011EE0                 cmp     [ebp+var_1A8], 21F1h
.text:00011EEA                 jg      short loc_11F1E
.text:00011EEC                 cmp     [ebp+var_1A8], 21F1h
.text:00011EF6                 jz      loc_1225B
.text:00011EFC                 cmp     [ebp+var_1A8], 0
.text:00011F03                 jz      loc_12051
.text:00011F09                 cmp     [ebp+var_1A8], 21E6h
.text:00011F13                 jz      loc_121E3
.text:00011F19                 jmp     $LN412_0        ; jumptable 00011FF4 default case
.text:00011F1E ; ---------------------------------------------------------------------------
.text:00011F1E
.text:00011F1E loc_11F1E:                              ; CODE XREF: _do_ssh2_authconn+C2j
.text:00011F1E                 cmp     [ebp+var_1A8], 2249h
.text:00011F28                 jz      loc_12540
.text:00011F2E                 cmp     [ebp+var_1A8], 22CDh
.text:00011F38                 jz      loc_12A4C
.text:00011F3E                 jmp     $LN412_0        ; jumptable 00011FF4 default case
.text:00011F43 ; ---------------------------------------------------------------------------
.text:00011F43
.text:00011F43 loc_11F43:                              ; CODE XREF: _do_ssh2_authconn+A6j
.text:00011F43                 cmp     [ebp+var_1A8], 2441h
.text:00011F4D                 jg      short loc_11F84
.text:00011F4F                 cmp     [ebp+var_1A8], 2441h
.text:00011F59                 jz      loc_13CB6
.text:00011F5F                 cmp     [ebp+var_1A8], 23B3h
.text:00011F69                 jz      loc_133F4
.text:00011F6F                 cmp     [ebp+var_1A8], 23F8h
.text:00011F79                 jz      loc_13948
.text:00011F7F                 jmp     $LN412_0        ; jumptable 00011FF4 default case
.text:00011F84 ; ---------------------------------------------------------------------------
.text:00011F84
.text:00011F84 loc_11F84:                              ; CODE XREF: _do_ssh2_authconn+125j
.text:00011F84                 cmp     [ebp+var_1A8], 2465h
.text:00011F8E                 jz      loc_13DF3
.text:00011F94                 cmp     [ebp+var_1A8], 2516h
.text:00011F9E                 jz      loc_145A7
.text:00011FA4                 jmp     $LN412_0        ; jumptable 00011FF4 default case
.text:00011FA9 ; ---------------------------------------------------------------------------
.text:00011FA9
.text:00011FA9 loc_11FA9:                              ; CODE XREF: _do_ssh2_authconn+86j
.text:00011FA9                 cmp     [ebp+var_1A8], 26B6h
.text:00011FB3                 jg      short loc_11FFB
.text:00011FB5                 cmp     [ebp+var_1A8], 26B6h
.text:00011FBF                 jz      loc_155B3
.text:00011FC5                 mov     ecx, [ebp+var_1A8]
.text:00011FCB                 sub     ecx, 25ABh
.text:00011FD1                 mov     [ebp+var_1A8], ecx
.text:00011FD7                 cmp     [ebp+var_1A8], 0CCh ; '¦' ; switch 205 cases
.text:00011FE1                 ja      $LN412_0        ; jumptable 00011FF4 default case
.text:00011FE7                 mov     edx, [ebp+var_1A8]
.text:00011FED                 movzx   eax, ds:$LN444[edx]
.text:00011FF4                 jmp     ds:$LN466[eax*4] ; switch jump
.text:00011FFB ; ---------------------------------------------------------------------------
.text:00011FFB
.text:00011FFB loc_11FFB:                              ; CODE XREF: _do_ssh2_authconn+18Bj
.text:00011FFB                 cmp     [ebp+var_1A8], 27E7h
.text:00012005                 jg      short loc_1203C
.text:00012007                 cmp     [ebp+var_1A8], 27E7h
.text:00012011                 jz      loc_15FCD
.text:00012017                 cmp     [ebp+var_1A8], 26F9h
.text:00012021                 jz      loc_15800
.text:00012027                 cmp     [ebp+var_1A8], 2762h
.text:00012031                 jz      loc_15ABC
.text:00012037                 jmp     $LN412_0        ; jumptable 00011FF4 default case
.text:0001203C ; ---------------------------------------------------------------------------
.text:0001203C
.text:0001203C loc_1203C:                              ; CODE XREF: _do_ssh2_authconn+1DDj
.text:0001203C                 cmp     [ebp+var_1A8], 2814h
.text:00012046                 jz      loc_1617D
.text:0001204C                 jmp     $LN412_0        ; jumptable 00011FF4 default case
.text:00012051 ; ---------------------------------------------------------------------------
.text:00012051
.text:00012051 loc_12051:                              ; CODE XREF: _do_ssh2_authconn+DBj
.text:00012051                 mov     ecx, [ebp+arg_0]
.text:00012054                 mov     dword ptr [ecx+25Ch], offset _ssh2_msg_authconn
.text:0001205E                 mov     edx, [ebp+arg_0]
.text:00012061                 mov     dword ptr [edx+30Ch], offset _ssh2_msg_authconn
.text:0001206B                 mov     eax, [ebp+arg_0]
.text:0001206E                 mov     dword ptr [eax+310h], offset _ssh2_msg_authconn
.text:00012078                 mov     ecx, [ebp+arg_0]
.text:0001207B                 mov     dword ptr [ecx+314h], offset _ssh2_msg_authconn
.text:00012085                 mov     edx, [ebp+arg_0]
.text:00012088                 mov     dword ptr [edx+318h], offset _ssh2_msg_authconn
.text:00012092                 mov     eax, [ebp+arg_0]
.text:00012095                 mov     dword ptr [eax+334h], offset _ssh2_msg_authconn
.text:0001209F                 mov     ecx, [ebp+arg_0]
.text:000120A2                 mov     dword ptr [ecx+338h], offset _ssh2_msg_authconn
.text:000120AC                 mov     edx, [ebp+arg_0]
.text:000120AF                 mov     dword ptr [edx+384h], offset _ssh2_msg_authconn
.text:000120B9                 mov     eax, [ebp+arg_0]
.text:000120BC                 mov     dword ptr [eax+388h], offset _ssh2_msg_authconn
.text:000120C6                 mov     ecx, [ebp+arg_0]
.text:000120C9                 mov     dword ptr [ecx+38Ch], offset _ssh2_msg_authconn
.text:000120D3                 mov     edx, [ebp+arg_0]
.text:000120D6                 mov     dword ptr [edx+3ACh], offset _ssh2_msg_authconn
.text:000120E0                 mov     eax, [ebp+arg_0]
.text:000120E3                 mov     dword ptr [eax+3B0h], offset _ssh2_msg_authconn
.text:000120ED                 mov     ecx, [ebp+arg_0]
.text:000120F0                 mov     dword ptr [ecx+3B4h], offset _ssh2_msg_authconn
.text:000120FA                 mov     edx, [ebp+arg_0]
.text:000120FD                 mov     dword ptr [edx+3B8h], offset _ssh2_msg_authconn
.text:00012107                 mov     eax, [ebp+arg_0]
.text:0001210A                 mov     dword ptr [eax+3BCh], offset _ssh2_msg_authconn
.text:00012114                 mov     ecx, [ebp+arg_0]
.text:00012117                 mov     dword ptr [ecx+3C0h], offset _ssh2_msg_authconn
.text:00012121                 mov     edx, [ebp+arg_0]
.text:00012124                 mov     dword ptr [edx+3C4h], offset _ssh2_msg_authconn
.text:0001212E                 mov     eax, [ebp+arg_0]
.text:00012131                 mov     dword ptr [eax+3C8h], offset _ssh2_msg_authconn
.text:0001213B                 mov     ecx, [ebp+var_4]
.text:0001213E                 mov     dword ptr [ecx+8], 0
.text:00012145                 mov     edx, [ebp+var_4]
.text:00012148                 mov     dword ptr [edx+38h], 0
.text:0001214F                 mov     eax, [ebp+var_4]
.text:00012152                 mov     dword ptr [eax+34h], 0
.text:00012159                 mov     ecx, [ebp+var_4]
.text:0001215C                 mov     dword ptr [ecx+6Ch], 0
.text:00012163                 mov     edx, [ebp+var_4]
.text:00012166                 mov     dword ptr [edx+2Ch], 0
.text:0001216D                 mov     eax, [ebp+arg_0]
.text:00012170                 cmp     dword ptr [eax+0C4h], 0
.text:00012177                 jnz     loc_122A8
.text:0001217D                 push    21h ; '!'
.text:0001217F                 mov     ecx, [ebp+arg_0]
.text:00012182                 mov     edx, [ecx+21Ch]
.text:00012188                 push    edx
.text:00012189                 call    _conf_get_int
.text:0001218E                 add     esp, 8
.text:00012191                 test    eax, eax
.text:00012193                 jnz     short loc_12200
.text:00012195                 push    5
.text:00012197                 call    _ssh2_pkt_init
.text:0001219C                 add     esp, 4
.text:0001219F                 mov     ecx, [ebp+var_4]
.text:000121A2                 mov     [ecx+0B8h], eax
.text:000121A8                 push    offset $SG93057 ; "ssh-userauth"
.text:000121AD                 mov     edx, [ebp+var_4]
.text:000121B0                 mov     eax, [edx+0B8h]
.text:000121B6                 push    eax             ; int
.text:000121B7                 call    _ssh_pkt_addstring
.text:000121BC                 add     esp, 8
.text:000121BF                 mov     ecx, [ebp+var_4]
.text:000121C2                 mov     edx, [ecx+0B8h]
.text:000121C8                 push    edx
.text:000121C9                 mov     eax, [ebp+arg_0]
.text:000121CC                 push    eax
.text:000121CD                 call    _ssh2_pkt_send
.text:000121D2                 add     esp, 8
.text:000121D5
.text:000121D5 loc_121D5:                              ; CODE XREF: _do_ssh2_authconn+3BDj
.text:000121D5                                         ; _do_ssh2_authconn+3C3j
.text:000121D5                 mov     ecx, [ebp+var_8]
.text:000121D8                 mov     dword ptr [ecx], 21E6h
.text:000121DE                 jmp     loc_1626E
.text:000121E3 ; ---------------------------------------------------------------------------
.text:000121E3
.text:000121E3 loc_121E3:                              ; CODE XREF: _do_ssh2_authconn+EBj
.text:000121E3                 xor     edx, edx
.text:000121E5                 jnz     short loc_121D5
.text:000121E7                 cmp     [ebp+arg_C], 0
.text:000121EB                 jz      short loc_121D5
.text:000121ED                 mov     eax, [ebp+arg_C]
.text:000121F0                 cmp     dword ptr [eax+8], 6
.text:000121F4                 jnz     short loc_12200
.text:000121F6                 mov     ecx, [ebp+var_4]
.text:000121F9                 mov     dword ptr [ecx+8], 1
.text:00012200
.text:00012200 loc_12200:                              ; CODE XREF: _do_ssh2_authconn+36Bj
.text:00012200                                         ; _do_ssh2_authconn+3CCj
.text:00012200                 mov     edx, [ebp+var_4]
.text:00012203                 cmp     dword ptr [edx+8], 0
.text:00012207                 jnz     loc_122A6
.text:0001220D                 push    5
.text:0001220F                 call    _ssh2_pkt_init
.text:00012214                 add     esp, 4
.text:00012217                 mov     ecx, [ebp+var_4]
.text:0001221A                 mov     [ecx+0B8h], eax
.text:00012220                 push    offset $SG93067 ; "ssh-connection"
.text:00012225                 mov     edx, [ebp+var_4]
.text:00012228                 mov     eax, [edx+0B8h]
.text:0001222E                 push    eax             ; int
.text:0001222F                 call    _ssh_pkt_addstring
.text:00012234                 add     esp, 8
.text:00012237                 mov     ecx, [ebp+var_4]
.text:0001223A                 mov     edx, [ecx+0B8h]
.text:00012240                 push    edx
.text:00012241                 mov     eax, [ebp+arg_0]
.text:00012244                 push    eax
.text:00012245                 call    _ssh2_pkt_send
.text:0001224A                 add     esp, 8
.text:0001224D
.text:0001224D loc_1224D:                              ; CODE XREF: _do_ssh2_authconn+435j
.text:0001224D                                         ; _do_ssh2_authconn+43Bj
.text:0001224D                 mov     ecx, [ebp+var_8]
.text:00012250                 mov     dword ptr [ecx], 21F1h
.text:00012256                 jmp     loc_1626E
.text:0001225B ; ---------------------------------------------------------------------------
.text:0001225B
.text:0001225B loc_1225B:                              ; CODE XREF: _do_ssh2_authconn+CEj
.text:0001225B                 xor     edx, edx
.text:0001225D                 jnz     short loc_1224D
.text:0001225F                 cmp     [ebp+arg_C], 0
.text:00012263                 jz      short loc_1224D
.text:00012265                 mov     eax, [ebp+arg_C]
.text:00012268                 cmp     dword ptr [eax+8], 6
.text:0001226C                 jnz     short loc_1227A
.text:0001226E                 mov     ecx, [ebp+var_4]
.text:00012271                 mov     dword ptr [ecx+34h], 1
.text:00012278                 jmp     short loc_122A6
.text:0001227A ; ---------------------------------------------------------------------------
.text:0001227A
.text:0001227A loc_1227A:                              ; CODE XREF: _do_ssh2_authconn+444j
.text:0001227A                 push    offset $SG93077 ; "Server refused service request"
.text:0001227F                 call    _dupprintf
.text:00012284                 add     esp, 4
.text:00012287                 push    eax
.text:00012288                 mov     edx, [ebp+arg_0]
.text:0001228B                 push    edx
.text:0001228C                 call    _bomb_out
.text:00012291                 add     esp, 8
.text:00012294
.text:00012294 loc_12294:                              ; CODE XREF: _do_ssh2_authconn+47Cj
.text:00012294                 mov     eax, [ebp+var_8]
.text:00012297                 mov     dword ptr [eax], 0
.text:0001229D                 jmp     loc_1626E
.text:000122A2 ; ---------------------------------------------------------------------------
.text:000122A2                 xor     ecx, ecx
.text:000122A4                 jnz     short loc_12294
.text:000122A6
.text:000122A6 loc_122A6:                              ; CODE XREF: _do_ssh2_authconn+3DFj
.text:000122A6                                         ; _do_ssh2_authconn+450j
.text:000122A6                 jmp     short loc_122B2
.text:000122A8 ; ---------------------------------------------------------------------------
.text:000122A8
.text:000122A8 loc_122A8:                              ; CODE XREF: _do_ssh2_authconn+34Fj
.text:000122A8                 mov     edx, [ebp+var_4]
.text:000122AB                 mov     dword ptr [edx+34h], 1
.text:000122B2
.text:000122B2 loc_122B2:                              ; CODE XREF: _do_ssh2_authconn:loc_122A6j
.text:000122B2                 mov     eax, [ebp+arg_0]
.text:000122B5                 add     eax, 14Ch
.text:000122BA                 push    eax
.text:000122BB                 call    _bufchain_init
.text:000122C0                 add     esp, 4
.text:000122C3                 mov     ecx, [ebp+arg_0]
.text:000122C6                 mov     dword ptr [ecx+318h], offset _ssh2_msg_userauth_banner
.text:000122D0                 mov     edx, [ebp+var_4]
.text:000122D3                 mov     dword ptr [edx+50h], 0
.text:000122DA                 mov     eax, [ebp+var_4]
.text:000122DD                 cmp     dword ptr [eax+34h], 0
.text:000122E1                 jnz     $done_agent_query$93136
.text:000122E7                 push    1Eh
.text:000122E9                 mov     ecx, [ebp+arg_0]
.text:000122EC                 mov     edx, [ecx+21Ch]
.text:000122F2                 push    edx
.text:000122F3                 call    _conf_get_filename
.text:000122F8                 add     esp, 8
.text:000122FB                 mov     ecx, [ebp+var_4]
.text:000122FE                 mov     [ecx+0BCh], eax
.text:00012304                 mov     edx, [ebp+var_4]
.text:00012307                 mov     eax, [edx+0BCh]
.text:0001230D                 push    eax
.text:0001230E                 call    _filename_is_null
.text:00012313                 add     esp, 4
.text:00012316                 test    eax, eax
.text:00012318                 jnz     loc_12485
.text:0001231E                 mov     ecx, [ebp+var_4]
.text:00012321                 mov     edx, [ecx+0BCh]
.text:00012327                 push    edx
.text:00012328                 call    _filename_to_str
.text:0001232D                 add     esp, 4
.text:00012330                 push    eax
.text:00012331                 push    offset $SG93086 ; "Reading private key file \"%.150s\""
.text:00012336                 mov     eax, [ebp+arg_0]
.text:00012339                 push    eax
.text:0001233A                 call    _logeventf
.text:0001233F                 add     esp, 0Ch
.text:00012342                 mov     ecx, [ebp+var_4]
.text:00012345                 mov     edx, [ecx+0BCh]
.text:0001234B                 push    edx
.text:0001234C                 call    _key_type
.text:00012351                 add     esp, 4
.text:00012354                 mov     [ebp+var_C], eax
.text:00012357                 cmp     [ebp+var_C], 3
.text:0001235B                 jnz     loc_12411
.text:00012361                 lea     eax, [ebp+var_14]
.text:00012364                 push    eax
.text:00012365                 mov     ecx, [ebp+var_4]
.text:00012368                 add     ecx, 60h ; '`'
.text:0001236B                 push    ecx
.text:0001236C                 mov     edx, [ebp+var_4]
.text:0001236F                 add     edx, 54h ; 'T'
.text:00012372                 push    edx
.text:00012373                 mov     eax, [ebp+var_4]
.text:00012376                 add     eax, 5Ch ; '\'
.text:00012379                 push    eax
.text:0001237A                 mov     ecx, [ebp+var_4]
.text:0001237D                 mov     edx, [ecx+0BCh]
.text:00012383                 push    edx
.text:00012384                 call    _ssh2_userkey_loadpub
.text:00012389                 add     esp, 14h
.text:0001238C                 mov     ecx, [ebp+var_4]
.text:0001238F                 mov     [ecx+50h], eax
.text:00012392                 mov     edx, [ebp+var_4]
.text:00012395                 cmp     dword ptr [edx+50h], 0
.text:00012399                 jz      short loc_123B7
.text:0001239B                 push    0
.text:0001239D                 mov     eax, [ebp+var_4]
.text:000123A0                 mov     ecx, [eax+0BCh]
.text:000123A6                 push    ecx
.text:000123A7                 call    _ssh2_userkey_encrypted
.text:000123AC                 add     esp, 8
.text:000123AF                 mov     edx, [ebp+var_4]
.text:000123B2                 mov     [edx+58h], eax
.text:000123B5                 jmp     short loc_1240F
.text:000123B7 ; ---------------------------------------------------------------------------
.text:000123B7
.text:000123B7 loc_123B7:                              ; CODE XREF: _do_ssh2_authconn+571j
.text:000123B7                 mov     eax, [ebp+var_14]
.text:000123BA                 push    eax
.text:000123BB                 push    offset $SG93093 ; "Unable to load private key (%s)"
.text:000123C0                 mov     ecx, [ebp+arg_0]
.text:000123C3                 push    ecx
.text:000123C4                 call    _logeventf
.text:000123C9                 add     esp, 0Ch
.text:000123CC                 mov     edx, [ebp+var_14]
.text:000123CF                 push    edx
.text:000123D0                 mov     eax, [ebp+var_4]
.text:000123D3                 mov     ecx, [eax+0BCh]
.text:000123D9                 push    ecx
.text:000123DA                 call    _filename_to_str
.text:000123DF                 add     esp, 4
.text:000123E2                 push    eax
.text:000123E3                 push    offset $SG93094 ; "Unable to load private key file \"%.150"...
.text:000123E8                 call    _dupprintf
.text:000123ED                 add     esp, 0Ch
.text:000123F0                 mov     [ebp+var_1C], eax
.text:000123F3                 mov     edx, [ebp+var_1C]
.text:000123F6                 push    edx             ; Str
.text:000123F7                 mov     eax, [ebp+arg_0]
.text:000123FA                 push    eax             ; int
.text:000123FB                 call    _c_write_str
.text:00012400                 add     esp, 8
.text:00012403                 mov     ecx, [ebp+var_1C]
.text:00012406                 push    ecx
.text:00012407                 call    _safefree
.text:0001240C                 add     esp, 4
.text:0001240F
.text:0001240F loc_1240F:                              ; CODE XREF: _do_ssh2_authconn+58Dj
.text:0001240F                 jmp     short loc_12485
.text:00012411 ; ---------------------------------------------------------------------------
.text:00012411
.text:00012411 loc_12411:                              ; CODE XREF: _do_ssh2_authconn+533j
.text:00012411                 mov     edx, [ebp+var_C]
.text:00012414                 push    edx
.text:00012415                 call    _key_type_to_str
.text:0001241A                 add     esp, 4
.text:0001241D                 push    eax
.text:0001241E                 push    offset $SG93097 ; "Unable to use this key file (%s)"
.text:00012423                 mov     eax, [ebp+arg_0]
.text:00012426                 push    eax
.text:00012427                 call    _logeventf
.text:0001242C                 add     esp, 0Ch
.text:0001242F                 mov     ecx, [ebp+var_C]
.text:00012432                 push    ecx
.text:00012433                 call    _key_type_to_str
.text:00012438                 add     esp, 4
.text:0001243B                 push    eax
.text:0001243C                 mov     edx, [ebp+var_4]
.text:0001243F                 mov     eax, [edx+0BCh]
.text:00012445                 push    eax
.text:00012446                 call    _filename_to_str
.text:0001244B                 add     esp, 4
.text:0001244E                 push    eax
.text:0001244F                 push    offset $SG93098 ; "Unable to use key file \"%.150s\" (%s)\"...
.text:00012454                 call    _dupprintf
.text:00012459                 add     esp, 0Ch
.text:0001245C                 mov     [ebp+var_20], eax
.text:0001245F                 mov     ecx, [ebp+var_20]
.text:00012462                 push    ecx             ; Str
.text:00012463                 mov     edx, [ebp+arg_0]
.text:00012466                 push    edx             ; int
.text:00012467                 call    _c_write_str
.text:0001246C                 add     esp, 8
.text:0001246F                 mov     eax, [ebp+var_20]
.text:00012472                 push    eax
.text:00012473                 call    _safefree
.text:00012478                 add     esp, 4
.text:0001247B                 mov     ecx, [ebp+var_4]
.text:0001247E                 mov     dword ptr [ecx+50h], 0
.text:00012485
.text:00012485 loc_12485:                              ; CODE XREF: _do_ssh2_authconn+4F0j
.text:00012485                                         ; _do_ssh2_authconn:loc_1240Fj
.text:00012485                 mov     edx, [ebp+var_4]
.text:00012488                 mov     dword ptr [edx+80h], 0
.text:00012492                 mov     eax, [ebp+var_4]
.text:00012495                 mov     dword ptr [eax+6Ch], 0
.text:0001249C                 mov     ecx, [ebp+var_4]
.text:0001249F                 mov     dword ptr [ecx+78h], 0
.text:000124A6                 push    1Ah
.text:000124A8                 mov     edx, [ebp+arg_0]
.text:000124AB                 mov     eax, [edx+21Ch]
.text:000124B1                 push    eax
.text:000124B2                 call    _conf_get_int
.text:000124B7                 add     esp, 8
.text:000124BA                 test    eax, eax
.text:000124BC                 jz      $done_agent_query$93136
.text:000124C2                 call    _agent_exists
.text:000124C7                 test    eax, eax
.text:000124C9                 jz      $done_agent_query$93136
.text:000124CF                 push    offset $SG93104 ; "Pageant is running. Requesting keys."
.text:000124D4                 mov     ecx, [ebp+arg_0]
.text:000124D7                 mov     edx, [ecx+0E4h]
.text:000124DD                 push    edx
.text:000124DE                 call    _logevent
.text:000124E3                 add     esp, 8
.text:000124E6                 mov     eax, [ebp+var_4]
.text:000124E9                 mov     byte ptr [eax+64h], 0
.text:000124ED                 mov     ecx, [ebp+var_4]
.text:000124F0                 mov     byte ptr [ecx+65h], 0
.text:000124F4                 mov     edx, [ebp+var_4]
.text:000124F7                 mov     byte ptr [edx+66h], 0
.text:000124FB                 mov     eax, [ebp+var_4]
.text:000124FE                 mov     byte ptr [eax+67h], 1
.text:00012502                 mov     ecx, [ebp+var_4]
.text:00012505                 mov     byte ptr [ecx+68h], 0Bh
.text:00012509                 mov     edx, [ebp+arg_0]
.text:0001250C                 push    edx
.text:0001250D                 push    offset _ssh_agent_callback
.text:00012512                 mov     eax, [ebp+var_4]
.text:00012515                 add     eax, 74h ; 't'
.text:00012518                 push    eax
.text:00012519                 lea     ecx, [ebp+var_28]
.text:0001251C                 push    ecx
.text:0001251D                 push    5
.text:0001251F                 mov     edx, [ebp+var_4]
.text:00012522                 add     edx, 64h ; 'd'
.text:00012525                 push    edx
.text:00012526                 call    _agent_query
.text:0001252B                 add     esp, 18h
.text:0001252E                 test    eax, eax
.text:00012530                 jnz     short loc_1259D
.text:00012532
.text:00012532 loc_12532:                              ; CODE XREF: _do_ssh2_authconn+71Aj
.text:00012532                                         ; _do_ssh2_authconn+752j ...
.text:00012532                 mov     eax, [ebp+var_8]
.text:00012535                 mov     dword ptr [eax], 2249h
.text:0001253B                 jmp     loc_1626E
.text:00012540 ; ---------------------------------------------------------------------------
.text:00012540
.text:00012540 loc_12540:                              ; CODE XREF: _do_ssh2_authconn+100j
.text:00012540                 xor     ecx, ecx
.text:00012542                 jnz     short loc_12532
.text:00012544                 cmp     [ebp+arg_C], 0
.text:00012548                 jz      short loc_12576
.text:0001254A                 push    offset $SG93118 ; "Unexpected data from server while waiti"...
.text:0001254F                 call    _dupprintf
.text:00012554                 add     esp, 4
.text:00012557                 push    eax
.text:00012558                 mov     edx, [ebp+arg_0]
.text:0001255B                 push    edx
.text:0001255C                 call    _bomb_out
.text:00012561                 add     esp, 8
.text:00012564
.text:00012564 loc_12564:                              ; CODE XREF: _do_ssh2_authconn+74Cj
.text:00012564                 mov     eax, [ebp+var_8]
.text:00012567                 mov     dword ptr [eax], 0
.text:0001256D                 jmp     loc_1626E
.text:00012572 ; ---------------------------------------------------------------------------
.text:00012572                 xor     ecx, ecx
.text:00012574                 jnz     short loc_12564
.text:00012576
.text:00012576 loc_12576:                              ; CODE XREF: _do_ssh2_authconn+720j
.text:00012576                 cmp     [ebp+arg_C], 0
.text:0001257A                 jnz     short loc_12532
.text:0001257C                 cmp     [ebp+arg_8], 0
.text:00012580                 jg      short loc_12532
.text:00012582                 mov     edx, [ebp+arg_0]
.text:00012585                 mov     eax, [edx+228h]
.text:0001258B                 mov     [ebp+var_28], eax
.text:0001258E                 mov     ecx, [ebp+var_4]
.text:00012591                 mov     edx, [ebp+arg_0]
.text:00012594                 mov     eax, [edx+22Ch]
.text:0001259A                 mov     [ecx+74h], eax
.text:0001259D
.text:0001259D loc_1259D:                              ; CODE XREF: _do_ssh2_authconn+708j
.text:0001259D                 mov     ecx, [ebp+var_4]
.text:000125A0                 mov     edx, [ebp+var_28]
.text:000125A3                 mov     [ecx+6Ch], edx
.text:000125A6                 mov     eax, [ebp+var_4]
.text:000125A9                 cmp     dword ptr [eax+6Ch], 0
.text:000125AD                 jz      loc_12934
.text:000125B3                 mov     ecx, [ebp+var_4]
.text:000125B6                 cmp     dword ptr [ecx+74h], 5
.text:000125BA                 jl      loc_12934
.text:000125C0                 mov     edx, [ebp+var_4]
.text:000125C3                 mov     eax, [edx+6Ch]
.text:000125C6                 movzx   ecx, byte ptr [eax+4]
.text:000125CA                 cmp     ecx, 0Ch
.text:000125CD                 jnz     loc_12934
.text:000125D3                 mov     edx, [ebp+var_4]
.text:000125D6                 mov     eax, [edx+6Ch]
.text:000125D9                 add     eax, 5
.text:000125DC                 mov     [ebp+var_34], eax
.text:000125DF                 mov     ecx, [ebp+var_34]
.text:000125E2                 movzx   edx, byte ptr [ecx]
.text:000125E5                 shl     edx, 18h
.text:000125E8                 mov     eax, [ebp+var_34]
.text:000125EB                 movzx   ecx, byte ptr [eax+1]
.text:000125EF                 shl     ecx, 10h
.text:000125F2                 or      edx, ecx
.text:000125F4                 mov     eax, [ebp+var_34]
.text:000125F7                 movzx   ecx, byte ptr [eax+2]
.text:000125FB                 shl     ecx, 8
.text:000125FE                 or      edx, ecx
.text:00012600                 mov     eax, [ebp+var_34]
.text:00012603                 movzx   ecx, byte ptr [eax+3]
.text:00012607                 or      edx, ecx
.text:00012609                 push    edx
.text:0001260A                 call    _toint
.text:0001260F                 add     esp, 4
.text:00012612                 mov     edx, [ebp+var_4]
.text:00012615                 mov     [edx+80h], eax
.text:0001261B                 mov     eax, [ebp+var_4]
.text:0001261E                 cmp     dword ptr [eax+80h], 0
.text:00012625                 jge     short loc_12659
.text:00012627                 mov     ecx, [ebp+var_4]
.text:0001262A                 mov     edx, [ecx+80h]
.text:00012630                 push    edx
.text:00012631                 push    offset $SG93135 ; "Pageant response contained a negative k"...
.text:00012636                 mov     eax, [ebp+arg_0]
.text:00012639                 push    eax
.text:0001263A                 call    _logeventf
.text:0001263F                 add     esp, 0Ch
.text:00012642                 mov     ecx, [ebp+var_4]
.text:00012645                 mov     dword ptr [ecx+80h], 0
.text:0001264F                 jmp     $done_agent_query$93136
.text:00012654 ; ---------------------------------------------------------------------------
.text:00012654                 jmp     loc_127C4
.text:00012659 ; ---------------------------------------------------------------------------
.text:00012659
.text:00012659 loc_12659:                              ; CODE XREF: _do_ssh2_authconn+7FDj
.text:00012659                 mov     edx, [ebp+var_34]
.text:0001265C                 add     edx, 4
.text:0001265F                 mov     [ebp+var_38], edx
.text:00012662                 mov     eax, [ebp+var_4]
.text:00012665                 mov     ecx, [eax+74h]
.text:00012668                 sub     ecx, 9
.text:0001266B                 mov     [ebp+var_3C], ecx
.text:0001266E                 mov     [ebp+var_30], 0
.text:00012675                 jmp     short loc_12680
.text:00012677 ; ---------------------------------------------------------------------------
.text:00012677
.text:00012677 loc_12677:                              ; CODE XREF: _do_ssh2_authconn+997j
.text:00012677                 mov     edx, [ebp+var_30]
.text:0001267A                 add     edx, 1
.text:0001267D                 mov     [ebp+var_30], edx
.text:00012680
.text:00012680 loc_12680:                              ; CODE XREF: _do_ssh2_authconn+84Dj
.text:00012680                 mov     eax, [ebp+var_4]
.text:00012683                 mov     ecx, [ebp+var_30]
.text:00012686                 cmp     ecx, [eax+80h]
.text:0001268C                 jge     loc_127C4
.text:00012692                 cmp     [ebp+var_3C], 4
.text:00012696                 jge     short loc_126BB
.text:00012698                 push    offset $SG93146 ; "Pageant response was truncated"
.text:0001269D                 mov     edx, [ebp+arg_0]
.text:000126A0                 push    edx
.text:000126A1                 call    _logeventf
.text:000126A6                 add     esp, 8
.text:000126A9                 mov     eax, [ebp+var_4]
.text:000126AC                 mov     dword ptr [eax+80h], 0
.text:000126B6                 jmp     $done_agent_query$93136
.text:000126BB ; ---------------------------------------------------------------------------
.text:000126BB
.text:000126BB loc_126BB:                              ; CODE XREF: _do_ssh2_authconn+86Ej
.text:000126BB                 mov     ecx, [ebp+var_38]
.text:000126BE                 movzx   edx, byte ptr [ecx]
.text:000126C1                 shl     edx, 18h
.text:000126C4                 mov     eax, [ebp+var_38]
.text:000126C7                 movzx   ecx, byte ptr [eax+1]
.text:000126CB                 shl     ecx, 10h
.text:000126CE                 or      edx, ecx
.text:000126D0                 mov     eax, [ebp+var_38]
.text:000126D3                 movzx   ecx, byte ptr [eax+2]
.text:000126D7                 shl     ecx, 8
.text:000126DA                 or      edx, ecx
.text:000126DC                 mov     eax, [ebp+var_38]
.text:000126DF                 movzx   ecx, byte ptr [eax+3]
.text:000126E3                 or      edx, ecx
.text:000126E5                 push    edx
.text:000126E6                 call    _toint
.text:000126EB                 add     esp, 4
.text:000126EE                 mov     [ebp+var_40], eax
.text:000126F1                 cmp     [ebp+var_40], 0
.text:000126F5                 jl      short loc_126FF
.text:000126F7                 mov     edx, [ebp+var_40]
.text:000126FA                 cmp     edx, [ebp+var_3C]
.text:000126FD                 jle     short loc_12722
.text:000126FF
.text:000126FF loc_126FF:                              ; CODE XREF: _do_ssh2_authconn+8CDj
.text:000126FF                 push    offset $SG93157 ; "Pageant response was truncated"
.text:00012704                 mov     eax, [ebp+arg_0]
.text:00012707                 push    eax
.text:00012708                 call    _logeventf
.text:0001270D                 add     esp, 8
.text:00012710                 mov     ecx, [ebp+var_4]
.text:00012713                 mov     dword ptr [ecx+80h], 0
.text:0001271D                 jmp     $done_agent_query$93136
.text:00012722 ; ---------------------------------------------------------------------------
.text:00012722
.text:00012722 loc_12722:                              ; CODE XREF: _do_ssh2_authconn+8D5j
.text:00012722                 mov     edx, [ebp+var_40]
.text:00012725                 add     edx, 4
.text:00012728                 mov     eax, [ebp+var_3C]
.text:0001272B                 sub     eax, edx
.text:0001272D                 mov     [ebp+var_3C], eax
.text:00012730                 mov     ecx, [ebp+var_40]
.text:00012733                 mov     edx, [ebp+var_38]
.text:00012736                 lea     eax, [edx+ecx+4]
.text:0001273A                 mov     [ebp+var_38], eax
.text:0001273D                 mov     ecx, [ebp+var_38]
.text:00012740                 movzx   edx, byte ptr [ecx]
.text:00012743                 shl     edx, 18h
.text:00012746                 mov     eax, [ebp+var_38]
.text:00012749                 movzx   ecx, byte ptr [eax+1]
.text:0001274D                 shl     ecx, 10h
.text:00012750                 or      edx, ecx
.text:00012752                 mov     eax, [ebp+var_38]
.text:00012755                 movzx   ecx, byte ptr [eax+2]
.text:00012759                 shl     ecx, 8
.text:0001275C                 or      edx, ecx
.text:0001275E                 mov     eax, [ebp+var_38]
.text:00012761                 movzx   ecx, byte ptr [eax+3]
.text:00012765                 or      edx, ecx
.text:00012767                 push    edx
.text:00012768                 call    _toint
.text:0001276D                 add     esp, 4
.text:00012770                 mov     [ebp+var_44], eax
.text:00012773                 cmp     [ebp+var_44], 0
.text:00012777                 jl      short loc_12781
.text:00012779                 mov     edx, [ebp+var_44]
.text:0001277C                 cmp     edx, [ebp+var_3C]
.text:0001277F                 jle     short loc_127A4
.text:00012781
.text:00012781 loc_12781:                              ; CODE XREF: _do_ssh2_authconn+94Fj
.text:00012781                 push    offset $SG93168 ; "Pageant response was truncated"
.text:00012786                 mov     eax, [ebp+arg_0]
.text:00012789                 push    eax
.text:0001278A                 call    _logeventf
.text:0001278F                 add     esp, 8
.text:00012792                 mov     ecx, [ebp+var_4]
.text:00012795                 mov     dword ptr [ecx+80h], 0
.text:0001279F                 jmp     $done_agent_query$93136
.text:000127A4 ; ---------------------------------------------------------------------------
.text:000127A4
.text:000127A4 loc_127A4:                              ; CODE XREF: _do_ssh2_authconn+957j
.text:000127A4                 mov     edx, [ebp+var_44]
.text:000127A7                 add     edx, 4
.text:000127AA                 mov     eax, [ebp+var_3C]
.text:000127AD                 sub     eax, edx
.text:000127AF                 mov     [ebp+var_3C], eax
.text:000127B2                 mov     ecx, [ebp+var_44]
.text:000127B5                 mov     edx, [ebp+var_38]
.text:000127B8                 lea     eax, [edx+ecx+4]
.text:000127BC                 mov     [ebp+var_38], eax
.text:000127BF                 jmp     loc_12677
.text:000127C4 ; ---------------------------------------------------------------------------
.text:000127C4
.text:000127C4 loc_127C4:                              ; CODE XREF: _do_ssh2_authconn+82Cj
.text:000127C4                                         ; _do_ssh2_authconn+864j
.text:000127C4                 mov     ecx, [ebp+var_34]
.text:000127C7                 add     ecx, 4
.text:000127CA                 mov     [ebp+var_34], ecx
.text:000127CD                 mov     edx, [ebp+var_4]
.text:000127D0                 mov     eax, [edx+80h]
.text:000127D6                 push    eax
.text:000127D7                 push    offset $SG93169 ; "Pageant has %d SSH-2 keys"
.text:000127DC                 mov     ecx, [ebp+arg_0]
.text:000127DF                 push    ecx
.text:000127E0                 call    _logeventf
.text:000127E5                 add     esp, 0Ch
.text:000127E8                 mov     edx, [ebp+var_4]
.text:000127EB                 cmp     dword ptr [edx+50h], 0
.text:000127EF                 jz      loc_12932
.text:000127F5                 mov     [ebp+var_30], 0
.text:000127FC                 jmp     short loc_12807
.text:000127FE ; ---------------------------------------------------------------------------
.text:000127FE
.text:000127FE loc_127FE:                              ; CODE XREF: _do_ssh2_authconn+AD8j
.text:000127FE                 mov     eax, [ebp+var_30]
.text:00012801                 add     eax, 1
.text:00012804                 mov     [ebp+var_30], eax
.text:00012807
.text:00012807 loc_12807:                              ; CODE XREF: _do_ssh2_authconn+9D4j
.text:00012807                 mov     ecx, [ebp+var_4]
.text:0001280A                 mov     edx, [ebp+var_30]
.text:0001280D                 cmp     edx, [ecx+80h]
.text:00012813                 jge     loc_12905
.text:00012819                 mov     eax, [ebp+var_34]
.text:0001281C                 movzx   ecx, byte ptr [eax]
.text:0001281F                 shl     ecx, 18h
.text:00012822                 mov     edx, [ebp+var_34]
.text:00012825                 movzx   eax, byte ptr [edx+1]
.text:00012829                 shl     eax, 10h
.text:0001282C                 or      ecx, eax
.text:0001282E                 mov     edx, [ebp+var_34]
.text:00012831                 movzx   eax, byte ptr [edx+2]
.text:00012835                 shl     eax, 8
.text:00012838                 or      ecx, eax
.text:0001283A                 mov     edx, [ebp+var_34]
.text:0001283D                 movzx   eax, byte ptr [edx+3]
.text:00012841                 or      ecx, eax
.text:00012843                 push    ecx
.text:00012844                 call    _toint
.text:00012849                 add     esp, 4
.text:0001284C                 mov     ecx, [ebp+var_4]
.text:0001284F                 mov     [ecx+90h], eax
.text:00012855                 mov     edx, [ebp+var_4]
.text:00012858                 mov     eax, [ebp+var_4]
.text:0001285B                 mov     ecx, [edx+90h]
.text:00012861                 cmp     ecx, [eax+54h]
.text:00012864                 jnz     short loc_128B0
.text:00012866                 mov     edx, [ebp+var_4]
.text:00012869                 mov     eax, [edx+54h]
.text:0001286C                 push    eax             ; Size
.text:0001286D                 mov     ecx, [ebp+var_4]
.text:00012870                 mov     edx, [ecx+50h]
.text:00012873                 push    edx             ; Buf2
.text:00012874                 mov     eax, [ebp+var_34]
.text:00012877                 add     eax, 4
.text:0001287A                 push    eax             ; Buf1
.text:0001287B                 call    _memcmp
.text:00012880                 add     esp, 0Ch
.text:00012883                 test    eax, eax
.text:00012885                 jnz     short loc_128B0
.text:00012887                 mov     ecx, [ebp+var_30]
.text:0001288A                 push    ecx
.text:0001288B                 push    offset $SG93183 ; "Pageant key #%d matches configured key "...
.text:00012890                 mov     edx, [ebp+arg_0]
.text:00012893                 push    edx
.text:00012894                 call    _logeventf
.text:00012899                 add     esp, 0Ch
.text:0001289C                 mov     eax, [ebp+var_4]
.text:0001289F                 mov     ecx, [ebp+var_30]
.text:000128A2                 mov     [eax+7Ch], ecx
.text:000128A5                 mov     edx, [ebp+var_4]
.text:000128A8                 mov     eax, [ebp+var_34]
.text:000128AB                 mov     [edx+78h], eax
.text:000128AE                 jmp     short loc_12905
.text:000128B0 ; ---------------------------------------------------------------------------
.text:000128B0
.text:000128B0 loc_128B0:                              ; CODE XREF: _do_ssh2_authconn+A3Cj
.text:000128B0                                         ; _do_ssh2_authconn+A5Dj
.text:000128B0                 mov     ecx, [ebp+var_4]
.text:000128B3                 mov     edx, [ecx+90h]
.text:000128B9                 mov     eax, [ebp+var_34]
.text:000128BC                 lea     ecx, [eax+edx+4]
.text:000128C0                 mov     [ebp+var_34], ecx
.text:000128C3                 mov     edx, [ebp+var_34]
.text:000128C6                 movzx   eax, byte ptr [edx]
.text:000128C9                 shl     eax, 18h
.text:000128CC                 mov     ecx, [ebp+var_34]
.text:000128CF                 movzx   edx, byte ptr [ecx+1]
.text:000128D3                 shl     edx, 10h
.text:000128D6                 or      eax, edx
.text:000128D8                 mov     ecx, [ebp+var_34]
.text:000128DB                 movzx   edx, byte ptr [ecx+2]
.text:000128DF                 shl     edx, 8
.text:000128E2                 or      eax, edx
.text:000128E4                 mov     ecx, [ebp+var_34]
.text:000128E7                 movzx   edx, byte ptr [ecx+3]
.text:000128EB                 or      eax, edx
.text:000128ED                 push    eax
.text:000128EE                 call    _toint
.text:000128F3                 add     esp, 4
.text:000128F6                 mov     ecx, [ebp+var_34]
.text:000128F9                 lea     edx, [ecx+eax+4]
.text:000128FD                 mov     [ebp+var_34], edx
.text:00012900                 jmp     loc_127FE
.text:00012905 ; ---------------------------------------------------------------------------
.text:00012905
.text:00012905 loc_12905:                              ; CODE XREF: _do_ssh2_authconn+9EBj
.text:00012905                                         ; _do_ssh2_authconn+A86j
.text:00012905                 mov     eax, [ebp+var_4]
.text:00012908                 cmp     dword ptr [eax+78h], 0
.text:0001290C                 jnz     short loc_12932
.text:0001290E                 push    offset $SG93193 ; "Configured key file not in Pageant"
.text:00012913                 mov     ecx, [ebp+arg_0]
.text:00012916                 mov     edx, [ecx+0E4h]
.text:0001291C                 push    edx
.text:0001291D                 call    _logevent
.text:00012922                 add     esp, 8
.text:00012925                 mov     eax, [ebp+var_4]
.text:00012928                 mov     dword ptr [eax+80h], 0
.text:00012932
.text:00012932 loc_12932:                              ; CODE XREF: _do_ssh2_authconn+9C7j
.text:00012932                                         ; _do_ssh2_authconn+AE4j
.text:00012932                 jmp     short $done_agent_query$93136
.text:00012934 ; ---------------------------------------------------------------------------
.text:00012934
.text:00012934 loc_12934:                              ; CODE XREF: _do_ssh2_authconn+785j
.text:00012934                                         ; _do_ssh2_authconn+792j ...
.text:00012934                 push    offset $SG93195 ; "Failed to get reply from Pageant"
.text:00012939                 mov     ecx, [ebp+arg_0]
.text:0001293C                 mov     edx, [ecx+0E4h]
.text:00012942                 push    edx
.text:00012943                 call    _logevent
.text:00012948                 add     esp, 8
.text:0001294B
.text:0001294B $done_agent_query$93136:                ; CODE XREF: _do_ssh2_authconn+4B9j
.text:0001294B                                         ; _do_ssh2_authconn+694j ...
.text:0001294B                 mov     eax, [ebp+var_4]
.text:0001294E                 mov     dword ptr [eax+4Ch], 0
.text:00012955
.text:00012955 loc_12955:                              ; CODE XREF: _do_ssh2_authconn:loc_158DFj
.text:00012955                 mov     ecx, [ebp+var_4]
.text:00012958                 cmp     dword ptr [ecx+34h], 0
.text:0001295C                 jnz     loc_158E4
.text:00012962                 mov     edx, [ebp+var_4]
.text:00012965                 cmp     dword ptr [edx+4Ch], 0
.text:00012969                 jz      short loc_12988
.text:0001296B                 push    1Ch
.text:0001296D                 mov     eax, [ebp+arg_0]
.text:00012970                 mov     ecx, [eax+21Ch]
.text:00012976                 push    ecx
.text:00012977                 call    _conf_get_int
.text:0001297C                 add     esp, 8
.text:0001297F                 test    eax, eax
.text:00012981                 jnz     short loc_12988
.text:00012983                 jmp     loc_12B3A
.text:00012988 ; ---------------------------------------------------------------------------
.text:00012988
.text:00012988 loc_12988:                              ; CODE XREF: _do_ssh2_authconn+B41j
.text:00012988                                         ; _do_ssh2_authconn+B59j
.text:00012988                 mov     edx, [ebp+arg_0]
.text:0001298B                 mov     eax, [edx+21Ch]
.text:00012991                 push    eax
.text:00012992                 call    _get_remote_username
.text:00012997                 add     esp, 4
.text:0001299A                 mov     [ebp+var_1AC], eax
.text:000129A0                 mov     ecx, [ebp+arg_0]
.text:000129A3                 mov     edx, [ebp+var_1AC]
.text:000129A9                 mov     [ecx+224h], edx
.text:000129AF                 cmp     [ebp+var_1AC], 0
.text:000129B6                 jnz     loc_12AEE
.text:000129BC                 mov     eax, [ebp+arg_0]
.text:000129BF                 mov     ecx, [eax+0E4h]
.text:000129C5                 push    ecx
.text:000129C6                 call    _new_prompts
.text:000129CB                 add     esp, 4
.text:000129CE                 mov     edx, [ebp+var_4]
.text:000129D1                 mov     [edx+3Ch], eax
.text:000129D4                 mov     eax, [ebp+var_4]
.text:000129D7                 mov     ecx, [eax+3Ch]
.text:000129DA                 mov     dword ptr [ecx], 1
.text:000129E0                 push    offset $SG93204 ; "SSH login name"
.text:000129E5                 call    _dupstr
.text:000129EA                 add     esp, 4
.text:000129ED                 mov     edx, [ebp+var_4]
.text:000129F0                 mov     ecx, [edx+3Ch]
.text:000129F3                 mov     [ecx+4], eax
.text:000129F6                 push    1
.text:000129F8                 push    offset $SG93205 ; "login as: "
.text:000129FD                 call    _dupstr
.text:00012A02                 add     esp, 4
.text:00012A05                 push    eax
.text:00012A06                 mov     edx, [ebp+var_4]
.text:00012A09                 mov     eax, [edx+3Ch]
.text:00012A0C                 push    eax
.text:00012A0D                 call    _add_prompt
.text:00012A12                 add     esp, 0Ch
.text:00012A15                 push    0
.text:00012A17                 push    0
.text:00012A19                 mov     ecx, [ebp+var_4]
.text:00012A1C                 mov     edx, [ecx+3Ch]
.text:00012A1F                 push    edx
.text:00012A20                 call    _get_userpass_input
.text:00012A25                 add     esp, 0Ch
.text:00012A28                 mov     [ebp+var_48], eax
.text:00012A2B
.text:00012A2B loc_12A2B:                              ; CODE XREF: _do_ssh2_authconn+C55j
.text:00012A2B                 cmp     [ebp+var_48], 0
.text:00012A2F                 jge     short loc_12A7F
.text:00012A31                 mov     eax, [ebp+arg_0]
.text:00012A34                 mov     dword ptr [eax+0D8h], 1
.text:00012A3E
.text:00012A3E loc_12A3E:                              ; CODE XREF: _do_ssh2_authconn+C26j
.text:00012A3E                                         ; _do_ssh2_authconn+C2Cj
.text:00012A3E                 mov     ecx, [ebp+var_8]
.text:00012A41                 mov     dword ptr [ecx], 22CDh
.text:00012A47                 jmp     loc_1626E
.text:00012A4C ; ---------------------------------------------------------------------------
.text:00012A4C
.text:00012A4C loc_12A4C:                              ; CODE XREF: _do_ssh2_authconn+110j
.text:00012A4C                 xor     edx, edx
.text:00012A4E                 jnz     short loc_12A3E
.text:00012A50                 cmp     [ebp+arg_C], 0
.text:00012A54                 jnz     short loc_12A3E
.text:00012A56                 mov     eax, [ebp+arg_8]
.text:00012A59                 push    eax
.text:00012A5A                 mov     ecx, [ebp+arg_4]
.text:00012A5D                 push    ecx
.text:00012A5E                 mov     edx, [ebp+var_4]
.text:00012A61                 mov     eax, [edx+3Ch]
.text:00012A64                 push    eax
.text:00012A65                 call    _get_userpass_input
.text:00012A6A                 add     esp, 0Ch
.text:00012A6D                 mov     [ebp+var_48], eax
.text:00012A70                 mov     ecx, [ebp+arg_0]
.text:00012A73                 mov     dword ptr [ecx+0D8h], 0
.text:00012A7D                 jmp     short loc_12A2B
.text:00012A7F ; ---------------------------------------------------------------------------
.text:00012A7F
.text:00012A7F loc_12A7F:                              ; CODE XREF: _do_ssh2_authconn+C07j
.text:00012A7F                 cmp     [ebp+var_48], 0
.text:00012A83                 jnz     short loc_12ABD
.text:00012A85                 mov     edx, [ebp+var_4]
.text:00012A88                 mov     eax, [edx+3Ch]
.text:00012A8B                 push    eax
.text:00012A8C                 call    _free_prompts
.text:00012A91                 add     esp, 4
.text:00012A94                 push    1               ; int
.text:00012A96                 push    0               ; int
.text:00012A98                 push    0               ; Str
.text:00012A9A                 push    offset $SG93219 ; "No username provided"
.text:00012A9F                 mov     ecx, [ebp+arg_0]
.text:00012AA2                 push    ecx             ; int
.text:00012AA3                 call    _ssh_disconnect
.text:00012AA8                 add     esp, 14h
.text:00012AAB
.text:00012AAB loc_12AAB:                              ; CODE XREF: _do_ssh2_authconn+C93j
.text:00012AAB                 mov     edx, [ebp+var_8]
.text:00012AAE                 mov     dword ptr [edx], 0
.text:00012AB4                 jmp     loc_1626E
.text:00012AB9 ; ---------------------------------------------------------------------------
.text:00012AB9                 xor     eax, eax
.text:00012ABB                 jnz     short loc_12AAB
.text:00012ABD
.text:00012ABD loc_12ABD:                              ; CODE XREF: _do_ssh2_authconn+C5Bj
.text:00012ABD                 mov     ecx, [ebp+var_4]
.text:00012AC0                 mov     edx, [ecx+3Ch]
.text:00012AC3                 mov     eax, [edx+18h]
.text:00012AC6                 mov     ecx, [eax]
.text:00012AC8                 mov     edx, [ecx+8]
.text:00012ACB                 push    edx
.text:00012ACC                 call    _dupstr
.text:00012AD1                 add     esp, 4
.text:00012AD4                 mov     ecx, [ebp+arg_0]
.text:00012AD7                 mov     [ecx+224h], eax
.text:00012ADD                 mov     edx, [ebp+var_4]
.text:00012AE0                 mov     eax, [edx+3Ch]
.text:00012AE3                 push    eax
.text:00012AE4                 call    _free_prompts
.text:00012AE9                 add     esp, 4
.text:00012AEC                 jmp     short loc_12B3A
.text:00012AEE ; ---------------------------------------------------------------------------
.text:00012AEE
.text:00012AEE loc_12AEE:                              ; CODE XREF: _do_ssh2_authconn+B8Ej
.text:00012AEE                 mov     ecx, dword ptr ds:_flags
.text:00012AF4                 and     ecx, 1
.text:00012AF7                 jnz     short loc_12B04
.text:00012AF9                 mov     edx, dword ptr ds:_flags
.text:00012AFF                 and     edx, 4
.text:00012B02                 jz      short loc_12B3A
.text:00012B04
.text:00012B04 loc_12B04:                              ; CODE XREF: _do_ssh2_authconn+CCFj
.text:00012B04                 mov     eax, [ebp+arg_0]
.text:00012B07                 mov     ecx, [eax+224h]
.text:00012B0D                 push    ecx
.text:00012B0E                 push    offset $SG93227 ; "Using username \"%s\".\r\n"
.text:00012B13                 call    _dupprintf
.text:00012B18                 add     esp, 8
.text:00012B1B                 mov     [ebp+var_4C], eax
.text:00012B1E                 mov     edx, [ebp+var_4C]
.text:00012B21                 push    edx             ; Str
.text:00012B22                 mov     eax, [ebp+arg_0]
.text:00012B25                 push    eax             ; int
.text:00012B26                 call    _c_write_str
.text:00012B2B                 add     esp, 8
.text:00012B2E                 mov     ecx, [ebp+var_4C]
.text:00012B31                 push    ecx
.text:00012B32                 call    _safefree
.text:00012B37                 add     esp, 4
.text:00012B3A
.text:00012B3A loc_12B3A:                              ; CODE XREF: _do_ssh2_authconn+B5Bj
.text:00012B3A                                         ; _do_ssh2_authconn+CC4j ...
.text:00012B3A                 mov     edx, [ebp+var_4]
.text:00012B3D                 mov     dword ptr [edx+4Ch], 1
.text:00012B44                 mov     eax, [ebp+arg_0]
.text:00012B47                 mov     dword ptr [eax+15Ch], 0
.text:00012B51                 push    32h ; '2'
.text:00012B53                 call    _ssh2_pkt_init
.text:00012B58                 add     esp, 4
.text:00012B5B                 mov     ecx, [ebp+var_4]
.text:00012B5E                 mov     [ecx+0B8h], eax
.text:00012B64                 mov     edx, [ebp+arg_0]
.text:00012B67                 mov     eax, [edx+224h]
.text:00012B6D                 push    eax             ; Str
.text:00012B6E                 mov     ecx, [ebp+var_4]
.text:00012B71                 mov     edx, [ecx+0B8h]
.text:00012B77                 push    edx             ; int
.text:00012B78                 call    _ssh_pkt_addstring
.text:00012B7D                 add     esp, 8
.text:00012B80                 push    offset $SG93228 ; "ssh-connection"
.text:00012B85                 mov     eax, [ebp+var_4]
.text:00012B88                 mov     ecx, [eax+0B8h]
.text:00012B8E                 push    ecx             ; int
.text:00012B8F                 call    _ssh_pkt_addstring
.text:00012B94                 add     esp, 8
.text:00012B97                 push    offset $SG93229 ; "none"
.text:00012B9C                 mov     edx, [ebp+var_4]
.text:00012B9F                 mov     eax, [edx+0B8h]
.text:00012BA5                 push    eax             ; int
.text:00012BA6                 call    _ssh_pkt_addstring
.text:00012BAB                 add     esp, 8
.text:00012BAE                 mov     ecx, [ebp+var_4]
.text:00012BB1                 mov     edx, [ecx+0B8h]
.text:00012BB7                 push    edx
.text:00012BB8                 mov     eax, [ebp+arg_0]
.text:00012BBB                 push    eax
.text:00012BBC                 call    _ssh2_pkt_send
.text:00012BC1                 add     esp, 8
.text:00012BC4                 mov     ecx, [ebp+var_4]
.text:00012BC7                 mov     dword ptr [ecx+4], 0
.text:00012BCE                 mov     edx, [ebp+var_4]
.text:00012BD1                 mov     dword ptr [edx+0Ch], 0
.text:00012BD8                 mov     eax, [ebp+var_4]
.text:00012BDB                 mov     dword ptr [eax+34h], 0
.text:00012BE2                 mov     ecx, [ebp+var_4]
.text:00012BE5                 mov     dword ptr [ecx+20h], 0
.text:00012BEC                 mov     edx, [ebp+var_4]
.text:00012BEF                 mov     dword ptr [edx+30h], 0
.text:00012BF6                 mov     eax, [ebp+var_4]
.text:00012BF9                 mov     dword ptr [eax+24h], 0
.text:00012C00                 mov     ecx, [ebp+var_4]
.text:00012C03                 cmp     dword ptr [ecx+6Ch], 0
.text:00012C07                 jz      short loc_12C39
.text:00012C09                 mov     edx, [ebp+var_4]
.text:00012C0C                 cmp     dword ptr [edx+78h], 0
.text:00012C10                 jz      short loc_12C20
.text:00012C12                 mov     eax, [ebp+var_4]
.text:00012C15                 mov     ecx, [ebp+var_4]
.text:00012C18                 mov     edx, [ecx+78h]
.text:00012C1B                 mov     [eax+70h], edx
.text:00012C1E                 jmp     short loc_12C39
.text:00012C20 ; ---------------------------------------------------------------------------
.text:00012C20
.text:00012C20 loc_12C20:                              ; CODE XREF: _do_ssh2_authconn+DE8j
.text:00012C20                 mov     eax, [ebp+var_4]
.text:00012C23                 mov     ecx, [eax+6Ch]
.text:00012C26                 add     ecx, 9
.text:00012C29                 mov     edx, [ebp+var_4]
.text:00012C2C                 mov     [edx+70h], ecx
.text:00012C2F                 mov     eax, [ebp+var_4]
.text:00012C32                 mov     dword ptr [eax+7Ch], 0
.text:00012C39
.text:00012C39 loc_12C39:                              ; CODE XREF: _do_ssh2_authconn+DDFj
.text:00012C39                                         ; _do_ssh2_authconn+DF6j ...
.text:00012C39                 mov     ecx, 1
.text:00012C3E                 test    ecx, ecx
.text:00012C40                 jz      loc_158DF
.text:00012C46                 mov     [ebp+var_19E], 0
.text:00012C4D                 mov     [ebp+var_19D], 0
.text:00012C54                 mov     [ebp+var_19D], 1
.text:00012C5B                 mov     [ebp+Buf2], 0
.text:00012C62                 mov     [ebp+var_19E], 1
.text:00012C69                 mov     [ebp+var_60], 0
.text:00012C70                 mov     edx, [ebp+var_4]
.text:00012C73                 cmp     dword ptr [edx+0Ch], 0
.text:00012C77                 jnz     short loc_12C91
.text:00012C79
.text:00012C79 loc_12C79:                              ; CODE XREF: _do_ssh2_authconn+E61j
.text:00012C79                                         ; _do_ssh2_authconn+E67j
.text:00012C79                 mov     eax, [ebp+var_8]
.text:00012C7C                 mov     dword ptr [eax], 230Ch
.text:00012C82                 jmp     loc_1626E
.text:00012C87 ; ---------------------------------------------------------------------------
.text:00012C87
.text:00012C87 loc_12C87:                              ; CODE XREF: _do_ssh2_authconn+B2j
.text:00012C87                 xor     ecx, ecx
.text:00012C89                 jnz     short loc_12C79
.text:00012C8B                 cmp     [ebp+arg_C], 0
.text:00012C8F                 jz      short loc_12C79
.text:00012C91
.text:00012C91 loc_12C91:                              ; CODE XREF: _do_ssh2_authconn+E4Fj
.text:00012C91                 mov     edx, [ebp+arg_0]
.text:00012C94                 add     edx, 14Ch
.text:00012C9A                 push    edx
.text:00012C9B                 call    _bufchain_size
.text:00012CA0                 add     esp, 4
.text:00012CA3                 mov     [ebp+var_68], eax
.text:00012CA6                 cmp     [ebp+var_68], 0
.text:00012CAA                 jz      short loc_12D01
.text:00012CAC                 mov     eax, dword ptr ds:_flags
.text:00012CB1                 and     eax, 5
.text:00012CB4                 jz      short loc_12D01
.text:00012CB6                 push    1
.text:00012CB8                 mov     ecx, [ebp+var_68]
.text:00012CBB                 push    ecx
.text:00012CBC                 call    _safemalloc
.text:00012CC1                 add     esp, 8
.text:00012CC4                 mov     [ebp+var_6C], eax
.text:00012CC7                 mov     edx, [ebp+var_68]
.text:00012CCA                 push    edx
.text:00012CCB                 mov     eax, [ebp+var_6C]
.text:00012CCE                 push    eax
.text:00012CCF                 mov     ecx, [ebp+arg_0]
.text:00012CD2                 add     ecx, 14Ch
.text:00012CD8                 push    ecx
.text:00012CD9                 call    _bufchain_fetch
.text:00012CDE                 add     esp, 0Ch
.text:00012CE1                 mov     edx, [ebp+var_68]
.text:00012CE4                 push    edx
.text:00012CE5                 mov     eax, [ebp+var_6C]
.text:00012CE8                 push    eax
.text:00012CE9                 mov     ecx, [ebp+arg_0]
.text:00012CEC                 push    ecx
.text:00012CED                 call    _c_write_untrusted
.text:00012CF2                 add     esp, 0Ch
.text:00012CF5                 mov     edx, [ebp+var_6C]
.text:00012CF8                 push    edx
.text:00012CF9                 call    _safefree
.text:00012CFE                 add     esp, 4
.text:00012D01
.text:00012D01 loc_12D01:                              ; CODE XREF: _do_ssh2_authconn+E82j
.text:00012D01                                         ; _do_ssh2_authconn+E8Cj
.text:00012D01                 mov     eax, [ebp+arg_0]
.text:00012D04                 add     eax, 14Ch
.text:00012D09                 push    eax
.text:00012D0A                 call    _bufchain_clear
.text:00012D0F                 add     esp, 4
.text:00012D12                 mov     ecx, [ebp+arg_C]
.text:00012D15                 cmp     dword ptr [ecx+8], 34h ; '4'
.text:00012D19                 jnz     short loc_12D4B
.text:00012D1B                 push    offset $SG93253 ; "Access granted"
.text:00012D20                 mov     edx, [ebp+arg_0]
.text:00012D23                 mov     eax, [edx+0E4h]
.text:00012D29                 push    eax
.text:00012D2A                 call    _logevent
.text:00012D2F                 add     esp, 8
.text:00012D32                 mov     ecx, [ebp+var_4]
.text:00012D35                 mov     dword ptr [ecx+38h], 1
.text:00012D3C                 mov     edx, [ebp+var_4]
.text:00012D3F                 mov     dword ptr [edx+34h], 1
.text:00012D46                 jmp     loc_158DF
.text:00012D4B ; ---------------------------------------------------------------------------
.text:00012D4B
.text:00012D4B loc_12D4B:                              ; CODE XREF: _do_ssh2_authconn+EF1j
.text:00012D4B                 mov     eax, [ebp+arg_C]
.text:00012D4E                 cmp     dword ptr [eax+8], 33h ; '3'
.text:00012D52                 jz      short loc_12D90
.text:00012D54                 mov     ecx, [ebp+var_4]
.text:00012D57                 cmp     dword ptr [ecx+4], 5
.text:00012D5B                 jz      short loc_12D90
.text:00012D5D                 mov     edx, [ebp+arg_C]
.text:00012D60                 mov     eax, [edx+8]
.text:00012D63                 push    eax
.text:00012D64                 push    offset $SG93255 ; "Strange packet received during authenti"...
.text:00012D69                 call    _dupprintf
.text:00012D6E                 add     esp, 8
.text:00012D71                 push    eax
.text:00012D72                 mov     ecx, [ebp+arg_0]
.text:00012D75                 push    ecx
.text:00012D76                 call    _bomb_out
.text:00012D7B                 add     esp, 8
.text:00012D7E
.text:00012D7E loc_12D7E:                              ; CODE XREF: _do_ssh2_authconn+F66j
.text:00012D7E                 mov     edx, [ebp+var_8]
.text:00012D81                 mov     dword ptr [edx], 0
.text:00012D87                 jmp     loc_1626E
.text:00012D8C ; ---------------------------------------------------------------------------
.text:00012D8C                 xor     eax, eax
.text:00012D8E                 jnz     short loc_12D7E
.text:00012D90
.text:00012D90 loc_12D90:                              ; CODE XREF: _do_ssh2_authconn+F2Aj
.text:00012D90                                         ; _do_ssh2_authconn+F33j
.text:00012D90                 mov     ecx, [ebp+var_4]
.text:00012D93                 mov     dword ptr [ecx+0Ch], 0
.text:00012D9A                 mov     edx, [ebp+arg_C]
.text:00012D9D                 cmp     dword ptr [edx+8], 33h ; '3'
.text:00012DA1                 jnz     loc_1312A
.text:00012DA7                 mov     [ebp+var_19E], 1
.text:00012DAE                 lea     eax, [ebp+var_60]
.text:00012DB1                 push    eax
.text:00012DB2                 mov     [ebp+var_19D], 1
.text:00012DB9                 lea     ecx, [ebp+Buf2]
.text:00012DBC                 push    ecx
.text:00012DBD                 mov     edx, [ebp+arg_C]
.text:00012DC0                 push    edx
.text:00012DC1                 call    _ssh_pkt_getstring
.text:00012DC6                 add     esp, 0Ch
.text:00012DC9                 mov     eax, [ebp+arg_C]
.text:00012DCC                 push    eax
.text:00012DCD                 call    _ssh2_pkt_getbool
.text:00012DD2                 add     esp, 4
.text:00012DD5                 test    eax, eax
.text:00012DD7                 jnz     loc_12F40
.text:00012DDD                 mov     ecx, [ebp+var_4]
.text:00012DE0                 cmp     dword ptr [ecx+4], 0
.text:00012DE4                 jnz     short loc_12DEB
.text:00012DE6                 jmp     loc_12F3E
.text:00012DEB ; ---------------------------------------------------------------------------
.text:00012DEB
.text:00012DEB loc_12DEB:                              ; CODE XREF: _do_ssh2_authconn+FBCj
.text:00012DEB                 mov     edx, [ebp+var_4]
.text:00012DEE                 cmp     dword ptr [edx+4], 2
.text:00012DF2                 jz      short loc_12DFD
.text:00012DF4                 mov     eax, [ebp+var_4]
.text:00012DF7                 cmp     dword ptr [eax+4], 3
.text:00012DFB                 jnz     short loc_12E33
.text:00012DFD
.text:00012DFD loc_12DFD:                              ; CODE XREF: _do_ssh2_authconn+FCAj
.text:00012DFD                 mov     ecx, [ebp+var_4]
.text:00012E00                 cmp     dword ptr [ecx+4], 2
.text:00012E04                 jnz     short loc_12E17
.text:00012E06                 push    offset $SG93266 ; "Server refused our key\r\n"
.text:00012E0B                 mov     edx, [ebp+arg_0]
.text:00012E0E                 push    edx             ; int
.text:00012E0F                 call    _c_write_str
.text:00012E14                 add     esp, 8
.text:00012E17
.text:00012E17 loc_12E17:                              ; CODE XREF: _do_ssh2_authconn+FDCj
.text:00012E17                 push    offset $SG93267 ; "Server refused our key"
.text:00012E1C                 mov     eax, [ebp+arg_0]
.text:00012E1F                 mov     ecx, [eax+0E4h]
.text:00012E25                 push    ecx
.text:00012E26                 call    _logevent
.text:00012E2B                 add     esp, 8
.text:00012E2E                 jmp     loc_12F3E
.text:00012E33 ; ---------------------------------------------------------------------------
.text:00012E33
.text:00012E33 loc_12E33:                              ; CODE XREF: _do_ssh2_authconn+FD3j
.text:00012E33                 mov     edx, [ebp+var_4]
.text:00012E36                 cmp     dword ptr [edx+4], 1
.text:00012E3A                 jnz     short loc_12E69
.text:00012E3C                 push    offset $SG93270 ; "Server refused public-key signature des"...
.text:00012E41                 mov     eax, [ebp+arg_0]
.text:00012E44                 push    eax             ; int
.text:00012E45                 call    _c_write_str
.text:00012E4A                 add     esp, 8
.text:00012E4D                 push    offset $SG93271 ; "Server refused public-key signature des"...
.text:00012E52                 mov     ecx, [ebp+arg_0]
.text:00012E55                 mov     edx, [ecx+0E4h]
.text:00012E5B                 push    edx
.text:00012E5C                 call    _logevent
.text:00012E61                 add     esp, 8
.text:00012E64                 jmp     loc_12F3E
.text:00012E69 ; ---------------------------------------------------------------------------
.text:00012E69
.text:00012E69 loc_12E69:                              ; CODE XREF: _do_ssh2_authconn+1012j
.text:00012E69                 mov     eax, [ebp+var_4]
.text:00012E6C                 cmp     dword ptr [eax+4], 7
.text:00012E70                 jnz     short loc_12E8E
.text:00012E72                 push    offset $SG93274 ; "Server refused keyboard-interactive aut"...
.text:00012E77                 mov     ecx, [ebp+arg_0]
.text:00012E7A                 mov     edx, [ecx+0E4h]
.text:00012E80                 push    edx
.text:00012E81                 call    _logevent
.text:00012E86                 add     esp, 8
.text:00012E89                 jmp     loc_12F3E
.text:00012E8E ; ---------------------------------------------------------------------------
.text:00012E8E
.text:00012E8E loc_12E8E:                              ; CODE XREF: _do_ssh2_authconn+1048j
.text:00012E8E                 mov     eax, [ebp+var_4]
.text:00012E91                 cmp     dword ptr [eax+4], 5
.text:00012E95                 jnz     short loc_12E9C
.text:00012E97                 jmp     loc_12F3E
.text:00012E9C ; ---------------------------------------------------------------------------
.text:00012E9C
.text:00012E9C loc_12E9C:                              ; CODE XREF: _do_ssh2_authconn+106Dj
.text:00012E9C                 mov     ecx, [ebp+var_4]
.text:00012E9F                 cmp     dword ptr [ecx+4], 6
.text:00012EA3                 jnz     short loc_12ECF
.text:00012EA5                 push    offset $SG93279 ; "Keyboard-interactive authentication fai"...
.text:00012EAA                 mov     edx, [ebp+arg_0]
.text:00012EAD                 mov     eax, [edx+0E4h]
.text:00012EB3                 push    eax
.text:00012EB4                 call    _logevent
.text:00012EB9                 add     esp, 8
.text:00012EBC                 push    offset $SG93280 ; "Access denied\r\n"
.text:00012EC1                 mov     ecx, [ebp+arg_0]
.text:00012EC4                 push    ecx             ; int
.text:00012EC5                 call    _c_write_str
.text:00012ECA                 add     esp, 8
.text:00012ECD                 jmp     short loc_12F3E
.text:00012ECF ; ---------------------------------------------------------------------------
.text:00012ECF
.text:00012ECF loc_12ECF:                              ; CODE XREF: _do_ssh2_authconn+107Bj
.text:00012ECF                 mov     edx, [ebp+var_4]
.text:00012ED2                 cmp     dword ptr [edx+4], 4
.text:00012ED6                 jz      short loc_12EEF
.text:00012ED8                 push    236Ch           ; Line
.text:00012EDD                 push    offset $SG93283 ; "..\\..\\..\\ssh.c"
.text:00012EE2                 push    offset $SG93284 ; "s->type == AUTH_TYPE_PASSWORD"
.text:00012EE7                 call    __wassert
.text:00012EEC ; ---------------------------------------------------------------------------
.text:00012EEC                 add     esp, 0Ch
.text:00012EEF
.text:00012EEF loc_12EEF:                              ; CODE XREF: _do_ssh2_authconn+10AEj
.text:00012EEF                 push    offset $SG93285 ; "Password authentication failed"
.text:00012EF4                 mov     ecx, [ebp+arg_0]
.text:00012EF7                 mov     edx, [ecx+0E4h]
.text:00012EFD                 push    edx
.text:00012EFE                 call    _logevent
.text:00012F03                 add     esp, 8
.text:00012F06                 push    offset $SG93286 ; "Access denied\r\n"
.text:00012F0B                 mov     eax, [ebp+arg_0]
.text:00012F0E                 push    eax             ; int
.text:00012F0F                 call    _c_write_str
.text:00012F14                 add     esp, 8
.text:00012F17                 push    1Ch
.text:00012F19                 mov     ecx, [ebp+arg_0]
.text:00012F1C                 mov     edx, [ecx+21Ch]
.text:00012F22                 push    edx
.text:00012F23                 call    _conf_get_int
.text:00012F28                 add     esp, 8
.text:00012F2B                 test    eax, eax
.text:00012F2D                 jz      short loc_12F3E
.text:00012F2F                 mov     eax, [ebp+var_4]
.text:00012F32                 mov     dword ptr [eax+34h], 0
.text:00012F39                 jmp     loc_158DF
.text:00012F3E ; ---------------------------------------------------------------------------
.text:00012F3E
.text:00012F3E loc_12F3E:                              ; CODE XREF: _do_ssh2_authconn+FBEj
.text:00012F3E                                         ; _do_ssh2_authconn+1006j ...
.text:00012F3E                 jmp     short loc_12F68
.text:00012F40 ; ---------------------------------------------------------------------------
.text:00012F40
.text:00012F40 loc_12F40:                              ; CODE XREF: _do_ssh2_authconn+FAFj
.text:00012F40                 push    offset $SG93289 ; "Further authentication required\r\n"
.text:00012F45                 mov     ecx, [ebp+arg_0]
.text:00012F48                 push    ecx             ; int
.text:00012F49                 call    _c_write_str
.text:00012F4E                 add     esp, 8
.text:00012F51                 push    offset $SG93290 ; "Further authentication required"
.text:00012F56                 mov     edx, [ebp+arg_0]
.text:00012F59                 mov     eax, [edx+0E4h]
.text:00012F5F                 push    eax
.text:00012F60                 call    _logevent
.text:00012F65                 add     esp, 8
.text:00012F68
.text:00012F68 loc_12F68:                              ; CODE XREF: _do_ssh2_authconn:loc_12F3Ej
.text:00012F68                 cmp     [ebp+var_19E], 0
.text:00012F6F                 jnz     short loc_12F7E
.text:00012F71                 push    offset $LN433_0 ; "methlen"
.text:00012F76                 call    __RTC_UninitUse
.text:00012F7B                 add     esp, 4
.text:00012F7E
.text:00012F7E loc_12F7E:                              ; CODE XREF: _do_ssh2_authconn+1147j
.text:00012F7E                 cmp     [ebp+var_19D], 0
.text:00012F85                 jnz     short loc_12F94
.text:00012F87                 push    offset $LN435_0 ; "methods"
.text:00012F8C                 call    __RTC_UninitUse
.text:00012F91                 add     esp, 4
.text:00012F94
.text:00012F94 loc_12F94:                              ; CODE XREF: _do_ssh2_authconn+115Dj
.text:00012F94                 mov     ecx, [ebp+var_60]
.text:00012F97                 push    ecx             ; int
.text:00012F98                 mov     edx, [ebp+Buf2]
.text:00012F9B                 push    edx             ; Buf2
.text:00012F9C                 push    offset $SG93291 ; "publickey"
.text:00012FA1                 call    _in_commasep_string
.text:00012FA6                 add     esp, 0Ch
.text:00012FA9                 mov     ecx, [ebp+var_4]
.text:00012FAC                 mov     [ecx+14h], eax
.text:00012FAF                 cmp     [ebp+var_19E], 0
.text:00012FB6                 jnz     short loc_12FC5
.text:00012FB8                 push    offset $LN433_0 ; "methlen"
.text:00012FBD                 call    __RTC_UninitUse
.text:00012FC2                 add     esp, 4
.text:00012FC5
.text:00012FC5 loc_12FC5:                              ; CODE XREF: _do_ssh2_authconn+118Ej
.text:00012FC5                 cmp     [ebp+var_19D], 0
.text:00012FCC                 jnz     short loc_12FDB
.text:00012FCE                 push    offset $LN435_0 ; "methods"
.text:00012FD3                 call    __RTC_UninitUse
.text:00012FD8                 add     esp, 4
.text:00012FDB
.text:00012FDB loc_12FDB:                              ; CODE XREF: _do_ssh2_authconn+11A4j
.text:00012FDB                 mov     edx, [ebp+var_60]
.text:00012FDE                 push    edx             ; int
.text:00012FDF                 mov     eax, [ebp+Buf2]
.text:00012FE2                 push    eax             ; Buf2
.text:00012FE3                 push    offset $SG93292 ; "password"
.text:00012FE8                 call    _in_commasep_string
.text:00012FED                 add     esp, 0Ch
.text:00012FF0                 mov     ecx, [ebp+var_4]
.text:00012FF3                 mov     [ecx+18h], eax
.text:00012FF6                 push    24h ; '$'
.text:00012FF8                 mov     edx, [ebp+arg_0]
.text:00012FFB                 mov     eax, [edx+21Ch]
.text:00013001                 push    eax
.text:00013002                 call    _conf_get_int
.text:00013007                 add     esp, 8
.text:0001300A                 test    eax, eax
.text:0001300C                 jz      short loc_1305F
.text:0001300E                 cmp     [ebp+var_19E], 0
.text:00013015                 jnz     short loc_13024
.text:00013017                 push    offset $LN433_0 ; "methlen"
.text:0001301C                 call    __RTC_UninitUse
.text:00013021                 add     esp, 4
.text:00013024
.text:00013024 loc_13024:                              ; CODE XREF: _do_ssh2_authconn+11EDj
.text:00013024                 cmp     [ebp+var_19D], 0
.text:0001302B                 jnz     short loc_1303A
.text:0001302D                 push    offset $LN435_0 ; "methods"
.text:00013032                 call    __RTC_UninitUse
.text:00013037                 add     esp, 4
.text:0001303A
.text:0001303A loc_1303A:                              ; CODE XREF: _do_ssh2_authconn+1203j
.text:0001303A                 mov     ecx, [ebp+var_60]
.text:0001303D                 push    ecx             ; int
.text:0001303E                 mov     edx, [ebp+Buf2]
.text:00013041                 push    edx             ; Buf2
.text:00013042                 push    offset $SG93293 ; "keyboard-interactive"
.text:00013047                 call    _in_commasep_string
.text:0001304C                 add     esp, 0Ch
.text:0001304F                 test    eax, eax
.text:00013051                 jz      short loc_1305F
.text:00013053                 mov     [ebp+var_1B0], 1
.text:0001305D                 jmp     short loc_13069
.text:0001305F ; ---------------------------------------------------------------------------
.text:0001305F
.text:0001305F loc_1305F:                              ; CODE XREF: _do_ssh2_authconn+11E4j
.text:0001305F                                         ; _do_ssh2_authconn+1229j
.text:0001305F                 mov     [ebp+var_1B0], 0
.text:00013069
.text:00013069 loc_13069:                              ; CODE XREF: _do_ssh2_authconn+1235j
.text:00013069                 mov     eax, [ebp+var_4]
.text:0001306C                 mov     ecx, [ebp+var_1B0]
.text:00013072                 mov     [eax+1Ch], ecx
.text:00013075                 mov     edx, [ebp+arg_0]
.text:00013078                 cmp     dword ptr [edx+67Ch], 0
.text:0001307F                 jnz     short loc_1309C
.text:00013081                 mov     eax, [ebp+arg_0]
.text:00013084                 mov     ecx, [eax+21Ch]
.text:0001308A                 push    ecx
.text:0001308B                 call    _ssh_gss_setup
.text:00013090                 add     esp, 4
.text:00013093                 mov     edx, [ebp+arg_0]
.text:00013096                 mov     [edx+67Ch], eax
.text:0001309C
.text:0001309C loc_1309C:                              ; CODE XREF: _do_ssh2_authconn+1257j
.text:0001309C                 push    25h ; '%'
.text:0001309E                 mov     eax, [ebp+arg_0]
.text:000130A1                 mov     ecx, [eax+21Ch]
.text:000130A7                 push    ecx
.text:000130A8                 call    _conf_get_int
.text:000130AD                 add     esp, 8
.text:000130B0                 test    eax, eax
.text:000130B2                 jz      short loc_13114
.text:000130B4                 cmp     [ebp+var_19E], 0
.text:000130BB                 jnz     short loc_130CA
.text:000130BD                 push    offset $LN433_0 ; "methlen"
.text:000130C2                 call    __RTC_UninitUse
.text:000130C7                 add     esp, 4
.text:000130CA
.text:000130CA loc_130CA:                              ; CODE XREF: _do_ssh2_authconn+1293j
.text:000130CA                 cmp     [ebp+var_19D], 0
.text:000130D1                 jnz     short loc_130E0
.text:000130D3                 push    offset $LN435_0 ; "methods"
.text:000130D8                 call    __RTC_UninitUse
.text:000130DD                 add     esp, 4
.text:000130E0
.text:000130E0 loc_130E0:                              ; CODE XREF: _do_ssh2_authconn+12A9j
.text:000130E0                 mov     edx, [ebp+var_60]
.text:000130E3                 push    edx             ; int
.text:000130E4                 mov     eax, [ebp+Buf2]
.text:000130E7                 push    eax             ; Buf2
.text:000130E8                 push    offset $SG93295 ; "gssapi-with-mic"
.text:000130ED                 call    _in_commasep_string
.text:000130F2                 add     esp, 0Ch
.text:000130F5                 test    eax, eax
.text:000130F7                 jz      short loc_13114
.text:000130F9                 mov     ecx, [ebp+arg_0]
.text:000130FC                 mov     edx, [ecx+67Ch]
.text:00013102                 cmp     dword ptr [edx+4], 0
.text:00013106                 jle     short loc_13114
.text:00013108                 mov     [ebp+var_1B4], 1
.text:00013112                 jmp     short loc_1311E
.text:00013114 ; ---------------------------------------------------------------------------
.text:00013114
.text:00013114 loc_13114:                              ; CODE XREF: _do_ssh2_authconn+128Aj
.text:00013114                                         ; _do_ssh2_authconn+12CFj ...
.text:00013114                 mov     [ebp+var_1B4], 0
.text:0001311E
.text:0001311E loc_1311E:                              ; CODE XREF: _do_ssh2_authconn+12EAj
.text:0001311E                 mov     eax, [ebp+var_4]
.text:00013121                 mov     ecx, [ebp+var_1B4]
.text:00013127                 mov     [eax+28h], ecx
.text:0001312A
.text:0001312A loc_1312A:                              ; CODE XREF: _do_ssh2_authconn+F79j
.text:0001312A                 mov     edx, [ebp+arg_0]
.text:0001312D                 mov     dword ptr [edx+15Ch], 0
.text:00013137                 mov     eax, [ebp+var_4]
.text:0001313A                 cmp     dword ptr [eax+14h], 0
.text:0001313E                 jz      loc_13B81
.text:00013144                 mov     ecx, [ebp+var_4]
.text:00013147                 cmp     dword ptr [ecx+24h], 0
.text:0001314B                 jnz     loc_13B81
.text:00013151                 mov     edx, [ebp+var_4]
.text:00013154                 cmp     dword ptr [edx+80h], 0
.text:0001315B                 jz      loc_13B81
.text:00013161                 mov     eax, [ebp+arg_0]
.text:00013164                 mov     dword ptr [eax+15Ch], 1
.text:0001316E                 mov     ecx, [ebp+var_4]
.text:00013171                 mov     edx, [ecx+7Ch]
.text:00013174                 push    edx
.text:00013175                 push    offset $SG93297 ; "Trying Pageant key #%d"
.text:0001317A                 mov     eax, [ebp+arg_0]
.text:0001317D                 push    eax
.text:0001317E                 call    _logeventf
.text:00013183                 add     esp, 0Ch
.text:00013186                 mov     ecx, [ebp+var_4]
.text:00013189                 mov     edx, [ecx+70h]
.text:0001318C                 movzx   eax, byte ptr [edx]
.text:0001318F                 shl     eax, 18h
.text:00013192                 mov     ecx, [ebp+var_4]
.text:00013195                 mov     edx, [ecx+70h]
.text:00013198                 movzx   ecx, byte ptr [edx+1]
.text:0001319C                 shl     ecx, 10h
.text:0001319F                 or      eax, ecx
.text:000131A1                 mov     edx, [ebp+var_4]
.text:000131A4                 mov     ecx, [edx+70h]
.text:000131A7                 movzx   edx, byte ptr [ecx+2]
.text:000131AB                 shl     edx, 8
.text:000131AE                 or      eax, edx
.text:000131B0                 mov     ecx, [ebp+var_4]
.text:000131B3                 mov     edx, [ecx+70h]
.text:000131B6                 movzx   ecx, byte ptr [edx+3]
.text:000131BA                 or      eax, ecx
.text:000131BC                 push    eax
.text:000131BD                 call    _toint
.text:000131C2                 add     esp, 4
.text:000131C5                 mov     edx, [ebp+var_4]
.text:000131C8                 mov     [edx+90h], eax
.text:000131CE                 mov     eax, [ebp+var_4]
.text:000131D1                 mov     ecx, [eax+70h]
.text:000131D4                 add     ecx, 4
.text:000131D7                 mov     edx, [ebp+var_4]
.text:000131DA                 mov     [edx+70h], ecx
.text:000131DD                 mov     eax, [ebp+var_4]
.text:000131E0                 mov     ecx, [ebp+var_4]
.text:000131E3                 mov     edx, [ecx+70h]
.text:000131E6                 mov     [eax+84h], edx
.text:000131EC                 mov     eax, [ebp+var_4]
.text:000131EF                 mov     ecx, [eax+70h]
.text:000131F2                 mov     edx, [ebp+var_4]
.text:000131F5                 add     ecx, [edx+90h]
.text:000131FB                 mov     eax, [ebp+var_4]
.text:000131FE                 mov     [eax+70h], ecx
.text:00013201                 mov     ecx, [ebp+var_4]
.text:00013204                 mov     edx, [ecx+84h]
.text:0001320A                 movzx   eax, byte ptr [edx]
.text:0001320D                 shl     eax, 18h
.text:00013210                 mov     ecx, [ebp+var_4]
.text:00013213                 mov     edx, [ecx+84h]
.text:00013219                 movzx   ecx, byte ptr [edx+1]
.text:0001321D                 shl     ecx, 10h
.text:00013220                 or      eax, ecx
.text:00013222                 mov     edx, [ebp+var_4]
.text:00013225                 mov     ecx, [edx+84h]
.text:0001322B                 movzx   edx, byte ptr [ecx+2]
.text:0001322F                 shl     edx, 8
.text:00013232                 or      eax, edx
.text:00013234                 mov     ecx, [ebp+var_4]
.text:00013237                 mov     edx, [ecx+84h]
.text:0001323D                 movzx   ecx, byte ptr [edx+3]
.text:00013241                 or      eax, ecx
.text:00013243                 push    eax
.text:00013244                 call    _toint
.text:00013249                 add     esp, 4
.text:0001324C                 mov     edx, [ebp+var_4]
.text:0001324F                 mov     [edx+94h], eax
.text:00013255                 mov     eax, [ebp+var_4]
.text:00013258                 mov     ecx, [eax+84h]
.text:0001325E                 add     ecx, 4
.text:00013261                 mov     edx, [ebp+var_4]
.text:00013264                 mov     [edx+88h], ecx
.text:0001326A                 mov     eax, [ebp+var_4]
.text:0001326D                 mov     ecx, [eax+70h]
.text:00013270                 movzx   edx, byte ptr [ecx]
.text:00013273                 shl     edx, 18h
.text:00013276                 mov     eax, [ebp+var_4]
.text:00013279                 mov     ecx, [eax+70h]
.text:0001327C                 movzx   eax, byte ptr [ecx+1]
.text:00013280                 shl     eax, 10h
.text:00013283                 or      edx, eax
.text:00013285                 mov     ecx, [ebp+var_4]
.text:00013288                 mov     eax, [ecx+70h]
.text:0001328B                 movzx   ecx, byte ptr [eax+2]
.text:0001328F                 shl     ecx, 8
.text:00013292                 or      edx, ecx
.text:00013294                 mov     eax, [ebp+var_4]
.text:00013297                 mov     ecx, [eax+70h]
.text:0001329A                 movzx   eax, byte ptr [ecx+3]
.text:0001329E                 or      edx, eax
.text:000132A0                 push    edx
.text:000132A1                 call    _toint
.text:000132A6                 add     esp, 4
.text:000132A9                 mov     ecx, [ebp+var_4]
.text:000132AC                 mov     [ecx+98h], eax
.text:000132B2                 mov     edx, [ebp+var_4]
.text:000132B5                 mov     eax, [edx+70h]
.text:000132B8                 add     eax, 4
.text:000132BB                 mov     ecx, [ebp+var_4]
.text:000132BE                 mov     [ecx+70h], eax
.text:000132C1                 mov     edx, [ebp+var_4]
.text:000132C4                 mov     eax, [ebp+var_4]
.text:000132C7                 mov     ecx, [eax+70h]
.text:000132CA                 mov     [edx+8Ch], ecx
.text:000132D0                 mov     edx, [ebp+var_4]
.text:000132D3                 mov     eax, [edx+70h]
.text:000132D6                 mov     ecx, [ebp+var_4]
.text:000132D9                 add     eax, [ecx+98h]
.text:000132DF                 mov     edx, [ebp+var_4]
.text:000132E2                 mov     [edx+70h], eax
.text:000132E5                 push    32h ; '2'
.text:000132E7                 call    _ssh2_pkt_init
.text:000132EC                 add     esp, 4
.text:000132EF                 mov     ecx, [ebp+var_4]
.text:000132F2                 mov     [ecx+0B8h], eax
.text:000132F8                 mov     edx, [ebp+arg_0]
.text:000132FB                 mov     eax, [edx+224h]
.text:00013301                 push    eax             ; Str
.text:00013302                 mov     ecx, [ebp+var_4]
.text:00013305                 mov     edx, [ecx+0B8h]
.text:0001330B                 push    edx             ; int
.text:0001330C                 call    _ssh_pkt_addstring
.text:00013311                 add     esp, 8
.text:00013314                 push    offset $SG93324 ; "ssh-connection"
.text:00013319                 mov     eax, [ebp+var_4]
.text:0001331C                 mov     ecx, [eax+0B8h]
.text:00013322                 push    ecx             ; int
.text:00013323                 call    _ssh_pkt_addstring
.text:00013328                 add     esp, 8
.text:0001332B                 push    offset $SG93325 ; "publickey"
.text:00013330                 mov     edx, [ebp+var_4]
.text:00013333                 mov     eax, [edx+0B8h]
.text:00013339                 push    eax             ; int
.text:0001333A                 call    _ssh_pkt_addstring
.text:0001333F                 add     esp, 8
.text:00013342                 push    0               ; Src
.text:00013344                 mov     ecx, [ebp+var_4]
.text:00013347                 mov     edx, [ecx+0B8h]
.text:0001334D                 push    edx             ; int
.text:0001334E                 call    _ssh2_pkt_addbool
.text:00013353                 add     esp, 8
.text:00013356                 mov     eax, [ebp+var_4]
.text:00013359                 mov     ecx, [eax+0B8h]
.text:0001335F                 push    ecx
.text:00013360                 call    _ssh_pkt_addstring_start
.text:00013365                 add     esp, 4
.text:00013368                 mov     edx, [ebp+var_4]
.text:0001336B                 mov     eax, [edx+94h]
.text:00013371                 push    eax             ; Size
.text:00013372                 mov     ecx, [ebp+var_4]
.text:00013375                 mov     edx, [ecx+88h]
.text:0001337B                 push    edx             ; Src
.text:0001337C                 mov     eax, [ebp+var_4]
.text:0001337F                 mov     ecx, [eax+0B8h]
.text:00013385                 push    ecx             ; int
.text:00013386                 call    _ssh_pkt_addstring_data
.text:0001338B                 add     esp, 0Ch
.text:0001338E                 mov     edx, [ebp+var_4]
.text:00013391                 mov     eax, [edx+0B8h]
.text:00013397                 push    eax
.text:00013398                 call    _ssh_pkt_addstring_start
.text:0001339D                 add     esp, 4
.text:000133A0                 mov     ecx, [ebp+var_4]
.text:000133A3                 mov     edx, [ecx+90h]
.text:000133A9                 push    edx             ; Size
.text:000133AA                 mov     eax, [ebp+var_4]
.text:000133AD                 mov     ecx, [eax+84h]
.text:000133B3                 push    ecx             ; Src
.text:000133B4                 mov     edx, [ebp+var_4]
.text:000133B7                 mov     eax, [edx+0B8h]
.text:000133BD                 push    eax             ; int
.text:000133BE                 call    _ssh_pkt_addstring_data
.text:000133C3                 add     esp, 0Ch
.text:000133C6                 mov     ecx, [ebp+var_4]
.text:000133C9                 mov     edx, [ecx+0B8h]
.text:000133CF                 push    edx
.text:000133D0                 mov     eax, [ebp+arg_0]
.text:000133D3                 push    eax
.text:000133D4                 call    _ssh2_pkt_send
.text:000133D9                 add     esp, 8
.text:000133DC                 mov     ecx, [ebp+var_4]
.text:000133DF                 mov     dword ptr [ecx+4], 3
.text:000133E6
.text:000133E6 loc_133E6:                              ; CODE XREF: _do_ssh2_authconn+15CEj
.text:000133E6                                         ; _do_ssh2_authconn+15D4j
.text:000133E6                 mov     edx, [ebp+var_8]
.text:000133E9                 mov     dword ptr [edx], 23B3h
.text:000133EF                 jmp     loc_1626E
.text:000133F4 ; ---------------------------------------------------------------------------
.text:000133F4
.text:000133F4 loc_133F4:                              ; CODE XREF: _do_ssh2_authconn+141j
.text:000133F4                 xor     eax, eax
.text:000133F6                 jnz     short loc_133E6
.text:000133F8                 cmp     [ebp+arg_C], 0
.text:000133FC                 jz      short loc_133E6
.text:000133FE                 mov     ecx, [ebp+arg_C]
.text:00013401                 cmp     dword ptr [ecx+8], 3Ch ; '<'
.text:00013405                 jz      short loc_13416
.text:00013407                 mov     edx, [ebp+var_4]
.text:0001340A                 mov     dword ptr [edx+0Ch], 1
.text:00013411                 jmp     loc_13B33
.text:00013416 ; ---------------------------------------------------------------------------
.text:00013416
.text:00013416 loc_13416:                              ; CODE XREF: _do_ssh2_authconn+15DDj
.text:00013416                 mov     eax, dword ptr ds:_flags
.text:0001341B                 and     eax, 1
.text:0001341E                 jz      short loc_13462
.text:00013420                 push    offset $SG93337 ; "Authenticating with public key \""
.text:00013425                 mov     ecx, [ebp+arg_0]
.text:00013428                 push    ecx             ; int
.text:00013429                 call    _c_write_str
.text:0001342E                 add     esp, 8
.text:00013431                 mov     edx, [ebp+var_4]
.text:00013434                 mov     eax, [edx+98h]
.text:0001343A                 push    eax
.text:0001343B                 mov     ecx, [ebp+var_4]
.text:0001343E                 mov     edx, [ecx+8Ch]
.text:00013444                 push    edx
.text:00013445                 mov     eax, [ebp+arg_0]
.text:00013448                 push    eax
.text:00013449                 call    _c_write
.text:0001344E                 add     esp, 0Ch
.text:00013451                 push    offset $SG93338 ; "\" from agent\r\n"
.text:00013456                 mov     ecx, [ebp+arg_0]
.text:00013459                 push    ecx             ; int
.text:0001345A                 call    _c_write_str
.text:0001345F                 add     esp, 8
.text:00013462
.text:00013462 loc_13462:                              ; CODE XREF: _do_ssh2_authconn+15F6j
.text:00013462                 push    32h ; '2'
.text:00013464                 call    _ssh2_pkt_init
.text:00013469                 add     esp, 4
.text:0001346C                 mov     edx, [ebp+var_4]
.text:0001346F                 mov     [edx+0B8h], eax
.text:00013475                 mov     eax, [ebp+arg_0]
.text:00013478                 mov     ecx, [eax+224h]
.text:0001347E                 push    ecx             ; Str
.text:0001347F                 mov     edx, [ebp+var_4]
.text:00013482                 mov     eax, [edx+0B8h]
.text:00013488                 push    eax             ; int
.text:00013489                 call    _ssh_pkt_addstring
.text:0001348E                 add     esp, 8
.text:00013491                 push    offset $SG93339 ; "ssh-connection"
.text:00013496                 mov     ecx, [ebp+var_4]
.text:00013499                 mov     edx, [ecx+0B8h]
.text:0001349F                 push    edx             ; int
.text:000134A0                 call    _ssh_pkt_addstring
.text:000134A5                 add     esp, 8
.text:000134A8                 push    offset $SG93340 ; "publickey"
.text:000134AD                 mov     eax, [ebp+var_4]
.text:000134B0                 mov     ecx, [eax+0B8h]
.text:000134B6                 push    ecx             ; int
.text:000134B7                 call    _ssh_pkt_addstring
.text:000134BC                 add     esp, 8
.text:000134BF                 push    1               ; Src
.text:000134C1                 mov     edx, [ebp+var_4]
.text:000134C4                 mov     eax, [edx+0B8h]
.text:000134CA                 push    eax             ; int
.text:000134CB                 call    _ssh2_pkt_addbool
.text:000134D0                 add     esp, 8
.text:000134D3                 mov     ecx, [ebp+var_4]
.text:000134D6                 mov     edx, [ecx+0B8h]
.text:000134DC                 push    edx
.text:000134DD                 call    _ssh_pkt_addstring_start
.text:000134E2                 add     esp, 4
.text:000134E5                 mov     eax, [ebp+var_4]
.text:000134E8                 mov     ecx, [eax+94h]
.text:000134EE                 push    ecx             ; Size
.text:000134EF                 mov     edx, [ebp+var_4]
.text:000134F2                 mov     eax, [edx+88h]
.text:000134F8                 push    eax             ; Src
.text:000134F9                 mov     ecx, [ebp+var_4]
.text:000134FC                 mov     edx, [ecx+0B8h]
.text:00013502                 push    edx             ; int
.text:00013503                 call    _ssh_pkt_addstring_data
.text:00013508                 add     esp, 0Ch
.text:0001350B                 mov     eax, [ebp+var_4]
.text:0001350E                 mov     ecx, [eax+0B8h]
.text:00013514                 push    ecx
.text:00013515                 call    _ssh_pkt_addstring_start
.text:0001351A                 add     esp, 4
.text:0001351D                 mov     edx, [ebp+var_4]
.text:00013520                 mov     eax, [edx+90h]
.text:00013526                 push    eax             ; Size
.text:00013527                 mov     ecx, [ebp+var_4]
.text:0001352A                 mov     edx, [ecx+84h]
.text:00013530                 push    edx             ; Src
.text:00013531                 mov     eax, [ebp+var_4]
.text:00013534                 mov     ecx, [eax+0B8h]
.text:0001353A                 push    ecx             ; int
.text:0001353B                 call    _ssh_pkt_addstring_data
.text:00013540                 add     esp, 0Ch
.text:00013543                 mov     edx, [ebp+var_4]
.text:00013546                 mov     eax, [edx+0B8h]
.text:0001354C                 mov     ecx, [eax]
.text:0001354E                 mov     edx, [ebp+arg_0]
.text:00013551                 mov     eax, [edx+0BCh]
.text:00013557                 lea     ecx, [ecx+eax-1]
.text:0001355B                 mov     edx, [ebp+var_4]
.text:0001355E                 mov     [edx+9Ch], ecx
.text:00013564                 mov     eax, [ebp+arg_0]
.text:00013567                 mov     ecx, [eax+50h]
.text:0001356A                 and     ecx, 80h
.text:00013570                 jz      short loc_13587
.text:00013572                 mov     edx, [ebp+var_4]
.text:00013575                 mov     eax, [edx+9Ch]
.text:0001357B                 sub     eax, 4
.text:0001357E                 mov     ecx, [ebp+var_4]
.text:00013581                 mov     [ecx+9Ch], eax
.text:00013587
.text:00013587 loc_13587:                              ; CODE XREF: _do_ssh2_authconn+1748j
.text:00013587                 mov     edx, [ebp+var_4]
.text:0001358A                 mov     dword ptr [edx+0A4h], 1
.text:00013594                 mov     eax, [ebp+var_4]
.text:00013597                 mov     ecx, [eax+90h]
.text:0001359D                 mov     edx, [ebp+var_4]
.text:000135A0                 mov     eax, [edx+0A4h]
.text:000135A6                 lea     ecx, [ecx+eax+4]
.text:000135AA                 mov     edx, [ebp+var_4]
.text:000135AD                 mov     [edx+0A4h], ecx
.text:000135B3                 mov     eax, [ebp+var_4]
.text:000135B6                 mov     ecx, [eax+9Ch]
.text:000135BC                 mov     edx, [ebp+var_4]
.text:000135BF                 mov     eax, [edx+0A4h]
.text:000135C5                 lea     ecx, [ecx+eax+4]
.text:000135C9                 mov     edx, [ebp+var_4]
.text:000135CC                 mov     [edx+0A4h], ecx
.text:000135D2                 mov     eax, [ebp+var_4]
.text:000135D5                 mov     ecx, [eax+0A4h]
.text:000135DB                 add     ecx, 4
.text:000135DE                 mov     edx, [ebp+var_4]
.text:000135E1                 mov     [edx+0A4h], ecx
.text:000135E7                 push    1
.text:000135E9                 mov     eax, [ebp+var_4]
.text:000135EC                 mov     ecx, [eax+0A4h]
.text:000135F2                 add     ecx, 4
.text:000135F5                 push    ecx
.text:000135F6                 call    _safemalloc
.text:000135FB                 add     esp, 8
.text:000135FE                 mov     edx, [ebp+var_4]
.text:00013601                 mov     [edx+0ACh], eax
.text:00013607                 mov     eax, [ebp+var_4]
.text:0001360A                 mov     ecx, [eax+0A4h]
.text:00013610                 sar     ecx, 18h
.text:00013613                 mov     edx, [ebp+var_4]
.text:00013616                 mov     eax, [edx+0ACh]
.text:0001361C                 mov     [eax], cl
.text:0001361E                 mov     ecx, [ebp+var_4]
.text:00013621                 mov     edx, [ecx+0A4h]
.text:00013627                 sar     edx, 10h
.text:0001362A                 mov     eax, [ebp+var_4]
.text:0001362D                 mov     ecx, [eax+0ACh]
.text:00013633                 mov     [ecx+1], dl
.text:00013636                 mov     edx, [ebp+var_4]
.text:00013639                 mov     eax, [edx+0A4h]
.text:0001363F                 sar     eax, 8
.text:00013642                 mov     ecx, [ebp+var_4]
.text:00013645                 mov     edx, [ecx+0ACh]
.text:0001364B                 mov     [edx+2], al
.text:0001364E                 mov     eax, [ebp+var_4]
.text:00013651                 mov     ecx, [eax+0ACh]
.text:00013657                 mov     edx, [ebp+var_4]
.text:0001365A                 mov     al, [edx+0A4h]
.text:00013660                 mov     [ecx+3], al
.text:00013663                 mov     ecx, [ebp+var_4]
.text:00013666                 mov     edx, [ecx+0ACh]
.text:0001366C                 add     edx, 4
.text:0001366F                 mov     eax, [ebp+var_4]
.text:00013672                 mov     [eax+0A8h], edx
.text:00013678                 mov     ecx, [ebp+var_4]
.text:0001367B                 mov     edx, [ecx+0A8h]
.text:00013681                 mov     byte ptr [edx], 0Dh
.text:00013684                 mov     eax, [ebp+var_4]
.text:00013687                 mov     ecx, [eax+0A8h]
.text:0001368D                 add     ecx, 1
.text:00013690                 mov     edx, [ebp+var_4]
.text:00013693                 mov     [edx+0A8h], ecx
.text:00013699                 mov     eax, [ebp+var_4]
.text:0001369C                 mov     ecx, [eax+90h]
.text:000136A2                 sar     ecx, 18h
.text:000136A5                 mov     edx, [ebp+var_4]
.text:000136A8                 mov     eax, [edx+0A8h]
.text:000136AE                 mov     [eax], cl
.text:000136B0                 mov     ecx, [ebp+var_4]
.text:000136B3                 mov     edx, [ecx+90h]
.text:000136B9                 sar     edx, 10h
.text:000136BC                 mov     eax, [ebp+var_4]
.text:000136BF                 mov     ecx, [eax+0A8h]
.text:000136C5                 mov     [ecx+1], dl
.text:000136C8                 mov     edx, [ebp+var_4]
.text:000136CB                 mov     eax, [edx+90h]
.text:000136D1                 sar     eax, 8
.text:000136D4                 mov     ecx, [ebp+var_4]
.text:000136D7                 mov     edx, [ecx+0A8h]
.text:000136DD                 mov     [edx+2], al
.text:000136E0                 mov     eax, [ebp+var_4]
.text:000136E3                 mov     ecx, [eax+0A8h]
.text:000136E9                 mov     edx, [ebp+var_4]
.text:000136EC                 mov     al, [edx+90h]
.text:000136F2                 mov     [ecx+3], al
.text:000136F5                 mov     ecx, [ebp+var_4]
.text:000136F8                 mov     edx, [ecx+0A8h]
.text:000136FE                 add     edx, 4
.text:00013701                 mov     eax, [ebp+var_4]
.text:00013704                 mov     [eax+0A8h], edx
.text:0001370A                 mov     ecx, [ebp+var_4]
.text:0001370D                 mov     edx, [ecx+90h]
.text:00013713                 push    edx             ; Size
.text:00013714                 mov     eax, [ebp+var_4]
.text:00013717                 mov     ecx, [eax+84h]
.text:0001371D                 push    ecx             ; Src
.text:0001371E                 mov     edx, [ebp+var_4]
.text:00013721                 mov     eax, [edx+0A8h]
.text:00013727                 push    eax             ; Dst
.text:00013728                 call    _memcpy
.text:0001372D                 add     esp, 0Ch
.text:00013730                 mov     ecx, [ebp+var_4]
.text:00013733                 mov     edx, [ecx+0A8h]
.text:00013739                 mov     eax, [ebp+var_4]
.text:0001373C                 add     edx, [eax+90h]
.text:00013742                 mov     ecx, [ebp+var_4]
.text:00013745                 mov     [ecx+0A8h], edx
.text:0001374B                 mov     edx, [ebp+var_4]
.text:0001374E                 mov     eax, [edx+9Ch]
.text:00013754                 sar     eax, 18h
.text:00013757                 mov     ecx, [ebp+var_4]
.text:0001375A                 mov     edx, [ecx+0A8h]
.text:00013760                 mov     [edx], al
.text:00013762                 mov     eax, [ebp+var_4]
.text:00013765                 mov     ecx, [eax+9Ch]
.text:0001376B                 sar     ecx, 10h
.text:0001376E                 mov     edx, [ebp+var_4]
.text:00013771                 mov     eax, [edx+0A8h]
.text:00013777                 mov     [eax+1], cl
.text:0001377A                 mov     ecx, [ebp+var_4]
.text:0001377D                 mov     edx, [ecx+9Ch]
.text:00013783                 sar     edx, 8
.text:00013786                 mov     eax, [ebp+var_4]
.text:00013789                 mov     ecx, [eax+0A8h]
.text:0001378F                 mov     [ecx+2], dl
.text:00013792                 mov     edx, [ebp+var_4]
.text:00013795                 mov     eax, [edx+0A8h]
.text:0001379B                 mov     ecx, [ebp+var_4]
.text:0001379E                 mov     dl, [ecx+9Ch]
.text:000137A4                 mov     [eax+3], dl
.text:000137A7                 mov     eax, [ebp+var_4]
.text:000137AA                 mov     ecx, [eax+0A8h]
.text:000137B0                 add     ecx, 4
.text:000137B3                 mov     edx, [ebp+var_4]
.text:000137B6                 mov     [edx+0A8h], ecx
.text:000137BC                 mov     eax, [ebp+arg_0]
.text:000137BF                 mov     ecx, [eax+50h]
.text:000137C2                 and     ecx, 80h
.text:000137C8                 jnz     short loc_1383B
.text:000137CA                 mov     edx, [ebp+arg_0]
.text:000137CD                 mov     eax, [edx+0BCh]
.text:000137D3                 sar     eax, 18h
.text:000137D6                 mov     ecx, [ebp+var_4]
.text:000137D9                 mov     edx, [ecx+0A8h]
.text:000137DF                 mov     [edx], al
.text:000137E1                 mov     eax, [ebp+arg_0]
.text:000137E4                 mov     ecx, [eax+0BCh]
.text:000137EA                 sar     ecx, 10h
.text:000137ED                 mov     edx, [ebp+var_4]
.text:000137F0                 mov     eax, [edx+0A8h]
.text:000137F6                 mov     [eax+1], cl
.text:000137F9                 mov     ecx, [ebp+arg_0]
.text:000137FC                 mov     edx, [ecx+0BCh]
.text:00013802                 sar     edx, 8
.text:00013805                 mov     eax, [ebp+var_4]
.text:00013808                 mov     ecx, [eax+0A8h]
.text:0001380E                 mov     [ecx+2], dl
.text:00013811                 mov     edx, [ebp+var_4]
.text:00013814                 mov     eax, [edx+0A8h]
.text:0001381A                 mov     ecx, [ebp+arg_0]
.text:0001381D                 mov     dl, [ecx+0BCh]
.text:00013823                 mov     [eax+3], dl
.text:00013826                 mov     eax, [ebp+var_4]
.text:00013829                 mov     ecx, [eax+0A8h]
.text:0001382F                 add     ecx, 4
.text:00013832                 mov     edx, [ebp+var_4]
.text:00013835                 mov     [edx+0A8h], ecx
.text:0001383B
.text:0001383B loc_1383B:                              ; CODE XREF: _do_ssh2_authconn+19A0j
.text:0001383B                 mov     eax, [ebp+arg_0]
.text:0001383E                 mov     ecx, [eax+0BCh]
.text:00013844                 push    ecx             ; Size
.text:00013845                 mov     edx, [ebp+arg_0]
.text:00013848                 add     edx, 9Ch ; '£'
.text:0001384E                 push    edx             ; Src
.text:0001384F                 mov     eax, [ebp+var_4]
.text:00013852                 mov     ecx, [eax+0A8h]
.text:00013858                 push    ecx             ; Dst
.text:00013859                 call    _memcpy
.text:0001385E                 add     esp, 0Ch
.text:00013861                 mov     edx, [ebp+var_4]
.text:00013864                 mov     eax, [edx+0A8h]
.text:0001386A                 mov     ecx, [ebp+arg_0]
.text:0001386D                 add     eax, [ecx+0BCh]
.text:00013873                 mov     edx, [ebp+var_4]
.text:00013876                 mov     [edx+0A8h], eax
.text:0001387C                 mov     eax, [ebp+var_4]
.text:0001387F                 mov     ecx, [eax+0B8h]
.text:00013885                 mov     edx, [ecx]
.text:00013887                 sub     edx, 5
.text:0001388A                 push    edx             ; Size
.text:0001388B                 mov     eax, [ebp+var_4]
.text:0001388E                 mov     ecx, [eax+0B8h]
.text:00013894                 mov     edx, [ecx+10h]
.text:00013897                 add     edx, 5
.text:0001389A                 push    edx             ; Src
.text:0001389B                 mov     eax, [ebp+var_4]
.text:0001389E                 mov     ecx, [eax+0A8h]
.text:000138A4                 push    ecx             ; Dst
.text:000138A5                 call    _memcpy
.text:000138AA                 add     esp, 0Ch
.text:000138AD                 mov     edx, [ebp+var_4]
.text:000138B0                 mov     eax, [edx+0B8h]
.text:000138B6                 mov     ecx, [eax]
.text:000138B8                 mov     edx, [ebp+var_4]
.text:000138BB                 mov     eax, [edx+0A8h]
.text:000138C1                 lea     ecx, [ecx+eax-5]
.text:000138C5                 mov     edx, [ebp+var_4]
.text:000138C8                 mov     [edx+0A8h], ecx
.text:000138CE                 mov     eax, [ebp+var_4]
.text:000138D1                 mov     ecx, [eax+0A8h]
.text:000138D7                 mov     byte ptr [ecx], 0
.text:000138DA                 mov     edx, [ebp+var_4]
.text:000138DD                 mov     eax, [edx+0A8h]
.text:000138E3                 mov     byte ptr [eax+1], 0
.text:000138E7                 mov     ecx, [ebp+var_4]
.text:000138EA                 mov     edx, [ecx+0A8h]
.text:000138F0                 mov     byte ptr [edx+2], 0
.text:000138F4                 mov     eax, [ebp+var_4]
.text:000138F7                 mov     ecx, [eax+0A8h]
.text:000138FD                 mov     byte ptr [ecx+3], 0
.text:00013901                 mov     edx, [ebp+arg_0]
.text:00013904                 push    edx
.text:00013905                 push    offset _ssh_agent_callback
.text:0001390A                 mov     eax, [ebp+var_4]
.text:0001390D                 add     eax, 0A0h ; 'á'
.text:00013912                 push    eax
.text:00013913                 lea     ecx, [ebp+var_74]
.text:00013916                 push    ecx
.text:00013917                 mov     edx, [ebp+var_4]
.text:0001391A                 mov     eax, [edx+0A4h]
.text:00013920                 add     eax, 4
.text:00013923                 push    eax
.text:00013924                 mov     ecx, [ebp+var_4]
.text:00013927                 mov     edx, [ecx+0ACh]
.text:0001392D                 push    edx
.text:0001392E                 call    _agent_query
.text:00013933                 add     esp, 18h
.text:00013936                 test    eax, eax
.text:00013938                 jnz     short loc_139A8
.text:0001393A
.text:0001393A loc_1393A:                              ; CODE XREF: _do_ssh2_authconn+1B22j
.text:0001393A                                         ; _do_ssh2_authconn+1B5Aj ...
.text:0001393A                 mov     eax, [ebp+var_8]
.text:0001393D                 mov     dword ptr [eax], 23F8h
.text:00013943                 jmp     loc_1626E
.text:00013948 ; ---------------------------------------------------------------------------
.text:00013948
.text:00013948 loc_13948:                              ; CODE XREF: _do_ssh2_authconn+151j
.text:00013948                 xor     ecx, ecx
.text:0001394A                 jnz     short loc_1393A
.text:0001394C                 cmp     [ebp+arg_C], 0
.text:00013950                 jz      short loc_1397E
.text:00013952                 push    offset $SG93374 ; "Unexpected data from server while waiti"...
.text:00013957                 call    _dupprintf
.text:0001395C                 add     esp, 4
.text:0001395F                 push    eax
.text:00013960                 mov     edx, [ebp+arg_0]
.text:00013963                 push    edx
.text:00013964                 call    _bomb_out
.text:00013969                 add     esp, 8
.text:0001396C
.text:0001396C loc_1396C:                              ; CODE XREF: _do_ssh2_authconn+1B54j
.text:0001396C                 mov     eax, [ebp+var_8]
.text:0001396F                 mov     dword ptr [eax], 0
.text:00013975                 jmp     loc_1626E
.text:0001397A ; ---------------------------------------------------------------------------
.text:0001397A                 xor     ecx, ecx
.text:0001397C                 jnz     short loc_1396C
.text:0001397E
.text:0001397E loc_1397E:                              ; CODE XREF: _do_ssh2_authconn+1B28j
.text:0001397E                 cmp     [ebp+arg_C], 0
.text:00013982                 jnz     short loc_1393A
.text:00013984                 cmp     [ebp+arg_8], 0
.text:00013988                 jg      short loc_1393A
.text:0001398A                 mov     edx, [ebp+arg_0]
.text:0001398D                 mov     eax, [edx+228h]
.text:00013993                 mov     [ebp+var_74], eax
.text:00013996                 mov     ecx, [ebp+var_4]
.text:00013999                 mov     edx, [ebp+arg_0]
.text:0001399C                 mov     eax, [edx+22Ch]
.text:000139A2                 mov     [ecx+0A0h], eax
.text:000139A8
.text:000139A8 loc_139A8:                              ; CODE XREF: _do_ssh2_authconn+1B10j
.text:000139A8                 mov     ecx, [ebp+var_4]
.text:000139AB                 mov     edx, [ebp+var_74]
.text:000139AE                 mov     [ecx+0B0h], edx
.text:000139B4                 mov     eax, [ebp+var_4]
.text:000139B7                 mov     ecx, [eax+0ACh]
.text:000139BD                 push    ecx
.text:000139BE                 call    _safefree
.text:000139C3                 add     esp, 4
.text:000139C6                 mov     edx, [ebp+var_4]
.text:000139C9                 cmp     dword ptr [edx+0B0h], 0
.text:000139D0                 jz      loc_13B33
.text:000139D6                 mov     eax, [ebp+var_4]
.text:000139D9                 cmp     dword ptr [eax+0A0h], 9
.text:000139E0                 jl      loc_13B07
.text:000139E6                 mov     ecx, [ebp+var_4]
.text:000139E9                 mov     edx, [ecx+0B0h]
.text:000139EF                 movsx   eax, byte ptr [edx+4]
.text:000139F3                 cmp     eax, 0Eh
.text:000139F6                 jnz     loc_13B07
.text:000139FC                 mov     ecx, [ebp+var_4]
.text:000139FF                 mov     edx, [ecx+0B0h]
.text:00013A05                 movzx   eax, byte ptr [edx+5]
.text:00013A09                 shl     eax, 18h
.text:00013A0C                 mov     ecx, [ebp+var_4]
.text:00013A0F                 mov     edx, [ecx+0B0h]
.text:00013A15                 movzx   ecx, byte ptr [edx+6]
.text:00013A19                 shl     ecx, 10h
.text:00013A1C                 or      eax, ecx
.text:00013A1E                 mov     edx, [ebp+var_4]
.text:00013A21                 mov     ecx, [edx+0B0h]
.text:00013A27                 movzx   edx, byte ptr [ecx+7]
.text:00013A2B                 shl     edx, 8
.text:00013A2E                 or      eax, edx
.text:00013A30                 mov     ecx, [ebp+var_4]
.text:00013A33                 mov     edx, [ecx+0B0h]
.text:00013A39                 movzx   ecx, byte ptr [edx+8]
.text:00013A3D                 or      eax, ecx
.text:00013A3F                 mov     edx, [ebp+var_4]
.text:00013A42                 mov     ecx, [edx+0A0h]
.text:00013A48                 sub     ecx, 9
.text:00013A4B                 cmp     eax, ecx
.text:00013A4D                 ja      loc_13B07
.text:00013A53                 push    offset $SG93389 ; "Sending Pageant's response"
.text:00013A58                 mov     edx, [ebp+arg_0]
.text:00013A5B                 mov     eax, [edx+0E4h]
.text:00013A61                 push    eax
.text:00013A62                 call    _logevent
.text:00013A67                 add     esp, 8
.text:00013A6A                 mov     ecx, [ebp+var_4]
.text:00013A6D                 mov     edx, [ecx+0B0h]
.text:00013A73                 movzx   eax, byte ptr [edx+5]
.text:00013A77                 shl     eax, 18h
.text:00013A7A                 mov     ecx, [ebp+var_4]
.text:00013A7D                 mov     edx, [ecx+0B0h]
.text:00013A83                 movzx   ecx, byte ptr [edx+6]
.text:00013A87                 shl     ecx, 10h
.text:00013A8A                 or      eax, ecx
.text:00013A8C                 mov     edx, [ebp+var_4]
.text:00013A8F                 mov     ecx, [edx+0B0h]
.text:00013A95                 movzx   edx, byte ptr [ecx+7]
.text:00013A99                 shl     edx, 8
.text:00013A9C                 or      eax, edx
.text:00013A9E                 mov     ecx, [ebp+var_4]
.text:00013AA1                 mov     edx, [ecx+0B0h]
.text:00013AA7                 movzx   ecx, byte ptr [edx+8]
.text:00013AAB                 or      eax, ecx
.text:00013AAD                 push    eax             ; size_t
.text:00013AAE                 mov     edx, [ebp+var_4]
.text:00013AB1                 mov     eax, [edx+0B0h]
.text:00013AB7                 add     eax, 9
.text:00013ABA                 push    eax             ; int
.text:00013ABB                 mov     ecx, [ebp+var_4]
.text:00013ABE                 mov     edx, [ecx+90h]
.text:00013AC4                 push    edx             ; int
.text:00013AC5                 mov     eax, [ebp+var_4]
.text:00013AC8                 mov     ecx, [eax+84h]
.text:00013ACE                 push    ecx             ; int
.text:00013ACF                 mov     edx, [ebp+var_4]
.text:00013AD2                 mov     eax, [edx+0B8h]
.text:00013AD8                 push    eax             ; int
.text:00013AD9                 mov     ecx, [ebp+arg_0]
.text:00013ADC                 push    ecx             ; int
.text:00013ADD                 call    _ssh2_add_sigblob
.text:00013AE2                 add     esp, 18h
.text:00013AE5                 mov     edx, [ebp+var_4]
.text:00013AE8                 mov     eax, [edx+0B8h]
.text:00013AEE                 push    eax
.text:00013AEF                 mov     ecx, [ebp+arg_0]
.text:00013AF2                 push    ecx
.text:00013AF3                 call    _ssh2_pkt_send
.text:00013AF8                 add     esp, 8
.text:00013AFB                 mov     edx, [ebp+var_4]
.text:00013AFE                 mov     dword ptr [edx+4], 1
.text:00013B05                 jmp     short loc_13B33
.text:00013B07 ; ---------------------------------------------------------------------------
.text:00013B07
.text:00013B07 loc_13B07:                              ; CODE XREF: _do_ssh2_authconn+1BB8j
.text:00013B07                                         ; _do_ssh2_authconn+1BCEj ...
.text:00013B07                 push    offset $SG93399 ; "Pageant failed to answer challenge"
.text:00013B0C                 call    _dupprintf
.text:00013B11                 add     esp, 4
.text:00013B14                 push    eax
.text:00013B15                 mov     eax, [ebp+arg_0]
.text:00013B18                 push    eax
.text:00013B19                 call    _bomb_out
.text:00013B1E                 add     esp, 8
.text:00013B21
.text:00013B21 loc_13B21:                              ; CODE XREF: _do_ssh2_authconn+1D09j
.text:00013B21                 mov     ecx, [ebp+var_8]
.text:00013B24                 mov     dword ptr [ecx], 0
.text:00013B2A                 jmp     loc_1626E
.text:00013B2F ; ---------------------------------------------------------------------------
.text:00013B2F                 xor     edx, edx
.text:00013B31                 jnz     short loc_13B21
.text:00013B33
.text:00013B33 loc_13B33:                              ; CODE XREF: _do_ssh2_authconn+15E9j
.text:00013B33                                         ; _do_ssh2_authconn+1BA8j ...
.text:00013B33                 mov     eax, [ebp+var_4]
.text:00013B36                 cmp     dword ptr [eax+78h], 0
.text:00013B3A                 jz      short loc_13B52
.text:00013B3C                 mov     ecx, [ebp+var_4]
.text:00013B3F                 mov     dword ptr [ecx+24h], 1
.text:00013B46                 mov     edx, [ebp+var_4]
.text:00013B49                 mov     dword ptr [edx+20h], 1
.text:00013B50                 jmp     short loc_13B7C
.text:00013B52 ; ---------------------------------------------------------------------------
.text:00013B52
.text:00013B52 loc_13B52:                              ; CODE XREF: _do_ssh2_authconn+1D12j
.text:00013B52                 mov     eax, [ebp+var_4]
.text:00013B55                 mov     ecx, [eax+7Ch]
.text:00013B58                 add     ecx, 1
.text:00013B5B                 mov     edx, [ebp+var_4]
.text:00013B5E                 mov     [edx+7Ch], ecx
.text:00013B61                 mov     eax, [ebp+var_4]
.text:00013B64                 mov     ecx, [ebp+var_4]
.text:00013B67                 mov     edx, [eax+7Ch]
.text:00013B6A                 cmp     edx, [ecx+80h]
.text:00013B70                 jl      short loc_13B7C
.text:00013B72                 mov     eax, [ebp+var_4]
.text:00013B75                 mov     dword ptr [eax+24h], 1
.text:00013B7C
.text:00013B7C loc_13B7C:                              ; CODE XREF: _do_ssh2_authconn+1D28j
.text:00013B7C                                         ; _do_ssh2_authconn+1D48j
.text:00013B7C                 jmp     loc_158DA
.text:00013B81 ; ---------------------------------------------------------------------------
.text:00013B81
.text:00013B81 loc_13B81:                              ; CODE XREF: _do_ssh2_authconn+1316j
.text:00013B81                                         ; _do_ssh2_authconn+1323j ...
.text:00013B81                 mov     ecx, [ebp+var_4]
.text:00013B84                 cmp     dword ptr [ecx+14h], 0
.text:00013B88                 jz      loc_142F3
.text:00013B8E                 mov     edx, [ebp+var_4]
.text:00013B91                 cmp     dword ptr [edx+50h], 0
.text:00013B95                 jz      loc_142F3
.text:00013B9B                 mov     eax, [ebp+var_4]
.text:00013B9E                 cmp     dword ptr [eax+20h], 0
.text:00013BA2                 jnz     loc_142F3
.text:00013BA8                 mov     ecx, [ebp+arg_0]
.text:00013BAB                 mov     dword ptr [ecx+15Ch], 1
.text:00013BB5                 mov     edx, [ebp+var_4]
.text:00013BB8                 mov     dword ptr [edx+20h], 1
.text:00013BBF                 push    32h ; '2'
.text:00013BC1                 call    _ssh2_pkt_init
.text:00013BC6                 add     esp, 4
.text:00013BC9                 mov     ecx, [ebp+var_4]
.text:00013BCC                 mov     [ecx+0B8h], eax
.text:00013BD2                 mov     edx, [ebp+arg_0]
.text:00013BD5                 mov     eax, [edx+224h]
.text:00013BDB                 push    eax             ; Str
.text:00013BDC                 mov     ecx, [ebp+var_4]
.text:00013BDF                 mov     edx, [ecx+0B8h]
.text:00013BE5                 push    edx             ; int
.text:00013BE6                 call    _ssh_pkt_addstring
.text:00013BEB                 add     esp, 8
.text:00013BEE                 push    offset $SG93410 ; "ssh-connection"
.text:00013BF3                 mov     eax, [ebp+var_4]
.text:00013BF6                 mov     ecx, [eax+0B8h]
.text:00013BFC                 push    ecx             ; int
.text:00013BFD                 call    _ssh_pkt_addstring
.text:00013C02                 add     esp, 8
.text:00013C05                 push    offset $SG93411 ; "publickey"
.text:00013C0A                 mov     edx, [ebp+var_4]
.text:00013C0D                 mov     eax, [edx+0B8h]
.text:00013C13                 push    eax             ; int
.text:00013C14                 call    _ssh_pkt_addstring
.text:00013C19                 add     esp, 8
.text:00013C1C                 push    0               ; Src
.text:00013C1E                 mov     ecx, [ebp+var_4]
.text:00013C21                 mov     edx, [ecx+0B8h]
.text:00013C27                 push    edx             ; int
.text:00013C28                 call    _ssh2_pkt_addbool
.text:00013C2D                 add     esp, 8
.text:00013C30                 mov     eax, [ebp+var_4]
.text:00013C33                 mov     ecx, [eax+5Ch]
.text:00013C36                 push    ecx             ; Str
.text:00013C37                 mov     edx, [ebp+var_4]
.text:00013C3A                 mov     eax, [edx+0B8h]
.text:00013C40                 push    eax             ; int
.text:00013C41                 call    _ssh_pkt_addstring
.text:00013C46                 add     esp, 8
.text:00013C49                 mov     ecx, [ebp+var_4]
.text:00013C4C                 mov     edx, [ecx+0B8h]
.text:00013C52                 push    edx
.text:00013C53                 call    _ssh_pkt_addstring_start
.text:00013C58                 add     esp, 4
.text:00013C5B                 mov     eax, [ebp+var_4]
.text:00013C5E                 mov     ecx, [eax+54h]
.text:00013C61                 push    ecx             ; Size
.text:00013C62                 mov     edx, [ebp+var_4]
.text:00013C65                 mov     eax, [edx+50h]
.text:00013C68                 push    eax             ; Src
.text:00013C69                 mov     ecx, [ebp+var_4]
.text:00013C6C                 mov     edx, [ecx+0B8h]
.text:00013C72                 push    edx             ; int
.text:00013C73                 call    _ssh_pkt_addstring_data
.text:00013C78                 add     esp, 0Ch
.text:00013C7B                 mov     eax, [ebp+var_4]
.text:00013C7E                 mov     ecx, [eax+0B8h]
.text:00013C84                 push    ecx
.text:00013C85                 mov     edx, [ebp+arg_0]
.text:00013C88                 push    edx
.text:00013C89                 call    _ssh2_pkt_send
.text:00013C8E                 add     esp, 8
.text:00013C91                 push    offset $SG93413 ; "Offered public key"
.text:00013C96                 mov     eax, [ebp+arg_0]
.text:00013C99                 mov     ecx, [eax+0E4h]
.text:00013C9F                 push    ecx
.text:00013CA0                 call    _logevent
.text:00013CA5                 add     esp, 8
.text:00013CA8
.text:00013CA8 loc_13CA8:                              ; CODE XREF: _do_ssh2_authconn+1E90j
.text:00013CA8                                         ; _do_ssh2_authconn+1E96j
.text:00013CA8                 mov     edx, [ebp+var_8]
.text:00013CAB                 mov     dword ptr [edx], 2441h
.text:00013CB1                 jmp     loc_1626E
.text:00013CB6 ; ---------------------------------------------------------------------------
.text:00013CB6
.text:00013CB6 loc_13CB6:                              ; CODE XREF: _do_ssh2_authconn+131j
.text:00013CB6                 xor     eax, eax
.text:00013CB8                 jnz     short loc_13CA8
.text:00013CBA                 cmp     [ebp+arg_C], 0
.text:00013CBE                 jz      short loc_13CA8
.text:00013CC0                 mov     ecx, [ebp+arg_C]
.text:00013CC3                 cmp     dword ptr [ecx+8], 3Ch ; '<'
.text:00013CC7                 jz      short loc_13CE2
.text:00013CC9                 mov     edx, [ebp+var_4]
.text:00013CCC                 mov     dword ptr [edx+0Ch], 1
.text:00013CD3                 mov     eax, [ebp+var_4]
.text:00013CD6                 mov     dword ptr [eax+4], 2
.text:00013CDD                 jmp     loc_12C39
.text:00013CE2 ; ---------------------------------------------------------------------------
.text:00013CE2
.text:00013CE2 loc_13CE2:                              ; CODE XREF: _do_ssh2_authconn+1E9Fj
.text:00013CE2                 push    offset $SG93422 ; "Offer of public key accepted"
.text:00013CE7                 mov     ecx, [ebp+arg_0]
.text:00013CEA                 mov     edx, [ecx+0E4h]
.text:00013CF0                 push    edx
.text:00013CF1                 call    _logevent
.text:00013CF6                 add     esp, 8
.text:00013CF9                 mov     eax, dword ptr ds:_flags
.text:00013CFE                 and     eax, 1
.text:00013D01                 jz      short loc_13D38
.text:00013D03                 push    offset $SG93424 ; "Authenticating with public key \""
.text:00013D08                 mov     ecx, [ebp+arg_0]
.text:00013D0B                 push    ecx             ; int
.text:00013D0C                 call    _c_write_str
.text:00013D11                 add     esp, 8
.text:00013D14                 mov     edx, [ebp+var_4]
.text:00013D17                 mov     eax, [edx+60h]
.text:00013D1A                 push    eax             ; Str
.text:00013D1B                 mov     ecx, [ebp+arg_0]
.text:00013D1E                 push    ecx             ; int
.text:00013D1F                 call    _c_write_str
.text:00013D24                 add     esp, 8
.text:00013D27                 push    offset $SG93425 ; "\"\r\n"
.text:00013D2C                 mov     edx, [ebp+arg_0]
.text:00013D2F                 push    edx             ; int
.text:00013D30                 call    _c_write_str
.text:00013D35                 add     esp, 8
.text:00013D38
.text:00013D38 loc_13D38:                              ; CODE XREF: _do_ssh2_authconn+1ED9j
.text:00013D38                 mov     [ebp+var_7C], 0
.text:00013D3F
.text:00013D3F loc_13D3F:                              ; CODE XREF: _do_ssh2_authconn:loc_13F7Aj
.text:00013D3F                 cmp     [ebp+var_7C], 0
.text:00013D43                 jnz     loc_13F7F
.text:00013D49                 mov     eax, [ebp+var_4]
.text:00013D4C                 cmp     dword ptr [eax+58h], 0
.text:00013D50                 jz      loc_13E95
.text:00013D56                 mov     ecx, [ebp+arg_0]
.text:00013D59                 mov     edx, [ecx+0E4h]
.text:00013D5F                 push    edx
.text:00013D60                 call    _new_prompts
.text:00013D65                 add     esp, 4
.text:00013D68                 mov     ecx, [ebp+var_4]
.text:00013D6B                 mov     [ecx+3Ch], eax
.text:00013D6E                 mov     edx, [ebp+var_4]
.text:00013D71                 mov     eax, [edx+3Ch]
.text:00013D74                 mov     dword ptr [eax], 0
.text:00013D7A                 push    offset $SG93433 ; "SSH key passphrase"
.text:00013D7F                 call    _dupstr
.text:00013D84                 add     esp, 4
.text:00013D87                 mov     ecx, [ebp+var_4]
.text:00013D8A                 mov     edx, [ecx+3Ch]
.text:00013D8D                 mov     [edx+4], eax
.text:00013D90                 push    0
.text:00013D92                 mov     eax, [ebp+var_4]
.text:00013D95                 mov     ecx, [eax+60h]
.text:00013D98                 push    ecx
.text:00013D99                 push    offset $SG93434 ; "Passphrase for key \"%.100s\": "
.text:00013D9E                 call    _dupprintf
.text:00013DA3                 add     esp, 8
.text:00013DA6                 push    eax
.text:00013DA7                 mov     edx, [ebp+var_4]
.text:00013DAA                 mov     eax, [edx+3Ch]
.text:00013DAD                 push    eax
.text:00013DAE                 call    _add_prompt
.text:00013DB3                 add     esp, 0Ch
.text:00013DB6                 push    0
.text:00013DB8                 push    0
.text:00013DBA                 mov     ecx, [ebp+var_4]
.text:00013DBD                 mov     edx, [ecx+3Ch]
.text:00013DC0                 push    edx
.text:00013DC1                 call    _get_userpass_input
.text:00013DC6                 add     esp, 0Ch
.text:00013DC9                 mov     [ebp+var_90], eax
.text:00013DCF
.text:00013DCF loc_13DCF:                              ; CODE XREF: _do_ssh2_authconn+1FFFj
.text:00013DCF                 cmp     [ebp+var_90], 0
.text:00013DD6                 jge     short loc_13E29
.text:00013DD8                 mov     eax, [ebp+arg_0]
.text:00013DDB                 mov     dword ptr [eax+0D8h], 1
.text:00013DE5
.text:00013DE5 loc_13DE5:                              ; CODE XREF: _do_ssh2_authconn+1FCDj
.text:00013DE5                                         ; _do_ssh2_authconn+1FD3j
.text:00013DE5                 mov     ecx, [ebp+var_8]
.text:00013DE8                 mov     dword ptr [ecx], 2465h
.text:00013DEE                 jmp     loc_1626E
.text:00013DF3 ; ---------------------------------------------------------------------------
.text:00013DF3
.text:00013DF3 loc_13DF3:                              ; CODE XREF: _do_ssh2_authconn+166j
.text:00013DF3                 xor     edx, edx
.text:00013DF5                 jnz     short loc_13DE5
.text:00013DF7                 cmp     [ebp+arg_C], 0
.text:00013DFB                 jnz     short loc_13DE5
.text:00013DFD                 mov     eax, [ebp+arg_8]
.text:00013E00                 push    eax
.text:00013E01                 mov     ecx, [ebp+arg_4]
.text:00013E04                 push    ecx
.text:00013E05                 mov     edx, [ebp+var_4]
.text:00013E08                 mov     eax, [edx+3Ch]
.text:00013E0B                 push    eax
.text:00013E0C                 call    _get_userpass_input
.text:00013E11                 add     esp, 0Ch
.text:00013E14                 mov     [ebp+var_90], eax
.text:00013E1A                 mov     ecx, [ebp+arg_0]
.text:00013E1D                 mov     dword ptr [ecx+0D8h], 0
.text:00013E27                 jmp     short loc_13DCF
.text:00013E29 ; ---------------------------------------------------------------------------
.text:00013E29
.text:00013E29 loc_13E29:                              ; CODE XREF: _do_ssh2_authconn+1FAEj
.text:00013E29                 cmp     [ebp+var_90], 0
.text:00013E30                 jnz     short loc_13E6A
.text:00013E32                 mov     edx, [ebp+var_4]
.text:00013E35                 mov     eax, [edx+3Ch]
.text:00013E38                 push    eax
.text:00013E39                 call    _free_prompts
.text:00013E3E                 add     esp, 4
.text:00013E41                 push    1               ; int
.text:00013E43                 push    0Dh             ; int
.text:00013E45                 push    offset $SG93448 ; "Unable to authenticate"
.text:00013E4A                 push    0               ; int
.text:00013E4C                 mov     ecx, [ebp+arg_0]
.text:00013E4F                 push    ecx             ; int
.text:00013E50                 call    _ssh_disconnect
.text:00013E55                 add     esp, 14h
.text:00013E58
.text:00013E58 loc_13E58:                              ; CODE XREF: _do_ssh2_authconn+2040j
.text:00013E58                 mov     edx, [ebp+var_8]
.text:00013E5B                 mov     dword ptr [edx], 0
.text:00013E61                 jmp     loc_1626E
.text:00013E66 ; ---------------------------------------------------------------------------
.text:00013E66                 xor     eax, eax
.text:00013E68                 jnz     short loc_13E58
.text:00013E6A
.text:00013E6A loc_13E6A:                              ; CODE XREF: _do_ssh2_authconn+2008j
.text:00013E6A                 mov     ecx, [ebp+var_4]
.text:00013E6D                 mov     edx, [ecx+3Ch]
.text:00013E70                 mov     eax, [edx+18h]
.text:00013E73                 mov     ecx, [eax]
.text:00013E75                 mov     edx, [ecx+8]
.text:00013E78                 push    edx
.text:00013E79                 call    _dupstr
.text:00013E7E                 add     esp, 4
.text:00013E81                 mov     [ebp+Str], eax
.text:00013E84                 mov     eax, [ebp+var_4]
.text:00013E87                 mov     ecx, [eax+3Ch]
.text:00013E8A                 push    ecx
.text:00013E8B                 call    _free_prompts
.text:00013E90                 add     esp, 4
.text:00013E93                 jmp     short loc_13E9C
.text:00013E95 ; ---------------------------------------------------------------------------
.text:00013E95
.text:00013E95 loc_13E95:                              ; CODE XREF: _do_ssh2_authconn+1F28j
.text:00013E95                 mov     [ebp+Str], 0
.text:00013E9C
.text:00013E9C loc_13E9C:                              ; CODE XREF: _do_ssh2_authconn+206Bj
.text:00013E9C                 push    1Eh
.text:00013E9E                 mov     edx, [ebp+arg_0]
.text:00013EA1                 mov     eax, [edx+21Ch]
.text:00013EA7                 push    eax
.text:00013EA8                 call    _conf_get_filename
.text:00013EAD                 add     esp, 8
.text:00013EB0                 mov     ecx, [ebp+var_4]
.text:00013EB3                 mov     [ecx+0BCh], eax
.text:00013EB9                 lea     edx, [ebp+var_88]
.text:00013EBF                 push    edx
.text:00013EC0                 mov     eax, [ebp+Str]
.text:00013EC3                 push    eax
.text:00013EC4                 mov     ecx, [ebp+var_4]
.text:00013EC7                 mov     edx, [ecx+0BCh]
.text:00013ECD                 push    edx
.text:00013ECE                 call    _ssh2_load_userkey
.text:00013ED3                 add     esp, 0Ch
.text:00013ED6                 mov     [ebp+var_7C], eax
.text:00013ED9                 cmp     [ebp+Str], 0
.text:00013EDD                 jz      short loc_13F04
.text:00013EDF                 mov     eax, [ebp+Str]
.text:00013EE2                 push    eax             ; Str
.text:00013EE3                 call    _strlen
.text:00013EE8                 add     esp, 4
.text:00013EEB                 push    eax
.text:00013EEC                 mov     ecx, [ebp+Str]
.text:00013EEF                 push    ecx
.text:00013EF0                 call    _smemclr
.text:00013EF5                 add     esp, 8
.text:00013EF8                 mov     edx, [ebp+Str]
.text:00013EFB                 push    edx
.text:00013EFC                 call    _safefree
.text:00013F01                 add     esp, 4
.text:00013F04
.text:00013F04 loc_13F04:                              ; CODE XREF: _do_ssh2_authconn+20B5j
.text:00013F04                 cmp     [ebp+var_7C], offset _ssh2_wrong_passphrase
.text:00013F0B                 jz      short loc_13F13
.text:00013F0D                 cmp     [ebp+var_7C], 0
.text:00013F11                 jnz     short loc_13F7A
.text:00013F13
.text:00013F13 loc_13F13:                              ; CODE XREF: _do_ssh2_authconn+20E3j
.text:00013F13                 cmp     [ebp+Str], 0
.text:00013F17                 jz      short loc_13F3C
.text:00013F19                 cmp     [ebp+var_7C], offset _ssh2_wrong_passphrase
.text:00013F20                 jnz     short loc_13F3C
.text:00013F22                 push    offset $SG93459 ; "Wrong passphrase\r\n"
.text:00013F27                 mov     eax, [ebp+arg_0]
.text:00013F2A                 push    eax             ; int
.text:00013F2B                 call    _c_write_str
.text:00013F30                 add     esp, 8
.text:00013F33                 mov     [ebp+var_7C], 0
.text:00013F3A                 jmp     short loc_13F7A
.text:00013F3C ; ---------------------------------------------------------------------------
.text:00013F3C
.text:00013F3C loc_13F3C:                              ; CODE XREF: _do_ssh2_authconn+20EFj
.text:00013F3C                                         ; _do_ssh2_authconn+20F8j
.text:00013F3C                 push    offset $SG93462 ; "Unable to load private key ("
.text:00013F41                 mov     ecx, [ebp+arg_0]
.text:00013F44                 push    ecx             ; int
.text:00013F45                 call    _c_write_str
.text:00013F4A                 add     esp, 8
.text:00013F4D                 mov     edx, [ebp+var_88]
.text:00013F53                 push    edx             ; Str
.text:00013F54                 mov     eax, [ebp+arg_0]
.text:00013F57                 push    eax             ; int
.text:00013F58                 call    _c_write_str
.text:00013F5D                 add     esp, 8
.text:00013F60                 push    offset $SG93463 ; ")\r\n"
.text:00013F65                 mov     ecx, [ebp+arg_0]
.text:00013F68                 push    ecx             ; int
.text:00013F69                 call    _c_write_str
.text:00013F6E                 add     esp, 8
.text:00013F71                 mov     [ebp+var_7C], 0
.text:00013F78                 jmp     short loc_13F7F
.text:00013F7A ; ---------------------------------------------------------------------------
.text:00013F7A
.text:00013F7A loc_13F7A:                              ; CODE XREF: _do_ssh2_authconn+20E9j
.text:00013F7A                                         ; _do_ssh2_authconn+2112j
.text:00013F7A                 jmp     loc_13D3F
.text:00013F7F ; ---------------------------------------------------------------------------
.text:00013F7F
.text:00013F7F loc_13F7F:                              ; CODE XREF: _do_ssh2_authconn+1F1Bj
.text:00013F7F                                         ; _do_ssh2_authconn+2150j
.text:00013F7F                 cmp     [ebp+var_7C], 0
.text:00013F83                 jz      loc_142EE
.text:00013F89                 push    32h ; '2'
.text:00013F8B                 call    _ssh2_pkt_init
.text:00013F90                 add     esp, 4
.text:00013F93                 mov     edx, [ebp+var_4]
.text:00013F96                 mov     [edx+0B8h], eax
.text:00013F9C                 mov     eax, [ebp+arg_0]
.text:00013F9F                 mov     ecx, [eax+224h]
.text:00013FA5                 push    ecx             ; Str
.text:00013FA6                 mov     edx, [ebp+var_4]
.text:00013FA9                 mov     eax, [edx+0B8h]
.text:00013FAF                 push    eax             ; int
.text:00013FB0                 call    _ssh_pkt_addstring
.text:00013FB5                 add     esp, 8
.text:00013FB8                 push    offset $SG93473 ; "ssh-connection"
.text:00013FBD                 mov     ecx, [ebp+var_4]
.text:00013FC0                 mov     edx, [ecx+0B8h]
.text:00013FC6                 push    edx             ; int
.text:00013FC7                 call    _ssh_pkt_addstring
.text:00013FCC                 add     esp, 8
.text:00013FCF                 push    offset $SG93474 ; "publickey"
.text:00013FD4                 mov     eax, [ebp+var_4]
.text:00013FD7                 mov     ecx, [eax+0B8h]
.text:00013FDD                 push    ecx             ; int
.text:00013FDE                 call    _ssh_pkt_addstring
.text:00013FE3                 add     esp, 8
.text:00013FE6                 push    1               ; Src
.text:00013FE8                 mov     edx, [ebp+var_4]
.text:00013FEB                 mov     eax, [edx+0B8h]
.text:00013FF1                 push    eax             ; int
.text:00013FF2                 call    _ssh2_pkt_addbool
.text:00013FF7                 add     esp, 8
.text:00013FFA                 mov     ecx, [ebp+var_7C]
.text:00013FFD                 mov     edx, [ecx]
.text:00013FFF                 mov     eax, [edx+30h]
.text:00014002                 push    eax             ; Str
.text:00014003                 mov     ecx, [ebp+var_4]
.text:00014006                 mov     edx, [ecx+0B8h]
.text:0001400C                 push    edx             ; int
.text:0001400D                 call    _ssh_pkt_addstring
.text:00014012                 add     esp, 8
.text:00014015                 mov     esi, esp
.text:00014017                 lea     eax, [ebp+Size]
.text:0001401D                 push    eax
.text:0001401E                 mov     ecx, [ebp+var_7C]
.text:00014021                 mov     edx, [ecx+4]
.text:00014024                 push    edx
.text:00014025                 mov     eax, [ebp+var_7C]
.text:00014028                 mov     ecx, [eax]
.text:0001402A                 mov     edx, [ecx+0Ch]
.text:0001402D                 call    edx
.text:0001402F                 add     esp, 8
.text:00014032                 cmp     esi, esp
.text:00014034                 call    __RTC_CheckEsp
.text:00014039                 mov     [ebp+Src], eax
.text:0001403F                 mov     eax, [ebp+var_4]
.text:00014042                 mov     ecx, [eax+0B8h]
.text:00014048                 push    ecx
.text:00014049                 call    _ssh_pkt_addstring_start
.text:0001404E                 add     esp, 4
.text:00014051                 mov     edx, [ebp+Size]
.text:00014057                 push    edx             ; Size
.text:00014058                 mov     eax, [ebp+Src]
.text:0001405E                 push    eax             ; Src
.text:0001405F                 mov     ecx, [ebp+var_4]
.text:00014062                 mov     edx, [ecx+0B8h]
.text:00014068                 push    edx             ; int
.text:00014069                 call    _ssh_pkt_addstring_data
.text:0001406E                 add     esp, 0Ch
.text:00014071                 mov     eax, [ebp+var_4]
.text:00014074                 mov     ecx, [eax+0B8h]
.text:0001407A                 mov     edx, [ecx]
.text:0001407C                 mov     eax, [ebp+arg_0]
.text:0001407F                 mov     ecx, [eax+0BCh]
.text:00014085                 lea     edx, [edx+ecx-1]
.text:00014089                 mov     [ebp+var_B8], edx
.text:0001408F                 mov     eax, [ebp+arg_0]
.text:00014092                 mov     ecx, [eax+50h]
.text:00014095                 and     ecx, 80h
.text:0001409B                 jz      short loc_140AC
.text:0001409D                 mov     edx, [ebp+var_B8]
.text:000140A3                 sub     edx, 4
.text:000140A6                 mov     [ebp+var_B8], edx
.text:000140AC
.text:000140AC loc_140AC:                              ; CODE XREF: _do_ssh2_authconn+2273j
.text:000140AC                 push    1
.text:000140AE                 mov     eax, [ebp+var_B8]
.text:000140B4                 push    eax
.text:000140B5                 call    _safemalloc
.text:000140BA                 add     esp, 8
.text:000140BD                 mov     [ebp+var_9C], eax
.text:000140C3                 mov     [ebp+var_BC], 0
.text:000140CD                 mov     ecx, [ebp+arg_0]
.text:000140D0                 mov     edx, [ecx+50h]
.text:000140D3                 and     edx, 80h
.text:000140D9                 jnz     short loc_14152
.text:000140DB                 mov     eax, [ebp+arg_0]
.text:000140DE                 mov     ecx, [eax+0BCh]
.text:000140E4                 sar     ecx, 18h
.text:000140E7                 mov     edx, [ebp+var_9C]
.text:000140ED                 add     edx, [ebp+var_BC]
.text:000140F3                 mov     [edx], cl
.text:000140F5                 mov     eax, [ebp+arg_0]
.text:000140F8                 mov     ecx, [eax+0BCh]
.text:000140FE                 sar     ecx, 10h
.text:00014101                 mov     edx, [ebp+var_9C]
.text:00014107                 add     edx, [ebp+var_BC]
.text:0001410D                 mov     [edx+1], cl
.text:00014110                 mov     eax, [ebp+arg_0]
.text:00014113                 mov     ecx, [eax+0BCh]
.text:00014119                 sar     ecx, 8
.text:0001411C                 mov     edx, [ebp+var_9C]
.text:00014122                 add     edx, [ebp+var_BC]
.text:00014128                 mov     [edx+2], cl
.text:0001412B                 mov     eax, [ebp+var_9C]
.text:00014131                 add     eax, [ebp+var_BC]
.text:00014137                 mov     ecx, [ebp+arg_0]
.text:0001413A                 mov     dl, [ecx+0BCh]
.text:00014140                 mov     [eax+3], dl
.text:00014143                 mov     eax, [ebp+var_BC]
.text:00014149                 add     eax, 4
.text:0001414C                 mov     [ebp+var_BC], eax
.text:00014152
.text:00014152 loc_14152:                              ; CODE XREF: _do_ssh2_authconn+22B1j
.text:00014152                 mov     ecx, [ebp+arg_0]
.text:00014155                 mov     edx, [ecx+0BCh]
.text:0001415B                 push    edx             ; Size
.text:0001415C                 mov     eax, [ebp+arg_0]
.text:0001415F                 add     eax, 9Ch ; '£'
.text:00014164                 push    eax             ; Src
.text:00014165                 mov     ecx, [ebp+var_9C]
.text:0001416B                 add     ecx, [ebp+var_BC]
.text:00014171                 push    ecx             ; Dst
.text:00014172                 call    _memcpy
.text:00014177                 add     esp, 0Ch
.text:0001417A                 mov     edx, [ebp+arg_0]
.text:0001417D                 mov     eax, [ebp+var_BC]
.text:00014183                 add     eax, [edx+0BCh]
.text:00014189                 mov     [ebp+var_BC], eax
.text:0001418F                 mov     ecx, [ebp+var_4]
.text:00014192                 mov     edx, [ecx+0B8h]
.text:00014198                 mov     eax, [edx]
.text:0001419A                 sub     eax, 5
.text:0001419D                 push    eax             ; Size
.text:0001419E                 mov     ecx, [ebp+var_4]
.text:000141A1                 mov     edx, [ecx+0B8h]
.text:000141A7                 mov     eax, [edx+10h]
.text:000141AA                 add     eax, 5
.text:000141AD                 push    eax             ; Src
.text:000141AE                 mov     ecx, [ebp+var_9C]
.text:000141B4                 add     ecx, [ebp+var_BC]
.text:000141BA                 push    ecx             ; Dst
.text:000141BB                 call    _memcpy
.text:000141C0                 add     esp, 0Ch
.text:000141C3                 mov     edx, [ebp+var_4]
.text:000141C6                 mov     eax, [edx+0B8h]
.text:000141CC                 mov     ecx, [eax]
.text:000141CE                 mov     edx, [ebp+var_BC]
.text:000141D4                 lea     eax, [edx+ecx-5]
.text:000141D8                 mov     [ebp+var_BC], eax
.text:000141DE                 mov     ecx, [ebp+var_BC]
.text:000141E4                 cmp     ecx, [ebp+var_B8]
.text:000141EA                 jz      short loc_14203
.text:000141EC                 push    24C5h           ; Line
.text:000141F1                 push    offset $SG93485 ; "..\\..\\..\\ssh.c"
.text:000141F6                 push    offset $SG93486 ; "p == sigdata_len"
.text:000141FB                 call    __wassert
.text:00014200 ; ---------------------------------------------------------------------------
.text:00014200                 add     esp, 0Ch
.text:00014203
.text:00014203 loc_14203:                              ; CODE XREF: _do_ssh2_authconn+23C2j
.text:00014203                 mov     esi, esp
.text:00014205                 lea     eax, [ebp+var_B0]
.text:0001420B                 push    eax
.text:0001420C                 mov     ecx, [ebp+var_B8]
.text:00014212                 push    ecx
.text:00014213                 mov     edx, [ebp+var_9C]
.text:00014219                 push    edx
.text:0001421A                 mov     eax, [ebp+var_7C]
.text:0001421D                 mov     ecx, [eax+4]
.text:00014220                 push    ecx
.text:00014221                 mov     edx, [ebp+var_7C]
.text:00014224                 mov     eax, [edx]
.text:00014226                 mov     ecx, [eax+2Ch]
.text:00014229                 call    ecx
.text:0001422B                 add     esp, 10h
.text:0001422E                 cmp     esi, esp
.text:00014230                 call    __RTC_CheckEsp
.text:00014235                 mov     [ebp+var_98], eax
.text:0001423B                 mov     edx, [ebp+var_B0]
.text:00014241                 push    edx             ; size_t
.text:00014242                 mov     eax, [ebp+var_98]
.text:00014248                 push    eax             ; int
.text:00014249                 mov     ecx, [ebp+Size]
.text:0001424F                 push    ecx             ; int
.text:00014250                 mov     edx, [ebp+Src]
.text:00014256                 push    edx             ; int
.text:00014257                 mov     eax, [ebp+var_4]
.text:0001425A                 mov     ecx, [eax+0B8h]
.text:00014260                 push    ecx             ; int
.text:00014261                 mov     edx, [ebp+arg_0]
.text:00014264                 push    edx             ; int
.text:00014265                 call    _ssh2_add_sigblob
.text:0001426A                 add     esp, 18h
.text:0001426D                 mov     eax, [ebp+Src]
.text:00014273                 push    eax
.text:00014274                 call    _safefree
.text:00014279                 add     esp, 4
.text:0001427C                 mov     ecx, [ebp+var_98]
.text:00014282                 push    ecx
.text:00014283                 call    _safefree
.text:00014288                 add     esp, 4
.text:0001428B                 mov     edx, [ebp+var_9C]
.text:00014291                 push    edx
.text:00014292                 call    _safefree
.text:00014297                 add     esp, 4
.text:0001429A                 mov     eax, [ebp+var_4]
.text:0001429D                 mov     ecx, [eax+0B8h]
.text:000142A3                 push    ecx
.text:000142A4                 mov     edx, [ebp+arg_0]
.text:000142A7                 push    edx
.text:000142A8                 call    _ssh2_pkt_send
.text:000142AD                 add     esp, 8
.text:000142B0                 push    offset $SG93488 ; "Sent public key signature"
.text:000142B5                 mov     eax, [ebp+arg_0]
.text:000142B8                 mov     ecx, [eax+0E4h]
.text:000142BE                 push    ecx
.text:000142BF                 call    _logevent
.text:000142C4                 add     esp, 8
.text:000142C7                 mov     edx, [ebp+var_4]
.text:000142CA                 mov     dword ptr [edx+4], 1
.text:000142D1                 mov     esi, esp
.text:000142D3                 mov     eax, [ebp+var_7C]
.text:000142D6                 mov     ecx, [eax+4]
.text:000142D9                 push    ecx
.text:000142DA                 mov     edx, [ebp+var_7C]
.text:000142DD                 mov     eax, [edx]
.text:000142DF                 mov     ecx, [eax+4]
.text:000142E2                 call    ecx
.text:000142E4                 add     esp, 4
.text:000142E7                 cmp     esi, esp
.text:000142E9                 call    __RTC_CheckEsp
.text:000142EE
.text:000142EE loc_142EE:                              ; CODE XREF: _do_ssh2_authconn+215Bj
.text:000142EE                 jmp     loc_158DA
.text:000142F3 ; ---------------------------------------------------------------------------
.text:000142F3
.text:000142F3 loc_142F3:                              ; CODE XREF: _do_ssh2_authconn+1D60j
.text:000142F3                                         ; _do_ssh2_authconn+1D6Dj ...
.text:000142F3                 mov     edx, [ebp+var_4]
.text:000142F6                 cmp     dword ptr [edx+28h], 0
.text:000142FA                 jz      loc_14CF1
.text:00014300                 mov     eax, [ebp+var_4]
.text:00014303                 cmp     dword ptr [eax+2Ch], 0
.text:00014307                 jnz     loc_14CF1
.text:0001430D                 mov     ecx, [ebp+var_4]
.text:00014310                 mov     dword ptr [ecx+4], 5
.text:00014317                 mov     edx, [ebp+var_4]
.text:0001431A                 mov     dword ptr [edx+2Ch], 1
.text:00014321                 mov     eax, [ebp+var_4]
.text:00014324                 mov     dword ptr [eax+0Ch], 1
.text:0001432B                 mov     ecx, [ebp+arg_0]
.text:0001432E                 mov     dword ptr [ecx+15Ch], 3
.text:00014338                 mov     edx, [ebp+var_4]
.text:0001433B                 mov     dword ptr [edx+0C0h], 0
.text:00014345                 mov     [ebp+var_EC], 0
.text:0001434F                 jmp     short loc_14360
.text:00014351 ; ---------------------------------------------------------------------------
.text:00014351
.text:00014351 loc_14351:                              ; CODE XREF: _do_ssh2_authconn:loc_14402j
.text:00014351                 mov     eax, [ebp+var_EC]
.text:00014357                 add     eax, 1
.text:0001435A                 mov     [ebp+var_EC], eax
.text:00014360
.text:00014360 loc_14360:                              ; CODE XREF: _do_ssh2_authconn+2527j
.text:00014360                 mov     ecx, [ebp+var_EC]
.text:00014366                 cmp     ecx, dword ptr ds:_ngsslibs
.text:0001436C                 jge     $got_gsslib$93506
.text:00014372                 mov     edx, [ebp+var_EC]
.text:00014378                 push    edx
.text:00014379                 push    27h ; '''
.text:0001437B                 mov     eax, [ebp+arg_0]
.text:0001437E                 mov     ecx, [eax+21Ch]
.text:00014384                 push    ecx
.text:00014385                 call    _conf_get_int_int
.text:0001438A                 add     esp, 0Ch
.text:0001438D                 mov     [ebp+var_F4], eax
.text:00014393                 mov     [ebp+var_F0], 0
.text:0001439D                 jmp     short loc_143AE
.text:0001439F ; ---------------------------------------------------------------------------
.text:0001439F
.text:0001439F loc_1439F:                              ; CODE XREF: _do_ssh2_authconn:loc_14400j
.text:0001439F                 mov     edx, [ebp+var_F0]
.text:000143A5                 add     edx, 1
.text:000143A8                 mov     [ebp+var_F0], edx
.text:000143AE
.text:000143AE loc_143AE:                              ; CODE XREF: _do_ssh2_authconn+2575j
.text:000143AE                 mov     eax, [ebp+arg_0]
.text:000143B1                 mov     ecx, [eax+67Ch]
.text:000143B7                 mov     edx, [ebp+var_F0]
.text:000143BD                 cmp     edx, [ecx+4]
.text:000143C0                 jge     short loc_14402
.text:000143C2                 mov     eax, [ebp+arg_0]
.text:000143C5                 mov     ecx, [eax+67Ch]
.text:000143CB                 mov     edx, [ebp+var_F0]
.text:000143D1                 imul    edx, 54h
.text:000143D4                 mov     eax, [ecx]
.text:000143D6                 mov     ecx, [edx+eax]
.text:000143D9                 cmp     ecx, [ebp+var_F4]
.text:000143DF                 jnz     short loc_14400
.text:000143E1                 mov     edx, [ebp+arg_0]
.text:000143E4                 mov     eax, [edx+67Ch]
.text:000143EA                 mov     ecx, [ebp+var_F0]
.text:000143F0                 imul    ecx, 54h
.text:000143F3                 add     ecx, [eax]
.text:000143F5                 mov     edx, [ebp+var_4]
.text:000143F8                 mov     [edx+0C0h], ecx
.text:000143FE                 jmp     short $got_gsslib$93506
.text:00014400 ; ---------------------------------------------------------------------------
.text:00014400
.text:00014400 loc_14400:                              ; CODE XREF: _do_ssh2_authconn+25B7j
.text:00014400                 jmp     short loc_1439F
.text:00014402 ; ---------------------------------------------------------------------------
.text:00014402
.text:00014402 loc_14402:                              ; CODE XREF: _do_ssh2_authconn+2598j
.text:00014402                 jmp     loc_14351
.text:00014407 ; ---------------------------------------------------------------------------
.text:00014407
.text:00014407 $got_gsslib$93506:                      ; CODE XREF: _do_ssh2_authconn+2544j
.text:00014407                                         ; _do_ssh2_authconn+25D6j
.text:00014407                 mov     eax, [ebp+var_4]
.text:0001440A                 cmp     dword ptr [eax+0C0h], 0
.text:00014411                 jnz     short loc_1442A
.text:00014413                 push    24F9h           ; Line
.text:00014418                 push    offset $SG93508 ; "..\\..\\..\\ssh.c"
.text:0001441D                 push    offset $SG93509 ; "s->gsslib"
.text:00014422                 call    __wassert
.text:00014427 ; ---------------------------------------------------------------------------
.text:00014427                 add     esp, 0Ch
.text:0001442A
.text:0001442A loc_1442A:                              ; CODE XREF: _do_ssh2_authconn+25E9j
.text:0001442A                 mov     edx, [ebp+var_4]
.text:0001442D                 mov     eax, [edx+0C0h]
.text:00014433                 cmp     dword ptr [eax+4], 0
.text:00014437                 jz      short loc_14458
.text:00014439                 mov     ecx, [ebp+var_4]
.text:0001443C                 mov     edx, [ecx+0C0h]
.text:00014442                 mov     eax, [edx+4]
.text:00014445                 push    eax
.text:00014446                 mov     ecx, [ebp+arg_0]
.text:00014449                 mov     edx, [ecx+0E4h]
.text:0001444F                 push    edx
.text:00014450                 call    _logevent
.text:00014455                 add     esp, 8
.text:00014458
.text:00014458 loc_14458:                              ; CODE XREF: _do_ssh2_authconn+260Fj
.text:00014458                 push    32h ; '2'
.text:0001445A                 call    _ssh2_pkt_init
.text:0001445F                 add     esp, 4
.text:00014462                 mov     ecx, [ebp+var_4]
.text:00014465                 mov     [ecx+0B8h], eax
.text:0001446B                 mov     edx, [ebp+arg_0]
.text:0001446E                 mov     eax, [edx+224h]
.text:00014474                 push    eax             ; Str
.text:00014475                 mov     ecx, [ebp+var_4]
.text:00014478                 mov     edx, [ecx+0B8h]
.text:0001447E                 push    edx             ; int
.text:0001447F                 call    _ssh_pkt_addstring
.text:00014484                 add     esp, 8
.text:00014487                 push    offset $SG93511 ; "ssh-connection"
.text:0001448C                 mov     eax, [ebp+var_4]
.text:0001448F                 mov     ecx, [eax+0B8h]
.text:00014495                 push    ecx             ; int
.text:00014496                 call    _ssh_pkt_addstring
.text:0001449B                 add     esp, 8
.text:0001449E                 push    offset $SG93512 ; "gssapi-with-mic"
.text:000144A3                 mov     edx, [ebp+var_4]
.text:000144A6                 mov     eax, [edx+0B8h]
.text:000144AC                 push    eax             ; int
.text:000144AD                 call    _ssh_pkt_addstring
.text:000144B2                 add     esp, 8
.text:000144B5                 push    offset $SG93513 ; "Attempting GSSAPI authentication"
.text:000144BA                 mov     ecx, [ebp+arg_0]
.text:000144BD                 mov     edx, [ecx+0E4h]
.text:000144C3                 push    edx
.text:000144C4                 call    _logevent
.text:000144C9                 add     esp, 8
.text:000144CC                 mov     eax, [ebp+var_4]
.text:000144CF                 add     eax, 0C8h ; '+'
.text:000144D4                 mov     esi, esp
.text:000144D6                 push    eax
.text:000144D7                 mov     ecx, [ebp+var_4]
.text:000144DA                 mov     edx, [ecx+0C0h]
.text:000144E0                 push    edx
.text:000144E1                 mov     eax, [ebp+var_4]
.text:000144E4                 mov     ecx, [eax+0C0h]
.text:000144EA                 mov     edx, [ecx+8]
.text:000144ED                 call    edx
.text:000144EF                 add     esp, 8
.text:000144F2                 cmp     esi, esp
.text:000144F4                 call    __RTC_CheckEsp
.text:000144F9                 push    1
.text:000144FB                 mov     eax, [ebp+var_4]
.text:000144FE                 mov     ecx, [eax+0B8h]
.text:00014504                 push    ecx
.text:00014505                 call    _ssh_pkt_adduint32
.text:0001450A                 add     esp, 8
.text:0001450D                 mov     edx, [ebp+var_4]
.text:00014510                 mov     eax, [edx+0C8h]
.text:00014516                 add     eax, 2
.text:00014519                 push    eax
.text:0001451A                 mov     ecx, [ebp+var_4]
.text:0001451D                 mov     edx, [ecx+0B8h]
.text:00014523                 push    edx
.text:00014524                 call    _ssh_pkt_adduint32
.text:00014529                 add     esp, 8
.text:0001452C                 push    6               ; Src
.text:0001452E                 mov     eax, [ebp+var_4]
.text:00014531                 mov     ecx, [eax+0B8h]
.text:00014537                 push    ecx             ; int
.text:00014538                 call    _ssh_pkt_addbyte
.text:0001453D                 add     esp, 8
.text:00014540                 mov     edx, [ebp+var_4]
.text:00014543                 movzx   eax, byte ptr [edx+0C8h]
.text:0001454A                 push    eax             ; Src
.text:0001454B                 mov     ecx, [ebp+var_4]
.text:0001454E                 mov     edx, [ecx+0B8h]
.text:00014554                 push    edx             ; int
.text:00014555                 call    _ssh_pkt_addbyte
.text:0001455A                 add     esp, 8
.text:0001455D                 mov     eax, [ebp+var_4]
.text:00014560                 mov     ecx, [eax+0C8h]
.text:00014566                 push    ecx             ; Size
.text:00014567                 mov     edx, [ebp+var_4]
.text:0001456A                 mov     eax, [edx+0CCh]
.text:00014570                 push    eax             ; Src
.text:00014571                 mov     ecx, [ebp+var_4]
.text:00014574                 mov     edx, [ecx+0B8h]
.text:0001457A                 push    edx             ; int
.text:0001457B                 call    _ssh_pkt_adddata
.text:00014580                 add     esp, 0Ch
.text:00014583                 mov     eax, [ebp+var_4]
.text:00014586                 mov     ecx, [eax+0B8h]
.text:0001458C                 push    ecx
.text:0001458D                 mov     edx, [ebp+arg_0]
.text:00014590                 push    edx
.text:00014591                 call    _ssh2_pkt_send
.text:00014596                 add     esp, 8
.text:00014599
.text:00014599 loc_14599:                              ; CODE XREF: _do_ssh2_authconn+2781j
.text:00014599                                         ; _do_ssh2_authconn+2787j
.text:00014599                 mov     eax, [ebp+var_8]
.text:0001459C                 mov     dword ptr [eax], 2516h
.text:000145A2                 jmp     loc_1626E
.text:000145A7 ; ---------------------------------------------------------------------------
.text:000145A7
.text:000145A7 loc_145A7:                              ; CODE XREF: _do_ssh2_authconn+176j
.text:000145A7                 xor     ecx, ecx
.text:000145A9                 jnz     short loc_14599
.text:000145AB                 cmp     [ebp+arg_C], 0
.text:000145AF                 jz      short loc_14599
.text:000145B1                 mov     edx, [ebp+arg_C]
.text:000145B4                 cmp     dword ptr [edx+8], 3Ch ; '<'
.text:000145B8                 jz      short loc_145D6
.text:000145BA                 push    offset $SG93523 ; "GSSAPI authentication request refused"
.text:000145BF                 mov     eax, [ebp+arg_0]
.text:000145C2                 mov     ecx, [eax+0E4h]
.text:000145C8                 push    ecx
.text:000145C9                 call    _logevent
.text:000145CE                 add     esp, 8
.text:000145D1                 jmp     loc_12C39
.text:000145D6 ; ---------------------------------------------------------------------------
.text:000145D6
.text:000145D6 loc_145D6:                              ; CODE XREF: _do_ssh2_authconn+2790j
.text:000145D6                 lea     edx, [ebp+var_C8]
.text:000145DC                 push    edx
.text:000145DD                 lea     eax, [ebp+var_D4]
.text:000145E3                 push    eax
.text:000145E4                 mov     ecx, [ebp+arg_C]
.text:000145E7                 push    ecx
.text:000145E8                 call    _ssh_pkt_getstring
.text:000145ED                 add     esp, 0Ch
.text:000145F0                 mov     edx, [ebp+var_4]
.text:000145F3                 mov     eax, [ebp+var_D4]
.text:000145F9                 mov     [edx+0D4h], eax
.text:000145FF                 mov     ecx, [ebp+var_4]
.text:00014602                 mov     edx, [ebp+var_C8]
.text:00014608                 mov     [ecx+0D0h], edx
.text:0001460E                 mov     eax, [ebp+var_4]
.text:00014611                 mov     ecx, [eax+0C8h]
.text:00014617                 add     ecx, 2
.text:0001461A                 mov     edx, [ebp+var_4]
.text:0001461D                 cmp     [edx+0D0h], ecx
.text:00014623                 jnz     short loc_1467B
.text:00014625                 mov     eax, [ebp+var_4]
.text:00014628                 mov     ecx, [eax+0D4h]
.text:0001462E                 movsx   edx, byte ptr [ecx]
.text:00014631                 cmp     edx, 6
.text:00014634                 jnz     short loc_1467B
.text:00014636                 mov     eax, [ebp+var_4]
.text:00014639                 mov     ecx, [eax+0D4h]
.text:0001463F                 movsx   edx, byte ptr [ecx+1]
.text:00014643                 mov     eax, [ebp+var_4]
.text:00014646                 cmp     edx, [eax+0C8h]
.text:0001464C                 jnz     short loc_1467B
.text:0001464E                 mov     ecx, [ebp+var_4]
.text:00014651                 mov     edx, [ecx+0C8h]
.text:00014657                 push    edx             ; Size
.text:00014658                 mov     eax, [ebp+var_4]
.text:0001465B                 mov     ecx, [eax+0CCh]
.text:00014661                 push    ecx             ; Buf2
.text:00014662                 mov     edx, [ebp+var_4]
.text:00014665                 mov     eax, [edx+0D4h]
.text:0001466B                 add     eax, 2
.text:0001466E                 push    eax             ; Buf1
.text:0001466F                 call    _memcmp
.text:00014674                 add     esp, 0Ch
.text:00014677                 test    eax, eax
.text:00014679                 jz      short loc_14697
.text:0001467B
.text:0001467B loc_1467B:                              ; CODE XREF: _do_ssh2_authconn+27FBj
.text:0001467B                                         ; _do_ssh2_authconn+280Cj ...
.text:0001467B                 push    offset $SG93529 ; "GSSAPI authentication - wrong response "...
.text:00014680                 mov     ecx, [ebp+arg_0]
.text:00014683                 mov     edx, [ecx+0E4h]
.text:00014689                 push    edx
.text:0001468A                 call    _logevent
.text:0001468F                 add     esp, 8
.text:00014692                 jmp     loc_12C39
.text:00014697 ; ---------------------------------------------------------------------------
.text:00014697
.text:00014697 loc_14697:                              ; CODE XREF: _do_ssh2_authconn+2851j
.text:00014697                 mov     eax, [ebp+var_4]
.text:0001469A                 add     eax, 0E0h ; 'a'
.text:0001469F                 mov     esi, esp
.text:000146A1                 push    eax
.text:000146A2                 mov     ecx, [ebp+arg_0]
.text:000146A5                 mov     edx, [ecx+678h]
.text:000146AB                 push    edx
.text:000146AC                 mov     eax, [ebp+var_4]
.text:000146AF                 mov     ecx, [eax+0C0h]
.text:000146B5                 push    ecx
.text:000146B6                 mov     edx, [ebp+var_4]
.text:000146B9                 mov     eax, [edx+0C0h]
.text:000146BF                 mov     ecx, [eax+0Ch]
.text:000146C2                 call    ecx
.text:000146C4                 add     esp, 0Ch
.text:000146C7                 cmp     esi, esp
.text:000146C9                 call    __RTC_CheckEsp
.text:000146CE                 mov     edx, [ebp+var_4]
.text:000146D1                 mov     [edx+0E4h], eax
.text:000146D7                 mov     eax, [ebp+var_4]
.text:000146DA                 cmp     dword ptr [eax+0E4h], 0
.text:000146E1                 jz      short loc_14724
.text:000146E3                 mov     ecx, [ebp+var_4]
.text:000146E6                 cmp     dword ptr [ecx+0E4h], 3
.text:000146ED                 jnz     short loc_14708
.text:000146EF                 push    offset $SG93532 ; "GSSAPI import name failed - Bad service"...
.text:000146F4                 mov     edx, [ebp+arg_0]
.text:000146F7                 mov     eax, [edx+0E4h]
.text:000146FD                 push    eax
.text:000146FE                 call    _logevent
.text:00014703                 add     esp, 8
.text:00014706                 jmp     short loc_1471F
.text:00014708 ; ---------------------------------------------------------------------------
.text:00014708
.text:00014708 loc_14708:                              ; CODE XREF: _do_ssh2_authconn+28C5j
.text:00014708                 push    offset $SG93534 ; "GSSAPI import name failed"
.text:0001470D                 mov     ecx, [ebp+arg_0]
.text:00014710                 mov     edx, [ecx+0E4h]
.text:00014716                 push    edx
.text:00014717                 call    _logevent
.text:0001471C                 add     esp, 8
.text:0001471F
.text:0001471F loc_1471F:                              ; CODE XREF: _do_ssh2_authconn+28DEj
.text:0001471F                 jmp     loc_12C39
.text:00014724 ; ---------------------------------------------------------------------------
.text:00014724
.text:00014724 loc_14724:                              ; CODE XREF: _do_ssh2_authconn+28B9j
.text:00014724                 mov     eax, [ebp+var_4]
.text:00014727                 add     eax, 0C4h ; '-'
.text:0001472C                 mov     esi, esp
.text:0001472E                 push    eax
.text:0001472F                 mov     ecx, [ebp+var_4]
.text:00014732                 mov     edx, [ecx+0C0h]
.text:00014738                 push    edx
.text:00014739                 mov     eax, [ebp+var_4]
.text:0001473C                 mov     ecx, [eax+0C0h]
.text:00014742                 mov     edx, [ecx+1Ch]
.text:00014745                 call    edx
.text:00014747                 add     esp, 8
.text:0001474A                 cmp     esi, esp
.text:0001474C                 call    __RTC_CheckEsp
.text:00014751                 mov     ecx, [ebp+var_4]
.text:00014754                 mov     [ecx+0E4h], eax
.text:0001475A                 mov     edx, [ebp+var_4]
.text:0001475D                 cmp     dword ptr [edx+0E4h], 0
.text:00014764                 jz      short loc_147B0
.text:00014766                 push    offset $SG93536 ; "GSSAPI authentication failed to get cre"...
.text:0001476B                 mov     eax, [ebp+arg_0]
.text:0001476E                 mov     ecx, [eax+0E4h]
.text:00014774                 push    ecx
.text:00014775                 call    _logevent
.text:0001477A                 add     esp, 8
.text:0001477D                 mov     edx, [ebp+var_4]
.text:00014780                 add     edx, 0E0h ; 'a'
.text:00014786                 mov     esi, esp
.text:00014788                 push    edx
.text:00014789                 mov     eax, [ebp+var_4]
.text:0001478C                 mov     ecx, [eax+0C0h]
.text:00014792                 push    ecx
.text:00014793                 mov     edx, [ebp+var_4]
.text:00014796                 mov     eax, [edx+0C0h]
.text:0001479C                 mov     ecx, [eax+10h]
.text:0001479F                 call    ecx
.text:000147A1                 add     esp, 8
.text:000147A4                 cmp     esi, esp
.text:000147A6                 call    __RTC_CheckEsp
.text:000147AB                 jmp     loc_12C39
.text:000147B0 ; ---------------------------------------------------------------------------
.text:000147B0
.text:000147B0 loc_147B0:                              ; CODE XREF: _do_ssh2_authconn+293Cj
.text:000147B0                                         ; _do_ssh2_authconn+29A4j
.text:000147B0                 mov     edx, [ebp+var_4]
.text:000147B3                 mov     dword ptr [edx+0D0h], 0
.text:000147BD                 mov     eax, [ebp+var_4]
.text:000147C0                 mov     dword ptr [eax+0D4h], 0
.text:000147CA                 xor     ecx, ecx
.text:000147CC                 jnz     short loc_147B0
.text:000147CE
.text:000147CE loc_147CE:                              ; CODE XREF: _do_ssh2_authconn+29C2j
.text:000147CE                 mov     edx, [ebp+var_4]
.text:000147D1                 mov     dword ptr [edx+0D8h], 0
.text:000147DB                 mov     eax, [ebp+var_4]
.text:000147DE                 mov     dword ptr [eax+0DCh], 0
.text:000147E8                 xor     ecx, ecx
.text:000147EA                 jnz     short loc_147CE
.text:000147EC
.text:000147EC loc_147EC:                              ; CODE XREF: _do_ssh2_authconn+2C1Ej
.text:000147EC                 mov     edx, [ebp+var_4]
.text:000147EF                 add     edx, 0D8h ; '+'
.text:000147F5                 mov     esi, esp
.text:000147F7                 push    edx
.text:000147F8                 mov     eax, [ebp+var_4]
.text:000147FB                 add     eax, 0D0h ; '-'
.text:00014800                 push    eax
.text:00014801                 push    26h ; '&'
.text:00014803                 mov     ecx, [ebp+arg_0]
.text:00014806                 mov     edx, [ecx+21Ch]
.text:0001480C                 push    edx
.text:0001480D                 call    _conf_get_int
.text:00014812                 add     esp, 8
.text:00014815                 push    eax
.text:00014816                 mov     eax, [ebp+var_4]
.text:00014819                 mov     ecx, [eax+0E0h]
.text:0001481F                 push    ecx
.text:00014820                 mov     edx, [ebp+var_4]
.text:00014823                 add     edx, 0C4h ; '-'
.text:00014829                 push    edx
.text:0001482A                 mov     eax, [ebp+var_4]
.text:0001482D                 mov     ecx, [eax+0C0h]
.text:00014833                 push    ecx
.text:00014834                 mov     edx, [ebp+var_4]
.text:00014837                 mov     eax, [edx+0C0h]
.text:0001483D                 mov     ecx, [eax+14h]
.text:00014840                 call    ecx
.text:00014842                 add     esp, 18h
.text:00014845                 cmp     esi, esp
.text:00014847                 call    __RTC_CheckEsp
.text:0001484C                 mov     edx, [ebp+var_4]
.text:0001484F                 mov     [edx+0E4h], eax
.text:00014855                 mov     eax, [ebp+var_4]
.text:00014858                 cmp     dword ptr [eax+0E4h], 0
.text:0001485F                 jz      loc_148FB
.text:00014865                 mov     ecx, [ebp+var_4]
.text:00014868                 cmp     dword ptr [ecx+0E4h], 1
.text:0001486F                 jz      loc_148FB
.text:00014875                 push    offset $SG93549 ; "GSSAPI authentication initialisation fa"...
.text:0001487A                 mov     edx, [ebp+arg_0]
.text:0001487D                 mov     eax, [edx+0E4h]
.text:00014883                 push    eax
.text:00014884                 call    _logevent
.text:00014889                 add     esp, 8
.text:0001488C                 mov     ecx, [ebp+var_4]
.text:0001488F                 add     ecx, 0C8h ; '+'
.text:00014895                 mov     esi, esp
.text:00014897                 push    ecx
.text:00014898                 mov     edx, [ebp+var_4]
.text:0001489B                 mov     eax, [edx+0C4h]
.text:000148A1                 push    eax
.text:000148A2                 mov     ecx, [ebp+var_4]
.text:000148A5                 mov     edx, [ecx+0C0h]
.text:000148AB                 push    edx
.text:000148AC                 mov     eax, [ebp+var_4]
.text:000148AF                 mov     ecx, [eax+0C0h]
.text:000148B5                 mov     edx, [ecx+2Ch]
.text:000148B8                 call    edx
.text:000148BA                 add     esp, 0Ch
.text:000148BD                 cmp     esi, esp
.text:000148BF                 call    __RTC_CheckEsp
.text:000148C4                 test    eax, eax
.text:000148C6                 jnz     short loc_148F6
.text:000148C8                 mov     eax, [ebp+var_4]
.text:000148CB                 mov     ecx, [eax+0CCh]
.text:000148D1                 push    ecx
.text:000148D2                 mov     edx, [ebp+arg_0]
.text:000148D5                 mov     eax, [edx+0E4h]
.text:000148DB                 push    eax
.text:000148DC                 call    _logevent
.text:000148E1                 add     esp, 8
.text:000148E4                 mov     ecx, [ebp+var_4]
.text:000148E7                 mov     edx, [ecx+0CCh]
.text:000148ED                 push    edx
.text:000148EE                 call    _safefree
.text:000148F3                 add     esp, 4
.text:000148F6
.text:000148F6 loc_148F6:                              ; CODE XREF: _do_ssh2_authconn+2A9Ej
.text:000148F6                 jmp     loc_14A4C
.text:000148FB ; ---------------------------------------------------------------------------
.text:000148FB
.text:000148FB loc_148FB:                              ; CODE XREF: _do_ssh2_authconn+2A37j
.text:000148FB                                         ; _do_ssh2_authconn+2A47j
.text:000148FB                 push    offset $SG93551 ; "GSSAPI authentication initialised"
.text:00014900                 mov     eax, [ebp+arg_0]
.text:00014903                 mov     ecx, [eax+0E4h]
.text:00014909                 push    ecx
.text:0001490A                 call    _logevent
.text:0001490F                 add     esp, 8
.text:00014912                 mov     edx, [ebp+var_4]
.text:00014915                 cmp     dword ptr [edx+0D8h], 0
.text:0001491C                 jz      loc_149B1
.text:00014922                 push    3Dh ; '='
.text:00014924                 call    _ssh2_pkt_init
.text:00014929                 add     esp, 4
.text:0001492C                 mov     ecx, [ebp+var_4]
.text:0001492F                 mov     [ecx+0B8h], eax
.text:00014935                 mov     edx, [ebp+var_4]
.text:00014938                 mov     eax, [edx+0B8h]
.text:0001493E                 push    eax
.text:0001493F                 call    _ssh_pkt_addstring_start
.text:00014944                 add     esp, 4
.text:00014947                 mov     ecx, [ebp+var_4]
.text:0001494A                 mov     edx, [ecx+0D8h]
.text:00014950                 push    edx             ; Size
.text:00014951                 mov     eax, [ebp+var_4]
.text:00014954                 mov     ecx, [eax+0DCh]
.text:0001495A                 push    ecx             ; Src
.text:0001495B                 mov     edx, [ebp+var_4]
.text:0001495E                 mov     eax, [edx+0B8h]
.text:00014964                 push    eax             ; int
.text:00014965                 call    _ssh_pkt_addstring_data
.text:0001496A                 add     esp, 0Ch
.text:0001496D                 mov     ecx, [ebp+var_4]
.text:00014970                 mov     edx, [ecx+0B8h]
.text:00014976                 push    edx
.text:00014977                 mov     eax, [ebp+arg_0]
.text:0001497A                 push    eax
.text:0001497B                 call    _ssh2_pkt_send
.text:00014980                 add     esp, 8
.text:00014983                 mov     ecx, [ebp+var_4]
.text:00014986                 add     ecx, 0D8h ; '+'
.text:0001498C                 mov     esi, esp
.text:0001498E                 push    ecx
.text:0001498F                 mov     edx, [ebp+var_4]
.text:00014992                 mov     eax, [edx+0C0h]
.text:00014998                 push    eax
.text:00014999                 mov     ecx, [ebp+var_4]
.text:0001499C                 mov     edx, [ecx+0C0h]
.text:000149A2                 mov     eax, [edx+18h]
.text:000149A5                 call    eax
.text:000149A7                 add     esp, 8
.text:000149AA                 cmp     esi, esp
.text:000149AC                 call    __RTC_CheckEsp
.text:000149B1
.text:000149B1 loc_149B1:                              ; CODE XREF: _do_ssh2_authconn+2AF4j
.text:000149B1                 mov     ecx, [ebp+var_4]
.text:000149B4                 cmp     dword ptr [ecx+0E4h], 1
.text:000149BB                 jnz     short loc_14A3C
.text:000149BD
.text:000149BD loc_149BD:                              ; CODE XREF: _do_ssh2_authconn+2BA5j
.text:000149BD                                         ; _do_ssh2_authconn+2BABj
.text:000149BD                 mov     edx, [ebp+var_8]
.text:000149C0                 mov     dword ptr [edx], 2567h
.text:000149C6                 jmp     loc_1626E
.text:000149CB ; ---------------------------------------------------------------------------
.text:000149CB
.text:000149CB loc_149CB:                              ; CODE XREF: _do_ssh2_authconn+96j
.text:000149CB                 xor     eax, eax
.text:000149CD                 jnz     short loc_149BD
.text:000149CF                 cmp     [ebp+arg_C], 0
.text:000149D3                 jz      short loc_149BD
.text:000149D5                 mov     ecx, [ebp+arg_C]
.text:000149D8                 cmp     dword ptr [ecx+8], 3Dh ; '='
.text:000149DC                 jz      short loc_14A04
.text:000149DE                 push    offset $SG93562 ; "GSSAPI authentication - bad server resp"...
.text:000149E3                 mov     edx, [ebp+arg_0]
.text:000149E6                 mov     eax, [edx+0E4h]
.text:000149EC                 push    eax
.text:000149ED                 call    _logevent
.text:000149F2                 add     esp, 8
.text:000149F5                 mov     ecx, [ebp+var_4]
.text:000149F8                 mov     dword ptr [ecx+0E4h], 4
.text:00014A02                 jmp     short loc_14A4C
.text:00014A04 ; ---------------------------------------------------------------------------
.text:00014A04
.text:00014A04 loc_14A04:                              ; CODE XREF: _do_ssh2_authconn+2BB4j
.text:00014A04                 lea     edx, [ebp+var_C8]
.text:00014A0A                 push    edx
.text:00014A0B                 lea     eax, [ebp+var_D4]
.text:00014A11                 push    eax
.text:00014A12                 mov     ecx, [ebp+arg_C]
.text:00014A15                 push    ecx
.text:00014A16                 call    _ssh_pkt_getstring
.text:00014A1B                 add     esp, 0Ch
.text:00014A1E                 mov     edx, [ebp+var_4]
.text:00014A21                 mov     eax, [ebp+var_D4]
.text:00014A27                 mov     [edx+0D4h], eax
.text:00014A2D                 mov     ecx, [ebp+var_4]
.text:00014A30                 mov     edx, [ebp+var_C8]
.text:00014A36                 mov     [ecx+0D0h], edx
.text:00014A3C
.text:00014A3C loc_14A3C:                              ; CODE XREF: _do_ssh2_authconn+2B93j
.text:00014A3C                 mov     eax, [ebp+var_4]
.text:00014A3F                 cmp     dword ptr [eax+0E4h], 1
.text:00014A46                 jz      loc_147EC
.text:00014A4C
.text:00014A4C loc_14A4C:                              ; CODE XREF: _do_ssh2_authconn:loc_148F6j
.text:00014A4C                                         ; _do_ssh2_authconn+2BDAj
.text:00014A4C                 mov     ecx, [ebp+var_4]
.text:00014A4F                 cmp     dword ptr [ecx+0E4h], 0
.text:00014A56                 jz      short loc_14AB9
.text:00014A58                 mov     edx, [ebp+var_4]
.text:00014A5B                 add     edx, 0E0h ; 'a'
.text:00014A61                 mov     esi, esp
.text:00014A63                 push    edx
.text:00014A64                 mov     eax, [ebp+var_4]
.text:00014A67                 mov     ecx, [eax+0C0h]
.text:00014A6D                 push    ecx
.text:00014A6E                 mov     edx, [ebp+var_4]
.text:00014A71                 mov     eax, [edx+0C0h]
.text:00014A77                 mov     ecx, [eax+10h]
.text:00014A7A                 call    ecx
.text:00014A7C                 add     esp, 8
.text:00014A7F                 cmp     esi, esp
.text:00014A81                 call    __RTC_CheckEsp
.text:00014A86                 mov     edx, [ebp+var_4]
.text:00014A89                 add     edx, 0C4h ; '-'
.text:00014A8F                 mov     esi, esp
.text:00014A91                 push    edx
.text:00014A92                 mov     eax, [ebp+var_4]
.text:00014A95                 mov     ecx, [eax+0C0h]
.text:00014A9B                 push    ecx
.text:00014A9C                 mov     edx, [ebp+var_4]
.text:00014A9F                 mov     eax, [edx+0C0h]
.text:00014AA5                 mov     ecx, [eax+20h]
.text:00014AA8                 call    ecx
.text:00014AAA                 add     esp, 8
.text:00014AAD                 cmp     esi, esp
.text:00014AAF                 call    __RTC_CheckEsp
.text:00014AB4                 jmp     loc_12C39
.text:00014AB9 ; ---------------------------------------------------------------------------
.text:00014AB9
.text:00014AB9 loc_14AB9:                              ; CODE XREF: _do_ssh2_authconn+2C2Ej
.text:00014AB9                 push    offset $SG93564 ; "GSSAPI authentication loop finished OK"
.text:00014ABE                 mov     edx, [ebp+arg_0]
.text:00014AC1                 mov     eax, [edx+0E4h]
.text:00014AC7                 push    eax
.text:00014AC8                 call    _logevent
.text:00014ACD                 add     esp, 8
.text:00014AD0                 push    0
.text:00014AD2                 call    _ssh2_pkt_init
.text:00014AD7                 add     esp, 4
.text:00014ADA                 mov     ecx, [ebp+var_4]
.text:00014ADD                 mov     [ecx+0B8h], eax
.text:00014AE3                 mov     edx, [ebp+var_4]
.text:00014AE6                 mov     eax, [edx+0B8h]
.text:00014AEC                 mov     ecx, [eax]
.text:00014AEE                 mov     [ebp+var_C0], ecx
.text:00014AF4                 mov     edx, [ebp+var_4]
.text:00014AF7                 mov     eax, [edx+0B8h]
.text:00014AFD                 push    eax
.text:00014AFE                 call    _ssh_pkt_addstring_start
.text:00014B03                 add     esp, 4
.text:00014B06                 mov     ecx, [ebp+arg_0]
.text:00014B09                 mov     edx, [ecx+0BCh]
.text:00014B0F                 push    edx             ; Size
.text:00014B10                 mov     eax, [ebp+arg_0]
.text:00014B13                 add     eax, 9Ch ; '£'
.text:00014B18                 push    eax             ; Src
.text:00014B19                 mov     ecx, [ebp+var_4]
.text:00014B1C                 mov     edx, [ecx+0B8h]
.text:00014B22                 push    edx             ; int
.text:00014B23                 call    _ssh_pkt_addstring_data
.text:00014B28                 add     esp, 0Ch
.text:00014B2B                 push    32h ; '2'       ; Src
.text:00014B2D                 mov     eax, [ebp+var_4]
.text:00014B30                 mov     ecx, [eax+0B8h]
.text:00014B36                 push    ecx             ; int
.text:00014B37                 call    _ssh_pkt_addbyte
.text:00014B3C                 add     esp, 8
.text:00014B3F                 mov     edx, [ebp+arg_0]
.text:00014B42                 mov     eax, [edx+224h]
.text:00014B48                 push    eax             ; Str
.text:00014B49                 mov     ecx, [ebp+var_4]
.text:00014B4C                 mov     edx, [ecx+0B8h]
.text:00014B52                 push    edx             ; int
.text:00014B53                 call    _ssh_pkt_addstring
.text:00014B58                 add     esp, 8
.text:00014B5B                 push    offset $SG93566 ; "ssh-connection"
.text:00014B60                 mov     eax, [ebp+var_4]
.text:00014B63                 mov     ecx, [eax+0B8h]
.text:00014B69                 push    ecx             ; int
.text:00014B6A                 call    _ssh_pkt_addstring
.text:00014B6F                 add     esp, 8
.text:00014B72                 push    offset $SG93567 ; "gssapi-with-mic"
.text:00014B77                 mov     edx, [ebp+var_4]
.text:00014B7A                 mov     eax, [edx+0B8h]
.text:00014B80                 push    eax             ; int
.text:00014B81                 call    _ssh_pkt_addstring
.text:00014B86                 add     esp, 8
.text:00014B89                 mov     ecx, [ebp+var_4]
.text:00014B8C                 mov     edx, [ecx+0B8h]
.text:00014B92                 mov     eax, [edx+10h]
.text:00014B95                 add     eax, [ebp+var_C0]
.text:00014B9B                 mov     ecx, [ebp+var_4]
.text:00014B9E                 mov     [ecx+0CCh], eax
.text:00014BA4                 mov     edx, [ebp+var_4]
.text:00014BA7                 mov     eax, [edx+0B8h]
.text:00014BAD                 mov     ecx, [eax]
.text:00014BAF                 sub     ecx, [ebp+var_C0]
.text:00014BB5                 mov     edx, [ebp+var_4]
.text:00014BB8                 mov     [edx+0C8h], ecx
.text:00014BBE                 mov     esi, esp
.text:00014BC0                 lea     eax, [ebp+var_E4]
.text:00014BC6                 push    eax
.text:00014BC7                 mov     ecx, [ebp+var_4]
.text:00014BCA                 add     ecx, 0C8h ; '+'
.text:00014BD0                 push    ecx
.text:00014BD1                 mov     edx, [ebp+var_4]
.text:00014BD4                 mov     eax, [edx+0C4h]
.text:00014BDA                 push    eax
.text:00014BDB                 mov     ecx, [ebp+var_4]
.text:00014BDE                 mov     edx, [ecx+0C0h]
.text:00014BE4                 push    edx
.text:00014BE5                 mov     eax, [ebp+var_4]
.text:00014BE8                 mov     ecx, [eax+0C0h]
.text:00014BEE                 mov     edx, [ecx+24h]
.text:00014BF1                 call    edx
.text:00014BF3                 add     esp, 10h
.text:00014BF6                 cmp     esi, esp
.text:00014BF8                 call    __RTC_CheckEsp
.text:00014BFD                 push    42h ; 'B'
.text:00014BFF                 call    _ssh2_pkt_init
.text:00014C04                 add     esp, 4
.text:00014C07                 mov     ecx, [ebp+var_4]
.text:00014C0A                 mov     [ecx+0B8h], eax
.text:00014C10                 mov     edx, [ebp+var_4]
.text:00014C13                 mov     eax, [edx+0B8h]
.text:00014C19                 push    eax
.text:00014C1A                 call    _ssh_pkt_addstring_start
.text:00014C1F                 add     esp, 4
.text:00014C22                 mov     ecx, [ebp+var_E4]
.text:00014C28                 push    ecx             ; Size
.text:00014C29                 mov     edx, [ebp+var_E0]
.text:00014C2F                 push    edx             ; Src
.text:00014C30                 mov     eax, [ebp+var_4]
.text:00014C33                 mov     ecx, [eax+0B8h]
.text:00014C39                 push    ecx             ; int
.text:00014C3A                 call    _ssh_pkt_addstring_data
.text:00014C3F                 add     esp, 0Ch
.text:00014C42                 mov     edx, [ebp+var_4]
.text:00014C45                 mov     eax, [edx+0B8h]
.text:00014C4B                 push    eax
.text:00014C4C                 mov     ecx, [ebp+arg_0]
.text:00014C4F                 push    ecx
.text:00014C50                 call    _ssh2_pkt_send
.text:00014C55                 add     esp, 8
.text:00014C58                 mov     esi, esp
.text:00014C5A                 lea     edx, [ebp+var_E4]
.text:00014C60                 push    edx
.text:00014C61                 mov     eax, [ebp+var_4]
.text:00014C64                 mov     ecx, [eax+0C0h]
.text:00014C6A                 push    ecx
.text:00014C6B                 mov     edx, [ebp+var_4]
.text:00014C6E                 mov     eax, [edx+0C0h]
.text:00014C74                 mov     ecx, [eax+28h]
.text:00014C77                 call    ecx
.text:00014C79                 add     esp, 8
.text:00014C7C                 cmp     esi, esp
.text:00014C7E                 call    __RTC_CheckEsp
.text:00014C83                 mov     edx, [ebp+var_4]
.text:00014C86                 mov     dword ptr [edx+0Ch], 0
.text:00014C8D                 mov     eax, [ebp+var_4]
.text:00014C90                 add     eax, 0E0h ; 'a'
.text:00014C95                 mov     esi, esp
.text:00014C97                 push    eax
.text:00014C98                 mov     ecx, [ebp+var_4]
.text:00014C9B                 mov     edx, [ecx+0C0h]
.text:00014CA1                 push    edx
.text:00014CA2                 mov     eax, [ebp+var_4]
.text:00014CA5                 mov     ecx, [eax+0C0h]
.text:00014CAB                 mov     edx, [ecx+10h]
.text:00014CAE                 call    edx
.text:00014CB0                 add     esp, 8
.text:00014CB3                 cmp     esi, esp
.text:00014CB5                 call    __RTC_CheckEsp
.text:00014CBA                 mov     eax, [ebp+var_4]
.text:00014CBD                 add     eax, 0C4h ; '-'
.text:00014CC2                 mov     esi, esp
.text:00014CC4                 push    eax
.text:00014CC5                 mov     ecx, [ebp+var_4]
.text:00014CC8                 mov     edx, [ecx+0C0h]
.text:00014CCE                 push    edx
.text:00014CCF                 mov     eax, [ebp+var_4]
.text:00014CD2                 mov     ecx, [eax+0C0h]
.text:00014CD8                 mov     edx, [ecx+20h]
.text:00014CDB                 call    edx
.text:00014CDD                 add     esp, 8
.text:00014CE0                 cmp     esi, esp
.text:00014CE2                 call    __RTC_CheckEsp
.text:00014CE7                 jmp     loc_12C39
.text:00014CEC ; ---------------------------------------------------------------------------
.text:00014CEC                 jmp     loc_158DA
.text:00014CF1 ; ---------------------------------------------------------------------------
.text:00014CF1
.text:00014CF1 loc_14CF1:                              ; CODE XREF: _do_ssh2_authconn+24D2j
.text:00014CF1                                         ; _do_ssh2_authconn+24DFj
.text:00014CF1                 mov     eax, [ebp+var_4]
.text:00014CF4                 cmp     dword ptr [eax+1Ch], 0
.text:00014CF8                 jz      loc_151C5
.text:00014CFE                 mov     ecx, [ebp+var_4]
.text:00014D01                 cmp     dword ptr [ecx+30h], 0
.text:00014D05                 jnz     loc_151C5
.text:00014D0B                 mov     edx, [ebp+var_4]
.text:00014D0E                 mov     dword ptr [edx+4], 6
.text:00014D15                 mov     eax, [ebp+arg_0]
.text:00014D18                 mov     dword ptr [eax+15Ch], 4
.text:00014D22                 push    32h ; '2'
.text:00014D24                 call    _ssh2_pkt_init
.text:00014D29                 add     esp, 4
.text:00014D2C                 mov     ecx, [ebp+var_4]
.text:00014D2F                 mov     [ecx+0B8h], eax
.text:00014D35                 mov     edx, [ebp+arg_0]
.text:00014D38                 mov     eax, [edx+224h]
.text:00014D3E                 push    eax             ; Str
.text:00014D3F                 mov     ecx, [ebp+var_4]
.text:00014D42                 mov     edx, [ecx+0B8h]
.text:00014D48                 push    edx             ; int
.text:00014D49                 call    _ssh_pkt_addstring
.text:00014D4E                 add     esp, 8
.text:00014D51                 push    offset $SG93571 ; "ssh-connection"
.text:00014D56                 mov     eax, [ebp+var_4]
.text:00014D59                 mov     ecx, [eax+0B8h]
.text:00014D5F                 push    ecx             ; int
.text:00014D60                 call    _ssh_pkt_addstring
.text:00014D65                 add     esp, 8
.text:00014D68                 push    offset $SG93572 ; "keyboard-interactive"
.text:00014D6D                 mov     edx, [ebp+var_4]
.text:00014D70                 mov     eax, [edx+0B8h]
.text:00014D76                 push    eax             ; int
.text:00014D77                 call    _ssh_pkt_addstring
.text:00014D7C                 add     esp, 8
.text:00014D7F                 push    offset $SG93573 ; Str
.text:00014D84                 mov     ecx, [ebp+var_4]
.text:00014D87                 mov     edx, [ecx+0B8h]
.text:00014D8D                 push    edx             ; int
.text:00014D8E                 call    _ssh_pkt_addstring
.text:00014D93                 add     esp, 8
.text:00014D96                 push    offset $SG93574 ; Str
.text:00014D9B                 mov     eax, [ebp+var_4]
.text:00014D9E                 mov     ecx, [eax+0B8h]
.text:00014DA4                 push    ecx             ; int
.text:00014DA5                 call    _ssh_pkt_addstring
.text:00014DAA                 add     esp, 8
.text:00014DAD                 mov     edx, [ebp+var_4]
.text:00014DB0                 mov     eax, [edx+0B8h]
.text:00014DB6                 push    eax
.text:00014DB7                 mov     ecx, [ebp+arg_0]
.text:00014DBA                 push    ecx
.text:00014DBB                 call    _ssh2_pkt_send
.text:00014DC0                 add     esp, 8
.text:00014DC3                 push    offset $SG93575 ; "Attempting keyboard-interactive authent"...
.text:00014DC8                 mov     edx, [ebp+arg_0]
.text:00014DCB                 mov     eax, [edx+0E4h]
.text:00014DD1                 push    eax
.text:00014DD2                 call    _logevent
.text:00014DD7                 add     esp, 8
.text:00014DDA
.text:00014DDA loc_14DDA:                              ; CODE XREF: _do_ssh2_authconn+2FC2j
.text:00014DDA                                         ; _do_ssh2_authconn+2FC8j
.text:00014DDA                 mov     ecx, [ebp+var_8]
.text:00014DDD                 mov     dword ptr [ecx], 25ABh
.text:00014DE3                 jmp     loc_1626E
.text:00014DE8 ; ---------------------------------------------------------------------------
.text:00014DE8
.text:00014DE8 $LN168:                                 ; CODE XREF: _do_ssh2_authconn+1CCj
.text:00014DE8                                         ; DATA XREF: .text:$LN466o
.text:00014DE8                 xor     edx, edx        ; jumptable 00011FF4 case 0
.text:00014DEA                 jnz     short loc_14DDA
.text:00014DEC                 cmp     [ebp+arg_C], 0
.text:00014DF0                 jz      short loc_14DDA
.text:00014DF2                 mov     eax, [ebp+arg_C]
.text:00014DF5                 cmp     dword ptr [eax+8], 3Ch ; '<'
.text:00014DF9                 jz      short loc_14E1E
.text:00014DFB                 mov     ecx, [ebp+var_4]
.text:00014DFE                 mov     dword ptr [ecx+0Ch], 1
.text:00014E05                 mov     edx, [ebp+var_4]
.text:00014E08                 mov     dword ptr [edx+4], 7
.text:00014E0F                 mov     eax, [ebp+var_4]
.text:00014E12                 mov     dword ptr [eax+30h], 1
.text:00014E19                 jmp     loc_12C39
.text:00014E1E ; ---------------------------------------------------------------------------
.text:00014E1E
.text:00014E1E loc_14E1E:                              ; CODE XREF: _do_ssh2_authconn+2FD1j
.text:00014E1E                                         ; _do_ssh2_authconn+3389j
.text:00014E1E                 mov     ecx, [ebp+arg_C]
.text:00014E21                 cmp     dword ptr [ecx+8], 3Ch ; '<'
.text:00014E25                 jnz     loc_151B6
.text:00014E2B                 lea     edx, [ebp+var_120]
.text:00014E31                 push    edx
.text:00014E32                 lea     eax, [ebp+var_FC]
.text:00014E38                 push    eax
.text:00014E39                 mov     ecx, [ebp+arg_C]
.text:00014E3C                 push    ecx
.text:00014E3D                 call    _ssh_pkt_getstring
.text:00014E42                 add     esp, 0Ch
.text:00014E45                 lea     edx, [ebp+var_12C]
.text:00014E4B                 push    edx
.text:00014E4C                 lea     eax, [ebp+var_108]
.text:00014E52                 push    eax
.text:00014E53                 mov     ecx, [ebp+arg_C]
.text:00014E56                 push    ecx
.text:00014E57                 call    _ssh_pkt_getstring
.text:00014E5C                 add     esp, 0Ch
.text:00014E5F                 lea     edx, [ebp+var_138]
.text:00014E65                 push    edx
.text:00014E66                 lea     eax, [ebp+var_114]
.text:00014E6C                 push    eax
.text:00014E6D                 mov     ecx, [ebp+arg_C]
.text:00014E70                 push    ecx
.text:00014E71                 call    _ssh_pkt_getstring
.text:00014E76                 add     esp, 0Ch
.text:00014E79                 mov     edx, [ebp+arg_0]
.text:00014E7C                 mov     eax, [edx+0E4h]
.text:00014E82                 push    eax
.text:00014E83                 call    _new_prompts
.text:00014E88                 add     esp, 4
.text:00014E8B                 mov     ecx, [ebp+var_4]
.text:00014E8E                 mov     [ecx+3Ch], eax
.text:00014E91                 mov     edx, [ebp+var_4]
.text:00014E94                 mov     eax, [edx+3Ch]
.text:00014E97                 mov     dword ptr [eax], 1
.text:00014E9D                 mov     ecx, [ebp+arg_C]
.text:00014EA0                 push    ecx
.text:00014EA1                 call    _ssh_pkt_getuint32
.text:00014EA6                 add     esp, 4
.text:00014EA9                 mov     edx, [ebp+var_4]
.text:00014EAC                 mov     [edx+40h], eax
.text:00014EAF                 mov     [ebp+var_140], 0
.text:00014EB9                 jmp     short loc_14ECA
.text:00014EBB ; ---------------------------------------------------------------------------
.text:00014EBB
.text:00014EBB loc_14EBB:                              ; CODE XREF: _do_ssh2_authconn+312Fj
.text:00014EBB                 mov     eax, [ebp+var_140]
.text:00014EC1                 add     eax, 1
.text:00014EC4                 mov     [ebp+var_140], eax
.text:00014ECA
.text:00014ECA loc_14ECA:                              ; CODE XREF: _do_ssh2_authconn+3091j
.text:00014ECA                 mov     ecx, [ebp+var_4]
.text:00014ECD                 mov     edx, [ebp+var_140]
.text:00014ED3                 cmp     edx, [ecx+40h]
.text:00014ED6                 jge     loc_14F5C
.text:00014EDC                 lea     eax, [ebp+var_154]
.text:00014EE2                 push    eax
.text:00014EE3                 lea     ecx, [ebp+var_148]
.text:00014EE9                 push    ecx
.text:00014EEA                 mov     edx, [ebp+arg_C]
.text:00014EED                 push    edx
.text:00014EEE                 call    _ssh_pkt_getstring
.text:00014EF3                 add     esp, 0Ch
.text:00014EF6                 mov     eax, [ebp+arg_C]
.text:00014EF9                 push    eax
.text:00014EFA                 call    _ssh2_pkt_getbool
.text:00014EFF                 add     esp, 4
.text:00014F02                 mov     [ebp+var_15C], eax
.text:00014F08                 cmp     [ebp+var_154], 0
.text:00014F0F                 jnz     short loc_14F25
.text:00014F11                 mov     [ebp+var_148], offset ?noprompt@?II@??do_ssh2_authconn@@9@9 ; "<server failed to send prompt>: "
.text:00014F1B                 mov     [ebp+var_154], 20h ; ' '
.text:00014F25
.text:00014F25 loc_14F25:                              ; CODE XREF: _do_ssh2_authconn+30E7j
.text:00014F25                 mov     ecx, [ebp+var_15C]
.text:00014F2B                 push    ecx
.text:00014F2C                 mov     edx, [ebp+var_148]
.text:00014F32                 push    edx
.text:00014F33                 mov     eax, [ebp+var_154]
.text:00014F39                 push    eax
.text:00014F3A                 push    offset $SG93603 ; "%.*s"
.text:00014F3F                 call    _dupprintf
.text:00014F44                 add     esp, 0Ch
.text:00014F47                 push    eax
.text:00014F48                 mov     ecx, [ebp+var_4]
.text:00014F4B                 mov     edx, [ecx+3Ch]
.text:00014F4E                 push    edx
.text:00014F4F                 call    _add_prompt
.text:00014F54                 add     esp, 0Ch
.text:00014F57                 jmp     loc_14EBB
.text:00014F5C ; ---------------------------------------------------------------------------
.text:00014F5C
.text:00014F5C loc_14F5C:                              ; CODE XREF: _do_ssh2_authconn+30AEj
.text:00014F5C                 cmp     [ebp+var_120], 0
.text:00014F63                 jz      short loc_14F98
.text:00014F65                 mov     eax, [ebp+var_FC]
.text:00014F6B                 push    eax
.text:00014F6C                 mov     ecx, [ebp+var_120]
.text:00014F72                 push    ecx
.text:00014F73                 push    offset $SG93605 ; "SSH server: %.*s"
.text:00014F78                 call    _dupprintf
.text:00014F7D                 add     esp, 0Ch
.text:00014F80                 mov     edx, [ebp+var_4]
.text:00014F83                 mov     ecx, [edx+3Ch]
.text:00014F86                 mov     [ecx+4], eax
.text:00014F89                 mov     edx, [ebp+var_4]
.text:00014F8C                 mov     eax, [edx+3Ch]
.text:00014F8F                 mov     dword ptr [eax+8], 1
.text:00014F96                 jmp     short loc_14FBB
.text:00014F98 ; ---------------------------------------------------------------------------
.text:00014F98
.text:00014F98 loc_14F98:                              ; CODE XREF: _do_ssh2_authconn+313Bj
.text:00014F98                 push    offset $SG93607 ; "SSH server authentication"
.text:00014F9D                 call    _dupstr
.text:00014FA2                 add     esp, 4
.text:00014FA5                 mov     ecx, [ebp+var_4]
.text:00014FA8                 mov     edx, [ecx+3Ch]
.text:00014FAB                 mov     [edx+4], eax
.text:00014FAE                 mov     eax, [ebp+var_4]
.text:00014FB1                 mov     ecx, [eax+3Ch]
.text:00014FB4                 mov     dword ptr [ecx+8], 0
.text:00014FBB
.text:00014FBB loc_14FBB:                              ; CODE XREF: _do_ssh2_authconn+316Ej
.text:00014FBB                 mov     edx, [ebp+var_4]
.text:00014FBE                 cmp     dword ptr [edx+40h], 0
.text:00014FC2                 jnz     short loc_14FD6
.text:00014FC4                 cmp     [ebp+var_120], 0
.text:00014FCB                 jnz     short loc_14FD6
.text:00014FCD                 cmp     [ebp+var_12C], 0
.text:00014FD4                 jz      short loc_1502F
.text:00014FD6
.text:00014FD6 loc_14FD6:                              ; CODE XREF: _do_ssh2_authconn+319Aj
.text:00014FD6                                         ; _do_ssh2_authconn+31A3j
.text:00014FD6                 cmp     [ebp+var_12C], 0
.text:00014FDD                 jz      short loc_14FEB
.text:00014FDF                 mov     [ebp+var_1B8], offset $SG93610 ; "\n"
.text:00014FE9                 jmp     short loc_14FF5
.text:00014FEB ; ---------------------------------------------------------------------------
.text:00014FEB
.text:00014FEB loc_14FEB:                              ; CODE XREF: _do_ssh2_authconn+31B5j
.text:00014FEB                 mov     [ebp+var_1B8], offset $SG93611
.text:00014FF5
.text:00014FF5 loc_14FF5:                              ; CODE XREF: _do_ssh2_authconn+31C1j
.text:00014FF5                 mov     eax, [ebp+var_108]
.text:00014FFB                 push    eax
.text:00014FFC                 mov     ecx, [ebp+var_12C]
.text:00015002                 push    ecx
.text:00015003                 mov     edx, [ebp+var_1B8]
.text:00015009                 push    edx
.text:0001500A                 push    offset $SG93612 ; "Using keyboard-interactive authenticati"...
.text:0001500F                 call    _dupprintf
.text:00015014                 add     esp, 10h
.text:00015017                 mov     ecx, [ebp+var_4]
.text:0001501A                 mov     edx, [ecx+3Ch]
.text:0001501D                 mov     [edx+0Ch], eax
.text:00015020                 mov     eax, [ebp+var_4]
.text:00015023                 mov     ecx, [eax+3Ch]
.text:00015026                 mov     dword ptr [ecx+10h], 1
.text:0001502D                 jmp     short loc_1503C
.text:0001502F ; ---------------------------------------------------------------------------
.text:0001502F
.text:0001502F loc_1502F:                              ; CODE XREF: _do_ssh2_authconn+31ACj
.text:0001502F                 mov     edx, [ebp+var_4]
.text:00015032                 mov     eax, [edx+3Ch]
.text:00015035                 mov     dword ptr [eax+10h], 0
.text:0001503C
.text:0001503C loc_1503C:                              ; CODE XREF: _do_ssh2_authconn+3205j
.text:0001503C                 push    0
.text:0001503E                 push    0
.text:00015040                 mov     ecx, [ebp+var_4]
.text:00015043                 mov     edx, [ecx+3Ch]
.text:00015046                 push    edx
.text:00015047                 call    _get_userpass_input
.text:0001504C                 add     esp, 0Ch
.text:0001504F                 mov     [ebp+var_160], eax
.text:00015055
.text:00015055 loc_15055:                              ; CODE XREF: _do_ssh2_authconn+3285j
.text:00015055                 cmp     [ebp+var_160], 0
.text:0001505C                 jge     short loc_150AF
.text:0001505E                 mov     eax, [ebp+arg_0]
.text:00015061                 mov     dword ptr [eax+0D8h], 1
.text:0001506B
.text:0001506B loc_1506B:                              ; CODE XREF: _do_ssh2_authconn+3253j
.text:0001506B                                         ; _do_ssh2_authconn+3259j
.text:0001506B                 mov     ecx, [ebp+var_8]
.text:0001506E                 mov     dword ptr [ecx], 2604h
.text:00015074                 jmp     loc_1626E
.text:00015079 ; ---------------------------------------------------------------------------
.text:00015079
.text:00015079 $LN147:                                 ; CODE XREF: _do_ssh2_authconn+1CCj
.text:00015079                                         ; DATA XREF: .text:$LN466o
.text:00015079                 xor     edx, edx        ; jumptable 00011FF4 case 89
.text:0001507B                 jnz     short loc_1506B
.text:0001507D                 cmp     [ebp+arg_C], 0
.text:00015081                 jnz     short loc_1506B
.text:00015083                 mov     eax, [ebp+arg_8]
.text:00015086                 push    eax
.text:00015087                 mov     ecx, [ebp+arg_4]
.text:0001508A                 push    ecx
.text:0001508B                 mov     edx, [ebp+var_4]
.text:0001508E                 mov     eax, [edx+3Ch]
.text:00015091                 push    eax
.text:00015092                 call    _get_userpass_input
.text:00015097                 add     esp, 0Ch
.text:0001509A                 mov     [ebp+var_160], eax
.text:000150A0                 mov     ecx, [ebp+arg_0]
.text:000150A3                 mov     dword ptr [ecx+0D8h], 0
.text:000150AD                 jmp     short loc_15055
.text:000150AF ; ---------------------------------------------------------------------------
.text:000150AF
.text:000150AF loc_150AF:                              ; CODE XREF: _do_ssh2_authconn+3234j
.text:000150AF                 cmp     [ebp+var_160], 0
.text:000150B6                 jnz     short loc_150F0
.text:000150B8                 mov     edx, [ebp+var_4]
.text:000150BB                 mov     eax, [edx+3Ch]
.text:000150BE                 push    eax
.text:000150BF                 call    _free_prompts
.text:000150C4                 add     esp, 4
.text:000150C7                 push    1               ; int
.text:000150C9                 push    0Dh             ; int
.text:000150CB                 push    offset $SG93628 ; "Unable to authenticate"
.text:000150D0                 push    0               ; int
.text:000150D2                 mov     ecx, [ebp+arg_0]
.text:000150D5                 push    ecx             ; int
.text:000150D6                 call    _ssh_disconnect
.text:000150DB                 add     esp, 14h
.text:000150DE
.text:000150DE loc_150DE:                              ; CODE XREF: _do_ssh2_authconn+32C6j
.text:000150DE                 mov     edx, [ebp+var_8]
.text:000150E1                 mov     dword ptr [edx], 0
.text:000150E7                 jmp     loc_1626E
.text:000150EC ; ---------------------------------------------------------------------------
.text:000150EC                 xor     eax, eax
.text:000150EE                 jnz     short loc_150DE
.text:000150F0
.text:000150F0 loc_150F0:                              ; CODE XREF: _do_ssh2_authconn+328Ej
.text:000150F0                 push    3Dh ; '='
.text:000150F2                 call    _ssh2_pkt_init
.text:000150F7                 add     esp, 4
.text:000150FA                 mov     ecx, [ebp+var_4]
.text:000150FD                 mov     [ecx+0B8h], eax
.text:00015103                 mov     edx, [ebp+var_4]
.text:00015106                 mov     eax, [edx+40h]
.text:00015109                 push    eax
.text:0001510A                 mov     ecx, [ebp+var_4]
.text:0001510D                 mov     edx, [ecx+0B8h]
.text:00015113                 push    edx
.text:00015114                 call    _ssh_pkt_adduint32
.text:00015119                 add     esp, 8
.text:0001511C                 mov     [ebp+var_140], 0
.text:00015126                 jmp     short loc_15137
.text:00015128 ; ---------------------------------------------------------------------------
.text:00015128
.text:00015128 loc_15128:                              ; CODE XREF: _do_ssh2_authconn+3345j
.text:00015128                 mov     eax, [ebp+var_140]
.text:0001512E                 add     eax, 1
.text:00015131                 mov     [ebp+var_140], eax
.text:00015137
.text:00015137 loc_15137:                              ; CODE XREF: _do_ssh2_authconn+32FEj
.text:00015137                 mov     ecx, [ebp+var_4]
.text:0001513A                 mov     edx, [ebp+var_140]
.text:00015140                 cmp     edx, [ecx+40h]
.text:00015143                 jge     short loc_1516F
.text:00015145                 mov     eax, [ebp+var_4]
.text:00015148                 mov     ecx, [eax+3Ch]
.text:0001514B                 mov     edx, [ecx+18h]
.text:0001514E                 mov     eax, [ebp+var_140]
.text:00015154                 mov     ecx, [edx+eax*4]
.text:00015157                 mov     edx, [ecx+8]
.text:0001515A                 push    edx             ; Str
.text:0001515B                 mov     eax, [ebp+var_4]
.text:0001515E                 mov     ecx, [eax+0B8h]
.text:00015164                 push    ecx             ; int
.text:00015165                 call    _ssh_pkt_addstring
.text:0001516A                 add     esp, 8
.text:0001516D                 jmp     short loc_15128
.text:0001516F ; ---------------------------------------------------------------------------
.text:0001516F
.text:0001516F loc_1516F:                              ; CODE XREF: _do_ssh2_authconn+331Bj
.text:0001516F                 push    100h
.text:00015174                 mov     edx, [ebp+var_4]
.text:00015177                 mov     eax, [edx+0B8h]
.text:0001517D                 push    eax
.text:0001517E                 mov     ecx, [ebp+arg_0]
.text:00015181                 push    ecx
.text:00015182                 call    _ssh2_pkt_send_with_padding
.text:00015187                 add     esp, 0Ch
.text:0001518A                 mov     edx, [ebp+var_4]
.text:0001518D                 mov     eax, [edx+3Ch]
.text:00015190                 push    eax
.text:00015191                 call    _free_prompts
.text:00015196                 add     esp, 4
.text:00015199
.text:00015199 loc_15199:                              ; CODE XREF: _do_ssh2_authconn+3381j
.text:00015199                                         ; _do_ssh2_authconn+3387j
.text:00015199                 mov     ecx, [ebp+var_8]
.text:0001519C                 mov     dword ptr [ecx], 262Ah
.text:000151A2                 jmp     loc_1626E
.text:000151A7 ; ---------------------------------------------------------------------------
.text:000151A7
.text:000151A7 $LN133:                                 ; CODE XREF: _do_ssh2_authconn+1CCj
.text:000151A7                                         ; DATA XREF: .text:$LN466o
.text:000151A7                 xor     edx, edx        ; jumptable 00011FF4 case 127
.text:000151A9                 jnz     short loc_15199
.text:000151AB                 cmp     [ebp+arg_C], 0
.text:000151AF                 jz      short loc_15199
.text:000151B1                 jmp     loc_14E1E
.text:000151B6 ; ---------------------------------------------------------------------------
.text:000151B6
.text:000151B6 loc_151B6:                              ; CODE XREF: _do_ssh2_authconn+2FFDj
.text:000151B6                 mov     eax, [ebp+var_4]
.text:000151B9                 mov     dword ptr [eax+0Ch], 1
.text:000151C0                 jmp     loc_158DA
.text:000151C5 ; ---------------------------------------------------------------------------
.text:000151C5
.text:000151C5 loc_151C5:                              ; CODE XREF: _do_ssh2_authconn+2ED0j
.text:000151C5                                         ; _do_ssh2_authconn+2EDDj
.text:000151C5                 mov     ecx, [ebp+var_4]
.text:000151C8                 cmp     dword ptr [ecx+18h], 0
.text:000151CC                 jz      loc_15856
.text:000151D2                 mov     edx, [ebp+arg_0]
.text:000151D5                 mov     dword ptr [edx+15Ch], 2
.text:000151DF                 mov     eax, [ebp+arg_0]
.text:000151E2                 mov     ecx, [eax+0E4h]
.text:000151E8                 push    ecx
.text:000151E9                 call    _new_prompts
.text:000151EE                 add     esp, 4
.text:000151F1                 mov     edx, [ebp+var_4]
.text:000151F4                 mov     [edx+3Ch], eax
.text:000151F7                 mov     eax, [ebp+var_4]
.text:000151FA                 mov     ecx, [eax+3Ch]
.text:000151FD                 mov     dword ptr [ecx], 1
.text:00015203                 push    offset $SG93646 ; "SSH password"
.text:00015208                 call    _dupstr
.text:0001520D                 add     esp, 4
.text:00015210                 mov     edx, [ebp+var_4]
.text:00015213                 mov     ecx, [edx+3Ch]
.text:00015216                 mov     [ecx+4], eax
.text:00015219                 push    0
.text:0001521B                 mov     edx, [ebp+arg_0]
.text:0001521E                 mov     eax, [edx+0D0h]
.text:00015224                 push    eax
.text:00015225                 mov     ecx, [ebp+arg_0]
.text:00015228                 mov     edx, [ecx+224h]
.text:0001522E                 push    edx
.text:0001522F                 push    offset $SG93647 ; "%s@%s's password: "
.text:00015234                 call    _dupprintf
.text:00015239                 add     esp, 0Ch
.text:0001523C                 push    eax
.text:0001523D                 mov     eax, [ebp+var_4]
.text:00015240                 mov     ecx, [eax+3Ch]
.text:00015243                 push    ecx
.text:00015244                 call    _add_prompt
.text:00015249                 add     esp, 0Ch
.text:0001524C                 push    0
.text:0001524E                 push    0
.text:00015250                 mov     edx, [ebp+var_4]
.text:00015253                 mov     eax, [edx+3Ch]
.text:00015256                 push    eax
.text:00015257                 call    _get_userpass_input
.text:0001525C                 add     esp, 0Ch
.text:0001525F                 mov     [ebp+var_164], eax
.text:00015265
.text:00015265 loc_15265:                              ; CODE XREF: _do_ssh2_authconn+3495j
.text:00015265                 cmp     [ebp+var_164], 0
.text:0001526C                 jge     short loc_152BF
.text:0001526E                 mov     ecx, [ebp+arg_0]
.text:00015271                 mov     dword ptr [ecx+0D8h], 1
.text:0001527B
.text:0001527B loc_1527B:                              ; CODE XREF: _do_ssh2_authconn+3463j
.text:0001527B                                         ; _do_ssh2_authconn+3469j
.text:0001527B                 mov     edx, [ebp+var_8]
.text:0001527E                 mov     dword ptr [edx], 2648h
.text:00015284                 jmp     loc_1626E
.text:00015289 ; ---------------------------------------------------------------------------
.text:00015289
.text:00015289 $LN122:                                 ; CODE XREF: _do_ssh2_authconn+1CCj
.text:00015289                                         ; DATA XREF: .text:$LN466o
.text:00015289                 xor     eax, eax        ; jumptable 00011FF4 case 157
.text:0001528B                 jnz     short loc_1527B
.text:0001528D                 cmp     [ebp+arg_C], 0
.text:00015291                 jnz     short loc_1527B
.text:00015293                 mov     ecx, [ebp+arg_8]
.text:00015296                 push    ecx
.text:00015297                 mov     edx, [ebp+arg_4]
.text:0001529A                 push    edx
.text:0001529B                 mov     eax, [ebp+var_4]
.text:0001529E                 mov     ecx, [eax+3Ch]
.text:000152A1                 push    ecx
.text:000152A2                 call    _get_userpass_input
.text:000152A7                 add     esp, 0Ch
.text:000152AA                 mov     [ebp+var_164], eax
.text:000152B0                 mov     edx, [ebp+arg_0]
.text:000152B3                 mov     dword ptr [edx+0D8h], 0
.text:000152BD                 jmp     short loc_15265
.text:000152BF ; ---------------------------------------------------------------------------
.text:000152BF
.text:000152BF loc_152BF:                              ; CODE XREF: _do_ssh2_authconn+3444j
.text:000152BF                 cmp     [ebp+var_164], 0
.text:000152C6                 jnz     short loc_15300
.text:000152C8                 mov     eax, [ebp+var_4]
.text:000152CB                 mov     ecx, [eax+3Ch]
.text:000152CE                 push    ecx
.text:000152CF                 call    _free_prompts
.text:000152D4                 add     esp, 4
.text:000152D7                 push    1               ; int
.text:000152D9                 push    0Dh             ; int
.text:000152DB                 push    offset $SG93661 ; "Unable to authenticate"
.text:000152E0                 push    0               ; int
.text:000152E2                 mov     edx, [ebp+arg_0]
.text:000152E5                 push    edx             ; int
.text:000152E6                 call    _ssh_disconnect
.text:000152EB                 add     esp, 14h
.text:000152EE
.text:000152EE loc_152EE:                              ; CODE XREF: _do_ssh2_authconn+34D6j
.text:000152EE                 mov     eax, [ebp+var_8]
.text:000152F1                 mov     dword ptr [eax], 0
.text:000152F7                 jmp     loc_1626E
.text:000152FC ; ---------------------------------------------------------------------------
.text:000152FC                 xor     ecx, ecx
.text:000152FE                 jnz     short loc_152EE
.text:00015300
.text:00015300 loc_15300:                              ; CODE XREF: _do_ssh2_authconn+349Ej
.text:00015300                 mov     edx, [ebp+var_4]
.text:00015303                 mov     eax, [edx+3Ch]
.text:00015306                 mov     ecx, [eax+18h]
.text:00015309                 mov     edx, [ecx]
.text:0001530B                 mov     eax, [edx+8]
.text:0001530E                 push    eax
.text:0001530F                 call    _dupstr
.text:00015314                 add     esp, 4
.text:00015317                 mov     ecx, [ebp+var_4]
.text:0001531A                 mov     [ecx+48h], eax
.text:0001531D                 mov     edx, [ebp+var_4]
.text:00015320                 mov     eax, [edx+3Ch]
.text:00015323                 push    eax
.text:00015324                 call    _free_prompts
.text:00015329                 add     esp, 4
.text:0001532C                 push    32h ; '2'
.text:0001532E                 call    _ssh2_pkt_init
.text:00015333                 add     esp, 4
.text:00015336                 mov     ecx, [ebp+var_4]
.text:00015339                 mov     [ecx+0B8h], eax
.text:0001533F                 mov     edx, [ebp+arg_0]
.text:00015342                 mov     eax, [edx+224h]
.text:00015348                 push    eax             ; Str
.text:00015349                 mov     ecx, [ebp+var_4]
.text:0001534C                 mov     edx, [ecx+0B8h]
.text:00015352                 push    edx             ; int
.text:00015353                 call    _ssh_pkt_addstring
.text:00015358                 add     esp, 8
.text:0001535B                 push    offset $SG93665 ; "ssh-connection"
.text:00015360                 mov     eax, [ebp+var_4]
.text:00015363                 mov     ecx, [eax+0B8h]
.text:00015369                 push    ecx             ; int
.text:0001536A                 call    _ssh_pkt_addstring
.text:0001536F                 add     esp, 8
.text:00015372                 push    offset $SG93666 ; "password"
.text:00015377                 mov     edx, [ebp+var_4]
.text:0001537A                 mov     eax, [edx+0B8h]
.text:00015380                 push    eax             ; int
.text:00015381                 call    _ssh_pkt_addstring
.text:00015386                 add     esp, 8
.text:00015389                 push    0               ; Src
.text:0001538B                 mov     ecx, [ebp+var_4]
.text:0001538E                 mov     edx, [ecx+0B8h]
.text:00015394                 push    edx             ; int
.text:00015395                 call    _ssh2_pkt_addbool
.text:0001539A                 add     esp, 8
.text:0001539D                 mov     eax, [ebp+var_4]
.text:000153A0                 mov     ecx, [eax+48h]
.text:000153A3                 push    ecx             ; Str
.text:000153A4                 mov     edx, [ebp+var_4]
.text:000153A7                 mov     eax, [edx+0B8h]
.text:000153AD                 push    eax             ; int
.text:000153AE                 call    _ssh_pkt_addstring
.text:000153B3                 add     esp, 8
.text:000153B6                 push    100h
.text:000153BB                 mov     ecx, [ebp+var_4]
.text:000153BE                 mov     edx, [ecx+0B8h]
.text:000153C4                 push    edx
.text:000153C5                 mov     eax, [ebp+arg_0]
.text:000153C8                 push    eax
.text:000153C9                 call    _ssh2_pkt_send_with_padding
.text:000153CE                 add     esp, 0Ch
.text:000153D1                 push    offset $SG93667 ; "Sent password"
.text:000153D6                 mov     ecx, [ebp+arg_0]
.text:000153D9                 mov     edx, [ecx+0E4h]
.text:000153DF                 push    edx
.text:000153E0                 call    _logevent
.text:000153E5                 add     esp, 8
.text:000153E8                 mov     eax, [ebp+var_4]
.text:000153EB                 mov     dword ptr [eax+4], 4
.text:000153F2
.text:000153F2 loc_153F2:                              ; CODE XREF: _do_ssh2_authconn+35DAj
.text:000153F2                                         ; _do_ssh2_authconn+35E0j
.text:000153F2                 mov     ecx, [ebp+var_8]
.text:000153F5                 mov     dword ptr [ecx], 2677h
.text:000153FB                 jmp     loc_1626E
.text:00015400 ; ---------------------------------------------------------------------------
.text:00015400
.text:00015400 $LN111:                                 ; CODE XREF: _do_ssh2_authconn+1CCj
.text:00015400                                         ; DATA XREF: .text:$LN466o
.text:00015400                 xor     edx, edx        ; jumptable 00011FF4 case 204
.text:00015402                 jnz     short loc_153F2
.text:00015404                 cmp     [ebp+arg_C], 0
.text:00015408                 jz      short loc_153F2
.text:0001540A                 mov     [ebp+var_168], 1
.text:00015414
.text:00015414 loc_15414:                              ; CODE XREF: _do_ssh2_authconn+39ECj
.text:00015414                 mov     eax, [ebp+arg_C]
.text:00015417                 cmp     dword ptr [eax+8], 3Ch ; '<'
.text:0001541B                 jnz     loc_15819
.text:00015421                 mov     [ebp+var_16C], 0
.text:0001542B                 cmp     [ebp+var_168], 0
.text:00015432                 jz      short loc_15440
.text:00015434                 mov     [ebp+var_188], offset $SG93683 ; "Server requested password change"
.text:0001543E                 jmp     short loc_1544A
.text:00015440 ; ---------------------------------------------------------------------------
.text:00015440
.text:00015440 loc_15440:                              ; CODE XREF: _do_ssh2_authconn+360Aj
.text:00015440                 mov     [ebp+var_188], offset $SG93685 ; "Server rejected new password"
.text:0001544A
.text:0001544A loc_1544A:                              ; CODE XREF: _do_ssh2_authconn+3616j
.text:0001544A                 mov     ecx, [ebp+var_188]
.text:00015450                 push    ecx
.text:00015451                 mov     edx, [ebp+arg_0]
.text:00015454                 mov     eax, [edx+0E4h]
.text:0001545A                 push    eax
.text:0001545B                 call    _logevent
.text:00015460                 add     esp, 8
.text:00015463                 mov     ecx, [ebp+var_188]
.text:00015469                 push    ecx             ; Str
.text:0001546A                 mov     edx, [ebp+arg_0]
.text:0001546D                 push    edx             ; int
.text:0001546E                 call    _c_write_str
.text:00015473                 add     esp, 8
.text:00015476                 push    offset $SG93686 ; Str
.text:0001547B                 mov     eax, [ebp+arg_0]
.text:0001547E                 push    eax             ; int
.text:0001547F                 call    _c_write_str
.text:00015484                 add     esp, 8
.text:00015487                 lea     ecx, [ebp+var_180]
.text:0001548D                 push    ecx
.text:0001548E                 lea     edx, [ebp+var_174]
.text:00015494                 push    edx
.text:00015495                 mov     eax, [ebp+arg_C]
.text:00015498                 push    eax
.text:00015499                 call    _ssh_pkt_getstring
.text:0001549E                 add     esp, 0Ch
.text:000154A1                 mov     ecx, [ebp+arg_0]
.text:000154A4                 mov     edx, [ecx+0E4h]
.text:000154AA                 push    edx
.text:000154AB                 call    _new_prompts
.text:000154B0                 add     esp, 4
.text:000154B3                 mov     ecx, [ebp+var_4]
.text:000154B6                 mov     [ecx+3Ch], eax
.text:000154B9                 mov     edx, [ebp+var_4]
.text:000154BC                 mov     eax, [edx+3Ch]
.text:000154BF                 mov     dword ptr [eax], 1
.text:000154C5                 push    offset $SG93687 ; "New SSH password"
.text:000154CA                 call    _dupstr
.text:000154CF                 add     esp, 4
.text:000154D2                 mov     ecx, [ebp+var_4]
.text:000154D5                 mov     edx, [ecx+3Ch]
.text:000154D8                 mov     [edx+4], eax
.text:000154DB                 mov     eax, [ebp+var_174]
.text:000154E1                 push    eax
.text:000154E2                 mov     ecx, [ebp+var_180]
.text:000154E8                 push    ecx
.text:000154E9                 push    offset $SG93688 ; "%.*s"
.text:000154EE                 call    _dupprintf
.text:000154F3                 add     esp, 0Ch
.text:000154F6                 mov     edx, [ebp+var_4]
.text:000154F9                 mov     ecx, [edx+3Ch]
.text:000154FC                 mov     [ecx+0Ch], eax
.text:000154FF                 mov     edx, [ebp+var_4]
.text:00015502                 mov     eax, [edx+3Ch]
.text:00015505                 mov     dword ptr [eax+10h], 1
.text:0001550C                 push    0
.text:0001550E                 push    offset $SG93689 ; "Current password (blank for previously "...
.text:00015513                 call    _dupstr
.text:00015518                 add     esp, 4
.text:0001551B                 push    eax
.text:0001551C                 mov     ecx, [ebp+var_4]
.text:0001551F                 mov     edx, [ecx+3Ch]
.text:00015522                 push    edx
.text:00015523                 call    _add_prompt
.text:00015528                 add     esp, 0Ch
.text:0001552B                 push    0
.text:0001552D                 push    offset $SG93690 ; "Enter new password: "
.text:00015532                 call    _dupstr
.text:00015537                 add     esp, 4
.text:0001553A                 push    eax
.text:0001553B                 mov     eax, [ebp+var_4]
.text:0001553E                 mov     ecx, [eax+3Ch]
.text:00015541                 push    ecx
.text:00015542                 call    _add_prompt
.text:00015547                 add     esp, 0Ch
.text:0001554A                 push    0
.text:0001554C                 push    offset $SG93691 ; "Confirm new password: "
.text:00015551                 call    _dupstr
.text:00015556                 add     esp, 4
.text:00015559                 push    eax
.text:0001555A                 mov     edx, [ebp+var_4]
.text:0001555D                 mov     eax, [edx+3Ch]
.text:00015560                 push    eax
.text:00015561                 call    _add_prompt
.text:00015566                 add     esp, 0Ch
.text:00015569
.text:00015569 loc_15569:                              ; CODE XREF: _do_ssh2_authconn:loc_15700j
.text:00015569                 cmp     [ebp+var_16C], 0
.text:00015570                 jnz     loc_15705
.text:00015576                 push    0
.text:00015578                 push    0
.text:0001557A                 mov     ecx, [ebp+var_4]
.text:0001557D                 mov     edx, [ecx+3Ch]
.text:00015580                 push    edx
.text:00015581                 call    _get_userpass_input
.text:00015586                 add     esp, 0Ch
.text:00015589                 mov     [ebp+var_164], eax
.text:0001558F
.text:0001558F loc_1558F:                              ; CODE XREF: _do_ssh2_authconn+37BFj
.text:0001558F                 cmp     [ebp+var_164], 0
.text:00015596                 jge     short loc_155E9
.text:00015598                 mov     eax, [ebp+arg_0]
.text:0001559B                 mov     dword ptr [eax+0D8h], 1
.text:000155A5
.text:000155A5 loc_155A5:                              ; CODE XREF: _do_ssh2_authconn+378Dj
.text:000155A5                                         ; _do_ssh2_authconn+3793j
.text:000155A5                 mov     ecx, [ebp+var_8]
.text:000155A8                 mov     dword ptr [ecx], 26B6h
.text:000155AE                 jmp     loc_1626E
.text:000155B3 ; ---------------------------------------------------------------------------
.text:000155B3
.text:000155B3 loc_155B3:                              ; CODE XREF: _do_ssh2_authconn+197j
.text:000155B3                 xor     edx, edx
.text:000155B5                 jnz     short loc_155A5
.text:000155B7                 cmp     [ebp+arg_C], 0
.text:000155BB                 jnz     short loc_155A5
.text:000155BD                 mov     eax, [ebp+arg_8]
.text:000155C0                 push    eax
.text:000155C1                 mov     ecx, [ebp+arg_4]
.text:000155C4                 push    ecx
.text:000155C5                 mov     edx, [ebp+var_4]
.text:000155C8                 mov     eax, [edx+3Ch]
.text:000155CB                 push    eax
.text:000155CC                 call    _get_userpass_input
.text:000155D1                 add     esp, 0Ch
.text:000155D4                 mov     [ebp+var_164], eax
.text:000155DA                 mov     ecx, [ebp+arg_0]
.text:000155DD                 mov     dword ptr [ecx+0D8h], 0
.text:000155E7                 jmp     short loc_1558F
.text:000155E9 ; ---------------------------------------------------------------------------
.text:000155E9
.text:000155E9 loc_155E9:                              ; CODE XREF: _do_ssh2_authconn+376Ej
.text:000155E9                 cmp     [ebp+var_164], 0
.text:000155F0                 jnz     short loc_15658
.text:000155F2                 mov     edx, [ebp+var_4]
.text:000155F5                 mov     eax, [edx+3Ch]
.text:000155F8                 push    eax
.text:000155F9                 call    _free_prompts
.text:000155FE                 add     esp, 4
.text:00015601                 mov     ecx, [ebp+var_4]
.text:00015604                 mov     edx, [ecx+48h]
.text:00015607                 push    edx             ; Str
.text:00015608                 call    _strlen
.text:0001560D                 add     esp, 4
.text:00015610                 push    eax
.text:00015611                 mov     eax, [ebp+var_4]
.text:00015614                 mov     ecx, [eax+48h]
.text:00015617                 push    ecx
.text:00015618                 call    _smemclr
.text:0001561D                 add     esp, 8
.text:00015620                 mov     edx, [ebp+var_4]
.text:00015623                 mov     eax, [edx+48h]
.text:00015626                 push    eax
.text:00015627                 call    _safefree
.text:0001562C                 add     esp, 4
.text:0001562F                 push    1               ; int
.text:00015631                 push    0Dh             ; int
.text:00015633                 push    offset $SG93708 ; "Unable to authenticate"
.text:00015638                 push    0               ; int
.text:0001563A                 mov     ecx, [ebp+arg_0]
.text:0001563D                 push    ecx             ; int
.text:0001563E                 call    _ssh_disconnect
.text:00015643                 add     esp, 14h
.text:00015646
.text:00015646 loc_15646:                              ; CODE XREF: _do_ssh2_authconn+382Ej
.text:00015646                 mov     edx, [ebp+var_8]
.text:00015649                 mov     dword ptr [edx], 0
.text:0001564F                 jmp     loc_1626E
.text:00015654 ; ---------------------------------------------------------------------------
.text:00015654                 xor     eax, eax
.text:00015656                 jnz     short loc_15646
.text:00015658
.text:00015658 loc_15658:                              ; CODE XREF: _do_ssh2_authconn+37C8j
.text:00015658                 mov     ecx, [ebp+var_4]
.text:0001565B                 mov     edx, [ecx+3Ch]
.text:0001565E                 mov     eax, [edx+18h]
.text:00015661                 mov     ecx, [eax]
.text:00015663                 mov     edx, [ecx+8]
.text:00015666                 movsx   eax, byte ptr [edx]
.text:00015669                 test    eax, eax
.text:0001566B                 jz      short loc_156B8
.text:0001566D                 mov     ecx, [ebp+var_4]
.text:00015670                 mov     edx, [ecx+48h]
.text:00015673                 push    edx             ; Str
.text:00015674                 call    _strlen
.text:00015679                 add     esp, 4
.text:0001567C                 push    eax
.text:0001567D                 mov     eax, [ebp+var_4]
.text:00015680                 mov     ecx, [eax+48h]
.text:00015683                 push    ecx
.text:00015684                 call    _smemclr
.text:00015689                 add     esp, 8
.text:0001568C                 mov     edx, [ebp+var_4]
.text:0001568F                 mov     eax, [edx+48h]
.text:00015692                 push    eax
.text:00015693                 call    _safefree
.text:00015698                 add     esp, 4
.text:0001569B                 mov     ecx, [ebp+var_4]
.text:0001569E                 mov     edx, [ecx+3Ch]
.text:000156A1                 mov     eax, [edx+18h]
.text:000156A4                 mov     ecx, [eax]
.text:000156A6                 mov     edx, [ecx+8]
.text:000156A9                 push    edx
.text:000156AA                 call    _dupstr
.text:000156AF                 add     esp, 4
.text:000156B2                 mov     ecx, [ebp+var_4]
.text:000156B5                 mov     [ecx+48h], eax
.text:000156B8
.text:000156B8 loc_156B8:                              ; CODE XREF: _do_ssh2_authconn+3843j
.text:000156B8                 mov     edx, [ebp+var_4]
.text:000156BB                 mov     eax, [edx+3Ch]
.text:000156BE                 mov     ecx, [eax+18h]
.text:000156C1                 mov     edx, [ecx+8]
.text:000156C4                 mov     eax, [edx+8]
.text:000156C7                 push    eax             ; Str2
.text:000156C8                 mov     ecx, [ebp+var_4]
.text:000156CB                 mov     edx, [ecx+3Ch]
.text:000156CE                 mov     eax, [edx+18h]
.text:000156D1                 mov     ecx, [eax+4]
.text:000156D4                 mov     edx, [ecx+8]
.text:000156D7                 push    edx             ; Str1
.text:000156D8                 call    _strcmp
.text:000156DD                 add     esp, 8
.text:000156E0                 neg     eax
.text:000156E2                 sbb     eax, eax
.text:000156E4                 add     eax, 1
.text:000156E7                 mov     [ebp+var_16C], eax
.text:000156ED                 jnz     short loc_15700
.text:000156EF                 push    offset $SG93714 ; "Passwords do not match\r\n"
.text:000156F4                 mov     eax, [ebp+arg_0]
.text:000156F7                 push    eax             ; int
.text:000156F8                 call    _c_write_str
.text:000156FD                 add     esp, 8
.text:00015700
.text:00015700 loc_15700:                              ; CODE XREF: _do_ssh2_authconn+38C5j
.text:00015700                 jmp     loc_15569
.text:00015705 ; ---------------------------------------------------------------------------
.text:00015705
.text:00015705 loc_15705:                              ; CODE XREF: _do_ssh2_authconn+3748j
.text:00015705                 push    32h ; '2'
.text:00015707                 call    _ssh2_pkt_init
.text:0001570C                 add     esp, 4
.text:0001570F                 mov     ecx, [ebp+var_4]
.text:00015712                 mov     [ecx+0B8h], eax
.text:00015718                 mov     edx, [ebp+arg_0]
.text:0001571B                 mov     eax, [edx+224h]
.text:00015721                 push    eax             ; Str
.text:00015722                 mov     ecx, [ebp+var_4]
.text:00015725                 mov     edx, [ecx+0B8h]
.text:0001572B                 push    edx             ; int
.text:0001572C                 call    _ssh_pkt_addstring
.text:00015731                 add     esp, 8
.text:00015734                 push    offset $SG93715 ; "ssh-connection"
.text:00015739                 mov     eax, [ebp+var_4]
.text:0001573C                 mov     ecx, [eax+0B8h]
.text:00015742                 push    ecx             ; int
.text:00015743                 call    _ssh_pkt_addstring
.text:00015748                 add     esp, 8
.text:0001574B                 push    offset $SG93716 ; "password"
.text:00015750                 mov     edx, [ebp+var_4]
.text:00015753                 mov     eax, [edx+0B8h]
.text:00015759                 push    eax             ; int
.text:0001575A                 call    _ssh_pkt_addstring
.text:0001575F                 add     esp, 8
.text:00015762                 push    1               ; Src
.text:00015764                 mov     ecx, [ebp+var_4]
.text:00015767                 mov     edx, [ecx+0B8h]
.text:0001576D                 push    edx             ; int
.text:0001576E                 call    _ssh2_pkt_addbool
.text:00015773                 add     esp, 8
.text:00015776                 mov     eax, [ebp+var_4]
.text:00015779                 mov     ecx, [eax+48h]
.text:0001577C                 push    ecx             ; Str
.text:0001577D                 mov     edx, [ebp+var_4]
.text:00015780                 mov     eax, [edx+0B8h]
.text:00015786                 push    eax             ; int
.text:00015787                 call    _ssh_pkt_addstring
.text:0001578C                 add     esp, 8
.text:0001578F                 mov     ecx, [ebp+var_4]
.text:00015792                 mov     edx, [ecx+3Ch]
.text:00015795                 mov     eax, [edx+18h]
.text:00015798                 mov     ecx, [eax+4]
.text:0001579B                 mov     edx, [ecx+8]
.text:0001579E                 push    edx             ; Str
.text:0001579F                 mov     eax, [ebp+var_4]
.text:000157A2                 mov     ecx, [eax+0B8h]
.text:000157A8                 push    ecx             ; int
.text:000157A9                 call    _ssh_pkt_addstring
.text:000157AE                 add     esp, 8
.text:000157B1                 mov     edx, [ebp+var_4]
.text:000157B4                 mov     eax, [edx+3Ch]
.text:000157B7                 push    eax
.text:000157B8                 call    _free_prompts
.text:000157BD                 add     esp, 4
.text:000157C0                 push    100h
.text:000157C5                 mov     ecx, [ebp+var_4]
.text:000157C8                 mov     edx, [ecx+0B8h]
.text:000157CE                 push    edx
.text:000157CF                 mov     eax, [ebp+arg_0]
.text:000157D2                 push    eax
.text:000157D3                 call    _ssh2_pkt_send_with_padding
.text:000157D8                 add     esp, 0Ch
.text:000157DB                 push    offset $SG93717 ; "Sent new password"
.text:000157E0                 mov     ecx, [ebp+arg_0]
.text:000157E3                 mov     edx, [ecx+0E4h]
.text:000157E9                 push    edx
.text:000157EA                 call    _logevent
.text:000157EF                 add     esp, 8
.text:000157F2
.text:000157F2 loc_157F2:                              ; CODE XREF: _do_ssh2_authconn+39DAj
.text:000157F2                                         ; _do_ssh2_authconn+39E0j
.text:000157F2                 mov     eax, [ebp+var_8]
.text:000157F5                 mov     dword ptr [eax], 26F9h
.text:000157FB                 jmp     loc_1626E
.text:00015800 ; ---------------------------------------------------------------------------
.text:00015800
.text:00015800 loc_15800:                              ; CODE XREF: _do_ssh2_authconn+1F9j
.text:00015800                 xor     ecx, ecx
.text:00015802                 jnz     short loc_157F2
.text:00015804                 cmp     [ebp+arg_C], 0
.text:00015808                 jz      short loc_157F2
.text:0001580A                 mov     [ebp+var_168], 0
.text:00015814                 jmp     loc_15414
.text:00015819 ; ---------------------------------------------------------------------------
.text:00015819
.text:00015819 loc_15819:                              ; CODE XREF: _do_ssh2_authconn+35F3j
.text:00015819                 mov     edx, [ebp+var_4]
.text:0001581C                 mov     dword ptr [edx+0Ch], 1
.text:00015823                 mov     eax, [ebp+var_4]
.text:00015826                 mov     ecx, [eax+48h]
.text:00015829                 push    ecx             ; Str
.text:0001582A                 call    _strlen
.text:0001582F                 add     esp, 4
.text:00015832                 push    eax
.text:00015833                 mov     edx, [ebp+var_4]
.text:00015836                 mov     eax, [edx+48h]
.text:00015839                 push    eax
.text:0001583A                 call    _smemclr
.text:0001583F                 add     esp, 8
.text:00015842                 mov     ecx, [ebp+var_4]
.text:00015845                 mov     edx, [ecx+48h]
.text:00015848                 push    edx
.text:00015849                 call    _safefree
.text:0001584E                 add     esp, 4
.text:00015851                 jmp     loc_158DA
.text:00015856 ; ---------------------------------------------------------------------------
.text:00015856
.text:00015856 loc_15856:                              ; CODE XREF: _do_ssh2_authconn+33A4j
.text:00015856                 cmp     [ebp+var_19D], 0
.text:0001585D                 jnz     short loc_1586C
.text:0001585F                 push    offset $LN435_0 ; "methods"
.text:00015864                 call    __RTC_UninitUse
.text:00015869                 add     esp, 4
.text:0001586C
.text:0001586C loc_1586C:                              ; CODE XREF: _do_ssh2_authconn+3A35j
.text:0001586C                 cmp     [ebp+var_19E], 0
.text:00015873                 jnz     short loc_15882
.text:00015875                 push    offset $LN433_0 ; "methlen"
.text:0001587A                 call    __RTC_UninitUse
.text:0001587F                 add     esp, 4
.text:00015882
.text:00015882 loc_15882:                              ; CODE XREF: _do_ssh2_authconn+3A4Bj
.text:00015882                 mov     eax, [ebp+Buf2]
.text:00015885                 push    eax
.text:00015886                 mov     ecx, [ebp+var_60]
.text:00015889                 push    ecx
.text:0001588A                 push    offset $SG93727 ; "No supported authentication methods ava"...
.text:0001588F                 call    _dupprintf
.text:00015894                 add     esp, 0Ch
.text:00015897                 mov     [ebp+var_18C], eax
.text:0001589D                 push    0               ; int
.text:0001589F                 push    0Eh             ; int
.text:000158A1                 push    offset $SG93728 ; "No supported authentication methods ava"...
.text:000158A6                 mov     edx, [ebp+var_18C]
.text:000158AC                 push    edx             ; int
.text:000158AD                 mov     eax, [ebp+arg_0]
.text:000158B0                 push    eax             ; int
.text:000158B1                 call    _ssh_disconnect
.text:000158B6                 add     esp, 14h
.text:000158B9                 mov     ecx, [ebp+var_18C]
.text:000158BF                 push    ecx
.text:000158C0                 call    _safefree
.text:000158C5                 add     esp, 4
.text:000158C8
.text:000158C8 loc_158C8:                              ; CODE XREF: _do_ssh2_authconn+3AB0j
.text:000158C8                 mov     edx, [ebp+var_8]
.text:000158CB                 mov     dword ptr [edx], 0
.text:000158D1                 jmp     loc_1626E
.text:000158D6 ; ---------------------------------------------------------------------------
.text:000158D6                 xor     eax, eax
.text:000158D8                 jnz     short loc_158C8
.text:000158DA
.text:000158DA loc_158DA:                              ; CODE XREF: _do_ssh2_authconn:loc_13B7Cj
.text:000158DA                                         ; _do_ssh2_authconn:loc_142EEj ...
.text:000158DA                 jmp     loc_12C39
.text:000158DF ; ---------------------------------------------------------------------------
.text:000158DF
.text:000158DF loc_158DF:                              ; CODE XREF: _do_ssh2_authconn+E18j
.text:000158DF                                         ; _do_ssh2_authconn+F1Ej ...
.text:000158DF                 jmp     loc_12955
.text:000158E4 ; ---------------------------------------------------------------------------
.text:000158E4
.text:000158E4 loc_158E4:                              ; CODE XREF: _do_ssh2_authconn+B34j
.text:000158E4                 mov     ecx, [ebp+arg_0]
.text:000158E7                 mov     dword ptr [ecx+318h], 0
.text:000158F1                 mov     edx, [ebp+var_4]
.text:000158F4                 cmp     dword ptr [edx+50h], 0
.text:000158F8                 jz      short loc_15918
.text:000158FA                 mov     eax, [ebp+var_4]
.text:000158FD                 mov     ecx, [eax+50h]
.text:00015900                 push    ecx
.text:00015901                 call    _safefree
.text:00015906                 add     esp, 4
.text:00015909                 mov     edx, [ebp+var_4]
.text:0001590C                 mov     eax, [edx+60h]
.text:0001590F                 push    eax
.text:00015910                 call    _safefree
.text:00015915                 add     esp, 4
.text:00015918
.text:00015918 loc_15918:                              ; CODE XREF: _do_ssh2_authconn+3AD0j
.text:00015918                 mov     ecx, [ebp+var_4]
.text:0001591B                 cmp     dword ptr [ecx+6Ch], 0
.text:0001591F                 jz      short loc_15930
.text:00015921                 mov     edx, [ebp+var_4]
.text:00015924                 mov     eax, [edx+6Ch]
.text:00015927                 push    eax
.text:00015928                 call    _safefree
.text:0001592D                 add     esp, 4
.text:00015930
.text:00015930 loc_15930:                              ; CODE XREF: _do_ssh2_authconn+3AF7j
.text:00015930                 mov     ecx, [ebp+var_4]
.text:00015933                 cmp     dword ptr [ecx+38h], 0
.text:00015937                 jz      short loc_1595A
.text:00015939                 mov     edx, [ebp+arg_0]
.text:0001593C                 cmp     dword ptr [edx+0C4h], 0
.text:00015943                 jnz     short loc_1595A
.text:00015945                 push    0
.text:00015947                 push    0FFFFFFFEh
.text:00015949                 push    offset $SG93737 ; "enabling delayed compression"
.text:0001594E                 mov     eax, [ebp+arg_0]
.text:00015951                 push    eax
.text:00015952                 call    _do_ssh2_transport
.text:00015957                 add     esp, 10h
.text:0001595A
.text:0001595A loc_1595A:                              ; CODE XREF: _do_ssh2_authconn+3B0Fj
.text:0001595A                                         ; _do_ssh2_authconn+3B1Bj
.text:0001595A                 push    offset _ssh_channelcmp
.text:0001595F                 call    _newtree234
.text:00015964                 add     esp, 4
.text:00015967                 mov     ecx, [ebp+arg_0]
.text:0001596A                 mov     [ecx+0F8h], eax
.text:00015970                 mov     edx, [ebp+arg_0]
.text:00015973                 mov     dword ptr [edx+3B8h], offset _ssh2_msg_channel_window_adjust
.text:0001597D                 mov     eax, [ebp+arg_0]
.text:00015980                 mov     dword ptr [eax+384h], offset _ssh2_msg_global_request
.text:0001598A                 push    2Bh ; '+'
.text:0001598C                 mov     ecx, [ebp+arg_0]
.text:0001598F                 mov     edx, [ecx+21Ch]
.text:00015995                 push    edx
.text:00015996                 call    _conf_get_int
.text:0001599B                 add     esp, 8
.text:0001599E                 test    eax, eax
.text:000159A0                 jz      short loc_159B4
.text:000159A2                 mov     eax, [ebp+arg_0]
.text:000159A5                 mov     dword ptr [eax+0FCh], 0
.text:000159AF                 jmp     loc_15BEE
.text:000159B4 ; ---------------------------------------------------------------------------
.text:000159B4
.text:000159B4 loc_159B4:                              ; CODE XREF: _do_ssh2_authconn+3B78j
.text:000159B4                 push    60h ; '`'
.text:000159B6                 push    1
.text:000159B8                 call    _safemalloc
.text:000159BD                 add     esp, 8
.text:000159C0                 mov     ecx, [ebp+arg_0]
.text:000159C3                 mov     [ecx+0FCh], eax
.text:000159C9                 mov     edx, [ebp+arg_0]
.text:000159CC                 mov     eax, [edx+0FCh]
.text:000159D2                 mov     ecx, [ebp+arg_0]
.text:000159D5                 mov     [eax], ecx
.text:000159D7                 mov     edx, [ebp+arg_0]
.text:000159DA                 mov     eax, [edx+0FCh]
.text:000159E0                 push    eax
.text:000159E1                 call    _ssh2_channel_init
.text:000159E6                 add     esp, 4
.text:000159E9                 push    2Ch ; ','
.text:000159EB                 mov     ecx, [ebp+arg_0]
.text:000159EE                 mov     edx, [ecx+21Ch]
.text:000159F4                 push    edx
.text:000159F5                 call    _conf_get_str
.text:000159FA                 add     esp, 8
.text:000159FD                 movsx   eax, byte ptr [eax]
.text:00015A00                 test    eax, eax
.text:00015A02                 jz      short loc_15A54
.text:00015A04                 push    offset $SG93744 ; "main channel"
.text:00015A09                 push    2Dh ; '-'
.text:00015A0B                 mov     ecx, [ebp+arg_0]
.text:00015A0E                 mov     edx, [ecx+21Ch]
.text:00015A14                 push    edx
.text:00015A15                 call    _conf_get_int
.text:00015A1A                 add     esp, 8
.text:00015A1D                 push    eax
.text:00015A1E                 push    2Ch ; ','
.text:00015A20                 mov     eax, [ebp+arg_0]
.text:00015A23                 mov     ecx, [eax+21Ch]
.text:00015A29                 push    ecx
.text:00015A2A                 call    _conf_get_str
.text:00015A2F                 add     esp, 8
.text:00015A32                 push    eax
.text:00015A33                 mov     edx, [ebp+arg_0]
.text:00015A36                 mov     eax, [edx+0FCh]
.text:00015A3C                 push    eax
.text:00015A3D                 call    _ssh_send_port_open
.text:00015A42                 add     esp, 10h
.text:00015A45                 mov     ecx, [ebp+arg_0]
.text:00015A48                 mov     dword ptr [ecx+100h], 1
.text:00015A52                 jmp     short loc_15AAE
.text:00015A54 ; ---------------------------------------------------------------------------
.text:00015A54
.text:00015A54 loc_15A54:                              ; CODE XREF: _do_ssh2_authconn+3BDAj
.text:00015A54                 push    offset $SG93746 ; "session"
.text:00015A59                 mov     edx, [ebp+arg_0]
.text:00015A5C                 mov     eax, [edx+0FCh]
.text:00015A62                 push    eax             ; int
.text:00015A63                 call    _ssh2_chanopen_init
.text:00015A68                 add     esp, 8
.text:00015A6B                 mov     ecx, [ebp+var_4]
.text:00015A6E                 mov     [ecx+0B8h], eax
.text:00015A74                 push    offset $SG93747 ; "Opening session as main channel"
.text:00015A79                 mov     edx, [ebp+arg_0]
.text:00015A7C                 mov     eax, [edx+0E4h]
.text:00015A82                 push    eax
.text:00015A83                 call    _logevent
.text:00015A88                 add     esp, 8
.text:00015A8B                 mov     ecx, [ebp+var_4]
.text:00015A8E                 mov     edx, [ecx+0B8h]
.text:00015A94                 push    edx
.text:00015A95                 mov     eax, [ebp+arg_0]
.text:00015A98                 push    eax
.text:00015A99                 call    _ssh2_pkt_send
.text:00015A9E                 add     esp, 8
.text:00015AA1                 mov     ecx, [ebp+arg_0]
.text:00015AA4                 mov     dword ptr [ecx+100h], 0
.text:00015AAE
.text:00015AAE loc_15AAE:                              ; CODE XREF: _do_ssh2_authconn+3C2Aj
.text:00015AAE                                         ; _do_ssh2_authconn+3C96j ...
.text:00015AAE                 mov     edx, [ebp+var_8]
.text:00015AB1                 mov     dword ptr [edx], 2762h
.text:00015AB7                 jmp     loc_1626E
.text:00015ABC ; ---------------------------------------------------------------------------
.text:00015ABC
.text:00015ABC loc_15ABC:                              ; CODE XREF: _do_ssh2_authconn+209j
.text:00015ABC                 xor     eax, eax
.text:00015ABE                 jnz     short loc_15AAE
.text:00015AC0                 cmp     [ebp+arg_C], 0
.text:00015AC4                 jz      short loc_15AAE
.text:00015AC6                 mov     ecx, [ebp+arg_C]
.text:00015AC9                 cmp     dword ptr [ecx+8], 5Bh ; '['
.text:00015ACD                 jz      short loc_15AFB
.text:00015ACF                 push    offset $SG93756 ; "Server refused to open channel"
.text:00015AD4                 call    _dupprintf
.text:00015AD9                 add     esp, 4
.text:00015ADC                 push    eax
.text:00015ADD                 mov     edx, [ebp+arg_0]
.text:00015AE0                 push    edx
.text:00015AE1                 call    _bomb_out
.text:00015AE6                 add     esp, 8
.text:00015AE9
.text:00015AE9 loc_15AE9:                              ; CODE XREF: _do_ssh2_authconn+3CD1j
.text:00015AE9                 mov     eax, [ebp+var_8]
.text:00015AEC                 mov     dword ptr [eax], 0
.text:00015AF2                 jmp     loc_1626E
.text:00015AF7 ; ---------------------------------------------------------------------------
.text:00015AF7                 xor     ecx, ecx
.text:00015AF9                 jnz     short loc_15AE9
.text:00015AFB
.text:00015AFB loc_15AFB:                              ; CODE XREF: _do_ssh2_authconn+3CA5j
.text:00015AFB                 mov     edx, [ebp+arg_C]
.text:00015AFE                 push    edx
.text:00015AFF                 call    _ssh_pkt_getuint32
.text:00015B04                 add     esp, 4
.text:00015B07                 mov     ecx, [ebp+arg_0]
.text:00015B0A                 mov     edx, [ecx+0FCh]
.text:00015B10                 cmp     eax, [edx+8]
.text:00015B13                 jz      short loc_15B41
.text:00015B15                 push    offset $SG93761 ; "Server's channel confirmation cited wro"...
.text:00015B1A                 call    _dupprintf
.text:00015B1F                 add     esp, 4
.text:00015B22                 push    eax
.text:00015B23                 mov     eax, [ebp+arg_0]
.text:00015B26                 push    eax
.text:00015B27                 call    _bomb_out
.text:00015B2C                 add     esp, 8
.text:00015B2F
.text:00015B2F loc_15B2F:                              ; CODE XREF: _do_ssh2_authconn+3D17j
.text:00015B2F                 mov     ecx, [ebp+var_8]
.text:00015B32                 mov     dword ptr [ecx], 0
.text:00015B38                 jmp     loc_1626E
.text:00015B3D ; ---------------------------------------------------------------------------
.text:00015B3D                 xor     edx, edx
.text:00015B3F                 jnz     short loc_15B2F
.text:00015B41
.text:00015B41 loc_15B41:                              ; CODE XREF: _do_ssh2_authconn+3CEBj
.text:00015B41                 mov     eax, [ebp+arg_C]
.text:00015B44                 push    eax
.text:00015B45                 call    _ssh_pkt_getuint32
.text:00015B4A                 add     esp, 4
.text:00015B4D                 mov     ecx, [ebp+arg_0]
.text:00015B50                 mov     edx, [ecx+0FCh]
.text:00015B56                 mov     [edx+4], eax
.text:00015B59                 mov     eax, [ebp+arg_0]
.text:00015B5C                 mov     ecx, [eax+0FCh]
.text:00015B62                 mov     dword ptr [ecx+10h], 0
.text:00015B69                 mov     edx, [ebp+arg_0]
.text:00015B6C                 mov     eax, [edx+0FCh]
.text:00015B72                 mov     dword ptr [eax+0Ch], 0
.text:00015B79                 mov     ecx, [ebp+arg_C]
.text:00015B7C                 push    ecx
.text:00015B7D                 call    _ssh_pkt_getuint32
.text:00015B82                 add     esp, 4
.text:00015B85                 mov     edx, [ebp+arg_0]
.text:00015B88                 mov     ecx, [edx+0FCh]
.text:00015B8E                 mov     [ecx+2Ch], eax
.text:00015B91                 mov     edx, [ebp+arg_C]
.text:00015B94                 push    edx
.text:00015B95                 call    _ssh_pkt_getuint32
.text:00015B9A                 add     esp, 4
.text:00015B9D                 mov     ecx, [ebp+arg_0]
.text:00015BA0                 mov     edx, [ecx+0FCh]
.text:00015BA6                 mov     [edx+30h], eax
.text:00015BA9                 mov     eax, [ebp+arg_0]
.text:00015BAC                 mov     ecx, [eax+0FCh]
.text:00015BB2                 push    ecx
.text:00015BB3                 mov     edx, [ebp+arg_0]
.text:00015BB6                 mov     eax, [edx+0F8h]
.text:00015BBC                 push    eax
.text:00015BBD                 call    _add234
.text:00015BC2                 add     esp, 8
.text:00015BC5                 mov     ecx, [ebp+arg_0]
.text:00015BC8                 mov     edx, [ecx+0E4h]
.text:00015BCE                 push    edx
.text:00015BCF                 call    _update_specials_menu
.text:00015BD4                 add     esp, 4
.text:00015BD7                 push    offset $SG93765 ; "Opened main channel"
.text:00015BDC                 mov     eax, [ebp+arg_0]
.text:00015BDF                 mov     ecx, [eax+0E4h]
.text:00015BE5                 push    ecx
.text:00015BE6                 call    _logevent
.text:00015BEB                 add     esp, 8
.text:00015BEE
.text:00015BEE loc_15BEE:                              ; CODE XREF: _do_ssh2_authconn+3B87j
.text:00015BEE                 mov     edx, [ebp+arg_0]
.text:00015BF1                 mov     dword ptr [edx+3C0h], offset _ssh2_msg_channel_data
.text:00015BFB                 mov     eax, [ebp+arg_0]
.text:00015BFE                 mov     ecx, [ebp+arg_0]
.text:00015C01                 mov     edx, [ecx+3C0h]
.text:00015C07                 mov     [eax+3BCh], edx
.text:00015C0D                 mov     eax, [ebp+arg_0]
.text:00015C10                 mov     dword ptr [eax+3C4h], offset _ssh2_msg_channel_eof
.text:00015C1A                 mov     ecx, [ebp+arg_0]
.text:00015C1D                 mov     dword ptr [ecx+3C8h], offset _ssh2_msg_channel_close
.text:00015C27                 mov     edx, [ebp+arg_0]
.text:00015C2A                 mov     dword ptr [edx+3B0h], offset _ssh2_msg_channel_open_confirmation
.text:00015C34                 mov     eax, [ebp+arg_0]
.text:00015C37                 mov     dword ptr [eax+3B4h], offset _ssh2_msg_channel_open_failure
.text:00015C41                 mov     ecx, [ebp+arg_0]
.text:00015C44                 mov     dword ptr [ecx+3CCh], offset _ssh2_msg_channel_request
.text:00015C4E                 mov     edx, [ebp+arg_0]
.text:00015C51                 mov     dword ptr [edx+3ACh], offset _ssh2_msg_channel_open
.text:00015C5B                 mov     eax, [ebp+arg_0]
.text:00015C5E                 mov     dword ptr [eax+3D0h], offset _ssh2_msg_channel_response
.text:00015C68                 mov     ecx, [ebp+arg_0]
.text:00015C6B                 mov     dword ptr [ecx+3D4h], offset _ssh2_msg_channel_response
.text:00015C75                 mov     edx, [ebp+arg_0]
.text:00015C78                 cmp     dword ptr [edx+0CCh], 0
.text:00015C7F                 jz      short loc_15C9A
.text:00015C81                 mov     eax, [ebp+arg_0]
.text:00015C84                 mov     ecx, [eax+8]
.text:00015C87                 push    ecx
.text:00015C88                 mov     edx, [ebp+arg_0]
.text:00015C8B                 mov     eax, [edx+0CCh]
.text:00015C91                 push    eax
.text:00015C92                 call    _share_activate
.text:00015C97                 add     esp, 8
.text:00015C9A
.text:00015C9A loc_15C9A:                              ; CODE XREF: _do_ssh2_authconn+3E57j
.text:00015C9A                 mov     ecx, [ebp+arg_0]
.text:00015C9D                 cmp     dword ptr [ecx+0FCh], 0
.text:00015CA4                 jz      short loc_15CF0
.text:00015CA6                 mov     edx, [ebp+arg_0]
.text:00015CA9                 push    edx
.text:00015CAA                 call    _ssh_is_simple
.text:00015CAF                 add     esp, 4
.text:00015CB2                 test    eax, eax
.text:00015CB4                 jz      short loc_15CF0
.text:00015CB6                 push    0               ; int
.text:00015CB8                 push    0               ; int
.text:00015CBA                 push    offset $SG93770 ; "simple@putty.projects.tartarus.org"
.text:00015CBF                 mov     eax, [ebp+arg_0]
.text:00015CC2                 mov     ecx, [eax+0FCh]
.text:00015CC8                 push    ecx             ; int
.text:00015CC9                 call    _ssh2_chanreq_init
.text:00015CCE                 add     esp, 10h
.text:00015CD1                 mov     edx, [ebp+var_4]
.text:00015CD4                 mov     [edx+0B8h], eax
.text:00015CDA                 mov     eax, [ebp+var_4]
.text:00015CDD                 mov     ecx, [eax+0B8h]
.text:00015CE3                 push    ecx
.text:00015CE4                 mov     edx, [ebp+arg_0]
.text:00015CE7                 push    edx
.text:00015CE8                 call    _ssh2_pkt_send
.text:00015CED                 add     esp, 8
.text:00015CF0
.text:00015CF0 loc_15CF0:                              ; CODE XREF: _do_ssh2_authconn+3E7Cj
.text:00015CF0                                         ; _do_ssh2_authconn+3E8Cj
.text:00015CF0                 mov     eax, [ebp+arg_0]
.text:00015CF3                 mov     ecx, [eax+21Ch]
.text:00015CF9                 push    ecx
.text:00015CFA                 mov     edx, [ebp+arg_0]
.text:00015CFD                 push    edx
.text:00015CFE                 call    _ssh_setup_portfwd
.text:00015D03                 add     esp, 8
.text:00015D06                 mov     eax, [ebp+arg_0]
.text:00015D09                 cmp     dword ptr [eax+0FCh], 0
.text:00015D10                 jz      loc_160BE
.text:00015D16                 mov     ecx, [ebp+arg_0]
.text:00015D19                 cmp     dword ptr [ecx+100h], 0
.text:00015D20                 jnz     loc_160BE
.text:00015D26                 push    90h ; 'É'
.text:00015D2B                 mov     edx, [ebp+arg_0]
.text:00015D2E                 mov     eax, [edx+21Ch]
.text:00015D34                 push    eax
.text:00015D35                 call    _conf_get_int
.text:00015D3A                 add     esp, 8
.text:00015D3D                 test    eax, eax
.text:00015D3F                 jz      loc_15DFB
.text:00015D45                 mov     ecx, [ebp+arg_0]
.text:00015D48                 mov     edx, [ecx+21Ch]
.text:00015D4E                 push    edx
.text:00015D4F                 push    91h ; 'æ'
.text:00015D54                 mov     eax, [ebp+arg_0]
.text:00015D57                 mov     ecx, [eax+21Ch]
.text:00015D5D                 push    ecx
.text:00015D5E                 call    _conf_get_str
.text:00015D63                 add     esp, 8
.text:00015D66                 push    eax
.text:00015D67                 call    _x11_setup_display
.text:00015D6C                 add     esp, 8
.text:00015D6F                 mov     edx, [ebp+arg_0]
.text:00015D72                 mov     [edx+160h], eax
.text:00015D78                 mov     eax, [ebp+arg_0]
.text:00015D7B                 cmp     dword ptr [eax+160h], 0
.text:00015D82                 jnz     short loc_15D9D
.text:00015D84                 push    offset $SG93774 ; "X11 forwarding not enabled: unable to i"...
.text:00015D89                 mov     ecx, [ebp+arg_0]
.text:00015D8C                 mov     edx, [ecx+0E4h]
.text:00015D92                 push    edx
.text:00015D93                 call    _logevent
.text:00015D98                 add     esp, 8
.text:00015D9B                 jmp     short loc_15DFB
.text:00015D9D ; ---------------------------------------------------------------------------
.text:00015D9D
.text:00015D9D loc_15D9D:                              ; CODE XREF: _do_ssh2_authconn+3F5Aj
.text:00015D9D                 push    92h ; 'Æ'
.text:00015DA2                 mov     eax, [ebp+arg_0]
.text:00015DA5                 mov     ecx, [eax+21Ch]
.text:00015DAB                 push    ecx
.text:00015DAC                 call    _conf_get_int
.text:00015DB1                 add     esp, 8
.text:00015DB4                 push    eax
.text:00015DB5                 mov     edx, [ebp+arg_0]
.text:00015DB8                 mov     eax, [edx+168h]
.text:00015DBE                 push    eax
.text:00015DBF                 call    _x11_invent_fake_auth
.text:00015DC4                 add     esp, 8
.text:00015DC7                 mov     ecx, [ebp+arg_0]
.text:00015DCA                 mov     [ecx+164h], eax
.text:00015DD0                 mov     edx, [ebp+arg_0]
.text:00015DD3                 mov     eax, [edx+164h]
.text:00015DD9                 mov     ecx, [ebp+arg_0]
.text:00015DDC                 mov     edx, [ecx+160h]
.text:00015DE2                 mov     [eax+1Ch], edx
.text:00015DE5                 push    0
.text:00015DE7                 push    0
.text:00015DE9                 mov     eax, [ebp+arg_0]
.text:00015DEC                 mov     ecx, [eax+0FCh]
.text:00015DF2                 push    ecx
.text:00015DF3                 call    _ssh2_setup_x11
.text:00015DF8                 add     esp, 0Ch
.text:00015DFB
.text:00015DFB loc_15DFB:                              ; CODE XREF: _do_ssh2_authconn+3F17j
.text:00015DFB                                         ; _do_ssh2_authconn+3F73j
.text:00015DFB                 mov     edx, [ebp+arg_0]
.text:00015DFE                 push    edx
.text:00015DFF                 call    _ssh_agent_forwarding_permitted
.text:00015E04                 add     esp, 4
.text:00015E07                 test    eax, eax
.text:00015E09                 jz      short loc_15E21
.text:00015E0B                 push    0
.text:00015E0D                 push    0
.text:00015E0F                 mov     eax, [ebp+arg_0]
.text:00015E12                 mov     ecx, [eax+0FCh]
.text:00015E18                 push    ecx
.text:00015E19                 call    _ssh2_setup_agent
.text:00015E1E                 add     esp, 0Ch
.text:00015E21
.text:00015E21 loc_15E21:                              ; CODE XREF: _do_ssh2_authconn+3FE1j
.text:00015E21                 push    15h
.text:00015E23                 mov     edx, [ebp+arg_0]
.text:00015E26                 mov     eax, [edx+21Ch]
.text:00015E2C                 push    eax
.text:00015E2D                 call    _conf_get_int
.text:00015E32                 add     esp, 8
.text:00015E35                 test    eax, eax
.text:00015E37                 jnz     short loc_15E4F
.text:00015E39                 push    0
.text:00015E3B                 push    0
.text:00015E3D                 mov     ecx, [ebp+arg_0]
.text:00015E40                 mov     edx, [ecx+0FCh]
.text:00015E46                 push    edx
.text:00015E47                 call    _ssh2_setup_pty
.text:00015E4C                 add     esp, 0Ch
.text:00015E4F
.text:00015E4F loc_15E4F:                              ; CODE XREF: _do_ssh2_authconn+400Fj
.text:00015E4F                 push    0
.text:00015E51                 push    0
.text:00015E53                 mov     eax, [ebp+arg_0]
.text:00015E56                 mov     ecx, [eax+0FCh]
.text:00015E5C                 push    ecx
.text:00015E5D                 call    _ssh2_setup_env
.text:00015E62                 add     esp, 0Ch
.text:00015E65
.text:00015E65 loc_15E65:                              ; CODE XREF: _do_ssh2_authconn+4243j
.text:00015E65                                         ; _do_ssh2_authconn+428Fj
.text:00015E65                 mov     edx, 1
.text:00015E6A                 test    edx, edx
.text:00015E6C                 jz      loc_160BC
.text:00015E72                 mov     eax, [ebp+arg_0]
.text:00015E75                 cmp     dword ptr [eax+148h], 0
.text:00015E7C                 jz      short loc_15EB4
.text:00015E7E                 push    2Ah ; '*'
.text:00015E80                 mov     ecx, [ebp+arg_0]
.text:00015E83                 mov     edx, [ecx+21Ch]
.text:00015E89                 push    edx
.text:00015E8A                 call    _conf_get_int
.text:00015E8F                 add     esp, 8
.text:00015E92                 mov     [ebp+var_190], eax
.text:00015E98                 push    14h
.text:00015E9A                 mov     eax, [ebp+arg_0]
.text:00015E9D                 mov     ecx, [eax+21Ch]
.text:00015EA3                 push    ecx
.text:00015EA4                 call    _conf_get_str
.text:00015EA9                 add     esp, 8
.text:00015EAC                 mov     [ebp+var_194], eax
.text:00015EB2                 jmp     short loc_15EE8
.text:00015EB4 ; ---------------------------------------------------------------------------
.text:00015EB4
.text:00015EB4 loc_15EB4:                              ; CODE XREF: _do_ssh2_authconn+4054j
.text:00015EB4                 push    29h ; ')'
.text:00015EB6                 mov     edx, [ebp+arg_0]
.text:00015EB9                 mov     eax, [edx+21Ch]
.text:00015EBF                 push    eax
.text:00015EC0                 call    _conf_get_int
.text:00015EC5                 add     esp, 8
.text:00015EC8                 mov     [ebp+var_190], eax
.text:00015ECE                 push    13h
.text:00015ED0                 mov     ecx, [ebp+arg_0]
.text:00015ED3                 mov     edx, [ecx+21Ch]
.text:00015ED9                 push    edx
.text:00015EDA                 call    _conf_get_str
.text:00015EDF                 add     esp, 8
.text:00015EE2                 mov     [ebp+var_194], eax
.text:00015EE8
.text:00015EE8 loc_15EE8:                              ; CODE XREF: _do_ssh2_authconn+408Aj
.text:00015EE8                 cmp     [ebp+var_190], 0
.text:00015EEF                 jz      short loc_15F33
.text:00015EF1                 push    0               ; int
.text:00015EF3                 push    offset _ssh2_response_authconn ; int
.text:00015EF8                 push    offset $SG93795 ; "subsystem"
.text:00015EFD                 mov     eax, [ebp+arg_0]
.text:00015F00                 mov     ecx, [eax+0FCh]
.text:00015F06                 push    ecx             ; int
.text:00015F07                 call    _ssh2_chanreq_init
.text:00015F0C                 add     esp, 10h
.text:00015F0F                 mov     edx, [ebp+var_4]
.text:00015F12                 mov     [edx+0B8h], eax
.text:00015F18                 mov     eax, [ebp+var_194]
.text:00015F1E                 push    eax             ; Str
.text:00015F1F                 mov     ecx, [ebp+var_4]
.text:00015F22                 mov     edx, [ecx+0B8h]
.text:00015F28                 push    edx             ; int
.text:00015F29                 call    _ssh_pkt_addstring
.text:00015F2E                 add     esp, 8
.text:00015F31                 jmp     short loc_15FA9
.text:00015F33 ; ---------------------------------------------------------------------------
.text:00015F33
.text:00015F33 loc_15F33:                              ; CODE XREF: _do_ssh2_authconn+40C7j
.text:00015F33                 mov     eax, [ebp+var_194]
.text:00015F39                 movsx   ecx, byte ptr [eax]
.text:00015F3C                 test    ecx, ecx
.text:00015F3E                 jz      short loc_15F82
.text:00015F40                 push    0               ; int
.text:00015F42                 push    offset _ssh2_response_authconn ; int
.text:00015F47                 push    offset $SG93799 ; "exec"
.text:00015F4C                 mov     edx, [ebp+arg_0]
.text:00015F4F                 mov     eax, [edx+0FCh]
.text:00015F55                 push    eax             ; int
.text:00015F56                 call    _ssh2_chanreq_init
.text:00015F5B                 add     esp, 10h
.text:00015F5E                 mov     ecx, [ebp+var_4]
.text:00015F61                 mov     [ecx+0B8h], eax
.text:00015F67                 mov     edx, [ebp+var_194]
.text:00015F6D                 push    edx             ; Str
.text:00015F6E                 mov     eax, [ebp+var_4]
.text:00015F71                 mov     ecx, [eax+0B8h]
.text:00015F77                 push    ecx             ; int
.text:00015F78                 call    _ssh_pkt_addstring
.text:00015F7D                 add     esp, 8
.text:00015F80                 jmp     short loc_15FA9
.text:00015F82 ; ---------------------------------------------------------------------------
.text:00015F82
.text:00015F82 loc_15F82:                              ; CODE XREF: _do_ssh2_authconn+4116j
.text:00015F82                 push    0               ; int
.text:00015F84                 push    offset _ssh2_response_authconn ; int
.text:00015F89                 push    offset $SG93802 ; "shell"
.text:00015F8E                 mov     edx, [ebp+arg_0]
.text:00015F91                 mov     eax, [edx+0FCh]
.text:00015F97                 push    eax             ; int
.text:00015F98                 call    _ssh2_chanreq_init
.text:00015F9D                 add     esp, 10h
.text:00015FA0                 mov     ecx, [ebp+var_4]
.text:00015FA3                 mov     [ecx+0B8h], eax
.text:00015FA9
.text:00015FA9 loc_15FA9:                              ; CODE XREF: _do_ssh2_authconn+4109j
.text:00015FA9                                         ; _do_ssh2_authconn+4158j
.text:00015FA9                 mov     edx, [ebp+var_4]
.text:00015FAC                 mov     eax, [edx+0B8h]
.text:00015FB2                 push    eax
.text:00015FB3                 mov     ecx, [ebp+arg_0]
.text:00015FB6                 push    ecx
.text:00015FB7                 call    _ssh2_pkt_send
.text:00015FBC                 add     esp, 8
.text:00015FBF
.text:00015FBF loc_15FBF:                              ; CODE XREF: _do_ssh2_authconn+41A7j
.text:00015FBF                                         ; _do_ssh2_authconn+41ADj
.text:00015FBF                 mov     edx, [ebp+var_8]
.text:00015FC2                 mov     dword ptr [edx], 27E7h
.text:00015FC8                 jmp     loc_1626E
.text:00015FCD ; ---------------------------------------------------------------------------
.text:00015FCD
.text:00015FCD loc_15FCD:                              ; CODE XREF: _do_ssh2_authconn+1E9j
.text:00015FCD                 xor     eax, eax
.text:00015FCF                 jnz     short loc_15FBF
.text:00015FD1                 cmp     [ebp+arg_C], 0
.text:00015FD5                 jz      short loc_15FBF
.text:00015FD7                 mov     ecx, [ebp+arg_C]
.text:00015FDA                 cmp     dword ptr [ecx+8], 63h ; 'c'
.text:00015FDE                 jz      loc_1609E
.text:00015FE4                 mov     edx, [ebp+arg_C]
.text:00015FE7                 cmp     dword ptr [edx+8], 64h ; 'd'
.text:00015FEB                 jz      short loc_16020
.text:00015FED                 mov     eax, [ebp+arg_C]
.text:00015FF0                 mov     ecx, [eax+8]
.text:00015FF3                 push    ecx
.text:00015FF4                 push    offset $SG93812 ; "Unexpected response to shell/command re"...
.text:00015FF9                 call    _dupprintf
.text:00015FFE                 add     esp, 8
.text:00016001                 push    eax
.text:00016002                 mov     edx, [ebp+arg_0]
.text:00016005                 push    edx
.text:00016006                 call    _bomb_out
.text:0001600B                 add     esp, 8
.text:0001600E
.text:0001600E loc_1600E:                              ; CODE XREF: _do_ssh2_authconn+41F6j
.text:0001600E                 mov     eax, [ebp+var_8]
.text:00016011                 mov     dword ptr [eax], 0
.text:00016017                 jmp     loc_1626E
.text:0001601C ; ---------------------------------------------------------------------------
.text:0001601C                 xor     ecx, ecx
.text:0001601E                 jnz     short loc_1600E
.text:00016020
.text:00016020 loc_16020:                              ; CODE XREF: _do_ssh2_authconn+41C3j
.text:00016020                 mov     edx, [ebp+arg_0]
.text:00016023                 cmp     dword ptr [edx+148h], 0
.text:0001602A                 jnz     short loc_16070
.text:0001602C                 push    14h
.text:0001602E                 mov     eax, [ebp+arg_0]
.text:00016031                 mov     ecx, [eax+21Ch]
.text:00016037                 push    ecx
.text:00016038                 call    _conf_get_str
.text:0001603D                 add     esp, 8
.text:00016040                 movsx   edx, byte ptr [eax]
.text:00016043                 test    edx, edx
.text:00016045                 jz      short loc_16070
.text:00016047                 push    offset $SG93817 ; "Primary command failed; attempting fall"...
.text:0001604C                 mov     eax, [ebp+arg_0]
.text:0001604F                 mov     ecx, [eax+0E4h]
.text:00016055                 push    ecx
.text:00016056                 call    _logevent
.text:0001605B                 add     esp, 8
.text:0001605E                 mov     edx, [ebp+arg_0]
.text:00016061                 mov     dword ptr [edx+148h], 1
.text:0001606B                 jmp     loc_15E65
.text:00016070 ; ---------------------------------------------------------------------------
.text:00016070
.text:00016070 loc_16070:                              ; CODE XREF: _do_ssh2_authconn+4202j
.text:00016070                                         ; _do_ssh2_authconn+421Dj
.text:00016070                 push    offset $SG93818 ; "Server refused to start a shell/command"
.text:00016075                 call    _dupprintf
.text:0001607A                 add     esp, 4
.text:0001607D                 push    eax
.text:0001607E                 mov     eax, [ebp+arg_0]
.text:00016081                 push    eax
.text:00016082                 call    _bomb_out
.text:00016087                 add     esp, 8
.text:0001608A
.text:0001608A loc_1608A:                              ; CODE XREF: _do_ssh2_authconn+4272j
.text:0001608A                 mov     ecx, [ebp+var_8]
.text:0001608D                 mov     dword ptr [ecx], 0
.text:00016093                 jmp     loc_1626E
.text:00016098 ; ---------------------------------------------------------------------------
.text:00016098                 xor     edx, edx
.text:0001609A                 jnz     short loc_1608A
.text:0001609C                 jmp     short loc_160B5
.text:0001609E ; ---------------------------------------------------------------------------
.text:0001609E
.text:0001609E loc_1609E:                              ; CODE XREF: _do_ssh2_authconn+41B6j
.text:0001609E                 push    offset $SG93823 ; "Started a shell/command"
.text:000160A3                 mov     eax, [ebp+arg_0]
.text:000160A6                 mov     ecx, [eax+0E4h]
.text:000160AC                 push    ecx
.text:000160AD                 call    _logevent
.text:000160B2                 add     esp, 8
.text:000160B5
.text:000160B5 loc_160B5:                              ; CODE XREF: _do_ssh2_authconn+4274j
.text:000160B5                 jmp     short loc_160BC
.text:000160B7 ; ---------------------------------------------------------------------------
.text:000160B7                 jmp     loc_15E65
.text:000160BC ; ---------------------------------------------------------------------------
.text:000160BC
.text:000160BC loc_160BC:                              ; CODE XREF: _do_ssh2_authconn+4044j
.text:000160BC                                         ; _do_ssh2_authconn:loc_160B5j
.text:000160BC                 jmp     short loc_160D8
.text:000160BE ; ---------------------------------------------------------------------------
.text:000160BE
.text:000160BE loc_160BE:                              ; CODE XREF: _do_ssh2_authconn+3EE8j
.text:000160BE                                         ; _do_ssh2_authconn+3EF8j
.text:000160BE                 mov     edx, [ebp+arg_0]
.text:000160C1                 mov     dword ptr [edx+0DCh], 1
.text:000160CB                 mov     eax, [ebp+arg_0]
.text:000160CE                 mov     dword ptr [eax+0E0h], 1
.text:000160D8
.text:000160D8 loc_160D8:                              ; CODE XREF: _do_ssh2_authconn:loc_160BCj
.text:000160D8                 mov     ecx, [ebp+arg_0]
.text:000160DB                 mov     dword ptr [ecx+118h], 3
.text:000160E5                 mov     edx, [ebp+arg_0]
.text:000160E8                 cmp     dword ptr [edx+11Ch], 0
.text:000160EF                 jz      short loc_16111
.text:000160F1                 mov     eax, [ebp+arg_0]
.text:000160F4                 mov     ecx, [eax+0F4h]
.text:000160FA                 push    ecx
.text:000160FB                 mov     edx, [ebp+arg_0]
.text:000160FE                 mov     eax, [edx+0F0h]
.text:00016104                 push    eax
.text:00016105                 mov     ecx, [ebp+arg_0]
.text:00016108                 push    ecx
.text:00016109                 call    _ssh_size
.text:0001610E                 add     esp, 0Ch
.text:00016111
.text:00016111 loc_16111:                              ; CODE XREF: _do_ssh2_authconn+42C7j
.text:00016111                 mov     edx, [ebp+arg_0]
.text:00016114                 cmp     dword ptr [edx+120h], 0
.text:0001611B                 jz      short loc_1612B
.text:0001611D                 push    0Ch
.text:0001611F                 mov     eax, [ebp+arg_0]
.text:00016122                 push    eax
.text:00016123                 call    _ssh_special
.text:00016128                 add     esp, 8
.text:0001612B
.text:0001612B loc_1612B:                              ; CODE XREF: _do_ssh2_authconn+42F3j
.text:0001612B                 mov     ecx, [ebp+arg_0]
.text:0001612E                 cmp     dword ptr [ecx+14h], 0
.text:00016132                 jz      short loc_16149
.text:00016134                 push    0
.text:00016136                 push    0
.text:00016138                 push    0
.text:0001613A                 mov     edx, [ebp+arg_0]
.text:0001613D                 mov     eax, [edx+14h]
.text:00016140                 push    eax
.text:00016141                 call    _ldisc_send
.text:00016146                 add     esp, 10h
.text:00016149
.text:00016149 loc_16149:                              ; CODE XREF: _do_ssh2_authconn+430Aj
.text:00016149                 mov     ecx, [ebp+arg_0]
.text:0001614C                 cmp     dword ptr [ecx+0FCh], 0
.text:00016153                 jz      short loc_16162
.text:00016155                 mov     edx, [ebp+arg_0]
.text:00016158                 mov     dword ptr [edx+0D8h], 1
.text:00016162
.text:00016162 loc_16162:                              ; CODE XREF: _do_ssh2_authconn+432Bj
.text:00016162                                         ; _do_ssh2_authconn:loc_16260j
.text:00016162                 mov     eax, 1
.text:00016167                 test    eax, eax
.text:00016169                 jz      $LN412_0        ; jumptable 00011FF4 default case
.text:0001616F
.text:0001616F loc_1616F:                              ; CODE XREF: _do_ssh2_authconn+4357j
.text:0001616F                 mov     ecx, [ebp+var_8]
.text:00016172                 mov     dword ptr [ecx], 2814h
.text:00016178                 jmp     loc_1626E
.text:0001617D ; ---------------------------------------------------------------------------
.text:0001617D
.text:0001617D loc_1617D:                              ; CODE XREF: _do_ssh2_authconn+21Ej
.text:0001617D                 xor     edx, edx
.text:0001617F                 jnz     short loc_1616F
.text:00016181                 mov     eax, [ebp+var_4]
.text:00016184                 mov     dword ptr [eax+0B4h], 0
.text:0001618E                 cmp     [ebp+arg_C], 0
.text:00016192                 jz      short loc_161C9
.text:00016194                 mov     ecx, [ebp+arg_C]
.text:00016197                 mov     edx, [ecx+8]
.text:0001619A                 push    edx
.text:0001619B                 push    offset $SG93838 ; "Strange packet received: type %d"
.text:000161A0                 call    _dupprintf
.text:000161A5                 add     esp, 8
.text:000161A8                 push    eax
.text:000161A9                 mov     eax, [ebp+arg_0]
.text:000161AC                 push    eax
.text:000161AD                 call    _bomb_out
.text:000161B2                 add     esp, 8
.text:000161B5
.text:000161B5 loc_161B5:                              ; CODE XREF: _do_ssh2_authconn+439Dj
.text:000161B5                 mov     ecx, [ebp+var_8]
.text:000161B8                 mov     dword ptr [ecx], 0
.text:000161BE                 jmp     loc_1626E
.text:000161C3 ; ---------------------------------------------------------------------------
.text:000161C3                 xor     edx, edx
.text:000161C5                 jnz     short loc_161B5
.text:000161C7                 jmp     short loc_161FC
.text:000161C9 ; ---------------------------------------------------------------------------
.text:000161C9
.text:000161C9 loc_161C9:                              ; CODE XREF: _do_ssh2_authconn+436Aj
.text:000161C9                 mov     eax, [ebp+arg_0]
.text:000161CC                 cmp     dword ptr [eax+0FCh], 0
.text:000161D3                 jz      short loc_161FC
.text:000161D5                 mov     ecx, [ebp+arg_8]
.text:000161D8                 push    ecx
.text:000161D9                 mov     edx, [ebp+arg_4]
.text:000161DC                 push    edx
.text:000161DD                 mov     eax, [ebp+arg_0]
.text:000161E0                 mov     ecx, [eax+0FCh]
.text:000161E6                 push    ecx
.text:000161E7                 call    _ssh2_add_channel_data
.text:000161EC                 add     esp, 0Ch
.text:000161EF                 mov     edx, [ebp+var_4]
.text:000161F2                 mov     dword ptr [edx+0B4h], 1
.text:000161FC
.text:000161FC loc_161FC:                              ; CODE XREF: _do_ssh2_authconn+439Fj
.text:000161FC                                         ; _do_ssh2_authconn+43ABj
.text:000161FC                 mov     eax, [ebp+var_4]
.text:000161FF                 cmp     dword ptr [eax+0B4h], 0
.text:00016206                 jz      short loc_16260
.text:00016208                 mov     [ebp+var_198], 0
.text:00016212                 jmp     short loc_16223
.text:00016214 ; ---------------------------------------------------------------------------
.text:00016214
.text:00016214 loc_16214:                              ; CODE XREF: _do_ssh2_authconn+4436j
.text:00016214                 mov     ecx, [ebp+var_198]
.text:0001621A                 add     ecx, 1
.text:0001621D                 mov     [ebp+var_198], ecx
.text:00016223
.text:00016223 loc_16223:                              ; CODE XREF: _do_ssh2_authconn+43EAj
.text:00016223                 mov     edx, [ebp+var_198]
.text:00016229                 push    edx
.text:0001622A                 mov     eax, [ebp+arg_0]
.text:0001622D                 mov     ecx, [eax+0F8h]
.text:00016233                 push    ecx
.text:00016234                 call    _index234
.text:00016239                 add     esp, 8
.text:0001623C                 mov     [ebp+var_19C], eax
.text:00016242                 cmp     [ebp+var_19C], 0
.text:00016249                 jz      short loc_16260
.text:0001624B                 mov     edx, [ebp+var_19C]
.text:00016251                 push    edx
.text:00016252                 mov     eax, [ebp+arg_0]
.text:00016255                 push    eax
.text:00016256                 call    _ssh2_try_send_and_unthrottle
.text:0001625B                 add     esp, 8
.text:0001625E                 jmp     short loc_16214
.text:00016260 ; ---------------------------------------------------------------------------
.text:00016260
.text:00016260 loc_16260:                              ; CODE XREF: _do_ssh2_authconn+43DEj
.text:00016260                                         ; _do_ssh2_authconn+4421j
.text:00016260                 jmp     loc_16162
.text:00016265 ; ---------------------------------------------------------------------------
.text:00016265
.text:00016265 $LN412_0:                               ; CODE XREF: _do_ssh2_authconn+F1j
.text:00016265                                         ; _do_ssh2_authconn+116j ...
.text:00016265                 mov     ecx, [ebp+var_8] ; jumptable 00011FF4 default case
.text:00016268                 mov     dword ptr [ecx], 0
.text:0001626E
.text:0001626E loc_1626E:                              ; CODE XREF: _do_ssh2_authconn+3B6j
.text:0001626E                                         ; _do_ssh2_authconn+42Ej ...
.text:0001626E                 push    edx
.text:0001626F                 mov     ecx, ebp
.text:00016271                 push    eax
.text:00016272                 lea     edx, $LN465
.text:00016278                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0001627D                 pop     eax
.text:0001627E                 pop     edx
.text:0001627F                 pop     edi
.text:00016280                 pop     esi
.text:00016281                 add     esp, 1B8h
.text:00016287                 cmp     ebp, esp
.text:00016289                 call    __RTC_CheckEsp
.text:0001628E                 mov     esp, ebp
.text:00016290                 pop     ebp
.text:00016291                 retn
.text:00016291 _do_ssh2_authconn endp
.text:00016291
.text:00016291 ; ---------------------------------------------------------------------------
.text:00016292                 align 4
.text:00016294 $LN465          dd 15h                  ; DATA XREF: _do_ssh2_authconn+444Ao
.text:00016298                 dd offset $LN464
.text:0001629C $LN464          dd 0FFFFFFA0h, 4        ; DATA XREF: .text:00016298o
.text:000162A4                 dd offset $LN433_0      ; "methlen"
.text:000162A8                 dd 0FFFFFFACh, 4
.text:000162B0                 dd offset $LN435_0      ; "methods"
.text:000162B4                 dd 0FFFFFFECh, 4
.text:000162BC                 dd offset $LN445        ; "error"
.text:000162C0                 dd 0FFFFFFD8h, 4
.text:000162C8                 dd offset $LN446        ; "r"
.text:000162CC                 dd 0FFFFFF8Ch, 4
.text:000162D4                 dd offset $LN447        ; "vret"
.text:000162D8                 dd 0FFFFFF78h, 4
.text:000162E0                 dd offset $LN448        ; "error"
.text:000162E4                 dd 0FFFFFF5Ch, 4
.text:000162EC                 dd offset $LN449        ; "pkblob_len"
.text:000162F0                 dd 0FFFFFF50h, 4
.text:000162F8                 dd offset $LN450        ; "sigblob_len"
.text:000162FC                 dd 0FFFFFF38h, 4
.text:00016304                 dd offset $LN451        ; "len"
.text:00016308                 dd 0FFFFFF2Ch, 4
.text:00016310                 dd offset $LN452        ; "data"
.text:00016314                 dd 0FFFFFF1Ch, 8
.text:0001631C                 dd offset $LN453        ; "mic"
.text:00016320                 dd 0FFFFFF04h, 4
.text:00016328                 dd offset $LN454        ; "name"
.text:0001632C                 dd 0FFFFFEF8h, 4
.text:00016334                 dd offset $LN455        ; "inst"
.text:00016338                 dd 0FFFFFEECh, 4
.text:00016340                 dd offset $LN456        ; "lang"
.text:00016344                 dd 0FFFFFEE0h, 4
.text:0001634C                 dd offset $LN457        ; "name_len"
.text:00016350                 dd 0FFFFFED4h, 4
.text:00016358                 dd offset $LN458        ; "inst_len"
.text:0001635C                 dd 0FFFFFEC8h, 4
.text:00016364                 dd offset $LN459        ; "lang_len"
.text:00016368                 dd 0FFFFFEB8h, 4
.text:00016370                 dd offset $LN460        ; "prompt"
.text:00016374                 dd 0FFFFFEACh, 4
.text:0001637C                 dd offset $LN461        ; "prompt_len"
.text:00016380                 dd 0FFFFFE8Ch, 4
.text:00016388                 dd offset $LN462        ; "prompt"
.text:0001638C                 dd 0FFFFFE80h, 4
.text:00016394                 dd offset $LN463        ; "prompt_len"
.text:00016398 $LN463          db 'prompt_len',0       ; DATA XREF: .text:00016394o
.text:000163A3 $LN462          db 'prompt',0           ; DATA XREF: .text:00016388o
.text:000163AA $LN461          db 'prompt_len',0       ; DATA XREF: .text:0001637Co
.text:000163B5 $LN460          db 'prompt',0           ; DATA XREF: .text:00016370o
.text:000163BC $LN459          db 'lang_len',0         ; DATA XREF: .text:00016364o
.text:000163C5 $LN458          db 'inst_len',0         ; DATA XREF: .text:00016358o
.text:000163CE $LN457          db 'name_len',0         ; DATA XREF: .text:0001634Co
.text:000163D7 $LN456          db 'lang',0             ; DATA XREF: .text:00016340o
.text:000163DC $LN455          db 'inst',0             ; DATA XREF: .text:00016334o
.text:000163E1 $LN454          db 'name',0             ; DATA XREF: .text:00016328o
.text:000163E6 $LN453          db 'mic',0              ; DATA XREF: .text:0001631Co
.text:000163EA $LN452          db 'data',0             ; DATA XREF: .text:00016310o
.text:000163EF $LN451          db 'len',0              ; DATA XREF: .text:00016304o
.text:000163F3 $LN450          db 'sigblob_len',0      ; DATA XREF: .text:000162F8o
.text:000163FF $LN449          db 'pkblob_len',0       ; DATA XREF: .text:000162ECo
.text:0001640A $LN448          db 'error',0            ; DATA XREF: .text:000162E0o
.text:00016410 $LN447          db 'vret',0             ; DATA XREF: .text:000162D4o
.text:00016415 $LN446          db 'r',0                ; DATA XREF: .text:000162C8o
.text:00016417 $LN445          db 'error',0            ; DATA XREF: .text:000162BCo
.text:0001641D $LN435_0        db 'methods',0          ; DATA XREF: _do_ssh2_authconn+115Fo
.text:0001641D                                         ; _do_ssh2_authconn+11A6o ...
.text:00016425 $LN433_0        db 'methlen',0          ; DATA XREF: _do_ssh2_authconn+1149o
.text:00016425                                         ; _do_ssh2_authconn+1190o ...
.text:0001642D                 align 10h
.text:00016430 $LN466          dd offset $LN168, offset $LN147, offset $LN133, offset $LN122
.text:00016430                                         ; DATA XREF: _do_ssh2_authconn+1CCr
.text:00016430                 dd offset $LN111, offset $LN412_0 ; jump table for switch statement
.text:00016448 $LN444          db 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5
.text:00016448                                         ; DATA XREF: _do_ssh2_authconn+1C5r
.text:00016448                 db 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5 ; indirect table for switch statement
.text:00016448                 db 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5
.text:00016448                 db 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5
.text:00016448                 db 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1
.text:00016448                 db 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5
.text:00016448                 db 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5
.text:00016448                 db 5, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5
.text:00016448                 db 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 5, 5, 5
.text:00016448                 db 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5
.text:00016448                 db 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5
.text:00016448                 db 5, 5, 5, 5, 5, 5, 4
.text:00016515                 align 4
.text:00016518
.text:00016518 ; =============== S U B R O U T I N E =======================================
.text:00016518
.text:00016518 ; Attributes: bp-based frame
.text:00016518
.text:00016518 _ssh_channelcmp proc near               ; DATA XREF: _do_ssh2_authconn:loc_1595Ao
.text:00016518                                         ; _do_ssh1_connection+88Ao
.text:00016518
.text:00016518 var_8           = dword ptr -8
.text:00016518 var_4           = dword ptr -4
.text:00016518 arg_0           = dword ptr  8
.text:00016518 arg_4           = dword ptr  0Ch
.text:00016518
.text:00016518                 push    ebp
.text:00016519                 mov     ebp, esp
.text:0001651B                 sub     esp, 8
.text:0001651E                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00016525                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0001652C                 mov     eax, [ebp+arg_0]
.text:0001652F                 mov     [ebp+var_4], eax
.text:00016532                 mov     ecx, [ebp+arg_4]
.text:00016535                 mov     [ebp+var_8], ecx
.text:00016538                 mov     edx, [ebp+var_4]
.text:0001653B                 mov     eax, [ebp+var_8]
.text:0001653E                 mov     ecx, [edx+8]
.text:00016541                 cmp     ecx, [eax+8]
.text:00016544                 jnb     short loc_1654B
.text:00016546                 or      eax, 0FFFFFFFFh
.text:00016549                 jmp     short loc_16562
.text:0001654B ; ---------------------------------------------------------------------------
.text:0001654B
.text:0001654B loc_1654B:                              ; CODE XREF: _ssh_channelcmp+2Cj
.text:0001654B                 mov     edx, [ebp+var_4]
.text:0001654E                 mov     eax, [ebp+var_8]
.text:00016551                 mov     ecx, [edx+8]
.text:00016554                 cmp     ecx, [eax+8]
.text:00016557                 jbe     short loc_16560
.text:00016559                 mov     eax, 1
.text:0001655E                 jmp     short loc_16562
.text:00016560 ; ---------------------------------------------------------------------------
.text:00016560
.text:00016560 loc_16560:                              ; CODE XREF: _ssh_channelcmp+3Fj
.text:00016560                 xor     eax, eax
.text:00016562
.text:00016562 loc_16562:                              ; CODE XREF: _ssh_channelcmp+31j
.text:00016562                                         ; _ssh_channelcmp+46j
.text:00016562                 mov     esp, ebp
.text:00016564                 pop     ebp
.text:00016565                 retn
.text:00016565 _ssh_channelcmp endp
.text:00016565
.text:00016565 ; ---------------------------------------------------------------------------
.text:00016566                 align 4
.text:00016568
.text:00016568 ; =============== S U B R O U T I N E =======================================
.text:00016568
.text:00016568 ; Attributes: bp-based frame
.text:00016568
.text:00016568 _c_write_untrusted proc near            ; CODE XREF: _do_ssh2_authconn+EC5p
.text:00016568
.text:00016568 arg_0           = dword ptr  8
.text:00016568 arg_4           = dword ptr  0Ch
.text:00016568 arg_8           = dword ptr  10h
.text:00016568
.text:00016568                 push    ebp
.text:00016569                 mov     ebp, esp
.text:0001656B                 mov     eax, dword ptr ds:_flags
.text:00016570                 and     eax, 2
.text:00016573                 jz      short loc_16589
.text:00016575                 mov     ecx, [ebp+arg_8]
.text:00016578                 push    ecx
.text:00016579                 mov     edx, [ebp+arg_4]
.text:0001657C                 push    edx
.text:0001657D                 push    0
.text:0001657F                 call    _c_write_stderr
.text:00016584                 add     esp, 0Ch
.text:00016587                 jmp     short loc_165A3
.text:00016589 ; ---------------------------------------------------------------------------
.text:00016589
.text:00016589 loc_16589:                              ; CODE XREF: _c_write_untrusted+Bj
.text:00016589                 mov     eax, [ebp+arg_8]
.text:0001658C                 push    eax
.text:0001658D                 mov     ecx, [ebp+arg_4]
.text:00016590                 push    ecx
.text:00016591                 mov     edx, [ebp+arg_0]
.text:00016594                 mov     eax, [edx+0E4h]
.text:0001659A                 push    eax
.text:0001659B                 call    _from_backend_untrusted
.text:000165A0                 add     esp, 0Ch
.text:000165A3
.text:000165A3 loc_165A3:                              ; CODE XREF: _c_write_untrusted+1Fj
.text:000165A3                 cmp     ebp, esp
.text:000165A5                 call    __RTC_CheckEsp
.text:000165AA                 pop     ebp
.text:000165AB                 retn
.text:000165AB _c_write_untrusted endp
.text:000165AB
.text:000165AB ; ---------------------------------------------------------------------------
.text:000165AC                 db 0Ch dup(0CCh)
.text:000165B8
.text:000165B8 ; =============== S U B R O U T I N E =======================================
.text:000165B8
.text:000165B8 ; Attributes: bp-based frame
.text:000165B8
.text:000165B8 _ssh2_pkt_send_with_padding proc near   ; CODE XREF: _do_ssh2_authconn+335Ap
.text:000165B8                                         ; _do_ssh2_authconn+35A1p ...
.text:000165B8
.text:000165B8 var_14          = dword ptr -14h
.text:000165B8 Src             = dword ptr -10h
.text:000165B8 var_C           = dword ptr -0Ch
.text:000165B8 var_8           = dword ptr -8
.text:000165B8 var_4           = dword ptr -4
.text:000165B8 arg_0           = dword ptr  8
.text:000165B8 arg_4           = dword ptr  0Ch
.text:000165B8
.text:000165B8                 push    ebp
.text:000165B9                 mov     ebp, esp
.text:000165BB                 sub     esp, 14h
.text:000165BE                 push    esi
.text:000165BF                 mov     eax, 0CCCCCCCCh
.text:000165C4                 mov     [ebp+var_14], eax
.text:000165C7                 mov     [ebp+Src], eax
.text:000165CA                 mov     [ebp+var_C], eax
.text:000165CD                 mov     [ebp+var_8], eax
.text:000165D0                 mov     [ebp+var_4], eax
.text:000165D3                 mov     eax, [ebp+arg_4]
.text:000165D6                 push    eax
.text:000165D7                 mov     ecx, [ebp+arg_0]
.text:000165DA                 push    ecx
.text:000165DB                 call    _ssh2_pkt_defer
.text:000165E0                 add     esp, 8
.text:000165E3                 mov     edx, [ebp+arg_0]
.text:000165E6                 cmp     dword ptr [edx+60h], 0
.text:000165EA                 jz      loc_166D2
.text:000165F0                 mov     eax, [ebp+arg_0]
.text:000165F3                 mov     ecx, [eax+50h]
.text:000165F6                 and     ecx, 200h
.text:000165FC                 jnz     loc_166D2
.text:00016602                 mov     edx, [ebp+arg_0]
.text:00016605                 mov     eax, 100h
.text:0001660A                 sub     eax, [edx+140h]
.text:00016610                 mov     [ebp+var_4], eax
.text:00016613                 mov     ecx, [ebp+arg_0]
.text:00016616                 mov     edx, [ecx+60h]
.text:00016619                 mov     eax, [edx+1Ch]
.text:0001661C                 mov     ecx, [ebp+var_4]
.text:0001661F                 lea     edx, [ecx+eax-1]
.text:00016623                 mov     [ebp+var_4], edx
.text:00016626                 mov     eax, [ebp+arg_0]
.text:00016629                 mov     ecx, [eax+60h]
.text:0001662C                 mov     eax, [ebp+var_4]
.text:0001662F                 cdq
.text:00016630                 idiv    dword ptr [ecx+1Ch]
.text:00016633                 mov     eax, [ebp+var_4]
.text:00016636                 sub     eax, edx
.text:00016638                 mov     [ebp+var_4], eax
.text:0001663B                 mov     ecx, [ebp+arg_0]
.text:0001663E                 cmp     dword ptr [ecx+80h], 0
.text:00016645                 jz      short loc_16673
.text:00016647                 mov     esi, esp
.text:00016649                 mov     edx, [ebp+arg_0]
.text:0001664C                 mov     eax, [edx+88h]
.text:00016652                 push    eax
.text:00016653                 mov     ecx, [ebp+arg_0]
.text:00016656                 mov     edx, [ecx+80h]
.text:0001665C                 mov     eax, [edx+20h]
.text:0001665F                 call    eax
.text:00016661                 add     esp, 4
.text:00016664                 cmp     esi, esp
.text:00016666                 call    __RTC_CheckEsp
.text:0001666B                 mov     ecx, [ebp+var_4]
.text:0001666E                 sub     ecx, eax
.text:00016670                 mov     [ebp+var_4], ecx
.text:00016673
.text:00016673 loc_16673:                              ; CODE XREF: _ssh2_pkt_send_with_padding+8Dj
.text:00016673                 push    2
.text:00016675                 call    _ssh2_pkt_init
.text:0001667A                 add     esp, 4
.text:0001667D                 mov     [ebp+arg_4], eax
.text:00016680                 mov     edx, [ebp+arg_4]
.text:00016683                 push    edx
.text:00016684                 call    _ssh_pkt_addstring_start
.text:00016689                 add     esp, 4
.text:0001668C                 mov     [ebp+var_8], 0
.text:00016693                 jmp     short loc_1669E
.text:00016695 ; ---------------------------------------------------------------------------
.text:00016695
.text:00016695 loc_16695:                              ; CODE XREF: _ssh2_pkt_send_with_padding+108j
.text:00016695                 mov     eax, [ebp+var_8]
.text:00016698                 add     eax, 1
.text:0001669B                 mov     [ebp+var_8], eax
.text:0001669E
.text:0001669E loc_1669E:                              ; CODE XREF: _ssh2_pkt_send_with_padding+DBj
.text:0001669E                 mov     ecx, [ebp+var_8]
.text:000166A1                 cmp     ecx, [ebp+var_4]
.text:000166A4                 jge     short loc_166C2
.text:000166A6                 call    _random_byte
.text:000166AB                 mov     byte ptr [ebp+Src+3], al
.text:000166AE                 push    1               ; Size
.text:000166B0                 lea     edx, [ebp+Src+3]
.text:000166B3                 push    edx             ; Src
.text:000166B4                 mov     eax, [ebp+arg_4]
.text:000166B7                 push    eax             ; int
.text:000166B8                 call    _ssh_pkt_addstring_data
.text:000166BD                 add     esp, 0Ch
.text:000166C0                 jmp     short loc_16695
.text:000166C2 ; ---------------------------------------------------------------------------
.text:000166C2
.text:000166C2 loc_166C2:                              ; CODE XREF: _ssh2_pkt_send_with_padding+ECj
.text:000166C2                 mov     ecx, [ebp+arg_4]
.text:000166C5                 push    ecx
.text:000166C6                 mov     edx, [ebp+arg_0]
.text:000166C9                 push    edx
.text:000166CA                 call    _ssh2_pkt_defer
.text:000166CF                 add     esp, 8
.text:000166D2
.text:000166D2 loc_166D2:                              ; CODE XREF: _ssh2_pkt_send_with_padding+32j
.text:000166D2                                         ; _ssh2_pkt_send_with_padding+44j
.text:000166D2                 mov     eax, [ebp+arg_0]
.text:000166D5                 push    eax
.text:000166D6                 call    _ssh_pkt_defersend
.text:000166DB                 add     esp, 4
.text:000166DE                 push    edx
.text:000166DF                 mov     ecx, ebp
.text:000166E1                 push    eax
.text:000166E2                 lea     edx, $LN10_3
.text:000166E8                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:000166ED                 pop     eax
.text:000166EE                 pop     edx
.text:000166EF                 pop     esi
.text:000166F0                 add     esp, 14h
.text:000166F3                 cmp     ebp, esp
.text:000166F5                 call    __RTC_CheckEsp
.text:000166FA                 mov     esp, ebp
.text:000166FC                 pop     ebp
.text:000166FD                 retn
.text:000166FD _ssh2_pkt_send_with_padding endp
.text:000166FD
.text:000166FD ; ---------------------------------------------------------------------------
.text:000166FE                 align 10h
.text:00016700 $LN10_3         dd 1                    ; DATA XREF: _ssh2_pkt_send_with_padding+12Ao
.text:00016704                 dd offset $LN9_2
.text:00016708 $LN9_2          dd 0FFFFFFF3h, 1        ; DATA XREF: .text:00016704o
.text:00016710                 dd offset $LN8_2
.text:00016714 $LN8_2          dd 0CCCC0063h           ; DATA XREF: .text:00016710o
.text:00016718
.text:00016718 ; =============== S U B R O U T I N E =======================================
.text:00016718
.text:00016718 ; Attributes: bp-based frame
.text:00016718
.text:00016718 _ssh2_pkt_defer proc near               ; CODE XREF: _ssh2_pkt_send_with_padding+23p
.text:00016718                                         ; _ssh2_pkt_send_with_padding+112p
.text:00016718
.text:00016718 arg_0           = dword ptr  8
.text:00016718 arg_4           = dword ptr  0Ch
.text:00016718
.text:00016718                 push    ebp
.text:00016719                 mov     ebp, esp
.text:0001671B                 mov     eax, [ebp+arg_0]
.text:0001671E                 cmp     dword ptr [eax+138h], 0
.text:00016725                 jz      short loc_16739
.text:00016727                 mov     ecx, [ebp+arg_4]
.text:0001672A                 push    ecx
.text:0001672B                 mov     edx, [ebp+arg_0]
.text:0001672E                 push    edx
.text:0001672F                 call    _ssh2_pkt_queue
.text:00016734                 add     esp, 8
.text:00016737                 jmp     short loc_1674B
.text:00016739 ; ---------------------------------------------------------------------------
.text:00016739
.text:00016739 loc_16739:                              ; CODE XREF: _ssh2_pkt_defer+Dj
.text:00016739                 push    0
.text:0001673B                 mov     eax, [ebp+arg_4]
.text:0001673E                 push    eax
.text:0001673F                 mov     ecx, [ebp+arg_0]
.text:00016742                 push    ecx
.text:00016743                 call    _ssh2_pkt_defer_noqueue
.text:00016748                 add     esp, 0Ch
.text:0001674B
.text:0001674B loc_1674B:                              ; CODE XREF: _ssh2_pkt_defer+1Fj
.text:0001674B                 cmp     ebp, esp
.text:0001674D                 call    __RTC_CheckEsp
.text:00016752                 pop     ebp
.text:00016753                 retn
.text:00016753 _ssh2_pkt_defer endp
.text:00016753
.text:00016753 ; ---------------------------------------------------------------------------
.text:00016754                 align 8
.text:00016758
.text:00016758 ; =============== S U B R O U T I N E =======================================
.text:00016758
.text:00016758 ; Attributes: bp-based frame
.text:00016758
.text:00016758 ; int __cdecl ssh2_add_sigblob(int, int, int, int, int, size_t)
.text:00016758 _ssh2_add_sigblob proc near             ; CODE XREF: _do_ssh2_authconn+1CB5p
.text:00016758                                         ; _do_ssh2_authconn+243Dp
.text:00016758
.text:00016758 var_24          = dword ptr -24h
.text:00016758 var_20          = dword ptr -20h
.text:00016758 var_1C          = dword ptr -1Ch
.text:00016758 var_18          = dword ptr -18h
.text:00016758 var_14          = dword ptr -14h
.text:00016758 var_10          = dword ptr -10h
.text:00016758 Size            = dword ptr -0Ch
.text:00016758 Src             = dword ptr -8
.text:00016758 var_4           = dword ptr -4
.text:00016758 arg_0           = dword ptr  8
.text:00016758 arg_4           = dword ptr  0Ch
.text:00016758 arg_8           = dword ptr  10h
.text:00016758 arg_C           = dword ptr  14h
.text:00016758 arg_10          = dword ptr  18h
.text:00016758 arg_14          = dword ptr  1Ch
.text:00016758
.text:00016758                 push    ebp
.text:00016759                 mov     ebp, esp
.text:0001675B                 sub     esp, 24h
.text:0001675E                 mov     eax, 0CCCCCCCCh
.text:00016763                 mov     [ebp+var_24], eax
.text:00016766                 mov     [ebp+var_20], eax
.text:00016769                 mov     [ebp+var_1C], eax
.text:0001676C                 mov     [ebp+var_18], eax
.text:0001676F                 mov     [ebp+var_14], eax
.text:00016772                 mov     [ebp+var_10], eax
.text:00016775                 mov     [ebp+Size], eax
.text:00016778                 mov     [ebp+Src], eax
.text:0001677B                 mov     [ebp+var_4], eax
.text:0001677E                 mov     eax, [ebp+arg_8]
.text:00016781                 mov     [ebp+var_4], eax
.text:00016784                 mov     ecx, [ebp+arg_10]
.text:00016787                 mov     [ebp+Src], ecx
.text:0001678A                 mov     edx, [ebp+arg_0]
.text:0001678D                 mov     eax, [edx+50h]
.text:00016790                 and     eax, 10h
.text:00016793                 jz      $give_up$89261
.text:00016799                 cmp     [ebp+arg_C], 0Fh
.text:0001679D                 jle     $give_up$89261
.text:000167A3                 mov     ecx, [ebp+var_4]
.text:000167A6                 movzx   edx, byte ptr [ecx]
.text:000167A9                 shl     edx, 18h
.text:000167AC                 mov     eax, [ebp+var_4]
.text:000167AF                 movzx   ecx, byte ptr [eax+1]
.text:000167B3                 shl     ecx, 10h
.text:000167B6                 or      edx, ecx
.text:000167B8                 mov     eax, [ebp+var_4]
.text:000167BB                 movzx   ecx, byte ptr [eax+2]
.text:000167BF                 shl     ecx, 8
.text:000167C2                 or      edx, ecx
.text:000167C4                 mov     eax, [ebp+var_4]
.text:000167C7                 movzx   ecx, byte ptr [eax+3]
.text:000167CB                 or      edx, ecx
.text:000167CD                 cmp     edx, 7
.text:000167D0                 jnz     $give_up$89261
.text:000167D6                 push    7               ; Size
.text:000167D8                 push    offset $SG89247 ; "ssh-rsa"
.text:000167DD                 mov     edx, [ebp+var_4]
.text:000167E0                 add     edx, 4
.text:000167E3                 push    edx             ; Buf1
.text:000167E4                 call    _memcmp
.text:000167E9                 add     esp, 0Ch
.text:000167EC                 test    eax, eax
.text:000167EE                 jnz     $give_up$89261
.text:000167F4                 mov     [ebp+Size], 0Bh
.text:000167FB                 mov     eax, [ebp+var_4]
.text:000167FE                 add     eax, [ebp+Size]
.text:00016801                 movzx   ecx, byte ptr [eax]
.text:00016804                 shl     ecx, 18h
.text:00016807                 mov     edx, [ebp+var_4]
.text:0001680A                 add     edx, [ebp+Size]
.text:0001680D                 movzx   eax, byte ptr [edx+1]
.text:00016811                 shl     eax, 10h
.text:00016814                 or      ecx, eax
.text:00016816                 mov     edx, [ebp+var_4]
.text:00016819                 add     edx, [ebp+Size]
.text:0001681C                 movzx   eax, byte ptr [edx+2]
.text:00016820                 shl     eax, 8
.text:00016823                 or      ecx, eax
.text:00016825                 mov     edx, [ebp+var_4]
.text:00016828                 add     edx, [ebp+Size]
.text:0001682B                 movzx   eax, byte ptr [edx+3]
.text:0001682F                 or      ecx, eax
.text:00016831                 push    ecx
.text:00016832                 call    _toint
.text:00016837                 add     esp, 4
.text:0001683A                 mov     [ebp+var_10], eax
.text:0001683D                 cmp     [ebp+var_10], 0
.text:00016841                 jl      short loc_16851
.text:00016843                 mov     ecx, [ebp+arg_C]
.text:00016846                 sub     ecx, [ebp+Size]
.text:00016849                 sub     ecx, 4
.text:0001684C                 cmp     [ebp+var_10], ecx
.text:0001684F                 jle     short loc_16856
.text:00016851
.text:00016851 loc_16851:                              ; CODE XREF: _ssh2_add_sigblob+E9j
.text:00016851                 jmp     $give_up$89261
.text:00016856 ; ---------------------------------------------------------------------------
.text:00016856
.text:00016856 loc_16856:                              ; CODE XREF: _ssh2_add_sigblob+F7j
.text:00016856                 mov     edx, [ebp+var_10]
.text:00016859                 mov     eax, [ebp+Size]
.text:0001685C                 lea     ecx, [eax+edx+4]
.text:00016860                 mov     [ebp+Size], ecx
.text:00016863                 mov     edx, [ebp+arg_C]
.text:00016866                 sub     edx, [ebp+Size]
.text:00016869                 cmp     edx, 4
.text:0001686C                 jge     short loc_16873
.text:0001686E                 jmp     $give_up$89261
.text:00016873 ; ---------------------------------------------------------------------------
.text:00016873
.text:00016873 loc_16873:                              ; CODE XREF: _ssh2_add_sigblob+114j
.text:00016873                 mov     eax, [ebp+var_4]
.text:00016876                 add     eax, [ebp+Size]
.text:00016879                 movzx   ecx, byte ptr [eax]
.text:0001687C                 shl     ecx, 18h
.text:0001687F                 mov     edx, [ebp+var_4]
.text:00016882                 add     edx, [ebp+Size]
.text:00016885                 movzx   eax, byte ptr [edx+1]
.text:00016889                 shl     eax, 10h
.text:0001688C                 or      ecx, eax
.text:0001688E                 mov     edx, [ebp+var_4]
.text:00016891                 add     edx, [ebp+Size]
.text:00016894                 movzx   eax, byte ptr [edx+2]
.text:00016898                 shl     eax, 8
.text:0001689B                 or      ecx, eax
.text:0001689D                 mov     edx, [ebp+var_4]
.text:000168A0                 add     edx, [ebp+Size]
.text:000168A3                 movzx   eax, byte ptr [edx+3]
.text:000168A7                 or      ecx, eax
.text:000168A9                 push    ecx
.text:000168AA                 call    _toint
.text:000168AF                 add     esp, 4
.text:000168B2                 mov     [ebp+var_10], eax
.text:000168B5                 cmp     [ebp+var_10], 0
.text:000168B9                 jl      short loc_168C9
.text:000168BB                 mov     ecx, [ebp+arg_C]
.text:000168BE                 sub     ecx, [ebp+Size]
.text:000168C1                 sub     ecx, 4
.text:000168C4                 cmp     [ebp+var_10], ecx
.text:000168C7                 jle     short loc_168CE
.text:000168C9
.text:000168C9 loc_168C9:                              ; CODE XREF: _ssh2_add_sigblob+161j
.text:000168C9                 jmp     $give_up$89261
.text:000168CE ; ---------------------------------------------------------------------------
.text:000168CE
.text:000168CE loc_168CE:                              ; CODE XREF: _ssh2_add_sigblob+16Fj
.text:000168CE                 mov     edx, [ebp+Size]
.text:000168D1                 add     edx, 4
.text:000168D4                 mov     [ebp+Size], edx
.text:000168D7
.text:000168D7 loc_168D7:                              ; CODE XREF: _ssh2_add_sigblob+1A4j
.text:000168D7                 cmp     [ebp+var_10], 0
.text:000168DB                 jle     short loc_168FE
.text:000168DD                 mov     eax, [ebp+var_4]
.text:000168E0                 add     eax, [ebp+Size]
.text:000168E3                 movzx   ecx, byte ptr [eax]
.text:000168E6                 test    ecx, ecx
.text:000168E8                 jnz     short loc_168FE
.text:000168EA                 mov     edx, [ebp+var_10]
.text:000168ED                 sub     edx, 1
.text:000168F0                 mov     [ebp+var_10], edx
.text:000168F3                 mov     eax, [ebp+Size]
.text:000168F6                 add     eax, 1
.text:000168F9                 mov     [ebp+Size], eax
.text:000168FC                 jmp     short loc_168D7
.text:000168FE ; ---------------------------------------------------------------------------
.text:000168FE
.text:000168FE loc_168FE:                              ; CODE XREF: _ssh2_add_sigblob+183j
.text:000168FE                                         ; _ssh2_add_sigblob+190j
.text:000168FE                 mov     [ebp+Size], 0Bh
.text:00016905                 mov     ecx, [ebp+Size]
.text:00016908                 add     ecx, 4
.text:0001690B                 cmp     [ebp+arg_14], ecx
.text:0001690E                 jge     short loc_16915
.text:00016910                 jmp     $give_up$89261
.text:00016915 ; ---------------------------------------------------------------------------
.text:00016915
.text:00016915 loc_16915:                              ; CODE XREF: _ssh2_add_sigblob+1B6j
.text:00016915                 mov     edx, [ebp+Src]
.text:00016918                 add     edx, [ebp+Size]
.text:0001691B                 movzx   eax, byte ptr [edx]
.text:0001691E                 shl     eax, 18h
.text:00016921                 mov     ecx, [ebp+Src]
.text:00016924                 add     ecx, [ebp+Size]
.text:00016927                 movzx   edx, byte ptr [ecx+1]
.text:0001692B                 shl     edx, 10h
.text:0001692E                 or      eax, edx
.text:00016930                 mov     ecx, [ebp+Src]
.text:00016933                 add     ecx, [ebp+Size]
.text:00016936                 movzx   edx, byte ptr [ecx+2]
.text:0001693A                 shl     edx, 8
.text:0001693D                 or      eax, edx
.text:0001693F                 mov     ecx, [ebp+Src]
.text:00016942                 add     ecx, [ebp+Size]
.text:00016945                 movzx   edx, byte ptr [ecx+3]
.text:00016949                 or      eax, edx
.text:0001694B                 push    eax
.text:0001694C                 call    _toint
.text:00016951                 add     esp, 4
.text:00016954                 mov     [ebp+var_14], eax
.text:00016957                 mov     eax, [ebp+arg_14]
.text:0001695A                 sub     eax, [ebp+Size]
.text:0001695D                 sub     eax, 4
.text:00016960                 cmp     [ebp+var_14], eax
.text:00016963                 jz      short loc_1696A
.text:00016965                 jmp     $give_up$89261
.text:0001696A ; ---------------------------------------------------------------------------
.text:0001696A
.text:0001696A loc_1696A:                              ; CODE XREF: _ssh2_add_sigblob+20Bj
.text:0001696A                 mov     ecx, [ebp+var_10]
.text:0001696D                 cmp     ecx, [ebp+var_14]
.text:00016970                 jz      $give_up$89261
.text:00016976                 mov     edx, [ebp+arg_4]
.text:00016979                 push    edx
.text:0001697A                 call    _ssh_pkt_addstring_start
.text:0001697F                 add     esp, 4
.text:00016982                 mov     eax, [ebp+Size]
.text:00016985                 push    eax             ; Size
.text:00016986                 mov     ecx, [ebp+Src]
.text:00016989                 push    ecx             ; Src
.text:0001698A                 mov     edx, [ebp+arg_4]
.text:0001698D                 push    edx             ; int
.text:0001698E                 call    _ssh_pkt_addstring_data
.text:00016993                 add     esp, 0Ch
.text:00016996                 mov     eax, [ebp+Size]
.text:00016999                 add     eax, 4
.text:0001699C                 mov     [ebp+Size], eax
.text:0001699F                 mov     ecx, [ebp+var_10]
.text:000169A2                 sar     ecx, 18h
.text:000169A5                 mov     byte ptr [ebp+var_1C], cl
.text:000169A8                 mov     edx, [ebp+var_10]
.text:000169AB                 sar     edx, 10h
.text:000169AE                 mov     byte ptr [ebp+var_1C+1], dl
.text:000169B1                 mov     eax, [ebp+var_10]
.text:000169B4                 sar     eax, 8
.text:000169B7                 mov     byte ptr [ebp+var_1C+2], al
.text:000169BA                 mov     cl, byte ptr [ebp+var_10]
.text:000169BD                 mov     byte ptr [ebp+var_1C+3], cl
.text:000169C0                 push    4               ; Size
.text:000169C2                 lea     edx, [ebp+var_1C]
.text:000169C5                 push    edx             ; Src
.text:000169C6                 mov     eax, [ebp+arg_4]
.text:000169C9                 push    eax             ; int
.text:000169CA                 call    _ssh_pkt_addstring_data
.text:000169CF                 add     esp, 0Ch
.text:000169D2                 mov     byte ptr [ebp+var_1C], 0
.text:000169D6
.text:000169D6 loc_169D6:                              ; CODE XREF: _ssh2_add_sigblob+2B9j
.text:000169D6                 mov     ecx, [ebp+var_10]
.text:000169D9                 mov     edx, [ebp+var_14]
.text:000169DC                 mov     eax, [ebp+var_10]
.text:000169DF                 sub     eax, 1
.text:000169E2                 mov     [ebp+var_10], eax
.text:000169E5                 cmp     ecx, edx
.text:000169E7                 jle     short loc_169F2
.text:000169E9                 mov     [ebp+var_24], 1
.text:000169F0                 jmp     short loc_169F9
.text:000169F2 ; ---------------------------------------------------------------------------
.text:000169F2
.text:000169F2 loc_169F2:                              ; CODE XREF: _ssh2_add_sigblob+28Fj
.text:000169F2                 mov     [ebp+var_24], 0
.text:000169F9
.text:000169F9 loc_169F9:                              ; CODE XREF: _ssh2_add_sigblob+298j
.text:000169F9                 cmp     [ebp+var_24], 0
.text:000169FD                 jz      short loc_16A13
.text:000169FF                 push    1               ; Size
.text:00016A01                 lea     ecx, [ebp+var_1C]
.text:00016A04                 push    ecx             ; Src
.text:00016A05                 mov     edx, [ebp+arg_4]
.text:00016A08                 push    edx             ; int
.text:00016A09                 call    _ssh_pkt_addstring_data
.text:00016A0E                 add     esp, 0Ch
.text:00016A11                 jmp     short loc_169D6
.text:00016A13 ; ---------------------------------------------------------------------------
.text:00016A13
.text:00016A13 loc_16A13:                              ; CODE XREF: _ssh2_add_sigblob+2A5j
.text:00016A13                 mov     eax, [ebp+var_14]
.text:00016A16                 push    eax             ; Size
.text:00016A17                 mov     ecx, [ebp+Src]
.text:00016A1A                 add     ecx, [ebp+Size]
.text:00016A1D                 push    ecx             ; Src
.text:00016A1E                 mov     edx, [ebp+arg_4]
.text:00016A21                 push    edx             ; int
.text:00016A22                 call    _ssh_pkt_addstring_data
.text:00016A27                 add     esp, 0Ch
.text:00016A2A                 jmp     short loc_16A4C
.text:00016A2C ; ---------------------------------------------------------------------------
.text:00016A2C
.text:00016A2C $give_up$89261:                         ; CODE XREF: _ssh2_add_sigblob+3Bj
.text:00016A2C                                         ; _ssh2_add_sigblob+45j ...
.text:00016A2C                 mov     eax, [ebp+arg_4]
.text:00016A2F                 push    eax
.text:00016A30                 call    _ssh_pkt_addstring_start
.text:00016A35                 add     esp, 4
.text:00016A38                 mov     ecx, [ebp+arg_14]
.text:00016A3B                 push    ecx             ; Size
.text:00016A3C                 mov     edx, [ebp+Src]
.text:00016A3F                 push    edx             ; Src
.text:00016A40                 mov     eax, [ebp+arg_4]
.text:00016A43                 push    eax             ; int
.text:00016A44                 call    _ssh_pkt_addstring_data
.text:00016A49                 add     esp, 0Ch
.text:00016A4C
.text:00016A4C loc_16A4C:                              ; CODE XREF: _ssh2_add_sigblob+2D2j
.text:00016A4C                 push    edx
.text:00016A4D                 mov     ecx, ebp
.text:00016A4F                 push    eax
.text:00016A50                 lea     edx, $LN20_1
.text:00016A56                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00016A5B                 pop     eax
.text:00016A5C                 pop     edx
.text:00016A5D                 add     esp, 24h
.text:00016A60                 cmp     ebp, esp
.text:00016A62                 call    __RTC_CheckEsp
.text:00016A67                 mov     esp, ebp
.text:00016A69                 pop     ebp
.text:00016A6A                 retn
.text:00016A6A _ssh2_add_sigblob endp
.text:00016A6A
.text:00016A6A ; ---------------------------------------------------------------------------
.text:00016A6B                 align 4
.text:00016A6C $LN20_1         dd 1                    ; DATA XREF: _ssh2_add_sigblob+2F8o
.text:00016A70                 dd offset $LN19_0
.text:00016A74 $LN19_0         dd 0FFFFFFE4h, 4        ; DATA XREF: .text:00016A70o
.text:00016A7C                 dd offset $LN18_0       ; "newlen"
.text:00016A80 $LN18_0         db 'newlen',0           ; DATA XREF: .text:00016A7Co
.text:00016A87                 align 4
.text:00016A88
.text:00016A88 ; =============== S U B R O U T I N E =======================================
.text:00016A88
.text:00016A88 ; Attributes: bp-based frame
.text:00016A88
.text:00016A88 _ssh_setup_portfwd proc near            ; CODE XREF: _do_ssh2_authconn+3ED6p
.text:00016A88                                         ; _do_ssh1_connection+3EAp ...
.text:00016A88
.text:00016A88 var_E4          = dword ptr -0E4h
.text:00016A88 var_E0          = dword ptr -0E0h
.text:00016A88 var_DC          = dword ptr -0DCh
.text:00016A88 var_D8          = dword ptr -0D8h
.text:00016A88 var_D4          = dword ptr -0D4h
.text:00016A88 var_D0          = dword ptr -0D0h
.text:00016A88 var_CC          = dword ptr -0CCh
.text:00016A88 var_C8          = dword ptr -0C8h
.text:00016A88 var_C4          = dword ptr -0C4h
.text:00016A88 var_C0          = dword ptr -0C0h
.text:00016A88 var_BC          = dword ptr -0BCh
.text:00016A88 var_B8          = dword ptr -0B8h
.text:00016A88 var_B4          = dword ptr -0B4h
.text:00016A88 var_B0          = dword ptr -0B0h
.text:00016A88 var_AC          = dword ptr -0ACh
.text:00016A88 var_A8          = dword ptr -0A8h
.text:00016A88 var_A4          = dword ptr -0A4h
.text:00016A88 var_A0          = dword ptr -0A0h
.text:00016A88 var_9C          = dword ptr -9Ch
.text:00016A88 var_98          = dword ptr -98h
.text:00016A88 var_94          = dword ptr -94h
.text:00016A88 var_90          = dword ptr -90h
.text:00016A88 var_8C          = dword ptr -8Ch
.text:00016A88 var_88          = dword ptr -88h
.text:00016A88 var_84          = dword ptr -84h
.text:00016A88 var_80          = dword ptr -80h
.text:00016A88 var_7C          = dword ptr -7Ch
.text:00016A88 var_78          = dword ptr -78h
.text:00016A88 var_74          = dword ptr -74h
.text:00016A88 var_70          = dword ptr -70h
.text:00016A88 var_6C          = dword ptr -6Ch
.text:00016A88 var_68          = dword ptr -68h
.text:00016A88 var_64          = dword ptr -64h
.text:00016A88 var_60          = dword ptr -60h
.text:00016A88 var_5C          = dword ptr -5Ch
.text:00016A88 var_58          = dword ptr -58h
.text:00016A88 var_54          = dword ptr -54h
.text:00016A88 var_50          = dword ptr -50h
.text:00016A88 var_4C          = dword ptr -4Ch
.text:00016A88 Str             = dword ptr -48h
.text:00016A88 var_44          = dword ptr -44h
.text:00016A88 var_40          = dword ptr -40h
.text:00016A88 var_3C          = dword ptr -3Ch
.text:00016A88 var_38          = dword ptr -38h
.text:00016A88 var_32          = byte ptr -32h
.text:00016A88 var_31          = byte ptr -31h
.text:00016A88 var_30          = dword ptr -30h
.text:00016A88 var_2C          = dword ptr -2Ch
.text:00016A88 var_28          = dword ptr -28h
.text:00016A88 var_24          = dword ptr -24h
.text:00016A88 var_20          = dword ptr -20h
.text:00016A88 var_1C          = dword ptr -1Ch
.text:00016A88 Str1            = dword ptr -18h
.text:00016A88 var_10          = dword ptr -10h
.text:00016A88 var_8           = dword ptr -8
.text:00016A88 var_4           = dword ptr -4
.text:00016A88 arg_0           = dword ptr  8
.text:00016A88 arg_4           = dword ptr  0Ch
.text:00016A88
.text:00016A88                 push    ebp
.text:00016A89                 mov     ebp, esp
.text:00016A8B                 sub     esp, 0E4h
.text:00016A91                 push    edi
.text:00016A92                 lea     edi, [ebp+var_E4]
.text:00016A98                 mov     ecx, 39h ; '9'
.text:00016A9D                 mov     eax, 0CCCCCCCCh
.text:00016AA2                 rep stosd
.text:00016AA4                 mov     eax, [ebp+arg_0]
.text:00016AA7                 cmp     dword ptr [eax+114h], 0
.text:00016AAE                 jnz     short loc_16AC8
.text:00016AB0                 push    offset _ssh_portcmp
.text:00016AB5                 call    _newtree234
.text:00016ABA                 add     esp, 4
.text:00016ABD                 mov     ecx, [ebp+arg_0]
.text:00016AC0                 mov     [ecx+114h], eax
.text:00016AC6                 jmp     short loc_16B04
.text:00016AC8 ; ---------------------------------------------------------------------------
.text:00016AC8
.text:00016AC8 loc_16AC8:                              ; CODE XREF: _ssh_setup_portfwd+26j
.text:00016AC8                 mov     [ebp+var_20], 0
.text:00016ACF                 jmp     short loc_16ADA
.text:00016AD1 ; ---------------------------------------------------------------------------
.text:00016AD1
.text:00016AD1 loc_16AD1:                              ; CODE XREF: _ssh_setup_portfwd+7Aj
.text:00016AD1                 mov     edx, [ebp+var_20]
.text:00016AD4                 add     edx, 1
.text:00016AD7                 mov     [ebp+var_20], edx
.text:00016ADA
.text:00016ADA loc_16ADA:                              ; CODE XREF: _ssh_setup_portfwd+47j
.text:00016ADA                 mov     eax, [ebp+var_20]
.text:00016ADD                 push    eax
.text:00016ADE                 mov     ecx, [ebp+arg_0]
.text:00016AE1                 mov     edx, [ecx+114h]
.text:00016AE7                 push    edx
.text:00016AE8                 call    _index234
.text:00016AED                 add     esp, 8
.text:00016AF0                 mov     [ebp+var_1C], eax
.text:00016AF3                 cmp     [ebp+var_1C], 0
.text:00016AF7                 jz      short loc_16B04
.text:00016AF9                 mov     eax, [ebp+var_1C]
.text:00016AFC                 mov     dword ptr [eax], 0
.text:00016B02                 jmp     short loc_16AD1
.text:00016B04 ; ---------------------------------------------------------------------------
.text:00016B04
.text:00016B04 loc_16B04:                              ; CODE XREF: _ssh_setup_portfwd+3Ej
.text:00016B04                                         ; _ssh_setup_portfwd+6Fj
.text:00016B04                 lea     ecx, [ebp+var_10]
.text:00016B07                 push    ecx
.text:00016B08                 push    0
.text:00016B0A                 push    96h ; 'û'
.text:00016B0F                 mov     edx, [ebp+arg_4]
.text:00016B12                 push    edx
.text:00016B13                 call    _conf_get_str_strs
.text:00016B18                 add     esp, 10h
.text:00016B1B                 mov     [ebp+Str1], eax
.text:00016B1E                 jmp     short loc_16B3C
.text:00016B20 ; ---------------------------------------------------------------------------
.text:00016B20
.text:00016B20 loc_16B20:                              ; CODE XREF: _ssh_setup_portfwd:loc_16EE2j
.text:00016B20                 lea     eax, [ebp+var_10]
.text:00016B23                 push    eax
.text:00016B24                 mov     ecx, [ebp+var_10]
.text:00016B27                 push    ecx
.text:00016B28                 push    96h ; 'û'
.text:00016B2D                 mov     edx, [ebp+arg_4]
.text:00016B30                 push    edx
.text:00016B31                 call    _conf_get_str_strs
.text:00016B36                 add     esp, 10h
.text:00016B39                 mov     [ebp+Str1], eax
.text:00016B3C
.text:00016B3C loc_16B3C:                              ; CODE XREF: _ssh_setup_portfwd+96j
.text:00016B3C                 cmp     [ebp+Str1], 0
.text:00016B40                 jz      loc_16EE7
.text:00016B46                 mov     eax, [ebp+var_10]
.text:00016B49                 mov     [ebp+var_24], eax
.text:00016B4C                 mov     [ebp+var_31], 41h ; 'A'
.text:00016B50                 mov     [ebp+var_32], 4Ch ; 'L'
.text:00016B54                 mov     ecx, [ebp+var_24]
.text:00016B57                 movsx   edx, byte ptr [ecx]
.text:00016B5A                 cmp     edx, 41h ; 'A'
.text:00016B5D                 jz      short loc_16B75
.text:00016B5F                 mov     eax, [ebp+var_24]
.text:00016B62                 movsx   ecx, byte ptr [eax]
.text:00016B65                 cmp     ecx, 34h ; '4'
.text:00016B68                 jz      short loc_16B75
.text:00016B6A                 mov     edx, [ebp+var_24]
.text:00016B6D                 movsx   eax, byte ptr [edx]
.text:00016B70                 cmp     eax, 36h ; '6'
.text:00016B73                 jnz     short loc_16B86
.text:00016B75
.text:00016B75 loc_16B75:                              ; CODE XREF: _ssh_setup_portfwd+D5j
.text:00016B75                                         ; _ssh_setup_portfwd+E0j
.text:00016B75                 mov     ecx, [ebp+var_24]
.text:00016B78                 mov     dl, [ecx]
.text:00016B7A                 mov     [ebp+var_31], dl
.text:00016B7D                 mov     eax, [ebp+var_24]
.text:00016B80                 add     eax, 1
.text:00016B83                 mov     [ebp+var_24], eax
.text:00016B86
.text:00016B86 loc_16B86:                              ; CODE XREF: _ssh_setup_portfwd+EBj
.text:00016B86                 mov     ecx, [ebp+var_24]
.text:00016B89                 movsx   edx, byte ptr [ecx]
.text:00016B8C                 cmp     edx, 4Ch ; 'L'
.text:00016B8F                 jz      short loc_16B9C
.text:00016B91                 mov     eax, [ebp+var_24]
.text:00016B94                 movsx   ecx, byte ptr [eax]
.text:00016B97                 cmp     ecx, 52h ; 'R'
.text:00016B9A                 jnz     short loc_16BAD
.text:00016B9C
.text:00016B9C loc_16B9C:                              ; CODE XREF: _ssh_setup_portfwd+107j
.text:00016B9C                 mov     edx, [ebp+var_24]
.text:00016B9F                 mov     al, [edx]
.text:00016BA1                 mov     [ebp+var_32], al
.text:00016BA4                 mov     ecx, [ebp+var_24]
.text:00016BA7                 add     ecx, 1
.text:00016BAA                 mov     [ebp+var_24], ecx
.text:00016BAD
.text:00016BAD loc_16BAD:                              ; CODE XREF: _ssh_setup_portfwd+112j
.text:00016BAD                 push    3Ah ; ':'
.text:00016BAF                 mov     edx, [ebp+var_24]
.text:00016BB2                 push    edx
.text:00016BB3                 call    _host_strchr
.text:00016BB8                 add     esp, 8
.text:00016BBB                 mov     [ebp+var_28], eax
.text:00016BBE                 cmp     [ebp+var_28], 0
.text:00016BC2                 jz      short loc_16C05
.text:00016BC4                 mov     eax, [ebp+var_24]
.text:00016BC7                 push    eax
.text:00016BC8                 mov     ecx, [ebp+var_28]
.text:00016BCB                 sub     ecx, [ebp+var_24]
.text:00016BCE                 push    ecx
.text:00016BCF                 push    offset $SG90918 ; "%.*s"
.text:00016BD4                 call    _dupprintf
.text:00016BD9                 add     esp, 0Ch
.text:00016BDC                 mov     [ebp+var_58], eax
.text:00016BDF                 mov     edx, [ebp+var_58]
.text:00016BE2                 push    edx
.text:00016BE3                 call    _host_strduptrim
.text:00016BE8                 add     esp, 4
.text:00016BEB                 mov     [ebp+var_50], eax
.text:00016BEE                 mov     eax, [ebp+var_58]
.text:00016BF1                 push    eax
.text:00016BF2                 call    _safefree
.text:00016BF7                 add     esp, 4
.text:00016BFA                 mov     ecx, [ebp+var_28]
.text:00016BFD                 add     ecx, 1
.text:00016C00                 mov     [ebp+Str], ecx
.text:00016C03                 jmp     short loc_16C12
.text:00016C05 ; ---------------------------------------------------------------------------
.text:00016C05
.text:00016C05 loc_16C05:                              ; CODE XREF: _ssh_setup_portfwd+13Aj
.text:00016C05                 mov     [ebp+var_50], 0
.text:00016C0C                 mov     edx, [ebp+var_24]
.text:00016C0F                 mov     [ebp+Str], edx
.text:00016C12
.text:00016C12 loc_16C12:                              ; CODE XREF: _ssh_setup_portfwd+17Bj
.text:00016C12                 mov     eax, [ebp+Str]
.text:00016C15                 push    eax             ; Str
.text:00016C16                 call    _atoi
.text:00016C1B                 add     esp, 4
.text:00016C1E                 mov     [ebp+var_38], eax
.text:00016C21                 mov     [ebp+var_40], 0
.text:00016C28                 cmp     [ebp+var_38], 0
.text:00016C2C                 jnz     short loc_16C5F
.text:00016C2E                 mov     [ebp+var_40], 1
.text:00016C35                 mov     ecx, [ebp+Str]
.text:00016C38                 push    ecx
.text:00016C39                 call    _net_service_lookup
.text:00016C3E                 add     esp, 4
.text:00016C41                 mov     [ebp+var_38], eax
.text:00016C44                 cmp     [ebp+var_38], 0
.text:00016C48                 jnz     short loc_16C5F
.text:00016C4A                 mov     edx, [ebp+Str]
.text:00016C4D                 push    edx
.text:00016C4E                 push    offset $SG90923 ; "Service lookup failed for source port \"...
.text:00016C53                 mov     eax, [ebp+arg_0]
.text:00016C56                 push    eax
.text:00016C57                 call    _logeventf
.text:00016C5C                 add     esp, 0Ch
.text:00016C5F
.text:00016C5F loc_16C5F:                              ; CODE XREF: _ssh_setup_portfwd+1A4j
.text:00016C5F                                         ; _ssh_setup_portfwd+1C0j
.text:00016C5F                 movsx   ecx, [ebp+var_32]
.text:00016C63                 cmp     ecx, 4Ch ; 'L'
.text:00016C66                 jnz     short loc_16CA2
.text:00016C68                 push    offset $SG90925 ; Str2
.text:00016C6D                 mov     edx, [ebp+Str1]
.text:00016C70                 push    edx             ; Str1
.text:00016C71                 call    _strcmp
.text:00016C76                 add     esp, 8
.text:00016C79                 test    eax, eax
.text:00016C7B                 jnz     short loc_16CA2
.text:00016C7D                 mov     [ebp+var_54], 0
.text:00016C84                 mov     [ebp+var_4C], 0
.text:00016C8B                 mov     [ebp+var_3C], 0FFFFFFFFh
.text:00016C92                 mov     [ebp+var_44], 0
.text:00016C99                 mov     [ebp+var_32], 44h ; 'D'
.text:00016C9D                 jmp     loc_16D40
.text:00016CA2 ; ---------------------------------------------------------------------------
.text:00016CA2
.text:00016CA2 loc_16CA2:                              ; CODE XREF: _ssh_setup_portfwd+1DEj
.text:00016CA2                                         ; _ssh_setup_portfwd+1F3j
.text:00016CA2                 mov     eax, [ebp+Str1]
.text:00016CA5                 mov     [ebp+var_2C], eax
.text:00016CA8                 push    offset $SG90929
.text:00016CAD                 mov     ecx, [ebp+var_2C]
.text:00016CB0                 push    ecx
.text:00016CB1                 call    _host_strcspn
.text:00016CB6                 add     esp, 8
.text:00016CB9                 add     eax, [ebp+var_2C]
.text:00016CBC                 mov     [ebp+var_30], eax
.text:00016CBF                 mov     edx, [ebp+var_2C]
.text:00016CC2                 push    edx
.text:00016CC3                 mov     eax, [ebp+var_30]
.text:00016CC6                 sub     eax, [ebp+var_2C]
.text:00016CC9                 push    eax
.text:00016CCA                 push    offset $SG90931 ; "%.*s"
.text:00016CCF                 call    _dupprintf
.text:00016CD4                 add     esp, 0Ch
.text:00016CD7                 mov     [ebp+var_54], eax
.text:00016CDA                 mov     ecx, [ebp+var_30]
.text:00016CDD                 movsx   edx, byte ptr [ecx]
.text:00016CE0                 test    edx, edx
.text:00016CE2                 jz      short loc_16CED
.text:00016CE4                 mov     eax, [ebp+var_30]
.text:00016CE7                 add     eax, 1
.text:00016CEA                 mov     [ebp+var_30], eax
.text:00016CED
.text:00016CED loc_16CED:                              ; CODE XREF: _ssh_setup_portfwd+25Aj
.text:00016CED                 mov     ecx, [ebp+var_30]
.text:00016CF0                 mov     [ebp+var_4C], ecx
.text:00016CF3                 mov     edx, [ebp+var_4C]
.text:00016CF6                 push    edx             ; Str
.text:00016CF7                 call    _atoi
.text:00016CFC                 add     esp, 4
.text:00016CFF                 mov     [ebp+var_3C], eax
.text:00016D02                 mov     [ebp+var_44], 0
.text:00016D09                 cmp     [ebp+var_3C], 0
.text:00016D0D                 jnz     short loc_16D40
.text:00016D0F                 mov     [ebp+var_44], 1
.text:00016D16                 mov     eax, [ebp+var_4C]
.text:00016D19                 push    eax
.text:00016D1A                 call    _net_service_lookup
.text:00016D1F                 add     esp, 4
.text:00016D22                 mov     [ebp+var_3C], eax
.text:00016D25                 cmp     [ebp+var_3C], 0
.text:00016D29                 jnz     short loc_16D40
.text:00016D2B                 mov     ecx, [ebp+var_4C]
.text:00016D2E                 push    ecx
.text:00016D2F                 push    offset $SG90935 ; "Service lookup failed for destination p"...
.text:00016D34                 mov     edx, [ebp+arg_0]
.text:00016D37                 push    edx
.text:00016D38                 call    _logeventf
.text:00016D3D                 add     esp, 0Ch
.text:00016D40
.text:00016D40 loc_16D40:                              ; CODE XREF: _ssh_setup_portfwd+215j
.text:00016D40                                         ; _ssh_setup_portfwd+285j ...
.text:00016D40                 cmp     [ebp+var_38], 0
.text:00016D44                 jz      loc_16ECA
.text:00016D4A                 cmp     [ebp+var_3C], 0
.text:00016D4E                 jz      loc_16ECA
.text:00016D54                 push    2Ch ; ','
.text:00016D56                 push    1
.text:00016D58                 call    _safemalloc
.text:00016D5D                 add     esp, 8
.text:00016D60                 mov     [ebp+var_5C], eax
.text:00016D63                 movsx   eax, [ebp+var_32]
.text:00016D67                 mov     ecx, [ebp+var_5C]
.text:00016D6A                 mov     [ecx+4], eax
.text:00016D6D                 mov     edx, [ebp+var_5C]
.text:00016D70                 mov     eax, [ebp+var_50]
.text:00016D73                 mov     [edx+10h], eax
.text:00016D76                 cmp     [ebp+var_40], 0
.text:00016D7A                 jz      short loc_16D90
.text:00016D7C                 mov     ecx, [ebp+Str]
.text:00016D7F                 push    ecx
.text:00016D80                 call    _dupstr
.text:00016D85                 add     esp, 4
.text:00016D88                 mov     [ebp+var_8C], eax
.text:00016D8E                 jmp     short loc_16D9A
.text:00016D90 ; ---------------------------------------------------------------------------
.text:00016D90
.text:00016D90 loc_16D90:                              ; CODE XREF: _ssh_setup_portfwd+2F2j
.text:00016D90                 mov     [ebp+var_8C], 0
.text:00016D9A
.text:00016D9A loc_16D9A:                              ; CODE XREF: _ssh_setup_portfwd+306j
.text:00016D9A                 mov     edx, [ebp+var_5C]
.text:00016D9D                 mov     eax, [ebp+var_8C]
.text:00016DA3                 mov     [edx+18h], eax
.text:00016DA6                 mov     ecx, [ebp+var_5C]
.text:00016DA9                 mov     edx, [ebp+var_38]
.text:00016DAC                 mov     [ecx+8], edx
.text:00016DAF                 mov     eax, [ebp+var_5C]
.text:00016DB2                 mov     ecx, [ebp+var_54]
.text:00016DB5                 mov     [eax+14h], ecx
.text:00016DB8                 cmp     [ebp+var_44], 0
.text:00016DBC                 jz      short loc_16DD2
.text:00016DBE                 mov     edx, [ebp+var_4C]
.text:00016DC1                 push    edx
.text:00016DC2                 call    _dupstr
.text:00016DC7                 add     esp, 4
.text:00016DCA                 mov     [ebp+var_90], eax
.text:00016DD0                 jmp     short loc_16DDC
.text:00016DD2 ; ---------------------------------------------------------------------------
.text:00016DD2
.text:00016DD2 loc_16DD2:                              ; CODE XREF: _ssh_setup_portfwd+334j
.text:00016DD2                 mov     [ebp+var_90], 0
.text:00016DDC
.text:00016DDC loc_16DDC:                              ; CODE XREF: _ssh_setup_portfwd+348j
.text:00016DDC                 mov     eax, [ebp+var_5C]
.text:00016DDF                 mov     ecx, [ebp+var_90]
.text:00016DE5                 mov     [eax+1Ch], ecx
.text:00016DE8                 mov     edx, [ebp+var_5C]
.text:00016DEB                 mov     eax, [ebp+var_3C]
.text:00016DEE                 mov     [edx+0Ch], eax
.text:00016DF1                 mov     ecx, [ebp+var_5C]
.text:00016DF4                 mov     dword ptr [ecx+28h], 0
.text:00016DFB                 mov     edx, [ebp+var_5C]
.text:00016DFE                 mov     dword ptr [edx+20h], 0
.text:00016E05                 movsx   eax, [ebp+var_31]
.text:00016E09                 cmp     eax, 34h ; '4'
.text:00016E0C                 jnz     short loc_16E1A
.text:00016E0E                 mov     [ebp+var_94], 1
.text:00016E18                 jmp     short loc_16E31
.text:00016E1A ; ---------------------------------------------------------------------------
.text:00016E1A
.text:00016E1A loc_16E1A:                              ; CODE XREF: _ssh_setup_portfwd+384j
.text:00016E1A                 movsx   ecx, [ebp+var_31]
.text:00016E1E                 sub     ecx, 36h ; '6'
.text:00016E21                 neg     ecx
.text:00016E23                 sbb     ecx, ecx
.text:00016E25                 and     ecx, 0FFFFFFFEh
.text:00016E28                 add     ecx, 2
.text:00016E2B                 mov     [ebp+var_94], ecx
.text:00016E31
.text:00016E31 loc_16E31:                              ; CODE XREF: _ssh_setup_portfwd+390j
.text:00016E31                 mov     edx, [ebp+var_5C]
.text:00016E34                 mov     eax, [ebp+var_94]
.text:00016E3A                 mov     [edx+24h], eax
.text:00016E3D                 mov     ecx, [ebp+var_5C]
.text:00016E40                 push    ecx
.text:00016E41                 mov     edx, [ebp+arg_0]
.text:00016E44                 mov     eax, [edx+114h]
.text:00016E4A                 push    eax
.text:00016E4B                 call    _add234
.text:00016E50                 add     esp, 8
.text:00016E53                 mov     [ebp+var_60], eax
.text:00016E56                 mov     ecx, [ebp+var_60]
.text:00016E59                 cmp     ecx, [ebp+var_5C]
.text:00016E5C                 jz      short loc_16EBF
.text:00016E5E                 mov     edx, [ebp+var_60]
.text:00016E61                 cmp     dword ptr [edx], 0
.text:00016E64                 jnz     short loc_16E6F
.text:00016E66                 mov     eax, [ebp+var_60]
.text:00016E69                 mov     dword ptr [eax], 1
.text:00016E6F
.text:00016E6F loc_16E6F:                              ; CODE XREF: _ssh_setup_portfwd+3DCj
.text:00016E6F                 cmp     [ebp+var_5C], 0
.text:00016E73                 jz      short loc_16EB1
.text:00016E75                 mov     ecx, [ebp+var_5C]
.text:00016E78                 mov     edx, [ecx+10h]
.text:00016E7B                 push    edx
.text:00016E7C                 call    _safefree
.text:00016E81                 add     esp, 4
.text:00016E84                 mov     eax, [ebp+var_5C]
.text:00016E87                 mov     ecx, [eax+14h]
.text:00016E8A                 push    ecx
.text:00016E8B                 call    _safefree
.text:00016E90                 add     esp, 4
.text:00016E93                 mov     edx, [ebp+var_5C]
.text:00016E96                 mov     eax, [edx+18h]
.text:00016E99                 push    eax
.text:00016E9A                 call    _safefree
.text:00016E9F                 add     esp, 4
.text:00016EA2                 mov     ecx, [ebp+var_5C]
.text:00016EA5                 mov     edx, [ecx+1Ch]
.text:00016EA8                 push    edx
.text:00016EA9                 call    _safefree
.text:00016EAE                 add     esp, 4
.text:00016EB1
.text:00016EB1 loc_16EB1:                              ; CODE XREF: _ssh_setup_portfwd+3EBj
.text:00016EB1                 mov     eax, [ebp+var_5C]
.text:00016EB4                 push    eax
.text:00016EB5                 call    _safefree
.text:00016EBA                 add     esp, 4
.text:00016EBD                 jmp     short loc_16EC8
.text:00016EBF ; ---------------------------------------------------------------------------
.text:00016EBF
.text:00016EBF loc_16EBF:                              ; CODE XREF: _ssh_setup_portfwd+3D4j
.text:00016EBF                 mov     ecx, [ebp+var_5C]
.text:00016EC2                 mov     dword ptr [ecx], 2
.text:00016EC8
.text:00016EC8 loc_16EC8:                              ; CODE XREF: _ssh_setup_portfwd+435j
.text:00016EC8                 jmp     short loc_16EE2
.text:00016ECA ; ---------------------------------------------------------------------------
.text:00016ECA
.text:00016ECA loc_16ECA:                              ; CODE XREF: _ssh_setup_portfwd+2BCj
.text:00016ECA                                         ; _ssh_setup_portfwd+2C6j
.text:00016ECA                 mov     edx, [ebp+var_50]
.text:00016ECD                 push    edx
.text:00016ECE                 call    _safefree
.text:00016ED3                 add     esp, 4
.text:00016ED6                 mov     eax, [ebp+var_54]
.text:00016ED9                 push    eax
.text:00016EDA                 call    _safefree
.text:00016EDF                 add     esp, 4
.text:00016EE2
.text:00016EE2 loc_16EE2:                              ; CODE XREF: _ssh_setup_portfwd:loc_16EC8j
.text:00016EE2                 jmp     loc_16B20
.text:00016EE7 ; ---------------------------------------------------------------------------
.text:00016EE7
.text:00016EE7 loc_16EE7:                              ; CODE XREF: _ssh_setup_portfwd+B8j
.text:00016EE7                 mov     [ebp+var_8], 0
.text:00016EEE                 jmp     short loc_16EF9
.text:00016EF0 ; ---------------------------------------------------------------------------
.text:00016EF0
.text:00016EF0 loc_16EF0:                              ; CODE XREF: _ssh_setup_portfwd:loc_171A8j
.text:00016EF0                 mov     ecx, [ebp+var_8]
.text:00016EF3                 add     ecx, 1
.text:00016EF6                 mov     [ebp+var_8], ecx
.text:00016EF9
.text:00016EF9 loc_16EF9:                              ; CODE XREF: _ssh_setup_portfwd+466j
.text:00016EF9                 mov     edx, [ebp+var_8]
.text:00016EFC                 push    edx
.text:00016EFD                 mov     eax, [ebp+arg_0]
.text:00016F00                 mov     ecx, [eax+114h]
.text:00016F06                 push    ecx
.text:00016F07                 call    _index234
.text:00016F0C                 add     esp, 8
.text:00016F0F                 mov     [ebp+var_4], eax
.text:00016F12                 cmp     [ebp+var_4], 0
.text:00016F16                 jz      loc_171AD
.text:00016F1C                 mov     edx, [ebp+var_4]
.text:00016F1F                 cmp     dword ptr [edx], 0
.text:00016F22                 jnz     loc_171A8
.text:00016F28                 mov     eax, [ebp+var_4]
.text:00016F2B                 cmp     dword ptr [eax+10h], 0
.text:00016F2F                 jz      short loc_16F3D
.text:00016F31                 mov     [ebp+var_98], offset $SG90956
.text:00016F3B                 jmp     short loc_16F47
.text:00016F3D ; ---------------------------------------------------------------------------
.text:00016F3D
.text:00016F3D loc_16F3D:                              ; CODE XREF: _ssh_setup_portfwd+4A7j
.text:00016F3D                 mov     [ebp+var_98], offset $SG90957
.text:00016F47
.text:00016F47 loc_16F47:                              ; CODE XREF: _ssh_setup_portfwd+4B3j
.text:00016F47                 mov     ecx, [ebp+var_4]
.text:00016F4A                 cmp     dword ptr [ecx+10h], 0
.text:00016F4E                 jz      short loc_16F5E
.text:00016F50                 mov     edx, [ebp+var_4]
.text:00016F53                 mov     eax, [edx+10h]
.text:00016F56                 mov     [ebp+var_9C], eax
.text:00016F5C                 jmp     short loc_16F68
.text:00016F5E ; ---------------------------------------------------------------------------
.text:00016F5E
.text:00016F5E loc_16F5E:                              ; CODE XREF: _ssh_setup_portfwd+4C6j
.text:00016F5E                 mov     [ebp+var_9C], offset $SG90958
.text:00016F68
.text:00016F68 loc_16F68:                              ; CODE XREF: _ssh_setup_portfwd+4D4j
.text:00016F68                 mov     ecx, [ebp+var_4]
.text:00016F6B                 cmp     dword ptr [ecx+4], 4Ch ; 'L'
.text:00016F6F                 jnz     short loc_16F7D
.text:00016F71                 mov     [ebp+var_A0], offset $SG90959 ; "local"
.text:00016F7B                 jmp     short loc_16FA8
.text:00016F7D ; ---------------------------------------------------------------------------
.text:00016F7D
.text:00016F7D loc_16F7D:                              ; CODE XREF: _ssh_setup_portfwd+4E7j
.text:00016F7D                 mov     edx, [ebp+var_4]
.text:00016F80                 cmp     dword ptr [edx+4], 52h ; 'R'
.text:00016F84                 jnz     short loc_16F92
.text:00016F86                 mov     [ebp+var_A4], offset $SG90960 ; "remote"
.text:00016F90                 jmp     short loc_16F9C
.text:00016F92 ; ---------------------------------------------------------------------------
.text:00016F92
.text:00016F92 loc_16F92:                              ; CODE XREF: _ssh_setup_portfwd+4FCj
.text:00016F92                 mov     [ebp+var_A4], offset $SG90961 ; "dynamic"
.text:00016F9C
.text:00016F9C loc_16F9C:                              ; CODE XREF: _ssh_setup_portfwd+508j
.text:00016F9C                 mov     eax, [ebp+var_A4]
.text:00016FA2                 mov     [ebp+var_A0], eax
.text:00016FA8
.text:00016FA8 loc_16FA8:                              ; CODE XREF: _ssh_setup_portfwd+4F3j
.text:00016FA8                 mov     ecx, [ebp+var_4]
.text:00016FAB                 mov     edx, [ecx+8]
.text:00016FAE                 push    edx
.text:00016FAF                 mov     eax, [ebp+var_98]
.text:00016FB5                 push    eax
.text:00016FB6                 mov     ecx, [ebp+var_9C]
.text:00016FBC                 push    ecx
.text:00016FBD                 mov     edx, [ebp+var_A0]
.text:00016FC3                 push    edx
.text:00016FC4                 push    offset $SG90962 ; "%s port forwarding from %s%s%d"
.text:00016FC9                 call    _dupprintf
.text:00016FCE                 add     esp, 14h
.text:00016FD1                 mov     [ebp+var_64], eax
.text:00016FD4                 mov     eax, [ebp+var_4]
.text:00016FD7                 cmp     dword ptr [eax+4], 44h ; 'D'
.text:00016FDB                 jz      short loc_17011
.text:00016FDD                 mov     ecx, [ebp+var_4]
.text:00016FE0                 mov     edx, [ecx+0Ch]
.text:00016FE3                 push    edx
.text:00016FE4                 mov     eax, [ebp+var_4]
.text:00016FE7                 mov     ecx, [eax+14h]
.text:00016FEA                 push    ecx
.text:00016FEB                 mov     edx, [ebp+var_64]
.text:00016FEE                 push    edx
.text:00016FEF                 push    offset $SG90965 ; "%s to %s:%d"
.text:00016FF4                 call    _dupprintf
.text:00016FF9                 add     esp, 10h
.text:00016FFC                 mov     [ebp+var_68], eax
.text:00016FFF                 mov     eax, [ebp+var_64]
.text:00017002                 push    eax
.text:00017003                 call    _safefree
.text:00017008                 add     esp, 4
.text:0001700B                 mov     ecx, [ebp+var_68]
.text:0001700E                 mov     [ebp+var_64], ecx
.text:00017011
.text:00017011 loc_17011:                              ; CODE XREF: _ssh_setup_portfwd+553j
.text:00017011                 mov     edx, [ebp+var_64]
.text:00017014                 push    edx
.text:00017015                 push    offset $SG90966 ; "Cancelling %s"
.text:0001701A                 mov     eax, [ebp+arg_0]
.text:0001701D                 push    eax
.text:0001701E                 call    _logeventf
.text:00017023                 add     esp, 0Ch
.text:00017026                 mov     ecx, [ebp+var_64]
.text:00017029                 push    ecx
.text:0001702A                 call    _safefree
.text:0001702F                 add     esp, 4
.text:00017032                 mov     edx, [ebp+var_4]
.text:00017035                 cmp     dword ptr [edx+20h], 0
.text:00017039                 jz      loc_17123
.text:0001703F                 mov     eax, [ebp+var_4]
.text:00017042                 mov     ecx, [eax+20h]
.text:00017045                 mov     [ebp+var_6C], ecx
.text:00017048                 mov     edx, [ebp+arg_0]
.text:0001704B                 cmp     dword ptr [edx+16Ch], 1
.text:00017052                 jnz     short loc_17059
.text:00017054                 jmp     loc_170FF
.text:00017059 ; ---------------------------------------------------------------------------
.text:00017059
.text:00017059 loc_17059:                              ; CODE XREF: _ssh_setup_portfwd+5CAj
.text:00017059                 push    50h ; 'P'
.text:0001705B                 call    _ssh2_pkt_init
.text:00017060                 add     esp, 4
.text:00017063                 mov     [ebp+var_70], eax
.text:00017066                 push    offset $SG90972 ; "cancel-tcpip-forward"
.text:0001706B                 mov     eax, [ebp+var_70]
.text:0001706E                 push    eax             ; int
.text:0001706F                 call    _ssh_pkt_addstring
.text:00017074                 add     esp, 8
.text:00017077                 push    0               ; Src
.text:00017079                 mov     ecx, [ebp+var_70]
.text:0001707C                 push    ecx             ; int
.text:0001707D                 call    _ssh2_pkt_addbool
.text:00017082                 add     esp, 8
.text:00017085                 mov     edx, [ebp+var_4]
.text:00017088                 cmp     dword ptr [edx+10h], 0
.text:0001708C                 jz      short loc_170A3
.text:0001708E                 mov     eax, [ebp+var_4]
.text:00017091                 mov     ecx, [eax+10h]
.text:00017094                 push    ecx             ; Str
.text:00017095                 mov     edx, [ebp+var_70]
.text:00017098                 push    edx             ; int
.text:00017099                 call    _ssh_pkt_addstring
.text:0001709E                 add     esp, 8
.text:000170A1                 jmp     short loc_170DC
.text:000170A3 ; ---------------------------------------------------------------------------
.text:000170A3
.text:000170A3 loc_170A3:                              ; CODE XREF: _ssh_setup_portfwd+604j
.text:000170A3                 push    95h ; 'ò'
.text:000170A8                 mov     eax, [ebp+arg_4]
.text:000170AB                 push    eax
.text:000170AC                 call    _conf_get_int
.text:000170B1                 add     esp, 8
.text:000170B4                 test    eax, eax
.text:000170B6                 jz      short loc_170CB
.text:000170B8                 push    offset $SG90976 ; Str
.text:000170BD                 mov     ecx, [ebp+var_70]
.text:000170C0                 push    ecx             ; int
.text:000170C1                 call    _ssh_pkt_addstring
.text:000170C6                 add     esp, 8
.text:000170C9                 jmp     short loc_170DC
.text:000170CB ; ---------------------------------------------------------------------------
.text:000170CB
.text:000170CB loc_170CB:                              ; CODE XREF: _ssh_setup_portfwd+62Ej
.text:000170CB                 push    offset $SG90978 ; "localhost"
.text:000170D0                 mov     edx, [ebp+var_70]
.text:000170D3                 push    edx             ; int
.text:000170D4                 call    _ssh_pkt_addstring
.text:000170D9                 add     esp, 8
.text:000170DC
.text:000170DC loc_170DC:                              ; CODE XREF: _ssh_setup_portfwd+619j
.text:000170DC                                         ; _ssh_setup_portfwd+641j
.text:000170DC                 mov     eax, [ebp+var_4]
.text:000170DF                 mov     ecx, [eax+8]
.text:000170E2                 push    ecx
.text:000170E3                 mov     edx, [ebp+var_70]
.text:000170E6                 push    edx
.text:000170E7                 call    _ssh_pkt_adduint32
.text:000170EC                 add     esp, 8
.text:000170EF                 mov     eax, [ebp+var_70]
.text:000170F2                 push    eax
.text:000170F3                 mov     ecx, [ebp+arg_0]
.text:000170F6                 push    ecx
.text:000170F7                 call    _ssh2_pkt_send
.text:000170FC                 add     esp, 8
.text:000170FF
.text:000170FF loc_170FF:                              ; CODE XREF: _ssh_setup_portfwd+5CCj
.text:000170FF                 mov     edx, [ebp+var_6C]
.text:00017102                 push    edx
.text:00017103                 mov     eax, [ebp+arg_0]
.text:00017106                 mov     ecx, [eax+110h]
.text:0001710C                 push    ecx
.text:0001710D                 call    _del234
.text:00017112                 add     esp, 8
.text:00017115                 mov     edx, [ebp+var_6C]
.text:00017118                 push    edx
.text:00017119                 call    _free_rportfwd
.text:0001711E                 add     esp, 4
.text:00017121                 jmp     short loc_1713B
.text:00017123 ; ---------------------------------------------------------------------------
.text:00017123
.text:00017123 loc_17123:                              ; CODE XREF: _ssh_setup_portfwd+5B1j
.text:00017123                 mov     eax, [ebp+var_4]
.text:00017126                 cmp     dword ptr [eax+28h], 0
.text:0001712A                 jz      short loc_1713B
.text:0001712C                 mov     ecx, [ebp+var_4]
.text:0001712F                 mov     edx, [ecx+28h]
.text:00017132                 push    edx
.text:00017133                 call    _pfl_terminate
.text:00017138                 add     esp, 4
.text:0001713B
.text:0001713B loc_1713B:                              ; CODE XREF: _ssh_setup_portfwd+699j
.text:0001713B                                         ; _ssh_setup_portfwd+6A2j
.text:0001713B                 mov     eax, [ebp+var_8]
.text:0001713E                 push    eax
.text:0001713F                 mov     ecx, [ebp+arg_0]
.text:00017142                 mov     edx, [ecx+114h]
.text:00017148                 push    edx
.text:00017149                 call    _delpos234
.text:0001714E                 add     esp, 8
.text:00017151                 cmp     [ebp+var_4], 0
.text:00017155                 jz      short loc_17193
.text:00017157                 mov     eax, [ebp+var_4]
.text:0001715A                 mov     ecx, [eax+10h]
.text:0001715D                 push    ecx
.text:0001715E                 call    _safefree
.text:00017163                 add     esp, 4
.text:00017166                 mov     edx, [ebp+var_4]
.text:00017169                 mov     eax, [edx+14h]
.text:0001716C                 push    eax
.text:0001716D                 call    _safefree
.text:00017172                 add     esp, 4
.text:00017175                 mov     ecx, [ebp+var_4]
.text:00017178                 mov     edx, [ecx+18h]
.text:0001717B                 push    edx
.text:0001717C                 call    _safefree
.text:00017181                 add     esp, 4
.text:00017184                 mov     eax, [ebp+var_4]
.text:00017187                 mov     ecx, [eax+1Ch]
.text:0001718A                 push    ecx
.text:0001718B                 call    _safefree
.text:00017190                 add     esp, 4
.text:00017193
.text:00017193 loc_17193:                              ; CODE XREF: _ssh_setup_portfwd+6CDj
.text:00017193                 mov     edx, [ebp+var_4]
.text:00017196                 push    edx
.text:00017197                 call    _safefree
.text:0001719C                 add     esp, 4
.text:0001719F                 mov     eax, [ebp+var_8]
.text:000171A2                 sub     eax, 1
.text:000171A5                 mov     [ebp+var_8], eax
.text:000171A8
.text:000171A8 loc_171A8:                              ; CODE XREF: _ssh_setup_portfwd+49Aj
.text:000171A8                 jmp     loc_16EF0
.text:000171AD ; ---------------------------------------------------------------------------
.text:000171AD
.text:000171AD loc_171AD:                              ; CODE XREF: _ssh_setup_portfwd+48Ej
.text:000171AD                 mov     [ebp+var_8], 0
.text:000171B4                 jmp     short loc_171BF
.text:000171B6 ; ---------------------------------------------------------------------------
.text:000171B6
.text:000171B6 loc_171B6:                              ; CODE XREF: _ssh_setup_portfwd:loc_17809j
.text:000171B6                 mov     ecx, [ebp+var_8]
.text:000171B9                 add     ecx, 1
.text:000171BC                 mov     [ebp+var_8], ecx
.text:000171BF
.text:000171BF loc_171BF:                              ; CODE XREF: _ssh_setup_portfwd+72Cj
.text:000171BF                 mov     edx, [ebp+var_8]
.text:000171C2                 push    edx
.text:000171C3                 mov     eax, [ebp+arg_0]
.text:000171C6                 mov     ecx, [eax+114h]
.text:000171CC                 push    ecx
.text:000171CD                 call    _index234
.text:000171D2                 add     esp, 8
.text:000171D5                 mov     [ebp+var_4], eax
.text:000171D8                 cmp     [ebp+var_4], 0
.text:000171DC                 jz      loc_1780E
.text:000171E2                 mov     edx, [ebp+var_4]
.text:000171E5                 cmp     dword ptr [edx], 2
.text:000171E8                 jnz     loc_17809
.text:000171EE                 mov     eax, [ebp+var_4]
.text:000171F1                 cmp     dword ptr [eax+18h], 0
.text:000171F5                 jz      short loc_17203
.text:000171F7                 mov     [ebp+var_A8], offset $SG90989
.text:00017201                 jmp     short loc_1720D
.text:00017203 ; ---------------------------------------------------------------------------
.text:00017203
.text:00017203 loc_17203:                              ; CODE XREF: _ssh_setup_portfwd+76Dj
.text:00017203                 mov     [ebp+var_A8], offset $SG90990
.text:0001720D
.text:0001720D loc_1720D:                              ; CODE XREF: _ssh_setup_portfwd+779j
.text:0001720D                 mov     ecx, [ebp+var_4]
.text:00017210                 cmp     dword ptr [ecx+18h], 0
.text:00017214                 jz      short loc_17222
.text:00017216                 mov     [ebp+var_AC], offset $SG90991
.text:00017220                 jmp     short loc_1722C
.text:00017222 ; ---------------------------------------------------------------------------
.text:00017222
.text:00017222 loc_17222:                              ; CODE XREF: _ssh_setup_portfwd+78Cj
.text:00017222                 mov     [ebp+var_AC], offset $SG90992
.text:0001722C
.text:0001722C loc_1722C:                              ; CODE XREF: _ssh_setup_portfwd+798j
.text:0001722C                 mov     edx, [ebp+var_4]
.text:0001722F                 cmp     dword ptr [edx+18h], 0
.text:00017233                 jz      short loc_17243
.text:00017235                 mov     eax, [ebp+var_4]
.text:00017238                 mov     ecx, [eax+18h]
.text:0001723B                 mov     [ebp+var_B0], ecx
.text:00017241                 jmp     short loc_1724D
.text:00017243 ; ---------------------------------------------------------------------------
.text:00017243
.text:00017243 loc_17243:                              ; CODE XREF: _ssh_setup_portfwd+7ABj
.text:00017243                 mov     [ebp+var_B0], offset $SG90993
.text:0001724D
.text:0001724D loc_1724D:                              ; CODE XREF: _ssh_setup_portfwd+7B9j
.text:0001724D                 mov     edx, [ebp+var_4]
.text:00017250                 cmp     dword ptr [edx+10h], 0
.text:00017254                 jz      short loc_17262
.text:00017256                 mov     [ebp+var_B4], offset $SG90994
.text:00017260                 jmp     short loc_1726C
.text:00017262 ; ---------------------------------------------------------------------------
.text:00017262
.text:00017262 loc_17262:                              ; CODE XREF: _ssh_setup_portfwd+7CCj
.text:00017262                 mov     [ebp+var_B4], offset $SG90995
.text:0001726C
.text:0001726C loc_1726C:                              ; CODE XREF: _ssh_setup_portfwd+7D8j
.text:0001726C                 mov     eax, [ebp+var_4]
.text:0001726F                 cmp     dword ptr [eax+10h], 0
.text:00017273                 jz      short loc_17283
.text:00017275                 mov     ecx, [ebp+var_4]
.text:00017278                 mov     edx, [ecx+10h]
.text:0001727B                 mov     [ebp+var_B8], edx
.text:00017281                 jmp     short loc_1728D
.text:00017283 ; ---------------------------------------------------------------------------
.text:00017283
.text:00017283 loc_17283:                              ; CODE XREF: _ssh_setup_portfwd+7EBj
.text:00017283                 mov     [ebp+var_B8], offset $SG90996
.text:0001728D
.text:0001728D loc_1728D:                              ; CODE XREF: _ssh_setup_portfwd+7F9j
.text:0001728D                 mov     eax, [ebp+var_A8]
.text:00017293                 push    eax
.text:00017294                 mov     ecx, [ebp+var_4]
.text:00017297                 mov     edx, [ecx+8]
.text:0001729A                 push    edx
.text:0001729B                 mov     eax, [ebp+var_AC]
.text:000172A1                 push    eax
.text:000172A2                 mov     ecx, [ebp+var_B0]
.text:000172A8                 push    ecx
.text:000172A9                 mov     edx, [ebp+var_B4]
.text:000172AF                 push    edx
.text:000172B0                 mov     eax, [ebp+var_B8]
.text:000172B6                 push    eax
.text:000172B7                 push    offset $SG90997 ; "%s%s%s%s%d%s"
.text:000172BC                 call    _dupprintf
.text:000172C1                 add     esp, 1Ch
.text:000172C4                 mov     [ebp+var_74], eax
.text:000172C7                 mov     ecx, [ebp+var_4]
.text:000172CA                 cmp     dword ptr [ecx+4], 44h ; 'D'
.text:000172CE                 jnz     short loc_172DC
.text:000172D0                 mov     [ebp+var_78], 0
.text:000172D7                 jmp     loc_1736E
.text:000172DC ; ---------------------------------------------------------------------------
.text:000172DC
.text:000172DC loc_172DC:                              ; CODE XREF: _ssh_setup_portfwd+846j
.text:000172DC                 mov     edx, [ebp+var_4]
.text:000172DF                 cmp     dword ptr [edx+1Ch], 0
.text:000172E3                 jz      short loc_172F1
.text:000172E5                 mov     [ebp+var_BC], offset $SG91001
.text:000172EF                 jmp     short loc_172FB
.text:000172F1 ; ---------------------------------------------------------------------------
.text:000172F1
.text:000172F1 loc_172F1:                              ; CODE XREF: _ssh_setup_portfwd+85Bj
.text:000172F1                 mov     [ebp+var_BC], offset $SG91002
.text:000172FB
.text:000172FB loc_172FB:                              ; CODE XREF: _ssh_setup_portfwd+867j
.text:000172FB                 mov     eax, [ebp+var_4]
.text:000172FE                 cmp     dword ptr [eax+1Ch], 0
.text:00017302                 jz      short loc_17310
.text:00017304                 mov     [ebp+var_C0], offset $SG91003
.text:0001730E                 jmp     short loc_1731A
.text:00017310 ; ---------------------------------------------------------------------------
.text:00017310
.text:00017310 loc_17310:                              ; CODE XREF: _ssh_setup_portfwd+87Aj
.text:00017310                 mov     [ebp+var_C0], offset $SG91004
.text:0001731A
.text:0001731A loc_1731A:                              ; CODE XREF: _ssh_setup_portfwd+886j
.text:0001731A                 mov     ecx, [ebp+var_4]
.text:0001731D                 cmp     dword ptr [ecx+1Ch], 0
.text:00017321                 jz      short loc_17331
.text:00017323                 mov     edx, [ebp+var_4]
.text:00017326                 mov     eax, [edx+1Ch]
.text:00017329                 mov     [ebp+var_C4], eax
.text:0001732F                 jmp     short loc_1733B
.text:00017331 ; ---------------------------------------------------------------------------
.text:00017331
.text:00017331 loc_17331:                              ; CODE XREF: _ssh_setup_portfwd+899j
.text:00017331                 mov     [ebp+var_C4], offset $SG91005
.text:0001733B
.text:0001733B loc_1733B:                              ; CODE XREF: _ssh_setup_portfwd+8A7j
.text:0001733B                 mov     ecx, [ebp+var_BC]
.text:00017341                 push    ecx
.text:00017342                 mov     edx, [ebp+var_4]
.text:00017345                 mov     eax, [edx+0Ch]
.text:00017348                 push    eax
.text:00017349                 mov     ecx, [ebp+var_C0]
.text:0001734F                 push    ecx
.text:00017350                 mov     edx, [ebp+var_C4]
.text:00017356                 push    edx
.text:00017357                 mov     eax, [ebp+var_4]
.text:0001735A                 mov     ecx, [eax+14h]
.text:0001735D                 push    ecx
.text:0001735E                 push    offset $SG91006 ; "%s:%s%s%d%s"
.text:00017363                 call    _dupprintf
.text:00017368                 add     esp, 18h
.text:0001736B                 mov     [ebp+var_78], eax
.text:0001736E
.text:0001736E loc_1736E:                              ; CODE XREF: _ssh_setup_portfwd+84Fj
.text:0001736E                 mov     edx, [ebp+var_4]
.text:00017371                 cmp     dword ptr [edx+4], 4Ch ; 'L'
.text:00017375                 jnz     loc_17474
.text:0001737B                 mov     eax, [ebp+var_4]
.text:0001737E                 mov     ecx, [eax+24h]
.text:00017381                 push    ecx
.text:00017382                 mov     edx, [ebp+var_4]
.text:00017385                 add     edx, 28h ; '('
.text:00017388                 push    edx
.text:00017389                 mov     eax, [ebp+arg_4]
.text:0001738C                 push    eax
.text:0001738D                 mov     ecx, [ebp+arg_0]
.text:00017390                 push    ecx
.text:00017391                 mov     edx, [ebp+var_4]
.text:00017394                 mov     eax, [edx+8]
.text:00017397                 push    eax
.text:00017398                 mov     ecx, [ebp+var_4]
.text:0001739B                 mov     edx, [ecx+10h]
.text:0001739E                 push    edx
.text:0001739F                 mov     eax, [ebp+var_4]
.text:000173A2                 mov     ecx, [eax+0Ch]
.text:000173A5                 push    ecx
.text:000173A6                 mov     edx, [ebp+var_4]
.text:000173A9                 mov     eax, [edx+14h]
.text:000173AC                 push    eax
.text:000173AD                 call    _pfl_listen
.text:000173B2                 add     esp, 20h
.text:000173B5                 mov     [ebp+var_7C], eax
.text:000173B8                 cmp     [ebp+var_7C], 0
.text:000173BC                 jz      short loc_173C9
.text:000173BE                 mov     ecx, [ebp+var_7C]
.text:000173C1                 mov     [ebp+var_C8], ecx
.text:000173C7                 jmp     short loc_173D3
.text:000173C9 ; ---------------------------------------------------------------------------
.text:000173C9
.text:000173C9 loc_173C9:                              ; CODE XREF: _ssh_setup_portfwd+934j
.text:000173C9                 mov     [ebp+var_C8], offset $SG91009
.text:000173D3
.text:000173D3 loc_173D3:                              ; CODE XREF: _ssh_setup_portfwd+93Fj
.text:000173D3                 cmp     [ebp+var_7C], 0
.text:000173D7                 jz      short loc_173E5
.text:000173D9                 mov     [ebp+var_CC], offset $SG91010 ; " failed: "
.text:000173E3                 jmp     short loc_173EF
.text:000173E5 ; ---------------------------------------------------------------------------
.text:000173E5
.text:000173E5 loc_173E5:                              ; CODE XREF: _ssh_setup_portfwd+94Fj
.text:000173E5                 mov     [ebp+var_CC], offset $SG91011
.text:000173EF
.text:000173EF loc_173EF:                              ; CODE XREF: _ssh_setup_portfwd+95Bj
.text:000173EF                 mov     edx, [ebp+var_4]
.text:000173F2                 cmp     dword ptr [edx+24h], 1
.text:000173F6                 jnz     short loc_17404
.text:000173F8                 mov     [ebp+var_D0], offset $SG91012 ; "IPv4 "
.text:00017402                 jmp     short loc_1742F
.text:00017404 ; ---------------------------------------------------------------------------
.text:00017404
.text:00017404 loc_17404:                              ; CODE XREF: _ssh_setup_portfwd+96Ej
.text:00017404                 mov     eax, [ebp+var_4]
.text:00017407                 cmp     dword ptr [eax+24h], 2
.text:0001740B                 jnz     short loc_17419
.text:0001740D                 mov     [ebp+var_D4], offset $SG91013 ; "IPv6 "
.text:00017417                 jmp     short loc_17423
.text:00017419 ; ---------------------------------------------------------------------------
.text:00017419
.text:00017419 loc_17419:                              ; CODE XREF: _ssh_setup_portfwd+983j
.text:00017419                 mov     [ebp+var_D4], offset $SG91014
.text:00017423
.text:00017423 loc_17423:                              ; CODE XREF: _ssh_setup_portfwd+98Fj
.text:00017423                 mov     ecx, [ebp+var_D4]
.text:00017429                 mov     [ebp+var_D0], ecx
.text:0001742F
.text:0001742F loc_1742F:                              ; CODE XREF: _ssh_setup_portfwd+97Aj
.text:0001742F                 mov     edx, [ebp+var_C8]
.text:00017435                 push    edx
.text:00017436                 mov     eax, [ebp+var_CC]
.text:0001743C                 push    eax
.text:0001743D                 mov     ecx, [ebp+var_78]
.text:00017440                 push    ecx
.text:00017441                 mov     edx, [ebp+var_74]
.text:00017444                 push    edx
.text:00017445                 mov     eax, [ebp+var_D0]
.text:0001744B                 push    eax
.text:0001744C                 push    offset $SG91015 ; "Local %sport %s forwarding to %s%s%s"
.text:00017451                 mov     ecx, [ebp+arg_0]
.text:00017454                 push    ecx
.text:00017455                 call    _logeventf
.text:0001745A                 add     esp, 1Ch
.text:0001745D                 cmp     [ebp+var_7C], 0
.text:00017461                 jz      short loc_1746F
.text:00017463                 mov     edx, [ebp+var_7C]
.text:00017466                 push    edx
.text:00017467                 call    _safefree
.text:0001746C                 add     esp, 4
.text:0001746F
.text:0001746F loc_1746F:                              ; CODE XREF: _ssh_setup_portfwd+9D9j
.text:0001746F                 jmp     loc_177F1
.text:00017474 ; ---------------------------------------------------------------------------
.text:00017474
.text:00017474 loc_17474:                              ; CODE XREF: _ssh_setup_portfwd+8EDj
.text:00017474                 mov     eax, [ebp+var_4]
.text:00017477                 cmp     dword ptr [eax+4], 44h ; 'D'
.text:0001747B                 jnz     loc_1756C
.text:00017481                 mov     ecx, [ebp+var_4]
.text:00017484                 mov     edx, [ecx+24h]
.text:00017487                 push    edx
.text:00017488                 mov     eax, [ebp+var_4]
.text:0001748B                 add     eax, 28h ; '('
.text:0001748E                 push    eax
.text:0001748F                 mov     ecx, [ebp+arg_4]
.text:00017492                 push    ecx
.text:00017493                 mov     edx, [ebp+arg_0]
.text:00017496                 push    edx
.text:00017497                 mov     eax, [ebp+var_4]
.text:0001749A                 mov     ecx, [eax+8]
.text:0001749D                 push    ecx
.text:0001749E                 mov     edx, [ebp+var_4]
.text:000174A1                 mov     eax, [edx+10h]
.text:000174A4                 push    eax
.text:000174A5                 push    0FFFFFFFFh
.text:000174A7                 push    0
.text:000174A9                 call    _pfl_listen
.text:000174AE                 add     esp, 20h
.text:000174B1                 mov     [ebp+var_80], eax
.text:000174B4                 cmp     [ebp+var_80], 0
.text:000174B8                 jz      short loc_174C5
.text:000174BA                 mov     ecx, [ebp+var_80]
.text:000174BD                 mov     [ebp+var_D8], ecx
.text:000174C3                 jmp     short loc_174CF
.text:000174C5 ; ---------------------------------------------------------------------------
.text:000174C5
.text:000174C5 loc_174C5:                              ; CODE XREF: _ssh_setup_portfwd+A30j
.text:000174C5                 mov     [ebp+var_D8], offset $SG91021
.text:000174CF
.text:000174CF loc_174CF:                              ; CODE XREF: _ssh_setup_portfwd+A3Bj
.text:000174CF                 cmp     [ebp+var_80], 0
.text:000174D3                 jz      short loc_174E1
.text:000174D5                 mov     [ebp+var_DC], offset $SG91022 ; " failed: "
.text:000174DF                 jmp     short loc_174EB
.text:000174E1 ; ---------------------------------------------------------------------------
.text:000174E1
.text:000174E1 loc_174E1:                              ; CODE XREF: _ssh_setup_portfwd+A4Bj
.text:000174E1                 mov     [ebp+var_DC], offset $SG91023
.text:000174EB
.text:000174EB loc_174EB:                              ; CODE XREF: _ssh_setup_portfwd+A57j
.text:000174EB                 mov     edx, [ebp+var_4]
.text:000174EE                 cmp     dword ptr [edx+24h], 1
.text:000174F2                 jnz     short loc_17500
.text:000174F4                 mov     [ebp+var_E0], offset $SG91024 ; "IPv4 "
.text:000174FE                 jmp     short loc_1752B
.text:00017500 ; ---------------------------------------------------------------------------
.text:00017500
.text:00017500 loc_17500:                              ; CODE XREF: _ssh_setup_portfwd+A6Aj
.text:00017500                 mov     eax, [ebp+var_4]
.text:00017503                 cmp     dword ptr [eax+24h], 2
.text:00017507                 jnz     short loc_17515
.text:00017509                 mov     [ebp+var_E4], offset $SG91025 ; "IPv6 "
.text:00017513                 jmp     short loc_1751F
.text:00017515 ; ---------------------------------------------------------------------------
.text:00017515
.text:00017515 loc_17515:                              ; CODE XREF: _ssh_setup_portfwd+A7Fj
.text:00017515                 mov     [ebp+var_E4], offset $SG91026
.text:0001751F
.text:0001751F loc_1751F:                              ; CODE XREF: _ssh_setup_portfwd+A8Bj
.text:0001751F                 mov     ecx, [ebp+var_E4]
.text:00017525                 mov     [ebp+var_E0], ecx
.text:0001752B
.text:0001752B loc_1752B:                              ; CODE XREF: _ssh_setup_portfwd+A76j
.text:0001752B                 mov     edx, [ebp+var_D8]
.text:00017531                 push    edx
.text:00017532                 mov     eax, [ebp+var_DC]
.text:00017538                 push    eax
.text:00017539                 mov     ecx, [ebp+var_74]
.text:0001753C                 push    ecx
.text:0001753D                 mov     edx, [ebp+var_E0]
.text:00017543                 push    edx
.text:00017544                 push    offset $SG91027 ; "Local %sport %s SOCKS dynamic forwardin"...
.text:00017549                 mov     eax, [ebp+arg_0]
.text:0001754C                 push    eax
.text:0001754D                 call    _logeventf
.text:00017552                 add     esp, 18h
.text:00017555                 cmp     [ebp+var_80], 0
.text:00017559                 jz      short loc_17567
.text:0001755B                 mov     ecx, [ebp+var_80]
.text:0001755E                 push    ecx
.text:0001755F                 call    _safefree
.text:00017564                 add     esp, 4
.text:00017567
.text:00017567 loc_17567:                              ; CODE XREF: _ssh_setup_portfwd+AD1j
.text:00017567                 jmp     loc_177F1
.text:0001756C ; ---------------------------------------------------------------------------
.text:0001756C
.text:0001756C loc_1756C:                              ; CODE XREF: _ssh_setup_portfwd+9F3j
.text:0001756C                 mov     edx, [ebp+arg_0]
.text:0001756F                 cmp     dword ptr [edx+110h], 0
.text:00017576                 jnz     short loc_175B2
.text:00017578                 mov     eax, [ebp+arg_0]
.text:0001757B                 cmp     dword ptr [eax+16Ch], 1
.text:00017582                 jnz     short loc_1759C
.text:00017584                 push    offset _ssh_rportcmp_ssh1
.text:00017589                 call    _newtree234
.text:0001758E                 add     esp, 4
.text:00017591                 mov     ecx, [ebp+arg_0]
.text:00017594                 mov     [ecx+110h], eax
.text:0001759A                 jmp     short loc_175B2
.text:0001759C ; ---------------------------------------------------------------------------
.text:0001759C
.text:0001759C loc_1759C:                              ; CODE XREF: _ssh_setup_portfwd+AFAj
.text:0001759C                 push    offset _ssh_rportcmp_ssh2
.text:000175A1                 call    _newtree234
.text:000175A6                 add     esp, 4
.text:000175A9                 mov     edx, [ebp+arg_0]
.text:000175AC                 mov     [edx+110h], eax
.text:000175B2
.text:000175B2 loc_175B2:                              ; CODE XREF: _ssh_setup_portfwd+AEEj
.text:000175B2                                         ; _ssh_setup_portfwd+B12j
.text:000175B2                 push    1Ch
.text:000175B4                 push    1
.text:000175B6                 call    _safemalloc
.text:000175BB                 add     esp, 8
.text:000175BE                 mov     [ebp+var_84], eax
.text:000175C4                 mov     eax, [ebp+var_84]
.text:000175CA                 mov     dword ptr [eax+14h], 0
.text:000175D1                 mov     ecx, [ebp+var_4]
.text:000175D4                 mov     edx, [ecx+14h]
.text:000175D7                 push    edx
.text:000175D8                 call    _dupstr
.text:000175DD                 add     esp, 4
.text:000175E0                 mov     ecx, [ebp+var_84]
.text:000175E6                 mov     [ecx+0Ch], eax
.text:000175E9                 mov     edx, [ebp+var_84]
.text:000175EF                 mov     eax, [ebp+var_4]
.text:000175F2                 mov     ecx, [eax+0Ch]
.text:000175F5                 mov     [edx+4], ecx
.text:000175F8                 mov     edx, [ebp+var_4]
.text:000175FB                 cmp     dword ptr [edx+10h], 0
.text:000175FF                 jz      short loc_1761B
.text:00017601                 mov     eax, [ebp+var_4]
.text:00017604                 mov     ecx, [eax+10h]
.text:00017607                 push    ecx
.text:00017608                 call    _dupstr
.text:0001760D                 add     esp, 4
.text:00017610                 mov     edx, [ebp+var_84]
.text:00017616                 mov     [edx+8], eax
.text:00017619                 jmp     short loc_1765E
.text:0001761B ; ---------------------------------------------------------------------------
.text:0001761B
.text:0001761B loc_1761B:                              ; CODE XREF: _ssh_setup_portfwd+B77j
.text:0001761B                 push    95h ; 'ò'
.text:00017620                 mov     eax, [ebp+arg_4]
.text:00017623                 push    eax
.text:00017624                 call    _conf_get_int
.text:00017629                 add     esp, 8
.text:0001762C                 test    eax, eax
.text:0001762E                 jz      short loc_17648
.text:00017630                 push    offset $SG91040
.text:00017635                 call    _dupstr
.text:0001763A                 add     esp, 4
.text:0001763D                 mov     ecx, [ebp+var_84]
.text:00017643                 mov     [ecx+8], eax
.text:00017646                 jmp     short loc_1765E
.text:00017648 ; ---------------------------------------------------------------------------
.text:00017648
.text:00017648 loc_17648:                              ; CODE XREF: _ssh_setup_portfwd+BA6j
.text:00017648                 push    offset $SG91042 ; "localhost"
.text:0001764D                 call    _dupstr
.text:00017652                 add     esp, 4
.text:00017655                 mov     edx, [ebp+var_84]
.text:0001765B                 mov     [edx+8], eax
.text:0001765E
.text:0001765E loc_1765E:                              ; CODE XREF: _ssh_setup_portfwd+B91j
.text:0001765E                                         ; _ssh_setup_portfwd+BBEj
.text:0001765E                 mov     eax, [ebp+var_84]
.text:00017664                 mov     ecx, [ebp+var_4]
.text:00017667                 mov     edx, [ecx+8]
.text:0001766A                 mov     [eax], edx
.text:0001766C                 mov     eax, [ebp+var_84]
.text:00017672                 push    eax
.text:00017673                 mov     ecx, [ebp+arg_0]
.text:00017676                 mov     edx, [ecx+110h]
.text:0001767C                 push    edx
.text:0001767D                 call    _add234
.text:00017682                 add     esp, 8
.text:00017685                 cmp     eax, [ebp+var_84]
.text:0001768B                 jz      short loc_176C0
.text:0001768D                 mov     eax, [ebp+var_4]
.text:00017690                 mov     ecx, [eax+0Ch]
.text:00017693                 push    ecx
.text:00017694                 mov     edx, [ebp+var_4]
.text:00017697                 mov     eax, [edx+14h]
.text:0001769A                 push    eax
.text:0001769B                 push    offset $SG91044 ; "Duplicate remote port forwarding to %s:"...
.text:000176A0                 mov     ecx, [ebp+arg_0]
.text:000176A3                 push    ecx
.text:000176A4                 call    _logeventf
.text:000176A9                 add     esp, 10h
.text:000176AC                 mov     edx, [ebp+var_84]
.text:000176B2                 push    edx
.text:000176B3                 call    _safefree
.text:000176B8                 add     esp, 4
.text:000176BB                 jmp     loc_177F1
.text:000176C0 ; ---------------------------------------------------------------------------
.text:000176C0
.text:000176C0 loc_176C0:                              ; CODE XREF: _ssh_setup_portfwd+C03j
.text:000176C0                 mov     eax, [ebp+var_78]
.text:000176C3                 push    eax
.text:000176C4                 mov     ecx, [ebp+var_74]
.text:000176C7                 push    ecx
.text:000176C8                 push    offset $SG91046 ; "Requesting remote port %s forward to %s"
.text:000176CD                 mov     edx, [ebp+arg_0]
.text:000176D0                 push    edx
.text:000176D1                 call    _logeventf
.text:000176D6                 add     esp, 10h
.text:000176D9                 mov     eax, [ebp+var_84]
.text:000176DF                 mov     ecx, [ebp+var_74]
.text:000176E2                 mov     [eax+10h], ecx
.text:000176E5                 mov     [ebp+var_74], 0
.text:000176EC                 mov     edx, [ebp+var_4]
.text:000176EF                 mov     eax, [ebp+var_84]
.text:000176F5                 mov     [edx+20h], eax
.text:000176F8                 mov     ecx, [ebp+var_84]
.text:000176FE                 mov     edx, [ebp+var_4]
.text:00017701                 mov     [ecx+18h], edx
.text:00017704                 mov     eax, [ebp+arg_0]
.text:00017707                 cmp     dword ptr [eax+16Ch], 1
.text:0001770E                 jnz     short loc_1775C
.text:00017710                 push    0
.text:00017712                 mov     ecx, [ebp+var_4]
.text:00017715                 mov     edx, [ecx+0Ch]
.text:00017718                 push    edx
.text:00017719                 push    1
.text:0001771B                 mov     eax, [ebp+var_4]
.text:0001771E                 mov     ecx, [eax+14h]
.text:00017721                 push    ecx
.text:00017722                 push    4
.text:00017724                 mov     edx, [ebp+var_4]
.text:00017727                 mov     eax, [edx+8]
.text:0001772A                 push    eax
.text:0001772B                 push    1
.text:0001772D                 push    1Ch
.text:0001772F                 mov     ecx, [ebp+arg_0]
.text:00017732                 push    ecx
.text:00017733                 call    _send_packet
.text:00017738                 add     esp, 24h
.text:0001773B                 mov     edx, [ebp+var_84]
.text:00017741                 push    edx
.text:00017742                 push    offset _ssh_rportfwd_succfail
.text:00017747                 push    0Fh
.text:00017749                 push    0Eh
.text:0001774B                 mov     eax, [ebp+arg_0]
.text:0001774E                 push    eax
.text:0001774F                 call    _ssh_queue_handler
.text:00017754                 add     esp, 14h
.text:00017757                 jmp     loc_177F1
.text:0001775C ; ---------------------------------------------------------------------------
.text:0001775C
.text:0001775C loc_1775C:                              ; CODE XREF: _ssh_setup_portfwd+C86j
.text:0001775C                 push    50h ; 'P'
.text:0001775E                 call    _ssh2_pkt_init
.text:00017763                 add     esp, 4
.text:00017766                 mov     [ebp+var_88], eax
.text:0001776C                 push    offset $SG91051 ; "tcpip-forward"
.text:00017771                 mov     ecx, [ebp+var_88]
.text:00017777                 push    ecx             ; int
.text:00017778                 call    _ssh_pkt_addstring
.text:0001777D                 add     esp, 8
.text:00017780                 push    1               ; Src
.text:00017782                 mov     edx, [ebp+var_88]
.text:00017788                 push    edx             ; int
.text:00017789                 call    _ssh2_pkt_addbool
.text:0001778E                 add     esp, 8
.text:00017791                 mov     eax, [ebp+var_84]
.text:00017797                 mov     ecx, [eax+8]
.text:0001779A                 push    ecx             ; Str
.text:0001779B                 mov     edx, [ebp+var_88]
.text:000177A1                 push    edx             ; int
.text:000177A2                 call    _ssh_pkt_addstring
.text:000177A7                 add     esp, 8
.text:000177AA                 mov     eax, [ebp+var_84]
.text:000177B0                 mov     ecx, [eax]
.text:000177B2                 push    ecx
.text:000177B3                 mov     edx, [ebp+var_88]
.text:000177B9                 push    edx
.text:000177BA                 call    _ssh_pkt_adduint32
.text:000177BF                 add     esp, 8
.text:000177C2                 mov     eax, [ebp+var_88]
.text:000177C8                 push    eax
.text:000177C9                 mov     ecx, [ebp+arg_0]
.text:000177CC                 push    ecx
.text:000177CD                 call    _ssh2_pkt_send
.text:000177D2                 add     esp, 8
.text:000177D5                 mov     edx, [ebp+var_84]
.text:000177DB                 push    edx
.text:000177DC                 push    offset _ssh_rportfwd_succfail
.text:000177E1                 push    52h ; 'R'
.text:000177E3                 push    51h ; 'Q'
.text:000177E5                 mov     eax, [ebp+arg_0]
.text:000177E8                 push    eax
.text:000177E9                 call    _ssh_queue_handler
.text:000177EE                 add     esp, 14h
.text:000177F1
.text:000177F1 loc_177F1:                              ; CODE XREF: _ssh_setup_portfwd:loc_1746Fj
.text:000177F1                                         ; _ssh_setup_portfwd:loc_17567j ...
.text:000177F1                 mov     ecx, [ebp+var_74]
.text:000177F4                 push    ecx
.text:000177F5                 call    _safefree
.text:000177FA                 add     esp, 4
.text:000177FD                 mov     edx, [ebp+var_78]
.text:00017800                 push    edx
.text:00017801                 call    _safefree
.text:00017806                 add     esp, 4
.text:00017809
.text:00017809 loc_17809:                              ; CODE XREF: _ssh_setup_portfwd+760j
.text:00017809                 jmp     loc_171B6
.text:0001780E ; ---------------------------------------------------------------------------
.text:0001780E
.text:0001780E loc_1780E:                              ; CODE XREF: _ssh_setup_portfwd+754j
.text:0001780E                 push    edx
.text:0001780F                 mov     ecx, ebp
.text:00017811                 push    eax
.text:00017812                 lea     edx, $LN118_0
.text:00017818                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0001781D                 pop     eax
.text:0001781E                 pop     edx
.text:0001781F                 pop     edi
.text:00017820                 add     esp, 0E4h
.text:00017826                 cmp     ebp, esp
.text:00017828                 call    __RTC_CheckEsp
.text:0001782D                 mov     esp, ebp
.text:0001782F                 pop     ebp
.text:00017830                 retn
.text:00017830 _ssh_setup_portfwd endp
.text:00017830
.text:00017830 ; ---------------------------------------------------------------------------
.text:00017831                 align 4
.text:00017834 $LN118_0        dd 1                    ; DATA XREF: _ssh_setup_portfwd+D8Ao
.text:00017838                 dd offset $LN117
.text:0001783C $LN117          dd 0FFFFFFF0h, 4        ; DATA XREF: .text:00017838o
.text:00017844                 dd offset $LN116
.text:00017848 $LN116          dd 79656Bh, 3 dup(0CCCCCCCCh) ; DATA XREF: .text:00017844o
.text:00017858
.text:00017858 ; =============== S U B R O U T I N E =======================================
.text:00017858
.text:00017858 ; Attributes: bp-based frame
.text:00017858
.text:00017858 _free_rportfwd  proc near               ; CODE XREF: _ssh_setup_portfwd+691p
.text:00017858                                         ; _ssh_rportfwd_succfail+B3p ...
.text:00017858
.text:00017858 arg_0           = dword ptr  8
.text:00017858
.text:00017858                 push    ebp
.text:00017859                 mov     ebp, esp
.text:0001785B                 cmp     [ebp+arg_0], 0
.text:0001785F                 jz      short loc_1789A
.text:00017861                 mov     eax, [ebp+arg_0]
.text:00017864                 mov     ecx, [eax+10h]
.text:00017867                 push    ecx
.text:00017868                 call    _safefree
.text:0001786D                 add     esp, 4
.text:00017870                 mov     edx, [ebp+arg_0]
.text:00017873                 mov     eax, [edx+8]
.text:00017876                 push    eax
.text:00017877                 call    _safefree
.text:0001787C                 add     esp, 4
.text:0001787F                 mov     ecx, [ebp+arg_0]
.text:00017882                 mov     edx, [ecx+0Ch]
.text:00017885                 push    edx
.text:00017886                 call    _safefree
.text:0001788B                 add     esp, 4
.text:0001788E                 mov     eax, [ebp+arg_0]
.text:00017891                 push    eax
.text:00017892                 call    _safefree
.text:00017897                 add     esp, 4
.text:0001789A
.text:0001789A loc_1789A:                              ; CODE XREF: _free_rportfwd+7j
.text:0001789A                 cmp     ebp, esp
.text:0001789C                 call    __RTC_CheckEsp
.text:000178A1                 pop     ebp
.text:000178A2                 retn
.text:000178A2 _free_rportfwd  endp
.text:000178A2
.text:000178A2 ; ---------------------------------------------------------------------------
.text:000178A3                 align 8
.text:000178A8
.text:000178A8 ; =============== S U B R O U T I N E =======================================
.text:000178A8
.text:000178A8 ; Attributes: bp-based frame
.text:000178A8
.text:000178A8 _ssh_rportcmp_ssh1 proc near            ; DATA XREF: _ssh_setup_portfwd+AFCo
.text:000178A8
.text:000178A8 var_C           = dword ptr -0Ch
.text:000178A8 var_8           = dword ptr -8
.text:000178A8 var_4           = dword ptr -4
.text:000178A8 arg_0           = dword ptr  8
.text:000178A8 arg_4           = dword ptr  0Ch
.text:000178A8
.text:000178A8                 push    ebp
.text:000178A9                 mov     ebp, esp
.text:000178AB                 sub     esp, 0Ch
.text:000178AE                 mov     [ebp+var_C], 0CCCCCCCCh
.text:000178B5                 mov     [ebp+var_8], 0CCCCCCCCh
.text:000178BC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000178C3                 mov     eax, [ebp+arg_0]
.text:000178C6                 mov     [ebp+var_4], eax
.text:000178C9                 mov     ecx, [ebp+arg_4]
.text:000178CC                 mov     [ebp+var_8], ecx
.text:000178CF                 mov     edx, [ebp+var_8]
.text:000178D2                 mov     eax, [edx+0Ch]
.text:000178D5                 push    eax             ; Str2
.text:000178D6                 mov     ecx, [ebp+var_4]
.text:000178D9                 mov     edx, [ecx+0Ch]
.text:000178DC                 push    edx             ; Str1
.text:000178DD                 call    _strcmp
.text:000178E2                 add     esp, 8
.text:000178E5                 mov     [ebp+var_C], eax
.text:000178E8                 cmp     [ebp+var_C], 0
.text:000178EC                 jz      short loc_178FD
.text:000178EE                 xor     eax, eax
.text:000178F0                 cmp     [ebp+var_C], 0
.text:000178F4                 setnl   al
.text:000178F7                 lea     eax, [eax+eax-1]
.text:000178FB                 jmp     short loc_17927
.text:000178FD ; ---------------------------------------------------------------------------
.text:000178FD
.text:000178FD loc_178FD:                              ; CODE XREF: _ssh_rportcmp_ssh1+44j
.text:000178FD                 mov     eax, [ebp+var_4]
.text:00017900                 mov     ecx, [ebp+var_8]
.text:00017903                 mov     edx, [eax+4]
.text:00017906                 cmp     edx, [ecx+4]
.text:00017909                 jbe     short loc_17912
.text:0001790B                 mov     eax, 1
.text:00017910                 jmp     short loc_17927
.text:00017912 ; ---------------------------------------------------------------------------
.text:00017912
.text:00017912 loc_17912:                              ; CODE XREF: _ssh_rportcmp_ssh1+61j
.text:00017912                 mov     eax, [ebp+var_4]
.text:00017915                 mov     ecx, [ebp+var_8]
.text:00017918                 mov     edx, [eax+4]
.text:0001791B                 cmp     edx, [ecx+4]
.text:0001791E                 jnb     short loc_17925
.text:00017920                 or      eax, 0FFFFFFFFh
.text:00017923                 jmp     short loc_17927
.text:00017925 ; ---------------------------------------------------------------------------
.text:00017925
.text:00017925 loc_17925:                              ; CODE XREF: _ssh_rportcmp_ssh1+76j
.text:00017925                 xor     eax, eax
.text:00017927
.text:00017927 loc_17927:                              ; CODE XREF: _ssh_rportcmp_ssh1+53j
.text:00017927                                         ; _ssh_rportcmp_ssh1+68j ...
.text:00017927                 add     esp, 0Ch
.text:0001792A                 cmp     ebp, esp
.text:0001792C                 call    __RTC_CheckEsp
.text:00017931                 mov     esp, ebp
.text:00017933                 pop     ebp
.text:00017934                 retn
.text:00017934 _ssh_rportcmp_ssh1 endp
.text:00017934
.text:00017934 ; ---------------------------------------------------------------------------
.text:00017935                 align 4
.text:00017938
.text:00017938 ; =============== S U B R O U T I N E =======================================
.text:00017938
.text:00017938 ; Attributes: bp-based frame
.text:00017938
.text:00017938 _ssh_portcmp    proc near               ; DATA XREF: _ssh_setup_portfwd+28o
.text:00017938
.text:00017938 var_C           = dword ptr -0Ch
.text:00017938 var_8           = dword ptr -8
.text:00017938 var_4           = dword ptr -4
.text:00017938 arg_0           = dword ptr  8
.text:00017938 arg_4           = dword ptr  0Ch
.text:00017938
.text:00017938                 push    ebp
.text:00017939                 mov     ebp, esp
.text:0001793B                 sub     esp, 0Ch
.text:0001793E                 mov     [ebp+var_C], 0CCCCCCCCh
.text:00017945                 mov     [ebp+var_8], 0CCCCCCCCh
.text:0001794C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00017953                 mov     eax, [ebp+arg_0]
.text:00017956                 mov     [ebp+var_4], eax
.text:00017959                 mov     ecx, [ebp+arg_4]
.text:0001795C                 mov     [ebp+var_8], ecx
.text:0001795F                 mov     edx, [ebp+var_4]
.text:00017962                 mov     eax, [ebp+var_8]
.text:00017965                 mov     ecx, [edx+4]
.text:00017968                 cmp     ecx, [eax+4]
.text:0001796B                 jle     short loc_17977
.text:0001796D                 mov     eax, 1
.text:00017972                 jmp     loc_17A75
.text:00017977 ; ---------------------------------------------------------------------------
.text:00017977
.text:00017977 loc_17977:                              ; CODE XREF: _ssh_portcmp+33j
.text:00017977                 mov     edx, [ebp+var_4]
.text:0001797A                 mov     eax, [ebp+var_8]
.text:0001797D                 mov     ecx, [edx+4]
.text:00017980                 cmp     ecx, [eax+4]
.text:00017983                 jge     short loc_1798D
.text:00017985                 or      eax, 0FFFFFFFFh
.text:00017988                 jmp     loc_17A75
.text:0001798D ; ---------------------------------------------------------------------------
.text:0001798D
.text:0001798D loc_1798D:                              ; CODE XREF: _ssh_portcmp+4Bj
.text:0001798D                 mov     edx, [ebp+var_4]
.text:00017990                 mov     eax, [ebp+var_8]
.text:00017993                 mov     ecx, [edx+24h]
.text:00017996                 cmp     ecx, [eax+24h]
.text:00017999                 jle     short loc_179A5
.text:0001799B                 mov     eax, 1
.text:000179A0                 jmp     loc_17A75
.text:000179A5 ; ---------------------------------------------------------------------------
.text:000179A5
.text:000179A5 loc_179A5:                              ; CODE XREF: _ssh_portcmp+61j
.text:000179A5                 mov     edx, [ebp+var_4]
.text:000179A8                 mov     eax, [ebp+var_8]
.text:000179AB                 mov     ecx, [edx+24h]
.text:000179AE                 cmp     ecx, [eax+24h]
.text:000179B1                 jge     short loc_179BB
.text:000179B3                 or      eax, 0FFFFFFFFh
.text:000179B6                 jmp     loc_17A75
.text:000179BB ; ---------------------------------------------------------------------------
.text:000179BB
.text:000179BB loc_179BB:                              ; CODE XREF: _ssh_portcmp+79j
.text:000179BB                 mov     edx, [ebp+var_8]
.text:000179BE                 mov     eax, [edx+10h]
.text:000179C1                 push    eax             ; Str2
.text:000179C2                 mov     ecx, [ebp+var_4]
.text:000179C5                 mov     edx, [ecx+10h]
.text:000179C8                 push    edx             ; Str1
.text:000179C9                 call    _nullstrcmp
.text:000179CE                 add     esp, 8
.text:000179D1                 mov     [ebp+var_C], eax
.text:000179D4                 cmp     [ebp+var_C], 0
.text:000179D8                 jz      short loc_179EC
.text:000179DA                 xor     eax, eax
.text:000179DC                 cmp     [ebp+var_C], 0
.text:000179E0                 setnl   al
.text:000179E3                 lea     eax, [eax+eax-1]
.text:000179E7                 jmp     loc_17A75
.text:000179EC ; ---------------------------------------------------------------------------
.text:000179EC
.text:000179EC loc_179EC:                              ; CODE XREF: _ssh_portcmp+A0j
.text:000179EC                 mov     eax, [ebp+var_4]
.text:000179EF                 mov     ecx, [ebp+var_8]
.text:000179F2                 mov     edx, [eax+8]
.text:000179F5                 cmp     edx, [ecx+8]
.text:000179F8                 jbe     short loc_17A01
.text:000179FA                 mov     eax, 1
.text:000179FF                 jmp     short loc_17A75
.text:00017A01 ; ---------------------------------------------------------------------------
.text:00017A01
.text:00017A01 loc_17A01:                              ; CODE XREF: _ssh_portcmp+C0j
.text:00017A01                 mov     eax, [ebp+var_4]
.text:00017A04                 mov     ecx, [ebp+var_8]
.text:00017A07                 mov     edx, [eax+8]
.text:00017A0A                 cmp     edx, [ecx+8]
.text:00017A0D                 jnb     short loc_17A14
.text:00017A0F                 or      eax, 0FFFFFFFFh
.text:00017A12                 jmp     short loc_17A75
.text:00017A14 ; ---------------------------------------------------------------------------
.text:00017A14
.text:00017A14 loc_17A14:                              ; CODE XREF: _ssh_portcmp+D5j
.text:00017A14                 mov     eax, [ebp+var_4]
.text:00017A17                 cmp     dword ptr [eax+4], 44h ; 'D'
.text:00017A1B                 jz      short loc_17A73
.text:00017A1D                 mov     ecx, [ebp+var_8]
.text:00017A20                 mov     edx, [ecx+14h]
.text:00017A23                 push    edx             ; Str2
.text:00017A24                 mov     eax, [ebp+var_4]
.text:00017A27                 mov     ecx, [eax+14h]
.text:00017A2A                 push    ecx             ; Str1
.text:00017A2B                 call    _nullstrcmp
.text:00017A30                 add     esp, 8
.text:00017A33                 mov     [ebp+var_C], eax
.text:00017A36                 cmp     [ebp+var_C], 0
.text:00017A3A                 jz      short loc_17A4B
.text:00017A3C                 xor     eax, eax
.text:00017A3E                 cmp     [ebp+var_C], 0
.text:00017A42                 setnl   al
.text:00017A45                 lea     eax, [eax+eax-1]
.text:00017A49                 jmp     short loc_17A75
.text:00017A4B ; ---------------------------------------------------------------------------
.text:00017A4B
.text:00017A4B loc_17A4B:                              ; CODE XREF: _ssh_portcmp+102j
.text:00017A4B                 mov     edx, [ebp+var_4]
.text:00017A4E                 mov     eax, [ebp+var_8]
.text:00017A51                 mov     ecx, [edx+0Ch]
.text:00017A54                 cmp     ecx, [eax+0Ch]
.text:00017A57                 jbe     short loc_17A60
.text:00017A59                 mov     eax, 1
.text:00017A5E                 jmp     short loc_17A75
.text:00017A60 ; ---------------------------------------------------------------------------
.text:00017A60
.text:00017A60 loc_17A60:                              ; CODE XREF: _ssh_portcmp+11Fj
.text:00017A60                 mov     edx, [ebp+var_4]
.text:00017A63                 mov     eax, [ebp+var_8]
.text:00017A66                 mov     ecx, [edx+0Ch]
.text:00017A69                 cmp     ecx, [eax+0Ch]
.text:00017A6C                 jnb     short loc_17A73
.text:00017A6E                 or      eax, 0FFFFFFFFh
.text:00017A71                 jmp     short loc_17A75
.text:00017A73 ; ---------------------------------------------------------------------------
.text:00017A73
.text:00017A73 loc_17A73:                              ; CODE XREF: _ssh_portcmp+E3j
.text:00017A73                                         ; _ssh_portcmp+134j
.text:00017A73                 xor     eax, eax
.text:00017A75
.text:00017A75 loc_17A75:                              ; CODE XREF: _ssh_portcmp+3Aj
.text:00017A75                                         ; _ssh_portcmp+50j ...
.text:00017A75                 add     esp, 0Ch
.text:00017A78                 cmp     ebp, esp
.text:00017A7A                 call    __RTC_CheckEsp
.text:00017A7F                 mov     esp, ebp
.text:00017A81                 pop     ebp
.text:00017A82                 retn
.text:00017A82 _ssh_portcmp    endp
.text:00017A82
.text:00017A82 ; ---------------------------------------------------------------------------
.text:00017A83                 align 8
.text:00017A88
.text:00017A88 ; =============== S U B R O U T I N E =======================================
.text:00017A88
.text:00017A88 ; Attributes: bp-based frame
.text:00017A88
.text:00017A88 ; int __cdecl nullstrcmp(char *Str1, char *Str2)
.text:00017A88 _nullstrcmp     proc near               ; CODE XREF: _ssh_portcmp+91p
.text:00017A88                                         ; _ssh_portcmp+F3p
.text:00017A88
.text:00017A88 Str1            = dword ptr  8
.text:00017A88 Str2            = dword ptr  0Ch
.text:00017A88
.text:00017A88                 push    ebp
.text:00017A89                 mov     ebp, esp
.text:00017A8B                 cmp     [ebp+Str1], 0
.text:00017A8F                 jnz     short loc_17A9B
.text:00017A91                 cmp     [ebp+Str2], 0
.text:00017A95                 jnz     short loc_17A9B
.text:00017A97                 xor     eax, eax
.text:00017A99                 jmp     short loc_17AC3
.text:00017A9B ; ---------------------------------------------------------------------------
.text:00017A9B
.text:00017A9B loc_17A9B:                              ; CODE XREF: _nullstrcmp+7j
.text:00017A9B                                         ; _nullstrcmp+Dj
.text:00017A9B                 cmp     [ebp+Str1], 0
.text:00017A9F                 jnz     short loc_17AA6
.text:00017AA1                 or      eax, 0FFFFFFFFh
.text:00017AA4                 jmp     short loc_17AC3
.text:00017AA6 ; ---------------------------------------------------------------------------
.text:00017AA6
.text:00017AA6 loc_17AA6:                              ; CODE XREF: _nullstrcmp+17j
.text:00017AA6                 cmp     [ebp+Str2], 0
.text:00017AAA                 jnz     short loc_17AB3
.text:00017AAC                 mov     eax, 1
.text:00017AB1                 jmp     short loc_17AC3
.text:00017AB3 ; ---------------------------------------------------------------------------
.text:00017AB3
.text:00017AB3 loc_17AB3:                              ; CODE XREF: _nullstrcmp+22j
.text:00017AB3                 mov     eax, [ebp+Str2]
.text:00017AB6                 push    eax             ; Str2
.text:00017AB7                 mov     ecx, [ebp+Str1]
.text:00017ABA                 push    ecx             ; Str1
.text:00017ABB                 call    _strcmp
.text:00017AC0                 add     esp, 8
.text:00017AC3
.text:00017AC3 loc_17AC3:                              ; CODE XREF: _nullstrcmp+11j
.text:00017AC3                                         ; _nullstrcmp+1Cj ...
.text:00017AC3                 cmp     ebp, esp
.text:00017AC5                 call    __RTC_CheckEsp
.text:00017ACA                 pop     ebp
.text:00017ACB                 retn
.text:00017ACB _nullstrcmp     endp
.text:00017ACB
.text:00017ACB ; ---------------------------------------------------------------------------
.text:00017ACC                 db 0Ch dup(0CCh)
.text:00017AD8
.text:00017AD8 ; =============== S U B R O U T I N E =======================================
.text:00017AD8
.text:00017AD8 ; Attributes: bp-based frame
.text:00017AD8
.text:00017AD8 _ssh_rportfwd_succfail proc near        ; DATA XREF: _ssh_setup_portfwd+CBAo
.text:00017AD8                                         ; _ssh_setup_portfwd+D54o
.text:00017AD8
.text:00017AD8 var_8           = dword ptr -8
.text:00017AD8 var_4           = dword ptr -4
.text:00017AD8 arg_0           = dword ptr  8
.text:00017AD8 arg_4           = dword ptr  0Ch
.text:00017AD8 arg_8           = dword ptr  10h
.text:00017AD8
.text:00017AD8                 push    ebp
.text:00017AD9                 mov     ebp, esp
.text:00017ADB                 sub     esp, 8
.text:00017ADE                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00017AE5                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00017AEC                 mov     eax, [ebp+arg_8]
.text:00017AEF                 mov     [ebp+var_8], eax
.text:00017AF2                 mov     ecx, [ebp+arg_0]
.text:00017AF5                 mov     edx, [ecx+16Ch]
.text:00017AFB                 sub     edx, 1
.text:00017AFE                 neg     edx
.text:00017B00                 sbb     edx, edx
.text:00017B02                 and     edx, 43h
.text:00017B05                 add     edx, 0Eh
.text:00017B08                 mov     eax, [ebp+arg_4]
.text:00017B0B                 cmp     [eax+8], edx
.text:00017B0E                 jnz     short loc_17B2A
.text:00017B10                 mov     ecx, [ebp+var_8]
.text:00017B13                 mov     edx, [ecx+10h]
.text:00017B16                 push    edx
.text:00017B17                 push    offset $SG90834 ; "Remote port forwarding from %s enabled"
.text:00017B1C                 mov     eax, [ebp+arg_0]
.text:00017B1F                 push    eax
.text:00017B20                 call    _logeventf
.text:00017B25                 add     esp, 0Ch
.text:00017B28                 jmp     short loc_17B93
.text:00017B2A ; ---------------------------------------------------------------------------
.text:00017B2A
.text:00017B2A loc_17B2A:                              ; CODE XREF: _ssh_rportfwd_succfail+36j
.text:00017B2A                 mov     ecx, [ebp+var_8]
.text:00017B2D                 mov     edx, [ecx+10h]
.text:00017B30                 push    edx
.text:00017B31                 push    offset $SG90836 ; "Remote port forwarding from %s refused"
.text:00017B36                 mov     eax, [ebp+arg_0]
.text:00017B39                 push    eax
.text:00017B3A                 call    _logeventf
.text:00017B3F                 add     esp, 0Ch
.text:00017B42                 mov     ecx, [ebp+var_8]
.text:00017B45                 push    ecx
.text:00017B46                 mov     edx, [ebp+arg_0]
.text:00017B49                 mov     eax, [edx+110h]
.text:00017B4F                 push    eax
.text:00017B50                 call    _del234
.text:00017B55                 add     esp, 8
.text:00017B58                 mov     [ebp+var_4], eax
.text:00017B5B                 mov     ecx, [ebp+var_4]
.text:00017B5E                 cmp     ecx, [ebp+var_8]
.text:00017B61                 jz      short loc_17B7A
.text:00017B63                 push    1342h           ; Line
.text:00017B68                 push    offset $SG90838 ; "..\\..\\..\\ssh.c"
.text:00017B6D                 push    offset $SG90839 ; "rpf == pf"
.text:00017B72                 call    __wassert
.text:00017B77 ; ---------------------------------------------------------------------------
.text:00017B77                 add     esp, 0Ch
.text:00017B7A
.text:00017B7A loc_17B7A:                              ; CODE XREF: _ssh_rportfwd_succfail+89j
.text:00017B7A                 mov     eax, [ebp+var_8]
.text:00017B7D                 mov     ecx, [eax+18h]
.text:00017B80                 mov     dword ptr [ecx+20h], 0
.text:00017B87                 mov     edx, [ebp+var_8]
.text:00017B8A                 push    edx
.text:00017B8B                 call    _free_rportfwd
.text:00017B90                 add     esp, 4
.text:00017B93
.text:00017B93 loc_17B93:                              ; CODE XREF: _ssh_rportfwd_succfail+50j
.text:00017B93                 add     esp, 8
.text:00017B96                 cmp     ebp, esp
.text:00017B98                 call    __RTC_CheckEsp
.text:00017B9D                 mov     esp, ebp
.text:00017B9F                 pop     ebp
.text:00017BA0                 retn
.text:00017BA0 _ssh_rportfwd_succfail endp
.text:00017BA0
.text:00017BA0 ; ---------------------------------------------------------------------------
.text:00017BA1                 align 8
.text:00017BA8
.text:00017BA8 ; =============== S U B R O U T I N E =======================================
.text:00017BA8
.text:00017BA8 ; Attributes: bp-based frame
.text:00017BA8
.text:00017BA8 _ssh2_try_send_and_unthrottle proc near ; CODE XREF: _do_ssh2_authconn+442Ep
.text:00017BA8                                         ; _ssh2_msg_channel_window_adjust+7Fp
.text:00017BA8
.text:00017BA8 var_8           = dword ptr -8
.text:00017BA8 var_4           = dword ptr -4
.text:00017BA8 arg_4           = dword ptr  0Ch
.text:00017BA8
.text:00017BA8                 push    ebp
.text:00017BA9                 mov     ebp, esp
.text:00017BAB                 sub     esp, 8
.text:00017BAE                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00017BB5                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00017BBC                 mov     eax, [ebp+arg_4]
.text:00017BBF                 mov     ecx, [eax+14h]
.text:00017BC2                 and     ecx, 1
.text:00017BC5                 jz      short loc_17BC9
.text:00017BC7                 jmp     short loc_17C19
.text:00017BC9 ; ---------------------------------------------------------------------------
.text:00017BC9
.text:00017BC9 loc_17BC9:                              ; CODE XREF: _ssh2_try_send_and_unthrottle+1Dj
.text:00017BC9                 mov     edx, [ebp+arg_4]
.text:00017BCC                 push    edx
.text:00017BCD                 call    _ssh2_try_send
.text:00017BD2                 add     esp, 4
.text:00017BD5                 mov     [ebp+var_4], eax
.text:00017BD8                 cmp     [ebp+var_4], 0
.text:00017BDC                 jnz     short loc_17C19
.text:00017BDE                 mov     eax, [ebp+arg_4]
.text:00017BE1                 mov     ecx, [eax+0Ch]
.text:00017BE4                 mov     [ebp+var_8], ecx
.text:00017BE7                 cmp     [ebp+var_8], 1
.text:00017BEB                 jz      short loc_17BF7
.text:00017BED                 cmp     [ebp+var_8], 3
.text:00017BF1                 jz      short loc_17C0A
.text:00017BF3                 jmp     short loc_17C19
.text:00017BF5 ; ---------------------------------------------------------------------------
.text:00017BF5                 jmp     short loc_17C19
.text:00017BF7 ; ---------------------------------------------------------------------------
.text:00017BF7
.text:00017BF7 loc_17BF7:                              ; CODE XREF: _ssh2_try_send_and_unthrottle+43j
.text:00017BF7                 mov     edx, [ebp+arg_4]
.text:00017BFA                 mov     eax, [edx+4Ch]
.text:00017BFD                 push    eax
.text:00017BFE                 call    _x11_unthrottle
.text:00017C03                 add     esp, 4
.text:00017C06                 jmp     short loc_17C19
.text:00017C08 ; ---------------------------------------------------------------------------
.text:00017C08                 jmp     short loc_17C19
.text:00017C0A ; ---------------------------------------------------------------------------
.text:00017C0A
.text:00017C0A loc_17C0A:                              ; CODE XREF: _ssh2_try_send_and_unthrottle+49j
.text:00017C0A                 mov     ecx, [ebp+arg_4]
.text:00017C0D                 mov     edx, [ecx+4Ch]
.text:00017C10                 push    edx
.text:00017C11                 call    _pfd_unthrottle
.text:00017C16                 add     esp, 4
.text:00017C19
.text:00017C19 loc_17C19:                              ; CODE XREF: _ssh2_try_send_and_unthrottle+1Fj
.text:00017C19                                         ; _ssh2_try_send_and_unthrottle+34j ...
.text:00017C19                 add     esp, 8
.text:00017C1C                 cmp     ebp, esp
.text:00017C1E                 call    __RTC_CheckEsp
.text:00017C23                 mov     esp, ebp
.text:00017C25                 pop     ebp
.text:00017C26                 retn
.text:00017C26 _ssh2_try_send_and_unthrottle endp
.text:00017C26
.text:00017C26 ; ---------------------------------------------------------------------------
.text:00017C27                 align 4
.text:00017C28
.text:00017C28 ; =============== S U B R O U T I N E =======================================
.text:00017C28
.text:00017C28 ; Attributes: bp-based frame
.text:00017C28
.text:00017C28 _ssh2_channel_init proc near            ; CODE XREF: _do_ssh2_authconn+3BB9p
.text:00017C28                                         ; _ssh2_msg_channel_open+487p ...
.text:00017C28
.text:00017C28 var_8           = dword ptr -8
.text:00017C28 var_4           = dword ptr -4
.text:00017C28 arg_0           = dword ptr  8
.text:00017C28
.text:00017C28                 push    ebp
.text:00017C29                 mov     ebp, esp
.text:00017C2B                 sub     esp, 8
.text:00017C2E                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00017C35                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00017C3C                 mov     eax, [ebp+arg_0]
.text:00017C3F                 mov     ecx, [eax]
.text:00017C41                 mov     [ebp+var_4], ecx
.text:00017C44                 mov     edx, [ebp+var_4]
.text:00017C47                 push    edx
.text:00017C48                 call    _alloc_channel_id
.text:00017C4D                 add     esp, 4
.text:00017C50                 mov     ecx, [ebp+arg_0]
.text:00017C53                 mov     [ecx+8], eax
.text:00017C56                 mov     edx, [ebp+arg_0]
.text:00017C59                 mov     dword ptr [edx+14h], 0
.text:00017C60                 mov     eax, [ebp+arg_0]
.text:00017C63                 mov     dword ptr [eax+18h], 0
.text:00017C6A                 mov     ecx, [ebp+arg_0]
.text:00017C6D                 mov     dword ptr [ecx+1Ch], 0
.text:00017C74                 mov     edx, [ebp+var_4]
.text:00017C77                 push    edx
.text:00017C78                 call    _ssh_is_simple
.text:00017C7D                 add     esp, 4
.text:00017C80                 neg     eax
.text:00017C82                 sbb     eax, eax
.text:00017C84                 and     eax, 7FFFBFFFh
.text:00017C89                 add     eax, 4000h
.text:00017C8E                 mov     [ebp+var_8], eax
.text:00017C91                 mov     eax, [ebp+arg_0]
.text:00017C94                 mov     ecx, [ebp+var_8]
.text:00017C97                 mov     [eax+3Ch], ecx
.text:00017C9A                 mov     edx, [ebp+arg_0]
.text:00017C9D                 mov     eax, [ebp+var_8]
.text:00017CA0                 mov     [edx+38h], eax
.text:00017CA3                 mov     ecx, [ebp+arg_0]
.text:00017CA6                 mov     edx, [ebp+var_8]
.text:00017CA9                 mov     [ecx+34h], edx
.text:00017CAC                 mov     eax, [ebp+arg_0]
.text:00017CAF                 mov     dword ptr [eax+40h], 0
.text:00017CB6                 mov     ecx, [ebp+arg_0]
.text:00017CB9                 mov     dword ptr [ecx+48h], 2
.text:00017CC0                 mov     edx, [ebp+arg_0]
.text:00017CC3                 add     edx, 20h ; ' '
.text:00017CC6                 push    edx
.text:00017CC7                 call    _bufchain_init
.text:00017CCC                 add     esp, 4
.text:00017CCF                 add     esp, 8
.text:00017CD2                 cmp     ebp, esp
.text:00017CD4                 call    __RTC_CheckEsp
.text:00017CD9                 mov     esp, ebp
.text:00017CDB                 pop     ebp
.text:00017CDC                 retn
.text:00017CDC _ssh2_channel_init endp
.text:00017CDC
.text:00017CDC ; ---------------------------------------------------------------------------
.text:00017CDD                 db 0Bh dup(0CCh)
.text:00017CE8
.text:00017CE8 ; =============== S U B R O U T I N E =======================================
.text:00017CE8
.text:00017CE8 ; Attributes: bp-based frame
.text:00017CE8
.text:00017CE8 _alloc_channel_id proc near             ; CODE XREF: _ssh2_channel_init+20p
.text:00017CE8                                         ; _ssh1_smsg_x11_open+C3p ...
.text:00017CE8
.text:00017CE8 var_24          = dword ptr -24h
.text:00017CE8 var_20          = dword ptr -20h
.text:00017CE8 var_1C          = dword ptr -1Ch
.text:00017CE8 var_18          = dword ptr -18h
.text:00017CE8 var_14          = dword ptr -14h
.text:00017CE8 var_10          = dword ptr -10h
.text:00017CE8 var_C           = dword ptr -0Ch
.text:00017CE8 var_8           = dword ptr -8
.text:00017CE8 var_4           = dword ptr -4
.text:00017CE8 arg_0           = dword ptr  8
.text:00017CE8
.text:00017CE8                 push    ebp
.text:00017CE9                 mov     ebp, esp
.text:00017CEB                 sub     esp, 24h
.text:00017CEE                 mov     eax, 0CCCCCCCCh
.text:00017CF3                 mov     [ebp+var_24], eax
.text:00017CF6                 mov     [ebp+var_20], eax
.text:00017CF9                 mov     [ebp+var_1C], eax
.text:00017CFC                 mov     [ebp+var_18], eax
.text:00017CFF                 mov     [ebp+var_14], eax
.text:00017D02                 mov     [ebp+var_10], eax
.text:00017D05                 mov     [ebp+var_C], eax
.text:00017D08                 mov     [ebp+var_8], eax
.text:00017D0B                 mov     [ebp+var_4], eax
.text:00017D0E                 mov     [ebp+var_4], 100h
.text:00017D15                 mov     eax, [ebp+arg_0]
.text:00017D18                 mov     ecx, [eax+0F8h]
.text:00017D1E                 push    ecx
.text:00017D1F                 call    _count234
.text:00017D24                 add     esp, 4
.text:00017D27                 mov     [ebp+var_14], eax
.text:00017D2A                 mov     [ebp+var_8], 0FFFFFFFFh
.text:00017D31                 mov     edx, [ebp+var_14]
.text:00017D34                 mov     [ebp+var_C], edx
.text:00017D37
.text:00017D37 loc_17D37:                              ; CODE XREF: _alloc_channel_id:loc_17D82j
.text:00017D37                 mov     eax, [ebp+var_C]
.text:00017D3A                 sub     eax, [ebp+var_8]
.text:00017D3D                 cmp     eax, 1
.text:00017D40                 jbe     short loc_17D84
.text:00017D42                 mov     ecx, [ebp+var_C]
.text:00017D45                 add     ecx, [ebp+var_8]
.text:00017D48                 shr     ecx, 1
.text:00017D4A                 mov     [ebp+var_10], ecx
.text:00017D4D                 mov     edx, [ebp+var_10]
.text:00017D50                 push    edx
.text:00017D51                 mov     eax, [ebp+arg_0]
.text:00017D54                 mov     ecx, [eax+0F8h]
.text:00017D5A                 push    ecx
.text:00017D5B                 call    _index234
.text:00017D60                 add     esp, 8
.text:00017D63                 mov     [ebp+var_18], eax
.text:00017D66                 mov     edx, [ebp+var_10]
.text:00017D69                 add     edx, [ebp+var_4]
.text:00017D6C                 mov     eax, [ebp+var_18]
.text:00017D6F                 cmp     [eax+8], edx
.text:00017D72                 jnz     short loc_17D7C
.text:00017D74                 mov     ecx, [ebp+var_10]
.text:00017D77                 mov     [ebp+var_8], ecx
.text:00017D7A                 jmp     short loc_17D82
.text:00017D7C ; ---------------------------------------------------------------------------
.text:00017D7C
.text:00017D7C loc_17D7C:                              ; CODE XREF: _alloc_channel_id+8Aj
.text:00017D7C                 mov     edx, [ebp+var_10]
.text:00017D7F                 mov     [ebp+var_C], edx
.text:00017D82
.text:00017D82 loc_17D82:                              ; CODE XREF: _alloc_channel_id+92j
.text:00017D82                 jmp     short loc_17D37
.text:00017D84 ; ---------------------------------------------------------------------------
.text:00017D84
.text:00017D84 loc_17D84:                              ; CODE XREF: _alloc_channel_id+58j
.text:00017D84                 mov     eax, [ebp+var_4]
.text:00017D87                 mov     ecx, [ebp+var_8]
.text:00017D8A                 lea     edx, [ecx+eax+1]
.text:00017D8E                 mov     [ebp+var_20], edx
.text:00017D91                 push    offset _ssh_channelfind
.text:00017D96                 lea     eax, [ebp+var_20]
.text:00017D99                 push    eax
.text:00017D9A                 mov     ecx, [ebp+arg_0]
.text:00017D9D                 mov     edx, [ecx+0F8h]
.text:00017DA3                 push    edx
.text:00017DA4                 call    _find234
.text:00017DA9                 add     esp, 0Ch
.text:00017DAC                 test    eax, eax
.text:00017DAE                 jz      short loc_17DC7
.text:00017DB0                 push    45Fh            ; Line
.text:00017DB5                 push    offset $SG88263 ; "..\\..\\..\\ssh.c"
.text:00017DBA                 push    offset $SG88264 ; "NULL == find234(ssh->channels, &i, ssh_"...
.text:00017DBF                 call    __wassert
.text:00017DC4 ; ---------------------------------------------------------------------------
.text:00017DC4                 add     esp, 0Ch
.text:00017DC7
.text:00017DC7 loc_17DC7:                              ; CODE XREF: _alloc_channel_id+C6j
.text:00017DC7                 mov     ecx, [ebp+var_4]
.text:00017DCA                 mov     edx, [ebp+var_8]
.text:00017DCD                 lea     eax, [edx+ecx+1]
.text:00017DD1                 push    edx
.text:00017DD2                 mov     ecx, ebp
.text:00017DD4                 push    eax
.text:00017DD5                 lea     edx, $LN10_4
.text:00017DDB                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00017DE0                 pop     eax
.text:00017DE1                 pop     edx
.text:00017DE2                 add     esp, 24h
.text:00017DE5                 cmp     ebp, esp
.text:00017DE7                 call    __RTC_CheckEsp
.text:00017DEC                 mov     esp, ebp
.text:00017DEE                 pop     ebp
.text:00017DEF                 retn
.text:00017DEF _alloc_channel_id endp
.text:00017DEF
.text:00017DEF ; ---------------------------------------------------------------------------
.text:00017DF0 $LN10_4         dd 1                    ; DATA XREF: _alloc_channel_id+EDo
.text:00017DF4                 dd offset $LN9_3
.text:00017DF8 $LN9_3          dd 0FFFFFFE0h, 4        ; DATA XREF: .text:00017DF4o
.text:00017E00                 dd offset $LN8_3
.text:00017E04 $LN8_3          dd 0CCCC0069h           ; DATA XREF: .text:00017E00o
.text:00017E08
.text:00017E08 ; =============== S U B R O U T I N E =======================================
.text:00017E08
.text:00017E08 ; Attributes: bp-based frame
.text:00017E08
.text:00017E08 _ssh_channelfind proc near              ; DATA XREF: _alloc_channel_id+A9o
.text:00017E08                                         ; _ssh2_channel_msg+2Co ...
.text:00017E08
.text:00017E08 var_8           = dword ptr -8
.text:00017E08 var_4           = dword ptr -4
.text:00017E08 arg_0           = dword ptr  8
.text:00017E08 arg_4           = dword ptr  0Ch
.text:00017E08
.text:00017E08                 push    ebp
.text:00017E09                 mov     ebp, esp
.text:00017E0B                 sub     esp, 8
.text:00017E0E                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00017E15                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00017E1C                 mov     eax, [ebp+arg_0]
.text:00017E1F                 mov     [ebp+var_4], eax
.text:00017E22                 mov     ecx, [ebp+arg_4]
.text:00017E25                 mov     [ebp+var_8], ecx
.text:00017E28                 mov     edx, [ebp+var_4]
.text:00017E2B                 mov     eax, [ebp+var_8]
.text:00017E2E                 mov     ecx, [edx]
.text:00017E30                 cmp     ecx, [eax+8]
.text:00017E33                 jnb     short loc_17E3A
.text:00017E35                 or      eax, 0FFFFFFFFh
.text:00017E38                 jmp     short loc_17E50
.text:00017E3A ; ---------------------------------------------------------------------------
.text:00017E3A
.text:00017E3A loc_17E3A:                              ; CODE XREF: _ssh_channelfind+2Bj
.text:00017E3A                 mov     edx, [ebp+var_4]
.text:00017E3D                 mov     eax, [ebp+var_8]
.text:00017E40                 mov     ecx, [edx]
.text:00017E42                 cmp     ecx, [eax+8]
.text:00017E45                 jbe     short loc_17E4E
.text:00017E47                 mov     eax, 1
.text:00017E4C                 jmp     short loc_17E50
.text:00017E4E ; ---------------------------------------------------------------------------
.text:00017E4E
.text:00017E4E loc_17E4E:                              ; CODE XREF: _ssh_channelfind+3Dj
.text:00017E4E                 xor     eax, eax
.text:00017E50
.text:00017E50 loc_17E50:                              ; CODE XREF: _ssh_channelfind+30j
.text:00017E50                                         ; _ssh_channelfind+44j
.text:00017E50                 mov     esp, ebp
.text:00017E52                 pop     ebp
.text:00017E53                 retn
.text:00017E53 _ssh_channelfind endp
.text:00017E53
.text:00017E53 ; ---------------------------------------------------------------------------
.text:00017E54                 align 8
.text:00017E58
.text:00017E58 ; =============== S U B R O U T I N E =======================================
.text:00017E58
.text:00017E58 ; Attributes: bp-based frame
.text:00017E58
.text:00017E58 ; int __cdecl ssh2_chanopen_init(int, char *Str)
.text:00017E58 _ssh2_chanopen_init proc near           ; CODE XREF: _do_ssh2_authconn+3C3Bp
.text:00017E58                                         ; _ssh_send_port_open+7Ep
.text:00017E58
.text:00017E58 var_4           = dword ptr -4
.text:00017E58 arg_0           = dword ptr  8
.text:00017E58 Str             = dword ptr  0Ch
.text:00017E58
.text:00017E58                 push    ebp
.text:00017E59                 mov     ebp, esp
.text:00017E5B                 push    ecx
.text:00017E5C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00017E63                 push    5Ah ; 'Z'
.text:00017E65                 call    _ssh2_pkt_init
.text:00017E6A                 add     esp, 4
.text:00017E6D                 mov     [ebp+var_4], eax
.text:00017E70                 mov     eax, [ebp+Str]
.text:00017E73                 push    eax             ; Str
.text:00017E74                 mov     ecx, [ebp+var_4]
.text:00017E77                 push    ecx             ; int
.text:00017E78                 call    _ssh_pkt_addstring
.text:00017E7D                 add     esp, 8
.text:00017E80                 mov     edx, [ebp+arg_0]
.text:00017E83                 mov     eax, [edx+8]
.text:00017E86                 push    eax
.text:00017E87                 mov     ecx, [ebp+var_4]
.text:00017E8A                 push    ecx
.text:00017E8B                 call    _ssh_pkt_adduint32
.text:00017E90                 add     esp, 8
.text:00017E93                 mov     edx, [ebp+arg_0]
.text:00017E96                 mov     eax, [edx+34h]
.text:00017E99                 push    eax
.text:00017E9A                 mov     ecx, [ebp+var_4]
.text:00017E9D                 push    ecx
.text:00017E9E                 call    _ssh_pkt_adduint32
.text:00017EA3                 add     esp, 8
.text:00017EA6                 push    4000h
.text:00017EAB                 mov     edx, [ebp+var_4]
.text:00017EAE                 push    edx
.text:00017EAF                 call    _ssh_pkt_adduint32
.text:00017EB4                 add     esp, 8
.text:00017EB7                 mov     eax, [ebp+var_4]
.text:00017EBA                 add     esp, 4
.text:00017EBD                 cmp     ebp, esp
.text:00017EBF                 call    __RTC_CheckEsp
.text:00017EC4                 mov     esp, ebp
.text:00017EC6                 pop     ebp
.text:00017EC7                 retn
.text:00017EC7 _ssh2_chanopen_init endp
.text:00017EC7
.text:00017EC8
.text:00017EC8 ; =============== S U B R O U T I N E =======================================
.text:00017EC8
.text:00017EC8 ; Attributes: bp-based frame
.text:00017EC8
.text:00017EC8 _ssh2_msg_channel_response proc near    ; DATA XREF: _do_ssh2_authconn+3E36o
.text:00017EC8                                         ; _do_ssh2_authconn+3E43o
.text:00017EC8
.text:00017EC8 var_8           = dword ptr -8
.text:00017EC8 var_4           = dword ptr -4
.text:00017EC8 arg_0           = dword ptr  8
.text:00017EC8 arg_4           = dword ptr  0Ch
.text:00017EC8
.text:00017EC8                 push    ebp
.text:00017EC9                 mov     ebp, esp
.text:00017ECB                 sub     esp, 8
.text:00017ECE                 push    esi
.text:00017ECF                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00017ED6                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00017EDD                 mov     eax, [ebp+arg_4]
.text:00017EE0                 push    eax
.text:00017EE1                 mov     ecx, [ebp+arg_0]
.text:00017EE4                 push    ecx
.text:00017EE5                 call    _ssh2_channel_msg
.text:00017EEA                 add     esp, 8
.text:00017EED                 mov     [ebp+var_4], eax
.text:00017EF0                 cmp     [ebp+var_4], 0
.text:00017EF4                 jnz     short loc_17EFB
.text:00017EF6                 jmp     loc_17F90
.text:00017EFB ; ---------------------------------------------------------------------------
.text:00017EFB
.text:00017EFB loc_17EFB:                              ; CODE XREF: _ssh2_msg_channel_response+2Cj
.text:00017EFB                 mov     edx, [ebp+var_4]
.text:00017EFE                 cmp     dword ptr [edx+0Ch], 5
.text:00017F02                 jnz     short loc_17F29
.text:00017F04                 mov     eax, [ebp+arg_4]
.text:00017F07                 mov     ecx, [eax]
.text:00017F09                 push    ecx
.text:00017F0A                 mov     edx, [ebp+arg_4]
.text:00017F0D                 mov     eax, [edx+14h]
.text:00017F10                 push    eax
.text:00017F11                 mov     ecx, [ebp+arg_4]
.text:00017F14                 mov     edx, [ecx+8]
.text:00017F17                 push    edx
.text:00017F18                 mov     eax, [ebp+var_4]
.text:00017F1B                 mov     ecx, [eax+4Ch]
.text:00017F1E                 push    ecx
.text:00017F1F                 call    _share_got_pkt_from_server
.text:00017F24                 add     esp, 10h
.text:00017F27                 jmp     short loc_17F90
.text:00017F29 ; ---------------------------------------------------------------------------
.text:00017F29
.text:00017F29 loc_17F29:                              ; CODE XREF: _ssh2_msg_channel_response+3Aj
.text:00017F29                 mov     edx, [ebp+var_4]
.text:00017F2C                 mov     eax, [edx+40h]
.text:00017F2F                 mov     [ebp+var_8], eax
.text:00017F32                 cmp     [ebp+var_8], 0
.text:00017F36                 jnz     short loc_17F4A
.text:00017F38                 mov     ecx, [ebp+arg_4]
.text:00017F3B                 push    ecx
.text:00017F3C                 mov     edx, [ebp+arg_0]
.text:00017F3F                 push    edx
.text:00017F40                 call    _ssh2_msg_unexpected
.text:00017F45                 add     esp, 8
.text:00017F48                 jmp     short loc_17F90
.text:00017F4A ; ---------------------------------------------------------------------------
.text:00017F4A
.text:00017F4A loc_17F4A:                              ; CODE XREF: _ssh2_msg_channel_response+6Ej
.text:00017F4A                 mov     esi, esp
.text:00017F4C                 mov     eax, [ebp+var_8]
.text:00017F4F                 mov     ecx, [eax+4]
.text:00017F52                 push    ecx
.text:00017F53                 mov     edx, [ebp+arg_4]
.text:00017F56                 push    edx
.text:00017F57                 mov     eax, [ebp+var_4]
.text:00017F5A                 push    eax
.text:00017F5B                 mov     ecx, [ebp+var_8]
.text:00017F5E                 mov     edx, [ecx]
.text:00017F60                 call    edx
.text:00017F62                 add     esp, 0Ch
.text:00017F65                 cmp     esi, esp
.text:00017F67                 call    __RTC_CheckEsp
.text:00017F6C                 mov     eax, [ebp+var_4]
.text:00017F6F                 mov     ecx, [ebp+var_8]
.text:00017F72                 mov     edx, [ecx+8]
.text:00017F75                 mov     [eax+40h], edx
.text:00017F78                 mov     eax, [ebp+var_8]
.text:00017F7B                 push    eax
.text:00017F7C                 call    _safefree
.text:00017F81                 add     esp, 4
.text:00017F84                 mov     ecx, [ebp+var_4]
.text:00017F87                 push    ecx
.text:00017F88                 call    _ssh2_channel_check_close
.text:00017F8D                 add     esp, 4
.text:00017F90
.text:00017F90 loc_17F90:                              ; CODE XREF: _ssh2_msg_channel_response+2Ej
.text:00017F90                                         ; _ssh2_msg_channel_response+5Fj ...
.text:00017F90                 pop     esi
.text:00017F91                 add     esp, 8
.text:00017F94                 cmp     ebp, esp
.text:00017F96                 call    __RTC_CheckEsp
.text:00017F9B                 mov     esp, ebp
.text:00017F9D                 pop     ebp
.text:00017F9E                 retn
.text:00017F9E _ssh2_msg_channel_response endp
.text:00017F9E
.text:00017F9E ; ---------------------------------------------------------------------------
.text:00017F9F                 db 9 dup(0CCh)
.text:00017FA8
.text:00017FA8 ; =============== S U B R O U T I N E =======================================
.text:00017FA8
.text:00017FA8 ; Attributes: bp-based frame
.text:00017FA8
.text:00017FA8 _ssh2_channel_msg proc near             ; CODE XREF: _ssh2_msg_channel_response+1Dp
.text:00017FA8                                         ; _ssh2_msg_channel_window_adjust+13p ...
.text:00017FA8
.text:00017FA8 var_18          = dword ptr -18h
.text:00017FA8 Str             = dword ptr -14h
.text:00017FA8 var_10          = dword ptr -10h
.text:00017FA8 var_C           = dword ptr -0Ch
.text:00017FA8 var_8           = dword ptr -8
.text:00017FA8 var_4           = dword ptr -4
.text:00017FA8 arg_0           = dword ptr  8
.text:00017FA8 arg_4           = dword ptr  0Ch
.text:00017FA8
.text:00017FA8                 push    ebp
.text:00017FA9                 mov     ebp, esp
.text:00017FAB                 sub     esp, 18h
.text:00017FAE                 mov     eax, 0CCCCCCCCh
.text:00017FB3                 mov     [ebp+var_18], eax
.text:00017FB6                 mov     [ebp+Str], eax
.text:00017FB9                 mov     [ebp+var_10], eax
.text:00017FBC                 mov     [ebp+var_C], eax
.text:00017FBF                 mov     [ebp+var_8], eax
.text:00017FC2                 mov     [ebp+var_4], eax
.text:00017FC5                 mov     eax, [ebp+arg_4]
.text:00017FC8                 push    eax
.text:00017FC9                 call    _ssh_pkt_getuint32
.text:00017FCE                 add     esp, 4
.text:00017FD1                 mov     [ebp+var_8], eax
.text:00017FD4                 push    offset _ssh_channelfind
.text:00017FD9                 lea     ecx, [ebp+var_8]
.text:00017FDC                 push    ecx
.text:00017FDD                 mov     edx, [ebp+arg_0]
.text:00017FE0                 mov     eax, [edx+0F8h]
.text:00017FE6                 push    eax
.text:00017FE7                 call    _find234
.text:00017FEC                 add     esp, 0Ch
.text:00017FEF                 mov     [ebp+var_10], eax
.text:00017FF2                 cmp     [ebp+var_10], 0
.text:00017FF6                 jz      short loc_18028
.text:00017FF8                 mov     ecx, [ebp+var_10]
.text:00017FFB                 cmp     dword ptr [ecx+0Ch], 5
.text:00017FFF                 jz      loc_180A0
.text:00018005                 mov     edx, [ebp+var_10]
.text:00018008                 cmp     dword ptr [edx+10h], 0
.text:0001800C                 jz      loc_180A0
.text:00018012                 mov     eax, [ebp+arg_4]
.text:00018015                 cmp     dword ptr [eax+8], 5Bh ; '['
.text:00018019                 jz      loc_180A0
.text:0001801F                 mov     ecx, [ebp+arg_4]
.text:00018022                 cmp     dword ptr [ecx+8], 5Ch ; '\'
.text:00018026                 jz      short loc_180A0
.text:00018028
.text:00018028 loc_18028:                              ; CODE XREF: _ssh2_channel_msg+4Ej
.text:00018028                 cmp     [ebp+var_10], 0
.text:0001802C                 jz      short loc_18037
.text:0001802E                 mov     [ebp+var_18], offset $SG92250 ; "half-open"
.text:00018035                 jmp     short loc_1803E
.text:00018037 ; ---------------------------------------------------------------------------
.text:00018037
.text:00018037 loc_18037:                              ; CODE XREF: _ssh2_channel_msg+84j
.text:00018037                 mov     [ebp+var_18], offset $SG92251 ; "nonexistent"
.text:0001803E
.text:0001803E loc_1803E:                              ; CODE XREF: _ssh2_channel_msg+8Dj
.text:0001803E                 mov     edx, [ebp+var_8]
.text:00018041                 push    edx
.text:00018042                 mov     eax, [ebp+var_18]
.text:00018045                 push    eax
.text:00018046                 mov     ecx, [ebp+arg_4]
.text:00018049                 mov     edx, [ecx+8]
.text:0001804C                 push    edx
.text:0001804D                 mov     eax, [ebp+arg_0]
.text:00018050                 mov     ecx, [eax+15Ch]
.text:00018056                 push    ecx
.text:00018057                 mov     edx, [ebp+arg_0]
.text:0001805A                 mov     eax, [edx+158h]
.text:00018060                 push    eax
.text:00018061                 call    _ssh2_pkt_type
.text:00018066                 add     esp, 0Ch
.text:00018069                 push    eax
.text:0001806A                 push    offset $SG92252 ; "Received %s for %s channel %u"
.text:0001806F                 call    _dupprintf
.text:00018074                 add     esp, 10h
.text:00018077                 mov     [ebp+Str], eax
.text:0001807A                 push    0               ; int
.text:0001807C                 push    2               ; int
.text:0001807E                 mov     ecx, [ebp+Str]
.text:00018081                 push    ecx             ; Str
.text:00018082                 push    0               ; int
.text:00018084                 mov     edx, [ebp+arg_0]
.text:00018087                 push    edx             ; int
.text:00018088                 call    _ssh_disconnect
.text:0001808D                 add     esp, 14h
.text:00018090                 mov     eax, [ebp+Str]
.text:00018093                 push    eax
.text:00018094                 call    _safefree
.text:00018099                 add     esp, 4
.text:0001809C                 xor     eax, eax
.text:0001809E                 jmp     short loc_180A3
.text:000180A0 ; ---------------------------------------------------------------------------
.text:000180A0
.text:000180A0 loc_180A0:                              ; CODE XREF: _ssh2_channel_msg+57j
.text:000180A0                                         ; _ssh2_channel_msg+64j ...
.text:000180A0                 mov     eax, [ebp+var_10]
.text:000180A3
.text:000180A3 loc_180A3:                              ; CODE XREF: _ssh2_channel_msg+F6j
.text:000180A3                 push    edx
.text:000180A4                 mov     ecx, ebp
.text:000180A6                 push    eax
.text:000180A7                 lea     edx, $LN9_4
.text:000180AD                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:000180B2                 pop     eax
.text:000180B3                 pop     edx
.text:000180B4                 add     esp, 18h
.text:000180B7                 cmp     ebp, esp
.text:000180B9                 call    __RTC_CheckEsp
.text:000180BE                 mov     esp, ebp
.text:000180C0                 pop     ebp
.text:000180C1                 retn
.text:000180C1 _ssh2_channel_msg endp
.text:000180C1
.text:000180C1 ; ---------------------------------------------------------------------------
.text:000180C2                 align 4
.text:000180C4 $LN9_4          dd 1                    ; DATA XREF: _ssh2_channel_msg+FFo
.text:000180C8                 dd offset $LN8_4
.text:000180CC $LN8_4          dd 0FFFFFFF8h, 4        ; DATA XREF: .text:000180C8o
.text:000180D4                 dd offset $LN7_1        ; "localid"
.text:000180D8 $LN7_1          db 'localid',0          ; DATA XREF: .text:000180D4o
.text:000180E0                 db 8 dup(0CCh)
.text:000180E8
.text:000180E8 ; =============== S U B R O U T I N E =======================================
.text:000180E8
.text:000180E8 ; Attributes: bp-based frame
.text:000180E8
.text:000180E8 _ssh2_msg_channel_window_adjust proc near
.text:000180E8                                         ; DATA XREF: _do_ssh2_authconn+3B4Bo
.text:000180E8
.text:000180E8 var_4           = dword ptr -4
.text:000180E8 arg_0           = dword ptr  8
.text:000180E8 arg_4           = dword ptr  0Ch
.text:000180E8
.text:000180E8                 push    ebp
.text:000180E9                 mov     ebp, esp
.text:000180EB                 push    ecx
.text:000180EC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000180F3                 mov     eax, [ebp+arg_4]
.text:000180F6                 push    eax
.text:000180F7                 mov     ecx, [ebp+arg_0]
.text:000180FA                 push    ecx
.text:000180FB                 call    _ssh2_channel_msg
.text:00018100                 add     esp, 8
.text:00018103                 mov     [ebp+var_4], eax
.text:00018106                 cmp     [ebp+var_4], 0
.text:0001810A                 jnz     short loc_1810E
.text:0001810C                 jmp     short loc_1816F
.text:0001810E ; ---------------------------------------------------------------------------
.text:0001810E
.text:0001810E loc_1810E:                              ; CODE XREF: _ssh2_msg_channel_window_adjust+22j
.text:0001810E                 mov     edx, [ebp+var_4]
.text:00018111                 cmp     dword ptr [edx+0Ch], 5
.text:00018115                 jnz     short loc_1813C
.text:00018117                 mov     eax, [ebp+arg_4]
.text:0001811A                 mov     ecx, [eax]
.text:0001811C                 push    ecx
.text:0001811D                 mov     edx, [ebp+arg_4]
.text:00018120                 mov     eax, [edx+14h]
.text:00018123                 push    eax
.text:00018124                 mov     ecx, [ebp+arg_4]
.text:00018127                 mov     edx, [ecx+8]
.text:0001812A                 push    edx
.text:0001812B                 mov     eax, [ebp+var_4]
.text:0001812E                 mov     ecx, [eax+4Ch]
.text:00018131                 push    ecx
.text:00018132                 call    _share_got_pkt_from_server
.text:00018137                 add     esp, 10h
.text:0001813A                 jmp     short loc_1816F
.text:0001813C ; ---------------------------------------------------------------------------
.text:0001813C
.text:0001813C loc_1813C:                              ; CODE XREF: _ssh2_msg_channel_window_adjust+2Dj
.text:0001813C                 mov     edx, [ebp+var_4]
.text:0001813F                 mov     eax, [edx+14h]
.text:00018142                 and     eax, 1
.text:00018145                 jnz     short loc_1816F
.text:00018147                 mov     ecx, [ebp+arg_4]
.text:0001814A                 push    ecx
.text:0001814B                 call    _ssh_pkt_getuint32
.text:00018150                 add     esp, 4
.text:00018153                 mov     edx, [ebp+var_4]
.text:00018156                 add     eax, [edx+2Ch]
.text:00018159                 mov     ecx, [ebp+var_4]
.text:0001815C                 mov     [ecx+2Ch], eax
.text:0001815F                 mov     edx, [ebp+var_4]
.text:00018162                 push    edx
.text:00018163                 mov     eax, [ebp+arg_0]
.text:00018166                 push    eax
.text:00018167                 call    _ssh2_try_send_and_unthrottle
.text:0001816C                 add     esp, 8
.text:0001816F
.text:0001816F loc_1816F:                              ; CODE XREF: _ssh2_msg_channel_window_adjust+24j
.text:0001816F                                         ; _ssh2_msg_channel_window_adjust+52j ...
.text:0001816F                 add     esp, 4
.text:00018172                 cmp     ebp, esp
.text:00018174                 call    __RTC_CheckEsp
.text:00018179                 mov     esp, ebp
.text:0001817B                 pop     ebp
.text:0001817C                 retn
.text:0001817C _ssh2_msg_channel_window_adjust endp
.text:0001817C
.text:0001817C ; ---------------------------------------------------------------------------
.text:0001817D                 db 0Bh dup(0CCh)
.text:00018188
.text:00018188 ; =============== S U B R O U T I N E =======================================
.text:00018188
.text:00018188 ; Attributes: bp-based frame
.text:00018188
.text:00018188 _ssh2_msg_channel_data proc near        ; DATA XREF: _do_ssh2_authconn+3DC9o
.text:00018188
.text:00018188 var_50          = dword ptr -50h
.text:00018188 var_4C          = dword ptr -4Ch
.text:00018188 var_48          = dword ptr -48h
.text:00018188 var_44          = dword ptr -44h
.text:00018188 var_3C          = dword ptr -3Ch
.text:00018188 var_30          = dword ptr -30h
.text:00018188 var_28          = dword ptr -28h
.text:00018188 Size            = dword ptr -24h
.text:00018188 var_20          = dword ptr -20h
.text:00018188 var_1C          = dword ptr -1Ch
.text:00018188 var_14          = dword ptr -14h
.text:00018188 Src             = dword ptr -8
.text:00018188 arg_0           = dword ptr  8
.text:00018188 arg_4           = dword ptr  0Ch
.text:00018188
.text:00018188                 push    ebp
.text:00018189                 mov     ebp, esp
.text:0001818B                 sub     esp, 50h
.text:0001818E                 push    edi
.text:0001818F                 lea     edi, [ebp+var_50]
.text:00018192                 mov     ecx, 14h
.text:00018197                 mov     eax, 0CCCCCCCCh
.text:0001819C                 rep stosd
.text:0001819E                 mov     eax, [ebp+arg_4]
.text:000181A1                 push    eax
.text:000181A2                 mov     ecx, [ebp+arg_0]
.text:000181A5                 push    ecx
.text:000181A6                 call    _ssh2_channel_msg
.text:000181AB                 add     esp, 8
.text:000181AE                 mov     [ebp+var_1C], eax
.text:000181B1                 cmp     [ebp+var_1C], 0
.text:000181B5                 jnz     short loc_181BC
.text:000181B7                 jmp     loc_1856A
.text:000181BC ; ---------------------------------------------------------------------------
.text:000181BC
.text:000181BC loc_181BC:                              ; CODE XREF: _ssh2_msg_channel_data+2Dj
.text:000181BC                 mov     edx, [ebp+var_1C]
.text:000181BF                 cmp     dword ptr [edx+0Ch], 5
.text:000181C3                 jnz     short loc_181ED
.text:000181C5                 mov     eax, [ebp+arg_4]
.text:000181C8                 mov     ecx, [eax]
.text:000181CA                 push    ecx
.text:000181CB                 mov     edx, [ebp+arg_4]
.text:000181CE                 mov     eax, [edx+14h]
.text:000181D1                 push    eax
.text:000181D2                 mov     ecx, [ebp+arg_4]
.text:000181D5                 mov     edx, [ecx+8]
.text:000181D8                 push    edx
.text:000181D9                 mov     eax, [ebp+var_1C]
.text:000181DC                 mov     ecx, [eax+4Ch]
.text:000181DF                 push    ecx
.text:000181E0                 call    _share_got_pkt_from_server
.text:000181E5                 add     esp, 10h
.text:000181E8                 jmp     loc_1856A
.text:000181ED ; ---------------------------------------------------------------------------
.text:000181ED
.text:000181ED loc_181ED:                              ; CODE XREF: _ssh2_msg_channel_data+3Bj
.text:000181ED                 mov     edx, [ebp+arg_4]
.text:000181F0                 cmp     dword ptr [edx+8], 5Fh ; '_'
.text:000181F4                 jnz     short loc_1820C
.text:000181F6                 mov     eax, [ebp+arg_4]
.text:000181F9                 push    eax
.text:000181FA                 call    _ssh_pkt_getuint32
.text:000181FF                 add     esp, 4
.text:00018202                 cmp     eax, 1
.text:00018205                 jz      short loc_1820C
.text:00018207                 jmp     loc_1856A
.text:0001820C ; ---------------------------------------------------------------------------
.text:0001820C
.text:0001820C loc_1820C:                              ; CODE XREF: _ssh2_msg_channel_data+6Cj
.text:0001820C                                         ; _ssh2_msg_channel_data+7Dj
.text:0001820C                 lea     ecx, [ebp+var_14]
.text:0001820F                 push    ecx
.text:00018210                 lea     edx, [ebp+Src]
.text:00018213                 push    edx
.text:00018214                 mov     eax, [ebp+arg_4]
.text:00018217                 push    eax
.text:00018218                 call    _ssh_pkt_getstring
.text:0001821D                 add     esp, 0Ch
.text:00018220                 cmp     [ebp+Src], 0
.text:00018224                 jz      loc_1856A
.text:0001822A                 mov     [ebp+var_20], 0
.text:00018231                 mov     ecx, [ebp+var_1C]
.text:00018234                 mov     edx, [ecx+34h]
.text:00018237                 sub     edx, [ebp+var_14]
.text:0001823A                 mov     eax, [ebp+var_1C]
.text:0001823D                 mov     [eax+34h], edx
.text:00018240                 mov     ecx, [ebp+var_1C]
.text:00018243                 mov     edx, [ecx+3Ch]
.text:00018246                 sub     edx, [ebp+var_14]
.text:00018249                 mov     eax, [ebp+var_1C]
.text:0001824C                 mov     [eax+3Ch], edx
.text:0001824F                 mov     ecx, [ebp+var_1C]
.text:00018252                 mov     edx, [ecx+0Ch]
.text:00018255                 mov     [ebp+var_44], edx
.text:00018258                 cmp     [ebp+var_44], 3 ; switch 4 cases
.text:0001825C                 ja      loc_184C9       ; jumptable 00018265 default case
.text:00018262                 mov     eax, [ebp+var_44]
.text:00018265                 jmp     ds:$LN35[eax*4] ; switch jump
.text:0001826C ; ---------------------------------------------------------------------------
.text:0001826C
.text:0001826C $LN14_0:                                ; CODE XREF: _ssh2_msg_channel_data+DDj
.text:0001826C                                         ; DATA XREF: .text:$LN35o
.text:0001826C                 mov     ecx, [ebp+var_14] ; jumptable 00018265 case 0
.text:0001826F                 push    ecx
.text:00018270                 mov     edx, [ebp+Src]
.text:00018273                 push    edx
.text:00018274                 mov     eax, [ebp+arg_4]
.text:00018277                 xor     ecx, ecx
.text:00018279                 cmp     dword ptr [eax+8], 5Fh ; '_'
.text:0001827D                 setz    cl
.text:00018280                 push    ecx
.text:00018281                 mov     edx, [ebp+arg_0]
.text:00018284                 mov     eax, [edx+0E4h]
.text:0001828A                 push    eax
.text:0001828B                 call    _from_backend
.text:00018290                 add     esp, 10h
.text:00018293                 mov     [ebp+var_20], eax
.text:00018296                 jmp     loc_184C9       ; jumptable 00018265 default case
.text:0001829B ; ---------------------------------------------------------------------------
.text:0001829B
.text:0001829B $LN13_2:                                ; CODE XREF: _ssh2_msg_channel_data+DDj
.text:0001829B                                         ; DATA XREF: .text:$LN35o
.text:0001829B                 mov     ecx, [ebp+var_14] ; jumptable 00018265 case 1
.text:0001829E                 push    ecx
.text:0001829F                 mov     edx, [ebp+Src]
.text:000182A2                 push    edx
.text:000182A3                 mov     eax, [ebp+var_1C]
.text:000182A6                 mov     ecx, [eax+4Ch]
.text:000182A9                 push    ecx
.text:000182AA                 call    _x11_send
.text:000182AF                 add     esp, 0Ch
.text:000182B2                 mov     [ebp+var_20], eax
.text:000182B5                 jmp     loc_184C9       ; jumptable 00018265 default case
.text:000182BA ; ---------------------------------------------------------------------------
.text:000182BA
.text:000182BA $LN12_3:                                ; CODE XREF: _ssh2_msg_channel_data+DDj
.text:000182BA                                         ; DATA XREF: .text:$LN35o
.text:000182BA                 mov     edx, [ebp+var_14] ; jumptable 00018265 case 3
.text:000182BD                 push    edx
.text:000182BE                 mov     eax, [ebp+Src]
.text:000182C1                 push    eax
.text:000182C2                 mov     ecx, [ebp+var_1C]
.text:000182C5                 mov     edx, [ecx+4Ch]
.text:000182C8                 push    edx
.text:000182C9                 call    _pfd_send
.text:000182CE                 add     esp, 0Ch
.text:000182D1                 mov     [ebp+var_20], eax
.text:000182D4                 jmp     loc_184C9       ; jumptable 00018265 default case
.text:000182D9 ; ---------------------------------------------------------------------------
.text:000182D9
.text:000182D9 $LN10_5:                                ; CODE XREF: _ssh2_msg_channel_data+DDj
.text:000182D9                                         ; _ssh2_msg_channel_data:loc_184BDj
.text:000182D9                                         ; DATA XREF: ...
.text:000182D9                 cmp     [ebp+var_14], 0 ; jumptable 00018265 case 2
.text:000182DD                 jle     loc_184C2
.text:000182E3                 mov     eax, [ebp+var_1C]
.text:000182E6                 cmp     dword ptr [eax+54h], 4
.text:000182EA                 jnb     short loc_18357
.text:000182EC                 mov     ecx, [ebp+var_1C]
.text:000182EF                 mov     edx, 4
.text:000182F4                 sub     edx, [ecx+54h]
.text:000182F7                 cmp     edx, [ebp+var_14]
.text:000182FA                 jnb     short loc_1830C
.text:000182FC                 mov     eax, [ebp+var_1C]
.text:000182FF                 mov     ecx, 4
.text:00018304                 sub     ecx, [eax+54h]
.text:00018307                 mov     [ebp+var_48], ecx
.text:0001830A                 jmp     short loc_18312
.text:0001830C ; ---------------------------------------------------------------------------
.text:0001830C
.text:0001830C loc_1830C:                              ; CODE XREF: _ssh2_msg_channel_data+172j
.text:0001830C                 mov     edx, [ebp+var_14]
.text:0001830F                 mov     [ebp+var_48], edx
.text:00018312
.text:00018312 loc_18312:                              ; CODE XREF: _ssh2_msg_channel_data+182j
.text:00018312                 mov     eax, [ebp+var_48]
.text:00018315                 mov     [ebp+Size], eax
.text:00018318                 mov     ecx, [ebp+Size]
.text:0001831B                 push    ecx             ; Size
.text:0001831C                 mov     edx, [ebp+Src]
.text:0001831F                 push    edx             ; Src
.text:00018320                 mov     eax, [ebp+var_1C]
.text:00018323                 mov     ecx, [eax+54h]
.text:00018326                 mov     edx, [ebp+var_1C]
.text:00018329                 lea     eax, [edx+ecx+50h]
.text:0001832D                 push    eax             ; Dst
.text:0001832E                 call    _memcpy
.text:00018333                 add     esp, 0Ch
.text:00018336                 mov     ecx, [ebp+Src]
.text:00018339                 add     ecx, [ebp+Size]
.text:0001833C                 mov     [ebp+Src], ecx
.text:0001833F                 mov     edx, [ebp+var_14]
.text:00018342                 sub     edx, [ebp+Size]
.text:00018345                 mov     [ebp+var_14], edx
.text:00018348                 mov     eax, [ebp+var_1C]
.text:0001834B                 mov     ecx, [eax+54h]
.text:0001834E                 add     ecx, [ebp+Size]
.text:00018351                 mov     edx, [ebp+var_1C]
.text:00018354                 mov     [edx+54h], ecx
.text:00018357
.text:00018357 loc_18357:                              ; CODE XREF: _ssh2_msg_channel_data+162j
.text:00018357                 mov     eax, [ebp+var_1C]
.text:0001835A                 cmp     dword ptr [eax+54h], 4
.text:0001835E                 jnz     short loc_183C3
.text:00018360                 mov     ecx, [ebp+var_1C]
.text:00018363                 movzx   edx, byte ptr [ecx+50h]
.text:00018367                 shl     edx, 18h
.text:0001836A                 mov     eax, [ebp+var_1C]
.text:0001836D                 movzx   ecx, byte ptr [eax+51h]
.text:00018371                 shl     ecx, 10h
.text:00018374                 or      edx, ecx
.text:00018376                 mov     eax, [ebp+var_1C]
.text:00018379                 movzx   ecx, byte ptr [eax+52h]
.text:0001837D                 shl     ecx, 8
.text:00018380                 or      edx, ecx
.text:00018382                 mov     eax, [ebp+var_1C]
.text:00018385                 movzx   ecx, byte ptr [eax+53h]
.text:00018389                 or      edx, ecx
.text:0001838B                 add     edx, 4
.text:0001838E                 mov     eax, [ebp+var_1C]
.text:00018391                 mov     [eax+58h], edx
.text:00018394                 push    1
.text:00018396                 mov     ecx, [ebp+var_1C]
.text:00018399                 mov     edx, [ecx+58h]
.text:0001839C                 push    edx
.text:0001839D                 call    _safemalloc
.text:000183A2                 add     esp, 8
.text:000183A5                 mov     ecx, [ebp+var_1C]
.text:000183A8                 mov     [ecx+4Ch], eax
.text:000183AB                 push    4               ; Size
.text:000183AD                 mov     edx, [ebp+var_1C]
.text:000183B0                 add     edx, 50h ; 'P'
.text:000183B3                 push    edx             ; Src
.text:000183B4                 mov     eax, [ebp+var_1C]
.text:000183B7                 mov     ecx, [eax+4Ch]
.text:000183BA                 push    ecx             ; Dst
.text:000183BB                 call    _memcpy
.text:000183C0                 add     esp, 0Ch
.text:000183C3
.text:000183C3 loc_183C3:                              ; CODE XREF: _ssh2_msg_channel_data+1D6j
.text:000183C3                 mov     edx, [ebp+var_1C]
.text:000183C6                 cmp     dword ptr [edx+54h], 4
.text:000183CA                 jb      short loc_1843E
.text:000183CC                 cmp     [ebp+var_14], 0
.text:000183D0                 jle     short loc_1843E
.text:000183D2                 mov     eax, [ebp+var_1C]
.text:000183D5                 mov     ecx, [ebp+var_1C]
.text:000183D8                 mov     edx, [eax+58h]
.text:000183DB                 sub     edx, [ecx+54h]
.text:000183DE                 cmp     edx, [ebp+var_14]
.text:000183E1                 jnb     short loc_183F4
.text:000183E3                 mov     eax, [ebp+var_1C]
.text:000183E6                 mov     ecx, [ebp+var_1C]
.text:000183E9                 mov     edx, [eax+58h]
.text:000183EC                 sub     edx, [ecx+54h]
.text:000183EF                 mov     [ebp+var_4C], edx
.text:000183F2                 jmp     short loc_183FA
.text:000183F4 ; ---------------------------------------------------------------------------
.text:000183F4
.text:000183F4 loc_183F4:                              ; CODE XREF: _ssh2_msg_channel_data+259j
.text:000183F4                 mov     eax, [ebp+var_14]
.text:000183F7                 mov     [ebp+var_4C], eax
.text:000183FA
.text:000183FA loc_183FA:                              ; CODE XREF: _ssh2_msg_channel_data+26Aj
.text:000183FA                 mov     ecx, [ebp+var_4C]
.text:000183FD                 mov     [ebp+var_28], ecx
.text:00018400                 mov     edx, [ebp+var_28]
.text:00018403                 push    edx             ; Size
.text:00018404                 mov     eax, [ebp+Src]
.text:00018407                 push    eax             ; Src
.text:00018408                 mov     ecx, [ebp+var_1C]
.text:0001840B                 mov     edx, [ecx+4Ch]
.text:0001840E                 mov     eax, [ebp+var_1C]
.text:00018411                 add     edx, [eax+54h]
.text:00018414                 push    edx             ; Dst
.text:00018415                 call    _memcpy
.text:0001841A                 add     esp, 0Ch
.text:0001841D                 mov     ecx, [ebp+Src]
.text:00018420                 add     ecx, [ebp+var_28]
.text:00018423                 mov     [ebp+Src], ecx
.text:00018426                 mov     edx, [ebp+var_14]
.text:00018429                 sub     edx, [ebp+var_28]
.text:0001842C                 mov     [ebp+var_14], edx
.text:0001842F                 mov     eax, [ebp+var_1C]
.text:00018432                 mov     ecx, [eax+54h]
.text:00018435                 add     ecx, [ebp+var_28]
.text:00018438                 mov     edx, [ebp+var_1C]
.text:0001843B                 mov     [edx+54h], ecx
.text:0001843E
.text:0001843E loc_1843E:                              ; CODE XREF: _ssh2_msg_channel_data+242j
.text:0001843E                                         ; _ssh2_msg_channel_data+248j
.text:0001843E                 mov     eax, [ebp+var_1C]
.text:00018441                 mov     ecx, [ebp+var_1C]
.text:00018444                 mov     edx, [eax+54h]
.text:00018447                 cmp     edx, [ecx+58h]
.text:0001844A                 jnz     short loc_184BD
.text:0001844C                 mov     eax, [ebp+var_1C]
.text:0001844F                 mov     ecx, [eax+5Ch]
.text:00018452                 add     ecx, 1
.text:00018455                 mov     edx, [ebp+var_1C]
.text:00018458                 mov     [edx+5Ch], ecx
.text:0001845B                 mov     eax, [ebp+var_1C]
.text:0001845E                 push    eax
.text:0001845F                 push    offset _ssh_agentf_callback
.text:00018464                 lea     ecx, [ebp+var_3C]
.text:00018467                 push    ecx
.text:00018468                 lea     edx, [ebp+var_30]
.text:0001846B                 push    edx
.text:0001846C                 mov     eax, [ebp+var_1C]
.text:0001846F                 mov     ecx, [eax+58h]
.text:00018472                 push    ecx
.text:00018473                 mov     edx, [ebp+var_1C]
.text:00018476                 mov     eax, [edx+4Ch]
.text:00018479                 push    eax
.text:0001847A                 call    _agent_query
.text:0001847F                 add     esp, 18h
.text:00018482                 test    eax, eax
.text:00018484                 jz      short loc_1849A
.text:00018486                 mov     ecx, [ebp+var_3C]
.text:00018489                 push    ecx
.text:0001848A                 mov     edx, [ebp+var_30]
.text:0001848D                 push    edx
.text:0001848E                 mov     eax, [ebp+var_1C]
.text:00018491                 push    eax
.text:00018492                 call    _ssh_agentf_callback
.text:00018497                 add     esp, 0Ch
.text:0001849A
.text:0001849A loc_1849A:                              ; CODE XREF: _ssh2_msg_channel_data+2FCj
.text:0001849A                 mov     ecx, [ebp+var_1C]
.text:0001849D                 mov     edx, [ecx+4Ch]
.text:000184A0                 push    edx
.text:000184A1                 call    _safefree
.text:000184A6                 add     esp, 4
.text:000184A9                 mov     eax, [ebp+var_1C]
.text:000184AC                 mov     dword ptr [eax+4Ch], 0
.text:000184B3                 mov     ecx, [ebp+var_1C]
.text:000184B6                 mov     dword ptr [ecx+54h], 0
.text:000184BD
.text:000184BD loc_184BD:                              ; CODE XREF: _ssh2_msg_channel_data+2C2j
.text:000184BD                 jmp     $LN10_5         ; jumptable 00018265 case 2
.text:000184C2 ; ---------------------------------------------------------------------------
.text:000184C2
.text:000184C2 loc_184C2:                              ; CODE XREF: _ssh2_msg_channel_data+155j
.text:000184C2                 mov     [ebp+var_20], 0
.text:000184C9
.text:000184C9 loc_184C9:                              ; CODE XREF: _ssh2_msg_channel_data+D4j
.text:000184C9                                         ; _ssh2_msg_channel_data+10Ej ...
.text:000184C9                 mov     edx, [ebp+var_1C] ; jumptable 00018265 default case
.text:000184CC                 cmp     dword ptr [edx+3Ch], 0
.text:000184D0                 jg      short loc_184F8
.text:000184D2                 mov     eax, [ebp+var_1C]
.text:000184D5                 cmp     dword ptr [eax+48h], 2
.text:000184D9                 jnz     short loc_184F8
.text:000184DB                 mov     ecx, [ebp+var_1C]
.text:000184DE                 cmp     dword ptr [ecx+38h], 40000000h
.text:000184E5                 jge     short loc_184F8
.text:000184E7                 mov     edx, [ebp+var_1C]
.text:000184EA                 mov     eax, [edx+38h]
.text:000184ED                 add     eax, 4000h
.text:000184F2                 mov     ecx, [ebp+var_1C]
.text:000184F5                 mov     [ecx+38h], eax
.text:000184F8
.text:000184F8 loc_184F8:                              ; CODE XREF: _ssh2_msg_channel_data+348j
.text:000184F8                                         ; _ssh2_msg_channel_data+351j ...
.text:000184F8                 mov     edx, [ebp+var_1C]
.text:000184FB                 mov     eax, [ebp+var_20]
.text:000184FE                 cmp     eax, [edx+38h]
.text:00018501                 jge     short loc_18511
.text:00018503                 mov     ecx, [ebp+var_1C]
.text:00018506                 mov     edx, [ecx+38h]
.text:00018509                 sub     edx, [ebp+var_20]
.text:0001850C                 mov     [ebp+var_50], edx
.text:0001850F                 jmp     short loc_18518
.text:00018511 ; ---------------------------------------------------------------------------
.text:00018511
.text:00018511 loc_18511:                              ; CODE XREF: _ssh2_msg_channel_data+379j
.text:00018511                 mov     [ebp+var_50], 0
.text:00018518
.text:00018518 loc_18518:                              ; CODE XREF: _ssh2_msg_channel_data+387j
.text:00018518                 mov     eax, [ebp+var_50]
.text:0001851B                 push    eax
.text:0001851C                 mov     ecx, [ebp+var_1C]
.text:0001851F                 push    ecx
.text:00018520                 call    _ssh2_set_window
.text:00018525                 add     esp, 8
.text:00018528                 mov     edx, [ebp+var_1C]
.text:0001852B                 mov     eax, [ebp+var_20]
.text:0001852E                 cmp     eax, [edx+38h]
.text:00018531                 jg      short loc_18549
.text:00018533                 mov     ecx, [ebp+arg_0]
.text:00018536                 push    ecx
.text:00018537                 call    _ssh_is_simple
.text:0001853C                 add     esp, 4
.text:0001853F                 test    eax, eax
.text:00018541                 jz      short loc_1856A
.text:00018543                 cmp     [ebp+var_20], 0
.text:00018547                 jle     short loc_1856A
.text:00018549
.text:00018549 loc_18549:                              ; CODE XREF: _ssh2_msg_channel_data+3A9j
.text:00018549                 mov     edx, [ebp+var_1C]
.text:0001854C                 cmp     dword ptr [edx+1Ch], 0
.text:00018550                 jnz     short loc_1856A
.text:00018552                 mov     eax, [ebp+var_1C]
.text:00018555                 mov     dword ptr [eax+1Ch], 1
.text:0001855C                 push    1
.text:0001855E                 mov     ecx, [ebp+arg_0]
.text:00018561                 push    ecx
.text:00018562                 call    _ssh_throttle_conn
.text:00018567                 add     esp, 8
.text:0001856A
.text:0001856A loc_1856A:                              ; CODE XREF: _ssh2_msg_channel_data+2Fj
.text:0001856A                                         ; _ssh2_msg_channel_data+60j ...
.text:0001856A                 push    edx
.text:0001856B                 mov     ecx, ebp
.text:0001856D                 push    eax
.text:0001856E                 lea     edx, $LN34
.text:00018574                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00018579                 pop     eax
.text:0001857A                 pop     edx
.text:0001857B                 pop     edi
.text:0001857C                 add     esp, 50h
.text:0001857F                 cmp     ebp, esp
.text:00018581                 call    __RTC_CheckEsp
.text:00018586                 mov     esp, ebp
.text:00018588                 pop     ebp
.text:00018589                 retn
.text:00018589 _ssh2_msg_channel_data endp
.text:00018589
.text:00018589 ; ---------------------------------------------------------------------------
.text:0001858A                 align 4
.text:0001858C $LN34           dd 4                    ; DATA XREF: _ssh2_msg_channel_data+3E6o
.text:00018590                 dd offset $LN33
.text:00018594 $LN33           dd 0FFFFFFF8h, 4        ; DATA XREF: .text:00018590o
.text:0001859C                 dd offset $LN29         ; "data"
.text:000185A0                 dd 0FFFFFFECh, 4
.text:000185A8                 dd offset $LN30         ; "length"
.text:000185AC                 dd 0FFFFFFD0h, 4
.text:000185B4                 dd offset $LN31         ; "reply"
.text:000185B8                 dd 0FFFFFFC4h, 4
.text:000185C0                 dd offset $LN32         ; "replylen"
.text:000185C4 $LN32           db 'replylen',0         ; DATA XREF: .text:000185C0o
.text:000185CD $LN31           db 'reply',0            ; DATA XREF: .text:000185B4o
.text:000185D3 $LN30           db 'length',0           ; DATA XREF: .text:000185A8o
.text:000185DA $LN29           db 'data',0             ; DATA XREF: .text:0001859Co
.text:000185DF                 align 10h
.text:000185E0 $LN35           dd offset $LN14_0       ; DATA XREF: _ssh2_msg_channel_data+DDr
.text:000185E0                 dd offset $LN13_2       ; jump table for switch statement
.text:000185E0                 dd offset $LN10_5
.text:000185E0                 dd offset $LN12_3
.text:000185F0                 db 8 dup(0CCh)
.text:000185F8
.text:000185F8 ; =============== S U B R O U T I N E =======================================
.text:000185F8
.text:000185F8 ; Attributes: bp-based frame
.text:000185F8
.text:000185F8 _ssh_agentf_callback proc near          ; CODE XREF: _ssh2_msg_channel_data+30Ap
.text:000185F8                                         ; _ssh1_msg_channel_data+27Fp
.text:000185F8                                         ; DATA XREF: ...
.text:000185F8
.text:000185F8 var_C           = dword ptr -0Ch
.text:000185F8 var_8           = dword ptr -8
.text:000185F8 var_4           = dword ptr -4
.text:000185F8 arg_0           = dword ptr  8
.text:000185F8 arg_4           = dword ptr  0Ch
.text:000185F8 arg_8           = dword ptr  10h
.text:000185F8
.text:000185F8                 push    ebp
.text:000185F9                 mov     ebp, esp
.text:000185FB                 sub     esp, 0Ch
.text:000185FE                 mov     [ebp+var_C], 0CCCCCCCCh
.text:00018605                 mov     [ebp+var_8], 0CCCCCCCCh
.text:0001860C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00018613                 mov     eax, [ebp+arg_0]
.text:00018616                 mov     [ebp+var_4], eax
.text:00018619                 mov     ecx, [ebp+var_4]
.text:0001861C                 mov     edx, [ecx]
.text:0001861E                 mov     [ebp+var_8], edx
.text:00018621                 mov     eax, [ebp+arg_4]
.text:00018624                 mov     [ebp+var_C], eax
.text:00018627                 mov     ecx, [ebp+var_4]
.text:0001862A                 mov     edx, [ecx+5Ch]
.text:0001862D                 sub     edx, 1
.text:00018630                 mov     eax, [ebp+var_4]
.text:00018633                 mov     [eax+5Ch], edx
.text:00018636                 cmp     [ebp+var_C], 0
.text:0001863A                 jnz     short loc_1864A
.text:0001863C                 mov     [ebp+var_C], offset $SG89962
.text:00018643                 mov     [ebp+arg_8], 5
.text:0001864A
.text:0001864A loc_1864A:                              ; CODE XREF: _ssh_agentf_callback+42j
.text:0001864A                 mov     ecx, [ebp+var_8]
.text:0001864D                 cmp     dword ptr [ecx+16Ch], 2
.text:00018654                 jnz     short loc_18678
.text:00018656                 mov     edx, [ebp+arg_8]
.text:00018659                 push    edx
.text:0001865A                 mov     eax, [ebp+var_C]
.text:0001865D                 push    eax
.text:0001865E                 mov     ecx, [ebp+var_4]
.text:00018661                 push    ecx
.text:00018662                 call    _ssh2_add_channel_data
.text:00018667                 add     esp, 0Ch
.text:0001866A                 mov     edx, [ebp+var_4]
.text:0001866D                 push    edx
.text:0001866E                 call    _ssh2_try_send
.text:00018673                 add     esp, 4
.text:00018676                 jmp     short loc_186A1
.text:00018678 ; ---------------------------------------------------------------------------
.text:00018678
.text:00018678 loc_18678:                              ; CODE XREF: _ssh_agentf_callback+5Cj
.text:00018678                 push    0
.text:0001867A                 mov     eax, [ebp+arg_8]
.text:0001867D                 push    eax
.text:0001867E                 mov     ecx, [ebp+var_C]
.text:00018681                 push    ecx
.text:00018682                 push    3
.text:00018684                 mov     edx, [ebp+arg_8]
.text:00018687                 push    edx
.text:00018688                 push    1
.text:0001868A                 mov     eax, [ebp+var_4]
.text:0001868D                 mov     ecx, [eax+4]
.text:00018690                 push    ecx
.text:00018691                 push    1
.text:00018693                 push    17h
.text:00018695                 mov     edx, [ebp+var_8]
.text:00018698                 push    edx
.text:00018699                 call    _send_packet
.text:0001869E                 add     esp, 28h
.text:000186A1
.text:000186A1 loc_186A1:                              ; CODE XREF: _ssh_agentf_callback+7Ej
.text:000186A1                 cmp     [ebp+arg_4], 0
.text:000186A5                 jz      short loc_186B3
.text:000186A7                 mov     eax, [ebp+arg_4]
.text:000186AA                 push    eax
.text:000186AB                 call    _safefree
.text:000186B0                 add     esp, 4
.text:000186B3
.text:000186B3 loc_186B3:                              ; CODE XREF: _ssh_agentf_callback+ADj
.text:000186B3                 mov     ecx, [ebp+var_4]
.text:000186B6                 cmp     dword ptr [ecx+5Ch], 0
.text:000186BA                 jnz     short loc_186D3
.text:000186BC                 mov     edx, [ebp+var_4]
.text:000186BF                 mov     eax, [edx+14h]
.text:000186C2                 and     eax, 4
.text:000186C5                 jz      short loc_186D3
.text:000186C7                 mov     ecx, [ebp+var_4]
.text:000186CA                 push    ecx
.text:000186CB                 call    _sshfwd_write_eof
.text:000186D0                 add     esp, 4
.text:000186D3
.text:000186D3 loc_186D3:                              ; CODE XREF: _ssh_agentf_callback+C2j
.text:000186D3                                         ; _ssh_agentf_callback+CDj
.text:000186D3                 add     esp, 0Ch
.text:000186D6                 cmp     ebp, esp
.text:000186D8                 call    __RTC_CheckEsp
.text:000186DD                 mov     esp, ebp
.text:000186DF                 pop     ebp
.text:000186E0                 retn
.text:000186E0 _ssh_agentf_callback endp
.text:000186E0
.text:000186E0 ; ---------------------------------------------------------------------------
.text:000186E1                 align 8
.text:000186E8
.text:000186E8 ; =============== S U B R O U T I N E =======================================
.text:000186E8
.text:000186E8 ; Attributes: bp-based frame
.text:000186E8
.text:000186E8 _ssh2_msg_channel_eof proc near         ; DATA XREF: _do_ssh2_authconn+3DE8o
.text:000186E8
.text:000186E8 var_4           = dword ptr -4
.text:000186E8 arg_0           = dword ptr  8
.text:000186E8 arg_4           = dword ptr  0Ch
.text:000186E8
.text:000186E8                 push    ebp
.text:000186E9                 mov     ebp, esp
.text:000186EB                 push    ecx
.text:000186EC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000186F3                 mov     eax, [ebp+arg_4]
.text:000186F6                 push    eax
.text:000186F7                 mov     ecx, [ebp+arg_0]
.text:000186FA                 push    ecx
.text:000186FB                 call    _ssh2_channel_msg
.text:00018700                 add     esp, 8
.text:00018703                 mov     [ebp+var_4], eax
.text:00018706                 cmp     [ebp+var_4], 0
.text:0001870A                 jnz     short loc_1870E
.text:0001870C                 jmp     short loc_18748
.text:0001870E ; ---------------------------------------------------------------------------
.text:0001870E
.text:0001870E loc_1870E:                              ; CODE XREF: _ssh2_msg_channel_eof+22j
.text:0001870E                 mov     edx, [ebp+var_4]
.text:00018711                 cmp     dword ptr [edx+0Ch], 5
.text:00018715                 jnz     short loc_1873C
.text:00018717                 mov     eax, [ebp+arg_4]
.text:0001871A                 mov     ecx, [eax]
.text:0001871C                 push    ecx
.text:0001871D                 mov     edx, [ebp+arg_4]
.text:00018720                 mov     eax, [edx+14h]
.text:00018723                 push    eax
.text:00018724                 mov     ecx, [ebp+arg_4]
.text:00018727                 mov     edx, [ecx+8]
.text:0001872A                 push    edx
.text:0001872B                 mov     eax, [ebp+var_4]
.text:0001872E                 mov     ecx, [eax+4Ch]
.text:00018731                 push    ecx
.text:00018732                 call    _share_got_pkt_from_server
.text:00018737                 add     esp, 10h
.text:0001873A                 jmp     short loc_18748
.text:0001873C ; ---------------------------------------------------------------------------
.text:0001873C
.text:0001873C loc_1873C:                              ; CODE XREF: _ssh2_msg_channel_eof+2Dj
.text:0001873C                 mov     edx, [ebp+var_4]
.text:0001873F                 push    edx
.text:00018740                 call    _ssh2_channel_got_eof
.text:00018745                 add     esp, 4
.text:00018748
.text:00018748 loc_18748:                              ; CODE XREF: _ssh2_msg_channel_eof+24j
.text:00018748                                         ; _ssh2_msg_channel_eof+52j
.text:00018748                 add     esp, 4
.text:0001874B                 cmp     ebp, esp
.text:0001874D                 call    __RTC_CheckEsp
.text:00018752                 mov     esp, ebp
.text:00018754                 pop     ebp
.text:00018755                 retn
.text:00018755 _ssh2_msg_channel_eof endp
.text:00018755
.text:00018755 ; ---------------------------------------------------------------------------
.text:00018756                 align 4
.text:00018758
.text:00018758 ; =============== S U B R O U T I N E =======================================
.text:00018758
.text:00018758 ; Attributes: bp-based frame
.text:00018758
.text:00018758 _ssh2_channel_got_eof proc near         ; CODE XREF: _ssh2_msg_channel_eof+58p
.text:00018758                                         ; _ssh2_msg_channel_close+6Fp
.text:00018758
.text:00018758 var_4           = dword ptr -4
.text:00018758 arg_0           = dword ptr  8
.text:00018758
.text:00018758                 push    ebp
.text:00018759                 mov     ebp, esp
.text:0001875B                 push    ecx
.text:0001875C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00018763                 mov     eax, [ebp+arg_0]
.text:00018766                 mov     ecx, [eax+14h]
.text:00018769                 and     ecx, 4
.text:0001876C                 jz      short loc_18773
.text:0001876E                 jmp     loc_1883D
.text:00018773 ; ---------------------------------------------------------------------------
.text:00018773
.text:00018773 loc_18773:                              ; CODE XREF: _ssh2_channel_got_eof+14j
.text:00018773                 mov     edx, [ebp+arg_0]
.text:00018776                 mov     eax, [edx+14h]
.text:00018779                 or      eax, 4
.text:0001877C                 mov     ecx, [ebp+arg_0]
.text:0001877F                 mov     [ecx+14h], eax
.text:00018782                 mov     edx, [ebp+arg_0]
.text:00018785                 cmp     dword ptr [edx+0Ch], 1
.text:00018789                 jnz     short loc_1879F
.text:0001878B                 mov     eax, [ebp+arg_0]
.text:0001878E                 mov     ecx, [eax+4Ch]
.text:00018791                 push    ecx
.text:00018792                 call    _x11_send_eof
.text:00018797                 add     esp, 4
.text:0001879A                 jmp     loc_18831
.text:0001879F ; ---------------------------------------------------------------------------
.text:0001879F
.text:0001879F loc_1879F:                              ; CODE XREF: _ssh2_channel_got_eof+31j
.text:0001879F                 mov     edx, [ebp+arg_0]
.text:000187A2                 cmp     dword ptr [edx+0Ch], 2
.text:000187A6                 jnz     short loc_187BF
.text:000187A8                 mov     eax, [ebp+arg_0]
.text:000187AB                 cmp     dword ptr [eax+5Ch], 0
.text:000187AF                 jnz     short loc_187BD
.text:000187B1                 mov     ecx, [ebp+arg_0]
.text:000187B4                 push    ecx
.text:000187B5                 call    _sshfwd_write_eof
.text:000187BA                 add     esp, 4
.text:000187BD
.text:000187BD loc_187BD:                              ; CODE XREF: _ssh2_channel_got_eof+57j
.text:000187BD                 jmp     short loc_18831
.text:000187BF ; ---------------------------------------------------------------------------
.text:000187BF
.text:000187BF loc_187BF:                              ; CODE XREF: _ssh2_channel_got_eof+4Ej
.text:000187BF                 mov     edx, [ebp+arg_0]
.text:000187C2                 cmp     dword ptr [edx+0Ch], 3
.text:000187C6                 jnz     short loc_187D9
.text:000187C8                 mov     eax, [ebp+arg_0]
.text:000187CB                 mov     ecx, [eax+4Ch]
.text:000187CE                 push    ecx
.text:000187CF                 call    _pfd_send_eof
.text:000187D4                 add     esp, 4
.text:000187D7                 jmp     short loc_18831
.text:000187D9 ; ---------------------------------------------------------------------------
.text:000187D9
.text:000187D9 loc_187D9:                              ; CODE XREF: _ssh2_channel_got_eof+6Ej
.text:000187D9                 mov     edx, [ebp+arg_0]
.text:000187DC                 cmp     dword ptr [edx+0Ch], 0
.text:000187E0                 jnz     short loc_18831
.text:000187E2                 mov     eax, [ebp+arg_0]
.text:000187E5                 mov     ecx, [eax]
.text:000187E7                 mov     [ebp+var_4], ecx
.text:000187EA                 mov     edx, [ebp+var_4]
.text:000187ED                 cmp     dword ptr [edx+124h], 0
.text:000187F4                 jnz     short loc_18824
.text:000187F6                 mov     eax, [ebp+var_4]
.text:000187F9                 mov     ecx, [eax+0E4h]
.text:000187FF                 push    ecx
.text:00018800                 call    _from_backend_eof
.text:00018805                 add     esp, 4
.text:00018808                 test    eax, eax
.text:0001880A                 jnz     short loc_18818
.text:0001880C                 mov     edx, [ebp+var_4]
.text:0001880F                 cmp     dword ptr [edx+128h], 0
.text:00018816                 jz      short loc_18824
.text:00018818
.text:00018818 loc_18818:                              ; CODE XREF: _ssh2_channel_got_eof+B2j
.text:00018818                 mov     eax, [ebp+arg_0]
.text:0001881B                 push    eax
.text:0001881C                 call    _sshfwd_write_eof
.text:00018821                 add     esp, 4
.text:00018824
.text:00018824 loc_18824:                              ; CODE XREF: _ssh2_channel_got_eof+9Cj
.text:00018824                                         ; _ssh2_channel_got_eof+BEj
.text:00018824                 mov     ecx, [ebp+var_4]
.text:00018827                 mov     dword ptr [ecx+124h], 1
.text:00018831
.text:00018831 loc_18831:                              ; CODE XREF: _ssh2_channel_got_eof+42j
.text:00018831                                         ; _ssh2_channel_got_eof:loc_187BDj ...
.text:00018831                 mov     edx, [ebp+arg_0]
.text:00018834                 push    edx
.text:00018835                 call    _ssh2_channel_check_close
.text:0001883A                 add     esp, 4
.text:0001883D
.text:0001883D loc_1883D:                              ; CODE XREF: _ssh2_channel_got_eof+16j
.text:0001883D                 add     esp, 4
.text:00018840                 cmp     ebp, esp
.text:00018842                 call    __RTC_CheckEsp
.text:00018847                 mov     esp, ebp
.text:00018849                 pop     ebp
.text:0001884A                 retn
.text:0001884A _ssh2_channel_got_eof endp
.text:0001884A
.text:0001884A ; ---------------------------------------------------------------------------
.text:0001884B                 db 0Dh dup(0CCh)
.text:00018858
.text:00018858 ; =============== S U B R O U T I N E =======================================
.text:00018858
.text:00018858 ; Attributes: bp-based frame
.text:00018858
.text:00018858 _ssh2_msg_channel_close proc near       ; DATA XREF: _do_ssh2_authconn+3DF5o
.text:00018858
.text:00018858 var_C           = dword ptr -0Ch
.text:00018858 var_8           = dword ptr -8
.text:00018858 var_4           = dword ptr -4
.text:00018858 arg_0           = dword ptr  8
.text:00018858 arg_4           = dword ptr  0Ch
.text:00018858
.text:00018858                 push    ebp
.text:00018859                 mov     ebp, esp
.text:0001885B                 sub     esp, 0Ch
.text:0001885E                 push    esi
.text:0001885F                 mov     [ebp+var_C], 0CCCCCCCCh
.text:00018866                 mov     [ebp+var_8], 0CCCCCCCCh
.text:0001886D                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00018874                 mov     eax, [ebp+arg_4]
.text:00018877                 push    eax
.text:00018878                 mov     ecx, [ebp+arg_0]
.text:0001887B                 push    ecx
.text:0001887C                 call    _ssh2_channel_msg
.text:00018881                 add     esp, 8
.text:00018884                 mov     [ebp+var_4], eax
.text:00018887                 cmp     [ebp+var_4], 0
.text:0001888B                 jnz     short loc_18892
.text:0001888D                 jmp     loc_189C5
.text:00018892 ; ---------------------------------------------------------------------------
.text:00018892
.text:00018892 loc_18892:                              ; CODE XREF: _ssh2_msg_channel_close+33j
.text:00018892                 mov     edx, [ebp+var_4]
.text:00018895                 cmp     dword ptr [edx+0Ch], 5
.text:00018899                 jnz     short loc_188C3
.text:0001889B                 mov     eax, [ebp+arg_4]
.text:0001889E                 mov     ecx, [eax]
.text:000188A0                 push    ecx
.text:000188A1                 mov     edx, [ebp+arg_4]
.text:000188A4                 mov     eax, [edx+14h]
.text:000188A7                 push    eax
.text:000188A8                 mov     ecx, [ebp+arg_4]
.text:000188AB                 mov     edx, [ecx+8]
.text:000188AE                 push    edx
.text:000188AF                 mov     eax, [ebp+var_4]
.text:000188B2                 mov     ecx, [eax+4Ch]
.text:000188B5                 push    ecx
.text:000188B6                 call    _share_got_pkt_from_server
.text:000188BB                 add     esp, 10h
.text:000188BE                 jmp     loc_189C5
.text:000188C3 ; ---------------------------------------------------------------------------
.text:000188C3
.text:000188C3 loc_188C3:                              ; CODE XREF: _ssh2_msg_channel_close+41j
.text:000188C3                 mov     edx, [ebp+var_4]
.text:000188C6                 push    edx
.text:000188C7                 call    _ssh2_channel_got_eof
.text:000188CC                 add     esp, 4
.text:000188CF                 mov     eax, [ebp+arg_0]
.text:000188D2                 mov     ecx, [eax+50h]
.text:000188D5                 and     ecx, 800h
.text:000188DB                 jnz     short loc_18929
.text:000188DD
.text:000188DD loc_188DD:                              ; CODE XREF: _ssh2_msg_channel_close+CFj
.text:000188DD                 mov     edx, [ebp+var_4]
.text:000188E0                 cmp     dword ptr [edx+40h], 0
.text:000188E4                 jz      short loc_18929
.text:000188E6                 mov     eax, [ebp+var_4]
.text:000188E9                 mov     ecx, [eax+40h]
.text:000188EC                 mov     [ebp+var_8], ecx
.text:000188EF                 mov     esi, esp
.text:000188F1                 mov     edx, [ebp+var_8]
.text:000188F4                 mov     eax, [edx+4]
.text:000188F7                 push    eax
.text:000188F8                 push    0
.text:000188FA                 mov     ecx, [ebp+var_4]
.text:000188FD                 push    ecx
.text:000188FE                 mov     edx, [ebp+var_8]
.text:00018901                 mov     eax, [edx]
.text:00018903                 call    eax
.text:00018905                 add     esp, 0Ch
.text:00018908                 cmp     esi, esp
.text:0001890A                 call    __RTC_CheckEsp
.text:0001890F                 mov     ecx, [ebp+var_4]
.text:00018912                 mov     edx, [ebp+var_8]
.text:00018915                 mov     eax, [edx+8]
.text:00018918                 mov     [ecx+40h], eax
.text:0001891B                 mov     ecx, [ebp+var_8]
.text:0001891E                 push    ecx
.text:0001891F                 call    _safefree
.text:00018924                 add     esp, 4
.text:00018927                 jmp     short loc_188DD
.text:00018929 ; ---------------------------------------------------------------------------
.text:00018929
.text:00018929 loc_18929:                              ; CODE XREF: _ssh2_msg_channel_close+83j
.text:00018929                                         ; _ssh2_msg_channel_close+8Cj
.text:00018929                 mov     edx, [ebp+var_4]
.text:0001892C                 mov     eax, [edx+14h]
.text:0001892F                 and     eax, 1
.text:00018932                 jnz     short loc_1899F
.text:00018934                 mov     ecx, [ebp+var_4]
.text:00018937                 mov     edx, [ecx+0Ch]
.text:0001893A                 mov     [ebp+var_C], edx
.text:0001893D                 cmp     [ebp+var_C], 0
.text:00018941                 jz      short loc_18951
.text:00018943                 cmp     [ebp+var_C], 1
.text:00018947                 jz      short loc_18960
.text:00018949                 cmp     [ebp+var_C], 3
.text:0001894D                 jz      short loc_18973
.text:0001894F                 jmp     short loc_18984
.text:00018951 ; ---------------------------------------------------------------------------
.text:00018951
.text:00018951 loc_18951:                              ; CODE XREF: _ssh2_msg_channel_close+E9j
.text:00018951                 mov     eax, [ebp+arg_0]
.text:00018954                 mov     dword ptr [eax+0D8h], 0
.text:0001895E                 jmp     short loc_18984
.text:00018960 ; ---------------------------------------------------------------------------
.text:00018960
.text:00018960 loc_18960:                              ; CODE XREF: _ssh2_msg_channel_close+EFj
.text:00018960                 push    1
.text:00018962                 mov     ecx, [ebp+var_4]
.text:00018965                 mov     edx, [ecx+4Ch]
.text:00018968                 push    edx
.text:00018969                 call    _x11_override_throttle
.text:0001896E                 add     esp, 8
.text:00018971                 jmp     short loc_18984
.text:00018973 ; ---------------------------------------------------------------------------
.text:00018973
.text:00018973 loc_18973:                              ; CODE XREF: _ssh2_msg_channel_close+F5j
.text:00018973                 push    1
.text:00018975                 mov     eax, [ebp+var_4]
.text:00018978                 mov     ecx, [eax+4Ch]
.text:0001897B                 push    ecx
.text:0001897C                 call    _pfd_override_throttle
.text:00018981                 add     esp, 8
.text:00018984
.text:00018984 loc_18984:                              ; CODE XREF: _ssh2_msg_channel_close+F7j
.text:00018984                                         ; _ssh2_msg_channel_close+106j ...
.text:00018984                 mov     edx, [ebp+var_4]
.text:00018987                 add     edx, 20h ; ' '
.text:0001898A                 push    edx
.text:0001898B                 call    _bufchain_clear
.text:00018990                 add     esp, 4
.text:00018993                 mov     eax, [ebp+var_4]
.text:00018996                 push    eax
.text:00018997                 call    _sshfwd_write_eof
.text:0001899C                 add     esp, 4
.text:0001899F
.text:0001899F loc_1899F:                              ; CODE XREF: _ssh2_msg_channel_close+DAj
.text:0001899F                 mov     ecx, [ebp+var_4]
.text:000189A2                 mov     edx, [ecx+14h]
.text:000189A5                 and     edx, 8
.text:000189A8                 jnz     short loc_189C5
.text:000189AA                 mov     eax, [ebp+var_4]
.text:000189AD                 mov     ecx, [eax+14h]
.text:000189B0                 or      ecx, 8
.text:000189B3                 mov     edx, [ebp+var_4]
.text:000189B6                 mov     [edx+14h], ecx
.text:000189B9                 mov     eax, [ebp+var_4]
.text:000189BC                 push    eax
.text:000189BD                 call    _ssh2_channel_check_close
.text:000189C2                 add     esp, 4
.text:000189C5
.text:000189C5 loc_189C5:                              ; CODE XREF: _ssh2_msg_channel_close+35j
.text:000189C5                                         ; _ssh2_msg_channel_close+66j ...
.text:000189C5                 pop     esi
.text:000189C6                 add     esp, 0Ch
.text:000189C9                 cmp     ebp, esp
.text:000189CB                 call    __RTC_CheckEsp
.text:000189D0                 mov     esp, ebp
.text:000189D2                 pop     ebp
.text:000189D3                 retn
.text:000189D3 _ssh2_msg_channel_close endp
.text:000189D3
.text:000189D3 ; ---------------------------------------------------------------------------
.text:000189D4                 align 8
.text:000189D8
.text:000189D8 ; =============== S U B R O U T I N E =======================================
.text:000189D8
.text:000189D8 ; Attributes: bp-based frame
.text:000189D8
.text:000189D8 _ssh2_msg_channel_open_confirmation proc near
.text:000189D8                                         ; DATA XREF: _do_ssh2_authconn+3E02o
.text:000189D8
.text:000189D8 var_4           = dword ptr -4
.text:000189D8 arg_0           = dword ptr  8
.text:000189D8 arg_4           = dword ptr  0Ch
.text:000189D8
.text:000189D8                 push    ebp
.text:000189D9                 mov     ebp, esp
.text:000189DB                 push    ecx
.text:000189DC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000189E3                 mov     eax, [ebp+arg_4]
.text:000189E6                 push    eax
.text:000189E7                 mov     ecx, [ebp+arg_0]
.text:000189EA                 push    ecx
.text:000189EB                 call    _ssh2_channel_msg
.text:000189F0                 add     esp, 8
.text:000189F3                 mov     [ebp+var_4], eax
.text:000189F6                 cmp     [ebp+var_4], 0
.text:000189FA                 jnz     short loc_18A01
.text:000189FC                 jmp     loc_18B0B
.text:00018A01 ; ---------------------------------------------------------------------------
.text:00018A01
.text:00018A01 loc_18A01:                              ; CODE XREF: _ssh2_msg_channel_open_confirmation+22j
.text:00018A01                 mov     edx, [ebp+var_4]
.text:00018A04                 cmp     dword ptr [edx+0Ch], 5
.text:00018A08                 jnz     short loc_18A32
.text:00018A0A                 mov     eax, [ebp+arg_4]
.text:00018A0D                 mov     ecx, [eax]
.text:00018A0F                 push    ecx
.text:00018A10                 mov     edx, [ebp+arg_4]
.text:00018A13                 mov     eax, [edx+14h]
.text:00018A16                 push    eax
.text:00018A17                 mov     ecx, [ebp+arg_4]
.text:00018A1A                 mov     edx, [ecx+8]
.text:00018A1D                 push    edx
.text:00018A1E                 mov     eax, [ebp+var_4]
.text:00018A21                 mov     ecx, [eax+4Ch]
.text:00018A24                 push    ecx
.text:00018A25                 call    _share_got_pkt_from_server
.text:00018A2A                 add     esp, 10h
.text:00018A2D                 jmp     loc_18B0B
.text:00018A32 ; ---------------------------------------------------------------------------
.text:00018A32
.text:00018A32 loc_18A32:                              ; CODE XREF: _ssh2_msg_channel_open_confirmation+30j
.text:00018A32                 mov     edx, [ebp+var_4]
.text:00018A35                 cmp     dword ptr [edx+10h], 0
.text:00018A39                 jnz     short loc_18A52
.text:00018A3B                 push    1E91h           ; Line
.text:00018A40                 push    offset $SG92470 ; "..\\..\\..\\ssh.c"
.text:00018A45                 push    offset $SG92471 ; "c->halfopen"
.text:00018A4A                 call    __wassert
.text:00018A4F ; ---------------------------------------------------------------------------
.text:00018A4F                 add     esp, 0Ch
.text:00018A52
.text:00018A52 loc_18A52:                              ; CODE XREF: _ssh2_msg_channel_open_confirmation+61j
.text:00018A52                 mov     ecx, [ebp+arg_4]
.text:00018A55                 push    ecx
.text:00018A56                 call    _ssh_pkt_getuint32
.text:00018A5B                 add     esp, 4
.text:00018A5E                 mov     edx, [ebp+var_4]
.text:00018A61                 mov     [edx+4], eax
.text:00018A64                 mov     eax, [ebp+var_4]
.text:00018A67                 mov     dword ptr [eax+10h], 0
.text:00018A6E                 mov     ecx, [ebp+arg_4]
.text:00018A71                 push    ecx
.text:00018A72                 call    _ssh_pkt_getuint32
.text:00018A77                 add     esp, 4
.text:00018A7A                 mov     edx, [ebp+var_4]
.text:00018A7D                 mov     [edx+2Ch], eax
.text:00018A80                 mov     eax, [ebp+arg_4]
.text:00018A83                 push    eax
.text:00018A84                 call    _ssh_pkt_getuint32
.text:00018A89                 add     esp, 4
.text:00018A8C                 mov     ecx, [ebp+var_4]
.text:00018A8F                 mov     [ecx+30h], eax
.text:00018A92                 mov     edx, [ebp+var_4]
.text:00018A95                 cmp     dword ptr [edx+0Ch], 4
.text:00018A99                 jnz     short loc_18ABF
.text:00018A9B                 mov     eax, [ebp+var_4]
.text:00018A9E                 mov     dword ptr [eax+0Ch], 3
.text:00018AA5                 mov     ecx, [ebp+var_4]
.text:00018AA8                 cmp     dword ptr [ecx+4Ch], 0
.text:00018AAC                 jz      short loc_18ABD
.text:00018AAE                 mov     edx, [ebp+var_4]
.text:00018AB1                 mov     eax, [edx+4Ch]
.text:00018AB4                 push    eax
.text:00018AB5                 call    _pfd_confirm
.text:00018ABA                 add     esp, 4
.text:00018ABD
.text:00018ABD loc_18ABD:                              ; CODE XREF: _ssh2_msg_channel_open_confirmation+D4j
.text:00018ABD                 jmp     short loc_18AF6
.text:00018ABF ; ---------------------------------------------------------------------------
.text:00018ABF
.text:00018ABF loc_18ABF:                              ; CODE XREF: _ssh2_msg_channel_open_confirmation+C1j
.text:00018ABF                 mov     ecx, [ebp+var_4]
.text:00018AC2                 cmp     dword ptr [ecx+0Ch], 6
.text:00018AC6                 jnz     short loc_18AD6
.text:00018AC8                 mov     edx, [ebp+var_4]
.text:00018ACB                 push    edx
.text:00018ACC                 call    _ssh2_channel_check_close
.text:00018AD1                 add     esp, 4
.text:00018AD4                 jmp     short loc_18AF6
.text:00018AD6 ; ---------------------------------------------------------------------------
.text:00018AD6
.text:00018AD6 loc_18AD6:                              ; CODE XREF: _ssh2_msg_channel_open_confirmation+EEj
.text:00018AD6                 mov     eax, offset $SG92478 ; "Funny channel type in ssh2_msg_channel_"...
.text:00018ADB                 test    eax, eax
.text:00018ADD                 jz      short loc_18AF6
.text:00018ADF                 push    1EB0h           ; Line
.text:00018AE4                 push    offset $SG92479 ; "..\\..\\..\\ssh.c"
.text:00018AE9                 push    offset $SG92480 ; "!\"Funny channel type in ssh2_msg_chann"...
.text:00018AEE                 call    __wassert
.text:00018AF3 ; ---------------------------------------------------------------------------
.text:00018AF3                 add     esp, 0Ch
.text:00018AF6
.text:00018AF6 loc_18AF6:                              ; CODE XREF: _ssh2_msg_channel_open_confirmation:loc_18ABDj
.text:00018AF6                                         ; _ssh2_msg_channel_open_confirmation+FCj ...
.text:00018AF6                 mov     edx, [ebp+var_4]
.text:00018AF9                 cmp     dword ptr [edx+18h], 0
.text:00018AFD                 jz      short loc_18B0B
.text:00018AFF                 mov     eax, [ebp+var_4]
.text:00018B02                 push    eax
.text:00018B03                 call    _ssh_channel_try_eof
.text:00018B08                 add     esp, 4
.text:00018B0B
.text:00018B0B loc_18B0B:                              ; CODE XREF: _ssh2_msg_channel_open_confirmation+24j
.text:00018B0B                                         ; _ssh2_msg_channel_open_confirmation+55j ...
.text:00018B0B                 add     esp, 4
.text:00018B0E                 cmp     ebp, esp
.text:00018B10                 call    __RTC_CheckEsp
.text:00018B15                 mov     esp, ebp
.text:00018B17                 pop     ebp
.text:00018B18                 retn
.text:00018B18 _ssh2_msg_channel_open_confirmation endp
.text:00018B18
.text:00018B18 ; ---------------------------------------------------------------------------
.text:00018B19                 db 0Fh dup(0CCh)
.text:00018B28
.text:00018B28 ; =============== S U B R O U T I N E =======================================
.text:00018B28
.text:00018B28 ; Attributes: bp-based frame
.text:00018B28
.text:00018B28 _ssh2_msg_channel_open_failure proc near ; DATA XREF: _do_ssh2_authconn+3E0Fo
.text:00018B28
.text:00018B28 var_20          = dword ptr -20h
.text:00018B28 var_1C          = dword ptr -1Ch
.text:00018B28 var_18          = dword ptr -18h
.text:00018B28 var_14          = dword ptr -14h
.text:00018B28 var_10          = dword ptr -10h
.text:00018B28 var_C           = dword ptr -0Ch
.text:00018B28 var_8           = dword ptr -8
.text:00018B28 var_4           = dword ptr -4
.text:00018B28 arg_0           = dword ptr  8
.text:00018B28 arg_4           = dword ptr  0Ch
.text:00018B28
.text:00018B28                 push    ebp
.text:00018B29                 mov     ebp, esp
.text:00018B2B                 sub     esp, 20h
.text:00018B2E                 mov     eax, 0CCCCCCCCh
.text:00018B33                 mov     [ebp+var_20], eax
.text:00018B36                 mov     [ebp+var_1C], eax
.text:00018B39                 mov     [ebp+var_18], eax
.text:00018B3C                 mov     [ebp+var_14], eax
.text:00018B3F                 mov     [ebp+var_10], eax
.text:00018B42                 mov     [ebp+var_C], eax
.text:00018B45                 mov     [ebp+var_8], eax
.text:00018B48                 mov     [ebp+var_4], eax
.text:00018B4B                 mov     eax, [ebp+arg_4]
.text:00018B4E                 push    eax
.text:00018B4F                 mov     ecx, [ebp+arg_0]
.text:00018B52                 push    ecx
.text:00018B53                 call    _ssh2_channel_msg
.text:00018B58                 add     esp, 8
.text:00018B5B                 mov     [ebp+var_20], eax
.text:00018B5E                 cmp     [ebp+var_20], 0
.text:00018B62                 jnz     short loc_18B69
.text:00018B64                 jmp     loc_18C75
.text:00018B69 ; ---------------------------------------------------------------------------
.text:00018B69
.text:00018B69 loc_18B69:                              ; CODE XREF: _ssh2_msg_channel_open_failure+3Aj
.text:00018B69                 mov     edx, [ebp+var_20]
.text:00018B6C                 cmp     dword ptr [edx+0Ch], 5
.text:00018B70                 jnz     short loc_18B9A
.text:00018B72                 mov     eax, [ebp+arg_4]
.text:00018B75                 mov     ecx, [eax]
.text:00018B77                 push    ecx
.text:00018B78                 mov     edx, [ebp+arg_4]
.text:00018B7B                 mov     eax, [edx+14h]
.text:00018B7E                 push    eax
.text:00018B7F                 mov     ecx, [ebp+arg_4]
.text:00018B82                 mov     edx, [ecx+8]
.text:00018B85                 push    edx
.text:00018B86                 mov     eax, [ebp+var_20]
.text:00018B89                 mov     ecx, [eax+4Ch]
.text:00018B8C                 push    ecx
.text:00018B8D                 call    _share_got_pkt_from_server
.text:00018B92                 add     esp, 10h
.text:00018B95                 jmp     loc_18C75
.text:00018B9A ; ---------------------------------------------------------------------------
.text:00018B9A
.text:00018B9A loc_18B9A:                              ; CODE XREF: _ssh2_msg_channel_open_failure+48j
.text:00018B9A                 mov     edx, [ebp+var_20]
.text:00018B9D                 cmp     dword ptr [edx+10h], 0
.text:00018BA1                 jnz     short loc_18BBA
.text:00018BA3                 push    1ECDh           ; Line
.text:00018BA8                 push    offset $SG92502 ; "..\\..\\..\\ssh.c"
.text:00018BAD                 push    offset $SG92503 ; "c->halfopen"
.text:00018BB2                 call    __wassert
.text:00018BB7 ; ---------------------------------------------------------------------------
.text:00018BB7                 add     esp, 0Ch
.text:00018BBA
.text:00018BBA loc_18BBA:                              ; CODE XREF: _ssh2_msg_channel_open_failure+79j
.text:00018BBA                 mov     ecx, [ebp+var_20]
.text:00018BBD                 cmp     dword ptr [ecx+0Ch], 4
.text:00018BC1                 jnz     short loc_18C28
.text:00018BC3                 mov     edx, [ebp+arg_4]
.text:00018BC6                 push    edx
.text:00018BC7                 call    _ssh_pkt_getuint32
.text:00018BCC                 add     esp, 4
.text:00018BCF                 mov     [ebp+var_4], eax
.text:00018BD2                 cmp     [ebp+var_4], 5
.text:00018BD6                 jb      short loc_18BDF
.text:00018BD8                 mov     [ebp+var_4], 0
.text:00018BDF
.text:00018BDF loc_18BDF:                              ; CODE XREF: _ssh2_msg_channel_open_failure+AEj
.text:00018BDF                 lea     eax, [ebp+var_18]
.text:00018BE2                 push    eax
.text:00018BE3                 lea     ecx, [ebp+var_C]
.text:00018BE6                 push    ecx
.text:00018BE7                 mov     edx, [ebp+arg_4]
.text:00018BEA                 push    edx
.text:00018BEB                 call    _ssh_pkt_getstring
.text:00018BF0                 add     esp, 0Ch
.text:00018BF3                 mov     eax, [ebp+var_C]
.text:00018BF6                 push    eax
.text:00018BF7                 mov     ecx, [ebp+var_18]
.text:00018BFA                 push    ecx
.text:00018BFB                 mov     edx, [ebp+var_4]
.text:00018BFE                 mov     eax, ds:?reasons@?1??ssh2_msg_channel_open_failure@@9@9[edx*4] ; `ssh2_msg_channel_open_failure'::`2'::reasons
.text:00018C05                 push    eax
.text:00018C06                 push    offset $SG92506 ; "Forwarded connection refused by server:"...
.text:00018C0B                 mov     ecx, [ebp+arg_0]
.text:00018C0E                 push    ecx
.text:00018C0F                 call    _logeventf
.text:00018C14                 add     esp, 14h
.text:00018C17                 mov     edx, [ebp+var_20]
.text:00018C1A                 mov     eax, [edx+4Ch]
.text:00018C1D                 push    eax
.text:00018C1E                 call    _pfd_close
.text:00018C23                 add     esp, 4
.text:00018C26                 jmp     short loc_18C53
.text:00018C28 ; ---------------------------------------------------------------------------
.text:00018C28
.text:00018C28 loc_18C28:                              ; CODE XREF: _ssh2_msg_channel_open_failure+99j
.text:00018C28                 mov     ecx, [ebp+var_20]
.text:00018C2B                 cmp     dword ptr [ecx+0Ch], 6
.text:00018C2F                 jnz     short loc_18C33
.text:00018C31                 jmp     short loc_18C53
.text:00018C33 ; ---------------------------------------------------------------------------
.text:00018C33
.text:00018C33 loc_18C33:                              ; CODE XREF: _ssh2_msg_channel_open_failure+107j
.text:00018C33                 mov     edx, offset $SG92511 ; "Funny channel type in ssh2_msg_channel_"...
.text:00018C38                 test    edx, edx
.text:00018C3A                 jz      short loc_18C53
.text:00018C3C                 push    1EEAh           ; Line
.text:00018C41                 push    offset $SG92512 ; "..\\..\\..\\ssh.c"
.text:00018C46                 push    offset $SG92513 ; "!\"Funny channel type in ssh2_msg_chann"...
.text:00018C4B                 call    __wassert
.text:00018C50 ; ---------------------------------------------------------------------------
.text:00018C50                 add     esp, 0Ch
.text:00018C53
.text:00018C53 loc_18C53:                              ; CODE XREF: _ssh2_msg_channel_open_failure+FEj
.text:00018C53                                         ; _ssh2_msg_channel_open_failure+109j ...
.text:00018C53                 mov     ecx, [ebp+var_20]
.text:00018C56                 push    ecx
.text:00018C57                 mov     edx, [ebp+arg_0]
.text:00018C5A                 mov     eax, [edx+0F8h]
.text:00018C60                 push    eax
.text:00018C61                 call    _del234
.text:00018C66                 add     esp, 8
.text:00018C69                 mov     ecx, [ebp+var_20]
.text:00018C6C                 push    ecx
.text:00018C6D                 call    _safefree
.text:00018C72                 add     esp, 4
.text:00018C75
.text:00018C75 loc_18C75:                              ; CODE XREF: _ssh2_msg_channel_open_failure+3Cj
.text:00018C75                                         ; _ssh2_msg_channel_open_failure+6Dj
.text:00018C75                 push    edx
.text:00018C76                 mov     ecx, ebp
.text:00018C78                 push    eax
.text:00018C79                 lea     edx, $LN15_0
.text:00018C7F                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00018C84                 pop     eax
.text:00018C85                 pop     edx
.text:00018C86                 add     esp, 20h
.text:00018C89                 cmp     ebp, esp
.text:00018C8B                 call    __RTC_CheckEsp
.text:00018C90                 mov     esp, ebp
.text:00018C92                 pop     ebp
.text:00018C93                 retn
.text:00018C93 _ssh2_msg_channel_open_failure endp
.text:00018C93
.text:00018C93 ; ---------------------------------------------------------------------------
.text:00018C94 $LN15_0         dd 2                    ; DATA XREF: _ssh2_msg_channel_open_failure+151o
.text:00018C98                 dd offset $LN14_1
.text:00018C9C $LN14_1         dd 0FFFFFFF4h, 4        ; DATA XREF: .text:00018C98o
.text:00018CA4                 dd offset $LN12_4       ; "reason_string"
.text:00018CA8                 dd 0FFFFFFE8h, 4
.text:00018CB0                 dd offset $LN13_3       ; "reason_length"
.text:00018CB4 $LN13_3         db 'reason_length',0    ; DATA XREF: .text:00018CB0o
.text:00018CC2 $LN12_4         db 'reason_string',0    ; DATA XREF: .text:00018CA4o
.text:00018CD0                 db 8 dup(0CCh)
.text:00018CD8
.text:00018CD8 ; =============== S U B R O U T I N E =======================================
.text:00018CD8
.text:00018CD8 ; Attributes: bp-based frame
.text:00018CD8
.text:00018CD8 _ssh2_msg_channel_request proc near     ; DATA XREF: _do_ssh2_authconn+3E1Co
.text:00018CD8
.text:00018CD8 var_90          = dword ptr -90h
.text:00018CD8 Size            = dword ptr -88h
.text:00018CD8 var_7C          = dword ptr -7Ch
.text:00018CD8 var_74          = dword ptr -74h
.text:00018CD8 var_70          = dword ptr -70h
.text:00018CD8 var_6C          = dword ptr -6Ch
.text:00018CD8 var_68          = dword ptr -68h
.text:00018CD8 var_64          = dword ptr -64h
.text:00018CD8 var_60          = dword ptr -60h
.text:00018CD8 var_5C          = dword ptr -5Ch
.text:00018CD8 var_58          = dword ptr -58h
.text:00018CD8 var_54          = dword ptr -54h
.text:00018CD8 var_4C          = dword ptr -4Ch
.text:00018CD8 var_40          = dword ptr -40h
.text:00018CD8 var_38          = dword ptr -38h
.text:00018CD8 var_34          = dword ptr -34h
.text:00018CD8 var_30          = dword ptr -30h
.text:00018CD8 var_2C          = dword ptr -2Ch
.text:00018CD8 var_28          = dword ptr -28h
.text:00018CD8 var_24          = dword ptr -24h
.text:00018CD8 var_20          = dword ptr -20h
.text:00018CD8 var_1C          = dword ptr -1Ch
.text:00018CD8 var_14          = dword ptr -14h
.text:00018CD8 Buf1            = dword ptr -8
.text:00018CD8 arg_0           = dword ptr  8
.text:00018CD8 arg_4           = dword ptr  0Ch
.text:00018CD8
.text:00018CD8                 push    ebp
.text:00018CD9                 mov     ebp, esp
.text:00018CDB                 sub     esp, 90h
.text:00018CE1                 push    edi
.text:00018CE2                 lea     edi, [ebp+var_90]
.text:00018CE8                 mov     ecx, 24h ; '$'
.text:00018CED                 mov     eax, 0CCCCCCCCh
.text:00018CF2                 rep stosd
.text:00018CF4                 mov     [ebp+var_20], 64h ; 'd'
.text:00018CFB                 mov     eax, [ebp+arg_4]
.text:00018CFE                 push    eax
.text:00018CFF                 mov     ecx, [ebp+arg_0]
.text:00018D02                 push    ecx
.text:00018D03                 call    _ssh2_channel_msg
.text:00018D08                 add     esp, 8
.text:00018D0B                 mov     [ebp+var_24], eax
.text:00018D0E                 cmp     [ebp+var_24], 0
.text:00018D12                 jnz     short loc_18D19
.text:00018D14                 jmp     loc_1937B
.text:00018D19 ; ---------------------------------------------------------------------------
.text:00018D19
.text:00018D19 loc_18D19:                              ; CODE XREF: _ssh2_msg_channel_request+3Aj
.text:00018D19                 mov     edx, [ebp+var_24]
.text:00018D1C                 cmp     dword ptr [edx+0Ch], 5
.text:00018D20                 jnz     short loc_18D4A
.text:00018D22                 mov     eax, [ebp+arg_4]
.text:00018D25                 mov     ecx, [eax]
.text:00018D27                 push    ecx
.text:00018D28                 mov     edx, [ebp+arg_4]
.text:00018D2B                 mov     eax, [edx+14h]
.text:00018D2E                 push    eax
.text:00018D2F                 mov     ecx, [ebp+arg_4]
.text:00018D32                 mov     edx, [ecx+8]
.text:00018D35                 push    edx
.text:00018D36                 mov     eax, [ebp+var_24]
.text:00018D39                 mov     ecx, [eax+4Ch]
.text:00018D3C                 push    ecx
.text:00018D3D                 call    _share_got_pkt_from_server
.text:00018D42                 add     esp, 10h
.text:00018D45                 jmp     loc_1937B
.text:00018D4A ; ---------------------------------------------------------------------------
.text:00018D4A
.text:00018D4A loc_18D4A:                              ; CODE XREF: _ssh2_msg_channel_request+48j
.text:00018D4A                 lea     edx, [ebp+var_14]
.text:00018D4D                 push    edx
.text:00018D4E                 lea     eax, [ebp+Buf1]
.text:00018D51                 push    eax
.text:00018D52                 mov     ecx, [ebp+arg_4]
.text:00018D55                 push    ecx
.text:00018D56                 call    _ssh_pkt_getstring
.text:00018D5B                 add     esp, 0Ch
.text:00018D5E                 mov     edx, [ebp+arg_4]
.text:00018D61                 push    edx
.text:00018D62                 call    _ssh2_pkt_getbool
.text:00018D67                 add     esp, 4
.text:00018D6A                 mov     [ebp+var_1C], eax
.text:00018D6D                 mov     eax, [ebp+var_24]
.text:00018D70                 mov     ecx, [eax+14h]
.text:00018D73                 and     ecx, 2
.text:00018D76                 jz      short loc_18D7F
.text:00018D78                 mov     [ebp+var_1C], 0
.text:00018D7F
.text:00018D7F loc_18D7F:                              ; CODE XREF: _ssh2_msg_channel_request+9Ej
.text:00018D7F                 mov     edx, [ebp+arg_0]
.text:00018D82                 mov     eax, [ebp+var_24]
.text:00018D85                 cmp     eax, [edx+0FCh]
.text:00018D8B                 jnz     loc_1933C
.text:00018D91                 cmp     [ebp+var_14], 0Bh
.text:00018D95                 jnz     short loc_18DEA
.text:00018D97                 push    0Bh             ; Size
.text:00018D99                 push    offset $SG92531 ; "exit-status"
.text:00018D9E                 mov     ecx, [ebp+Buf1]
.text:00018DA1                 push    ecx             ; Buf1
.text:00018DA2                 call    _memcmp
.text:00018DA7                 add     esp, 0Ch
.text:00018DAA                 test    eax, eax
.text:00018DAC                 jnz     short loc_18DEA
.text:00018DAE                 mov     edx, [ebp+arg_4]
.text:00018DB1                 push    edx
.text:00018DB2                 call    _ssh_pkt_getuint32
.text:00018DB7                 add     esp, 4
.text:00018DBA                 mov     ecx, [ebp+arg_0]
.text:00018DBD                 mov     [ecx+104h], eax
.text:00018DC3                 mov     edx, [ebp+arg_0]
.text:00018DC6                 mov     eax, [edx+104h]
.text:00018DCC                 push    eax
.text:00018DCD                 push    offset $SG92532 ; "Server sent command exit status %d"
.text:00018DD2                 mov     ecx, [ebp+arg_0]
.text:00018DD5                 push    ecx
.text:00018DD6                 call    _logeventf
.text:00018DDB                 add     esp, 0Ch
.text:00018DDE                 mov     [ebp+var_20], 63h ; 'c'
.text:00018DE5                 jmp     loc_1933A
.text:00018DEA ; ---------------------------------------------------------------------------
.text:00018DEA
.text:00018DEA loc_18DEA:                              ; CODE XREF: _ssh2_msg_channel_request+BDj
.text:00018DEA                                         ; _ssh2_msg_channel_request+D4j
.text:00018DEA                 cmp     [ebp+var_14], 0Bh
.text:00018DEE                 jnz     loc_1933A
.text:00018DF4                 push    0Bh             ; Size
.text:00018DF6                 push    offset $SG92535 ; "exit-signal"
.text:00018DFB                 mov     edx, [ebp+Buf1]
.text:00018DFE                 push    edx             ; Buf1
.text:00018DFF                 call    _memcmp
.text:00018E04                 add     esp, 0Ch
.text:00018E07                 test    eax, eax
.text:00018E09                 jnz     loc_1933A
.text:00018E0F                 mov     [ebp+var_2C], 1
.text:00018E16                 mov     [ebp+var_30], 0
.text:00018E1D                 mov     [ebp+var_34], offset $SG92539
.text:00018E24                 mov     [ebp+var_38], offset $SG92541
.text:00018E2B                 mov     [ebp+var_4C], 0
.text:00018E32                 mov     [ebp+var_54], 0
.text:00018E39                 mov     eax, [ebp+arg_4]
.text:00018E3C                 mov     ecx, [eax+14h]
.text:00018E3F                 mov     edx, [ebp+arg_4]
.text:00018E42                 add     ecx, [edx+18h]
.text:00018E45                 mov     [ebp+var_58], ecx
.text:00018E48                 mov     eax, [ebp+arg_4]
.text:00018E4B                 mov     ecx, [ebp+arg_4]
.text:00018E4E                 mov     edx, [eax]
.text:00018E50                 sub     edx, [ecx+18h]
.text:00018E53                 mov     [ebp+var_5C], edx
.text:00018E56                 mov     eax, [ebp+var_58]
.text:00018E59                 movzx   ecx, byte ptr [eax]
.text:00018E5C                 shl     ecx, 18h
.text:00018E5F                 mov     edx, [ebp+var_58]
.text:00018E62                 movzx   eax, byte ptr [edx+1]
.text:00018E66                 shl     eax, 10h
.text:00018E69                 or      ecx, eax
.text:00018E6B                 mov     edx, [ebp+var_58]
.text:00018E6E                 movzx   eax, byte ptr [edx+2]
.text:00018E72                 shl     eax, 8
.text:00018E75                 or      ecx, eax
.text:00018E77                 mov     edx, [ebp+var_58]
.text:00018E7A                 movzx   eax, byte ptr [edx+3]
.text:00018E7E                 or      ecx, eax
.text:00018E80                 mov     [ebp+var_60], ecx
.text:00018E83                 jnz     short loc_18E91
.text:00018E85                 mov     [ebp+var_30], 0
.text:00018E8C                 jmp     loc_190A1
.text:00018E91 ; ---------------------------------------------------------------------------
.text:00018E91
.text:00018E91 loc_18E91:                              ; CODE XREF: _ssh2_msg_channel_request+1ABj
.text:00018E91                 mov     [ebp+var_64], 0
.text:00018E98                 mov     [ebp+var_68], 0
.text:00018E9F
.text:00018E9F loc_18E9F:                              ; CODE XREF: _ssh2_msg_channel_request+2A7j
.text:00018E9F                 push    5
.text:00018EA1                 call    _toint
.text:00018EA6                 add     esp, 4
.text:00018EA9                 mov     [ebp+var_6C], eax
.text:00018EAC                 cmp     [ebp+var_6C], 0
.text:00018EB0                 jl      loc_18F7D
.text:00018EB6                 mov     ecx, [ebp+var_6C]
.text:00018EB9                 add     ecx, 4
.text:00018EBC                 cmp     ecx, [ebp+var_5C]
.text:00018EBF                 jg      loc_18F7D
.text:00018EC5                 mov     edx, [ebp+var_58]
.text:00018EC8                 add     edx, [ebp+var_6C]
.text:00018ECB                 movzx   eax, byte ptr [edx]
.text:00018ECE                 shl     eax, 18h
.text:00018ED1                 mov     ecx, [ebp+var_58]
.text:00018ED4                 add     ecx, [ebp+var_6C]
.text:00018ED7                 movzx   edx, byte ptr [ecx+1]
.text:00018EDB                 shl     edx, 10h
.text:00018EDE                 or      eax, edx
.text:00018EE0                 mov     ecx, [ebp+var_58]
.text:00018EE3                 add     ecx, [ebp+var_6C]
.text:00018EE6                 movzx   edx, byte ptr [ecx+2]
.text:00018EEA                 shl     edx, 8
.text:00018EED                 or      eax, edx
.text:00018EEF                 mov     ecx, [ebp+var_58]
.text:00018EF2                 add     ecx, [ebp+var_6C]
.text:00018EF5                 movzx   edx, byte ptr [ecx+3]
.text:00018EF9                 or      eax, edx
.text:00018EFB                 mov     ecx, [ebp+var_6C]
.text:00018EFE                 lea     edx, [ecx+eax+4]
.text:00018F02                 push    edx
.text:00018F03                 call    _toint
.text:00018F08                 add     esp, 4
.text:00018F0B                 mov     [ebp+var_6C], eax
.text:00018F0E                 cmp     [ebp+var_6C], 0
.text:00018F12                 jl      short loc_18F7D
.text:00018F14                 mov     eax, [ebp+var_6C]
.text:00018F17                 add     eax, 4
.text:00018F1A                 cmp     eax, [ebp+var_5C]
.text:00018F1D                 jg      short loc_18F7D
.text:00018F1F                 mov     ecx, [ebp+var_58]
.text:00018F22                 add     ecx, [ebp+var_6C]
.text:00018F25                 movzx   edx, byte ptr [ecx]
.text:00018F28                 shl     edx, 18h
.text:00018F2B                 mov     eax, [ebp+var_58]
.text:00018F2E                 add     eax, [ebp+var_6C]
.text:00018F31                 movzx   ecx, byte ptr [eax+1]
.text:00018F35                 shl     ecx, 10h
.text:00018F38                 or      edx, ecx
.text:00018F3A                 mov     eax, [ebp+var_58]
.text:00018F3D                 add     eax, [ebp+var_6C]
.text:00018F40                 movzx   ecx, byte ptr [eax+2]
.text:00018F44                 shl     ecx, 8
.text:00018F47                 or      edx, ecx
.text:00018F49                 mov     eax, [ebp+var_58]
.text:00018F4C                 add     eax, [ebp+var_6C]
.text:00018F4F                 movzx   ecx, byte ptr [eax+3]
.text:00018F53                 or      edx, ecx
.text:00018F55                 mov     eax, [ebp+var_6C]
.text:00018F58                 lea     ecx, [eax+edx+4]
.text:00018F5C                 push    ecx
.text:00018F5D                 call    _toint
.text:00018F62                 add     esp, 4
.text:00018F65                 mov     [ebp+var_6C], eax
.text:00018F68                 cmp     [ebp+var_6C], 0
.text:00018F6C                 jz      short loc_18F7D
.text:00018F6E                 mov     edx, [ebp+var_6C]
.text:00018F71                 cmp     edx, [ebp+var_5C]
.text:00018F74                 jnz     short loc_18F7D
.text:00018F76                 mov     [ebp+var_64], 1
.text:00018F7D
.text:00018F7D loc_18F7D:                              ; CODE XREF: _ssh2_msg_channel_request+1D8j
.text:00018F7D                                         ; _ssh2_msg_channel_request+1E7j ...
.text:00018F7D                 xor     eax, eax
.text:00018F7F                 jnz     loc_18E9F
.text:00018F85
.text:00018F85 loc_18F85:                              ; CODE XREF: _ssh2_msg_channel_request+392j
.text:00018F85                 mov     ecx, [ebp+var_60]
.text:00018F88                 add     ecx, 5
.text:00018F8B                 push    ecx
.text:00018F8C                 call    _toint
.text:00018F91                 add     esp, 4
.text:00018F94                 mov     [ebp+var_70], eax
.text:00018F97                 cmp     [ebp+var_70], 0
.text:00018F9B                 jl      loc_19068
.text:00018FA1                 mov     edx, [ebp+var_70]
.text:00018FA4                 add     edx, 4
.text:00018FA7                 cmp     edx, [ebp+var_5C]
.text:00018FAA                 jg      loc_19068
.text:00018FB0                 mov     eax, [ebp+var_58]
.text:00018FB3                 add     eax, [ebp+var_70]
.text:00018FB6                 movzx   ecx, byte ptr [eax]
.text:00018FB9                 shl     ecx, 18h
.text:00018FBC                 mov     edx, [ebp+var_58]
.text:00018FBF                 add     edx, [ebp+var_70]
.text:00018FC2                 movzx   eax, byte ptr [edx+1]
.text:00018FC6                 shl     eax, 10h
.text:00018FC9                 or      ecx, eax
.text:00018FCB                 mov     edx, [ebp+var_58]
.text:00018FCE                 add     edx, [ebp+var_70]
.text:00018FD1                 movzx   eax, byte ptr [edx+2]
.text:00018FD5                 shl     eax, 8
.text:00018FD8                 or      ecx, eax
.text:00018FDA                 mov     edx, [ebp+var_58]
.text:00018FDD                 add     edx, [ebp+var_70]
.text:00018FE0                 movzx   eax, byte ptr [edx+3]
.text:00018FE4                 or      ecx, eax
.text:00018FE6                 mov     edx, [ebp+var_70]
.text:00018FE9                 lea     eax, [edx+ecx+4]
.text:00018FED                 push    eax
.text:00018FEE                 call    _toint
.text:00018FF3                 add     esp, 4
.text:00018FF6                 mov     [ebp+var_70], eax
.text:00018FF9                 cmp     [ebp+var_70], 0
.text:00018FFD                 jl      short loc_19068
.text:00018FFF                 mov     ecx, [ebp+var_70]
.text:00019002                 add     ecx, 4
.text:00019005                 cmp     ecx, [ebp+var_5C]
.text:00019008                 jg      short loc_19068
.text:0001900A                 mov     edx, [ebp+var_58]
.text:0001900D                 add     edx, [ebp+var_70]
.text:00019010                 movzx   eax, byte ptr [edx]
.text:00019013                 shl     eax, 18h
.text:00019016                 mov     ecx, [ebp+var_58]
.text:00019019                 add     ecx, [ebp+var_70]
.text:0001901C                 movzx   edx, byte ptr [ecx+1]
.text:00019020                 shl     edx, 10h
.text:00019023                 or      eax, edx
.text:00019025                 mov     ecx, [ebp+var_58]
.text:00019028                 add     ecx, [ebp+var_70]
.text:0001902B                 movzx   edx, byte ptr [ecx+2]
.text:0001902F                 shl     edx, 8
.text:00019032                 or      eax, edx
.text:00019034                 mov     ecx, [ebp+var_58]
.text:00019037                 add     ecx, [ebp+var_70]
.text:0001903A                 movzx   edx, byte ptr [ecx+3]
.text:0001903E                 or      eax, edx
.text:00019040                 mov     ecx, [ebp+var_70]
.text:00019043                 lea     edx, [ecx+eax+4]
.text:00019047                 push    edx
.text:00019048                 call    _toint
.text:0001904D                 add     esp, 4
.text:00019050                 mov     [ebp+var_70], eax
.text:00019053                 cmp     [ebp+var_70], 0
.text:00019057                 jz      short loc_19068
.text:00019059                 mov     eax, [ebp+var_70]
.text:0001905C                 cmp     eax, [ebp+var_5C]
.text:0001905F                 jnz     short loc_19068
.text:00019061                 mov     [ebp+var_68], 1
.text:00019068
.text:00019068 loc_19068:                              ; CODE XREF: _ssh2_msg_channel_request+2C3j
.text:00019068                                         ; _ssh2_msg_channel_request+2D2j ...
.text:00019068                 xor     ecx, ecx
.text:0001906A                 jnz     loc_18F85
.text:00019070                 cmp     [ebp+var_64], 0
.text:00019074                 jz      short loc_19085
.text:00019076                 cmp     [ebp+var_68], 0
.text:0001907A                 jnz     short loc_19085
.text:0001907C                 mov     [ebp+var_30], 1
.text:00019083                 jmp     short loc_190A1
.text:00019085 ; ---------------------------------------------------------------------------
.text:00019085
.text:00019085 loc_19085:                              ; CODE XREF: _ssh2_msg_channel_request+39Cj
.text:00019085                                         ; _ssh2_msg_channel_request+3A2j
.text:00019085                 cmp     [ebp+var_64], 0
.text:00019089                 jnz     short loc_1909A
.text:0001908B                 cmp     [ebp+var_68], 0
.text:0001908F                 jz      short loc_1909A
.text:00019091                 mov     [ebp+var_30], 0
.text:00019098                 jmp     short loc_190A1
.text:0001909A ; ---------------------------------------------------------------------------
.text:0001909A
.text:0001909A loc_1909A:                              ; CODE XREF: _ssh2_msg_channel_request+3B1j
.text:0001909A                                         ; _ssh2_msg_channel_request+3B7j
.text:0001909A                 mov     [ebp+var_2C], 0
.text:000190A1
.text:000190A1 loc_190A1:                              ; CODE XREF: _ssh2_msg_channel_request+1B4j
.text:000190A1                                         ; _ssh2_msg_channel_request+3ABj ...
.text:000190A1                 mov     edx, [ebp+arg_0]
.text:000190A4                 mov     dword ptr [edx+104h], 80h ; 'Ç'
.text:000190AE                 cmp     [ebp+var_2C], 0
.text:000190B2                 jz      loc_192CB
.text:000190B8                 cmp     [ebp+var_30], 0
.text:000190BC                 jz      short loc_190F8
.text:000190BE                 mov     eax, [ebp+arg_4]
.text:000190C1                 push    eax
.text:000190C2                 call    _ssh_pkt_getuint32
.text:000190C7                 add     esp, 4
.text:000190CA                 mov     [ebp+var_74], eax
.text:000190CD                 mov     ecx, [ebp+var_74]
.text:000190D0                 push    ecx
.text:000190D1                 push    offset $SG92611 ; " %d"
.text:000190D6                 call    _dupprintf
.text:000190DB                 add     esp, 8
.text:000190DE                 mov     [ebp+var_34], eax
.text:000190E1                 mov     edx, [ebp+var_74]
.text:000190E4                 add     edx, 80h ; 'Ç'
.text:000190EA                 mov     eax, [ebp+arg_0]
.text:000190ED                 mov     [eax+104h], edx
.text:000190F3                 jmp     loc_1928A
.text:000190F8 ; ---------------------------------------------------------------------------
.text:000190F8
.text:000190F8 loc_190F8:                              ; CODE XREF: _ssh2_msg_channel_request+3E4j
.text:000190F8                 lea     ecx, [ebp+Size]
.text:000190FE                 push    ecx
.text:000190FF                 lea     edx, [ebp+var_7C]
.text:00019102                 push    edx
.text:00019103                 mov     eax, [ebp+arg_4]
.text:00019106                 push    eax
.text:00019107                 call    _ssh_pkt_getstring
.text:0001910C                 add     esp, 0Ch
.text:0001910F                 cmp     [ebp+Size], 0
.text:00019116                 jz      short loc_19133
.text:00019118                 mov     ecx, [ebp+var_7C]
.text:0001911B                 push    ecx
.text:0001911C                 mov     edx, [ebp+Size]
.text:00019122                 push    edx
.text:00019123                 push    offset $SG92616 ; " \"%.*s\""
.text:00019128                 call    _dupprintf
.text:0001912D                 add     esp, 0Ch
.text:00019130                 mov     [ebp+var_34], eax
.text:00019133
.text:00019133 loc_19133:                              ; CODE XREF: _ssh2_msg_channel_request+43Ej
.text:00019133                 xor     eax, eax
.text:00019135                 jz      short loc_1913C
.text:00019137                 jmp     loc_1928A
.text:0001913C ; ---------------------------------------------------------------------------
.text:0001913C
.text:0001913C loc_1913C:                              ; CODE XREF: _ssh2_msg_channel_request+45Dj
.text:0001913C                 cmp     [ebp+Size], 4
.text:00019143                 jnz     short loc_19173
.text:00019145                 mov     ecx, [ebp+Size]
.text:0001914B                 push    ecx             ; Size
.text:0001914C                 push    offset $SG92620 ; "ABRT"
.text:00019151                 mov     edx, [ebp+var_7C]
.text:00019154                 push    edx             ; Buf1
.text:00019155                 call    _memcmp
.text:0001915A                 add     esp, 0Ch
.text:0001915D                 test    eax, eax
.text:0001915F                 jnz     short loc_19173
.text:00019161                 mov     eax, [ebp+arg_0]
.text:00019164                 mov     dword ptr [eax+104h], 96h ; 'û'
.text:0001916E                 jmp     loc_1928A
.text:00019173 ; ---------------------------------------------------------------------------
.text:00019173
.text:00019173 loc_19173:                              ; CODE XREF: _ssh2_msg_channel_request+46Bj
.text:00019173                                         ; _ssh2_msg_channel_request+487j
.text:00019173                 cmp     [ebp+Size], 3
.text:0001917A                 jnz     short loc_191AA
.text:0001917C                 mov     ecx, [ebp+Size]
.text:00019182                 push    ecx             ; Size
.text:00019183                 push    offset $SG92623 ; "FPE"
.text:00019188                 mov     edx, [ebp+var_7C]
.text:0001918B                 push    edx             ; Buf1
.text:0001918C                 call    _memcmp
.text:00019191                 add     esp, 0Ch
.text:00019194                 test    eax, eax
.text:00019196                 jnz     short loc_191AA
.text:00019198                 mov     eax, [ebp+arg_0]
.text:0001919B                 mov     dword ptr [eax+104h], 88h ; 'ê'
.text:000191A5                 jmp     loc_1928A
.text:000191AA ; ---------------------------------------------------------------------------
.text:000191AA
.text:000191AA loc_191AA:                              ; CODE XREF: _ssh2_msg_channel_request+4A2j
.text:000191AA                                         ; _ssh2_msg_channel_request+4BEj
.text:000191AA                 cmp     [ebp+Size], 3
.text:000191B1                 jnz     short loc_191E1
.text:000191B3                 mov     ecx, [ebp+Size]
.text:000191B9                 push    ecx             ; Size
.text:000191BA                 push    offset $SG92626 ; "ILL"
.text:000191BF                 mov     edx, [ebp+var_7C]
.text:000191C2                 push    edx             ; Buf1
.text:000191C3                 call    _memcmp
.text:000191C8                 add     esp, 0Ch
.text:000191CB                 test    eax, eax
.text:000191CD                 jnz     short loc_191E1
.text:000191CF                 mov     eax, [ebp+arg_0]
.text:000191D2                 mov     dword ptr [eax+104h], 84h ; 'ä'
.text:000191DC                 jmp     loc_1928A
.text:000191E1 ; ---------------------------------------------------------------------------
.text:000191E1
.text:000191E1 loc_191E1:                              ; CODE XREF: _ssh2_msg_channel_request+4D9j
.text:000191E1                                         ; _ssh2_msg_channel_request+4F5j
.text:000191E1                 cmp     [ebp+Size], 3
.text:000191E8                 jnz     short loc_19215
.text:000191EA                 mov     ecx, [ebp+Size]
.text:000191F0                 push    ecx             ; Size
.text:000191F1                 push    offset $SG92629 ; "INT"
.text:000191F6                 mov     edx, [ebp+var_7C]
.text:000191F9                 push    edx             ; Buf1
.text:000191FA                 call    _memcmp
.text:000191FF                 add     esp, 0Ch
.text:00019202                 test    eax, eax
.text:00019204                 jnz     short loc_19215
.text:00019206                 mov     eax, [ebp+arg_0]
.text:00019209                 mov     dword ptr [eax+104h], 82h ; 'é'
.text:00019213                 jmp     short loc_1928A
.text:00019215 ; ---------------------------------------------------------------------------
.text:00019215
.text:00019215 loc_19215:                              ; CODE XREF: _ssh2_msg_channel_request+510j
.text:00019215                                         ; _ssh2_msg_channel_request+52Cj
.text:00019215                 cmp     [ebp+Size], 4
.text:0001921C                 jnz     short loc_19249
.text:0001921E                 mov     ecx, [ebp+Size]
.text:00019224                 push    ecx             ; Size
.text:00019225                 push    offset $SG92632 ; "SEGV"
.text:0001922A                 mov     edx, [ebp+var_7C]
.text:0001922D                 push    edx             ; Buf1
.text:0001922E                 call    _memcmp
.text:00019233                 add     esp, 0Ch
.text:00019236                 test    eax, eax
.text:00019238                 jnz     short loc_19249
.text:0001923A                 mov     eax, [ebp+arg_0]
.text:0001923D                 mov     dword ptr [eax+104h], 8Bh ; 'ï'
.text:00019247                 jmp     short loc_1928A
.text:00019249 ; ---------------------------------------------------------------------------
.text:00019249
.text:00019249 loc_19249:                              ; CODE XREF: _ssh2_msg_channel_request+544j
.text:00019249                                         ; _ssh2_msg_channel_request+560j
.text:00019249                 cmp     [ebp+Size], 4
.text:00019250                 jnz     short loc_1927D
.text:00019252                 mov     ecx, [ebp+Size]
.text:00019258                 push    ecx             ; Size
.text:00019259                 push    offset $SG92635 ; "TERM"
.text:0001925E                 mov     edx, [ebp+var_7C]
.text:00019261                 push    edx             ; Buf1
.text:00019262                 call    _memcmp
.text:00019267                 add     esp, 0Ch
.text:0001926A                 test    eax, eax
.text:0001926C                 jnz     short loc_1927D
.text:0001926E                 mov     eax, [ebp+arg_0]
.text:00019271                 mov     dword ptr [eax+104h], 8Fh ; 'Å'
.text:0001927B                 jmp     short loc_1928A
.text:0001927D ; ---------------------------------------------------------------------------
.text:0001927D
.text:0001927D loc_1927D:                              ; CODE XREF: _ssh2_msg_channel_request+578j
.text:0001927D                                         ; _ssh2_msg_channel_request+594j
.text:0001927D                 mov     ecx, [ebp+arg_0]
.text:00019280                 mov     dword ptr [ecx+104h], 80h ; 'Ç'
.text:0001928A
.text:0001928A loc_1928A:                              ; CODE XREF: _ssh2_msg_channel_request+41Bj
.text:0001928A                                         ; _ssh2_msg_channel_request+45Fj ...
.text:0001928A                 mov     edx, [ebp+arg_4]
.text:0001928D                 push    edx
.text:0001928E                 call    _ssh2_pkt_getbool
.text:00019293                 add     esp, 4
.text:00019296                 mov     [ebp+var_54], eax
.text:00019299                 lea     eax, [ebp+var_4C]
.text:0001929C                 push    eax
.text:0001929D                 lea     ecx, [ebp+var_40]
.text:000192A0                 push    ecx
.text:000192A1                 mov     edx, [ebp+arg_4]
.text:000192A4                 push    edx
.text:000192A5                 call    _ssh_pkt_getstring
.text:000192AA                 add     esp, 0Ch
.text:000192AD                 cmp     [ebp+var_4C], 0
.text:000192B1                 jz      short loc_192CB
.text:000192B3                 mov     eax, [ebp+var_40]
.text:000192B6                 push    eax
.text:000192B7                 mov     ecx, [ebp+var_4C]
.text:000192BA                 push    ecx
.text:000192BB                 push    offset $SG92638 ; " (\"%.*s\")"
.text:000192C0                 call    _dupprintf
.text:000192C5                 add     esp, 0Ch
.text:000192C8                 mov     [ebp+var_38], eax
.text:000192CB
.text:000192CB loc_192CB:                              ; CODE XREF: _ssh2_msg_channel_request+3DAj
.text:000192CB                                         ; _ssh2_msg_channel_request+5D9j
.text:000192CB                 cmp     [ebp+var_54], 0
.text:000192CF                 jz      short loc_192DD
.text:000192D1                 mov     [ebp+var_90], offset $SG92639 ; " (core dumped)"
.text:000192DB                 jmp     short loc_192E7
.text:000192DD ; ---------------------------------------------------------------------------
.text:000192DD
.text:000192DD loc_192DD:                              ; CODE XREF: _ssh2_msg_channel_request+5F7j
.text:000192DD                 mov     [ebp+var_90], offset $SG92640
.text:000192E7
.text:000192E7 loc_192E7:                              ; CODE XREF: _ssh2_msg_channel_request+603j
.text:000192E7                 mov     edx, [ebp+var_38]
.text:000192EA                 push    edx
.text:000192EB                 mov     eax, [ebp+var_90]
.text:000192F1                 push    eax
.text:000192F2                 mov     ecx, [ebp+var_34]
.text:000192F5                 push    ecx
.text:000192F6                 push    offset $SG92641 ; "Server exited on signal%s%s%s"
.text:000192FB                 mov     edx, [ebp+arg_0]
.text:000192FE                 push    edx
.text:000192FF                 call    _logeventf
.text:00019304                 add     esp, 14h
.text:00019307                 mov     eax, [ebp+var_34]
.text:0001930A                 movsx   ecx, byte ptr [eax]
.text:0001930D                 test    ecx, ecx
.text:0001930F                 jz      short loc_1931D
.text:00019311                 mov     edx, [ebp+var_34]
.text:00019314                 push    edx
.text:00019315                 call    _safefree
.text:0001931A                 add     esp, 4
.text:0001931D
.text:0001931D loc_1931D:                              ; CODE XREF: _ssh2_msg_channel_request+637j
.text:0001931D                 mov     eax, [ebp+var_38]
.text:00019320                 movsx   ecx, byte ptr [eax]
.text:00019323                 test    ecx, ecx
.text:00019325                 jz      short loc_19333
.text:00019327                 mov     edx, [ebp+var_38]
.text:0001932A                 push    edx
.text:0001932B                 call    _safefree
.text:00019330                 add     esp, 4
.text:00019333
.text:00019333 loc_19333:                              ; CODE XREF: _ssh2_msg_channel_request+64Dj
.text:00019333                 mov     [ebp+var_20], 63h ; 'c'
.text:0001933A
.text:0001933A loc_1933A:                              ; CODE XREF: _ssh2_msg_channel_request+10Dj
.text:0001933A                                         ; _ssh2_msg_channel_request+116j ...
.text:0001933A                 jmp     short loc_19343
.text:0001933C ; ---------------------------------------------------------------------------
.text:0001933C
.text:0001933C loc_1933C:                              ; CODE XREF: _ssh2_msg_channel_request+B3j
.text:0001933C                 mov     [ebp+var_20], 64h ; 'd'
.text:00019343
.text:00019343 loc_19343:                              ; CODE XREF: _ssh2_msg_channel_request:loc_1933Aj
.text:00019343                 cmp     [ebp+var_1C], 0
.text:00019347                 jz      short loc_1937B
.text:00019349                 mov     eax, [ebp+var_20]
.text:0001934C                 push    eax
.text:0001934D                 call    _ssh2_pkt_init
.text:00019352                 add     esp, 4
.text:00019355                 mov     [ebp+var_28], eax
.text:00019358                 mov     ecx, [ebp+var_24]
.text:0001935B                 mov     edx, [ecx+4]
.text:0001935E                 push    edx
.text:0001935F                 mov     eax, [ebp+var_28]
.text:00019362                 push    eax
.text:00019363                 call    _ssh_pkt_adduint32
.text:00019368                 add     esp, 8
.text:0001936B                 mov     ecx, [ebp+var_28]
.text:0001936E                 push    ecx
.text:0001936F                 mov     edx, [ebp+arg_0]
.text:00019372                 push    edx
.text:00019373                 call    _ssh2_pkt_send
.text:00019378                 add     esp, 8
.text:0001937B
.text:0001937B loc_1937B:                              ; CODE XREF: _ssh2_msg_channel_request+3Cj
.text:0001937B                                         ; _ssh2_msg_channel_request+6Dj ...
.text:0001937B                 push    edx
.text:0001937C                 mov     ecx, ebp
.text:0001937E                 push    eax
.text:0001937F                 lea     edx, $LN58
.text:00019385                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0001938A                 pop     eax
.text:0001938B                 pop     edx
.text:0001938C                 pop     edi
.text:0001938D                 add     esp, 90h
.text:00019393                 cmp     ebp, esp
.text:00019395                 call    __RTC_CheckEsp
.text:0001939A                 mov     esp, ebp
.text:0001939C                 pop     ebp
.text:0001939D                 retn
.text:0001939D _ssh2_msg_channel_request endp
.text:0001939D
.text:0001939D ; ---------------------------------------------------------------------------
.text:0001939E                 align 10h
.text:000193A0 $LN58           dd 6                    ; DATA XREF: _ssh2_msg_channel_request+6A7o
.text:000193A4                 dd offset $LN57
.text:000193A8 $LN57           dd 0FFFFFFF8h, 4        ; DATA XREF: .text:000193A4o
.text:000193B0                 dd offset $LN51         ; "type"
.text:000193B4                 dd 0FFFFFFECh, 4
.text:000193BC                 dd offset $LN52         ; "typelen"
.text:000193C0                 dd 0FFFFFFC0h, 4
.text:000193C8                 dd offset $LN53         ; "msg"
.text:000193CC                 dd 0FFFFFFB4h, 4
.text:000193D4                 dd offset $LN54         ; "msglen"
.text:000193D8                 dd 0FFFFFF84h, 4
.text:000193E0                 dd offset $LN55         ; "sig"
.text:000193E4                 dd 0FFFFFF78h, 4
.text:000193EC                 dd offset $LN56         ; "siglen"
.text:000193F0 $LN56           db 'siglen',0           ; DATA XREF: .text:000193ECo
.text:000193F7 $LN55           db 'sig',0              ; DATA XREF: .text:000193E0o
.text:000193FB $LN54           db 'msglen',0           ; DATA XREF: .text:000193D4o
.text:00019402 $LN53           db 'msg',0              ; DATA XREF: .text:000193C8o
.text:00019406 $LN52           db 'typelen',0          ; DATA XREF: .text:000193BCo
.text:0001940E $LN51           db 'type',0             ; DATA XREF: .text:000193B0o
.text:00019413                 align 8
.text:00019418
.text:00019418 ; =============== S U B R O U T I N E =======================================
.text:00019418
.text:00019418 ; Attributes: bp-based frame
.text:00019418
.text:00019418 _ssh2_msg_global_request proc near      ; DATA XREF: _do_ssh2_authconn+3B58o
.text:00019418
.text:00019418 var_20          = dword ptr -20h
.text:00019418 var_1C          = dword ptr -1Ch
.text:00019418 var_18          = dword ptr -18h
.text:00019418 var_14          = dword ptr -14h
.text:00019418 var_10          = dword ptr -10h
.text:00019418 var_C           = dword ptr -0Ch
.text:00019418 var_8           = dword ptr -8
.text:00019418 var_4           = dword ptr -4
.text:00019418 arg_0           = dword ptr  8
.text:00019418 arg_4           = dword ptr  0Ch
.text:00019418
.text:00019418                 push    ebp
.text:00019419                 mov     ebp, esp
.text:0001941B                 sub     esp, 20h
.text:0001941E                 mov     eax, 0CCCCCCCCh
.text:00019423                 mov     [ebp+var_20], eax
.text:00019426                 mov     [ebp+var_1C], eax
.text:00019429                 mov     [ebp+var_18], eax
.text:0001942C                 mov     [ebp+var_14], eax
.text:0001942F                 mov     [ebp+var_10], eax
.text:00019432                 mov     [ebp+var_C], eax
.text:00019435                 mov     [ebp+var_8], eax
.text:00019438                 mov     [ebp+var_4], eax
.text:0001943B                 lea     eax, [ebp+var_14]
.text:0001943E                 push    eax
.text:0001943F                 lea     ecx, [ebp+var_8]
.text:00019442                 push    ecx
.text:00019443                 mov     edx, [ebp+arg_4]
.text:00019446                 push    edx
.text:00019447                 call    _ssh_pkt_getstring
.text:0001944C                 add     esp, 0Ch
.text:0001944F                 mov     eax, [ebp+arg_4]
.text:00019452                 push    eax
.text:00019453                 call    _ssh2_pkt_getbool
.text:00019458                 add     esp, 4
.text:0001945B                 mov     [ebp+var_1C], eax
.text:0001945E                 cmp     [ebp+var_1C], 0
.text:00019462                 jz      short loc_19481
.text:00019464                 push    52h ; 'R'
.text:00019466                 call    _ssh2_pkt_init
.text:0001946B                 add     esp, 4
.text:0001946E                 mov     [ebp+var_20], eax
.text:00019471                 mov     ecx, [ebp+var_20]
.text:00019474                 push    ecx
.text:00019475                 mov     edx, [ebp+arg_0]
.text:00019478                 push    edx
.text:00019479                 call    _ssh2_pkt_send
.text:0001947E                 add     esp, 8
.text:00019481
.text:00019481 loc_19481:                              ; CODE XREF: _ssh2_msg_global_request+4Aj
.text:00019481                 push    edx
.text:00019482                 mov     ecx, ebp
.text:00019484                 push    eax
.text:00019485                 lea     edx, $LN7_2
.text:0001948B                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00019490                 pop     eax
.text:00019491                 pop     edx
.text:00019492                 add     esp, 20h
.text:00019495                 cmp     ebp, esp
.text:00019497                 call    __RTC_CheckEsp
.text:0001949C                 mov     esp, ebp
.text:0001949E                 pop     ebp
.text:0001949F                 retn
.text:0001949F _ssh2_msg_global_request endp
.text:0001949F
.text:0001949F ; ---------------------------------------------------------------------------
.text:000194A0 $LN7_2          dd 2                    ; DATA XREF: _ssh2_msg_global_request+6Do
.text:000194A4                 dd offset $LN6_4
.text:000194A8 $LN6_4          dd 0FFFFFFF8h, 4        ; DATA XREF: .text:000194A4o
.text:000194B0                 dd offset $LN4_9        ; "type"
.text:000194B4                 dd 0FFFFFFECh, 4
.text:000194BC                 dd offset $LN5_9        ; "typelen"
.text:000194C0 $LN5_9          db 'typelen',0          ; DATA XREF: .text:000194BCo
.text:000194C8 $LN4_9          db 'type',0             ; DATA XREF: .text:000194B0o
.text:000194CD                 db 0Bh dup(0CCh)
.text:000194D8
.text:000194D8 ; =============== S U B R O U T I N E =======================================
.text:000194D8
.text:000194D8 ; Attributes: bp-based frame
.text:000194D8
.text:000194D8 _ssh2_msg_channel_open proc near        ; DATA XREF: _do_ssh2_authconn+3E29o
.text:000194D8
.text:000194D8 var_98          = dword ptr -98h
.text:000194D8 var_90          = dword ptr -90h
.text:000194D8 var_84          = dword ptr -84h
.text:000194D8 var_7C          = dword ptr -7Ch
.text:000194D8 var_74          = dword ptr -74h
.text:000194D8 var_6C          = dword ptr -6Ch
.text:000194D8 Dst             = dword ptr -54h
.text:000194D8 var_50          = dword ptr -50h
.text:000194D8 var_4C          = dword ptr -4Ch
.text:000194D8 var_48          = dword ptr -48h
.text:000194D8 var_44          = dword ptr -44h
.text:000194D8 var_40          = dword ptr -40h
.text:000194D8 var_3C          = dword ptr -3Ch
.text:000194D8 Str             = dword ptr -38h
.text:000194D8 var_34          = dword ptr -34h
.text:000194D8 Size            = dword ptr -2Ch
.text:000194D8 Src             = dword ptr -20h
.text:000194D8 var_14          = dword ptr -14h
.text:000194D8 Buf1            = dword ptr -8
.text:000194D8 arg_0           = dword ptr  8
.text:000194D8 arg_4           = dword ptr  0Ch
.text:000194D8
.text:000194D8                 push    ebp
.text:000194D9                 mov     ebp, esp
.text:000194DB                 sub     esp, 98h
.text:000194E1                 push    edi
.text:000194E2                 lea     edi, [ebp+var_98]
.text:000194E8                 mov     ecx, 26h ; '&'
.text:000194ED                 mov     eax, 0CCCCCCCCh
.text:000194F2                 rep stosd
.text:000194F4                 mov     [ebp+Str], 0
.text:000194FB                 mov     [ebp+var_4C], 0
.text:00019502                 lea     eax, [ebp+var_14]
.text:00019505                 push    eax
.text:00019506                 lea     ecx, [ebp+Buf1]
.text:00019509                 push    ecx
.text:0001950A                 mov     edx, [ebp+arg_4]
.text:0001950D                 push    edx
.text:0001950E                 call    _ssh_pkt_getstring
.text:00019513                 add     esp, 0Ch
.text:00019516                 push    60h ; '`'
.text:00019518                 push    1
.text:0001951A                 call    _safemalloc
.text:0001951F                 add     esp, 8
.text:00019522                 mov     [ebp+var_3C], eax
.text:00019525                 mov     eax, [ebp+var_3C]
.text:00019528                 mov     ecx, [ebp+arg_0]
.text:0001952B                 mov     [eax], ecx
.text:0001952D                 mov     edx, [ebp+arg_4]
.text:00019530                 push    edx
.text:00019531                 call    _ssh_pkt_getuint32
.text:00019536                 add     esp, 4
.text:00019539                 mov     [ebp+var_40], eax
.text:0001953C                 mov     eax, [ebp+arg_4]
.text:0001953F                 push    eax
.text:00019540                 call    _ssh_pkt_getuint32
.text:00019545                 add     esp, 4
.text:00019548                 mov     [ebp+var_44], eax
.text:0001954B                 mov     ecx, [ebp+arg_4]
.text:0001954E                 push    ecx
.text:0001954F                 call    _ssh_pkt_getuint32
.text:00019554                 add     esp, 4
.text:00019557                 mov     [ebp+var_48], eax
.text:0001955A                 cmp     [ebp+var_14], 3
.text:0001955E                 jnz     loc_1967D
.text:00019564                 push    3               ; Size
.text:00019566                 push    offset $SG92694 ; "x11"
.text:0001956B                 mov     edx, [ebp+Buf1]
.text:0001956E                 push    edx             ; Buf1
.text:0001956F                 call    _memcmp
.text:00019574                 add     esp, 0Ch
.text:00019577                 test    eax, eax
.text:00019579                 jnz     loc_1967D
.text:0001957F                 lea     eax, [ebp+Size]
.text:00019582                 push    eax
.text:00019583                 lea     ecx, [ebp+Src]
.text:00019586                 push    ecx
.text:00019587                 mov     edx, [ebp+arg_4]
.text:0001958A                 push    edx
.text:0001958B                 call    _ssh_pkt_getstring
.text:00019590                 add     esp, 0Ch
.text:00019593                 push    1
.text:00019595                 mov     eax, [ebp+Size]
.text:00019598                 add     eax, 1
.text:0001959B                 push    eax
.text:0001959C                 call    _safemalloc
.text:000195A1                 add     esp, 8
.text:000195A4                 mov     [ebp+Dst], eax
.text:000195A7                 mov     ecx, [ebp+Size]
.text:000195AA                 push    ecx             ; Size
.text:000195AB                 mov     edx, [ebp+Src]
.text:000195AE                 push    edx             ; Src
.text:000195AF                 mov     eax, [ebp+Dst]
.text:000195B2                 push    eax             ; Dst
.text:000195B3                 call    _memcpy
.text:000195B8                 add     esp, 0Ch
.text:000195BB                 mov     ecx, [ebp+Dst]
.text:000195BE                 add     ecx, [ebp+Size]
.text:000195C1                 mov     byte ptr [ecx], 0
.text:000195C4                 mov     edx, [ebp+arg_4]
.text:000195C7                 push    edx
.text:000195C8                 call    _ssh_pkt_getuint32
.text:000195CD                 add     esp, 4
.text:000195D0                 mov     [ebp+var_34], eax
.text:000195D3                 mov     eax, [ebp+var_34]
.text:000195D6                 push    eax
.text:000195D7                 mov     ecx, [ebp+Dst]
.text:000195DA                 push    ecx
.text:000195DB                 push    offset $SG92698 ; "Received X11 connect request from %s:%d"
.text:000195E0                 mov     edx, [ebp+arg_0]
.text:000195E3                 push    edx
.text:000195E4                 call    _logeventf
.text:000195E9                 add     esp, 10h
.text:000195EC                 mov     eax, [ebp+arg_0]
.text:000195EF                 cmp     dword ptr [eax+4Ch], 0
.text:000195F3                 jnz     short loc_1960A
.text:000195F5                 mov     ecx, [ebp+arg_0]
.text:000195F8                 cmp     dword ptr [ecx+0CCh], 0
.text:000195FF                 jnz     short loc_1960A
.text:00019601                 mov     [ebp+Str], offset $SG92700 ; "X11 forwarding is not enabled"
.text:00019608                 jmp     short loc_1966C
.text:0001960A ; ---------------------------------------------------------------------------
.text:0001960A
.text:0001960A loc_1960A:                              ; CODE XREF: _ssh2_msg_channel_open+11Bj
.text:0001960A                                         ; _ssh2_msg_channel_open+127j
.text:0001960A                 mov     edx, [ebp+var_34]
.text:0001960D                 push    edx
.text:0001960E                 mov     eax, [ebp+Dst]
.text:00019611                 push    eax
.text:00019612                 mov     ecx, [ebp+var_3C]
.text:00019615                 push    ecx
.text:00019616                 mov     edx, [ebp+arg_0]
.text:00019619                 mov     eax, [edx+168h]
.text:0001961F                 push    eax
.text:00019620                 call    _x11_init
.text:00019625                 add     esp, 10h
.text:00019628                 mov     ecx, [ebp+var_3C]
.text:0001962B                 mov     [ecx+4Ch], eax
.text:0001962E                 mov     edx, [ebp+var_3C]
.text:00019631                 mov     dword ptr [edx+0Ch], 1
.text:00019638                 mov     eax, [ebp+var_3C]
.text:0001963B                 mov     dword ptr [eax+50h], 1
.text:00019642                 mov     ecx, [ebp+arg_0]
.text:00019645                 cmp     dword ptr [ecx+0CCh], 0
.text:0001964C                 jz      short loc_19655
.text:0001964E                 mov     [ebp+var_4C], 80h ; 'Ç'
.text:00019655
.text:00019655 loc_19655:                              ; CODE XREF: _ssh2_msg_channel_open+174j
.text:00019655                 push    offset $SG92703 ; "Opened X11 forward channel"
.text:0001965A                 mov     edx, [ebp+arg_0]
.text:0001965D                 mov     eax, [edx+0E4h]
.text:00019663                 push    eax
.text:00019664                 call    _logevent
.text:00019669                 add     esp, 8
.text:0001966C
.text:0001966C loc_1966C:                              ; CODE XREF: _ssh2_msg_channel_open+130j
.text:0001966C                 mov     ecx, [ebp+Dst]
.text:0001966F                 push    ecx
.text:00019670                 call    _safefree
.text:00019675                 add     esp, 4
.text:00019678                 jmp     loc_198B9
.text:0001967D ; ---------------------------------------------------------------------------
.text:0001967D
.text:0001967D loc_1967D:                              ; CODE XREF: _ssh2_msg_channel_open+86j
.text:0001967D                                         ; _ssh2_msg_channel_open+A1j
.text:0001967D                 cmp     [ebp+var_14], 0Fh
.text:00019681                 jnz     loc_19859
.text:00019687                 push    0Fh             ; Size
.text:00019689                 push    offset $SG92706 ; "forwarded-tcpip"
.text:0001968E                 mov     edx, [ebp+Buf1]
.text:00019691                 push    edx             ; Buf1
.text:00019692                 call    _memcmp
.text:00019697                 add     esp, 0Ch
.text:0001969A                 test    eax, eax
.text:0001969C                 jnz     loc_19859
.text:000196A2                 lea     eax, [ebp+var_90]
.text:000196A8                 push    eax
.text:000196A9                 lea     ecx, [ebp+var_84]
.text:000196AF                 push    ecx
.text:000196B0                 mov     edx, [ebp+arg_4]
.text:000196B3                 push    edx
.text:000196B4                 call    _ssh_pkt_getstring
.text:000196B9                 add     esp, 0Ch
.text:000196BC                 mov     eax, [ebp+var_84]
.text:000196C2                 push    eax
.text:000196C3                 mov     ecx, [ebp+var_90]
.text:000196C9                 push    ecx
.text:000196CA                 push    offset $SG92711 ; "%.*s"
.text:000196CF                 call    _dupprintf
.text:000196D4                 add     esp, 0Ch
.text:000196D7                 mov     [ebp+var_6C], eax
.text:000196DA                 mov     edx, [ebp+arg_4]
.text:000196DD                 push    edx
.text:000196DE                 call    _ssh_pkt_getuint32
.text:000196E3                 add     esp, 4
.text:000196E6                 mov     [ebp+var_74], eax
.text:000196E9                 lea     eax, [ebp+Size]
.text:000196EC                 push    eax
.text:000196ED                 lea     ecx, [ebp+Src]
.text:000196F0                 push    ecx
.text:000196F1                 mov     edx, [ebp+arg_4]
.text:000196F4                 push    edx
.text:000196F5                 call    _ssh_pkt_getstring
.text:000196FA                 add     esp, 0Ch
.text:000196FD                 mov     eax, [ebp+arg_4]
.text:00019700                 push    eax
.text:00019701                 call    _ssh_pkt_getuint32
.text:00019706                 add     esp, 4
.text:00019709                 mov     [ebp+var_34], eax
.text:0001970C                 push    0
.text:0001970E                 lea     ecx, [ebp+var_74]
.text:00019711                 push    ecx
.text:00019712                 mov     edx, [ebp+arg_0]
.text:00019715                 mov     eax, [edx+110h]
.text:0001971B                 push    eax
.text:0001971C                 call    _find234
.text:00019721                 add     esp, 0Ch
.text:00019724                 mov     [ebp+var_7C], eax
.text:00019727                 mov     ecx, [ebp+var_34]
.text:0001972A                 push    ecx
.text:0001972B                 mov     edx, [ebp+Src]
.text:0001972E                 push    edx
.text:0001972F                 mov     eax, [ebp+var_74]
.text:00019732                 push    eax
.text:00019733                 mov     ecx, [ebp+var_6C]
.text:00019736                 push    ecx
.text:00019737                 push    offset $SG92713 ; "Received remote port %s:%d open request"...
.text:0001973C                 mov     edx, [ebp+arg_0]
.text:0001973F                 push    edx
.text:00019740                 call    _logeventf
.text:00019745                 add     esp, 18h
.text:00019748                 mov     eax, [ebp+var_6C]
.text:0001974B                 push    eax
.text:0001974C                 call    _safefree
.text:00019751                 add     esp, 4
.text:00019754                 cmp     [ebp+var_7C], 0
.text:00019758                 jnz     short loc_19766
.text:0001975A                 mov     [ebp+Str], offset $SG92716 ; "Remote port is not recognised"
.text:00019761                 jmp     loc_19857
.text:00019766 ; ---------------------------------------------------------------------------
.text:00019766
.text:00019766 loc_19766:                              ; CODE XREF: _ssh2_msg_channel_open+280j
.text:00019766                 mov     ecx, [ebp+var_7C]
.text:00019769                 cmp     dword ptr [ecx+14h], 0
.text:0001976D                 jz      short loc_197A3
.text:0001976F                 mov     edx, [ebp+arg_4]
.text:00019772                 mov     eax, [edx]
.text:00019774                 push    eax
.text:00019775                 mov     ecx, [ebp+arg_4]
.text:00019778                 mov     edx, [ecx+14h]
.text:0001977B                 push    edx
.text:0001977C                 mov     eax, [ebp+arg_4]
.text:0001977F                 mov     ecx, [eax+8]
.text:00019782                 push    ecx
.text:00019783                 mov     edx, [ebp+var_7C]
.text:00019786                 mov     eax, [edx+14h]
.text:00019789                 push    eax
.text:0001978A                 call    _share_got_pkt_from_server
.text:0001978F                 add     esp, 10h
.text:00019792                 mov     ecx, [ebp+var_3C]
.text:00019795                 push    ecx
.text:00019796                 call    _safefree
.text:0001979B                 add     esp, 4
.text:0001979E                 jmp     loc_19A17
.text:000197A3 ; ---------------------------------------------------------------------------
.text:000197A3
.text:000197A3 loc_197A3:                              ; CODE XREF: _ssh2_msg_channel_open+295j
.text:000197A3                 mov     edx, [ebp+var_7C]
.text:000197A6                 mov     eax, [edx+18h]
.text:000197A9                 mov     ecx, [eax+24h]
.text:000197AC                 push    ecx
.text:000197AD                 mov     edx, [ebp+arg_0]
.text:000197B0                 mov     eax, [edx+21Ch]
.text:000197B6                 push    eax
.text:000197B7                 mov     ecx, [ebp+var_3C]
.text:000197BA                 push    ecx
.text:000197BB                 mov     edx, [ebp+var_7C]
.text:000197BE                 mov     eax, [edx+4]
.text:000197C1                 push    eax
.text:000197C2                 mov     ecx, [ebp+var_7C]
.text:000197C5                 mov     edx, [ecx+0Ch]
.text:000197C8                 push    edx
.text:000197C9                 mov     eax, [ebp+var_3C]
.text:000197CC                 add     eax, 4Ch ; 'L'
.text:000197CF                 push    eax
.text:000197D0                 call    _pfd_connect
.text:000197D5                 add     esp, 18h
.text:000197D8                 mov     [ebp+var_98], eax
.text:000197DE                 mov     ecx, [ebp+var_7C]
.text:000197E1                 mov     edx, [ecx+4]
.text:000197E4                 push    edx
.text:000197E5                 mov     eax, [ebp+var_7C]
.text:000197E8                 mov     ecx, [eax+0Ch]
.text:000197EB                 push    ecx
.text:000197EC                 push    offset $SG92720 ; "Attempting to forward remote port to %s"...
.text:000197F1                 mov     edx, [ebp+arg_0]
.text:000197F4                 push    edx
.text:000197F5                 call    _logeventf
.text:000197FA                 add     esp, 10h
.text:000197FD                 cmp     [ebp+var_98], 0
.text:00019804                 jz      short loc_19836
.text:00019806                 mov     eax, [ebp+var_98]
.text:0001980C                 push    eax
.text:0001980D                 push    offset $SG92723 ; "Port open failed: %s"
.text:00019812                 mov     ecx, [ebp+arg_0]
.text:00019815                 push    ecx
.text:00019816                 call    _logeventf
.text:0001981B                 add     esp, 0Ch
.text:0001981E                 mov     edx, [ebp+var_98]
.text:00019824                 push    edx
.text:00019825                 call    _safefree
.text:0001982A                 add     esp, 4
.text:0001982D                 mov     [ebp+Str], offset $SG92724 ; "Port open failed"
.text:00019834                 jmp     short loc_19857
.text:00019836 ; ---------------------------------------------------------------------------
.text:00019836
.text:00019836 loc_19836:                              ; CODE XREF: _ssh2_msg_channel_open+32Cj
.text:00019836                 push    offset $SG92726 ; "Forwarded port opened successfully"
.text:0001983B                 mov     eax, [ebp+arg_0]
.text:0001983E                 mov     ecx, [eax+0E4h]
.text:00019844                 push    ecx
.text:00019845                 call    _logevent
.text:0001984A                 add     esp, 8
.text:0001984D                 mov     edx, [ebp+var_3C]
.text:00019850                 mov     dword ptr [edx+0Ch], 3
.text:00019857
.text:00019857 loc_19857:                              ; CODE XREF: _ssh2_msg_channel_open+289j
.text:00019857                                         ; _ssh2_msg_channel_open+35Cj
.text:00019857                 jmp     short loc_198B9
.text:00019859 ; ---------------------------------------------------------------------------
.text:00019859
.text:00019859 loc_19859:                              ; CODE XREF: _ssh2_msg_channel_open+1A9j
.text:00019859                                         ; _ssh2_msg_channel_open+1C4j
.text:00019859                 cmp     [ebp+var_14], 16h
.text:0001985D                 jnz     short loc_198B2
.text:0001985F                 push    16h             ; Size
.text:00019861                 push    offset $SG92729 ; "auth-agent@openssh.com"
.text:00019866                 mov     eax, [ebp+Buf1]
.text:00019869                 push    eax             ; Buf1
.text:0001986A                 call    _memcmp
.text:0001986F                 add     esp, 0Ch
.text:00019872                 test    eax, eax
.text:00019874                 jnz     short loc_198B2
.text:00019876                 mov     ecx, [ebp+arg_0]
.text:00019879                 cmp     dword ptr [ecx+48h], 0
.text:0001987D                 jnz     short loc_19888
.text:0001987F                 mov     [ebp+Str], offset $SG92731 ; "Agent forwarding is not enabled"
.text:00019886                 jmp     short loc_198B0
.text:00019888 ; ---------------------------------------------------------------------------
.text:00019888
.text:00019888 loc_19888:                              ; CODE XREF: _ssh2_msg_channel_open+3A5j
.text:00019888                 mov     edx, [ebp+var_3C]
.text:0001988B                 mov     dword ptr [edx+0Ch], 2
.text:00019892                 mov     eax, [ebp+var_3C]
.text:00019895                 mov     dword ptr [eax+54h], 0
.text:0001989C                 mov     ecx, [ebp+var_3C]
.text:0001989F                 mov     dword ptr [ecx+4Ch], 0
.text:000198A6                 mov     edx, [ebp+var_3C]
.text:000198A9                 mov     dword ptr [edx+5Ch], 0
.text:000198B0
.text:000198B0 loc_198B0:                              ; CODE XREF: _ssh2_msg_channel_open+3AEj
.text:000198B0                 jmp     short loc_198B9
.text:000198B2 ; ---------------------------------------------------------------------------
.text:000198B2
.text:000198B2 loc_198B2:                              ; CODE XREF: _ssh2_msg_channel_open+385j
.text:000198B2                                         ; _ssh2_msg_channel_open+39Cj
.text:000198B2                 mov     [ebp+Str], offset $SG92735 ; "Unsupported channel type requested"
.text:000198B9
.text:000198B9 loc_198B9:                              ; CODE XREF: _ssh2_msg_channel_open+1A0j
.text:000198B9                                         ; _ssh2_msg_channel_open:loc_19857j ...
.text:000198B9                 mov     eax, [ebp+var_3C]
.text:000198BC                 mov     ecx, [ebp+var_40]
.text:000198BF                 mov     [eax+4], ecx
.text:000198C2                 mov     edx, [ebp+var_3C]
.text:000198C5                 mov     dword ptr [edx+10h], 0
.text:000198CC                 cmp     [ebp+Str], 0
.text:000198D0                 jz      loc_1995B
.text:000198D6                 push    5Ch ; '\'
.text:000198D8                 call    _ssh2_pkt_init
.text:000198DD                 add     esp, 4
.text:000198E0                 mov     [ebp+var_50], eax
.text:000198E3                 mov     eax, [ebp+var_3C]
.text:000198E6                 mov     ecx, [eax+4]
.text:000198E9                 push    ecx
.text:000198EA                 mov     edx, [ebp+var_50]
.text:000198ED                 push    edx
.text:000198EE                 call    _ssh_pkt_adduint32
.text:000198F3                 add     esp, 8
.text:000198F6                 push    2
.text:000198F8                 mov     eax, [ebp+var_50]
.text:000198FB                 push    eax
.text:000198FC                 call    _ssh_pkt_adduint32
.text:00019901                 add     esp, 8
.text:00019904                 mov     ecx, [ebp+Str]
.text:00019907                 push    ecx             ; Str
.text:00019908                 mov     edx, [ebp+var_50]
.text:0001990B                 push    edx             ; int
.text:0001990C                 call    _ssh_pkt_addstring
.text:00019911                 add     esp, 8
.text:00019914                 push    offset $SG92737 ; Str
.text:00019919                 mov     eax, [ebp+var_50]
.text:0001991C                 push    eax             ; int
.text:0001991D                 call    _ssh_pkt_addstring
.text:00019922                 add     esp, 8
.text:00019925                 mov     ecx, [ebp+var_50]
.text:00019928                 push    ecx
.text:00019929                 mov     edx, [ebp+arg_0]
.text:0001992C                 push    edx
.text:0001992D                 call    _ssh2_pkt_send
.text:00019932                 add     esp, 8
.text:00019935                 mov     eax, [ebp+Str]
.text:00019938                 push    eax
.text:00019939                 push    offset $SG92738 ; "Rejected channel open: %s"
.text:0001993E                 mov     ecx, [ebp+arg_0]
.text:00019941                 push    ecx
.text:00019942                 call    _logeventf
.text:00019947                 add     esp, 0Ch
.text:0001994A                 mov     edx, [ebp+var_3C]
.text:0001994D                 push    edx
.text:0001994E                 call    _safefree
.text:00019953                 add     esp, 4
.text:00019956                 jmp     loc_19A17
.text:0001995B ; ---------------------------------------------------------------------------
.text:0001995B
.text:0001995B loc_1995B:                              ; CODE XREF: _ssh2_msg_channel_open+3F8j
.text:0001995B                 mov     eax, [ebp+var_3C]
.text:0001995E                 push    eax
.text:0001995F                 call    _ssh2_channel_init
.text:00019964                 add     esp, 4
.text:00019967                 mov     ecx, [ebp+var_3C]
.text:0001996A                 mov     edx, [ebp+var_44]
.text:0001996D                 mov     [ecx+2Ch], edx
.text:00019970                 mov     eax, [ebp+var_3C]
.text:00019973                 mov     ecx, [ebp+var_48]
.text:00019976                 mov     [eax+30h], ecx
.text:00019979                 cmp     [ebp+var_4C], 0
.text:0001997D                 jz      short loc_1999A
.text:0001997F                 mov     edx, [ebp+var_3C]
.text:00019982                 mov     eax, [ebp+var_4C]
.text:00019985                 mov     [edx+3Ch], eax
.text:00019988                 mov     ecx, [ebp+var_3C]
.text:0001998B                 mov     edx, [ebp+var_4C]
.text:0001998E                 mov     [ecx+38h], edx
.text:00019991                 mov     eax, [ebp+var_3C]
.text:00019994                 mov     ecx, [ebp+var_4C]
.text:00019997                 mov     [eax+34h], ecx
.text:0001999A
.text:0001999A loc_1999A:                              ; CODE XREF: _ssh2_msg_channel_open+4A5j
.text:0001999A                 mov     edx, [ebp+var_3C]
.text:0001999D                 push    edx
.text:0001999E                 mov     eax, [ebp+arg_0]
.text:000199A1                 mov     ecx, [eax+0F8h]
.text:000199A7                 push    ecx
.text:000199A8                 call    _add234
.text:000199AD                 add     esp, 8
.text:000199B0                 push    5Bh ; '['
.text:000199B2                 call    _ssh2_pkt_init
.text:000199B7                 add     esp, 4
.text:000199BA                 mov     [ebp+var_50], eax
.text:000199BD                 mov     edx, [ebp+var_3C]
.text:000199C0                 mov     eax, [edx+4]
.text:000199C3                 push    eax
.text:000199C4                 mov     ecx, [ebp+var_50]
.text:000199C7                 push    ecx
.text:000199C8                 call    _ssh_pkt_adduint32
.text:000199CD                 add     esp, 8
.text:000199D0                 mov     edx, [ebp+var_3C]
.text:000199D3                 mov     eax, [edx+8]
.text:000199D6                 push    eax
.text:000199D7                 mov     ecx, [ebp+var_50]
.text:000199DA                 push    ecx
.text:000199DB                 call    _ssh_pkt_adduint32
.text:000199E0                 add     esp, 8
.text:000199E3                 mov     edx, [ebp+var_3C]
.text:000199E6                 mov     eax, [edx+34h]
.text:000199E9                 push    eax
.text:000199EA                 mov     ecx, [ebp+var_50]
.text:000199ED                 push    ecx
.text:000199EE                 call    _ssh_pkt_adduint32
.text:000199F3                 add     esp, 8
.text:000199F6                 push    4000h
.text:000199FB                 mov     edx, [ebp+var_50]
.text:000199FE                 push    edx
.text:000199FF                 call    _ssh_pkt_adduint32
.text:00019A04                 add     esp, 8
.text:00019A07                 mov     eax, [ebp+var_50]
.text:00019A0A                 push    eax
.text:00019A0B                 mov     ecx, [ebp+arg_0]
.text:00019A0E                 push    ecx
.text:00019A0F                 call    _ssh2_pkt_send
.text:00019A14                 add     esp, 8
.text:00019A17
.text:00019A17 loc_19A17:                              ; CODE XREF: _ssh2_msg_channel_open+2C6j
.text:00019A17                                         ; _ssh2_msg_channel_open+47Ej
.text:00019A17                 push    edx
.text:00019A18                 mov     ecx, ebp
.text:00019A1A                 push    eax
.text:00019A1B                 lea     edx, $LN30_0
.text:00019A21                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00019A26                 pop     eax
.text:00019A27                 pop     edx
.text:00019A28                 pop     edi
.text:00019A29                 add     esp, 98h
.text:00019A2F                 cmp     ebp, esp
.text:00019A31                 call    __RTC_CheckEsp
.text:00019A36                 mov     esp, ebp
.text:00019A38                 pop     ebp
.text:00019A39                 retn
.text:00019A39 _ssh2_msg_channel_open endp
.text:00019A39
.text:00019A39 ; ---------------------------------------------------------------------------
.text:00019A3A                 align 4
.text:00019A3C $LN30_0         dd 7                    ; DATA XREF: _ssh2_msg_channel_open+543o
.text:00019A40                 dd offset $LN29_0
.text:00019A44 $LN29_0         dd 0FFFFFFF8h, 4        ; DATA XREF: .text:00019A40o
.text:00019A4C                 dd offset $LN22_1       ; "type"
.text:00019A50                 dd 0FFFFFFECh, 4
.text:00019A58                 dd offset $LN23_0       ; "typelen"
.text:00019A5C                 dd 0FFFFFFE0h, 4
.text:00019A64                 dd offset $LN24_0       ; "peeraddr"
.text:00019A68                 dd 0FFFFFFD4h, 4
.text:00019A70                 dd offset $LN25         ; "peeraddrlen"
.text:00019A74                 dd 0FFFFFF8Ch, 1Ch
.text:00019A7C                 dd offset $LN26         ; "pf"
.text:00019A80                 dd 0FFFFFF7Ch, 4
.text:00019A88                 dd offset $LN27         ; "shost"
.text:00019A8C                 dd 0FFFFFF70h, 4
.text:00019A94                 dd offset $LN28         ; "shostlen"
.text:00019A98 $LN28           db 'shostlen',0         ; DATA XREF: .text:00019A94o
.text:00019AA1 $LN27           db 'shost',0            ; DATA XREF: .text:00019A88o
.text:00019AA7 $LN26           db 'pf',0               ; DATA XREF: .text:00019A7Co
.text:00019AAA $LN25           db 'peeraddrlen',0      ; DATA XREF: .text:00019A70o
.text:00019AB6 $LN24_0         db 'peeraddr',0         ; DATA XREF: .text:00019A64o
.text:00019ABF $LN23_0         db 'typelen',0          ; DATA XREF: .text:00019A58o
.text:00019AC7 $LN22_1         db 'type',0             ; DATA XREF: .text:00019A4Co
.text:00019ACC                 db 0Ch dup(0CCh)
.text:00019AD8
.text:00019AD8 ; =============== S U B R O U T I N E =======================================
.text:00019AD8
.text:00019AD8 ; Attributes: bp-based frame
.text:00019AD8
.text:00019AD8 _ssh2_msg_userauth_banner proc near     ; DATA XREF: _do_ssh2_authconn+49Eo
.text:00019AD8
.text:00019AD8 var_18          = dword ptr -18h
.text:00019AD8 var_14          = dword ptr -14h
.text:00019AD8 var_10          = dword ptr -10h
.text:00019AD8 var_C           = dword ptr -0Ch
.text:00019AD8 var_8           = dword ptr -8
.text:00019AD8 var_4           = dword ptr -4
.text:00019AD8 arg_0           = dword ptr  8
.text:00019AD8 arg_4           = dword ptr  0Ch
.text:00019AD8
.text:00019AD8                 push    ebp
.text:00019AD9                 mov     ebp, esp
.text:00019ADB                 sub     esp, 18h
.text:00019ADE                 mov     eax, 0CCCCCCCCh
.text:00019AE3                 mov     [ebp+var_18], eax
.text:00019AE6                 mov     [ebp+var_14], eax
.text:00019AE9                 mov     [ebp+var_10], eax
.text:00019AEC                 mov     [ebp+var_C], eax
.text:00019AEF                 mov     [ebp+var_8], eax
.text:00019AF2                 mov     [ebp+var_4], eax
.text:00019AF5                 push    22h ; '"'
.text:00019AF7                 mov     eax, [ebp+arg_0]
.text:00019AFA                 mov     ecx, [eax+21Ch]
.text:00019B00                 push    ecx
.text:00019B01                 call    _conf_get_int
.text:00019B06                 add     esp, 8
.text:00019B09                 test    eax, eax
.text:00019B0B                 jz      short loc_19B68
.text:00019B0D                 mov     edx, [ebp+arg_0]
.text:00019B10                 add     edx, 14Ch
.text:00019B16                 push    edx
.text:00019B17                 call    _bufchain_size
.text:00019B1C                 add     esp, 4
.text:00019B1F                 cmp     eax, offset off_20000
.text:00019B24                 jg      short loc_19B68
.text:00019B26                 mov     [ebp+var_8], 0
.text:00019B2D                 mov     [ebp+var_14], 0
.text:00019B34                 lea     eax, [ebp+var_14]
.text:00019B37                 push    eax
.text:00019B38                 lea     ecx, [ebp+var_8]
.text:00019B3B                 push    ecx
.text:00019B3C                 mov     edx, [ebp+arg_4]
.text:00019B3F                 push    edx
.text:00019B40                 call    _ssh_pkt_getstring
.text:00019B45                 add     esp, 0Ch
.text:00019B48                 cmp     [ebp+var_8], 0
.text:00019B4C                 jz      short loc_19B68
.text:00019B4E                 mov     eax, [ebp+var_14]
.text:00019B51                 push    eax
.text:00019B52                 mov     ecx, [ebp+var_8]
.text:00019B55                 push    ecx
.text:00019B56                 mov     edx, [ebp+arg_0]
.text:00019B59                 add     edx, 14Ch
.text:00019B5F                 push    edx
.text:00019B60                 call    _bufchain_add
.text:00019B65                 add     esp, 0Ch
.text:00019B68
.text:00019B68 loc_19B68:                              ; CODE XREF: _ssh2_msg_userauth_banner+33j
.text:00019B68                                         ; _ssh2_msg_userauth_banner+4Cj ...
.text:00019B68                 push    edx
.text:00019B69                 mov     ecx, ebp
.text:00019B6B                 push    eax
.text:00019B6C                 lea     edx, $LN8_5
.text:00019B72                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00019B77                 pop     eax
.text:00019B78                 pop     edx
.text:00019B79                 add     esp, 18h
.text:00019B7C                 cmp     ebp, esp
.text:00019B7E                 call    __RTC_CheckEsp
.text:00019B83                 mov     esp, ebp
.text:00019B85                 pop     ebp
.text:00019B86                 retn
.text:00019B86 _ssh2_msg_userauth_banner endp
.text:00019B86
.text:00019B86 ; ---------------------------------------------------------------------------
.text:00019B87                 align 4
.text:00019B88 $LN8_5          dd 2                    ; DATA XREF: _ssh2_msg_userauth_banner+94o
.text:00019B8C                 dd offset $LN7_3
.text:00019B90 $LN7_3          dd 0FFFFFFF8h, 4        ; DATA XREF: .text:00019B8Co
.text:00019B98                 dd offset $LN5_10       ; "banner"
.text:00019B9C                 dd 0FFFFFFECh, 4
.text:00019BA4                 dd offset $LN6_5        ; "size"
.text:00019BA8 $LN6_5          db 'size',0             ; DATA XREF: .text:00019BA4o
.text:00019BAD $LN5_10         db 'banner',0           ; DATA XREF: .text:00019B98o
.text:00019BB4                 align 8
.text:00019BB8
.text:00019BB8 ; =============== S U B R O U T I N E =======================================
.text:00019BB8
.text:00019BB8 ; Attributes: bp-based frame
.text:00019BB8
.text:00019BB8 _ssh2_setup_x11 proc near               ; CODE XREF: _do_ssh2_authconn+3FCBp
.text:00019BB8                                         ; DATA XREF: _ssh2_setup_x11+8Do
.text:00019BB8
.text:00019BB8 var_14          = dword ptr -14h
.text:00019BB8 var_10          = dword ptr -10h
.text:00019BB8 var_C           = dword ptr -0Ch
.text:00019BB8 var_8           = dword ptr -8
.text:00019BB8 var_4           = dword ptr -4
.text:00019BB8 arg_0           = dword ptr  8
.text:00019BB8 arg_4           = dword ptr  0Ch
.text:00019BB8 arg_8           = dword ptr  10h
.text:00019BB8
.text:00019BB8                 push    ebp
.text:00019BB9                 mov     ebp, esp
.text:00019BBB                 sub     esp, 14h
.text:00019BBE                 mov     eax, 0CCCCCCCCh
.text:00019BC3                 mov     [ebp+var_14], eax
.text:00019BC6                 mov     [ebp+var_10], eax
.text:00019BC9                 mov     [ebp+var_C], eax
.text:00019BCC                 mov     [ebp+var_8], eax
.text:00019BCF                 mov     [ebp+var_4], eax
.text:00019BD2                 mov     eax, [ebp+arg_0]
.text:00019BD5                 mov     ecx, [eax]
.text:00019BD7                 mov     [ebp+var_4], ecx
.text:00019BDA                 cmp     [ebp+arg_8], 0
.text:00019BDE                 jnz     short loc_19BFE
.text:00019BE0                 push    4
.text:00019BE2                 push    1
.text:00019BE4                 call    _safemalloc
.text:00019BE9                 add     esp, 8
.text:00019BEC                 mov     [ebp+arg_8], eax
.text:00019BEF                 mov     edx, [ebp+arg_8]
.text:00019BF2                 mov     [ebp+var_C], edx
.text:00019BF5                 mov     eax, [ebp+var_C]
.text:00019BF8                 mov     dword ptr [eax], 0
.text:00019BFE
.text:00019BFE loc_19BFE:                              ; CODE XREF: _ssh2_setup_x11+26j
.text:00019BFE                 mov     ecx, [ebp+arg_8]
.text:00019C01                 mov     [ebp+var_C], ecx
.text:00019C04                 mov     edx, [ebp+var_C]
.text:00019C07                 mov     [ebp+var_10], edx
.text:00019C0A                 mov     eax, [ebp+var_C]
.text:00019C0D                 mov     ecx, [eax]
.text:00019C0F                 mov     [ebp+var_14], ecx
.text:00019C12                 cmp     [ebp+var_14], 0
.text:00019C16                 jz      short loc_19C2A
.text:00019C18                 cmp     [ebp+var_14], 20D5h
.text:00019C1F                 jz      loc_19CD8
.text:00019C25                 jmp     loc_19D25
.text:00019C2A ; ---------------------------------------------------------------------------
.text:00019C2A
.text:00019C2A loc_19C2A:                              ; CODE XREF: _ssh2_setup_x11+5Ej
.text:00019C2A                 push    offset $SG92820 ; "Requesting X11 forwarding"
.text:00019C2F                 mov     edx, [ebp+var_4]
.text:00019C32                 mov     eax, [edx+0E4h]
.text:00019C38                 push    eax
.text:00019C39                 call    _logevent
.text:00019C3E                 add     esp, 8
.text:00019C41                 mov     ecx, [ebp+var_C]
.text:00019C44                 push    ecx             ; int
.text:00019C45                 push    offset _ssh2_setup_x11 ; int
.text:00019C4A                 push    offset $SG92821 ; "x11-req"
.text:00019C4F                 mov     edx, [ebp+var_4]
.text:00019C52                 mov     eax, [edx+0FCh]
.text:00019C58                 push    eax             ; int
.text:00019C59                 call    _ssh2_chanreq_init
.text:00019C5E                 add     esp, 10h
.text:00019C61                 mov     [ebp+var_8], eax
.text:00019C64                 push    0               ; Src
.text:00019C66                 mov     ecx, [ebp+var_8]
.text:00019C69                 push    ecx             ; int
.text:00019C6A                 call    _ssh2_pkt_addbool
.text:00019C6F                 add     esp, 8
.text:00019C72                 mov     edx, [ebp+var_4]
.text:00019C75                 mov     eax, [edx+164h]
.text:00019C7B                 mov     ecx, [eax+0Ch]
.text:00019C7E                 push    ecx             ; Str
.text:00019C7F                 mov     edx, [ebp+var_8]
.text:00019C82                 push    edx             ; int
.text:00019C83                 call    _ssh_pkt_addstring
.text:00019C88                 add     esp, 8
.text:00019C8B                 mov     eax, [ebp+var_4]
.text:00019C8E                 mov     ecx, [eax+164h]
.text:00019C94                 mov     edx, [ecx+10h]
.text:00019C97                 push    edx             ; Str
.text:00019C98                 mov     eax, [ebp+var_8]
.text:00019C9B                 push    eax             ; int
.text:00019C9C                 call    _ssh_pkt_addstring
.text:00019CA1                 add     esp, 8
.text:00019CA4                 mov     ecx, [ebp+var_4]
.text:00019CA7                 mov     edx, [ecx+160h]
.text:00019CAD                 mov     eax, [edx+0Ch]
.text:00019CB0                 push    eax
.text:00019CB1                 mov     ecx, [ebp+var_8]
.text:00019CB4                 push    ecx
.text:00019CB5                 call    _ssh_pkt_adduint32
.text:00019CBA                 add     esp, 8
.text:00019CBD                 mov     edx, [ebp+var_8]
.text:00019CC0                 push    edx
.text:00019CC1                 mov     eax, [ebp+var_4]
.text:00019CC4                 push    eax
.text:00019CC5                 call    _ssh2_pkt_send
.text:00019CCA                 add     esp, 8
.text:00019CCD
.text:00019CCD loc_19CCD:                              ; CODE XREF: _ssh2_setup_x11+122j
.text:00019CCD                 mov     ecx, [ebp+var_10]
.text:00019CD0                 mov     dword ptr [ecx], 20D5h
.text:00019CD6                 jmp     short loc_19D31
.text:00019CD8 ; ---------------------------------------------------------------------------
.text:00019CD8
.text:00019CD8 loc_19CD8:                              ; CODE XREF: _ssh2_setup_x11+67j
.text:00019CD8                 xor     edx, edx
.text:00019CDA                 jnz     short loc_19CCD
.text:00019CDC                 cmp     [ebp+arg_4], 0
.text:00019CE0                 jz      short loc_19D25
.text:00019CE2                 mov     eax, [ebp+arg_4]
.text:00019CE5                 cmp     dword ptr [eax+8], 63h ; 'c'
.text:00019CE9                 jnz     short loc_19D0E
.text:00019CEB                 push    offset $SG92828 ; "X11 forwarding enabled"
.text:00019CF0                 mov     ecx, [ebp+var_4]
.text:00019CF3                 mov     edx, [ecx+0E4h]
.text:00019CF9                 push    edx
.text:00019CFA                 call    _logevent
.text:00019CFF                 add     esp, 8
.text:00019D02                 mov     eax, [ebp+var_4]
.text:00019D05                 mov     dword ptr [eax+4Ch], 1
.text:00019D0C                 jmp     short loc_19D25
.text:00019D0E ; ---------------------------------------------------------------------------
.text:00019D0E
.text:00019D0E loc_19D0E:                              ; CODE XREF: _ssh2_setup_x11+131j
.text:00019D0E                 push    offset $SG92830 ; "X11 forwarding refused"
.text:00019D13                 mov     ecx, [ebp+var_4]
.text:00019D16                 mov     edx, [ecx+0E4h]
.text:00019D1C                 push    edx
.text:00019D1D                 call    _logevent
.text:00019D22                 add     esp, 8
.text:00019D25
.text:00019D25 loc_19D25:                              ; CODE XREF: _ssh2_setup_x11+6Dj
.text:00019D25                                         ; _ssh2_setup_x11+128j ...
.text:00019D25                 mov     eax, [ebp+var_C]
.text:00019D28                 push    eax
.text:00019D29                 call    _safefree
.text:00019D2E                 add     esp, 4
.text:00019D31
.text:00019D31 loc_19D31:                              ; CODE XREF: _ssh2_setup_x11+11Ej
.text:00019D31                 add     esp, 14h
.text:00019D34                 cmp     ebp, esp
.text:00019D36                 call    __RTC_CheckEsp
.text:00019D3B                 mov     esp, ebp
.text:00019D3D                 pop     ebp
.text:00019D3E                 retn
.text:00019D3E _ssh2_setup_x11 endp
.text:00019D3E
.text:00019D3E ; ---------------------------------------------------------------------------
.text:00019D3F                 db 9 dup(0CCh)
.text:00019D48
.text:00019D48 ; =============== S U B R O U T I N E =======================================
.text:00019D48
.text:00019D48 ; Attributes: bp-based frame
.text:00019D48
.text:00019D48 _ssh2_setup_agent proc near             ; CODE XREF: _do_ssh2_authconn+3FF1p
.text:00019D48                                         ; DATA XREF: _ssh2_setup_agent+89o
.text:00019D48
.text:00019D48 var_14          = dword ptr -14h
.text:00019D48 var_10          = dword ptr -10h
.text:00019D48 var_C           = dword ptr -0Ch
.text:00019D48 var_8           = dword ptr -8
.text:00019D48 var_4           = dword ptr -4
.text:00019D48 arg_0           = dword ptr  8
.text:00019D48 arg_4           = dword ptr  0Ch
.text:00019D48 arg_8           = dword ptr  10h
.text:00019D48
.text:00019D48                 push    ebp
.text:00019D49                 mov     ebp, esp
.text:00019D4B                 sub     esp, 14h
.text:00019D4E                 mov     eax, 0CCCCCCCCh
.text:00019D53                 mov     [ebp+var_14], eax
.text:00019D56                 mov     [ebp+var_10], eax
.text:00019D59                 mov     [ebp+var_C], eax
.text:00019D5C                 mov     [ebp+var_8], eax
.text:00019D5F                 mov     [ebp+var_4], eax
.text:00019D62                 mov     eax, [ebp+arg_0]
.text:00019D65                 mov     ecx, [eax]
.text:00019D67                 mov     [ebp+var_4], ecx
.text:00019D6A                 cmp     [ebp+arg_8], 0
.text:00019D6E                 jnz     short loc_19D8E
.text:00019D70                 push    4
.text:00019D72                 push    1
.text:00019D74                 call    _safemalloc
.text:00019D79                 add     esp, 8
.text:00019D7C                 mov     [ebp+arg_8], eax
.text:00019D7F                 mov     edx, [ebp+arg_8]
.text:00019D82                 mov     [ebp+var_C], edx
.text:00019D85                 mov     eax, [ebp+var_C]
.text:00019D88                 mov     dword ptr [eax], 0
.text:00019D8E
.text:00019D8E loc_19D8E:                              ; CODE XREF: _ssh2_setup_agent+26j
.text:00019D8E                 mov     ecx, [ebp+arg_8]
.text:00019D91                 mov     [ebp+var_C], ecx
.text:00019D94                 mov     edx, [ebp+var_C]
.text:00019D97                 mov     [ebp+var_10], edx
.text:00019D9A                 mov     eax, [ebp+var_C]
.text:00019D9D                 mov     ecx, [eax]
.text:00019D9F                 mov     [ebp+var_14], ecx
.text:00019DA2                 cmp     [ebp+var_14], 0
.text:00019DA6                 jz      short loc_19DB6
.text:00019DA8                 cmp     [ebp+var_14], 20F5h
.text:00019DAF                 jz      short loc_19E0B
.text:00019DB1                 jmp     loc_19E58
.text:00019DB6 ; ---------------------------------------------------------------------------
.text:00019DB6
.text:00019DB6 loc_19DB6:                              ; CODE XREF: _ssh2_setup_agent+5Ej
.text:00019DB6                 push    offset $SG92853 ; "Requesting OpenSSH-style agent forwardi"...
.text:00019DBB                 mov     edx, [ebp+var_4]
.text:00019DBE                 mov     eax, [edx+0E4h]
.text:00019DC4                 push    eax
.text:00019DC5                 call    _logevent
.text:00019DCA                 add     esp, 8
.text:00019DCD                 mov     ecx, [ebp+var_C]
.text:00019DD0                 push    ecx             ; int
.text:00019DD1                 push    offset _ssh2_setup_agent ; int
.text:00019DD6                 push    offset $SG92854 ; "auth-agent-req@openssh.com"
.text:00019DDB                 mov     edx, [ebp+var_4]
.text:00019DDE                 mov     eax, [edx+0FCh]
.text:00019DE4                 push    eax             ; int
.text:00019DE5                 call    _ssh2_chanreq_init
.text:00019DEA                 add     esp, 10h
.text:00019DED                 mov     [ebp+var_8], eax
.text:00019DF0                 mov     ecx, [ebp+var_8]
.text:00019DF3                 push    ecx
.text:00019DF4                 mov     edx, [ebp+var_4]
.text:00019DF7                 push    edx
.text:00019DF8                 call    _ssh2_pkt_send
.text:00019DFD                 add     esp, 8
.text:00019E00
.text:00019E00 loc_19E00:                              ; CODE XREF: _ssh2_setup_agent+C5j
.text:00019E00                 mov     eax, [ebp+var_10]
.text:00019E03                 mov     dword ptr [eax], 20F5h
.text:00019E09                 jmp     short loc_19E64
.text:00019E0B ; ---------------------------------------------------------------------------
.text:00019E0B
.text:00019E0B loc_19E0B:                              ; CODE XREF: _ssh2_setup_agent+67j
.text:00019E0B                 xor     ecx, ecx
.text:00019E0D                 jnz     short loc_19E00
.text:00019E0F                 cmp     [ebp+arg_4], 0
.text:00019E13                 jz      short loc_19E58
.text:00019E15                 mov     edx, [ebp+arg_4]
.text:00019E18                 cmp     dword ptr [edx+8], 63h ; 'c'
.text:00019E1C                 jnz     short loc_19E41
.text:00019E1E                 push    offset $SG92861 ; "Agent forwarding enabled"
.text:00019E23                 mov     eax, [ebp+var_4]
.text:00019E26                 mov     ecx, [eax+0E4h]
.text:00019E2C                 push    ecx
.text:00019E2D                 call    _logevent
.text:00019E32                 add     esp, 8
.text:00019E35                 mov     edx, [ebp+var_4]
.text:00019E38                 mov     dword ptr [edx+48h], 1
.text:00019E3F                 jmp     short loc_19E58
.text:00019E41 ; ---------------------------------------------------------------------------
.text:00019E41
.text:00019E41 loc_19E41:                              ; CODE XREF: _ssh2_setup_agent+D4j
.text:00019E41                 push    offset $SG92863 ; "Agent forwarding refused"
.text:00019E46                 mov     eax, [ebp+var_4]
.text:00019E49                 mov     ecx, [eax+0E4h]
.text:00019E4F                 push    ecx
.text:00019E50                 call    _logevent
.text:00019E55                 add     esp, 8
.text:00019E58
.text:00019E58 loc_19E58:                              ; CODE XREF: _ssh2_setup_agent+69j
.text:00019E58                                         ; _ssh2_setup_agent+CBj ...
.text:00019E58                 mov     edx, [ebp+var_C]
.text:00019E5B                 push    edx
.text:00019E5C                 call    _safefree
.text:00019E61                 add     esp, 4
.text:00019E64
.text:00019E64 loc_19E64:                              ; CODE XREF: _ssh2_setup_agent+C1j
.text:00019E64                 add     esp, 14h
.text:00019E67                 cmp     ebp, esp
.text:00019E69                 call    __RTC_CheckEsp
.text:00019E6E                 mov     esp, ebp
.text:00019E70                 pop     ebp
.text:00019E71                 retn
.text:00019E71 _ssh2_setup_agent endp
.text:00019E71
.text:00019E71 ; ---------------------------------------------------------------------------
.text:00019E72                 align 8
.text:00019E78
.text:00019E78 ; =============== S U B R O U T I N E =======================================
.text:00019E78
.text:00019E78 ; Attributes: bp-based frame
.text:00019E78
.text:00019E78 _ssh2_setup_pty proc near               ; CODE XREF: _do_ssh2_authconn+401Fp
.text:00019E78                                         ; DATA XREF: _ssh2_setup_pty+C6o
.text:00019E78
.text:00019E78 var_14          = dword ptr -14h
.text:00019E78 var_10          = dword ptr -10h
.text:00019E78 var_C           = dword ptr -0Ch
.text:00019E78 var_8           = dword ptr -8
.text:00019E78 var_4           = dword ptr -4
.text:00019E78 arg_0           = dword ptr  8
.text:00019E78 arg_4           = dword ptr  0Ch
.text:00019E78 arg_8           = dword ptr  10h
.text:00019E78
.text:00019E78                 push    ebp
.text:00019E79                 mov     ebp, esp
.text:00019E7B                 sub     esp, 14h
.text:00019E7E                 mov     eax, 0CCCCCCCCh
.text:00019E83                 mov     [ebp+var_14], eax
.text:00019E86                 mov     [ebp+var_10], eax
.text:00019E89                 mov     [ebp+var_C], eax
.text:00019E8C                 mov     [ebp+var_8], eax
.text:00019E8F                 mov     [ebp+var_4], eax
.text:00019E92                 mov     eax, [ebp+arg_0]
.text:00019E95                 mov     ecx, [eax]
.text:00019E97                 mov     [ebp+var_4], ecx
.text:00019E9A                 cmp     [ebp+arg_8], 0
.text:00019E9E                 jnz     short loc_19EBE
.text:00019EA0                 push    4
.text:00019EA2                 push    1
.text:00019EA4                 call    _safemalloc
.text:00019EA9                 add     esp, 8
.text:00019EAC                 mov     [ebp+arg_8], eax
.text:00019EAF                 mov     edx, [ebp+arg_8]
.text:00019EB2                 mov     [ebp+var_C], edx
.text:00019EB5                 mov     eax, [ebp+var_C]
.text:00019EB8                 mov     dword ptr [eax], 0
.text:00019EBE
.text:00019EBE loc_19EBE:                              ; CODE XREF: _ssh2_setup_pty+26j
.text:00019EBE                 mov     ecx, [ebp+arg_8]
.text:00019EC1                 mov     [ebp+var_C], ecx
.text:00019EC4                 mov     edx, [ebp+var_C]
.text:00019EC7                 mov     [ebp+var_10], edx
.text:00019ECA                 mov     eax, [ebp+var_C]
.text:00019ECD                 mov     ecx, [eax]
.text:00019ECF                 mov     [ebp+var_14], ecx
.text:00019ED2                 cmp     [ebp+var_14], 0
.text:00019ED6                 jz      short loc_19EEA
.text:00019ED8                 cmp     [ebp+var_14], 2126h
.text:00019EDF                 jz      loc_1A070
.text:00019EE5                 jmp     loc_1A0E2
.text:00019EEA ; ---------------------------------------------------------------------------
.text:00019EEA
.text:00019EEA loc_19EEA:                              ; CODE XREF: _ssh2_setup_pty+5Ej
.text:00019EEA                 mov     edx, [ebp+var_4]
.text:00019EED                 mov     dword ptr [edx+0E8h], 9600h
.text:00019EF7                 mov     eax, [ebp+var_4]
.text:00019EFA                 mov     dword ptr [eax+0ECh], 9600h
.text:00019F04                 mov     ecx, [ebp+var_4]
.text:00019F07                 add     ecx, 0ECh ; '8'
.text:00019F0D                 push    ecx
.text:00019F0E                 mov     edx, [ebp+var_4]
.text:00019F11                 add     edx, 0E8h ; 'F'
.text:00019F17                 push    edx
.text:00019F18                 push    offset $SG92886 ; "%d,%d"
.text:00019F1D                 push    2Fh ; '/'
.text:00019F1F                 mov     eax, [ebp+var_4]
.text:00019F22                 mov     ecx, [eax+21Ch]
.text:00019F28                 push    ecx
.text:00019F29                 call    _conf_get_str
.text:00019F2E                 add     esp, 8
.text:00019F31                 push    eax             ; Src
.text:00019F32                 call    _sscanf
.text:00019F37                 add     esp, 10h
.text:00019F3A                 mov     edx, [ebp+var_C]
.text:00019F3D                 push    edx             ; int
.text:00019F3E                 push    offset _ssh2_setup_pty ; int
.text:00019F43                 push    offset $SG92887 ; "pty-req"
.text:00019F48                 mov     eax, [ebp+var_4]
.text:00019F4B                 mov     ecx, [eax+0FCh]
.text:00019F51                 push    ecx             ; int
.text:00019F52                 call    _ssh2_chanreq_init
.text:00019F57                 add     esp, 10h
.text:00019F5A                 mov     [ebp+var_8], eax
.text:00019F5D                 push    2Eh ; '.'
.text:00019F5F                 mov     edx, [ebp+var_4]
.text:00019F62                 mov     eax, [edx+21Ch]
.text:00019F68                 push    eax
.text:00019F69                 call    _conf_get_str
.text:00019F6E                 add     esp, 8
.text:00019F71                 push    eax             ; Str
.text:00019F72                 mov     ecx, [ebp+var_8]
.text:00019F75                 push    ecx             ; int
.text:00019F76                 call    _ssh_pkt_addstring
.text:00019F7B                 add     esp, 8
.text:00019F7E                 mov     edx, [ebp+var_4]
.text:00019F81                 mov     eax, [edx+0F0h]
.text:00019F87                 push    eax
.text:00019F88                 mov     ecx, [ebp+var_8]
.text:00019F8B                 push    ecx
.text:00019F8C                 call    _ssh_pkt_adduint32
.text:00019F91                 add     esp, 8
.text:00019F94                 mov     edx, [ebp+var_4]
.text:00019F97                 mov     eax, [edx+0F4h]
.text:00019F9D                 push    eax
.text:00019F9E                 mov     ecx, [ebp+var_8]
.text:00019FA1                 push    ecx
.text:00019FA2                 call    _ssh_pkt_adduint32
.text:00019FA7                 add     esp, 8
.text:00019FAA                 push    0
.text:00019FAC                 mov     edx, [ebp+var_8]
.text:00019FAF                 push    edx
.text:00019FB0                 call    _ssh_pkt_adduint32
.text:00019FB5                 add     esp, 8
.text:00019FB8                 push    0
.text:00019FBA                 mov     eax, [ebp+var_8]
.text:00019FBD                 push    eax
.text:00019FBE                 call    _ssh_pkt_adduint32
.text:00019FC3                 add     esp, 8
.text:00019FC6                 mov     ecx, [ebp+var_8]
.text:00019FC9                 push    ecx
.text:00019FCA                 call    _ssh_pkt_addstring_start
.text:00019FCF                 add     esp, 4
.text:00019FD2                 mov     edx, [ebp+var_8]
.text:00019FD5                 push    edx
.text:00019FD6                 push    offset _ssh2_send_ttymode
.text:00019FDB                 mov     eax, [ebp+var_4]
.text:00019FDE                 push    eax
.text:00019FDF                 call    _parse_ttymodes
.text:00019FE4                 add     esp, 0Ch
.text:00019FE7                 push    80h ; 'Ç'       ; Src
.text:00019FEC                 mov     ecx, [ebp+var_8]
.text:00019FEF                 push    ecx             ; int
.text:00019FF0                 call    _ssh_pkt_addbyte
.text:00019FF5                 add     esp, 8
.text:00019FF8                 mov     edx, [ebp+var_4]
.text:00019FFB                 mov     eax, [edx+0ECh]
.text:0001A001                 push    eax
.text:0001A002                 mov     ecx, [ebp+var_8]
.text:0001A005                 push    ecx
.text:0001A006                 call    _ssh_pkt_adduint32
.text:0001A00B                 add     esp, 8
.text:0001A00E                 push    81h ; 'ü'       ; Src
.text:0001A013                 mov     edx, [ebp+var_8]
.text:0001A016                 push    edx             ; int
.text:0001A017                 call    _ssh_pkt_addbyte
.text:0001A01C                 add     esp, 8
.text:0001A01F                 mov     eax, [ebp+var_4]
.text:0001A022                 mov     ecx, [eax+0E8h]
.text:0001A028                 push    ecx
.text:0001A029                 mov     edx, [ebp+var_8]
.text:0001A02C                 push    edx
.text:0001A02D                 call    _ssh_pkt_adduint32
.text:0001A032                 add     esp, 8
.text:0001A035                 push    1               ; Size
.text:0001A037                 push    offset $SG92889 ; Src
.text:0001A03C                 mov     eax, [ebp+var_8]
.text:0001A03F                 push    eax             ; int
.text:0001A040                 call    _ssh_pkt_addstring_data
.text:0001A045                 add     esp, 0Ch
.text:0001A048                 mov     ecx, [ebp+var_8]
.text:0001A04B                 push    ecx
.text:0001A04C                 mov     edx, [ebp+var_4]
.text:0001A04F                 push    edx
.text:0001A050                 call    _ssh2_pkt_send
.text:0001A055                 add     esp, 8
.text:0001A058                 mov     eax, [ebp+var_4]
.text:0001A05B                 mov     dword ptr [eax+118h], 2
.text:0001A065
.text:0001A065 loc_1A065:                              ; CODE XREF: _ssh2_setup_pty+1FAj
.text:0001A065                 mov     ecx, [ebp+var_10]
.text:0001A068                 mov     dword ptr [ecx], 2126h
.text:0001A06E                 jmp     short loc_1A0EE
.text:0001A070 ; ---------------------------------------------------------------------------
.text:0001A070
.text:0001A070 loc_1A070:                              ; CODE XREF: _ssh2_setup_pty+67j
.text:0001A070                 xor     edx, edx
.text:0001A072                 jnz     short loc_1A065
.text:0001A074                 cmp     [ebp+arg_4], 0
.text:0001A078                 jz      short loc_1A0E2
.text:0001A07A                 mov     eax, [ebp+arg_4]
.text:0001A07D                 cmp     dword ptr [eax+8], 63h ; 'c'
.text:0001A081                 jnz     short loc_1A0B7
.text:0001A083                 mov     ecx, [ebp+var_4]
.text:0001A086                 mov     edx, [ecx+0ECh]
.text:0001A08C                 push    edx
.text:0001A08D                 mov     eax, [ebp+var_4]
.text:0001A090                 mov     ecx, [eax+0E8h]
.text:0001A096                 push    ecx
.text:0001A097                 push    offset $SG92896 ; "Allocated pty (ospeed %dbps, ispeed %db"...
.text:0001A09C                 mov     edx, [ebp+var_4]
.text:0001A09F                 push    edx
.text:0001A0A0                 call    _logeventf
.text:0001A0A5                 add     esp, 10h
.text:0001A0A8                 mov     eax, [ebp+var_4]
.text:0001A0AB                 mov     dword ptr [eax+128h], 1
.text:0001A0B5                 jmp     short loc_1A0E2
.text:0001A0B7 ; ---------------------------------------------------------------------------
.text:0001A0B7
.text:0001A0B7 loc_1A0B7:                              ; CODE XREF: _ssh2_setup_pty+209j
.text:0001A0B7                 push    offset $SG92898 ; "Server refused to allocate pty\r\n"
.text:0001A0BC                 mov     ecx, [ebp+var_4]
.text:0001A0BF                 push    ecx             ; int
.text:0001A0C0                 call    _c_write_str
.text:0001A0C5                 add     esp, 8
.text:0001A0C8                 mov     edx, [ebp+var_4]
.text:0001A0CB                 mov     dword ptr [edx+0DCh], 1
.text:0001A0D5                 mov     eax, [ebp+var_4]
.text:0001A0D8                 mov     dword ptr [eax+0E0h], 1
.text:0001A0E2
.text:0001A0E2 loc_1A0E2:                              ; CODE XREF: _ssh2_setup_pty+6Dj
.text:0001A0E2                                         ; _ssh2_setup_pty+200j ...
.text:0001A0E2                 mov     ecx, [ebp+var_C]
.text:0001A0E5                 push    ecx
.text:0001A0E6                 call    _safefree
.text:0001A0EB                 add     esp, 4
.text:0001A0EE
.text:0001A0EE loc_1A0EE:                              ; CODE XREF: _ssh2_setup_pty+1F6j
.text:0001A0EE                 add     esp, 14h
.text:0001A0F1                 cmp     ebp, esp
.text:0001A0F3                 call    __RTC_CheckEsp
.text:0001A0F8                 mov     esp, ebp
.text:0001A0FA                 pop     ebp
.text:0001A0FB                 retn
.text:0001A0FB _ssh2_setup_pty endp
.text:0001A0FB
.text:0001A0FB ; ---------------------------------------------------------------------------
.text:0001A0FC                 db 0Ch dup(0CCh)
.text:0001A108
.text:0001A108 ; =============== S U B R O U T I N E =======================================
.text:0001A108
.text:0001A108 ; Attributes: bp-based frame
.text:0001A108
.text:0001A108 _parse_ttymodes proc near               ; CODE XREF: _ssh2_setup_pty+167p
.text:0001A108                                         ; _do_ssh1_connection+4EEp
.text:0001A108
.text:0001A108 var_10          = dword ptr -10h
.text:0001A108 var_C           = dword ptr -0Ch
.text:0001A108 var_8           = dword ptr -8
.text:0001A108 var_4           = dword ptr -4
.text:0001A108 arg_0           = dword ptr  8
.text:0001A108 arg_4           = dword ptr  0Ch
.text:0001A108 arg_8           = dword ptr  10h
.text:0001A108
.text:0001A108                 push    ebp
.text:0001A109                 mov     ebp, esp
.text:0001A10B                 sub     esp, 10h
.text:0001A10E                 push    esi
.text:0001A10F                 mov     eax, 0CCCCCCCCh
.text:0001A114                 mov     [ebp+var_10], eax
.text:0001A117                 mov     [ebp+var_C], eax
.text:0001A11A                 mov     [ebp+var_8], eax
.text:0001A11D                 mov     [ebp+var_4], eax
.text:0001A120                 lea     eax, [ebp+var_8]
.text:0001A123                 push    eax
.text:0001A124                 push    0
.text:0001A126                 push    30h ; '0'
.text:0001A128                 mov     ecx, [ebp+arg_0]
.text:0001A12B                 mov     edx, [ecx+21Ch]
.text:0001A131                 push    edx
.text:0001A132                 call    _conf_get_str_strs
.text:0001A137                 add     esp, 10h
.text:0001A13A                 mov     [ebp+var_10], eax
.text:0001A13D                 jmp     short loc_1A15E
.text:0001A13F ; ---------------------------------------------------------------------------
.text:0001A13F
.text:0001A13F loc_1A13F:                              ; CODE XREF: _parse_ttymodes:loc_1A1D5j
.text:0001A13F                 lea     eax, [ebp+var_8]
.text:0001A142                 push    eax
.text:0001A143                 mov     ecx, [ebp+var_8]
.text:0001A146                 push    ecx
.text:0001A147                 push    30h ; '0'
.text:0001A149                 mov     edx, [ebp+arg_0]
.text:0001A14C                 mov     eax, [edx+21Ch]
.text:0001A152                 push    eax
.text:0001A153                 call    _conf_get_str_strs
.text:0001A158                 add     esp, 10h
.text:0001A15B                 mov     [ebp+var_10], eax
.text:0001A15E
.text:0001A15E loc_1A15E:                              ; CODE XREF: _parse_ttymodes+35j
.text:0001A15E                 cmp     [ebp+var_10], 0
.text:0001A162                 jz      short loc_1A1DA
.text:0001A164                 mov     ecx, [ebp+var_10]
.text:0001A167                 movsx   edx, byte ptr [ecx]
.text:0001A16A                 cmp     edx, 41h ; 'A'
.text:0001A16D                 jnz     short loc_1A1B7
.text:0001A16F                 mov     eax, [ebp+var_8]
.text:0001A172                 push    eax
.text:0001A173                 mov     ecx, [ebp+arg_0]
.text:0001A176                 mov     edx, [ecx+0E4h]
.text:0001A17C                 push    edx
.text:0001A17D                 call    _get_ttymode
.text:0001A182                 add     esp, 8
.text:0001A185                 mov     [ebp+var_10], eax
.text:0001A188                 cmp     [ebp+var_10], 0
.text:0001A18C                 jz      short loc_1A1B5
.text:0001A18E                 mov     esi, esp
.text:0001A190                 mov     eax, [ebp+var_10]
.text:0001A193                 push    eax
.text:0001A194                 mov     ecx, [ebp+var_8]
.text:0001A197                 push    ecx
.text:0001A198                 mov     edx, [ebp+arg_8]
.text:0001A19B                 push    edx
.text:0001A19C                 call    [ebp+arg_4]
.text:0001A19F                 add     esp, 0Ch
.text:0001A1A2                 cmp     esi, esp
.text:0001A1A4                 call    __RTC_CheckEsp
.text:0001A1A9                 mov     eax, [ebp+var_10]
.text:0001A1AC                 push    eax
.text:0001A1AD                 call    _safefree
.text:0001A1B2                 add     esp, 4
.text:0001A1B5
.text:0001A1B5 loc_1A1B5:                              ; CODE XREF: _parse_ttymodes+84j
.text:0001A1B5                 jmp     short loc_1A1D5
.text:0001A1B7 ; ---------------------------------------------------------------------------
.text:0001A1B7
.text:0001A1B7 loc_1A1B7:                              ; CODE XREF: _parse_ttymodes+65j
.text:0001A1B7                 mov     ecx, [ebp+var_10]
.text:0001A1BA                 add     ecx, 1
.text:0001A1BD                 mov     esi, esp
.text:0001A1BF                 push    ecx
.text:0001A1C0                 mov     edx, [ebp+var_8]
.text:0001A1C3                 push    edx
.text:0001A1C4                 mov     eax, [ebp+arg_8]
.text:0001A1C7                 push    eax
.text:0001A1C8                 call    [ebp+arg_4]
.text:0001A1CB                 add     esp, 0Ch
.text:0001A1CE                 cmp     esi, esp
.text:0001A1D0                 call    __RTC_CheckEsp
.text:0001A1D5
.text:0001A1D5 loc_1A1D5:                              ; CODE XREF: _parse_ttymodes:loc_1A1B5j
.text:0001A1D5                 jmp     loc_1A13F
.text:0001A1DA ; ---------------------------------------------------------------------------
.text:0001A1DA
.text:0001A1DA loc_1A1DA:                              ; CODE XREF: _parse_ttymodes+5Aj
.text:0001A1DA                 push    edx
.text:0001A1DB                 mov     ecx, ebp
.text:0001A1DD                 push    eax
.text:0001A1DE                 lea     edx, $LN11_3
.text:0001A1E4                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0001A1E9                 pop     eax
.text:0001A1EA                 pop     edx
.text:0001A1EB                 pop     esi
.text:0001A1EC                 add     esp, 10h
.text:0001A1EF                 cmp     ebp, esp
.text:0001A1F1                 call    __RTC_CheckEsp
.text:0001A1F6                 mov     esp, ebp
.text:0001A1F8                 pop     ebp
.text:0001A1F9                 retn
.text:0001A1F9 _parse_ttymodes endp
.text:0001A1F9
.text:0001A1F9 ; ---------------------------------------------------------------------------
.text:0001A1FA                 align 4
.text:0001A1FC $LN11_3         dd 1                    ; DATA XREF: _parse_ttymodes+D6o
.text:0001A200                 dd offset $LN10_6
.text:0001A204 $LN10_6         dd 0FFFFFFF8h, 4        ; DATA XREF: .text:0001A200o
.text:0001A20C                 dd offset $LN9_5
.text:0001A210 $LN9_5          dd 79656Bh, 0CCCCCCCCh  ; DATA XREF: .text:0001A20Co
.text:0001A218
.text:0001A218 ; =============== S U B R O U T I N E =======================================
.text:0001A218
.text:0001A218 ; Attributes: bp-based frame
.text:0001A218
.text:0001A218 ; int __cdecl ssh2_send_ttymode(int, char *Str1, char *)
.text:0001A218 _ssh2_send_ttymode proc near            ; DATA XREF: _ssh2_setup_pty+15Eo
.text:0001A218
.text:0001A218 var_10          = dword ptr -10h
.text:0001A218 var_C           = dword ptr -0Ch
.text:0001A218 var_8           = dword ptr -8
.text:0001A218 var_4           = dword ptr -4
.text:0001A218 arg_0           = dword ptr  8
.text:0001A218 Str1            = dword ptr  0Ch
.text:0001A218 arg_8           = dword ptr  10h
.text:0001A218
.text:0001A218                 push    ebp
.text:0001A219                 mov     ebp, esp
.text:0001A21B                 sub     esp, 10h
.text:0001A21E                 mov     eax, 0CCCCCCCCh
.text:0001A223                 mov     [ebp+var_10], eax
.text:0001A226                 mov     [ebp+var_C], eax
.text:0001A229                 mov     [ebp+var_8], eax
.text:0001A22C                 mov     [ebp+var_4], eax
.text:0001A22F                 mov     eax, [ebp+arg_0]
.text:0001A232                 mov     [ebp+var_4], eax
.text:0001A235                 mov     [ebp+var_8], 0
.text:0001A23C                 mov     [ebp+var_C], 0
.text:0001A243
.text:0001A243 loc_1A243:                              ; CODE XREF: _ssh2_send_ttymode+51j
.text:0001A243                 mov     ecx, [ebp+var_8]
.text:0001A246                 imul    ecx, 0Ch
.text:0001A249                 mov     edx, ds:_ssh_ttymodes[ecx]
.text:0001A24F                 push    edx             ; Str2
.text:0001A250                 mov     eax, [ebp+Str1]
.text:0001A253                 push    eax             ; Str1
.text:0001A254                 call    _strcmp
.text:0001A259                 add     esp, 8
.text:0001A25C                 test    eax, eax
.text:0001A25E                 jz      short loc_1A26B
.text:0001A260                 mov     ecx, [ebp+var_8]
.text:0001A263                 add     ecx, 1
.text:0001A266                 mov     [ebp+var_8], ecx
.text:0001A269                 jmp     short loc_1A243
.text:0001A26B ; ---------------------------------------------------------------------------
.text:0001A26B
.text:0001A26B loc_1A26B:                              ; CODE XREF: _ssh2_send_ttymode+46j
.text:0001A26B                 cmp     [ebp+var_8], 35h ; '5'
.text:0001A26F                 jnz     short loc_1A273
.text:0001A271                 jmp     short loc_1A2DA
.text:0001A273 ; ---------------------------------------------------------------------------
.text:0001A273
.text:0001A273 loc_1A273:                              ; CODE XREF: _ssh2_send_ttymode+57j
.text:0001A273                 mov     edx, [ebp+var_8]
.text:0001A276                 imul    edx, 0Ch
.text:0001A279                 mov     eax, ds:dword_62C4[edx]
.text:0001A27F                 mov     [ebp+var_10], eax
.text:0001A282                 cmp     [ebp+var_10], 0
.text:0001A286                 jz      short loc_1A290
.text:0001A288                 cmp     [ebp+var_10], 1
.text:0001A28C                 jz      short loc_1A2A1
.text:0001A28E                 jmp     short loc_1A2B0
.text:0001A290 ; ---------------------------------------------------------------------------
.text:0001A290
.text:0001A290 loc_1A290:                              ; CODE XREF: _ssh2_send_ttymode+6Ej
.text:0001A290                 mov     ecx, [ebp+arg_8]
.text:0001A293                 push    ecx
.text:0001A294                 call    _ssh_tty_parse_specchar
.text:0001A299                 add     esp, 4
.text:0001A29C                 mov     [ebp+var_C], eax
.text:0001A29F                 jmp     short loc_1A2B0
.text:0001A2A1 ; ---------------------------------------------------------------------------
.text:0001A2A1
.text:0001A2A1 loc_1A2A1:                              ; CODE XREF: _ssh2_send_ttymode+74j
.text:0001A2A1                 mov     edx, [ebp+arg_8]
.text:0001A2A4                 push    edx             ; Str1
.text:0001A2A5                 call    _ssh_tty_parse_boolean
.text:0001A2AA                 add     esp, 4
.text:0001A2AD                 mov     [ebp+var_C], eax
.text:0001A2B0
.text:0001A2B0 loc_1A2B0:                              ; CODE XREF: _ssh2_send_ttymode+76j
.text:0001A2B0                                         ; _ssh2_send_ttymode+87j
.text:0001A2B0                 mov     eax, [ebp+var_8]
.text:0001A2B3                 imul    eax, 0Ch
.text:0001A2B6                 movzx   ecx, ds:byte_62C0[eax]
.text:0001A2BD                 push    ecx             ; Src
.text:0001A2BE                 mov     edx, [ebp+var_4]
.text:0001A2C1                 push    edx             ; int
.text:0001A2C2                 call    _ssh_pkt_addbyte
.text:0001A2C7                 add     esp, 8
.text:0001A2CA                 mov     eax, [ebp+var_C]
.text:0001A2CD                 push    eax
.text:0001A2CE                 mov     ecx, [ebp+var_4]
.text:0001A2D1                 push    ecx
.text:0001A2D2                 call    _ssh_pkt_adduint32
.text:0001A2D7                 add     esp, 8
.text:0001A2DA
.text:0001A2DA loc_1A2DA:                              ; CODE XREF: _ssh2_send_ttymode+59j
.text:0001A2DA                 add     esp, 10h
.text:0001A2DD                 cmp     ebp, esp
.text:0001A2DF                 call    __RTC_CheckEsp
.text:0001A2E4                 mov     esp, ebp
.text:0001A2E6                 pop     ebp
.text:0001A2E7                 retn
.text:0001A2E7 _ssh2_send_ttymode endp
.text:0001A2E7
.text:0001A2E8
.text:0001A2E8 ; =============== S U B R O U T I N E =======================================
.text:0001A2E8
.text:0001A2E8 ; Attributes: bp-based frame
.text:0001A2E8
.text:0001A2E8 _ssh_tty_parse_specchar proc near       ; CODE XREF: _ssh2_send_ttymode+7Cp
.text:0001A2E8                                         ; _ssh1_send_ttymode+7Cp
.text:0001A2E8
.text:0001A2E8 var_10          = dword ptr -10h
.text:0001A2E8 var_C           = dword ptr -0Ch
.text:0001A2E8 var_8           = dword ptr -8
.text:0001A2E8 var_4           = dword ptr -4
.text:0001A2E8 arg_0           = dword ptr  8
.text:0001A2E8
.text:0001A2E8                 push    ebp
.text:0001A2E9                 mov     ebp, esp
.text:0001A2EB                 sub     esp, 10h
.text:0001A2EE                 mov     eax, 0CCCCCCCCh
.text:0001A2F3                 mov     [ebp+var_10], eax
.text:0001A2F6                 mov     [ebp+var_C], eax
.text:0001A2F9                 mov     [ebp+var_8], eax
.text:0001A2FC                 mov     [ebp+var_4], eax
.text:0001A2FF                 mov     eax, [ebp+arg_0]
.text:0001A302                 movsx   ecx, byte ptr [eax]
.text:0001A305                 test    ecx, ecx
.text:0001A307                 jz      short loc_1A337
.text:0001A309                 mov     [ebp+var_C], 0
.text:0001A310                 lea     edx, [ebp+var_C]
.text:0001A313                 push    edx
.text:0001A314                 mov     eax, [ebp+arg_0]
.text:0001A317                 push    eax
.text:0001A318                 call    _ctrlparse
.text:0001A31D                 add     esp, 8
.text:0001A320                 movsx   ecx, al
.text:0001A323                 mov     [ebp+var_4], ecx
.text:0001A326                 cmp     [ebp+var_C], 0
.text:0001A32A                 jnz     short loc_1A335
.text:0001A32C                 mov     edx, [ebp+arg_0]
.text:0001A32F                 movsx   eax, byte ptr [edx]
.text:0001A332                 mov     [ebp+var_4], eax
.text:0001A335
.text:0001A335 loc_1A335:                              ; CODE XREF: _ssh_tty_parse_specchar+42j
.text:0001A335                 jmp     short loc_1A33E
.text:0001A337 ; ---------------------------------------------------------------------------
.text:0001A337
.text:0001A337 loc_1A337:                              ; CODE XREF: _ssh_tty_parse_specchar+1Fj
.text:0001A337                 mov     [ebp+var_4], 0FFh
.text:0001A33E
.text:0001A33E loc_1A33E:                              ; CODE XREF: _ssh_tty_parse_specchar:loc_1A335j
.text:0001A33E                 mov     eax, [ebp+var_4]
.text:0001A341                 push    edx
.text:0001A342                 mov     ecx, ebp
.text:0001A344                 push    eax
.text:0001A345                 lea     edx, $LN8_6
.text:0001A34B                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0001A350                 pop     eax
.text:0001A351                 pop     edx
.text:0001A352                 add     esp, 10h
.text:0001A355                 cmp     ebp, esp
.text:0001A357                 call    __RTC_CheckEsp
.text:0001A35C                 mov     esp, ebp
.text:0001A35E                 pop     ebp
.text:0001A35F                 retn
.text:0001A35F _ssh_tty_parse_specchar endp
.text:0001A35F
.text:0001A35F ; ---------------------------------------------------------------------------
.text:0001A360 $LN8_6          dd 1                    ; DATA XREF: _ssh_tty_parse_specchar+5Do
.text:0001A364                 dd offset $LN7_4
.text:0001A368 $LN7_4          dd 0FFFFFFF4h, 4        ; DATA XREF: .text:0001A364o
.text:0001A370                 dd offset $LN6_6        ; "next"
.text:0001A374 $LN6_6          db 'next',0             ; DATA XREF: .text:0001A370o
.text:0001A379                 db 0Fh dup(0CCh)
.text:0001A388
.text:0001A388 ; =============== S U B R O U T I N E =======================================
.text:0001A388
.text:0001A388 ; Attributes: bp-based frame
.text:0001A388
.text:0001A388 ; int __cdecl ssh_tty_parse_boolean(char *Str1)
.text:0001A388 _ssh_tty_parse_boolean proc near        ; CODE XREF: _ssh2_send_ttymode+8Dp
.text:0001A388                                         ; _ssh1_send_ttymode+8Dp
.text:0001A388
.text:0001A388 Str1            = dword ptr  8
.text:0001A388
.text:0001A388                 push    ebp
.text:0001A389                 mov     ebp, esp
.text:0001A38B                 push    offset $SG87386 ; "yes"
.text:0001A390                 mov     eax, [ebp+Str1]
.text:0001A393                 push    eax             ; Str1
.text:0001A394                 call    _stricmp
.text:0001A399                 add     esp, 8
.text:0001A39C                 test    eax, eax
.text:0001A39E                 jz      short loc_1A3DF
.text:0001A3A0                 push    offset $SG87387 ; Str2
.text:0001A3A5                 mov     ecx, [ebp+Str1]
.text:0001A3A8                 push    ecx             ; Str1
.text:0001A3A9                 call    _stricmp
.text:0001A3AE                 add     esp, 8
.text:0001A3B1                 test    eax, eax
.text:0001A3B3                 jz      short loc_1A3DF
.text:0001A3B5                 push    offset $SG87388 ; "true"
.text:0001A3BA                 mov     edx, [ebp+Str1]
.text:0001A3BD                 push    edx             ; Str1
.text:0001A3BE                 call    _stricmp
.text:0001A3C3                 add     esp, 8
.text:0001A3C6                 test    eax, eax
.text:0001A3C8                 jz      short loc_1A3DF
.text:0001A3CA                 push    offset $SG87389 ; Str2
.text:0001A3CF                 mov     eax, [ebp+Str1]
.text:0001A3D2                 push    eax             ; Str1
.text:0001A3D3                 call    _stricmp
.text:0001A3D8                 add     esp, 8
.text:0001A3DB                 test    eax, eax
.text:0001A3DD                 jnz     short loc_1A3E8
.text:0001A3DF
.text:0001A3DF loc_1A3DF:                              ; CODE XREF: _ssh_tty_parse_boolean+16j
.text:0001A3DF                                         ; _ssh_tty_parse_boolean+2Bj ...
.text:0001A3DF                 mov     eax, 1
.text:0001A3E4                 jmp     short loc_1A454
.text:0001A3E6 ; ---------------------------------------------------------------------------
.text:0001A3E6                 jmp     short loc_1A454
.text:0001A3E8 ; ---------------------------------------------------------------------------
.text:0001A3E8
.text:0001A3E8 loc_1A3E8:                              ; CODE XREF: _ssh_tty_parse_boolean+55j
.text:0001A3E8                 push    offset $SG87393 ; Str2
.text:0001A3ED                 mov     ecx, [ebp+Str1]
.text:0001A3F0                 push    ecx             ; Str1
.text:0001A3F1                 call    _stricmp
.text:0001A3F6                 add     esp, 8
.text:0001A3F9                 test    eax, eax
.text:0001A3FB                 jz      short loc_1A43C
.text:0001A3FD                 push    offset $SG87394 ; "off"
.text:0001A402                 mov     edx, [ebp+Str1]
.text:0001A405                 push    edx             ; Str1
.text:0001A406                 call    _stricmp
.text:0001A40B                 add     esp, 8
.text:0001A40E                 test    eax, eax
.text:0001A410                 jz      short loc_1A43C
.text:0001A412                 push    offset $SG87395 ; "false"
.text:0001A417                 mov     eax, [ebp+Str1]
.text:0001A41A                 push    eax             ; Str1
.text:0001A41B                 call    _stricmp
.text:0001A420                 add     esp, 8
.text:0001A423                 test    eax, eax
.text:0001A425                 jz      short loc_1A43C
.text:0001A427                 push    offset $SG87396 ; Str2
.text:0001A42C                 mov     ecx, [ebp+Str1]
.text:0001A42F                 push    ecx             ; Str1
.text:0001A430                 call    _stricmp
.text:0001A435                 add     esp, 8
.text:0001A438                 test    eax, eax
.text:0001A43A                 jnz     short loc_1A442
.text:0001A43C
.text:0001A43C loc_1A43C:                              ; CODE XREF: _ssh_tty_parse_boolean+73j
.text:0001A43C                                         ; _ssh_tty_parse_boolean+88j ...
.text:0001A43C                 xor     eax, eax
.text:0001A43E                 jmp     short loc_1A454
.text:0001A440 ; ---------------------------------------------------------------------------
.text:0001A440                 jmp     short loc_1A454
.text:0001A442 ; ---------------------------------------------------------------------------
.text:0001A442
.text:0001A442 loc_1A442:                              ; CODE XREF: _ssh_tty_parse_boolean+B2j
.text:0001A442                 mov     edx, [ebp+Str1]
.text:0001A445                 push    edx             ; Str
.text:0001A446                 call    _atoi
.text:0001A44B                 add     esp, 4
.text:0001A44E                 neg     eax
.text:0001A450                 sbb     eax, eax
.text:0001A452                 neg     eax
.text:0001A454
.text:0001A454 loc_1A454:                              ; CODE XREF: _ssh_tty_parse_boolean+5Cj
.text:0001A454                                         ; _ssh_tty_parse_boolean+5Ej ...
.text:0001A454                 cmp     ebp, esp
.text:0001A456                 call    __RTC_CheckEsp
.text:0001A45B                 pop     ebp
.text:0001A45C                 retn
.text:0001A45C _ssh_tty_parse_boolean endp
.text:0001A45C
.text:0001A45C ; ---------------------------------------------------------------------------
.text:0001A45D                 db 0Bh dup(0CCh)
.text:0001A468
.text:0001A468 ; =============== S U B R O U T I N E =======================================
.text:0001A468
.text:0001A468 ; Attributes: bp-based frame
.text:0001A468
.text:0001A468 _ssh2_setup_env proc near               ; CODE XREF: _do_ssh2_authconn+4035p
.text:0001A468                                         ; DATA XREF: _ssh2_setup_env+D0o
.text:0001A468
.text:0001A468 var_24          = dword ptr -24h
.text:0001A468 var_20          = dword ptr -20h
.text:0001A468 var_1C          = dword ptr -1Ch
.text:0001A468 Str             = dword ptr -18h
.text:0001A468 var_14          = dword ptr -14h
.text:0001A468 var_10          = dword ptr -10h
.text:0001A468 var_C           = dword ptr -0Ch
.text:0001A468 var_8           = dword ptr -8
.text:0001A468 var_4           = dword ptr -4
.text:0001A468 arg_0           = dword ptr  8
.text:0001A468 arg_4           = dword ptr  0Ch
.text:0001A468 arg_8           = dword ptr  10h
.text:0001A468
.text:0001A468                 push    ebp
.text:0001A469                 mov     ebp, esp
.text:0001A46B                 sub     esp, 24h
.text:0001A46E                 mov     eax, 0CCCCCCCCh
.text:0001A473                 mov     [ebp+var_24], eax
.text:0001A476                 mov     [ebp+var_20], eax
.text:0001A479                 mov     [ebp+var_1C], eax
.text:0001A47C                 mov     [ebp+Str], eax
.text:0001A47F                 mov     [ebp+var_14], eax
.text:0001A482                 mov     [ebp+var_10], eax
.text:0001A485                 mov     [ebp+var_C], eax
.text:0001A488                 mov     [ebp+var_8], eax
.text:0001A48B                 mov     [ebp+var_4], eax
.text:0001A48E                 mov     eax, [ebp+arg_0]
.text:0001A491                 mov     ecx, [eax]
.text:0001A493                 mov     [ebp+var_4], ecx
.text:0001A496                 cmp     [ebp+arg_8], 0
.text:0001A49A                 jnz     short loc_1A4BA
.text:0001A49C                 push    10h
.text:0001A49E                 push    1
.text:0001A4A0                 call    _safemalloc
.text:0001A4A5                 add     esp, 8
.text:0001A4A8                 mov     [ebp+arg_8], eax
.text:0001A4AB                 mov     edx, [ebp+arg_8]
.text:0001A4AE                 mov     [ebp+var_C], edx
.text:0001A4B1                 mov     eax, [ebp+var_C]
.text:0001A4B4                 mov     dword ptr [eax], 0
.text:0001A4BA
.text:0001A4BA loc_1A4BA:                              ; CODE XREF: _ssh2_setup_env+32j
.text:0001A4BA                 mov     ecx, [ebp+arg_8]
.text:0001A4BD                 mov     [ebp+var_C], ecx
.text:0001A4C0                 mov     edx, [ebp+var_C]
.text:0001A4C3                 mov     [ebp+var_10], edx
.text:0001A4C6                 mov     eax, [ebp+var_C]
.text:0001A4C9                 mov     ecx, [eax]
.text:0001A4CB                 mov     [ebp+var_24], ecx
.text:0001A4CE                 cmp     [ebp+var_24], 0
.text:0001A4D2                 jz      short loc_1A4E6
.text:0001A4D4                 cmp     [ebp+var_24], 2162h
.text:0001A4DB                 jz      loc_1A5F6
.text:0001A4E1                 jmp     $out$92943
.text:0001A4E6 ; ---------------------------------------------------------------------------
.text:0001A4E6
.text:0001A4E6 loc_1A4E6:                              ; CODE XREF: _ssh2_setup_env+6Aj
.text:0001A4E6                 mov     edx, [ebp+var_C]
.text:0001A4E9                 mov     dword ptr [edx+4], 0
.text:0001A4F0                 lea     eax, [ebp+Str]
.text:0001A4F3                 push    eax
.text:0001A4F4                 push    0
.text:0001A4F6                 push    31h ; '1'
.text:0001A4F8                 mov     ecx, [ebp+var_4]
.text:0001A4FB                 mov     edx, [ecx+21Ch]
.text:0001A501                 push    edx
.text:0001A502                 call    _conf_get_str_strs
.text:0001A507                 add     esp, 10h
.text:0001A50A                 mov     [ebp+var_20], eax
.text:0001A50D                 jmp     short loc_1A52E
.text:0001A50F ; ---------------------------------------------------------------------------
.text:0001A50F
.text:0001A50F loc_1A50F:                              ; CODE XREF: _ssh2_setup_env+12Ej
.text:0001A50F                 lea     eax, [ebp+Str]
.text:0001A512                 push    eax
.text:0001A513                 mov     ecx, [ebp+Str]
.text:0001A516                 push    ecx
.text:0001A517                 push    31h ; '1'
.text:0001A519                 mov     edx, [ebp+var_4]
.text:0001A51C                 mov     eax, [edx+21Ch]
.text:0001A522                 push    eax
.text:0001A523                 call    _conf_get_str_strs
.text:0001A528                 add     esp, 10h
.text:0001A52B                 mov     [ebp+var_20], eax
.text:0001A52E
.text:0001A52E loc_1A52E:                              ; CODE XREF: _ssh2_setup_env+A5j
.text:0001A52E                 cmp     [ebp+var_20], 0
.text:0001A532                 jz      short loc_1A59B
.text:0001A534                 mov     ecx, [ebp+var_C]
.text:0001A537                 push    ecx             ; int
.text:0001A538                 push    offset _ssh2_setup_env ; int
.text:0001A53D                 push    offset $SG92931 ; "env"
.text:0001A542                 mov     edx, [ebp+var_4]
.text:0001A545                 mov     eax, [edx+0FCh]
.text:0001A54B                 push    eax             ; int
.text:0001A54C                 call    _ssh2_chanreq_init
.text:0001A551                 add     esp, 10h
.text:0001A554                 mov     [ebp+var_8], eax
.text:0001A557                 mov     ecx, [ebp+Str]
.text:0001A55A                 push    ecx             ; Str
.text:0001A55B                 mov     edx, [ebp+var_8]
.text:0001A55E                 push    edx             ; int
.text:0001A55F                 call    _ssh_pkt_addstring
.text:0001A564                 add     esp, 8
.text:0001A567                 mov     eax, [ebp+var_20]
.text:0001A56A                 push    eax             ; Str
.text:0001A56B                 mov     ecx, [ebp+var_8]
.text:0001A56E                 push    ecx             ; int
.text:0001A56F                 call    _ssh_pkt_addstring
.text:0001A574                 add     esp, 8
.text:0001A577                 mov     edx, [ebp+var_8]
.text:0001A57A                 push    edx
.text:0001A57B                 mov     eax, [ebp+var_4]
.text:0001A57E                 push    eax
.text:0001A57F                 call    _ssh2_pkt_send
.text:0001A584                 add     esp, 8
.text:0001A587                 mov     ecx, [ebp+var_C]
.text:0001A58A                 mov     edx, [ecx+4]
.text:0001A58D                 add     edx, 1
.text:0001A590                 mov     eax, [ebp+var_C]
.text:0001A593                 mov     [eax+4], edx
.text:0001A596                 jmp     loc_1A50F
.text:0001A59B ; ---------------------------------------------------------------------------
.text:0001A59B
.text:0001A59B loc_1A59B:                              ; CODE XREF: _ssh2_setup_env+CAj
.text:0001A59B                 mov     ecx, [ebp+var_C]
.text:0001A59E                 cmp     dword ptr [ecx+4], 0
.text:0001A5A2                 jz      short loc_1A5BC
.text:0001A5A4                 mov     edx, [ebp+var_C]
.text:0001A5A7                 mov     eax, [edx+4]
.text:0001A5AA                 push    eax
.text:0001A5AB                 push    offset $SG92933 ; "Sent %d environment variables"
.text:0001A5B0                 mov     ecx, [ebp+var_4]
.text:0001A5B3                 push    ecx
.text:0001A5B4                 call    _logeventf
.text:0001A5B9                 add     esp, 0Ch
.text:0001A5BC
.text:0001A5BC loc_1A5BC:                              ; CODE XREF: _ssh2_setup_env+13Aj
.text:0001A5BC                 mov     edx, [ebp+var_C]
.text:0001A5BF                 cmp     dword ptr [edx+4], 0
.text:0001A5C3                 jz      $out$92943
.text:0001A5C9                 mov     eax, [ebp+var_C]
.text:0001A5CC                 mov     dword ptr [eax+0Ch], 0
.text:0001A5D3                 mov     ecx, [ebp+var_C]
.text:0001A5D6                 mov     edx, [ebp+var_C]
.text:0001A5D9                 mov     eax, [edx+4]
.text:0001A5DC                 mov     [ecx+8], eax
.text:0001A5DF
.text:0001A5DF loc_1A5DF:                              ; CODE XREF: _ssh2_setup_env+1C4j
.text:0001A5DF                 mov     ecx, [ebp+var_C]
.text:0001A5E2                 cmp     dword ptr [ecx+8], 0
.text:0001A5E6                 jle     short loc_1A62E
.text:0001A5E8
.text:0001A5E8 loc_1A5E8:                              ; CODE XREF: _ssh2_setup_env+190j
.text:0001A5E8                 mov     edx, [ebp+var_10]
.text:0001A5EB                 mov     dword ptr [edx], 2162h
.text:0001A5F1                 jmp     loc_1A6C3
.text:0001A5F6 ; ---------------------------------------------------------------------------
.text:0001A5F6
.text:0001A5F6 loc_1A5F6:                              ; CODE XREF: _ssh2_setup_env+73j
.text:0001A5F6                 xor     eax, eax
.text:0001A5F8                 jnz     short loc_1A5E8
.text:0001A5FA                 cmp     [ebp+arg_4], 0
.text:0001A5FE                 jnz     short loc_1A605
.text:0001A600                 jmp     $out$92943
.text:0001A605 ; ---------------------------------------------------------------------------
.text:0001A605
.text:0001A605 loc_1A605:                              ; CODE XREF: _ssh2_setup_env+196j
.text:0001A605                 mov     ecx, [ebp+arg_4]
.text:0001A608                 cmp     dword ptr [ecx+8], 63h ; 'c'
.text:0001A60C                 jnz     short loc_1A61D
.text:0001A60E                 mov     edx, [ebp+var_C]
.text:0001A611                 mov     eax, [edx+0Ch]
.text:0001A614                 add     eax, 1
.text:0001A617                 mov     ecx, [ebp+var_C]
.text:0001A61A                 mov     [ecx+0Ch], eax
.text:0001A61D
.text:0001A61D loc_1A61D:                              ; CODE XREF: _ssh2_setup_env+1A4j
.text:0001A61D                 mov     edx, [ebp+var_C]
.text:0001A620                 mov     eax, [edx+8]
.text:0001A623                 sub     eax, 1
.text:0001A626                 mov     ecx, [ebp+var_C]
.text:0001A629                 mov     [ecx+8], eax
.text:0001A62C                 jmp     short loc_1A5DF
.text:0001A62E ; ---------------------------------------------------------------------------
.text:0001A62E
.text:0001A62E loc_1A62E:                              ; CODE XREF: _ssh2_setup_env+17Ej
.text:0001A62E                 mov     edx, [ebp+var_C]
.text:0001A631                 mov     eax, [ebp+var_C]
.text:0001A634                 mov     ecx, [edx+0Ch]
.text:0001A637                 cmp     ecx, [eax+4]
.text:0001A63A                 jnz     short loc_1A655
.text:0001A63C                 push    offset $SG92946 ; "All environment variables successfully "...
.text:0001A641                 mov     edx, [ebp+var_4]
.text:0001A644                 mov     eax, [edx+0E4h]
.text:0001A64A                 push    eax
.text:0001A64B                 call    _logevent
.text:0001A650                 add     esp, 8
.text:0001A653                 jmp     short $out$92943
.text:0001A655 ; ---------------------------------------------------------------------------
.text:0001A655
.text:0001A655 loc_1A655:                              ; CODE XREF: _ssh2_setup_env+1D2j
.text:0001A655                 mov     ecx, [ebp+var_C]
.text:0001A658                 cmp     dword ptr [ecx+0Ch], 0
.text:0001A65C                 jnz     short loc_1A688
.text:0001A65E                 push    offset $SG92949 ; "All environment variables refused"
.text:0001A663                 mov     edx, [ebp+var_4]
.text:0001A666                 mov     eax, [edx+0E4h]
.text:0001A66C                 push    eax
.text:0001A66D                 call    _logevent
.text:0001A672                 add     esp, 8
.text:0001A675                 push    offset $SG92950 ; "Server refused to set environment varia"...
.text:0001A67A                 mov     ecx, [ebp+var_4]
.text:0001A67D                 push    ecx             ; int
.text:0001A67E                 call    _c_write_str
.text:0001A683                 add     esp, 8
.text:0001A686                 jmp     short $out$92943
.text:0001A688 ; ---------------------------------------------------------------------------
.text:0001A688
.text:0001A688 loc_1A688:                              ; CODE XREF: _ssh2_setup_env+1F4j
.text:0001A688                 mov     edx, [ebp+var_C]
.text:0001A68B                 mov     eax, [ebp+var_C]
.text:0001A68E                 mov     ecx, [edx+4]
.text:0001A691                 sub     ecx, [eax+0Ch]
.text:0001A694                 push    ecx
.text:0001A695                 push    offset $SG92952 ; "%d environment variables refused"
.text:0001A69A                 mov     edx, [ebp+var_4]
.text:0001A69D                 push    edx
.text:0001A69E                 call    _logeventf
.text:0001A6A3                 add     esp, 0Ch
.text:0001A6A6                 push    offset $SG92953 ; "Server refused to set all environment v"...
.text:0001A6AB                 mov     eax, [ebp+var_4]
.text:0001A6AE                 push    eax             ; int
.text:0001A6AF                 call    _c_write_str
.text:0001A6B4                 add     esp, 8
.text:0001A6B7
.text:0001A6B7 $out$92943:                             ; CODE XREF: _ssh2_setup_env+79j
.text:0001A6B7                                         ; _ssh2_setup_env+15Bj ...
.text:0001A6B7                 mov     ecx, [ebp+var_C]
.text:0001A6BA                 push    ecx
.text:0001A6BB                 call    _safefree
.text:0001A6C0                 add     esp, 4
.text:0001A6C3
.text:0001A6C3 loc_1A6C3:                              ; CODE XREF: _ssh2_setup_env+189j
.text:0001A6C3                 push    edx
.text:0001A6C4                 mov     ecx, ebp
.text:0001A6C6                 push    eax
.text:0001A6C7                 lea     edx, $LN26_0
.text:0001A6CD                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0001A6D2                 pop     eax
.text:0001A6D3                 pop     edx
.text:0001A6D4                 add     esp, 24h
.text:0001A6D7                 cmp     ebp, esp
.text:0001A6D9                 call    __RTC_CheckEsp
.text:0001A6DE                 mov     esp, ebp
.text:0001A6E0                 pop     ebp
.text:0001A6E1                 retn
.text:0001A6E1 _ssh2_setup_env endp
.text:0001A6E1
.text:0001A6E1 ; ---------------------------------------------------------------------------
.text:0001A6E2                 align 4
.text:0001A6E4 $LN26_0         dd 1                    ; DATA XREF: _ssh2_setup_env+25Fo
.text:0001A6E8                 dd offset $LN25_0
.text:0001A6EC $LN25_0         dd 0FFFFFFE8h, 4        ; DATA XREF: .text:0001A6E8o
.text:0001A6F4                 dd offset $LN24_1
.text:0001A6F8 $LN24_1         dd 79656Bh, 3 dup(0CCCCCCCCh) ; DATA XREF: .text:0001A6F4o
.text:0001A708
.text:0001A708 ; =============== S U B R O U T I N E =======================================
.text:0001A708
.text:0001A708 ; Attributes: bp-based frame
.text:0001A708
.text:0001A708 _ssh2_msg_authconn proc near            ; DATA XREF: _do_ssh2_authconn+22Co
.text:0001A708                                         ; _do_ssh2_authconn+239o ...
.text:0001A708
.text:0001A708 arg_0           = dword ptr  8
.text:0001A708 arg_4           = dword ptr  0Ch
.text:0001A708
.text:0001A708                 push    ebp
.text:0001A709                 mov     ebp, esp
.text:0001A70B                 mov     eax, [ebp+arg_4]
.text:0001A70E                 push    eax
.text:0001A70F                 push    0
.text:0001A711                 push    0
.text:0001A713                 mov     ecx, [ebp+arg_0]
.text:0001A716                 push    ecx
.text:0001A717                 call    _do_ssh2_authconn
.text:0001A71C                 add     esp, 10h
.text:0001A71F                 cmp     ebp, esp
.text:0001A721                 call    __RTC_CheckEsp
.text:0001A726                 pop     ebp
.text:0001A727                 retn
.text:0001A727 _ssh2_msg_authconn endp
.text:0001A727
.text:0001A728
.text:0001A728 ; =============== S U B R O U T I N E =======================================
.text:0001A728
.text:0001A728 ; Attributes: bp-based frame
.text:0001A728
.text:0001A728 _ssh2_response_authconn proc near       ; DATA XREF: _do_ssh2_authconn+40CBo
.text:0001A728                                         ; _do_ssh2_authconn+411Ao ...
.text:0001A728
.text:0001A728 arg_0           = dword ptr  8
.text:0001A728 arg_4           = dword ptr  0Ch
.text:0001A728
.text:0001A728                 push    ebp
.text:0001A729                 mov     ebp, esp
.text:0001A72B                 cmp     [ebp+arg_4], 0
.text:0001A72F                 jz      short loc_1A747
.text:0001A731                 mov     eax, [ebp+arg_4]
.text:0001A734                 push    eax
.text:0001A735                 push    0
.text:0001A737                 push    0
.text:0001A739                 mov     ecx, [ebp+arg_0]
.text:0001A73C                 mov     edx, [ecx]
.text:0001A73E                 push    edx
.text:0001A73F                 call    _do_ssh2_authconn
.text:0001A744                 add     esp, 10h
.text:0001A747
.text:0001A747 loc_1A747:                              ; CODE XREF: _ssh2_response_authconn+7j
.text:0001A747                 cmp     ebp, esp
.text:0001A749                 call    __RTC_CheckEsp
.text:0001A74E                 pop     ebp
.text:0001A74F                 retn
.text:0001A74F _ssh2_response_authconn endp
.text:0001A74F
.text:0001A74F ; ---------------------------------------------------------------------------
.text:0001A750                 db 8 dup(0CCh)
.text:0001A758
.text:0001A758 ; =============== S U B R O U T I N E =======================================
.text:0001A758
.text:0001A758 ; Attributes: bp-based frame
.text:0001A758
.text:0001A758 _ssh2_msg_unexpected proc near          ; CODE XREF: _ssh2_msg_channel_response+78p
.text:0001A758                                         ; DATA XREF: _ssh2_protocol_setup+3Co ...
.text:0001A758
.text:0001A758 Str             = dword ptr -4
.text:0001A758 arg_0           = dword ptr  8
.text:0001A758 arg_4           = dword ptr  0Ch
.text:0001A758
.text:0001A758                 push    ebp
.text:0001A759                 mov     ebp, esp
.text:0001A75B                 push    ecx
.text:0001A75C                 mov     [ebp+Str], 0CCCCCCCCh
.text:0001A763                 mov     eax, [ebp+arg_4]
.text:0001A766                 mov     ecx, [eax+8]
.text:0001A769                 push    ecx
.text:0001A76A                 mov     edx, [ebp+arg_0]
.text:0001A76D                 mov     eax, [edx+15Ch]
.text:0001A773                 push    eax
.text:0001A774                 mov     ecx, [ebp+arg_0]
.text:0001A777                 mov     edx, [ecx+158h]
.text:0001A77D                 push    edx
.text:0001A77E                 call    _ssh2_pkt_type
.text:0001A783                 add     esp, 0Ch
.text:0001A786                 push    eax
.text:0001A787                 push    offset $SG93891 ; "Server protocol violation: unexpected %"...
.text:0001A78C                 call    _dupprintf
.text:0001A791                 add     esp, 8
.text:0001A794                 mov     [ebp+Str], eax
.text:0001A797                 push    0               ; int
.text:0001A799                 push    2               ; int
.text:0001A79B                 mov     eax, [ebp+Str]
.text:0001A79E                 push    eax             ; Str
.text:0001A79F                 push    0               ; int
.text:0001A7A1                 mov     ecx, [ebp+arg_0]
.text:0001A7A4                 push    ecx             ; int
.text:0001A7A5                 call    _ssh_disconnect
.text:0001A7AA                 add     esp, 14h
.text:0001A7AD                 mov     edx, [ebp+Str]
.text:0001A7B0                 push    edx
.text:0001A7B1                 call    _safefree
.text:0001A7B6                 add     esp, 4
.text:0001A7B9                 add     esp, 4
.text:0001A7BC                 cmp     ebp, esp
.text:0001A7BE                 call    __RTC_CheckEsp
.text:0001A7C3                 mov     esp, ebp
.text:0001A7C5                 pop     ebp
.text:0001A7C6                 retn
.text:0001A7C6 _ssh2_msg_unexpected endp
.text:0001A7C6
.text:0001A7C6 ; ---------------------------------------------------------------------------
.text:0001A7C7                 align 4
.text:0001A7C8
.text:0001A7C8 ; =============== S U B R O U T I N E =======================================
.text:0001A7C8
.text:0001A7C8 ; Attributes: bp-based frame
.text:0001A7C8
.text:0001A7C8 _ssh2_timer     proc near               ; DATA XREF: _do_ssh2_transport+2EE1o
.text:0001A7C8                                         ; _do_ssh2_transport+303Fo ...
.text:0001A7C8
.text:0001A7C8 var_4           = dword ptr -4
.text:0001A7C8 arg_0           = dword ptr  8
.text:0001A7C8 arg_4           = dword ptr  0Ch
.text:0001A7C8
.text:0001A7C8                 push    ebp
.text:0001A7C9                 mov     ebp, esp
.text:0001A7CB                 push    ecx
.text:0001A7CC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0001A7D3                 mov     eax, [ebp+arg_0]
.text:0001A7D6                 mov     [ebp+var_4], eax
.text:0001A7D9                 mov     ecx, [ebp+var_4]
.text:0001A7DC                 cmp     dword ptr [ecx+118h], 4
.text:0001A7E3                 jnz     short loc_1A7E7
.text:0001A7E5                 jmp     short loc_1A83A
.text:0001A7E7 ; ---------------------------------------------------------------------------
.text:0001A7E7
.text:0001A7E7 loc_1A7E7:                              ; CODE XREF: _ssh2_timer+1Bj
.text:0001A7E7                 mov     edx, [ebp+var_4]
.text:0001A7EA                 cmp     dword ptr [edx+668h], 0
.text:0001A7F1                 jnz     short loc_1A83A
.text:0001A7F3                 mov     eax, [ebp+var_4]
.text:0001A7F6                 cmp     dword ptr [eax+0C4h], 0
.text:0001A7FD                 jnz     short loc_1A83A
.text:0001A7FF                 push    18h
.text:0001A801                 mov     ecx, [ebp+var_4]
.text:0001A804                 mov     edx, [ecx+21Ch]
.text:0001A80A                 push    edx
.text:0001A80B                 call    _conf_get_int
.text:0001A810                 add     esp, 8
.text:0001A813                 test    eax, eax
.text:0001A815                 jz      short loc_1A83A
.text:0001A817                 mov     eax, [ebp+var_4]
.text:0001A81A                 mov     ecx, [ebp+arg_4]
.text:0001A81D                 cmp     ecx, [eax+66Ch]
.text:0001A823                 jnz     short loc_1A83A
.text:0001A825                 push    0
.text:0001A827                 push    0FFFFFFFFh
.text:0001A829                 push    offset $SG93924 ; "timeout"
.text:0001A82E                 mov     edx, [ebp+var_4]
.text:0001A831                 push    edx
.text:0001A832                 call    _do_ssh2_transport
.text:0001A837                 add     esp, 10h
.text:0001A83A
.text:0001A83A loc_1A83A:                              ; CODE XREF: _ssh2_timer+1Dj
.text:0001A83A                                         ; _ssh2_timer+29j ...
.text:0001A83A                 add     esp, 4
.text:0001A83D                 cmp     ebp, esp
.text:0001A83F                 call    __RTC_CheckEsp
.text:0001A844                 mov     esp, ebp
.text:0001A846                 pop     ebp
.text:0001A847                 retn
.text:0001A847 _ssh2_timer     endp
.text:0001A847
.text:0001A848
.text:0001A848 ; =============== S U B R O U T I N E =======================================
.text:0001A848
.text:0001A848 ; Attributes: bp-based frame
.text:0001A848
.text:0001A848 _ssh_init       proc near               ; DATA XREF: .data:_ssh_backendo
.text:0001A848
.text:0001A848 var_8           = dword ptr -8
.text:0001A848 var_4           = dword ptr -4
.text:0001A848 arg_0           = dword ptr  8
.text:0001A848 arg_4           = dword ptr  0Ch
.text:0001A848 arg_8           = dword ptr  10h
.text:0001A848 arg_C           = dword ptr  14h
.text:0001A848 arg_10          = dword ptr  18h
.text:0001A848 arg_14          = dword ptr  1Ch
.text:0001A848 arg_18          = dword ptr  20h
.text:0001A848 arg_1C          = dword ptr  24h
.text:0001A848
.text:0001A848                 push    ebp
.text:0001A849                 mov     ebp, esp
.text:0001A84B                 sub     esp, 8
.text:0001A84E                 mov     [ebp+var_8], 0CCCCCCCCh
.text:0001A855                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0001A85C                 push    680h
.text:0001A861                 push    1
.text:0001A863                 call    _safemalloc
.text:0001A868                 add     esp, 8
.text:0001A86B                 mov     [ebp+var_8], eax
.text:0001A86E                 mov     eax, [ebp+arg_8]
.text:0001A871                 push    eax
.text:0001A872                 call    _conf_copy
.text:0001A877                 add     esp, 4
.text:0001A87A                 mov     ecx, [ebp+var_8]
.text:0001A87D                 mov     [ecx+21Ch], eax
.text:0001A883                 mov     edx, [ebp+var_8]
.text:0001A886                 push    edx
.text:0001A887                 call    _ssh_cache_conf_values
.text:0001A88C                 add     esp, 4
.text:0001A88F                 mov     eax, [ebp+var_8]
.text:0001A892                 mov     dword ptr [eax+16Ch], 0
.text:0001A89C                 mov     ecx, [ebp+var_8]
.text:0001A89F                 mov     dword ptr [ecx+10h], 0
.text:0001A8A6                 mov     edx, [ebp+var_8]
.text:0001A8A9                 mov     dword ptr [edx+54h], 0
.text:0001A8B0                 mov     eax, [ebp+var_8]
.text:0001A8B3                 mov     dword ptr [eax+58h], 0
.text:0001A8BA                 mov     ecx, [ebp+var_8]
.text:0001A8BD                 mov     dword ptr [ecx+5Ch], 0
.text:0001A8C4                 mov     edx, [ebp+var_8]
.text:0001A8C7                 mov     dword ptr [edx+60h], 0
.text:0001A8CE                 mov     eax, [ebp+var_8]
.text:0001A8D1                 mov     dword ptr [eax+68h], 0
.text:0001A8D8                 mov     ecx, [ebp+var_8]
.text:0001A8DB                 mov     dword ptr [ecx+64h], 0
.text:0001A8E2                 mov     edx, [ebp+var_8]
.text:0001A8E5                 mov     dword ptr [edx+6Ch], 0
.text:0001A8EC                 mov     eax, [ebp+var_8]
.text:0001A8EF                 mov     dword ptr [eax+70h], 0
.text:0001A8F6                 mov     ecx, [ebp+var_8]
.text:0001A8F9                 mov     dword ptr [ecx+78h], 0
.text:0001A900                 mov     edx, [ebp+var_8]
.text:0001A903                 mov     dword ptr [edx+74h], 0
.text:0001A90A                 mov     eax, [ebp+var_8]
.text:0001A90D                 mov     dword ptr [eax+7Ch], 0
.text:0001A914                 mov     ecx, [ebp+var_8]
.text:0001A917                 mov     dword ptr [ecx+80h], 0
.text:0001A921                 mov     edx, [ebp+var_8]
.text:0001A924                 mov     dword ptr [edx+88h], 0
.text:0001A92E                 mov     eax, [ebp+var_8]
.text:0001A931                 mov     dword ptr [eax+84h], 0
.text:0001A93B                 mov     ecx, [ebp+var_8]
.text:0001A93E                 mov     dword ptr [ecx+8Ch], 0
.text:0001A948                 mov     edx, [ebp+var_8]
.text:0001A94B                 mov     dword ptr [edx+90h], 0
.text:0001A955                 mov     eax, [ebp+var_8]
.text:0001A958                 mov     dword ptr [eax+0C0h], 0
.text:0001A962                 mov     ecx, [ebp+var_8]
.text:0001A965                 mov     dword ptr [ecx+94h], 0
.text:0001A96F                 mov     edx, [ebp+var_8]
.text:0001A972                 mov     dword ptr [edx+98h], 0
.text:0001A97C                 mov     eax, [ebp+var_8]
.text:0001A97F                 mov     dword ptr [eax+104h], 0FFFFFFFFh
.text:0001A989                 mov     ecx, [ebp+var_8]
.text:0001A98C                 mov     dword ptr [ecx+108h], 0
.text:0001A996                 mov     edx, [ebp+var_8]
.text:0001A999                 mov     dword ptr [edx+10Ch], 0
.text:0001A9A3                 mov     eax, [ebp+var_8]
.text:0001A9A6                 mov     dword ptr [eax+118h], 0
.text:0001A9B0                 mov     ecx, [ebp+var_8]
.text:0001A9B3                 mov     dword ptr [ecx+11Ch], 0
.text:0001A9BD                 mov     edx, [ebp+var_8]
.text:0001A9C0                 mov     dword ptr [edx+120h], 0
.text:0001A9CA                 mov     eax, [ebp+var_8]
.text:0001A9CD                 mov     dword ptr [eax+14h], 0
.text:0001A9D4                 mov     ecx, [ebp+var_8]
.text:0001A9D7                 mov     dword ptr [ecx+18h], 0
.text:0001A9DE                 mov     edx, [ebp+var_8]
.text:0001A9E1                 mov     dword ptr [edx+13Ch], 0
.text:0001A9EB                 mov     eax, [ebp+var_8]
.text:0001A9EE                 mov     dword ptr [eax+140h], 0
.text:0001A9F8                 mov     ecx, [ebp+var_8]
.text:0001A9FB                 mov     dword ptr [ecx+144h], 0
.text:0001AA05                 mov     edx, [ebp+var_8]
.text:0001AA08                 mov     dword ptr [edx+148h], 0
.text:0001AA12                 mov     eax, [ebp+var_8]
.text:0001AA15                 mov     dword ptr [eax+158h], 0
.text:0001AA1F                 mov     ecx, [ebp+var_8]
.text:0001AA22                 mov     dword ptr [ecx+15Ch], 0
.text:0001AA2C                 mov     edx, [ebp+var_8]
.text:0001AA2F                 mov     dword ptr [edx+160h], 0
.text:0001AA39                 mov     eax, [ebp+var_8]
.text:0001AA3C                 mov     dword ptr [eax+164h], 0
.text:0001AA46                 push    offset _x11_authcmp
.text:0001AA4B                 call    _newtree234
.text:0001AA50                 add     esp, 4
.text:0001AA53                 mov     ecx, [ebp+var_8]
.text:0001AA56                 mov     [ecx+168h], eax
.text:0001AA5C                 mov     edx, [ebp+var_8]
.text:0001AA5F                 mov     dword ptr [edx+3Ch], 0
.text:0001AA66                 mov     eax, [ebp+var_8]
.text:0001AA69                 mov     dword ptr [eax+180h], 0
.text:0001AA73                 mov     ecx, [ebp+var_8]
.text:0001AA76                 mov     dword ptr [ecx+184h], 0
.text:0001AA80                 mov     edx, [ebp+var_8]
.text:0001AA83                 mov     dword ptr [edx+188h], 0
.text:0001AA8D                 mov     eax, [ebp+var_8]
.text:0001AA90                 mov     dword ptr [eax+18Ch], 0
.text:0001AA9A                 mov     ecx, [ebp+var_8]
.text:0001AA9D                 mov     dword ptr [ecx+190h], 0
.text:0001AAA7                 mov     edx, [ebp+var_8]
.text:0001AAAA                 mov     dword ptr [edx+194h], 0
.text:0001AAB4                 mov     eax, [ebp+var_8]
.text:0001AAB7                 mov     dword ptr [eax+198h], 0
.text:0001AAC1                 mov     ecx, [ebp+var_8]
.text:0001AAC4                 mov     dword ptr [ecx+1A8h], 0
.text:0001AACE                 mov     edx, [ebp+var_8]
.text:0001AAD1                 mov     dword ptr [edx+19Ch], 0
.text:0001AADB                 mov     eax, [ebp+var_8]
.text:0001AADE                 mov     dword ptr [eax+1A0h], 0
.text:0001AAE8                 mov     ecx, [ebp+var_8]
.text:0001AAEB                 mov     dword ptr [ecx+1A4h], 0
.text:0001AAF5                 mov     edx, [ebp+var_8]
.text:0001AAF8                 mov     dword ptr [edx+4], 0
.text:0001AAFF                 mov     eax, [ebp+var_8]
.text:0001AB02                 mov     dword ptr [eax+8], 0
.text:0001AB09                 mov     ecx, [ebp+var_8]
.text:0001AB0C                 mov     dword ptr [ecx+0FCh], 0
.text:0001AB16                 mov     edx, [ebp+var_8]
.text:0001AB19                 mov     dword ptr [edx+178h], 0
.text:0001AB23                 mov     eax, [ebp+var_8]
.text:0001AB26                 mov     dword ptr [eax+17Ch], 0
.text:0001AB30                 mov     ecx, [ebp+var_8]
.text:0001AB33                 mov     dword ptr [ecx+12Ch], 0
.text:0001AB3D                 mov     edx, [ebp+var_8]
.text:0001AB40                 mov     dword ptr [edx+134h], 0
.text:0001AB4A                 mov     eax, [ebp+var_8]
.text:0001AB4D                 mov     dword ptr [eax+130h], 0
.text:0001AB57                 mov     ecx, [ebp+var_8]
.text:0001AB5A                 mov     dword ptr [ecx+138h], 0
.text:0001AB64                 mov     edx, [ebp+var_8]
.text:0001AB67                 mov     dword ptr [edx+648h], 0
.text:0001AB71                 mov     eax, [ebp+var_8]
.text:0001AB74                 mov     dword ptr [eax+644h], 0
.text:0001AB7E                 mov     ecx, [ebp+var_8]
.text:0001AB81                 mov     dword ptr [ecx+674h], 0
.text:0001AB8B                 mov     edx, [ebp+var_8]
.text:0001AB8E                 add     edx, 238h
.text:0001AB94                 push    edx
.text:0001AB95                 call    _bufchain_init
.text:0001AB9A                 add     esp, 4
.text:0001AB9D                 mov     eax, [ebp+var_8]
.text:0001ABA0                 mov     dword ptr [eax+234h], 0
.text:0001ABAA                 mov     ecx, [ebp+var_8]
.text:0001ABAD                 mov     dword ptr [ecx+224h], 0
.text:0001ABB7                 mov     edx, [ebp+var_8]
.text:0001ABBA                 mov     dword ptr [edx+124h], 0
.text:0001ABC4                 mov     eax, [ebp+var_8]
.text:0001ABC7                 mov     dword ptr [eax+128h], 0
.text:0001ABD1                 mov     ecx, [ebp+var_8]
.text:0001ABD4                 mov     dword ptr [ecx+0C4h], 0
.text:0001ABDE                 mov     edx, [ebp+var_8]
.text:0001ABE1                 mov     dword ptr [edx+4Ch], 0
.text:0001ABE8                 mov     eax, [ebp+var_8]
.text:0001ABEB                 mov     dword ptr [eax+0CCh], 0
.text:0001ABF5                 mov     ecx, [ebp+var_8]
.text:0001ABF8                 mov     dword ptr [ecx+0C8h], 0
.text:0001AC02                 mov     edx, [ebp+arg_4]
.text:0001AC05                 mov     eax, [ebp+var_8]
.text:0001AC08                 mov     [edx], eax
.text:0001AC0A                 mov     ecx, [ebp+var_8]
.text:0001AC0D                 mov     edx, [ebp+arg_0]
.text:0001AC10                 mov     [ecx+0E4h], edx
.text:0001AC16                 push    6Eh ; 'n'
.text:0001AC18                 mov     eax, [ebp+var_8]
.text:0001AC1B                 mov     ecx, [eax+21Ch]
.text:0001AC21                 push    ecx
.text:0001AC22                 call    _conf_get_int
.text:0001AC27                 add     esp, 8
.text:0001AC2A                 mov     edx, [ebp+var_8]
.text:0001AC2D                 mov     [edx+0F0h], eax
.text:0001AC33                 push    6Fh ; 'o'
.text:0001AC35                 mov     eax, [ebp+var_8]
.text:0001AC38                 mov     ecx, [eax+21Ch]
.text:0001AC3E                 push    ecx
.text:0001AC3F                 call    _conf_get_int
.text:0001AC44                 add     esp, 8
.text:0001AC47                 mov     edx, [ebp+var_8]
.text:0001AC4A                 mov     [edx+0F4h], eax
.text:0001AC50                 mov     eax, [ebp+var_8]
.text:0001AC53                 mov     dword ptr [eax+0F8h], 0
.text:0001AC5D                 mov     ecx, [ebp+var_8]
.text:0001AC60                 mov     dword ptr [ecx+110h], 0
.text:0001AC6A                 mov     edx, [ebp+var_8]
.text:0001AC6D                 mov     dword ptr [edx+114h], 0
.text:0001AC77                 mov     eax, [ebp+var_8]
.text:0001AC7A                 mov     dword ptr [eax+0D8h], 0
.text:0001AC84                 mov     ecx, [ebp+var_8]
.text:0001AC87                 mov     dword ptr [ecx+0E0h], 0
.text:0001AC91                 mov     edx, [ebp+var_8]
.text:0001AC94                 mov     dword ptr [edx+0DCh], 0
.text:0001AC9E                 mov     eax, [ebp+var_8]
.text:0001ACA1                 mov     dword ptr [eax+170h], 0
.text:0001ACAB                 mov     ecx, [ebp+var_8]
.text:0001ACAE                 mov     dword ptr [ecx+174h], 0
.text:0001ACB8                 mov     edx, [ebp+var_8]
.text:0001ACBB                 mov     dword ptr [edx+148h], 0
.text:0001ACC5                 mov     eax, [ebp+var_8]
.text:0001ACC8                 mov     dword ptr [eax+210h], 0
.text:0001ACD2                 mov     ecx, [ebp+var_8]
.text:0001ACD5                 mov     dword ptr [ecx+20Ch], 0
.text:0001ACDF                 mov     edx, [ebp+var_8]
.text:0001ACE2                 mov     dword ptr [edx+654h], 0
.text:0001ACEC                 mov     eax, [ebp+var_8]
.text:0001ACEF                 mov     dword ptr [eax+660h], 0
.text:0001ACF9                 mov     ecx, [ebp+var_8]
.text:0001ACFC                 mov     dword ptr [ecx+65Ch], 0
.text:0001AD06                 mov     edx, [ebp+var_8]
.text:0001AD09                 mov     dword ptr [edx+658h], 0
.text:0001AD13                 push    19h
.text:0001AD15                 mov     eax, [ebp+var_8]
.text:0001AD18                 mov     ecx, [eax+21Ch]
.text:0001AD1E                 push    ecx
.text:0001AD1F                 call    _conf_get_str
.text:0001AD24                 add     esp, 8
.text:0001AD27                 push    eax
.text:0001AD28                 call    _parse_blocksize
.text:0001AD2D                 add     esp, 4
.text:0001AD30                 mov     edx, [ebp+var_8]
.text:0001AD33                 mov     [edx+664h], eax
.text:0001AD39                 mov     eax, [ebp+var_8]
.text:0001AD3C                 mov     dword ptr [eax+668h], 0
.text:0001AD46                 mov     ecx, [ebp+var_8]
.text:0001AD49                 mov     dword ptr [ecx+67Ch], 0
.text:0001AD53                 call    _random_ref
.text:0001AD58                 mov     edx, [ebp+arg_1C]
.text:0001AD5B                 push    edx
.text:0001AD5C                 mov     eax, [ebp+arg_18]
.text:0001AD5F                 push    eax
.text:0001AD60                 mov     ecx, [ebp+arg_14]
.text:0001AD63                 push    ecx
.text:0001AD64                 mov     edx, [ebp+arg_10]
.text:0001AD67                 push    edx
.text:0001AD68                 mov     eax, [ebp+arg_C]
.text:0001AD6B                 push    eax
.text:0001AD6C                 mov     ecx, [ebp+var_8]
.text:0001AD6F                 push    ecx
.text:0001AD70                 call    _connect_to_host
.text:0001AD75                 add     esp, 18h
.text:0001AD78                 mov     [ebp+var_4], eax
.text:0001AD7B                 cmp     [ebp+var_4], 0
.text:0001AD7F                 jz      short loc_1AD8B
.text:0001AD81                 call    _random_unref
.text:0001AD86                 mov     eax, [ebp+var_4]
.text:0001AD89                 jmp     short loc_1AD8D
.text:0001AD8B ; ---------------------------------------------------------------------------
.text:0001AD8B
.text:0001AD8B loc_1AD8B:                              ; CODE XREF: _ssh_init+537j
.text:0001AD8B                 xor     eax, eax
.text:0001AD8D
.text:0001AD8D loc_1AD8D:                              ; CODE XREF: _ssh_init+541j
.text:0001AD8D                 add     esp, 8
.text:0001AD90                 cmp     ebp, esp
.text:0001AD92                 call    __RTC_CheckEsp
.text:0001AD97                 mov     esp, ebp
.text:0001AD99                 pop     ebp
.text:0001AD9A                 retn
.text:0001AD9A _ssh_init       endp
.text:0001AD9A
.text:0001AD9A ; ---------------------------------------------------------------------------
.text:0001AD9B                 db 0Dh dup(0CCh)
.text:0001ADA8
.text:0001ADA8 ; =============== S U B R O U T I N E =======================================
.text:0001ADA8
.text:0001ADA8 ; Attributes: bp-based frame
.text:0001ADA8
.text:0001ADA8 _connect_to_host proc near              ; CODE XREF: _ssh_init+528p
.text:0001ADA8
.text:0001ADA8 var_24          = dword ptr -24h
.text:0001ADA8 var_20          = dword ptr -20h
.text:0001ADA8 Str             = dword ptr -1Ch
.text:0001ADA8 var_18          = dword ptr -18h
.text:0001ADA8 var_14          = dword ptr -14h
.text:0001ADA8 var_10          = dword ptr -10h
.text:0001ADA8 var_C           = dword ptr -0Ch
.text:0001ADA8 var_8           = dword ptr -8
.text:0001ADA8 var_4           = dword ptr -4
.text:0001ADA8 arg_0           = dword ptr  8
.text:0001ADA8 arg_4           = dword ptr  0Ch
.text:0001ADA8 arg_8           = dword ptr  10h
.text:0001ADA8 arg_C           = dword ptr  14h
.text:0001ADA8 arg_10          = dword ptr  18h
.text:0001ADA8 arg_14          = dword ptr  1Ch
.text:0001ADA8
.text:0001ADA8                 push    ebp
.text:0001ADA9                 mov     ebp, esp
.text:0001ADAB                 sub     esp, 24h
.text:0001ADAE                 push    esi
.text:0001ADAF                 mov     eax, 0CCCCCCCCh
.text:0001ADB4                 mov     [ebp+var_24], eax
.text:0001ADB7                 mov     [ebp+var_20], eax
.text:0001ADBA                 mov     [ebp+Str], eax
.text:0001ADBD                 mov     [ebp+var_18], eax
.text:0001ADC0                 mov     [ebp+var_14], eax
.text:0001ADC3                 mov     [ebp+var_10], eax
.text:0001ADC6                 mov     [ebp+var_C], eax
.text:0001ADC9                 mov     [ebp+var_8], eax
.text:0001ADCC                 mov     [ebp+var_4], eax
.text:0001ADCF                 push    9
.text:0001ADD1                 mov     eax, [ebp+arg_0]
.text:0001ADD4                 mov     ecx, [eax+21Ch]
.text:0001ADDA                 push    ecx
.text:0001ADDB                 call    _conf_get_str
.text:0001ADE0                 add     esp, 8
.text:0001ADE3                 mov     [ebp+var_C], eax
.text:0001ADE6                 mov     edx, [ebp+var_C]
.text:0001ADE9                 movsx   eax, byte ptr [edx]
.text:0001ADEC                 test    eax, eax
.text:0001ADEE                 jz      loc_1AE8B
.text:0001ADF4                 mov     ecx, [ebp+var_C]
.text:0001ADF7                 push    ecx
.text:0001ADF8                 call    _dupstr
.text:0001ADFD                 add     esp, 4
.text:0001AE00                 mov     [ebp+var_18], eax
.text:0001AE03                 mov     edx, [ebp+arg_0]
.text:0001AE06                 mov     dword ptr [edx+0D4h], 16h
.text:0001AE10                 push    3Ah ; ':'
.text:0001AE12                 mov     eax, [ebp+var_18]
.text:0001AE15                 push    eax
.text:0001AE16                 call    _host_strrchr
.text:0001AE1B                 add     esp, 8
.text:0001AE1E                 mov     [ebp+Str], eax
.text:0001AE21                 cmp     [ebp+Str], 0
.text:0001AE25                 jz      short loc_1AE68
.text:0001AE27                 push    3Ah ; ':'
.text:0001AE29                 mov     ecx, [ebp+var_18]
.text:0001AE2C                 push    ecx
.text:0001AE2D                 call    _host_strchr
.text:0001AE32                 add     esp, 8
.text:0001AE35                 cmp     [ebp+Str], eax
.text:0001AE38                 jnz     short loc_1AE68
.text:0001AE3A                 mov     edx, [ebp+Str]
.text:0001AE3D                 mov     byte ptr [edx], 0
.text:0001AE40                 mov     eax, [ebp+Str]
.text:0001AE43                 add     eax, 1
.text:0001AE46                 mov     [ebp+Str], eax
.text:0001AE49                 mov     ecx, [ebp+Str]
.text:0001AE4C                 movsx   edx, byte ptr [ecx]
.text:0001AE4F                 test    edx, edx
.text:0001AE51                 jz      short loc_1AE68
.text:0001AE53                 mov     eax, [ebp+Str]
.text:0001AE56                 push    eax             ; Str
.text:0001AE57                 call    _atoi
.text:0001AE5C                 add     esp, 4
.text:0001AE5F                 mov     ecx, [ebp+arg_0]
.text:0001AE62                 mov     [ecx+0D4h], eax
.text:0001AE68
.text:0001AE68 loc_1AE68:                              ; CODE XREF: _connect_to_host+7Dj
.text:0001AE68                                         ; _connect_to_host+90j ...
.text:0001AE68                 mov     edx, [ebp+var_18]
.text:0001AE6B                 push    edx
.text:0001AE6C                 call    _host_strduptrim
.text:0001AE71                 add     esp, 4
.text:0001AE74                 mov     ecx, [ebp+arg_0]
.text:0001AE77                 mov     [ecx+0D0h], eax
.text:0001AE7D                 mov     edx, [ebp+var_18]
.text:0001AE80                 push    edx
.text:0001AE81                 call    _safefree
.text:0001AE86                 add     esp, 4
.text:0001AE89                 jmp     short loc_1AEB9
.text:0001AE8B ; ---------------------------------------------------------------------------
.text:0001AE8B
.text:0001AE8B loc_1AE8B:                              ; CODE XREF: _connect_to_host+46j
.text:0001AE8B                 mov     eax, [ebp+arg_4]
.text:0001AE8E                 push    eax
.text:0001AE8F                 call    _host_strduptrim
.text:0001AE94                 add     esp, 4
.text:0001AE97                 mov     ecx, [ebp+arg_0]
.text:0001AE9A                 mov     [ecx+0D0h], eax
.text:0001AEA0                 cmp     [ebp+arg_8], 0
.text:0001AEA4                 jge     short loc_1AEAD
.text:0001AEA6                 mov     [ebp+arg_8], 16h
.text:0001AEAD
.text:0001AEAD loc_1AEAD:                              ; CODE XREF: _connect_to_host+FCj
.text:0001AEAD                 mov     edx, [ebp+arg_0]
.text:0001AEB0                 mov     eax, [ebp+arg_8]
.text:0001AEB3                 mov     [edx+0D4h], eax
.text:0001AEB9
.text:0001AEB9 loc_1AEB9:                              ; CODE XREF: _connect_to_host+E1j
.text:0001AEB9                 mov     ecx, [ebp+arg_0]
.text:0001AEBC                 mov     dword ptr [ecx], offset ?fn_table@?1??connect_to_host@@9@9 ; `connect_to_host'::`2'::fn_table
.text:0001AEC2                 mov     edx, [ebp+arg_0]
.text:0001AEC5                 mov     dword ptr [edx+0CCh], 0
.text:0001AECF                 mov     eax, [ebp+arg_0]
.text:0001AED2                 mov     dword ptr [eax+0C8h], 1
.text:0001AEDC                 mov     ecx, [ebp+arg_0]
.text:0001AEDF                 add     ecx, 0CCh ; '¦'
.text:0001AEE5                 push    ecx
.text:0001AEE6                 mov     edx, [ebp+arg_0]
.text:0001AEE9                 push    edx
.text:0001AEEA                 mov     eax, [ebp+arg_0]
.text:0001AEED                 mov     ecx, [eax+21Ch]
.text:0001AEF3                 push    ecx
.text:0001AEF4                 mov     edx, [ebp+arg_0]
.text:0001AEF7                 mov     eax, [edx+0D4h]
.text:0001AEFD                 push    eax
.text:0001AEFE                 mov     ecx, [ebp+arg_0]
.text:0001AF01                 mov     edx, [ecx+0D0h]
.text:0001AF07                 push    edx
.text:0001AF08                 call    _ssh_connection_sharing_init
.text:0001AF0D                 add     esp, 14h
.text:0001AF10                 mov     ecx, [ebp+arg_0]
.text:0001AF13                 mov     [ecx+10h], eax
.text:0001AF16                 mov     edx, [ebp+arg_0]
.text:0001AF19                 mov     dword ptr [edx+0C8h], 0
.text:0001AF23                 mov     eax, [ebp+arg_0]
.text:0001AF26                 cmp     dword ptr [eax+10h], 0
.text:0001AF2A                 jz      short loc_1AF69
.text:0001AF2C                 mov     ecx, [ebp+arg_0]
.text:0001AF2F                 mov     dword ptr [ecx+0C4h], 1
.text:0001AF39                 mov     edx, [ebp+arg_0]
.text:0001AF3C                 mov     dword ptr [edx+218h], offset _do_ssh_connection_init
.text:0001AF46                 mov     eax, [ebp+arg_0]
.text:0001AF49                 mov     dword ptr [eax+678h], 0
.text:0001AF53                 mov     ecx, [ebp+arg_4]
.text:0001AF56                 push    ecx
.text:0001AF57                 call    _dupstr
.text:0001AF5C                 add     esp, 4
.text:0001AF5F                 mov     edx, [ebp+arg_C]
.text:0001AF62                 mov     [edx], eax
.text:0001AF64                 jmp     loc_1B0B9
.text:0001AF69 ; ---------------------------------------------------------------------------
.text:0001AF69
.text:0001AF69 loc_1AF69:                              ; CODE XREF: _connect_to_host+182j
.text:0001AF69                 mov     eax, [ebp+arg_0]
.text:0001AF6C                 mov     dword ptr [eax+218h], offset _do_ssh_init
.text:0001AF76                 push    3
.text:0001AF78                 mov     ecx, [ebp+arg_0]
.text:0001AF7B                 mov     edx, [ecx+21Ch]
.text:0001AF81                 push    edx
.text:0001AF82                 call    _conf_get_int
.text:0001AF87                 add     esp, 8
.text:0001AF8A                 mov     [ebp+var_10], eax
.text:0001AF8D                 cmp     [ebp+var_10], 1
.text:0001AF91                 jnz     short loc_1AF9C
.text:0001AF93                 mov     [ebp+var_20], offset $SG89867 ; " (IPv4)"
.text:0001AF9A                 jmp     short loc_1AFB8
.text:0001AF9C ; ---------------------------------------------------------------------------
.text:0001AF9C
.text:0001AF9C loc_1AF9C:                              ; CODE XREF: _connect_to_host+1E9j
.text:0001AF9C                 cmp     [ebp+var_10], 2
.text:0001AFA0                 jnz     short loc_1AFAB
.text:0001AFA2                 mov     [ebp+var_24], offset $SG89868 ; " (IPv6)"
.text:0001AFA9                 jmp     short loc_1AFB2
.text:0001AFAB ; ---------------------------------------------------------------------------
.text:0001AFAB
.text:0001AFAB loc_1AFAB:                              ; CODE XREF: _connect_to_host+1F8j
.text:0001AFAB                 mov     [ebp+var_24], offset $SG89869
.text:0001AFB2
.text:0001AFB2 loc_1AFB2:                              ; CODE XREF: _connect_to_host+201j
.text:0001AFB2                 mov     eax, [ebp+var_24]
.text:0001AFB5                 mov     [ebp+var_20], eax
.text:0001AFB8
.text:0001AFB8 loc_1AFB8:                              ; CODE XREF: _connect_to_host+1F2j
.text:0001AFB8                 mov     ecx, [ebp+var_20]
.text:0001AFBB                 push    ecx
.text:0001AFBC                 mov     edx, [ebp+arg_4]
.text:0001AFBF                 push    edx
.text:0001AFC0                 push    offset $SG89870 ; "Looking up host \"%s\"%s"
.text:0001AFC5                 mov     eax, [ebp+arg_0]
.text:0001AFC8                 push    eax
.text:0001AFC9                 call    _logeventf
.text:0001AFCE                 add     esp, 10h
.text:0001AFD1                 mov     ecx, [ebp+var_10]
.text:0001AFD4                 push    ecx
.text:0001AFD5                 mov     edx, [ebp+arg_0]
.text:0001AFD8                 mov     eax, [edx+21Ch]
.text:0001AFDE                 push    eax
.text:0001AFDF                 mov     ecx, [ebp+arg_C]
.text:0001AFE2                 push    ecx
.text:0001AFE3                 mov     edx, [ebp+arg_8]
.text:0001AFE6                 push    edx
.text:0001AFE7                 mov     eax, [ebp+arg_4]
.text:0001AFEA                 push    eax
.text:0001AFEB                 call    _name_lookup
.text:0001AFF0                 add     esp, 14h
.text:0001AFF3                 mov     [ebp+var_4], eax
.text:0001AFF6                 mov     ecx, [ebp+var_4]
.text:0001AFF9                 push    ecx
.text:0001AFFA                 call    _sk_addr_error
.text:0001AFFF                 add     esp, 4
.text:0001B002                 mov     [ebp+var_8], eax
.text:0001B005                 cmp     [ebp+var_8], 0
.text:0001B009                 jz      short loc_1B01F
.text:0001B00B                 mov     edx, [ebp+var_4]
.text:0001B00E                 push    edx
.text:0001B00F                 call    _sk_addr_free
.text:0001B014                 add     esp, 4
.text:0001B017                 mov     eax, [ebp+var_8]
.text:0001B01A                 jmp     loc_1B140
.text:0001B01F ; ---------------------------------------------------------------------------
.text:0001B01F
.text:0001B01F loc_1B01F:                              ; CODE XREF: _connect_to_host+261j
.text:0001B01F                 mov     eax, [ebp+arg_C]
.text:0001B022                 mov     ecx, [eax]
.text:0001B024                 push    ecx
.text:0001B025                 call    _dupstr
.text:0001B02A                 add     esp, 4
.text:0001B02D                 mov     edx, [ebp+arg_0]
.text:0001B030                 mov     [edx+678h], eax
.text:0001B036                 mov     eax, [ebp+arg_0]
.text:0001B039                 mov     ecx, [eax+21Ch]
.text:0001B03F                 push    ecx
.text:0001B040                 mov     edx, [ebp+arg_0]
.text:0001B043                 push    edx
.text:0001B044                 mov     eax, [ebp+arg_14]
.text:0001B047                 push    eax
.text:0001B048                 mov     ecx, [ebp+arg_10]
.text:0001B04B                 push    ecx
.text:0001B04C                 push    1
.text:0001B04E                 push    0
.text:0001B050                 mov     edx, [ebp+arg_8]
.text:0001B053                 push    edx
.text:0001B054                 mov     eax, [ebp+arg_C]
.text:0001B057                 mov     ecx, [eax]
.text:0001B059                 push    ecx
.text:0001B05A                 mov     edx, [ebp+var_4]
.text:0001B05D                 push    edx
.text:0001B05E                 call    _new_connection
.text:0001B063                 add     esp, 24h
.text:0001B066                 mov     ecx, [ebp+arg_0]
.text:0001B069                 mov     [ecx+10h], eax
.text:0001B06C                 mov     esi, esp
.text:0001B06E                 mov     edx, [ebp+arg_0]
.text:0001B071                 mov     eax, [edx+10h]
.text:0001B074                 push    eax
.text:0001B075                 mov     ecx, [ebp+arg_0]
.text:0001B078                 mov     edx, [ecx+10h]
.text:0001B07B                 mov     eax, [edx]
.text:0001B07D                 mov     ecx, [eax+1Ch]
.text:0001B080                 call    ecx
.text:0001B082                 add     esp, 4
.text:0001B085                 cmp     esi, esp
.text:0001B087                 call    __RTC_CheckEsp
.text:0001B08C                 mov     [ebp+var_8], eax
.text:0001B08F                 cmp     [ebp+var_8], 0
.text:0001B093                 jz      short loc_1B0B9
.text:0001B095                 mov     edx, [ebp+arg_0]
.text:0001B098                 mov     dword ptr [edx+10h], 0
.text:0001B09F                 mov     eax, [ebp+arg_0]
.text:0001B0A2                 mov     ecx, [eax+0E4h]
.text:0001B0A8                 push    ecx
.text:0001B0A9                 call    _notify_remote_exit
.text:0001B0AE                 add     esp, 4
.text:0001B0B1                 mov     eax, [ebp+var_8]
.text:0001B0B4                 jmp     loc_1B140
.text:0001B0B9 ; ---------------------------------------------------------------------------
.text:0001B0B9
.text:0001B0B9 loc_1B0B9:                              ; CODE XREF: _connect_to_host+1BCj
.text:0001B0B9                                         ; _connect_to_host+2EBj
.text:0001B0B9                 push    1Fh
.text:0001B0BB                 mov     edx, [ebp+arg_0]
.text:0001B0BE                 mov     eax, [edx+21Ch]
.text:0001B0C4                 push    eax
.text:0001B0C5                 call    _conf_get_int
.text:0001B0CA                 add     esp, 8
.text:0001B0CD                 mov     [ebp+var_14], eax
.text:0001B0D0                 cmp     [ebp+var_14], 0
.text:0001B0D4                 jnz     short loc_1B0E3
.text:0001B0D6                 mov     ecx, [ebp+arg_0]
.text:0001B0D9                 mov     dword ptr [ecx+16Ch], 1
.text:0001B0E3
.text:0001B0E3 loc_1B0E3:                              ; CODE XREF: _connect_to_host+32Cj
.text:0001B0E3                 cmp     [ebp+var_14], 3
.text:0001B0E7                 jnz     short loc_1B115
.text:0001B0E9                 mov     edx, [ebp+arg_0]
.text:0001B0EC                 cmp     dword ptr [edx+0C4h], 0
.text:0001B0F3                 jnz     short loc_1B115
.text:0001B0F5                 mov     eax, [ebp+arg_0]
.text:0001B0F8                 mov     dword ptr [eax+16Ch], 2
.text:0001B102                 push    0               ; char *
.text:0001B104                 push    offset $SG89880 ; "SSH-"
.text:0001B109                 mov     ecx, [ebp+arg_0]
.text:0001B10C                 push    ecx             ; int
.text:0001B10D                 call    _ssh_send_verstring
.text:0001B112                 add     esp, 0Ch
.text:0001B115
.text:0001B115 loc_1B115:                              ; CODE XREF: _connect_to_host+33Fj
.text:0001B115                                         ; _connect_to_host+34Bj
.text:0001B115                 mov     edx, [ebp+var_C]
.text:0001B118                 movsx   eax, byte ptr [edx]
.text:0001B11B                 test    eax, eax
.text:0001B11D                 jz      short loc_1B13E
.text:0001B11F                 mov     ecx, [ebp+arg_C]
.text:0001B122                 mov     edx, [ecx]
.text:0001B124                 push    edx
.text:0001B125                 call    _safefree
.text:0001B12A                 add     esp, 4
.text:0001B12D                 mov     eax, [ebp+var_C]
.text:0001B130                 push    eax
.text:0001B131                 call    _dupstr
.text:0001B136                 add     esp, 4
.text:0001B139                 mov     ecx, [ebp+arg_C]
.text:0001B13C                 mov     [ecx], eax
.text:0001B13E
.text:0001B13E loc_1B13E:                              ; CODE XREF: _connect_to_host+375j
.text:0001B13E                 xor     eax, eax
.text:0001B140
.text:0001B140 loc_1B140:                              ; CODE XREF: _connect_to_host+272j
.text:0001B140                                         ; _connect_to_host+30Cj
.text:0001B140                 pop     esi
.text:0001B141                 add     esp, 24h
.text:0001B144                 cmp     ebp, esp
.text:0001B146                 call    __RTC_CheckEsp
.text:0001B14B                 mov     esp, ebp
.text:0001B14D                 pop     ebp
.text:0001B14E                 retn
.text:0001B14E _connect_to_host endp
.text:0001B14E
.text:0001B14E ; ---------------------------------------------------------------------------
.text:0001B14F                 db 9 dup(0CCh)
.text:0001B158
.text:0001B158 ; =============== S U B R O U T I N E =======================================
.text:0001B158
.text:0001B158 ; Attributes: bp-based frame
.text:0001B158
.text:0001B158 ; int __cdecl ssh_send_verstring(int, char *Str1, char *)
.text:0001B158 _ssh_send_verstring proc near           ; CODE XREF: _connect_to_host+365p
.text:0001B158                                         ; _do_ssh_init+466p ...
.text:0001B158
.text:0001B158 var_C           = dword ptr -0Ch
.text:0001B158 Size            = dword ptr -8
.text:0001B158 Str             = dword ptr -4
.text:0001B158 arg_0           = dword ptr  8
.text:0001B158 Str1            = dword ptr  0Ch
.text:0001B158 arg_8           = dword ptr  10h
.text:0001B158
.text:0001B158                 push    ebp
.text:0001B159                 mov     ebp, esp
.text:0001B15B                 sub     esp, 0Ch
.text:0001B15E                 mov     [ebp+var_C], 0CCCCCCCCh
.text:0001B165                 mov     [ebp+Size], 0CCCCCCCCh
.text:0001B16C                 mov     [ebp+Str], 0CCCCCCCCh
.text:0001B173                 mov     eax, [ebp+arg_0]
.text:0001B176                 cmp     dword ptr [eax+16Ch], 2
.text:0001B17D                 jnz     short loc_1B19A
.text:0001B17F                 push    offset _sshver
.text:0001B184                 mov     ecx, [ebp+Str1]
.text:0001B187                 push    ecx
.text:0001B188                 push    offset $SG89413 ; "%s2.0-%s\r\n"
.text:0001B18D                 call    _dupprintf
.text:0001B192                 add     esp, 0Ch
.text:0001B195                 mov     [ebp+Str], eax
.text:0001B198                 jmp     short loc_1B203
.text:0001B19A ; ---------------------------------------------------------------------------
.text:0001B19A
.text:0001B19A loc_1B19A:                              ; CODE XREF: _ssh_send_verstring+25j
.text:0001B19A                 push    offset $SG89416 ; "SSH-"
.text:0001B19F                 mov     edx, [ebp+Str1]
.text:0001B1A2                 push    edx             ; Str1
.text:0001B1A3                 call    _strcmp
.text:0001B1A8                 add     esp, 8
.text:0001B1AB                 test    eax, eax
.text:0001B1AD                 jz      short loc_1B1C6
.text:0001B1AF                 push    0B32h           ; Line
.text:0001B1B4                 push    offset $SG89417 ; "..\\..\\..\\ssh.c"
.text:0001B1B9                 push    offset $SG89418 ; "!strcmp(protoname, \"SSH-\")"
.text:0001B1BE                 call    __wassert
.text:0001B1C3 ; ---------------------------------------------------------------------------
.text:0001B1C3                 add     esp, 0Ch
.text:0001B1C6
.text:0001B1C6 loc_1B1C6:                              ; CODE XREF: _ssh_send_verstring+55j
.text:0001B1C6                 push    offset $SG89419 ; "1.5"
.text:0001B1CB                 mov     ecx, [ebp+arg_8]
.text:0001B1CE                 push    ecx             ; Str
.text:0001B1CF                 call    _ssh_versioncmp
.text:0001B1D4                 add     esp, 8
.text:0001B1D7                 test    eax, eax
.text:0001B1D9                 jg      short loc_1B1E3
.text:0001B1DB                 mov     edx, [ebp+arg_8]
.text:0001B1DE                 mov     [ebp+var_C], edx
.text:0001B1E1                 jmp     short loc_1B1EA
.text:0001B1E3 ; ---------------------------------------------------------------------------
.text:0001B1E3
.text:0001B1E3 loc_1B1E3:                              ; CODE XREF: _ssh_send_verstring+81j
.text:0001B1E3                 mov     [ebp+var_C], offset $SG89420 ; "1.5"
.text:0001B1EA
.text:0001B1EA loc_1B1EA:                              ; CODE XREF: _ssh_send_verstring+89j
.text:0001B1EA                 push    offset _sshver
.text:0001B1EF                 mov     eax, [ebp+var_C]
.text:0001B1F2                 push    eax
.text:0001B1F3                 push    offset $SG89421 ; "SSH-%s-%s\n"
.text:0001B1F8                 call    _dupprintf
.text:0001B1FD                 add     esp, 0Ch
.text:0001B200                 mov     [ebp+Str], eax
.text:0001B203
.text:0001B203 loc_1B203:                              ; CODE XREF: _ssh_send_verstring+40j
.text:0001B203                 mov     ecx, [ebp+Str1]
.text:0001B206                 push    ecx             ; Str
.text:0001B207                 call    _strlen
.text:0001B20C                 add     esp, 4
.text:0001B20F                 add     eax, [ebp+Str]
.text:0001B212                 push    eax
.text:0001B213                 call    _ssh_fix_verstring
.text:0001B218                 add     esp, 4
.text:0001B21B                 mov     edx, [ebp+arg_0]
.text:0001B21E                 cmp     dword ptr [edx+16Ch], 2
.text:0001B225                 jnz     short loc_1B276
.text:0001B227                 push    offset $SG89424 ; Control
.text:0001B22C                 mov     eax, [ebp+Str]
.text:0001B22F                 push    eax             ; Str
.text:0001B230                 call    _strcspn
.text:0001B235                 add     esp, 8
.text:0001B238                 mov     [ebp+Size], eax
.text:0001B23B                 push    1
.text:0001B23D                 mov     ecx, [ebp+Size]
.text:0001B240                 add     ecx, 1
.text:0001B243                 push    ecx
.text:0001B244                 call    _safemalloc
.text:0001B249                 add     esp, 8
.text:0001B24C                 mov     edx, [ebp+arg_0]
.text:0001B24F                 mov     [edx+4], eax
.text:0001B252                 mov     eax, [ebp+Size]
.text:0001B255                 push    eax             ; Size
.text:0001B256                 mov     ecx, [ebp+Str]
.text:0001B259                 push    ecx             ; Src
.text:0001B25A                 mov     edx, [ebp+arg_0]
.text:0001B25D                 mov     eax, [edx+4]
.text:0001B260                 push    eax             ; Dst
.text:0001B261                 call    _memcpy
.text:0001B266                 add     esp, 0Ch
.text:0001B269                 mov     ecx, [ebp+arg_0]
.text:0001B26C                 mov     edx, [ecx+4]
.text:0001B26F                 mov     eax, [ebp+Size]
.text:0001B272                 mov     byte ptr [edx+eax], 0
.text:0001B276
.text:0001B276 loc_1B276:                              ; CODE XREF: _ssh_send_verstring+CDj
.text:0001B276                 mov     ecx, [ebp+Str]
.text:0001B279                 push    ecx
.text:0001B27A                 push    offset $SG89427 ; Control
.text:0001B27F                 mov     edx, [ebp+Str]
.text:0001B282                 push    edx             ; Str
.text:0001B283                 call    _strcspn
.text:0001B288                 add     esp, 8
.text:0001B28B                 push    eax
.text:0001B28C                 push    offset $SG89428 ; "We claim version: %.*s"
.text:0001B291                 mov     eax, [ebp+arg_0]
.text:0001B294                 push    eax
.text:0001B295                 call    _logeventf
.text:0001B29A                 add     esp, 10h
.text:0001B29D                 mov     ecx, [ebp+Str]
.text:0001B2A0                 push    ecx             ; Str
.text:0001B2A1                 call    _strlen
.text:0001B2A6                 add     esp, 4
.text:0001B2A9                 push    eax
.text:0001B2AA                 mov     edx, [ebp+Str]
.text:0001B2AD                 push    edx
.text:0001B2AE                 mov     eax, [ebp+arg_0]
.text:0001B2B1                 push    eax
.text:0001B2B2                 call    _s_write
.text:0001B2B7                 add     esp, 0Ch
.text:0001B2BA                 mov     ecx, [ebp+Str]
.text:0001B2BD                 push    ecx
.text:0001B2BE                 call    _safefree
.text:0001B2C3                 add     esp, 4
.text:0001B2C6                 add     esp, 0Ch
.text:0001B2C9                 cmp     ebp, esp
.text:0001B2CB                 call    __RTC_CheckEsp
.text:0001B2D0                 mov     esp, ebp
.text:0001B2D2                 pop     ebp
.text:0001B2D3                 retn
.text:0001B2D3 _ssh_send_verstring endp
.text:0001B2D3
.text:0001B2D3 ; ---------------------------------------------------------------------------
.text:0001B2D4                 align 8
.text:0001B2D8
.text:0001B2D8 ; =============== S U B R O U T I N E =======================================
.text:0001B2D8
.text:0001B2D8 ; Attributes: bp-based frame
.text:0001B2D8
.text:0001B2D8 ; int __cdecl ssh_versioncmp(char *Str, char *)
.text:0001B2D8 _ssh_versioncmp proc near               ; CODE XREF: _ssh_send_verstring+77p
.text:0001B2D8                                         ; _do_ssh_init+306p ...
.text:0001B2D8
.text:0001B2D8 var_20          = dword ptr -20h
.text:0001B2D8 var_1C          = dword ptr -1Ch
.text:0001B2D8 var_18          = dword ptr -18h
.text:0001B2D8 var_14          = dword ptr -14h
.text:0001B2D8 var_10          = dword ptr -10h
.text:0001B2D8 var_C           = dword ptr -0Ch
.text:0001B2D8 EndPtr          = dword ptr -8
.text:0001B2D8 var_4           = dword ptr -4
.text:0001B2D8 Str             = dword ptr  8
.text:0001B2D8 arg_4           = dword ptr  0Ch
.text:0001B2D8
.text:0001B2D8                 push    ebp
.text:0001B2D9                 mov     ebp, esp
.text:0001B2DB                 sub     esp, 20h
.text:0001B2DE                 mov     eax, 0CCCCCCCCh
.text:0001B2E3                 mov     [ebp+var_20], eax
.text:0001B2E6                 mov     [ebp+var_1C], eax
.text:0001B2E9                 mov     [ebp+var_18], eax
.text:0001B2EC                 mov     [ebp+var_14], eax
.text:0001B2EF                 mov     [ebp+var_10], eax
.text:0001B2F2                 mov     [ebp+var_C], eax
.text:0001B2F5                 mov     [ebp+EndPtr], eax
.text:0001B2F8                 mov     [ebp+var_4], eax
.text:0001B2FB                 push    0Ah             ; Radix
.text:0001B2FD                 lea     eax, [ebp+EndPtr]
.text:0001B300                 push    eax             ; EndPtr
.text:0001B301                 mov     ecx, [ebp+Str]
.text:0001B304                 push    ecx             ; Str
.text:0001B305                 call    _strtoul
.text:0001B30A                 add     esp, 0Ch
.text:0001B30D                 mov     [ebp+var_1C], eax
.text:0001B310                 push    0Ah             ; Radix
.text:0001B312                 lea     edx, [ebp+var_14]
.text:0001B315                 push    edx             ; EndPtr
.text:0001B316                 mov     eax, [ebp+arg_4]
.text:0001B319                 push    eax             ; Str
.text:0001B31A                 call    _strtoul
.text:0001B31F                 add     esp, 0Ch
.text:0001B322                 mov     [ebp+var_20], eax
.text:0001B325                 mov     ecx, [ebp+var_1C]
.text:0001B328                 cmp     ecx, [ebp+var_20]
.text:0001B32B                 jz      short loc_1B33D
.text:0001B32D                 mov     edx, [ebp+var_1C]
.text:0001B330                 cmp     edx, [ebp+var_20]
.text:0001B333                 sbb     eax, eax
.text:0001B335                 and     eax, 0FFFFFFFEh
.text:0001B338                 add     eax, 1
.text:0001B33B                 jmp     short loc_1B3A9
.text:0001B33D ; ---------------------------------------------------------------------------
.text:0001B33D
.text:0001B33D loc_1B33D:                              ; CODE XREF: _ssh_versioncmp+53j
.text:0001B33D                 mov     eax, [ebp+EndPtr]
.text:0001B340                 movsx   ecx, byte ptr [eax]
.text:0001B343                 cmp     ecx, 2Eh ; '.'
.text:0001B346                 jnz     short loc_1B351
.text:0001B348                 mov     edx, [ebp+EndPtr]
.text:0001B34B                 add     edx, 1
.text:0001B34E                 mov     [ebp+EndPtr], edx
.text:0001B351
.text:0001B351 loc_1B351:                              ; CODE XREF: _ssh_versioncmp+6Ej
.text:0001B351                 mov     eax, [ebp+var_14]
.text:0001B354                 movsx   ecx, byte ptr [eax]
.text:0001B357                 cmp     ecx, 2Eh ; '.'
.text:0001B35A                 jnz     short loc_1B365
.text:0001B35C                 mov     edx, [ebp+var_14]
.text:0001B35F                 add     edx, 1
.text:0001B362                 mov     [ebp+var_14], edx
.text:0001B365
.text:0001B365 loc_1B365:                              ; CODE XREF: _ssh_versioncmp+82j
.text:0001B365                 push    0Ah             ; Radix
.text:0001B367                 lea     eax, [ebp+EndPtr]
.text:0001B36A                 push    eax             ; EndPtr
.text:0001B36B                 mov     ecx, [ebp+EndPtr]
.text:0001B36E                 push    ecx             ; Str
.text:0001B36F                 call    _strtoul
.text:0001B374                 add     esp, 0Ch
.text:0001B377                 mov     [ebp+var_1C], eax
.text:0001B37A                 push    0Ah             ; Radix
.text:0001B37C                 lea     edx, [ebp+var_14]
.text:0001B37F                 push    edx             ; EndPtr
.text:0001B380                 mov     eax, [ebp+var_14]
.text:0001B383                 push    eax             ; Str
.text:0001B384                 call    _strtoul
.text:0001B389                 add     esp, 0Ch
.text:0001B38C                 mov     [ebp+var_20], eax
.text:0001B38F                 mov     ecx, [ebp+var_1C]
.text:0001B392                 cmp     ecx, [ebp+var_20]
.text:0001B395                 jz      short loc_1B3A7
.text:0001B397                 mov     edx, [ebp+var_1C]
.text:0001B39A                 cmp     edx, [ebp+var_20]
.text:0001B39D                 sbb     eax, eax
.text:0001B39F                 and     eax, 0FFFFFFFEh
.text:0001B3A2                 add     eax, 1
.text:0001B3A5                 jmp     short loc_1B3A9
.text:0001B3A7 ; ---------------------------------------------------------------------------
.text:0001B3A7
.text:0001B3A7 loc_1B3A7:                              ; CODE XREF: _ssh_versioncmp+BDj
.text:0001B3A7                 xor     eax, eax
.text:0001B3A9
.text:0001B3A9 loc_1B3A9:                              ; CODE XREF: _ssh_versioncmp+63j
.text:0001B3A9                                         ; _ssh_versioncmp+CDj
.text:0001B3A9                 push    edx
.text:0001B3AA                 mov     ecx, ebp
.text:0001B3AC                 push    eax
.text:0001B3AD                 lea     edx, $LN10_7
.text:0001B3B3                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0001B3B8                 pop     eax
.text:0001B3B9                 pop     edx
.text:0001B3BA                 add     esp, 20h
.text:0001B3BD                 cmp     ebp, esp
.text:0001B3BF                 call    __RTC_CheckEsp
.text:0001B3C4                 mov     esp, ebp
.text:0001B3C6                 pop     ebp
.text:0001B3C7                 retn
.text:0001B3C7 _ssh_versioncmp endp
.text:0001B3C7
.text:0001B3C7 ; ---------------------------------------------------------------------------
.text:0001B3C8 $LN10_7         dd 2                    ; DATA XREF: _ssh_versioncmp+D5o
.text:0001B3CC                 dd offset $LN9_6
.text:0001B3D0 $LN9_6          dd 0FFFFFFF8h, 4        ; DATA XREF: .text:0001B3CCo
.text:0001B3D8                 dd offset $LN7_5
.text:0001B3DC                 dd 0FFFFFFECh, 4
.text:0001B3E4                 dd offset $LN8_7
.text:0001B3E8 $LN8_7          db 62h, 65h, 0          ; DATA XREF: .text:0001B3E4o
.text:0001B3EB $LN7_5          db 61h                  ; DATA XREF: .text:0001B3D8o
.text:0001B3EC                 dd 0CCCC0065h, 2 dup(0CCCCCCCCh)
.text:0001B3F8
.text:0001B3F8 ; =============== S U B R O U T I N E =======================================
.text:0001B3F8
.text:0001B3F8 ; Attributes: bp-based frame
.text:0001B3F8
.text:0001B3F8 _ssh_fix_verstring proc near            ; CODE XREF: _ssh_send_verstring+BBp
.text:0001B3F8
.text:0001B3F8 arg_0           = dword ptr  8
.text:0001B3F8
.text:0001B3F8                 push    ebp
.text:0001B3F9                 mov     ebp, esp
.text:0001B3FB
.text:0001B3FB loc_1B3FB:                              ; CODE XREF: _ssh_fix_verstring+21j
.text:0001B3FB                 mov     eax, [ebp+arg_0]
.text:0001B3FE                 movsx   ecx, byte ptr [eax]
.text:0001B401                 test    ecx, ecx
.text:0001B403                 jz      short loc_1B41B
.text:0001B405                 mov     edx, [ebp+arg_0]
.text:0001B408                 movsx   eax, byte ptr [edx]
.text:0001B40B                 cmp     eax, 2Dh ; '-'
.text:0001B40E                 jz      short loc_1B41B
.text:0001B410                 mov     ecx, [ebp+arg_0]
.text:0001B413                 add     ecx, 1
.text:0001B416                 mov     [ebp+arg_0], ecx
.text:0001B419                 jmp     short loc_1B3FB
.text:0001B41B ; ---------------------------------------------------------------------------
.text:0001B41B
.text:0001B41B loc_1B41B:                              ; CODE XREF: _ssh_fix_verstring+Bj
.text:0001B41B                                         ; _ssh_fix_verstring+16j
.text:0001B41B                 mov     edx, [ebp+arg_0]
.text:0001B41E                 movsx   eax, byte ptr [edx]
.text:0001B421                 cmp     eax, 2Dh ; '-'
.text:0001B424                 jz      short loc_1B43D
.text:0001B426                 push    0B17h           ; Line
.text:0001B42B                 push    offset $SG89396 ; "..\\..\\..\\ssh.c"
.text:0001B430                 push    offset $SG89397 ; "*str == '-'"
.text:0001B435                 call    __wassert
.text:0001B43A ; ---------------------------------------------------------------------------
.text:0001B43A                 add     esp, 0Ch
.text:0001B43D
.text:0001B43D loc_1B43D:                              ; CODE XREF: _ssh_fix_verstring+2Cj
.text:0001B43D                 mov     edx, [ebp+arg_0]
.text:0001B440                 add     edx, 1
.text:0001B443                 mov     [ebp+arg_0], edx
.text:0001B446
.text:0001B446 loc_1B446:                              ; CODE XREF: _ssh_fix_verstring+7Dj
.text:0001B446                 mov     eax, [ebp+arg_0]
.text:0001B449                 movsx   ecx, byte ptr [eax]
.text:0001B44C                 test    ecx, ecx
.text:0001B44E                 jz      short loc_1B477
.text:0001B450                 mov     edx, [ebp+arg_0]
.text:0001B453                 movsx   eax, byte ptr [edx]
.text:0001B456                 cmp     eax, 2Dh ; '-'
.text:0001B459                 jz      short loc_1B466
.text:0001B45B                 mov     ecx, [ebp+arg_0]
.text:0001B45E                 movsx   edx, byte ptr [ecx]
.text:0001B461                 cmp     edx, 20h ; ' '
.text:0001B464                 jnz     short loc_1B46C
.text:0001B466
.text:0001B466 loc_1B466:                              ; CODE XREF: _ssh_fix_verstring+61j
.text:0001B466                 mov     eax, [ebp+arg_0]
.text:0001B469                 mov     byte ptr [eax], 5Fh ; '_'
.text:0001B46C
.text:0001B46C loc_1B46C:                              ; CODE XREF: _ssh_fix_verstring+6Cj
.text:0001B46C                 mov     ecx, [ebp+arg_0]
.text:0001B46F                 add     ecx, 1
.text:0001B472                 mov     [ebp+arg_0], ecx
.text:0001B475                 jmp     short loc_1B446
.text:0001B477 ; ---------------------------------------------------------------------------
.text:0001B477
.text:0001B477 loc_1B477:                              ; CODE XREF: _ssh_fix_verstring+56j
.text:0001B477                 cmp     ebp, esp
.text:0001B479                 call    __RTC_CheckEsp
.text:0001B47E                 pop     ebp
.text:0001B47F                 retn
.text:0001B47F _ssh_fix_verstring endp
.text:0001B47F
.text:0001B47F ; ---------------------------------------------------------------------------
.text:0001B480                 db 8 dup(0CCh)
.text:0001B488
.text:0001B488 ; =============== S U B R O U T I N E =======================================
.text:0001B488
.text:0001B488 ; Attributes: bp-based frame
.text:0001B488
.text:0001B488 _do_ssh_init    proc near               ; DATA XREF: _connect_to_host+1C4o
.text:0001B488
.text:0001B488 var_14          = dword ptr -14h
.text:0001B488 var_10          = dword ptr -10h
.text:0001B488 Size            = dword ptr -0Ch
.text:0001B488 var_8           = dword ptr -8
.text:0001B488 var_4           = dword ptr -4
.text:0001B488 arg_0           = dword ptr  8
.text:0001B488 arg_4           = byte ptr  0Ch
.text:0001B488
.text:0001B488                 push    ebp
.text:0001B489                 mov     ebp, esp
.text:0001B48B                 sub     esp, 14h
.text:0001B48E                 mov     eax, 0CCCCCCCCh
.text:0001B493                 mov     [ebp+var_14], eax
.text:0001B496                 mov     [ebp+var_10], eax
.text:0001B499                 mov     [ebp+Size], eax
.text:0001B49C                 mov     [ebp+var_8], eax
.text:0001B49F                 mov     [ebp+var_4], eax
.text:0001B4A2                 mov     eax, [ebp+arg_0]
.text:0001B4A5                 cmp     dword ptr [eax+198h], 0
.text:0001B4AC                 jnz     short loc_1B4D8
.text:0001B4AE                 push    28h ; '('
.text:0001B4B0                 push    1
.text:0001B4B2                 call    _safemalloc
.text:0001B4B7                 add     esp, 8
.text:0001B4BA                 mov     [ebp+var_10], eax
.text:0001B4BD                 mov     ecx, [ebp+arg_0]
.text:0001B4C0                 mov     edx, [ebp+var_10]
.text:0001B4C3                 mov     [ecx+198h], edx
.text:0001B4C9                 mov     eax, [ebp+var_10]
.text:0001B4CC                 mov     [ebp+var_4], eax
.text:0001B4CF                 mov     ecx, [ebp+var_4]
.text:0001B4D2                 mov     dword ptr [ecx], 0
.text:0001B4D8
.text:0001B4D8 loc_1B4D8:                              ; CODE XREF: _do_ssh_init+24j
.text:0001B4D8                 mov     edx, [ebp+arg_0]
.text:0001B4DB                 mov     eax, [edx+198h]
.text:0001B4E1                 mov     [ebp+var_4], eax
.text:0001B4E4                 mov     ecx, [ebp+var_4]
.text:0001B4E7                 mov     [ebp+var_8], ecx
.text:0001B4EA                 mov     edx, [ebp+var_4]
.text:0001B4ED                 mov     eax, [edx]
.text:0001B4EF                 mov     [ebp+var_14], eax
.text:0001B4F2                 cmp     [ebp+var_14], 0B67h
.text:0001B4F9                 jg      short loc_1B51C
.text:0001B4FB                 cmp     [ebp+var_14], 0B67h
.text:0001B502                 jz      loc_1B5B5
.text:0001B508                 cmp     [ebp+var_14], 0
.text:0001B50C                 jz      short loc_1B53B
.text:0001B50E                 cmp     [ebp+var_14], 0B62h
.text:0001B515                 jz      short loc_1B591
.text:0001B517                 jmp     loc_1BA15
.text:0001B51C ; ---------------------------------------------------------------------------
.text:0001B51C
.text:0001B51C loc_1B51C:                              ; CODE XREF: _do_ssh_init+71j
.text:0001B51C                 cmp     [ebp+var_14], 0B68h
.text:0001B523                 jz      loc_1B5CE
.text:0001B529                 cmp     [ebp+var_14], 0B7Eh
.text:0001B530                 jz      loc_1B709
.text:0001B536                 jmp     loc_1BA15
.text:0001B53B ; ---------------------------------------------------------------------------
.text:0001B53B
.text:0001B53B loc_1B53B:                              ; CODE XREF: _do_ssh_init+84j
.text:0001B53B                                         ; _do_ssh_init+14Aj
.text:0001B53B                 mov     ecx, [ebp+var_4]
.text:0001B53E                 mov     dword ptr [ecx+1Ch], 0
.text:0001B545                 jmp     short loc_1B556
.text:0001B547 ; ---------------------------------------------------------------------------
.text:0001B547
.text:0001B547 loc_1B547:                              ; CODE XREF: _do_ssh_init+10Dj
.text:0001B547                 mov     edx, [ebp+var_4]
.text:0001B54A                 mov     eax, [edx+1Ch]
.text:0001B54D                 add     eax, 1
.text:0001B550                 mov     ecx, [ebp+var_4]
.text:0001B553                 mov     [ecx+1Ch], eax
.text:0001B556
.text:0001B556 loc_1B556:                              ; CODE XREF: _do_ssh_init+BDj
.text:0001B556                 mov     edx, [ebp+var_4]
.text:0001B559                 mov     eax, [edx+1Ch]
.text:0001B55C                 movsx   ecx, ds:?protoname@?1??do_ssh_init@@9@9[eax] ; `do_ssh_init'::`2'::protoname
.text:0001B563                 test    ecx, ecx
.text:0001B565                 jz      short loc_1B597
.text:0001B567                 movsx   edx, [ebp+arg_4]
.text:0001B56B                 mov     eax, [ebp+var_4]
.text:0001B56E                 mov     ecx, [eax+1Ch]
.text:0001B571                 movsx   eax, ds:?protoname@?1??do_ssh_init@@9@9[ecx] ; `do_ssh_init'::`2'::protoname
.text:0001B578                 cmp     edx, eax
.text:0001B57A                 jz      short loc_1B57E
.text:0001B57C                 jmp     short $no$89464
.text:0001B57E ; ---------------------------------------------------------------------------
.text:0001B57E
.text:0001B57E loc_1B57E:                              ; CODE XREF: _do_ssh_init+F2j
.text:0001B57E                                         ; _do_ssh_init+10Bj
.text:0001B57E                 mov     ecx, [ebp+var_8]
.text:0001B581                 mov     dword ptr [ecx], 0B62h
.text:0001B587                 mov     eax, 1
.text:0001B58C                 jmp     loc_1BA20
.text:0001B591 ; ---------------------------------------------------------------------------
.text:0001B591
.text:0001B591 loc_1B591:                              ; CODE XREF: _do_ssh_init+8Dj
.text:0001B591                 xor     edx, edx
.text:0001B593                 jnz     short loc_1B57E
.text:0001B595                 jmp     short loc_1B547
.text:0001B597 ; ---------------------------------------------------------------------------
.text:0001B597
.text:0001B597 loc_1B597:                              ; CODE XREF: _do_ssh_init+DDj
.text:0001B597                 jmp     short loc_1B5D7
.text:0001B599 ; ---------------------------------------------------------------------------
.text:0001B599
.text:0001B599 $no$89464:                              ; CODE XREF: _do_ssh_init+F4j
.text:0001B599                                         ; _do_ssh_init+131j
.text:0001B599                 movzx   eax, [ebp+arg_4]
.text:0001B59D                 cmp     eax, 0Ah
.text:0001B5A0                 jz      short loc_1B5BB
.text:0001B5A2
.text:0001B5A2 loc_1B5A2:                              ; CODE XREF: _do_ssh_init+12Fj
.text:0001B5A2                 mov     ecx, [ebp+var_8]
.text:0001B5A5                 mov     dword ptr [ecx], 0B67h
.text:0001B5AB                 mov     eax, 1
.text:0001B5B0                 jmp     loc_1BA20
.text:0001B5B5 ; ---------------------------------------------------------------------------
.text:0001B5B5
.text:0001B5B5 loc_1B5B5:                              ; CODE XREF: _do_ssh_init+7Aj
.text:0001B5B5                 xor     edx, edx
.text:0001B5B7                 jnz     short loc_1B5A2
.text:0001B5B9                 jmp     short $no$89464
.text:0001B5BB ; ---------------------------------------------------------------------------
.text:0001B5BB
.text:0001B5BB loc_1B5BB:                              ; CODE XREF: _do_ssh_init+118j
.text:0001B5BB                                         ; _do_ssh_init+148j
.text:0001B5BB                 mov     eax, [ebp+var_8]
.text:0001B5BE                 mov     dword ptr [eax], 0B68h
.text:0001B5C4                 mov     eax, 1
.text:0001B5C9                 jmp     loc_1BA20
.text:0001B5CE ; ---------------------------------------------------------------------------
.text:0001B5CE
.text:0001B5CE loc_1B5CE:                              ; CODE XREF: _do_ssh_init+9Bj
.text:0001B5CE                 xor     ecx, ecx
.text:0001B5D0                 jnz     short loc_1B5BB
.text:0001B5D2                 jmp     loc_1B53B
.text:0001B5D7 ; ---------------------------------------------------------------------------
.text:0001B5D7
.text:0001B5D7 loc_1B5D7:                              ; CODE XREF: _do_ssh_init:loc_1B597j
.text:0001B5D7                 mov     edx, [ebp+var_4]
.text:0001B5DA                 mov     dword ptr [edx+18h], 15h
.text:0001B5E1                 push    1
.text:0001B5E3                 mov     eax, [ebp+var_4]
.text:0001B5E6                 mov     ecx, [eax+18h]
.text:0001B5E9                 push    ecx
.text:0001B5EA                 call    _safemalloc
.text:0001B5EF                 add     esp, 8
.text:0001B5F2                 mov     edx, [ebp+var_4]
.text:0001B5F5                 mov     [edx+14h], eax
.text:0001B5F8                 push    offset ?protoname@?1??do_ssh_init@@9@9 ; Source
.text:0001B5FD                 mov     eax, [ebp+var_4]
.text:0001B600                 mov     ecx, [eax+14h]
.text:0001B603                 push    ecx             ; Dest
.text:0001B604                 call    _strcpy
.text:0001B609                 add     esp, 8
.text:0001B60C                 push    offset ?protoname@?1??do_ssh_init@@9@9 ; Str
.text:0001B611                 call    _strlen
.text:0001B616                 add     esp, 4
.text:0001B619                 mov     edx, [ebp+var_4]
.text:0001B61C                 mov     [edx+4], eax
.text:0001B61F                 mov     eax, [ebp+var_4]
.text:0001B622                 mov     dword ptr [eax+1Ch], 0
.text:0001B629
.text:0001B629 loc_1B629:                              ; CODE XREF: _do_ssh_init+285j
.text:0001B629                 mov     ecx, 1
.text:0001B62E                 test    ecx, ecx
.text:0001B630                 jz      loc_1B712
.text:0001B636                 mov     edx, [ebp+var_4]
.text:0001B639                 mov     eax, [edx+18h]
.text:0001B63C                 sub     eax, 1
.text:0001B63F                 mov     ecx, [ebp+var_4]
.text:0001B642                 cmp     [ecx+4], eax
.text:0001B645                 jl      short loc_1B674
.text:0001B647                 mov     edx, [ebp+var_4]
.text:0001B64A                 mov     eax, [edx+18h]
.text:0001B64D                 add     eax, 10h
.text:0001B650                 mov     ecx, [ebp+var_4]
.text:0001B653                 mov     [ecx+18h], eax
.text:0001B656                 push    1
.text:0001B658                 mov     edx, [ebp+var_4]
.text:0001B65B                 mov     eax, [edx+18h]
.text:0001B65E                 push    eax
.text:0001B65F                 mov     ecx, [ebp+var_4]
.text:0001B662                 mov     edx, [ecx+14h]
.text:0001B665                 push    edx
.text:0001B666                 call    _saferealloc
.text:0001B66B                 add     esp, 0Ch
.text:0001B66E                 mov     ecx, [ebp+var_4]
.text:0001B671                 mov     [ecx+14h], eax
.text:0001B674
.text:0001B674 loc_1B674:                              ; CODE XREF: _do_ssh_init+1BDj
.text:0001B674                 mov     edx, [ebp+var_4]
.text:0001B677                 mov     eax, [edx+14h]
.text:0001B67A                 mov     ecx, [ebp+var_4]
.text:0001B67D                 mov     edx, [ecx+4]
.text:0001B680                 mov     cl, [ebp+arg_4]
.text:0001B683                 mov     [eax+edx], cl
.text:0001B686                 mov     edx, [ebp+var_4]
.text:0001B689                 mov     eax, [edx+4]
.text:0001B68C                 add     eax, 1
.text:0001B68F                 mov     ecx, [ebp+var_4]
.text:0001B692                 mov     [ecx+4], eax
.text:0001B695                 mov     edx, [ebp+var_4]
.text:0001B698                 cmp     dword ptr [edx+1Ch], 0
.text:0001B69C                 jl      short loc_1B6EB
.text:0001B69E                 movzx   eax, [ebp+arg_4]
.text:0001B6A2                 cmp     eax, 2Dh ; '-'
.text:0001B6A5                 jnz     short loc_1B6C1
.text:0001B6A7                 mov     ecx, [ebp+var_4]
.text:0001B6AA                 mov     edx, [ecx+1Ch]
.text:0001B6AD                 mov     eax, [ebp+var_4]
.text:0001B6B0                 mov     byte ptr [eax+edx+8], 0
.text:0001B6B5                 mov     ecx, [ebp+var_4]
.text:0001B6B8                 mov     dword ptr [ecx+1Ch], 0FFFFFFFFh
.text:0001B6BF                 jmp     short loc_1B6E9
.text:0001B6C1 ; ---------------------------------------------------------------------------
.text:0001B6C1
.text:0001B6C1 loc_1B6C1:                              ; CODE XREF: _do_ssh_init+21Dj
.text:0001B6C1                 mov     edx, [ebp+var_4]
.text:0001B6C4                 cmp     dword ptr [edx+1Ch], 9
.text:0001B6C8                 jnb     short loc_1B6E9
.text:0001B6CA                 mov     eax, [ebp+var_4]
.text:0001B6CD                 mov     ecx, [eax+1Ch]
.text:0001B6D0                 mov     edx, [ebp+var_4]
.text:0001B6D3                 mov     al, [ebp+arg_4]
.text:0001B6D6                 mov     [edx+ecx+8], al
.text:0001B6DA                 mov     ecx, [ebp+var_4]
.text:0001B6DD                 mov     edx, [ecx+1Ch]
.text:0001B6E0                 add     edx, 1
.text:0001B6E3                 mov     eax, [ebp+var_4]
.text:0001B6E6                 mov     [eax+1Ch], edx
.text:0001B6E9
.text:0001B6E9 loc_1B6E9:                              ; CODE XREF: _do_ssh_init+237j
.text:0001B6E9                                         ; _do_ssh_init+240j
.text:0001B6E9                 jmp     short loc_1B6F6
.text:0001B6EB ; ---------------------------------------------------------------------------
.text:0001B6EB
.text:0001B6EB loc_1B6EB:                              ; CODE XREF: _do_ssh_init+214j
.text:0001B6EB                 movzx   ecx, [ebp+arg_4]
.text:0001B6EF                 cmp     ecx, 0Ah
.text:0001B6F2                 jnz     short loc_1B6F6
.text:0001B6F4                 jmp     short loc_1B712
.text:0001B6F6 ; ---------------------------------------------------------------------------
.text:0001B6F6
.text:0001B6F6 loc_1B6F6:                              ; CODE XREF: _do_ssh_init:loc_1B6E9j
.text:0001B6F6                                         ; _do_ssh_init+26Aj ...
.text:0001B6F6                 mov     edx, [ebp+var_8]
.text:0001B6F9                 mov     dword ptr [edx], 0B7Eh
.text:0001B6FF                 mov     eax, 1
.text:0001B704                 jmp     loc_1BA20
.text:0001B709 ; ---------------------------------------------------------------------------
.text:0001B709
.text:0001B709 loc_1B709:                              ; CODE XREF: _do_ssh_init+A8j
.text:0001B709                 xor     eax, eax
.text:0001B70B                 jnz     short loc_1B6F6
.text:0001B70D                 jmp     loc_1B629
.text:0001B712 ; ---------------------------------------------------------------------------
.text:0001B712
.text:0001B712 loc_1B712:                              ; CODE XREF: _do_ssh_init+1A8j
.text:0001B712                                         ; _do_ssh_init+26Cj
.text:0001B712                 mov     ecx, [ebp+arg_0]
.text:0001B715                 mov     dword ptr [ecx+48h], 0
.text:0001B71C                 mov     edx, [ebp+arg_0]
.text:0001B71F                 mov     dword ptr [edx+1F0h], 0
.text:0001B729                 mov     eax, [ebp+var_4]
.text:0001B72C                 mov     ecx, [eax+14h]
.text:0001B72F                 mov     edx, [ebp+var_4]
.text:0001B732                 mov     eax, [edx+4]
.text:0001B735                 mov     byte ptr [ecx+eax], 0
.text:0001B739                 push    offset $SG89499 ; Control
.text:0001B73E                 mov     ecx, [ebp+var_4]
.text:0001B741                 mov     edx, [ecx+14h]
.text:0001B744                 push    edx             ; Str
.text:0001B745                 call    _strcspn
.text:0001B74A                 add     esp, 8
.text:0001B74D                 mov     ecx, [ebp+var_4]
.text:0001B750                 mov     edx, [ecx+14h]
.text:0001B753                 mov     byte ptr [eax+edx], 0
.text:0001B757                 mov     eax, [ebp+var_4]
.text:0001B75A                 mov     ecx, [eax+14h]
.text:0001B75D                 push    ecx
.text:0001B75E                 push    offset $SG89500 ; "Server version: %s"
.text:0001B763                 mov     edx, [ebp+arg_0]
.text:0001B766                 push    edx
.text:0001B767                 call    _logeventf
.text:0001B76C                 add     esp, 0Ch
.text:0001B76F                 mov     eax, [ebp+var_4]
.text:0001B772                 mov     ecx, [eax+14h]
.text:0001B775                 push    ecx
.text:0001B776                 mov     edx, [ebp+arg_0]
.text:0001B779                 push    edx
.text:0001B77A                 call    _ssh_detect_bugs
.text:0001B77F                 add     esp, 8
.text:0001B782                 push    offset $SG89501 ; "2.0"
.text:0001B787                 mov     eax, [ebp+var_4]
.text:0001B78A                 add     eax, 8
.text:0001B78D                 push    eax             ; Str
.text:0001B78E                 call    _ssh_versioncmp
.text:0001B793                 add     esp, 8
.text:0001B796                 xor     ecx, ecx
.text:0001B798                 test    eax, eax
.text:0001B79A                 setl    cl
.text:0001B79D                 mov     edx, [ebp+var_4]
.text:0001B7A0                 mov     [edx+20h], ecx
.text:0001B7A3                 push    offset $SG89502 ; "1.99"
.text:0001B7A8                 mov     eax, [ebp+var_4]
.text:0001B7AB                 add     eax, 8
.text:0001B7AE                 push    eax             ; Str
.text:0001B7AF                 call    _ssh_versioncmp
.text:0001B7B4                 add     esp, 8
.text:0001B7B7                 xor     ecx, ecx
.text:0001B7B9                 test    eax, eax
.text:0001B7BB                 setnl   cl
.text:0001B7BE                 mov     edx, [ebp+var_4]
.text:0001B7C1                 mov     [edx+24h], ecx
.text:0001B7C4                 push    1Fh
.text:0001B7C6                 mov     eax, [ebp+arg_0]
.text:0001B7C9                 mov     ecx, [eax+21Ch]
.text:0001B7CF                 push    ecx
.text:0001B7D0                 call    _conf_get_int
.text:0001B7D5                 add     esp, 8
.text:0001B7D8                 test    eax, eax
.text:0001B7DA                 jnz     short loc_1B813
.text:0001B7DC                 mov     edx, [ebp+var_4]
.text:0001B7DF                 cmp     dword ptr [edx+20h], 0
.text:0001B7E3                 jnz     short loc_1B813
.text:0001B7E5                 push    offset $SG89504 ; "SSH protocol version 1 required by conf"...
.text:0001B7EA                 call    _dupprintf
.text:0001B7EF                 add     esp, 4
.text:0001B7F2                 push    eax
.text:0001B7F3                 mov     eax, [ebp+arg_0]
.text:0001B7F6                 push    eax
.text:0001B7F7                 call    _bomb_out
.text:0001B7FC                 add     esp, 8
.text:0001B7FF
.text:0001B7FF loc_1B7FF:                              ; CODE XREF: _do_ssh_init+389j
.text:0001B7FF                 mov     ecx, [ebp+var_8]
.text:0001B802                 mov     dword ptr [ecx], 0
.text:0001B808                 xor     eax, eax
.text:0001B80A                 jmp     loc_1BA20
.text:0001B80F ; ---------------------------------------------------------------------------
.text:0001B80F                 xor     edx, edx
.text:0001B811                 jnz     short loc_1B7FF
.text:0001B813
.text:0001B813 loc_1B813:                              ; CODE XREF: _do_ssh_init+352j
.text:0001B813                                         ; _do_ssh_init+35Bj
.text:0001B813                 push    1Fh
.text:0001B815                 mov     eax, [ebp+arg_0]
.text:0001B818                 mov     ecx, [eax+21Ch]
.text:0001B81E                 push    ecx
.text:0001B81F                 call    _conf_get_int
.text:0001B824                 add     esp, 8
.text:0001B827                 cmp     eax, 3
.text:0001B82A                 jnz     short loc_1B863
.text:0001B82C                 mov     edx, [ebp+var_4]
.text:0001B82F                 cmp     dword ptr [edx+24h], 0
.text:0001B833                 jnz     short loc_1B863
.text:0001B835                 push    offset $SG89509 ; "SSH protocol version 2 required by conf"...
.text:0001B83A                 call    _dupprintf
.text:0001B83F                 add     esp, 4
.text:0001B842                 push    eax
.text:0001B843                 mov     eax, [ebp+arg_0]
.text:0001B846                 push    eax
.text:0001B847                 call    _bomb_out
.text:0001B84C                 add     esp, 8
.text:0001B84F
.text:0001B84F loc_1B84F:                              ; CODE XREF: _do_ssh_init+3D9j
.text:0001B84F                 mov     ecx, [ebp+var_8]
.text:0001B852                 mov     dword ptr [ecx], 0
.text:0001B858                 xor     eax, eax
.text:0001B85A                 jmp     loc_1BA20
.text:0001B85F ; ---------------------------------------------------------------------------
.text:0001B85F                 xor     edx, edx
.text:0001B861                 jnz     short loc_1B84F
.text:0001B863
.text:0001B863 loc_1B863:                              ; CODE XREF: _do_ssh_init+3A2j
.text:0001B863                                         ; _do_ssh_init+3ABj
.text:0001B863                 mov     eax, [ebp+var_4]
.text:0001B866                 cmp     dword ptr [eax+24h], 0
.text:0001B86A                 jz      short loc_1B89D
.text:0001B86C                 push    1Fh
.text:0001B86E                 mov     ecx, [ebp+arg_0]
.text:0001B871                 mov     edx, [ecx+21Ch]
.text:0001B877                 push    edx
.text:0001B878                 call    _conf_get_int
.text:0001B87D                 add     esp, 8
.text:0001B880                 cmp     eax, 2
.text:0001B883                 jge     short loc_1B88E
.text:0001B885                 mov     eax, [ebp+var_4]
.text:0001B888                 cmp     dword ptr [eax+20h], 0
.text:0001B88C                 jnz     short loc_1B89D
.text:0001B88E
.text:0001B88E loc_1B88E:                              ; CODE XREF: _do_ssh_init+3FBj
.text:0001B88E                 mov     ecx, [ebp+arg_0]
.text:0001B891                 mov     dword ptr [ecx+16Ch], 2
.text:0001B89B                 jmp     short loc_1B8AA
.text:0001B89D ; ---------------------------------------------------------------------------
.text:0001B89D
.text:0001B89D loc_1B89D:                              ; CODE XREF: _do_ssh_init+3E2j
.text:0001B89D                                         ; _do_ssh_init+404j
.text:0001B89D                 mov     edx, [ebp+arg_0]
.text:0001B8A0                 mov     dword ptr [edx+16Ch], 1
.text:0001B8AA
.text:0001B8AA loc_1B8AA:                              ; CODE XREF: _do_ssh_init+413j
.text:0001B8AA                 mov     eax, [ebp+arg_0]
.text:0001B8AD                 mov     ecx, [eax+16Ch]
.text:0001B8B3                 push    ecx
.text:0001B8B4                 push    offset $SG89516 ; "Using SSH protocol version %d"
.text:0001B8B9                 mov     edx, [ebp+arg_0]
.text:0001B8BC                 push    edx
.text:0001B8BD                 call    _logeventf
.text:0001B8C2                 add     esp, 0Ch
.text:0001B8C5                 push    1Fh
.text:0001B8C7                 mov     eax, [ebp+arg_0]
.text:0001B8CA                 mov     ecx, [eax+21Ch]
.text:0001B8D0                 push    ecx
.text:0001B8D1                 call    _conf_get_int
.text:0001B8D6                 add     esp, 8
.text:0001B8D9                 cmp     eax, 3
.text:0001B8DC                 jz      short loc_1B8F6
.text:0001B8DE                 mov     edx, [ebp+var_4]
.text:0001B8E1                 add     edx, 8
.text:0001B8E4                 push    edx             ; char *
.text:0001B8E5                 push    offset ?protoname@?1??do_ssh_init@@9@9 ; Str1
.text:0001B8EA                 mov     eax, [ebp+arg_0]
.text:0001B8ED                 push    eax             ; int
.text:0001B8EE                 call    _ssh_send_verstring
.text:0001B8F3                 add     esp, 0Ch
.text:0001B8F6
.text:0001B8F6 loc_1B8F6:                              ; CODE XREF: _do_ssh_init+454j
.text:0001B8F6                 mov     ecx, [ebp+arg_0]
.text:0001B8F9                 cmp     dword ptr [ecx+16Ch], 2
.text:0001B900                 jnz     short loc_1B97F
.text:0001B902                 push    offset $SG89520 ; Control
.text:0001B907                 mov     edx, [ebp+var_4]
.text:0001B90A                 mov     eax, [edx+14h]
.text:0001B90D                 push    eax             ; Str
.text:0001B90E                 call    _strcspn
.text:0001B913                 add     esp, 8
.text:0001B916                 mov     [ebp+Size], eax
.text:0001B919                 push    1
.text:0001B91B                 mov     ecx, [ebp+Size]
.text:0001B91E                 add     ecx, 1
.text:0001B921                 push    ecx
.text:0001B922                 call    _safemalloc
.text:0001B927                 add     esp, 8
.text:0001B92A                 mov     edx, [ebp+arg_0]
.text:0001B92D                 mov     [edx+8], eax
.text:0001B930                 mov     eax, [ebp+Size]
.text:0001B933                 push    eax             ; Size
.text:0001B934                 mov     ecx, [ebp+var_4]
.text:0001B937                 mov     edx, [ecx+14h]
.text:0001B93A                 push    edx             ; Src
.text:0001B93B                 mov     eax, [ebp+arg_0]
.text:0001B93E                 mov     ecx, [eax+8]
.text:0001B941                 push    ecx             ; Dst
.text:0001B942                 call    _memcpy
.text:0001B947                 add     esp, 0Ch
.text:0001B94A                 mov     edx, [ebp+arg_0]
.text:0001B94D                 mov     eax, [edx+8]
.text:0001B950                 mov     ecx, [ebp+Size]
.text:0001B953                 mov     byte ptr [eax+ecx], 0
.text:0001B957                 mov     edx, [ebp+arg_0]
.text:0001B95A                 mov     dword ptr [edx+210h], offset _ssh2_protocol
.text:0001B964                 mov     eax, [ebp+arg_0]
.text:0001B967                 push    eax
.text:0001B968                 call    _ssh2_protocol_setup
.text:0001B96D                 add     esp, 4
.text:0001B970                 mov     ecx, [ebp+arg_0]
.text:0001B973                 mov     dword ptr [ecx+214h], offset _ssh2_rdpkt
.text:0001B97D                 jmp     short loc_1B9A5
.text:0001B97F ; ---------------------------------------------------------------------------
.text:0001B97F
.text:0001B97F loc_1B97F:                              ; CODE XREF: _do_ssh_init+478j
.text:0001B97F                 mov     edx, [ebp+arg_0]
.text:0001B982                 mov     dword ptr [edx+210h], offset _ssh1_protocol
.text:0001B98C                 mov     eax, [ebp+arg_0]
.text:0001B98F                 push    eax
.text:0001B990                 call    _ssh1_protocol_setup
.text:0001B995                 add     esp, 4
.text:0001B998                 mov     ecx, [ebp+arg_0]
.text:0001B99B                 mov     dword ptr [ecx+214h], offset _ssh1_rdpkt
.text:0001B9A5
.text:0001B9A5 loc_1B9A5:                              ; CODE XREF: _do_ssh_init+4F5j
.text:0001B9A5                 mov     edx, [ebp+arg_0]
.text:0001B9A8                 cmp     dword ptr [edx+16Ch], 2
.text:0001B9AF                 jnz     short loc_1B9C3
.text:0001B9B1                 push    0
.text:0001B9B3                 push    0FFFFFFFFh
.text:0001B9B5                 push    0
.text:0001B9B7                 mov     eax, [ebp+arg_0]
.text:0001B9BA                 push    eax
.text:0001B9BB                 call    _do_ssh2_transport
.text:0001B9C0                 add     esp, 10h
.text:0001B9C3
.text:0001B9C3 loc_1B9C3:                              ; CODE XREF: _do_ssh_init+527j
.text:0001B9C3                 mov     ecx, [ebp+arg_0]
.text:0001B9C6                 mov     edx, [ecx+0E4h]
.text:0001B9CC                 push    edx
.text:0001B9CD                 call    _update_specials_menu
.text:0001B9D2                 add     esp, 4
.text:0001B9D5                 mov     eax, [ebp+arg_0]
.text:0001B9D8                 mov     dword ptr [eax+118h], 1
.text:0001B9E2                 mov     ecx, [ebp+arg_0]
.text:0001B9E5                 push    ecx
.text:0001B9E6                 push    offset _ssh_backend
.text:0001B9EB                 mov     edx, [ebp+arg_0]
.text:0001B9EE                 mov     eax, [edx+21Ch]
.text:0001B9F4                 push    eax
.text:0001B9F5                 call    _pinger_new
.text:0001B9FA                 add     esp, 0Ch
.text:0001B9FD                 mov     ecx, [ebp+arg_0]
.text:0001BA00                 mov     [ecx+654h], eax
.text:0001BA06                 mov     edx, [ebp+var_4]
.text:0001BA09                 mov     eax, [edx+14h]
.text:0001BA0C                 push    eax
.text:0001BA0D                 call    _safefree
.text:0001BA12                 add     esp, 4
.text:0001BA15
.text:0001BA15 loc_1BA15:                              ; CODE XREF: _do_ssh_init+8Fj
.text:0001BA15                                         ; _do_ssh_init+AEj
.text:0001BA15                 mov     ecx, [ebp+var_8]
.text:0001BA18                 mov     dword ptr [ecx], 0
.text:0001BA1E                 xor     eax, eax
.text:0001BA20
.text:0001BA20 loc_1BA20:                              ; CODE XREF: _do_ssh_init+104j
.text:0001BA20                                         ; _do_ssh_init+128j ...
.text:0001BA20                 add     esp, 14h
.text:0001BA23                 cmp     ebp, esp
.text:0001BA25                 call    __RTC_CheckEsp
.text:0001BA2A                 mov     esp, ebp
.text:0001BA2C                 pop     ebp
.text:0001BA2D                 retn
.text:0001BA2D _do_ssh_init    endp
.text:0001BA2D
.text:0001BA2D ; ---------------------------------------------------------------------------
.text:0001BA2E                 db 0Ah dup(0CCh)
.text:0001BA38
.text:0001BA38 ; =============== S U B R O U T I N E =======================================
.text:0001BA38
.text:0001BA38 ; Attributes: bp-based frame
.text:0001BA38
.text:0001BA38 _ssh1_rdpkt     proc near               ; DATA XREF: _do_ssh_init+513o
.text:0001BA38
.text:0001BA38 var_24          = dword ptr -24h
.text:0001BA38 var_20          = dword ptr -20h
.text:0001BA38 Size            = dword ptr -1Ch
.text:0001BA38 var_18          = dword ptr -18h
.text:0001BA38 var_14          = dword ptr -14h
.text:0001BA38 Src             = dword ptr -10h
.text:0001BA38 var_C           = dword ptr -0Ch
.text:0001BA38 var_8           = dword ptr -8
.text:0001BA38 var_4           = dword ptr -4
.text:0001BA38 arg_0           = dword ptr  8
.text:0001BA38 arg_4           = dword ptr  0Ch
.text:0001BA38 arg_8           = dword ptr  10h
.text:0001BA38
.text:0001BA38                 push    ebp
.text:0001BA39                 mov     ebp, esp
.text:0001BA3B                 sub     esp, 24h
.text:0001BA3E                 push    esi
.text:0001BA3F                 mov     eax, 0CCCCCCCCh
.text:0001BA44                 mov     [ebp+var_24], eax
.text:0001BA47                 mov     [ebp+var_20], eax
.text:0001BA4A                 mov     [ebp+Size], eax
.text:0001BA4D                 mov     [ebp+var_18], eax
.text:0001BA50                 mov     [ebp+var_14], eax
.text:0001BA53                 mov     [ebp+Src], eax
.text:0001BA56                 mov     [ebp+var_C], eax
.text:0001BA59                 mov     [ebp+var_8], eax
.text:0001BA5C                 mov     [ebp+var_4], eax
.text:0001BA5F                 mov     eax, [ebp+arg_0]
.text:0001BA62                 add     eax, 1ACh
.text:0001BA67                 mov     [ebp+var_4], eax
.text:0001BA6A                 mov     ecx, [ebp+arg_0]
.text:0001BA6D                 add     ecx, 184h
.text:0001BA73                 mov     [ebp+var_8], ecx
.text:0001BA76                 mov     edx, [ebp+arg_0]
.text:0001BA79                 mov     eax, [edx+184h]
.text:0001BA7F                 mov     [ebp+var_24], eax
.text:0001BA82                 cmp     [ebp+var_24], 0
.text:0001BA86                 jz      short loc_1BAA3
.text:0001BA88                 cmp     [ebp+var_24], 511h
.text:0001BA8F                 jz      short loc_1BB0C
.text:0001BA91                 cmp     [ebp+var_24], 529h
.text:0001BA98                 jz      loc_1BC40
.text:0001BA9E                 jmp     loc_1BFB5
.text:0001BAA3 ; ---------------------------------------------------------------------------
.text:0001BAA3
.text:0001BAA3 loc_1BAA3:                              ; CODE XREF: _ssh1_rdpkt+4Ej
.text:0001BAA3                 call    _ssh_new_packet
.text:0001BAA8                 mov     ecx, [ebp+var_4]
.text:0001BAAB                 mov     [ecx+24h], eax
.text:0001BAAE                 mov     edx, [ebp+var_4]
.text:0001BAB1                 mov     eax, [edx+24h]
.text:0001BAB4                 mov     dword ptr [eax+8], 0
.text:0001BABB                 mov     ecx, [ebp+var_4]
.text:0001BABE                 mov     edx, [ecx+24h]
.text:0001BAC1                 mov     dword ptr [edx], 0
.text:0001BAC7                 mov     eax, [ebp+var_4]
.text:0001BACA                 mov     dword ptr [eax], 0
.text:0001BAD0                 mov     ecx, [ebp+var_4]
.text:0001BAD3                 mov     dword ptr [ecx+1Ch], 0
.text:0001BADA                 jmp     short loc_1BAEB
.text:0001BADC ; ---------------------------------------------------------------------------
.text:0001BADC
.text:0001BADC loc_1BADC:                              ; CODE XREF: _ssh1_rdpkt+10Bj
.text:0001BADC                 mov     edx, [ebp+var_4]
.text:0001BADF                 mov     eax, [edx+1Ch]
.text:0001BAE2                 add     eax, 1
.text:0001BAE5                 mov     ecx, [ebp+var_4]
.text:0001BAE8                 mov     [ecx+1Ch], eax
.text:0001BAEB
.text:0001BAEB loc_1BAEB:                              ; CODE XREF: _ssh1_rdpkt+A2j
.text:0001BAEB                 mov     edx, [ebp+var_4]
.text:0001BAEE                 cmp     dword ptr [edx+1Ch], 4
.text:0001BAF2                 jge     short loc_1BB45
.text:0001BAF4
.text:0001BAF4 loc_1BAF4:                              ; CODE XREF: _ssh1_rdpkt+D8j
.text:0001BAF4                 mov     eax, [ebp+arg_8]
.text:0001BAF7                 cmp     dword ptr [eax], 0
.text:0001BAFA                 jnz     short loc_1BB12
.text:0001BAFC
.text:0001BAFC loc_1BAFC:                              ; CODE XREF: _ssh1_rdpkt+D6j
.text:0001BAFC                 mov     ecx, [ebp+var_8]
.text:0001BAFF                 mov     dword ptr [ecx], 511h
.text:0001BB05                 xor     eax, eax
.text:0001BB07                 jmp     loc_1BFC4
.text:0001BB0C ; ---------------------------------------------------------------------------
.text:0001BB0C
.text:0001BB0C loc_1BB0C:                              ; CODE XREF: _ssh1_rdpkt+57j
.text:0001BB0C                 xor     edx, edx
.text:0001BB0E                 jnz     short loc_1BAFC
.text:0001BB10                 jmp     short loc_1BAF4
.text:0001BB12 ; ---------------------------------------------------------------------------
.text:0001BB12
.text:0001BB12 loc_1BB12:                              ; CODE XREF: _ssh1_rdpkt+C2j
.text:0001BB12                 mov     eax, [ebp+var_4]
.text:0001BB15                 mov     ecx, [eax]
.text:0001BB17                 shl     ecx, 8
.text:0001BB1A                 mov     edx, [ebp+arg_4]
.text:0001BB1D                 mov     eax, [edx]
.text:0001BB1F                 movzx   edx, byte ptr [eax]
.text:0001BB22                 add     ecx, edx
.text:0001BB24                 mov     eax, [ebp+var_4]
.text:0001BB27                 mov     [eax], ecx
.text:0001BB29                 mov     ecx, [ebp+arg_4]
.text:0001BB2C                 mov     edx, [ecx]
.text:0001BB2E                 add     edx, 1
.text:0001BB31                 mov     eax, [ebp+arg_4]
.text:0001BB34                 mov     [eax], edx
.text:0001BB36                 mov     ecx, [ebp+arg_8]
.text:0001BB39                 mov     edx, [ecx]
.text:0001BB3B                 sub     edx, 1
.text:0001BB3E                 mov     eax, [ebp+arg_8]
.text:0001BB41                 mov     [eax], edx
.text:0001BB43                 jmp     short loc_1BADC
.text:0001BB45 ; ---------------------------------------------------------------------------
.text:0001BB45
.text:0001BB45 loc_1BB45:                              ; CODE XREF: _ssh1_rdpkt+BAj
.text:0001BB45                 mov     ecx, [ebp+var_4]
.text:0001BB48                 mov     edx, [ecx]
.text:0001BB4A                 and     edx, 80000007h
.text:0001BB50                 jns     short loc_1BB57
.text:0001BB52                 dec     edx
.text:0001BB53                 or      edx, 0FFFFFFF8h
.text:0001BB56                 inc     edx
.text:0001BB57
.text:0001BB57 loc_1BB57:                              ; CODE XREF: _ssh1_rdpkt+118j
.text:0001BB57                 mov     eax, 8
.text:0001BB5C                 sub     eax, edx
.text:0001BB5E                 mov     ecx, [ebp+var_4]
.text:0001BB61                 mov     [ecx+4], eax
.text:0001BB64                 mov     edx, [ebp+var_4]
.text:0001BB67                 mov     eax, [edx]
.text:0001BB69                 mov     ecx, [ebp+var_4]
.text:0001BB6C                 add     eax, [ecx+4]
.text:0001BB6F                 mov     edx, [ebp+var_4]
.text:0001BB72                 mov     [edx+8], eax
.text:0001BB75                 mov     eax, [ebp+var_4]
.text:0001BB78                 mov     ecx, [eax]
.text:0001BB7A                 sub     ecx, 5
.text:0001BB7D                 mov     edx, [ebp+var_4]
.text:0001BB80                 mov     eax, [edx+24h]
.text:0001BB83                 mov     [eax], ecx
.text:0001BB85                 mov     ecx, [ebp+var_4]
.text:0001BB88                 cmp     dword ptr [ecx+8], 0
.text:0001BB8C                 jge     short loc_1BBCB
.text:0001BB8E                 push    offset $SG88380 ; "Extremely large packet length from serv"...
.text:0001BB93                 call    _dupprintf
.text:0001BB98                 add     esp, 4
.text:0001BB9B                 push    eax
.text:0001BB9C                 mov     edx, [ebp+arg_0]
.text:0001BB9F                 push    edx
.text:0001BBA0                 call    _bomb_out
.text:0001BBA5                 add     esp, 8
.text:0001BBA8                 mov     eax, [ebp+var_4]
.text:0001BBAB                 mov     ecx, [eax+24h]
.text:0001BBAE                 push    ecx
.text:0001BBAF                 call    _ssh_free_packet
.text:0001BBB4                 add     esp, 4
.text:0001BBB7
.text:0001BBB7 loc_1BBB7:                              ; CODE XREF: _ssh1_rdpkt+191j
.text:0001BBB7                 mov     edx, [ebp+var_8]
.text:0001BBBA                 mov     dword ptr [edx], 0
.text:0001BBC0                 xor     eax, eax
.text:0001BBC2                 jmp     loc_1BFC4
.text:0001BBC7 ; ---------------------------------------------------------------------------
.text:0001BBC7                 xor     eax, eax
.text:0001BBC9                 jnz     short loc_1BBB7
.text:0001BBCB
.text:0001BBCB loc_1BBCB:                              ; CODE XREF: _ssh1_rdpkt+154j
.text:0001BBCB                 mov     ecx, [ebp+var_4]
.text:0001BBCE                 mov     edx, [ecx+24h]
.text:0001BBD1                 mov     eax, [ebp+var_4]
.text:0001BBD4                 mov     ecx, [eax+8]
.text:0001BBD7                 mov     [edx+1Ch], ecx
.text:0001BBDA                 push    1
.text:0001BBDC                 mov     edx, [ebp+var_4]
.text:0001BBDF                 mov     eax, [edx+8]
.text:0001BBE2                 push    eax
.text:0001BBE3                 call    _safemalloc
.text:0001BBE8                 add     esp, 8
.text:0001BBEB                 mov     ecx, [ebp+var_4]
.text:0001BBEE                 mov     edx, [ecx+24h]
.text:0001BBF1                 mov     [edx+10h], eax
.text:0001BBF4                 mov     eax, [ebp+var_4]
.text:0001BBF7                 mov     ecx, [ebp+var_4]
.text:0001BBFA                 mov     edx, [ecx+8]
.text:0001BBFD                 mov     [eax+0Ch], edx
.text:0001BC00                 mov     eax, [ebp+var_4]
.text:0001BC03                 mov     ecx, [eax+24h]
.text:0001BC06                 mov     edx, [ebp+var_4]
.text:0001BC09                 mov     eax, [ecx+10h]
.text:0001BC0C                 mov     [edx+18h], eax
.text:0001BC0F
.text:0001BC0F loc_1BC0F:                              ; CODE XREF: _ssh1_rdpkt+286j
.text:0001BC0F                 mov     ecx, [ebp+var_4]
.text:0001BC12                 cmp     dword ptr [ecx+0Ch], 0
.text:0001BC16                 jle     loc_1BCC3
.text:0001BC1C                 mov     edx, [ebp+var_4]
.text:0001BC1F                 mov     eax, [ebp+var_4]
.text:0001BC22                 mov     ecx, [eax+0Ch]
.text:0001BC25                 mov     [edx+20h], ecx
.text:0001BC28
.text:0001BC28 loc_1BC28:                              ; CODE XREF: _ssh1_rdpkt+20Cj
.text:0001BC28                 mov     edx, [ebp+arg_8]
.text:0001BC2B                 cmp     dword ptr [edx], 0
.text:0001BC2E                 jnz     short loc_1BC46
.text:0001BC30
.text:0001BC30 loc_1BC30:                              ; CODE XREF: _ssh1_rdpkt+20Aj
.text:0001BC30                 mov     eax, [ebp+var_8]
.text:0001BC33                 mov     dword ptr [eax], 529h
.text:0001BC39                 xor     eax, eax
.text:0001BC3B                 jmp     loc_1BFC4
.text:0001BC40 ; ---------------------------------------------------------------------------
.text:0001BC40
.text:0001BC40 loc_1BC40:                              ; CODE XREF: _ssh1_rdpkt+60j
.text:0001BC40                 xor     ecx, ecx
.text:0001BC42                 jnz     short loc_1BC30
.text:0001BC44                 jmp     short loc_1BC28
.text:0001BC46 ; ---------------------------------------------------------------------------
.text:0001BC46
.text:0001BC46 loc_1BC46:                              ; CODE XREF: _ssh1_rdpkt+1F6j
.text:0001BC46                 mov     edx, [ebp+var_4]
.text:0001BC49                 mov     eax, [ebp+arg_8]
.text:0001BC4C                 mov     ecx, [edx+20h]
.text:0001BC4F                 cmp     ecx, [eax]
.text:0001BC51                 jle     short loc_1BC5E
.text:0001BC53                 mov     edx, [ebp+var_4]
.text:0001BC56                 mov     eax, [ebp+arg_8]
.text:0001BC59                 mov     ecx, [eax]
.text:0001BC5B                 mov     [edx+20h], ecx
.text:0001BC5E
.text:0001BC5E loc_1BC5E:                              ; CODE XREF: _ssh1_rdpkt+219j
.text:0001BC5E                 mov     edx, [ebp+var_4]
.text:0001BC61                 mov     eax, [edx+20h]
.text:0001BC64                 push    eax             ; Size
.text:0001BC65                 mov     ecx, [ebp+arg_4]
.text:0001BC68                 mov     edx, [ecx]
.text:0001BC6A                 push    edx             ; Src
.text:0001BC6B                 mov     eax, [ebp+var_4]
.text:0001BC6E                 mov     ecx, [eax+18h]
.text:0001BC71                 push    ecx             ; Dst
.text:0001BC72                 call    _memcpy
.text:0001BC77                 add     esp, 0Ch
.text:0001BC7A                 mov     edx, [ebp+arg_4]
.text:0001BC7D                 mov     eax, [edx]
.text:0001BC7F                 mov     ecx, [ebp+var_4]
.text:0001BC82                 add     eax, [ecx+20h]
.text:0001BC85                 mov     edx, [ebp+arg_4]
.text:0001BC88                 mov     [edx], eax
.text:0001BC8A                 mov     eax, [ebp+arg_8]
.text:0001BC8D                 mov     ecx, [ebp+var_4]
.text:0001BC90                 mov     edx, [eax]
.text:0001BC92                 sub     edx, [ecx+20h]
.text:0001BC95                 mov     eax, [ebp+arg_8]
.text:0001BC98                 mov     [eax], edx
.text:0001BC9A                 mov     ecx, [ebp+var_4]
.text:0001BC9D                 mov     edx, [ecx+18h]
.text:0001BCA0                 mov     eax, [ebp+var_4]
.text:0001BCA3                 add     edx, [eax+20h]
.text:0001BCA6                 mov     ecx, [ebp+var_4]
.text:0001BCA9                 mov     [ecx+18h], edx
.text:0001BCAC                 mov     edx, [ebp+var_4]
.text:0001BCAF                 mov     eax, [ebp+var_4]
.text:0001BCB2                 mov     ecx, [edx+0Ch]
.text:0001BCB5                 sub     ecx, [eax+20h]
.text:0001BCB8                 mov     edx, [ebp+var_4]
.text:0001BCBB                 mov     [edx+0Ch], ecx
.text:0001BCBE                 jmp     loc_1BC0F
.text:0001BCC3 ; ---------------------------------------------------------------------------
.text:0001BCC3
.text:0001BCC3 loc_1BCC3:                              ; CODE XREF: _ssh1_rdpkt+1DEj
.text:0001BCC3                 mov     eax, [ebp+arg_0]
.text:0001BCC6                 cmp     dword ptr [eax+54h], 0
.text:0001BCCA                 jz      short loc_1BD2F
.text:0001BCCC                 push    0
.text:0001BCCE                 mov     ecx, [ebp+var_4]
.text:0001BCD1                 mov     edx, [ecx+8]
.text:0001BCD4                 push    edx
.text:0001BCD5                 mov     eax, [ebp+var_4]
.text:0001BCD8                 mov     ecx, [eax+24h]
.text:0001BCDB                 mov     edx, [ecx+10h]
.text:0001BCDE                 push    edx
.text:0001BCDF                 mov     eax, [ebp+arg_0]
.text:0001BCE2                 mov     ecx, [eax+5Ch]
.text:0001BCE5                 push    ecx
.text:0001BCE6                 call    _detect_attack
.text:0001BCEB                 add     esp, 10h
.text:0001BCEE                 test    eax, eax
.text:0001BCF0                 jz      short loc_1BD2F
.text:0001BCF2                 push    offset $SG88401 ; "Network attack (CRC compensation) detec"...
.text:0001BCF7                 call    _dupprintf
.text:0001BCFC                 add     esp, 4
.text:0001BCFF                 push    eax
.text:0001BD00                 mov     edx, [ebp+arg_0]
.text:0001BD03                 push    edx
.text:0001BD04                 call    _bomb_out
.text:0001BD09                 add     esp, 8
.text:0001BD0C                 mov     eax, [ebp+var_4]
.text:0001BD0F                 mov     ecx, [eax+24h]
.text:0001BD12                 push    ecx
.text:0001BD13                 call    _ssh_free_packet
.text:0001BD18                 add     esp, 4
.text:0001BD1B
.text:0001BD1B loc_1BD1B:                              ; CODE XREF: _ssh1_rdpkt+2F5j
.text:0001BD1B                 mov     edx, [ebp+var_8]
.text:0001BD1E                 mov     dword ptr [edx], 0
.text:0001BD24                 xor     eax, eax
.text:0001BD26                 jmp     loc_1BFC4
.text:0001BD2B ; ---------------------------------------------------------------------------
.text:0001BD2B                 xor     eax, eax
.text:0001BD2D                 jnz     short loc_1BD1B
.text:0001BD2F
.text:0001BD2F loc_1BD2F:                              ; CODE XREF: _ssh1_rdpkt+292j
.text:0001BD2F                                         ; _ssh1_rdpkt+2B8j
.text:0001BD2F                 mov     ecx, [ebp+arg_0]
.text:0001BD32                 cmp     dword ptr [ecx+54h], 0
.text:0001BD36                 jz      short loc_1BD67
.text:0001BD38                 mov     esi, esp
.text:0001BD3A                 mov     edx, [ebp+var_4]
.text:0001BD3D                 mov     eax, [edx+8]
.text:0001BD40                 push    eax
.text:0001BD41                 mov     ecx, [ebp+var_4]
.text:0001BD44                 mov     edx, [ecx+24h]
.text:0001BD47                 mov     eax, [edx+10h]
.text:0001BD4A                 push    eax
.text:0001BD4B                 mov     ecx, [ebp+arg_0]
.text:0001BD4E                 mov     edx, [ecx+58h]
.text:0001BD51                 push    edx
.text:0001BD52                 mov     eax, [ebp+arg_0]
.text:0001BD55                 mov     ecx, [eax+54h]
.text:0001BD58                 mov     edx, [ecx+10h]
.text:0001BD5B                 call    edx
.text:0001BD5D                 add     esp, 0Ch
.text:0001BD60                 cmp     esi, esp
.text:0001BD62                 call    __RTC_CheckEsp
.text:0001BD67
.text:0001BD67 loc_1BD67:                              ; CODE XREF: _ssh1_rdpkt+2FEj
.text:0001BD67                 mov     eax, [ebp+var_4]
.text:0001BD6A                 mov     ecx, [eax+8]
.text:0001BD6D                 sub     ecx, 4
.text:0001BD70                 push    ecx
.text:0001BD71                 mov     edx, [ebp+var_4]
.text:0001BD74                 mov     eax, [edx+24h]
.text:0001BD77                 mov     ecx, [eax+10h]
.text:0001BD7A                 push    ecx
.text:0001BD7B                 call    _crc32_compute
.text:0001BD80                 add     esp, 8
.text:0001BD83                 mov     edx, [ebp+var_4]
.text:0001BD86                 mov     [edx+10h], eax
.text:0001BD89                 mov     eax, [ebp+var_4]
.text:0001BD8C                 mov     ecx, [eax+24h]
.text:0001BD8F                 mov     edx, [ecx+10h]
.text:0001BD92                 mov     eax, [ebp+var_4]
.text:0001BD95                 mov     ecx, [eax+8]
.text:0001BD98                 movzx   edx, byte ptr [edx+ecx-4]
.text:0001BD9D                 shl     edx, 18h
.text:0001BDA0                 mov     eax, [ebp+var_4]
.text:0001BDA3                 mov     ecx, [eax+24h]
.text:0001BDA6                 mov     eax, [ecx+10h]
.text:0001BDA9                 mov     ecx, [ebp+var_4]
.text:0001BDAC                 mov     ecx, [ecx+8]
.text:0001BDAF                 movzx   eax, byte ptr [eax+ecx-3]
.text:0001BDB4                 shl     eax, 10h
.text:0001BDB7                 or      edx, eax
.text:0001BDB9                 mov     ecx, [ebp+var_4]
.text:0001BDBC                 mov     eax, [ecx+24h]
.text:0001BDBF                 mov     ecx, [eax+10h]
.text:0001BDC2                 mov     eax, [ebp+var_4]
.text:0001BDC5                 mov     eax, [eax+8]
.text:0001BDC8                 movzx   ecx, byte ptr [ecx+eax-2]
.text:0001BDCD                 shl     ecx, 8
.text:0001BDD0                 or      edx, ecx
.text:0001BDD2                 mov     eax, [ebp+var_4]
.text:0001BDD5                 mov     ecx, [eax+24h]
.text:0001BDD8                 mov     eax, [ecx+10h]
.text:0001BDDB                 mov     ecx, [ebp+var_4]
.text:0001BDDE                 mov     ecx, [ecx+8]
.text:0001BDE1                 movzx   eax, byte ptr [eax+ecx-1]
.text:0001BDE6                 or      edx, eax
.text:0001BDE8                 mov     ecx, [ebp+var_4]
.text:0001BDEB                 mov     [ecx+14h], edx
.text:0001BDEE                 mov     edx, [ebp+var_4]
.text:0001BDF1                 mov     eax, [ebp+var_4]
.text:0001BDF4                 mov     ecx, [edx+14h]
.text:0001BDF7                 cmp     ecx, [eax+10h]
.text:0001BDFA                 jz      short loc_1BE39
.text:0001BDFC                 push    offset $SG88416 ; "Incorrect CRC received on packet"
.text:0001BE01                 call    _dupprintf
.text:0001BE06                 add     esp, 4
.text:0001BE09                 push    eax
.text:0001BE0A                 mov     edx, [ebp+arg_0]
.text:0001BE0D                 push    edx
.text:0001BE0E                 call    _bomb_out
.text:0001BE13                 add     esp, 8
.text:0001BE16                 mov     eax, [ebp+var_4]
.text:0001BE19                 mov     ecx, [eax+24h]
.text:0001BE1C                 push    ecx
.text:0001BE1D                 call    _ssh_free_packet
.text:0001BE22                 add     esp, 4
.text:0001BE25
.text:0001BE25 loc_1BE25:                              ; CODE XREF: _ssh1_rdpkt+3FFj
.text:0001BE25                 mov     edx, [ebp+var_8]
.text:0001BE28                 mov     dword ptr [edx], 0
.text:0001BE2E                 xor     eax, eax
.text:0001BE30                 jmp     loc_1BFC4
.text:0001BE35 ; ---------------------------------------------------------------------------
.text:0001BE35                 xor     eax, eax
.text:0001BE37                 jnz     short loc_1BE25
.text:0001BE39
.text:0001BE39 loc_1BE39:                              ; CODE XREF: _ssh1_rdpkt+3C2j
.text:0001BE39                 mov     ecx, [ebp+var_4]
.text:0001BE3C                 mov     edx, [ecx+24h]
.text:0001BE3F                 mov     eax, [edx+10h]
.text:0001BE42                 mov     ecx, [ebp+var_4]
.text:0001BE45                 mov     edx, [ecx+4]
.text:0001BE48                 lea     eax, [eax+edx+1]
.text:0001BE4C                 mov     ecx, [ebp+var_4]
.text:0001BE4F                 mov     edx, [ecx+24h]
.text:0001BE52                 mov     [edx+14h], eax
.text:0001BE55                 mov     eax, [ebp+arg_0]
.text:0001BE58                 cmp     dword ptr [eax+3Ch], 0
.text:0001BE5C                 jz      loc_1BF76
.text:0001BE62                 lea     ecx, [ebp+Size]
.text:0001BE65                 push    ecx
.text:0001BE66                 lea     edx, [ebp+Src]
.text:0001BE69                 push    edx
.text:0001BE6A                 mov     eax, [ebp+var_4]
.text:0001BE6D                 mov     ecx, [eax+24h]
.text:0001BE70                 mov     edx, [ecx]
.text:0001BE72                 add     edx, 1
.text:0001BE75                 push    edx
.text:0001BE76                 mov     eax, [ebp+var_4]
.text:0001BE79                 mov     ecx, [eax+24h]
.text:0001BE7C                 mov     edx, [ecx+14h]
.text:0001BE7F                 sub     edx, 1
.text:0001BE82                 push    edx
.text:0001BE83                 mov     eax, [ebp+arg_0]
.text:0001BE86                 mov     ecx, [eax+8Ch]
.text:0001BE8C                 push    ecx
.text:0001BE8D                 call    _zlib_decompress_block
.text:0001BE92                 add     esp, 14h
.text:0001BE95                 test    eax, eax
.text:0001BE97                 jnz     short loc_1BED6
.text:0001BE99                 push    offset $SG88425 ; "Zlib decompression encountered invalid "...
.text:0001BE9E                 call    _dupprintf
.text:0001BEA3                 add     esp, 4
.text:0001BEA6                 push    eax
.text:0001BEA7                 mov     edx, [ebp+arg_0]
.text:0001BEAA                 push    edx
.text:0001BEAB                 call    _bomb_out
.text:0001BEB0                 add     esp, 8
.text:0001BEB3                 mov     eax, [ebp+var_4]
.text:0001BEB6                 mov     ecx, [eax+24h]
.text:0001BEB9                 push    ecx
.text:0001BEBA                 call    _ssh_free_packet
.text:0001BEBF                 add     esp, 4
.text:0001BEC2
.text:0001BEC2 loc_1BEC2:                              ; CODE XREF: _ssh1_rdpkt+49Cj
.text:0001BEC2                 mov     edx, [ebp+var_8]
.text:0001BEC5                 mov     dword ptr [edx], 0
.text:0001BECB                 xor     eax, eax
.text:0001BECD                 jmp     loc_1BFC4
.text:0001BED2 ; ---------------------------------------------------------------------------
.text:0001BED2                 xor     eax, eax
.text:0001BED4                 jnz     short loc_1BEC2
.text:0001BED6
.text:0001BED6 loc_1BED6:                              ; CODE XREF: _ssh1_rdpkt+45Fj
.text:0001BED6                 mov     ecx, [ebp+var_4]
.text:0001BED9                 mov     edx, [ecx+24h]
.text:0001BEDC                 mov     eax, [ebp+var_4]
.text:0001BEDF                 mov     ecx, [eax+4]
.text:0001BEE2                 add     ecx, [ebp+Size]
.text:0001BEE5                 cmp     [edx+1Ch], ecx
.text:0001BEE8                 jge     short loc_1BF3F
.text:0001BEEA                 mov     edx, [ebp+var_4]
.text:0001BEED                 mov     eax, [edx+4]
.text:0001BEF0                 add     eax, [ebp+Size]
.text:0001BEF3                 mov     ecx, [ebp+var_4]
.text:0001BEF6                 mov     edx, [ecx+24h]
.text:0001BEF9                 mov     [edx+1Ch], eax
.text:0001BEFC                 push    1
.text:0001BEFE                 mov     eax, [ebp+var_4]
.text:0001BF01                 mov     ecx, [eax+24h]
.text:0001BF04                 mov     edx, [ecx+1Ch]
.text:0001BF07                 push    edx
.text:0001BF08                 mov     eax, [ebp+var_4]
.text:0001BF0B                 mov     ecx, [eax+24h]
.text:0001BF0E                 mov     edx, [ecx+10h]
.text:0001BF11                 push    edx
.text:0001BF12                 call    _saferealloc
.text:0001BF17                 add     esp, 0Ch
.text:0001BF1A                 mov     ecx, [ebp+var_4]
.text:0001BF1D                 mov     edx, [ecx+24h]
.text:0001BF20                 mov     [edx+10h], eax
.text:0001BF23                 mov     eax, [ebp+var_4]
.text:0001BF26                 mov     ecx, [eax+24h]
.text:0001BF29                 mov     edx, [ecx+10h]
.text:0001BF2C                 mov     eax, [ebp+var_4]
.text:0001BF2F                 mov     ecx, [eax+4]
.text:0001BF32                 lea     edx, [edx+ecx+1]
.text:0001BF36                 mov     eax, [ebp+var_4]
.text:0001BF39                 mov     ecx, [eax+24h]
.text:0001BF3C                 mov     [ecx+14h], edx
.text:0001BF3F
.text:0001BF3F loc_1BF3F:                              ; CODE XREF: _ssh1_rdpkt+4B0j
.text:0001BF3F                 mov     edx, [ebp+Size]
.text:0001BF42                 push    edx             ; Size
.text:0001BF43                 mov     eax, [ebp+Src]
.text:0001BF46                 push    eax             ; Src
.text:0001BF47                 mov     ecx, [ebp+var_4]
.text:0001BF4A                 mov     edx, [ecx+24h]
.text:0001BF4D                 mov     eax, [edx+14h]
.text:0001BF50                 sub     eax, 1
.text:0001BF53                 push    eax             ; Dst
.text:0001BF54                 call    _memcpy
.text:0001BF59                 add     esp, 0Ch
.text:0001BF5C                 mov     ecx, [ebp+Src]
.text:0001BF5F                 push    ecx
.text:0001BF60                 call    _safefree
.text:0001BF65                 add     esp, 4
.text:0001BF68                 mov     edx, [ebp+Size]
.text:0001BF6B                 sub     edx, 1
.text:0001BF6E                 mov     eax, [ebp+var_4]
.text:0001BF71                 mov     ecx, [eax+24h]
.text:0001BF74                 mov     [ecx], edx
.text:0001BF76
.text:0001BF76 loc_1BF76:                              ; CODE XREF: _ssh1_rdpkt+424j
.text:0001BF76                 mov     edx, [ebp+var_4]
.text:0001BF79                 mov     eax, [edx+24h]
.text:0001BF7C                 mov     ecx, [eax+14h]
.text:0001BF7F                 mov     edx, [ebp+var_4]
.text:0001BF82                 mov     eax, [edx+24h]
.text:0001BF85                 movzx   ecx, byte ptr [ecx-1]
.text:0001BF89                 mov     [eax+8], ecx
.text:0001BF8C                 mov     edx, [ebp+arg_0]
.text:0001BF8F                 cmp     dword ptr [edx+18h], 0
.text:0001BF93                 jz      short loc_1BFA8
.text:0001BF95                 mov     eax, [ebp+var_4]
.text:0001BF98                 mov     ecx, [eax+24h]
.text:0001BF9B                 push    ecx
.text:0001BF9C                 mov     edx, [ebp+arg_0]
.text:0001BF9F                 push    edx
.text:0001BFA0                 call    _ssh1_log_incoming_packet
.text:0001BFA5                 add     esp, 8
.text:0001BFA8
.text:0001BFA8 loc_1BFA8:                              ; CODE XREF: _ssh1_rdpkt+55Bj
.text:0001BFA8                 mov     eax, [ebp+var_4]
.text:0001BFAB                 mov     ecx, [eax+24h]
.text:0001BFAE                 mov     dword ptr [ecx+18h], 0
.text:0001BFB5
.text:0001BFB5 loc_1BFB5:                              ; CODE XREF: _ssh1_rdpkt+66j
.text:0001BFB5                 mov     edx, [ebp+var_8]
.text:0001BFB8                 mov     dword ptr [edx], 0
.text:0001BFBE                 mov     eax, [ebp+var_4]
.text:0001BFC1                 mov     eax, [eax+24h]
.text:0001BFC4
.text:0001BFC4 loc_1BFC4:                              ; CODE XREF: _ssh1_rdpkt+CFj
.text:0001BFC4                                         ; _ssh1_rdpkt+18Aj ...
.text:0001BFC4                 push    edx
.text:0001BFC5                 mov     ecx, ebp
.text:0001BFC7                 push    eax
.text:0001BFC8                 lea     edx, $LN47
.text:0001BFCE                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0001BFD3                 pop     eax
.text:0001BFD4                 pop     edx
.text:0001BFD5                 pop     esi
.text:0001BFD6                 add     esp, 24h
.text:0001BFD9                 cmp     ebp, esp
.text:0001BFDB                 call    __RTC_CheckEsp
.text:0001BFE0                 mov     esp, ebp
.text:0001BFE2                 pop     ebp
.text:0001BFE3                 retn
.text:0001BFE3 _ssh1_rdpkt     endp
.text:0001BFE3
.text:0001BFE3 ; ---------------------------------------------------------------------------
.text:0001BFE4 $LN47           dd 2                    ; DATA XREF: _ssh1_rdpkt+590o
.text:0001BFE8                 dd offset $LN46
.text:0001BFEC $LN46           dd 0FFFFFFF0h, 4        ; DATA XREF: .text:0001BFE8o
.text:0001BFF4                 dd offset $LN44         ; "decompblk"
.text:0001BFF8                 dd 0FFFFFFE4h, 4
.text:0001C000                 dd offset $LN45         ; "decomplen"
.text:0001C004 $LN45           db 'decomplen',0        ; DATA XREF: .text:0001C000o
.text:0001C00E $LN44           db 'decompblk',0        ; DATA XREF: .text:0001BFF4o
.text:0001C018
.text:0001C018 ; =============== S U B R O U T I N E =======================================
.text:0001C018
.text:0001C018 ; Attributes: bp-based frame
.text:0001C018
.text:0001C018 _ssh1_log_incoming_packet proc near     ; CODE XREF: _ssh1_rdpkt+568p
.text:0001C018
.text:0001C018 var_58          = byte ptr -58h
.text:0001C018 var_54          = dword ptr -54h
.text:0001C018 var_48          = dword ptr -48h
.text:0001C018 var_3C          = dword ptr -3Ch
.text:0001C018 var_38          = dword ptr -38h
.text:0001C018 var_34          = dword ptr -34h
.text:0001C018 var_8           = dword ptr -8
.text:0001C018 var_4           = dword ptr -4
.text:0001C018 arg_0           = dword ptr  8
.text:0001C018 arg_4           = dword ptr  0Ch
.text:0001C018
.text:0001C018                 push    ebp
.text:0001C019                 mov     ebp, esp
.text:0001C01B                 sub     esp, 58h
.text:0001C01E                 push    edi
.text:0001C01F                 lea     edi, [ebp+var_58]
.text:0001C022                 mov     ecx, 16h
.text:0001C027                 mov     eax, 0CCCCCCCCh
.text:0001C02C                 rep stosd
.text:0001C02E                 mov     eax, dword ptr ds:___security_cookie
.text:0001C033                 xor     eax, ebp
.text:0001C035                 mov     [ebp+var_4], eax
.text:0001C038                 mov     [ebp+var_8], 0
.text:0001C03F                 mov     eax, [ebp+arg_4]
.text:0001C042                 mov     dword ptr [eax+18h], 0
.text:0001C049                 mov     ecx, [ebp+arg_0]
.text:0001C04C                 cmp     dword ptr [ecx+220h], 0
.text:0001C053                 jz      loc_1C0DA
.text:0001C059                 mov     edx, [ebp+arg_4]
.text:0001C05C                 cmp     dword ptr [edx+8], 11h
.text:0001C060                 jz      short loc_1C074
.text:0001C062                 mov     eax, [ebp+arg_4]
.text:0001C065                 cmp     dword ptr [eax+8], 12h
.text:0001C069                 jz      short loc_1C074
.text:0001C06B                 mov     ecx, [ebp+arg_4]
.text:0001C06E                 cmp     dword ptr [ecx+8], 17h
.text:0001C072                 jnz     short loc_1C0DA
.text:0001C074
.text:0001C074 loc_1C074:                              ; CODE XREF: _ssh1_log_incoming_packet+48j
.text:0001C074                                         ; _ssh1_log_incoming_packet+51j
.text:0001C074                 mov     edx, [ebp+arg_4]
.text:0001C077                 cmp     dword ptr [edx+8], 17h
.text:0001C07B                 jnz     short loc_1C089
.text:0001C07D                 mov     eax, [ebp+arg_4]
.text:0001C080                 push    eax
.text:0001C081                 call    _ssh_pkt_getuint32
.text:0001C086                 add     esp, 4
.text:0001C089
.text:0001C089 loc_1C089:                              ; CODE XREF: _ssh1_log_incoming_packet+63j
.text:0001C089                 mov     ecx, [ebp+arg_4]
.text:0001C08C                 mov     edx, [ecx+18h]
.text:0001C08F                 add     edx, 4
.text:0001C092                 mov     eax, [ebp+var_8]
.text:0001C095                 imul    eax, 0Ch
.text:0001C098                 mov     [ebp+eax+var_3C], edx
.text:0001C09C                 mov     ecx, [ebp+var_8]
.text:0001C09F                 imul    ecx, 0Ch
.text:0001C0A2                 mov     [ebp+ecx+var_34], 2
.text:0001C0AA                 lea     edx, [ebp+var_54]
.text:0001C0AD                 push    edx
.text:0001C0AE                 lea     eax, [ebp+var_48]
.text:0001C0B1                 push    eax
.text:0001C0B2                 mov     ecx, [ebp+arg_4]
.text:0001C0B5                 push    ecx
.text:0001C0B6                 call    _ssh_pkt_getstring
.text:0001C0BB                 add     esp, 0Ch
.text:0001C0BE                 cmp     [ebp+var_48], 0
.text:0001C0C2                 jz      short loc_1C0DA
.text:0001C0C4                 mov     edx, [ebp+var_8]
.text:0001C0C7                 imul    edx, 0Ch
.text:0001C0CA                 mov     eax, [ebp+var_54]
.text:0001C0CD                 mov     [ebp+edx+var_38], eax
.text:0001C0D1                 mov     ecx, [ebp+var_8]
.text:0001C0D4                 add     ecx, 1
.text:0001C0D7                 mov     [ebp+var_8], ecx
.text:0001C0DA
.text:0001C0DA loc_1C0DA:                              ; CODE XREF: _ssh1_log_incoming_packet+3Bj
.text:0001C0DA                                         ; _ssh1_log_incoming_packet+5Aj ...
.text:0001C0DA                 push    0
.text:0001C0DC                 push    0
.text:0001C0DE                 push    0
.text:0001C0E0                 lea     edx, [ebp+var_3C]
.text:0001C0E3                 push    edx
.text:0001C0E4                 mov     eax, [ebp+var_8]
.text:0001C0E7                 push    eax
.text:0001C0E8                 mov     ecx, [ebp+arg_4]
.text:0001C0EB                 mov     edx, [ecx]
.text:0001C0ED                 push    edx
.text:0001C0EE                 mov     eax, [ebp+arg_4]
.text:0001C0F1                 mov     ecx, [eax+14h]
.text:0001C0F4                 push    ecx
.text:0001C0F5                 mov     edx, [ebp+arg_4]
.text:0001C0F8                 mov     eax, [edx+8]
.text:0001C0FB                 push    eax
.text:0001C0FC                 call    _ssh1_pkt_type
.text:0001C101                 add     esp, 4
.text:0001C104                 push    eax
.text:0001C105                 mov     ecx, [ebp+arg_4]
.text:0001C108                 mov     edx, [ecx+8]
.text:0001C10B                 push    edx
.text:0001C10C                 push    0
.text:0001C10E                 mov     eax, [ebp+arg_0]
.text:0001C111                 mov     ecx, [eax+18h]
.text:0001C114                 push    ecx
.text:0001C115                 call    _log_packet
.text:0001C11A                 add     esp, 2Ch
.text:0001C11D                 push    edx
.text:0001C11E                 mov     ecx, ebp
.text:0001C120                 push    eax
.text:0001C121                 lea     edx, $LN11_4
.text:0001C127                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0001C12C                 pop     eax
.text:0001C12D                 pop     edx
.text:0001C12E                 pop     edi
.text:0001C12F                 mov     ecx, [ebp+var_4]
.text:0001C132                 xor     ecx, ebp
.text:0001C134                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:0001C139                 add     esp, 58h
.text:0001C13C                 cmp     ebp, esp
.text:0001C13E                 call    __RTC_CheckEsp
.text:0001C143                 mov     esp, ebp
.text:0001C145                 pop     ebp
.text:0001C146                 retn
.text:0001C146 _ssh1_log_incoming_packet endp
.text:0001C146
.text:0001C146 ; ---------------------------------------------------------------------------
.text:0001C147                 align 4
.text:0001C148 $LN11_4         dd 3                    ; DATA XREF: _ssh1_log_incoming_packet+109o
.text:0001C14C                 dd offset $LN10_8
.text:0001C150 $LN10_8         dd 0FFFFFFC4h, 30h      ; DATA XREF: .text:0001C14Co
.text:0001C158                 dd offset $LN7_6        ; "blanks"
.text:0001C15C                 dd 0FFFFFFB8h, 4
.text:0001C164                 dd offset $LN8_8        ; "str"
.text:0001C168                 dd 0FFFFFFACh, 4
.text:0001C170                 dd offset $LN9_7        ; "slen"
.text:0001C174 $LN9_7          db 'slen',0             ; DATA XREF: .text:0001C170o
.text:0001C179 $LN8_8          db 'str',0              ; DATA XREF: .text:0001C164o
.text:0001C17D $LN7_6          db 'blanks',0           ; DATA XREF: .text:0001C158o
.text:0001C184                 align 8
.text:0001C188
.text:0001C188 ; =============== S U B R O U T I N E =======================================
.text:0001C188
.text:0001C188 ; Attributes: bp-based frame
.text:0001C188
.text:0001C188 _ssh2_rdpkt     proc near               ; DATA XREF: _do_ssh_init+4EBo
.text:0001C188
.text:0001C188 var_34          = dword ptr -34h
.text:0001C188 var_30          = dword ptr -30h
.text:0001C188 Size            = dword ptr -28h
.text:0001C188 Src             = dword ptr -1Ch
.text:0001C188 var_10          = byte ptr -10h
.text:0001C188 var_F           = byte ptr -0Fh
.text:0001C188 var_E           = byte ptr -0Eh
.text:0001C188 var_D           = byte ptr -0Dh
.text:0001C188 var_8           = dword ptr -8
.text:0001C188 var_4           = dword ptr -4
.text:0001C188 arg_0           = dword ptr  8
.text:0001C188 arg_4           = dword ptr  0Ch
.text:0001C188 arg_8           = dword ptr  10h
.text:0001C188
.text:0001C188                 push    ebp
.text:0001C189                 mov     ebp, esp
.text:0001C18B                 sub     esp, 34h
.text:0001C18E                 push    esi
.text:0001C18F                 push    edi
.text:0001C190                 lea     edi, [ebp+var_34]
.text:0001C193                 mov     ecx, 0Dh
.text:0001C198                 mov     eax, 0CCCCCCCCh
.text:0001C19D                 rep stosd
.text:0001C19F                 mov     eax, [ebp+arg_0]
.text:0001C1A2                 add     eax, 1D4h
.text:0001C1A7                 mov     [ebp+var_4], eax
.text:0001C1AA                 mov     ecx, [ebp+arg_0]
.text:0001C1AD                 add     ecx, 188h
.text:0001C1B3                 mov     [ebp+var_8], ecx
.text:0001C1B6                 mov     edx, [ebp+arg_0]
.text:0001C1B9                 mov     eax, [edx+188h]
.text:0001C1BF                 mov     [ebp+var_30], eax
.text:0001C1C2                 cmp     [ebp+var_30], 63Ch
.text:0001C1C9                 jg      short loc_1C1F0
.text:0001C1CB                 cmp     [ebp+var_30], 63Ch
.text:0001C1D2                 jz      loc_1C413
.text:0001C1D8                 cmp     [ebp+var_30], 0
.text:0001C1DC                 jz      short loc_1C20F
.text:0001C1DE                 cmp     [ebp+var_30], 62Bh
.text:0001C1E5                 jz      loc_1C31E
.text:0001C1EB                 jmp     loc_1CB68
.text:0001C1F0 ; ---------------------------------------------------------------------------
.text:0001C1F0
.text:0001C1F0 loc_1C1F0:                              ; CODE XREF: _ssh2_rdpkt+41j
.text:0001C1F0                 cmp     [ebp+var_30], 661h
.text:0001C1F7                 jz      loc_1C65D
.text:0001C1FD                 cmp     [ebp+var_30], 68Dh
.text:0001C204                 jz      loc_1C816
.text:0001C20A                 jmp     loc_1CB68
.text:0001C20F ; ---------------------------------------------------------------------------
.text:0001C20F
.text:0001C20F loc_1C20F:                              ; CODE XREF: _ssh2_rdpkt+54j
.text:0001C20F                 call    _ssh_new_packet
.text:0001C214                 mov     ecx, [ebp+var_4]
.text:0001C217                 mov     [ecx+20h], eax
.text:0001C21A                 mov     edx, [ebp+var_4]
.text:0001C21D                 mov     eax, [edx+20h]
.text:0001C220                 mov     dword ptr [eax+8], 0
.text:0001C227                 mov     ecx, [ebp+var_4]
.text:0001C22A                 mov     edx, [ecx+20h]
.text:0001C22D                 mov     dword ptr [edx], 0
.text:0001C233                 mov     eax, [ebp+arg_0]
.text:0001C236                 cmp     dword ptr [eax+64h], 0
.text:0001C23A                 jz      short loc_1C24D
.text:0001C23C                 mov     ecx, [ebp+arg_0]
.text:0001C23F                 mov     edx, [ecx+64h]
.text:0001C242                 mov     eax, [ebp+var_4]
.text:0001C245                 mov     ecx, [edx+1Ch]
.text:0001C248                 mov     [eax+18h], ecx
.text:0001C24B                 jmp     short loc_1C257
.text:0001C24D ; ---------------------------------------------------------------------------
.text:0001C24D
.text:0001C24D loc_1C24D:                              ; CODE XREF: _ssh2_rdpkt+B2j
.text:0001C24D                 mov     edx, [ebp+var_4]
.text:0001C250                 mov     dword ptr [edx+18h], 8
.text:0001C257
.text:0001C257 loc_1C257:                              ; CODE XREF: _ssh2_rdpkt+C3j
.text:0001C257                 mov     eax, [ebp+var_4]
.text:0001C25A                 cmp     dword ptr [eax+18h], 8
.text:0001C25E                 jge     short loc_1C26A
.text:0001C260                 mov     ecx, [ebp+var_4]
.text:0001C263                 mov     dword ptr [ecx+18h], 8
.text:0001C26A
.text:0001C26A loc_1C26A:                              ; CODE XREF: _ssh2_rdpkt+D6j
.text:0001C26A                 mov     edx, [ebp+arg_0]
.text:0001C26D                 cmp     dword ptr [edx+74h], 0
.text:0001C271                 jz      short loc_1C281
.text:0001C273                 mov     eax, [ebp+arg_0]
.text:0001C276                 mov     ecx, [eax+74h]
.text:0001C279                 mov     edx, [ecx+28h]
.text:0001C27C                 mov     [ebp+var_34], edx
.text:0001C27F                 jmp     short loc_1C288
.text:0001C281 ; ---------------------------------------------------------------------------
.text:0001C281
.text:0001C281 loc_1C281:                              ; CODE XREF: _ssh2_rdpkt+E9j
.text:0001C281                 mov     [ebp+var_34], 0
.text:0001C288
.text:0001C288 loc_1C288:                              ; CODE XREF: _ssh2_rdpkt+F7j
.text:0001C288                 mov     eax, [ebp+var_4]
.text:0001C28B                 mov     ecx, [ebp+var_34]
.text:0001C28E                 mov     [eax+10h], ecx
.text:0001C291                 mov     edx, [ebp+arg_0]
.text:0001C294                 cmp     dword ptr [edx+64h], 0
.text:0001C298                 jz      loc_1C5F9
.text:0001C29E                 mov     eax, [ebp+arg_0]
.text:0001C2A1                 mov     ecx, [eax+64h]
.text:0001C2A4                 mov     edx, [ecx+24h]
.text:0001C2A7                 and     edx, 1
.text:0001C2AA                 jz      loc_1C5F9
.text:0001C2B0                 mov     eax, [ebp+arg_0]
.text:0001C2B3                 cmp     dword ptr [eax+74h], 0
.text:0001C2B7                 jz      loc_1C5F9
.text:0001C2BD                 push    1
.text:0001C2BF                 mov     ecx, [ebp+var_4]
.text:0001C2C2                 mov     edx, [ecx+10h]
.text:0001C2C5                 add     edx, 9000h
.text:0001C2CB                 push    edx
.text:0001C2CC                 call    _safemalloc
.text:0001C2D1                 add     esp, 8
.text:0001C2D4                 mov     ecx, [ebp+var_4]
.text:0001C2D7                 mov     edx, [ecx+20h]
.text:0001C2DA                 mov     [edx+10h], eax
.text:0001C2DD                 mov     eax, [ebp+var_4]
.text:0001C2E0                 mov     dword ptr [eax+14h], 0
.text:0001C2E7                 jmp     short loc_1C2F8
.text:0001C2E9 ; ---------------------------------------------------------------------------
.text:0001C2E9
.text:0001C2E9 loc_1C2E9:                              ; CODE XREF: _ssh2_rdpkt+1CFj
.text:0001C2E9                 mov     ecx, [ebp+var_4]
.text:0001C2EC                 mov     edx, [ecx+14h]
.text:0001C2EF                 add     edx, 1
.text:0001C2F2                 mov     eax, [ebp+var_4]
.text:0001C2F5                 mov     [eax+14h], edx
.text:0001C2F8
.text:0001C2F8 loc_1C2F8:                              ; CODE XREF: _ssh2_rdpkt+15Fj
.text:0001C2F8                 mov     ecx, [ebp+var_4]
.text:0001C2FB                 mov     edx, [ebp+var_4]
.text:0001C2FE                 mov     eax, [ecx+14h]
.text:0001C301                 cmp     eax, [edx+10h]
.text:0001C304                 jge     short loc_1C359
.text:0001C306
.text:0001C306 loc_1C306:                              ; CODE XREF: _ssh2_rdpkt+19Aj
.text:0001C306                 mov     ecx, [ebp+arg_8]
.text:0001C309                 cmp     dword ptr [ecx], 0
.text:0001C30C                 jnz     short loc_1C324
.text:0001C30E
.text:0001C30E loc_1C30E:                              ; CODE XREF: _ssh2_rdpkt+198j
.text:0001C30E                 mov     edx, [ebp+var_8]
.text:0001C311                 mov     dword ptr [edx], 62Bh
.text:0001C317                 xor     eax, eax
.text:0001C319                 jmp     loc_1CB77
.text:0001C31E ; ---------------------------------------------------------------------------
.text:0001C31E
.text:0001C31E loc_1C31E:                              ; CODE XREF: _ssh2_rdpkt+5Dj
.text:0001C31E                 xor     eax, eax
.text:0001C320                 jnz     short loc_1C30E
.text:0001C322                 jmp     short loc_1C306
.text:0001C324 ; ---------------------------------------------------------------------------
.text:0001C324
.text:0001C324 loc_1C324:                              ; CODE XREF: _ssh2_rdpkt+184j
.text:0001C324                 mov     ecx, [ebp+arg_4]
.text:0001C327                 mov     edx, [ecx]
.text:0001C329                 mov     eax, [ebp+var_4]
.text:0001C32C                 mov     ecx, [eax+20h]
.text:0001C32F                 mov     eax, [ecx+10h]
.text:0001C332                 mov     ecx, [ebp+var_4]
.text:0001C335                 mov     ecx, [ecx+14h]
.text:0001C338                 mov     dl, [edx]
.text:0001C33A                 mov     [eax+ecx], dl
.text:0001C33D                 mov     eax, [ebp+arg_4]
.text:0001C340                 mov     ecx, [eax]
.text:0001C342                 add     ecx, 1
.text:0001C345                 mov     edx, [ebp+arg_4]
.text:0001C348                 mov     [edx], ecx
.text:0001C34A                 mov     eax, [ebp+arg_8]
.text:0001C34D                 mov     ecx, [eax]
.text:0001C34F                 sub     ecx, 1
.text:0001C352                 mov     edx, [ebp+arg_8]
.text:0001C355                 mov     [edx], ecx
.text:0001C357                 jmp     short loc_1C2E9
.text:0001C359 ; ---------------------------------------------------------------------------
.text:0001C359
.text:0001C359 loc_1C359:                              ; CODE XREF: _ssh2_rdpkt+17Cj
.text:0001C359                 mov     eax, [ebp+var_4]
.text:0001C35C                 mov     dword ptr [eax+0Ch], 0
.text:0001C363                 mov     esi, esp
.text:0001C365                 mov     ecx, [ebp+arg_0]
.text:0001C368                 mov     edx, [ecx+7Ch]
.text:0001C36B                 push    edx
.text:0001C36C                 mov     eax, [ebp+arg_0]
.text:0001C36F                 mov     ecx, [eax+74h]
.text:0001C372                 mov     edx, [ecx+14h]
.text:0001C375                 call    edx
.text:0001C377                 add     esp, 4
.text:0001C37A                 cmp     esi, esp
.text:0001C37C                 call    __RTC_CheckEsp
.text:0001C381                 mov     eax, [ebp+var_4]
.text:0001C384                 mov     ecx, [eax+1Ch]
.text:0001C387                 shr     ecx, 18h
.text:0001C38A                 mov     [ebp+var_10], cl
.text:0001C38D                 mov     edx, [ebp+var_4]
.text:0001C390                 mov     eax, [edx+1Ch]
.text:0001C393                 shr     eax, 10h
.text:0001C396                 mov     [ebp+var_F], al
.text:0001C399                 mov     ecx, [ebp+var_4]
.text:0001C39C                 mov     edx, [ecx+1Ch]
.text:0001C39F                 shr     edx, 8
.text:0001C3A2                 mov     [ebp+var_E], dl
.text:0001C3A5                 mov     eax, [ebp+var_4]
.text:0001C3A8                 mov     cl, [eax+1Ch]
.text:0001C3AB                 mov     [ebp+var_D], cl
.text:0001C3AE                 mov     esi, esp
.text:0001C3B0                 push    4
.text:0001C3B2                 lea     edx, [ebp+var_10]
.text:0001C3B5                 push    edx
.text:0001C3B6                 mov     eax, [ebp+arg_0]
.text:0001C3B9                 mov     ecx, [eax+7Ch]
.text:0001C3BC                 push    ecx
.text:0001C3BD                 mov     edx, [ebp+arg_0]
.text:0001C3C0                 mov     eax, [edx+74h]
.text:0001C3C3                 mov     ecx, [eax+18h]
.text:0001C3C6                 call    ecx
.text:0001C3C8                 add     esp, 0Ch
.text:0001C3CB                 cmp     esi, esp
.text:0001C3CD                 call    __RTC_CheckEsp
.text:0001C3D2
.text:0001C3D2 loc_1C3D2:                              ; CODE XREF: _ssh2_rdpkt:loc_1C5B3j
.text:0001C3D2                 mov     edx, [ebp+var_4]
.text:0001C3D5                 mov     dword ptr [edx+14h], 0
.text:0001C3DC                 jmp     short loc_1C3ED
.text:0001C3DE ; ---------------------------------------------------------------------------
.text:0001C3DE
.text:0001C3DE loc_1C3DE:                              ; CODE XREF: _ssh2_rdpkt+2D0j
.text:0001C3DE                 mov     eax, [ebp+var_4]
.text:0001C3E1                 mov     ecx, [eax+14h]
.text:0001C3E4                 add     ecx, 1
.text:0001C3E7                 mov     edx, [ebp+var_4]
.text:0001C3EA                 mov     [edx+14h], ecx
.text:0001C3ED
.text:0001C3ED loc_1C3ED:                              ; CODE XREF: _ssh2_rdpkt+254j
.text:0001C3ED                 mov     eax, [ebp+var_4]
.text:0001C3F0                 mov     ecx, [ebp+var_4]
.text:0001C3F3                 mov     edx, [eax+14h]
.text:0001C3F6                 cmp     edx, [ecx+18h]
.text:0001C3F9                 jge     short loc_1C45A
.text:0001C3FB
.text:0001C3FB loc_1C3FB:                              ; CODE XREF: _ssh2_rdpkt+28Fj
.text:0001C3FB                 mov     eax, [ebp+arg_8]
.text:0001C3FE                 cmp     dword ptr [eax], 0
.text:0001C401                 jnz     short loc_1C419
.text:0001C403
.text:0001C403 loc_1C403:                              ; CODE XREF: _ssh2_rdpkt+28Dj
.text:0001C403                 mov     ecx, [ebp+var_8]
.text:0001C406                 mov     dword ptr [ecx], 63Ch
.text:0001C40C                 xor     eax, eax
.text:0001C40E                 jmp     loc_1CB77
.text:0001C413 ; ---------------------------------------------------------------------------
.text:0001C413
.text:0001C413 loc_1C413:                              ; CODE XREF: _ssh2_rdpkt+4Aj
.text:0001C413                 xor     edx, edx
.text:0001C415                 jnz     short loc_1C403
.text:0001C417                 jmp     short loc_1C3FB
.text:0001C419 ; ---------------------------------------------------------------------------
.text:0001C419
.text:0001C419 loc_1C419:                              ; CODE XREF: _ssh2_rdpkt+279j
.text:0001C419                 mov     eax, [ebp+arg_4]
.text:0001C41C                 mov     ecx, [eax]
.text:0001C41E                 mov     edx, [ebp+var_4]
.text:0001C421                 mov     eax, [edx+20h]
.text:0001C424                 mov     edx, [ebp+var_4]
.text:0001C427                 mov     edx, [edx+0Ch]
.text:0001C42A                 mov     esi, [ebp+var_4]
.text:0001C42D                 add     edx, [esi+10h]
.text:0001C430                 mov     esi, [ebp+var_4]
.text:0001C433                 add     edx, [esi+14h]
.text:0001C436                 mov     eax, [eax+10h]
.text:0001C439                 mov     cl, [ecx]
.text:0001C43B                 mov     [edx+eax], cl
.text:0001C43E                 mov     edx, [ebp+arg_4]
.text:0001C441                 mov     eax, [edx]
.text:0001C443                 add     eax, 1
.text:0001C446                 mov     ecx, [ebp+arg_4]
.text:0001C449                 mov     [ecx], eax
.text:0001C44B                 mov     edx, [ebp+arg_8]
.text:0001C44E                 mov     eax, [edx]
.text:0001C450                 sub     eax, 1
.text:0001C453                 mov     ecx, [ebp+arg_8]
.text:0001C456                 mov     [ecx], eax
.text:0001C458                 jmp     short loc_1C3DE
.text:0001C45A ; ---------------------------------------------------------------------------
.text:0001C45A
.text:0001C45A loc_1C45A:                              ; CODE XREF: _ssh2_rdpkt+271j
.text:0001C45A                 mov     esi, esp
.text:0001C45C                 mov     edx, [ebp+var_4]
.text:0001C45F                 mov     eax, [edx+18h]
.text:0001C462                 push    eax
.text:0001C463                 mov     ecx, [ebp+var_4]
.text:0001C466                 mov     edx, [ecx+20h]
.text:0001C469                 mov     eax, [edx+10h]
.text:0001C46C                 mov     ecx, [ebp+var_4]
.text:0001C46F                 add     eax, [ecx+0Ch]
.text:0001C472                 push    eax
.text:0001C473                 mov     edx, [ebp+arg_0]
.text:0001C476                 mov     eax, [edx+6Ch]
.text:0001C479                 push    eax
.text:0001C47A                 mov     ecx, [ebp+arg_0]
.text:0001C47D                 mov     edx, [ecx+64h]
.text:0001C480                 mov     eax, [edx+14h]
.text:0001C483                 call    eax
.text:0001C485                 add     esp, 0Ch
.text:0001C488                 cmp     esi, esp
.text:0001C48A                 call    __RTC_CheckEsp
.text:0001C48F                 mov     esi, esp
.text:0001C491                 mov     ecx, [ebp+var_4]
.text:0001C494                 mov     edx, [ecx+18h]
.text:0001C497                 push    edx
.text:0001C498                 mov     eax, [ebp+var_4]
.text:0001C49B                 mov     ecx, [eax+20h]
.text:0001C49E                 mov     edx, [ecx+10h]
.text:0001C4A1                 mov     eax, [ebp+var_4]
.text:0001C4A4                 add     edx, [eax+0Ch]
.text:0001C4A7                 push    edx
.text:0001C4A8                 mov     ecx, [ebp+arg_0]
.text:0001C4AB                 mov     edx, [ecx+7Ch]
.text:0001C4AE                 push    edx
.text:0001C4AF                 mov     eax, [ebp+arg_0]
.text:0001C4B2                 mov     ecx, [eax+74h]
.text:0001C4B5                 mov     edx, [ecx+18h]
.text:0001C4B8                 call    edx
.text:0001C4BA                 add     esp, 0Ch
.text:0001C4BD                 cmp     esi, esp
.text:0001C4BF                 call    __RTC_CheckEsp
.text:0001C4C4                 mov     eax, [ebp+var_4]
.text:0001C4C7                 mov     ecx, [eax+0Ch]
.text:0001C4CA                 mov     edx, [ebp+var_4]
.text:0001C4CD                 add     ecx, [edx+18h]
.text:0001C4D0                 mov     eax, [ebp+var_4]
.text:0001C4D3                 mov     [eax+0Ch], ecx
.text:0001C4D6                 mov     ecx, [ebp+var_4]
.text:0001C4D9                 mov     edx, [ecx+20h]
.text:0001C4DC                 mov     eax, [edx+10h]
.text:0001C4DF                 mov     ecx, [ebp+var_4]
.text:0001C4E2                 add     eax, [ecx+0Ch]
.text:0001C4E5                 mov     esi, esp
.text:0001C4E7                 push    eax
.text:0001C4E8                 mov     edx, [ebp+arg_0]
.text:0001C4EB                 mov     eax, [edx+7Ch]
.text:0001C4EE                 push    eax
.text:0001C4EF                 mov     ecx, [ebp+arg_0]
.text:0001C4F2                 mov     edx, [ecx+74h]
.text:0001C4F5                 mov     eax, [edx+20h]
.text:0001C4F8                 call    eax
.text:0001C4FA                 add     esp, 8
.text:0001C4FD                 cmp     esi, esp
.text:0001C4FF                 call    __RTC_CheckEsp
.text:0001C504                 test    eax, eax
.text:0001C506                 jz      short loc_1C56A
.text:0001C508                 mov     ecx, [ebp+var_4]
.text:0001C50B                 mov     edx, [ecx+20h]
.text:0001C50E                 mov     eax, [edx+10h]
.text:0001C511                 movzx   ecx, byte ptr [eax]
.text:0001C514                 shl     ecx, 18h
.text:0001C517                 mov     edx, [ebp+var_4]
.text:0001C51A                 mov     eax, [edx+20h]
.text:0001C51D                 mov     edx, [eax+10h]
.text:0001C520                 movzx   eax, byte ptr [edx+1]
.text:0001C524                 shl     eax, 10h
.text:0001C527                 or      ecx, eax
.text:0001C529                 mov     edx, [ebp+var_4]
.text:0001C52C                 mov     eax, [edx+20h]
.text:0001C52F                 mov     edx, [eax+10h]
.text:0001C532                 movzx   eax, byte ptr [edx+2]
.text:0001C536                 shl     eax, 8
.text:0001C539                 or      ecx, eax
.text:0001C53B                 mov     edx, [ebp+var_4]
.text:0001C53E                 mov     eax, [edx+20h]
.text:0001C541                 mov     edx, [eax+10h]
.text:0001C544                 movzx   eax, byte ptr [edx+3]
.text:0001C548                 or      ecx, eax
.text:0001C54A                 push    ecx
.text:0001C54B                 call    _toint
.text:0001C550                 add     esp, 4
.text:0001C553                 mov     ecx, [ebp+var_4]
.text:0001C556                 mov     [ecx], eax
.text:0001C558                 mov     edx, [ebp+var_4]
.text:0001C55B                 mov     eax, [edx+0Ch]
.text:0001C55E                 sub     eax, 4
.text:0001C561                 mov     ecx, [ebp+var_4]
.text:0001C564                 cmp     [ecx], eax
.text:0001C566                 jnz     short loc_1C56A
.text:0001C568                 jmp     short loc_1C5B8
.text:0001C56A ; ---------------------------------------------------------------------------
.text:0001C56A
.text:0001C56A loc_1C56A:                              ; CODE XREF: _ssh2_rdpkt+37Ej
.text:0001C56A                                         ; _ssh2_rdpkt+3DEj
.text:0001C56A                 mov     edx, [ebp+var_4]
.text:0001C56D                 cmp     dword ptr [edx+0Ch], 9000h
.text:0001C574                 jb      short loc_1C5B3
.text:0001C576                 push    offset $SG88541 ; "No valid incoming packet found"
.text:0001C57B                 call    _dupprintf
.text:0001C580                 add     esp, 4
.text:0001C583                 push    eax
.text:0001C584                 mov     eax, [ebp+arg_0]
.text:0001C587                 push    eax
.text:0001C588                 call    _bomb_out
.text:0001C58D                 add     esp, 8
.text:0001C590                 mov     ecx, [ebp+var_4]
.text:0001C593                 mov     edx, [ecx+20h]
.text:0001C596                 push    edx
.text:0001C597                 call    _ssh_free_packet
.text:0001C59C                 add     esp, 4
.text:0001C59F
.text:0001C59F loc_1C59F:                              ; CODE XREF: _ssh2_rdpkt+429j
.text:0001C59F                 mov     eax, [ebp+var_8]
.text:0001C5A2                 mov     dword ptr [eax], 0
.text:0001C5A8                 xor     eax, eax
.text:0001C5AA                 jmp     loc_1CB77
.text:0001C5AF ; ---------------------------------------------------------------------------
.text:0001C5AF                 xor     ecx, ecx
.text:0001C5B1                 jnz     short loc_1C59F
.text:0001C5B3
.text:0001C5B3 loc_1C5B3:                              ; CODE XREF: _ssh2_rdpkt+3ECj
.text:0001C5B3                 jmp     loc_1C3D2
.text:0001C5B8 ; ---------------------------------------------------------------------------
.text:0001C5B8
.text:0001C5B8 loc_1C5B8:                              ; CODE XREF: _ssh2_rdpkt+3E0j
.text:0001C5B8                 mov     edx, [ebp+var_4]
.text:0001C5BB                 mov     eax, [edx+0Ch]
.text:0001C5BE                 mov     ecx, [ebp+var_4]
.text:0001C5C1                 add     eax, [ecx+10h]
.text:0001C5C4                 mov     edx, [ebp+var_4]
.text:0001C5C7                 mov     ecx, [edx+20h]
.text:0001C5CA                 mov     [ecx+1Ch], eax
.text:0001C5CD                 push    1
.text:0001C5CF                 mov     edx, [ebp+var_4]
.text:0001C5D2                 mov     eax, [edx+20h]
.text:0001C5D5                 mov     ecx, [eax+1Ch]
.text:0001C5D8                 push    ecx
.text:0001C5D9                 mov     edx, [ebp+var_4]
.text:0001C5DC                 mov     eax, [edx+20h]
.text:0001C5DF                 mov     ecx, [eax+10h]
.text:0001C5E2                 push    ecx
.text:0001C5E3                 call    _saferealloc
.text:0001C5E8                 add     esp, 0Ch
.text:0001C5EB                 mov     edx, [ebp+var_4]
.text:0001C5EE                 mov     ecx, [edx+20h]
.text:0001C5F1                 mov     [ecx+10h], eax
.text:0001C5F4                 jmp     loc_1C917
.text:0001C5F9 ; ---------------------------------------------------------------------------
.text:0001C5F9
.text:0001C5F9 loc_1C5F9:                              ; CODE XREF: _ssh2_rdpkt+110j
.text:0001C5F9                                         ; _ssh2_rdpkt+122j ...
.text:0001C5F9                 push    1
.text:0001C5FB                 mov     edx, [ebp+var_4]
.text:0001C5FE                 mov     eax, [edx+18h]
.text:0001C601                 push    eax
.text:0001C602                 call    _safemalloc
.text:0001C607                 add     esp, 8
.text:0001C60A                 mov     ecx, [ebp+var_4]
.text:0001C60D                 mov     edx, [ecx+20h]
.text:0001C610                 mov     [edx+10h], eax
.text:0001C613                 mov     eax, [ebp+var_4]
.text:0001C616                 mov     dword ptr [eax], 0
.text:0001C61C                 mov     ecx, [ebp+var_4]
.text:0001C61F                 mov     dword ptr [ecx+14h], 0
.text:0001C626                 jmp     short loc_1C637
.text:0001C628 ; ---------------------------------------------------------------------------
.text:0001C628
.text:0001C628 loc_1C628:                              ; CODE XREF: _ssh2_rdpkt+50Ej
.text:0001C628                 mov     edx, [ebp+var_4]
.text:0001C62B                 mov     eax, [edx+14h]
.text:0001C62E                 add     eax, 1
.text:0001C631                 mov     ecx, [ebp+var_4]
.text:0001C634                 mov     [ecx+14h], eax
.text:0001C637
.text:0001C637 loc_1C637:                              ; CODE XREF: _ssh2_rdpkt+49Ej
.text:0001C637                 mov     edx, [ebp+var_4]
.text:0001C63A                 mov     eax, [ebp+var_4]
.text:0001C63D                 mov     ecx, [edx+14h]
.text:0001C640                 cmp     ecx, [eax+18h]
.text:0001C643                 jge     short loc_1C698
.text:0001C645
.text:0001C645 loc_1C645:                              ; CODE XREF: _ssh2_rdpkt+4D9j
.text:0001C645                 mov     edx, [ebp+arg_8]
.text:0001C648                 cmp     dword ptr [edx], 0
.text:0001C64B                 jnz     short loc_1C663
.text:0001C64D
.text:0001C64D loc_1C64D:                              ; CODE XREF: _ssh2_rdpkt+4D7j
.text:0001C64D                 mov     eax, [ebp+var_8]
.text:0001C650                 mov     dword ptr [eax], 661h
.text:0001C656                 xor     eax, eax
.text:0001C658                 jmp     loc_1CB77
.text:0001C65D ; ---------------------------------------------------------------------------
.text:0001C65D
.text:0001C65D loc_1C65D:                              ; CODE XREF: _ssh2_rdpkt+6Fj
.text:0001C65D                 xor     ecx, ecx
.text:0001C65F                 jnz     short loc_1C64D
.text:0001C661                 jmp     short loc_1C645
.text:0001C663 ; ---------------------------------------------------------------------------
.text:0001C663
.text:0001C663 loc_1C663:                              ; CODE XREF: _ssh2_rdpkt+4C3j
.text:0001C663                 mov     edx, [ebp+arg_4]
.text:0001C666                 mov     eax, [edx]
.text:0001C668                 mov     ecx, [ebp+var_4]
.text:0001C66B                 mov     edx, [ecx+20h]
.text:0001C66E                 mov     ecx, [edx+10h]
.text:0001C671                 mov     edx, [ebp+var_4]
.text:0001C674                 mov     edx, [edx+14h]
.text:0001C677                 mov     al, [eax]
.text:0001C679                 mov     [ecx+edx], al
.text:0001C67C                 mov     ecx, [ebp+arg_4]
.text:0001C67F                 mov     edx, [ecx]
.text:0001C681                 add     edx, 1
.text:0001C684                 mov     eax, [ebp+arg_4]
.text:0001C687                 mov     [eax], edx
.text:0001C689                 mov     ecx, [ebp+arg_8]
.text:0001C68C                 mov     edx, [ecx]
.text:0001C68E                 sub     edx, 1
.text:0001C691                 mov     eax, [ebp+arg_8]
.text:0001C694                 mov     [eax], edx
.text:0001C696                 jmp     short loc_1C628
.text:0001C698 ; ---------------------------------------------------------------------------
.text:0001C698
.text:0001C698 loc_1C698:                              ; CODE XREF: _ssh2_rdpkt+4BBj
.text:0001C698                 mov     ecx, [ebp+arg_0]
.text:0001C69B                 cmp     dword ptr [ecx+64h], 0
.text:0001C69F                 jz      short loc_1C6D0
.text:0001C6A1                 mov     esi, esp
.text:0001C6A3                 mov     edx, [ebp+var_4]
.text:0001C6A6                 mov     eax, [edx+18h]
.text:0001C6A9                 push    eax
.text:0001C6AA                 mov     ecx, [ebp+var_4]
.text:0001C6AD                 mov     edx, [ecx+20h]
.text:0001C6B0                 mov     eax, [edx+10h]
.text:0001C6B3                 push    eax
.text:0001C6B4                 mov     ecx, [ebp+arg_0]
.text:0001C6B7                 mov     edx, [ecx+6Ch]
.text:0001C6BA                 push    edx
.text:0001C6BB                 mov     eax, [ebp+arg_0]
.text:0001C6BE                 mov     ecx, [eax+64h]
.text:0001C6C1                 mov     edx, [ecx+14h]
.text:0001C6C4                 call    edx
.text:0001C6C6                 add     esp, 0Ch
.text:0001C6C9                 cmp     esi, esp
.text:0001C6CB                 call    __RTC_CheckEsp
.text:0001C6D0
.text:0001C6D0 loc_1C6D0:                              ; CODE XREF: _ssh2_rdpkt+517j
.text:0001C6D0                 mov     eax, [ebp+var_4]
.text:0001C6D3                 mov     ecx, [eax+20h]
.text:0001C6D6                 mov     edx, [ecx+10h]
.text:0001C6D9                 movzx   eax, byte ptr [edx]
.text:0001C6DC                 shl     eax, 18h
.text:0001C6DF                 mov     ecx, [ebp+var_4]
.text:0001C6E2                 mov     edx, [ecx+20h]
.text:0001C6E5                 mov     ecx, [edx+10h]
.text:0001C6E8                 movzx   edx, byte ptr [ecx+1]
.text:0001C6EC                 shl     edx, 10h
.text:0001C6EF                 or      eax, edx
.text:0001C6F1                 mov     ecx, [ebp+var_4]
.text:0001C6F4                 mov     edx, [ecx+20h]
.text:0001C6F7                 mov     ecx, [edx+10h]
.text:0001C6FA                 movzx   edx, byte ptr [ecx+2]
.text:0001C6FE                 shl     edx, 8
.text:0001C701                 or      eax, edx
.text:0001C703                 mov     ecx, [ebp+var_4]
.text:0001C706                 mov     edx, [ecx+20h]
.text:0001C709                 mov     ecx, [edx+10h]
.text:0001C70C                 movzx   edx, byte ptr [ecx+3]
.text:0001C710                 or      eax, edx
.text:0001C712                 push    eax
.text:0001C713                 call    _toint
.text:0001C718                 add     esp, 4
.text:0001C71B                 mov     ecx, [ebp+var_4]
.text:0001C71E                 mov     [ecx], eax
.text:0001C720                 mov     edx, [ebp+var_4]
.text:0001C723                 cmp     dword ptr [edx], 0
.text:0001C726                 jl      short loc_1C746
.text:0001C728                 mov     eax, [ebp+var_4]
.text:0001C72B                 cmp     dword ptr [eax], 9000h
.text:0001C731                 ja      short loc_1C746
.text:0001C733                 mov     ecx, [ebp+var_4]
.text:0001C736                 mov     eax, [ecx]
.text:0001C738                 add     eax, 4
.text:0001C73B                 mov     ecx, [ebp+var_4]
.text:0001C73E                 cdq
.text:0001C73F                 idiv    dword ptr [ecx+18h]
.text:0001C742                 test    edx, edx
.text:0001C744                 jz      short loc_1C783
.text:0001C746
.text:0001C746 loc_1C746:                              ; CODE XREF: _ssh2_rdpkt+59Ej
.text:0001C746                                         ; _ssh2_rdpkt+5A9j
.text:0001C746                 push    offset $SG88574 ; "Incoming packet was garbled on decrypti"...
.text:0001C74B                 call    _dupprintf
.text:0001C750                 add     esp, 4
.text:0001C753                 push    eax
.text:0001C754                 mov     edx, [ebp+arg_0]
.text:0001C757                 push    edx
.text:0001C758                 call    _bomb_out
.text:0001C75D                 add     esp, 8
.text:0001C760                 mov     eax, [ebp+var_4]
.text:0001C763                 mov     ecx, [eax+20h]
.text:0001C766                 push    ecx
.text:0001C767                 call    _ssh_free_packet
.text:0001C76C                 add     esp, 4
.text:0001C76F
.text:0001C76F loc_1C76F:                              ; CODE XREF: _ssh2_rdpkt+5F9j
.text:0001C76F                 mov     edx, [ebp+var_8]
.text:0001C772                 mov     dword ptr [edx], 0
.text:0001C778                 xor     eax, eax
.text:0001C77A                 jmp     loc_1CB77
.text:0001C77F ; ---------------------------------------------------------------------------
.text:0001C77F                 xor     eax, eax
.text:0001C781                 jnz     short loc_1C76F
.text:0001C783
.text:0001C783 loc_1C783:                              ; CODE XREF: _ssh2_rdpkt+5BCj
.text:0001C783                 mov     ecx, [ebp+var_4]
.text:0001C786                 mov     edx, [ecx]
.text:0001C788                 add     edx, 4
.text:0001C78B                 mov     eax, [ebp+var_4]
.text:0001C78E                 mov     [eax+0Ch], edx
.text:0001C791                 mov     ecx, [ebp+var_4]
.text:0001C794                 mov     edx, [ecx+0Ch]
.text:0001C797                 mov     eax, [ebp+var_4]
.text:0001C79A                 add     edx, [eax+10h]
.text:0001C79D                 mov     ecx, [ebp+var_4]
.text:0001C7A0                 mov     eax, [ecx+20h]
.text:0001C7A3                 mov     [eax+1Ch], edx
.text:0001C7A6                 push    1
.text:0001C7A8                 mov     ecx, [ebp+var_4]
.text:0001C7AB                 mov     edx, [ecx+20h]
.text:0001C7AE                 mov     eax, [edx+1Ch]
.text:0001C7B1                 push    eax
.text:0001C7B2                 mov     ecx, [ebp+var_4]
.text:0001C7B5                 mov     edx, [ecx+20h]
.text:0001C7B8                 mov     eax, [edx+10h]
.text:0001C7BB                 push    eax
.text:0001C7BC                 call    _saferealloc
.text:0001C7C1                 add     esp, 0Ch
.text:0001C7C4                 mov     ecx, [ebp+var_4]
.text:0001C7C7                 mov     edx, [ecx+20h]
.text:0001C7CA                 mov     [edx+10h], eax
.text:0001C7CD                 mov     eax, [ebp+var_4]
.text:0001C7D0                 mov     ecx, [ebp+var_4]
.text:0001C7D3                 mov     edx, [ecx+18h]
.text:0001C7D6                 mov     [eax+14h], edx
.text:0001C7D9                 jmp     short loc_1C7EA
.text:0001C7DB ; ---------------------------------------------------------------------------
.text:0001C7DB
.text:0001C7DB loc_1C7DB:                              ; CODE XREF: _ssh2_rdpkt+6C7j
.text:0001C7DB                 mov     eax, [ebp+var_4]
.text:0001C7DE                 mov     ecx, [eax+14h]
.text:0001C7E1                 add     ecx, 1
.text:0001C7E4                 mov     edx, [ebp+var_4]
.text:0001C7E7                 mov     [edx+14h], ecx
.text:0001C7EA
.text:0001C7EA loc_1C7EA:                              ; CODE XREF: _ssh2_rdpkt+651j
.text:0001C7EA                 mov     eax, [ebp+var_4]
.text:0001C7ED                 mov     ecx, [eax+0Ch]
.text:0001C7F0                 mov     edx, [ebp+var_4]
.text:0001C7F3                 add     ecx, [edx+10h]
.text:0001C7F6                 mov     eax, [ebp+var_4]
.text:0001C7F9                 cmp     [eax+14h], ecx
.text:0001C7FC                 jge     short loc_1C851
.text:0001C7FE
.text:0001C7FE loc_1C7FE:                              ; CODE XREF: _ssh2_rdpkt+692j
.text:0001C7FE                 mov     ecx, [ebp+arg_8]
.text:0001C801                 cmp     dword ptr [ecx], 0
.text:0001C804                 jnz     short loc_1C81C
.text:0001C806
.text:0001C806 loc_1C806:                              ; CODE XREF: _ssh2_rdpkt+690j
.text:0001C806                 mov     edx, [ebp+var_8]
.text:0001C809                 mov     dword ptr [edx], 68Dh
.text:0001C80F                 xor     eax, eax
.text:0001C811                 jmp     loc_1CB77
.text:0001C816 ; ---------------------------------------------------------------------------
.text:0001C816
.text:0001C816 loc_1C816:                              ; CODE XREF: _ssh2_rdpkt+7Cj
.text:0001C816                 xor     eax, eax
.text:0001C818                 jnz     short loc_1C806
.text:0001C81A                 jmp     short loc_1C7FE
.text:0001C81C ; ---------------------------------------------------------------------------
.text:0001C81C
.text:0001C81C loc_1C81C:                              ; CODE XREF: _ssh2_rdpkt+67Cj
.text:0001C81C                 mov     ecx, [ebp+arg_4]
.text:0001C81F                 mov     edx, [ecx]
.text:0001C821                 mov     eax, [ebp+var_4]
.text:0001C824                 mov     ecx, [eax+20h]
.text:0001C827                 mov     eax, [ecx+10h]
.text:0001C82A                 mov     ecx, [ebp+var_4]
.text:0001C82D                 mov     ecx, [ecx+14h]
.text:0001C830                 mov     dl, [edx]
.text:0001C832                 mov     [eax+ecx], dl
.text:0001C835                 mov     eax, [ebp+arg_4]
.text:0001C838                 mov     ecx, [eax]
.text:0001C83A                 add     ecx, 1
.text:0001C83D                 mov     edx, [ebp+arg_4]
.text:0001C840                 mov     [edx], ecx
.text:0001C842                 mov     eax, [ebp+arg_8]
.text:0001C845                 mov     ecx, [eax]
.text:0001C847                 sub     ecx, 1
.text:0001C84A                 mov     edx, [ebp+arg_8]
.text:0001C84D                 mov     [edx], ecx
.text:0001C84F                 jmp     short loc_1C7DB
.text:0001C851 ; ---------------------------------------------------------------------------
.text:0001C851
.text:0001C851 loc_1C851:                              ; CODE XREF: _ssh2_rdpkt+674j
.text:0001C851                 mov     eax, [ebp+arg_0]
.text:0001C854                 cmp     dword ptr [eax+64h], 0
.text:0001C858                 jz      short loc_1C895
.text:0001C85A                 mov     ecx, [ebp+var_4]
.text:0001C85D                 mov     edx, [ebp+var_4]
.text:0001C860                 mov     eax, [ecx+0Ch]
.text:0001C863                 sub     eax, [edx+18h]
.text:0001C866                 mov     esi, esp
.text:0001C868                 push    eax
.text:0001C869                 mov     ecx, [ebp+var_4]
.text:0001C86C                 mov     edx, [ecx+20h]
.text:0001C86F                 mov     eax, [edx+10h]
.text:0001C872                 mov     ecx, [ebp+var_4]
.text:0001C875                 add     eax, [ecx+18h]
.text:0001C878                 push    eax
.text:0001C879                 mov     edx, [ebp+arg_0]
.text:0001C87C                 mov     eax, [edx+6Ch]
.text:0001C87F                 push    eax
.text:0001C880                 mov     ecx, [ebp+arg_0]
.text:0001C883                 mov     edx, [ecx+64h]
.text:0001C886                 mov     eax, [edx+14h]
.text:0001C889                 call    eax
.text:0001C88B                 add     esp, 0Ch
.text:0001C88E                 cmp     esi, esp
.text:0001C890                 call    __RTC_CheckEsp
.text:0001C895
.text:0001C895 loc_1C895:                              ; CODE XREF: _ssh2_rdpkt+6D0j
.text:0001C895                 mov     ecx, [ebp+arg_0]
.text:0001C898                 cmp     dword ptr [ecx+74h], 0
.text:0001C89C                 jz      short loc_1C917
.text:0001C89E                 mov     esi, esp
.text:0001C8A0                 mov     edx, [ebp+var_4]
.text:0001C8A3                 mov     eax, [edx+1Ch]
.text:0001C8A6                 push    eax
.text:0001C8A7                 mov     ecx, [ebp+var_4]
.text:0001C8AA                 mov     edx, [ecx]
.text:0001C8AC                 add     edx, 4
.text:0001C8AF                 push    edx
.text:0001C8B0                 mov     eax, [ebp+var_4]
.text:0001C8B3                 mov     ecx, [eax+20h]
.text:0001C8B6                 mov     edx, [ecx+10h]
.text:0001C8B9                 push    edx
.text:0001C8BA                 mov     eax, [ebp+arg_0]
.text:0001C8BD                 mov     ecx, [eax+7Ch]
.text:0001C8C0                 push    ecx
.text:0001C8C1                 mov     edx, [ebp+arg_0]
.text:0001C8C4                 mov     eax, [edx+74h]
.text:0001C8C7                 mov     ecx, [eax+10h]
.text:0001C8CA                 call    ecx
.text:0001C8CC                 add     esp, 10h
.text:0001C8CF                 cmp     esi, esp
.text:0001C8D1                 call    __RTC_CheckEsp
.text:0001C8D6                 test    eax, eax
.text:0001C8D8                 jnz     short loc_1C917
.text:0001C8DA                 push    offset $SG88595 ; "Incorrect MAC received on packet"
.text:0001C8DF                 call    _dupprintf
.text:0001C8E4                 add     esp, 4
.text:0001C8E7                 push    eax
.text:0001C8E8                 mov     edx, [ebp+arg_0]
.text:0001C8EB                 push    edx
.text:0001C8EC                 call    _bomb_out
.text:0001C8F1                 add     esp, 8
.text:0001C8F4                 mov     eax, [ebp+var_4]
.text:0001C8F7                 mov     ecx, [eax+20h]
.text:0001C8FA                 push    ecx
.text:0001C8FB                 call    _ssh_free_packet
.text:0001C900                 add     esp, 4
.text:0001C903
.text:0001C903 loc_1C903:                              ; CODE XREF: _ssh2_rdpkt+78Dj
.text:0001C903                 mov     edx, [ebp+var_8]
.text:0001C906                 mov     dword ptr [edx], 0
.text:0001C90C                 xor     eax, eax
.text:0001C90E                 jmp     loc_1CB77
.text:0001C913 ; ---------------------------------------------------------------------------
.text:0001C913                 xor     eax, eax
.text:0001C915                 jnz     short loc_1C903
.text:0001C917
.text:0001C917 loc_1C917:                              ; CODE XREF: _ssh2_rdpkt+46Cj
.text:0001C917                                         ; _ssh2_rdpkt+714j ...
.text:0001C917                 mov     ecx, [ebp+var_4]
.text:0001C91A                 mov     edx, [ecx+20h]
.text:0001C91D                 mov     eax, [edx+10h]
.text:0001C920                 movzx   ecx, byte ptr [eax+4]
.text:0001C924                 mov     edx, [ebp+var_4]
.text:0001C927                 mov     [edx+4], ecx
.text:0001C92A                 mov     eax, [ebp+var_4]
.text:0001C92D                 cmp     dword ptr [eax+4], 4
.text:0001C931                 jl      short loc_1C943
.text:0001C933                 mov     ecx, [ebp+var_4]
.text:0001C936                 mov     edx, [ebp+var_4]
.text:0001C939                 mov     eax, [ecx]
.text:0001C93B                 sub     eax, [edx+4]
.text:0001C93E                 cmp     eax, 1
.text:0001C941                 jge     short loc_1C980
.text:0001C943
.text:0001C943 loc_1C943:                              ; CODE XREF: _ssh2_rdpkt+7A9j
.text:0001C943                 push    offset $SG88602 ; "Invalid padding length on received pack"...
.text:0001C948                 call    _dupprintf
.text:0001C94D                 add     esp, 4
.text:0001C950                 push    eax
.text:0001C951                 mov     ecx, [ebp+arg_0]
.text:0001C954                 push    ecx
.text:0001C955                 call    _bomb_out
.text:0001C95A                 add     esp, 8
.text:0001C95D                 mov     edx, [ebp+var_4]
.text:0001C960                 mov     eax, [edx+20h]
.text:0001C963                 push    eax
.text:0001C964                 call    _ssh_free_packet
.text:0001C969                 add     esp, 4
.text:0001C96C
.text:0001C96C loc_1C96C:                              ; CODE XREF: _ssh2_rdpkt+7F6j
.text:0001C96C                 mov     ecx, [ebp+var_8]
.text:0001C96F                 mov     dword ptr [ecx], 0
.text:0001C975                 xor     eax, eax
.text:0001C977                 jmp     loc_1CB77
.text:0001C97C ; ---------------------------------------------------------------------------
.text:0001C97C                 xor     edx, edx
.text:0001C97E                 jnz     short loc_1C96C
.text:0001C980
.text:0001C980 loc_1C980:                              ; CODE XREF: _ssh2_rdpkt+7B9j
.text:0001C980                 mov     eax, [ebp+var_4]
.text:0001C983                 mov     ecx, [ebp+var_4]
.text:0001C986                 mov     edx, [eax]
.text:0001C988                 sub     edx, [ecx+4]
.text:0001C98B                 sub     edx, 1
.text:0001C98E                 mov     eax, [ebp+var_4]
.text:0001C991                 mov     [eax+8], edx
.text:0001C994                 mov     ecx, [ebp+var_4]
.text:0001C997                 mov     edx, [ecx+8]
.text:0001C99A                 add     edx, 5
.text:0001C99D                 mov     eax, [ebp+var_4]
.text:0001C9A0                 mov     ecx, [eax+20h]
.text:0001C9A3                 mov     [ecx], edx
.text:0001C9A5                 mov     edx, [ebp+var_4]
.text:0001C9A8                 mov     eax, [edx+20h]
.text:0001C9AB                 mov     ecx, [ebp+var_4]
.text:0001C9AE                 mov     edx, [ecx+0Ch]
.text:0001C9B1                 mov     [eax+20h], edx
.text:0001C9B4                 mov     eax, [ebp+var_4]
.text:0001C9B7                 mov     ecx, [eax+20h]
.text:0001C9BA                 mov     edx, [ebp+var_4]
.text:0001C9BD                 mov     eax, [edx+1Ch]
.text:0001C9C0                 mov     [ecx+0Ch], eax
.text:0001C9C3                 mov     ecx, [ebp+var_4]
.text:0001C9C6                 mov     edx, [ecx+1Ch]
.text:0001C9C9                 add     edx, 1
.text:0001C9CC                 mov     eax, [ebp+var_4]
.text:0001C9CF                 mov     [eax+1Ch], edx
.text:0001C9D2                 mov     ecx, [ebp+var_4]
.text:0001C9D5                 mov     edx, [ebp+var_4]
.text:0001C9D8                 mov     eax, [ecx+0Ch]
.text:0001C9DB                 sub     eax, [edx+4]
.text:0001C9DE                 mov     ecx, [ebp+var_4]
.text:0001C9E1                 mov     edx, [ecx+20h]
.text:0001C9E4                 mov     [edx], eax
.text:0001C9E6                 mov     eax, [ebp+var_4]
.text:0001C9E9                 mov     ecx, [eax+20h]
.text:0001C9EC                 cmp     dword ptr [ecx], 0
.text:0001C9EF                 jge     short loc_1CA08
.text:0001C9F1                 push    6B4h            ; Line
.text:0001C9F6                 push    offset $SG88608 ; "..\\..\\..\\ssh.c"
.text:0001C9FB                 push    offset $SG88609 ; "st->pktin->length >= 0"
.text:0001CA00                 call    __wassert
.text:0001CA05 ; ---------------------------------------------------------------------------
.text:0001CA05                 add     esp, 0Ch
.text:0001CA08
.text:0001CA08 loc_1CA08:                              ; CODE XREF: _ssh2_rdpkt+867j
.text:0001CA08                 mov     eax, [ebp+arg_0]
.text:0001CA0B                 cmp     dword ptr [eax+84h], 0
.text:0001CA12                 jz      loc_1CADF
.text:0001CA18                 mov     esi, esp
.text:0001CA1A                 lea     ecx, [ebp+Size]
.text:0001CA1D                 push    ecx
.text:0001CA1E                 lea     edx, [ebp+Src]
.text:0001CA21                 push    edx
.text:0001CA22                 mov     eax, [ebp+var_4]
.text:0001CA25                 mov     ecx, [eax+20h]
.text:0001CA28                 mov     edx, [ecx]
.text:0001CA2A                 sub     edx, 5
.text:0001CA2D                 push    edx
.text:0001CA2E                 mov     eax, [ebp+var_4]
.text:0001CA31                 mov     ecx, [eax+20h]
.text:0001CA34                 mov     edx, [ecx+10h]
.text:0001CA37                 add     edx, 5
.text:0001CA3A                 push    edx
.text:0001CA3B                 mov     eax, [ebp+arg_0]
.text:0001CA3E                 mov     ecx, [eax+8Ch]
.text:0001CA44                 push    ecx
.text:0001CA45                 mov     edx, [ebp+arg_0]
.text:0001CA48                 mov     eax, [edx+84h]
.text:0001CA4E                 mov     ecx, [eax+1Ch]
.text:0001CA51                 call    ecx
.text:0001CA53                 add     esp, 14h
.text:0001CA56                 cmp     esi, esp
.text:0001CA58                 call    __RTC_CheckEsp
.text:0001CA5D                 test    eax, eax
.text:0001CA5F                 jz      short loc_1CADF
.text:0001CA61                 mov     edx, [ebp+var_4]
.text:0001CA64                 mov     eax, [edx+20h]
.text:0001CA67                 mov     ecx, [ebp+Size]
.text:0001CA6A                 add     ecx, 5
.text:0001CA6D                 cmp     [eax+1Ch], ecx
.text:0001CA70                 jge     short loc_1CAA8
.text:0001CA72                 mov     edx, [ebp+Size]
.text:0001CA75                 add     edx, 5
.text:0001CA78                 mov     eax, [ebp+var_4]
.text:0001CA7B                 mov     ecx, [eax+20h]
.text:0001CA7E                 mov     [ecx+1Ch], edx
.text:0001CA81                 push    1
.text:0001CA83                 mov     edx, [ebp+var_4]
.text:0001CA86                 mov     eax, [edx+20h]
.text:0001CA89                 mov     ecx, [eax+1Ch]
.text:0001CA8C                 push    ecx
.text:0001CA8D                 mov     edx, [ebp+var_4]
.text:0001CA90                 mov     eax, [edx+20h]
.text:0001CA93                 mov     ecx, [eax+10h]
.text:0001CA96                 push    ecx
.text:0001CA97                 call    _saferealloc
.text:0001CA9C                 add     esp, 0Ch
.text:0001CA9F                 mov     edx, [ebp+var_4]
.text:0001CAA2                 mov     ecx, [edx+20h]
.text:0001CAA5                 mov     [ecx+10h], eax
.text:0001CAA8
.text:0001CAA8 loc_1CAA8:                              ; CODE XREF: _ssh2_rdpkt+8E8j
.text:0001CAA8                 mov     edx, [ebp+Size]
.text:0001CAAB                 add     edx, 5
.text:0001CAAE                 mov     eax, [ebp+var_4]
.text:0001CAB1                 mov     ecx, [eax+20h]
.text:0001CAB4                 mov     [ecx], edx
.text:0001CAB6                 mov     edx, [ebp+Size]
.text:0001CAB9                 push    edx             ; Size
.text:0001CABA                 mov     eax, [ebp+Src]
.text:0001CABD                 push    eax             ; Src
.text:0001CABE                 mov     ecx, [ebp+var_4]
.text:0001CAC1                 mov     edx, [ecx+20h]
.text:0001CAC4                 mov     eax, [edx+10h]
.text:0001CAC7                 add     eax, 5
.text:0001CACA                 push    eax             ; Dst
.text:0001CACB                 call    _memcpy
.text:0001CAD0                 add     esp, 0Ch
.text:0001CAD3                 mov     ecx, [ebp+Src]
.text:0001CAD6                 push    ecx
.text:0001CAD7                 call    _safefree
.text:0001CADC                 add     esp, 4
.text:0001CADF
.text:0001CADF loc_1CADF:                              ; CODE XREF: _ssh2_rdpkt+88Aj
.text:0001CADF                                         ; _ssh2_rdpkt+8D7j
.text:0001CADF                 mov     edx, [ebp+var_4]
.text:0001CAE2                 mov     eax, [edx+20h]
.text:0001CAE5                 mov     ecx, [eax+10h]
.text:0001CAE8                 mov     edx, [ebp+var_4]
.text:0001CAEB                 mov     eax, [edx+20h]
.text:0001CAEE                 movzx   ecx, byte ptr [ecx+5]
.text:0001CAF2                 mov     [eax+8], ecx
.text:0001CAF5                 mov     edx, [ebp+var_4]
.text:0001CAF8                 mov     eax, [edx+20h]
.text:0001CAFB                 mov     ecx, [eax+10h]
.text:0001CAFE                 add     ecx, 6
.text:0001CB01                 mov     edx, [ebp+var_4]
.text:0001CB04                 mov     eax, [edx+20h]
.text:0001CB07                 mov     [eax+14h], ecx
.text:0001CB0A                 mov     ecx, [ebp+var_4]
.text:0001CB0D                 mov     edx, [ecx+20h]
.text:0001CB10                 mov     eax, [edx]
.text:0001CB12                 sub     eax, 6
.text:0001CB15                 mov     ecx, [ebp+var_4]
.text:0001CB18                 mov     edx, [ecx+20h]
.text:0001CB1B                 mov     [edx], eax
.text:0001CB1D                 mov     eax, [ebp+var_4]
.text:0001CB20                 mov     ecx, [eax+20h]
.text:0001CB23                 cmp     dword ptr [ecx], 0
.text:0001CB26                 jge     short loc_1CB3F
.text:0001CB28                 push    6D3h            ; Line
.text:0001CB2D                 push    offset $SG88618 ; "..\\..\\..\\ssh.c"
.text:0001CB32                 push    offset $SG88619 ; "st->pktin->length >= 0"
.text:0001CB37                 call    __wassert
.text:0001CB3C ; ---------------------------------------------------------------------------
.text:0001CB3C                 add     esp, 0Ch
.text:0001CB3F
.text:0001CB3F loc_1CB3F:                              ; CODE XREF: _ssh2_rdpkt+99Ej
.text:0001CB3F                 mov     eax, [ebp+arg_0]
.text:0001CB42                 cmp     dword ptr [eax+18h], 0
.text:0001CB46                 jz      short loc_1CB5B
.text:0001CB48                 mov     ecx, [ebp+var_4]
.text:0001CB4B                 mov     edx, [ecx+20h]
.text:0001CB4E                 push    edx
.text:0001CB4F                 mov     eax, [ebp+arg_0]
.text:0001CB52                 push    eax
.text:0001CB53                 call    _ssh2_log_incoming_packet
.text:0001CB58                 add     esp, 8
.text:0001CB5B
.text:0001CB5B loc_1CB5B:                              ; CODE XREF: _ssh2_rdpkt+9BEj
.text:0001CB5B                 mov     ecx, [ebp+var_4]
.text:0001CB5E                 mov     edx, [ecx+20h]
.text:0001CB61                 mov     dword ptr [edx+18h], 0
.text:0001CB68
.text:0001CB68 loc_1CB68:                              ; CODE XREF: _ssh2_rdpkt+63j
.text:0001CB68                                         ; _ssh2_rdpkt+82j
.text:0001CB68                 mov     eax, [ebp+var_8]
.text:0001CB6B                 mov     dword ptr [eax], 0
.text:0001CB71                 mov     ecx, [ebp+var_4]
.text:0001CB74                 mov     eax, [ecx+20h]
.text:0001CB77
.text:0001CB77 loc_1CB77:                              ; CODE XREF: _ssh2_rdpkt+191j
.text:0001CB77                                         ; _ssh2_rdpkt+286j ...
.text:0001CB77                 push    edx
.text:0001CB78                 mov     ecx, ebp
.text:0001CB7A                 push    eax
.text:0001CB7B                 lea     edx, $LN82
.text:0001CB81                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0001CB86                 pop     eax
.text:0001CB87                 pop     edx
.text:0001CB88                 pop     edi
.text:0001CB89                 pop     esi
.text:0001CB8A                 add     esp, 34h
.text:0001CB8D                 cmp     ebp, esp
.text:0001CB8F                 call    __RTC_CheckEsp
.text:0001CB94                 mov     esp, ebp
.text:0001CB96                 pop     ebp
.text:0001CB97                 retn
.text:0001CB97 _ssh2_rdpkt     endp
.text:0001CB97
.text:0001CB97 ; ---------------------------------------------------------------------------
.text:0001CB98 $LN82           dd 3                    ; DATA XREF: _ssh2_rdpkt+9F3o
.text:0001CB9C                 dd offset $LN81
.text:0001CBA0 $LN81           dd 0FFFFFFF0h, 4        ; DATA XREF: .text:0001CB9Co
.text:0001CBA8                 dd offset $LN78         ; "seq"
.text:0001CBAC                 dd 0FFFFFFE4h, 4
.text:0001CBB4                 dd offset $LN79         ; "newpayload"
.text:0001CBB8                 dd 0FFFFFFD8h, 4
.text:0001CBC0                 dd offset $LN80         ; "newlen"
.text:0001CBC4 $LN80           db 'newlen',0           ; DATA XREF: .text:0001CBC0o
.text:0001CBCB $LN79           db 'newpayload',0       ; DATA XREF: .text:0001CBB4o
.text:0001CBD6 $LN78           db 'seq',0              ; DATA XREF: .text:0001CBA8o
.text:0001CBDA                 db 0Eh dup(0CCh)
.text:0001CBE8
.text:0001CBE8 ; =============== S U B R O U T I N E =======================================
.text:0001CBE8
.text:0001CBE8 ; Attributes: bp-based frame
.text:0001CBE8
.text:0001CBE8 _ssh2_log_incoming_packet proc near     ; CODE XREF: _ssh2_rdpkt+9CBp
.text:0001CBE8                                         ; _ssh2_bare_connection_rdpkt+269p
.text:0001CBE8
.text:0001CBE8 var_58          = byte ptr -58h
.text:0001CBE8 var_54          = dword ptr -54h
.text:0001CBE8 var_48          = dword ptr -48h
.text:0001CBE8 var_3C          = dword ptr -3Ch
.text:0001CBE8 var_38          = dword ptr -38h
.text:0001CBE8 var_34          = dword ptr -34h
.text:0001CBE8 var_8           = dword ptr -8
.text:0001CBE8 var_4           = dword ptr -4
.text:0001CBE8 arg_0           = dword ptr  8
.text:0001CBE8 arg_4           = dword ptr  0Ch
.text:0001CBE8
.text:0001CBE8                 push    ebp
.text:0001CBE9                 mov     ebp, esp
.text:0001CBEB                 sub     esp, 58h
.text:0001CBEE                 push    edi
.text:0001CBEF                 lea     edi, [ebp+var_58]
.text:0001CBF2                 mov     ecx, 16h
.text:0001CBF7                 mov     eax, 0CCCCCCCCh
.text:0001CBFC                 rep stosd
.text:0001CBFE                 mov     eax, dword ptr ds:___security_cookie
.text:0001CC03                 xor     eax, ebp
.text:0001CC05                 mov     [ebp+var_4], eax
.text:0001CC08                 mov     [ebp+var_8], 0
.text:0001CC0F                 mov     eax, [ebp+arg_4]
.text:0001CC12                 mov     dword ptr [eax+18h], 0
.text:0001CC19                 mov     ecx, [ebp+arg_0]
.text:0001CC1C                 cmp     dword ptr [ecx+220h], 0
.text:0001CC23                 jz      loc_1CCAD
.text:0001CC29                 mov     edx, [ebp+arg_4]
.text:0001CC2C                 cmp     dword ptr [edx+8], 5Eh ; '^'
.text:0001CC30                 jz      short loc_1CC3B
.text:0001CC32                 mov     eax, [ebp+arg_4]
.text:0001CC35                 cmp     dword ptr [eax+8], 5Fh ; '_'
.text:0001CC39                 jnz     short loc_1CCAD
.text:0001CC3B
.text:0001CC3B loc_1CC3B:                              ; CODE XREF: _ssh2_log_incoming_packet+48j
.text:0001CC3B                 mov     ecx, [ebp+arg_4]
.text:0001CC3E                 push    ecx
.text:0001CC3F                 call    _ssh_pkt_getuint32
.text:0001CC44                 add     esp, 4
.text:0001CC47                 mov     edx, [ebp+arg_4]
.text:0001CC4A                 cmp     dword ptr [edx+8], 5Fh ; '_'
.text:0001CC4E                 jnz     short loc_1CC5C
.text:0001CC50                 mov     eax, [ebp+arg_4]
.text:0001CC53                 push    eax
.text:0001CC54                 call    _ssh_pkt_getuint32
.text:0001CC59                 add     esp, 4
.text:0001CC5C
.text:0001CC5C loc_1CC5C:                              ; CODE XREF: _ssh2_log_incoming_packet+66j
.text:0001CC5C                 mov     ecx, [ebp+arg_4]
.text:0001CC5F                 mov     edx, [ecx+18h]
.text:0001CC62                 add     edx, 4
.text:0001CC65                 mov     eax, [ebp+var_8]
.text:0001CC68                 imul    eax, 0Ch
.text:0001CC6B                 mov     [ebp+eax+var_3C], edx
.text:0001CC6F                 mov     ecx, [ebp+var_8]
.text:0001CC72                 imul    ecx, 0Ch
.text:0001CC75                 mov     [ebp+ecx+var_34], 2
.text:0001CC7D                 lea     edx, [ebp+var_54]
.text:0001CC80                 push    edx
.text:0001CC81                 lea     eax, [ebp+var_48]
.text:0001CC84                 push    eax
.text:0001CC85                 mov     ecx, [ebp+arg_4]
.text:0001CC88                 push    ecx
.text:0001CC89                 call    _ssh_pkt_getstring
.text:0001CC8E                 add     esp, 0Ch
.text:0001CC91                 cmp     [ebp+var_48], 0
.text:0001CC95                 jz      short loc_1CCAD
.text:0001CC97                 mov     edx, [ebp+var_8]
.text:0001CC9A                 imul    edx, 0Ch
.text:0001CC9D                 mov     eax, [ebp+var_54]
.text:0001CCA0                 mov     [ebp+edx+var_38], eax
.text:0001CCA4                 mov     ecx, [ebp+var_8]
.text:0001CCA7                 add     ecx, 1
.text:0001CCAA                 mov     [ebp+var_8], ecx
.text:0001CCAD
.text:0001CCAD loc_1CCAD:                              ; CODE XREF: _ssh2_log_incoming_packet+3Bj
.text:0001CCAD                                         ; _ssh2_log_incoming_packet+51j ...
.text:0001CCAD                 push    0
.text:0001CCAF                 push    0
.text:0001CCB1                 mov     edx, [ebp+arg_4]
.text:0001CCB4                 add     edx, 0Ch
.text:0001CCB7                 push    edx
.text:0001CCB8                 lea     eax, [ebp+var_3C]
.text:0001CCBB                 push    eax
.text:0001CCBC                 mov     ecx, [ebp+var_8]
.text:0001CCBF                 push    ecx
.text:0001CCC0                 mov     edx, [ebp+arg_4]
.text:0001CCC3                 mov     eax, [edx]
.text:0001CCC5                 push    eax
.text:0001CCC6                 mov     ecx, [ebp+arg_4]
.text:0001CCC9                 mov     edx, [ecx+14h]
.text:0001CCCC                 push    edx
.text:0001CCCD                 mov     eax, [ebp+arg_4]
.text:0001CCD0                 mov     ecx, [eax+8]
.text:0001CCD3                 push    ecx
.text:0001CCD4                 mov     edx, [ebp+arg_0]
.text:0001CCD7                 mov     eax, [edx+15Ch]
.text:0001CCDD                 push    eax
.text:0001CCDE                 mov     ecx, [ebp+arg_0]
.text:0001CCE1                 mov     edx, [ecx+158h]
.text:0001CCE7                 push    edx
.text:0001CCE8                 call    _ssh2_pkt_type
.text:0001CCED                 add     esp, 0Ch
.text:0001CCF0                 push    eax
.text:0001CCF1                 mov     eax, [ebp+arg_4]
.text:0001CCF4                 mov     ecx, [eax+8]
.text:0001CCF7                 push    ecx
.text:0001CCF8                 push    0
.text:0001CCFA                 mov     edx, [ebp+arg_0]
.text:0001CCFD                 mov     eax, [edx+18h]
.text:0001CD00                 push    eax
.text:0001CD01                 call    _log_packet
.text:0001CD06                 add     esp, 2Ch
.text:0001CD09                 push    edx
.text:0001CD0A                 mov     ecx, ebp
.text:0001CD0C                 push    eax
.text:0001CD0D                 lea     edx, $LN11_5
.text:0001CD13                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0001CD18                 pop     eax
.text:0001CD19                 pop     edx
.text:0001CD1A                 pop     edi
.text:0001CD1B                 mov     ecx, [ebp+var_4]
.text:0001CD1E                 xor     ecx, ebp
.text:0001CD20                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:0001CD25                 add     esp, 58h
.text:0001CD28                 cmp     ebp, esp
.text:0001CD2A                 call    __RTC_CheckEsp
.text:0001CD2F                 mov     esp, ebp
.text:0001CD31                 pop     ebp
.text:0001CD32                 retn
.text:0001CD32 _ssh2_log_incoming_packet endp
.text:0001CD32
.text:0001CD32 ; ---------------------------------------------------------------------------
.text:0001CD33                 align 4
.text:0001CD34 $LN11_5         dd 3                    ; DATA XREF: _ssh2_log_incoming_packet+125o
.text:0001CD38                 dd offset $LN10_9
.text:0001CD3C $LN10_9         dd 0FFFFFFC4h, 30h      ; DATA XREF: .text:0001CD38o
.text:0001CD44                 dd offset $LN7_7        ; "blanks"
.text:0001CD48                 dd 0FFFFFFB8h, 4
.text:0001CD50                 dd offset $LN8_9        ; "str"
.text:0001CD54                 dd 0FFFFFFACh, 4
.text:0001CD5C                 dd offset $LN9_8        ; "slen"
.text:0001CD60 $LN9_8          db 'slen',0             ; DATA XREF: .text:0001CD5Co
.text:0001CD65 $LN8_9          db 'str',0              ; DATA XREF: .text:0001CD50o
.text:0001CD69 $LN7_7          db 'blanks',0           ; DATA XREF: .text:0001CD44o
.text:0001CD70                 db 8 dup(0CCh)
.text:0001CD78
.text:0001CD78 ; =============== S U B R O U T I N E =======================================
.text:0001CD78
.text:0001CD78 ; Attributes: bp-based frame
.text:0001CD78
.text:0001CD78 _ssh_detect_bugs proc near              ; CODE XREF: _do_ssh_init+2F2p
.text:0001CD78                                         ; _do_ssh_connection_init+2EFp
.text:0001CD78
.text:0001CD78 Str             = dword ptr -4
.text:0001CD78 arg_0           = dword ptr  8
.text:0001CD78 arg_4           = dword ptr  0Ch
.text:0001CD78
.text:0001CD78                 push    ebp
.text:0001CD79                 mov     ebp, esp
.text:0001CD7B                 push    ecx
.text:0001CD7C                 mov     [ebp+Str], 0CCCCCCCCh
.text:0001CD83                 mov     eax, [ebp+arg_4]
.text:0001CD86                 mov     [ebp+Str], eax
.text:0001CD89                 push    offset $SG89307 ; Control
.text:0001CD8E                 mov     ecx, [ebp+Str]
.text:0001CD91                 push    ecx             ; Str
.text:0001CD92                 call    _strcspn
.text:0001CD97                 add     esp, 8
.text:0001CD9A                 add     eax, [ebp+Str]
.text:0001CD9D                 mov     [ebp+Str], eax
.text:0001CDA0                 mov     edx, [ebp+Str]
.text:0001CDA3                 movsx   eax, byte ptr [edx]
.text:0001CDA6                 test    eax, eax
.text:0001CDA8                 jz      short loc_1CDB3
.text:0001CDAA                 mov     ecx, [ebp+Str]
.text:0001CDAD                 add     ecx, 1
.text:0001CDB0                 mov     [ebp+Str], ecx
.text:0001CDB3
.text:0001CDB3 loc_1CDB3:                              ; CODE XREF: _ssh_detect_bugs+30j
.text:0001CDB3                 push    offset $SG89309 ; Control
.text:0001CDB8                 mov     edx, [ebp+Str]
.text:0001CDBB                 push    edx             ; Str
.text:0001CDBC                 call    _strcspn
.text:0001CDC1                 add     esp, 8
.text:0001CDC4                 add     eax, [ebp+Str]
.text:0001CDC7                 mov     [ebp+Str], eax
.text:0001CDCA                 mov     eax, [ebp+Str]
.text:0001CDCD                 movsx   ecx, byte ptr [eax]
.text:0001CDD0                 test    ecx, ecx
.text:0001CDD2                 jz      short loc_1CDDD
.text:0001CDD4                 mov     edx, [ebp+Str]
.text:0001CDD7                 add     edx, 1
.text:0001CDDA                 mov     [ebp+Str], edx
.text:0001CDDD
.text:0001CDDD loc_1CDDD:                              ; CODE XREF: _ssh_detect_bugs+5Aj
.text:0001CDDD                 mov     eax, [ebp+arg_0]
.text:0001CDE0                 mov     dword ptr [eax+50h], 0
.text:0001CDE7                 push    97h ; 'ù'
.text:0001CDEC                 mov     ecx, [ebp+arg_0]
.text:0001CDEF                 mov     edx, [ecx+21Ch]
.text:0001CDF5                 push    edx
.text:0001CDF6                 call    _conf_get_int
.text:0001CDFB                 add     esp, 8
.text:0001CDFE                 test    eax, eax
.text:0001CE00                 jz      loc_1CED2
.text:0001CE06                 push    97h ; 'ù'
.text:0001CE0B                 mov     eax, [ebp+arg_0]
.text:0001CE0E                 mov     ecx, [eax+21Ch]
.text:0001CE14                 push    ecx
.text:0001CE15                 call    _conf_get_int
.text:0001CE1A                 add     esp, 8
.text:0001CE1D                 cmp     eax, 2
.text:0001CE20                 jnz     loc_1CEF8
.text:0001CE26                 push    offset $SG89314 ; "1.2.18"
.text:0001CE2B                 mov     edx, [ebp+Str]
.text:0001CE2E                 push    edx             ; Str1
.text:0001CE2F                 call    _strcmp
.text:0001CE34                 add     esp, 8
.text:0001CE37                 test    eax, eax
.text:0001CE39                 jz      loc_1CED2
.text:0001CE3F                 push    offset $SG89315 ; "1.2.19"
.text:0001CE44                 mov     eax, [ebp+Str]
.text:0001CE47                 push    eax             ; Str1
.text:0001CE48                 call    _strcmp
.text:0001CE4D                 add     esp, 8
.text:0001CE50                 test    eax, eax
.text:0001CE52                 jz      short loc_1CED2
.text:0001CE54                 push    offset $SG89316 ; "1.2.20"
.text:0001CE59                 mov     ecx, [ebp+Str]
.text:0001CE5C                 push    ecx             ; Str1
.text:0001CE5D                 call    _strcmp
.text:0001CE62                 add     esp, 8
.text:0001CE65                 test    eax, eax
.text:0001CE67                 jz      short loc_1CED2
.text:0001CE69                 push    offset $SG89317 ; "1.2.21"
.text:0001CE6E                 mov     edx, [ebp+Str]
.text:0001CE71                 push    edx             ; Str1
.text:0001CE72                 call    _strcmp
.text:0001CE77                 add     esp, 8
.text:0001CE7A                 test    eax, eax
.text:0001CE7C                 jz      short loc_1CED2
.text:0001CE7E                 push    offset $SG89318 ; "1.2.22"
.text:0001CE83                 mov     eax, [ebp+Str]
.text:0001CE86                 push    eax             ; Str1
.text:0001CE87                 call    _strcmp
.text:0001CE8C                 add     esp, 8
.text:0001CE8F                 test    eax, eax
.text:0001CE91                 jz      short loc_1CED2
.text:0001CE93                 push    offset $SG89319 ; "Cisco-1.25"
.text:0001CE98                 mov     ecx, [ebp+Str]
.text:0001CE9B                 push    ecx             ; Str1
.text:0001CE9C                 call    _strcmp
.text:0001CEA1                 add     esp, 8
.text:0001CEA4                 test    eax, eax
.text:0001CEA6                 jz      short loc_1CED2
.text:0001CEA8                 push    offset $SG89320 ; "OSU_1.4alpha3"
.text:0001CEAD                 mov     edx, [ebp+Str]
.text:0001CEB0                 push    edx             ; Str1
.text:0001CEB1                 call    _strcmp
.text:0001CEB6                 add     esp, 8
.text:0001CEB9                 test    eax, eax
.text:0001CEBB                 jz      short loc_1CED2
.text:0001CEBD                 push    offset $SG89321 ; "OSU_1.5alpha4"
.text:0001CEC2                 mov     eax, [ebp+Str]
.text:0001CEC5                 push    eax             ; Str1
.text:0001CEC6                 call    _strcmp
.text:0001CECB                 add     esp, 8
.text:0001CECE                 test    eax, eax
.text:0001CED0                 jnz     short loc_1CEF8
.text:0001CED2
.text:0001CED2 loc_1CED2:                              ; CODE XREF: _ssh_detect_bugs+88j
.text:0001CED2                                         ; _ssh_detect_bugs+C1j ...
.text:0001CED2                 mov     ecx, [ebp+arg_0]
.text:0001CED5                 mov     edx, [ecx+50h]
.text:0001CED8                 or      edx, 1
.text:0001CEDB                 mov     eax, [ebp+arg_0]
.text:0001CEDE                 mov     [eax+50h], edx
.text:0001CEE1                 push    offset $SG89322 ; "We believe remote version has SSH-1 ign"...
.text:0001CEE6                 mov     ecx, [ebp+arg_0]
.text:0001CEE9                 mov     edx, [ecx+0E4h]
.text:0001CEEF                 push    edx
.text:0001CEF0                 call    _logevent
.text:0001CEF5                 add     esp, 8
.text:0001CEF8
.text:0001CEF8 loc_1CEF8:                              ; CODE XREF: _ssh_detect_bugs+A8j
.text:0001CEF8                                         ; _ssh_detect_bugs+158j
.text:0001CEF8                 push    98h ; 'ÿ'
.text:0001CEFD                 mov     eax, [ebp+arg_0]
.text:0001CF00                 mov     ecx, [eax+21Ch]
.text:0001CF06                 push    ecx
.text:0001CF07                 call    _conf_get_int
.text:0001CF0C                 add     esp, 8
.text:0001CF0F                 test    eax, eax
.text:0001CF11                 jz      short loc_1CF59
.text:0001CF13                 push    98h ; 'ÿ'
.text:0001CF18                 mov     edx, [ebp+arg_0]
.text:0001CF1B                 mov     eax, [edx+21Ch]
.text:0001CF21                 push    eax
.text:0001CF22                 call    _conf_get_int
.text:0001CF27                 add     esp, 8
.text:0001CF2A                 cmp     eax, 2
.text:0001CF2D                 jnz     short loc_1CF7F
.text:0001CF2F                 push    offset $SG89326 ; "Cisco-1.25"
.text:0001CF34                 mov     ecx, [ebp+Str]
.text:0001CF37                 push    ecx             ; Str1
.text:0001CF38                 call    _strcmp
.text:0001CF3D                 add     esp, 8
.text:0001CF40                 test    eax, eax
.text:0001CF42                 jz      short loc_1CF59
.text:0001CF44                 push    offset $SG89327 ; "OSU_1.4alpha3"
.text:0001CF49                 mov     edx, [ebp+Str]
.text:0001CF4C                 push    edx             ; Str1
.text:0001CF4D                 call    _strcmp
.text:0001CF52                 add     esp, 8
.text:0001CF55                 test    eax, eax
.text:0001CF57                 jnz     short loc_1CF7F
.text:0001CF59
.text:0001CF59 loc_1CF59:                              ; CODE XREF: _ssh_detect_bugs+199j
.text:0001CF59                                         ; _ssh_detect_bugs+1CAj
.text:0001CF59                 mov     eax, [ebp+arg_0]
.text:0001CF5C                 mov     ecx, [eax+50h]
.text:0001CF5F                 or      ecx, 4
.text:0001CF62                 mov     edx, [ebp+arg_0]
.text:0001CF65                 mov     [edx+50h], ecx
.text:0001CF68                 push    offset $SG89328 ; "We believe remote version needs a plain"...
.text:0001CF6D                 mov     eax, [ebp+arg_0]
.text:0001CF70                 mov     ecx, [eax+0E4h]
.text:0001CF76                 push    ecx
.text:0001CF77                 call    _logevent
.text:0001CF7C                 add     esp, 8
.text:0001CF7F
.text:0001CF7F loc_1CF7F:                              ; CODE XREF: _ssh_detect_bugs+1B5j
.text:0001CF7F                                         ; _ssh_detect_bugs+1DFj
.text:0001CF7F                 push    99h ; 'Ö'
.text:0001CF84                 mov     edx, [ebp+arg_0]
.text:0001CF87                 mov     eax, [edx+21Ch]
.text:0001CF8D                 push    eax
.text:0001CF8E                 call    _conf_get_int
.text:0001CF93                 add     esp, 8
.text:0001CF96                 test    eax, eax
.text:0001CF98                 jz      short loc_1CFCB
.text:0001CF9A                 push    99h ; 'Ö'
.text:0001CF9F                 mov     ecx, [ebp+arg_0]
.text:0001CFA2                 mov     edx, [ecx+21Ch]
.text:0001CFA8                 push    edx
.text:0001CFA9                 call    _conf_get_int
.text:0001CFAE                 add     esp, 8
.text:0001CFB1                 cmp     eax, 2
.text:0001CFB4                 jnz     short loc_1CFF1
.text:0001CFB6                 push    offset $SG89331 ; "Cisco-1.25"
.text:0001CFBB                 mov     eax, [ebp+Str]
.text:0001CFBE                 push    eax             ; Str1
.text:0001CFBF                 call    _strcmp
.text:0001CFC4                 add     esp, 8
.text:0001CFC7                 test    eax, eax
.text:0001CFC9                 jnz     short loc_1CFF1
.text:0001CFCB
.text:0001CFCB loc_1CFCB:                              ; CODE XREF: _ssh_detect_bugs+220j
.text:0001CFCB                 mov     ecx, [ebp+arg_0]
.text:0001CFCE                 mov     edx, [ecx+50h]
.text:0001CFD1                 or      edx, 8
.text:0001CFD4                 mov     eax, [ebp+arg_0]
.text:0001CFD7                 mov     [eax+50h], edx
.text:0001CFDA                 push    offset $SG89332 ; "We believe remote version can't handle "...
.text:0001CFDF                 mov     ecx, [ebp+arg_0]
.text:0001CFE2                 mov     edx, [ecx+0E4h]
.text:0001CFE8                 push    edx
.text:0001CFE9                 call    _logevent
.text:0001CFEE                 add     esp, 8
.text:0001CFF1
.text:0001CFF1 loc_1CFF1:                              ; CODE XREF: _ssh_detect_bugs+23Cj
.text:0001CFF1                                         ; _ssh_detect_bugs+251j
.text:0001CFF1                 push    9Ah ; 'Ü'
.text:0001CFF6                 mov     eax, [ebp+arg_0]
.text:0001CFF9                 mov     ecx, [eax+21Ch]
.text:0001CFFF                 push    ecx
.text:0001D000                 call    _conf_get_int
.text:0001D005                 add     esp, 8
.text:0001D008                 test    eax, eax
.text:0001D00A                 jz      loc_1D0B2
.text:0001D010                 push    9Ah ; 'Ü'
.text:0001D015                 mov     edx, [ebp+arg_0]
.text:0001D018                 mov     eax, [edx+21Ch]
.text:0001D01E                 push    eax
.text:0001D01F                 call    _conf_get_int
.text:0001D024                 add     esp, 8
.text:0001D027                 cmp     eax, 2
.text:0001D02A                 jnz     loc_1D0D8
.text:0001D030                 mov     ecx, [ebp+Str]
.text:0001D033                 push    ecx
.text:0001D034                 push    offset $SG89335 ; "* VShell"
.text:0001D039                 call    _wc_match
.text:0001D03E                 add     esp, 8
.text:0001D041                 test    eax, eax
.text:0001D043                 jnz     loc_1D0D8
.text:0001D049                 mov     edx, [ebp+Str]
.text:0001D04C                 push    edx
.text:0001D04D                 push    offset $SG89337 ; "2.1.0*"
.text:0001D052                 call    _wc_match
.text:0001D057                 add     esp, 8
.text:0001D05A                 test    eax, eax
.text:0001D05C                 jnz     short loc_1D0B2
.text:0001D05E                 mov     eax, [ebp+Str]
.text:0001D061                 push    eax
.text:0001D062                 push    offset $SG89338 ; "2.0.*"
.text:0001D067                 call    _wc_match
.text:0001D06C                 add     esp, 8
.text:0001D06F                 test    eax, eax
.text:0001D071                 jnz     short loc_1D0B2
.text:0001D073                 mov     ecx, [ebp+Str]
.text:0001D076                 push    ecx
.text:0001D077                 push    offset $SG89339 ; "2.2.0*"
.text:0001D07C                 call    _wc_match
.text:0001D081                 add     esp, 8
.text:0001D084                 test    eax, eax
.text:0001D086                 jnz     short loc_1D0B2
.text:0001D088                 mov     edx, [ebp+Str]
.text:0001D08B                 push    edx
.text:0001D08C                 push    offset $SG89340 ; "2.3.0*"
.text:0001D091                 call    _wc_match
.text:0001D096                 add     esp, 8
.text:0001D099                 test    eax, eax
.text:0001D09B                 jnz     short loc_1D0B2
.text:0001D09D                 mov     eax, [ebp+Str]
.text:0001D0A0                 push    eax
.text:0001D0A1                 push    offset $SG89341 ; "2.1 *"
.text:0001D0A6                 call    _wc_match
.text:0001D0AB                 add     esp, 8
.text:0001D0AE                 test    eax, eax
.text:0001D0B0                 jz      short loc_1D0D8
.text:0001D0B2
.text:0001D0B2 loc_1D0B2:                              ; CODE XREF: _ssh_detect_bugs+292j
.text:0001D0B2                                         ; _ssh_detect_bugs+2E4j ...
.text:0001D0B2                 mov     ecx, [ebp+arg_0]
.text:0001D0B5                 mov     edx, [ecx+50h]
.text:0001D0B8                 or      edx, 2
.text:0001D0BB                 mov     eax, [ebp+arg_0]
.text:0001D0BE                 mov     [eax+50h], edx
.text:0001D0C1                 push    offset $SG89342 ; "We believe remote version has SSH-2 HMA"...
.text:0001D0C6                 mov     ecx, [ebp+arg_0]
.text:0001D0C9                 mov     edx, [ecx+0E4h]
.text:0001D0CF                 push    edx
.text:0001D0D0                 call    _logevent
.text:0001D0D5                 add     esp, 8
.text:0001D0D8
.text:0001D0D8 loc_1D0D8:                              ; CODE XREF: _ssh_detect_bugs+2B2j
.text:0001D0D8                                         ; _ssh_detect_bugs+2CBj ...
.text:0001D0D8                 push    9Bh ; '¢'
.text:0001D0DD                 mov     eax, [ebp+arg_0]
.text:0001D0E0                 mov     ecx, [eax+21Ch]
.text:0001D0E6                 push    ecx
.text:0001D0E7                 call    _conf_get_int
.text:0001D0EC                 add     esp, 8
.text:0001D0EF                 test    eax, eax
.text:0001D0F1                 jz      short loc_1D14E
.text:0001D0F3                 push    9Bh ; '¢'
.text:0001D0F8                 mov     edx, [ebp+arg_0]
.text:0001D0FB                 mov     eax, [edx+21Ch]
.text:0001D101                 push    eax
.text:0001D102                 call    _conf_get_int
.text:0001D107                 add     esp, 8
.text:0001D10A                 cmp     eax, 2
.text:0001D10D                 jnz     short loc_1D174
.text:0001D10F                 mov     ecx, [ebp+Str]
.text:0001D112                 push    ecx
.text:0001D113                 push    offset $SG89345 ; "* VShell"
.text:0001D118                 call    _wc_match
.text:0001D11D                 add     esp, 8
.text:0001D120                 test    eax, eax
.text:0001D122                 jnz     short loc_1D174
.text:0001D124                 mov     edx, [ebp+Str]
.text:0001D127                 push    edx
.text:0001D128                 push    offset $SG89347 ; "2.0.0*"
.text:0001D12D                 call    _wc_match
.text:0001D132                 add     esp, 8
.text:0001D135                 test    eax, eax
.text:0001D137                 jnz     short loc_1D14E
.text:0001D139                 mov     eax, [ebp+Str]
.text:0001D13C                 push    eax
.text:0001D13D                 push    offset $SG89348 ; "2.0.10*"
.text:0001D142                 call    _wc_match
.text:0001D147                 add     esp, 8
.text:0001D14A                 test    eax, eax
.text:0001D14C                 jz      short loc_1D174
.text:0001D14E
.text:0001D14E loc_1D14E:                              ; CODE XREF: _ssh_detect_bugs+379j
.text:0001D14E                                         ; _ssh_detect_bugs+3BFj
.text:0001D14E                 mov     ecx, [ebp+arg_0]
.text:0001D151                 mov     edx, [ecx+50h]
.text:0001D154                 or      edx, 20h
.text:0001D157                 mov     eax, [ebp+arg_0]
.text:0001D15A                 mov     [eax+50h], edx
.text:0001D15D                 push    offset $SG89349 ; "We believe remote version has SSH-2 key"...
.text:0001D162                 mov     ecx, [ebp+arg_0]
.text:0001D165                 mov     edx, [ecx+0E4h]
.text:0001D16B                 push    edx
.text:0001D16C                 call    _logevent
.text:0001D171                 add     esp, 8
.text:0001D174
.text:0001D174 loc_1D174:                              ; CODE XREF: _ssh_detect_bugs+395j
.text:0001D174                                         ; _ssh_detect_bugs+3AAj ...
.text:0001D174                 push    9Ch ; '£'
.text:0001D179                 mov     eax, [ebp+arg_0]
.text:0001D17C                 mov     ecx, [eax+21Ch]
.text:0001D182                 push    ecx
.text:0001D183                 call    _conf_get_int
.text:0001D188                 add     esp, 8
.text:0001D18B                 test    eax, eax
.text:0001D18D                 jz      short loc_1D1FF
.text:0001D18F                 push    9Ch ; '£'
.text:0001D194                 mov     edx, [ebp+arg_0]
.text:0001D197                 mov     eax, [edx+21Ch]
.text:0001D19D                 push    eax
.text:0001D19E                 call    _conf_get_int
.text:0001D1A3                 add     esp, 8
.text:0001D1A6                 cmp     eax, 2
.text:0001D1A9                 jnz     short loc_1D225
.text:0001D1AB                 mov     ecx, [ebp+Str]
.text:0001D1AE                 push    ecx
.text:0001D1AF                 push    offset $SG89353 ; "OpenSSH_2.[5-9]*"
.text:0001D1B4                 call    _wc_match
.text:0001D1B9                 add     esp, 8
.text:0001D1BC                 test    eax, eax
.text:0001D1BE                 jnz     short loc_1D1FF
.text:0001D1C0                 mov     edx, [ebp+Str]
.text:0001D1C3                 push    edx
.text:0001D1C4                 push    offset $SG89354 ; "OpenSSH_3.[0-2]*"
.text:0001D1C9                 call    _wc_match
.text:0001D1CE                 add     esp, 8
.text:0001D1D1                 test    eax, eax
.text:0001D1D3                 jnz     short loc_1D1FF
.text:0001D1D5                 mov     eax, [ebp+Str]
.text:0001D1D8                 push    eax
.text:0001D1D9                 push    offset $SG89355 ; "mod_sftp/0.[0-8]*"
.text:0001D1DE                 call    _wc_match
.text:0001D1E3                 add     esp, 8
.text:0001D1E6                 test    eax, eax
.text:0001D1E8                 jnz     short loc_1D1FF
.text:0001D1EA                 mov     ecx, [ebp+Str]
.text:0001D1ED                 push    ecx
.text:0001D1EE                 push    offset $SG89356 ; "mod_sftp/0.9.[0-8]"
.text:0001D1F3                 call    _wc_match
.text:0001D1F8                 add     esp, 8
.text:0001D1FB                 test    eax, eax
.text:0001D1FD                 jz      short loc_1D225
.text:0001D1FF
.text:0001D1FF loc_1D1FF:                              ; CODE XREF: _ssh_detect_bugs+415j
.text:0001D1FF                                         ; _ssh_detect_bugs+446j ...
.text:0001D1FF                 mov     edx, [ebp+arg_0]
.text:0001D202                 mov     eax, [edx+50h]
.text:0001D205                 or      eax, 10h
.text:0001D208                 mov     ecx, [ebp+arg_0]
.text:0001D20B                 mov     [ecx+50h], eax
.text:0001D20E                 push    offset $SG89357 ; "We believe remote version has SSH-2 RSA"...
.text:0001D213                 mov     edx, [ebp+arg_0]
.text:0001D216                 mov     eax, [edx+0E4h]
.text:0001D21C                 push    eax
.text:0001D21D                 call    _logevent
.text:0001D222                 add     esp, 8
.text:0001D225
.text:0001D225 loc_1D225:                              ; CODE XREF: _ssh_detect_bugs+431j
.text:0001D225                                         ; _ssh_detect_bugs+485j
.text:0001D225                 push    9Dh ; '¥'
.text:0001D22A                 mov     ecx, [ebp+arg_0]
.text:0001D22D                 mov     edx, [ecx+21Ch]
.text:0001D233                 push    edx
.text:0001D234                 call    _conf_get_int
.text:0001D239                 add     esp, 8
.text:0001D23C                 test    eax, eax
.text:0001D23E                 jz      short loc_1D271
.text:0001D240                 push    9Dh ; '¥'
.text:0001D245                 mov     eax, [ebp+arg_0]
.text:0001D248                 mov     ecx, [eax+21Ch]
.text:0001D24E                 push    ecx
.text:0001D24F                 call    _conf_get_int
.text:0001D254                 add     esp, 8
.text:0001D257                 cmp     eax, 2
.text:0001D25A                 jnz     short loc_1D29A
.text:0001D25C                 mov     edx, [ebp+Str]
.text:0001D25F                 push    edx
.text:0001D260                 push    offset $SG89360 ; "OpenSSH_2.[0-2]*"
.text:0001D265                 call    _wc_match
.text:0001D26A                 add     esp, 8
.text:0001D26D                 test    eax, eax
.text:0001D26F                 jz      short loc_1D29A
.text:0001D271
.text:0001D271 loc_1D271:                              ; CODE XREF: _ssh_detect_bugs+4C6j
.text:0001D271                 mov     eax, [ebp+arg_0]
.text:0001D274                 mov     ecx, [eax+50h]
.text:0001D277                 or      ecx, 80h
.text:0001D27D                 mov     edx, [ebp+arg_0]
.text:0001D280                 mov     [edx+50h], ecx
.text:0001D283                 push    offset $SG89361 ; "We believe remote version has SSH-2 pub"...
.text:0001D288                 mov     eax, [ebp+arg_0]
.text:0001D28B                 mov     ecx, [eax+0E4h]
.text:0001D291                 push    ecx
.text:0001D292                 call    _logevent
.text:0001D297                 add     esp, 8
.text:0001D29A
.text:0001D29A loc_1D29A:                              ; CODE XREF: _ssh_detect_bugs+4E2j
.text:0001D29A                                         ; _ssh_detect_bugs+4F7j
.text:0001D29A                 push    9Eh ; 'P'
.text:0001D29F                 mov     edx, [ebp+arg_0]
.text:0001D2A2                 mov     eax, [edx+21Ch]
.text:0001D2A8                 push    eax
.text:0001D2A9                 call    _conf_get_int
.text:0001D2AE                 add     esp, 8
.text:0001D2B1                 test    eax, eax
.text:0001D2B3                 jz      loc_1D357
.text:0001D2B9                 push    9Eh ; 'P'
.text:0001D2BE                 mov     ecx, [ebp+arg_0]
.text:0001D2C1                 mov     edx, [ecx+21Ch]
.text:0001D2C7                 push    edx
.text:0001D2C8                 call    _conf_get_int
.text:0001D2CD                 add     esp, 8
.text:0001D2D0                 cmp     eax, 2
.text:0001D2D3                 jnz     loc_1D37D
.text:0001D2D9                 mov     eax, [ebp+Str]
.text:0001D2DC                 push    eax
.text:0001D2DD                 push    offset $SG89365 ; "DigiSSH_2.0"
.text:0001D2E2                 call    _wc_match
.text:0001D2E7                 add     esp, 8
.text:0001D2EA                 test    eax, eax
.text:0001D2EC                 jnz     short loc_1D357
.text:0001D2EE                 mov     ecx, [ebp+Str]
.text:0001D2F1                 push    ecx
.text:0001D2F2                 push    offset $SG89366 ; "OpenSSH_2.[0-4]*"
.text:0001D2F7                 call    _wc_match
.text:0001D2FC                 add     esp, 8
.text:0001D2FF                 test    eax, eax
.text:0001D301                 jnz     short loc_1D357
.text:0001D303                 mov     edx, [ebp+Str]
.text:0001D306                 push    edx
.text:0001D307                 push    offset $SG89367 ; "OpenSSH_2.5.[0-3]*"
.text:0001D30C                 call    _wc_match
.text:0001D311                 add     esp, 8
.text:0001D314                 test    eax, eax
.text:0001D316                 jnz     short loc_1D357
.text:0001D318                 mov     eax, [ebp+Str]
.text:0001D31B                 push    eax
.text:0001D31C                 push    offset $SG89368 ; "Sun_SSH_1.0"
.text:0001D321                 call    _wc_match
.text:0001D326                 add     esp, 8
.text:0001D329                 test    eax, eax
.text:0001D32B                 jnz     short loc_1D357
.text:0001D32D                 mov     ecx, [ebp+Str]
.text:0001D330                 push    ecx
.text:0001D331                 push    offset $SG89369 ; "Sun_SSH_1.0.1"
.text:0001D336                 call    _wc_match
.text:0001D33B                 add     esp, 8
.text:0001D33E                 test    eax, eax
.text:0001D340                 jnz     short loc_1D357
.text:0001D342                 mov     edx, [ebp+Str]
.text:0001D345                 push    edx
.text:0001D346                 push    offset $SG89370 ; "WeOnlyDo-*"
.text:0001D34B                 call    _wc_match
.text:0001D350                 add     esp, 8
.text:0001D353                 test    eax, eax
.text:0001D355                 jz      short loc_1D37D
.text:0001D357
.text:0001D357 loc_1D357:                              ; CODE XREF: _ssh_detect_bugs+53Bj
.text:0001D357                                         ; _ssh_detect_bugs+574j ...
.text:0001D357                 mov     eax, [ebp+arg_0]
.text:0001D35A                 mov     ecx, [eax+50h]
.text:0001D35D                 or      ecx, 40h
.text:0001D360                 mov     edx, [ebp+arg_0]
.text:0001D363                 mov     [edx+50h], ecx
.text:0001D366                 push    offset $SG89371 ; "We believe remote version has SSH-2 rek"...
.text:0001D36B                 mov     eax, [ebp+arg_0]
.text:0001D36E                 mov     ecx, [eax+0E4h]
.text:0001D374                 push    ecx
.text:0001D375                 call    _logevent
.text:0001D37A                 add     esp, 8
.text:0001D37D
.text:0001D37D loc_1D37D:                              ; CODE XREF: _ssh_detect_bugs+55Bj
.text:0001D37D                                         ; _ssh_detect_bugs+5DDj
.text:0001D37D                 push    9Fh ; 'ƒ'
.text:0001D382                 mov     edx, [ebp+arg_0]
.text:0001D385                 mov     eax, [edx+21Ch]
.text:0001D38B                 push    eax
.text:0001D38C                 call    _conf_get_int
.text:0001D391                 add     esp, 8
.text:0001D394                 test    eax, eax
.text:0001D396                 jz      short loc_1D3DE
.text:0001D398                 push    9Fh ; 'ƒ'
.text:0001D39D                 mov     ecx, [ebp+arg_0]
.text:0001D3A0                 mov     edx, [ecx+21Ch]
.text:0001D3A6                 push    edx
.text:0001D3A7                 call    _conf_get_int
.text:0001D3AC                 add     esp, 8
.text:0001D3AF                 cmp     eax, 2
.text:0001D3B2                 jnz     short loc_1D406
.text:0001D3B4                 mov     eax, [ebp+Str]
.text:0001D3B7                 push    eax
.text:0001D3B8                 push    offset $SG89375 ; "1.36_sshlib GlobalSCAPE"
.text:0001D3BD                 call    _wc_match
.text:0001D3C2                 add     esp, 8
.text:0001D3C5                 test    eax, eax
.text:0001D3C7                 jnz     short loc_1D3DE
.text:0001D3C9                 mov     ecx, [ebp+Str]
.text:0001D3CC                 push    ecx
.text:0001D3CD                 push    offset $SG89376 ; "1.36 sshlib: GlobalScape"
.text:0001D3D2                 call    _wc_match
.text:0001D3D7                 add     esp, 8
.text:0001D3DA                 test    eax, eax
.text:0001D3DC                 jz      short loc_1D406
.text:0001D3DE
.text:0001D3DE loc_1D3DE:                              ; CODE XREF: _ssh_detect_bugs+61Ej
.text:0001D3DE                                         ; _ssh_detect_bugs+64Fj
.text:0001D3DE                 mov     edx, [ebp+arg_0]
.text:0001D3E1                 mov     eax, [edx+50h]
.text:0001D3E4                 or      eax, 100h
.text:0001D3E9                 mov     ecx, [ebp+arg_0]
.text:0001D3EC                 mov     [ecx+50h], eax
.text:0001D3EF                 push    offset $SG89377 ; "We believe remote version ignores SSH-2"...
.text:0001D3F4                 mov     edx, [ebp+arg_0]
.text:0001D3F7                 mov     eax, [edx+0E4h]
.text:0001D3FD                 push    eax
.text:0001D3FE                 call    _logevent
.text:0001D403                 add     esp, 8
.text:0001D406
.text:0001D406 loc_1D406:                              ; CODE XREF: _ssh_detect_bugs+63Aj
.text:0001D406                                         ; _ssh_detect_bugs+664j
.text:0001D406                 push    0A0h ; 'á'
.text:0001D40B                 mov     ecx, [ebp+arg_0]
.text:0001D40E                 mov     edx, [ecx+21Ch]
.text:0001D414                 push    edx
.text:0001D415                 call    _conf_get_int
.text:0001D41A                 add     esp, 8
.text:0001D41D                 test    eax, eax
.text:0001D41F                 jnz     short loc_1D44A
.text:0001D421                 mov     eax, [ebp+arg_0]
.text:0001D424                 mov     ecx, [eax+50h]
.text:0001D427                 or      ecx, 200h
.text:0001D42D                 mov     edx, [ebp+arg_0]
.text:0001D430                 mov     [edx+50h], ecx
.text:0001D433                 push    offset $SG89379 ; "We believe remote version has SSH-2 ign"...
.text:0001D438                 mov     eax, [ebp+arg_0]
.text:0001D43B                 mov     ecx, [eax+0E4h]
.text:0001D441                 push    ecx
.text:0001D442                 call    _logevent
.text:0001D447                 add     esp, 8
.text:0001D44A
.text:0001D44A loc_1D44A:                              ; CODE XREF: _ssh_detect_bugs+6A7j
.text:0001D44A                 push    0A1h ; 'í'
.text:0001D44F                 mov     edx, [ebp+arg_0]
.text:0001D452                 mov     eax, [edx+21Ch]
.text:0001D458                 push    eax
.text:0001D459                 call    _conf_get_int
.text:0001D45E                 add     esp, 8
.text:0001D461                 test    eax, eax
.text:0001D463                 jnz     short loc_1D48E
.text:0001D465                 mov     ecx, [ebp+arg_0]
.text:0001D468                 mov     edx, [ecx+50h]
.text:0001D46B                 or      edx, 400h
.text:0001D471                 mov     eax, [ebp+arg_0]
.text:0001D474                 mov     [eax+50h], edx
.text:0001D477                 push    offset $SG89381 ; "We believe remote version has winadj bu"...
.text:0001D47C                 mov     ecx, [ebp+arg_0]
.text:0001D47F                 mov     edx, [ecx+0E4h]
.text:0001D485                 push    edx
.text:0001D486                 call    _logevent
.text:0001D48B                 add     esp, 8
.text:0001D48E
.text:0001D48E loc_1D48E:                              ; CODE XREF: _ssh_detect_bugs+6EBj
.text:0001D48E                 push    0A2h ; 'ó'
.text:0001D493                 mov     eax, [ebp+arg_0]
.text:0001D496                 mov     ecx, [eax+21Ch]
.text:0001D49C                 push    ecx
.text:0001D49D                 call    _conf_get_int
.text:0001D4A2                 add     esp, 8
.text:0001D4A5                 test    eax, eax
.text:0001D4A7                 jz      short loc_1D4EF
.text:0001D4A9                 push    0A2h ; 'ó'
.text:0001D4AE                 mov     edx, [ebp+arg_0]
.text:0001D4B1                 mov     eax, [edx+21Ch]
.text:0001D4B7                 push    eax
.text:0001D4B8                 call    _conf_get_int
.text:0001D4BD                 add     esp, 8
.text:0001D4C0                 cmp     eax, 2
.text:0001D4C3                 jnz     short loc_1D518
.text:0001D4C5                 mov     ecx, [ebp+Str]
.text:0001D4C8                 push    ecx
.text:0001D4C9                 push    offset $SG89385 ; "OpenSSH_[2-5].*"
.text:0001D4CE                 call    _wc_match
.text:0001D4D3                 add     esp, 8
.text:0001D4D6                 test    eax, eax
.text:0001D4D8                 jnz     short loc_1D4EF
.text:0001D4DA                 mov     edx, [ebp+Str]
.text:0001D4DD                 push    edx
.text:0001D4DE                 push    offset $SG89386 ; "OpenSSH_6.[0-6]*"
.text:0001D4E3                 call    _wc_match
.text:0001D4E8                 add     esp, 8
.text:0001D4EB                 test    eax, eax
.text:0001D4ED                 jz      short loc_1D518
.text:0001D4EF
.text:0001D4EF loc_1D4EF:                              ; CODE XREF: _ssh_detect_bugs+72Fj
.text:0001D4EF                                         ; _ssh_detect_bugs+760j
.text:0001D4EF                 mov     eax, [ebp+arg_0]
.text:0001D4F2                 mov     ecx, [eax+50h]
.text:0001D4F5                 or      ecx, 800h
.text:0001D4FB                 mov     edx, [ebp+arg_0]
.text:0001D4FE                 mov     [edx+50h], ecx
.text:0001D501                 push    offset $SG89387 ; "We believe remote version has SSH-2 cha"...
.text:0001D506                 mov     eax, [ebp+arg_0]
.text:0001D509                 mov     ecx, [eax+0E4h]
.text:0001D50F                 push    ecx
.text:0001D510                 call    _logevent
.text:0001D515                 add     esp, 8
.text:0001D518
.text:0001D518 loc_1D518:                              ; CODE XREF: _ssh_detect_bugs+74Bj
.text:0001D518                                         ; _ssh_detect_bugs+775j
.text:0001D518                 add     esp, 4
.text:0001D51B                 cmp     ebp, esp
.text:0001D51D                 call    __RTC_CheckEsp
.text:0001D522                 mov     esp, ebp
.text:0001D524                 pop     ebp
.text:0001D525                 retn
.text:0001D525 _ssh_detect_bugs endp
.text:0001D525
.text:0001D525 ; ---------------------------------------------------------------------------
.text:0001D526                 align 4
.text:0001D528
.text:0001D528 ; =============== S U B R O U T I N E =======================================
.text:0001D528
.text:0001D528 ; Attributes: bp-based frame
.text:0001D528
.text:0001D528 _do_ssh_connection_init proc near       ; DATA XREF: _connect_to_host+194o
.text:0001D528
.text:0001D528 var_10          = dword ptr -10h
.text:0001D528 var_C           = dword ptr -0Ch
.text:0001D528 var_8           = dword ptr -8
.text:0001D528 var_4           = dword ptr -4
.text:0001D528 arg_0           = dword ptr  8
.text:0001D528 arg_4           = byte ptr  0Ch
.text:0001D528
.text:0001D528                 push    ebp
.text:0001D529                 mov     ebp, esp
.text:0001D52B                 sub     esp, 10h
.text:0001D52E                 mov     eax, 0CCCCCCCCh
.text:0001D533                 mov     [ebp+var_10], eax
.text:0001D536                 mov     [ebp+var_C], eax
.text:0001D539                 mov     [ebp+var_8], eax
.text:0001D53C                 mov     [ebp+var_4], eax
.text:0001D53F                 mov     eax, [ebp+arg_0]
.text:0001D542                 cmp     dword ptr [eax+1A8h], 0
.text:0001D549                 jnz     short loc_1D575
.text:0001D54B                 push    20h ; ' '
.text:0001D54D                 push    1
.text:0001D54F                 call    _safemalloc
.text:0001D554                 add     esp, 8
.text:0001D557                 mov     [ebp+var_C], eax
.text:0001D55A                 mov     ecx, [ebp+arg_0]
.text:0001D55D                 mov     edx, [ebp+var_C]
.text:0001D560                 mov     [ecx+1A8h], edx
.text:0001D566                 mov     eax, [ebp+var_C]
.text:0001D569                 mov     [ebp+var_4], eax
.text:0001D56C                 mov     ecx, [ebp+var_4]
.text:0001D56F                 mov     dword ptr [ecx], 0
.text:0001D575
.text:0001D575 loc_1D575:                              ; CODE XREF: _do_ssh_connection_init+21j
.text:0001D575                 mov     edx, [ebp+arg_0]
.text:0001D578                 mov     eax, [edx+1A8h]
.text:0001D57E                 mov     [ebp+var_4], eax
.text:0001D581                 mov     ecx, [ebp+var_4]
.text:0001D584                 mov     [ebp+var_8], ecx
.text:0001D587                 mov     edx, [ebp+var_4]
.text:0001D58A                 mov     eax, [edx]
.text:0001D58C                 mov     [ebp+var_10], eax
.text:0001D58F                 cmp     [ebp+var_10], 0BF0h
.text:0001D596                 jg      short loc_1D5B9
.text:0001D598                 cmp     [ebp+var_10], 0BF0h
.text:0001D59F                 jz      loc_1D652
.text:0001D5A5                 cmp     [ebp+var_10], 0
.text:0001D5A9                 jz      short loc_1D5D8
.text:0001D5AB                 cmp     [ebp+var_10], 0BEBh
.text:0001D5B2                 jz      short loc_1D62E
.text:0001D5B4                 jmp     loc_1D96B
.text:0001D5B9 ; ---------------------------------------------------------------------------
.text:0001D5B9
.text:0001D5B9 loc_1D5B9:                              ; CODE XREF: _do_ssh_connection_init+6Ej
.text:0001D5B9                 cmp     [ebp+var_10], 0BF1h
.text:0001D5C0                 jz      loc_1D66B
.text:0001D5C6                 cmp     [ebp+var_10], 0C07h
.text:0001D5CD                 jz      loc_1D7A6
.text:0001D5D3                 jmp     loc_1D96B
.text:0001D5D8 ; ---------------------------------------------------------------------------
.text:0001D5D8
.text:0001D5D8 loc_1D5D8:                              ; CODE XREF: _do_ssh_connection_init+81j
.text:0001D5D8                                         ; _do_ssh_connection_init+147j
.text:0001D5D8                 mov     ecx, [ebp+var_4]
.text:0001D5DB                 mov     dword ptr [ecx+1Ch], 0
.text:0001D5E2                 jmp     short loc_1D5F3
.text:0001D5E4 ; ---------------------------------------------------------------------------
.text:0001D5E4
.text:0001D5E4 loc_1D5E4:                              ; CODE XREF: _do_ssh_connection_init+10Aj
.text:0001D5E4                 mov     edx, [ebp+var_4]
.text:0001D5E7                 mov     eax, [edx+1Ch]
.text:0001D5EA                 add     eax, 1
.text:0001D5ED                 mov     ecx, [ebp+var_4]
.text:0001D5F0                 mov     [ecx+1Ch], eax
.text:0001D5F3
.text:0001D5F3 loc_1D5F3:                              ; CODE XREF: _do_ssh_connection_init+BAj
.text:0001D5F3                 mov     edx, [ebp+var_4]
.text:0001D5F6                 mov     eax, [edx+1Ch]
.text:0001D5F9                 movsx   ecx, ds:?protoname@?1??do_ssh_connection_init@@9@9[eax] ; `do_ssh_connection_init'::`2'::protoname
.text:0001D600                 test    ecx, ecx
.text:0001D602                 jz      short loc_1D634
.text:0001D604                 movsx   edx, [ebp+arg_4]
.text:0001D608                 mov     eax, [ebp+var_4]
.text:0001D60B                 mov     ecx, [eax+1Ch]
.text:0001D60E                 movsx   eax, ds:?protoname@?1??do_ssh_connection_init@@9@9[ecx] ; `do_ssh_connection_init'::`2'::protoname
.text:0001D615                 cmp     edx, eax
.text:0001D617                 jz      short loc_1D61B
.text:0001D619                 jmp     short $no$89560
.text:0001D61B ; ---------------------------------------------------------------------------
.text:0001D61B
.text:0001D61B loc_1D61B:                              ; CODE XREF: _do_ssh_connection_init+EFj
.text:0001D61B                                         ; _do_ssh_connection_init+108j
.text:0001D61B                 mov     ecx, [ebp+var_8]
.text:0001D61E                 mov     dword ptr [ecx], 0BEBh
.text:0001D624                 mov     eax, 1
.text:0001D629                 jmp     loc_1D976
.text:0001D62E ; ---------------------------------------------------------------------------
.text:0001D62E
.text:0001D62E loc_1D62E:                              ; CODE XREF: _do_ssh_connection_init+8Aj
.text:0001D62E                 xor     edx, edx
.text:0001D630                 jnz     short loc_1D61B
.text:0001D632                 jmp     short loc_1D5E4
.text:0001D634 ; ---------------------------------------------------------------------------
.text:0001D634
.text:0001D634 loc_1D634:                              ; CODE XREF: _do_ssh_connection_init+DAj
.text:0001D634                 jmp     short loc_1D674
.text:0001D636 ; ---------------------------------------------------------------------------
.text:0001D636
.text:0001D636 $no$89560:                              ; CODE XREF: _do_ssh_connection_init+F1j
.text:0001D636                                         ; _do_ssh_connection_init+12Ej
.text:0001D636                 movzx   eax, [ebp+arg_4]
.text:0001D63A                 cmp     eax, 0Ah
.text:0001D63D                 jz      short loc_1D658
.text:0001D63F
.text:0001D63F loc_1D63F:                              ; CODE XREF: _do_ssh_connection_init+12Cj
.text:0001D63F                 mov     ecx, [ebp+var_8]
.text:0001D642                 mov     dword ptr [ecx], 0BF0h
.text:0001D648                 mov     eax, 1
.text:0001D64D                 jmp     loc_1D976
.text:0001D652 ; ---------------------------------------------------------------------------
.text:0001D652
.text:0001D652 loc_1D652:                              ; CODE XREF: _do_ssh_connection_init+77j
.text:0001D652                 xor     edx, edx
.text:0001D654                 jnz     short loc_1D63F
.text:0001D656                 jmp     short $no$89560
.text:0001D658 ; ---------------------------------------------------------------------------
.text:0001D658
.text:0001D658 loc_1D658:                              ; CODE XREF: _do_ssh_connection_init+115j
.text:0001D658                                         ; _do_ssh_connection_init+145j
.text:0001D658                 mov     eax, [ebp+var_8]
.text:0001D65B                 mov     dword ptr [eax], 0BF1h
.text:0001D661                 mov     eax, 1
.text:0001D666                 jmp     loc_1D976
.text:0001D66B ; ---------------------------------------------------------------------------
.text:0001D66B
.text:0001D66B loc_1D66B:                              ; CODE XREF: _do_ssh_connection_init+98j
.text:0001D66B                 xor     ecx, ecx
.text:0001D66D                 jnz     short loc_1D658
.text:0001D66F                 jmp     loc_1D5D8
.text:0001D674 ; ---------------------------------------------------------------------------
.text:0001D674
.text:0001D674 loc_1D674:                              ; CODE XREF: _do_ssh_connection_init:loc_1D634j
.text:0001D674                 mov     edx, [ebp+var_4]
.text:0001D677                 mov     dword ptr [edx+18h], 3Bh ; ';'
.text:0001D67E                 push    1
.text:0001D680                 mov     eax, [ebp+var_4]
.text:0001D683                 mov     ecx, [eax+18h]
.text:0001D686                 push    ecx
.text:0001D687                 call    _safemalloc
.text:0001D68C                 add     esp, 8
.text:0001D68F                 mov     edx, [ebp+var_4]
.text:0001D692                 mov     [edx+14h], eax
.text:0001D695                 push    offset ?protoname@?1??do_ssh_connection_init@@9@9 ; Source
.text:0001D69A                 mov     eax, [ebp+var_4]
.text:0001D69D                 mov     ecx, [eax+14h]
.text:0001D6A0                 push    ecx             ; Dest
.text:0001D6A1                 call    _strcpy
.text:0001D6A6                 add     esp, 8
.text:0001D6A9                 push    offset ?protoname@?1??do_ssh_connection_init@@9@9 ; Str
.text:0001D6AE                 call    _strlen
.text:0001D6B3                 add     esp, 4
.text:0001D6B6                 mov     edx, [ebp+var_4]
.text:0001D6B9                 mov     [edx+4], eax
.text:0001D6BC                 mov     eax, [ebp+var_4]
.text:0001D6BF                 mov     dword ptr [eax+1Ch], 0
.text:0001D6C6
.text:0001D6C6 loc_1D6C6:                              ; CODE XREF: _do_ssh_connection_init+282j
.text:0001D6C6                 mov     ecx, 1
.text:0001D6CB                 test    ecx, ecx
.text:0001D6CD                 jz      loc_1D7AF
.text:0001D6D3                 mov     edx, [ebp+var_4]
.text:0001D6D6                 mov     eax, [edx+18h]
.text:0001D6D9                 sub     eax, 1
.text:0001D6DC                 mov     ecx, [ebp+var_4]
.text:0001D6DF                 cmp     [ecx+4], eax
.text:0001D6E2                 jl      short loc_1D711
.text:0001D6E4                 mov     edx, [ebp+var_4]
.text:0001D6E7                 mov     eax, [edx+18h]
.text:0001D6EA                 add     eax, 10h
.text:0001D6ED                 mov     ecx, [ebp+var_4]
.text:0001D6F0                 mov     [ecx+18h], eax
.text:0001D6F3                 push    1
.text:0001D6F5                 mov     edx, [ebp+var_4]
.text:0001D6F8                 mov     eax, [edx+18h]
.text:0001D6FB                 push    eax
.text:0001D6FC                 mov     ecx, [ebp+var_4]
.text:0001D6FF                 mov     edx, [ecx+14h]
.text:0001D702                 push    edx
.text:0001D703                 call    _saferealloc
.text:0001D708                 add     esp, 0Ch
.text:0001D70B                 mov     ecx, [ebp+var_4]
.text:0001D70E                 mov     [ecx+14h], eax
.text:0001D711
.text:0001D711 loc_1D711:                              ; CODE XREF: _do_ssh_connection_init+1BAj
.text:0001D711                 mov     edx, [ebp+var_4]
.text:0001D714                 mov     eax, [edx+14h]
.text:0001D717                 mov     ecx, [ebp+var_4]
.text:0001D71A                 mov     edx, [ecx+4]
.text:0001D71D                 mov     cl, [ebp+arg_4]
.text:0001D720                 mov     [eax+edx], cl
.text:0001D723                 mov     edx, [ebp+var_4]
.text:0001D726                 mov     eax, [edx+4]
.text:0001D729                 add     eax, 1
.text:0001D72C                 mov     ecx, [ebp+var_4]
.text:0001D72F                 mov     [ecx+4], eax
.text:0001D732                 mov     edx, [ebp+var_4]
.text:0001D735                 cmp     dword ptr [edx+1Ch], 0
.text:0001D739                 jl      short loc_1D788
.text:0001D73B                 movzx   eax, [ebp+arg_4]
.text:0001D73F                 cmp     eax, 2Dh ; '-'
.text:0001D742                 jnz     short loc_1D75E
.text:0001D744                 mov     ecx, [ebp+var_4]
.text:0001D747                 mov     edx, [ecx+1Ch]
.text:0001D74A                 mov     eax, [ebp+var_4]
.text:0001D74D                 mov     byte ptr [eax+edx+8], 0
.text:0001D752                 mov     ecx, [ebp+var_4]
.text:0001D755                 mov     dword ptr [ecx+1Ch], 0FFFFFFFFh
.text:0001D75C                 jmp     short loc_1D786
.text:0001D75E ; ---------------------------------------------------------------------------
.text:0001D75E
.text:0001D75E loc_1D75E:                              ; CODE XREF: _do_ssh_connection_init+21Aj
.text:0001D75E                 mov     edx, [ebp+var_4]
.text:0001D761                 cmp     dword ptr [edx+1Ch], 9
.text:0001D765                 jnb     short loc_1D786
.text:0001D767                 mov     eax, [ebp+var_4]
.text:0001D76A                 mov     ecx, [eax+1Ch]
.text:0001D76D                 mov     edx, [ebp+var_4]
.text:0001D770                 mov     al, [ebp+arg_4]
.text:0001D773                 mov     [edx+ecx+8], al
.text:0001D777                 mov     ecx, [ebp+var_4]
.text:0001D77A                 mov     edx, [ecx+1Ch]
.text:0001D77D                 add     edx, 1
.text:0001D780                 mov     eax, [ebp+var_4]
.text:0001D783                 mov     [eax+1Ch], edx
.text:0001D786
.text:0001D786 loc_1D786:                              ; CODE XREF: _do_ssh_connection_init+234j
.text:0001D786                                         ; _do_ssh_connection_init+23Dj
.text:0001D786                 jmp     short loc_1D793
.text:0001D788 ; ---------------------------------------------------------------------------
.text:0001D788
.text:0001D788 loc_1D788:                              ; CODE XREF: _do_ssh_connection_init+211j
.text:0001D788                 movzx   ecx, [ebp+arg_4]
.text:0001D78C                 cmp     ecx, 0Ah
.text:0001D78F                 jnz     short loc_1D793
.text:0001D791                 jmp     short loc_1D7AF
.text:0001D793 ; ---------------------------------------------------------------------------
.text:0001D793
.text:0001D793 loc_1D793:                              ; CODE XREF: _do_ssh_connection_init:loc_1D786j
.text:0001D793                                         ; _do_ssh_connection_init+267j ...
.text:0001D793                 mov     edx, [ebp+var_8]
.text:0001D796                 mov     dword ptr [edx], 0C07h
.text:0001D79C                 mov     eax, 1
.text:0001D7A1                 jmp     loc_1D976
.text:0001D7A6 ; ---------------------------------------------------------------------------
.text:0001D7A6
.text:0001D7A6 loc_1D7A6:                              ; CODE XREF: _do_ssh_connection_init+A5j
.text:0001D7A6                 xor     eax, eax
.text:0001D7A8                 jnz     short loc_1D793
.text:0001D7AA                 jmp     loc_1D6C6
.text:0001D7AF ; ---------------------------------------------------------------------------
.text:0001D7AF
.text:0001D7AF loc_1D7AF:                              ; CODE XREF: _do_ssh_connection_init+1A5j
.text:0001D7AF                                         ; _do_ssh_connection_init+269j
.text:0001D7AF                 mov     ecx, [ebp+arg_0]
.text:0001D7B2                 mov     dword ptr [ecx+48h], 0
.text:0001D7B9                 mov     edx, [ebp+arg_0]
.text:0001D7BC                 mov     dword ptr [edx+204h], 0
.text:0001D7C6                 mov     eax, [ebp+var_4]
.text:0001D7C9                 mov     ecx, [eax+14h]
.text:0001D7CC                 mov     edx, [ebp+var_4]
.text:0001D7CF                 mov     eax, [edx+4]
.text:0001D7D2                 mov     byte ptr [ecx+eax], 0
.text:0001D7D6                 push    offset $SG89595 ; Control
.text:0001D7DB                 mov     ecx, [ebp+var_4]
.text:0001D7DE                 mov     edx, [ecx+14h]
.text:0001D7E1                 push    edx             ; Str
.text:0001D7E2                 call    _strcspn
.text:0001D7E7                 add     esp, 8
.text:0001D7EA                 mov     ecx, [ebp+var_4]
.text:0001D7ED                 mov     edx, [ecx+14h]
.text:0001D7F0                 mov     byte ptr [eax+edx], 0
.text:0001D7F4                 mov     eax, [ebp+var_4]
.text:0001D7F7                 mov     ecx, [eax+14h]
.text:0001D7FA                 push    ecx
.text:0001D7FB                 push    offset $SG89596 ; "Server version: %s"
.text:0001D800                 mov     edx, [ebp+arg_0]
.text:0001D803                 push    edx
.text:0001D804                 call    _logeventf
.text:0001D809                 add     esp, 0Ch
.text:0001D80C                 mov     eax, [ebp+var_4]
.text:0001D80F                 mov     ecx, [eax+14h]
.text:0001D812                 push    ecx
.text:0001D813                 mov     edx, [ebp+arg_0]
.text:0001D816                 push    edx
.text:0001D817                 call    _ssh_detect_bugs
.text:0001D81C                 add     esp, 8
.text:0001D81F                 push    offset $SG89598 ; "2.0"
.text:0001D824                 mov     eax, [ebp+var_4]
.text:0001D827                 add     eax, 8
.text:0001D82A                 push    eax             ; Str
.text:0001D82B                 call    _ssh_versioncmp
.text:0001D830                 add     esp, 8
.text:0001D833                 test    eax, eax
.text:0001D835                 jge     short loc_1D865
.text:0001D837                 push    offset $SG89599 ; "Server announces compatibility with SSH"...
.text:0001D83C                 call    _dupprintf
.text:0001D841                 add     esp, 4
.text:0001D844                 push    eax
.text:0001D845                 mov     ecx, [ebp+arg_0]
.text:0001D848                 push    ecx
.text:0001D849                 call    _bomb_out
.text:0001D84E                 add     esp, 8
.text:0001D851
.text:0001D851 loc_1D851:                              ; CODE XREF: _do_ssh_connection_init+33Bj
.text:0001D851                 mov     edx, [ebp+var_8]
.text:0001D854                 mov     dword ptr [edx], 0
.text:0001D85A                 xor     eax, eax
.text:0001D85C                 jmp     loc_1D976
.text:0001D861 ; ---------------------------------------------------------------------------
.text:0001D861                 xor     eax, eax
.text:0001D863                 jnz     short loc_1D851
.text:0001D865
.text:0001D865 loc_1D865:                              ; CODE XREF: _do_ssh_connection_init+30Dj
.text:0001D865                 push    1Fh
.text:0001D867                 mov     ecx, [ebp+arg_0]
.text:0001D86A                 mov     edx, [ecx+21Ch]
.text:0001D870                 push    edx
.text:0001D871                 call    _conf_get_int
.text:0001D876                 add     esp, 8
.text:0001D879                 test    eax, eax
.text:0001D87B                 jnz     short loc_1D8AB
.text:0001D87D                 push    offset $SG89604 ; "Bare ssh-connection protocol cannot be "...
.text:0001D882                 call    _dupprintf
.text:0001D887                 add     esp, 4
.text:0001D88A                 push    eax
.text:0001D88B                 mov     eax, [ebp+arg_0]
.text:0001D88E                 push    eax
.text:0001D88F                 call    _bomb_out
.text:0001D894                 add     esp, 8
.text:0001D897
.text:0001D897 loc_1D897:                              ; CODE XREF: _do_ssh_connection_init+381j
.text:0001D897                 mov     ecx, [ebp+var_8]
.text:0001D89A                 mov     dword ptr [ecx], 0
.text:0001D8A0                 xor     eax, eax
.text:0001D8A2                 jmp     loc_1D976
.text:0001D8A7 ; ---------------------------------------------------------------------------
.text:0001D8A7                 xor     edx, edx
.text:0001D8A9                 jnz     short loc_1D897
.text:0001D8AB
.text:0001D8AB loc_1D8AB:                              ; CODE XREF: _do_ssh_connection_init+353j
.text:0001D8AB                 mov     eax, [ebp+arg_0]
.text:0001D8AE                 mov     dword ptr [eax+16Ch], 2
.text:0001D8B8                 push    offset $SG89608 ; "Using bare ssh-connection protocol"
.text:0001D8BD                 mov     ecx, [ebp+arg_0]
.text:0001D8C0                 push    ecx
.text:0001D8C1                 call    _logeventf
.text:0001D8C6                 add     esp, 8
.text:0001D8C9                 mov     edx, [ebp+var_4]
.text:0001D8CC                 add     edx, 8
.text:0001D8CF                 push    edx             ; char *
.text:0001D8D0                 push    offset ?protoname@?1??do_ssh_connection_init@@9@9 ; Str1
.text:0001D8D5                 mov     eax, [ebp+arg_0]
.text:0001D8D8                 push    eax             ; int
.text:0001D8D9                 call    _ssh_send_verstring
.text:0001D8DE                 add     esp, 0Ch
.text:0001D8E1                 mov     ecx, [ebp+arg_0]
.text:0001D8E4                 mov     dword ptr [ecx+210h], offset _ssh2_bare_connection_protocol
.text:0001D8EE                 mov     edx, [ebp+arg_0]
.text:0001D8F1                 push    edx
.text:0001D8F2                 call    _ssh2_bare_connection_protocol_setup
.text:0001D8F7                 add     esp, 4
.text:0001D8FA                 mov     eax, [ebp+arg_0]
.text:0001D8FD                 mov     dword ptr [eax+214h], offset _ssh2_bare_connection_rdpkt
.text:0001D907                 mov     ecx, [ebp+arg_0]
.text:0001D90A                 mov     edx, [ecx+0E4h]
.text:0001D910                 push    edx
.text:0001D911                 call    _update_specials_menu
.text:0001D916                 add     esp, 4
.text:0001D919                 mov     eax, [ebp+arg_0]
.text:0001D91C                 mov     dword ptr [eax+118h], 1
.text:0001D926                 mov     ecx, [ebp+arg_0]
.text:0001D929                 push    ecx
.text:0001D92A                 push    offset _ssh_backend
.text:0001D92F                 mov     edx, [ebp+arg_0]
.text:0001D932                 mov     eax, [edx+21Ch]
.text:0001D938                 push    eax
.text:0001D939                 call    _pinger_new
.text:0001D93E                 add     esp, 0Ch
.text:0001D941                 mov     ecx, [ebp+arg_0]
.text:0001D944                 mov     [ecx+654h], eax
.text:0001D94A                 push    0
.text:0001D94C                 push    0
.text:0001D94E                 push    0
.text:0001D950                 mov     edx, [ebp+arg_0]
.text:0001D953                 push    edx
.text:0001D954                 call    _do_ssh2_authconn
.text:0001D959                 add     esp, 10h
.text:0001D95C                 mov     eax, [ebp+var_4]
.text:0001D95F                 mov     ecx, [eax+14h]
.text:0001D962                 push    ecx
.text:0001D963                 call    _safefree
.text:0001D968                 add     esp, 4
.text:0001D96B
.text:0001D96B loc_1D96B:                              ; CODE XREF: _do_ssh_connection_init+8Cj
.text:0001D96B                                         ; _do_ssh_connection_init+ABj
.text:0001D96B                 mov     edx, [ebp+var_8]
.text:0001D96E                 mov     dword ptr [edx], 0
.text:0001D974                 xor     eax, eax
.text:0001D976
.text:0001D976 loc_1D976:                              ; CODE XREF: _do_ssh_connection_init+101j
.text:0001D976                                         ; _do_ssh_connection_init+125j ...
.text:0001D976                 add     esp, 10h
.text:0001D979                 cmp     ebp, esp
.text:0001D97B                 call    __RTC_CheckEsp
.text:0001D980                 mov     esp, ebp
.text:0001D982                 pop     ebp
.text:0001D983                 retn
.text:0001D983 _do_ssh_connection_init endp
.text:0001D983
.text:0001D983 ; ---------------------------------------------------------------------------
.text:0001D984                 align 8
.text:0001D988
.text:0001D988 ; =============== S U B R O U T I N E =======================================
.text:0001D988
.text:0001D988 ; Attributes: bp-based frame
.text:0001D988
.text:0001D988 _ssh2_bare_connection_rdpkt proc near   ; DATA XREF: _do_ssh_connection_init+3D5o
.text:0001D988
.text:0001D988 var_C           = dword ptr -0Ch
.text:0001D988 var_8           = dword ptr -8
.text:0001D988 var_4           = dword ptr -4
.text:0001D988 arg_0           = dword ptr  8
.text:0001D988 arg_4           = dword ptr  0Ch
.text:0001D988 arg_8           = dword ptr  10h
.text:0001D988
.text:0001D988                 push    ebp
.text:0001D989                 mov     ebp, esp
.text:0001D98B                 sub     esp, 0Ch
.text:0001D98E                 mov     [ebp+var_C], 0CCCCCCCCh
.text:0001D995                 mov     [ebp+var_8], 0CCCCCCCCh
.text:0001D99C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0001D9A3                 mov     eax, [ebp+arg_0]
.text:0001D9A6                 add     eax, 1F8h
.text:0001D9AB                 mov     [ebp+var_4], eax
.text:0001D9AE                 mov     ecx, [ebp+arg_0]
.text:0001D9B1                 add     ecx, 18Ch
.text:0001D9B7                 mov     [ebp+var_8], ecx
.text:0001D9BA                 mov     edx, [ebp+arg_0]
.text:0001D9BD                 mov     eax, [edx+18Ch]
.text:0001D9C3                 mov     [ebp+var_C], eax
.text:0001D9C6                 cmp     [ebp+var_C], 0
.text:0001D9CA                 jz      short loc_1D9E7
.text:0001D9CC                 cmp     [ebp+var_C], 6E9h
.text:0001D9D3                 jz      short loc_1DA23
.text:0001D9D5                 cmp     [ebp+var_C], 700h
.text:0001D9DC                 jz      loc_1DB67
.text:0001D9E2                 jmp     loc_1DC06
.text:0001D9E7 ; ---------------------------------------------------------------------------
.text:0001D9E7
.text:0001D9E7 loc_1D9E7:                              ; CODE XREF: _ssh2_bare_connection_rdpkt+42j
.text:0001D9E7                 mov     ecx, [ebp+var_4]
.text:0001D9EA                 mov     dword ptr [ecx+8], 0
.text:0001D9F1                 jmp     short loc_1DA02
.text:0001D9F3 ; ---------------------------------------------------------------------------
.text:0001D9F3
.text:0001D9F3 loc_1D9F3:                              ; CODE XREF: _ssh2_bare_connection_rdpkt+CEj
.text:0001D9F3                 mov     edx, [ebp+var_4]
.text:0001D9F6                 mov     eax, [edx+8]
.text:0001D9F9                 add     eax, 1
.text:0001D9FC                 mov     ecx, [ebp+var_4]
.text:0001D9FF                 mov     [ecx+8], eax
.text:0001DA02
.text:0001DA02 loc_1DA02:                              ; CODE XREF: _ssh2_bare_connection_rdpkt+69j
.text:0001DA02                 mov     edx, [ebp+var_4]
.text:0001DA05                 cmp     dword ptr [edx+8], 4
.text:0001DA09                 jge     short loc_1DA58
.text:0001DA0B
.text:0001DA0B loc_1DA0B:                              ; CODE XREF: _ssh2_bare_connection_rdpkt+9Fj
.text:0001DA0B                 mov     eax, [ebp+arg_8]
.text:0001DA0E                 cmp     dword ptr [eax], 0
.text:0001DA11                 jnz     short loc_1DA29
.text:0001DA13
.text:0001DA13 loc_1DA13:                              ; CODE XREF: _ssh2_bare_connection_rdpkt+9Dj
.text:0001DA13                 mov     ecx, [ebp+var_8]
.text:0001DA16                 mov     dword ptr [ecx], 6E9h
.text:0001DA1C                 xor     eax, eax
.text:0001DA1E                 jmp     loc_1DC15
.text:0001DA23 ; ---------------------------------------------------------------------------
.text:0001DA23
.text:0001DA23 loc_1DA23:                              ; CODE XREF: _ssh2_bare_connection_rdpkt+4Bj
.text:0001DA23                 xor     edx, edx
.text:0001DA25                 jnz     short loc_1DA13
.text:0001DA27                 jmp     short loc_1DA0B
.text:0001DA29 ; ---------------------------------------------------------------------------
.text:0001DA29
.text:0001DA29 loc_1DA29:                              ; CODE XREF: _ssh2_bare_connection_rdpkt+89j
.text:0001DA29                 mov     eax, [ebp+arg_4]
.text:0001DA2C                 mov     ecx, [eax]
.text:0001DA2E                 mov     edx, [ebp+var_4]
.text:0001DA31                 mov     eax, [edx+8]
.text:0001DA34                 mov     edx, [ebp+var_4]
.text:0001DA37                 mov     cl, [ecx]
.text:0001DA39                 mov     [edx+eax], cl
.text:0001DA3C                 mov     edx, [ebp+arg_4]
.text:0001DA3F                 mov     eax, [edx]
.text:0001DA41                 add     eax, 1
.text:0001DA44                 mov     ecx, [ebp+arg_4]
.text:0001DA47                 mov     [ecx], eax
.text:0001DA49                 mov     edx, [ebp+arg_8]
.text:0001DA4C                 mov     eax, [edx]
.text:0001DA4E                 sub     eax, 1
.text:0001DA51                 mov     ecx, [ebp+arg_8]
.text:0001DA54                 mov     [ecx], eax
.text:0001DA56                 jmp     short loc_1D9F3
.text:0001DA58 ; ---------------------------------------------------------------------------
.text:0001DA58
.text:0001DA58 loc_1DA58:                              ; CODE XREF: _ssh2_bare_connection_rdpkt+81j
.text:0001DA58                 mov     edx, [ebp+var_4]
.text:0001DA5B                 movzx   eax, byte ptr [edx]
.text:0001DA5E                 shl     eax, 18h
.text:0001DA61                 mov     ecx, [ebp+var_4]
.text:0001DA64                 movzx   edx, byte ptr [ecx+1]
.text:0001DA68                 shl     edx, 10h
.text:0001DA6B                 or      eax, edx
.text:0001DA6D                 mov     ecx, [ebp+var_4]
.text:0001DA70                 movzx   edx, byte ptr [ecx+2]
.text:0001DA74                 shl     edx, 8
.text:0001DA77                 or      eax, edx
.text:0001DA79                 mov     ecx, [ebp+var_4]
.text:0001DA7C                 movzx   edx, byte ptr [ecx+3]
.text:0001DA80                 or      eax, edx
.text:0001DA82                 push    eax
.text:0001DA83                 call    _toint
.text:0001DA88                 add     esp, 4
.text:0001DA8B                 mov     ecx, [ebp+var_4]
.text:0001DA8E                 mov     [ecx+4], eax
.text:0001DA91                 mov     edx, [ebp+var_4]
.text:0001DA94                 cmp     dword ptr [edx+4], 0
.text:0001DA98                 jle     short loc_1DAA6
.text:0001DA9A                 mov     eax, [ebp+var_4]
.text:0001DA9D                 cmp     dword ptr [eax+4], 9000h
.text:0001DAA4                 jb      short loc_1DAD4
.text:0001DAA6
.text:0001DAA6 loc_1DAA6:                              ; CODE XREF: _ssh2_bare_connection_rdpkt+110j
.text:0001DAA6                 push    offset $SG88657 ; "Invalid packet length received"
.text:0001DAAB                 call    _dupprintf
.text:0001DAB0                 add     esp, 4
.text:0001DAB3                 push    eax
.text:0001DAB4                 mov     ecx, [ebp+arg_0]
.text:0001DAB7                 push    ecx
.text:0001DAB8                 call    _bomb_out
.text:0001DABD                 add     esp, 8
.text:0001DAC0
.text:0001DAC0 loc_1DAC0:                              ; CODE XREF: _ssh2_bare_connection_rdpkt+14Aj
.text:0001DAC0                 mov     edx, [ebp+var_8]
.text:0001DAC3                 mov     dword ptr [edx], 0
.text:0001DAC9                 xor     eax, eax
.text:0001DACB                 jmp     loc_1DC15
.text:0001DAD0 ; ---------------------------------------------------------------------------
.text:0001DAD0                 xor     eax, eax
.text:0001DAD2                 jnz     short loc_1DAC0
.text:0001DAD4
.text:0001DAD4 loc_1DAD4:                              ; CODE XREF: _ssh2_bare_connection_rdpkt+11Cj
.text:0001DAD4                 call    _ssh_new_packet
.text:0001DAD9                 mov     ecx, [ebp+var_4]
.text:0001DADC                 mov     [ecx+10h], eax
.text:0001DADF                 push    1
.text:0001DAE1                 mov     edx, [ebp+var_4]
.text:0001DAE4                 mov     eax, [edx+4]
.text:0001DAE7                 push    eax
.text:0001DAE8                 call    _safemalloc
.text:0001DAED                 add     esp, 8
.text:0001DAF0                 mov     ecx, [ebp+var_4]
.text:0001DAF3                 mov     edx, [ecx+10h]
.text:0001DAF6                 mov     [edx+10h], eax
.text:0001DAF9                 mov     eax, [ebp+var_4]
.text:0001DAFC                 mov     ecx, [eax+10h]
.text:0001DAFF                 mov     edx, [ebp+var_4]
.text:0001DB02                 mov     eax, [edx+4]
.text:0001DB05                 mov     [ecx+20h], eax
.text:0001DB08                 mov     ecx, [ebp+var_4]
.text:0001DB0B                 mov     edx, [ecx+10h]
.text:0001DB0E                 mov     eax, [ebp+var_4]
.text:0001DB11                 mov     ecx, [eax+0Ch]
.text:0001DB14                 mov     [edx+0Ch], ecx
.text:0001DB17                 mov     edx, [ebp+var_4]
.text:0001DB1A                 mov     eax, [edx+0Ch]
.text:0001DB1D                 add     eax, 1
.text:0001DB20                 mov     ecx, [ebp+var_4]
.text:0001DB23                 mov     [ecx+0Ch], eax
.text:0001DB26                 mov     edx, [ebp+var_4]
.text:0001DB29                 mov     dword ptr [edx+8], 0
.text:0001DB30                 jmp     short loc_1DB41
.text:0001DB32 ; ---------------------------------------------------------------------------
.text:0001DB32
.text:0001DB32 loc_1DB32:                              ; CODE XREF: _ssh2_bare_connection_rdpkt+218j
.text:0001DB32                 mov     eax, [ebp+var_4]
.text:0001DB35                 mov     ecx, [eax+8]
.text:0001DB38                 add     ecx, 1
.text:0001DB3B                 mov     edx, [ebp+var_4]
.text:0001DB3E                 mov     [edx+8], ecx
.text:0001DB41
.text:0001DB41 loc_1DB41:                              ; CODE XREF: _ssh2_bare_connection_rdpkt+1A8j
.text:0001DB41                 mov     eax, [ebp+var_4]
.text:0001DB44                 mov     ecx, [ebp+var_4]
.text:0001DB47                 mov     edx, [eax+8]
.text:0001DB4A                 cmp     edx, [ecx+4]
.text:0001DB4D                 jge     short loc_1DBA2
.text:0001DB4F
.text:0001DB4F loc_1DB4F:                              ; CODE XREF: _ssh2_bare_connection_rdpkt+1E3j
.text:0001DB4F                 mov     eax, [ebp+arg_8]
.text:0001DB52                 cmp     dword ptr [eax], 0
.text:0001DB55                 jnz     short loc_1DB6D
.text:0001DB57
.text:0001DB57 loc_1DB57:                              ; CODE XREF: _ssh2_bare_connection_rdpkt+1E1j
.text:0001DB57                 mov     ecx, [ebp+var_8]
.text:0001DB5A                 mov     dword ptr [ecx], 700h
.text:0001DB60                 xor     eax, eax
.text:0001DB62                 jmp     loc_1DC15
.text:0001DB67 ; ---------------------------------------------------------------------------
.text:0001DB67
.text:0001DB67 loc_1DB67:                              ; CODE XREF: _ssh2_bare_connection_rdpkt+54j
.text:0001DB67                 xor     edx, edx
.text:0001DB69                 jnz     short loc_1DB57
.text:0001DB6B                 jmp     short loc_1DB4F
.text:0001DB6D ; ---------------------------------------------------------------------------
.text:0001DB6D
.text:0001DB6D loc_1DB6D:                              ; CODE XREF: _ssh2_bare_connection_rdpkt+1CDj
.text:0001DB6D                 mov     eax, [ebp+arg_4]
.text:0001DB70                 mov     ecx, [eax]
.text:0001DB72                 mov     edx, [ebp+var_4]
.text:0001DB75                 mov     eax, [edx+10h]
.text:0001DB78                 mov     edx, [eax+10h]
.text:0001DB7B                 mov     eax, [ebp+var_4]
.text:0001DB7E                 mov     eax, [eax+8]
.text:0001DB81                 mov     cl, [ecx]
.text:0001DB83                 mov     [edx+eax], cl
.text:0001DB86                 mov     edx, [ebp+arg_4]
.text:0001DB89                 mov     eax, [edx]
.text:0001DB8B                 add     eax, 1
.text:0001DB8E                 mov     ecx, [ebp+arg_4]
.text:0001DB91                 mov     [ecx], eax
.text:0001DB93                 mov     edx, [ebp+arg_8]
.text:0001DB96                 mov     eax, [edx]
.text:0001DB98                 sub     eax, 1
.text:0001DB9B                 mov     ecx, [ebp+arg_8]
.text:0001DB9E                 mov     [ecx], eax
.text:0001DBA0                 jmp     short loc_1DB32
.text:0001DBA2 ; ---------------------------------------------------------------------------
.text:0001DBA2
.text:0001DBA2 loc_1DBA2:                              ; CODE XREF: _ssh2_bare_connection_rdpkt+1C5j
.text:0001DBA2                 mov     edx, [ebp+var_4]
.text:0001DBA5                 mov     eax, [edx+10h]
.text:0001DBA8                 mov     ecx, [eax+10h]
.text:0001DBAB                 mov     edx, [ebp+var_4]
.text:0001DBAE                 mov     eax, [edx+10h]
.text:0001DBB1                 movzx   ecx, byte ptr [ecx]
.text:0001DBB4                 mov     [eax+8], ecx
.text:0001DBB7                 mov     edx, [ebp+var_4]
.text:0001DBBA                 mov     eax, [edx+10h]
.text:0001DBBD                 mov     ecx, [eax+10h]
.text:0001DBC0                 add     ecx, 1
.text:0001DBC3                 mov     edx, [ebp+var_4]
.text:0001DBC6                 mov     eax, [edx+10h]
.text:0001DBC9                 mov     [eax+14h], ecx
.text:0001DBCC                 mov     ecx, [ebp+var_4]
.text:0001DBCF                 mov     edx, [ecx+4]
.text:0001DBD2                 sub     edx, 1
.text:0001DBD5                 mov     eax, [ebp+var_4]
.text:0001DBD8                 mov     ecx, [eax+10h]
.text:0001DBDB                 mov     [ecx], edx
.text:0001DBDD                 mov     edx, [ebp+arg_0]
.text:0001DBE0                 cmp     dword ptr [edx+18h], 0
.text:0001DBE4                 jz      short loc_1DBF9
.text:0001DBE6                 mov     eax, [ebp+var_4]
.text:0001DBE9                 mov     ecx, [eax+10h]
.text:0001DBEC                 push    ecx
.text:0001DBED                 mov     edx, [ebp+arg_0]
.text:0001DBF0                 push    edx
.text:0001DBF1                 call    _ssh2_log_incoming_packet
.text:0001DBF6                 add     esp, 8
.text:0001DBF9
.text:0001DBF9 loc_1DBF9:                              ; CODE XREF: _ssh2_bare_connection_rdpkt+25Cj
.text:0001DBF9                 mov     eax, [ebp+var_4]
.text:0001DBFC                 mov     ecx, [eax+10h]
.text:0001DBFF                 mov     dword ptr [ecx+18h], 0
.text:0001DC06
.text:0001DC06 loc_1DC06:                              ; CODE XREF: _ssh2_bare_connection_rdpkt+5Aj
.text:0001DC06                 mov     edx, [ebp+var_8]
.text:0001DC09                 mov     dword ptr [edx], 0
.text:0001DC0F                 mov     eax, [ebp+var_4]
.text:0001DC12                 mov     eax, [eax+10h]
.text:0001DC15
.text:0001DC15 loc_1DC15:                              ; CODE XREF: _ssh2_bare_connection_rdpkt+96j
.text:0001DC15                                         ; _ssh2_bare_connection_rdpkt+143j ...
.text:0001DC15                 add     esp, 0Ch
.text:0001DC18                 cmp     ebp, esp
.text:0001DC1A                 call    __RTC_CheckEsp
.text:0001DC1F                 mov     esp, ebp
.text:0001DC21                 pop     ebp
.text:0001DC22                 retn
.text:0001DC22 _ssh2_bare_connection_rdpkt endp
.text:0001DC22
.text:0001DC22 ; ---------------------------------------------------------------------------
.text:0001DC23                 align 8
.text:0001DC28
.text:0001DC28 ; =============== S U B R O U T I N E =======================================
.text:0001DC28
.text:0001DC28 ; Attributes: bp-based frame
.text:0001DC28
.text:0001DC28 _ssh1_protocol_setup proc near          ; CODE XREF: _do_ssh_init+508p
.text:0001DC28
.text:0001DC28 var_4           = dword ptr -4
.text:0001DC28 arg_0           = dword ptr  8
.text:0001DC28
.text:0001DC28                 push    ebp
.text:0001DC29                 mov     ebp, esp
.text:0001DC2B                 push    ecx
.text:0001DC2C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0001DC33                 mov     [ebp+var_4], 0
.text:0001DC3A                 jmp     short loc_1DC45
.text:0001DC3C ; ---------------------------------------------------------------------------
.text:0001DC3C
.text:0001DC3C loc_1DC3C:                              ; CODE XREF: _ssh1_protocol_setup+37j
.text:0001DC3C                 mov     eax, [ebp+var_4]
.text:0001DC3F                 add     eax, 1
.text:0001DC42                 mov     [ebp+var_4], eax
.text:0001DC45
.text:0001DC45 loc_1DC45:                              ; CODE XREF: _ssh1_protocol_setup+12j
.text:0001DC45                 cmp     [ebp+var_4], 100h
.text:0001DC4C                 jge     short loc_1DC61
.text:0001DC4E                 mov     ecx, [ebp+var_4]
.text:0001DC51                 mov     edx, [ebp+arg_0]
.text:0001DC54                 mov     dword ptr [edx+ecx*4+244h], 0
.text:0001DC5F                 jmp     short loc_1DC3C
.text:0001DC61 ; ---------------------------------------------------------------------------
.text:0001DC61
.text:0001DC61 loc_1DC61:                              ; CODE XREF: _ssh1_protocol_setup+24j
.text:0001DC61                 mov     eax, [ebp+arg_0]
.text:0001DC64                 mov     dword ptr [eax+248h], offset _ssh1_msg_disconnect
.text:0001DC6E                 mov     ecx, [ebp+arg_0]
.text:0001DC71                 mov     dword ptr [ecx+2C4h], offset _ssh_msg_ignore
.text:0001DC7B                 mov     edx, [ebp+arg_0]
.text:0001DC7E                 mov     dword ptr [edx+2D4h], offset _ssh1_msg_debug
.text:0001DC88                 mov     esp, ebp
.text:0001DC8A                 pop     ebp
.text:0001DC8B                 retn
.text:0001DC8B _ssh1_protocol_setup endp
.text:0001DC8B
.text:0001DC8B ; ---------------------------------------------------------------------------
.text:0001DC8C                 db 0Ch dup(0CCh)
.text:0001DC98
.text:0001DC98 ; =============== S U B R O U T I N E =======================================
.text:0001DC98
.text:0001DC98 ; Attributes: bp-based frame
.text:0001DC98
.text:0001DC98 _ssh1_msg_debug proc near               ; DATA XREF: _ssh1_protocol_setup+56o
.text:0001DC98
.text:0001DC98 var_18          = dword ptr -18h
.text:0001DC98 var_14          = dword ptr -14h
.text:0001DC98 var_10          = dword ptr -10h
.text:0001DC98 var_C           = dword ptr -0Ch
.text:0001DC98 var_8           = dword ptr -8
.text:0001DC98 var_4           = dword ptr -4
.text:0001DC98 arg_0           = dword ptr  8
.text:0001DC98 arg_4           = dword ptr  0Ch
.text:0001DC98
.text:0001DC98                 push    ebp
.text:0001DC99                 mov     ebp, esp
.text:0001DC9B                 sub     esp, 18h
.text:0001DC9E                 mov     eax, 0CCCCCCCCh
.text:0001DCA3                 mov     [ebp+var_18], eax
.text:0001DCA6                 mov     [ebp+var_14], eax
.text:0001DCA9                 mov     [ebp+var_10], eax
.text:0001DCAC                 mov     [ebp+var_C], eax
.text:0001DCAF                 mov     [ebp+var_8], eax
.text:0001DCB2                 mov     [ebp+var_4], eax
.text:0001DCB5                 lea     eax, [ebp+var_14]
.text:0001DCB8                 push    eax
.text:0001DCB9                 lea     ecx, [ebp+var_8]
.text:0001DCBC                 push    ecx
.text:0001DCBD                 mov     edx, [ebp+arg_4]
.text:0001DCC0                 push    edx
.text:0001DCC1                 call    _ssh_pkt_getstring
.text:0001DCC6                 add     esp, 0Ch
.text:0001DCC9                 mov     eax, [ebp+var_8]
.text:0001DCCC                 push    eax
.text:0001DCCD                 mov     ecx, [ebp+var_14]
.text:0001DCD0                 push    ecx
.text:0001DCD1                 push    offset $SG91395 ; "Remote debug message: %.*s"
.text:0001DCD6                 mov     edx, [ebp+arg_0]
.text:0001DCD9                 push    edx
.text:0001DCDA                 call    _logeventf
.text:0001DCDF                 add     esp, 10h
.text:0001DCE2                 push    edx
.text:0001DCE3                 mov     ecx, ebp
.text:0001DCE5                 push    eax
.text:0001DCE6                 lea     edx, $LN6_7
.text:0001DCEC                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0001DCF1                 pop     eax
.text:0001DCF2                 pop     edx
.text:0001DCF3                 add     esp, 18h
.text:0001DCF6                 cmp     ebp, esp
.text:0001DCF8                 call    __RTC_CheckEsp
.text:0001DCFD                 mov     esp, ebp
.text:0001DCFF                 pop     ebp
.text:0001DD00                 retn
.text:0001DD00 _ssh1_msg_debug endp
.text:0001DD00
.text:0001DD00 ; ---------------------------------------------------------------------------
.text:0001DD01                 align 4
.text:0001DD04 $LN6_7          dd 2                    ; DATA XREF: _ssh1_msg_debug+4Eo
.text:0001DD08                 dd offset $LN5_11
.text:0001DD0C $LN5_11         dd 0FFFFFFF8h, 4        ; DATA XREF: .text:0001DD08o
.text:0001DD14                 dd offset $LN3_6        ; "msg"
.text:0001DD18                 dd 0FFFFFFECh, 4
.text:0001DD20                 dd offset $LN4_10       ; "msglen"
.text:0001DD24 $LN4_10         db 'msglen',0           ; DATA XREF: .text:0001DD20o
.text:0001DD2B $LN3_6          db 'msg',0              ; DATA XREF: .text:0001DD14o
.text:0001DD2F                 db 9 dup(0CCh)
.text:0001DD38
.text:0001DD38 ; =============== S U B R O U T I N E =======================================
.text:0001DD38
.text:0001DD38 ; Attributes: bp-based frame
.text:0001DD38
.text:0001DD38 _ssh1_msg_disconnect proc near          ; DATA XREF: _ssh1_protocol_setup+3Co
.text:0001DD38
.text:0001DD38 var_18          = dword ptr -18h
.text:0001DD38 var_14          = dword ptr -14h
.text:0001DD38 var_10          = dword ptr -10h
.text:0001DD38 var_C           = dword ptr -0Ch
.text:0001DD38 var_8           = dword ptr -8
.text:0001DD38 var_4           = dword ptr -4
.text:0001DD38 arg_0           = dword ptr  8
.text:0001DD38 arg_4           = dword ptr  0Ch
.text:0001DD38
.text:0001DD38                 push    ebp
.text:0001DD39                 mov     ebp, esp
.text:0001DD3B                 sub     esp, 18h
.text:0001DD3E                 mov     eax, 0CCCCCCCCh
.text:0001DD43                 mov     [ebp+var_18], eax
.text:0001DD46                 mov     [ebp+var_14], eax
.text:0001DD49                 mov     [ebp+var_10], eax
.text:0001DD4C                 mov     [ebp+var_C], eax
.text:0001DD4F                 mov     [ebp+var_8], eax
.text:0001DD52                 mov     [ebp+var_4], eax
.text:0001DD55                 lea     eax, [ebp+var_14]
.text:0001DD58                 push    eax
.text:0001DD59                 lea     ecx, [ebp+var_8]
.text:0001DD5C                 push    ecx
.text:0001DD5D                 mov     edx, [ebp+arg_4]
.text:0001DD60                 push    edx
.text:0001DD61                 call    _ssh_pkt_getstring
.text:0001DD66                 add     esp, 0Ch
.text:0001DD69                 mov     eax, [ebp+var_8]
.text:0001DD6C                 push    eax
.text:0001DD6D                 mov     ecx, [ebp+var_14]
.text:0001DD70                 push    ecx
.text:0001DD71                 push    offset $SG91404 ; "Server sent disconnect message:\n\"%.*s"...
.text:0001DD76                 call    _dupprintf
.text:0001DD7B                 add     esp, 0Ch
.text:0001DD7E                 push    eax
.text:0001DD7F                 mov     edx, [ebp+arg_0]
.text:0001DD82                 push    edx
.text:0001DD83                 call    _bomb_out
.text:0001DD88                 add     esp, 8
.text:0001DD8B                 push    edx
.text:0001DD8C                 mov     ecx, ebp
.text:0001DD8E                 push    eax
.text:0001DD8F                 lea     edx, $LN6_8
.text:0001DD95                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0001DD9A                 pop     eax
.text:0001DD9B                 pop     edx
.text:0001DD9C                 add     esp, 18h
.text:0001DD9F                 cmp     ebp, esp
.text:0001DDA1                 call    __RTC_CheckEsp
.text:0001DDA6                 mov     esp, ebp
.text:0001DDA8                 pop     ebp
.text:0001DDA9                 retn
.text:0001DDA9 _ssh1_msg_disconnect endp
.text:0001DDA9
.text:0001DDA9 ; ---------------------------------------------------------------------------
.text:0001DDAA                 align 4
.text:0001DDAC $LN6_8          dd 2                    ; DATA XREF: _ssh1_msg_disconnect+57o
.text:0001DDB0                 dd offset $LN5_12
.text:0001DDB4 $LN5_12         dd 0FFFFFFF8h, 4        ; DATA XREF: .text:0001DDB0o
.text:0001DDBC                 dd offset $LN3_7        ; "msg"
.text:0001DDC0                 dd 0FFFFFFECh, 4
.text:0001DDC8                 dd offset $LN4_11       ; "msglen"
.text:0001DDCC $LN4_11         db 'msglen',0           ; DATA XREF: .text:0001DDC8o
.text:0001DDD3 $LN3_7          db 'msg',0              ; DATA XREF: .text:0001DDBCo
.text:0001DDD7                 align 4
.text:0001DDD8
.text:0001DDD8 ; =============== S U B R O U T I N E =======================================
.text:0001DDD8
.text:0001DDD8 ; Attributes: bp-based frame
.text:0001DDD8
.text:0001DDD8 _ssh_msg_ignore proc near               ; DATA XREF: _ssh1_protocol_setup+49o
.text:0001DDD8                                         ; _ssh2_protocol_setup+1C2o ...
.text:0001DDD8                 push    ebp
.text:0001DDD9                 mov     ebp, esp
.text:0001DDDB                 pop     ebp
.text:0001DDDC                 retn
.text:0001DDDC _ssh_msg_ignore endp
.text:0001DDDC
.text:0001DDDC ; ---------------------------------------------------------------------------
.text:0001DDDD                 db 0Bh dup(0CCh)
.text:0001DDE8
.text:0001DDE8 ; =============== S U B R O U T I N E =======================================
.text:0001DDE8
.text:0001DDE8 ; Attributes: bp-based frame
.text:0001DDE8
.text:0001DDE8 _ssh1_protocol  proc near               ; DATA XREF: _do_ssh_init+4FAo
.text:0001DDE8
.text:0001DDE8 var_4           = dword ptr -4
.text:0001DDE8 arg_0           = dword ptr  8
.text:0001DDE8 arg_4           = dword ptr  0Ch
.text:0001DDE8 arg_8           = dword ptr  10h
.text:0001DDE8 arg_C           = dword ptr  14h
.text:0001DDE8
.text:0001DDE8                 push    ebp
.text:0001DDE9                 mov     ebp, esp
.text:0001DDEB                 push    ecx
.text:0001DDEC                 push    esi
.text:0001DDED                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0001DDF4                 mov     eax, [ebp+arg_4]
.text:0001DDF7                 mov     [ebp+var_4], eax
.text:0001DDFA                 mov     ecx, [ebp+arg_0]
.text:0001DDFD                 cmp     dword ptr [ecx+118h], 4
.text:0001DE04                 jnz     short loc_1DE0B
.text:0001DE06                 jmp     loc_1DE9D
.text:0001DE0B ; ---------------------------------------------------------------------------
.text:0001DE0B
.text:0001DE0B loc_1DE0B:                              ; CODE XREF: _ssh1_protocol+1Cj
.text:0001DE0B                 cmp     [ebp+arg_C], 0
.text:0001DE0F                 jz      short loc_1DE4C
.text:0001DE11                 mov     edx, [ebp+arg_C]
.text:0001DE14                 mov     eax, [edx+8]
.text:0001DE17                 mov     ecx, [ebp+arg_0]
.text:0001DE1A                 cmp     dword ptr [ecx+eax*4+244h], 0
.text:0001DE22                 jz      short loc_1DE4C
.text:0001DE24                 mov     esi, esp
.text:0001DE26                 mov     edx, [ebp+arg_C]
.text:0001DE29                 push    edx
.text:0001DE2A                 mov     eax, [ebp+arg_0]
.text:0001DE2D                 push    eax
.text:0001DE2E                 mov     ecx, [ebp+arg_C]
.text:0001DE31                 mov     edx, [ecx+8]
.text:0001DE34                 mov     eax, [ebp+arg_0]
.text:0001DE37                 mov     ecx, [eax+edx*4+244h]
.text:0001DE3E                 call    ecx
.text:0001DE40                 add     esp, 8
.text:0001DE43                 cmp     esi, esp
.text:0001DE45                 call    __RTC_CheckEsp
.text:0001DE4A                 jmp     short loc_1DE9D
.text:0001DE4C ; ---------------------------------------------------------------------------
.text:0001DE4C
.text:0001DE4C loc_1DE4C:                              ; CODE XREF: _ssh1_protocol+27j
.text:0001DE4C                                         ; _ssh1_protocol+3Aj
.text:0001DE4C                 mov     edx, [ebp+arg_0]
.text:0001DE4F                 cmp     dword ptr [edx+20Ch], 0
.text:0001DE56                 jnz     short loc_1DE85
.text:0001DE58                 mov     eax, [ebp+arg_C]
.text:0001DE5B                 push    eax
.text:0001DE5C                 mov     ecx, [ebp+arg_8]
.text:0001DE5F                 push    ecx
.text:0001DE60                 mov     edx, [ebp+var_4]
.text:0001DE63                 push    edx
.text:0001DE64                 mov     eax, [ebp+arg_0]
.text:0001DE67                 push    eax
.text:0001DE68                 call    _do_ssh1_login
.text:0001DE6D                 add     esp, 10h
.text:0001DE70                 test    eax, eax
.text:0001DE72                 jz      short loc_1DE83
.text:0001DE74                 mov     ecx, [ebp+arg_0]
.text:0001DE77                 mov     dword ptr [ecx+20Ch], 1
.text:0001DE81                 jmp     short loc_1DE85
.text:0001DE83 ; ---------------------------------------------------------------------------
.text:0001DE83
.text:0001DE83 loc_1DE83:                              ; CODE XREF: _ssh1_protocol+8Aj
.text:0001DE83                 jmp     short loc_1DE9D
.text:0001DE85 ; ---------------------------------------------------------------------------
.text:0001DE85
.text:0001DE85 loc_1DE85:                              ; CODE XREF: _ssh1_protocol+6Ej
.text:0001DE85                                         ; _ssh1_protocol+99j
.text:0001DE85                 mov     edx, [ebp+arg_C]
.text:0001DE88                 push    edx
.text:0001DE89                 mov     eax, [ebp+arg_8]
.text:0001DE8C                 push    eax
.text:0001DE8D                 mov     ecx, [ebp+var_4]
.text:0001DE90                 push    ecx
.text:0001DE91                 mov     edx, [ebp+arg_0]
.text:0001DE94                 push    edx
.text:0001DE95                 call    _do_ssh1_connection
.text:0001DE9A                 add     esp, 10h
.text:0001DE9D
.text:0001DE9D loc_1DE9D:                              ; CODE XREF: _ssh1_protocol+1Ej
.text:0001DE9D                                         ; _ssh1_protocol+62j ...
.text:0001DE9D                 pop     esi
.text:0001DE9E                 add     esp, 4
.text:0001DEA1                 cmp     ebp, esp
.text:0001DEA3                 call    __RTC_CheckEsp
.text:0001DEA8                 mov     esp, ebp
.text:0001DEAA                 pop     ebp
.text:0001DEAB                 retn
.text:0001DEAB _ssh1_protocol  endp
.text:0001DEAB
.text:0001DEAB ; ---------------------------------------------------------------------------
.text:0001DEAC                 db 0Ch dup(0CCh)
.text:0001DEB8
.text:0001DEB8 ; =============== S U B R O U T I N E =======================================
.text:0001DEB8
.text:0001DEB8 ; Attributes: bp-based frame
.text:0001DEB8
.text:0001DEB8 _do_ssh1_connection proc near           ; CODE XREF: _ssh1_protocol+ADp
.text:0001DEB8
.text:0001DEB8 var_18          = dword ptr -18h
.text:0001DEB8 var_14          = dword ptr -14h
.text:0001DEB8 var_10          = dword ptr -10h
.text:0001DEB8 var_C           = dword ptr -0Ch
.text:0001DEB8 var_8           = dword ptr -8
.text:0001DEB8 var_4           = dword ptr -4
.text:0001DEB8 arg_0           = dword ptr  8
.text:0001DEB8 arg_4           = dword ptr  0Ch
.text:0001DEB8 arg_8           = dword ptr  10h
.text:0001DEB8 arg_C           = dword ptr  14h
.text:0001DEB8
.text:0001DEB8                 push    ebp
.text:0001DEB9                 mov     ebp, esp
.text:0001DEBB                 sub     esp, 18h
.text:0001DEBE                 mov     eax, 0CCCCCCCCh
.text:0001DEC3                 mov     [ebp+var_18], eax
.text:0001DEC6                 mov     [ebp+var_14], eax
.text:0001DEC9                 mov     [ebp+var_10], eax
.text:0001DECC                 mov     [ebp+var_C], eax
.text:0001DECF                 mov     [ebp+var_8], eax
.text:0001DED2                 mov     [ebp+var_4], eax
.text:0001DED5                 mov     eax, [ebp+arg_0]
.text:0001DED8                 add     eax, 194h
.text:0001DEDD                 mov     [ebp+var_4], eax
.text:0001DEE0                 mov     ecx, [ebp+arg_0]
.text:0001DEE3                 mov     edx, [ecx+194h]
.text:0001DEE9                 mov     [ebp+var_14], edx
.text:0001DEEC                 cmp     [ebp+var_14], 1682h
.text:0001DEF3                 jg      short loc_1DF27
.text:0001DEF5                 cmp     [ebp+var_14], 1682h
.text:0001DEFC                 jz      loc_1E435
.text:0001DF02                 cmp     [ebp+var_14], 0
.text:0001DF06                 jz      short loc_1DF46
.text:0001DF08                 cmp     [ebp+var_14], 162Fh
.text:0001DF0F                 jz      loc_1E001
.text:0001DF15                 cmp     [ebp+var_14], 1659h
.text:0001DF1C                 jz      loc_1E1FA
.text:0001DF22                 jmp     loc_1E822
.text:0001DF27 ; ---------------------------------------------------------------------------
.text:0001DF27
.text:0001DF27 loc_1DF27:                              ; CODE XREF: _do_ssh1_connection+3Bj
.text:0001DF27                 cmp     [ebp+var_14], 1697h
.text:0001DF2E                 jz      loc_1E541
.text:0001DF34                 cmp     [ebp+var_14], 16D0h
.text:0001DF3B                 jz      loc_1E773
.text:0001DF41                 jmp     loc_1E822
.text:0001DF46 ; ---------------------------------------------------------------------------
.text:0001DF46
.text:0001DF46 loc_1DF46:                              ; CODE XREF: _do_ssh1_connection+4Ej
.text:0001DF46                 mov     eax, [ebp+arg_0]
.text:0001DF49                 mov     dword ptr [eax+28Ch], offset _ssh1_smsg_stdout_stderr_data
.text:0001DF53                 mov     ecx, [ebp+arg_0]
.text:0001DF56                 mov     edx, [ebp+arg_0]
.text:0001DF59                 mov     eax, [edx+28Ch]
.text:0001DF5F                 mov     [ecx+288h], eax
.text:0001DF65                 mov     ecx, [ebp+arg_0]
.text:0001DF68                 mov     dword ptr [ecx+298h], offset _ssh1_msg_channel_open_confirmation
.text:0001DF72                 mov     edx, [ebp+arg_0]
.text:0001DF75                 mov     dword ptr [edx+29Ch], offset _ssh1_msg_channel_open_failure
.text:0001DF7F                 mov     eax, [ebp+arg_0]
.text:0001DF82                 mov     dword ptr [eax+2A8h], offset _ssh1_msg_channel_close
.text:0001DF8C                 mov     ecx, [ebp+arg_0]
.text:0001DF8F                 mov     edx, [ebp+arg_0]
.text:0001DF92                 mov     eax, [edx+2A8h]
.text:0001DF98                 mov     [ecx+2A4h], eax
.text:0001DF9E                 mov     ecx, [ebp+arg_0]
.text:0001DFA1                 mov     dword ptr [ecx+2A0h], offset _ssh1_msg_channel_data
.text:0001DFAB                 mov     edx, [ebp+arg_0]
.text:0001DFAE                 mov     dword ptr [edx+294h], offset _ssh1_smsg_exit_status
.text:0001DFB8                 mov     eax, [ebp+arg_0]
.text:0001DFBB                 push    eax
.text:0001DFBC                 call    _ssh_agent_forwarding_permitted
.text:0001DFC1                 add     esp, 4
.text:0001DFC4                 test    eax, eax
.text:0001DFC6                 jz      loc_1E09B
.text:0001DFCC                 push    offset $SG91274 ; "Requesting agent forwarding"
.text:0001DFD1                 mov     ecx, [ebp+arg_0]
.text:0001DFD4                 mov     edx, [ecx+0E4h]
.text:0001DFDA                 push    edx
.text:0001DFDB                 call    _logevent
.text:0001DFE0                 add     esp, 8
.text:0001DFE3                 push    0
.text:0001DFE5                 push    1Eh
.text:0001DFE7                 mov     eax, [ebp+arg_0]
.text:0001DFEA                 push    eax
.text:0001DFEB                 call    _send_packet
.text:0001DFF0                 add     esp, 0Ch
.text:0001DFF3
.text:0001DFF3 loc_1DFF3:                              ; CODE XREF: _do_ssh1_connection+14Bj
.text:0001DFF3                                         ; _do_ssh1_connection+151j
.text:0001DFF3                 mov     ecx, [ebp+var_4]
.text:0001DFF6                 mov     dword ptr [ecx], 162Fh
.text:0001DFFC                 jmp     loc_1E82B
.text:0001E001 ; ---------------------------------------------------------------------------
.text:0001E001
.text:0001E001 loc_1E001:                              ; CODE XREF: _do_ssh1_connection+57j
.text:0001E001                 xor     edx, edx
.text:0001E003                 jnz     short loc_1DFF3
.text:0001E005                 cmp     [ebp+arg_C], 0
.text:0001E009                 jz      short loc_1DFF3
.text:0001E00B                 mov     eax, [ebp+arg_C]
.text:0001E00E                 cmp     dword ptr [eax+8], 0Eh
.text:0001E012                 jz      short loc_1E04B
.text:0001E014                 mov     ecx, [ebp+arg_C]
.text:0001E017                 cmp     dword ptr [ecx+8], 0Fh
.text:0001E01B                 jz      short loc_1E04B
.text:0001E01D                 push    offset $SG91283 ; "Protocol confusion"
.text:0001E022                 call    _dupprintf
.text:0001E027                 add     esp, 4
.text:0001E02A                 push    eax
.text:0001E02B                 mov     edx, [ebp+arg_0]
.text:0001E02E                 push    edx
.text:0001E02F                 call    _bomb_out
.text:0001E034                 add     esp, 8
.text:0001E037
.text:0001E037 loc_1E037:                              ; CODE XREF: _do_ssh1_connection+18Fj
.text:0001E037                 mov     eax, [ebp+var_4]
.text:0001E03A                 mov     dword ptr [eax], 0
.text:0001E040                 jmp     loc_1E82B
.text:0001E045 ; ---------------------------------------------------------------------------
.text:0001E045                 xor     ecx, ecx
.text:0001E047                 jnz     short loc_1E037
.text:0001E049                 jmp     short loc_1E09B
.text:0001E04B ; ---------------------------------------------------------------------------
.text:0001E04B
.text:0001E04B loc_1E04B:                              ; CODE XREF: _do_ssh1_connection+15Aj
.text:0001E04B                                         ; _do_ssh1_connection+163j
.text:0001E04B                 mov     edx, [ebp+arg_C]
.text:0001E04E                 cmp     dword ptr [edx+8], 0Fh
.text:0001E052                 jnz     short loc_1E06D
.text:0001E054                 push    offset $SG91289 ; "Agent forwarding refused"
.text:0001E059                 mov     eax, [ebp+arg_0]
.text:0001E05C                 mov     ecx, [eax+0E4h]
.text:0001E062                 push    ecx
.text:0001E063                 call    _logevent
.text:0001E068                 add     esp, 8
.text:0001E06B                 jmp     short loc_1E09B
.text:0001E06D ; ---------------------------------------------------------------------------
.text:0001E06D
.text:0001E06D loc_1E06D:                              ; CODE XREF: _do_ssh1_connection+19Aj
.text:0001E06D                 push    offset $SG91291 ; "Agent forwarding enabled"
.text:0001E072                 mov     edx, [ebp+arg_0]
.text:0001E075                 mov     eax, [edx+0E4h]
.text:0001E07B                 push    eax
.text:0001E07C                 call    _logevent
.text:0001E081                 add     esp, 8
.text:0001E084                 mov     ecx, [ebp+arg_0]
.text:0001E087                 mov     dword ptr [ecx+48h], 1
.text:0001E08E                 mov     edx, [ebp+arg_0]
.text:0001E091                 mov     dword ptr [edx+2C0h], offset _ssh1_smsg_agent_open
.text:0001E09B
.text:0001E09B loc_1E09B:                              ; CODE XREF: _do_ssh1_connection+10Ej
.text:0001E09B                                         ; _do_ssh1_connection+191j ...
.text:0001E09B                 push    90h ; 'É'
.text:0001E0A0                 mov     eax, [ebp+arg_0]
.text:0001E0A3                 mov     ecx, [eax+21Ch]
.text:0001E0A9                 push    ecx
.text:0001E0AA                 call    _conf_get_int
.text:0001E0AF                 add     esp, 8
.text:0001E0B2                 test    eax, eax
.text:0001E0B4                 jz      loc_1E294
.text:0001E0BA                 mov     edx, [ebp+arg_0]
.text:0001E0BD                 mov     eax, [edx+21Ch]
.text:0001E0C3                 push    eax
.text:0001E0C4                 push    91h ; 'æ'
.text:0001E0C9                 mov     ecx, [ebp+arg_0]
.text:0001E0CC                 mov     edx, [ecx+21Ch]
.text:0001E0D2                 push    edx
.text:0001E0D3                 call    _conf_get_str
.text:0001E0D8                 add     esp, 8
.text:0001E0DB                 push    eax
.text:0001E0DC                 call    _x11_setup_display
.text:0001E0E1                 add     esp, 8
.text:0001E0E4                 mov     ecx, [ebp+arg_0]
.text:0001E0E7                 mov     [ecx+160h], eax
.text:0001E0ED                 mov     edx, [ebp+arg_0]
.text:0001E0F0                 cmp     dword ptr [edx+160h], 0
.text:0001E0F7                 jnz     short loc_1E115
.text:0001E0F9                 push    offset $SG91294 ; "X11 forwarding not enabled: unable to i"...
.text:0001E0FE                 mov     eax, [ebp+arg_0]
.text:0001E101                 mov     ecx, [eax+0E4h]
.text:0001E107                 push    ecx
.text:0001E108                 call    _logevent
.text:0001E10D                 add     esp, 8
.text:0001E110                 jmp     loc_1E294
.text:0001E115 ; ---------------------------------------------------------------------------
.text:0001E115
.text:0001E115 loc_1E115:                              ; CODE XREF: _do_ssh1_connection+23Fj
.text:0001E115                 push    92h ; 'Æ'
.text:0001E11A                 mov     edx, [ebp+arg_0]
.text:0001E11D                 mov     eax, [edx+21Ch]
.text:0001E123                 push    eax
.text:0001E124                 call    _conf_get_int
.text:0001E129                 add     esp, 8
.text:0001E12C                 push    eax
.text:0001E12D                 mov     ecx, [ebp+arg_0]
.text:0001E130                 mov     edx, [ecx+168h]
.text:0001E136                 push    edx
.text:0001E137                 call    _x11_invent_fake_auth
.text:0001E13C                 add     esp, 8
.text:0001E13F                 mov     ecx, [ebp+arg_0]
.text:0001E142                 mov     [ecx+164h], eax
.text:0001E148                 mov     edx, [ebp+arg_0]
.text:0001E14B                 mov     eax, [edx+164h]
.text:0001E151                 mov     ecx, [ebp+arg_0]
.text:0001E154                 mov     edx, [ecx+160h]
.text:0001E15A                 mov     [eax+1Ch], edx
.text:0001E15D                 push    offset $SG91296 ; "Requesting X11 forwarding"
.text:0001E162                 mov     eax, [ebp+arg_0]
.text:0001E165                 mov     ecx, [eax+0E4h]
.text:0001E16B                 push    ecx
.text:0001E16C                 call    _logevent
.text:0001E171                 add     esp, 8
.text:0001E174                 mov     edx, [ebp+arg_0]
.text:0001E177                 mov     eax, [edx+44h]
.text:0001E17A                 and     eax, 1
.text:0001E17D                 jz      short loc_1E1BE
.text:0001E17F                 push    0
.text:0001E181                 mov     ecx, [ebp+arg_0]
.text:0001E184                 mov     edx, [ecx+160h]
.text:0001E18A                 mov     eax, [edx+0Ch]
.text:0001E18D                 push    eax
.text:0001E18E                 push    1
.text:0001E190                 mov     ecx, [ebp+arg_0]
.text:0001E193                 mov     edx, [ecx+164h]
.text:0001E199                 mov     eax, [edx+10h]
.text:0001E19C                 push    eax
.text:0001E19D                 push    4
.text:0001E19F                 mov     ecx, [ebp+arg_0]
.text:0001E1A2                 mov     edx, [ecx+164h]
.text:0001E1A8                 mov     eax, [edx+0Ch]
.text:0001E1AB                 push    eax
.text:0001E1AC                 push    4
.text:0001E1AE                 push    22h ; '"'
.text:0001E1B0                 mov     ecx, [ebp+arg_0]
.text:0001E1B3                 push    ecx
.text:0001E1B4                 call    _send_packet
.text:0001E1B9                 add     esp, 24h
.text:0001E1BC                 jmp     short loc_1E1EC
.text:0001E1BE ; ---------------------------------------------------------------------------
.text:0001E1BE
.text:0001E1BE loc_1E1BE:                              ; CODE XREF: _do_ssh1_connection+2C5j
.text:0001E1BE                 push    0
.text:0001E1C0                 mov     edx, [ebp+arg_0]
.text:0001E1C3                 mov     eax, [edx+164h]
.text:0001E1C9                 mov     ecx, [eax+10h]
.text:0001E1CC                 push    ecx
.text:0001E1CD                 push    4
.text:0001E1CF                 mov     edx, [ebp+arg_0]
.text:0001E1D2                 mov     eax, [edx+164h]
.text:0001E1D8                 mov     ecx, [eax+0Ch]
.text:0001E1DB                 push    ecx
.text:0001E1DC                 push    4
.text:0001E1DE                 push    22h ; '"'
.text:0001E1E0                 mov     edx, [ebp+arg_0]
.text:0001E1E3                 push    edx
.text:0001E1E4                 call    _send_packet
.text:0001E1E9                 add     esp, 1Ch
.text:0001E1EC
.text:0001E1EC loc_1E1EC:                              ; CODE XREF: _do_ssh1_connection+304j
.text:0001E1EC                                         ; _do_ssh1_connection+344j ...
.text:0001E1EC                 mov     eax, [ebp+var_4]
.text:0001E1EF                 mov     dword ptr [eax], 1659h
.text:0001E1F5                 jmp     loc_1E82B
.text:0001E1FA ; ---------------------------------------------------------------------------
.text:0001E1FA
.text:0001E1FA loc_1E1FA:                              ; CODE XREF: _do_ssh1_connection+64j
.text:0001E1FA                 xor     ecx, ecx
.text:0001E1FC                 jnz     short loc_1E1EC
.text:0001E1FE                 cmp     [ebp+arg_C], 0
.text:0001E202                 jz      short loc_1E1EC
.text:0001E204                 mov     edx, [ebp+arg_C]
.text:0001E207                 cmp     dword ptr [edx+8], 0Eh
.text:0001E20B                 jz      short loc_1E244
.text:0001E20D                 mov     eax, [ebp+arg_C]
.text:0001E210                 cmp     dword ptr [eax+8], 0Fh
.text:0001E214                 jz      short loc_1E244
.text:0001E216                 push    offset $SG91307 ; "Protocol confusion"
.text:0001E21B                 call    _dupprintf
.text:0001E220                 add     esp, 4
.text:0001E223                 push    eax
.text:0001E224                 mov     ecx, [ebp+arg_0]
.text:0001E227                 push    ecx
.text:0001E228                 call    _bomb_out
.text:0001E22D                 add     esp, 8
.text:0001E230
.text:0001E230 loc_1E230:                              ; CODE XREF: _do_ssh1_connection+388j
.text:0001E230                 mov     edx, [ebp+var_4]
.text:0001E233                 mov     dword ptr [edx], 0
.text:0001E239                 jmp     loc_1E82B
.text:0001E23E ; ---------------------------------------------------------------------------
.text:0001E23E                 xor     eax, eax
.text:0001E240                 jnz     short loc_1E230
.text:0001E242                 jmp     short loc_1E294
.text:0001E244 ; ---------------------------------------------------------------------------
.text:0001E244
.text:0001E244 loc_1E244:                              ; CODE XREF: _do_ssh1_connection+353j
.text:0001E244                                         ; _do_ssh1_connection+35Cj
.text:0001E244                 mov     ecx, [ebp+arg_C]
.text:0001E247                 cmp     dword ptr [ecx+8], 0Fh
.text:0001E24B                 jnz     short loc_1E266
.text:0001E24D                 push    offset $SG91313 ; "X11 forwarding refused"
.text:0001E252                 mov     edx, [ebp+arg_0]
.text:0001E255                 mov     eax, [edx+0E4h]
.text:0001E25B                 push    eax
.text:0001E25C                 call    _logevent
.text:0001E261                 add     esp, 8
.text:0001E264                 jmp     short loc_1E294
.text:0001E266 ; ---------------------------------------------------------------------------
.text:0001E266
.text:0001E266 loc_1E266:                              ; CODE XREF: _do_ssh1_connection+393j
.text:0001E266                 push    offset $SG91315 ; "X11 forwarding enabled"
.text:0001E26B                 mov     ecx, [ebp+arg_0]
.text:0001E26E                 mov     edx, [ecx+0E4h]
.text:0001E274                 push    edx
.text:0001E275                 call    _logevent
.text:0001E27A                 add     esp, 8
.text:0001E27D                 mov     eax, [ebp+arg_0]
.text:0001E280                 mov     dword ptr [eax+4Ch], 1
.text:0001E287                 mov     ecx, [ebp+arg_0]
.text:0001E28A                 mov     dword ptr [ecx+2B0h], offset _ssh1_smsg_x11_open
.text:0001E294
.text:0001E294 loc_1E294:                              ; CODE XREF: _do_ssh1_connection+1FCj
.text:0001E294                                         ; _do_ssh1_connection+258j ...
.text:0001E294                 mov     edx, [ebp+arg_0]
.text:0001E297                 mov     eax, [edx+21Ch]
.text:0001E29D                 push    eax
.text:0001E29E                 mov     ecx, [ebp+arg_0]
.text:0001E2A1                 push    ecx
.text:0001E2A2                 call    _ssh_setup_portfwd
.text:0001E2A7                 add     esp, 8
.text:0001E2AA                 mov     edx, [ebp+arg_0]
.text:0001E2AD                 mov     dword ptr [edx+2B8h], offset _ssh1_msg_port_open
.text:0001E2B7                 push    15h
.text:0001E2B9                 mov     eax, [ebp+arg_0]
.text:0001E2BC                 mov     ecx, [eax+21Ch]
.text:0001E2C2                 push    ecx
.text:0001E2C3                 call    _conf_get_int
.text:0001E2C8                 add     esp, 8
.text:0001E2CB                 test    eax, eax
.text:0001E2CD                 jnz     loc_1E4E9
.text:0001E2D3                 mov     edx, [ebp+arg_0]
.text:0001E2D6                 mov     dword ptr [edx+0E8h], 9600h
.text:0001E2E0                 mov     eax, [ebp+arg_0]
.text:0001E2E3                 mov     dword ptr [eax+0ECh], 9600h
.text:0001E2ED                 mov     ecx, [ebp+arg_0]
.text:0001E2F0                 add     ecx, 0ECh ; '8'
.text:0001E2F6                 push    ecx
.text:0001E2F7                 mov     edx, [ebp+arg_0]
.text:0001E2FA                 add     edx, 0E8h ; 'F'
.text:0001E300                 push    edx
.text:0001E301                 push    offset $SG91318 ; "%d,%d"
.text:0001E306                 push    2Fh ; '/'
.text:0001E308                 mov     eax, [ebp+arg_0]
.text:0001E30B                 mov     ecx, [eax+21Ch]
.text:0001E311                 push    ecx
.text:0001E312                 call    _conf_get_str
.text:0001E317                 add     esp, 8
.text:0001E31A                 push    eax             ; Src
.text:0001E31B                 call    _sscanf
.text:0001E320                 add     esp, 10h
.text:0001E323                 push    0Ah
.text:0001E325                 call    _ssh1_pkt_init
.text:0001E32A                 add     esp, 4
.text:0001E32D                 mov     [ebp+var_8], eax
.text:0001E330                 push    2Eh ; '.'
.text:0001E332                 mov     edx, [ebp+arg_0]
.text:0001E335                 mov     eax, [edx+21Ch]
.text:0001E33B                 push    eax
.text:0001E33C                 call    _conf_get_str
.text:0001E341                 add     esp, 8
.text:0001E344                 push    eax             ; Str
.text:0001E345                 mov     ecx, [ebp+var_8]
.text:0001E348                 push    ecx             ; int
.text:0001E349                 call    _ssh_pkt_addstring
.text:0001E34E                 add     esp, 8
.text:0001E351                 mov     edx, [ebp+arg_0]
.text:0001E354                 mov     eax, [edx+0F4h]
.text:0001E35A                 push    eax
.text:0001E35B                 mov     ecx, [ebp+var_8]
.text:0001E35E                 push    ecx
.text:0001E35F                 call    _ssh_pkt_adduint32
.text:0001E364                 add     esp, 8
.text:0001E367                 mov     edx, [ebp+arg_0]
.text:0001E36A                 mov     eax, [edx+0F0h]
.text:0001E370                 push    eax
.text:0001E371                 mov     ecx, [ebp+var_8]
.text:0001E374                 push    ecx
.text:0001E375                 call    _ssh_pkt_adduint32
.text:0001E37A                 add     esp, 8
.text:0001E37D                 push    0
.text:0001E37F                 mov     edx, [ebp+var_8]
.text:0001E382                 push    edx
.text:0001E383                 call    _ssh_pkt_adduint32
.text:0001E388                 add     esp, 8
.text:0001E38B                 push    0
.text:0001E38D                 mov     eax, [ebp+var_8]
.text:0001E390                 push    eax
.text:0001E391                 call    _ssh_pkt_adduint32
.text:0001E396                 add     esp, 8
.text:0001E399                 mov     ecx, [ebp+var_8]
.text:0001E39C                 push    ecx
.text:0001E39D                 push    offset _ssh1_send_ttymode
.text:0001E3A2                 mov     edx, [ebp+arg_0]
.text:0001E3A5                 push    edx
.text:0001E3A6                 call    _parse_ttymodes
.text:0001E3AB                 add     esp, 0Ch
.text:0001E3AE                 push    0C0h ; '+'      ; Src
.text:0001E3B3                 mov     eax, [ebp+var_8]
.text:0001E3B6                 push    eax             ; int
.text:0001E3B7                 call    _ssh_pkt_addbyte
.text:0001E3BC                 add     esp, 8
.text:0001E3BF                 mov     ecx, [ebp+arg_0]
.text:0001E3C2                 mov     edx, [ecx+0ECh]
.text:0001E3C8                 push    edx
.text:0001E3C9                 mov     eax, [ebp+var_8]
.text:0001E3CC                 push    eax
.text:0001E3CD                 call    _ssh_pkt_adduint32
.text:0001E3D2                 add     esp, 8
.text:0001E3D5                 push    0C1h ; '-'      ; Src
.text:0001E3DA                 mov     ecx, [ebp+var_8]
.text:0001E3DD                 push    ecx             ; int
.text:0001E3DE                 call    _ssh_pkt_addbyte
.text:0001E3E3                 add     esp, 8
.text:0001E3E6                 mov     edx, [ebp+arg_0]
.text:0001E3E9                 mov     eax, [edx+0E8h]
.text:0001E3EF                 push    eax
.text:0001E3F0                 mov     ecx, [ebp+var_8]
.text:0001E3F3                 push    ecx
.text:0001E3F4                 call    _ssh_pkt_adduint32
.text:0001E3F9                 add     esp, 8
.text:0001E3FC                 push    0               ; Src
.text:0001E3FE                 mov     edx, [ebp+var_8]
.text:0001E401                 push    edx             ; int
.text:0001E402                 call    _ssh_pkt_addbyte
.text:0001E407                 add     esp, 8
.text:0001E40A                 mov     eax, [ebp+var_8]
.text:0001E40D                 push    eax
.text:0001E40E                 mov     ecx, [ebp+arg_0]
.text:0001E411                 push    ecx
.text:0001E412                 call    _s_wrpkt
.text:0001E417                 add     esp, 8
.text:0001E41A                 mov     edx, [ebp+arg_0]
.text:0001E41D                 mov     dword ptr [edx+118h], 2
.text:0001E427
.text:0001E427 loc_1E427:                              ; CODE XREF: _do_ssh1_connection+57Fj
.text:0001E427                                         ; _do_ssh1_connection+585j
.text:0001E427                 mov     eax, [ebp+var_4]
.text:0001E42A                 mov     dword ptr [eax], 1682h
.text:0001E430                 jmp     loc_1E82B
.text:0001E435 ; ---------------------------------------------------------------------------
.text:0001E435
.text:0001E435 loc_1E435:                              ; CODE XREF: _do_ssh1_connection+44j
.text:0001E435                 xor     ecx, ecx
.text:0001E437                 jnz     short loc_1E427
.text:0001E439                 cmp     [ebp+arg_C], 0
.text:0001E43D                 jz      short loc_1E427
.text:0001E43F                 mov     edx, [ebp+arg_C]
.text:0001E442                 cmp     dword ptr [edx+8], 0Eh
.text:0001E446                 jz      short loc_1E47F
.text:0001E448                 mov     eax, [ebp+arg_C]
.text:0001E44B                 cmp     dword ptr [eax+8], 0Fh
.text:0001E44F                 jz      short loc_1E47F
.text:0001E451                 push    offset $SG91328 ; "Protocol confusion"
.text:0001E456                 call    _dupprintf
.text:0001E45B                 add     esp, 4
.text:0001E45E                 push    eax
.text:0001E45F                 mov     ecx, [ebp+arg_0]
.text:0001E462                 push    ecx
.text:0001E463                 call    _bomb_out
.text:0001E468                 add     esp, 8
.text:0001E46B
.text:0001E46B loc_1E46B:                              ; CODE XREF: _do_ssh1_connection+5C3j
.text:0001E46B                 mov     edx, [ebp+var_4]
.text:0001E46E                 mov     dword ptr [edx], 0
.text:0001E474                 jmp     loc_1E82B
.text:0001E479 ; ---------------------------------------------------------------------------
.text:0001E479                 xor     eax, eax
.text:0001E47B                 jnz     short loc_1E46B
.text:0001E47D                 jmp     short loc_1E4E7
.text:0001E47F ; ---------------------------------------------------------------------------
.text:0001E47F
.text:0001E47F loc_1E47F:                              ; CODE XREF: _do_ssh1_connection+58Ej
.text:0001E47F                                         ; _do_ssh1_connection+597j
.text:0001E47F                 mov     ecx, [ebp+arg_C]
.text:0001E482                 cmp     dword ptr [ecx+8], 0Fh
.text:0001E486                 jnz     short loc_1E4B5
.text:0001E488                 push    offset $SG91334 ; "Server refused to allocate pty\r\n"
.text:0001E48D                 mov     edx, [ebp+arg_0]
.text:0001E490                 push    edx             ; int
.text:0001E491                 call    _c_write_str
.text:0001E496                 add     esp, 8
.text:0001E499                 mov     eax, [ebp+arg_0]
.text:0001E49C                 mov     dword ptr [eax+0DCh], 1
.text:0001E4A6                 mov     ecx, [ebp+arg_0]
.text:0001E4A9                 mov     dword ptr [ecx+0E0h], 1
.text:0001E4B3                 jmp     short loc_1E4E7
.text:0001E4B5 ; ---------------------------------------------------------------------------
.text:0001E4B5
.text:0001E4B5 loc_1E4B5:                              ; CODE XREF: _do_ssh1_connection+5CEj
.text:0001E4B5                 mov     edx, [ebp+arg_0]
.text:0001E4B8                 mov     eax, [edx+0ECh]
.text:0001E4BE                 push    eax
.text:0001E4BF                 mov     ecx, [ebp+arg_0]
.text:0001E4C2                 mov     edx, [ecx+0E8h]
.text:0001E4C8                 push    edx
.text:0001E4C9                 push    offset $SG91336 ; "Allocated pty (ospeed %dbps, ispeed %db"...
.text:0001E4CE                 mov     eax, [ebp+arg_0]
.text:0001E4D1                 push    eax
.text:0001E4D2                 call    _logeventf
.text:0001E4D7                 add     esp, 10h
.text:0001E4DA                 mov     ecx, [ebp+arg_0]
.text:0001E4DD                 mov     dword ptr [ecx+128h], 1
.text:0001E4E7
.text:0001E4E7 loc_1E4E7:                              ; CODE XREF: _do_ssh1_connection+5C5j
.text:0001E4E7                                         ; _do_ssh1_connection+5FBj
.text:0001E4E7                 jmp     short loc_1E503
.text:0001E4E9 ; ---------------------------------------------------------------------------
.text:0001E4E9
.text:0001E4E9 loc_1E4E9:                              ; CODE XREF: _do_ssh1_connection+415j
.text:0001E4E9                 mov     edx, [ebp+arg_0]
.text:0001E4EC                 mov     dword ptr [edx+0DCh], 1
.text:0001E4F6                 mov     eax, [ebp+arg_0]
.text:0001E4F9                 mov     dword ptr [eax+0E0h], 1
.text:0001E503
.text:0001E503 loc_1E503:                              ; CODE XREF: _do_ssh1_connection:loc_1E4E7j
.text:0001E503                 push    16h
.text:0001E505                 mov     ecx, [ebp+arg_0]
.text:0001E508                 mov     edx, [ecx+21Ch]
.text:0001E50E                 push    edx
.text:0001E50F                 call    _conf_get_int
.text:0001E514                 add     esp, 8
.text:0001E517                 test    eax, eax
.text:0001E519                 jz      loc_1E610
.text:0001E51F                 push    0
.text:0001E521                 push    6
.text:0001E523                 push    1
.text:0001E525                 push    25h ; '%'
.text:0001E527                 mov     eax, [ebp+arg_0]
.text:0001E52A                 push    eax
.text:0001E52B                 call    _send_packet
.text:0001E530                 add     esp, 14h
.text:0001E533
.text:0001E533 loc_1E533:                              ; CODE XREF: _do_ssh1_connection+68Bj
.text:0001E533                                         ; _do_ssh1_connection+691j
.text:0001E533                 mov     ecx, [ebp+var_4]
.text:0001E536                 mov     dword ptr [ecx], 1697h
.text:0001E53C                 jmp     loc_1E82B
.text:0001E541 ; ---------------------------------------------------------------------------
.text:0001E541
.text:0001E541 loc_1E541:                              ; CODE XREF: _do_ssh1_connection+76j
.text:0001E541                 xor     edx, edx
.text:0001E543                 jnz     short loc_1E533
.text:0001E545                 cmp     [ebp+arg_C], 0
.text:0001E549                 jz      short loc_1E533
.text:0001E54B                 mov     eax, [ebp+arg_C]
.text:0001E54E                 cmp     dword ptr [eax+8], 0Eh
.text:0001E552                 jz      short loc_1E58B
.text:0001E554                 mov     ecx, [ebp+arg_C]
.text:0001E557                 cmp     dword ptr [ecx+8], 0Fh
.text:0001E55B                 jz      short loc_1E58B
.text:0001E55D                 push    offset $SG91347 ; "Protocol confusion"
.text:0001E562                 call    _dupprintf
.text:0001E567                 add     esp, 4
.text:0001E56A                 push    eax
.text:0001E56B                 mov     edx, [ebp+arg_0]
.text:0001E56E                 push    edx
.text:0001E56F                 call    _bomb_out
.text:0001E574                 add     esp, 8
.text:0001E577
.text:0001E577 loc_1E577:                              ; CODE XREF: _do_ssh1_connection+6CFj
.text:0001E577                 mov     eax, [ebp+var_4]
.text:0001E57A                 mov     dword ptr [eax], 0
.text:0001E580                 jmp     loc_1E82B
.text:0001E585 ; ---------------------------------------------------------------------------
.text:0001E585                 xor     ecx, ecx
.text:0001E587                 jnz     short loc_1E577
.text:0001E589                 jmp     short loc_1E5A5
.text:0001E58B ; ---------------------------------------------------------------------------
.text:0001E58B
.text:0001E58B loc_1E58B:                              ; CODE XREF: _do_ssh1_connection+69Aj
.text:0001E58B                                         ; _do_ssh1_connection+6A3j
.text:0001E58B                 mov     edx, [ebp+arg_C]
.text:0001E58E                 cmp     dword ptr [edx+8], 0Fh
.text:0001E592                 jnz     short loc_1E5A5
.text:0001E594                 push    offset $SG91353 ; "Server refused to compress\r\n"
.text:0001E599                 mov     eax, [ebp+arg_0]
.text:0001E59C                 push    eax             ; int
.text:0001E59D                 call    _c_write_str
.text:0001E5A2                 add     esp, 8
.text:0001E5A5
.text:0001E5A5 loc_1E5A5:                              ; CODE XREF: _do_ssh1_connection+6D1j
.text:0001E5A5                                         ; _do_ssh1_connection+6DAj
.text:0001E5A5                 push    offset $SG91354 ; "Started compression"
.text:0001E5AA                 mov     ecx, [ebp+arg_0]
.text:0001E5AD                 mov     edx, [ecx+0E4h]
.text:0001E5B3                 push    edx
.text:0001E5B4                 call    _logevent
.text:0001E5B9                 add     esp, 8
.text:0001E5BC                 mov     eax, [ebp+arg_0]
.text:0001E5BF                 mov     dword ptr [eax+3Ch], 1
.text:0001E5C6                 call    _zlib_compress_init
.text:0001E5CB                 mov     ecx, [ebp+arg_0]
.text:0001E5CE                 mov     [ecx+88h], eax
.text:0001E5D4                 push    offset $SG91355 ; "Initialised zlib (RFC1950) compression"
.text:0001E5D9                 mov     edx, [ebp+arg_0]
.text:0001E5DC                 mov     eax, [edx+0E4h]
.text:0001E5E2                 push    eax
.text:0001E5E3                 call    _logevent
.text:0001E5E8                 add     esp, 8
.text:0001E5EB                 call    _zlib_decompress_init
.text:0001E5F0                 mov     ecx, [ebp+arg_0]
.text:0001E5F3                 mov     [ecx+8Ch], eax
.text:0001E5F9                 push    offset $SG91356 ; "Initialised zlib (RFC1950) decompressio"...
.text:0001E5FE                 mov     edx, [ebp+arg_0]
.text:0001E601                 mov     eax, [edx+0E4h]
.text:0001E607                 push    eax
.text:0001E608                 call    _logevent
.text:0001E60D                 add     esp, 8
.text:0001E610
.text:0001E610 loc_1E610:                              ; CODE XREF: _do_ssh1_connection+661j
.text:0001E610                 push    13h
.text:0001E612                 mov     ecx, [ebp+arg_0]
.text:0001E615                 mov     edx, [ecx+21Ch]
.text:0001E61B                 push    edx
.text:0001E61C                 call    _conf_get_str
.text:0001E621                 add     esp, 8
.text:0001E624                 mov     [ebp+var_C], eax
.text:0001E627                 push    29h ; ')'
.text:0001E629                 mov     eax, [ebp+arg_0]
.text:0001E62C                 mov     ecx, [eax+21Ch]
.text:0001E632                 push    ecx
.text:0001E633                 call    _conf_get_int
.text:0001E638                 add     esp, 8
.text:0001E63B                 test    eax, eax
.text:0001E63D                 jz      short loc_1E67B
.text:0001E63F                 push    14h
.text:0001E641                 mov     edx, [ebp+arg_0]
.text:0001E644                 mov     eax, [edx+21Ch]
.text:0001E64A                 push    eax
.text:0001E64B                 call    _conf_get_str
.text:0001E650                 add     esp, 8
.text:0001E653                 test    eax, eax
.text:0001E655                 jz      short loc_1E67B
.text:0001E657                 push    14h
.text:0001E659                 mov     ecx, [ebp+arg_0]
.text:0001E65C                 mov     edx, [ecx+21Ch]
.text:0001E662                 push    edx
.text:0001E663                 call    _conf_get_str
.text:0001E668                 add     esp, 8
.text:0001E66B                 mov     [ebp+var_C], eax
.text:0001E66E                 mov     eax, [ebp+arg_0]
.text:0001E671                 mov     dword ptr [eax+148h], 1
.text:0001E67B
.text:0001E67B loc_1E67B:                              ; CODE XREF: _do_ssh1_connection+785j
.text:0001E67B                                         ; _do_ssh1_connection+79Dj
.text:0001E67B                 mov     ecx, [ebp+var_C]
.text:0001E67E                 movsx   edx, byte ptr [ecx]
.text:0001E681                 test    edx, edx
.text:0001E683                 jz      short loc_1E69D
.text:0001E685                 push    0
.text:0001E687                 mov     eax, [ebp+var_C]
.text:0001E68A                 push    eax
.text:0001E68B                 push    4
.text:0001E68D                 push    0Dh
.text:0001E68F                 mov     ecx, [ebp+arg_0]
.text:0001E692                 push    ecx
.text:0001E693                 call    _send_packet
.text:0001E698                 add     esp, 14h
.text:0001E69B                 jmp     short loc_1E6AD
.text:0001E69D ; ---------------------------------------------------------------------------
.text:0001E69D
.text:0001E69D loc_1E69D:                              ; CODE XREF: _do_ssh1_connection+7CBj
.text:0001E69D                 push    0
.text:0001E69F                 push    0Ch
.text:0001E6A1                 mov     edx, [ebp+arg_0]
.text:0001E6A4                 push    edx
.text:0001E6A5                 call    _send_packet
.text:0001E6AA                 add     esp, 0Ch
.text:0001E6AD
.text:0001E6AD loc_1E6AD:                              ; CODE XREF: _do_ssh1_connection+7E3j
.text:0001E6AD                 push    offset $SG91361 ; "Started session"
.text:0001E6B2                 mov     eax, [ebp+arg_0]
.text:0001E6B5                 mov     ecx, [eax+0E4h]
.text:0001E6BB                 push    ecx
.text:0001E6BC                 call    _logevent
.text:0001E6C1                 add     esp, 8
.text:0001E6C4                 mov     edx, [ebp+arg_0]
.text:0001E6C7                 mov     dword ptr [edx+118h], 3
.text:0001E6D1                 mov     eax, [ebp+arg_0]
.text:0001E6D4                 cmp     dword ptr [eax+11Ch], 0
.text:0001E6DB                 jz      short loc_1E6FD
.text:0001E6DD                 mov     ecx, [ebp+arg_0]
.text:0001E6E0                 mov     edx, [ecx+0F4h]
.text:0001E6E6                 push    edx
.text:0001E6E7                 mov     eax, [ebp+arg_0]
.text:0001E6EA                 mov     ecx, [eax+0F0h]
.text:0001E6F0                 push    ecx
.text:0001E6F1                 mov     edx, [ebp+arg_0]
.text:0001E6F4                 push    edx
.text:0001E6F5                 call    _ssh_size
.text:0001E6FA                 add     esp, 0Ch
.text:0001E6FD
.text:0001E6FD loc_1E6FD:                              ; CODE XREF: _do_ssh1_connection+823j
.text:0001E6FD                 mov     eax, [ebp+arg_0]
.text:0001E700                 cmp     dword ptr [eax+120h], 0
.text:0001E707                 jz      short loc_1E717
.text:0001E709                 push    0Ch
.text:0001E70B                 mov     ecx, [ebp+arg_0]
.text:0001E70E                 push    ecx
.text:0001E70F                 call    _ssh_special
.text:0001E714                 add     esp, 8
.text:0001E717
.text:0001E717 loc_1E717:                              ; CODE XREF: _do_ssh1_connection+84Fj
.text:0001E717                 mov     edx, [ebp+arg_0]
.text:0001E71A                 cmp     dword ptr [edx+14h], 0
.text:0001E71E                 jz      short loc_1E735
.text:0001E720                 push    0
.text:0001E722                 push    0
.text:0001E724                 push    0
.text:0001E726                 mov     eax, [ebp+arg_0]
.text:0001E729                 mov     ecx, [eax+14h]
.text:0001E72C                 push    ecx
.text:0001E72D                 call    _ldisc_send
.text:0001E732                 add     esp, 10h
.text:0001E735
.text:0001E735 loc_1E735:                              ; CODE XREF: _do_ssh1_connection+866j
.text:0001E735                 mov     edx, [ebp+arg_0]
.text:0001E738                 mov     dword ptr [edx+0D8h], 1
.text:0001E742                 push    offset _ssh_channelcmp
.text:0001E747                 call    _newtree234
.text:0001E74C                 add     esp, 4
.text:0001E74F                 mov     ecx, [ebp+arg_0]
.text:0001E752                 mov     [ecx+0F8h], eax
.text:0001E758
.text:0001E758 loc_1E758:                              ; CODE XREF: _do_ssh1_connection:loc_1E81Dj
.text:0001E758                 mov     edx, 1
.text:0001E75D                 test    edx, edx
.text:0001E75F                 jz      loc_1E822
.text:0001E765
.text:0001E765 loc_1E765:                              ; CODE XREF: _do_ssh1_connection+8BDj
.text:0001E765                 mov     eax, [ebp+var_4]
.text:0001E768                 mov     dword ptr [eax], 16D0h
.text:0001E76E                 jmp     loc_1E82B
.text:0001E773 ; ---------------------------------------------------------------------------
.text:0001E773
.text:0001E773 loc_1E773:                              ; CODE XREF: _do_ssh1_connection+83j
.text:0001E773                 xor     ecx, ecx
.text:0001E775                 jnz     short loc_1E765
.text:0001E777                 cmp     [ebp+arg_C], 0
.text:0001E77B                 jz      short loc_1E7C5
.text:0001E77D                 mov     edx, [ebp+arg_C]
.text:0001E780                 cmp     dword ptr [edx+8], 0Eh
.text:0001E784                 jnz     short loc_1E788
.text:0001E786                 jmp     short loc_1E7C3
.text:0001E788 ; ---------------------------------------------------------------------------
.text:0001E788
.text:0001E788 loc_1E788:                              ; CODE XREF: _do_ssh1_connection+8CCj
.text:0001E788                 mov     eax, [ebp+arg_C]
.text:0001E78B                 cmp     dword ptr [eax+8], 0Fh
.text:0001E78F                 jnz     short loc_1E793
.text:0001E791                 jmp     short loc_1E7C3
.text:0001E793 ; ---------------------------------------------------------------------------
.text:0001E793
.text:0001E793 loc_1E793:                              ; CODE XREF: _do_ssh1_connection+8D7j
.text:0001E793                 mov     ecx, [ebp+arg_C]
.text:0001E796                 mov     edx, [ecx+8]
.text:0001E799                 push    edx
.text:0001E79A                 push    offset $SG91378 ; "Strange packet received: type %d"
.text:0001E79F                 call    _dupprintf
.text:0001E7A4                 add     esp, 8
.text:0001E7A7                 push    eax
.text:0001E7A8                 mov     eax, [ebp+arg_0]
.text:0001E7AB                 push    eax
.text:0001E7AC                 call    _bomb_out
.text:0001E7B1                 add     esp, 8
.text:0001E7B4
.text:0001E7B4 loc_1E7B4:                              ; CODE XREF: _do_ssh1_connection+909j
.text:0001E7B4                 mov     ecx, [ebp+var_4]
.text:0001E7B7                 mov     dword ptr [ecx], 0
.text:0001E7BD                 jmp     short loc_1E82B
.text:0001E7BF ; ---------------------------------------------------------------------------
.text:0001E7BF                 xor     edx, edx
.text:0001E7C1                 jnz     short loc_1E7B4
.text:0001E7C3
.text:0001E7C3 loc_1E7C3:                              ; CODE XREF: _do_ssh1_connection+8CEj
.text:0001E7C3                                         ; _do_ssh1_connection+8D9j
.text:0001E7C3                 jmp     short loc_1E81D
.text:0001E7C5 ; ---------------------------------------------------------------------------
.text:0001E7C5
.text:0001E7C5 loc_1E7C5:                              ; CODE XREF: _do_ssh1_connection+8C3j
.text:0001E7C5                                         ; _do_ssh1_connection+963j
.text:0001E7C5                 cmp     [ebp+arg_8], 0
.text:0001E7C9                 jle     short loc_1E81D
.text:0001E7CB                 cmp     [ebp+arg_8], 200h
.text:0001E7D2                 jge     short loc_1E7DC
.text:0001E7D4                 mov     eax, [ebp+arg_8]
.text:0001E7D7                 mov     [ebp+var_18], eax
.text:0001E7DA                 jmp     short loc_1E7E3
.text:0001E7DC ; ---------------------------------------------------------------------------
.text:0001E7DC
.text:0001E7DC loc_1E7DC:                              ; CODE XREF: _do_ssh1_connection+91Aj
.text:0001E7DC                 mov     [ebp+var_18], 200h
.text:0001E7E3
.text:0001E7E3 loc_1E7E3:                              ; CODE XREF: _do_ssh1_connection+922j
.text:0001E7E3                 mov     ecx, [ebp+var_18]
.text:0001E7E6                 mov     [ebp+var_10], ecx
.text:0001E7E9                 push    0
.text:0001E7EB                 mov     edx, [ebp+var_10]
.text:0001E7EE                 push    edx
.text:0001E7EF                 mov     eax, [ebp+arg_4]
.text:0001E7F2                 push    eax
.text:0001E7F3                 push    3
.text:0001E7F5                 mov     ecx, [ebp+var_10]
.text:0001E7F8                 push    ecx
.text:0001E7F9                 push    1
.text:0001E7FB                 push    10h
.text:0001E7FD                 mov     edx, [ebp+arg_0]
.text:0001E800                 push    edx
.text:0001E801                 call    _send_packet
.text:0001E806                 add     esp, 20h
.text:0001E809                 mov     eax, [ebp+arg_4]
.text:0001E80C                 add     eax, [ebp+var_10]
.text:0001E80F                 mov     [ebp+arg_4], eax
.text:0001E812                 mov     ecx, [ebp+arg_8]
.text:0001E815                 sub     ecx, [ebp+var_10]
.text:0001E818                 mov     [ebp+arg_8], ecx
.text:0001E81B                 jmp     short loc_1E7C5
.text:0001E81D ; ---------------------------------------------------------------------------
.text:0001E81D
.text:0001E81D loc_1E81D:                              ; CODE XREF: _do_ssh1_connection:loc_1E7C3j
.text:0001E81D                                         ; _do_ssh1_connection+911j
.text:0001E81D                 jmp     loc_1E758
.text:0001E822 ; ---------------------------------------------------------------------------
.text:0001E822
.text:0001E822 loc_1E822:                              ; CODE XREF: _do_ssh1_connection+6Aj
.text:0001E822                                         ; _do_ssh1_connection+89j ...
.text:0001E822                 mov     edx, [ebp+var_4]
.text:0001E825                 mov     dword ptr [edx], 0
.text:0001E82B
.text:0001E82B loc_1E82B:                              ; CODE XREF: _do_ssh1_connection+144j
.text:0001E82B                                         ; _do_ssh1_connection+188j ...
.text:0001E82B                 add     esp, 18h
.text:0001E82E                 cmp     ebp, esp
.text:0001E830                 call    __RTC_CheckEsp
.text:0001E835                 mov     esp, ebp
.text:0001E837                 pop     ebp
.text:0001E838                 retn
.text:0001E838 _do_ssh1_connection endp
.text:0001E838
.text:0001E838 ; ---------------------------------------------------------------------------
.text:0001E839                 db 0Fh dup(0CCh)
.text:0001E848
.text:0001E848 ; =============== S U B R O U T I N E =======================================
.text:0001E848
.text:0001E848 ; Attributes: bp-based frame
.text:0001E848
.text:0001E848 _ssh1_smsg_stdout_stderr_data proc near ; DATA XREF: _do_ssh1_connection+91o
.text:0001E848
.text:0001E848 var_1C          = dword ptr -1Ch
.text:0001E848 var_18          = dword ptr -18h
.text:0001E848 var_14          = dword ptr -14h
.text:0001E848 var_10          = dword ptr -10h
.text:0001E848 var_C           = dword ptr -0Ch
.text:0001E848 var_8           = dword ptr -8
.text:0001E848 var_4           = dword ptr -4
.text:0001E848 arg_0           = dword ptr  8
.text:0001E848 arg_4           = dword ptr  0Ch
.text:0001E848
.text:0001E848                 push    ebp
.text:0001E849                 mov     ebp, esp
.text:0001E84B                 sub     esp, 1Ch
.text:0001E84E                 mov     eax, 0CCCCCCCCh
.text:0001E853                 mov     [ebp+var_1C], eax
.text:0001E856                 mov     [ebp+var_18], eax
.text:0001E859                 mov     [ebp+var_14], eax
.text:0001E85C                 mov     [ebp+var_10], eax
.text:0001E85F                 mov     [ebp+var_C], eax
.text:0001E862                 mov     [ebp+var_8], eax
.text:0001E865                 mov     [ebp+var_4], eax
.text:0001E868                 lea     eax, [ebp+var_14]
.text:0001E86B                 push    eax
.text:0001E86C                 lea     ecx, [ebp+var_8]
.text:0001E86F                 push    ecx
.text:0001E870                 mov     edx, [ebp+arg_4]
.text:0001E873                 push    edx
.text:0001E874                 call    _ssh_pkt_getstring
.text:0001E879                 add     esp, 0Ch
.text:0001E87C                 cmp     [ebp+var_8], 0
.text:0001E880                 jnz     short loc_1E89E
.text:0001E882                 push    offset $SG91063 ; "Incoming terminal data packet was badly"...
.text:0001E887                 call    _dupprintf
.text:0001E88C                 add     esp, 4
.text:0001E88F                 push    eax
.text:0001E890                 mov     eax, [ebp+arg_0]
.text:0001E893                 push    eax
.text:0001E894                 call    _bomb_out
.text:0001E899                 add     esp, 8
.text:0001E89C                 jmp     short loc_1E8F8
.text:0001E89E ; ---------------------------------------------------------------------------
.text:0001E89E
.text:0001E89E loc_1E89E:                              ; CODE XREF: _ssh1_smsg_stdout_stderr_data+38j
.text:0001E89E                 mov     ecx, [ebp+var_14]
.text:0001E8A1                 push    ecx
.text:0001E8A2                 mov     edx, [ebp+var_8]
.text:0001E8A5                 push    edx
.text:0001E8A6                 mov     eax, [ebp+arg_4]
.text:0001E8A9                 xor     ecx, ecx
.text:0001E8AB                 cmp     dword ptr [eax+8], 12h
.text:0001E8AF                 setz    cl
.text:0001E8B2                 push    ecx
.text:0001E8B3                 mov     edx, [ebp+arg_0]
.text:0001E8B6                 mov     eax, [edx+0E4h]
.text:0001E8BC                 push    eax
.text:0001E8BD                 call    _from_backend
.text:0001E8C2                 add     esp, 10h
.text:0001E8C5                 mov     [ebp+var_1C], eax
.text:0001E8C8                 mov     ecx, [ebp+arg_0]
.text:0001E8CB                 cmp     dword ptr [ecx+17Ch], 0
.text:0001E8D2                 jnz     short loc_1E8F8
.text:0001E8D4                 cmp     [ebp+var_1C], 8000h
.text:0001E8DB                 jle     short loc_1E8F8
.text:0001E8DD                 mov     edx, [ebp+arg_0]
.text:0001E8E0                 mov     dword ptr [edx+17Ch], 1
.text:0001E8EA                 push    1
.text:0001E8EC                 mov     eax, [ebp+arg_0]
.text:0001E8EF                 push    eax
.text:0001E8F0                 call    _ssh_throttle_conn
.text:0001E8F5                 add     esp, 8
.text:0001E8F8
.text:0001E8F8 loc_1E8F8:                              ; CODE XREF: _ssh1_smsg_stdout_stderr_data+54j
.text:0001E8F8                                         ; _ssh1_smsg_stdout_stderr_data+8Aj ...
.text:0001E8F8                 push    edx
.text:0001E8F9                 mov     ecx, ebp
.text:0001E8FB                 push    eax
.text:0001E8FC                 lea     edx, $LN8_10
.text:0001E902                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0001E907                 pop     eax
.text:0001E908                 pop     edx
.text:0001E909                 add     esp, 1Ch
.text:0001E90C                 cmp     ebp, esp
.text:0001E90E                 call    __RTC_CheckEsp
.text:0001E913                 mov     esp, ebp
.text:0001E915                 pop     ebp
.text:0001E916                 retn
.text:0001E916 _ssh1_smsg_stdout_stderr_data endp
.text:0001E916
.text:0001E916 ; ---------------------------------------------------------------------------
.text:0001E917                 align 4
.text:0001E918 $LN8_10         dd 2                    ; DATA XREF: _ssh1_smsg_stdout_stderr_data+B4o
.text:0001E91C                 dd offset $LN7_8
.text:0001E920 $LN7_8          dd 0FFFFFFF8h, 4        ; DATA XREF: .text:0001E91Co
.text:0001E928                 dd offset $LN5_13       ; "string"
.text:0001E92C                 dd 0FFFFFFECh, 4
.text:0001E934                 dd offset $LN6_9        ; "stringlen"
.text:0001E938 $LN6_9          db 'stringlen',0        ; DATA XREF: .text:0001E934o
.text:0001E942 $LN5_13         db 'string',0           ; DATA XREF: .text:0001E928o
.text:0001E949                 db 0Fh dup(0CCh)
.text:0001E958
.text:0001E958 ; =============== S U B R O U T I N E =======================================
.text:0001E958
.text:0001E958 ; Attributes: bp-based frame
.text:0001E958
.text:0001E958 _ssh1_smsg_x11_open proc near           ; DATA XREF: _do_ssh1_connection+3D2o
.text:0001E958
.text:0001E958 var_8           = dword ptr -8
.text:0001E958 var_4           = dword ptr -4
.text:0001E958 arg_0           = dword ptr  8
.text:0001E958 arg_4           = dword ptr  0Ch
.text:0001E958
.text:0001E958                 push    ebp
.text:0001E959                 mov     ebp, esp
.text:0001E95B                 sub     esp, 8
.text:0001E95E                 mov     [ebp+var_8], 0CCCCCCCCh
.text:0001E965                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0001E96C                 mov     eax, [ebp+arg_4]
.text:0001E96F                 push    eax
.text:0001E970                 call    _ssh_pkt_getuint32
.text:0001E975                 add     esp, 4
.text:0001E978                 mov     [ebp+var_8], eax
.text:0001E97B                 push    offset $SG91073 ; "Received X11 connect request"
.text:0001E980                 mov     ecx, [ebp+arg_0]
.text:0001E983                 mov     edx, [ecx+0E4h]
.text:0001E989                 push    edx
.text:0001E98A                 call    _logevent
.text:0001E98F                 add     esp, 8
.text:0001E992                 mov     eax, [ebp+arg_0]
.text:0001E995                 cmp     dword ptr [eax+4Ch], 0
.text:0001E999                 jnz     short loc_1E9CD
.text:0001E99B                 push    0
.text:0001E99D                 mov     ecx, [ebp+var_8]
.text:0001E9A0                 push    ecx
.text:0001E9A1                 push    1
.text:0001E9A3                 push    16h
.text:0001E9A5                 mov     edx, [ebp+arg_0]
.text:0001E9A8                 push    edx
.text:0001E9A9                 call    _send_packet
.text:0001E9AE                 add     esp, 14h
.text:0001E9B1                 push    offset $SG91075 ; "Rejected X11 connect request"
.text:0001E9B6                 mov     eax, [ebp+arg_0]
.text:0001E9B9                 mov     ecx, [eax+0E4h]
.text:0001E9BF                 push    ecx
.text:0001E9C0                 call    _logevent
.text:0001E9C5                 add     esp, 8
.text:0001E9C8                 jmp     loc_1EAA0
.text:0001E9CD ; ---------------------------------------------------------------------------
.text:0001E9CD
.text:0001E9CD loc_1E9CD:                              ; CODE XREF: _ssh1_smsg_x11_open+41j
.text:0001E9CD                 push    60h ; '`'
.text:0001E9CF                 push    1
.text:0001E9D1                 call    _safemalloc
.text:0001E9D6                 add     esp, 8
.text:0001E9D9                 mov     [ebp+var_4], eax
.text:0001E9DC                 mov     edx, [ebp+var_4]
.text:0001E9DF                 mov     eax, [ebp+arg_0]
.text:0001E9E2                 mov     [edx], eax
.text:0001E9E4                 push    0FFFFFFFFh
.text:0001E9E6                 push    0
.text:0001E9E8                 mov     ecx, [ebp+var_4]
.text:0001E9EB                 push    ecx
.text:0001E9EC                 mov     edx, [ebp+arg_0]
.text:0001E9EF                 mov     eax, [edx+168h]
.text:0001E9F5                 push    eax
.text:0001E9F6                 call    _x11_init
.text:0001E9FB                 add     esp, 10h
.text:0001E9FE                 mov     ecx, [ebp+var_4]
.text:0001EA01                 mov     [ecx+4Ch], eax
.text:0001EA04                 mov     edx, [ebp+var_4]
.text:0001EA07                 mov     eax, [ebp+var_8]
.text:0001EA0A                 mov     [edx+4], eax
.text:0001EA0D                 mov     ecx, [ebp+var_4]
.text:0001EA10                 mov     dword ptr [ecx+10h], 0
.text:0001EA17                 mov     edx, [ebp+arg_0]
.text:0001EA1A                 push    edx
.text:0001EA1B                 call    _alloc_channel_id
.text:0001EA20                 add     esp, 4
.text:0001EA23                 mov     ecx, [ebp+var_4]
.text:0001EA26                 mov     [ecx+8], eax
.text:0001EA29                 mov     edx, [ebp+var_4]
.text:0001EA2C                 mov     dword ptr [edx+14h], 0
.text:0001EA33                 mov     eax, [ebp+var_4]
.text:0001EA36                 mov     dword ptr [eax+18h], 0
.text:0001EA3D                 mov     ecx, [ebp+var_4]
.text:0001EA40                 mov     dword ptr [ecx+1Ch], 0
.text:0001EA47                 mov     edx, [ebp+var_4]
.text:0001EA4A                 mov     dword ptr [edx+0Ch], 1
.text:0001EA51                 mov     eax, [ebp+var_4]
.text:0001EA54                 push    eax
.text:0001EA55                 mov     ecx, [ebp+arg_0]
.text:0001EA58                 mov     edx, [ecx+0F8h]
.text:0001EA5E                 push    edx
.text:0001EA5F                 call    _add234
.text:0001EA64                 add     esp, 8
.text:0001EA67                 push    0
.text:0001EA69                 mov     eax, [ebp+var_4]
.text:0001EA6C                 mov     ecx, [eax+8]
.text:0001EA6F                 push    ecx
.text:0001EA70                 push    1
.text:0001EA72                 mov     edx, [ebp+var_4]
.text:0001EA75                 mov     eax, [edx+4]
.text:0001EA78                 push    eax
.text:0001EA79                 push    1
.text:0001EA7B                 push    15h
.text:0001EA7D                 mov     ecx, [ebp+arg_0]
.text:0001EA80                 push    ecx
.text:0001EA81                 call    _send_packet
.text:0001EA86                 add     esp, 1Ch
.text:0001EA89                 push    offset $SG91080 ; "Opened X11 forward channel"
.text:0001EA8E                 mov     edx, [ebp+arg_0]
.text:0001EA91                 mov     eax, [edx+0E4h]
.text:0001EA97                 push    eax
.text:0001EA98                 call    _logevent
.text:0001EA9D                 add     esp, 8
.text:0001EAA0
.text:0001EAA0 loc_1EAA0:                              ; CODE XREF: _ssh1_smsg_x11_open+70j
.text:0001EAA0                 add     esp, 8
.text:0001EAA3                 cmp     ebp, esp
.text:0001EAA5                 call    __RTC_CheckEsp
.text:0001EAAA                 mov     esp, ebp
.text:0001EAAC                 pop     ebp
.text:0001EAAD                 retn
.text:0001EAAD _ssh1_smsg_x11_open endp
.text:0001EAAD
.text:0001EAAD ; ---------------------------------------------------------------------------
.text:0001EAAE                 db 0Ah dup(0CCh)
.text:0001EAB8
.text:0001EAB8 ; =============== S U B R O U T I N E =======================================
.text:0001EAB8
.text:0001EAB8 ; Attributes: bp-based frame
.text:0001EAB8
.text:0001EAB8 _ssh1_smsg_agent_open proc near         ; DATA XREF: _do_ssh1_connection+1D9o
.text:0001EAB8
.text:0001EAB8 var_8           = dword ptr -8
.text:0001EAB8 var_4           = dword ptr -4
.text:0001EAB8 arg_0           = dword ptr  8
.text:0001EAB8 arg_4           = dword ptr  0Ch
.text:0001EAB8
.text:0001EAB8                 push    ebp
.text:0001EAB9                 mov     ebp, esp
.text:0001EABB                 sub     esp, 8
.text:0001EABE                 mov     [ebp+var_8], 0CCCCCCCCh
.text:0001EAC5                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0001EACC                 mov     eax, [ebp+arg_4]
.text:0001EACF                 push    eax
.text:0001EAD0                 call    _ssh_pkt_getuint32
.text:0001EAD5                 add     esp, 4
.text:0001EAD8                 mov     [ebp+var_8], eax
.text:0001EADB                 mov     ecx, [ebp+arg_0]
.text:0001EADE                 cmp     dword ptr [ecx+48h], 0
.text:0001EAE2                 jnz     short loc_1EAFF
.text:0001EAE4                 push    0
.text:0001EAE6                 mov     edx, [ebp+var_8]
.text:0001EAE9                 push    edx
.text:0001EAEA                 push    1
.text:0001EAEC                 push    16h
.text:0001EAEE                 mov     eax, [ebp+arg_0]
.text:0001EAF1                 push    eax
.text:0001EAF2                 call    _send_packet
.text:0001EAF7                 add     esp, 14h
.text:0001EAFA                 jmp     loc_1EBB9
.text:0001EAFF ; ---------------------------------------------------------------------------
.text:0001EAFF
.text:0001EAFF loc_1EAFF:                              ; CODE XREF: _ssh1_smsg_agent_open+2Aj
.text:0001EAFF                 push    60h ; '`'
.text:0001EB01                 push    1
.text:0001EB03                 call    _safemalloc
.text:0001EB08                 add     esp, 8
.text:0001EB0B                 mov     [ebp+var_4], eax
.text:0001EB0E                 mov     ecx, [ebp+var_4]
.text:0001EB11                 mov     edx, [ebp+arg_0]
.text:0001EB14                 mov     [ecx], edx
.text:0001EB16                 mov     eax, [ebp+var_4]
.text:0001EB19                 mov     ecx, [ebp+var_8]
.text:0001EB1C                 mov     [eax+4], ecx
.text:0001EB1F                 mov     edx, [ebp+var_4]
.text:0001EB22                 mov     dword ptr [edx+10h], 0
.text:0001EB29                 mov     eax, [ebp+arg_0]
.text:0001EB2C                 push    eax
.text:0001EB2D                 call    _alloc_channel_id
.text:0001EB32                 add     esp, 4
.text:0001EB35                 mov     ecx, [ebp+var_4]
.text:0001EB38                 mov     [ecx+8], eax
.text:0001EB3B                 mov     edx, [ebp+var_4]
.text:0001EB3E                 mov     dword ptr [edx+14h], 0
.text:0001EB45                 mov     eax, [ebp+var_4]
.text:0001EB48                 mov     dword ptr [eax+18h], 0
.text:0001EB4F                 mov     ecx, [ebp+var_4]
.text:0001EB52                 mov     dword ptr [ecx+1Ch], 0
.text:0001EB59                 mov     edx, [ebp+var_4]
.text:0001EB5C                 mov     dword ptr [edx+0Ch], 2
.text:0001EB63                 mov     eax, [ebp+var_4]
.text:0001EB66                 mov     dword ptr [eax+54h], 0
.text:0001EB6D                 mov     ecx, [ebp+var_4]
.text:0001EB70                 mov     dword ptr [ecx+4Ch], 0
.text:0001EB77                 mov     edx, [ebp+var_4]
.text:0001EB7A                 mov     dword ptr [edx+5Ch], 0
.text:0001EB81                 mov     eax, [ebp+var_4]
.text:0001EB84                 push    eax
.text:0001EB85                 mov     ecx, [ebp+arg_0]
.text:0001EB88                 mov     edx, [ecx+0F8h]
.text:0001EB8E                 push    edx
.text:0001EB8F                 call    _add234
.text:0001EB94                 add     esp, 8
.text:0001EB97                 push    0
.text:0001EB99                 mov     eax, [ebp+var_4]
.text:0001EB9C                 mov     ecx, [eax+8]
.text:0001EB9F                 push    ecx
.text:0001EBA0                 push    1
.text:0001EBA2                 mov     edx, [ebp+var_4]
.text:0001EBA5                 mov     eax, [edx+4]
.text:0001EBA8                 push    eax
.text:0001EBA9                 push    1
.text:0001EBAB                 push    15h
.text:0001EBAD                 mov     ecx, [ebp+arg_0]
.text:0001EBB0                 push    ecx
.text:0001EBB1                 call    _send_packet
.text:0001EBB6                 add     esp, 1Ch
.text:0001EBB9
.text:0001EBB9 loc_1EBB9:                              ; CODE XREF: _ssh1_smsg_agent_open+42j
.text:0001EBB9                 add     esp, 8
.text:0001EBBC                 cmp     ebp, esp
.text:0001EBBE                 call    __RTC_CheckEsp
.text:0001EBC3                 mov     esp, ebp
.text:0001EBC5                 pop     ebp
.text:0001EBC6                 retn
.text:0001EBC6 _ssh1_smsg_agent_open endp
.text:0001EBC6
.text:0001EBC6 ; ---------------------------------------------------------------------------
.text:0001EBC7                 align 4
.text:0001EBC8
.text:0001EBC8 ; =============== S U B R O U T I N E =======================================
.text:0001EBC8
.text:0001EBC8 ; Attributes: bp-based frame
.text:0001EBC8
.text:0001EBC8 _ssh1_msg_port_open proc near           ; DATA XREF: _do_ssh1_connection+3F5o
.text:0001EBC8
.text:0001EBC8 var_50          = dword ptr -50h
.text:0001EBC8 var_4C          = dword ptr -4Ch
.text:0001EBC8 var_44          = dword ptr -44h
.text:0001EBC8 var_3C          = dword ptr -3Ch
.text:0001EBC8 var_34          = dword ptr -34h
.text:0001EBC8 var_2C          = dword ptr -2Ch
.text:0001EBC8 var_28          = dword ptr -28h
.text:0001EBC8 var_20          = byte ptr -20h
.text:0001EBC8 var_1C          = dword ptr -1Ch
.text:0001EBC8 var_14          = dword ptr -14h
.text:0001EBC8 arg_0           = dword ptr  8
.text:0001EBC8 arg_4           = dword ptr  0Ch
.text:0001EBC8
.text:0001EBC8                 push    ebp
.text:0001EBC9                 mov     ebp, esp
.text:0001EBCB                 sub     esp, 50h
.text:0001EBCE                 push    edi
.text:0001EBCF                 lea     edi, [ebp+var_50]
.text:0001EBD2                 mov     ecx, 14h
.text:0001EBD7                 mov     eax, 0CCCCCCCCh
.text:0001EBDC                 rep stosd
.text:0001EBDE                 mov     eax, [ebp+arg_4]
.text:0001EBE1                 push    eax
.text:0001EBE2                 call    _ssh_pkt_getuint32
.text:0001EBE7                 add     esp, 4
.text:0001EBEA                 mov     [ebp+var_2C], eax
.text:0001EBED                 lea     ecx, [ebp+var_34]
.text:0001EBF0                 push    ecx
.text:0001EBF1                 lea     edx, [ebp+var_44]
.text:0001EBF4                 push    edx
.text:0001EBF5                 mov     eax, [ebp+arg_4]
.text:0001EBF8                 push    eax
.text:0001EBF9                 call    _ssh_pkt_getstring
.text:0001EBFE                 add     esp, 0Ch
.text:0001EC01                 mov     ecx, [ebp+arg_4]
.text:0001EC04                 push    ecx
.text:0001EC05                 call    _ssh_pkt_getuint32
.text:0001EC0A                 add     esp, 4
.text:0001EC0D                 mov     [ebp+var_3C], eax
.text:0001EC10                 mov     edx, [ebp+var_44]
.text:0001EC13                 push    edx
.text:0001EC14                 mov     eax, [ebp+var_34]
.text:0001EC17                 push    eax
.text:0001EC18                 push    offset $SG91107 ; "%.*s"
.text:0001EC1D                 call    _dupprintf
.text:0001EC22                 add     esp, 0Ch
.text:0001EC25                 mov     [ebp+var_14], eax
.text:0001EC28                 mov     ecx, [ebp+var_3C]
.text:0001EC2B                 mov     [ebp+var_1C], ecx
.text:0001EC2E                 push    0
.text:0001EC30                 lea     edx, [ebp+var_20]
.text:0001EC33                 push    edx
.text:0001EC34                 mov     eax, [ebp+arg_0]
.text:0001EC37                 mov     ecx, [eax+110h]
.text:0001EC3D                 push    ecx
.text:0001EC3E                 call    _find234
.text:0001EC43                 add     esp, 0Ch
.text:0001EC46                 mov     [ebp+var_28], eax
.text:0001EC49                 cmp     [ebp+var_28], 0
.text:0001EC4D                 jnz     short loc_1EC83
.text:0001EC4F                 mov     edx, [ebp+var_3C]
.text:0001EC52                 push    edx
.text:0001EC53                 mov     eax, [ebp+var_14]
.text:0001EC56                 push    eax
.text:0001EC57                 push    offset $SG91111 ; "Rejected remote port open request for %"...
.text:0001EC5C                 mov     ecx, [ebp+arg_0]
.text:0001EC5F                 push    ecx
.text:0001EC60                 call    _logeventf
.text:0001EC65                 add     esp, 10h
.text:0001EC68                 push    0
.text:0001EC6A                 mov     edx, [ebp+var_2C]
.text:0001EC6D                 push    edx
.text:0001EC6E                 push    1
.text:0001EC70                 push    16h
.text:0001EC72                 mov     eax, [ebp+arg_0]
.text:0001EC75                 push    eax
.text:0001EC76                 call    _send_packet
.text:0001EC7B                 add     esp, 14h
.text:0001EC7E                 jmp     loc_1EDCF
.text:0001EC83 ; ---------------------------------------------------------------------------
.text:0001EC83
.text:0001EC83 loc_1EC83:                              ; CODE XREF: _ssh1_msg_port_open+85j
.text:0001EC83                 push    60h ; '`'
.text:0001EC85                 push    1
.text:0001EC87                 call    _safemalloc
.text:0001EC8C                 add     esp, 8
.text:0001EC8F                 mov     [ebp+var_50], eax
.text:0001EC92                 mov     ecx, [ebp+var_50]
.text:0001EC95                 mov     edx, [ebp+arg_0]
.text:0001EC98                 mov     [ecx], edx
.text:0001EC9A                 mov     eax, [ebp+var_3C]
.text:0001EC9D                 push    eax
.text:0001EC9E                 mov     ecx, [ebp+var_14]
.text:0001ECA1                 push    ecx
.text:0001ECA2                 push    offset $SG91116 ; "Received remote port open request for %"...
.text:0001ECA7                 mov     edx, [ebp+arg_0]
.text:0001ECAA                 push    edx
.text:0001ECAB                 call    _logeventf
.text:0001ECB0                 add     esp, 10h
.text:0001ECB3                 mov     eax, [ebp+var_28]
.text:0001ECB6                 mov     ecx, [eax+18h]
.text:0001ECB9                 mov     edx, [ecx+24h]
.text:0001ECBC                 push    edx
.text:0001ECBD                 mov     eax, [ebp+arg_0]
.text:0001ECC0                 mov     ecx, [eax+21Ch]
.text:0001ECC6                 push    ecx
.text:0001ECC7                 mov     edx, [ebp+var_50]
.text:0001ECCA                 push    edx
.text:0001ECCB                 mov     eax, [ebp+var_3C]
.text:0001ECCE                 push    eax
.text:0001ECCF                 mov     ecx, [ebp+var_14]
.text:0001ECD2                 push    ecx
.text:0001ECD3                 mov     edx, [ebp+var_50]
.text:0001ECD6                 add     edx, 4Ch ; 'L'
.text:0001ECD9                 push    edx
.text:0001ECDA                 call    _pfd_connect
.text:0001ECDF                 add     esp, 18h
.text:0001ECE2                 mov     [ebp+var_4C], eax
.text:0001ECE5                 cmp     [ebp+var_4C], 0
.text:0001ECE9                 jz      short loc_1ED33
.text:0001ECEB                 mov     eax, [ebp+var_4C]
.text:0001ECEE                 push    eax
.text:0001ECEF                 push    offset $SG91119 ; "Port open failed: %s"
.text:0001ECF4                 mov     ecx, [ebp+arg_0]
.text:0001ECF7                 push    ecx
.text:0001ECF8                 call    _logeventf
.text:0001ECFD                 add     esp, 0Ch
.text:0001ED00                 mov     edx, [ebp+var_4C]
.text:0001ED03                 push    edx
.text:0001ED04                 call    _safefree
.text:0001ED09                 add     esp, 4
.text:0001ED0C                 mov     eax, [ebp+var_50]
.text:0001ED0F                 push    eax
.text:0001ED10                 call    _safefree
.text:0001ED15                 add     esp, 4
.text:0001ED18                 push    0
.text:0001ED1A                 mov     ecx, [ebp+var_2C]
.text:0001ED1D                 push    ecx
.text:0001ED1E                 push    1
.text:0001ED20                 push    16h
.text:0001ED22                 mov     edx, [ebp+arg_0]
.text:0001ED25                 push    edx
.text:0001ED26                 call    _send_packet
.text:0001ED2B                 add     esp, 14h
.text:0001ED2E                 jmp     loc_1EDCF
.text:0001ED33 ; ---------------------------------------------------------------------------
.text:0001ED33
.text:0001ED33 loc_1ED33:                              ; CODE XREF: _ssh1_msg_port_open+121j
.text:0001ED33                 mov     eax, [ebp+var_50]
.text:0001ED36                 mov     ecx, [ebp+var_2C]
.text:0001ED39                 mov     [eax+4], ecx
.text:0001ED3C                 mov     edx, [ebp+var_50]
.text:0001ED3F                 mov     dword ptr [edx+10h], 0
.text:0001ED46                 mov     eax, [ebp+arg_0]
.text:0001ED49                 push    eax
.text:0001ED4A                 call    _alloc_channel_id
.text:0001ED4F                 add     esp, 4
.text:0001ED52                 mov     ecx, [ebp+var_50]
.text:0001ED55                 mov     [ecx+8], eax
.text:0001ED58                 mov     edx, [ebp+var_50]
.text:0001ED5B                 mov     dword ptr [edx+14h], 0
.text:0001ED62                 mov     eax, [ebp+var_50]
.text:0001ED65                 mov     dword ptr [eax+18h], 0
.text:0001ED6C                 mov     ecx, [ebp+var_50]
.text:0001ED6F                 mov     dword ptr [ecx+1Ch], 0
.text:0001ED76                 mov     edx, [ebp+var_50]
.text:0001ED79                 mov     dword ptr [edx+0Ch], 3
.text:0001ED80                 mov     eax, [ebp+var_50]
.text:0001ED83                 push    eax
.text:0001ED84                 mov     ecx, [ebp+arg_0]
.text:0001ED87                 mov     edx, [ecx+0F8h]
.text:0001ED8D                 push    edx
.text:0001ED8E                 call    _add234
.text:0001ED93                 add     esp, 8
.text:0001ED96                 push    0
.text:0001ED98                 mov     eax, [ebp+var_50]
.text:0001ED9B                 mov     ecx, [eax+8]
.text:0001ED9E                 push    ecx
.text:0001ED9F                 push    1
.text:0001EDA1                 mov     edx, [ebp+var_50]
.text:0001EDA4                 mov     eax, [edx+4]
.text:0001EDA7                 push    eax
.text:0001EDA8                 push    1
.text:0001EDAA                 push    15h
.text:0001EDAC                 mov     ecx, [ebp+arg_0]
.text:0001EDAF                 push    ecx
.text:0001EDB0                 call    _send_packet
.text:0001EDB5                 add     esp, 1Ch
.text:0001EDB8                 push    offset $SG91121 ; "Forwarded port opened successfully"
.text:0001EDBD                 mov     edx, [ebp+arg_0]
.text:0001EDC0                 mov     eax, [edx+0E4h]
.text:0001EDC6                 push    eax
.text:0001EDC7                 call    _logevent
.text:0001EDCC                 add     esp, 8
.text:0001EDCF
.text:0001EDCF loc_1EDCF:                              ; CODE XREF: _ssh1_msg_port_open+B6j
.text:0001EDCF                                         ; _ssh1_msg_port_open+166j
.text:0001EDCF                 mov     ecx, [ebp+var_14]
.text:0001EDD2                 push    ecx
.text:0001EDD3                 call    _safefree
.text:0001EDD8                 add     esp, 4
.text:0001EDDB                 push    edx
.text:0001EDDC                 mov     ecx, ebp
.text:0001EDDE                 push    eax
.text:0001EDDF                 lea     edx, $LN11_6
.text:0001EDE5                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0001EDEA                 pop     eax
.text:0001EDEB                 pop     edx
.text:0001EDEC                 pop     edi
.text:0001EDED                 add     esp, 50h
.text:0001EDF0                 cmp     ebp, esp
.text:0001EDF2                 call    __RTC_CheckEsp
.text:0001EDF7                 mov     esp, ebp
.text:0001EDF9                 pop     ebp
.text:0001EDFA                 retn
.text:0001EDFA _ssh1_msg_port_open endp
.text:0001EDFA
.text:0001EDFA ; ---------------------------------------------------------------------------
.text:0001EDFB                 align 4
.text:0001EDFC $LN11_6         dd 3                    ; DATA XREF: _ssh1_msg_port_open+217o
.text:0001EE00                 dd offset $LN10_10
.text:0001EE04 $LN10_10        dd 0FFFFFFE0h, 1Ch      ; DATA XREF: .text:0001EE00o
.text:0001EE0C                 dd offset $LN7_9        ; "pf"
.text:0001EE10                 db 0CCh
.text:0001EE11                 db 3 dup(0FFh)
.text:0001EE14                 dd 4
.text:0001EE18                 dd offset $LN8_11       ; "hostsize"
.text:0001EE1C                 dd 0FFFFFFBCh, 4
.text:0001EE24                 dd offset $LN9_9        ; "host"
.text:0001EE28 $LN9_9          db 'host',0             ; DATA XREF: .text:0001EE24o
.text:0001EE2D $LN8_11         db 'hostsize',0         ; DATA XREF: .text:0001EE18o
.text:0001EE36 $LN7_9          db 'pf',0               ; DATA XREF: .text:0001EE0Co
.text:0001EE39                 db 0Fh dup(0CCh)
.text:0001EE48
.text:0001EE48 ; =============== S U B R O U T I N E =======================================
.text:0001EE48
.text:0001EE48 ; Attributes: bp-based frame
.text:0001EE48
.text:0001EE48 _ssh1_msg_channel_open_confirmation proc near
.text:0001EE48                                         ; DATA XREF: _do_ssh1_connection+B0o
.text:0001EE48
.text:0001EE48 var_14          = dword ptr -14h
.text:0001EE48 var_10          = dword ptr -10h
.text:0001EE48 var_C           = dword ptr -0Ch
.text:0001EE48 var_8           = dword ptr -8
.text:0001EE48 var_4           = dword ptr -4
.text:0001EE48 arg_0           = dword ptr  8
.text:0001EE48 arg_4           = dword ptr  0Ch
.text:0001EE48
.text:0001EE48                 push    ebp
.text:0001EE49                 mov     ebp, esp
.text:0001EE4B                 sub     esp, 14h
.text:0001EE4E                 mov     eax, 0CCCCCCCCh
.text:0001EE53                 mov     [ebp+var_14], eax
.text:0001EE56                 mov     [ebp+var_10], eax
.text:0001EE59                 mov     [ebp+var_C], eax
.text:0001EE5C                 mov     [ebp+var_8], eax
.text:0001EE5F                 mov     [ebp+var_4], eax
.text:0001EE62                 mov     eax, [ebp+arg_4]
.text:0001EE65                 push    eax
.text:0001EE66                 call    _ssh_pkt_getuint32
.text:0001EE6B                 add     esp, 4
.text:0001EE6E                 mov     [ebp+var_8], eax
.text:0001EE71                 mov     ecx, [ebp+arg_4]
.text:0001EE74                 push    ecx
.text:0001EE75                 call    _ssh_pkt_getuint32
.text:0001EE7A                 add     esp, 4
.text:0001EE7D                 mov     [ebp+var_10], eax
.text:0001EE80                 push    offset _ssh_channelfind
.text:0001EE85                 lea     edx, [ebp+var_8]
.text:0001EE88                 push    edx
.text:0001EE89                 mov     eax, [ebp+arg_0]
.text:0001EE8C                 mov     ecx, [eax+0F8h]
.text:0001EE92                 push    ecx
.text:0001EE93                 call    _find234
.text:0001EE98                 add     esp, 0Ch
.text:0001EE9B                 mov     [ebp+var_14], eax
.text:0001EE9E                 cmp     [ebp+var_14], 0
.text:0001EEA2                 jz      short loc_1EEE3
.text:0001EEA4                 mov     edx, [ebp+var_14]
.text:0001EEA7                 cmp     dword ptr [edx+0Ch], 4
.text:0001EEAB                 jnz     short loc_1EEE3
.text:0001EEAD                 mov     eax, [ebp+var_14]
.text:0001EEB0                 mov     ecx, [ebp+var_10]
.text:0001EEB3                 mov     [eax+4], ecx
.text:0001EEB6                 mov     edx, [ebp+var_14]
.text:0001EEB9                 mov     dword ptr [edx+10h], 0
.text:0001EEC0                 mov     eax, [ebp+var_14]
.text:0001EEC3                 mov     dword ptr [eax+0Ch], 3
.text:0001EECA                 mov     ecx, [ebp+var_14]
.text:0001EECD                 mov     dword ptr [ecx+1Ch], 0
.text:0001EED4                 mov     edx, [ebp+var_14]
.text:0001EED7                 mov     eax, [edx+4Ch]
.text:0001EEDA                 push    eax
.text:0001EEDB                 call    _pfd_confirm
.text:0001EEE0                 add     esp, 4
.text:0001EEE3
.text:0001EEE3 loc_1EEE3:                              ; CODE XREF: _ssh1_msg_channel_open_confirmation+5Aj
.text:0001EEE3                                         ; _ssh1_msg_channel_open_confirmation+63j
.text:0001EEE3                 cmp     [ebp+var_14], 0
.text:0001EEE7                 jz      short loc_1EEFE
.text:0001EEE9                 mov     ecx, [ebp+var_14]
.text:0001EEEC                 cmp     dword ptr [ecx+18h], 0
.text:0001EEF0                 jz      short loc_1EEFE
.text:0001EEF2                 mov     edx, [ebp+var_14]
.text:0001EEF5                 push    edx
.text:0001EEF6                 call    _ssh_channel_try_eof
.text:0001EEFB                 add     esp, 4
.text:0001EEFE
.text:0001EEFE loc_1EEFE:                              ; CODE XREF: _ssh1_msg_channel_open_confirmation+9Fj
.text:0001EEFE                                         ; _ssh1_msg_channel_open_confirmation+A8j
.text:0001EEFE                 push    edx
.text:0001EEFF                 mov     ecx, ebp
.text:0001EF01                 push    eax
.text:0001EF02                 lea     edx, $LN7_10
.text:0001EF08                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0001EF0D                 pop     eax
.text:0001EF0E                 pop     edx
.text:0001EF0F                 add     esp, 14h
.text:0001EF12                 cmp     ebp, esp
.text:0001EF14                 call    __RTC_CheckEsp
.text:0001EF19                 mov     esp, ebp
.text:0001EF1B                 pop     ebp
.text:0001EF1C                 retn
.text:0001EF1C _ssh1_msg_channel_open_confirmation endp
.text:0001EF1C
.text:0001EF1C ; ---------------------------------------------------------------------------
.text:0001EF1D                 align 10h
.text:0001EF20 $LN7_10         dd 1                    ; DATA XREF: _ssh1_msg_channel_open_confirmation+BAo
.text:0001EF24                 dd offset $LN6_10
.text:0001EF28 $LN6_10         dd 0FFFFFFF8h, 4        ; DATA XREF: .text:0001EF24o
.text:0001EF30                 dd offset $LN5_14       ; "remoteid"
.text:0001EF34 $LN5_14         db 'remoteid',0         ; DATA XREF: .text:0001EF30o
.text:0001EF3D                 db 0Bh dup(0CCh)
.text:0001EF48
.text:0001EF48 ; =============== S U B R O U T I N E =======================================
.text:0001EF48
.text:0001EF48 ; Attributes: bp-based frame
.text:0001EF48
.text:0001EF48 _ssh1_msg_channel_open_failure proc near ; DATA XREF: _do_ssh1_connection+BDo
.text:0001EF48
.text:0001EF48 var_10          = dword ptr -10h
.text:0001EF48 var_C           = dword ptr -0Ch
.text:0001EF48 var_8           = dword ptr -8
.text:0001EF48 var_4           = dword ptr -4
.text:0001EF48 arg_0           = dword ptr  8
.text:0001EF48 arg_4           = dword ptr  0Ch
.text:0001EF48
.text:0001EF48                 push    ebp
.text:0001EF49                 mov     ebp, esp
.text:0001EF4B                 sub     esp, 10h
.text:0001EF4E                 mov     eax, 0CCCCCCCCh
.text:0001EF53                 mov     [ebp+var_10], eax
.text:0001EF56                 mov     [ebp+var_C], eax
.text:0001EF59                 mov     [ebp+var_8], eax
.text:0001EF5C                 mov     [ebp+var_4], eax
.text:0001EF5F                 mov     eax, [ebp+arg_4]
.text:0001EF62                 push    eax
.text:0001EF63                 call    _ssh_pkt_getuint32
.text:0001EF68                 add     esp, 4
.text:0001EF6B                 mov     [ebp+var_8], eax
.text:0001EF6E                 push    offset _ssh_channelfind
.text:0001EF73                 lea     ecx, [ebp+var_8]
.text:0001EF76                 push    ecx
.text:0001EF77                 mov     edx, [ebp+arg_0]
.text:0001EF7A                 mov     eax, [edx+0F8h]
.text:0001EF80                 push    eax
.text:0001EF81                 call    _find234
.text:0001EF86                 add     esp, 0Ch
.text:0001EF89                 mov     [ebp+var_10], eax
.text:0001EF8C                 cmp     [ebp+var_10], 0
.text:0001EF90                 jz      short loc_1EFE3
.text:0001EF92                 mov     ecx, [ebp+var_10]
.text:0001EF95                 cmp     dword ptr [ecx+0Ch], 4
.text:0001EF99                 jnz     short loc_1EFE3
.text:0001EF9B                 push    offset $SG91142 ; "Forwarded connection refused by server"
.text:0001EFA0                 mov     edx, [ebp+arg_0]
.text:0001EFA3                 mov     eax, [edx+0E4h]
.text:0001EFA9                 push    eax
.text:0001EFAA                 call    _logevent
.text:0001EFAF                 add     esp, 8
.text:0001EFB2                 mov     ecx, [ebp+var_10]
.text:0001EFB5                 mov     edx, [ecx+4Ch]
.text:0001EFB8                 push    edx
.text:0001EFB9                 call    _pfd_close
.text:0001EFBE                 add     esp, 4
.text:0001EFC1                 mov     eax, [ebp+var_10]
.text:0001EFC4                 push    eax
.text:0001EFC5                 mov     ecx, [ebp+arg_0]
.text:0001EFC8                 mov     edx, [ecx+0F8h]
.text:0001EFCE                 push    edx
.text:0001EFCF                 call    _del234
.text:0001EFD4                 add     esp, 8
.text:0001EFD7                 mov     eax, [ebp+var_10]
.text:0001EFDA                 push    eax
.text:0001EFDB                 call    _safefree
.text:0001EFE0                 add     esp, 4
.text:0001EFE3
.text:0001EFE3 loc_1EFE3:                              ; CODE XREF: _ssh1_msg_channel_open_failure+48j
.text:0001EFE3                                         ; _ssh1_msg_channel_open_failure+51j
.text:0001EFE3                 push    edx
.text:0001EFE4                 mov     ecx, ebp
.text:0001EFE6                 push    eax
.text:0001EFE7                 lea     edx, $LN6_11
.text:0001EFED                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0001EFF2                 pop     eax
.text:0001EFF3                 pop     edx
.text:0001EFF4                 add     esp, 10h
.text:0001EFF7                 cmp     ebp, esp
.text:0001EFF9                 call    __RTC_CheckEsp
.text:0001EFFE                 mov     esp, ebp
.text:0001F000                 pop     ebp
.text:0001F001                 retn
.text:0001F001 _ssh1_msg_channel_open_failure endp
.text:0001F001
.text:0001F001 ; ---------------------------------------------------------------------------
.text:0001F002                 align 4
.text:0001F004 $LN6_11         dd 1                    ; DATA XREF: _ssh1_msg_channel_open_failure+9Fo
.text:0001F008                 dd offset $LN5_15
.text:0001F00C $LN5_15         dd 0FFFFFFF8h, 4        ; DATA XREF: .text:0001F008o
.text:0001F014                 dd offset $LN4_12       ; "remoteid"
.text:0001F018 $LN4_12         db 'remoteid',0         ; DATA XREF: .text:0001F014o
.text:0001F021                 align 8
.text:0001F028
.text:0001F028 ; =============== S U B R O U T I N E =======================================
.text:0001F028
.text:0001F028 ; Attributes: bp-based frame
.text:0001F028
.text:0001F028 _ssh1_msg_channel_close proc near       ; DATA XREF: _do_ssh1_connection+CAo
.text:0001F028
.text:0001F028 var_20          = dword ptr -20h
.text:0001F028 var_1C          = dword ptr -1Ch
.text:0001F028 var_18          = dword ptr -18h
.text:0001F028 var_14          = dword ptr -14h
.text:0001F028 var_10          = dword ptr -10h
.text:0001F028 var_C           = dword ptr -0Ch
.text:0001F028 var_8           = dword ptr -8
.text:0001F028 var_4           = dword ptr -4
.text:0001F028 arg_0           = dword ptr  8
.text:0001F028 arg_4           = dword ptr  0Ch
.text:0001F028
.text:0001F028                 push    ebp
.text:0001F029                 mov     ebp, esp
.text:0001F02B                 sub     esp, 20h
.text:0001F02E                 mov     eax, 0CCCCCCCCh
.text:0001F033                 mov     [ebp+var_20], eax
.text:0001F036                 mov     [ebp+var_1C], eax
.text:0001F039                 mov     [ebp+var_18], eax
.text:0001F03C                 mov     [ebp+var_14], eax
.text:0001F03F                 mov     [ebp+var_10], eax
.text:0001F042                 mov     [ebp+var_C], eax
.text:0001F045                 mov     [ebp+var_8], eax
.text:0001F048                 mov     [ebp+var_4], eax
.text:0001F04B                 mov     eax, [ebp+arg_4]
.text:0001F04E                 push    eax
.text:0001F04F                 call    _ssh_pkt_getuint32
.text:0001F054                 add     esp, 4
.text:0001F057                 mov     [ebp+var_8], eax
.text:0001F05A                 push    offset _ssh_channelfind
.text:0001F05F                 lea     ecx, [ebp+var_8]
.text:0001F062                 push    ecx
.text:0001F063                 mov     edx, [ebp+arg_0]
.text:0001F066                 mov     eax, [edx+0F8h]
.text:0001F06C                 push    eax
.text:0001F06D                 call    _find234
.text:0001F072                 add     esp, 0Ch
.text:0001F075                 mov     [ebp+var_10], eax
.text:0001F078                 cmp     [ebp+var_10], 0
.text:0001F07C                 jz      loc_1F20B
.text:0001F082                 mov     ecx, [ebp+var_10]
.text:0001F085                 cmp     dword ptr [ecx+10h], 0
.text:0001F089                 jnz     loc_1F20B
.text:0001F08F                 mov     edx, [ebp+arg_4]
.text:0001F092                 cmp     dword ptr [edx+8], 18h
.text:0001F096                 jnz     loc_1F164
.text:0001F09C                 mov     eax, [ebp+var_10]
.text:0001F09F                 mov     ecx, [eax+14h]
.text:0001F0A2                 and     ecx, 4
.text:0001F0A5                 jnz     loc_1F164
.text:0001F0AB                 mov     [ebp+var_14], 0
.text:0001F0B2                 mov     edx, [ebp+var_10]
.text:0001F0B5                 mov     eax, [edx+14h]
.text:0001F0B8                 or      eax, 4
.text:0001F0BB                 mov     ecx, [ebp+var_10]
.text:0001F0BE                 mov     [ecx+14h], eax
.text:0001F0C1                 mov     edx, [ebp+var_10]
.text:0001F0C4                 mov     eax, [edx+0Ch]
.text:0001F0C7                 mov     [ebp+var_18], eax
.text:0001F0CA                 cmp     [ebp+var_18], 1
.text:0001F0CE                 jz      short loc_1F0DE
.text:0001F0D0                 cmp     [ebp+var_18], 2
.text:0001F0D4                 jz      short loc_1F124
.text:0001F0D6                 cmp     [ebp+var_18], 3
.text:0001F0DA                 jz      short loc_1F101
.text:0001F0DC                 jmp     short loc_1F12B
.text:0001F0DE ; ---------------------------------------------------------------------------
.text:0001F0DE
.text:0001F0DE loc_1F0DE:                              ; CODE XREF: _ssh1_msg_channel_close+A6j
.text:0001F0DE                 mov     ecx, [ebp+var_10]
.text:0001F0E1                 cmp     dword ptr [ecx+4Ch], 0
.text:0001F0E5                 jz      short loc_1F0F8
.text:0001F0E7                 mov     edx, [ebp+var_10]
.text:0001F0EA                 mov     eax, [edx+4Ch]
.text:0001F0ED                 push    eax
.text:0001F0EE                 call    _x11_send_eof
.text:0001F0F3                 add     esp, 4
.text:0001F0F6                 jmp     short loc_1F0FF
.text:0001F0F8 ; ---------------------------------------------------------------------------
.text:0001F0F8
.text:0001F0F8 loc_1F0F8:                              ; CODE XREF: _ssh1_msg_channel_close+BDj
.text:0001F0F8                 mov     [ebp+var_14], 1
.text:0001F0FF
.text:0001F0FF loc_1F0FF:                              ; CODE XREF: _ssh1_msg_channel_close+CEj
.text:0001F0FF                 jmp     short loc_1F12B
.text:0001F101 ; ---------------------------------------------------------------------------
.text:0001F101
.text:0001F101 loc_1F101:                              ; CODE XREF: _ssh1_msg_channel_close+B2j
.text:0001F101                 mov     ecx, [ebp+var_10]
.text:0001F104                 cmp     dword ptr [ecx+4Ch], 0
.text:0001F108                 jz      short loc_1F11B
.text:0001F10A                 mov     edx, [ebp+var_10]
.text:0001F10D                 mov     eax, [edx+4Ch]
.text:0001F110                 push    eax
.text:0001F111                 call    _pfd_send_eof
.text:0001F116                 add     esp, 4
.text:0001F119                 jmp     short loc_1F122
.text:0001F11B ; ---------------------------------------------------------------------------
.text:0001F11B
.text:0001F11B loc_1F11B:                              ; CODE XREF: _ssh1_msg_channel_close+E0j
.text:0001F11B                 mov     [ebp+var_14], 1
.text:0001F122
.text:0001F122 loc_1F122:                              ; CODE XREF: _ssh1_msg_channel_close+F1j
.text:0001F122                 jmp     short loc_1F12B
.text:0001F124 ; ---------------------------------------------------------------------------
.text:0001F124
.text:0001F124 loc_1F124:                              ; CODE XREF: _ssh1_msg_channel_close+ACj
.text:0001F124                 mov     [ebp+var_14], 1
.text:0001F12B
.text:0001F12B loc_1F12B:                              ; CODE XREF: _ssh1_msg_channel_close+B4j
.text:0001F12B                                         ; _ssh1_msg_channel_close:loc_1F0FFj ...
.text:0001F12B                 cmp     [ebp+var_14], 0
.text:0001F12F                 jz      short loc_1F164
.text:0001F131                 mov     ecx, [ebp+var_10]
.text:0001F134                 mov     edx, [ecx+14h]
.text:0001F137                 and     edx, 1
.text:0001F13A                 jnz     short loc_1F164
.text:0001F13C                 push    0
.text:0001F13E                 mov     eax, [ebp+var_10]
.text:0001F141                 mov     ecx, [eax+4]
.text:0001F144                 push    ecx
.text:0001F145                 push    1
.text:0001F147                 push    18h
.text:0001F149                 mov     edx, [ebp+arg_0]
.text:0001F14C                 push    edx
.text:0001F14D                 call    _send_packet
.text:0001F152                 add     esp, 14h
.text:0001F155                 mov     eax, [ebp+var_10]
.text:0001F158                 mov     ecx, [eax+14h]
.text:0001F15B                 or      ecx, 1
.text:0001F15E                 mov     edx, [ebp+var_10]
.text:0001F161                 mov     [edx+14h], ecx
.text:0001F164
.text:0001F164 loc_1F164:                              ; CODE XREF: _ssh1_msg_channel_close+6Ej
.text:0001F164                                         ; _ssh1_msg_channel_close+7Dj ...
.text:0001F164                 mov     eax, [ebp+arg_4]
.text:0001F167                 cmp     dword ptr [eax+8], 19h
.text:0001F16B                 jnz     short loc_1F1B0
.text:0001F16D                 mov     ecx, [ebp+var_10]
.text:0001F170                 mov     edx, [ecx+14h]
.text:0001F173                 and     edx, 8
.text:0001F176                 jnz     short loc_1F1B0
.text:0001F178                 mov     eax, [ebp+var_10]
.text:0001F17B                 mov     ecx, [eax+14h]
.text:0001F17E                 and     ecx, 1
.text:0001F181                 jnz     short loc_1F1A1
.text:0001F183                 mov     edx, [ebp+var_8]
.text:0001F186                 push    edx
.text:0001F187                 push    offset $SG91168 ; "Received CHANNEL_CLOSE_CONFIRMATION for"...
.text:0001F18C                 call    _dupprintf
.text:0001F191                 add     esp, 8
.text:0001F194                 push    eax
.text:0001F195                 mov     eax, [ebp+arg_0]
.text:0001F198                 push    eax
.text:0001F199                 call    _bomb_out
.text:0001F19E                 add     esp, 8
.text:0001F1A1
.text:0001F1A1 loc_1F1A1:                              ; CODE XREF: _ssh1_msg_channel_close+159j
.text:0001F1A1                 mov     ecx, [ebp+var_10]
.text:0001F1A4                 mov     edx, [ecx+14h]
.text:0001F1A7                 or      edx, 8
.text:0001F1AA                 mov     eax, [ebp+var_10]
.text:0001F1AD                 mov     [eax+14h], edx
.text:0001F1B0
.text:0001F1B0 loc_1F1B0:                              ; CODE XREF: _ssh1_msg_channel_close+143j
.text:0001F1B0                                         ; _ssh1_msg_channel_close+14Ej
.text:0001F1B0                 mov     ecx, [ebp+var_10]
.text:0001F1B3                 mov     edx, [ecx+14h]
.text:0001F1B6                 not     edx
.text:0001F1B8                 and     edx, 5
.text:0001F1BB                 jnz     short loc_1F1F0
.text:0001F1BD                 mov     eax, [ebp+var_10]
.text:0001F1C0                 mov     ecx, [eax+14h]
.text:0001F1C3                 and     ecx, 2
.text:0001F1C6                 jnz     short loc_1F1F0
.text:0001F1C8                 push    0
.text:0001F1CA                 mov     edx, [ebp+var_10]
.text:0001F1CD                 mov     eax, [edx+4]
.text:0001F1D0                 push    eax
.text:0001F1D1                 push    1
.text:0001F1D3                 push    19h
.text:0001F1D5                 mov     ecx, [ebp+arg_0]
.text:0001F1D8                 push    ecx
.text:0001F1D9                 call    _send_packet
.text:0001F1DE                 add     esp, 14h
.text:0001F1E1                 mov     edx, [ebp+var_10]
.text:0001F1E4                 mov     eax, [edx+14h]
.text:0001F1E7                 or      eax, 2
.text:0001F1EA                 mov     ecx, [ebp+var_10]
.text:0001F1ED                 mov     [ecx+14h], eax
.text:0001F1F0
.text:0001F1F0 loc_1F1F0:                              ; CODE XREF: _ssh1_msg_channel_close+193j
.text:0001F1F0                                         ; _ssh1_msg_channel_close+19Ej
.text:0001F1F0                 mov     edx, [ebp+var_10]
.text:0001F1F3                 mov     eax, [edx+14h]
.text:0001F1F6                 not     eax
.text:0001F1F8                 and     eax, 0Ah
.text:0001F1FB                 jnz     short loc_1F209
.text:0001F1FD                 mov     ecx, [ebp+var_10]
.text:0001F200                 push    ecx
.text:0001F201                 call    _ssh_channel_destroy
.text:0001F206                 add     esp, 4
.text:0001F209
.text:0001F209 loc_1F209:                              ; CODE XREF: _ssh1_msg_channel_close+1D3j
.text:0001F209                 jmp     short loc_1F260
.text:0001F20B ; ---------------------------------------------------------------------------
.text:0001F20B
.text:0001F20B loc_1F20B:                              ; CODE XREF: _ssh1_msg_channel_close+54j
.text:0001F20B                                         ; _ssh1_msg_channel_close+61j
.text:0001F20B                 cmp     [ebp+var_10], 0
.text:0001F20F                 jz      short loc_1F21A
.text:0001F211                 mov     [ebp+var_1C], offset $SG91172 ; "half-open"
.text:0001F218                 jmp     short loc_1F221
.text:0001F21A ; ---------------------------------------------------------------------------
.text:0001F21A
.text:0001F21A loc_1F21A:                              ; CODE XREF: _ssh1_msg_channel_close+1E7j
.text:0001F21A                 mov     [ebp+var_1C], offset $SG91173 ; "nonexistent"
.text:0001F221
.text:0001F221 loc_1F221:                              ; CODE XREF: _ssh1_msg_channel_close+1F0j
.text:0001F221                 mov     edx, [ebp+arg_4]
.text:0001F224                 cmp     dword ptr [edx+8], 18h
.text:0001F228                 jnz     short loc_1F233
.text:0001F22A                 mov     [ebp+var_20], offset $SG91174
.text:0001F231                 jmp     short loc_1F23A
.text:0001F233 ; ---------------------------------------------------------------------------
.text:0001F233
.text:0001F233 loc_1F233:                              ; CODE XREF: _ssh1_msg_channel_close+200j
.text:0001F233                 mov     [ebp+var_20], offset $SG91175 ; "_CONFIRMATION"
.text:0001F23A
.text:0001F23A loc_1F23A:                              ; CODE XREF: _ssh1_msg_channel_close+209j
.text:0001F23A                 mov     eax, [ebp+var_8]
.text:0001F23D                 push    eax
.text:0001F23E                 mov     ecx, [ebp+var_1C]
.text:0001F241                 push    ecx
.text:0001F242                 mov     edx, [ebp+var_20]
.text:0001F245                 push    edx
.text:0001F246                 push    offset $SG91176 ; "Received CHANNEL_CLOSE%s for %s channel"...
.text:0001F24B                 call    _dupprintf
.text:0001F250                 add     esp, 10h
.text:0001F253                 push    eax
.text:0001F254                 mov     eax, [ebp+arg_0]
.text:0001F257                 push    eax
.text:0001F258                 call    _bomb_out
.text:0001F25D                 add     esp, 8
.text:0001F260
.text:0001F260 loc_1F260:                              ; CODE XREF: _ssh1_msg_channel_close:loc_1F209j
.text:0001F260                 push    edx
.text:0001F261                 mov     ecx, ebp
.text:0001F263                 push    eax
.text:0001F264                 lea     edx, $LN26_1
.text:0001F26A                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0001F26F                 pop     eax
.text:0001F270                 pop     edx
.text:0001F271                 add     esp, 20h
.text:0001F274                 cmp     ebp, esp
.text:0001F276                 call    __RTC_CheckEsp
.text:0001F27B                 mov     esp, ebp
.text:0001F27D                 pop     ebp
.text:0001F27E                 retn
.text:0001F27E _ssh1_msg_channel_close endp
.text:0001F27E
.text:0001F27E ; ---------------------------------------------------------------------------
.text:0001F27F                 align 10h
.text:0001F280 $LN26_1         dd 1                    ; DATA XREF: _ssh1_msg_channel_close+23Co
.text:0001F284                 dd offset $LN25_1
.text:0001F288 $LN25_1         dd 0FFFFFFF8h, 4        ; DATA XREF: .text:0001F284o
.text:0001F290                 dd offset $LN24_2
.text:0001F294 $LN24_2         dd 0CCCC0069h           ; DATA XREF: .text:0001F290o
.text:0001F298
.text:0001F298 ; =============== S U B R O U T I N E =======================================
.text:0001F298
.text:0001F298 ; Attributes: bp-based frame
.text:0001F298
.text:0001F298 _ssh1_msg_channel_data proc near        ; DATA XREF: _do_ssh1_connection+E9o
.text:0001F298
.text:0001F298 var_58          = dword ptr -58h
.text:0001F298 var_54          = dword ptr -54h
.text:0001F298 var_50          = dword ptr -50h
.text:0001F298 var_48          = dword ptr -48h
.text:0001F298 var_3C          = dword ptr -3Ch
.text:0001F298 var_34          = dword ptr -34h
.text:0001F298 Size            = dword ptr -30h
.text:0001F298 var_2C          = dword ptr -2Ch
.text:0001F298 var_28          = dword ptr -28h
.text:0001F298 var_20          = dword ptr -20h
.text:0001F298 Src             = dword ptr -14h
.text:0001F298 var_8           = dword ptr -8
.text:0001F298 arg_0           = dword ptr  8
.text:0001F298 arg_4           = dword ptr  0Ch
.text:0001F298
.text:0001F298                 push    ebp
.text:0001F299                 mov     ebp, esp
.text:0001F29B                 sub     esp, 58h
.text:0001F29E                 push    edi
.text:0001F29F                 lea     edi, [ebp+var_58]
.text:0001F2A2                 mov     ecx, 16h
.text:0001F2A7                 mov     eax, 0CCCCCCCCh
.text:0001F2AC                 rep stosd
.text:0001F2AE                 mov     eax, [ebp+arg_4]
.text:0001F2B1                 push    eax
.text:0001F2B2                 call    _ssh_pkt_getuint32
.text:0001F2B7                 add     esp, 4
.text:0001F2BA                 mov     [ebp+var_8], eax
.text:0001F2BD                 lea     ecx, [ebp+var_20]
.text:0001F2C0                 push    ecx
.text:0001F2C1                 lea     edx, [ebp+Src]
.text:0001F2C4                 push    edx
.text:0001F2C5                 mov     eax, [ebp+arg_4]
.text:0001F2C8                 push    eax
.text:0001F2C9                 call    _ssh_pkt_getstring
.text:0001F2CE                 add     esp, 0Ch
.text:0001F2D1                 push    offset _ssh_channelfind
.text:0001F2D6                 lea     ecx, [ebp+var_8]
.text:0001F2D9                 push    ecx
.text:0001F2DA                 mov     edx, [ebp+arg_0]
.text:0001F2DD                 mov     eax, [edx+0F8h]
.text:0001F2E3                 push    eax
.text:0001F2E4                 call    _find234
.text:0001F2E9                 add     esp, 0Ch
.text:0001F2EC                 mov     [ebp+var_28], eax
.text:0001F2EF                 cmp     [ebp+var_28], 0
.text:0001F2F3                 jz      loc_1F56E
.text:0001F2F9                 mov     [ebp+var_2C], 0
.text:0001F300                 mov     ecx, [ebp+var_28]
.text:0001F303                 mov     edx, [ecx+0Ch]
.text:0001F306                 mov     [ebp+var_50], edx
.text:0001F309                 cmp     [ebp+var_50], 1
.text:0001F30D                 jz      short loc_1F320
.text:0001F30F                 cmp     [ebp+var_50], 2
.text:0001F313                 jz      short loc_1F35E
.text:0001F315                 cmp     [ebp+var_50], 3
.text:0001F319                 jz      short loc_1F33F
.text:0001F31B                 jmp     loc_1F544
.text:0001F320 ; ---------------------------------------------------------------------------
.text:0001F320
.text:0001F320 loc_1F320:                              ; CODE XREF: _ssh1_msg_channel_data+75j
.text:0001F320                 mov     eax, [ebp+var_20]
.text:0001F323                 push    eax
.text:0001F324                 mov     ecx, [ebp+Src]
.text:0001F327                 push    ecx
.text:0001F328                 mov     edx, [ebp+var_28]
.text:0001F32B                 mov     eax, [edx+4Ch]
.text:0001F32E                 push    eax
.text:0001F32F                 call    _x11_send
.text:0001F334                 add     esp, 0Ch
.text:0001F337                 mov     [ebp+var_2C], eax
.text:0001F33A                 jmp     loc_1F544
.text:0001F33F ; ---------------------------------------------------------------------------
.text:0001F33F
.text:0001F33F loc_1F33F:                              ; CODE XREF: _ssh1_msg_channel_data+81j
.text:0001F33F                 mov     ecx, [ebp+var_20]
.text:0001F342                 push    ecx
.text:0001F343                 mov     edx, [ebp+Src]
.text:0001F346                 push    edx
.text:0001F347                 mov     eax, [ebp+var_28]
.text:0001F34A                 mov     ecx, [eax+4Ch]
.text:0001F34D                 push    ecx
.text:0001F34E                 call    _pfd_send
.text:0001F353                 add     esp, 0Ch
.text:0001F356                 mov     [ebp+var_2C], eax
.text:0001F359                 jmp     loc_1F544
.text:0001F35E ; ---------------------------------------------------------------------------
.text:0001F35E
.text:0001F35E loc_1F35E:                              ; CODE XREF: _ssh1_msg_channel_data+7Bj
.text:0001F35E                                         ; _ssh1_msg_channel_data:loc_1F538j
.text:0001F35E                 cmp     [ebp+var_20], 0
.text:0001F362                 jle     loc_1F53D
.text:0001F368                 mov     edx, [ebp+var_28]
.text:0001F36B                 cmp     dword ptr [edx+54h], 4
.text:0001F36F                 jnb     short loc_1F3DC
.text:0001F371                 mov     eax, [ebp+var_28]
.text:0001F374                 mov     ecx, 4
.text:0001F379                 sub     ecx, [eax+54h]
.text:0001F37C                 cmp     ecx, [ebp+var_20]
.text:0001F37F                 jnb     short loc_1F391
.text:0001F381                 mov     edx, [ebp+var_28]
.text:0001F384                 mov     eax, 4
.text:0001F389                 sub     eax, [edx+54h]
.text:0001F38C                 mov     [ebp+var_54], eax
.text:0001F38F                 jmp     short loc_1F397
.text:0001F391 ; ---------------------------------------------------------------------------
.text:0001F391
.text:0001F391 loc_1F391:                              ; CODE XREF: _ssh1_msg_channel_data+E7j
.text:0001F391                 mov     ecx, [ebp+var_20]
.text:0001F394                 mov     [ebp+var_54], ecx
.text:0001F397
.text:0001F397 loc_1F397:                              ; CODE XREF: _ssh1_msg_channel_data+F7j
.text:0001F397                 mov     edx, [ebp+var_54]
.text:0001F39A                 mov     [ebp+Size], edx
.text:0001F39D                 mov     eax, [ebp+Size]
.text:0001F3A0                 push    eax             ; Size
.text:0001F3A1                 mov     ecx, [ebp+Src]
.text:0001F3A4                 push    ecx             ; Src
.text:0001F3A5                 mov     edx, [ebp+var_28]
.text:0001F3A8                 mov     eax, [edx+54h]
.text:0001F3AB                 mov     ecx, [ebp+var_28]
.text:0001F3AE                 lea     edx, [ecx+eax+50h]
.text:0001F3B2                 push    edx             ; Dst
.text:0001F3B3                 call    _memcpy
.text:0001F3B8                 add     esp, 0Ch
.text:0001F3BB                 mov     eax, [ebp+Src]
.text:0001F3BE                 add     eax, [ebp+Size]
.text:0001F3C1                 mov     [ebp+Src], eax
.text:0001F3C4                 mov     ecx, [ebp+var_20]
.text:0001F3C7                 sub     ecx, [ebp+Size]
.text:0001F3CA                 mov     [ebp+var_20], ecx
.text:0001F3CD                 mov     edx, [ebp+var_28]
.text:0001F3D0                 mov     eax, [edx+54h]
.text:0001F3D3                 add     eax, [ebp+Size]
.text:0001F3D6                 mov     ecx, [ebp+var_28]
.text:0001F3D9                 mov     [ecx+54h], eax
.text:0001F3DC
.text:0001F3DC loc_1F3DC:                              ; CODE XREF: _ssh1_msg_channel_data+D7j
.text:0001F3DC                 mov     edx, [ebp+var_28]
.text:0001F3DF                 cmp     dword ptr [edx+54h], 4
.text:0001F3E3                 jnz     short loc_1F448
.text:0001F3E5                 mov     eax, [ebp+var_28]
.text:0001F3E8                 movzx   ecx, byte ptr [eax+50h]
.text:0001F3EC                 shl     ecx, 18h
.text:0001F3EF                 mov     edx, [ebp+var_28]
.text:0001F3F2                 movzx   eax, byte ptr [edx+51h]
.text:0001F3F6                 shl     eax, 10h
.text:0001F3F9                 or      ecx, eax
.text:0001F3FB                 mov     edx, [ebp+var_28]
.text:0001F3FE                 movzx   eax, byte ptr [edx+52h]
.text:0001F402                 shl     eax, 8
.text:0001F405                 or      ecx, eax
.text:0001F407                 mov     edx, [ebp+var_28]
.text:0001F40A                 movzx   eax, byte ptr [edx+53h]
.text:0001F40E                 or      ecx, eax
.text:0001F410                 add     ecx, 4
.text:0001F413                 mov     edx, [ebp+var_28]
.text:0001F416                 mov     [edx+58h], ecx
.text:0001F419                 push    1
.text:0001F41B                 mov     eax, [ebp+var_28]
.text:0001F41E                 mov     ecx, [eax+58h]
.text:0001F421                 push    ecx
.text:0001F422                 call    _safemalloc
.text:0001F427                 add     esp, 8
.text:0001F42A                 mov     edx, [ebp+var_28]
.text:0001F42D                 mov     [edx+4Ch], eax
.text:0001F430                 push    4               ; Size
.text:0001F432                 mov     eax, [ebp+var_28]
.text:0001F435                 add     eax, 50h ; 'P'
.text:0001F438                 push    eax             ; Src
.text:0001F439                 mov     ecx, [ebp+var_28]
.text:0001F43C                 mov     edx, [ecx+4Ch]
.text:0001F43F                 push    edx             ; Dst
.text:0001F440                 call    _memcpy
.text:0001F445                 add     esp, 0Ch
.text:0001F448
.text:0001F448 loc_1F448:                              ; CODE XREF: _ssh1_msg_channel_data+14Bj
.text:0001F448                 mov     eax, [ebp+var_28]
.text:0001F44B                 cmp     dword ptr [eax+54h], 4
.text:0001F44F                 jb      short loc_1F4C3
.text:0001F451                 cmp     [ebp+var_20], 0
.text:0001F455                 jle     short loc_1F4C3
.text:0001F457                 mov     ecx, [ebp+var_28]
.text:0001F45A                 mov     edx, [ebp+var_28]
.text:0001F45D                 mov     eax, [ecx+58h]
.text:0001F460                 sub     eax, [edx+54h]
.text:0001F463                 cmp     eax, [ebp+var_20]
.text:0001F466                 jnb     short loc_1F479
.text:0001F468                 mov     ecx, [ebp+var_28]
.text:0001F46B                 mov     edx, [ebp+var_28]
.text:0001F46E                 mov     eax, [ecx+58h]
.text:0001F471                 sub     eax, [edx+54h]
.text:0001F474                 mov     [ebp+var_58], eax
.text:0001F477                 jmp     short loc_1F47F
.text:0001F479 ; ---------------------------------------------------------------------------
.text:0001F479
.text:0001F479 loc_1F479:                              ; CODE XREF: _ssh1_msg_channel_data+1CEj
.text:0001F479                 mov     ecx, [ebp+var_20]
.text:0001F47C                 mov     [ebp+var_58], ecx
.text:0001F47F
.text:0001F47F loc_1F47F:                              ; CODE XREF: _ssh1_msg_channel_data+1DFj
.text:0001F47F                 mov     edx, [ebp+var_58]
.text:0001F482                 mov     [ebp+var_34], edx
.text:0001F485                 mov     eax, [ebp+var_34]
.text:0001F488                 push    eax             ; Size
.text:0001F489                 mov     ecx, [ebp+Src]
.text:0001F48C                 push    ecx             ; Src
.text:0001F48D                 mov     edx, [ebp+var_28]
.text:0001F490                 mov     eax, [edx+4Ch]
.text:0001F493                 mov     ecx, [ebp+var_28]
.text:0001F496                 add     eax, [ecx+54h]
.text:0001F499                 push    eax             ; Dst
.text:0001F49A                 call    _memcpy
.text:0001F49F                 add     esp, 0Ch
.text:0001F4A2                 mov     edx, [ebp+Src]
.text:0001F4A5                 add     edx, [ebp+var_34]
.text:0001F4A8                 mov     [ebp+Src], edx
.text:0001F4AB                 mov     eax, [ebp+var_20]
.text:0001F4AE                 sub     eax, [ebp+var_34]
.text:0001F4B1                 mov     [ebp+var_20], eax
.text:0001F4B4                 mov     ecx, [ebp+var_28]
.text:0001F4B7                 mov     edx, [ecx+54h]
.text:0001F4BA                 add     edx, [ebp+var_34]
.text:0001F4BD                 mov     eax, [ebp+var_28]
.text:0001F4C0                 mov     [eax+54h], edx
.text:0001F4C3
.text:0001F4C3 loc_1F4C3:                              ; CODE XREF: _ssh1_msg_channel_data+1B7j
.text:0001F4C3                                         ; _ssh1_msg_channel_data+1BDj
.text:0001F4C3                 mov     ecx, [ebp+var_28]
.text:0001F4C6                 mov     edx, [ebp+var_28]
.text:0001F4C9                 mov     eax, [ecx+54h]
.text:0001F4CC                 cmp     eax, [edx+58h]
.text:0001F4CF                 jnz     short loc_1F538
.text:0001F4D1                 mov     ecx, [ebp+var_28]
.text:0001F4D4                 mov     edx, [ecx+5Ch]
.text:0001F4D7                 add     edx, 1
.text:0001F4DA                 mov     eax, [ebp+var_28]
.text:0001F4DD                 mov     [eax+5Ch], edx
.text:0001F4E0                 mov     ecx, [ebp+var_28]
.text:0001F4E3                 push    ecx
.text:0001F4E4                 push    offset _ssh_agentf_callback
.text:0001F4E9                 lea     edx, [ebp+var_48]
.text:0001F4EC                 push    edx
.text:0001F4ED                 lea     eax, [ebp+var_3C]
.text:0001F4F0                 push    eax
.text:0001F4F1                 mov     ecx, [ebp+var_28]
.text:0001F4F4                 mov     edx, [ecx+58h]
.text:0001F4F7                 push    edx
.text:0001F4F8                 mov     eax, [ebp+var_28]
.text:0001F4FB                 mov     ecx, [eax+4Ch]
.text:0001F4FE                 push    ecx
.text:0001F4FF                 call    _agent_query
.text:0001F504                 add     esp, 18h
.text:0001F507                 test    eax, eax
.text:0001F509                 jz      short loc_1F51F
.text:0001F50B                 mov     edx, [ebp+var_48]
.text:0001F50E                 push    edx
.text:0001F50F                 mov     eax, [ebp+var_3C]
.text:0001F512                 push    eax
.text:0001F513                 mov     ecx, [ebp+var_28]
.text:0001F516                 push    ecx
.text:0001F517                 call    _ssh_agentf_callback
.text:0001F51C                 add     esp, 0Ch
.text:0001F51F
.text:0001F51F loc_1F51F:                              ; CODE XREF: _ssh1_msg_channel_data+271j
.text:0001F51F                 mov     edx, [ebp+var_28]
.text:0001F522                 mov     eax, [edx+4Ch]
.text:0001F525                 push    eax
.text:0001F526                 call    _safefree
.text:0001F52B                 add     esp, 4
.text:0001F52E                 mov     ecx, [ebp+var_28]
.text:0001F531                 mov     dword ptr [ecx+54h], 0
.text:0001F538
.text:0001F538 loc_1F538:                              ; CODE XREF: _ssh1_msg_channel_data+237j
.text:0001F538                 jmp     loc_1F35E
.text:0001F53D ; ---------------------------------------------------------------------------
.text:0001F53D
.text:0001F53D loc_1F53D:                              ; CODE XREF: _ssh1_msg_channel_data+CAj
.text:0001F53D                 mov     [ebp+var_2C], 0
.text:0001F544
.text:0001F544 loc_1F544:                              ; CODE XREF: _ssh1_msg_channel_data+83j
.text:0001F544                                         ; _ssh1_msg_channel_data+A2j ...
.text:0001F544                 mov     edx, [ebp+var_28]
.text:0001F547                 cmp     dword ptr [edx+1Ch], 0
.text:0001F54B                 jnz     short loc_1F56E
.text:0001F54D                 cmp     [ebp+var_2C], 8000h
.text:0001F554                 jle     short loc_1F56E
.text:0001F556                 mov     eax, [ebp+var_28]
.text:0001F559                 mov     dword ptr [eax+1Ch], 1
.text:0001F560                 push    1
.text:0001F562                 mov     ecx, [ebp+arg_0]
.text:0001F565                 push    ecx
.text:0001F566                 call    _ssh_throttle_conn
.text:0001F56B                 add     esp, 8
.text:0001F56E
.text:0001F56E loc_1F56E:                              ; CODE XREF: _ssh1_msg_channel_data+5Bj
.text:0001F56E                                         ; _ssh1_msg_channel_data+2B3j ...
.text:0001F56E                 push    edx
.text:0001F56F                 mov     ecx, ebp
.text:0001F571                 push    eax
.text:0001F572                 lea     edx, $LN27_0
.text:0001F578                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0001F57D                 pop     eax
.text:0001F57E                 pop     edx
.text:0001F57F                 pop     edi
.text:0001F580                 add     esp, 58h
.text:0001F583                 cmp     ebp, esp
.text:0001F585                 call    __RTC_CheckEsp
.text:0001F58A                 mov     esp, ebp
.text:0001F58C                 pop     ebp
.text:0001F58D                 retn
.text:0001F58D _ssh1_msg_channel_data endp
.text:0001F58D
.text:0001F58D ; ---------------------------------------------------------------------------
.text:0001F58E                 align 10h
.text:0001F590 $LN27_0         dd 5                    ; DATA XREF: _ssh1_msg_channel_data+2DAo
.text:0001F594                 dd offset $LN26_2
.text:0001F598 $LN26_2         dd 0FFFFFFF8h, 4        ; DATA XREF: .text:0001F594o
.text:0001F5A0                 dd offset $LN21_1       ; "i"
.text:0001F5A4                 dd 0FFFFFFECh, 4
.text:0001F5AC                 dd offset $LN22_2       ; "p"
.text:0001F5B0                 dd 0FFFFFFE0h, 4
.text:0001F5B8                 dd offset $LN23_1       ; "len"
.text:0001F5BC                 dd 0FFFFFFC4h, 4
.text:0001F5C4                 dd offset $LN24_3       ; "reply"
.text:0001F5C8                 dd 0FFFFFFB8h, 4
.text:0001F5D0                 dd offset $LN25_2       ; "replylen"
.text:0001F5D4 $LN25_2         db 'replylen',0         ; DATA XREF: .text:0001F5D0o
.text:0001F5DD $LN24_3         db 'reply',0            ; DATA XREF: .text:0001F5C4o
.text:0001F5E3 $LN23_1         db 'len',0              ; DATA XREF: .text:0001F5B8o
.text:0001F5E7 $LN22_2         db 'p',0                ; DATA XREF: .text:0001F5ACo
.text:0001F5E9 $LN21_1         db 'i',0                ; DATA XREF: .text:0001F5A0o
.text:0001F5EB                 db 0Dh dup(0CCh)
.text:0001F5F8
.text:0001F5F8 ; =============== S U B R O U T I N E =======================================
.text:0001F5F8
.text:0001F5F8 ; Attributes: bp-based frame
.text:0001F5F8
.text:0001F5F8 _ssh1_smsg_exit_status proc near        ; DATA XREF: _do_ssh1_connection+F6o
.text:0001F5F8
.text:0001F5F8 arg_0           = dword ptr  8
.text:0001F5F8 arg_4           = dword ptr  0Ch
.text:0001F5F8
.text:0001F5F8                 push    ebp
.text:0001F5F9                 mov     ebp, esp
.text:0001F5FB                 mov     eax, [ebp+arg_4]
.text:0001F5FE                 push    eax
.text:0001F5FF                 call    _ssh_pkt_getuint32
.text:0001F604                 add     esp, 4
.text:0001F607                 mov     ecx, [ebp+arg_0]
.text:0001F60A                 mov     [ecx+104h], eax
.text:0001F610                 mov     edx, [ebp+arg_0]
.text:0001F613                 mov     eax, [edx+104h]
.text:0001F619                 push    eax
.text:0001F61A                 push    offset $SG91229 ; "Server sent command exit status %d"
.text:0001F61F                 mov     ecx, [ebp+arg_0]
.text:0001F622                 push    ecx
.text:0001F623                 call    _logeventf
.text:0001F628                 add     esp, 0Ch
.text:0001F62B                 push    0
.text:0001F62D                 push    21h ; '!'
.text:0001F62F                 mov     edx, [ebp+arg_0]
.text:0001F632                 push    edx
.text:0001F633                 call    _send_packet
.text:0001F638                 add     esp, 0Ch
.text:0001F63B                 push    1               ; int
.text:0001F63D                 push    0               ; int
.text:0001F63F                 push    0               ; Str
.text:0001F641                 push    0               ; int
.text:0001F643                 mov     eax, [ebp+arg_0]
.text:0001F646                 push    eax             ; int
.text:0001F647                 call    _ssh_disconnect
.text:0001F64C                 add     esp, 14h
.text:0001F64F                 cmp     ebp, esp
.text:0001F651                 call    __RTC_CheckEsp
.text:0001F656                 pop     ebp
.text:0001F657                 retn
.text:0001F657 _ssh1_smsg_exit_status endp
.text:0001F657
.text:0001F658
.text:0001F658 ; =============== S U B R O U T I N E =======================================
.text:0001F658
.text:0001F658 ; Attributes: bp-based frame
.text:0001F658
.text:0001F658 ; int __cdecl ssh1_send_ttymode(int, char *Str1, char *)
.text:0001F658 _ssh1_send_ttymode proc near            ; DATA XREF: _do_ssh1_connection+4E5o
.text:0001F658
.text:0001F658 var_10          = dword ptr -10h
.text:0001F658 var_C           = dword ptr -0Ch
.text:0001F658 var_8           = dword ptr -8
.text:0001F658 var_4           = dword ptr -4
.text:0001F658 arg_0           = dword ptr  8
.text:0001F658 Str1            = dword ptr  0Ch
.text:0001F658 arg_8           = dword ptr  10h
.text:0001F658
.text:0001F658                 push    ebp
.text:0001F659                 mov     ebp, esp
.text:0001F65B                 sub     esp, 10h
.text:0001F65E                 mov     eax, 0CCCCCCCCh
.text:0001F663                 mov     [ebp+var_10], eax
.text:0001F666                 mov     [ebp+var_C], eax
.text:0001F669                 mov     [ebp+var_8], eax
.text:0001F66C                 mov     [ebp+var_4], eax
.text:0001F66F                 mov     eax, [ebp+arg_0]
.text:0001F672                 mov     [ebp+var_4], eax
.text:0001F675                 mov     [ebp+var_8], 0
.text:0001F67C                 mov     [ebp+var_C], 0
.text:0001F683
.text:0001F683 loc_1F683:                              ; CODE XREF: _ssh1_send_ttymode+51j
.text:0001F683                 mov     ecx, [ebp+var_8]
.text:0001F686                 imul    ecx, 0Ch
.text:0001F689                 mov     edx, ds:_ssh_ttymodes[ecx]
.text:0001F68F                 push    edx             ; Str2
.text:0001F690                 mov     eax, [ebp+Str1]
.text:0001F693                 push    eax             ; Str1
.text:0001F694                 call    _strcmp
.text:0001F699                 add     esp, 8
.text:0001F69C                 test    eax, eax
.text:0001F69E                 jz      short loc_1F6AB
.text:0001F6A0                 mov     ecx, [ebp+var_8]
.text:0001F6A3                 add     ecx, 1
.text:0001F6A6                 mov     [ebp+var_8], ecx
.text:0001F6A9                 jmp     short loc_1F683
.text:0001F6AB ; ---------------------------------------------------------------------------
.text:0001F6AB
.text:0001F6AB loc_1F6AB:                              ; CODE XREF: _ssh1_send_ttymode+46j
.text:0001F6AB                 cmp     [ebp+var_8], 35h ; '5'
.text:0001F6AF                 jnz     short loc_1F6B3
.text:0001F6B1                 jmp     short loc_1F71B
.text:0001F6B3 ; ---------------------------------------------------------------------------
.text:0001F6B3
.text:0001F6B3 loc_1F6B3:                              ; CODE XREF: _ssh1_send_ttymode+57j
.text:0001F6B3                 mov     edx, [ebp+var_8]
.text:0001F6B6                 imul    edx, 0Ch
.text:0001F6B9                 mov     eax, ds:dword_62C4[edx]
.text:0001F6BF                 mov     [ebp+var_10], eax
.text:0001F6C2                 cmp     [ebp+var_10], 0
.text:0001F6C6                 jz      short loc_1F6D0
.text:0001F6C8                 cmp     [ebp+var_10], 1
.text:0001F6CC                 jz      short loc_1F6E1
.text:0001F6CE                 jmp     short loc_1F6F0
.text:0001F6D0 ; ---------------------------------------------------------------------------
.text:0001F6D0
.text:0001F6D0 loc_1F6D0:                              ; CODE XREF: _ssh1_send_ttymode+6Ej
.text:0001F6D0                 mov     ecx, [ebp+arg_8]
.text:0001F6D3                 push    ecx
.text:0001F6D4                 call    _ssh_tty_parse_specchar
.text:0001F6D9                 add     esp, 4
.text:0001F6DC                 mov     [ebp+var_C], eax
.text:0001F6DF                 jmp     short loc_1F6F0
.text:0001F6E1 ; ---------------------------------------------------------------------------
.text:0001F6E1
.text:0001F6E1 loc_1F6E1:                              ; CODE XREF: _ssh1_send_ttymode+74j
.text:0001F6E1                 mov     edx, [ebp+arg_8]
.text:0001F6E4                 push    edx             ; Str1
.text:0001F6E5                 call    _ssh_tty_parse_boolean
.text:0001F6EA                 add     esp, 4
.text:0001F6ED                 mov     [ebp+var_C], eax
.text:0001F6F0
.text:0001F6F0 loc_1F6F0:                              ; CODE XREF: _ssh1_send_ttymode+76j
.text:0001F6F0                                         ; _ssh1_send_ttymode+87j
.text:0001F6F0                 mov     eax, [ebp+var_8]
.text:0001F6F3                 imul    eax, 0Ch
.text:0001F6F6                 movzx   ecx, ds:byte_62C0[eax]
.text:0001F6FD                 push    ecx             ; Src
.text:0001F6FE                 mov     edx, [ebp+var_4]
.text:0001F701                 push    edx             ; int
.text:0001F702                 call    _ssh_pkt_addbyte
.text:0001F707                 add     esp, 8
.text:0001F70A                 movzx   eax, byte ptr [ebp+var_C]
.text:0001F70E                 push    eax             ; Src
.text:0001F70F                 mov     ecx, [ebp+var_4]
.text:0001F712                 push    ecx             ; int
.text:0001F713                 call    _ssh_pkt_addbyte
.text:0001F718                 add     esp, 8
.text:0001F71B
.text:0001F71B loc_1F71B:                              ; CODE XREF: _ssh1_send_ttymode+59j
.text:0001F71B                 add     esp, 10h
.text:0001F71E                 cmp     ebp, esp
.text:0001F720                 call    __RTC_CheckEsp
.text:0001F725                 mov     esp, ebp
.text:0001F727                 pop     ebp
.text:0001F728                 retn
.text:0001F728 _ssh1_send_ttymode endp
.text:0001F728
.text:0001F728 ; ---------------------------------------------------------------------------
.text:0001F729                 db 0Fh dup(0CCh)
.text:0001F738
.text:0001F738 ; =============== S U B R O U T I N E =======================================
.text:0001F738
.text:0001F738 ; Attributes: bp-based frame
.text:0001F738
.text:0001F738 _ssh2_protocol_setup proc near          ; CODE XREF: _do_ssh_init+4E0p
.text:0001F738
.text:0001F738 var_4           = dword ptr -4
.text:0001F738 arg_0           = dword ptr  8
.text:0001F738
.text:0001F738                 push    ebp
.text:0001F739                 mov     ebp, esp
.text:0001F73B                 push    ecx
.text:0001F73C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0001F743                 mov     [ebp+var_4], 0
.text:0001F74A                 jmp     short loc_1F755
.text:0001F74C ; ---------------------------------------------------------------------------
.text:0001F74C
.text:0001F74C loc_1F74C:                              ; CODE XREF: _ssh2_protocol_setup+37j
.text:0001F74C                 mov     eax, [ebp+var_4]
.text:0001F74F                 add     eax, 1
.text:0001F752                 mov     [ebp+var_4], eax
.text:0001F755
.text:0001F755 loc_1F755:                              ; CODE XREF: _ssh2_protocol_setup+12j
.text:0001F755                 cmp     [ebp+var_4], 100h
.text:0001F75C                 jge     short loc_1F771
.text:0001F75E                 mov     ecx, [ebp+var_4]
.text:0001F761                 mov     edx, [ebp+arg_0]
.text:0001F764                 mov     dword ptr [edx+ecx*4+244h], offset _ssh2_msg_something_unimplemented
.text:0001F76F                 jmp     short loc_1F74C
.text:0001F771 ; ---------------------------------------------------------------------------
.text:0001F771
.text:0001F771 loc_1F771:                              ; CODE XREF: _ssh2_protocol_setup+24j
.text:0001F771                 mov     eax, [ebp+arg_0]
.text:0001F774                 mov     dword ptr [eax+250h], offset _ssh2_msg_unexpected
.text:0001F77E                 mov     ecx, [ebp+arg_0]
.text:0001F781                 mov     dword ptr [ecx+258h], offset _ssh2_msg_unexpected
.text:0001F78B                 mov     edx, [ebp+arg_0]
.text:0001F78E                 mov     dword ptr [edx+25Ch], offset _ssh2_msg_unexpected
.text:0001F798                 mov     eax, [ebp+arg_0]
.text:0001F79B                 mov     dword ptr [eax+294h], offset _ssh2_msg_transport
.text:0001F7A5                 mov     ecx, [ebp+arg_0]
.text:0001F7A8                 mov     dword ptr [ecx+298h], offset _ssh2_msg_transport
.text:0001F7B2                 mov     edx, [ebp+arg_0]
.text:0001F7B5                 mov     dword ptr [edx+2BCh], offset _ssh2_msg_transport
.text:0001F7BF                 mov     eax, [ebp+arg_0]
.text:0001F7C2                 mov     dword ptr [eax+2C0h], offset _ssh2_msg_transport
.text:0001F7CC                 mov     ecx, [ebp+arg_0]
.text:0001F7CF                 mov     dword ptr [ecx+2C4h], offset _ssh2_msg_transport
.text:0001F7D9                 mov     edx, [ebp+arg_0]
.text:0001F7DC                 mov     dword ptr [edx+2C8h], offset _ssh2_msg_transport
.text:0001F7E6                 mov     eax, [ebp+arg_0]
.text:0001F7E9                 mov     dword ptr [eax+30Ch], offset _ssh2_msg_unexpected
.text:0001F7F3                 mov     ecx, [ebp+arg_0]
.text:0001F7F6                 mov     dword ptr [ecx+310h], offset _ssh2_msg_unexpected
.text:0001F800                 mov     edx, [ebp+arg_0]
.text:0001F803                 mov     dword ptr [edx+314h], offset _ssh2_msg_unexpected
.text:0001F80D                 mov     eax, [ebp+arg_0]
.text:0001F810                 mov     dword ptr [eax+318h], offset _ssh2_msg_unexpected
.text:0001F81A                 mov     ecx, [ebp+arg_0]
.text:0001F81D                 mov     dword ptr [ecx+334h], offset _ssh2_msg_unexpected
.text:0001F827                 mov     edx, [ebp+arg_0]
.text:0001F82A                 mov     dword ptr [edx+338h], offset _ssh2_msg_unexpected
.text:0001F834                 mov     eax, [ebp+arg_0]
.text:0001F837                 mov     dword ptr [eax+384h], offset _ssh2_msg_unexpected
.text:0001F841                 mov     ecx, [ebp+arg_0]
.text:0001F844                 mov     dword ptr [ecx+388h], offset _ssh2_msg_unexpected
.text:0001F84E                 mov     edx, [ebp+arg_0]
.text:0001F851                 mov     dword ptr [edx+38Ch], offset _ssh2_msg_unexpected
.text:0001F85B                 mov     eax, [ebp+arg_0]
.text:0001F85E                 mov     dword ptr [eax+3ACh], offset _ssh2_msg_unexpected
.text:0001F868                 mov     ecx, [ebp+arg_0]
.text:0001F86B                 mov     dword ptr [ecx+3B0h], offset _ssh2_msg_unexpected
.text:0001F875                 mov     edx, [ebp+arg_0]
.text:0001F878                 mov     dword ptr [edx+3B4h], offset _ssh2_msg_unexpected
.text:0001F882                 mov     eax, [ebp+arg_0]
.text:0001F885                 mov     dword ptr [eax+3B8h], offset _ssh2_msg_unexpected
.text:0001F88F                 mov     ecx, [ebp+arg_0]
.text:0001F892                 mov     dword ptr [ecx+3BCh], offset _ssh2_msg_unexpected
.text:0001F89C                 mov     edx, [ebp+arg_0]
.text:0001F89F                 mov     dword ptr [edx+3C0h], offset _ssh2_msg_unexpected
.text:0001F8A9                 mov     eax, [ebp+arg_0]
.text:0001F8AC                 mov     dword ptr [eax+3C4h], offset _ssh2_msg_unexpected
.text:0001F8B6                 mov     ecx, [ebp+arg_0]
.text:0001F8B9                 mov     dword ptr [ecx+3C8h], offset _ssh2_msg_unexpected
.text:0001F8C3                 mov     edx, [ebp+arg_0]
.text:0001F8C6                 mov     dword ptr [edx+3CCh], offset _ssh2_msg_unexpected
.text:0001F8D0                 mov     eax, [ebp+arg_0]
.text:0001F8D3                 mov     dword ptr [eax+3D0h], offset _ssh2_msg_unexpected
.text:0001F8DD                 mov     ecx, [ebp+arg_0]
.text:0001F8E0                 mov     dword ptr [ecx+3D4h], offset _ssh2_msg_unexpected
.text:0001F8EA                 mov     edx, [ebp+arg_0]
.text:0001F8ED                 mov     dword ptr [edx+248h], offset _ssh2_msg_disconnect
.text:0001F8F7                 mov     eax, [ebp+arg_0]
.text:0001F8FA                 mov     dword ptr [eax+24Ch], offset _ssh_msg_ignore
.text:0001F904                 mov     ecx, [ebp+arg_0]
.text:0001F907                 mov     dword ptr [ecx+254h], offset _ssh2_msg_debug
.text:0001F911                 mov     esp, ebp
.text:0001F913                 pop     ebp
.text:0001F914                 retn
.text:0001F914 _ssh2_protocol_setup endp
.text:0001F914
.text:0001F914 ; ---------------------------------------------------------------------------
.text:0001F915                 align 4
.text:0001F918
.text:0001F918 ; =============== S U B R O U T I N E =======================================
.text:0001F918
.text:0001F918 ; Attributes: bp-based frame
.text:0001F918
.text:0001F918 _ssh2_msg_disconnect proc near          ; DATA XREF: _ssh2_protocol_setup+1B5o
.text:0001F918                                         ; _ssh2_bare_connection_protocol_setup+FFo
.text:0001F918
.text:0001F918 var_24          = dword ptr -24h
.text:0001F918 var_20          = dword ptr -20h
.text:0001F918 var_1C          = dword ptr -1Ch
.text:0001F918 var_18          = dword ptr -18h
.text:0001F918 var_14          = dword ptr -14h
.text:0001F918 var_10          = dword ptr -10h
.text:0001F918 var_C           = dword ptr -0Ch
.text:0001F918 var_8           = dword ptr -8
.text:0001F918 var_4           = dword ptr -4
.text:0001F918 arg_0           = dword ptr  8
.text:0001F918 arg_4           = dword ptr  0Ch
.text:0001F918
.text:0001F918                 push    ebp
.text:0001F919                 mov     ebp, esp
.text:0001F91B                 sub     esp, 24h
.text:0001F91E                 mov     eax, 0CCCCCCCCh
.text:0001F923                 mov     [ebp+var_24], eax
.text:0001F926                 mov     [ebp+var_20], eax
.text:0001F929                 mov     [ebp+var_1C], eax
.text:0001F92C                 mov     [ebp+var_18], eax
.text:0001F92F                 mov     [ebp+var_14], eax
.text:0001F932                 mov     [ebp+var_10], eax
.text:0001F935                 mov     [ebp+var_C], eax
.text:0001F938                 mov     [ebp+var_8], eax
.text:0001F93B                 mov     [ebp+var_4], eax
.text:0001F93E                 mov     eax, [ebp+arg_4]
.text:0001F941                 push    eax
.text:0001F942                 call    _ssh_pkt_getuint32
.text:0001F947                 add     esp, 4
.text:0001F94A                 mov     [ebp+var_14], eax
.text:0001F94D                 lea     ecx, [ebp+var_1C]
.text:0001F950                 push    ecx
.text:0001F951                 lea     edx, [ebp+var_C]
.text:0001F954                 push    edx
.text:0001F955                 mov     eax, [ebp+arg_4]
.text:0001F958                 push    eax
.text:0001F959                 call    _ssh_pkt_getstring
.text:0001F95E                 add     esp, 0Ch
.text:0001F961                 cmp     [ebp+var_14], 0
.text:0001F965                 jle     short loc_1F98A
.text:0001F967                 cmp     [ebp+var_14], 10h
.text:0001F96B                 jnb     short loc_1F98A
.text:0001F96D                 mov     ecx, [ebp+var_14]
.text:0001F970                 mov     edx, ds:_ssh2_disconnect_reasons[ecx*4]
.text:0001F977                 push    edx
.text:0001F978                 push    offset $SG93863 ; "Received disconnect message (%s)"
.text:0001F97D                 call    _dupprintf
.text:0001F982                 add     esp, 8
.text:0001F985                 mov     [ebp+var_4], eax
.text:0001F988                 jmp     short loc_1F99E
.text:0001F98A ; ---------------------------------------------------------------------------
.text:0001F98A
.text:0001F98A loc_1F98A:                              ; CODE XREF: _ssh2_msg_disconnect+4Dj
.text:0001F98A                                         ; _ssh2_msg_disconnect+53j
.text:0001F98A                 mov     eax, [ebp+var_14]
.text:0001F98D                 push    eax
.text:0001F98E                 push    offset $SG93865 ; "Received disconnect message (unknown ty"...
.text:0001F993                 call    _dupprintf
.text:0001F998                 add     esp, 8
.text:0001F99B                 mov     [ebp+var_4], eax
.text:0001F99E
.text:0001F99E loc_1F99E:                              ; CODE XREF: _ssh2_msg_disconnect+70j
.text:0001F99E                 mov     ecx, [ebp+var_4]
.text:0001F9A1                 push    ecx
.text:0001F9A2                 mov     edx, [ebp+arg_0]
.text:0001F9A5                 mov     eax, [edx+0E4h]
.text:0001F9AB                 push    eax
.text:0001F9AC                 call    _logevent
.text:0001F9B1                 add     esp, 8
.text:0001F9B4                 mov     ecx, [ebp+var_4]
.text:0001F9B7                 push    ecx
.text:0001F9B8                 call    _safefree
.text:0001F9BD                 add     esp, 4
.text:0001F9C0                 mov     edx, [ebp+var_C]
.text:0001F9C3                 push    edx
.text:0001F9C4                 mov     eax, [ebp+var_1C]
.text:0001F9C7                 push    eax
.text:0001F9C8                 push    offset $SG93866 ; "Disconnection message text: %.*s"
.text:0001F9CD                 call    _dupprintf
.text:0001F9D2                 add     esp, 0Ch
.text:0001F9D5                 mov     [ebp+var_4], eax
.text:0001F9D8                 mov     ecx, [ebp+var_4]
.text:0001F9DB                 push    ecx
.text:0001F9DC                 mov     edx, [ebp+arg_0]
.text:0001F9DF                 mov     eax, [edx+0E4h]
.text:0001F9E5                 push    eax
.text:0001F9E6                 call    _logevent
.text:0001F9EB                 add     esp, 8
.text:0001F9EE                 cmp     [ebp+var_14], 0
.text:0001F9F2                 jle     short loc_1FA09
.text:0001F9F4                 cmp     [ebp+var_14], 10h
.text:0001F9F8                 jnb     short loc_1FA09
.text:0001F9FA                 mov     ecx, [ebp+var_14]
.text:0001F9FD                 mov     edx, ds:_ssh2_disconnect_reasons[ecx*4]
.text:0001FA04                 mov     [ebp+var_24], edx
.text:0001FA07                 jmp     short loc_1FA10
.text:0001FA09 ; ---------------------------------------------------------------------------
.text:0001FA09
.text:0001FA09 loc_1FA09:                              ; CODE XREF: _ssh2_msg_disconnect+DAj
.text:0001FA09                                         ; _ssh2_msg_disconnect+E0j
.text:0001FA09                 mov     [ebp+var_24], offset $SG93867 ; "unknown"
.text:0001FA10
.text:0001FA10 loc_1FA10:                              ; CODE XREF: _ssh2_msg_disconnect+EFj
.text:0001FA10                 mov     eax, [ebp+var_C]
.text:0001FA13                 push    eax
.text:0001FA14                 mov     ecx, [ebp+var_1C]
.text:0001FA17                 push    ecx
.text:0001FA18                 mov     edx, [ebp+var_24]
.text:0001FA1B                 push    edx
.text:0001FA1C                 mov     eax, [ebp+var_14]
.text:0001FA1F                 push    eax
.text:0001FA20                 push    offset $SG93868 ; "Server sent disconnect message\ntype %d"...
.text:0001FA25                 call    _dupprintf
.text:0001FA2A                 add     esp, 14h
.text:0001FA2D                 push    eax
.text:0001FA2E                 mov     ecx, [ebp+arg_0]
.text:0001FA31                 push    ecx
.text:0001FA32                 call    _bomb_out
.text:0001FA37                 add     esp, 8
.text:0001FA3A                 mov     edx, [ebp+var_4]
.text:0001FA3D                 push    edx
.text:0001FA3E                 call    _safefree
.text:0001FA43                 add     esp, 4
.text:0001FA46                 push    edx
.text:0001FA47                 mov     ecx, ebp
.text:0001FA49                 push    eax
.text:0001FA4A                 lea     edx, $LN10_11
.text:0001FA50                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0001FA55                 pop     eax
.text:0001FA56                 pop     edx
.text:0001FA57                 add     esp, 24h
.text:0001FA5A                 cmp     ebp, esp
.text:0001FA5C                 call    __RTC_CheckEsp
.text:0001FA61                 mov     esp, ebp
.text:0001FA63                 pop     ebp
.text:0001FA64                 retn
.text:0001FA64 _ssh2_msg_disconnect endp
.text:0001FA64
.text:0001FA64 ; ---------------------------------------------------------------------------
.text:0001FA65                 align 4
.text:0001FA68 $LN10_11        dd 2                    ; DATA XREF: _ssh2_msg_disconnect+132o
.text:0001FA6C                 dd offset $LN9_10
.text:0001FA70 $LN9_10         dd 0FFFFFFF4h, 4        ; DATA XREF: .text:0001FA6Co
.text:0001FA78                 dd offset $LN7_11       ; "msg"
.text:0001FA7C                 dd 0FFFFFFE4h, 4
.text:0001FA84                 dd offset $LN8_12       ; "msglen"
.text:0001FA88 $LN8_12         db 'msglen',0           ; DATA XREF: .text:0001FA84o
.text:0001FA8F $LN7_11         db 'msg',0              ; DATA XREF: .text:0001FA78o
.text:0001FA93                 align 8
.text:0001FA98
.text:0001FA98 ; =============== S U B R O U T I N E =======================================
.text:0001FA98
.text:0001FA98 ; Attributes: bp-based frame
.text:0001FA98
.text:0001FA98 _ssh2_msg_debug proc near               ; DATA XREF: _ssh2_protocol_setup+1CFo
.text:0001FA98                                         ; _ssh2_bare_connection_protocol_setup+119o
.text:0001FA98
.text:0001FA98 var_18          = dword ptr -18h
.text:0001FA98 var_14          = dword ptr -14h
.text:0001FA98 var_10          = dword ptr -10h
.text:0001FA98 var_C           = dword ptr -0Ch
.text:0001FA98 var_8           = dword ptr -8
.text:0001FA98 var_4           = dword ptr -4
.text:0001FA98 arg_0           = dword ptr  8
.text:0001FA98 arg_4           = dword ptr  0Ch
.text:0001FA98
.text:0001FA98                 push    ebp
.text:0001FA99                 mov     ebp, esp
.text:0001FA9B                 sub     esp, 18h
.text:0001FA9E                 mov     eax, 0CCCCCCCCh
.text:0001FAA3                 mov     [ebp+var_18], eax
.text:0001FAA6                 mov     [ebp+var_14], eax
.text:0001FAA9                 mov     [ebp+var_10], eax
.text:0001FAAC                 mov     [ebp+var_C], eax
.text:0001FAAF                 mov     [ebp+var_8], eax
.text:0001FAB2                 mov     [ebp+var_4], eax
.text:0001FAB5                 mov     eax, [ebp+arg_4]
.text:0001FAB8                 push    eax
.text:0001FAB9                 call    _ssh2_pkt_getbool
.text:0001FABE                 add     esp, 4
.text:0001FAC1                 lea     ecx, [ebp+var_14]
.text:0001FAC4                 push    ecx
.text:0001FAC5                 lea     edx, [ebp+var_8]
.text:0001FAC8                 push    edx
.text:0001FAC9                 mov     eax, [ebp+arg_4]
.text:0001FACC                 push    eax
.text:0001FACD                 call    _ssh_pkt_getstring
.text:0001FAD2                 add     esp, 0Ch
.text:0001FAD5                 mov     ecx, [ebp+var_8]
.text:0001FAD8                 push    ecx
.text:0001FAD9                 mov     edx, [ebp+var_14]
.text:0001FADC                 push    edx
.text:0001FADD                 push    offset $SG93877 ; "Remote debug message: %.*s"
.text:0001FAE2                 mov     eax, [ebp+arg_0]
.text:0001FAE5                 push    eax
.text:0001FAE6                 call    _logeventf
.text:0001FAEB                 add     esp, 10h
.text:0001FAEE                 push    edx
.text:0001FAEF                 mov     ecx, ebp
.text:0001FAF1                 push    eax
.text:0001FAF2                 lea     edx, $LN6_12
.text:0001FAF8                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:0001FAFD                 pop     eax
.text:0001FAFE                 pop     edx
.text:0001FAFF                 add     esp, 18h
.text:0001FB02                 cmp     ebp, esp
.text:0001FB04                 call    __RTC_CheckEsp
.text:0001FB09                 mov     esp, ebp
.text:0001FB0B                 pop     ebp
.text:0001FB0C                 retn
.text:0001FB0C _ssh2_msg_debug endp
.text:0001FB0C
.text:0001FB0C ; ---------------------------------------------------------------------------
.text:0001FB0D                 align 10h
.text:0001FB10 $LN6_12         dd 2                    ; DATA XREF: _ssh2_msg_debug+5Ao
.text:0001FB14                 dd offset $LN5_16
.text:0001FB18 $LN5_16         dd 0FFFFFFF8h, 4        ; DATA XREF: .text:0001FB14o
.text:0001FB20                 dd offset $LN3_8        ; "msg"
.text:0001FB24                 dd 0FFFFFFECh, 4
.text:0001FB2C                 dd offset $LN4_13       ; "msglen"
.text:0001FB30 $LN4_13         db 'msglen',0           ; DATA XREF: .text:0001FB2Co
.text:0001FB37 $LN3_8          db 'msg',0              ; DATA XREF: .text:0001FB20o
.text:0001FB3B                 db 0Dh dup(0CCh)
.text:0001FB48
.text:0001FB48 ; =============== S U B R O U T I N E =======================================
.text:0001FB48
.text:0001FB48 ; Attributes: bp-based frame
.text:0001FB48
.text:0001FB48 _ssh2_msg_transport proc near           ; DATA XREF: _ssh2_protocol_setup+63o
.text:0001FB48                                         ; _ssh2_protocol_setup+70o ...
.text:0001FB48
.text:0001FB48 arg_0           = dword ptr  8
.text:0001FB48 arg_4           = dword ptr  0Ch
.text:0001FB48
.text:0001FB48                 push    ebp
.text:0001FB49                 mov     ebp, esp
.text:0001FB4B                 mov     eax, [ebp+arg_4]
.text:0001FB4E                 push    eax
.text:0001FB4F                 push    0
.text:0001FB51                 push    0
.text:0001FB53                 mov     ecx, [ebp+arg_0]
.text:0001FB56                 push    ecx
.text:0001FB57                 call    _do_ssh2_transport
.text:0001FB5C                 add     esp, 10h
.text:0001FB5F                 cmp     ebp, esp
.text:0001FB61                 call    __RTC_CheckEsp
.text:0001FB66                 pop     ebp
.text:0001FB67                 retn
.text:0001FB67 _ssh2_msg_transport endp
.text:0001FB67
.text:0001FB68
.text:0001FB68 ; =============== S U B R O U T I N E =======================================
.text:0001FB68
.text:0001FB68 ; Attributes: bp-based frame
.text:0001FB68
.text:0001FB68 _ssh2_msg_something_unimplemented proc near
.text:0001FB68                                         ; DATA XREF: _ssh2_protocol_setup+2Co
.text:0001FB68                                         ; _ssh2_bare_connection_protocol_setup+2Co
.text:0001FB68
.text:0001FB68 var_4           = dword ptr -4
.text:0001FB68 arg_0           = dword ptr  8
.text:0001FB68 arg_4           = dword ptr  0Ch
.text:0001FB68
.text:0001FB68                 push    ebp
.text:0001FB69                 mov     ebp, esp
.text:0001FB6B                 push    ecx
.text:0001FB6C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0001FB73                 push    3
.text:0001FB75                 call    _ssh2_pkt_init
.text:0001FB7A                 add     esp, 4
.text:0001FB7D                 mov     [ebp+var_4], eax
.text:0001FB80                 mov     eax, [ebp+arg_4]
.text:0001FB83                 mov     ecx, [eax+0Ch]
.text:0001FB86                 push    ecx
.text:0001FB87                 mov     edx, [ebp+var_4]
.text:0001FB8A                 push    edx
.text:0001FB8B                 call    _ssh_pkt_adduint32
.text:0001FB90                 add     esp, 8
.text:0001FB93                 mov     eax, [ebp+var_4]
.text:0001FB96                 push    eax
.text:0001FB97                 mov     ecx, [ebp+arg_0]
.text:0001FB9A                 push    ecx
.text:0001FB9B                 call    _ssh2_pkt_send_noqueue
.text:0001FBA0                 add     esp, 8
.text:0001FBA3                 add     esp, 4
.text:0001FBA6                 cmp     ebp, esp
.text:0001FBA8                 call    __RTC_CheckEsp
.text:0001FBAD                 mov     esp, ebp
.text:0001FBAF                 pop     ebp
.text:0001FBB0                 retn
.text:0001FBB0 _ssh2_msg_something_unimplemented endp
.text:0001FBB0
.text:0001FBB0 ; ---------------------------------------------------------------------------
.text:0001FBB1                 align 8
.text:0001FBB8
.text:0001FBB8 ; =============== S U B R O U T I N E =======================================
.text:0001FBB8
.text:0001FBB8 ; Attributes: bp-based frame
.text:0001FBB8
.text:0001FBB8 _ssh2_bare_connection_protocol_setup proc near
.text:0001FBB8                                         ; CODE XREF: _do_ssh_connection_init+3CAp
.text:0001FBB8
.text:0001FBB8 var_4           = dword ptr -4
.text:0001FBB8 arg_0           = dword ptr  8
.text:0001FBB8
.text:0001FBB8                 push    ebp
.text:0001FBB9                 mov     ebp, esp
.text:0001FBBB                 push    ecx
.text:0001FBBC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0001FBC3                 mov     [ebp+var_4], 0
.text:0001FBCA                 jmp     short loc_1FBD5
.text:0001FBCC ; ---------------------------------------------------------------------------
.text:0001FBCC
.text:0001FBCC loc_1FBCC:                              ; CODE XREF: _ssh2_bare_connection_protocol_setup+37j
.text:0001FBCC                 mov     eax, [ebp+var_4]
.text:0001FBCF                 add     eax, 1
.text:0001FBD2                 mov     [ebp+var_4], eax
.text:0001FBD5
.text:0001FBD5 loc_1FBD5:                              ; CODE XREF: _ssh2_bare_connection_protocol_setup+12j
.text:0001FBD5                 cmp     [ebp+var_4], 100h
.text:0001FBDC                 jge     short loc_1FBF1
.text:0001FBDE                 mov     ecx, [ebp+var_4]
.text:0001FBE1                 mov     edx, [ebp+arg_0]
.text:0001FBE4                 mov     dword ptr [edx+ecx*4+244h], offset _ssh2_msg_something_unimplemented
.text:0001FBEF                 jmp     short loc_1FBCC
.text:0001FBF1 ; ---------------------------------------------------------------------------
.text:0001FBF1
.text:0001FBF1 loc_1FBF1:                              ; CODE XREF: _ssh2_bare_connection_protocol_setup+24j
.text:0001FBF1                 mov     eax, [ebp+arg_0]
.text:0001FBF4                 mov     dword ptr [eax+384h], offset _ssh2_msg_unexpected
.text:0001FBFE                 mov     ecx, [ebp+arg_0]
.text:0001FC01                 mov     dword ptr [ecx+388h], offset _ssh2_msg_unexpected
.text:0001FC0B                 mov     edx, [ebp+arg_0]
.text:0001FC0E                 mov     dword ptr [edx+38Ch], offset _ssh2_msg_unexpected
.text:0001FC18                 mov     eax, [ebp+arg_0]
.text:0001FC1B                 mov     dword ptr [eax+3ACh], offset _ssh2_msg_unexpected
.text:0001FC25                 mov     ecx, [ebp+arg_0]
.text:0001FC28                 mov     dword ptr [ecx+3B0h], offset _ssh2_msg_unexpected
.text:0001FC32                 mov     edx, [ebp+arg_0]
.text:0001FC35                 mov     dword ptr [edx+3B4h], offset _ssh2_msg_unexpected
.text:0001FC3F                 mov     eax, [ebp+arg_0]
.text:0001FC42                 mov     dword ptr [eax+3B8h], offset _ssh2_msg_unexpected
.text:0001FC4C                 mov     ecx, [ebp+arg_0]
.text:0001FC4F                 mov     dword ptr [ecx+3BCh], offset _ssh2_msg_unexpected
.text:0001FC59                 mov     edx, [ebp+arg_0]
.text:0001FC5C                 mov     dword ptr [edx+3C0h], offset _ssh2_msg_unexpected
.text:0001FC66                 mov     eax, [ebp+arg_0]
.text:0001FC69                 mov     dword ptr [eax+3C4h], offset _ssh2_msg_unexpected
.text:0001FC73                 mov     ecx, [ebp+arg_0]
.text:0001FC76                 mov     dword ptr [ecx+3C8h], offset _ssh2_msg_unexpected
.text:0001FC80                 mov     edx, [ebp+arg_0]
.text:0001FC83                 mov     dword ptr [edx+3CCh], offset _ssh2_msg_unexpected
.text:0001FC8D                 mov     eax, [ebp+arg_0]
.text:0001FC90                 mov     dword ptr [eax+3D0h], offset _ssh2_msg_unexpected
.text:0001FC9A                 mov     ecx, [ebp+arg_0]
.text:0001FC9D                 mov     dword ptr [ecx+3D4h], offset _ssh2_msg_unexpected
.text:0001FCA7                 mov     edx, [ebp+arg_0]
.text:0001FCAA                 mov     dword ptr [edx+250h], offset _ssh2_msg_unexpected
.text:0001FCB4                 mov     eax, [ebp+arg_0]
.text:0001FCB7                 mov     dword ptr [eax+248h], offset _ssh2_msg_disconnect
.text:0001FCC1                 mov     ecx, [ebp+arg_0]
.text:0001FCC4                 mov     dword ptr [ecx+24Ch], offset _ssh_msg_ignore
.text:0001FCCE                 mov     edx, [ebp+arg_0]
.text:0001FCD1                 mov     dword ptr [edx+254h], offset _ssh2_msg_debug
.text:0001FCDB                 mov     esp, ebp
.text:0001FCDD                 pop     ebp
.text:0001FCDE                 retn
.text:0001FCDE _ssh2_bare_connection_protocol_setup endp
.text:0001FCDE
.text:0001FCDE ; ---------------------------------------------------------------------------
.text:0001FCDF                 db 9 dup(0CCh)
.text:0001FCE8
.text:0001FCE8 ; =============== S U B R O U T I N E =======================================
.text:0001FCE8
.text:0001FCE8 ; Attributes: bp-based frame
.text:0001FCE8
.text:0001FCE8 _ssh2_protocol  proc near               ; DATA XREF: _do_ssh_init+4D2o
.text:0001FCE8
.text:0001FCE8 var_4           = dword ptr -4
.text:0001FCE8 arg_0           = dword ptr  8
.text:0001FCE8 arg_4           = dword ptr  0Ch
.text:0001FCE8 arg_8           = dword ptr  10h
.text:0001FCE8 arg_C           = dword ptr  14h
.text:0001FCE8
.text:0001FCE8                 push    ebp
.text:0001FCE9                 mov     ebp, esp
.text:0001FCEB                 push    ecx
.text:0001FCEC                 push    esi
.text:0001FCED                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0001FCF4                 mov     eax, [ebp+arg_4]
.text:0001FCF7                 mov     [ebp+var_4], eax
.text:0001FCFA                 mov     ecx, [ebp+arg_0]
.text:0001FCFD                 cmp     dword ptr [ecx+118h], 4
.text:0001FD04                 jnz     short loc_1FD0B
.text:0001FD06                 jmp     loc_1FDD6
.text:0001FD0B ; ---------------------------------------------------------------------------
.text:0001FD0B
.text:0001FD0B loc_1FD0B:                              ; CODE XREF: _ssh2_protocol+1Cj
.text:0001FD0B                 cmp     [ebp+arg_C], 0
.text:0001FD0F                 jz      short loc_1FD6A
.text:0001FD11                 mov     edx, [ebp+arg_0]
.text:0001FD14                 mov     eax, [edx+658h]
.text:0001FD1A                 mov     ecx, [ebp+arg_C]
.text:0001FD1D                 add     eax, [ecx+20h]
.text:0001FD20                 mov     edx, [ebp+arg_0]
.text:0001FD23                 mov     [edx+658h], eax
.text:0001FD29                 mov     eax, [ebp+arg_0]
.text:0001FD2C                 cmp     dword ptr [eax+668h], 0
.text:0001FD33                 jnz     short loc_1FD6A
.text:0001FD35                 mov     ecx, [ebp+arg_0]
.text:0001FD38                 cmp     dword ptr [ecx+664h], 0
.text:0001FD3F                 jz      short loc_1FD6A
.text:0001FD41                 mov     edx, [ebp+arg_0]
.text:0001FD44                 mov     eax, [ebp+arg_0]
.text:0001FD47                 mov     ecx, [edx+658h]
.text:0001FD4D                 cmp     ecx, [eax+664h]
.text:0001FD53                 jbe     short loc_1FD6A
.text:0001FD55                 push    0
.text:0001FD57                 push    0FFFFFFFFh
.text:0001FD59                 push    offset $SG93940 ; "too much data received"
.text:0001FD5E                 mov     edx, [ebp+arg_0]
.text:0001FD61                 push    edx
.text:0001FD62                 call    _do_ssh2_transport
.text:0001FD67                 add     esp, 10h
.text:0001FD6A
.text:0001FD6A loc_1FD6A:                              ; CODE XREF: _ssh2_protocol+27j
.text:0001FD6A                                         ; _ssh2_protocol+4Bj ...
.text:0001FD6A                 cmp     [ebp+arg_C], 0
.text:0001FD6E                 jz      short loc_1FD98
.text:0001FD70                 mov     esi, esp
.text:0001FD72                 mov     eax, [ebp+arg_C]
.text:0001FD75                 push    eax
.text:0001FD76                 mov     ecx, [ebp+arg_0]
.text:0001FD79                 push    ecx
.text:0001FD7A                 mov     edx, [ebp+arg_C]
.text:0001FD7D                 mov     eax, [edx+8]
.text:0001FD80                 mov     ecx, [ebp+arg_0]
.text:0001FD83                 mov     edx, [ecx+eax*4+244h]
.text:0001FD8A                 call    edx
.text:0001FD8C                 add     esp, 8
.text:0001FD8F                 cmp     esi, esp
.text:0001FD91                 call    __RTC_CheckEsp
.text:0001FD96                 jmp     short loc_1FDD6
.text:0001FD98 ; ---------------------------------------------------------------------------
.text:0001FD98
.text:0001FD98 loc_1FD98:                              ; CODE XREF: _ssh2_protocol+86j
.text:0001FD98                 mov     eax, [ebp+arg_0]
.text:0001FD9B                 cmp     dword ptr [eax+20Ch], 0
.text:0001FDA2                 jnz     short loc_1FDBE
.text:0001FDA4                 mov     ecx, [ebp+arg_C]
.text:0001FDA7                 push    ecx
.text:0001FDA8                 mov     edx, [ebp+arg_8]
.text:0001FDAB                 push    edx
.text:0001FDAC                 mov     eax, [ebp+var_4]
.text:0001FDAF                 push    eax
.text:0001FDB0                 mov     ecx, [ebp+arg_0]
.text:0001FDB3                 push    ecx
.text:0001FDB4                 call    _do_ssh2_transport
.text:0001FDB9                 add     esp, 10h
.text:0001FDBC                 jmp     short loc_1FDD6
.text:0001FDBE ; ---------------------------------------------------------------------------
.text:0001FDBE
.text:0001FDBE loc_1FDBE:                              ; CODE XREF: _ssh2_protocol+BAj
.text:0001FDBE                 mov     edx, [ebp+arg_C]
.text:0001FDC1                 push    edx
.text:0001FDC2                 mov     eax, [ebp+arg_8]
.text:0001FDC5                 push    eax
.text:0001FDC6                 mov     ecx, [ebp+var_4]
.text:0001FDC9                 push    ecx
.text:0001FDCA                 mov     edx, [ebp+arg_0]
.text:0001FDCD                 push    edx
.text:0001FDCE                 call    _do_ssh2_authconn
.text:0001FDD3                 add     esp, 10h
.text:0001FDD6
.text:0001FDD6 loc_1FDD6:                              ; CODE XREF: _ssh2_protocol+1Ej
.text:0001FDD6                                         ; _ssh2_protocol+AEj ...
.text:0001FDD6                 pop     esi
.text:0001FDD7                 add     esp, 4
.text:0001FDDA                 cmp     ebp, esp
.text:0001FDDC                 call    __RTC_CheckEsp
.text:0001FDE1                 mov     esp, ebp
.text:0001FDE3                 pop     ebp
.text:0001FDE4                 retn
.text:0001FDE4 _ssh2_protocol  endp
.text:0001FDE4
.text:0001FDE4 ; ---------------------------------------------------------------------------
.text:0001FDE5                 align 4
.text:0001FDE8
.text:0001FDE8 ; =============== S U B R O U T I N E =======================================
.text:0001FDE8
.text:0001FDE8 ; Attributes: bp-based frame
.text:0001FDE8
.text:0001FDE8 _ssh2_bare_connection_protocol proc near
.text:0001FDE8                                         ; DATA XREF: _do_ssh_connection_init+3BCo
.text:0001FDE8
.text:0001FDE8 var_4           = dword ptr -4
.text:0001FDE8 arg_0           = dword ptr  8
.text:0001FDE8 arg_4           = dword ptr  0Ch
.text:0001FDE8 arg_8           = dword ptr  10h
.text:0001FDE8 arg_C           = dword ptr  14h
.text:0001FDE8
.text:0001FDE8                 push    ebp
.text:0001FDE9                 mov     ebp, esp
.text:0001FDEB                 push    ecx
.text:0001FDEC                 push    esi
.text:0001FDED                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0001FDF4                 mov     eax, [ebp+arg_4]
.text:0001FDF7                 mov     [ebp+var_4], eax
.text:0001FDFA                 mov     ecx, [ebp+arg_0]
.text:0001FDFD                 cmp     dword ptr [ecx+118h], 4
.text:0001FE04                 jnz     short loc_1FE08
.text:0001FE06                 jmp     short loc_1FE4E
.text:0001FE08 ; ---------------------------------------------------------------------------
.text:0001FE08
.text:0001FE08 loc_1FE08:                              ; CODE XREF: _ssh2_bare_connection_protocol+1Cj
.text:0001FE08                 cmp     [ebp+arg_C], 0
.text:0001FE0C                 jz      short loc_1FE36
.text:0001FE0E                 mov     esi, esp
.text:0001FE10                 mov     edx, [ebp+arg_C]
.text:0001FE13                 push    edx
.text:0001FE14                 mov     eax, [ebp+arg_0]
.text:0001FE17                 push    eax
.text:0001FE18                 mov     ecx, [ebp+arg_C]
.text:0001FE1B                 mov     edx, [ecx+8]
.text:0001FE1E                 mov     eax, [ebp+arg_0]
.text:0001FE21                 mov     ecx, [eax+edx*4+244h]
.text:0001FE28                 call    ecx
.text:0001FE2A                 add     esp, 8
.text:0001FE2D                 cmp     esi, esp
.text:0001FE2F                 call    __RTC_CheckEsp
.text:0001FE34                 jmp     short loc_1FE4E
.text:0001FE36 ; ---------------------------------------------------------------------------
.text:0001FE36
.text:0001FE36 loc_1FE36:                              ; CODE XREF: _ssh2_bare_connection_protocol+24j
.text:0001FE36                 mov     edx, [ebp+arg_C]
.text:0001FE39                 push    edx
.text:0001FE3A                 mov     eax, [ebp+arg_8]
.text:0001FE3D                 push    eax
.text:0001FE3E                 mov     ecx, [ebp+var_4]
.text:0001FE41                 push    ecx
.text:0001FE42                 mov     edx, [ebp+arg_0]
.text:0001FE45                 push    edx
.text:0001FE46                 call    _do_ssh2_authconn
.text:0001FE4B                 add     esp, 10h
.text:0001FE4E
.text:0001FE4E loc_1FE4E:                              ; CODE XREF: _ssh2_bare_connection_protocol+1Ej
.text:0001FE4E                                         ; _ssh2_bare_connection_protocol+4Cj
.text:0001FE4E                 pop     esi
.text:0001FE4F                 add     esp, 4
.text:0001FE52                 cmp     ebp, esp
.text:0001FE54                 call    __RTC_CheckEsp
.text:0001FE59                 mov     esp, ebp
.text:0001FE5B                 pop     ebp
.text:0001FE5C                 retn
.text:0001FE5C _ssh2_bare_connection_protocol endp
.text:0001FE5C
.text:0001FE5C ; ---------------------------------------------------------------------------
.text:0001FE5D                 db 0Bh dup(0CCh)
.text:0001FE68
.text:0001FE68 ; =============== S U B R O U T I N E =======================================
.text:0001FE68
.text:0001FE68 ; Attributes: bp-based frame
.text:0001FE68
.text:0001FE68 _ssh_cache_conf_values proc near        ; CODE XREF: _ssh_init+3Fp
.text:0001FE68                                         ; _ssh_reconfig+272p
.text:0001FE68
.text:0001FE68 arg_0           = dword ptr  8
.text:0001FE68
.text:0001FE68                 push    ebp
.text:0001FE69                 mov     ebp, esp
.text:0001FE6B                 push    77h ; 'w'
.text:0001FE6D                 mov     eax, [ebp+arg_0]
.text:0001FE70                 mov     ecx, [eax+21Ch]
.text:0001FE76                 push    ecx
.text:0001FE77                 call    _conf_get_int
.text:0001FE7C                 add     esp, 8
.text:0001FE7F                 mov     edx, [ebp+arg_0]
.text:0001FE82                 mov     [edx+220h], eax
.text:0001FE88                 cmp     ebp, esp
.text:0001FE8A                 call    __RTC_CheckEsp
.text:0001FE8F                 pop     ebp
.text:0001FE90                 retn
.text:0001FE90 _ssh_cache_conf_values endp
.text:0001FE90
.text:0001FE90 ; ---------------------------------------------------------------------------
.text:0001FE91                 align 8
.text:0001FE98
.text:0001FE98 _ssh_free:                              ; DATA XREF: .data:00006234o
.text:0001FE98                 push    ebp
.text:0001FE99                 mov     ebp, esp
.text:0001FE9B                 sub     esp, 24h
.text:0001FE9E                 push    esi
.text:0001FE9F                 mov     eax, 0CCCCCCCCh
.text:0001FEA4                 mov     [ebp-24h], eax
.text:0001FEA7                 mov     [ebp-20h], eax
.text:0001FEAA                 mov     [ebp-1Ch], eax
.text:0001FEAD                 mov     [ebp-18h], eax
.text:0001FEB0                 mov     [ebp-14h], eax
.text:0001FEB3                 mov     [ebp-10h], eax
.text:0001FEB6                 mov     [ebp-0Ch], eax
.text:0001FEB9                 mov     [ebp-8], eax
.text:0001FEBC                 mov     [ebp-4], eax
.text:0001FEBF                 mov     eax, [ebp+8]
.text:0001FEC2                 mov     [ebp-4], eax
.text:0001FEC5                 mov     ecx, [ebp-4]
.text:0001FEC8                 cmp     dword ptr [ecx+58h], 0
.text:0001FECC                 jz      short loc_1FEEC
.text:0001FECE                 mov     esi, esp
.text:0001FED0                 mov     edx, [ebp-4]
.text:0001FED3                 mov     eax, [edx+58h]
.text:0001FED6                 push    eax
.text:0001FED7                 mov     ecx, [ebp-4]
.text:0001FEDA                 mov     edx, [ecx+54h]
.text:0001FEDD                 mov     eax, [edx+4]
.text:0001FEE0                 call    eax
.text:0001FEE2                 add     esp, 4
.text:0001FEE5                 cmp     esi, esp
.text:0001FEE7                 call    __RTC_CheckEsp
.text:0001FEEC
.text:0001FEEC loc_1FEEC:                              ; CODE XREF: .text:0001FECCj
.text:0001FEEC                 mov     ecx, [ebp-4]
.text:0001FEEF                 cmp     dword ptr [ecx+68h], 0
.text:0001FEF3                 jz      short loc_1FF13
.text:0001FEF5                 mov     esi, esp
.text:0001FEF7                 mov     edx, [ebp-4]
.text:0001FEFA                 mov     eax, [edx+68h]
.text:0001FEFD                 push    eax
.text:0001FEFE                 mov     ecx, [ebp-4]
.text:0001FF01                 mov     edx, [ecx+60h]
.text:0001FF04                 mov     eax, [edx+4]
.text:0001FF07                 call    eax
.text:0001FF09                 add     esp, 4
.text:0001FF0C                 cmp     esi, esp
.text:0001FF0E                 call    __RTC_CheckEsp
.text:0001FF13
.text:0001FF13 loc_1FF13:                              ; CODE XREF: .text:0001FEF3j
.text:0001FF13                 mov     ecx, [ebp-4]
.text:0001FF16                 cmp     dword ptr [ecx+6Ch], 0
.text:0001FF1A                 jz      short loc_1FF3A
.text:0001FF1C                 mov     esi, esp
.text:0001FF1E                 mov     edx, [ebp-4]
.text:0001FF21                 mov     eax, [edx+6Ch]
.text:0001FF24                 push    eax
.text:0001FF25                 mov     ecx, [ebp-4]
.text:0001FF28                 mov     edx, [ecx+64h]
.text:0001FF2B                 mov     eax, [edx+4]
.text:0001FF2E                 call    eax
.text:0001FF30                 add     esp, 4
.text:0001FF33                 cmp     esi, esp
.text:0001FF35                 call    __RTC_CheckEsp
.text:0001FF3A
.text:0001FF3A loc_1FF3A:                              ; CODE XREF: .text:0001FF1Aj
.text:0001FF3A                 mov     ecx, [ebp-4]
.text:0001FF3D                 cmp     dword ptr [ecx+78h], 0
.text:0001FF41                 jz      short loc_1FF61
.text:0001FF43                 mov     esi, esp
.text:0001FF45                 mov     edx, [ebp-4]
.text:0001FF48                 mov     eax, [edx+78h]
.text:0001FF4B                 push    eax
.text:0001FF4C                 mov     ecx, [ebp-4]
.text:0001FF4F                 mov     edx, [ecx+70h]
.text:0001FF52                 mov     eax, [edx+4]
.text:0001FF55                 call    eax
.text:0001FF57                 add     esp, 4
.text:0001FF5A                 cmp     esi, esp
.text:0001FF5C                 call    __RTC_CheckEsp
.text:0001FF61
.text:0001FF61 loc_1FF61:                              ; CODE XREF: .text:0001FF41j
.text:0001FF61                 mov     ecx, [ebp-4]
.text:0001FF64                 cmp     dword ptr [ecx+7Ch], 0
.text:0001FF68                 jz      short loc_1FF88
.text:0001FF6A                 mov     esi, esp
.text:0001FF6C                 mov     edx, [ebp-4]
.text:0001FF6F                 mov     eax, [edx+7Ch]
.text:0001FF72                 push    eax
.text:0001FF73                 mov     ecx, [ebp-4]
.text:0001FF76                 mov     edx, [ecx+74h]
.text:0001FF79                 mov     eax, [edx+4]
.text:0001FF7C                 call    eax
.text:0001FF7E                 add     esp, 4
.text:0001FF81                 cmp     esi, esp
.text:0001FF83                 call    __RTC_CheckEsp
.text:0001FF88
.text:0001FF88 loc_1FF88:                              ; CODE XREF: .text:0001FF68j
.text:0001FF88                 mov     ecx, [ebp-4]
.text:0001FF8B                 cmp     dword ptr [ecx+88h], 0
.text:0001FF92                 jz      short loc_1FFD8
.text:0001FF94                 mov     edx, [ebp-4]
.text:0001FF97                 cmp     dword ptr [edx+80h], 0
.text:0001FF9E                 jz      short loc_1FFC6
.text:0001FFA0                 mov     esi, esp
.text:0001FFA2                 mov     eax, [ebp-4]
.text:0001FFA5                 mov     ecx, [eax+88h]
.text:0001FFAB                 push    ecx
.text:0001FFAC                 mov     edx, [ebp-4]
.text:0001FFAF                 mov     eax, [edx+80h]
.text:0001FFB5                 mov     ecx, [eax+0Ch]
.text:0001FFB8                 call    ecx
.text:0001FFBA                 add     esp, 4
.text:0001FFBD                 cmp     esi, esp
.text:0001FFBF                 call    __RTC_CheckEsp
.text:0001FFC4                 jmp     short loc_1FFD8
.text:0001FFC6 ; ---------------------------------------------------------------------------
.text:0001FFC6
.text:0001FFC6 loc_1FFC6:                              ; CODE XREF: .text:0001FF9Ej
.text:0001FFC6                 mov     edx, [ebp-4]
.text:0001FFC9                 mov     eax, [edx+88h]
.text:0001FFCF                 push    eax
.text:0001FFD0                 call    _zlib_compress_cleanup
.text:0001FFD5                 add     esp, 4
.text:0001FFD8
.text:0001FFD8 loc_1FFD8:                              ; CODE XREF: .text:0001FF92j
.text:0001FFD8                                         ; .text:0001FFC4j
.text:0001FFD8                 mov     ecx, [ebp-4]
.text:0001FFDB                 cmp     dword ptr [ecx+8Ch], 0
.text:0001FFE2                 jz      short loc_20028
.text:0001FFE4                 mov     edx, [ebp-4]
.text:0001FFE7                 cmp     dword ptr [edx+84h], 0
.text:0001FFEE                 jz      short loc_20016
.text:0001FFF0                 mov     esi, esp
.text:0001FFF2                 mov     eax, [ebp-4]
.text:0001FFF5                 mov     ecx, [eax+8Ch]
.text:0001FFFB                 push    ecx
.text:0001FFFC                 mov     edx, [ebp-4]
.text:0001FFFC ; ---------------------------------------------------------------------------
.text:0001FFFF                 db 8Bh
.text:00020000 off_20000       dd offset loc_8482      ; DATA XREF: _ssh2_msg_userauth_banner+47o
.text:00020004                 dd 18488B00h, 0C483D1FFh, 0E8F43B04h
.text:00020010                 dd offset __RTC_CheckEsp-20014h
.text:00020014 ; ---------------------------------------------------------------------------
.text:00020014                 jmp     short loc_20028
.text:00020016 ; ---------------------------------------------------------------------------
.text:00020016
.text:00020016 loc_20016:                              ; CODE XREF: .text:0001FFEEj
.text:00020016                 mov     edx, [ebp-4]
.text:00020019                 mov     eax, [edx+8Ch]
.text:0002001F                 push    eax
.text:00020020                 call    _zlib_decompress_cleanup
.text:00020025                 add     esp, 4
.text:00020028
.text:00020028 loc_20028:                              ; CODE XREF: .text:0001FFE2j
.text:00020028                                         ; .text:00020014j
.text:00020028                 mov     ecx, [ebp-4]
.text:0002002B                 cmp     dword ptr [ecx+0C0h], 0
.text:00020032                 jz      short loc_20046
.text:00020034                 mov     edx, [ebp-4]
.text:00020037                 mov     eax, [edx+0C0h]
.text:0002003D                 push    eax
.text:0002003E                 call    _dh_cleanup
.text:00020043                 add     esp, 4
.text:00020046
.text:00020046 loc_20046:                              ; CODE XREF: .text:00020032j
.text:00020046                 mov     ecx, [ebp-4]
.text:00020049                 mov     edx, [ecx+0D0h]
.text:0002004F                 push    edx
.text:00020050                 call    _safefree
.text:00020055                 add     esp, 4
.text:00020058
.text:00020058 loc_20058:                              ; CODE XREF: .text:000200AEj
.text:00020058                 mov     eax, [ebp-4]
.text:0002005B                 mov     ecx, [eax+130h]
.text:00020061                 mov     edx, [ebp-4]
.text:00020064                 mov     eax, [edx+130h]
.text:0002006A                 sub     eax, 1
.text:0002006D                 mov     edx, [ebp-4]
.text:00020070                 mov     [edx+130h], eax
.text:00020076                 test    ecx, ecx
.text:00020078                 jle     short loc_20083
.text:0002007A                 mov     dword ptr [ebp-20h], 1
.text:00020081                 jmp     short loc_2008A
.text:00020083 ; ---------------------------------------------------------------------------
.text:00020083
.text:00020083 loc_20083:                              ; CODE XREF: .text:00020078j
.text:00020083                 mov     dword ptr [ebp-20h], 0
.text:0002008A
.text:0002008A loc_2008A:                              ; CODE XREF: .text:00020081j
.text:0002008A                 cmp     dword ptr [ebp-20h], 0
.text:0002008E                 jz      short loc_200B0
.text:00020090                 mov     eax, [ebp-4]
.text:00020093                 mov     ecx, [eax+130h]
.text:00020099                 mov     edx, [ebp-4]
.text:0002009C                 mov     eax, [edx+12Ch]
.text:000200A2                 mov     ecx, [eax+ecx*4]
.text:000200A5                 push    ecx
.text:000200A6                 call    _ssh_free_packet
.text:000200AB                 add     esp, 4
.text:000200AE                 jmp     short loc_20058
.text:000200B0 ; ---------------------------------------------------------------------------
.text:000200B0
.text:000200B0 loc_200B0:                              ; CODE XREF: .text:0002008Ej
.text:000200B0                 mov     edx, [ebp-4]
.text:000200B3                 mov     eax, [edx+12Ch]
.text:000200B9                 push    eax
.text:000200BA                 call    _safefree
.text:000200BF                 add     esp, 4
.text:000200C2
.text:000200C2 loc_200C2:                              ; CODE XREF: .text:000200F5j
.text:000200C2                 mov     ecx, [ebp-4]
.text:000200C5                 cmp     dword ptr [ecx+644h], 0
.text:000200CC                 jz      short loc_200F7
.text:000200CE                 mov     edx, [ebp-4]
.text:000200D1                 mov     eax, [edx+644h]
.text:000200D7                 mov     [ebp-14h], eax
.text:000200DA                 mov     ecx, [ebp-4]
.text:000200DD                 mov     edx, [ebp-14h]
.text:000200E0                 mov     eax, [edx+10h]
.text:000200E3                 mov     [ecx+644h], eax
.text:000200E9                 mov     ecx, [ebp-14h]
.text:000200EC                 push    ecx
.text:000200ED                 call    _safefree
.text:000200F2                 add     esp, 4
.text:000200F5                 jmp     short loc_200C2
.text:000200F7 ; ---------------------------------------------------------------------------
.text:000200F7
.text:000200F7 loc_200F7:                              ; CODE XREF: .text:000200CCj
.text:000200F7                 mov     edx, [ebp-4]
.text:000200FA                 mov     dword ptr [edx+648h], 0
.text:00020104                 mov     eax, [ebp-4]
.text:00020107                 mov     dword ptr [eax+644h], 0
.text:00020111                 mov     ecx, [ebp-4]
.text:00020114                 cmp     dword ptr [ecx+0F8h], 0
.text:0002011B                 jz      loc_20228
.text:00020121
.text:00020121 loc_20121:                              ; CODE XREF: .text:00020204j
.text:00020121                 push    0
.text:00020123                 mov     edx, [ebp-4]
.text:00020126                 mov     eax, [edx+0F8h]
.text:0002012C                 push    eax
.text:0002012D                 call    _delpos234
.text:00020132                 add     esp, 8
.text:00020135                 mov     [ebp-8], eax
.text:00020138                 cmp     dword ptr [ebp-8], 0
.text:0002013C                 jz      loc_20209
.text:00020142                 mov     ecx, [ebp-8]
.text:00020145                 mov     edx, [ecx+0Ch]
.text:00020148                 mov     [ebp-24h], edx
.text:0002014B                 cmp     dword ptr [ebp-24h], 1
.text:0002014F                 jz      short loc_2015F
.text:00020151                 cmp     dword ptr [ebp-24h], 2
.text:00020155                 jle     short loc_20191
.text:00020157                 cmp     dword ptr [ebp-24h], 4
.text:0002015B                 jle     short loc_20179
.text:0002015D                 jmp     short loc_20191
.text:0002015F ; ---------------------------------------------------------------------------
.text:0002015F
.text:0002015F loc_2015F:                              ; CODE XREF: .text:0002014Fj
.text:0002015F                 mov     eax, [ebp-8]
.text:00020162                 cmp     dword ptr [eax+4Ch], 0
.text:00020166                 jz      short loc_20177
.text:00020168                 mov     ecx, [ebp-8]
.text:0002016B                 mov     edx, [ecx+4Ch]
.text:0002016E                 push    edx
.text:0002016F                 call    _x11_close
.text:00020174                 add     esp, 4
.text:00020177
.text:00020177 loc_20177:                              ; CODE XREF: .text:00020166j
.text:00020177                 jmp     short loc_20191
.text:00020179 ; ---------------------------------------------------------------------------
.text:00020179
.text:00020179 loc_20179:                              ; CODE XREF: .text:0002015Bj
.text:00020179                 mov     eax, [ebp-8]
.text:0002017C                 cmp     dword ptr [eax+4Ch], 0
.text:00020180                 jz      short loc_20191
.text:00020182                 mov     ecx, [ebp-8]
.text:00020185                 mov     edx, [ecx+4Ch]
.text:00020188                 push    edx
.text:00020189                 call    _pfd_close
.text:0002018E                 add     esp, 4
.text:00020191
.text:00020191 loc_20191:                              ; CODE XREF: .text:00020155j
.text:00020191                                         ; .text:0002015Dj ...
.text:00020191                 mov     eax, [ebp-4]
.text:00020194                 cmp     dword ptr [eax+16Ch], 2
.text:0002019B                 jnz     short loc_201F8
.text:0002019D                 mov     ecx, [ebp-8]
.text:000201A0                 mov     edx, [ecx+40h]
.text:000201A3                 mov     [ebp-18h], edx
.text:000201A6
.text:000201A6 loc_201A6:                              ; CODE XREF: .text:000201E7j
.text:000201A6                 cmp     dword ptr [ebp-18h], 0
.text:000201AA                 jz      short loc_201E9
.text:000201AC                 mov     esi, esp
.text:000201AE                 mov     eax, [ebp-18h]
.text:000201B1                 mov     ecx, [eax+4]
.text:000201B4                 push    ecx
.text:000201B5                 push    0
.text:000201B7                 mov     edx, [ebp-8]
.text:000201BA                 push    edx
.text:000201BB                 mov     eax, [ebp-18h]
.text:000201BE                 mov     ecx, [eax]
.text:000201C0                 call    ecx
.text:000201C2                 add     esp, 0Ch
.text:000201C5                 cmp     esi, esp
.text:000201C7                 call    __RTC_CheckEsp
.text:000201CC                 mov     edx, [ebp-18h]
.text:000201CF                 mov     eax, [edx+8]
.text:000201D2                 mov     [ebp-1Ch], eax
.text:000201D5                 mov     ecx, [ebp-18h]
.text:000201D8                 push    ecx
.text:000201D9                 call    _safefree
.text:000201DE                 add     esp, 4
.text:000201E1                 mov     edx, [ebp-1Ch]
.text:000201E4                 mov     [ebp-18h], edx
.text:000201E7                 jmp     short loc_201A6
.text:000201E9 ; ---------------------------------------------------------------------------
.text:000201E9
.text:000201E9 loc_201E9:                              ; CODE XREF: .text:000201AAj
.text:000201E9                 mov     eax, [ebp-8]
.text:000201EC                 add     eax, 20h ; ' '
.text:000201EF                 push    eax
.text:000201F0                 call    _bufchain_clear
.text:000201F5                 add     esp, 4
.text:000201F8
.text:000201F8 loc_201F8:                              ; CODE XREF: .text:0002019Bj
.text:000201F8                 mov     ecx, [ebp-8]
.text:000201FB                 push    ecx
.text:000201FC                 call    _safefree
.text:00020201                 add     esp, 4
.text:00020204                 jmp     loc_20121
.text:00020209 ; ---------------------------------------------------------------------------
.text:00020209
.text:00020209 loc_20209:                              ; CODE XREF: .text:0002013Cj
.text:00020209                 mov     edx, [ebp-4]
.text:0002020C                 mov     eax, [edx+0F8h]
.text:00020212                 push    eax
.text:00020213                 call    _freetree234
.text:00020218                 add     esp, 4
.text:0002021B                 mov     ecx, [ebp-4]
.text:0002021E                 mov     dword ptr [ecx+0F8h], 0
.text:00020228
.text:00020228 loc_20228:                              ; CODE XREF: .text:0002011Bj
.text:00020228                 mov     edx, [ebp-4]
.text:0002022B                 cmp     dword ptr [edx+0CCh], 0
.text:00020232                 jz      short loc_20246
.text:00020234                 mov     eax, [ebp-4]
.text:00020237                 mov     ecx, [eax+0CCh]
.text:0002023D                 push    ecx
.text:0002023E                 call    _sharestate_free
.text:00020243                 add     esp, 4
.text:00020246
.text:00020246 loc_20246:                              ; CODE XREF: .text:00020232j
.text:00020246                 mov     edx, [ebp-4]
.text:00020249                 cmp     dword ptr [edx+110h], 0
.text:00020250                 jz      short loc_2029C
.text:00020252
.text:00020252 loc_20252:                              ; CODE XREF: .text:0002027Bj
.text:00020252                 push    0
.text:00020254                 mov     eax, [ebp-4]
.text:00020257                 mov     ecx, [eax+110h]
.text:0002025D                 push    ecx
.text:0002025E                 call    _delpos234
.text:00020263                 add     esp, 8
.text:00020266                 mov     [ebp-0Ch], eax
.text:00020269                 cmp     dword ptr [ebp-0Ch], 0
.text:0002026D                 jz      short loc_2027D
.text:0002026F                 mov     edx, [ebp-0Ch]
.text:00020272                 push    edx
.text:00020273                 call    _free_rportfwd
.text:00020278                 add     esp, 4
.text:0002027B                 jmp     short loc_20252
.text:0002027D ; ---------------------------------------------------------------------------
.text:0002027D
.text:0002027D loc_2027D:                              ; CODE XREF: .text:0002026Dj
.text:0002027D                 mov     eax, [ebp-4]
.text:00020280                 mov     ecx, [eax+110h]
.text:00020286                 push    ecx
.text:00020287                 call    _freetree234
.text:0002028C                 add     esp, 4
.text:0002028F                 mov     edx, [ebp-4]
.text:00020292                 mov     dword ptr [edx+110h], 0
.text:0002029C
.text:0002029C loc_2029C:                              ; CODE XREF: .text:00020250j
.text:0002029C                 mov     eax, [ebp-4]
.text:0002029F                 mov     ecx, [eax+13Ch]
.text:000202A5                 push    ecx
.text:000202A6                 call    _safefree
.text:000202AB                 add     esp, 4
.text:000202AE                 mov     edx, [ebp-4]
.text:000202B1                 cmp     dword ptr [edx+160h], 0
.text:000202B8                 jz      short loc_202CC
.text:000202BA                 mov     eax, [ebp-4]
.text:000202BD                 mov     ecx, [eax+160h]
.text:000202C3                 push    ecx
.text:000202C4                 call    _x11_free_display
.text:000202C9                 add     esp, 4
.text:000202CC
.text:000202CC loc_202CC:                              ; CODE XREF: .text:000202B8j
.text:000202CC                                         ; .text:000202F5j
.text:000202CC                 push    0
.text:000202CE                 mov     edx, [ebp-4]
.text:000202D1                 mov     eax, [edx+168h]
.text:000202D7                 push    eax
.text:000202D8                 call    _delpos234
.text:000202DD                 add     esp, 8
.text:000202E0                 mov     [ebp-10h], eax
.text:000202E3                 cmp     dword ptr [ebp-10h], 0
.text:000202E7                 jz      short loc_202F7
.text:000202E9                 mov     ecx, [ebp-10h]
.text:000202EC                 push    ecx
.text:000202ED                 call    _x11_free_fake_auth
.text:000202F2                 add     esp, 4
.text:000202F5                 jmp     short loc_202CC
.text:000202F7 ; ---------------------------------------------------------------------------
.text:000202F7
.text:000202F7 loc_202F7:                              ; CODE XREF: .text:000202E7j
.text:000202F7                 mov     edx, [ebp-4]
.text:000202FA                 mov     eax, [edx+168h]
.text:00020300                 push    eax
.text:00020301                 call    _freetree234
.text:00020306                 add     esp, 4
.text:00020309                 mov     ecx, [ebp-4]
.text:0002030C                 mov     edx, [ecx+198h]
.text:00020312                 push    edx
.text:00020313                 call    _safefree
.text:00020318                 add     esp, 4
.text:0002031B                 mov     eax, [ebp-4]
.text:0002031E                 mov     ecx, [eax+19Ch]
.text:00020324                 push    ecx
.text:00020325                 call    _safefree
.text:0002032A                 add     esp, 4
.text:0002032D                 mov     edx, [ebp-4]
.text:00020330                 mov     eax, [edx+1A0h]
.text:00020336                 push    eax
.text:00020337                 call    _safefree
.text:0002033C                 add     esp, 4
.text:0002033F                 mov     ecx, [ebp-4]
.text:00020342                 mov     edx, [ecx+1A4h]
.text:00020348                 push    edx
.text:00020349                 call    _safefree
.text:0002034E                 add     esp, 4
.text:00020351                 mov     eax, [ebp-4]
.text:00020354                 mov     ecx, [eax+4]
.text:00020357                 push    ecx
.text:00020358                 call    _safefree
.text:0002035D                 add     esp, 4
.text:00020360                 mov     edx, [ebp-4]
.text:00020363                 mov     eax, [edx+8]
.text:00020366                 push    eax
.text:00020367                 call    _safefree
.text:0002036C                 add     esp, 4
.text:0002036F                 mov     ecx, [ebp-4]
.text:00020372                 mov     edx, [ecx+678h]
.text:00020378                 push    edx
.text:00020379                 call    _safefree
.text:0002037E                 add     esp, 4
.text:00020381                 mov     eax, [ebp-4]
.text:00020384                 mov     ecx, [eax+98h]
.text:0002038A                 push    ecx
.text:0002038B                 call    _safefree
.text:00020390                 add     esp, 4
.text:00020393                 mov     edx, [ebp-4]
.text:00020396                 cmp     dword ptr [edx+5Ch], 0
.text:0002039A                 jz      short loc_203B5
.text:0002039C                 mov     eax, [ebp-4]
.text:0002039F                 mov     ecx, [eax+5Ch]
.text:000203A2                 push    ecx
.text:000203A3                 call    _crcda_free_context
.text:000203A8                 add     esp, 4
.text:000203AB                 mov     edx, [ebp-4]
.text:000203AE                 mov     dword ptr [edx+5Ch], 0
.text:000203B5
.text:000203B5 loc_203B5:                              ; CODE XREF: .text:0002039Aj
.text:000203B5                 mov     eax, [ebp-4]
.text:000203B8                 cmp     dword ptr [eax+10h], 0
.text:000203BC                 jz      short loc_203CC
.text:000203BE                 push    1
.text:000203C0                 mov     ecx, [ebp-4]
.text:000203C3                 push    ecx
.text:000203C4                 call    _ssh_do_close
.text:000203C9                 add     esp, 8
.text:000203CC
.text:000203CC loc_203CC:                              ; CODE XREF: .text:000203BCj
.text:000203CC                 mov     edx, [ebp-4]
.text:000203CF                 push    edx
.text:000203D0                 call    _expire_timer_context
.text:000203D5                 add     esp, 4
.text:000203D8                 mov     eax, [ebp-4]
.text:000203DB                 cmp     dword ptr [eax+654h], 0
.text:000203E2                 jz      short loc_203F6
.text:000203E4                 mov     ecx, [ebp-4]
.text:000203E7                 mov     edx, [ecx+654h]
.text:000203ED                 push    edx
.text:000203EE                 call    _pinger_free
.text:000203F3                 add     esp, 4
.text:000203F6
.text:000203F6 loc_203F6:                              ; CODE XREF: .text:000203E2j
.text:000203F6                 mov     eax, [ebp-4]
.text:000203F9                 add     eax, 238h
.text:000203FE                 push    eax
.text:000203FF                 call    _bufchain_clear
.text:00020404                 add     esp, 4
.text:00020407                 mov     ecx, [ebp-4]
.text:0002040A                 mov     edx, [ecx+224h]
.text:00020410                 push    edx
.text:00020411                 call    _safefree
.text:00020416                 add     esp, 4
.text:00020419                 mov     eax, [ebp-4]
.text:0002041C                 mov     ecx, [eax+21Ch]
.text:00020422                 push    ecx
.text:00020423                 call    _conf_free
.text:00020428                 add     esp, 4
.text:0002042B                 mov     edx, [ebp-4]
.text:0002042E                 cmp     dword ptr [edx+67Ch], 0
.text:00020435                 jz      short loc_20449
.text:00020437                 mov     eax, [ebp-4]
.text:0002043A                 mov     ecx, [eax+67Ch]
.text:00020440                 push    ecx
.text:00020441                 call    _ssh_gss_cleanup
.text:00020446                 add     esp, 4
.text:00020449
.text:00020449 loc_20449:                              ; CODE XREF: .text:00020435j
.text:00020449                 mov     edx, [ebp-4]
.text:0002044C                 push    edx
.text:0002044D                 call    _safefree
.text:00020452                 add     esp, 4
.text:00020455                 call    _random_unref
.text:0002045A                 pop     esi
.text:0002045B                 add     esp, 24h
.text:0002045E                 cmp     ebp, esp
.text:00020460                 call    __RTC_CheckEsp
.text:00020465                 mov     esp, ebp
.text:00020467                 pop     ebp
.text:00020468                 retn
.text:00020468 ; ---------------------------------------------------------------------------
.text:00020469                 db 0Fh dup(0CCh)
.text:00020478
.text:00020478 ; =============== S U B R O U T I N E =======================================
.text:00020478
.text:00020478 ; Attributes: bp-based frame
.text:00020478
.text:00020478 _ssh_reconfig   proc near               ; DATA XREF: .data:00006238o
.text:00020478
.text:00020478 var_20          = dword ptr -20h
.text:00020478 var_1C          = dword ptr -1Ch
.text:00020478 var_18          = dword ptr -18h
.text:00020478 var_14          = dword ptr -14h
.text:00020478 var_10          = dword ptr -10h
.text:00020478 var_C           = dword ptr -0Ch
.text:00020478 var_8           = dword ptr -8
.text:00020478 var_4           = dword ptr -4
.text:00020478 arg_0           = dword ptr  8
.text:00020478 arg_4           = dword ptr  0Ch
.text:00020478
.text:00020478                 push    ebp
.text:00020479                 mov     ebp, esp
.text:0002047B                 sub     esp, 20h
.text:0002047E                 push    esi
.text:0002047F                 mov     eax, 0CCCCCCCCh
.text:00020484                 mov     [ebp+var_20], eax
.text:00020487                 mov     [ebp+var_1C], eax
.text:0002048A                 mov     [ebp+var_18], eax
.text:0002048D                 mov     [ebp+var_14], eax
.text:00020490                 mov     [ebp+var_10], eax
.text:00020493                 mov     [ebp+var_C], eax
.text:00020496                 mov     [ebp+var_8], eax
.text:00020499                 mov     [ebp+var_4], eax
.text:0002049C                 mov     eax, [ebp+arg_0]
.text:0002049F                 mov     [ebp+var_4], eax
.text:000204A2                 mov     [ebp+var_8], 0
.text:000204A9                 mov     byte ptr [ebp+var_C+3], 0
.text:000204AD                 mov     ecx, [ebp+arg_4]
.text:000204B0                 push    ecx
.text:000204B1                 mov     edx, [ebp+var_4]
.text:000204B4                 mov     eax, [edx+21Ch]
.text:000204BA                 push    eax
.text:000204BB                 mov     ecx, [ebp+var_4]
.text:000204BE                 mov     edx, [ecx+654h]
.text:000204C4                 push    edx
.text:000204C5                 call    _pinger_reconfig
.text:000204CA                 add     esp, 0Ch
.text:000204CD                 mov     eax, [ebp+var_4]
.text:000204D0                 cmp     dword ptr [eax+114h], 0
.text:000204D7                 jz      short loc_204E9
.text:000204D9                 mov     ecx, [ebp+arg_4]
.text:000204DC                 push    ecx
.text:000204DD                 mov     edx, [ebp+var_4]
.text:000204E0                 push    edx
.text:000204E1                 call    _ssh_setup_portfwd
.text:000204E6                 add     esp, 8
.text:000204E9
.text:000204E9 loc_204E9:                              ; CODE XREF: _ssh_reconfig+5Fj
.text:000204E9                 push    18h
.text:000204EB                 mov     eax, [ebp+arg_4]
.text:000204EE                 push    eax
.text:000204EF                 call    _conf_get_int
.text:000204F4                 add     esp, 8
.text:000204F7                 mov     [ebp+var_18], eax
.text:000204FA                 push    18h
.text:000204FC                 mov     ecx, [ebp+var_4]
.text:000204FF                 mov     edx, [ecx+21Ch]
.text:00020505                 push    edx
.text:00020506                 call    _conf_get_int
.text:0002050B                 add     esp, 8
.text:0002050E                 cmp     eax, [ebp+var_18]
.text:00020511                 jz      short loc_20589
.text:00020513                 cmp     [ebp+var_18], 0
.text:00020517                 jz      short loc_20589
.text:00020519                 mov     eax, [ebp+var_18]
.text:0002051C                 imul    eax, 3Ch
.text:0002051F                 imul    eax, 3E8h
.text:00020525                 mov     ecx, [ebp+var_4]
.text:00020528                 add     eax, [ecx+670h]
.text:0002052E                 mov     [ebp+var_1C], eax
.text:00020531                 mov     esi, esp
.text:00020533                 call    dword ptr ds:__imp__GetTickCount@0 ; GetTickCount()
.text:00020539                 cmp     esi, esp
.text:0002053B                 call    __RTC_CheckEsp
.text:00020540                 mov     [ebp+var_20], eax
.text:00020543                 mov     edx, [ebp+var_4]
.text:00020546                 mov     eax, [ebp+var_20]
.text:00020549                 sub     eax, [edx+670h]
.text:0002054F                 mov     ecx, [ebp+var_18]
.text:00020552                 imul    ecx, 3Ch
.text:00020555                 imul    ecx, 3E8h
.text:0002055B                 cmp     eax, ecx
.text:0002055D                 jbe     short loc_20568
.text:0002055F                 mov     [ebp+var_8], offset $SG94120 ; "timeout shortened"
.text:00020566                 jmp     short loc_20589
.text:00020568 ; ---------------------------------------------------------------------------
.text:00020568
.text:00020568 loc_20568:                              ; CODE XREF: _ssh_reconfig+E5j
.text:00020568                 mov     edx, [ebp+var_4]
.text:0002056B                 push    edx
.text:0002056C                 push    offset _ssh2_timer
.text:00020571                 mov     eax, [ebp+var_1C]
.text:00020574                 sub     eax, [ebp+var_20]
.text:00020577                 push    eax
.text:00020578                 call    _schedule_timer
.text:0002057D                 add     esp, 0Ch
.text:00020580                 mov     ecx, [ebp+var_4]
.text:00020583                 mov     [ecx+66Ch], eax
.text:00020589
.text:00020589 loc_20589:                              ; CODE XREF: _ssh_reconfig+99j
.text:00020589                                         ; _ssh_reconfig+9Fj ...
.text:00020589                 mov     edx, [ebp+var_4]
.text:0002058C                 mov     eax, [edx+664h]
.text:00020592                 mov     [ebp+var_10], eax
.text:00020595                 push    19h
.text:00020597                 mov     ecx, [ebp+var_4]
.text:0002059A                 mov     edx, [ecx+21Ch]
.text:000205A0                 push    edx
.text:000205A1                 call    _conf_get_str
.text:000205A6                 add     esp, 8
.text:000205A9                 push    eax
.text:000205AA                 call    _parse_blocksize
.text:000205AF                 add     esp, 4
.text:000205B2                 mov     ecx, [ebp+var_4]
.text:000205B5                 mov     [ecx+664h], eax
.text:000205BB                 mov     edx, [ebp+var_4]
.text:000205BE                 mov     eax, [ebp+var_10]
.text:000205C1                 cmp     eax, [edx+664h]
.text:000205C7                 jz      short loc_20604
.text:000205C9                 mov     ecx, [ebp+var_4]
.text:000205CC                 cmp     dword ptr [ecx+664h], 0
.text:000205D3                 jz      short loc_20604
.text:000205D5                 mov     edx, [ebp+var_4]
.text:000205D8                 mov     eax, [ebp+var_4]
.text:000205DB                 mov     ecx, [edx+65Ch]
.text:000205E1                 cmp     ecx, [eax+664h]
.text:000205E7                 ja      short loc_205FD
.text:000205E9                 mov     edx, [ebp+var_4]
.text:000205EC                 mov     eax, [ebp+var_4]
.text:000205EF                 mov     ecx, [edx+658h]
.text:000205F5                 cmp     ecx, [eax+664h]
.text:000205FB                 jbe     short loc_20604
.text:000205FD
.text:000205FD loc_205FD:                              ; CODE XREF: _ssh_reconfig+16Fj
.text:000205FD                 mov     [ebp+var_8], offset $SG94125 ; "data limit lowered"
.text:00020604
.text:00020604 loc_20604:                              ; CODE XREF: _ssh_reconfig+14Fj
.text:00020604                                         ; _ssh_reconfig+15Bj ...
.text:00020604                 push    16h
.text:00020606                 mov     edx, [ebp+var_4]
.text:00020609                 mov     eax, [edx+21Ch]
.text:0002060F                 push    eax
.text:00020610                 call    _conf_get_int
.text:00020615                 add     esp, 8
.text:00020618                 mov     esi, eax
.text:0002061A                 push    16h
.text:0002061C                 mov     ecx, [ebp+arg_4]
.text:0002061F                 push    ecx
.text:00020620                 call    _conf_get_int
.text:00020625                 add     esp, 8
.text:00020628                 cmp     esi, eax
.text:0002062A                 jz      short loc_20637
.text:0002062C                 mov     [ebp+var_8], offset $SG94127 ; "compression setting changed"
.text:00020633                 mov     byte ptr [ebp+var_C+3], 1
.text:00020637
.text:00020637 loc_20637:                              ; CODE XREF: _ssh_reconfig+1B2j
.text:00020637                 mov     [ebp+var_14], 0
.text:0002063E                 jmp     short loc_20649
.text:00020640 ; ---------------------------------------------------------------------------
.text:00020640
.text:00020640 loc_20640:                              ; CODE XREF: _ssh_reconfig:loc_2068Aj
.text:00020640                 mov     edx, [ebp+var_14]
.text:00020643                 add     edx, 1
.text:00020646                 mov     [ebp+var_14], edx
.text:00020649
.text:00020649 loc_20649:                              ; CODE XREF: _ssh_reconfig+1C6j
.text:00020649                 cmp     [ebp+var_14], 6
.text:0002064D                 jge     short loc_2068C
.text:0002064F                 mov     eax, [ebp+var_14]
.text:00020652                 push    eax
.text:00020653                 push    1Dh
.text:00020655                 mov     ecx, [ebp+var_4]
.text:00020658                 mov     edx, [ecx+21Ch]
.text:0002065E                 push    edx
.text:0002065F                 call    _conf_get_int_int
.text:00020664                 add     esp, 0Ch
.text:00020667                 mov     esi, eax
.text:00020669                 mov     eax, [ebp+var_14]
.text:0002066C                 push    eax
.text:0002066D                 push    1Dh
.text:0002066F                 mov     ecx, [ebp+arg_4]
.text:00020672                 push    ecx
.text:00020673                 call    _conf_get_int_int
.text:00020678                 add     esp, 0Ch
.text:0002067B                 cmp     esi, eax
.text:0002067D                 jz      short loc_2068A
.text:0002067F                 mov     [ebp+var_8], offset $SG94132 ; "cipher settings changed"
.text:00020686                 mov     byte ptr [ebp+var_C+3], 1
.text:0002068A
.text:0002068A loc_2068A:                              ; CODE XREF: _ssh_reconfig+205j
.text:0002068A                 jmp     short loc_20640
.text:0002068C ; ---------------------------------------------------------------------------
.text:0002068C
.text:0002068C loc_2068C:                              ; CODE XREF: _ssh_reconfig+1D5j
.text:0002068C                 push    20h ; ' '
.text:0002068E                 mov     edx, [ebp+var_4]
.text:00020691                 mov     eax, [edx+21Ch]
.text:00020697                 push    eax
.text:00020698                 call    _conf_get_int
.text:0002069D                 add     esp, 8
.text:000206A0                 mov     esi, eax
.text:000206A2                 push    20h ; ' '
.text:000206A4                 mov     ecx, [ebp+arg_4]
.text:000206A7                 push    ecx
.text:000206A8                 call    _conf_get_int
.text:000206AD                 add     esp, 8
.text:000206B0                 cmp     esi, eax
.text:000206B2                 jz      short loc_206BF
.text:000206B4                 mov     [ebp+var_8], offset $SG94134 ; "cipher settings changed"
.text:000206BB                 mov     byte ptr [ebp+var_C+3], 1
.text:000206BF
.text:000206BF loc_206BF:                              ; CODE XREF: _ssh_reconfig+23Aj
.text:000206BF                 mov     edx, [ebp+var_4]
.text:000206C2                 mov     eax, [edx+21Ch]
.text:000206C8                 push    eax
.text:000206C9                 call    _conf_free
.text:000206CE                 add     esp, 4
.text:000206D1                 mov     ecx, [ebp+arg_4]
.text:000206D4                 push    ecx
.text:000206D5                 call    _conf_copy
.text:000206DA                 add     esp, 4
.text:000206DD                 mov     edx, [ebp+var_4]
.text:000206E0                 mov     [edx+21Ch], eax
.text:000206E6                 mov     eax, [ebp+var_4]
.text:000206E9                 push    eax
.text:000206EA                 call    _ssh_cache_conf_values
.text:000206EF                 add     esp, 4
.text:000206F2                 mov     ecx, [ebp+var_4]
.text:000206F5                 cmp     dword ptr [ecx+0C4h], 0
.text:000206FC                 jnz     short loc_2073A
.text:000206FE                 cmp     [ebp+var_8], 0
.text:00020702                 jz      short loc_2073A
.text:00020704                 mov     edx, [ebp+var_4]
.text:00020707                 cmp     dword ptr [edx+668h], 0
.text:0002070E                 jnz     short loc_20726
.text:00020710                 push    0
.text:00020712                 push    0FFFFFFFFh
.text:00020714                 mov     eax, [ebp+var_8]
.text:00020717                 push    eax
.text:00020718                 mov     ecx, [ebp+var_4]
.text:0002071B                 push    ecx
.text:0002071C                 call    _do_ssh2_transport
.text:00020721                 add     esp, 10h
.text:00020724                 jmp     short loc_2073A
.text:00020726 ; ---------------------------------------------------------------------------
.text:00020726
.text:00020726 loc_20726:                              ; CODE XREF: _ssh_reconfig+296j
.text:00020726                 movsx   edx, byte ptr [ebp+var_C+3]
.text:0002072A                 test    edx, edx
.text:0002072C                 jz      short loc_2073A
.text:0002072E                 mov     eax, [ebp+var_4]
.text:00020731                 mov     ecx, [ebp+var_8]
.text:00020734                 mov     [eax+674h], ecx
.text:0002073A
.text:0002073A loc_2073A:                              ; CODE XREF: _ssh_reconfig+284j
.text:0002073A                                         ; _ssh_reconfig+28Aj ...
.text:0002073A                 pop     esi
.text:0002073B                 add     esp, 20h
.text:0002073E                 cmp     ebp, esp
.text:00020740                 call    __RTC_CheckEsp
.text:00020745                 mov     esp, ebp
.text:00020747                 pop     ebp
.text:00020748                 retn
.text:00020748 _ssh_reconfig   endp
.text:00020748
.text:00020748 ; ---------------------------------------------------------------------------
.text:00020749                 db 0Fh dup(0CCh)
.text:00020758
.text:00020758 ; =============== S U B R O U T I N E =======================================
.text:00020758
.text:00020758 ; Attributes: bp-based frame
.text:00020758
.text:00020758 _ssh_send       proc near               ; DATA XREF: .data:0000623Co
.text:00020758
.text:00020758 var_4           = dword ptr -4
.text:00020758 arg_0           = dword ptr  8
.text:00020758 arg_4           = dword ptr  0Ch
.text:00020758 arg_8           = dword ptr  10h
.text:00020758
.text:00020758                 push    ebp
.text:00020759                 mov     ebp, esp
.text:0002075B                 push    ecx
.text:0002075C                 push    esi
.text:0002075D                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00020764                 mov     eax, [ebp+arg_0]
.text:00020767                 mov     [ebp+var_4], eax
.text:0002076A                 cmp     [ebp+var_4], 0
.text:0002076E                 jz      short loc_20785
.text:00020770                 mov     ecx, [ebp+var_4]
.text:00020773                 cmp     dword ptr [ecx+10h], 0
.text:00020777                 jz      short loc_20785
.text:00020779                 mov     edx, [ebp+var_4]
.text:0002077C                 cmp     dword ptr [edx+210h], 0
.text:00020783                 jnz     short loc_20789
.text:00020785
.text:00020785 loc_20785:                              ; CODE XREF: _ssh_send+16j
.text:00020785                                         ; _ssh_send+1Fj
.text:00020785                 xor     eax, eax
.text:00020787                 jmp     short loc_207BA
.text:00020789 ; ---------------------------------------------------------------------------
.text:00020789
.text:00020789 loc_20789:                              ; CODE XREF: _ssh_send+2Bj
.text:00020789                 mov     esi, esp
.text:0002078B                 push    0
.text:0002078D                 mov     eax, [ebp+arg_8]
.text:00020790                 push    eax
.text:00020791                 mov     ecx, [ebp+arg_4]
.text:00020794                 push    ecx
.text:00020795                 mov     edx, [ebp+var_4]
.text:00020798                 push    edx
.text:00020799                 mov     eax, [ebp+var_4]
.text:0002079C                 mov     ecx, [eax+210h]
.text:000207A2                 call    ecx
.text:000207A4                 add     esp, 10h
.text:000207A7                 cmp     esi, esp
.text:000207A9                 call    __RTC_CheckEsp
.text:000207AE                 mov     edx, [ebp+var_4]
.text:000207B1                 push    edx
.text:000207B2                 call    _ssh_sendbuffer
.text:000207B7                 add     esp, 4
.text:000207BA
.text:000207BA loc_207BA:                              ; CODE XREF: _ssh_send+2Fj
.text:000207BA                 pop     esi
.text:000207BB                 add     esp, 4
.text:000207BE                 cmp     ebp, esp
.text:000207C0                 call    __RTC_CheckEsp
.text:000207C5                 mov     esp, ebp
.text:000207C7                 pop     ebp
.text:000207C8                 retn
.text:000207C8 _ssh_send       endp
.text:000207C8
.text:000207C8 ; ---------------------------------------------------------------------------
.text:000207C9                 db 0Fh dup(0CCh)
.text:000207D8
.text:000207D8 ; =============== S U B R O U T I N E =======================================
.text:000207D8
.text:000207D8 ; Attributes: bp-based frame
.text:000207D8
.text:000207D8 _ssh_sendbuffer proc near               ; CODE XREF: _ssh_send+5Ap
.text:000207D8                                         ; DATA XREF: .data:00006240o
.text:000207D8
.text:000207D8 var_8           = dword ptr -8
.text:000207D8 var_4           = dword ptr -4
.text:000207D8 arg_0           = dword ptr  8
.text:000207D8
.text:000207D8                 push    ebp
.text:000207D9                 mov     ebp, esp
.text:000207DB                 sub     esp, 8
.text:000207DE                 mov     [ebp+var_8], 0CCCCCCCCh
.text:000207E5                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000207EC                 mov     eax, [ebp+arg_0]
.text:000207EF                 mov     [ebp+var_4], eax
.text:000207F2                 cmp     [ebp+var_4], 0
.text:000207F6                 jz      short loc_2080D
.text:000207F8                 mov     ecx, [ebp+var_4]
.text:000207FB                 cmp     dword ptr [ecx+10h], 0
.text:000207FF                 jz      short loc_2080D
.text:00020801                 mov     edx, [ebp+var_4]
.text:00020804                 cmp     dword ptr [edx+210h], 0
.text:0002080B                 jnz     short loc_20811
.text:0002080D
.text:0002080D loc_2080D:                              ; CODE XREF: _ssh_sendbuffer+1Ej
.text:0002080D                                         ; _ssh_sendbuffer+27j
.text:0002080D                 xor     eax, eax
.text:0002080F                 jmp     short loc_2087E
.text:00020811 ; ---------------------------------------------------------------------------
.text:00020811
.text:00020811 loc_20811:                              ; CODE XREF: _ssh_sendbuffer+33j
.text:00020811                 mov     [ebp+var_8], 0
.text:00020818                 mov     eax, [ebp+var_4]
.text:0002081B                 cmp     dword ptr [eax+178h], 0
.text:00020822                 jz      short loc_20830
.text:00020824                 mov     ecx, [ebp+var_4]
.text:00020827                 mov     edx, [ecx+174h]
.text:0002082D                 mov     [ebp+var_8], edx
.text:00020830
.text:00020830 loc_20830:                              ; CODE XREF: _ssh_sendbuffer+4Aj
.text:00020830                 mov     eax, [ebp+var_4]
.text:00020833                 cmp     dword ptr [eax+16Ch], 1
.text:0002083A                 jnz     short loc_20843
.text:0002083C                 mov     eax, [ebp+var_8]
.text:0002083F                 jmp     short loc_2087E
.text:00020841 ; ---------------------------------------------------------------------------
.text:00020841                 jmp     short loc_2087C
.text:00020843 ; ---------------------------------------------------------------------------
.text:00020843
.text:00020843 loc_20843:                              ; CODE XREF: _ssh_sendbuffer+62j
.text:00020843                 mov     ecx, [ebp+var_4]
.text:00020846                 cmp     dword ptr [ecx+16Ch], 2
.text:0002084D                 jnz     short loc_2087C
.text:0002084F                 mov     edx, [ebp+var_4]
.text:00020852                 cmp     dword ptr [edx+0FCh], 0
.text:00020859                 jnz     short loc_20862
.text:0002085B                 mov     eax, [ebp+var_8]
.text:0002085E                 jmp     short loc_2087E
.text:00020860 ; ---------------------------------------------------------------------------
.text:00020860                 jmp     short loc_2087C
.text:00020862 ; ---------------------------------------------------------------------------
.text:00020862
.text:00020862 loc_20862:                              ; CODE XREF: _ssh_sendbuffer+81j
.text:00020862                 mov     eax, [ebp+var_4]
.text:00020865                 mov     ecx, [eax+0FCh]
.text:0002086B                 add     ecx, 20h ; ' '
.text:0002086E                 push    ecx
.text:0002086F                 call    _bufchain_size
.text:00020874                 add     esp, 4
.text:00020877                 add     eax, [ebp+var_8]
.text:0002087A                 jmp     short loc_2087E
.text:0002087C ; ---------------------------------------------------------------------------
.text:0002087C
.text:0002087C loc_2087C:                              ; CODE XREF: _ssh_sendbuffer+69j
.text:0002087C                                         ; _ssh_sendbuffer+75j ...
.text:0002087C                 xor     eax, eax
.text:0002087E
.text:0002087E loc_2087E:                              ; CODE XREF: _ssh_sendbuffer+37j
.text:0002087E                                         ; _ssh_sendbuffer+67j ...
.text:0002087E                 add     esp, 8
.text:00020881                 cmp     ebp, esp
.text:00020883                 call    __RTC_CheckEsp
.text:00020888                 mov     esp, ebp
.text:0002088A                 pop     ebp
.text:0002088B                 retn
.text:0002088B _ssh_sendbuffer endp
.text:0002088B
.text:0002088B ; ---------------------------------------------------------------------------
.text:0002088C                 db 0Ch dup(0CCh)
.text:00020898
.text:00020898 ; =============== S U B R O U T I N E =======================================
.text:00020898
.text:00020898 ; Attributes: bp-based frame
.text:00020898
.text:00020898 _ssh_size       proc near               ; CODE XREF: _do_ssh2_authconn+42E1p
.text:00020898                                         ; _do_ssh1_connection+83Dp
.text:00020898                                         ; DATA XREF: ...
.text:00020898
.text:00020898 var_C           = dword ptr -0Ch
.text:00020898 var_8           = dword ptr -8
.text:00020898 var_4           = dword ptr -4
.text:00020898 arg_0           = dword ptr  8
.text:00020898 arg_4           = dword ptr  0Ch
.text:00020898 arg_8           = dword ptr  10h
.text:00020898
.text:00020898                 push    ebp
.text:00020899                 mov     ebp, esp
.text:0002089B                 sub     esp, 0Ch
.text:0002089E                 mov     [ebp+var_C], 0CCCCCCCCh
.text:000208A5                 mov     [ebp+var_8], 0CCCCCCCCh
.text:000208AC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000208B3                 mov     eax, [ebp+arg_0]
.text:000208B6                 mov     [ebp+var_4], eax
.text:000208B9                 mov     ecx, [ebp+var_4]
.text:000208BC                 mov     edx, [ebp+arg_4]
.text:000208BF                 mov     [ecx+0F0h], edx
.text:000208C5                 mov     eax, [ebp+var_4]
.text:000208C8                 mov     ecx, [ebp+arg_8]
.text:000208CB                 mov     [eax+0F4h], ecx
.text:000208D1                 mov     edx, [ebp+var_4]
.text:000208D4                 mov     eax, [edx+118h]
.text:000208DA                 mov     [ebp+var_C], eax
.text:000208DD                 cmp     [ebp+var_C], 2
.text:000208E1                 jz      short loc_208F3
.text:000208E3                 cmp     [ebp+var_C], 3
.text:000208E7                 jz      short loc_20905
.text:000208E9                 jmp     loc_209E4
.text:000208EE ; ---------------------------------------------------------------------------
.text:000208EE                 jmp     loc_209E4
.text:000208F3 ; ---------------------------------------------------------------------------
.text:000208F3
.text:000208F3 loc_208F3:                              ; CODE XREF: _ssh_size+49j
.text:000208F3                 mov     ecx, [ebp+var_4]
.text:000208F6                 mov     dword ptr [ecx+11Ch], 1
.text:00020900                 jmp     loc_209E4
.text:00020905 ; ---------------------------------------------------------------------------
.text:00020905
.text:00020905 loc_20905:                              ; CODE XREF: _ssh_size+4Fj
.text:00020905                 push    15h
.text:00020907                 mov     edx, [ebp+var_4]
.text:0002090A                 mov     eax, [edx+21Ch]
.text:00020910                 push    eax
.text:00020911                 call    _conf_get_int
.text:00020916                 add     esp, 8
.text:00020919                 test    eax, eax
.text:0002091B                 jnz     loc_209E4
.text:00020921                 mov     ecx, [ebp+var_4]
.text:00020924                 cmp     dword ptr [ecx+16Ch], 1
.text:0002092B                 jnz     short loc_20962
.text:0002092D                 push    0
.text:0002092F                 push    0
.text:00020931                 push    1
.text:00020933                 push    0
.text:00020935                 push    1
.text:00020937                 mov     edx, [ebp+var_4]
.text:0002093A                 mov     eax, [edx+0F0h]
.text:00020940                 push    eax
.text:00020941                 push    1
.text:00020943                 mov     ecx, [ebp+var_4]
.text:00020946                 mov     edx, [ecx+0F4h]
.text:0002094C                 push    edx
.text:0002094D                 push    1
.text:0002094F                 push    0Bh
.text:00020951                 mov     eax, [ebp+var_4]
.text:00020954                 push    eax
.text:00020955                 call    _send_packet
.text:0002095A                 add     esp, 2Ch
.text:0002095D                 jmp     loc_209E4
.text:00020962 ; ---------------------------------------------------------------------------
.text:00020962
.text:00020962 loc_20962:                              ; CODE XREF: _ssh_size+93j
.text:00020962                 mov     ecx, [ebp+var_4]
.text:00020965                 cmp     dword ptr [ecx+0FCh], 0
.text:0002096C                 jz      short loc_209E4
.text:0002096E                 push    0               ; int
.text:00020970                 push    0               ; int
.text:00020972                 push    offset $SG94196 ; "window-change"
.text:00020977                 mov     edx, [ebp+var_4]
.text:0002097A                 mov     eax, [edx+0FCh]
.text:00020980                 push    eax             ; int
.text:00020981                 call    _ssh2_chanreq_init
.text:00020986                 add     esp, 10h
.text:00020989                 mov     [ebp+var_8], eax
.text:0002098C                 mov     ecx, [ebp+var_4]
.text:0002098F                 mov     edx, [ecx+0F0h]
.text:00020995                 push    edx
.text:00020996                 mov     eax, [ebp+var_8]
.text:00020999                 push    eax
.text:0002099A                 call    _ssh_pkt_adduint32
.text:0002099F                 add     esp, 8
.text:000209A2                 mov     ecx, [ebp+var_4]
.text:000209A5                 mov     edx, [ecx+0F4h]
.text:000209AB                 push    edx
.text:000209AC                 mov     eax, [ebp+var_8]
.text:000209AF                 push    eax
.text:000209B0                 call    _ssh_pkt_adduint32
.text:000209B5                 add     esp, 8
.text:000209B8                 push    0
.text:000209BA                 mov     ecx, [ebp+var_8]
.text:000209BD                 push    ecx
.text:000209BE                 call    _ssh_pkt_adduint32
.text:000209C3                 add     esp, 8
.text:000209C6                 push    0
.text:000209C8                 mov     edx, [ebp+var_8]
.text:000209CB                 push    edx
.text:000209CC                 call    _ssh_pkt_adduint32
.text:000209D1                 add     esp, 8
.text:000209D4                 mov     eax, [ebp+var_8]
.text:000209D7                 push    eax
.text:000209D8                 mov     ecx, [ebp+var_4]
.text:000209DB                 push    ecx
.text:000209DC                 call    _ssh2_pkt_send
.text:000209E1                 add     esp, 8
.text:000209E4
.text:000209E4 loc_209E4:                              ; CODE XREF: _ssh_size+51j
.text:000209E4                                         ; _ssh_size+56j ...
.text:000209E4                 add     esp, 0Ch
.text:000209E7                 cmp     ebp, esp
.text:000209E9                 call    __RTC_CheckEsp
.text:000209EE                 mov     esp, ebp
.text:000209F0                 pop     ebp
.text:000209F1                 retn
.text:000209F1 _ssh_size       endp
.text:000209F1
.text:000209F1 ; ---------------------------------------------------------------------------
.text:000209F2                 align 8
.text:000209F8
.text:000209F8 ; =============== S U B R O U T I N E =======================================
.text:000209F8
.text:000209F8 ; Attributes: bp-based frame
.text:000209F8
.text:000209F8 _ssh_get_specials proc near             ; DATA XREF: .data:0000624Co
.text:000209F8
.text:000209F8 var_8           = dword ptr -8
.text:000209F8 var_4           = dword ptr -4
.text:000209F8 arg_0           = dword ptr  8
.text:000209F8
.text:000209F8                 push    ebp
.text:000209F9                 mov     ebp, esp
.text:000209FB                 sub     esp, 8
.text:000209FE                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00020A05                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00020A0C                 mov     eax, [ebp+arg_0]
.text:00020A0F                 mov     [ebp+var_4], eax
.text:00020A12                 mov     [ebp+var_8], 0
.text:00020A19                 mov     ecx, [ebp+var_4]
.text:00020A1C                 cmp     dword ptr [ecx+16Ch], 1
.text:00020A23                 jnz     short loc_20A7E
.text:00020A25                 mov     edx, [ebp+var_4]
.text:00020A28                 mov     eax, [edx+50h]
.text:00020A2B                 and     eax, 1
.text:00020A2E                 jnz     short loc_20A79
.text:00020A30
.text:00020A30 loc_20A30:                              ; CODE XREF: _ssh_get_specials+7Fj
.text:00020A30                 mov     ecx, [ebp+var_8]
.text:00020A33                 add     ecx, 1
.text:00020A36                 cmp     ecx, 14h
.text:00020A39                 jbe     short loc_20A52
.text:00020A3B                 push    2AEDh           ; Line
.text:00020A40                 push    offset $SG94243 ; "..\\..\\..\\ssh.c"
.text:00020A45                 push    offset $SG94244 ; "(i + lenof(ssh1_ignore_special)) <= len"...
.text:00020A4A                 call    __wassert
.text:00020A4F ; ---------------------------------------------------------------------------
.text:00020A4F                 add     esp, 0Ch
.text:00020A52
.text:00020A52 loc_20A52:                              ; CODE XREF: _ssh_get_specials+41j
.text:00020A52                 push    8               ; Size
.text:00020A54                 push    offset ?ssh1_ignore_special@?1??ssh_get_specials@@9@9 ; Src
.text:00020A59                 mov     eax, [ebp+var_8]
.text:00020A5C                 lea     ecx, ?ssh_specials@?1??ssh_get_specials@@9@9[eax*8] ; `ssh_get_specials'::`2'::ssh_specials
.text:00020A63                 push    ecx             ; Dst
.text:00020A64                 call    _memcpy
.text:00020A69                 add     esp, 0Ch
.text:00020A6C                 mov     edx, [ebp+var_8]
.text:00020A6F                 add     edx, 1
.text:00020A72                 mov     [ebp+var_8], edx
.text:00020A75                 xor     eax, eax
.text:00020A77                 jnz     short loc_20A30
.text:00020A79
.text:00020A79 loc_20A79:                              ; CODE XREF: _ssh_get_specials+36j
.text:00020A79                 jmp     loc_20B9C
.text:00020A7E ; ---------------------------------------------------------------------------
.text:00020A7E
.text:00020A7E loc_20A7E:                              ; CODE XREF: _ssh_get_specials+2Bj
.text:00020A7E                 mov     ecx, [ebp+var_4]
.text:00020A81                 cmp     dword ptr [ecx+16Ch], 2
.text:00020A88                 jnz     loc_20B9C
.text:00020A8E                 mov     edx, [ebp+var_4]
.text:00020A91                 mov     eax, [edx+50h]
.text:00020A94                 and     eax, 200h
.text:00020A99                 jnz     short loc_20AE4
.text:00020A9B
.text:00020A9B loc_20A9B:                              ; CODE XREF: _ssh_get_specials+EAj
.text:00020A9B                 mov     ecx, [ebp+var_8]
.text:00020A9E                 add     ecx, 1
.text:00020AA1                 cmp     ecx, 14h
.text:00020AA4                 jbe     short loc_20ABD
.text:00020AA6                 push    2AF0h           ; Line
.text:00020AAB                 push    offset $SG94252 ; "..\\..\\..\\ssh.c"
.text:00020AB0                 push    offset $SG94253 ; "(i + lenof(ssh2_ignore_special)) <= len"...
.text:00020AB5                 call    __wassert
.text:00020ABA ; ---------------------------------------------------------------------------
.text:00020ABA                 add     esp, 0Ch
.text:00020ABD
.text:00020ABD loc_20ABD:                              ; CODE XREF: _ssh_get_specials+ACj
.text:00020ABD                 push    8               ; Size
.text:00020ABF                 push    offset ?ssh2_ignore_special@?1??ssh_get_specials@@9@9 ; Src
.text:00020AC4                 mov     eax, [ebp+var_8]
.text:00020AC7                 lea     ecx, ?ssh_specials@?1??ssh_get_specials@@9@9[eax*8] ; `ssh_get_specials'::`2'::ssh_specials
.text:00020ACE                 push    ecx             ; Dst
.text:00020ACF                 call    _memcpy
.text:00020AD4                 add     esp, 0Ch
.text:00020AD7                 mov     edx, [ebp+var_8]
.text:00020ADA                 add     edx, 1
.text:00020ADD                 mov     [ebp+var_8], edx
.text:00020AE0                 xor     eax, eax
.text:00020AE2                 jnz     short loc_20A9B
.text:00020AE4
.text:00020AE4 loc_20AE4:                              ; CODE XREF: _ssh_get_specials+A1j
.text:00020AE4                 mov     ecx, [ebp+var_4]
.text:00020AE7                 mov     edx, [ecx+50h]
.text:00020AEA                 and     edx, 40h
.text:00020AED                 jnz     short loc_20B44
.text:00020AEF                 mov     eax, [ebp+var_4]
.text:00020AF2                 cmp     dword ptr [eax+0C4h], 0
.text:00020AF9                 jnz     short loc_20B44
.text:00020AFB
.text:00020AFB loc_20AFB:                              ; CODE XREF: _ssh_get_specials+14Aj
.text:00020AFB                 mov     ecx, [ebp+var_8]
.text:00020AFE                 add     ecx, 1
.text:00020B01                 cmp     ecx, 14h
.text:00020B04                 jbe     short loc_20B1D
.text:00020B06                 push    2AF2h           ; Line
.text:00020B0B                 push    offset $SG94259 ; "..\\..\\..\\ssh.c"
.text:00020B10                 push    offset $SG94260 ; "(i + lenof(ssh2_rekey_special)) <= leno"...
.text:00020B15                 call    __wassert
.text:00020B1A ; ---------------------------------------------------------------------------
.text:00020B1A                 add     esp, 0Ch
.text:00020B1D
.text:00020B1D loc_20B1D:                              ; CODE XREF: _ssh_get_specials+10Cj
.text:00020B1D                 push    8               ; Size
.text:00020B1F                 push    offset ?ssh2_rekey_special@?1??ssh_get_specials@@9@9 ; Src
.text:00020B24                 mov     eax, [ebp+var_8]
.text:00020B27                 lea     ecx, ?ssh_specials@?1??ssh_get_specials@@9@9[eax*8] ; `ssh_get_specials'::`2'::ssh_specials
.text:00020B2E                 push    ecx             ; Dst
.text:00020B2F                 call    _memcpy
.text:00020B34                 add     esp, 0Ch
.text:00020B37                 mov     edx, [ebp+var_8]
.text:00020B3A                 add     edx, 1
.text:00020B3D                 mov     [ebp+var_8], edx
.text:00020B40                 xor     eax, eax
.text:00020B42                 jnz     short loc_20AFB
.text:00020B44
.text:00020B44 loc_20B44:                              ; CODE XREF: _ssh_get_specials+F5j
.text:00020B44                                         ; _ssh_get_specials+101j
.text:00020B44                 mov     ecx, [ebp+var_4]
.text:00020B47                 cmp     dword ptr [ecx+0FCh], 0
.text:00020B4E                 jz      short loc_20B9C
.text:00020B50
.text:00020B50 loc_20B50:                              ; CODE XREF: _ssh_get_specials+1A2j
.text:00020B50                 mov     edx, [ebp+var_8]
.text:00020B53                 add     edx, 11h
.text:00020B56                 cmp     edx, 14h
.text:00020B59                 jbe     short loc_20B72
.text:00020B5B                 push    2AF4h           ; Line
.text:00020B60                 push    offset $SG94266 ; "..\\..\\..\\ssh.c"
.text:00020B65                 push    offset $SG94267 ; "(i + lenof(ssh2_session_specials)) <= l"...
.text:00020B6A                 call    __wassert
.text:00020B6F ; ---------------------------------------------------------------------------
.text:00020B6F                 add     esp, 0Ch
.text:00020B72
.text:00020B72 loc_20B72:                              ; CODE XREF: _ssh_get_specials+161j
.text:00020B72                 push    88h ; 'ê'       ; Size
.text:00020B77                 push    offset ?ssh2_session_specials@?1??ssh_get_specials@@9@9 ; Src
.text:00020B7C                 mov     ecx, [ebp+var_8]
.text:00020B7F                 lea     edx, ?ssh_specials@?1??ssh_get_specials@@9@9[ecx*8] ; `ssh_get_specials'::`2'::ssh_specials
.text:00020B86                 push    edx             ; Dst
.text:00020B87                 call    _memcpy
.text:00020B8C                 add     esp, 0Ch
.text:00020B8F                 mov     eax, [ebp+var_8]
.text:00020B92                 add     eax, 11h
.text:00020B95                 mov     [ebp+var_8], eax
.text:00020B98                 xor     ecx, ecx
.text:00020B9A                 jnz     short loc_20B50
.text:00020B9C
.text:00020B9C loc_20B9C:                              ; CODE XREF: _ssh_get_specials:loc_20A79j
.text:00020B9C                                         ; _ssh_get_specials+90j ...
.text:00020B9C                 cmp     [ebp+var_8], 0
.text:00020BA0                 jz      short loc_20BF4
.text:00020BA2
.text:00020BA2 loc_20BA2:                              ; CODE XREF: _ssh_get_specials+1F1j
.text:00020BA2                 mov     edx, [ebp+var_8]
.text:00020BA5                 add     edx, 1
.text:00020BA8                 cmp     edx, 14h
.text:00020BAB                 jbe     short loc_20BC4
.text:00020BAD                 push    2AF8h           ; Line
.text:00020BB2                 push    offset $SG94273 ; "..\\..\\..\\ssh.c"
.text:00020BB7                 push    offset $SG94274 ; "(i + lenof(specials_end)) <= lenof(ssh_"...
.text:00020BBC                 call    __wassert
.text:00020BC1 ; ---------------------------------------------------------------------------
.text:00020BC1                 add     esp, 0Ch
.text:00020BC4
.text:00020BC4 loc_20BC4:                              ; CODE XREF: _ssh_get_specials+1B3j
.text:00020BC4                 push    8               ; Size
.text:00020BC6                 push    offset ?specials_end@?1??ssh_get_specials@@9@9 ; Src
.text:00020BCB                 mov     ecx, [ebp+var_8]
.text:00020BCE                 lea     edx, ?ssh_specials@?1??ssh_get_specials@@9@9[ecx*8] ; `ssh_get_specials'::`2'::ssh_specials
.text:00020BD5                 push    edx             ; Dst
.text:00020BD6                 call    _memcpy
.text:00020BDB                 add     esp, 0Ch
.text:00020BDE                 mov     eax, [ebp+var_8]
.text:00020BE1                 add     eax, 1
.text:00020BE4                 mov     [ebp+var_8], eax
.text:00020BE7                 xor     ecx, ecx
.text:00020BE9                 jnz     short loc_20BA2
.text:00020BEB                 mov     eax, offset ?ssh_specials@?1??ssh_get_specials@@9@9 ; `ssh_get_specials'::`2'::ssh_specials
.text:00020BF0                 jmp     short loc_20BF6
.text:00020BF2 ; ---------------------------------------------------------------------------
.text:00020BF2                 jmp     short loc_20BF6
.text:00020BF4 ; ---------------------------------------------------------------------------
.text:00020BF4
.text:00020BF4 loc_20BF4:                              ; CODE XREF: _ssh_get_specials+1A8j
.text:00020BF4                 xor     eax, eax
.text:00020BF6
.text:00020BF6 loc_20BF6:                              ; CODE XREF: _ssh_get_specials+1F8j
.text:00020BF6                                         ; _ssh_get_specials+1FAj
.text:00020BF6                 add     esp, 8
.text:00020BF9                 cmp     ebp, esp
.text:00020BFB                 call    __RTC_CheckEsp
.text:00020C00                 mov     esp, ebp
.text:00020C02                 pop     ebp
.text:00020C03                 retn
.text:00020C03 _ssh_get_specials endp
.text:00020C03
.text:00020C03 ; ---------------------------------------------------------------------------
.text:00020C04                 align 8
.text:00020C08
.text:00020C08 ; =============== S U B R O U T I N E =======================================
.text:00020C08
.text:00020C08 ; Attributes: bp-based frame
.text:00020C08
.text:00020C08 _ssh_special    proc near               ; CODE XREF: _do_ssh2_authconn+42FBp
.text:00020C08                                         ; _do_ssh1_connection+857p
.text:00020C08                                         ; DATA XREF: ...
.text:00020C08
.text:00020C08 Str             = dword ptr -0Ch
.text:00020C08 var_8           = dword ptr -8
.text:00020C08 var_4           = dword ptr -4
.text:00020C08 arg_0           = dword ptr  8
.text:00020C08 arg_4           = dword ptr  0Ch
.text:00020C08
.text:00020C08                 push    ebp
.text:00020C09                 mov     ebp, esp
.text:00020C0B                 sub     esp, 0Ch
.text:00020C0E                 mov     [ebp+Str], 0CCCCCCCCh
.text:00020C15                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00020C1C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00020C23                 mov     eax, [ebp+arg_0]
.text:00020C26                 mov     [ebp+var_4], eax
.text:00020C29                 cmp     [ebp+arg_4], 0Ch
.text:00020C2D                 jnz     loc_20CBC
.text:00020C33                 mov     ecx, [ebp+var_4]
.text:00020C36                 cmp     dword ptr [ecx+118h], 3
.text:00020C3D                 jz      short loc_20C57
.text:00020C3F                 cmp     [ebp+arg_4], 0Ch
.text:00020C43                 jnz     short loc_20C52
.text:00020C45                 mov     edx, [ebp+var_4]
.text:00020C48                 mov     dword ptr [edx+120h], 1
.text:00020C52
.text:00020C52 loc_20C52:                              ; CODE XREF: _ssh_special+3Bj
.text:00020C52                 jmp     loc_20F52
.text:00020C57 ; ---------------------------------------------------------------------------
.text:00020C57
.text:00020C57 loc_20C57:                              ; CODE XREF: _ssh_special+35j
.text:00020C57                 mov     eax, [ebp+var_4]
.text:00020C5A                 cmp     dword ptr [eax+16Ch], 1
.text:00020C61                 jnz     short loc_20C75
.text:00020C63                 push    0
.text:00020C65                 push    13h
.text:00020C67                 mov     ecx, [ebp+var_4]
.text:00020C6A                 push    ecx
.text:00020C6B                 call    _send_packet
.text:00020C70                 add     esp, 0Ch
.text:00020C73                 jmp     short loc_20CA0
.text:00020C75 ; ---------------------------------------------------------------------------
.text:00020C75
.text:00020C75 loc_20C75:                              ; CODE XREF: _ssh_special+59j
.text:00020C75                 mov     edx, [ebp+var_4]
.text:00020C78                 cmp     dword ptr [edx+0FCh], 0
.text:00020C7F                 jz      short loc_20CA0
.text:00020C81                 mov     eax, [ebp+var_4]
.text:00020C84                 mov     ecx, [eax+0FCh]
.text:00020C8A                 push    ecx
.text:00020C8B                 call    _sshfwd_write_eof
.text:00020C90                 add     esp, 4
.text:00020C93                 mov     edx, [ebp+var_4]
.text:00020C96                 mov     dword ptr [edx+0D8h], 0
.text:00020CA0
.text:00020CA0 loc_20CA0:                              ; CODE XREF: _ssh_special+6Bj
.text:00020CA0                                         ; _ssh_special+77j
.text:00020CA0                 push    offset $SG94291 ; "Sent EOF message"
.text:00020CA5                 mov     eax, [ebp+var_4]
.text:00020CA8                 mov     ecx, [eax+0E4h]
.text:00020CAE                 push    ecx
.text:00020CAF                 call    _logevent
.text:00020CB4                 add     esp, 8
.text:00020CB7                 jmp     loc_20F52
.text:00020CBC ; ---------------------------------------------------------------------------
.text:00020CBC
.text:00020CBC loc_20CBC:                              ; CODE XREF: _ssh_special+25j
.text:00020CBC                 cmp     [ebp+arg_4], 0Fh
.text:00020CC0                 jz      short loc_20CCC
.text:00020CC2                 cmp     [ebp+arg_4], 6
.text:00020CC6                 jnz     loc_20D54
.text:00020CCC
.text:00020CCC loc_20CCC:                              ; CODE XREF: _ssh_special+B8j
.text:00020CCC                 mov     edx, [ebp+var_4]
.text:00020CCF                 cmp     dword ptr [edx+118h], 4
.text:00020CD6                 jz      short loc_20CE4
.text:00020CD8                 mov     eax, [ebp+var_4]
.text:00020CDB                 cmp     dword ptr [eax+118h], 0
.text:00020CE2                 jnz     short loc_20CE9
.text:00020CE4
.text:00020CE4 loc_20CE4:                              ; CODE XREF: _ssh_special+CEj
.text:00020CE4                 jmp     loc_20F52
.text:00020CE9 ; ---------------------------------------------------------------------------
.text:00020CE9
.text:00020CE9 loc_20CE9:                              ; CODE XREF: _ssh_special+DAj
.text:00020CE9                 mov     ecx, [ebp+var_4]
.text:00020CEC                 cmp     dword ptr [ecx+16Ch], 1
.text:00020CF3                 jnz     short loc_20D19
.text:00020CF5                 mov     edx, [ebp+var_4]
.text:00020CF8                 mov     eax, [edx+50h]
.text:00020CFB                 and     eax, 1
.text:00020CFE                 jnz     short loc_20D17
.text:00020D00                 push    0
.text:00020D02                 push    offset $SG94299
.text:00020D07                 push    4
.text:00020D09                 push    20h ; ' '
.text:00020D0B                 mov     ecx, [ebp+var_4]
.text:00020D0E                 push    ecx
.text:00020D0F                 call    _send_packet
.text:00020D14                 add     esp, 14h
.text:00020D17
.text:00020D17 loc_20D17:                              ; CODE XREF: _ssh_special+F6j
.text:00020D17                 jmp     short loc_20D4F
.text:00020D19 ; ---------------------------------------------------------------------------
.text:00020D19
.text:00020D19 loc_20D19:                              ; CODE XREF: _ssh_special+EBj
.text:00020D19                 mov     edx, [ebp+var_4]
.text:00020D1C                 mov     eax, [edx+50h]
.text:00020D1F                 and     eax, 200h
.text:00020D24                 jnz     short loc_20D4F
.text:00020D26                 push    2
.text:00020D28                 call    _ssh2_pkt_init
.text:00020D2D                 add     esp, 4
.text:00020D30                 mov     [ebp+var_8], eax
.text:00020D33                 mov     ecx, [ebp+var_8]
.text:00020D36                 push    ecx
.text:00020D37                 call    _ssh_pkt_addstring_start
.text:00020D3C                 add     esp, 4
.text:00020D3F                 mov     edx, [ebp+var_8]
.text:00020D42                 push    edx
.text:00020D43                 mov     eax, [ebp+var_4]
.text:00020D46                 push    eax
.text:00020D47                 call    _ssh2_pkt_send_noqueue
.text:00020D4C                 add     esp, 8
.text:00020D4F
.text:00020D4F loc_20D4F:                              ; CODE XREF: _ssh_special:loc_20D17j
.text:00020D4F                                         ; _ssh_special+11Cj
.text:00020D4F                 jmp     loc_20F52
.text:00020D54 ; ---------------------------------------------------------------------------
.text:00020D54
.text:00020D54 loc_20D54:                              ; CODE XREF: _ssh_special+BEj
.text:00020D54                 cmp     [ebp+arg_4], 11h
.text:00020D58                 jnz     short loc_20D98
.text:00020D5A                 mov     ecx, [ebp+var_4]
.text:00020D5D                 cmp     dword ptr [ecx+668h], 0
.text:00020D64                 jnz     short loc_20D93
.text:00020D66                 mov     edx, [ebp+var_4]
.text:00020D69                 cmp     dword ptr [edx+0C4h], 0
.text:00020D70                 jnz     short loc_20D93
.text:00020D72                 mov     eax, [ebp+var_4]
.text:00020D75                 cmp     dword ptr [eax+16Ch], 2
.text:00020D7C                 jnz     short loc_20D93
.text:00020D7E                 push    0
.text:00020D80                 push    0FFFFFFFFh
.text:00020D82                 push    offset $SG94306 ; "at user request"
.text:00020D87                 mov     ecx, [ebp+var_4]
.text:00020D8A                 push    ecx
.text:00020D8B                 call    _do_ssh2_transport
.text:00020D90                 add     esp, 10h
.text:00020D93
.text:00020D93 loc_20D93:                              ; CODE XREF: _ssh_special+15Cj
.text:00020D93                                         ; _ssh_special+168j ...
.text:00020D93                 jmp     loc_20F52
.text:00020D98 ; ---------------------------------------------------------------------------
.text:00020D98
.text:00020D98 loc_20D98:                              ; CODE XREF: _ssh_special+150j
.text:00020D98                 cmp     [ebp+arg_4], 1
.text:00020D9C                 jnz     loc_20E31
.text:00020DA2                 mov     edx, [ebp+var_4]
.text:00020DA5                 cmp     dword ptr [edx+118h], 4
.text:00020DAC                 jz      short loc_20DBA
.text:00020DAE                 mov     eax, [ebp+var_4]
.text:00020DB1                 cmp     dword ptr [eax+118h], 0
.text:00020DB8                 jnz     short loc_20DBF
.text:00020DBA
.text:00020DBA loc_20DBA:                              ; CODE XREF: _ssh_special+1A4j
.text:00020DBA                 jmp     loc_20F52
.text:00020DBF ; ---------------------------------------------------------------------------
.text:00020DBF
.text:00020DBF loc_20DBF:                              ; CODE XREF: _ssh_special+1B0j
.text:00020DBF                 mov     ecx, [ebp+var_4]
.text:00020DC2                 cmp     dword ptr [ecx+16Ch], 1
.text:00020DC9                 jnz     short loc_20DE4
.text:00020DCB                 push    offset $SG94312 ; "Unable to send BREAK signal in SSH-1"
.text:00020DD0                 mov     edx, [ebp+var_4]
.text:00020DD3                 mov     eax, [edx+0E4h]
.text:00020DD9                 push    eax
.text:00020DDA                 call    _logevent
.text:00020DDF                 add     esp, 8
.text:00020DE2                 jmp     short loc_20E2C
.text:00020DE4 ; ---------------------------------------------------------------------------
.text:00020DE4
.text:00020DE4 loc_20DE4:                              ; CODE XREF: _ssh_special+1C1j
.text:00020DE4                 mov     ecx, [ebp+var_4]
.text:00020DE7                 cmp     dword ptr [ecx+0FCh], 0
.text:00020DEE                 jz      short loc_20E2C
.text:00020DF0                 push    0               ; int
.text:00020DF2                 push    0               ; int
.text:00020DF4                 push    offset $SG94317 ; "break"
.text:00020DF9                 mov     edx, [ebp+var_4]
.text:00020DFC                 mov     eax, [edx+0FCh]
.text:00020E02                 push    eax             ; int
.text:00020E03                 call    _ssh2_chanreq_init
.text:00020E08                 add     esp, 10h
.text:00020E0B                 mov     [ebp+var_8], eax
.text:00020E0E                 push    0
.text:00020E10                 mov     ecx, [ebp+var_8]
.text:00020E13                 push    ecx
.text:00020E14                 call    _ssh_pkt_adduint32
.text:00020E19                 add     esp, 8
.text:00020E1C                 mov     edx, [ebp+var_8]
.text:00020E1F                 push    edx
.text:00020E20                 mov     eax, [ebp+var_4]
.text:00020E23                 push    eax
.text:00020E24                 call    _ssh2_pkt_send
.text:00020E29                 add     esp, 8
.text:00020E2C
.text:00020E2C loc_20E2C:                              ; CODE XREF: _ssh_special+1DAj
.text:00020E2C                                         ; _ssh_special+1E6j
.text:00020E2C                 jmp     loc_20F52
.text:00020E31 ; ---------------------------------------------------------------------------
.text:00020E31
.text:00020E31 loc_20E31:                              ; CODE XREF: _ssh_special+194j
.text:00020E31                 mov     [ebp+Str], 0
.text:00020E38                 cmp     [ebp+arg_4], 12h
.text:00020E3C                 jnz     short loc_20E45
.text:00020E3E                 mov     [ebp+Str], offset $SG94322 ; "ABRT"
.text:00020E45
.text:00020E45 loc_20E45:                              ; CODE XREF: _ssh_special+234j
.text:00020E45                 cmp     [ebp+arg_4], 13h
.text:00020E49                 jnz     short loc_20E52
.text:00020E4B                 mov     [ebp+Str], offset $SG94324 ; "ALRM"
.text:00020E52
.text:00020E52 loc_20E52:                              ; CODE XREF: _ssh_special+241j
.text:00020E52                 cmp     [ebp+arg_4], 14h
.text:00020E56                 jnz     short loc_20E5F
.text:00020E58                 mov     [ebp+Str], offset $SG94326 ; "FPE"
.text:00020E5F
.text:00020E5F loc_20E5F:                              ; CODE XREF: _ssh_special+24Ej
.text:00020E5F                 cmp     [ebp+arg_4], 15h
.text:00020E63                 jnz     short loc_20E6C
.text:00020E65                 mov     [ebp+Str], offset $SG94328 ; "HUP"
.text:00020E6C
.text:00020E6C loc_20E6C:                              ; CODE XREF: _ssh_special+25Bj
.text:00020E6C                 cmp     [ebp+arg_4], 16h
.text:00020E70                 jnz     short loc_20E79
.text:00020E72                 mov     [ebp+Str], offset $SG94330 ; "ILL"
.text:00020E79
.text:00020E79 loc_20E79:                              ; CODE XREF: _ssh_special+268j
.text:00020E79                 cmp     [ebp+arg_4], 17h
.text:00020E7D                 jnz     short loc_20E86
.text:00020E7F                 mov     [ebp+Str], offset $SG94332 ; "INT"
.text:00020E86
.text:00020E86 loc_20E86:                              ; CODE XREF: _ssh_special+275j
.text:00020E86                 cmp     [ebp+arg_4], 18h
.text:00020E8A                 jnz     short loc_20E93
.text:00020E8C                 mov     [ebp+Str], offset $SG94334 ; "KILL"
.text:00020E93
.text:00020E93 loc_20E93:                              ; CODE XREF: _ssh_special+282j
.text:00020E93                 cmp     [ebp+arg_4], 19h
.text:00020E97                 jnz     short loc_20EA0
.text:00020E99                 mov     [ebp+Str], offset $SG94336 ; "PIPE"
.text:00020EA0
.text:00020EA0 loc_20EA0:                              ; CODE XREF: _ssh_special+28Fj
.text:00020EA0                 cmp     [ebp+arg_4], 1Ah
.text:00020EA4                 jnz     short loc_20EAD
.text:00020EA6                 mov     [ebp+Str], offset $SG94338 ; "QUIT"
.text:00020EAD
.text:00020EAD loc_20EAD:                              ; CODE XREF: _ssh_special+29Cj
.text:00020EAD                 cmp     [ebp+arg_4], 1Bh
.text:00020EB1                 jnz     short loc_20EBA
.text:00020EB3                 mov     [ebp+Str], offset $SG94340 ; "SEGV"
.text:00020EBA
.text:00020EBA loc_20EBA:                              ; CODE XREF: _ssh_special+2A9j
.text:00020EBA                 cmp     [ebp+arg_4], 1Ch
.text:00020EBE                 jnz     short loc_20EC7
.text:00020EC0                 mov     [ebp+Str], offset $SG94342 ; "TERM"
.text:00020EC7
.text:00020EC7 loc_20EC7:                              ; CODE XREF: _ssh_special+2B6j
.text:00020EC7                 cmp     [ebp+arg_4], 1Dh
.text:00020ECB                 jnz     short loc_20ED4
.text:00020ECD                 mov     [ebp+Str], offset $SG94344 ; "USR1"
.text:00020ED4
.text:00020ED4 loc_20ED4:                              ; CODE XREF: _ssh_special+2C3j
.text:00020ED4                 cmp     [ebp+arg_4], 1Eh
.text:00020ED8                 jnz     short loc_20EE1
.text:00020EDA                 mov     [ebp+Str], offset $SG94346 ; "USR2"
.text:00020EE1
.text:00020EE1 loc_20EE1:                              ; CODE XREF: _ssh_special+2D0j
.text:00020EE1                 cmp     [ebp+Str], 0
.text:00020EE5                 jz      short loc_20F52
.text:00020EE7                 mov     ecx, [ebp+var_4]
.text:00020EEA                 cmp     dword ptr [ecx+16Ch], 2
.text:00020EF1                 jnz     short loc_20F52
.text:00020EF3                 mov     edx, [ebp+var_4]
.text:00020EF6                 cmp     dword ptr [edx+0FCh], 0
.text:00020EFD                 jz      short loc_20F52
.text:00020EFF                 push    0               ; int
.text:00020F01                 push    0               ; int
.text:00020F03                 push    offset $SG94351 ; "signal"
.text:00020F08                 mov     eax, [ebp+var_4]
.text:00020F0B                 mov     ecx, [eax+0FCh]
.text:00020F11                 push    ecx             ; int
.text:00020F12                 call    _ssh2_chanreq_init
.text:00020F17                 add     esp, 10h
.text:00020F1A                 mov     [ebp+var_8], eax
.text:00020F1D                 mov     edx, [ebp+Str]
.text:00020F20                 push    edx             ; Str
.text:00020F21                 mov     eax, [ebp+var_8]
.text:00020F24                 push    eax             ; int
.text:00020F25                 call    _ssh_pkt_addstring
.text:00020F2A                 add     esp, 8
.text:00020F2D                 mov     ecx, [ebp+var_8]
.text:00020F30                 push    ecx
.text:00020F31                 mov     edx, [ebp+var_4]
.text:00020F34                 push    edx
.text:00020F35                 call    _ssh2_pkt_send
.text:00020F3A                 add     esp, 8
.text:00020F3D                 mov     eax, [ebp+Str]
.text:00020F40                 push    eax
.text:00020F41                 push    offset $SG94352 ; "Sent signal SIG%s"
.text:00020F46                 mov     ecx, [ebp+var_4]
.text:00020F49                 push    ecx
.text:00020F4A                 call    _logeventf
.text:00020F4F                 add     esp, 0Ch
.text:00020F52
.text:00020F52 loc_20F52:                              ; CODE XREF: _ssh_special:loc_20C52j
.text:00020F52                                         ; _ssh_special+AFj ...
.text:00020F52                 add     esp, 0Ch
.text:00020F55                 cmp     ebp, esp
.text:00020F57                 call    __RTC_CheckEsp
.text:00020F5C                 mov     esp, ebp
.text:00020F5E                 pop     ebp
.text:00020F5F                 retn
.text:00020F5F _ssh_special    endp
.text:00020F5F
.text:00020F5F ; ---------------------------------------------------------------------------
.text:00020F60                 db 8 dup(0CCh)
.text:00020F68
.text:00020F68 ; =============== S U B R O U T I N E =======================================
.text:00020F68
.text:00020F68 ; Attributes: bp-based frame
.text:00020F68
.text:00020F68                 public _new_sock_channel
.text:00020F68 _new_sock_channel proc near
.text:00020F68
.text:00020F68 var_8           = dword ptr -8
.text:00020F68 var_4           = dword ptr -4
.text:00020F68 arg_0           = dword ptr  8
.text:00020F68 arg_4           = dword ptr  0Ch
.text:00020F68
.text:00020F68                 push    ebp
.text:00020F69                 mov     ebp, esp
.text:00020F6B                 sub     esp, 8
.text:00020F6E                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00020F75                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00020F7C                 mov     eax, [ebp+arg_0]
.text:00020F7F                 mov     [ebp+var_4], eax
.text:00020F82                 push    60h ; '`'
.text:00020F84                 push    1
.text:00020F86                 call    _safemalloc
.text:00020F8B                 add     esp, 8
.text:00020F8E                 mov     [ebp+var_8], eax
.text:00020F91                 mov     ecx, [ebp+var_8]
.text:00020F94                 mov     edx, [ebp+var_4]
.text:00020F97                 mov     [ecx], edx
.text:00020F99                 mov     eax, [ebp+var_8]
.text:00020F9C                 push    eax
.text:00020F9D                 call    _ssh2_channel_init
.text:00020FA2                 add     esp, 4
.text:00020FA5                 mov     ecx, [ebp+var_8]
.text:00020FA8                 mov     dword ptr [ecx+10h], 1
.text:00020FAF                 mov     edx, [ebp+var_8]
.text:00020FB2                 mov     dword ptr [edx+0Ch], 4
.text:00020FB9                 mov     eax, [ebp+var_8]
.text:00020FBC                 mov     ecx, [ebp+arg_4]
.text:00020FBF                 mov     [eax+4Ch], ecx
.text:00020FC2                 mov     edx, [ebp+var_8]
.text:00020FC5                 push    edx
.text:00020FC6                 mov     eax, [ebp+var_4]
.text:00020FC9                 mov     ecx, [eax+0F8h]
.text:00020FCF                 push    ecx
.text:00020FD0                 call    _add234
.text:00020FD5                 add     esp, 8
.text:00020FD8                 mov     eax, [ebp+var_8]
.text:00020FDB                 add     esp, 8
.text:00020FDE                 cmp     ebp, esp
.text:00020FE0                 call    __RTC_CheckEsp
.text:00020FE5                 mov     esp, ebp
.text:00020FE7                 pop     ebp
.text:00020FE8                 retn
.text:00020FE8 _new_sock_channel endp
.text:00020FE8
.text:00020FE8 ; ---------------------------------------------------------------------------
.text:00020FE9                 db 0Fh dup(0CCh)
.text:00020FF8
.text:00020FF8 ; =============== S U B R O U T I N E =======================================
.text:00020FF8
.text:00020FF8 ; Attributes: bp-based frame
.text:00020FF8
.text:00020FF8                 public _ssh_alloc_sharing_channel
.text:00020FF8 _ssh_alloc_sharing_channel proc near
.text:00020FF8
.text:00020FF8 var_4           = dword ptr -4
.text:00020FF8 arg_0           = dword ptr  8
.text:00020FF8 arg_4           = dword ptr  0Ch
.text:00020FF8
.text:00020FF8                 push    ebp
.text:00020FF9                 mov     ebp, esp
.text:00020FFB                 push    ecx
.text:00020FFC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00021003                 push    60h ; '`'
.text:00021005                 push    1
.text:00021007                 call    _safemalloc
.text:0002100C                 add     esp, 8
.text:0002100F                 mov     [ebp+var_4], eax
.text:00021012                 mov     eax, [ebp+var_4]
.text:00021015                 mov     ecx, [ebp+arg_0]
.text:00021018                 mov     [eax], ecx
.text:0002101A                 mov     edx, [ebp+var_4]
.text:0002101D                 push    edx
.text:0002101E                 call    _ssh2_channel_init
.text:00021023                 add     esp, 4
.text:00021026                 mov     eax, [ebp+var_4]
.text:00021029                 mov     dword ptr [eax+0Ch], 5
.text:00021030                 mov     ecx, [ebp+var_4]
.text:00021033                 mov     edx, [ebp+arg_4]
.text:00021036                 mov     [ecx+4Ch], edx
.text:00021039                 mov     eax, [ebp+var_4]
.text:0002103C                 push    eax
.text:0002103D                 mov     ecx, [ebp+arg_0]
.text:00021040                 mov     edx, [ecx+0F8h]
.text:00021046                 push    edx
.text:00021047                 call    _add234
.text:0002104C                 add     esp, 8
.text:0002104F                 mov     eax, [ebp+var_4]
.text:00021052                 mov     eax, [eax+8]
.text:00021055                 add     esp, 4
.text:00021058                 cmp     ebp, esp
.text:0002105A                 call    __RTC_CheckEsp
.text:0002105F                 mov     esp, ebp
.text:00021061                 pop     ebp
.text:00021062                 retn
.text:00021062 _ssh_alloc_sharing_channel endp
.text:00021062
.text:00021062 ; ---------------------------------------------------------------------------
.text:00021063                 align 8
.text:00021068
.text:00021068 ; =============== S U B R O U T I N E =======================================
.text:00021068
.text:00021068 ; Attributes: bp-based frame
.text:00021068
.text:00021068                 public _ssh_delete_sharing_channel
.text:00021068 _ssh_delete_sharing_channel proc near
.text:00021068
.text:00021068 var_4           = dword ptr -4
.text:00021068 arg_0           = dword ptr  8
.text:00021068 arg_4           = byte ptr  0Ch
.text:00021068
.text:00021068                 push    ebp
.text:00021069                 mov     ebp, esp
.text:0002106B                 push    ecx
.text:0002106C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00021073                 push    offset _ssh_channelfind
.text:00021078                 lea     eax, [ebp+arg_4]
.text:0002107B                 push    eax
.text:0002107C                 mov     ecx, [ebp+arg_0]
.text:0002107F                 mov     edx, [ecx+0F8h]
.text:00021085                 push    edx
.text:00021086                 call    _find234
.text:0002108B                 add     esp, 0Ch
.text:0002108E                 mov     [ebp+var_4], eax
.text:00021091                 cmp     [ebp+var_4], 0
.text:00021095                 jz      short loc_210A3
.text:00021097                 mov     eax, [ebp+var_4]
.text:0002109A                 push    eax
.text:0002109B                 call    _ssh_channel_destroy
.text:000210A0                 add     esp, 4
.text:000210A3
.text:000210A3 loc_210A3:                              ; CODE XREF: _ssh_delete_sharing_channel+2Dj
.text:000210A3                 add     esp, 4
.text:000210A6                 cmp     ebp, esp
.text:000210A8                 call    __RTC_CheckEsp
.text:000210AD                 mov     esp, ebp
.text:000210AF                 pop     ebp
.text:000210B0                 retn
.text:000210B0 _ssh_delete_sharing_channel endp
.text:000210B0
.text:000210B0 ; ---------------------------------------------------------------------------
.text:000210B1                 align 8
.text:000210B8
.text:000210B8 ; =============== S U B R O U T I N E =======================================
.text:000210B8
.text:000210B8 ; Attributes: bp-based frame
.text:000210B8
.text:000210B8 ; int __cdecl ssh_send_packet_from_downstream(int, int, int, void *Src, size_t Size, int)
.text:000210B8                 public _ssh_send_packet_from_downstream
.text:000210B8 _ssh_send_packet_from_downstream proc near
.text:000210B8
.text:000210B8 var_4           = dword ptr -4
.text:000210B8 arg_0           = dword ptr  8
.text:000210B8 arg_4           = dword ptr  0Ch
.text:000210B8 arg_8           = dword ptr  10h
.text:000210B8 Src             = dword ptr  14h
.text:000210B8 Size            = dword ptr  18h
.text:000210B8 arg_14          = dword ptr  1Ch
.text:000210B8
.text:000210B8                 push    ebp
.text:000210B9                 mov     ebp, esp
.text:000210BB                 push    ecx
.text:000210BC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000210C3                 mov     eax, [ebp+arg_8]
.text:000210C6                 push    eax
.text:000210C7                 call    _ssh2_pkt_init
.text:000210CC                 add     esp, 4
.text:000210CF                 mov     [ebp+var_4], eax
.text:000210D2                 mov     ecx, [ebp+var_4]
.text:000210D5                 mov     edx, [ebp+arg_4]
.text:000210D8                 mov     [ecx+24h], edx
.text:000210DB                 mov     eax, [ebp+var_4]
.text:000210DE                 mov     ecx, [ebp+arg_14]
.text:000210E1                 mov     [eax+28h], ecx
.text:000210E4                 mov     edx, [ebp+Size]
.text:000210E7                 push    edx             ; Size
.text:000210E8                 mov     eax, [ebp+Src]
.text:000210EB                 push    eax             ; Src
.text:000210EC                 mov     ecx, [ebp+var_4]
.text:000210EF                 push    ecx             ; int
.text:000210F0                 call    _ssh_pkt_adddata
.text:000210F5                 add     esp, 0Ch
.text:000210F8                 mov     edx, [ebp+var_4]
.text:000210FB                 push    edx
.text:000210FC                 mov     eax, [ebp+arg_0]
.text:000210FF                 push    eax
.text:00021100                 call    _ssh2_pkt_send
.text:00021105                 add     esp, 8
.text:00021108                 add     esp, 4
.text:0002110B                 cmp     ebp, esp
.text:0002110D                 call    __RTC_CheckEsp
.text:00021112                 mov     esp, ebp
.text:00021114                 pop     ebp
.text:00021115                 retn
.text:00021115 _ssh_send_packet_from_downstream endp
.text:00021115
.text:00021115 ; ---------------------------------------------------------------------------
.text:00021116                 align 4
.text:00021118
.text:00021118 ; =============== S U B R O U T I N E =======================================
.text:00021118
.text:00021118 ; Attributes: bp-based frame
.text:00021118
.text:00021118 _ssh_unthrottle proc near               ; DATA XREF: .data:00006268o
.text:00021118
.text:00021118 var_C           = dword ptr -0Ch
.text:00021118 var_8           = dword ptr -8
.text:00021118 var_4           = dword ptr -4
.text:00021118 arg_0           = dword ptr  8
.text:00021118 arg_4           = dword ptr  0Ch
.text:00021118
.text:00021118                 push    ebp
.text:00021119                 mov     ebp, esp
.text:0002111B                 sub     esp, 0Ch
.text:0002111E                 mov     [ebp+var_C], 0CCCCCCCCh
.text:00021125                 mov     [ebp+var_8], 0CCCCCCCCh
.text:0002112C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00021133                 mov     eax, [ebp+arg_0]
.text:00021136                 mov     [ebp+var_4], eax
.text:00021139                 mov     ecx, [ebp+var_4]
.text:0002113C                 cmp     dword ptr [ecx+16Ch], 1
.text:00021143                 jnz     short loc_2117A
.text:00021145                 mov     edx, [ebp+var_4]
.text:00021148                 cmp     dword ptr [edx+17Ch], 0
.text:0002114F                 jz      short loc_21175
.text:00021151                 cmp     [ebp+arg_4], 8000h
.text:00021158                 jge     short loc_21175
.text:0002115A                 mov     eax, [ebp+var_4]
.text:0002115D                 mov     dword ptr [eax+17Ch], 0
.text:00021167                 push    0FFFFFFFFh
.text:00021169                 mov     ecx, [ebp+var_4]
.text:0002116C                 push    ecx
.text:0002116D                 call    _ssh_throttle_conn
.text:00021172                 add     esp, 8
.text:00021175
.text:00021175 loc_21175:                              ; CODE XREF: _ssh_unthrottle+37j
.text:00021175                                         ; _ssh_unthrottle+40j
.text:00021175                 jmp     loc_21229
.text:0002117A ; ---------------------------------------------------------------------------
.text:0002117A
.text:0002117A loc_2117A:                              ; CODE XREF: _ssh_unthrottle+2Bj
.text:0002117A                 mov     edx, [ebp+var_4]
.text:0002117D                 cmp     dword ptr [edx+0FCh], 0
.text:00021184                 jz      loc_21229
.text:0002118A                 mov     eax, [ebp+var_4]
.text:0002118D                 mov     ecx, [eax+0FCh]
.text:00021193                 mov     edx, [ebp+arg_4]
.text:00021196                 cmp     edx, [ecx+38h]
.text:00021199                 jge     short loc_211AF
.text:0002119B                 mov     eax, [ebp+var_4]
.text:0002119E                 mov     ecx, [eax+0FCh]
.text:000211A4                 mov     edx, [ecx+38h]
.text:000211A7                 sub     edx, [ebp+arg_4]
.text:000211AA                 mov     [ebp+var_C], edx
.text:000211AD                 jmp     short loc_211B6
.text:000211AF ; ---------------------------------------------------------------------------
.text:000211AF
.text:000211AF loc_211AF:                              ; CODE XREF: _ssh_unthrottle+81j
.text:000211AF                 mov     [ebp+var_C], 0
.text:000211B6
.text:000211B6 loc_211B6:                              ; CODE XREF: _ssh_unthrottle+95j
.text:000211B6                 mov     eax, [ebp+var_C]
.text:000211B9                 push    eax
.text:000211BA                 mov     ecx, [ebp+var_4]
.text:000211BD                 mov     edx, [ecx+0FCh]
.text:000211C3                 push    edx
.text:000211C4                 call    _ssh2_set_window
.text:000211C9                 add     esp, 8
.text:000211CC                 mov     eax, [ebp+var_4]
.text:000211CF                 push    eax
.text:000211D0                 call    _ssh_is_simple
.text:000211D5                 add     esp, 4
.text:000211D8                 test    eax, eax
.text:000211DA                 jz      short loc_211E5
.text:000211DC                 mov     [ebp+var_8], 0
.text:000211E3                 jmp     short loc_211F4
.text:000211E5 ; ---------------------------------------------------------------------------
.text:000211E5
.text:000211E5 loc_211E5:                              ; CODE XREF: _ssh_unthrottle+C2j
.text:000211E5                 mov     ecx, [ebp+var_4]
.text:000211E8                 mov     edx, [ecx+0FCh]
.text:000211EE                 mov     eax, [edx+38h]
.text:000211F1                 mov     [ebp+var_8], eax
.text:000211F4
.text:000211F4 loc_211F4:                              ; CODE XREF: _ssh_unthrottle+CBj
.text:000211F4                 mov     ecx, [ebp+var_4]
.text:000211F7                 mov     edx, [ecx+0FCh]
.text:000211FD                 cmp     dword ptr [edx+1Ch], 0
.text:00021201                 jz      short loc_21229
.text:00021203                 mov     eax, [ebp+arg_4]
.text:00021206                 cmp     eax, [ebp+var_8]
.text:00021209                 jg      short loc_21229
.text:0002120B                 mov     ecx, [ebp+var_4]
.text:0002120E                 mov     edx, [ecx+0FCh]
.text:00021214                 mov     dword ptr [edx+1Ch], 0
.text:0002121B                 push    0FFFFFFFFh
.text:0002121D                 mov     eax, [ebp+var_4]
.text:00021220                 push    eax
.text:00021221                 call    _ssh_throttle_conn
.text:00021226                 add     esp, 8
.text:00021229
.text:00021229 loc_21229:                              ; CODE XREF: _ssh_unthrottle:loc_21175j
.text:00021229                                         ; _ssh_unthrottle+6Cj ...
.text:00021229                 mov     ecx, [ebp+var_4]
.text:0002122C                 push    ecx
.text:0002122D                 call    _ssh_process_queued_incoming_data
.text:00021232                 add     esp, 4
.text:00021235                 add     esp, 0Ch
.text:00021238                 cmp     ebp, esp
.text:0002123A                 call    __RTC_CheckEsp
.text:0002123F                 mov     esp, ebp
.text:00021241                 pop     ebp
.text:00021242                 retn
.text:00021242 _ssh_unthrottle endp
.text:00021242
.text:00021242 ; ---------------------------------------------------------------------------
.text:00021243                 align 8
.text:00021248
.text:00021248 ; =============== S U B R O U T I N E =======================================
.text:00021248
.text:00021248 ; Attributes: bp-based frame
.text:00021248
.text:00021248                 public _ssh_send_port_open
.text:00021248 _ssh_send_port_open proc near           ; CODE XREF: _do_ssh2_authconn+3C15p
.text:00021248
.text:00021248 Str             = dword ptr -10h
.text:00021248 var_C           = dword ptr -0Ch
.text:00021248 var_8           = dword ptr -8
.text:00021248 var_4           = dword ptr -4
.text:00021248 arg_0           = dword ptr  8
.text:00021248 arg_4           = dword ptr  0Ch
.text:00021248 arg_8           = dword ptr  10h
.text:00021248 arg_C           = dword ptr  14h
.text:00021248
.text:00021248                 push    ebp
.text:00021249                 mov     ebp, esp
.text:0002124B                 sub     esp, 10h
.text:0002124E                 mov     eax, 0CCCCCCCCh
.text:00021253                 mov     [ebp+Str], eax
.text:00021256                 mov     [ebp+var_C], eax
.text:00021259                 mov     [ebp+var_8], eax
.text:0002125C                 mov     [ebp+var_4], eax
.text:0002125F                 mov     eax, [ebp+arg_0]
.text:00021262                 mov     [ebp+var_4], eax
.text:00021265                 mov     ecx, [ebp+var_4]
.text:00021268                 mov     edx, [ecx]
.text:0002126A                 mov     [ebp+var_8], edx
.text:0002126D                 mov     eax, [ebp+arg_C]
.text:00021270                 push    eax
.text:00021271                 mov     ecx, [ebp+arg_8]
.text:00021274                 push    ecx
.text:00021275                 mov     edx, [ebp+arg_4]
.text:00021278                 push    edx
.text:00021279                 push    offset $SG94422 ; "Opening connection to %s:%d for %s"
.text:0002127E                 mov     eax, [ebp+var_8]
.text:00021281                 push    eax
.text:00021282                 call    _logeventf
.text:00021287                 add     esp, 14h
.text:0002128A                 mov     ecx, [ebp+var_8]
.text:0002128D                 cmp     dword ptr [ecx+16Ch], 1
.text:00021294                 jnz     short loc_212BD
.text:00021296                 push    0
.text:00021298                 mov     edx, [ebp+arg_8]
.text:0002129B                 push    edx
.text:0002129C                 push    1
.text:0002129E                 mov     eax, [ebp+arg_4]
.text:000212A1                 push    eax
.text:000212A2                 push    4
.text:000212A4                 mov     ecx, [ebp+var_4]
.text:000212A7                 mov     edx, [ecx+8]
.text:000212AA                 push    edx
.text:000212AB                 push    1
.text:000212AD                 push    1Dh
.text:000212AF                 mov     eax, [ebp+var_8]
.text:000212B2                 push    eax
.text:000212B3                 call    _send_packet
.text:000212B8                 add     esp, 24h
.text:000212BB                 jmp     short loc_2133B
.text:000212BD ; ---------------------------------------------------------------------------
.text:000212BD
.text:000212BD loc_212BD:                              ; CODE XREF: _ssh_send_port_open+4Cj
.text:000212BD                 push    offset $SG94425 ; "direct-tcpip"
.text:000212C2                 mov     ecx, [ebp+var_4]
.text:000212C5                 push    ecx             ; int
.text:000212C6                 call    _ssh2_chanopen_init
.text:000212CB                 add     esp, 8
.text:000212CE                 mov     [ebp+var_C], eax
.text:000212D1                 mov     edx, [ebp+arg_4]
.text:000212D4                 push    edx
.text:000212D5                 call    _host_strduptrim
.text:000212DA                 add     esp, 4
.text:000212DD                 mov     [ebp+Str], eax
.text:000212E0                 mov     eax, [ebp+Str]
.text:000212E3                 push    eax             ; Str
.text:000212E4                 mov     ecx, [ebp+var_C]
.text:000212E7                 push    ecx             ; int
.text:000212E8                 call    _ssh_pkt_addstring
.text:000212ED                 add     esp, 8
.text:000212F0                 mov     edx, [ebp+Str]
.text:000212F3                 push    edx
.text:000212F4                 call    _safefree
.text:000212F9                 add     esp, 4
.text:000212FC                 mov     eax, [ebp+arg_8]
.text:000212FF                 push    eax
.text:00021300                 mov     ecx, [ebp+var_C]
.text:00021303                 push    ecx
.text:00021304                 call    _ssh_pkt_adduint32
.text:00021309                 add     esp, 8
.text:0002130C                 push    offset $SG94427 ; "0.0.0.0"
.text:00021311                 mov     edx, [ebp+var_C]
.text:00021314                 push    edx             ; int
.text:00021315                 call    _ssh_pkt_addstring
.text:0002131A                 add     esp, 8
.text:0002131D                 push    0
.text:0002131F                 mov     eax, [ebp+var_C]
.text:00021322                 push    eax
.text:00021323                 call    _ssh_pkt_adduint32
.text:00021328                 add     esp, 8
.text:0002132B                 mov     ecx, [ebp+var_C]
.text:0002132E                 push    ecx
.text:0002132F                 mov     edx, [ebp+var_8]
.text:00021332                 push    edx
.text:00021333                 call    _ssh2_pkt_send
.text:00021338                 add     esp, 8
.text:0002133B
.text:0002133B loc_2133B:                              ; CODE XREF: _ssh_send_port_open+73j
.text:0002133B                 add     esp, 10h
.text:0002133E                 cmp     ebp, esp
.text:00021340                 call    __RTC_CheckEsp
.text:00021345                 mov     esp, ebp
.text:00021347                 pop     ebp
.text:00021348                 retn
.text:00021348 _ssh_send_port_open endp
.text:00021348
.text:00021348 ; ---------------------------------------------------------------------------
.text:00021349                 db 0Fh dup(0CCh)
.text:00021358
.text:00021358 ; =============== S U B R O U T I N E =======================================
.text:00021358
.text:00021358 ; Attributes: bp-based frame
.text:00021358
.text:00021358 _ssh_connected  proc near               ; DATA XREF: .data:00006250o
.text:00021358
.text:00021358 var_4           = dword ptr -4
.text:00021358 arg_0           = dword ptr  8
.text:00021358
.text:00021358                 push    ebp
.text:00021359                 mov     ebp, esp
.text:0002135B                 push    ecx
.text:0002135C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00021363                 mov     eax, [ebp+arg_0]
.text:00021366                 mov     [ebp+var_4], eax
.text:00021369                 mov     ecx, [ebp+var_4]
.text:0002136C                 xor     eax, eax
.text:0002136E                 cmp     dword ptr [ecx+10h], 0
.text:00021372                 setnz   al
.text:00021375                 mov     esp, ebp
.text:00021377                 pop     ebp
.text:00021378                 retn
.text:00021378 _ssh_connected  endp
.text:00021378
.text:00021378 ; ---------------------------------------------------------------------------
.text:00021379                 db 0Fh dup(0CCh)
.text:00021388
.text:00021388 ; =============== S U B R O U T I N E =======================================
.text:00021388
.text:00021388 ; Attributes: bp-based frame
.text:00021388
.text:00021388 _ssh_sendok     proc near               ; DATA XREF: .data:00006258o
.text:00021388
.text:00021388 var_4           = dword ptr -4
.text:00021388 arg_0           = dword ptr  8
.text:00021388
.text:00021388                 push    ebp
.text:00021389                 mov     ebp, esp
.text:0002138B                 push    ecx
.text:0002138C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00021393                 mov     eax, [ebp+arg_0]
.text:00021396                 mov     [ebp+var_4], eax
.text:00021399                 mov     ecx, [ebp+var_4]
.text:0002139C                 mov     eax, [ecx+0D8h]
.text:000213A2                 mov     esp, ebp
.text:000213A4                 pop     ebp
.text:000213A5                 retn
.text:000213A5 _ssh_sendok     endp
.text:000213A5
.text:000213A5 ; ---------------------------------------------------------------------------
.text:000213A6                 align 4
.text:000213A8
.text:000213A8 ; =============== S U B R O U T I N E =======================================
.text:000213A8
.text:000213A8 ; Attributes: bp-based frame
.text:000213A8
.text:000213A8 _ssh_ldisc      proc near               ; DATA XREF: .data:0000625Co
.text:000213A8
.text:000213A8 var_4           = dword ptr -4
.text:000213A8 arg_0           = dword ptr  8
.text:000213A8 arg_4           = dword ptr  0Ch
.text:000213A8
.text:000213A8                 push    ebp
.text:000213A9                 mov     ebp, esp
.text:000213AB                 push    ecx
.text:000213AC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000213B3                 mov     eax, [ebp+arg_0]
.text:000213B6                 mov     [ebp+var_4], eax
.text:000213B9                 cmp     [ebp+arg_4], 1
.text:000213BD                 jnz     short loc_213CA
.text:000213BF                 mov     ecx, [ebp+var_4]
.text:000213C2                 mov     eax, [ecx+0DCh]
.text:000213C8                 jmp     short loc_213DD
.text:000213CA ; ---------------------------------------------------------------------------
.text:000213CA
.text:000213CA loc_213CA:                              ; CODE XREF: _ssh_ldisc+15j
.text:000213CA                 cmp     [ebp+arg_4], 0
.text:000213CE                 jnz     short loc_213DB
.text:000213D0                 mov     edx, [ebp+var_4]
.text:000213D3                 mov     eax, [edx+0E0h]
.text:000213D9                 jmp     short loc_213DD
.text:000213DB ; ---------------------------------------------------------------------------
.text:000213DB
.text:000213DB loc_213DB:                              ; CODE XREF: _ssh_ldisc+26j
.text:000213DB                 xor     eax, eax
.text:000213DD
.text:000213DD loc_213DD:                              ; CODE XREF: _ssh_ldisc+20j
.text:000213DD                                         ; _ssh_ldisc+31j
.text:000213DD                 mov     esp, ebp
.text:000213DF                 pop     ebp
.text:000213E0                 retn
.text:000213E0 _ssh_ldisc      endp
.text:000213E0
.text:000213E0 ; ---------------------------------------------------------------------------
.text:000213E1                 align 8
.text:000213E8
.text:000213E8 ; =============== S U B R O U T I N E =======================================
.text:000213E8
.text:000213E8 ; Attributes: bp-based frame
.text:000213E8
.text:000213E8 _ssh_provide_ldisc proc near            ; DATA XREF: .data:00006260o
.text:000213E8
.text:000213E8 var_4           = dword ptr -4
.text:000213E8 arg_0           = dword ptr  8
.text:000213E8 arg_4           = dword ptr  0Ch
.text:000213E8
.text:000213E8                 push    ebp
.text:000213E9                 mov     ebp, esp
.text:000213EB                 push    ecx
.text:000213EC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000213F3                 mov     eax, [ebp+arg_0]
.text:000213F6                 mov     [ebp+var_4], eax
.text:000213F9                 mov     ecx, [ebp+var_4]
.text:000213FC                 mov     edx, [ebp+arg_4]
.text:000213FF                 mov     [ecx+14h], edx
.text:00021402                 mov     esp, ebp
.text:00021404                 pop     ebp
.text:00021405                 retn
.text:00021405 _ssh_provide_ldisc endp
.text:00021405
.text:00021405 ; ---------------------------------------------------------------------------
.text:00021406                 align 4
.text:00021408
.text:00021408 ; =============== S U B R O U T I N E =======================================
.text:00021408
.text:00021408 ; Attributes: bp-based frame
.text:00021408
.text:00021408 _ssh_provide_logctx proc near           ; DATA XREF: .data:00006264o
.text:00021408
.text:00021408 var_4           = dword ptr -4
.text:00021408 arg_0           = dword ptr  8
.text:00021408 arg_4           = dword ptr  0Ch
.text:00021408
.text:00021408                 push    ebp
.text:00021409                 mov     ebp, esp
.text:0002140B                 push    ecx
.text:0002140C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00021413                 mov     eax, [ebp+arg_0]
.text:00021416                 mov     [ebp+var_4], eax
.text:00021419                 mov     ecx, [ebp+var_4]
.text:0002141C                 mov     edx, [ebp+arg_4]
.text:0002141F                 mov     [ecx+18h], edx
.text:00021422                 mov     esp, ebp
.text:00021424                 pop     ebp
.text:00021425                 retn
.text:00021425 _ssh_provide_logctx endp
.text:00021425
.text:00021425 ; ---------------------------------------------------------------------------
.text:00021426                 align 4
.text:00021428
.text:00021428 ; =============== S U B R O U T I N E =======================================
.text:00021428
.text:00021428 ; Attributes: bp-based frame
.text:00021428
.text:00021428 _ssh_return_exitcode proc near          ; DATA XREF: .data:00006254o
.text:00021428
.text:00021428 var_8           = dword ptr -8
.text:00021428 var_4           = dword ptr -4
.text:00021428 arg_0           = dword ptr  8
.text:00021428
.text:00021428                 push    ebp
.text:00021429                 mov     ebp, esp
.text:0002142B                 sub     esp, 8
.text:0002142E                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00021435                 mov     [ebp+var_4], 0CCCCCCCCh
.text:0002143C                 mov     eax, [ebp+arg_0]
.text:0002143F                 mov     [ebp+var_4], eax
.text:00021442                 mov     ecx, [ebp+var_4]
.text:00021445                 cmp     dword ptr [ecx+10h], 0
.text:00021449                 jz      short loc_21452
.text:0002144B                 or      eax, 0FFFFFFFFh
.text:0002144E                 jmp     short loc_21476
.text:00021450 ; ---------------------------------------------------------------------------
.text:00021450                 jmp     short loc_21476
.text:00021452 ; ---------------------------------------------------------------------------
.text:00021452
.text:00021452 loc_21452:                              ; CODE XREF: _ssh_return_exitcode+21j
.text:00021452                 mov     edx, [ebp+var_4]
.text:00021455                 cmp     dword ptr [edx+104h], 0
.text:0002145C                 jl      short loc_2146C
.text:0002145E                 mov     eax, [ebp+var_4]
.text:00021461                 mov     ecx, [eax+104h]
.text:00021467                 mov     [ebp+var_8], ecx
.text:0002146A                 jmp     short loc_21473
.text:0002146C ; ---------------------------------------------------------------------------
.text:0002146C
.text:0002146C loc_2146C:                              ; CODE XREF: _ssh_return_exitcode+34j
.text:0002146C                 mov     [ebp+var_8], 7FFFFFFFh
.text:00021473
.text:00021473 loc_21473:                              ; CODE XREF: _ssh_return_exitcode+42j
.text:00021473                 mov     eax, [ebp+var_8]
.text:00021476
.text:00021476 loc_21476:                              ; CODE XREF: _ssh_return_exitcode+26j
.text:00021476                                         ; _ssh_return_exitcode+28j
.text:00021476                 mov     esp, ebp
.text:00021478                 pop     ebp
.text:00021479                 retn
.text:00021479 _ssh_return_exitcode endp
.text:00021479
.text:00021479 ; ---------------------------------------------------------------------------
.text:0002147A                 db 0Eh dup(0CCh)
.text:00021488
.text:00021488 ; =============== S U B R O U T I N E =======================================
.text:00021488
.text:00021488 ; Attributes: bp-based frame
.text:00021488
.text:00021488 _ssh_cfg_info   proc near               ; DATA XREF: .data:0000626Co
.text:00021488
.text:00021488 var_4           = dword ptr -4
.text:00021488 arg_0           = dword ptr  8
.text:00021488
.text:00021488                 push    ebp
.text:00021489                 mov     ebp, esp
.text:0002148B                 push    ecx
.text:0002148C                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00021493                 mov     eax, [ebp+arg_0]
.text:00021496                 mov     [ebp+var_4], eax
.text:00021499                 mov     ecx, [ebp+var_4]
.text:0002149C                 cmp     dword ptr [ecx+16Ch], 0
.text:000214A3                 jnz     short loc_214AB
.text:000214A5                 xor     eax, eax
.text:000214A7                 jmp     short loc_214C7
.text:000214A9 ; ---------------------------------------------------------------------------
.text:000214A9                 jmp     short loc_214C7
.text:000214AB ; ---------------------------------------------------------------------------
.text:000214AB
.text:000214AB loc_214AB:                              ; CODE XREF: _ssh_cfg_info+1Bj
.text:000214AB                 mov     edx, [ebp+var_4]
.text:000214AE                 cmp     dword ptr [edx+0C4h], 0
.text:000214B5                 jz      short loc_214BE
.text:000214B7                 or      eax, 0FFFFFFFFh
.text:000214BA                 jmp     short loc_214C7
.text:000214BC ; ---------------------------------------------------------------------------
.text:000214BC                 jmp     short loc_214C7
.text:000214BE ; ---------------------------------------------------------------------------
.text:000214BE
.text:000214BE loc_214BE:                              ; CODE XREF: _ssh_cfg_info+2Dj
.text:000214BE                 mov     eax, [ebp+var_4]
.text:000214C1                 mov     eax, [eax+16Ch]
.text:000214C7
.text:000214C7 loc_214C7:                              ; CODE XREF: _ssh_cfg_info+1Fj
.text:000214C7                                         ; _ssh_cfg_info+21j ...
.text:000214C7                 mov     esp, ebp
.text:000214C9                 pop     ebp
.text:000214CA                 retn
.text:000214CA _ssh_cfg_info   endp
.text:000214CA
.text:000214CA ; ---------------------------------------------------------------------------
.text:000214CB                 db 0Dh dup(0CCh)
.text:000214D8
.text:000214D8 ; =============== S U B R O U T I N E =======================================
.text:000214D8
.text:000214D8 ; Attributes: bp-based frame
.text:000214D8
.text:000214D8                 public _ssh_fallback_cmd
.text:000214D8 _ssh_fallback_cmd proc near
.text:000214D8
.text:000214D8 var_4           = dword ptr -4
.text:000214D8 arg_0           = dword ptr  8
.text:000214D8
.text:000214D8                 push    ebp
.text:000214D9                 mov     ebp, esp
.text:000214DB                 push    ecx
.text:000214DC                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000214E3                 mov     eax, [ebp+arg_0]
.text:000214E6                 mov     [ebp+var_4], eax
.text:000214E9                 mov     ecx, [ebp+var_4]
.text:000214EC                 mov     eax, [ecx+148h]
.text:000214F2                 mov     esp, ebp
.text:000214F4                 pop     ebp
.text:000214F5                 retn
.text:000214F5 _ssh_fallback_cmd endp
.text:000214F5
.text:000214F5 ; ---------------------------------------------------------------------------
.text:000214F6                 align 4
.text:000214F6 _text           ends
.text:000214F6
.rtc$TMZ:000214F8 ; ===========================================================================
.rtc$TMZ:000214F8
.rtc$TMZ:000214F8 ; Segment type: Pure data
.rtc$TMZ:000214F8 ; Segment permissions: Read
.rtc$TMZ:000214F8 _rtc$TMZ        segment dword public 'DATA' use32
.rtc$TMZ:000214F8                 assume cs:_rtc$TMZ
.rtc$TMZ:000214F8                 ;org 214F8h
.rtc$TMZ:000214F8 ; COMDAT (pick any)
.rtc$TMZ:000214F8 __RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
.rtc$TMZ:000214F8 _rtc$TMZ        ends
.rtc$TMZ:000214F8
.rtc$IMZ:000214FC ; ===========================================================================
.rtc$IMZ:000214FC
.rtc$IMZ:000214FC ; Segment type: Pure data
.rtc$IMZ:000214FC ; Segment permissions: Read
.rtc$IMZ:000214FC _rtc$IMZ        segment dword public 'DATA' use32
.rtc$IMZ:000214FC                 assume cs:_rtc$IMZ
.rtc$IMZ:000214FC                 ;org 214FCh
.rtc$IMZ:000214FC ; COMDAT (pick any)
.rtc$IMZ:000214FC __RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
.rtc$IMZ:000214FC _rtc$IMZ        ends
.rtc$IMZ:000214FC
UNDEF:00021500 ; ===========================================================================
UNDEF:00021500
UNDEF:00021500 ; Segment type: Externs
UNDEF:00021500 ; UNDEF
UNDEF:00021500                 extrn _ssh_zlib:near    ; DATA XREF: .data:_compressionso
UNDEF:00021500                                         ; _do_ssh2_transport+57Ao
UNDEF:00021504                 extrn _ssh_hmac_sha1_96_buggy:near
UNDEF:00021504                                         ; DATA XREF: .data:00000C1Co
UNDEF:00021508                 extrn _ssh_hmac_sha1_buggy:near
UNDEF:00021508                                         ; DATA XREF: .data:_buggymacso
UNDEF:0002150C                 extrn _ssh_hmac_md5:near ; DATA XREF: .data:00000C14o
UNDEF:0002150C                                         ; .data:00000C20o
UNDEF:00021510                 extrn _ssh_hmac_sha1_96:near ; DATA XREF: .data:00000C10o
UNDEF:00021514                 extrn _ssh_hmac_sha1:near ; DATA XREF: .data:00000C0Co
UNDEF:00021518                 extrn _ssh_hmac_sha256:near ; DATA XREF: .data:_macso
UNDEF:0002151C                 extrn _ssh_dss:near     ; DATA XREF: .data:00000C04o
UNDEF:00021520                 extrn _ssh_rsa:near     ; DATA XREF: .data:_hostkey_algso
UNDEF:00021524                 extrn __RTC_Shutdown:near
UNDEF:00021524                                         ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
UNDEF:00021528                 extrn __RTC_InitBase:near
UNDEF:00021528                                         ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
UNDEF:0002152C                 extrn _safefree:near    ; CODE XREF: _ssh_socket_log+E5p
UNDEF:0002152C                                         ; _logeventf+4Ep ...
UNDEF:00021530                 extrn _logevent:near    ; CODE XREF: _ssh_socket_log+D6p
UNDEF:00021530                                         ; _logeventf+42p ...
UNDEF:00021534                 extrn _dupprintf:near   ; CODE XREF: _ssh_socket_log+7Bp
UNDEF:00021534                                         ; _ssh_socket_log+97p ...
UNDEF:00021538                 extrn _sk_addr_needs_port:near
UNDEF:00021538                                         ; CODE XREF: _ssh_socket_log+5Fp
UNDEF:0002153C                 extrn _sk_getaddr:near  ; CODE XREF: _ssh_socket_log+4Dp
UNDEF:00021540                 extrn ___security_cookie:near
UNDEF:00021540                                         ; DATA XREF: _ssh_socket_log+1Cr
UNDEF:00021540                                         ; _ssh1_log_outgoing_packet+16r ...
UNDEF:00021544                 extrn __RTC_CheckEsp:near ; CODE XREF: _ssh_socket_log+111p
UNDEF:00021544                                         ; _ssh_connshare_log+BEp ...
UNDEF:00021548 ; __fastcall __security_check_cookie(x)
UNDEF:00021548                 extrn @__security_check_cookie@4:near
UNDEF:00021548                                         ; CODE XREF: _ssh_socket_log+104p
UNDEF:00021548                                         ; _ssh1_log_outgoing_packet+24Fp ...
UNDEF:0002154C ; __fastcall _RTC_CheckStackVars(x, x)
UNDEF:0002154C                 extrn @_RTC_CheckStackVars@8:near
UNDEF:0002154C                                         ; CODE XREF: _ssh_socket_log+F7p
UNDEF:0002154C                                         ; _ssh_process_queued_incoming_data+BAp ...
UNDEF:00021550                 extrn _flags:near       ; DATA XREF: _ssh_connshare_log+79r
UNDEF:00021550                                         ; _ssh_connshare_log+84r ...
UNDEF:00021554                 extrn _dupvprintf:near  ; CODE XREF: _logeventf+22p
UNDEF:00021554                                         ; _ssh_sharing_logf+22p
UNDEF:00021558 ; size_t __cdecl strlen(const char *Str)
UNDEF:00021558                 extrn _strlen:near      ; CODE XREF: _c_write_str+7p
UNDEF:00021558                                         ; _verify_ssh_manual_host_key+88p ...
UNDEF:0002155C                 extrn _from_backend:near ; CODE XREF: _c_write+35p
UNDEF:0002155C                                         ; _ssh2_msg_channel_data+103p ...
UNDEF:00021560 ; int __cdecl fputc(int Ch, FILE *File)
UNDEF:00021560                 extrn _fputc:near       ; CODE XREF: _c_write_stderr+68p
UNDEF:00021564 ; FILE *__cdecl __iob_func()
UNDEF:00021564                 extrn ___iob_func:near  ; CODE XREF: _c_write_stderr:loc_6ABDp
UNDEF:00021564                                         ; _do_ssh1_login+F5Fp
UNDEF:00021568                 extrn _connection_fatal:near ; CODE XREF: _ssh_closing+DDp
UNDEF:00021568                                         ; _bomb_out+3Ap
UNDEF:0002156C                 extrn _notify_remote_exit:near ; CODE XREF: _ssh_closing+8Ep
UNDEF:0002156C                                         ; _ssh_do_close+7Bp ...
UNDEF:00021570                 extrn _sharestate_free:near ; CODE XREF: _ssh_do_close+21Fp
UNDEF:00021570                                         ; .text:0002023Ep
UNDEF:00021574                 extrn _freetree234:near ; CODE XREF: _ssh_do_close+1F4p
UNDEF:00021574                                         ; .text:00020213p ...
UNDEF:00021578                 extrn _pfl_terminate:near ; CODE XREF: _ssh_do_close+179p
UNDEF:00021578                                         ; _ssh_setup_portfwd+6ABp
UNDEF:0002157C                 extrn _bufchain_clear:near ; CODE XREF: _ssh_do_close+11Fp
UNDEF:0002157C                                         ; _ssh_channel_destroy+F4p ...
UNDEF:00021580                 extrn _del234:near      ; CODE XREF: _ssh_do_close+104p
UNDEF:00021580                                         ; _ssh_do_close+18Fp ...
UNDEF:00021584                 extrn _pfd_close:near   ; CODE XREF: _ssh_do_close+EEp
UNDEF:00021584                                         ; _sshfwd_unclean_close+77p ...
UNDEF:00021588                 extrn _x11_close:near   ; CODE XREF: _ssh_do_close+DDp
UNDEF:00021588                                         ; _sshfwd_unclean_close+51p ...
UNDEF:0002158C                 extrn _index234:near    ; CODE XREF: _ssh_do_close+A8p
UNDEF:0002158C                                         ; _ssh_do_close+154p ...
UNDEF:00021590                 extrn _expire_timer_context:near
UNDEF:00021590                                         ; CODE XREF: _ssh_do_close+30p
UNDEF:00021590                                         ; .text:000203D0p
UNDEF:00021594                 extrn _bufchain_size:near ; CODE XREF: _ssh_gotdata+FEp
UNDEF:00021594                                         ; _ssh_gotdata+13Dp ...
UNDEF:00021598                 extrn _log_packet:near  ; CODE XREF: _ssh_gotdata+44p
UNDEF:00021598                                         ; _ssh1_log_outgoing_packet+21Ap ...
UNDEF:0002159C                 extrn _bufchain_add:near
UNDEF:0002159C                                         ; CODE XREF: _ssh_queue_incoming_data+19p
UNDEF:0002159C                                         ; _ssh2_add_channel_data+12p ...
UNDEF:000215A0                 extrn _bufchain_consume:near
UNDEF:000215A0                                         ; CODE XREF: _ssh_process_queued_incoming_data+A3p
UNDEF:000215A0                                         ; _ssh2_try_send+ECp
UNDEF:000215A4                 extrn _bufchain_prefix:near
UNDEF:000215A4                                         ; CODE XREF: _ssh_process_queued_incoming_data+4Ep
UNDEF:000215A4                                         ; _ssh2_try_send+61p
UNDEF:000215A8                 extrn _pfd_override_throttle:near
UNDEF:000215A8                                         ; CODE XREF: _ssh_throttle_all+C0p
UNDEF:000215A8                                         ; _ssh2_msg_channel_close+124p
UNDEF:000215AC                 extrn _x11_override_throttle:near
UNDEF:000215AC                                         ; CODE XREF: _ssh_throttle_all+A9p
UNDEF:000215AC                                         ; _ssh2_msg_channel_close+111p
UNDEF:000215B0                 extrn _base64_encode_atom:near
UNDEF:000215B0                                         ; CODE XREF: _verify_ssh_manual_host_key+1B7p
UNDEF:000215B4                 extrn _safemalloc:near  ; CODE XREF: _verify_ssh_manual_host_key+172p
UNDEF:000215B4                                         ; _ssh1_pkt_addmp+29p ...
UNDEF:000215B8                 extrn _conf_get_str_str_opt:near
UNDEF:000215B8                                         ; CODE XREF: _verify_ssh_manual_host_key+115p
UNDEF:000215B8                                         ; _verify_ssh_manual_host_key+1EAp
UNDEF:000215BC ; size_t __cdecl strspn(const char *Str, const char *Control)
UNDEF:000215BC                 extrn _strspn:near      ; CODE XREF: _verify_ssh_manual_host_key+D8p
UNDEF:000215C0 ; void __cdecl _wassert(const wchar_t *Message, const wchar_t *File, unsigned int Line)
UNDEF:000215C0                 extrn __wassert:near    ; CODE XREF: _verify_ssh_manual_host_key+A4p
UNDEF:000215C0                                         ; _verify_ssh_manual_host_key+C7p ...
UNDEF:000215C4 ; char *__cdecl strrchr(const char *Str, int Ch)
UNDEF:000215C4                 extrn _strrchr:near     ; CODE XREF: _verify_ssh_manual_host_key+5Cp
UNDEF:000215C8                 extrn _conf_get_str_nthstrkey:near
UNDEF:000215C8                                         ; CODE XREF: _verify_ssh_manual_host_key+38p
UNDEF:000215CC                 extrn _crc32_compute:near ; CODE XREF: _s_wrpkt_prepare+144p
UNDEF:000215CC                                         ; _ssh1_rdpkt+343p
UNDEF:000215D0                 extrn _random_byte:near ; CODE XREF: _s_wrpkt_prepare+11Cp
UNDEF:000215D0                                         ; _ssh2_pkt_construct+233p ...
UNDEF:000215D4 ; void *__cdecl memcpy(void *Dst, const void *Src, size_t Size)
UNDEF:000215D4                 extrn _memcpy:near      ; CODE XREF: _s_wrpkt_prepare+8Bp
UNDEF:000215D4                                         ; _ssh_pkt_adddata+39p ...
UNDEF:000215D8                 extrn _zlib_compress_block:near
UNDEF:000215D8                                         ; CODE XREF: _s_wrpkt_prepare+5Ep
UNDEF:000215DC                 extrn _conf_get_int:near
UNDEF:000215DC                                         ; CODE XREF: _ssh1_log_outgoing_packet+F4p
UNDEF:000215DC                                         ; _ssh1_log_outgoing_packet+152p ...
UNDEF:000215E0                 extrn _saferealloc:near ; CODE XREF: _ssh_pkt_ensure+6Fp
UNDEF:000215E0                                         ; _ssh2_pkt_defer_noqueue+D1p ...
UNDEF:000215E4                 extrn _ssh1_write_bignum:near
UNDEF:000215E4                                         ; CODE XREF: _ssh1_pkt_addmp+3Cp
UNDEF:000215E4                                         ; _do_ssh1_login+1C2Fp ...
UNDEF:000215E8                 extrn _ssh1_bignum_length:near
UNDEF:000215E8                                         ; CODE XREF: _ssh1_pkt_addmp+18p
UNDEF:000215E8                                         ; _do_ssh1_login+1A93p ...
UNDEF:000215EC ; int __cdecl memcmp(const void *Buf1, const void *Buf2, size_t Size)
UNDEF:000215EC                 extrn _memcmp:near      ; CODE XREF: _ssh2_log_outgoing_packet+161p
UNDEF:000215EC                                         ; _ssh2_log_outgoing_packet+338p ...
UNDEF:000215F0                 extrn _toint:near       ; CODE XREF: _ssh_pkt_getstring+85p
UNDEF:000215F0                                         ; _do_ssh1_login+1625p ...
UNDEF:000215F4                 extrn _add234:near      ; CODE XREF: _ssh_alloc_sharing_rportfwd+AEp
UNDEF:000215F4                                         ; _do_ssh2_authconn+3D95p ...
UNDEF:000215F8                 extrn _newtree234:near  ; CODE XREF: _ssh_alloc_sharing_rportfwd+8Fp
UNDEF:000215F8                                         ; _do_ssh2_authconn+3B37p ...
UNDEF:000215FC                 extrn _dupstr:near      ; CODE XREF: _ssh_alloc_sharing_rportfwd+3Bp
UNDEF:000215FC                                         ; _ssh_disconnect+41p ...
UNDEF:00021600 ; int __cdecl strcmp(const char *Str1, const char *Str2)
UNDEF:00021600                 extrn _strcmp:near      ; CODE XREF: _ssh_rportcmp_ssh2+35p
UNDEF:00021600                                         ; _do_ssh2_transport+2690p ...
UNDEF:00021604                 extrn _share_got_pkt_from_server:near
UNDEF:00021604                                         ; CODE XREF: _ssh_sharing_global_request_response+1Bp
UNDEF:00021604                                         ; _ssh2_msg_channel_response+57p ...
UNDEF:00021608                 extrn _agent_exists:near
UNDEF:00021608                                         ; CODE XREF: _ssh_agent_forwarding_permitted+23p
UNDEF:00021608                                         ; _do_ssh1_login+145Bp ...
UNDEF:0002160C                 extrn _schedule_timer:near
UNDEF:0002160C                                         ; CODE XREF: _do_ssh2_transport+2F04p
UNDEF:0002160C                                         ; _do_ssh2_transport+3062p ...
UNDEF:00021610 ; DWORD __stdcall GetTickCount()
UNDEF:00021610                 extrn __imp__GetTickCount@0:near
UNDEF:00021610                                         ; CODE XREF: _do_ssh2_transport+2EAFp
UNDEF:00021610                                         ; _ssh_reconfig+BBp
UNDEF:00021610                                         ; DATA XREF: ...
UNDEF:00021614                 extrn _smemclr:near     ; CODE XREF: _do_ssh2_transport+2A54p
UNDEF:00021614                                         ; _do_ssh2_transport+2DE5p ...
UNDEF:00021618                 extrn _verify_ssh_host_key:near
UNDEF:00021618                                         ; CODE XREF: _do_ssh2_transport+259Dp
UNDEF:00021618                                         ; _do_ssh1_login+707p
UNDEF:0002161C                 extrn _ssh_rsakex_freekey:near
UNDEF:0002161C                                         ; CODE XREF: _do_ssh2_transport+22B0p
UNDEF:00021620                 extrn _ssh_rsakex_encrypt:near
UNDEF:00021620                                         ; CODE XREF: _do_ssh2_transport+21ECp
UNDEF:00021624                 extrn _bignum_set_bit:near
UNDEF:00021624                                         ; CODE XREF: _do_ssh2_transport+20DDp
UNDEF:00021628                 extrn _bn_power_2:near  ; CODE XREF: _do_ssh2_transport+206Dp
UNDEF:0002162C                 extrn _ssh_rsakex_klen:near
UNDEF:0002162C                                         ; CODE XREF: _do_ssh2_transport+202Bp
UNDEF:00021630                 extrn _ssh_rsakex_newkey:near
UNDEF:00021630                                         ; CODE XREF: _do_ssh2_transport+1F9Fp
UNDEF:00021634                 extrn _freebn:near      ; CODE XREF: _do_ssh2_transport+1E23p
UNDEF:00021634                                         ; _do_ssh2_transport+1E41p ...
UNDEF:00021638                 extrn _dh_cleanup:near  ; CODE XREF: _do_ssh2_transport+1E14p
UNDEF:00021638                                         ; .text:0002003Ep
UNDEF:0002163C                 extrn _dh_find_K:near   ; CODE XREF: _do_ssh2_transport+1D00p
UNDEF:00021640                 extrn _dh_validate_f:near
UNDEF:00021640                                         ; CODE XREF: _do_ssh2_transport+1CAEp
UNDEF:00021644                 extrn _dh_create_e:near ; CODE XREF: _do_ssh2_transport+1B26p
UNDEF:00021648                 extrn _set_busy_status:near
UNDEF:00021648                                         ; CODE XREF: _do_ssh2_transport+1B0Bp
UNDEF:00021648                                         ; _do_ssh2_transport+1B87p ...
UNDEF:0002164C                 extrn _dh_setup_group:near
UNDEF:0002164C                                         ; CODE XREF: _do_ssh2_transport+1A9Bp
UNDEF:00021650                 extrn _dh_setup_gex:near
UNDEF:00021650                                         ; CODE XREF: _do_ssh2_transport+1A5Dp
UNDEF:00021654                 extrn _askalg:near      ; CODE XREF: _do_ssh2_transport+159Dp
UNDEF:00021654                                         ; _do_ssh2_transport+169Cp ...
UNDEF:00021658                 extrn _ssh2_arcfour:near ; DATA XREF: _do_ssh2_transport+506o
UNDEF:0002165C                 extrn _ssh2_aes:near    ; DATA XREF: _do_ssh2_transport+4D8o
UNDEF:00021660                 extrn _ssh2_3des:near   ; DATA XREF: _do_ssh2_transport+4A7o
UNDEF:00021664                 extrn _ssh2_des:near    ; DATA XREF: _do_ssh2_transport+476o
UNDEF:00021668                 extrn _ssh2_blowfish:near
UNDEF:00021668                                         ; DATA XREF: _do_ssh2_transport+42Do
UNDEF:0002166C                 extrn _ssh_rsa_kex:near ; DATA XREF: _do_ssh2_transport+367o
UNDEF:00021670                 extrn _ssh_diffiehellman_group1:near
UNDEF:00021670                                         ; DATA XREF: _do_ssh2_transport+339o
UNDEF:00021674                 extrn _ssh_diffiehellman_group14:near
UNDEF:00021674                                         ; DATA XREF: _do_ssh2_transport+308o
UNDEF:00021678                 extrn _ssh_diffiehellman_gex:near
UNDEF:00021678                                         ; DATA XREF: _do_ssh2_transport+2D7o
UNDEF:0002167C                 extrn _conf_get_int_int:near
UNDEF:0002167C                                         ; CODE XREF: _do_ssh2_transport+2A3p
UNDEF:0002167C                                         ; _do_ssh2_transport+3F9p ...
UNDEF:00021680 ; void *__cdecl memmove(void *Dst, const void *Src, size_t Size)
UNDEF:00021680                 extrn _memmove:near     ; CODE XREF: _ssh2_mpint_fmt+D4p
UNDEF:00021684                 extrn _bignum_byte:near ; CODE XREF: _ssh2_mpint_fmt+75p
UNDEF:00021684                                         ; _do_ssh1_login+24E5p
UNDEF:00021688                 extrn _bignum_bitcount:near ; CODE XREF: _ssh2_mpint_fmt+1Fp
UNDEF:00021688                                         ; _do_ssh1_login+1B99p ...
UNDEF:0002168C                 extrn _bignum_from_bytes:near
UNDEF:0002168C                                         ; CODE XREF: _ssh2_pkt_getmp+58p
UNDEF:00021690 ; void *__cdecl memchr(const void *Buf, int Val, size_t MaxCount)
UNDEF:00021690                 extrn _memchr:near      ; CODE XREF: _do_ssh1_login+27B5p
UNDEF:00021690                                         ; _do_ssh1_login+2A3Bp
UNDEF:00021694                 extrn _rsadecrypt:near  ; CODE XREF: _do_ssh1_login+248Bp
UNDEF:00021698                 extrn _loadrsakey:near  ; CODE XREF: _do_ssh1_login+226Cp
UNDEF:0002169C                 extrn _ssh1_read_bignum:near
UNDEF:0002169C                                         ; CODE XREF: _do_ssh1_login+1742p
UNDEF:0002169C                                         ; _do_ssh1_login+17B3p ...
UNDEF:000216A0                 extrn _agent_query:near ; CODE XREF: _do_ssh1_login+1501p
UNDEF:000216A0                                         ; _do_ssh1_login+1D0Cp ...
UNDEF:000216A4                 extrn _key_type_to_str:near ; CODE XREF: _do_ssh1_login+1394p
UNDEF:000216A4                                         ; _do_ssh1_login+13B5p ...
UNDEF:000216A8                 extrn _rsakey_encrypted:near
UNDEF:000216A8                                         ; CODE XREF: _do_ssh1_login+12FEp
UNDEF:000216AC                 extrn _rsakey_pubblob:near ; CODE XREF: _do_ssh1_login+12E3p
UNDEF:000216B0                 extrn _key_type:near    ; CODE XREF: _do_ssh1_login+1296p
UNDEF:000216B0                                         ; _do_ssh2_authconn+524p
UNDEF:000216B4                 extrn _filename_to_str:near ; CODE XREF: _do_ssh1_login+126Fp
UNDEF:000216B4                                         ; _do_ssh1_login+133Dp ...
UNDEF:000216B8                 extrn _filename_is_null:near
UNDEF:000216B8                                         ; CODE XREF: _do_ssh1_login+1252p
UNDEF:000216B8                                         ; _do_ssh2_authconn+4E6p
UNDEF:000216BC                 extrn _conf_get_filename:near
UNDEF:000216BC                                         ; CODE XREF: _do_ssh1_login+1231p
UNDEF:000216BC                                         ; _do_ssh1_login+201Fp ...
UNDEF:000216C0                 extrn _free_prompts:near ; CODE XREF: _do_ssh1_login+109Ap
UNDEF:000216C0                                         ; _do_ssh1_login+10FDp ...
UNDEF:000216C4                 extrn _get_userpass_input:near
UNDEF:000216C4                                         ; CODE XREF: _do_ssh1_login+1017p
UNDEF:000216C4                                         ; _do_ssh1_login+106Ap ...
UNDEF:000216C8                 extrn _add_prompt:near  ; CODE XREF: _do_ssh1_login+1001p
UNDEF:000216C8                                         ; _do_ssh1_login+2126p ...
UNDEF:000216CC                 extrn _new_prompts:near ; CODE XREF: _do_ssh1_login+FAEp
UNDEF:000216CC                                         ; _do_ssh1_login+20C9p ...
UNDEF:000216D0                 extrn _get_remote_username:near
UNDEF:000216D0                                         ; CODE XREF: _do_ssh1_login+F7Ap
UNDEF:000216D0                                         ; _do_ssh2_authconn+B6Ap
UNDEF:000216D4 ; int __cdecl fflush(FILE *File)
UNDEF:000216D4                 extrn _fflush:near      ; CODE XREF: _do_ssh1_login+F68p
UNDEF:000216D8                 extrn _crcda_make_context:near
UNDEF:000216D8                                         ; CODE XREF: _do_ssh1_login+DFFp
UNDEF:000216DC                 extrn _ssh_3des:near    ; DATA XREF: _do_ssh1_login:loc_E74Co
UNDEF:000216E0                 extrn _ssh_des:near     ; DATA XREF: _do_ssh1_login+D78o
UNDEF:000216E4                 extrn _ssh_blowfish_ssh1:near
UNDEF:000216E4                                         ; DATA XREF: _do_ssh1_login+D60o
UNDEF:000216E8                 extrn _rsaencrypt:near  ; CODE XREF: _do_ssh1_login+89Dp
UNDEF:000216E8                                         ; _do_ssh1_login+8D2p ...
UNDEF:000216EC                 extrn _rsastr_fmt:near  ; CODE XREF: _do_ssh1_login+60Fp
UNDEF:000216F0                 extrn _rsastr_len:near  ; CODE XREF: _do_ssh1_login+5D6p
UNDEF:000216F4                 extrn _MD5Final:near    ; CODE XREF: _do_ssh1_login+4C3p
UNDEF:000216F4                                         ; _do_ssh1_login+254Cp
UNDEF:000216F8                 extrn _MD5Update:near   ; CODE XREF: _do_ssh1_login+46Fp
UNDEF:000216F8                                         ; _do_ssh1_login+495p ...
UNDEF:000216FC                 extrn _MD5Init:near     ; CODE XREF: _do_ssh1_login+449p
UNDEF:000216FC                                         ; _do_ssh1_login+2503p
UNDEF:00021700                 extrn _rsa_fingerprint:near ; CODE XREF: _do_ssh1_login+3A7p
UNDEF:00021700                                         ; _do_ssh1_login+62Dp
UNDEF:00021704 ; char *__cdecl strcpy(char *Dest, const char *Source)
UNDEF:00021704                 extrn _strcpy:near      ; CODE XREF: _do_ssh1_login+354p
UNDEF:00021704                                         ; _do_ssh1_login+2EECp ...
UNDEF:00021708                 extrn _makekey:near     ; CODE XREF: _ssh1_pkt_getrsakey+2Ep
UNDEF:0002170C                 extrn _share_ndownstreams:near
UNDEF:0002170C                                         ; CODE XREF: _ssh_check_termination+53p
UNDEF:00021710                 extrn _count234:near    ; CODE XREF: _ssh_check_termination+31p
UNDEF:00021710                                         ; _alloc_channel_id+37p
UNDEF:00021714                 extrn _update_specials_menu:near
UNDEF:00021714                                         ; CODE XREF: _ssh_channel_destroy+50p
UNDEF:00021714                                         ; _do_ssh2_authconn+3DA7p ...
UNDEF:00021718                 extrn _x11_invent_fake_auth:near
UNDEF:00021718                                         ; CODE XREF: _ssh_sharing_add_x11_display+19p
UNDEF:00021718                                         ; _do_ssh2_authconn+3F97p ...
UNDEF:0002171C                 extrn _x11_free_fake_auth:near
UNDEF:0002171C                                         ; CODE XREF: _ssh_sharing_remove_x11_display+1Dp
UNDEF:0002171C                                         ; .text:000202EDp
UNDEF:00021720                 extrn _share_setup_x11_channel:near
UNDEF:00021720                                         ; CODE XREF: _sshfwd_x11_sharing_handover+5Dp
UNDEF:00021724                 extrn _ldisc_send:near  ; CODE XREF: _do_ssh2_authconn+4319p
UNDEF:00021724                                         ; _do_ssh1_connection+875p
UNDEF:00021728                 extrn _x11_setup_display:near
UNDEF:00021728                                         ; CODE XREF: _do_ssh2_authconn+3F3Fp
UNDEF:00021728                                         ; _do_ssh1_connection+224p
UNDEF:0002172C                 extrn _share_activate:near
UNDEF:0002172C                                         ; CODE XREF: _do_ssh2_authconn+3E6Ap
UNDEF:00021730                 extrn _conf_get_str:near ; CODE XREF: _do_ssh2_authconn+3BCDp
UNDEF:00021730                                         ; _do_ssh2_authconn+3C02p ...
UNDEF:00021734                 extrn _ngsslibs:near    ; DATA XREF: _do_ssh2_authconn+253Er
UNDEF:00021738                 extrn _ssh2_wrong_passphrase:near
UNDEF:00021738                                         ; DATA XREF: _do_ssh2_authconn:loc_13F04o
UNDEF:00021738                                         ; _do_ssh2_authconn+20F1o
UNDEF:0002173C                 extrn _ssh2_load_userkey:near
UNDEF:0002173C                                         ; CODE XREF: _do_ssh2_authconn+20A6p
UNDEF:00021740                 extrn _ssh_gss_setup:near
UNDEF:00021740                                         ; CODE XREF: _do_ssh2_authconn+1263p
UNDEF:00021744                 extrn _bufchain_fetch:near
UNDEF:00021744                                         ; CODE XREF: _do_ssh2_authconn+EB1p
UNDEF:00021748                 extrn _ssh2_userkey_encrypted:near
UNDEF:00021748                                         ; CODE XREF: _do_ssh2_authconn+57Fp
UNDEF:0002174C                 extrn _ssh2_userkey_loadpub:near
UNDEF:0002174C                                         ; CODE XREF: _do_ssh2_authconn+55Cp
UNDEF:00021750                 extrn _bufchain_init:near ; CODE XREF: _do_ssh2_authconn+493p
UNDEF:00021750                                         ; _ssh2_channel_init+9Fp ...
UNDEF:00021754                 extrn __RTC_UninitUse:near
UNDEF:00021754                                         ; CODE XREF: _do_ssh2_authconn+114Ep
UNDEF:00021754                                         ; _do_ssh2_authconn+1164p ...
UNDEF:00021758                 extrn _from_backend_untrusted:near
UNDEF:00021758                                         ; CODE XREF: _c_write_untrusted+33p
UNDEF:0002175C                 extrn _pfl_listen:near  ; CODE XREF: _ssh_setup_portfwd+925p
UNDEF:0002175C                                         ; _ssh_setup_portfwd+A21p
UNDEF:00021760                 extrn _delpos234:near   ; CODE XREF: _ssh_setup_portfwd+6C1p
UNDEF:00021760                                         ; .text:0002012Dp ...
UNDEF:00021764                 extrn _host_strcspn:near ; CODE XREF: _ssh_setup_portfwd+229p
UNDEF:00021768                 extrn _net_service_lookup:near
UNDEF:00021768                                         ; CODE XREF: _ssh_setup_portfwd+1B1p
UNDEF:00021768                                         ; _ssh_setup_portfwd+292p
UNDEF:0002176C ; int __cdecl atoi(const char *Str)
UNDEF:0002176C                 extrn _atoi:near        ; CODE XREF: _ssh_setup_portfwd+18Ep
UNDEF:0002176C                                         ; _ssh_setup_portfwd+26Fp ...
UNDEF:00021770                 extrn _host_strduptrim:near
UNDEF:00021770                                         ; CODE XREF: _ssh_setup_portfwd+15Bp
UNDEF:00021770                                         ; _connect_to_host+C4p ...
UNDEF:00021774                 extrn _host_strchr:near ; CODE XREF: _ssh_setup_portfwd+12Bp
UNDEF:00021774                                         ; _connect_to_host+85p
UNDEF:00021778                 extrn _conf_get_str_strs:near
UNDEF:00021778                                         ; CODE XREF: _ssh_setup_portfwd+8Bp
UNDEF:00021778                                         ; _ssh_setup_portfwd+A9p ...
UNDEF:0002177C                 extrn _pfd_unthrottle:near
UNDEF:0002177C                                         ; CODE XREF: _ssh2_try_send_and_unthrottle+69p
UNDEF:00021780                 extrn _x11_unthrottle:near
UNDEF:00021780                                         ; CODE XREF: _ssh2_try_send_and_unthrottle+56p
UNDEF:00021784                 extrn _find234:near     ; CODE XREF: _alloc_channel_id+BCp
UNDEF:00021784                                         ; _ssh2_channel_msg+3Fp ...
UNDEF:00021788                 extrn _pfd_send:near    ; CODE XREF: _ssh2_msg_channel_data+141p
UNDEF:00021788                                         ; _ssh1_msg_channel_data+B6p
UNDEF:0002178C                 extrn _x11_send:near    ; CODE XREF: _ssh2_msg_channel_data+122p
UNDEF:0002178C                                         ; _ssh1_msg_channel_data+97p
UNDEF:00021790                 extrn _from_backend_eof:near
UNDEF:00021790                                         ; CODE XREF: _ssh2_channel_got_eof+A8p
UNDEF:00021794                 extrn _pfd_send_eof:near
UNDEF:00021794                                         ; CODE XREF: _ssh2_channel_got_eof+77p
UNDEF:00021794                                         ; _ssh1_msg_channel_close+E9p
UNDEF:00021798                 extrn _x11_send_eof:near
UNDEF:00021798                                         ; CODE XREF: _ssh2_channel_got_eof+3Ap
UNDEF:00021798                                         ; _ssh1_msg_channel_close+C6p
UNDEF:0002179C                 extrn _pfd_confirm:near ; CODE XREF: _ssh2_msg_channel_open_confirmation+DDp
UNDEF:0002179C                                         ; _ssh1_msg_channel_open_confirmation+93p
UNDEF:000217A0                 extrn _pfd_connect:near ; CODE XREF: _ssh2_msg_channel_open+2F8p
UNDEF:000217A0                                         ; _ssh1_msg_port_open+112p
UNDEF:000217A4                 extrn _x11_init:near    ; CODE XREF: _ssh2_msg_channel_open+148p
UNDEF:000217A4                                         ; _ssh1_smsg_x11_open+9Ep
UNDEF:000217A8 ; int sscanf(const char *Src, const char *Format, ...)
UNDEF:000217A8                 extrn _sscanf:near      ; CODE XREF: _ssh2_setup_pty+BAp
UNDEF:000217A8                                         ; _do_ssh1_connection+463p
UNDEF:000217AC                 extrn _get_ttymode:near ; CODE XREF: _parse_ttymodes+75p
UNDEF:000217B0                 extrn _ctrlparse:near   ; CODE XREF: _ssh_tty_parse_specchar+30p
UNDEF:000217B4 ; int __cdecl stricmp(const char *Str1, const char *Str2)
UNDEF:000217B4                 extrn _stricmp:near     ; CODE XREF: _ssh_tty_parse_boolean+Cp
UNDEF:000217B4                                         ; _ssh_tty_parse_boolean+21p ...
UNDEF:000217B8                 extrn _random_unref:near ; CODE XREF: _ssh_init+539p
UNDEF:000217B8                                         ; .text:00020455p
UNDEF:000217BC                 extrn _random_ref:near  ; CODE XREF: _ssh_init+50Bp
UNDEF:000217C0                 extrn _parse_blocksize:near ; CODE XREF: _ssh_init+4E0p
UNDEF:000217C0                                         ; _ssh_reconfig+132p
UNDEF:000217C4                 extrn _x11_authcmp:near ; DATA XREF: _ssh_init+1FEo
UNDEF:000217C8                 extrn _conf_copy:near   ; CODE XREF: _ssh_init+2Ap
UNDEF:000217C8                                         ; _ssh_reconfig+25Dp
UNDEF:000217CC                 extrn _new_connection:near ; CODE XREF: _connect_to_host+2B6p
UNDEF:000217D0                 extrn _sk_addr_free:near ; CODE XREF: _connect_to_host+267p
UNDEF:000217D4                 extrn _sk_addr_error:near ; CODE XREF: _connect_to_host+252p
UNDEF:000217D8                 extrn _name_lookup:near ; CODE XREF: _connect_to_host+243p
UNDEF:000217DC                 extrn _ssh_connection_sharing_init:near
UNDEF:000217DC                                         ; CODE XREF: _connect_to_host+160p
UNDEF:000217E0                 extrn _host_strrchr:near ; CODE XREF: _connect_to_host+6Ep
UNDEF:000217E4 ; size_t __cdecl strcspn(const char *Str, const char *Control)
UNDEF:000217E4                 extrn _strcspn:near     ; CODE XREF: _ssh_send_verstring+D8p
UNDEF:000217E4                                         ; _ssh_send_verstring+12Bp ...
UNDEF:000217E8                 extrn _sshver:near      ; DATA XREF: _ssh_send_verstring+27o
UNDEF:000217E8                                         ; _ssh_send_verstring:loc_1B1EAo
UNDEF:000217EC ; unsigned __int32 __cdecl strtoul(const char *Str, char **EndPtr, int Radix)
UNDEF:000217EC                 extrn _strtoul:near     ; CODE XREF: _ssh_versioncmp+2Dp
UNDEF:000217EC                                         ; _ssh_versioncmp+42p ...
UNDEF:000217F0                 extrn _pinger_new:near  ; CODE XREF: _do_ssh_init+56Dp
UNDEF:000217F0                                         ; _do_ssh_connection_init+411p
UNDEF:000217F4                 extrn _zlib_decompress_block:near
UNDEF:000217F4                                         ; CODE XREF: _ssh1_rdpkt+455p
UNDEF:000217F8                 extrn _detect_attack:near ; CODE XREF: _ssh1_rdpkt+2AEp
UNDEF:000217FC                 extrn _wc_match:near    ; CODE XREF: _ssh_detect_bugs+2C1p
UNDEF:000217FC                                         ; _ssh_detect_bugs+2DAp ...
UNDEF:00021800                 extrn _zlib_decompress_init:near
UNDEF:00021800                                         ; CODE XREF: _do_ssh1_connection+733p
UNDEF:00021804                 extrn _zlib_compress_init:near
UNDEF:00021804                                         ; CODE XREF: _do_ssh1_connection+70Ep
UNDEF:00021808                 extrn _ssh_gss_cleanup:near ; CODE XREF: .text:00020441p
UNDEF:0002180C                 extrn _conf_free:near   ; CODE XREF: .text:00020423p
UNDEF:0002180C                                         ; _ssh_reconfig+251p
UNDEF:00021810                 extrn _pinger_free:near ; CODE XREF: .text:000203EEp
UNDEF:00021814                 extrn _crcda_free_context:near ; CODE XREF: .text:000203A3p
UNDEF:00021818                 extrn _x11_free_display:near ; CODE XREF: .text:000202C4p
UNDEF:0002181C                 extrn _zlib_decompress_cleanup:near
UNDEF:0002181C                                         ; CODE XREF: .text:00020020p
UNDEF:00021820                 extrn _zlib_compress_cleanup:near
UNDEF:00021820                                         ; CODE XREF: .text:0001FFD0p
UNDEF:00021824                 extrn _pinger_reconfig:near ; CODE XREF: _ssh_reconfig+4Dp
UNDEF:00021824
UNDEF:00021824
UNDEF:00021824                 end
.data:00000000 ;
.data:00000000 ; +-------------------------------------------------------------------------+
.data:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.data:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.data:00000000 ; |                      License info: 48-3677-7074-51                      |
.data:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.data:00000000 ; +-------------------------------------------------------------------------+
.data:00000000 ;
.data:00000000 ; Input MD5   : 428F6823B098730524A58375F42F51A9
.data:00000000 ; Input CRC32 : B8CEA07C
.data:00000000
.data:00000000 ; File Name   : C:\workspace\Putty\windows\VS2010\putty\Debug\sshzlib.obj
.data:00000000 ; Format      : COFF (X386MAGIC)
.data:00000000 ; includelib "LIBCMTD"
.data:00000000 ; includelib "OLDNAMES"
.data:00000000
.data:00000000                 include uni.inc ; see unicode subdir of ida for info on unicode
.data:00000000
.data:00000000                 .686p
.data:00000000                 .mmx
.data:00000000                 .model flat
.data:00000000
.data:00000000 ; ===========================================================================
.data:00000000
.data:00000000 ; Segment type: Pure data
.data:00000000 ; Segment permissions: Read/Write
.data:00000000 _data           segment dword public 'DATA' use32
.data:00000000                 assume cs:_data
.data:00000000 ; wchar_t _SG7246
.data:00000000 $SG7246:                                ; DATA XREF: _lz77_compress+40o
.data:00000000                 unicode 0, <..\..\..\sshzlib.c>,0
.data:00000026                 align 4
.data:00000028 ; wchar_t _SG7247
.data:00000028 $SG7247:                                ; DATA XREF: _lz77_compress+45o
.data:00000028                 unicode 0, <st->
.data:00000028                 dw 3Eh
.data:00000028                 unicode 0, <npending >
.data:00000028                 dw 3Ch
.data:00000028                 unicode 0, <= HASHCHARS>,0
.data:0000005C ; wchar_t _SG7298
.data:0000005C $SG7298:                                ; DATA XREF: _lz77_compress+5E1o
.data:0000005C                 unicode 0, <..\..\..\sshzlib.c>,0
.data:00000082                 align 4
.data:00000084 ; wchar_t _SG7299
.data:00000084 $SG7299:                                ; DATA XREF: _lz77_compress+5E6o
.data:00000084                 unicode 0, <st->
.data:00000084                 dw 3Eh
.data:00000084                 unicode 0, <npending >
.data:00000084                 dw 3Ch
.data:00000084                 unicode 0, < HASHCHARS>,0
.data:000000B6                 align 4
.data:000000B8 ; wchar_t _SG7317
.data:000000B8 $SG7317:                                ; DATA XREF: _outbits+16o
.data:000000B8                 unicode 0, <..\..\..\sshzlib.c>,0
.data:000000DE                 align 10h
.data:000000E0 ; wchar_t _SG7318
.data:000000E0 $SG7318:                                ; DATA XREF: _outbits+1Bo
.data:000000E0                 unicode 0, <out->
.data:000000E0                 dw 3Eh
.data:000000E0                 unicode 0, <noutbits + nbits >
.data:000000E0                 dw 3Ch
.data:000000E0                 unicode 0, <= 32>,0
.data:00000118 ; wchar_t _SG7363
.data:00000118 $SG7363:                                ; DATA XREF: _zlib_match+3Do
.data:00000118                 unicode 0, <..\..\..\sshzlib.c>,0
.data:0000013E                 align 10h
.data:00000140 ; wchar_t _SG7364
.data:00000140 $SG7364:                                ; DATA XREF: _zlib_match+42o
.data:00000140                 unicode 0, <!out->
.data:00000140                 dw 3Eh
.data:00000140                 unicode 0, <comp_disabled>,0
.data:00000168 ; wchar_t _SG7373
.data:00000168 $SG7373:                                ; DATA XREF: _zlib_match+C1o
.data:00000168                 unicode 0, <..\..\..\sshzlib.c>,0
.data:0000018E                 align 10h
.data:00000190 ; wchar_t _SG7374
.data:00000190 $SG7374:                                ; DATA XREF: _zlib_match+C6o
.data:00000190                 unicode 0, <j - i >
.data:00000190                 dw 3Eh
.data:00000190                 unicode 0, <= 2>,0
.data:000001A6                 align 4
.data:000001A8 ; wchar_t _SG7386
.data:000001A8 $SG7386:                                ; DATA XREF: _zlib_match+1BEo
.data:000001A8                 unicode 0, <..\..\..\sshzlib.c>,0
.data:000001CE                 align 10h
.data:000001D0 ; wchar_t _SG7387
.data:000001D0 $SG7387:                                ; DATA XREF: _zlib_match+1C3o
.data:000001D0                 unicode 0, <j - i >
.data:000001D0                 dw 3Eh
.data:000001D0                 unicode 0, <= 2>,0
.data:000001E6                 align 4
.data:000001E8 $SG7728         db 'zlib',0             ; DATA XREF: .rdata:_ssh_zlibo
.data:000001ED                 align 10h
.data:000001F0 $SG7729         db 'zlib@openssh.com',0 ; DATA XREF: .rdata:000005F0o
.data:00000201                 align 4
.data:00000204 $SG7730         db 'zlib (RFC1950)',0   ; DATA XREF: .rdata:00000610o
.data:00000213                 align 4
.data:00000213 _data           ends
.data:00000213
.rdata:00000214 ; ===========================================================================
.rdata:00000214
.rdata:00000214 ; Segment type: Pure data
.rdata:00000214 ; Segment permissions: Read
.rdata:00000214 ; Segment alignment 'qword' can not be represented in assembly
.rdata:00000214 _rdata          segment para public 'DATA' use32
.rdata:00000214                 assume cs:_rdata
.rdata:00000214                 ;org 214h
.rdata:00000214 _mirrorbytes    db 0                    ; DATA XREF: _zlib_literal+60r
.rdata:00000214                                         ; _zlib_match+13Br ...
.rdata:00000215                 db  80h ; Ç
.rdata:00000216                 db  40h ; @
.rdata:00000217                 db 0C0h ; +
.rdata:00000218                 db  20h
.rdata:00000219                 db 0A0h ; á
.rdata:0000021A                 db  60h ; `
.rdata:0000021B                 db 0E0h ; a
.rdata:0000021C                 db  10h
.rdata:0000021D                 db  90h ; É
.rdata:0000021E                 db  50h ; P
.rdata:0000021F                 db 0D0h ; -
.rdata:00000220                 db  30h ; 0
.rdata:00000221                 db 0B0h ; ¦
.rdata:00000222                 db  70h ; p
.rdata:00000223                 db 0F0h ; =
.rdata:00000224                 db    8
.rdata:00000225                 db  88h ; ê
.rdata:00000226                 db  48h ; H
.rdata:00000227                 db 0C8h ; +
.rdata:00000228                 db  28h ; (
.rdata:00000229                 db 0A8h ; ¿
.rdata:0000022A                 db  68h ; h
.rdata:0000022B                 db 0E8h ; F
.rdata:0000022C                 db  18h
.rdata:0000022D                 db  98h ; ÿ
.rdata:0000022E                 db  58h ; X
.rdata:0000022F                 db 0D8h ; +
.rdata:00000230                 db  38h ; 8
.rdata:00000231                 db 0B8h ; +
.rdata:00000232                 db  78h ; x
.rdata:00000233                 db 0F8h ; °
.rdata:00000234                 db    4
.rdata:00000235                 db  84h ; ä
.rdata:00000236                 db  44h ; D
.rdata:00000237                 db 0C4h ; -
.rdata:00000238                 db  24h ; $
.rdata:00000239                 db 0A4h ; ñ
.rdata:0000023A                 db  64h ; d
.rdata:0000023B                 db 0E4h ; S
.rdata:0000023C                 db  14h
.rdata:0000023D                 db  94h ; ö
.rdata:0000023E                 db  54h ; T
.rdata:0000023F                 db 0D4h ; +
.rdata:00000240                 db  34h ; 4
.rdata:00000241                 db 0B4h ; ¦
.rdata:00000242                 db  74h ; t
.rdata:00000243                 db 0F4h ; (
.rdata:00000244 byte_244        db 0Ch                  ; DATA XREF: _zlib_literal+44r
.rdata:00000245                 db  8Ch ; î
.rdata:00000246                 db  4Ch ; L
.rdata:00000247                 db 0CCh ; ¦
.rdata:00000248                 db  2Ch ; ,
.rdata:00000249                 db 0ACh ; ¼
.rdata:0000024A                 db  6Ch ; l
.rdata:0000024B                 db 0ECh ; 8
.rdata:0000024C                 db  1Ch
.rdata:0000024D                 db  9Ch ; £
.rdata:0000024E                 db  5Ch ; \
.rdata:0000024F                 db 0DCh ; _
.rdata:00000250                 db  3Ch ; <
.rdata:00000251                 db 0BCh ; +
.rdata:00000252                 db  7Ch ; |
.rdata:00000253                 db 0FCh ; n
.rdata:00000254                 db    2
.rdata:00000255                 db  82h ; é
.rdata:00000256                 db  42h ; B
.rdata:00000257                 db 0C2h ; -
.rdata:00000258                 db  22h ; "
.rdata:00000259                 db 0A2h ; ó
.rdata:0000025A                 db  62h ; b
.rdata:0000025B                 db 0E2h ; G
.rdata:0000025C                 db  12h
.rdata:0000025D                 db  92h ; Æ
.rdata:0000025E                 db  52h ; R
.rdata:0000025F                 db 0D2h ; -
.rdata:00000260                 db  32h ; 2
.rdata:00000261                 db 0B2h ; ¦
.rdata:00000262                 db  72h ; r
.rdata:00000263                 db 0F2h ; =
.rdata:00000264                 db  0Ah
.rdata:00000265                 db  8Ah ; è
.rdata:00000266                 db  4Ah ; J
.rdata:00000267                 db 0CAh ; -
.rdata:00000268                 db  2Ah ; *
.rdata:00000269                 db 0AAh ; ¬
.rdata:0000026A                 db  6Ah ; j
.rdata:0000026B                 db 0EAh ; O
.rdata:0000026C                 db  1Ah
.rdata:0000026D                 db  9Ah ; Ü
.rdata:0000026E                 db  5Ah ; Z
.rdata:0000026F                 db 0DAh ; +
.rdata:00000270                 db  3Ah ; :
.rdata:00000271                 db 0BAh ; ¦
.rdata:00000272                 db  7Ah ; z
.rdata:00000273                 db 0FAh ; ·
.rdata:00000274                 db    6
.rdata:00000275                 db  86h ; å
.rdata:00000276                 db  46h ; F
.rdata:00000277                 db 0C6h ; ¦
.rdata:00000278                 db  26h ; &
.rdata:00000279                 db 0A6h ; ª
.rdata:0000027A                 db  66h ; f
.rdata:0000027B                 db 0E6h ; µ
.rdata:0000027C                 db  16h
.rdata:0000027D                 db  96h ; û
.rdata:0000027E                 db  56h ; V
.rdata:0000027F                 db 0D6h ; +
.rdata:00000280                 db  36h ; 6
.rdata:00000281                 db 0B6h ; ¦
.rdata:00000282                 db  76h ; v
.rdata:00000283                 db 0F6h ; ÷
.rdata:00000284                 db  0Eh
.rdata:00000285                 db  8Eh ; Ä
.rdata:00000286                 db  4Eh ; N
.rdata:00000287                 db 0CEh ; +
.rdata:00000288                 db  2Eh ; .
.rdata:00000289                 db 0AEh ; «
.rdata:0000028A                 db  6Eh ; n
.rdata:0000028B                 db 0EEh ; e
.rdata:0000028C                 db  1Eh
.rdata:0000028D                 db  9Eh ; P
.rdata:0000028E                 db  5Eh ; ^
.rdata:0000028F                 db 0DEh ; ¦
.rdata:00000290                 db  3Eh ; >
.rdata:00000291                 db 0BEh ; +
.rdata:00000292                 db  7Eh ; ~
.rdata:00000293                 db 0FEh ; ¦
.rdata:00000294                 db    1
.rdata:00000295                 db  81h ; ü
.rdata:00000296                 db  41h ; A
.rdata:00000297                 db 0C1h ; -
.rdata:00000298                 db  21h ; !
.rdata:00000299                 db 0A1h ; í
.rdata:0000029A                 db  61h ; a
.rdata:0000029B                 db 0E1h ; ß
.rdata:0000029C                 db  11h
.rdata:0000029D                 db  91h ; æ
.rdata:0000029E                 db  51h ; Q
.rdata:0000029F                 db 0D1h ; -
.rdata:000002A0                 db  31h ; 1
.rdata:000002A1                 db 0B1h ; ¦
.rdata:000002A2                 db  71h ; q
.rdata:000002A3                 db 0F1h ; ±
.rdata:000002A4                 db    9
.rdata:000002A5                 db  89h ; ë
.rdata:000002A6                 db  49h ; I
.rdata:000002A7                 db 0C9h ; +
.rdata:000002A8                 db  29h ; )
.rdata:000002A9                 db 0A9h ; ¬
.rdata:000002AA                 db  69h ; i
.rdata:000002AB                 db 0E9h ; T
.rdata:000002AC                 db  19h
.rdata:000002AD                 db  99h ; Ö
.rdata:000002AE                 db  59h ; Y
.rdata:000002AF                 db 0D9h ; +
.rdata:000002B0                 db  39h ; 9
.rdata:000002B1                 db 0B9h ; ¦
.rdata:000002B2                 db  79h ; y
.rdata:000002B3                 db 0F9h ; ·
.rdata:000002B4                 db    5
.rdata:000002B5                 db  85h ; à
.rdata:000002B6                 db  45h ; E
.rdata:000002B7                 db 0C5h ; +
.rdata:000002B8                 db  25h ; %
.rdata:000002B9                 db 0A5h ; Ñ
.rdata:000002BA                 db  65h ; e
.rdata:000002BB                 db 0E5h ; s
.rdata:000002BC                 db  15h
.rdata:000002BD                 db  95h ; ò
.rdata:000002BE                 db  55h ; U
.rdata:000002BF                 db 0D5h ; +
.rdata:000002C0                 db  35h ; 5
.rdata:000002C1                 db 0B5h ; ¦
.rdata:000002C2                 db  75h ; u
.rdata:000002C3                 db 0F5h ; )
.rdata:000002C4                 db  0Dh
.rdata:000002C5                 db  8Dh ; ì
.rdata:000002C6                 db  4Dh ; M
.rdata:000002C7                 db 0CDh ; -
.rdata:000002C8                 db  2Dh ; -
.rdata:000002C9                 db 0ADh ; ¡
.rdata:000002CA                 db  6Dh ; m
.rdata:000002CB                 db 0EDh ; f
.rdata:000002CC                 db  1Dh
.rdata:000002CD                 db  9Dh ; ¥
.rdata:000002CE                 db  5Dh ; ]
.rdata:000002CF                 db 0DDh ; ¦
.rdata:000002D0                 db  3Dh ; =
.rdata:000002D1                 db 0BDh ; +
.rdata:000002D2                 db  7Dh ; }
.rdata:000002D3                 db 0FDh ; ²
.rdata:000002D4                 db    3
.rdata:000002D5                 db  83h ; â
.rdata:000002D6                 db  43h ; C
.rdata:000002D7                 db 0C3h ; +
.rdata:000002D8                 db  23h ; #
.rdata:000002D9                 db 0A3h ; ú
.rdata:000002DA                 db  63h ; c
.rdata:000002DB                 db 0E3h ; p
.rdata:000002DC                 db  13h
.rdata:000002DD                 db  93h ; ô
.rdata:000002DE                 db  53h ; S
.rdata:000002DF                 db 0D3h ; +
.rdata:000002E0                 db  33h ; 3
.rdata:000002E1                 db 0B3h ; ¦
.rdata:000002E2                 db  73h ; s
.rdata:000002E3                 db 0F3h ; =
.rdata:000002E4                 db  0Bh
.rdata:000002E5                 db  8Bh ; ï
.rdata:000002E6                 db  4Bh ; K
.rdata:000002E7                 db 0CBh ; -
.rdata:000002E8                 db  2Bh ; +
.rdata:000002E9                 db 0ABh ; ½
.rdata:000002EA                 db  6Bh ; k
.rdata:000002EB                 db 0EBh ; d
.rdata:000002EC                 db  1Bh
.rdata:000002ED                 db  9Bh ; ¢
.rdata:000002EE                 db  5Bh ; [
.rdata:000002EF                 db 0DBh ; ¦
.rdata:000002F0                 db  3Bh ; ;
.rdata:000002F1                 db 0BBh ; +
.rdata:000002F2                 db  7Bh ; {
.rdata:000002F3                 db 0FBh ; v
.rdata:000002F4                 db    7
.rdata:000002F5                 db  87h ; ç
.rdata:000002F6                 db  47h ; G
.rdata:000002F7                 db 0C7h ; ¦
.rdata:000002F8                 db  27h ; '
.rdata:000002F9                 db 0A7h ; º
.rdata:000002FA                 db  67h ; g
.rdata:000002FB                 db 0E7h ; t
.rdata:000002FC                 db  17h
.rdata:000002FD                 db  97h ; ù
.rdata:000002FE                 db  57h ; W
.rdata:000002FF                 db 0D7h ; +
.rdata:00000300                 db  37h ; 7
.rdata:00000301                 db 0B7h ; +
.rdata:00000302                 db  77h ; w
.rdata:00000303                 db 0F7h ; ˜
.rdata:00000304                 db  0Fh
.rdata:00000305                 db  8Fh ; Å
.rdata:00000306                 db  4Fh ; O
.rdata:00000307                 db 0CFh ; -
.rdata:00000308                 db  2Fh ; /
.rdata:00000309                 db 0AFh ; »
.rdata:0000030A                 db  6Fh ; o
.rdata:0000030B                 db 0EFh ; n
.rdata:0000030C                 db  1Fh
.rdata:0000030D                 db  9Fh ; ƒ
.rdata:0000030E                 db  5Fh ; _
.rdata:0000030F                 db 0DFh ; ¯
.rdata:00000310                 db  3Fh ; ?
.rdata:00000311                 db 0BFh ; +
.rdata:00000312                 db  7Fh ; 
.rdata:00000313                 db 0FFh
.rdata:00000314 _lencodes       dd offset $SG7318+21h   ; DATA XREF: _zlib_match+119o
.rdata:00000314                                         ; _zlib_decompress_block+755o
.rdata:00000314                                         ; "戀椀琀猀 㰀㴀 ㌀㈀"
.rdata:00000318 dword_318       dd 3                    ; DATA XREF: _zlib_match+EAr
.rdata:0000031C dword_31C       dd 3                    ; DATA XREF: _zlib_match+103r
.rdata:00000320                 dd offset $SG7318+22h   ; "bits <= 32"
.rdata:00000324                 db    4
.rdata:00000325                 db    0
.rdata:00000326                 db    0
.rdata:00000327                 db    0
.rdata:00000328                 db    4
.rdata:00000329                 db    0
.rdata:0000032A                 db    0
.rdata:0000032B                 db    0
.rdata:0000032C                 db    3
.rdata:0000032D                 db    1
.rdata:0000032E                 db    0
.rdata:0000032F                 db    0
.rdata:00000330                 db    5
.rdata:00000331                 db    0
.rdata:00000332                 db    0
.rdata:00000333                 db    0
.rdata:00000334                 db    5
.rdata:00000335                 db    0
.rdata:00000336                 db    0
.rdata:00000337                 db    0
.rdata:00000338                 db    4
.rdata:00000339                 db    1
.rdata:0000033A                 db    0
.rdata:0000033B                 db    0
.rdata:0000033C                 db    6
.rdata:0000033D                 db    0
.rdata:0000033E                 db    0
.rdata:0000033F                 db    0
.rdata:00000340                 db    6
.rdata:00000341                 db    0
.rdata:00000342                 db    0
.rdata:00000343                 db    0
.rdata:00000344                 db    5
.rdata:00000345                 db    1
.rdata:00000346                 db    0
.rdata:00000347                 db    0
.rdata:00000348                 db    7
.rdata:00000349                 db    0
.rdata:0000034A                 db    0
.rdata:0000034B                 db    0
.rdata:0000034C                 db    7
.rdata:0000034D                 db    0
.rdata:0000034E                 db    0
.rdata:0000034F                 db    0
.rdata:00000350                 db    6
.rdata:00000351                 db    1
.rdata:00000352                 db    0
.rdata:00000353                 db    0
.rdata:00000354                 db    8
.rdata:00000355                 db    0
.rdata:00000356                 db    0
.rdata:00000357                 db    0
.rdata:00000358                 db    8
.rdata:00000359                 db    0
.rdata:0000035A                 db    0
.rdata:0000035B                 db    0
.rdata:0000035C                 db    7
.rdata:0000035D                 db    1
.rdata:0000035E                 db    0
.rdata:0000035F                 db    0
.rdata:00000360                 db    9
.rdata:00000361                 db    0
.rdata:00000362                 db    0
.rdata:00000363                 db    0
.rdata:00000364                 db    9
.rdata:00000365                 db    0
.rdata:00000366                 db    0
.rdata:00000367                 db    0
.rdata:00000368                 db    8
.rdata:00000369                 db    1
.rdata:0000036A                 db    0
.rdata:0000036B                 db    0
.rdata:0000036C                 db  0Ah
.rdata:0000036D                 db    0
.rdata:0000036E                 db    0
.rdata:0000036F                 db    0
.rdata:00000370                 db  0Ah
.rdata:00000371                 db    0
.rdata:00000372                 db    0
.rdata:00000373                 db    0
.rdata:00000374                 db    9
.rdata:00000375                 db    1
.rdata:00000376                 db    1
.rdata:00000377                 db    0
.rdata:00000378                 db  0Bh
.rdata:00000379                 db    0
.rdata:0000037A                 db    0
.rdata:0000037B                 db    0
.rdata:0000037C                 db  0Ch
.rdata:0000037D                 db    0
.rdata:0000037E                 db    0
.rdata:0000037F                 db    0
.rdata:00000380                 db  0Ah
.rdata:00000381                 db    1
.rdata:00000382                 db    1
.rdata:00000383                 db    0
.rdata:00000384                 db  0Dh
.rdata:00000385                 db    0
.rdata:00000386                 db    0
.rdata:00000387                 db    0
.rdata:00000388                 db  0Eh
.rdata:00000389                 db    0
.rdata:0000038A                 db    0
.rdata:0000038B                 db    0
.rdata:0000038C                 db  0Bh
.rdata:0000038D                 db    1
.rdata:0000038E                 db    1
.rdata:0000038F                 db    0
.rdata:00000390                 db  0Fh
.rdata:00000391                 db    0
.rdata:00000392                 db    0
.rdata:00000393                 db    0
.rdata:00000394                 db  10h
.rdata:00000395                 db    0
.rdata:00000396                 db    0
.rdata:00000397                 db    0
.rdata:00000398                 db  0Ch
.rdata:00000399                 db    1
.rdata:0000039A                 db    1
.rdata:0000039B                 db    0
.rdata:0000039C                 db  11h
.rdata:0000039D                 db    0
.rdata:0000039E                 db    0
.rdata:0000039F                 db    0
.rdata:000003A0                 db  12h
.rdata:000003A1                 db    0
.rdata:000003A2                 db    0
.rdata:000003A3                 db    0
.rdata:000003A4                 db  0Dh
.rdata:000003A5                 db    1
.rdata:000003A6                 db    2
.rdata:000003A7                 db    0
.rdata:000003A8                 db  13h
.rdata:000003A9                 db    0
.rdata:000003AA                 db    0
.rdata:000003AB                 db    0
.rdata:000003AC                 db  16h
.rdata:000003AD                 db    0
.rdata:000003AE                 db    0
.rdata:000003AF                 db    0
.rdata:000003B0                 db  0Eh
.rdata:000003B1                 db    1
.rdata:000003B2                 db    2
.rdata:000003B3                 db    0
.rdata:000003B4                 db  17h
.rdata:000003B5                 db    0
.rdata:000003B6                 db    0
.rdata:000003B7                 db    0
.rdata:000003B8                 db  1Ah
.rdata:000003B9                 db    0
.rdata:000003BA                 db    0
.rdata:000003BB                 db    0
.rdata:000003BC                 db  0Fh
.rdata:000003BD                 db    1
.rdata:000003BE                 db    2
.rdata:000003BF                 db    0
.rdata:000003C0                 db  1Bh
.rdata:000003C1                 db    0
.rdata:000003C2                 db    0
.rdata:000003C3                 db    0
.rdata:000003C4                 db  1Eh
.rdata:000003C5                 db    0
.rdata:000003C6                 db    0
.rdata:000003C7                 db    0
.rdata:000003C8                 db  10h
.rdata:000003C9                 db    1
.rdata:000003CA                 db    2
.rdata:000003CB                 db    0
.rdata:000003CC                 db  1Fh
.rdata:000003CD                 db    0
.rdata:000003CE                 db    0
.rdata:000003CF                 db    0
.rdata:000003D0                 db  22h ; "
.rdata:000003D1                 db    0
.rdata:000003D2                 db    0
.rdata:000003D3                 db    0
.rdata:000003D4                 db  11h
.rdata:000003D5                 db    1
.rdata:000003D6                 db    3
.rdata:000003D7                 db    0
.rdata:000003D8                 db  23h ; #
.rdata:000003D9                 db    0
.rdata:000003DA                 db    0
.rdata:000003DB                 db    0
.rdata:000003DC                 db  2Ah ; *
.rdata:000003DD                 db    0
.rdata:000003DE                 db    0
.rdata:000003DF                 db    0
.rdata:000003E0                 db  12h
.rdata:000003E1                 db    1
.rdata:000003E2                 db    3
.rdata:000003E3                 db    0
.rdata:000003E4                 db  2Bh ; +
.rdata:000003E5                 db    0
.rdata:000003E6                 db    0
.rdata:000003E7                 db    0
.rdata:000003E8                 db  32h ; 2
.rdata:000003E9                 db    0
.rdata:000003EA                 db    0
.rdata:000003EB                 db    0
.rdata:000003EC                 db  13h
.rdata:000003ED                 db    1
.rdata:000003EE                 db    3
.rdata:000003EF                 db    0
.rdata:000003F0                 db  33h ; 3
.rdata:000003F1                 db    0
.rdata:000003F2                 db    0
.rdata:000003F3                 db    0
.rdata:000003F4                 db  3Ah ; :
.rdata:000003F5                 db    0
.rdata:000003F6                 db    0
.rdata:000003F7                 db    0
.rdata:000003F8                 db  14h
.rdata:000003F9                 db    1
.rdata:000003FA                 db    3
.rdata:000003FB                 db    0
.rdata:000003FC                 db  3Bh ; ;
.rdata:000003FD                 db    0
.rdata:000003FE                 db    0
.rdata:000003FF                 db    0
.rdata:00000400                 db  42h ; B
.rdata:00000401                 db    0
.rdata:00000402                 db    0
.rdata:00000403                 db    0
.rdata:00000404                 db  15h
.rdata:00000405                 db    1
.rdata:00000406                 db    4
.rdata:00000407                 db    0
.rdata:00000408                 db  43h ; C
.rdata:00000409                 db    0
.rdata:0000040A                 db    0
.rdata:0000040B                 db    0
.rdata:0000040C                 db  52h ; R
.rdata:0000040D                 db    0
.rdata:0000040E                 db    0
.rdata:0000040F                 db    0
.rdata:00000410                 db  16h
.rdata:00000411                 db    1
.rdata:00000412                 db    4
.rdata:00000413                 db    0
.rdata:00000414                 db  53h ; S
.rdata:00000415                 db    0
.rdata:00000416                 db    0
.rdata:00000417                 db    0
.rdata:00000418                 db  62h ; b
.rdata:00000419                 db    0
.rdata:0000041A                 db    0
.rdata:0000041B                 db    0
.rdata:0000041C                 db  17h
.rdata:0000041D                 db    1
.rdata:0000041E                 db    4
.rdata:0000041F                 db    0
.rdata:00000420                 db  63h ; c
.rdata:00000421                 db    0
.rdata:00000422                 db    0
.rdata:00000423                 db    0
.rdata:00000424                 db  72h ; r
.rdata:00000425                 db    0
.rdata:00000426                 db    0
.rdata:00000427                 db    0
.rdata:00000428                 db  18h
.rdata:00000429                 db    1
.rdata:0000042A                 db    4
.rdata:0000042B                 db    0
.rdata:0000042C                 db  73h ; s
.rdata:0000042D                 db    0
.rdata:0000042E                 db    0
.rdata:0000042F                 db    0
.rdata:00000430                 db  82h ; é
.rdata:00000431                 db    0
.rdata:00000432                 db    0
.rdata:00000433                 db    0
.rdata:00000434                 db  19h
.rdata:00000435                 db    1
.rdata:00000436                 db    5
.rdata:00000437                 db    0
.rdata:00000438                 db  83h ; â
.rdata:00000439                 db    0
.rdata:0000043A                 db    0
.rdata:0000043B                 db    0
.rdata:0000043C                 db 0A2h ; ó
.rdata:0000043D                 db    0
.rdata:0000043E                 db    0
.rdata:0000043F                 db    0
.rdata:00000440                 db  1Ah
.rdata:00000441                 db    1
.rdata:00000442                 db    5
.rdata:00000443                 db    0
.rdata:00000444                 db 0A3h ; ú
.rdata:00000445                 db    0
.rdata:00000446                 db    0
.rdata:00000447                 db    0
.rdata:00000448                 db 0C2h ; -
.rdata:00000449                 db    0
.rdata:0000044A                 db    0
.rdata:0000044B                 db    0
.rdata:0000044C                 db  1Bh
.rdata:0000044D                 db    1
.rdata:0000044E                 db    5
.rdata:0000044F                 db    0
.rdata:00000450                 db 0C3h ; +
.rdata:00000451                 db    0
.rdata:00000452                 db    0
.rdata:00000453                 db    0
.rdata:00000454                 db 0E2h ; G
.rdata:00000455                 db    0
.rdata:00000456                 db    0
.rdata:00000457                 db    0
.rdata:00000458                 db  1Ch
.rdata:00000459                 db    1
.rdata:0000045A                 db    5
.rdata:0000045B                 db    0
.rdata:0000045C                 db 0E3h ; p
.rdata:0000045D                 db    0
.rdata:0000045E                 db    0
.rdata:0000045F                 db    0
.rdata:00000460                 db    1
.rdata:00000461                 db    1
.rdata:00000462                 db    0
.rdata:00000463                 db    0
.rdata:00000464                 db  1Dh
.rdata:00000465                 db    1
.rdata:00000466                 db    0
.rdata:00000467                 db    0
.rdata:00000468                 db    2
.rdata:00000469                 db    1
.rdata:0000046A                 db    0
.rdata:0000046B                 db    0
.rdata:0000046C                 db    2
.rdata:0000046D                 db    1
.rdata:0000046E                 db    0
.rdata:0000046F                 db    0
.rdata:00000470 ; `zlib_decompress_block'::`2'::lenlenmap
.rdata:00000470 ?lenlenmap@?1??zlib_decompress_block@@9@9 db 10h
.rdata:00000470                                         ; DATA XREF: _zlib_decompress_block+3C6r
.rdata:00000471                 db  11h
.rdata:00000472                 db  12h
.rdata:00000473                 db    0
.rdata:00000474                 db    8
.rdata:00000475                 db    7
.rdata:00000476                 db    9
.rdata:00000477                 db    6
.rdata:00000478                 db  0Ah
.rdata:00000479                 db    5
.rdata:0000047A                 db  0Bh
.rdata:0000047B                 db    4
.rdata:0000047C                 db  0Ch
.rdata:0000047D                 db    3
.rdata:0000047E                 db  0Dh
.rdata:0000047F                 db    2
.rdata:00000480                 db  0Eh
.rdata:00000481                 db    1
.rdata:00000482                 db  0Fh
.rdata:00000483                 db    0
.rdata:00000484 _distcodes      db    0                 ; DATA XREF: _zlib_match+216o
.rdata:00000484                                         ; _zlib_decompress_block+847o
.rdata:00000485                 db    0
.rdata:00000486                 db    0
.rdata:00000487                 db    0
.rdata:00000488 dword_488       dd 1                    ; DATA XREF: _zlib_match+1E7r
.rdata:0000048C dword_48C       dd 1                    ; DATA XREF: _zlib_match+200r
.rdata:00000490                 db    1
.rdata:00000491                 db    0
.rdata:00000492                 db    0
.rdata:00000493                 db    0
.rdata:00000494                 db    2
.rdata:00000495                 db    0
.rdata:00000496                 db    0
.rdata:00000497                 db    0
.rdata:00000498                 db    2
.rdata:00000499                 db    0
.rdata:0000049A                 db    0
.rdata:0000049B                 db    0
.rdata:0000049C                 db    2
.rdata:0000049D                 db    0
.rdata:0000049E                 db    0
.rdata:0000049F                 db    0
.rdata:000004A0                 db    3
.rdata:000004A1                 db    0
.rdata:000004A2                 db    0
.rdata:000004A3                 db    0
.rdata:000004A4                 db    3
.rdata:000004A5                 db    0
.rdata:000004A6                 db    0
.rdata:000004A7                 db    0
.rdata:000004A8                 db    3
.rdata:000004A9                 db    0
.rdata:000004AA                 db    0
.rdata:000004AB                 db    0
.rdata:000004AC                 db    4
.rdata:000004AD                 db    0
.rdata:000004AE                 db    0
.rdata:000004AF                 db    0
.rdata:000004B0                 db    4
.rdata:000004B1                 db    0
.rdata:000004B2                 db    0
.rdata:000004B3                 db    0
.rdata:000004B4                 db    4
.rdata:000004B5                 db    0
.rdata:000004B6                 db    1
.rdata:000004B7                 db    0
.rdata:000004B8                 db    5
.rdata:000004B9                 db    0
.rdata:000004BA                 db    0
.rdata:000004BB                 db    0
.rdata:000004BC                 db    6
.rdata:000004BD                 db    0
.rdata:000004BE                 db    0
.rdata:000004BF                 db    0
.rdata:000004C0                 db    5
.rdata:000004C1                 db    0
.rdata:000004C2                 db    1
.rdata:000004C3                 db    0
.rdata:000004C4                 db    7
.rdata:000004C5                 db    0
.rdata:000004C6                 db    0
.rdata:000004C7                 db    0
.rdata:000004C8                 db    8
.rdata:000004C9                 db    0
.rdata:000004CA                 db    0
.rdata:000004CB                 db    0
.rdata:000004CC                 db    6
.rdata:000004CD                 db    0
.rdata:000004CE                 db    2
.rdata:000004CF                 db    0
.rdata:000004D0                 db    9
.rdata:000004D1                 db    0
.rdata:000004D2                 db    0
.rdata:000004D3                 db    0
.rdata:000004D4                 db  0Ch
.rdata:000004D5                 db    0
.rdata:000004D6                 db    0
.rdata:000004D7                 db    0
.rdata:000004D8                 db    7
.rdata:000004D9                 db    0
.rdata:000004DA                 db    2
.rdata:000004DB                 db    0
.rdata:000004DC                 db  0Dh
.rdata:000004DD                 db    0
.rdata:000004DE                 db    0
.rdata:000004DF                 db    0
.rdata:000004E0                 db  10h
.rdata:000004E1                 db    0
.rdata:000004E2                 db    0
.rdata:000004E3                 db    0
.rdata:000004E4                 db    8
.rdata:000004E5                 db    0
.rdata:000004E6                 db    3
.rdata:000004E7                 db    0
.rdata:000004E8                 db  11h
.rdata:000004E9                 db    0
.rdata:000004EA                 db    0
.rdata:000004EB                 db    0
.rdata:000004EC                 db  18h
.rdata:000004ED                 db    0
.rdata:000004EE                 db    0
.rdata:000004EF                 db    0
.rdata:000004F0                 db    9
.rdata:000004F1                 db    0
.rdata:000004F2                 db    3
.rdata:000004F3                 db    0
.rdata:000004F4                 db  19h
.rdata:000004F5                 db    0
.rdata:000004F6                 db    0
.rdata:000004F7                 db    0
.rdata:000004F8                 db  20h
.rdata:000004F9                 db    0
.rdata:000004FA                 db    0
.rdata:000004FB                 db    0
.rdata:000004FC                 db  0Ah
.rdata:000004FD                 db    0
.rdata:000004FE                 db    4
.rdata:000004FF                 db    0
.rdata:00000500                 db  21h ; !
.rdata:00000501                 db    0
.rdata:00000502                 db    0
.rdata:00000503                 db    0
.rdata:00000504                 db  30h ; 0
.rdata:00000505                 db    0
.rdata:00000506                 db    0
.rdata:00000507                 db    0
.rdata:00000508                 db  0Bh
.rdata:00000509                 db    0
.rdata:0000050A                 db    4
.rdata:0000050B                 db    0
.rdata:0000050C                 db  31h ; 1
.rdata:0000050D                 db    0
.rdata:0000050E                 db    0
.rdata:0000050F                 db    0
.rdata:00000510                 db  40h ; @
.rdata:00000511                 db    0
.rdata:00000512                 db    0
.rdata:00000513                 db    0
.rdata:00000514                 db  0Ch
.rdata:00000515                 db    0
.rdata:00000516                 db    5
.rdata:00000517                 db    0
.rdata:00000518                 db  41h ; A
.rdata:00000519                 db    0
.rdata:0000051A                 db    0
.rdata:0000051B                 db    0
.rdata:0000051C                 db  60h ; `
.rdata:0000051D                 db    0
.rdata:0000051E                 db    0
.rdata:0000051F                 db    0
.rdata:00000520                 db  0Dh
.rdata:00000521                 db    0
.rdata:00000522                 db    5
.rdata:00000523                 db    0
.rdata:00000524                 db  61h ; a
.rdata:00000525                 db    0
.rdata:00000526                 db    0
.rdata:00000527                 db    0
.rdata:00000528                 db  80h ; Ç
.rdata:00000529                 db    0
.rdata:0000052A                 db    0
.rdata:0000052B                 db    0
.rdata:0000052C                 db  0Eh
.rdata:0000052D                 db    0
.rdata:0000052E                 db    6
.rdata:0000052F                 db    0
.rdata:00000530                 db  81h ; ü
.rdata:00000531                 db    0
.rdata:00000532                 db    0
.rdata:00000533                 db    0
.rdata:00000534                 db 0C0h ; +
.rdata:00000535                 db    0
.rdata:00000536                 db    0
.rdata:00000537                 db    0
.rdata:00000538                 db  0Fh
.rdata:00000539                 db    0
.rdata:0000053A                 db    6
.rdata:0000053B                 db    0
.rdata:0000053C                 db 0C1h ; -
.rdata:0000053D                 db    0
.rdata:0000053E                 db    0
.rdata:0000053F                 db    0
.rdata:00000540                 db    0
.rdata:00000541                 db    1
.rdata:00000542                 db    0
.rdata:00000543                 db    0
.rdata:00000544                 db  10h
.rdata:00000545                 db    0
.rdata:00000546                 db    7
.rdata:00000547                 db    0
.rdata:00000548                 db    1
.rdata:00000549                 db    1
.rdata:0000054A                 db    0
.rdata:0000054B                 db    0
.rdata:0000054C                 db  80h ; Ç
.rdata:0000054D                 db    1
.rdata:0000054E                 db    0
.rdata:0000054F                 db    0
.rdata:00000550                 db  11h
.rdata:00000551                 db    0
.rdata:00000552                 db    7
.rdata:00000553                 db    0
.rdata:00000554                 db  81h ; ü
.rdata:00000555                 db    1
.rdata:00000556                 db    0
.rdata:00000557                 db    0
.rdata:00000558                 db    0
.rdata:00000559                 db    2
.rdata:0000055A                 db    0
.rdata:0000055B                 db    0
.rdata:0000055C                 db  12h
.rdata:0000055D                 db    0
.rdata:0000055E                 db    8
.rdata:0000055F                 db    0
.rdata:00000560                 db    1
.rdata:00000561                 db    2
.rdata:00000562                 db    0
.rdata:00000563                 db    0
.rdata:00000564                 db    0
.rdata:00000565                 db    3
.rdata:00000566                 db    0
.rdata:00000567                 db    0
.rdata:00000568                 db  13h
.rdata:00000569                 db    0
.rdata:0000056A                 db    8
.rdata:0000056B                 db    0
.rdata:0000056C                 db    1
.rdata:0000056D                 db    3
.rdata:0000056E                 db    0
.rdata:0000056F                 db    0
.rdata:00000570                 db    0
.rdata:00000571                 db    4
.rdata:00000572                 db    0
.rdata:00000573                 db    0
.rdata:00000574                 db  14h
.rdata:00000575                 db    0
.rdata:00000576                 db    9
.rdata:00000577                 db    0
.rdata:00000578                 db    1
.rdata:00000579                 db    4
.rdata:0000057A                 db    0
.rdata:0000057B                 db    0
.rdata:0000057C                 db    0
.rdata:0000057D                 db    6
.rdata:0000057E                 db    0
.rdata:0000057F                 db    0
.rdata:00000580                 db  15h
.rdata:00000581                 db    0
.rdata:00000582                 db    9
.rdata:00000583                 db    0
.rdata:00000584                 db    1
.rdata:00000585                 db    6
.rdata:00000586                 db    0
.rdata:00000587                 db    0
.rdata:00000588                 db    0
.rdata:00000589                 db    8
.rdata:0000058A                 db    0
.rdata:0000058B                 db    0
.rdata:0000058C                 db  16h
.rdata:0000058D                 db    0
.rdata:0000058E                 db  0Ah
.rdata:0000058F                 db    0
.rdata:00000590                 db    1
.rdata:00000591                 db    8
.rdata:00000592                 db    0
.rdata:00000593                 db    0
.rdata:00000594                 db    0
.rdata:00000595                 db  0Ch
.rdata:00000596                 db    0
.rdata:00000597                 db    0
.rdata:00000598                 db  17h
.rdata:00000599                 db    0
.rdata:0000059A                 db  0Ah
.rdata:0000059B                 db    0
.rdata:0000059C                 db    1
.rdata:0000059D                 db  0Ch
.rdata:0000059E                 db    0
.rdata:0000059F                 db    0
.rdata:000005A0                 db    0
.rdata:000005A1                 db  10h
.rdata:000005A2                 db    0
.rdata:000005A3                 db    0
.rdata:000005A4                 db  18h
.rdata:000005A5                 db    0
.rdata:000005A6                 db  0Bh
.rdata:000005A7                 db    0
.rdata:000005A8                 db    1
.rdata:000005A9                 db  10h
.rdata:000005AA                 db    0
.rdata:000005AB                 db    0
.rdata:000005AC                 db    0
.rdata:000005AD                 db  18h
.rdata:000005AE                 db    0
.rdata:000005AF                 db    0
.rdata:000005B0                 db  19h
.rdata:000005B1                 db    0
.rdata:000005B2                 db  0Bh
.rdata:000005B3                 db    0
.rdata:000005B4                 db    1
.rdata:000005B5                 db  18h
.rdata:000005B6                 db    0
.rdata:000005B7                 db    0
.rdata:000005B8                 db    0
.rdata:000005B9                 db  20h
.rdata:000005BA                 db    0
.rdata:000005BB                 db    0
.rdata:000005BC                 db  1Ah
.rdata:000005BD                 db    0
.rdata:000005BE                 db  0Ch
.rdata:000005BF                 db    0
.rdata:000005C0                 db    1
.rdata:000005C1                 db  20h
.rdata:000005C2                 db    0
.rdata:000005C3                 db    0
.rdata:000005C4                 db    0
.rdata:000005C5                 db  30h ; 0
.rdata:000005C6                 db    0
.rdata:000005C7                 db    0
.rdata:000005C8                 db  1Bh
.rdata:000005C9                 db    0
.rdata:000005CA                 db  0Ch
.rdata:000005CB                 db    0
.rdata:000005CC                 db    1
.rdata:000005CD                 db  30h ; 0
.rdata:000005CE                 db    0
.rdata:000005CF                 db    0
.rdata:000005D0                 db    0
.rdata:000005D1                 db  40h ; @
.rdata:000005D2                 db    0
.rdata:000005D3                 db    0
.rdata:000005D4                 db  1Ch
.rdata:000005D5                 db    0
.rdata:000005D6                 db  0Dh
.rdata:000005D7                 db    0
.rdata:000005D8                 db    1
.rdata:000005D9                 db  40h ; @
.rdata:000005DA                 db    0
.rdata:000005DB                 db    0
.rdata:000005DC                 db    0
.rdata:000005DD                 db  60h ; `
.rdata:000005DE                 db    0
.rdata:000005DF                 db    0
.rdata:000005E0                 db  1Dh
.rdata:000005E1                 db    0
.rdata:000005E2                 db  0Dh
.rdata:000005E3                 db    0
.rdata:000005E4                 db    1
.rdata:000005E5                 db  60h ; `
.rdata:000005E6                 db    0
.rdata:000005E7                 db    0
.rdata:000005E8                 db    0
.rdata:000005E9                 db  80h ; Ç
.rdata:000005EA                 db    0
.rdata:000005EB                 db    0
.rdata:000005EC                 public _ssh_zlib
.rdata:000005EC _ssh_zlib       dd offset $SG7728       ; "zlib"
.rdata:000005F0                 dd offset $SG7729       ; "zlib@openssh.com"
.rdata:000005F4                 dd offset _zlib_compress_init
.rdata:000005F8                 dd offset _zlib_compress_cleanup
.rdata:000005FC                 dd offset _zlib_compress_block
.rdata:00000600                 dd offset _zlib_decompress_init
.rdata:00000604                 dd offset _zlib_decompress_cleanup
.rdata:00000608                 dd offset _zlib_decompress_block
.rdata:0000060C                 dd offset _zlib_disable_compression
.rdata:00000610                 dd offset $SG7730       ; "zlib (RFC1950)"
.rdata:00000610 _rdata          ends
.rdata:00000610
.text:00000614 ; ===========================================================================
.text:00000614
.text:00000614 ; Segment type: Pure code
.text:00000614 ; Segment permissions: Read/Execute
.text:00000614 _text           segment para public 'CODE' use32
.text:00000614                 assume cs:_text
.text:00000614                 ;org 614h
.text:00000614                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text:00000614
.text:00000614 ; =============== S U B R O U T I N E =======================================
.text:00000614
.text:00000614 ; Attributes: bp-based frame
.text:00000614
.text:00000614                 public _zlib_compress_init
.text:00000614 _zlib_compress_init proc near           ; DATA XREF: .rdata:000005F4o
.text:00000614
.text:00000614 var_8           = dword ptr -8
.text:00000614 var_4           = dword ptr -4
.text:00000614
.text:00000614                 push    ebp
.text:00000615                 mov     ebp, esp
.text:00000617                 sub     esp, 8
.text:0000061A                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00000621                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00000628                 push    10h
.text:0000062A                 push    1
.text:0000062C                 call    _safemalloc
.text:00000631                 add     esp, 8
.text:00000634                 mov     [ebp+var_8], eax
.text:00000637                 mov     eax, [ebp+var_8]
.text:0000063A                 push    eax
.text:0000063B                 call    _lz77_init
.text:00000640                 add     esp, 4
.text:00000643                 mov     ecx, [ebp+var_8]
.text:00000646                 mov     dword ptr [ecx+8], offset _zlib_literal
.text:0000064D                 mov     edx, [ebp+var_8]
.text:00000650                 mov     dword ptr [edx+0Ch], offset _zlib_match
.text:00000657                 push    1Ch
.text:00000659                 push    1
.text:0000065B                 call    _safemalloc
.text:00000660                 add     esp, 8
.text:00000663                 mov     [ebp+var_4], eax
.text:00000666                 mov     eax, [ebp+var_4]
.text:00000669                 mov     dword ptr [eax+10h], 0
.text:00000670                 mov     ecx, [ebp+var_4]
.text:00000673                 mov     dword ptr [ecx+0Ch], 0
.text:0000067A                 mov     edx, [ebp+var_4]
.text:0000067D                 mov     dword ptr [edx+14h], 1
.text:00000684                 mov     eax, [ebp+var_4]
.text:00000687                 mov     dword ptr [eax+18h], 0
.text:0000068E                 mov     ecx, [ebp+var_8]
.text:00000691                 mov     edx, [ebp+var_4]
.text:00000694                 mov     [ecx+4], edx
.text:00000697                 mov     eax, [ebp+var_8]
.text:0000069A                 add     esp, 8
.text:0000069D                 cmp     ebp, esp
.text:0000069F                 call    __RTC_CheckEsp
.text:000006A4                 mov     esp, ebp
.text:000006A6                 pop     ebp
.text:000006A7                 retn
.text:000006A7 _zlib_compress_init endp
.text:000006A7
.text:000006A7 ; ---------------------------------------------------------------------------
.text:000006A8                 db 0Ch dup(0CCh)
.text:000006B4
.text:000006B4 ; =============== S U B R O U T I N E =======================================
.text:000006B4
.text:000006B4 ; Attributes: bp-based frame
.text:000006B4
.text:000006B4 _lz77_init      proc near               ; CODE XREF: _zlib_compress_init+27p
.text:000006B4
.text:000006B4 var_8           = dword ptr -8
.text:000006B4 var_4           = dword ptr -4
.text:000006B4 arg_0           = dword ptr  8
.text:000006B4
.text:000006B4                 push    ebp
.text:000006B5                 mov     ebp, esp
.text:000006B7                 sub     esp, 8
.text:000006BA                 mov     [ebp+var_8], 0CCCCCCCCh
.text:000006C1                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000006C8                 push    38FFCh
.text:000006CD                 push    1
.text:000006CF                 call    _safemalloc
.text:000006D4                 add     esp, 8
.text:000006D7                 mov     [ebp+var_4], eax
.text:000006DA                 cmp     [ebp+var_4], 0
.text:000006DE                 jnz     short loc_6E7
.text:000006E0                 xor     eax, eax
.text:000006E2                 jmp     loc_78B
.text:000006E7 ; ---------------------------------------------------------------------------
.text:000006E7
.text:000006E7 loc_6E7:                                ; CODE XREF: _lz77_init+2Aj
.text:000006E7                 mov     eax, [ebp+arg_0]
.text:000006EA                 mov     ecx, [ebp+var_4]
.text:000006ED                 mov     [eax], ecx
.text:000006EF                 mov     [ebp+var_8], 0
.text:000006F6                 jmp     short loc_701
.text:000006F8 ; ---------------------------------------------------------------------------
.text:000006F8
.text:000006F8 loc_6F8:                                ; CODE XREF: _lz77_init+88j
.text:000006F8                 mov     edx, [ebp+var_8]
.text:000006FB                 add     edx, 1
.text:000006FE                 mov     [ebp+var_8], edx
.text:00000701
.text:00000701 loc_701:                                ; CODE XREF: _lz77_init+42j
.text:00000701                 cmp     [ebp+var_8], 8000h
.text:00000708                 jge     short loc_73E
.text:0000070A                 mov     eax, [ebp+var_8]
.text:0000070D                 imul    eax, 6
.text:00000710                 or      ecx, 0FFFFFFFFh
.text:00000713                 mov     edx, [ebp+var_4]
.text:00000716                 mov     [edx+eax+4], cx
.text:0000071B                 mov     eax, [ebp+var_8]
.text:0000071E                 imul    eax, 6
.text:00000721                 or      ecx, 0FFFFFFFFh
.text:00000724                 mov     edx, [ebp+var_4]
.text:00000727                 mov     [edx+eax+2], cx
.text:0000072C                 mov     eax, [ebp+var_8]
.text:0000072F                 imul    eax, 6
.text:00000732                 or      ecx, 0FFFFFFFFh
.text:00000735                 mov     edx, [ebp+var_4]
.text:00000738                 mov     [edx+eax], cx
.text:0000073C                 jmp     short loc_6F8
.text:0000073E ; ---------------------------------------------------------------------------
.text:0000073E
.text:0000073E loc_73E:                                ; CODE XREF: _lz77_init+54j
.text:0000073E                 mov     [ebp+var_8], 0
.text:00000745                 jmp     short loc_750
.text:00000747 ; ---------------------------------------------------------------------------
.text:00000747
.text:00000747 loc_747:                                ; CODE XREF: _lz77_init+B6j
.text:00000747                 mov     eax, [ebp+var_8]
.text:0000074A                 add     eax, 1
.text:0000074D                 mov     [ebp+var_8], eax
.text:00000750
.text:00000750 loc_750:                                ; CODE XREF: _lz77_init+91j
.text:00000750                 cmp     [ebp+var_8], 7F7h
.text:00000757                 jge     short loc_76C
.text:00000759                 or      ecx, 0FFFFFFFFh
.text:0000075C                 mov     edx, [ebp+var_8]
.text:0000075F                 mov     eax, [ebp+var_4]
.text:00000762                 mov     [eax+edx*2+38004h], cx
.text:0000076A                 jmp     short loc_747
.text:0000076C ; ---------------------------------------------------------------------------
.text:0000076C
.text:0000076C loc_76C:                                ; CODE XREF: _lz77_init+A3j
.text:0000076C                 mov     ecx, [ebp+var_4]
.text:0000076F                 mov     dword ptr [ecx+38000h], 0
.text:00000779                 mov     edx, [ebp+var_4]
.text:0000077C                 mov     dword ptr [edx+38FF8h], 0
.text:00000786                 mov     eax, 1
.text:0000078B
.text:0000078B loc_78B:                                ; CODE XREF: _lz77_init+2Ej
.text:0000078B                 add     esp, 8
.text:0000078E                 cmp     ebp, esp
.text:00000790                 call    __RTC_CheckEsp
.text:00000795                 mov     esp, ebp
.text:00000797                 pop     ebp
.text:00000798                 retn
.text:00000798 _lz77_init      endp
.text:00000798
.text:00000798 ; ---------------------------------------------------------------------------
.text:00000799                 db 0Bh dup(0CCh)
.text:000007A4
.text:000007A4 ; =============== S U B R O U T I N E =======================================
.text:000007A4
.text:000007A4 ; Attributes: bp-based frame
.text:000007A4
.text:000007A4 _zlib_literal   proc near               ; DATA XREF: _zlib_compress_init+32o
.text:000007A4
.text:000007A4 var_4           = dword ptr -4
.text:000007A4 arg_0           = dword ptr  8
.text:000007A4 arg_4           = byte ptr  0Ch
.text:000007A4
.text:000007A4                 push    ebp
.text:000007A5                 mov     ebp, esp
.text:000007A7                 push    ecx
.text:000007A8                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000007AF                 mov     eax, [ebp+arg_0]
.text:000007B2                 mov     ecx, [eax+4]
.text:000007B5                 mov     [ebp+var_4], ecx
.text:000007B8                 mov     edx, [ebp+var_4]
.text:000007BB                 cmp     dword ptr [edx+18h], 0
.text:000007BF                 jz      short loc_7D6
.text:000007C1                 push    8
.text:000007C3                 movzx   eax, [ebp+arg_4]
.text:000007C7                 push    eax
.text:000007C8                 mov     ecx, [ebp+var_4]
.text:000007CB                 push    ecx
.text:000007CC                 call    _outbits
.text:000007D1                 add     esp, 0Ch
.text:000007D4                 jmp     short loc_81C
.text:000007D6 ; ---------------------------------------------------------------------------
.text:000007D6
.text:000007D6 loc_7D6:                                ; CODE XREF: _zlib_literal+1Bj
.text:000007D6                 movzx   edx, [ebp+arg_4]
.text:000007DA                 cmp     edx, 8Fh ; 'Å'
.text:000007E0                 jg      short loc_7FE
.text:000007E2                 push    8
.text:000007E4                 movzx   eax, [ebp+arg_4]
.text:000007E8                 movzx   ecx, ds:byte_244[eax]
.text:000007EF                 push    ecx
.text:000007F0                 mov     edx, [ebp+var_4]
.text:000007F3                 push    edx
.text:000007F4                 call    _outbits
.text:000007F9                 add     esp, 0Ch
.text:000007FC                 jmp     short loc_81C
.text:000007FE ; ---------------------------------------------------------------------------
.text:000007FE
.text:000007FE loc_7FE:                                ; CODE XREF: _zlib_literal+3Cj
.text:000007FE                 push    9
.text:00000800                 movzx   eax, [ebp+arg_4]
.text:00000804                 movzx   ecx, ds:_mirrorbytes[eax]
.text:0000080B                 lea     edx, [ecx+ecx+1]
.text:0000080F                 push    edx
.text:00000810                 mov     eax, [ebp+var_4]
.text:00000813                 push    eax
.text:00000814                 call    _outbits
.text:00000819                 add     esp, 0Ch
.text:0000081C
.text:0000081C loc_81C:                                ; CODE XREF: _zlib_literal+30j
.text:0000081C                                         ; _zlib_literal+58j
.text:0000081C                 add     esp, 4
.text:0000081F                 cmp     ebp, esp
.text:00000821                 call    __RTC_CheckEsp
.text:00000826                 mov     esp, ebp
.text:00000828                 pop     ebp
.text:00000829                 retn
.text:00000829 _zlib_literal   endp
.text:00000829
.text:00000829 ; ---------------------------------------------------------------------------
.text:0000082A                 db 0Ah dup(0CCh)
.text:00000834
.text:00000834 ; =============== S U B R O U T I N E =======================================
.text:00000834
.text:00000834 ; Attributes: bp-based frame
.text:00000834
.text:00000834 _outbits        proc near               ; CODE XREF: _zlib_literal+28p
.text:00000834                                         ; _zlib_literal+50p ...
.text:00000834
.text:00000834 arg_0           = dword ptr  8
.text:00000834 arg_4           = dword ptr  0Ch
.text:00000834 arg_8           = dword ptr  10h
.text:00000834
.text:00000834                 push    ebp
.text:00000835                 mov     ebp, esp
.text:00000837                 mov     eax, [ebp+arg_0]
.text:0000083A                 mov     ecx, [eax+10h]
.text:0000083D                 add     ecx, [ebp+arg_8]
.text:00000840                 cmp     ecx, 20h ; ' '
.text:00000843                 jle     short loc_85C
.text:00000845                 push    17Bh            ; Line
.text:0000084A                 push    offset $SG7317  ; "..\\..\\..\\sshzlib.c"
.text:0000084F                 push    offset $SG7318  ; "out->noutbits + nbits <= 32"
.text:00000854                 call    __wassert
.text:00000859 ; ---------------------------------------------------------------------------
.text:00000859                 add     esp, 0Ch
.text:0000085C
.text:0000085C loc_85C:                                ; CODE XREF: _outbits+Fj
.text:0000085C                 mov     eax, [ebp+arg_0]
.text:0000085F                 mov     edx, [ebp+arg_4]
.text:00000862                 mov     ecx, [eax+10h]
.text:00000865                 shl     edx, cl
.text:00000867                 mov     eax, [ebp+arg_0]
.text:0000086A                 or      edx, [eax+0Ch]
.text:0000086D                 mov     ecx, [ebp+arg_0]
.text:00000870                 mov     [ecx+0Ch], edx
.text:00000873                 mov     edx, [ebp+arg_0]
.text:00000876                 mov     eax, [edx+10h]
.text:00000879                 add     eax, [ebp+arg_8]
.text:0000087C                 mov     ecx, [ebp+arg_0]
.text:0000087F                 mov     [ecx+10h], eax
.text:00000882
.text:00000882 loc_882:                                ; CODE XREF: _outbits+DAj
.text:00000882                 mov     edx, [ebp+arg_0]
.text:00000885                 cmp     dword ptr [edx+10h], 8
.text:00000889                 jl      loc_913
.text:0000088F                 mov     eax, [ebp+arg_0]
.text:00000892                 mov     ecx, [ebp+arg_0]
.text:00000895                 mov     edx, [eax+4]
.text:00000898                 cmp     edx, [ecx+8]
.text:0000089B                 jl      short loc_8C8
.text:0000089D                 mov     eax, [ebp+arg_0]
.text:000008A0                 mov     ecx, [eax+4]
.text:000008A3                 add     ecx, 40h ; '@'
.text:000008A6                 mov     edx, [ebp+arg_0]
.text:000008A9                 mov     [edx+8], ecx
.text:000008AC                 push    1
.text:000008AE                 mov     eax, [ebp+arg_0]
.text:000008B1                 mov     ecx, [eax+8]
.text:000008B4                 push    ecx
.text:000008B5                 mov     edx, [ebp+arg_0]
.text:000008B8                 mov     eax, [edx]
.text:000008BA                 push    eax
.text:000008BB                 call    _saferealloc
.text:000008C0                 add     esp, 0Ch
.text:000008C3                 mov     ecx, [ebp+arg_0]
.text:000008C6                 mov     [ecx], eax
.text:000008C8
.text:000008C8 loc_8C8:                                ; CODE XREF: _outbits+67j
.text:000008C8                 mov     edx, [ebp+arg_0]
.text:000008CB                 mov     eax, [edx+0Ch]
.text:000008CE                 and     eax, 0FFh
.text:000008D3                 mov     ecx, [ebp+arg_0]
.text:000008D6                 mov     edx, [ecx]
.text:000008D8                 mov     ecx, [ebp+arg_0]
.text:000008DB                 mov     ecx, [ecx+4]
.text:000008DE                 mov     [edx+ecx], al
.text:000008E1                 mov     edx, [ebp+arg_0]
.text:000008E4                 mov     eax, [edx+4]
.text:000008E7                 add     eax, 1
.text:000008EA                 mov     ecx, [ebp+arg_0]
.text:000008ED                 mov     [ecx+4], eax
.text:000008F0                 mov     edx, [ebp+arg_0]
.text:000008F3                 mov     eax, [edx+0Ch]
.text:000008F6                 shr     eax, 8
.text:000008F9                 mov     ecx, [ebp+arg_0]
.text:000008FC                 mov     [ecx+0Ch], eax
.text:000008FF                 mov     edx, [ebp+arg_0]
.text:00000902                 mov     eax, [edx+10h]
.text:00000905                 sub     eax, 8
.text:00000908                 mov     ecx, [ebp+arg_0]
.text:0000090B                 mov     [ecx+10h], eax
.text:0000090E                 jmp     loc_882
.text:00000913 ; ---------------------------------------------------------------------------
.text:00000913
.text:00000913 loc_913:                                ; CODE XREF: _outbits+55j
.text:00000913                 cmp     ebp, esp
.text:00000915                 call    __RTC_CheckEsp
.text:0000091A                 pop     ebp
.text:0000091B                 retn
.text:0000091B _outbits        endp
.text:0000091B
.text:0000091B ; ---------------------------------------------------------------------------
.text:0000091C                 db 8 dup(0CCh)
.text:00000924
.text:00000924 ; =============== S U B R O U T I N E =======================================
.text:00000924
.text:00000924 ; Attributes: bp-based frame
.text:00000924
.text:00000924 _zlib_match     proc near               ; DATA XREF: _zlib_compress_init+3Co
.text:00000924
.text:00000924 var_24          = dword ptr -24h
.text:00000924 var_20          = dword ptr -20h
.text:00000924 var_1C          = dword ptr -1Ch
.text:00000924 var_18          = dword ptr -18h
.text:00000924 var_14          = dword ptr -14h
.text:00000924 var_10          = dword ptr -10h
.text:00000924 var_C           = dword ptr -0Ch
.text:00000924 var_8           = dword ptr -8
.text:00000924 var_4           = dword ptr -4
.text:00000924 arg_0           = dword ptr  8
.text:00000924 arg_4           = dword ptr  0Ch
.text:00000924 arg_8           = dword ptr  10h
.text:00000924
.text:00000924                 push    ebp
.text:00000925                 mov     ebp, esp
.text:00000927                 sub     esp, 24h
.text:0000092A                 mov     eax, 0CCCCCCCCh
.text:0000092F                 mov     [ebp+var_24], eax
.text:00000932                 mov     [ebp+var_20], eax
.text:00000935                 mov     [ebp+var_1C], eax
.text:00000938                 mov     [ebp+var_18], eax
.text:0000093B                 mov     [ebp+var_14], eax
.text:0000093E                 mov     [ebp+var_10], eax
.text:00000941                 mov     [ebp+var_C], eax
.text:00000944                 mov     [ebp+var_8], eax
.text:00000947                 mov     [ebp+var_4], eax
.text:0000094A                 mov     eax, [ebp+arg_0]
.text:0000094D                 mov     ecx, [eax+4]
.text:00000950                 mov     [ebp+var_18], ecx
.text:00000953                 mov     edx, [ebp+var_18]
.text:00000956                 cmp     dword ptr [edx+18h], 0
.text:0000095A                 jz      short loc_973
.text:0000095C                 push    20Dh            ; Line
.text:00000961                 push    offset $SG7363  ; "..\\..\\..\\sshzlib.c"
.text:00000966                 push    offset $SG7364  ; "!out->comp_disabled"
.text:0000096B                 call    __wassert
.text:00000970 ; ---------------------------------------------------------------------------
.text:00000970                 add     esp, 0Ch
.text:00000973
.text:00000973 loc_973:                                ; CODE XREF: _zlib_match+36j
.text:00000973                                         ; _zlib_match:loc_B8Cj
.text:00000973                 cmp     [ebp+arg_8], 0
.text:00000977                 jle     loc_B91
.text:0000097D                 cmp     [ebp+arg_8], 104h
.text:00000984                 jle     short loc_98F
.text:00000986                 mov     [ebp+var_20], 102h
.text:0000098D                 jmp     short loc_9AF
.text:0000098F ; ---------------------------------------------------------------------------
.text:0000098F
.text:0000098F loc_98F:                                ; CODE XREF: _zlib_match+60j
.text:0000098F                 cmp     [ebp+arg_8], 102h
.text:00000996                 jg      short loc_9A0
.text:00000998                 mov     ecx, [ebp+arg_8]
.text:0000099B                 mov     [ebp+var_24], ecx
.text:0000099E                 jmp     short loc_9A9
.text:000009A0 ; ---------------------------------------------------------------------------
.text:000009A0
.text:000009A0 loc_9A0:                                ; CODE XREF: _zlib_match+72j
.text:000009A0                 mov     edx, [ebp+arg_8]
.text:000009A3                 sub     edx, 3
.text:000009A6                 mov     [ebp+var_24], edx
.text:000009A9
.text:000009A9 loc_9A9:                                ; CODE XREF: _zlib_match+7Aj
.text:000009A9                 mov     eax, [ebp+var_24]
.text:000009AC                 mov     [ebp+var_20], eax
.text:000009AF
.text:000009AF loc_9AF:                                ; CODE XREF: _zlib_match+69j
.text:000009AF                 mov     ecx, [ebp+var_20]
.text:000009B2                 mov     [ebp+var_1C], ecx
.text:000009B5                 mov     edx, [ebp+arg_8]
.text:000009B8                 sub     edx, [ebp+var_1C]
.text:000009BB                 mov     [ebp+arg_8], edx
.text:000009BE                 mov     [ebp+var_C], 0FFFFFFFFh
.text:000009C5                 mov     [ebp+var_10], 1Dh
.text:000009CC
.text:000009CC loc_9CC:                                ; CODE XREF: _zlib_match:loc_A47j
.text:000009CC                 mov     eax, 1
.text:000009D1                 test    eax, eax
.text:000009D3                 jz      short loc_A49
.text:000009D5                 mov     ecx, [ebp+var_10]
.text:000009D8                 sub     ecx, [ebp+var_C]
.text:000009DB                 cmp     ecx, 2
.text:000009DE                 jge     short loc_9F7
.text:000009E0                 push    226h            ; Line
.text:000009E5                 push    offset $SG7373  ; "..\\..\\..\\sshzlib.c"
.text:000009EA                 push    offset $SG7374  ; "j - i >= 2"
.text:000009EF                 call    __wassert
.text:000009F4 ; ---------------------------------------------------------------------------
.text:000009F4                 add     esp, 0Ch
.text:000009F7
.text:000009F7 loc_9F7:                                ; CODE XREF: _zlib_match+BAj
.text:000009F7                 mov     eax, [ebp+var_10]
.text:000009FA                 add     eax, [ebp+var_C]
.text:000009FD                 cdq
.text:000009FE                 sub     eax, edx
.text:00000A00                 sar     eax, 1
.text:00000A02                 mov     [ebp+var_14], eax
.text:00000A05                 mov     eax, [ebp+var_14]
.text:00000A08                 imul    eax, 0Ch
.text:00000A0B                 mov     ecx, [ebp+var_1C]
.text:00000A0E                 cmp     ecx, ds:dword_318[eax]
.text:00000A14                 jge     short loc_A1E
.text:00000A16                 mov     edx, [ebp+var_14]
.text:00000A19                 mov     [ebp+var_10], edx
.text:00000A1C                 jmp     short loc_A47
.text:00000A1E ; ---------------------------------------------------------------------------
.text:00000A1E
.text:00000A1E loc_A1E:                                ; CODE XREF: _zlib_match+F0j
.text:00000A1E                 mov     eax, [ebp+var_14]
.text:00000A21                 imul    eax, 0Ch
.text:00000A24                 mov     ecx, [ebp+var_1C]
.text:00000A27                 cmp     ecx, ds:dword_31C[eax]
.text:00000A2D                 jle     short loc_A37
.text:00000A2F                 mov     edx, [ebp+var_14]
.text:00000A32                 mov     [ebp+var_C], edx
.text:00000A35                 jmp     short loc_A47
.text:00000A37 ; ---------------------------------------------------------------------------
.text:00000A37
.text:00000A37 loc_A37:                                ; CODE XREF: _zlib_match+109j
.text:00000A37                 mov     eax, [ebp+var_14]
.text:00000A3A                 imul    eax, 0Ch
.text:00000A3D                 add     eax, offset _lencodes
.text:00000A42                 mov     [ebp+var_8], eax
.text:00000A45                 jmp     short loc_A49
.text:00000A47 ; ---------------------------------------------------------------------------
.text:00000A47
.text:00000A47 loc_A47:                                ; CODE XREF: _zlib_match+F8j
.text:00000A47                                         ; _zlib_match+111j
.text:00000A47                 jmp     short loc_9CC
.text:00000A49 ; ---------------------------------------------------------------------------
.text:00000A49
.text:00000A49 loc_A49:                                ; CODE XREF: _zlib_match+AFj
.text:00000A49                                         ; _zlib_match+121j
.text:00000A49                 mov     ecx, [ebp+var_8]
.text:00000A4C                 movsx   edx, word ptr [ecx]
.text:00000A4F                 cmp     edx, 117h
.text:00000A55                 jg      short loc_A76
.text:00000A57                 push    7
.text:00000A59                 mov     eax, [ebp+var_8]
.text:00000A5C                 movsx   ecx, word ptr [eax]
.text:00000A5F                 movzx   edx, (_mirrorbytes-200h)[ecx*2]
.text:00000A67                 push    edx
.text:00000A68                 mov     eax, [ebp+var_18]
.text:00000A6B                 push    eax
.text:00000A6C                 call    _outbits
.text:00000A71                 add     esp, 0Ch
.text:00000A74                 jmp     short loc_A92
.text:00000A76 ; ---------------------------------------------------------------------------
.text:00000A76
.text:00000A76 loc_A76:                                ; CODE XREF: _zlib_match+131j
.text:00000A76                 push    8
.text:00000A78                 mov     ecx, [ebp+var_8]
.text:00000A7B                 movsx   edx, word ptr [ecx]
.text:00000A7E                 movzx   eax, (_mirrorbytes-58h)[edx]
.text:00000A85                 push    eax
.text:00000A86                 mov     ecx, [ebp+var_18]
.text:00000A89                 push    ecx
.text:00000A8A                 call    _outbits
.text:00000A8F                 add     esp, 0Ch
.text:00000A92
.text:00000A92 loc_A92:                                ; CODE XREF: _zlib_match+150j
.text:00000A92                 mov     edx, [ebp+var_8]
.text:00000A95                 movsx   eax, word ptr [edx+2]
.text:00000A99                 test    eax, eax
.text:00000A9B                 jz      short loc_ABB
.text:00000A9D                 mov     ecx, [ebp+var_8]
.text:00000AA0                 movsx   edx, word ptr [ecx+2]
.text:00000AA4                 push    edx
.text:00000AA5                 mov     eax, [ebp+var_8]
.text:00000AA8                 mov     ecx, [ebp+var_1C]
.text:00000AAB                 sub     ecx, [eax+4]
.text:00000AAE                 push    ecx
.text:00000AAF                 mov     edx, [ebp+var_18]
.text:00000AB2                 push    edx
.text:00000AB3                 call    _outbits
.text:00000AB8                 add     esp, 0Ch
.text:00000ABB
.text:00000ABB loc_ABB:                                ; CODE XREF: _zlib_match+177j
.text:00000ABB                 mov     [ebp+var_C], 0FFFFFFFFh
.text:00000AC2                 mov     [ebp+var_10], 1Eh
.text:00000AC9
.text:00000AC9 loc_AC9:                                ; CODE XREF: _zlib_match:loc_B44j
.text:00000AC9                 mov     eax, 1
.text:00000ACE                 test    eax, eax
.text:00000AD0                 jz      short loc_B46
.text:00000AD2                 mov     ecx, [ebp+var_10]
.text:00000AD5                 sub     ecx, [ebp+var_C]
.text:00000AD8                 cmp     ecx, 2
.text:00000ADB                 jge     short loc_AF4
.text:00000ADD                 push    24Ah            ; Line
.text:00000AE2                 push    offset $SG7386  ; "..\\..\\..\\sshzlib.c"
.text:00000AE7                 push    offset $SG7387  ; "j - i >= 2"
.text:00000AEC                 call    __wassert
.text:00000AF1 ; ---------------------------------------------------------------------------
.text:00000AF1                 add     esp, 0Ch
.text:00000AF4
.text:00000AF4 loc_AF4:                                ; CODE XREF: _zlib_match+1B7j
.text:00000AF4                 mov     eax, [ebp+var_10]
.text:00000AF7                 add     eax, [ebp+var_C]
.text:00000AFA                 cdq
.text:00000AFB                 sub     eax, edx
.text:00000AFD                 sar     eax, 1
.text:00000AFF                 mov     [ebp+var_14], eax
.text:00000B02                 mov     eax, [ebp+var_14]
.text:00000B05                 imul    eax, 0Ch
.text:00000B08                 mov     ecx, [ebp+arg_4]
.text:00000B0B                 cmp     ecx, ds:dword_488[eax]
.text:00000B11                 jge     short loc_B1B
.text:00000B13                 mov     edx, [ebp+var_14]
.text:00000B16                 mov     [ebp+var_10], edx
.text:00000B19                 jmp     short loc_B44
.text:00000B1B ; ---------------------------------------------------------------------------
.text:00000B1B
.text:00000B1B loc_B1B:                                ; CODE XREF: _zlib_match+1EDj
.text:00000B1B                 mov     eax, [ebp+var_14]
.text:00000B1E                 imul    eax, 0Ch
.text:00000B21                 mov     ecx, [ebp+arg_4]
.text:00000B24                 cmp     ecx, ds:dword_48C[eax]
.text:00000B2A                 jle     short loc_B34
.text:00000B2C                 mov     edx, [ebp+var_14]
.text:00000B2F                 mov     [ebp+var_C], edx
.text:00000B32                 jmp     short loc_B44
.text:00000B34 ; ---------------------------------------------------------------------------
.text:00000B34
.text:00000B34 loc_B34:                                ; CODE XREF: _zlib_match+206j
.text:00000B34                 mov     eax, [ebp+var_14]
.text:00000B37                 imul    eax, 0Ch
.text:00000B3A                 add     eax, offset _distcodes
.text:00000B3F                 mov     [ebp+var_4], eax
.text:00000B42                 jmp     short loc_B46
.text:00000B44 ; ---------------------------------------------------------------------------
.text:00000B44
.text:00000B44 loc_B44:                                ; CODE XREF: _zlib_match+1F5j
.text:00000B44                                         ; _zlib_match+20Ej
.text:00000B44                 jmp     short loc_AC9
.text:00000B46 ; ---------------------------------------------------------------------------
.text:00000B46
.text:00000B46 loc_B46:                                ; CODE XREF: _zlib_match+1ACj
.text:00000B46                                         ; _zlib_match+21Ej
.text:00000B46                 push    5
.text:00000B48                 mov     ecx, [ebp+var_4]
.text:00000B4B                 movsx   edx, word ptr [ecx]
.text:00000B4E                 movzx   eax, ds:_mirrorbytes[edx*8]
.text:00000B56                 push    eax
.text:00000B57                 mov     ecx, [ebp+var_18]
.text:00000B5A                 push    ecx
.text:00000B5B                 call    _outbits
.text:00000B60                 add     esp, 0Ch
.text:00000B63                 mov     edx, [ebp+var_4]
.text:00000B66                 movsx   eax, word ptr [edx+2]
.text:00000B6A                 test    eax, eax
.text:00000B6C                 jz      short loc_B8C
.text:00000B6E                 mov     ecx, [ebp+var_4]
.text:00000B71                 movsx   edx, word ptr [ecx+2]
.text:00000B75                 push    edx
.text:00000B76                 mov     eax, [ebp+var_4]
.text:00000B79                 mov     ecx, [ebp+arg_4]
.text:00000B7C                 sub     ecx, [eax+4]
.text:00000B7F                 push    ecx
.text:00000B80                 mov     edx, [ebp+var_18]
.text:00000B83                 push    edx
.text:00000B84                 call    _outbits
.text:00000B89                 add     esp, 0Ch
.text:00000B8C
.text:00000B8C loc_B8C:                                ; CODE XREF: _zlib_match+248j
.text:00000B8C                 jmp     loc_973
.text:00000B91 ; ---------------------------------------------------------------------------
.text:00000B91
.text:00000B91 loc_B91:                                ; CODE XREF: _zlib_match+53j
.text:00000B91                 add     esp, 24h
.text:00000B94                 cmp     ebp, esp
.text:00000B96                 call    __RTC_CheckEsp
.text:00000B9B                 mov     esp, ebp
.text:00000B9D                 pop     ebp
.text:00000B9E                 retn
.text:00000B9E _zlib_match     endp
.text:00000B9E
.text:00000B9E ; ---------------------------------------------------------------------------
.text:00000B9F                 db 5 dup(0CCh)
.text:00000BA4
.text:00000BA4 ; =============== S U B R O U T I N E =======================================
.text:00000BA4
.text:00000BA4 ; Attributes: bp-based frame
.text:00000BA4
.text:00000BA4                 public _zlib_compress_cleanup
.text:00000BA4 _zlib_compress_cleanup proc near        ; DATA XREF: .rdata:000005F8o
.text:00000BA4
.text:00000BA4 var_4           = dword ptr -4
.text:00000BA4 arg_0           = dword ptr  8
.text:00000BA4
.text:00000BA4                 push    ebp
.text:00000BA5                 mov     ebp, esp
.text:00000BA7                 push    ecx
.text:00000BA8                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00000BAF                 mov     eax, [ebp+arg_0]
.text:00000BB2                 mov     [ebp+var_4], eax
.text:00000BB5                 mov     ecx, [ebp+var_4]
.text:00000BB8                 mov     edx, [ecx+4]
.text:00000BBB                 push    edx
.text:00000BBC                 call    _safefree
.text:00000BC1                 add     esp, 4
.text:00000BC4                 mov     eax, [ebp+var_4]
.text:00000BC7                 mov     ecx, [eax]
.text:00000BC9                 push    ecx
.text:00000BCA                 call    _safefree
.text:00000BCF                 add     esp, 4
.text:00000BD2                 mov     edx, [ebp+var_4]
.text:00000BD5                 push    edx
.text:00000BD6                 call    _safefree
.text:00000BDB                 add     esp, 4
.text:00000BDE                 add     esp, 4
.text:00000BE1                 cmp     ebp, esp
.text:00000BE3                 call    __RTC_CheckEsp
.text:00000BE8                 mov     esp, ebp
.text:00000BEA                 pop     ebp
.text:00000BEB                 retn
.text:00000BEB _zlib_compress_cleanup endp
.text:00000BEB
.text:00000BEB ; ---------------------------------------------------------------------------
.text:00000BEC                 db 8 dup(0CCh)
.text:00000BF4
.text:00000BF4 ; =============== S U B R O U T I N E =======================================
.text:00000BF4
.text:00000BF4 ; Attributes: bp-based frame
.text:00000BF4
.text:00000BF4 _zlib_disable_compression proc near     ; DATA XREF: .rdata:0000060Co
.text:00000BF4
.text:00000BF4 var_C           = dword ptr -0Ch
.text:00000BF4 var_8           = dword ptr -8
.text:00000BF4 var_4           = dword ptr -4
.text:00000BF4 arg_0           = dword ptr  8
.text:00000BF4
.text:00000BF4                 push    ebp
.text:00000BF5                 mov     ebp, esp
.text:00000BF7                 sub     esp, 0Ch
.text:00000BFA                 mov     [ebp+var_C], 0CCCCCCCCh
.text:00000C01                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00000C08                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00000C0F                 mov     eax, [ebp+arg_0]
.text:00000C12                 mov     [ebp+var_4], eax
.text:00000C15                 mov     ecx, [ebp+var_4]
.text:00000C18                 mov     edx, [ecx+4]
.text:00000C1B                 mov     [ebp+var_8], edx
.text:00000C1E                 mov     eax, [ebp+var_8]
.text:00000C21                 mov     dword ptr [eax+18h], 1
.text:00000C28                 mov     [ebp+var_C], 0
.text:00000C2F                 mov     ecx, [ebp+var_8]
.text:00000C32                 cmp     dword ptr [ecx+14h], 0
.text:00000C36                 jz      short loc_C41
.text:00000C38                 mov     [ebp+var_C], 3
.text:00000C3F                 jmp     short loc_C59
.text:00000C41 ; ---------------------------------------------------------------------------
.text:00000C41
.text:00000C41 loc_C41:                                ; CODE XREF: _zlib_disable_compression+42j
.text:00000C41                 mov     edx, [ebp+var_8]
.text:00000C44                 mov     eax, [edx+10h]
.text:00000C47                 add     eax, 0Ah
.text:00000C4A                 cdq
.text:00000C4B                 and     edx, 7
.text:00000C4E                 add     eax, edx
.text:00000C50                 sar     eax, 3
.text:00000C53                 add     eax, [ebp+var_C]
.text:00000C56                 mov     [ebp+var_C], eax
.text:00000C59
.text:00000C59 loc_C59:                                ; CODE XREF: _zlib_disable_compression+4Bj
.text:00000C59                 mov     eax, [ebp+var_C]
.text:00000C5C                 add     eax, 4
.text:00000C5F                 mov     [ebp+var_C], eax
.text:00000C62                 mov     eax, [ebp+var_C]
.text:00000C65                 mov     esp, ebp
.text:00000C67                 pop     ebp
.text:00000C68                 retn
.text:00000C68 _zlib_disable_compression endp
.text:00000C68
.text:00000C68 ; ---------------------------------------------------------------------------
.text:00000C69                 db 0Bh dup(0CCh)
.text:00000C74
.text:00000C74 ; =============== S U B R O U T I N E =======================================
.text:00000C74
.text:00000C74 ; Attributes: bp-based frame
.text:00000C74
.text:00000C74                 public _zlib_compress_block
.text:00000C74 _zlib_compress_block proc near          ; DATA XREF: .rdata:000005FCo
.text:00000C74
.text:00000C74 var_14          = dword ptr -14h
.text:00000C74 var_10          = dword ptr -10h
.text:00000C74 var_C           = dword ptr -0Ch
.text:00000C74 var_8           = dword ptr -8
.text:00000C74 var_4           = dword ptr -4
.text:00000C74 arg_0           = dword ptr  8
.text:00000C74 arg_4           = dword ptr  0Ch
.text:00000C74 arg_8           = dword ptr  10h
.text:00000C74 arg_C           = dword ptr  14h
.text:00000C74 arg_10          = dword ptr  18h
.text:00000C74
.text:00000C74                 push    ebp
.text:00000C75                 mov     ebp, esp
.text:00000C77                 sub     esp, 14h
.text:00000C7A                 mov     eax, 0CCCCCCCCh
.text:00000C7F                 mov     [ebp+var_14], eax
.text:00000C82                 mov     [ebp+var_10], eax
.text:00000C85                 mov     [ebp+var_C], eax
.text:00000C88                 mov     [ebp+var_8], eax
.text:00000C8B                 mov     [ebp+var_4], eax
.text:00000C8E                 mov     eax, [ebp+arg_0]
.text:00000C91                 mov     [ebp+var_4], eax
.text:00000C94                 mov     ecx, [ebp+var_4]
.text:00000C97                 mov     edx, [ecx+4]
.text:00000C9A                 mov     [ebp+var_8], edx
.text:00000C9D                 mov     eax, [ebp+var_8]
.text:00000CA0                 mov     dword ptr [eax], 0
.text:00000CA6                 mov     ecx, [ebp+var_8]
.text:00000CA9                 mov     dword ptr [ecx+8], 0
.text:00000CB0                 mov     edx, [ebp+var_8]
.text:00000CB3                 mov     dword ptr [edx+4], 0
.text:00000CBA                 mov     eax, [ebp+var_8]
.text:00000CBD                 cmp     dword ptr [eax+14h], 0
.text:00000CC1                 jz      short loc_CE9
.text:00000CC3                 push    10h
.text:00000CC5                 push    9C78h
.text:00000CCA                 mov     ecx, [ebp+var_8]
.text:00000CCD                 push    ecx
.text:00000CCE                 call    _outbits
.text:00000CD3                 add     esp, 0Ch
.text:00000CD6                 mov     edx, [ebp+var_8]
.text:00000CD9                 mov     dword ptr [edx+14h], 0
.text:00000CE0                 mov     [ebp+var_C], 0
.text:00000CE7                 jmp     short loc_CF0
.text:00000CE9 ; ---------------------------------------------------------------------------
.text:00000CE9
.text:00000CE9 loc_CE9:                                ; CODE XREF: _zlib_compress_block+4Dj
.text:00000CE9                 mov     [ebp+var_C], 1
.text:00000CF0
.text:00000CF0 loc_CF0:                                ; CODE XREF: _zlib_compress_block+73j
.text:00000CF0                 mov     eax, [ebp+var_8]
.text:00000CF3                 cmp     dword ptr [eax+18h], 0
.text:00000CF7                 jz      loc_DD7
.text:00000CFD                 cmp     [ebp+var_C], 0
.text:00000D01                 jz      short loc_D13
.text:00000D03                 push    7
.text:00000D05                 push    0
.text:00000D07                 mov     ecx, [ebp+var_8]
.text:00000D0A                 push    ecx
.text:00000D0B                 call    _outbits
.text:00000D10                 add     esp, 0Ch
.text:00000D13
.text:00000D13 loc_D13:                                ; CODE XREF: _zlib_compress_block+8Dj
.text:00000D13                                         ; _zlib_compress_block+14Cj
.text:00000D13                 cmp     [ebp+arg_8], 0
.text:00000D17                 jle     loc_DC5
.text:00000D1D                 cmp     [ebp+arg_8], 0FFFFh
.text:00000D24                 jge     short loc_D2E
.text:00000D26                 mov     edx, [ebp+arg_8]
.text:00000D29                 mov     [ebp+var_14], edx
.text:00000D2C                 jmp     short loc_D35
.text:00000D2E ; ---------------------------------------------------------------------------
.text:00000D2E
.text:00000D2E loc_D2E:                                ; CODE XREF: _zlib_compress_block+B0j
.text:00000D2E                 mov     [ebp+var_14], 0FFFFh
.text:00000D35
.text:00000D35 loc_D35:                                ; CODE XREF: _zlib_compress_block+B8j
.text:00000D35                 mov     eax, [ebp+var_14]
.text:00000D38                 mov     [ebp+var_10], eax
.text:00000D3B                 push    3
.text:00000D3D                 push    0
.text:00000D3F                 mov     ecx, [ebp+var_8]
.text:00000D42                 push    ecx
.text:00000D43                 call    _outbits
.text:00000D48                 add     esp, 0Ch
.text:00000D4B                 mov     edx, [ebp+var_8]
.text:00000D4E                 cmp     dword ptr [edx+10h], 0
.text:00000D52                 jz      short loc_D6E
.text:00000D54                 mov     eax, [ebp+var_8]
.text:00000D57                 mov     ecx, 8
.text:00000D5C                 sub     ecx, [eax+10h]
.text:00000D5F                 push    ecx
.text:00000D60                 push    0
.text:00000D62                 mov     edx, [ebp+var_8]
.text:00000D65                 push    edx
.text:00000D66                 call    _outbits
.text:00000D6B                 add     esp, 0Ch
.text:00000D6E
.text:00000D6E loc_D6E:                                ; CODE XREF: _zlib_compress_block+DEj
.text:00000D6E                 push    10h
.text:00000D70                 mov     eax, [ebp+var_10]
.text:00000D73                 push    eax
.text:00000D74                 mov     ecx, [ebp+var_8]
.text:00000D77                 push    ecx
.text:00000D78                 call    _outbits
.text:00000D7D                 add     esp, 0Ch
.text:00000D80                 push    10h
.text:00000D82                 mov     edx, [ebp+var_10]
.text:00000D85                 xor     edx, 0FFFFh
.text:00000D8B                 push    edx
.text:00000D8C                 mov     eax, [ebp+var_8]
.text:00000D8F                 push    eax
.text:00000D90                 call    _outbits
.text:00000D95                 add     esp, 0Ch
.text:00000D98                 push    0
.text:00000D9A                 mov     ecx, [ebp+var_10]
.text:00000D9D                 push    ecx
.text:00000D9E                 mov     edx, [ebp+arg_4]
.text:00000DA1                 push    edx
.text:00000DA2                 mov     eax, [ebp+var_4]
.text:00000DA5                 push    eax
.text:00000DA6                 call    _lz77_compress
.text:00000DAB                 add     esp, 10h
.text:00000DAE                 mov     ecx, [ebp+arg_8]
.text:00000DB1                 sub     ecx, [ebp+var_10]
.text:00000DB4                 mov     [ebp+arg_8], ecx
.text:00000DB7                 mov     edx, [ebp+arg_4]
.text:00000DBA                 add     edx, [ebp+var_10]
.text:00000DBD                 mov     [ebp+arg_4], edx
.text:00000DC0                 jmp     loc_D13
.text:00000DC5 ; ---------------------------------------------------------------------------
.text:00000DC5
.text:00000DC5 loc_DC5:                                ; CODE XREF: _zlib_compress_block+A3j
.text:00000DC5                 push    3
.text:00000DC7                 push    2
.text:00000DC9                 mov     eax, [ebp+var_8]
.text:00000DCC                 push    eax
.text:00000DCD                 call    _outbits
.text:00000DD2                 add     esp, 0Ch
.text:00000DD5                 jmp     short loc_E33
.text:00000DD7 ; ---------------------------------------------------------------------------
.text:00000DD7
.text:00000DD7 loc_DD7:                                ; CODE XREF: _zlib_compress_block+83j
.text:00000DD7                 cmp     [ebp+var_C], 0
.text:00000DDB                 jnz     short loc_DED
.text:00000DDD                 push    3
.text:00000DDF                 push    2
.text:00000DE1                 mov     ecx, [ebp+var_8]
.text:00000DE4                 push    ecx
.text:00000DE5                 call    _outbits
.text:00000DEA                 add     esp, 0Ch
.text:00000DED
.text:00000DED loc_DED:                                ; CODE XREF: _zlib_compress_block+167j
.text:00000DED                 push    1
.text:00000DEF                 mov     edx, [ebp+arg_8]
.text:00000DF2                 push    edx
.text:00000DF3                 mov     eax, [ebp+arg_4]
.text:00000DF6                 push    eax
.text:00000DF7                 mov     ecx, [ebp+var_4]
.text:00000DFA                 push    ecx
.text:00000DFB                 call    _lz77_compress
.text:00000E00                 add     esp, 10h
.text:00000E03                 push    7
.text:00000E05                 push    0
.text:00000E07                 mov     edx, [ebp+var_8]
.text:00000E0A                 push    edx
.text:00000E0B                 call    _outbits
.text:00000E10                 add     esp, 0Ch
.text:00000E13                 push    0Ah
.text:00000E15                 push    2
.text:00000E17                 mov     eax, [ebp+var_8]
.text:00000E1A                 push    eax
.text:00000E1B                 call    _outbits
.text:00000E20                 add     esp, 0Ch
.text:00000E23                 push    3
.text:00000E25                 push    2
.text:00000E27                 mov     ecx, [ebp+var_8]
.text:00000E2A                 push    ecx
.text:00000E2B                 call    _outbits
.text:00000E30                 add     esp, 0Ch
.text:00000E33
.text:00000E33 loc_E33:                                ; CODE XREF: _zlib_compress_block+161j
.text:00000E33                 mov     edx, [ebp+var_8]
.text:00000E36                 mov     dword ptr [edx+18h], 0
.text:00000E3D                 mov     eax, [ebp+arg_C]
.text:00000E40                 mov     ecx, [ebp+var_8]
.text:00000E43                 mov     edx, [ecx]
.text:00000E45                 mov     [eax], edx
.text:00000E47                 mov     eax, [ebp+arg_10]
.text:00000E4A                 mov     ecx, [ebp+var_8]
.text:00000E4D                 mov     edx, [ecx+4]
.text:00000E50                 mov     [eax], edx
.text:00000E52                 mov     eax, 1
.text:00000E57                 add     esp, 14h
.text:00000E5A                 cmp     ebp, esp
.text:00000E5C                 call    __RTC_CheckEsp
.text:00000E61                 mov     esp, ebp
.text:00000E63                 pop     ebp
.text:00000E64                 retn
.text:00000E64 _zlib_compress_block endp
.text:00000E64
.text:00000E64 ; ---------------------------------------------------------------------------
.text:00000E65                 db 0Fh dup(0CCh)
.text:00000E74
.text:00000E74 ; =============== S U B R O U T I N E =======================================
.text:00000E74
.text:00000E74 ; Attributes: bp-based frame
.text:00000E74
.text:00000E74 _lz77_compress  proc near               ; CODE XREF: _zlib_compress_block+132p
.text:00000E74                                         ; _zlib_compress_block+187p
.text:00000E74
.text:00000E74 var_168         = dword ptr -168h
.text:00000E74 var_164         = dword ptr -164h
.text:00000E74 var_160         = dword ptr -160h
.text:00000E74 var_15C         = dword ptr -15Ch
.text:00000E74 var_158         = dword ptr -158h
.text:00000E74 var_154         = dword ptr -154h
.text:00000E74 var_150         = dword ptr -150h
.text:00000E74 var_148         = byte ptr -148h
.text:00000E74 var_140         = dword ptr -140h
.text:00000E74 var_138         = dword ptr -138h
.text:00000E74 var_134         = dword ptr -134h
.text:00000E74 var_30          = dword ptr -30h
.text:00000E74 var_2C          = dword ptr -2Ch
.text:00000E74 var_24          = dword ptr -24h
.text:00000E74 var_20          = dword ptr -20h
.text:00000E74 var_1C          = dword ptr -1Ch
.text:00000E74 var_18          = dword ptr -18h
.text:00000E74 var_14          = dword ptr -14h
.text:00000E74 var_10          = dword ptr -10h
.text:00000E74 var_C           = dword ptr -0Ch
.text:00000E74 var_8           = dword ptr -8
.text:00000E74 var_4           = dword ptr -4
.text:00000E74 arg_0           = dword ptr  8
.text:00000E74 arg_4           = dword ptr  0Ch
.text:00000E74 arg_8           = dword ptr  10h
.text:00000E74 arg_C           = dword ptr  14h
.text:00000E74
.text:00000E74                 push    ebp
.text:00000E75                 mov     ebp, esp
.text:00000E77                 sub     esp, 168h
.text:00000E7D                 push    esi
.text:00000E7E                 push    edi
.text:00000E7F                 lea     edi, [ebp+var_168]
.text:00000E85                 mov     ecx, 5Ah ; 'Z'
.text:00000E8A                 mov     eax, 0CCCCCCCCh
.text:00000E8F                 rep stosd
.text:00000E91                 mov     eax, dword ptr ds:___security_cookie
.text:00000E96                 xor     eax, ebp
.text:00000E98                 mov     [ebp+var_4], eax
.text:00000E9B                 mov     eax, [ebp+arg_0]
.text:00000E9E                 mov     ecx, [eax]
.text:00000EA0                 mov     [ebp+var_8], ecx
.text:00000EA3                 mov     edx, [ebp+var_8]
.text:00000EA6                 cmp     dword ptr [edx+38FF8h], 3
.text:00000EAD                 jle     short loc_EC6
.text:00000EAF                 push    0D0h ; '-'      ; Line
.text:00000EB4                 push    offset $SG7246  ; "..\\..\\..\\sshzlib.c"
.text:00000EB9                 push    offset $SG7247  ; "st->npending <= HASHCHARS"
.text:00000EBE                 call    __wassert
.text:00000EC3 ; ---------------------------------------------------------------------------
.text:00000EC3                 add     esp, 0Ch
.text:00000EC6
.text:00000EC6 loc_EC6:                                ; CODE XREF: _lz77_compress+39j
.text:00000EC6                 mov     [ebp+var_C], 0
.text:00000ECD                 jmp     short loc_ED8
.text:00000ECF ; ---------------------------------------------------------------------------
.text:00000ECF
.text:00000ECF loc_ECF:                                ; CODE XREF: _lz77_compress+18Aj
.text:00000ECF                 mov     ecx, [ebp+var_C]
.text:00000ED2                 add     ecx, 1
.text:00000ED5                 mov     [ebp+var_C], ecx
.text:00000ED8
.text:00000ED8 loc_ED8:                                ; CODE XREF: _lz77_compress+59j
.text:00000ED8                 mov     edx, [ebp+var_8]
.text:00000EDB                 mov     eax, [ebp+var_C]
.text:00000EDE                 cmp     eax, [edx+38FF8h]
.text:00000EE4                 jge     loc_1003
.text:00000EEA                 mov     ecx, [ebp+var_8]
.text:00000EED                 mov     edx, [ebp+arg_8]
.text:00000EF0                 add     edx, [ecx+38FF8h]
.text:00000EF6                 sub     edx, [ebp+var_C]
.text:00000EF9                 cmp     edx, 3
.text:00000EFC                 jge     short loc_F52
.text:00000EFE                 mov     eax, [ebp+var_C]
.text:00000F01                 mov     [ebp+var_150], eax
.text:00000F07                 jmp     short loc_F18
.text:00000F09 ; ---------------------------------------------------------------------------
.text:00000F09
.text:00000F09 loc_F09:                                ; CODE XREF: _lz77_compress+D7j
.text:00000F09                 mov     ecx, [ebp+var_150]
.text:00000F0F                 add     ecx, 1
.text:00000F12                 mov     [ebp+var_150], ecx
.text:00000F18
.text:00000F18 loc_F18:                                ; CODE XREF: _lz77_compress+93j
.text:00000F18                 mov     edx, [ebp+var_8]
.text:00000F1B                 mov     eax, [ebp+var_150]
.text:00000F21                 cmp     eax, [edx+38FF8h]
.text:00000F27                 jge     short loc_F4D
.text:00000F29                 mov     ecx, [ebp+var_150]
.text:00000F2F                 sub     ecx, [ebp+var_C]
.text:00000F32                 mov     edx, [ebp+var_8]
.text:00000F35                 add     edx, [ebp+var_150]
.text:00000F3B                 mov     eax, [ebp+var_8]
.text:00000F3E                 mov     dl, [edx+38FF2h]
.text:00000F44                 mov     [eax+ecx+38FF2h], dl
.text:00000F4B                 jmp     short loc_F09
.text:00000F4D ; ---------------------------------------------------------------------------
.text:00000F4D
.text:00000F4D loc_F4D:                                ; CODE XREF: _lz77_compress+B3j
.text:00000F4D                 jmp     loc_1003
.text:00000F52 ; ---------------------------------------------------------------------------
.text:00000F52
.text:00000F52 loc_F52:                                ; CODE XREF: _lz77_compress+88j
.text:00000F52                 mov     [ebp+var_150], 0
.text:00000F5C                 jmp     short loc_F6D
.text:00000F5E ; ---------------------------------------------------------------------------
.text:00000F5E
.text:00000F5E loc_F5E:                                ; CODE XREF: _lz77_compress+164j
.text:00000F5E                 mov     eax, [ebp+var_150]
.text:00000F64                 add     eax, 1
.text:00000F67                 mov     [ebp+var_150], eax
.text:00000F6D
.text:00000F6D loc_F6D:                                ; CODE XREF: _lz77_compress+E8j
.text:00000F6D                 cmp     [ebp+var_150], 3
.text:00000F74                 jge     short loc_FDA
.text:00000F76                 mov     ecx, [ebp+var_C]
.text:00000F79                 add     ecx, [ebp+var_150]
.text:00000F7F                 mov     edx, [ebp+var_8]
.text:00000F82                 cmp     ecx, [edx+38FF8h]
.text:00000F88                 jge     short loc_FA6
.text:00000F8A                 mov     eax, [ebp+var_C]
.text:00000F8D                 add     eax, [ebp+var_150]
.text:00000F93                 mov     ecx, [ebp+var_8]
.text:00000F96                 movzx   edx, byte ptr [ecx+eax+38FF2h]
.text:00000F9E                 mov     [ebp+var_158], edx
.text:00000FA4                 jmp     short loc_FC5
.text:00000FA6 ; ---------------------------------------------------------------------------
.text:00000FA6
.text:00000FA6 loc_FA6:                                ; CODE XREF: _lz77_compress+114j
.text:00000FA6                 mov     eax, [ebp+var_C]
.text:00000FA9                 add     eax, [ebp+var_150]
.text:00000FAF                 mov     ecx, [ebp+var_8]
.text:00000FB2                 sub     eax, [ecx+38FF8h]
.text:00000FB8                 mov     edx, [ebp+arg_4]
.text:00000FBB                 movzx   eax, byte ptr [edx+eax]
.text:00000FBF                 mov     [ebp+var_158], eax
.text:00000FC5
.text:00000FC5 loc_FC5:                                ; CODE XREF: _lz77_compress+130j
.text:00000FC5                 mov     ecx, [ebp+var_150]
.text:00000FCB                 mov     dl, byte ptr [ebp+var_158]
.text:00000FD1                 mov     [ebp+ecx+var_148], dl
.text:00000FD8                 jmp     short loc_F5E
.text:00000FDA ; ---------------------------------------------------------------------------
.text:00000FDA
.text:00000FDA loc_FDA:                                ; CODE XREF: _lz77_compress+100j
.text:00000FDA                 lea     eax, [ebp+var_148]
.text:00000FE0                 push    eax
.text:00000FE1                 call    _lz77_hash
.text:00000FE6                 add     esp, 4
.text:00000FE9                 push    eax
.text:00000FEA                 movzx   ecx, [ebp+var_148]
.text:00000FF1                 push    ecx
.text:00000FF2                 mov     edx, [ebp+var_8]
.text:00000FF5                 push    edx
.text:00000FF6                 call    _lz77_advance
.text:00000FFB                 add     esp, 0Ch
.text:00000FFE                 jmp     loc_ECF
.text:00001003 ; ---------------------------------------------------------------------------
.text:00001003
.text:00001003 loc_1003:                               ; CODE XREF: _lz77_compress+70j
.text:00001003                                         ; _lz77_compress:loc_F4Dj
.text:00001003                 mov     eax, [ebp+var_8]
.text:00001006                 mov     ecx, [eax+38FF8h]
.text:0000100C                 sub     ecx, [ebp+var_C]
.text:0000100F                 mov     edx, [ebp+var_8]
.text:00001012                 mov     [edx+38FF8h], ecx
.text:00001018                 mov     [ebp+var_30], 0
.text:0000101F                 mov     [ebp+var_2C], 0
.text:00001026                 mov     [ebp+var_140], 0
.text:00001030
.text:00001030 loc_1030:                               ; CODE XREF: _lz77_compress:loc_14B4j
.text:00001030                 cmp     [ebp+arg_8], 0
.text:00001034                 jle     loc_14B9
.text:0000103A                 cmp     [ebp+arg_C], 0
.text:0000103E                 jz      loc_11A3
.text:00001044                 cmp     [ebp+arg_8], 3
.text:00001048                 jl      loc_11A3
.text:0000104E                 mov     eax, [ebp+arg_4]
.text:00001051                 push    eax
.text:00001052                 call    _lz77_hash
.text:00001057                 add     esp, 4
.text:0000105A                 mov     [ebp+var_10], eax
.text:0000105D                 mov     [ebp+var_1C], 0
.text:00001064                 mov     ecx, [ebp+var_10]
.text:00001067                 mov     edx, [ebp+var_8]
.text:0000106A                 movsx   eax, word ptr [edx+ecx*2+38004h]
.text:00001072                 mov     [ebp+var_18], eax
.text:00001075                 jmp     short loc_1087
.text:00001077 ; ---------------------------------------------------------------------------
.text:00001077
.text:00001077 loc_1077:                               ; CODE XREF: _lz77_compress:loc_119Cj
.text:00001077                 mov     ecx, [ebp+var_18]
.text:0000107A                 imul    ecx, 6
.text:0000107D                 mov     edx, [ebp+var_8]
.text:00001080                 movsx   eax, word ptr [edx+ecx]
.text:00001084                 mov     [ebp+var_18], eax
.text:00001087
.text:00001087 loc_1087:                               ; CODE XREF: _lz77_compress+201j
.text:00001087                 cmp     [ebp+var_18], 0FFFFFFFFh
.text:0000108B                 jz      loc_11A1
.text:00001091                 mov     ecx, [ebp+var_18]
.text:00001094                 add     ecx, 8000h
.text:0000109A                 mov     edx, [ebp+var_8]
.text:0000109D                 sub     ecx, [edx+38000h]
.text:000010A3                 and     ecx, 80007FFFh
.text:000010A9                 jns     short loc_10B3
.text:000010AB                 dec     ecx
.text:000010AC                 or      ecx, 0FFFF8000h
.text:000010B2                 inc     ecx
.text:000010B3
.text:000010B3 loc_10B3:                               ; CODE XREF: _lz77_compress+235j
.text:000010B3                 mov     eax, 8000h
.text:000010B8                 sub     eax, ecx
.text:000010BA                 mov     [ebp+var_14], eax
.text:000010BD                 mov     [ebp+var_C], 0
.text:000010C4                 jmp     short loc_10CF
.text:000010C6 ; ---------------------------------------------------------------------------
.text:000010C6
.text:000010C6 loc_10C6:                               ; CODE XREF: _lz77_compress:loc_1165j
.text:000010C6                 mov     ecx, [ebp+var_C]
.text:000010C9                 add     ecx, 1
.text:000010CC                 mov     [ebp+var_C], ecx
.text:000010CF
.text:000010CF loc_10CF:                               ; CODE XREF: _lz77_compress+250j
.text:000010CF                 cmp     [ebp+var_C], 3
.text:000010D3                 jge     loc_116A
.text:000010D9                 cmp     [ebp+var_C], 0
.text:000010DD                 jge     short loc_1103
.text:000010DF                 mov     edx, [ebp+var_8]
.text:000010E2                 mov     eax, [edx+38000h]
.text:000010E8                 add     eax, [ebp+var_C]
.text:000010EB                 and     eax, 7FFFh
.text:000010F0                 mov     ecx, [ebp+var_8]
.text:000010F3                 movzx   edx, byte ptr [ecx+eax+30000h]
.text:000010FB                 mov     [ebp+var_15C], edx
.text:00001101                 jmp     short loc_1112
.text:00001103 ; ---------------------------------------------------------------------------
.text:00001103
.text:00001103 loc_1103:                               ; CODE XREF: _lz77_compress+269j
.text:00001103                 mov     eax, [ebp+arg_4]
.text:00001106                 add     eax, [ebp+var_C]
.text:00001109                 movzx   ecx, byte ptr [eax]
.text:0000110C                 mov     [ebp+var_15C], ecx
.text:00001112
.text:00001112 loc_1112:                               ; CODE XREF: _lz77_compress+28Dj
.text:00001112                 mov     edx, [ebp+var_C]
.text:00001115                 sub     edx, [ebp+var_14]
.text:00001118                 jns     short loc_1142
.text:0000111A                 mov     eax, [ebp+var_8]
.text:0000111D                 mov     ecx, [eax+38000h]
.text:00001123                 add     ecx, [ebp+var_C]
.text:00001126                 sub     ecx, [ebp+var_14]
.text:00001129                 and     ecx, 7FFFh
.text:0000112F                 mov     edx, [ebp+var_8]
.text:00001132                 movzx   eax, byte ptr [edx+ecx+30000h]
.text:0000113A                 mov     [ebp+var_160], eax
.text:00001140                 jmp     short loc_1155
.text:00001142 ; ---------------------------------------------------------------------------
.text:00001142
.text:00001142 loc_1142:                               ; CODE XREF: _lz77_compress+2A4j
.text:00001142                 mov     ecx, [ebp+var_C]
.text:00001145                 sub     ecx, [ebp+var_14]
.text:00001148                 mov     edx, [ebp+arg_4]
.text:0000114B                 movzx   eax, byte ptr [edx+ecx]
.text:0000114F                 mov     [ebp+var_160], eax
.text:00001155
.text:00001155 loc_1155:                               ; CODE XREF: _lz77_compress+2CCj
.text:00001155                 mov     ecx, [ebp+var_15C]
.text:0000115B                 cmp     ecx, [ebp+var_160]
.text:00001161                 jz      short loc_1165
.text:00001163                 jmp     short loc_116A
.text:00001165 ; ---------------------------------------------------------------------------
.text:00001165
.text:00001165 loc_1165:                               ; CODE XREF: _lz77_compress+2EDj
.text:00001165                 jmp     loc_10C6
.text:0000116A ; ---------------------------------------------------------------------------
.text:0000116A
.text:0000116A loc_116A:                               ; CODE XREF: _lz77_compress+25Fj
.text:0000116A                                         ; _lz77_compress+2EFj
.text:0000116A                 cmp     [ebp+var_C], 3
.text:0000116E                 jnz     short loc_119C
.text:00001170                 mov     edx, [ebp+var_1C]
.text:00001173                 mov     eax, [ebp+var_14]
.text:00001176                 mov     [ebp+edx*8+var_138], eax
.text:0000117D                 mov     ecx, [ebp+var_1C]
.text:00001180                 mov     [ebp+ecx*8+var_134], 3
.text:0000118B                 mov     edx, [ebp+var_1C]
.text:0000118E                 add     edx, 1
.text:00001191                 mov     [ebp+var_1C], edx
.text:00001194                 cmp     [ebp+var_1C], 20h ; ' '
.text:00001198                 jl      short loc_119C
.text:0000119A                 jmp     short loc_11A1
.text:0000119C ; ---------------------------------------------------------------------------
.text:0000119C
.text:0000119C loc_119C:                               ; CODE XREF: _lz77_compress+2FAj
.text:0000119C                                         ; _lz77_compress+324j
.text:0000119C                 jmp     loc_1077
.text:000011A1 ; ---------------------------------------------------------------------------
.text:000011A1
.text:000011A1 loc_11A1:                               ; CODE XREF: _lz77_compress+217j
.text:000011A1                                         ; _lz77_compress+326j
.text:000011A1                 jmp     short loc_11B1
.text:000011A3 ; ---------------------------------------------------------------------------
.text:000011A3
.text:000011A3 loc_11A3:                               ; CODE XREF: _lz77_compress+1CAj
.text:000011A3                                         ; _lz77_compress+1D4j
.text:000011A3                 mov     [ebp+var_1C], 0
.text:000011AA                 mov     [ebp+var_10], 0FFFFFFFFh
.text:000011B1
.text:000011B1 loc_11B1:                               ; CODE XREF: _lz77_compress:loc_11A1j
.text:000011B1                 cmp     [ebp+var_1C], 0
.text:000011B5                 jle     loc_13B4
.text:000011BB                 mov     [ebp+var_20], 3
.text:000011C2
.text:000011C2 loc_11C2:                               ; CODE XREF: _lz77_compress+47Aj
.text:000011C2                 mov     eax, [ebp+var_20]
.text:000011C5                 cmp     eax, [ebp+arg_8]
.text:000011C8                 jge     loc_12F3
.text:000011CE                 mov     [ebp+var_154], 0
.text:000011D8                 mov     ecx, [ebp+var_154]
.text:000011DE                 mov     [ebp+var_C], ecx
.text:000011E1                 jmp     short loc_11EC
.text:000011E3 ; ---------------------------------------------------------------------------
.text:000011E3
.text:000011E3 loc_11E3:                               ; CODE XREF: _lz77_compress:loc_12CCj
.text:000011E3                 mov     edx, [ebp+var_C]
.text:000011E6                 add     edx, 1
.text:000011E9                 mov     [ebp+var_C], edx
.text:000011EC
.text:000011EC loc_11EC:                               ; CODE XREF: _lz77_compress+36Dj
.text:000011EC                 mov     eax, [ebp+var_C]
.text:000011EF                 cmp     eax, [ebp+var_1C]
.text:000011F2                 jge     loc_12D1
.text:000011F8                 cmp     [ebp+var_20], 0
.text:000011FC                 jge     short loc_1223
.text:000011FE                 mov     ecx, [ebp+var_8]
.text:00001201                 mov     edx, [ecx+38000h]
.text:00001207                 add     edx, [ebp+var_20]
.text:0000120A                 and     edx, 7FFFh
.text:00001210                 mov     eax, [ebp+var_8]
.text:00001213                 movzx   ecx, byte ptr [eax+edx+30000h]
.text:0000121B                 mov     [ebp+var_164], ecx
.text:00001221                 jmp     short loc_1232
.text:00001223 ; ---------------------------------------------------------------------------
.text:00001223
.text:00001223 loc_1223:                               ; CODE XREF: _lz77_compress+388j
.text:00001223                 mov     edx, [ebp+arg_4]
.text:00001226                 add     edx, [ebp+var_20]
.text:00001229                 movzx   eax, byte ptr [edx]
.text:0000122C                 mov     [ebp+var_164], eax
.text:00001232
.text:00001232 loc_1232:                               ; CODE XREF: _lz77_compress+3ADj
.text:00001232                 mov     ecx, [ebp+var_C]
.text:00001235                 mov     edx, [ebp+var_20]
.text:00001238                 sub     edx, [ebp+ecx*8+var_138]
.text:0000123F                 jns     short loc_1270
.text:00001241                 mov     eax, [ebp+var_8]
.text:00001244                 mov     ecx, [eax+38000h]
.text:0000124A                 add     ecx, [ebp+var_20]
.text:0000124D                 mov     edx, [ebp+var_C]
.text:00001250                 sub     ecx, [ebp+edx*8+var_138]
.text:00001257                 and     ecx, 7FFFh
.text:0000125D                 mov     eax, [ebp+var_8]
.text:00001260                 movzx   ecx, byte ptr [eax+ecx+30000h]
.text:00001268                 mov     [ebp+var_168], ecx
.text:0000126E                 jmp     short loc_128A
.text:00001270 ; ---------------------------------------------------------------------------
.text:00001270
.text:00001270 loc_1270:                               ; CODE XREF: _lz77_compress+3CBj
.text:00001270                 mov     edx, [ebp+var_C]
.text:00001273                 mov     eax, [ebp+var_20]
.text:00001276                 sub     eax, [ebp+edx*8+var_138]
.text:0000127D                 mov     ecx, [ebp+arg_4]
.text:00001280                 movzx   edx, byte ptr [ecx+eax]
.text:00001284                 mov     [ebp+var_168], edx
.text:0000128A
.text:0000128A loc_128A:                               ; CODE XREF: _lz77_compress+3FAj
.text:0000128A                 mov     eax, [ebp+var_164]
.text:00001290                 cmp     eax, [ebp+var_168]
.text:00001296                 jnz     short loc_12CC
.text:00001298                 mov     ecx, [ebp+var_C]
.text:0000129B                 mov     edx, [ebp+ecx*8+var_138]
.text:000012A2                 mov     eax, [ebp+ecx*8+var_134]
.text:000012A9                 mov     ecx, [ebp+var_154]
.text:000012AF                 mov     [ebp+ecx*8+var_138], edx
.text:000012B6                 mov     [ebp+ecx*8+var_134], eax
.text:000012BD                 mov     edx, [ebp+var_154]
.text:000012C3                 add     edx, 1
.text:000012C6                 mov     [ebp+var_154], edx
.text:000012CC
.text:000012CC loc_12CC:                               ; CODE XREF: _lz77_compress+422j
.text:000012CC                 jmp     loc_11E3
.text:000012D1 ; ---------------------------------------------------------------------------
.text:000012D1
.text:000012D1 loc_12D1:                               ; CODE XREF: _lz77_compress+37Ej
.text:000012D1                 cmp     [ebp+var_154], 0
.text:000012D8                 jnz     short loc_12DC
.text:000012DA                 jmp     short loc_12F3
.text:000012DC ; ---------------------------------------------------------------------------
.text:000012DC
.text:000012DC loc_12DC:                               ; CODE XREF: _lz77_compress+464j
.text:000012DC                 mov     eax, [ebp+var_20]
.text:000012DF                 add     eax, 1
.text:000012E2                 mov     [ebp+var_20], eax
.text:000012E5                 mov     ecx, [ebp+var_154]
.text:000012EB                 mov     [ebp+var_1C], ecx
.text:000012EE                 jmp     loc_11C2
.text:000012F3 ; ---------------------------------------------------------------------------
.text:000012F3
.text:000012F3 loc_12F3:                               ; CODE XREF: _lz77_compress+354j
.text:000012F3                                         ; _lz77_compress+466j
.text:000012F3                 mov     edx, [ebp+var_20]
.text:000012F6                 mov     [ebp+var_134], edx
.text:000012FC                 cmp     [ebp+var_2C], 0
.text:00001300                 jle     loc_138D
.text:00001306                 mov     eax, [ebp+var_2C]
.text:00001309                 add     eax, 1
.text:0000130C                 cmp     [ebp+var_134], eax
.text:00001312                 jle     short loc_135B
.text:00001314                 mov     esi, esp
.text:00001316                 movzx   ecx, byte ptr [ebp+var_140]
.text:0000131D                 push    ecx
.text:0000131E                 mov     edx, [ebp+arg_0]
.text:00001321                 push    edx
.text:00001322                 mov     eax, [ebp+arg_0]
.text:00001325                 mov     ecx, [eax+8]
.text:00001328                 call    ecx
.text:0000132A                 add     esp, 8
.text:0000132D                 cmp     esi, esp
.text:0000132F                 call    __RTC_CheckEsp
.text:00001334                 mov     edx, [ebp+var_138]
.text:0000133A                 mov     [ebp+var_30], edx
.text:0000133D                 mov     eax, [ebp+var_134]
.text:00001343                 mov     [ebp+var_2C], eax
.text:00001346                 mov     ecx, [ebp+arg_4]
.text:00001349                 movzx   edx, byte ptr [ecx]
.text:0000134C                 mov     [ebp+var_140], edx
.text:00001352                 mov     [ebp+var_24], 1
.text:00001359                 jmp     short loc_138B
.text:0000135B ; ---------------------------------------------------------------------------
.text:0000135B
.text:0000135B loc_135B:                               ; CODE XREF: _lz77_compress+49Ej
.text:0000135B                 mov     esi, esp
.text:0000135D                 mov     eax, [ebp+var_2C]
.text:00001360                 push    eax
.text:00001361                 mov     ecx, [ebp+var_30]
.text:00001364                 push    ecx
.text:00001365                 mov     edx, [ebp+arg_0]
.text:00001368                 push    edx
.text:00001369                 mov     eax, [ebp+arg_0]
.text:0000136C                 mov     ecx, [eax+0Ch]
.text:0000136F                 call    ecx
.text:00001371                 add     esp, 0Ch
.text:00001374                 cmp     esi, esp
.text:00001376                 call    __RTC_CheckEsp
.text:0000137B                 mov     edx, [ebp+var_2C]
.text:0000137E                 sub     edx, 1
.text:00001381                 mov     [ebp+var_24], edx
.text:00001384                 mov     [ebp+var_2C], 0
.text:0000138B
.text:0000138B loc_138B:                               ; CODE XREF: _lz77_compress+4E5j
.text:0000138B                 jmp     short loc_13B2
.text:0000138D ; ---------------------------------------------------------------------------
.text:0000138D
.text:0000138D loc_138D:                               ; CODE XREF: _lz77_compress+48Cj
.text:0000138D                 mov     eax, [ebp+var_138]
.text:00001393                 mov     [ebp+var_30], eax
.text:00001396                 mov     ecx, [ebp+var_134]
.text:0000139C                 mov     [ebp+var_2C], ecx
.text:0000139F                 mov     edx, [ebp+arg_4]
.text:000013A2                 movzx   eax, byte ptr [edx]
.text:000013A5                 mov     [ebp+var_140], eax
.text:000013AB                 mov     [ebp+var_24], 1
.text:000013B2
.text:000013B2 loc_13B2:                               ; CODE XREF: _lz77_compress:loc_138Bj
.text:000013B2                 jmp     short loc_1412
.text:000013B4 ; ---------------------------------------------------------------------------
.text:000013B4
.text:000013B4 loc_13B4:                               ; CODE XREF: _lz77_compress+341j
.text:000013B4                 cmp     [ebp+var_2C], 0
.text:000013B8                 jle     short loc_13EC
.text:000013BA                 mov     esi, esp
.text:000013BC                 mov     ecx, [ebp+var_2C]
.text:000013BF                 push    ecx
.text:000013C0                 mov     edx, [ebp+var_30]
.text:000013C3                 push    edx
.text:000013C4                 mov     eax, [ebp+arg_0]
.text:000013C7                 push    eax
.text:000013C8                 mov     ecx, [ebp+arg_0]
.text:000013CB                 mov     edx, [ecx+0Ch]
.text:000013CE                 call    edx
.text:000013D0                 add     esp, 0Ch
.text:000013D3                 cmp     esi, esp
.text:000013D5                 call    __RTC_CheckEsp
.text:000013DA                 mov     eax, [ebp+var_2C]
.text:000013DD                 sub     eax, 1
.text:000013E0                 mov     [ebp+var_24], eax
.text:000013E3                 mov     [ebp+var_2C], 0
.text:000013EA                 jmp     short loc_1412
.text:000013EC ; ---------------------------------------------------------------------------
.text:000013EC
.text:000013EC loc_13EC:                               ; CODE XREF: _lz77_compress+544j
.text:000013EC                 mov     esi, esp
.text:000013EE                 mov     ecx, [ebp+arg_4]
.text:000013F1                 movzx   edx, byte ptr [ecx]
.text:000013F4                 push    edx
.text:000013F5                 mov     eax, [ebp+arg_0]
.text:000013F8                 push    eax
.text:000013F9                 mov     ecx, [ebp+arg_0]
.text:000013FC                 mov     edx, [ecx+8]
.text:000013FF                 call    edx
.text:00001401                 add     esp, 8
.text:00001404                 cmp     esi, esp
.text:00001406                 call    __RTC_CheckEsp
.text:0000140B                 mov     [ebp+var_24], 1
.text:00001412
.text:00001412 loc_1412:                               ; CODE XREF: _lz77_compress:loc_13B2j
.text:00001412                                         ; _lz77_compress+576j ...
.text:00001412                 cmp     [ebp+var_24], 0
.text:00001416                 jle     loc_14B4
.text:0000141C                 cmp     [ebp+arg_8], 3
.text:00001420                 jl      short loc_1444
.text:00001422                 mov     eax, [ebp+arg_4]
.text:00001425                 push    eax
.text:00001426                 call    _lz77_hash
.text:0000142B                 add     esp, 4
.text:0000142E                 push    eax
.text:0000142F                 mov     ecx, [ebp+arg_4]
.text:00001432                 movzx   edx, byte ptr [ecx]
.text:00001435                 push    edx
.text:00001436                 mov     eax, [ebp+var_8]
.text:00001439                 push    eax
.text:0000143A                 call    _lz77_advance
.text:0000143F                 add     esp, 0Ch
.text:00001442                 jmp     short loc_1494
.text:00001444 ; ---------------------------------------------------------------------------
.text:00001444
.text:00001444 loc_1444:                               ; CODE XREF: _lz77_compress+5ACj
.text:00001444                 mov     ecx, [ebp+var_8]
.text:00001447                 cmp     dword ptr [ecx+38FF8h], 3
.text:0000144E                 jl      short loc_1467
.text:00001450                 push    158h            ; Line
.text:00001455                 push    offset $SG7298  ; "..\\..\\..\\sshzlib.c"
.text:0000145A                 push    offset $SG7299  ; "st->npending < HASHCHARS"
.text:0000145F                 call    __wassert
.text:00001464 ; ---------------------------------------------------------------------------
.text:00001464                 add     esp, 0Ch
.text:00001467
.text:00001467 loc_1467:                               ; CODE XREF: _lz77_compress+5DAj
.text:00001467                 mov     eax, [ebp+var_8]
.text:0000146A                 mov     ecx, [eax+38FF8h]
.text:00001470                 mov     edx, [ebp+var_8]
.text:00001473                 mov     eax, [ebp+arg_4]
.text:00001476                 mov     al, [eax]
.text:00001478                 mov     [edx+ecx+38FF2h], al
.text:0000147F                 mov     ecx, [ebp+var_8]
.text:00001482                 mov     edx, [ecx+38FF8h]
.text:00001488                 add     edx, 1
.text:0000148B                 mov     eax, [ebp+var_8]
.text:0000148E                 mov     [eax+38FF8h], edx
.text:00001494
.text:00001494 loc_1494:                               ; CODE XREF: _lz77_compress+5CEj
.text:00001494                 mov     ecx, [ebp+arg_4]
.text:00001497                 add     ecx, 1
.text:0000149A                 mov     [ebp+arg_4], ecx
.text:0000149D                 mov     edx, [ebp+arg_8]
.text:000014A0                 sub     edx, 1
.text:000014A3                 mov     [ebp+arg_8], edx
.text:000014A6                 mov     eax, [ebp+var_24]
.text:000014A9                 sub     eax, 1
.text:000014AC                 mov     [ebp+var_24], eax
.text:000014AF                 jmp     loc_1412
.text:000014B4 ; ---------------------------------------------------------------------------
.text:000014B4
.text:000014B4 loc_14B4:                               ; CODE XREF: _lz77_compress+5A2j
.text:000014B4                 jmp     loc_1030
.text:000014B9 ; ---------------------------------------------------------------------------
.text:000014B9
.text:000014B9 loc_14B9:                               ; CODE XREF: _lz77_compress+1C0j
.text:000014B9                 push    edx
.text:000014BA                 mov     ecx, ebp
.text:000014BC                 push    eax
.text:000014BD                 lea     edx, $LN61
.text:000014C3                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:000014C8                 pop     eax
.text:000014C9                 pop     edx
.text:000014CA                 pop     edi
.text:000014CB                 pop     esi
.text:000014CC                 mov     ecx, [ebp+var_4]
.text:000014CF                 xor     ecx, ebp
.text:000014D1                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:000014D6                 add     esp, 168h
.text:000014DC                 cmp     ebp, esp
.text:000014DE                 call    __RTC_CheckEsp
.text:000014E3                 mov     esp, ebp
.text:000014E5                 pop     ebp
.text:000014E6                 retn
.text:000014E6 _lz77_compress  endp
.text:000014E6
.text:000014E6 ; ---------------------------------------------------------------------------
.text:000014E7                 align 4
.text:000014E8 $LN61           dd 3                    ; DATA XREF: _lz77_compress+649o
.text:000014EC                 dd offset $LN60
.text:000014F0 $LN60           dd 0FFFFFFD0h, 8        ; DATA XREF: .text:000014ECo
.text:000014F8                 dd offset $LN57         ; "defermatch"
.text:000014FC                 dd 0FFFFFEC8h, 100h
.text:00001504                 dd offset $LN58         ; "matches"
.text:00001508                 dd 0FFFFFEB8h, 3
.text:00001510                 dd offset $LN59
.text:00001514 $LN59           dd 6F6F66h              ; DATA XREF: .text:00001510o
.text:00001518 $LN58           db 'matches',0          ; DATA XREF: .text:00001504o
.text:00001520 $LN57           db 'defermatch',0       ; DATA XREF: .text:000014F8o
.text:0000152B                 db 9 dup(0CCh)
.text:00001534
.text:00001534 ; =============== S U B R O U T I N E =======================================
.text:00001534
.text:00001534 ; Attributes: bp-based frame
.text:00001534
.text:00001534 _lz77_hash      proc near               ; CODE XREF: _lz77_compress+16Dp
.text:00001534                                         ; _lz77_compress+1DEp ...
.text:00001534
.text:00001534 arg_0           = dword ptr  8
.text:00001534
.text:00001534                 push    ebp
.text:00001535                 mov     ebp, esp
.text:00001537                 mov     eax, [ebp+arg_0]
.text:0000153A                 movzx   eax, byte ptr [eax]
.text:0000153D                 imul    eax, 101h
.text:00001543                 mov     ecx, [ebp+arg_0]
.text:00001546                 movzx   edx, byte ptr [ecx+1]
.text:0000154A                 imul    edx, 107h
.text:00001550                 add     eax, edx
.text:00001552                 mov     ecx, [ebp+arg_0]
.text:00001555                 movzx   edx, byte ptr [ecx+2]
.text:00001559                 imul    edx, 10Dh
.text:0000155F                 add     eax, edx
.text:00001561                 cdq
.text:00001562                 mov     ecx, 7F7h
.text:00001567                 idiv    ecx
.text:00001569                 mov     eax, edx
.text:0000156B                 pop     ebp
.text:0000156C                 retn
.text:0000156C _lz77_hash      endp
.text:0000156C
.text:0000156C ; ---------------------------------------------------------------------------
.text:0000156D                 db 7 dup(0CCh)
.text:00001574
.text:00001574 ; =============== S U B R O U T I N E =======================================
.text:00001574
.text:00001574 ; Attributes: bp-based frame
.text:00001574
.text:00001574 _lz77_advance   proc near               ; CODE XREF: _lz77_compress+182p
.text:00001574                                         ; _lz77_compress+5C6p
.text:00001574
.text:00001574 var_4           = dword ptr -4
.text:00001574 arg_0           = dword ptr  8
.text:00001574 arg_4           = byte ptr  0Ch
.text:00001574 arg_8           = dword ptr  10h
.text:00001574
.text:00001574                 push    ebp
.text:00001575                 mov     ebp, esp
.text:00001577                 push    ecx
.text:00001578                 push    esi
.text:00001579                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00001580                 mov     eax, [ebp+arg_0]
.text:00001583                 mov     ecx, [eax+38000h]
.text:00001589                 imul    ecx, 6
.text:0000158C                 mov     edx, [ebp+arg_0]
.text:0000158F                 movsx   eax, word ptr [edx+ecx+2]
.text:00001594                 cmp     eax, 0FFFFFFFFh
.text:00001597                 jz      short loc_15BC
.text:00001599                 mov     ecx, [ebp+arg_0]
.text:0000159C                 mov     edx, [ecx+38000h]
.text:000015A2                 imul    edx, 6
.text:000015A5                 mov     eax, [ebp+arg_0]
.text:000015A8                 movsx   ecx, word ptr [eax+edx+2]
.text:000015AD                 imul    ecx, 6
.text:000015B0                 or      edx, 0FFFFFFFFh
.text:000015B3                 mov     eax, [ebp+arg_0]
.text:000015B6                 mov     [eax+ecx], dx
.text:000015BA                 jmp     short loc_15F7
.text:000015BC ; ---------------------------------------------------------------------------
.text:000015BC
.text:000015BC loc_15BC:                               ; CODE XREF: _lz77_advance+23j
.text:000015BC                 mov     ecx, [ebp+arg_0]
.text:000015BF                 mov     edx, [ecx+38000h]
.text:000015C5                 imul    edx, 6
.text:000015C8                 mov     eax, [ebp+arg_0]
.text:000015CB                 movsx   ecx, word ptr [eax+edx+4]
.text:000015D0                 cmp     ecx, 0FFFFFFFFh
.text:000015D3                 jz      short loc_15F7
.text:000015D5                 mov     edx, [ebp+arg_0]
.text:000015D8                 mov     eax, [edx+38000h]
.text:000015DE                 imul    eax, 6
.text:000015E1                 mov     ecx, [ebp+arg_0]
.text:000015E4                 movsx   edx, word ptr [ecx+eax+4]
.text:000015E9                 or      eax, 0FFFFFFFFh
.text:000015EC                 mov     ecx, [ebp+arg_0]
.text:000015EF                 mov     [ecx+edx*2+38004h], ax
.text:000015F7
.text:000015F7 loc_15F7:                               ; CODE XREF: _lz77_advance+46j
.text:000015F7                                         ; _lz77_advance+5Fj
.text:000015F7                 mov     edx, [ebp+arg_0]
.text:000015FA                 mov     eax, [edx+38000h]
.text:00001600                 imul    eax, 6
.text:00001603                 mov     ecx, [ebp+arg_0]
.text:00001606                 mov     dx, word ptr [ebp+arg_8]
.text:0000160A                 mov     [ecx+eax+4], dx
.text:0000160F                 mov     eax, [ebp+arg_0]
.text:00001612                 mov     ecx, [eax+38000h]
.text:00001618                 imul    ecx, 6
.text:0000161B                 mov     edx, 0FFFFFFFFh
.text:00001620                 mov     eax, [ebp+arg_0]
.text:00001623                 mov     [eax+ecx+2], dx
.text:00001628                 mov     ecx, [ebp+arg_0]
.text:0000162B                 mov     edx, [ecx+38000h]
.text:00001631                 imul    edx, 6
.text:00001634                 mov     eax, [ebp+arg_0]
.text:00001637                 mov     ecx, [ebp+arg_8]
.text:0000163A                 mov     esi, [ebp+arg_0]
.text:0000163D                 mov     cx, [esi+ecx*2+38004h]
.text:00001645                 mov     [eax+edx], cx
.text:00001649                 mov     edx, [ebp+arg_0]
.text:0000164C                 mov     eax, [edx+38000h]
.text:00001652                 imul    eax, 6
.text:00001655                 mov     ecx, [ebp+arg_0]
.text:00001658                 movsx   edx, word ptr [ecx+eax]
.text:0000165C                 mov     [ebp+var_4], edx
.text:0000165F                 mov     eax, [ebp+arg_8]
.text:00001662                 mov     ecx, [ebp+arg_0]
.text:00001665                 mov     edx, [ebp+arg_0]
.text:00001668                 mov     dx, [edx+38000h]
.text:0000166F                 mov     [ecx+eax*2+38004h], dx
.text:00001677                 cmp     [ebp+var_4], 0FFFFFFFFh
.text:0000167B                 jz      short loc_1695
.text:0000167D                 mov     eax, [ebp+var_4]
.text:00001680                 imul    eax, 6
.text:00001683                 mov     ecx, [ebp+arg_0]
.text:00001686                 mov     edx, [ebp+arg_0]
.text:00001689                 mov     dx, [edx+38000h]
.text:00001690                 mov     [ecx+eax+2], dx
.text:00001695
.text:00001695 loc_1695:                               ; CODE XREF: _lz77_advance+107j
.text:00001695                 mov     eax, [ebp+arg_0]
.text:00001698                 mov     ecx, [eax+38000h]
.text:0000169E                 mov     edx, [ebp+arg_0]
.text:000016A1                 mov     al, [ebp+arg_4]
.text:000016A4                 mov     [edx+ecx+30000h], al
.text:000016AB                 mov     ecx, [ebp+arg_0]
.text:000016AE                 mov     edx, [ecx+38000h]
.text:000016B4                 add     edx, 1
.text:000016B7                 and     edx, 7FFFh
.text:000016BD                 mov     eax, [ebp+arg_0]
.text:000016C0                 mov     [eax+38000h], edx
.text:000016C6                 pop     esi
.text:000016C7                 mov     esp, ebp
.text:000016C9                 pop     ebp
.text:000016CA                 retn
.text:000016CA _lz77_advance   endp
.text:000016CA
.text:000016CA ; ---------------------------------------------------------------------------
.text:000016CB                 db 9 dup(0CCh)
.text:000016D4
.text:000016D4 ; =============== S U B R O U T I N E =======================================
.text:000016D4
.text:000016D4 ; Attributes: bp-based frame
.text:000016D4
.text:000016D4                 public _zlib_decompress_init
.text:000016D4 _zlib_decompress_init proc near         ; DATA XREF: .rdata:00000600o
.text:000016D4
.text:000016D4 var_130         = byte ptr -130h
.text:000016D4 Dst             = byte ptr -12Ch
.text:000016D4 var_9C          = byte ptr -9Ch
.text:000016D4 var_2C          = byte ptr -2Ch
.text:000016D4 var_14          = byte ptr -14h
.text:000016D4 var_8           = dword ptr -8
.text:000016D4 var_4           = dword ptr -4
.text:000016D4
.text:000016D4                 push    ebp
.text:000016D5                 mov     ebp, esp
.text:000016D7                 sub     esp, 130h
.text:000016DD                 push    edi
.text:000016DE                 lea     edi, [ebp+var_130]
.text:000016E4                 mov     ecx, 4Ch ; 'L'
.text:000016E9                 mov     eax, 0CCCCCCCCh
.text:000016EE                 rep stosd
.text:000016F0                 mov     eax, dword ptr ds:___security_cookie
.text:000016F5                 xor     eax, ebp
.text:000016F7                 mov     [ebp+var_4], eax
.text:000016FA                 push    81ACh
.text:000016FF                 push    1
.text:00001701                 call    _safemalloc
.text:00001706                 add     esp, 8
.text:00001709                 mov     [ebp+var_8], eax
.text:0000170C                 push    90h ; 'É'       ; Size
.text:00001711                 push    8               ; Val
.text:00001713                 lea     eax, [ebp+Dst]
.text:00001719                 push    eax             ; Dst
.text:0000171A                 call    _memset
.text:0000171F                 add     esp, 0Ch
.text:00001722                 push    70h ; 'p'       ; Size
.text:00001724                 push    9               ; Val
.text:00001726                 lea     ecx, [ebp+var_9C]
.text:0000172C                 push    ecx             ; Dst
.text:0000172D                 call    _memset
.text:00001732                 add     esp, 0Ch
.text:00001735                 push    18h             ; Size
.text:00001737                 push    7               ; Val
.text:00001739                 lea     edx, [ebp+var_2C]
.text:0000173C                 push    edx             ; Dst
.text:0000173D                 call    _memset
.text:00001742                 add     esp, 0Ch
.text:00001745                 push    8               ; Size
.text:00001747                 push    8               ; Val
.text:00001749                 lea     eax, [ebp+var_14]
.text:0000174C                 push    eax             ; Dst
.text:0000174D                 call    _memset
.text:00001752                 add     esp, 0Ch
.text:00001755                 push    120h
.text:0000175A                 lea     ecx, [ebp+Dst]
.text:00001760                 push    ecx
.text:00001761                 call    _zlib_mktable
.text:00001766                 add     esp, 8
.text:00001769                 mov     edx, [ebp+var_8]
.text:0000176C                 mov     [edx], eax
.text:0000176E                 push    20h ; ' '       ; Size
.text:00001770                 push    5               ; Val
.text:00001772                 lea     eax, [ebp+Dst]
.text:00001778                 push    eax             ; Dst
.text:00001779                 call    _memset
.text:0000177E                 add     esp, 0Ch
.text:00001781                 push    20h ; ' '
.text:00001783                 lea     ecx, [ebp+Dst]
.text:00001789                 push    ecx
.text:0000178A                 call    _zlib_mktable
.text:0000178F                 add     esp, 8
.text:00001792                 mov     edx, [ebp+var_8]
.text:00001795                 mov     [edx+4], eax
.text:00001798                 mov     eax, [ebp+var_8]
.text:0000179B                 mov     dword ptr [eax+14h], 0
.text:000017A2                 mov     ecx, [ebp+var_8]
.text:000017A5                 mov     dword ptr [ecx+10h], 0
.text:000017AC                 mov     edx, [ebp+var_8]
.text:000017AF                 mov     dword ptr [edx+0Ch], 0
.text:000017B6                 mov     eax, [ebp+var_8]
.text:000017B9                 mov     dword ptr [eax+8], 0
.text:000017C0                 mov     ecx, [ebp+var_8]
.text:000017C3                 mov     dword ptr [ecx+194h], 0
.text:000017CD                 mov     edx, [ebp+var_8]
.text:000017D0                 mov     dword ptr [edx+198h], 0
.text:000017DA                 mov     eax, [ebp+var_8]
.text:000017DD                 mov     dword ptr [eax+819Ch], 0
.text:000017E7                 mov     eax, [ebp+var_8]
.text:000017EA                 push    edx
.text:000017EB                 mov     ecx, ebp
.text:000017ED                 push    eax
.text:000017EE                 lea     edx, $LN5
.text:000017F4                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:000017F9                 pop     eax
.text:000017FA                 pop     edx
.text:000017FB                 pop     edi
.text:000017FC                 mov     ecx, [ebp+var_4]
.text:000017FF                 xor     ecx, ebp
.text:00001801                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00001806                 add     esp, 130h
.text:0000180C                 cmp     ebp, esp
.text:0000180E                 call    __RTC_CheckEsp
.text:00001813                 mov     esp, ebp
.text:00001815                 pop     ebp
.text:00001816                 retn
.text:00001816 _zlib_decompress_init endp
.text:00001816
.text:00001816 ; ---------------------------------------------------------------------------
.text:00001817                 align 4
.text:00001818 $LN5            dd 1                    ; DATA XREF: _zlib_decompress_init+11Ao
.text:0000181C                 dd offset $LN4
.text:00001820 $LN4            dd 0FFFFFED4h, 120h     ; DATA XREF: .text:0000181Co
.text:00001828                 dd offset $LN3          ; "lengths"
.text:0000182C $LN3            db 'lengths',0          ; DATA XREF: .text:00001828o
.text:00001834
.text:00001834 ; =============== S U B R O U T I N E =======================================
.text:00001834
.text:00001834 ; Attributes: bp-based frame
.text:00001834
.text:00001834 _zlib_mktable   proc near               ; CODE XREF: _zlib_decompress_init+8Dp
.text:00001834                                         ; _zlib_decompress_init+B6p ...
.text:00001834
.text:00001834 var_530         = dword ptr -530h
.text:00001834 var_52C         = dword ptr -52Ch
.text:00001834 var_528         = dword ptr -528h
.text:00001834 var_524         = dword ptr -524h
.text:00001834 var_520         = dword ptr -520h
.text:00001834 var_518         = dword ptr -518h
.text:00001834 var_90          = dword ptr -90h
.text:00001834 var_48          = dword ptr -48h
.text:00001834 var_4           = dword ptr -4
.text:00001834 arg_0           = dword ptr  8
.text:00001834 arg_4           = dword ptr  0Ch
.text:00001834
.text:00001834                 push    ebp
.text:00001835                 mov     ebp, esp
.text:00001837                 sub     esp, 530h
.text:0000183D                 push    edi
.text:0000183E                 lea     edi, [ebp+var_530]
.text:00001844                 mov     ecx, 14Ch
.text:00001849                 mov     eax, 0CCCCCCCCh
.text:0000184E                 rep stosd
.text:00001850                 mov     eax, dword ptr ds:___security_cookie
.text:00001855                 xor     eax, ebp
.text:00001857                 mov     [ebp+var_4], eax
.text:0000185A                 mov     [ebp+var_524], 0
.text:00001864                 mov     [ebp+var_528], 1
.text:0000186E                 jmp     short loc_187F
.text:00001870 ; ---------------------------------------------------------------------------
.text:00001870
.text:00001870 loc_1870:                               ; CODE XREF: _zlib_mktable+62j
.text:00001870                 mov     eax, [ebp+var_528]
.text:00001876                 add     eax, 1
.text:00001879                 mov     [ebp+var_528], eax
.text:0000187F
.text:0000187F loc_187F:                               ; CODE XREF: _zlib_mktable+3Aj
.text:0000187F                 cmp     [ebp+var_528], 10h
.text:00001886                 jge     short loc_1898
.text:00001888                 mov     ecx, [ebp+var_528]
.text:0000188E                 mov     [ebp+ecx*4+var_48], 0
.text:00001896                 jmp     short loc_1870
.text:00001898 ; ---------------------------------------------------------------------------
.text:00001898
.text:00001898 loc_1898:                               ; CODE XREF: _zlib_mktable+52j
.text:00001898                 mov     [ebp+var_528], 0
.text:000018A2                 jmp     short loc_18B3
.text:000018A4 ; ---------------------------------------------------------------------------
.text:000018A4
.text:000018A4 loc_18A4:                               ; CODE XREF: _zlib_mktable:loc_1907j
.text:000018A4                 mov     edx, [ebp+var_528]
.text:000018AA                 add     edx, 1
.text:000018AD                 mov     [ebp+var_528], edx
.text:000018B3
.text:000018B3 loc_18B3:                               ; CODE XREF: _zlib_mktable+6Ej
.text:000018B3                 mov     eax, [ebp+var_528]
.text:000018B9                 cmp     eax, [ebp+arg_4]
.text:000018BC                 jge     short loc_1909
.text:000018BE                 mov     ecx, [ebp+arg_0]
.text:000018C1                 add     ecx, [ebp+var_528]
.text:000018C7                 movzx   edx, byte ptr [ecx]
.text:000018CA                 mov     eax, [ebp+edx*4+var_48]
.text:000018CE                 add     eax, 1
.text:000018D1                 mov     ecx, [ebp+arg_0]
.text:000018D4                 add     ecx, [ebp+var_528]
.text:000018DA                 movzx   edx, byte ptr [ecx]
.text:000018DD                 mov     [ebp+edx*4+var_48], eax
.text:000018E1                 mov     eax, [ebp+arg_0]
.text:000018E4                 add     eax, [ebp+var_528]
.text:000018EA                 movzx   ecx, byte ptr [eax]
.text:000018ED                 cmp     [ebp+var_524], ecx
.text:000018F3                 jge     short loc_1907
.text:000018F5                 mov     edx, [ebp+arg_0]
.text:000018F8                 add     edx, [ebp+var_528]
.text:000018FE                 movzx   eax, byte ptr [edx]
.text:00001901                 mov     [ebp+var_524], eax
.text:00001907
.text:00001907 loc_1907:                               ; CODE XREF: _zlib_mktable+BFj
.text:00001907                 jmp     short loc_18A4
.text:00001909 ; ---------------------------------------------------------------------------
.text:00001909
.text:00001909 loc_1909:                               ; CODE XREF: _zlib_mktable+88j
.text:00001909                 mov     [ebp+var_520], 0
.text:00001913                 mov     [ebp+var_528], 1
.text:0000191D                 jmp     short loc_192E
.text:0000191F ; ---------------------------------------------------------------------------
.text:0000191F
.text:0000191F loc_191F:                               ; CODE XREF: _zlib_mktable+13Aj
.text:0000191F                 mov     ecx, [ebp+var_528]
.text:00001925                 add     ecx, 1
.text:00001928                 mov     [ebp+var_528], ecx
.text:0000192E
.text:0000192E loc_192E:                               ; CODE XREF: _zlib_mktable+E9j
.text:0000192E                 cmp     [ebp+var_528], 10h
.text:00001935                 jge     short loc_1970
.text:00001937                 mov     edx, [ebp+var_528]
.text:0000193D                 mov     eax, [ebp+var_520]
.text:00001943                 mov     [ebp+edx*4+var_90], eax
.text:0000194A                 mov     ecx, [ebp+var_528]
.text:00001950                 mov     edx, [ebp+var_520]
.text:00001956                 add     edx, [ebp+ecx*4+var_48]
.text:0000195A                 mov     [ebp+var_520], edx
.text:00001960                 mov     eax, [ebp+var_520]
.text:00001966                 shl     eax, 1
.text:00001968                 mov     [ebp+var_520], eax
.text:0000196E                 jmp     short loc_191F
.text:00001970 ; ---------------------------------------------------------------------------
.text:00001970
.text:00001970 loc_1970:                               ; CODE XREF: _zlib_mktable+101j
.text:00001970                 mov     [ebp+var_528], 0
.text:0000197A                 jmp     short loc_198B
.text:0000197C ; ---------------------------------------------------------------------------
.text:0000197C
.text:0000197C loc_197C:                               ; CODE XREF: _zlib_mktable:loc_1A53j
.text:0000197C                 mov     ecx, [ebp+var_528]
.text:00001982                 add     ecx, 1
.text:00001985                 mov     [ebp+var_528], ecx
.text:0000198B
.text:0000198B loc_198B:                               ; CODE XREF: _zlib_mktable+146j
.text:0000198B                 mov     edx, [ebp+var_528]
.text:00001991                 cmp     edx, [ebp+arg_4]
.text:00001994                 jge     loc_1A58
.text:0000199A                 mov     eax, [ebp+arg_0]
.text:0000199D                 add     eax, [ebp+var_528]
.text:000019A3                 movzx   ecx, byte ptr [eax]
.text:000019A6                 mov     edx, [ebp+ecx*4+var_90]
.text:000019AD                 mov     [ebp+var_520], edx
.text:000019B3                 mov     eax, [ebp+arg_0]
.text:000019B6                 add     eax, [ebp+var_528]
.text:000019BC                 movzx   ecx, byte ptr [eax]
.text:000019BF                 mov     edx, [ebp+ecx*4+var_90]
.text:000019C6                 add     edx, 1
.text:000019C9                 mov     eax, [ebp+arg_0]
.text:000019CC                 add     eax, [ebp+var_528]
.text:000019D2                 movzx   ecx, byte ptr [eax]
.text:000019D5                 mov     [ebp+ecx*4+var_90], edx
.text:000019DC                 mov     edx, [ebp+var_528]
.text:000019E2                 mov     [ebp+edx*4+var_518], 0
.text:000019ED                 mov     [ebp+var_52C], 0
.text:000019F7                 jmp     short loc_1A08
.text:000019F9 ; ---------------------------------------------------------------------------
.text:000019F9
.text:000019F9 loc_19F9:                               ; CODE XREF: _zlib_mktable+21Dj
.text:000019F9                 mov     eax, [ebp+var_52C]
.text:000019FF                 add     eax, 1
.text:00001A02                 mov     [ebp+var_52C], eax
.text:00001A08
.text:00001A08 loc_1A08:                               ; CODE XREF: _zlib_mktable+1C3j
.text:00001A08                 mov     ecx, [ebp+arg_0]
.text:00001A0B                 add     ecx, [ebp+var_528]
.text:00001A11                 movzx   edx, byte ptr [ecx]
.text:00001A14                 cmp     [ebp+var_52C], edx
.text:00001A1A                 jge     short loc_1A53
.text:00001A1C                 mov     eax, [ebp+var_528]
.text:00001A22                 mov     ecx, [ebp+eax*4+var_518]
.text:00001A29                 shl     ecx, 1
.text:00001A2B                 mov     edx, [ebp+var_520]
.text:00001A31                 and     edx, 1
.text:00001A34                 or      ecx, edx
.text:00001A36                 mov     eax, [ebp+var_528]
.text:00001A3C                 mov     [ebp+eax*4+var_518], ecx
.text:00001A43                 mov     ecx, [ebp+var_520]
.text:00001A49                 sar     ecx, 1
.text:00001A4B                 mov     [ebp+var_520], ecx
.text:00001A51                 jmp     short loc_19F9
.text:00001A53 ; ---------------------------------------------------------------------------
.text:00001A53
.text:00001A53 loc_1A53:                               ; CODE XREF: _zlib_mktable+1E6j
.text:00001A53                 jmp     loc_197C
.text:00001A58 ; ---------------------------------------------------------------------------
.text:00001A58
.text:00001A58 loc_1A58:                               ; CODE XREF: _zlib_mktable+160j
.text:00001A58                 cmp     [ebp+var_524], 9
.text:00001A5F                 jge     short loc_1A6F
.text:00001A61                 mov     edx, [ebp+var_524]
.text:00001A67                 mov     [ebp+var_530], edx
.text:00001A6D                 jmp     short loc_1A79
.text:00001A6F ; ---------------------------------------------------------------------------
.text:00001A6F
.text:00001A6F loc_1A6F:                               ; CODE XREF: _zlib_mktable+22Bj
.text:00001A6F                 mov     [ebp+var_530], 9
.text:00001A79
.text:00001A79 loc_1A79:                               ; CODE XREF: _zlib_mktable+239j
.text:00001A79                 mov     eax, [ebp+var_530]
.text:00001A7F                 push    eax
.text:00001A80                 push    0
.text:00001A82                 push    0
.text:00001A84                 mov     ecx, [ebp+arg_4]
.text:00001A87                 push    ecx
.text:00001A88                 mov     edx, [ebp+arg_0]
.text:00001A8B                 push    edx
.text:00001A8C                 lea     eax, [ebp+var_518]
.text:00001A92                 push    eax
.text:00001A93                 call    _zlib_mkonetab
.text:00001A98                 add     esp, 18h
.text:00001A9B                 push    edx
.text:00001A9C                 mov     ecx, ebp
.text:00001A9E                 push    eax
.text:00001A9F                 lea     edx, $LN25
.text:00001AA5                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00001AAA                 pop     eax
.text:00001AAB                 pop     edx
.text:00001AAC                 pop     edi
.text:00001AAD                 mov     ecx, [ebp+var_4]
.text:00001AB0                 xor     ecx, ebp
.text:00001AB2                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00001AB7                 add     esp, 530h
.text:00001ABD                 cmp     ebp, esp
.text:00001ABF                 call    __RTC_CheckEsp
.text:00001AC4                 mov     esp, ebp
.text:00001AC6                 pop     ebp
.text:00001AC7                 retn
.text:00001AC7 _zlib_mktable   endp
.text:00001AC7
.text:00001AC7 ; ---------------------------------------------------------------------------
.text:00001AC8 $LN25           dd 3                    ; DATA XREF: _zlib_mktable+26Bo
.text:00001ACC                 dd offset $LN24
.text:00001AD0 $LN24           dd 0FFFFFFB8h, 40h      ; DATA XREF: .text:00001ACCo
.text:00001AD8                 dd offset $LN21         ; "count"
.text:00001ADC                 dd 0FFFFFF70h, 40h
.text:00001AE4                 dd offset $LN22         ; "startcode"
.text:00001AE8                 dd 0FFFFFAE8h, 480h
.text:00001AF0                 dd offset $LN23         ; "codes"
.text:00001AF4 $LN23           db 'codes',0            ; DATA XREF: .text:00001AF0o
.text:00001AFA $LN22           db 'startcode',0        ; DATA XREF: .text:00001AE4o
.text:00001B04 $LN21           db 'count',0            ; DATA XREF: .text:00001AD8o
.text:00001B0A                 db 0Ah dup(0CCh)
.text:00001B14
.text:00001B14 ; =============== S U B R O U T I N E =======================================
.text:00001B14
.text:00001B14 ; Attributes: bp-based frame
.text:00001B14
.text:00001B14 _zlib_mkonetab  proc near               ; CODE XREF: _zlib_mktable+25Fp
.text:00001B14                                         ; _zlib_mkonetab+216p
.text:00001B14
.text:00001B14 var_18          = dword ptr -18h
.text:00001B14 var_14          = dword ptr -14h
.text:00001B14 var_10          = dword ptr -10h
.text:00001B14 var_C           = dword ptr -0Ch
.text:00001B14 var_8           = dword ptr -8
.text:00001B14 var_4           = dword ptr -4
.text:00001B14 arg_0           = dword ptr  8
.text:00001B14 arg_4           = dword ptr  0Ch
.text:00001B14 arg_8           = dword ptr  10h
.text:00001B14 arg_C           = dword ptr  14h
.text:00001B14 arg_10          = dword ptr  18h
.text:00001B14 arg_14          = dword ptr  1Ch
.text:00001B14
.text:00001B14                 push    ebp
.text:00001B15                 mov     ebp, esp
.text:00001B17                 sub     esp, 18h
.text:00001B1A                 mov     eax, 0CCCCCCCCh
.text:00001B1F                 mov     [ebp+var_18], eax
.text:00001B22                 mov     [ebp+var_14], eax
.text:00001B25                 mov     [ebp+var_10], eax
.text:00001B28                 mov     [ebp+var_C], eax
.text:00001B2B                 mov     [ebp+var_8], eax
.text:00001B2E                 mov     [ebp+var_4], eax
.text:00001B31                 push    8
.text:00001B33                 push    1
.text:00001B35                 call    _safemalloc
.text:00001B3A                 add     esp, 8
.text:00001B3D                 mov     [ebp+var_4], eax
.text:00001B40                 mov     eax, 1
.text:00001B45                 mov     ecx, [ebp+arg_10]
.text:00001B48                 shl     eax, cl
.text:00001B4A                 sub     eax, 1
.text:00001B4D                 mov     [ebp+var_8], eax
.text:00001B50                 push    8
.text:00001B52                 mov     edx, 1
.text:00001B57                 mov     ecx, [ebp+arg_14]
.text:00001B5A                 shl     edx, cl
.text:00001B5C                 push    edx
.text:00001B5D                 call    _safemalloc
.text:00001B62                 add     esp, 8
.text:00001B65                 mov     ecx, [ebp+var_4]
.text:00001B68                 mov     [ecx+4], eax
.text:00001B6B                 mov     edx, 1
.text:00001B70                 mov     ecx, [ebp+arg_14]
.text:00001B73                 shl     edx, cl
.text:00001B75                 sub     edx, 1
.text:00001B78                 mov     eax, [ebp+var_4]
.text:00001B7B                 mov     [eax], edx
.text:00001B7D                 mov     [ebp+var_18], 0
.text:00001B84                 jmp     short loc_1B8F
.text:00001B86 ; ---------------------------------------------------------------------------
.text:00001B86
.text:00001B86 loc_1B86:                               ; CODE XREF: _zlib_mkonetab+B4j
.text:00001B86                 mov     ecx, [ebp+var_18]
.text:00001B89                 add     ecx, 1
.text:00001B8C                 mov     [ebp+var_18], ecx
.text:00001B8F
.text:00001B8F loc_1B8F:                               ; CODE XREF: _zlib_mkonetab+70j
.text:00001B8F                 mov     edx, [ebp+var_4]
.text:00001B92                 mov     eax, [ebp+var_18]
.text:00001B95                 cmp     eax, [edx]
.text:00001B97                 jg      short loc_1BCA
.text:00001B99                 mov     ecx, [ebp+var_4]
.text:00001B9C                 mov     edx, [ecx+4]
.text:00001B9F                 or      eax, 0FFFFFFFFh
.text:00001BA2                 mov     ecx, [ebp+var_18]
.text:00001BA5                 mov     [edx+ecx*8+2], ax
.text:00001BAA                 mov     edx, [ebp+var_4]
.text:00001BAD                 mov     eax, [edx+4]
.text:00001BB0                 mov     ecx, [ebp+var_18]
.text:00001BB3                 mov     byte ptr [eax+ecx*8], 0
.text:00001BB7                 mov     edx, [ebp+var_4]
.text:00001BBA                 mov     eax, [edx+4]
.text:00001BBD                 mov     ecx, [ebp+var_18]
.text:00001BC0                 mov     dword ptr [eax+ecx*8+4], 0
.text:00001BC8                 jmp     short loc_1B86
.text:00001BCA ; ---------------------------------------------------------------------------
.text:00001BCA
.text:00001BCA loc_1BCA:                               ; CODE XREF: _zlib_mkonetab+83j
.text:00001BCA                 mov     [ebp+var_10], 0
.text:00001BD1                 jmp     short loc_1BDC
.text:00001BD3 ; ---------------------------------------------------------------------------
.text:00001BD3
.text:00001BD3 loc_1BD3:                               ; CODE XREF: _zlib_mkonetab:loc_1C07j
.text:00001BD3                                         ; _zlib_mkonetab:loc_1C8Ej
.text:00001BD3                 mov     edx, [ebp+var_10]
.text:00001BD6                 add     edx, 1
.text:00001BD9                 mov     [ebp+var_10], edx
.text:00001BDC
.text:00001BDC loc_1BDC:                               ; CODE XREF: _zlib_mkonetab+BDj
.text:00001BDC                 mov     eax, [ebp+var_10]
.text:00001BDF                 cmp     eax, [ebp+arg_8]
.text:00001BE2                 jge     loc_1C93
.text:00001BE8                 mov     ecx, [ebp+arg_4]
.text:00001BEB                 add     ecx, [ebp+var_10]
.text:00001BEE                 movzx   edx, byte ptr [ecx]
.text:00001BF1                 cmp     edx, [ebp+arg_10]
.text:00001BF4                 jle     short loc_1C07
.text:00001BF6                 mov     eax, [ebp+var_10]
.text:00001BF9                 mov     ecx, [ebp+arg_0]
.text:00001BFC                 mov     edx, [ecx+eax*4]
.text:00001BFF                 and     edx, [ebp+var_8]
.text:00001C02                 cmp     edx, [ebp+arg_C]
.text:00001C05                 jz      short loc_1C09
.text:00001C07
.text:00001C07 loc_1C07:                               ; CODE XREF: _zlib_mkonetab+E0j
.text:00001C07                 jmp     short loc_1BD3
.text:00001C09 ; ---------------------------------------------------------------------------
.text:00001C09
.text:00001C09 loc_1C09:                               ; CODE XREF: _zlib_mkonetab+F1j
.text:00001C09                 mov     eax, [ebp+var_10]
.text:00001C0C                 mov     ecx, [ebp+arg_0]
.text:00001C0F                 mov     edx, [ecx+eax*4]
.text:00001C12                 mov     ecx, [ebp+arg_10]
.text:00001C15                 sar     edx, cl
.text:00001C17                 mov     eax, [ebp+var_4]
.text:00001C1A                 and     edx, [eax]
.text:00001C1C                 mov     [ebp+var_18], edx
.text:00001C1F                 mov     ecx, [ebp+var_18]
.text:00001C22                 mov     [ebp+var_14], ecx
.text:00001C25                 jmp     short loc_1C40
.text:00001C27 ; ---------------------------------------------------------------------------
.text:00001C27
.text:00001C27 loc_1C27:                               ; CODE XREF: _zlib_mkonetab:loc_1C8Cj
.text:00001C27                 mov     edx, [ebp+arg_4]
.text:00001C2A                 add     edx, [ebp+var_10]
.text:00001C2D                 movzx   ecx, byte ptr [edx]
.text:00001C30                 sub     ecx, [ebp+arg_10]
.text:00001C33                 mov     eax, 1
.text:00001C38                 shl     eax, cl
.text:00001C3A                 add     eax, [ebp+var_14]
.text:00001C3D                 mov     [ebp+var_14], eax
.text:00001C40
.text:00001C40 loc_1C40:                               ; CODE XREF: _zlib_mkonetab+111j
.text:00001C40                 mov     ecx, [ebp+var_4]
.text:00001C43                 mov     edx, [ebp+var_14]
.text:00001C46                 cmp     edx, [ecx]
.text:00001C48                 jg      short loc_1C8E
.text:00001C4A                 mov     eax, [ebp+var_4]
.text:00001C4D                 mov     ecx, [eax+4]
.text:00001C50                 mov     edx, [ebp+var_14]
.text:00001C53                 mov     ax, word ptr [ebp+var_10]
.text:00001C57                 mov     [ecx+edx*8+2], ax
.text:00001C5C                 mov     ecx, [ebp+arg_4]
.text:00001C5F                 add     ecx, [ebp+var_10]
.text:00001C62                 movzx   edx, byte ptr [ecx]
.text:00001C65                 sub     edx, [ebp+arg_10]
.text:00001C68                 mov     [ebp+var_C], edx
.text:00001C6B                 mov     eax, [ebp+var_4]
.text:00001C6E                 mov     ecx, [eax+4]
.text:00001C71                 mov     edx, [ebp+var_14]
.text:00001C74                 movzx   eax, byte ptr [ecx+edx*8]
.text:00001C78                 cmp     eax, [ebp+var_C]
.text:00001C7B                 jge     short loc_1C8C
.text:00001C7D                 mov     ecx, [ebp+var_4]
.text:00001C80                 mov     edx, [ecx+4]
.text:00001C83                 mov     eax, [ebp+var_14]
.text:00001C86                 mov     cl, byte ptr [ebp+var_C]
.text:00001C89                 mov     [edx+eax*8], cl
.text:00001C8C
.text:00001C8C loc_1C8C:                               ; CODE XREF: _zlib_mkonetab+167j
.text:00001C8C                 jmp     short loc_1C27
.text:00001C8E ; ---------------------------------------------------------------------------
.text:00001C8E
.text:00001C8E loc_1C8E:                               ; CODE XREF: _zlib_mkonetab+134j
.text:00001C8E                 jmp     loc_1BD3
.text:00001C93 ; ---------------------------------------------------------------------------
.text:00001C93
.text:00001C93 loc_1C93:                               ; CODE XREF: _zlib_mkonetab+CEj
.text:00001C93                 mov     [ebp+var_18], 0
.text:00001C9A                 jmp     short loc_1CA5
.text:00001C9C ; ---------------------------------------------------------------------------
.text:00001C9C
.text:00001C9C loc_1C9C:                               ; CODE XREF: _zlib_mkonetab+1B1j
.text:00001C9C                                         ; _zlib_mkonetab+22Bj
.text:00001C9C                 mov     edx, [ebp+var_18]
.text:00001C9F                 add     edx, 1
.text:00001CA2                 mov     [ebp+var_18], edx
.text:00001CA5
.text:00001CA5 loc_1CA5:                               ; CODE XREF: _zlib_mkonetab+186j
.text:00001CA5                 mov     eax, [ebp+var_4]
.text:00001CA8                 mov     ecx, [ebp+var_18]
.text:00001CAB                 cmp     ecx, [eax]
.text:00001CAD                 jg      loc_1D44
.text:00001CB3                 mov     edx, [ebp+var_4]
.text:00001CB6                 mov     eax, [edx+4]
.text:00001CB9                 mov     ecx, [ebp+var_18]
.text:00001CBC                 movzx   edx, byte ptr [eax+ecx*8]
.text:00001CC0                 cmp     edx, [ebp+arg_14]
.text:00001CC3                 jg      short loc_1CC7
.text:00001CC5                 jmp     short loc_1C9C
.text:00001CC7 ; ---------------------------------------------------------------------------
.text:00001CC7
.text:00001CC7 loc_1CC7:                               ; CODE XREF: _zlib_mkonetab+1AFj
.text:00001CC7                 mov     eax, [ebp+var_4]
.text:00001CCA                 mov     ecx, [eax+4]
.text:00001CCD                 or      edx, 0FFFFFFFFh
.text:00001CD0                 mov     eax, [ebp+var_18]
.text:00001CD3                 mov     [ecx+eax*8+2], dx
.text:00001CD8                 mov     ecx, [ebp+var_4]
.text:00001CDB                 mov     edx, [ecx+4]
.text:00001CDE                 mov     eax, [ebp+var_18]
.text:00001CE1                 movzx   ecx, byte ptr [edx+eax*8]
.text:00001CE5                 sub     ecx, [ebp+arg_14]
.text:00001CE8                 mov     [ebp+var_C], ecx
.text:00001CEB                 cmp     [ebp+var_C], 7
.text:00001CEF                 jle     short loc_1CF8
.text:00001CF1                 mov     [ebp+var_C], 7
.text:00001CF8
.text:00001CF8 loc_1CF8:                               ; CODE XREF: _zlib_mkonetab+1DBj
.text:00001CF8                 mov     edx, [ebp+var_4]
.text:00001CFB                 mov     eax, [edx+4]
.text:00001CFE                 mov     ecx, [ebp+var_18]
.text:00001D01                 mov     dl, byte ptr [ebp+arg_14]
.text:00001D04                 mov     [eax+ecx*8], dl
.text:00001D07                 mov     eax, [ebp+var_C]
.text:00001D0A                 push    eax
.text:00001D0B                 mov     ecx, [ebp+arg_10]
.text:00001D0E                 add     ecx, [ebp+arg_14]
.text:00001D11                 push    ecx
.text:00001D12                 mov     edx, [ebp+var_18]
.text:00001D15                 mov     ecx, [ebp+arg_10]
.text:00001D18                 shl     edx, cl
.text:00001D1A                 or      edx, [ebp+arg_C]
.text:00001D1D                 push    edx
.text:00001D1E                 mov     eax, [ebp+arg_8]
.text:00001D21                 push    eax
.text:00001D22                 mov     ecx, [ebp+arg_4]
.text:00001D25                 push    ecx
.text:00001D26                 mov     edx, [ebp+arg_0]
.text:00001D29                 push    edx
.text:00001D2A                 call    _zlib_mkonetab
.text:00001D2F                 add     esp, 18h
.text:00001D32                 mov     ecx, [ebp+var_4]
.text:00001D35                 mov     edx, [ecx+4]
.text:00001D38                 mov     ecx, [ebp+var_18]
.text:00001D3B                 mov     [edx+ecx*8+4], eax
.text:00001D3F                 jmp     loc_1C9C
.text:00001D44 ; ---------------------------------------------------------------------------
.text:00001D44
.text:00001D44 loc_1D44:                               ; CODE XREF: _zlib_mkonetab+199j
.text:00001D44                 mov     eax, [ebp+var_4]
.text:00001D47                 add     esp, 18h
.text:00001D4A                 cmp     ebp, esp
.text:00001D4C                 call    __RTC_CheckEsp
.text:00001D51                 mov     esp, ebp
.text:00001D53                 pop     ebp
.text:00001D54                 retn
.text:00001D54 _zlib_mkonetab  endp
.text:00001D54
.text:00001D54 ; ---------------------------------------------------------------------------
.text:00001D55                 db 0Fh dup(0CCh)
.text:00001D64
.text:00001D64 ; =============== S U B R O U T I N E =======================================
.text:00001D64
.text:00001D64 ; Attributes: bp-based frame
.text:00001D64
.text:00001D64                 public _zlib_decompress_cleanup
.text:00001D64 _zlib_decompress_cleanup proc near      ; DATA XREF: .rdata:00000604o
.text:00001D64
.text:00001D64 var_4           = dword ptr -4
.text:00001D64 arg_0           = dword ptr  8
.text:00001D64
.text:00001D64                 push    ebp
.text:00001D65                 mov     ebp, esp
.text:00001D67                 push    ecx
.text:00001D68                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00001D6F                 mov     eax, [ebp+arg_0]
.text:00001D72                 mov     [ebp+var_4], eax
.text:00001D75                 mov     ecx, [ebp+var_4]
.text:00001D78                 cmp     dword ptr [ecx+8], 0
.text:00001D7C                 jz      short loc_1D9A
.text:00001D7E                 mov     edx, [ebp+var_4]
.text:00001D81                 mov     eax, [ebp+var_4]
.text:00001D84                 mov     ecx, [edx+8]
.text:00001D87                 cmp     ecx, [eax]
.text:00001D89                 jz      short loc_1D9A
.text:00001D8B                 mov     edx, [ebp+var_4]
.text:00001D8E                 add     edx, 8
.text:00001D91                 push    edx
.text:00001D92                 call    _zlib_freetable
.text:00001D97                 add     esp, 4
.text:00001D9A
.text:00001D9A loc_1D9A:                               ; CODE XREF: _zlib_decompress_cleanup+18j
.text:00001D9A                                         ; _zlib_decompress_cleanup+25j
.text:00001D9A                 mov     eax, [ebp+var_4]
.text:00001D9D                 cmp     dword ptr [eax+0Ch], 0
.text:00001DA1                 jz      short loc_1DC0
.text:00001DA3                 mov     ecx, [ebp+var_4]
.text:00001DA6                 mov     edx, [ebp+var_4]
.text:00001DA9                 mov     eax, [ecx+0Ch]
.text:00001DAC                 cmp     eax, [edx+4]
.text:00001DAF                 jz      short loc_1DC0
.text:00001DB1                 mov     ecx, [ebp+var_4]
.text:00001DB4                 add     ecx, 0Ch
.text:00001DB7                 push    ecx
.text:00001DB8                 call    _zlib_freetable
.text:00001DBD                 add     esp, 4
.text:00001DC0
.text:00001DC0 loc_1DC0:                               ; CODE XREF: _zlib_decompress_cleanup+3Dj
.text:00001DC0                                         ; _zlib_decompress_cleanup+4Bj
.text:00001DC0                 mov     edx, [ebp+var_4]
.text:00001DC3                 cmp     dword ptr [edx+10h], 0
.text:00001DC7                 jz      short loc_1DD8
.text:00001DC9                 mov     eax, [ebp+var_4]
.text:00001DCC                 add     eax, 10h
.text:00001DCF                 push    eax
.text:00001DD0                 call    _zlib_freetable
.text:00001DD5                 add     esp, 4
.text:00001DD8
.text:00001DD8 loc_1DD8:                               ; CODE XREF: _zlib_decompress_cleanup+63j
.text:00001DD8                 mov     ecx, [ebp+var_4]
.text:00001DDB                 push    ecx
.text:00001DDC                 call    _zlib_freetable
.text:00001DE1                 add     esp, 4
.text:00001DE4                 mov     edx, [ebp+var_4]
.text:00001DE7                 add     edx, 4
.text:00001DEA                 push    edx
.text:00001DEB                 call    _zlib_freetable
.text:00001DF0                 add     esp, 4
.text:00001DF3                 mov     eax, [ebp+var_4]
.text:00001DF6                 push    eax
.text:00001DF7                 call    _safefree
.text:00001DFC                 add     esp, 4
.text:00001DFF                 add     esp, 4
.text:00001E02                 cmp     ebp, esp
.text:00001E04                 call    __RTC_CheckEsp
.text:00001E09                 mov     esp, ebp
.text:00001E0B                 pop     ebp
.text:00001E0C                 retn
.text:00001E0C _zlib_decompress_cleanup endp
.text:00001E0C
.text:00001E0C ; ---------------------------------------------------------------------------
.text:00001E0D                 db 7 dup(0CCh)
.text:00001E14
.text:00001E14 ; =============== S U B R O U T I N E =======================================
.text:00001E14
.text:00001E14 ; Attributes: bp-based frame
.text:00001E14
.text:00001E14 _zlib_freetable proc near               ; CODE XREF: _zlib_decompress_cleanup+2Ep
.text:00001E14                                         ; _zlib_decompress_cleanup+54p ...
.text:00001E14
.text:00001E14 var_8           = dword ptr -8
.text:00001E14 var_4           = dword ptr -4
.text:00001E14 arg_0           = dword ptr  8
.text:00001E14
.text:00001E14                 push    ebp
.text:00001E15                 mov     ebp, esp
.text:00001E17                 sub     esp, 8
.text:00001E1A                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00001E21                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00001E28                 cmp     [ebp+arg_0], 0
.text:00001E2C                 jnz     short loc_1E36
.text:00001E2E                 or      eax, 0FFFFFFFFh
.text:00001E31                 jmp     loc_1EBE
.text:00001E36 ; ---------------------------------------------------------------------------
.text:00001E36
.text:00001E36 loc_1E36:                               ; CODE XREF: _zlib_freetable+18j
.text:00001E36                 mov     eax, [ebp+arg_0]
.text:00001E39                 cmp     dword ptr [eax], 0
.text:00001E3C                 jnz     short loc_1E42
.text:00001E3E                 xor     eax, eax
.text:00001E40                 jmp     short loc_1EBE
.text:00001E42 ; ---------------------------------------------------------------------------
.text:00001E42
.text:00001E42 loc_1E42:                               ; CODE XREF: _zlib_freetable+28j
.text:00001E42                 mov     ecx, [ebp+arg_0]
.text:00001E45                 mov     edx, [ecx]
.text:00001E47                 mov     [ebp+var_4], edx
.text:00001E4A                 mov     [ebp+var_8], 0
.text:00001E51                 jmp     short loc_1E5C
.text:00001E53 ; ---------------------------------------------------------------------------
.text:00001E53
.text:00001E53 loc_1E53:                               ; CODE XREF: _zlib_freetable:loc_1E8Cj
.text:00001E53                 mov     eax, [ebp+var_8]
.text:00001E56                 add     eax, 1
.text:00001E59                 mov     [ebp+var_8], eax
.text:00001E5C
.text:00001E5C loc_1E5C:                               ; CODE XREF: _zlib_freetable+3Dj
.text:00001E5C                 mov     ecx, [ebp+var_4]
.text:00001E5F                 mov     edx, [ebp+var_8]
.text:00001E62                 cmp     edx, [ecx]
.text:00001E64                 jg      short loc_1E8E
.text:00001E66                 mov     eax, [ebp+var_4]
.text:00001E69                 mov     ecx, [eax+4]
.text:00001E6C                 mov     edx, [ebp+var_8]
.text:00001E6F                 cmp     dword ptr [ecx+edx*8+4], 0
.text:00001E74                 jz      short loc_1E8C
.text:00001E76                 mov     eax, [ebp+var_4]
.text:00001E79                 mov     ecx, [eax+4]
.text:00001E7C                 mov     edx, [ebp+var_8]
.text:00001E7F                 lea     eax, [ecx+edx*8+4]
.text:00001E83                 push    eax
.text:00001E84                 call    _zlib_freetable
.text:00001E89                 add     esp, 4
.text:00001E8C
.text:00001E8C loc_1E8C:                               ; CODE XREF: _zlib_freetable+60j
.text:00001E8C                 jmp     short loc_1E53
.text:00001E8E ; ---------------------------------------------------------------------------
.text:00001E8E
.text:00001E8E loc_1E8E:                               ; CODE XREF: _zlib_freetable+50j
.text:00001E8E                 mov     ecx, [ebp+var_4]
.text:00001E91                 mov     edx, [ecx+4]
.text:00001E94                 push    edx
.text:00001E95                 call    _safefree
.text:00001E9A                 add     esp, 4
.text:00001E9D                 mov     eax, [ebp+var_4]
.text:00001EA0                 mov     dword ptr [eax+4], 0
.text:00001EA7                 mov     ecx, [ebp+var_4]
.text:00001EAA                 push    ecx
.text:00001EAB                 call    _safefree
.text:00001EB0                 add     esp, 4
.text:00001EB3                 mov     edx, [ebp+arg_0]
.text:00001EB6                 mov     dword ptr [edx], 0
.text:00001EBC                 xor     eax, eax
.text:00001EBE
.text:00001EBE loc_1EBE:                               ; CODE XREF: _zlib_freetable+1Dj
.text:00001EBE                                         ; _zlib_freetable+2Cj
.text:00001EBE                 add     esp, 8
.text:00001EC1                 cmp     ebp, esp
.text:00001EC3                 call    __RTC_CheckEsp
.text:00001EC8                 mov     esp, ebp
.text:00001ECA                 pop     ebp
.text:00001ECB                 retn
.text:00001ECB _zlib_freetable endp
.text:00001ECB
.text:00001ECB ; ---------------------------------------------------------------------------
.text:00001ECC                 db 8 dup(0CCh)
.text:00001ED4
.text:00001ED4 ; =============== S U B R O U T I N E =======================================
.text:00001ED4
.text:00001ED4 ; Attributes: bp-based frame
.text:00001ED4
.text:00001ED4                 public _zlib_decompress_block
.text:00001ED4 _zlib_decompress_block proc near        ; DATA XREF: .rdata:00000608o
.text:00001ED4
.text:00001ED4 var_38          = dword ptr -38h
.text:00001ED4 var_34          = dword ptr -34h
.text:00001ED4 var_30          = dword ptr -30h
.text:00001ED4 var_2C          = dword ptr -2Ch
.text:00001ED4 var_28          = dword ptr -28h
.text:00001ED4 var_24          = dword ptr -24h
.text:00001ED4 var_20          = dword ptr -20h
.text:00001ED4 var_1C          = dword ptr -1Ch
.text:00001ED4 var_18          = dword ptr -18h
.text:00001ED4 var_14          = dword ptr -14h
.text:00001ED4 var_10          = dword ptr -10h
.text:00001ED4 var_C           = dword ptr -0Ch
.text:00001ED4 var_8           = dword ptr -8
.text:00001ED4 var_4           = dword ptr -4
.text:00001ED4 arg_0           = dword ptr  8
.text:00001ED4 arg_4           = dword ptr  0Ch
.text:00001ED4 arg_8           = dword ptr  10h
.text:00001ED4 arg_C           = dword ptr  14h
.text:00001ED4 arg_10          = dword ptr  18h
.text:00001ED4
.text:00001ED4                 push    ebp
.text:00001ED5                 mov     ebp, esp
.text:00001ED7                 sub     esp, 38h
.text:00001EDA                 push    edi
.text:00001EDB                 lea     edi, [ebp+var_38]
.text:00001EDE                 mov     ecx, 0Eh
.text:00001EE3                 mov     eax, 0CCCCCCCCh
.text:00001EE8                 rep stosd
.text:00001EEA                 mov     eax, [ebp+arg_0]
.text:00001EED                 mov     [ebp+var_4], eax
.text:00001EF0                 push    1
.text:00001EF2                 push    100h
.text:00001EF7                 call    _safemalloc
.text:00001EFC                 add     esp, 8
.text:00001EFF                 mov     ecx, [ebp+var_4]
.text:00001F02                 mov     [ecx+81A0h], eax
.text:00001F08                 mov     edx, [ebp+var_4]
.text:00001F0B                 mov     dword ptr [edx+81A8h], 100h
.text:00001F15                 mov     eax, [ebp+var_4]
.text:00001F18                 mov     dword ptr [eax+81A4h], 0
.text:00001F22
.text:00001F22 loc_1F22:                               ; CODE XREF: _zlib_decompress_block:loc_2946j
.text:00001F22                 cmp     [ebp+arg_8], 0
.text:00001F26                 jg      short loc_1F38
.text:00001F28                 mov     ecx, [ebp+var_4]
.text:00001F2B                 cmp     dword ptr [ecx+198h], 0
.text:00001F32                 jle     $finished$7660
.text:00001F38
.text:00001F38 loc_1F38:                               ; CODE XREF: _zlib_decompress_block+52j
.text:00001F38                                         ; _zlib_decompress_block+C0j
.text:00001F38                 mov     edx, [ebp+var_4]
.text:00001F3B                 cmp     dword ptr [edx+198h], 18h
.text:00001F42                 jge     short loc_1F96
.text:00001F44                 cmp     [ebp+arg_8], 0
.text:00001F48                 jle     short loc_1F96
.text:00001F4A                 mov     eax, [ebp+arg_4]
.text:00001F4D                 movzx   edx, byte ptr [eax]
.text:00001F50                 mov     eax, [ebp+var_4]
.text:00001F53                 mov     ecx, [eax+198h]
.text:00001F59                 shl     edx, cl
.text:00001F5B                 mov     ecx, [ebp+var_4]
.text:00001F5E                 or      edx, [ecx+194h]
.text:00001F64                 mov     eax, [ebp+var_4]
.text:00001F67                 mov     [eax+194h], edx
.text:00001F6D                 mov     ecx, [ebp+arg_4]
.text:00001F70                 add     ecx, 1
.text:00001F73                 mov     [ebp+arg_4], ecx
.text:00001F76                 mov     edx, [ebp+var_4]
.text:00001F79                 mov     eax, [edx+198h]
.text:00001F7F                 add     eax, 8
.text:00001F82                 mov     ecx, [ebp+var_4]
.text:00001F85                 mov     [ecx+198h], eax
.text:00001F8B                 mov     edx, [ebp+arg_8]
.text:00001F8E                 sub     edx, 1
.text:00001F91                 mov     [ebp+arg_8], edx
.text:00001F94                 jmp     short loc_1F38
.text:00001F96 ; ---------------------------------------------------------------------------
.text:00001F96
.text:00001F96 loc_1F96:                               ; CODE XREF: _zlib_decompress_block+6Ej
.text:00001F96                                         ; _zlib_decompress_block+74j
.text:00001F96                 mov     eax, [ebp+var_4]
.text:00001F99                 mov     ecx, [eax+14h]
.text:00001F9C                 mov     [ebp+var_28], ecx
.text:00001F9F                 cmp     [ebp+var_28], 0Ch ; switch 13 cases
.text:00001FA3                 ja      loc_2946        ; jumptable 00001FAC default case
.text:00001FA9                 mov     edx, [ebp+var_28]
.text:00001FAC                 jmp     ds:$LN72[edx*4] ; switch jump
.text:00001FB3 ; ---------------------------------------------------------------------------
.text:00001FB3
.text:00001FB3 $LN58_0:                                ; CODE XREF: _zlib_decompress_block+D8j
.text:00001FB3                                         ; DATA XREF: .text:$LN72o
.text:00001FB3                 mov     eax, [ebp+var_4] ; jumptable 00001FAC case 0
.text:00001FB6                 cmp     dword ptr [eax+198h], 10h
.text:00001FBD                 jge     short loc_1FC4
.text:00001FBF                 jmp     $finished$7660
.text:00001FC4 ; ---------------------------------------------------------------------------
.text:00001FC4
.text:00001FC4 loc_1FC4:                               ; CODE XREF: _zlib_decompress_block+E9j
.text:00001FC4                 mov     ecx, [ebp+var_4]
.text:00001FC7                 mov     edx, [ecx+194h]
.text:00001FCD                 and     edx, 0FF00h
.text:00001FD3                 shr     edx, 8
.text:00001FD6                 mov     eax, [ebp+var_4]
.text:00001FD9                 mov     ecx, [eax+194h]
.text:00001FDF                 and     ecx, 0FFh
.text:00001FE5                 shl     ecx, 8
.text:00001FE8                 or      edx, ecx
.text:00001FEA                 mov     [ebp+var_20], edx
.text:00001FED                 mov     edx, [ebp+var_4]
.text:00001FF0                 mov     eax, [edx+198h]
.text:00001FF6                 sub     eax, 10h
.text:00001FF9                 mov     ecx, [ebp+var_4]
.text:00001FFC                 mov     [ecx+198h], eax
.text:00002002                 mov     edx, [ebp+var_4]
.text:00002005                 mov     eax, [edx+194h]
.text:0000200B                 shr     eax, 10h
.text:0000200E                 mov     ecx, [ebp+var_4]
.text:00002011                 mov     [ecx+194h], eax
.text:00002017                 mov     edx, [ebp+var_20]
.text:0000201A                 and     edx, 0F00h
.text:00002020                 cmp     edx, 800h
.text:00002026                 jnz     short loc_204E
.text:00002028                 mov     eax, [ebp+var_20]
.text:0000202B                 and     eax, 0F000h
.text:00002030                 cmp     eax, 7000h
.text:00002035                 jg      short loc_204E
.text:00002037                 mov     ecx, [ebp+var_20]
.text:0000203A                 and     ecx, 20h
.text:0000203D                 jnz     short loc_204E
.text:0000203F                 mov     eax, [ebp+var_20]
.text:00002042                 cdq
.text:00002043                 mov     ecx, 1Fh
.text:00002048                 idiv    ecx
.text:0000204A                 test    edx, edx
.text:0000204C                 jz      short loc_2053
.text:0000204E
.text:0000204E loc_204E:                               ; CODE XREF: _zlib_decompress_block+152j
.text:0000204E                                         ; _zlib_decompress_block+161j ...
.text:0000204E                 jmp     $decode_error$7663
.text:00002053 ; ---------------------------------------------------------------------------
.text:00002053
.text:00002053 loc_2053:                               ; CODE XREF: _zlib_decompress_block+178j
.text:00002053                 mov     edx, [ebp+var_4]
.text:00002056                 mov     dword ptr [edx+14h], 1
.text:0000205D                 jmp     loc_2946        ; jumptable 00001FAC default case
.text:00002062 ; ---------------------------------------------------------------------------
.text:00002062
.text:00002062 $LN54:                                  ; CODE XREF: _zlib_decompress_block+D8j
.text:00002062                                         ; DATA XREF: .text:$LN72o
.text:00002062                 mov     eax, [ebp+var_4] ; jumptable 00001FAC case 1
.text:00002065                 cmp     dword ptr [eax+198h], 3
.text:0000206C                 jge     short loc_2073
.text:0000206E                 jmp     $finished$7660
.text:00002073 ; ---------------------------------------------------------------------------
.text:00002073
.text:00002073 loc_2073:                               ; CODE XREF: _zlib_decompress_block+198j
.text:00002073                 mov     ecx, [ebp+var_4]
.text:00002076                 mov     edx, [ecx+198h]
.text:0000207C                 sub     edx, 1
.text:0000207F                 mov     eax, [ebp+var_4]
.text:00002082                 mov     [eax+198h], edx
.text:00002088                 mov     ecx, [ebp+var_4]
.text:0000208B                 mov     edx, [ecx+194h]
.text:00002091                 shr     edx, 1
.text:00002093                 mov     eax, [ebp+var_4]
.text:00002096                 mov     [eax+194h], edx
.text:0000209C                 mov     ecx, [ebp+var_4]
.text:0000209F                 mov     edx, [ecx+194h]
.text:000020A5                 and     edx, 3
.text:000020A8                 mov     [ebp+var_10], edx
.text:000020AB                 mov     eax, [ebp+var_4]
.text:000020AE                 mov     ecx, [eax+198h]
.text:000020B4                 sub     ecx, 2
.text:000020B7                 mov     edx, [ebp+var_4]
.text:000020BA                 mov     [edx+198h], ecx
.text:000020C0                 mov     eax, [ebp+var_4]
.text:000020C3                 mov     ecx, [eax+194h]
.text:000020C9                 shr     ecx, 2
.text:000020CC                 mov     edx, [ebp+var_4]
.text:000020CF                 mov     [edx+194h], ecx
.text:000020D5                 cmp     [ebp+var_10], 0
.text:000020D9                 jnz     short loc_2122
.text:000020DB                 mov     eax, [ebp+var_4]
.text:000020DE                 mov     ecx, [eax+198h]
.text:000020E4                 and     ecx, 7
.text:000020E7                 mov     [ebp+var_24], ecx
.text:000020EA                 mov     edx, [ebp+var_4]
.text:000020ED                 mov     dword ptr [edx+14h], 0Ah
.text:000020F4                 mov     eax, [ebp+var_4]
.text:000020F7                 mov     ecx, [eax+198h]
.text:000020FD                 sub     ecx, [ebp+var_24]
.text:00002100                 mov     edx, [ebp+var_4]
.text:00002103                 mov     [edx+198h], ecx
.text:00002109                 mov     eax, [ebp+var_4]
.text:0000210C                 mov     edx, [eax+194h]
.text:00002112                 mov     ecx, [ebp+var_24]
.text:00002115                 shr     edx, cl
.text:00002117                 mov     eax, [ebp+var_4]
.text:0000211A                 mov     [eax+194h], edx
.text:00002120                 jmp     short loc_215B
.text:00002122 ; ---------------------------------------------------------------------------
.text:00002122
.text:00002122 loc_2122:                               ; CODE XREF: _zlib_decompress_block+205j
.text:00002122                 cmp     [ebp+var_10], 1
.text:00002126                 jnz     short loc_214B
.text:00002128                 mov     ecx, [ebp+var_4]
.text:0000212B                 mov     edx, [ebp+var_4]
.text:0000212E                 mov     eax, [edx]
.text:00002130                 mov     [ecx+8], eax
.text:00002133                 mov     ecx, [ebp+var_4]
.text:00002136                 mov     edx, [ebp+var_4]
.text:00002139                 mov     eax, [edx+4]
.text:0000213C                 mov     [ecx+0Ch], eax
.text:0000213F                 mov     ecx, [ebp+var_4]
.text:00002142                 mov     dword ptr [ecx+14h], 6
.text:00002149                 jmp     short loc_215B
.text:0000214B ; ---------------------------------------------------------------------------
.text:0000214B
.text:0000214B loc_214B:                               ; CODE XREF: _zlib_decompress_block+252j
.text:0000214B                 cmp     [ebp+var_10], 2
.text:0000214F                 jnz     short loc_215B
.text:00002151                 mov     edx, [ebp+var_4]
.text:00002154                 mov     dword ptr [edx+14h], 2
.text:0000215B
.text:0000215B loc_215B:                               ; CODE XREF: _zlib_decompress_block+24Cj
.text:0000215B                                         ; _zlib_decompress_block+275j ...
.text:0000215B                 jmp     loc_2946        ; jumptable 00001FAC default case
.text:00002160 ; ---------------------------------------------------------------------------
.text:00002160
.text:00002160 $LN47:                                  ; CODE XREF: _zlib_decompress_block+D8j
.text:00002160                                         ; DATA XREF: .text:$LN72o
.text:00002160                 mov     eax, [ebp+var_4] ; jumptable 00001FAC case 2
.text:00002163                 cmp     dword ptr [eax+198h], 0Eh
.text:0000216A                 jge     short loc_2171
.text:0000216C                 jmp     $finished$7660
.text:00002171 ; ---------------------------------------------------------------------------
.text:00002171
.text:00002171 loc_2171:                               ; CODE XREF: _zlib_decompress_block+296j
.text:00002171                 mov     ecx, [ebp+var_4]
.text:00002174                 mov     edx, [ecx+194h]
.text:0000217A                 and     edx, 1Fh
.text:0000217D                 add     edx, 101h
.text:00002183                 mov     eax, [ebp+var_4]
.text:00002186                 mov     [eax+1Ch], edx
.text:00002189                 mov     ecx, [ebp+var_4]
.text:0000218C                 mov     edx, [ecx+198h]
.text:00002192                 sub     edx, 5
.text:00002195                 mov     eax, [ebp+var_4]
.text:00002198                 mov     [eax+198h], edx
.text:0000219E                 mov     ecx, [ebp+var_4]
.text:000021A1                 mov     edx, [ecx+194h]
.text:000021A7                 shr     edx, 5
.text:000021AA                 mov     eax, [ebp+var_4]
.text:000021AD                 mov     [eax+194h], edx
.text:000021B3                 mov     ecx, [ebp+var_4]
.text:000021B6                 mov     edx, [ecx+194h]
.text:000021BC                 and     edx, 1Fh
.text:000021BF                 add     edx, 1
.text:000021C2                 mov     eax, [ebp+var_4]
.text:000021C5                 mov     [eax+20h], edx
.text:000021C8                 mov     ecx, [ebp+var_4]
.text:000021CB                 mov     edx, [ecx+198h]
.text:000021D1                 sub     edx, 5
.text:000021D4                 mov     eax, [ebp+var_4]
.text:000021D7                 mov     [eax+198h], edx
.text:000021DD                 mov     ecx, [ebp+var_4]
.text:000021E0                 mov     edx, [ecx+194h]
.text:000021E6                 shr     edx, 5
.text:000021E9                 mov     eax, [ebp+var_4]
.text:000021EC                 mov     [eax+194h], edx
.text:000021F2                 mov     ecx, [ebp+var_4]
.text:000021F5                 mov     edx, [ecx+194h]
.text:000021FB                 and     edx, 0Fh
.text:000021FE                 add     edx, 4
.text:00002201                 mov     eax, [ebp+var_4]
.text:00002204                 mov     [eax+24h], edx
.text:00002207                 mov     ecx, [ebp+var_4]
.text:0000220A                 mov     edx, [ecx+198h]
.text:00002210                 sub     edx, 4
.text:00002213                 mov     eax, [ebp+var_4]
.text:00002216                 mov     [eax+198h], edx
.text:0000221C                 mov     ecx, [ebp+var_4]
.text:0000221F                 mov     edx, [ecx+194h]
.text:00002225                 shr     edx, 4
.text:00002228                 mov     eax, [ebp+var_4]
.text:0000222B                 mov     [eax+194h], edx
.text:00002231                 mov     ecx, [ebp+var_4]
.text:00002234                 mov     dword ptr [ecx+28h], 0
.text:0000223B                 mov     edx, [ebp+var_4]
.text:0000223E                 mov     dword ptr [edx+14h], 3
.text:00002245                 push    13h             ; Size
.text:00002247                 push    0               ; Val
.text:00002249                 mov     eax, [ebp+var_4]
.text:0000224C                 add     eax, 40h ; '@'
.text:0000224F                 push    eax             ; Dst
.text:00002250                 call    _memset
.text:00002255                 add     esp, 0Ch
.text:00002258                 jmp     loc_2946        ; jumptable 00001FAC default case
.text:0000225D ; ---------------------------------------------------------------------------
.text:0000225D
.text:0000225D $LN45:                                  ; CODE XREF: _zlib_decompress_block+D8j
.text:0000225D                                         ; DATA XREF: .text:$LN72o
.text:0000225D                 mov     ecx, [ebp+var_4] ; jumptable 00001FAC case 3
.text:00002260                 cmp     dword ptr [ecx+198h], 3
.text:00002267                 jge     short loc_226E
.text:00002269                 jmp     $finished$7660
.text:0000226E ; ---------------------------------------------------------------------------
.text:0000226E
.text:0000226E loc_226E:                               ; CODE XREF: _zlib_decompress_block+393j
.text:0000226E                                         ; _zlib_decompress_block+40Dj
.text:0000226E                 mov     edx, [ebp+var_4]
.text:00002271                 mov     eax, [ebp+var_4]
.text:00002274                 mov     ecx, [edx+28h]
.text:00002277                 cmp     ecx, [eax+24h]
.text:0000227A                 jge     short loc_22E3
.text:0000227C                 mov     edx, [ebp+var_4]
.text:0000227F                 cmp     dword ptr [edx+198h], 3
.text:00002286                 jl      short loc_22E3
.text:00002288                 mov     eax, [ebp+var_4]
.text:0000228B                 mov     ecx, [eax+194h]
.text:00002291                 and     ecx, 7
.text:00002294                 mov     edx, [ebp+var_4]
.text:00002297                 mov     eax, [edx+28h]
.text:0000229A                 movzx   edx, ds:?lenlenmap@?1??zlib_decompress_block@@9@9[eax] ; `zlib_decompress_block'::`2'::lenlenmap
.text:000022A1                 mov     eax, [ebp+var_4]
.text:000022A4                 mov     [eax+edx+40h], cl
.text:000022A8                 mov     ecx, [ebp+var_4]
.text:000022AB                 mov     edx, [ecx+28h]
.text:000022AE                 add     edx, 1
.text:000022B1                 mov     eax, [ebp+var_4]
.text:000022B4                 mov     [eax+28h], edx
.text:000022B7                 mov     ecx, [ebp+var_4]
.text:000022BA                 mov     edx, [ecx+198h]
.text:000022C0                 sub     edx, 3
.text:000022C3                 mov     eax, [ebp+var_4]
.text:000022C6                 mov     [eax+198h], edx
.text:000022CC                 mov     ecx, [ebp+var_4]
.text:000022CF                 mov     edx, [ecx+194h]
.text:000022D5                 shr     edx, 3
.text:000022D8                 mov     eax, [ebp+var_4]
.text:000022DB                 mov     [eax+194h], edx
.text:000022E1                 jmp     short loc_226E
.text:000022E3 ; ---------------------------------------------------------------------------
.text:000022E3
.text:000022E3 loc_22E3:                               ; CODE XREF: _zlib_decompress_block+3A6j
.text:000022E3                                         ; _zlib_decompress_block+3B2j
.text:000022E3                 mov     ecx, [ebp+var_4]
.text:000022E6                 mov     edx, [ebp+var_4]
.text:000022E9                 mov     eax, [ecx+28h]
.text:000022EC                 cmp     eax, [edx+24h]
.text:000022EF                 jnz     short loc_231C
.text:000022F1                 push    13h
.text:000022F3                 mov     ecx, [ebp+var_4]
.text:000022F6                 add     ecx, 40h ; '@'
.text:000022F9                 push    ecx
.text:000022FA                 call    _zlib_mktable
.text:000022FF                 add     esp, 8
.text:00002302                 mov     edx, [ebp+var_4]
.text:00002305                 mov     [edx+10h], eax
.text:00002308                 mov     eax, [ebp+var_4]
.text:0000230B                 mov     dword ptr [eax+14h], 4
.text:00002312                 mov     ecx, [ebp+var_4]
.text:00002315                 mov     dword ptr [ecx+28h], 0
.text:0000231C
.text:0000231C loc_231C:                               ; CODE XREF: _zlib_decompress_block+41Bj
.text:0000231C                 jmp     loc_2946        ; jumptable 00001FAC default case
.text:00002321 ; ---------------------------------------------------------------------------
.text:00002321
.text:00002321 $LN40:                                  ; CODE XREF: _zlib_decompress_block+D8j
.text:00002321                                         ; DATA XREF: .text:$LN72o
.text:00002321                 mov     edx, [ebp+var_4] ; jumptable 00001FAC case 4
.text:00002324                 mov     eax, [edx+1Ch]
.text:00002327                 mov     ecx, [ebp+var_4]
.text:0000232A                 add     eax, [ecx+20h]
.text:0000232D                 mov     edx, [ebp+var_4]
.text:00002330                 cmp     [edx+28h], eax
.text:00002333                 jl      short loc_239C
.text:00002335                 mov     eax, [ebp+var_4]
.text:00002338                 mov     ecx, [eax+1Ch]
.text:0000233B                 push    ecx
.text:0000233C                 mov     edx, [ebp+var_4]
.text:0000233F                 add     edx, 53h ; 'S'
.text:00002342                 push    edx
.text:00002343                 call    _zlib_mktable
.text:00002348                 add     esp, 8
.text:0000234B                 mov     ecx, [ebp+var_4]
.text:0000234E                 mov     [ecx+8], eax
.text:00002351                 mov     edx, [ebp+var_4]
.text:00002354                 mov     eax, [edx+20h]
.text:00002357                 push    eax
.text:00002358                 mov     ecx, [ebp+var_4]
.text:0000235B                 mov     edx, [ecx+1Ch]
.text:0000235E                 mov     eax, [ebp+var_4]
.text:00002361                 lea     ecx, [eax+edx+53h]
.text:00002365                 push    ecx
.text:00002366                 call    _zlib_mktable
.text:0000236B                 add     esp, 8
.text:0000236E                 mov     edx, [ebp+var_4]
.text:00002371                 mov     [edx+0Ch], eax
.text:00002374                 mov     eax, [ebp+var_4]
.text:00002377                 add     eax, 10h
.text:0000237A                 push    eax
.text:0000237B                 call    _zlib_freetable
.text:00002380                 add     esp, 4
.text:00002383                 mov     ecx, [ebp+var_4]
.text:00002386                 mov     dword ptr [ecx+10h], 0
.text:0000238D                 mov     edx, [ebp+var_4]
.text:00002390                 mov     dword ptr [edx+14h], 6
.text:00002397                 jmp     loc_2946        ; jumptable 00001FAC default case
.text:0000239C ; ---------------------------------------------------------------------------
.text:0000239C
.text:0000239C loc_239C:                               ; CODE XREF: _zlib_decompress_block+45Fj
.text:0000239C                 mov     eax, [ebp+var_4]
.text:0000239F                 mov     ecx, [eax+10h]
.text:000023A2                 push    ecx
.text:000023A3                 mov     edx, [ebp+var_4]
.text:000023A6                 add     edx, 198h
.text:000023AC                 push    edx
.text:000023AD                 mov     eax, [ebp+var_4]
.text:000023B0                 add     eax, 194h
.text:000023B5                 push    eax
.text:000023B6                 call    _zlib_huflookup
.text:000023BB                 add     esp, 0Ch
.text:000023BE                 mov     [ebp+var_C], eax
.text:000023C1                 cmp     [ebp+var_C], 0FFFFFFFFh
.text:000023C5                 jnz     short loc_23CC
.text:000023C7                 jmp     $finished$7660
.text:000023CC ; ---------------------------------------------------------------------------
.text:000023CC
.text:000023CC loc_23CC:                               ; CODE XREF: _zlib_decompress_block+4F1j
.text:000023CC                 cmp     [ebp+var_C], 0FFFFFFFEh
.text:000023D0                 jnz     short loc_23D7
.text:000023D2                 jmp     $decode_error$7663
.text:000023D7 ; ---------------------------------------------------------------------------
.text:000023D7
.text:000023D7 loc_23D7:                               ; CODE XREF: _zlib_decompress_block+4FCj
.text:000023D7                 cmp     [ebp+var_C], 10h
.text:000023DB                 jge     short loc_23FE
.text:000023DD                 mov     ecx, [ebp+var_4]
.text:000023E0                 mov     edx, [ecx+28h]
.text:000023E3                 mov     eax, [ebp+var_4]
.text:000023E6                 mov     cl, byte ptr [ebp+var_C]
.text:000023E9                 mov     [eax+edx+53h], cl
.text:000023ED                 mov     edx, [ebp+var_4]
.text:000023F0                 mov     eax, [edx+28h]
.text:000023F3                 add     eax, 1
.text:000023F6                 mov     ecx, [ebp+var_4]
.text:000023F9                 mov     [ecx+28h], eax
.text:000023FC                 jmp     short loc_247B
.text:000023FE ; ---------------------------------------------------------------------------
.text:000023FE
.text:000023FE loc_23FE:                               ; CODE XREF: _zlib_decompress_block+507j
.text:000023FE                 cmp     [ebp+var_C], 10h
.text:00002402                 jnz     short loc_240D
.text:00002404                 mov     [ebp+var_2C], 2
.text:0000240B                 jmp     short loc_2420
.text:0000240D ; ---------------------------------------------------------------------------
.text:0000240D
.text:0000240D loc_240D:                               ; CODE XREF: _zlib_decompress_block+52Ej
.text:0000240D                 xor     edx, edx
.text:0000240F                 cmp     [ebp+var_C], 11h
.text:00002413                 setnz   dl
.text:00002416                 lea     edx, ds:3[edx*4]
.text:0000241D                 mov     [ebp+var_2C], edx
.text:00002420
.text:00002420 loc_2420:                               ; CODE XREF: _zlib_decompress_block+537j
.text:00002420                 mov     eax, [ebp+var_4]
.text:00002423                 mov     ecx, [ebp+var_2C]
.text:00002426                 mov     [eax+2Ch], ecx
.text:00002429                 xor     edx, edx
.text:0000242B                 cmp     [ebp+var_C], 12h
.text:0000242F                 setz    dl
.text:00002432                 lea     edx, ds:3[edx*8]
.text:00002439                 mov     eax, [ebp+var_4]
.text:0000243C                 mov     [eax+30h], edx
.text:0000243F                 cmp     [ebp+var_C], 10h
.text:00002443                 jnz     short loc_2461
.text:00002445                 mov     ecx, [ebp+var_4]
.text:00002448                 cmp     dword ptr [ecx+28h], 0
.text:0000244C                 jle     short loc_2461
.text:0000244E                 mov     edx, [ebp+var_4]
.text:00002451                 mov     eax, [edx+28h]
.text:00002454                 mov     ecx, [ebp+var_4]
.text:00002457                 movzx   edx, byte ptr [ecx+eax+52h]
.text:0000245C                 mov     [ebp+var_30], edx
.text:0000245F                 jmp     short loc_2468
.text:00002461 ; ---------------------------------------------------------------------------
.text:00002461
.text:00002461 loc_2461:                               ; CODE XREF: _zlib_decompress_block+56Fj
.text:00002461                                         ; _zlib_decompress_block+578j
.text:00002461                 mov     [ebp+var_30], 0
.text:00002468
.text:00002468 loc_2468:                               ; CODE XREF: _zlib_decompress_block+58Bj
.text:00002468                 mov     eax, [ebp+var_4]
.text:0000246B                 mov     ecx, [ebp+var_30]
.text:0000246E                 mov     [eax+38h], ecx
.text:00002471                 mov     edx, [ebp+var_4]
.text:00002474                 mov     dword ptr [edx+14h], 5
.text:0000247B
.text:0000247B loc_247B:                               ; CODE XREF: _zlib_decompress_block+528j
.text:0000247B                 jmp     loc_2946        ; jumptable 00001FAC default case
.text:00002480 ; ---------------------------------------------------------------------------
.text:00002480
.text:00002480 $LN34:                                  ; CODE XREF: _zlib_decompress_block+D8j
.text:00002480                                         ; DATA XREF: .text:$LN72o
.text:00002480                 mov     eax, [ebp+var_4] ; jumptable 00001FAC case 5
.text:00002483                 mov     ecx, [ebp+var_4]
.text:00002486                 mov     edx, [eax+198h]
.text:0000248C                 cmp     edx, [ecx+2Ch]
.text:0000248F                 jge     short loc_2496
.text:00002491                 jmp     $finished$7660
.text:00002496 ; ---------------------------------------------------------------------------
.text:00002496
.text:00002496 loc_2496:                               ; CODE XREF: _zlib_decompress_block+5BBj
.text:00002496                 mov     eax, [ebp+var_4]
.text:00002499                 mov     edx, 1
.text:0000249E                 mov     ecx, [eax+2Ch]
.text:000024A1                 shl     edx, cl
.text:000024A3                 sub     edx, 1
.text:000024A6                 mov     eax, [ebp+var_4]
.text:000024A9                 and     edx, [eax+194h]
.text:000024AF                 mov     ecx, [ebp+var_4]
.text:000024B2                 add     edx, [ecx+30h]
.text:000024B5                 mov     [ebp+var_14], edx
.text:000024B8                 mov     edx, [ebp+var_4]
.text:000024BB                 mov     eax, [ebp+var_4]
.text:000024BE                 mov     ecx, [edx+198h]
.text:000024C4                 sub     ecx, [eax+2Ch]
.text:000024C7                 mov     edx, [ebp+var_4]
.text:000024CA                 mov     [edx+198h], ecx
.text:000024D0                 mov     eax, [ebp+var_4]
.text:000024D3                 mov     ecx, [ebp+var_4]
.text:000024D6                 mov     edx, [eax+194h]
.text:000024DC                 mov     ecx, [ecx+2Ch]
.text:000024DF                 shr     edx, cl
.text:000024E1                 mov     eax, [ebp+var_4]
.text:000024E4                 mov     [eax+194h], edx
.text:000024EA
.text:000024EA loc_24EA:                               ; CODE XREF: _zlib_decompress_block+65Bj
.text:000024EA                 cmp     [ebp+var_14], 0
.text:000024EE                 jle     short loc_2531
.text:000024F0                 mov     ecx, [ebp+var_4]
.text:000024F3                 mov     edx, [ecx+1Ch]
.text:000024F6                 mov     eax, [ebp+var_4]
.text:000024F9                 add     edx, [eax+20h]
.text:000024FC                 mov     ecx, [ebp+var_4]
.text:000024FF                 cmp     [ecx+28h], edx
.text:00002502                 jge     short loc_2531
.text:00002504                 mov     edx, [ebp+var_4]
.text:00002507                 mov     eax, [edx+28h]
.text:0000250A                 mov     ecx, [ebp+var_4]
.text:0000250D                 mov     edx, [ebp+var_4]
.text:00002510                 mov     dl, [edx+38h]
.text:00002513                 mov     [ecx+eax+53h], dl
.text:00002517                 mov     eax, [ebp+var_4]
.text:0000251A                 mov     ecx, [eax+28h]
.text:0000251D                 add     ecx, 1
.text:00002520                 mov     edx, [ebp+var_4]
.text:00002523                 mov     [edx+28h], ecx
.text:00002526                 mov     eax, [ebp+var_14]
.text:00002529                 sub     eax, 1
.text:0000252C                 mov     [ebp+var_14], eax
.text:0000252F                 jmp     short loc_24EA
.text:00002531 ; ---------------------------------------------------------------------------
.text:00002531
.text:00002531 loc_2531:                               ; CODE XREF: _zlib_decompress_block+61Aj
.text:00002531                                         ; _zlib_decompress_block+62Ej
.text:00002531                 mov     ecx, [ebp+var_4]
.text:00002534                 mov     dword ptr [ecx+14h], 4
.text:0000253B                 jmp     loc_2946        ; jumptable 00001FAC default case
.text:00002540 ; ---------------------------------------------------------------------------
.text:00002540
.text:00002540 $LN30:                                  ; CODE XREF: _zlib_decompress_block+D8j
.text:00002540                                         ; DATA XREF: .text:$LN72o
.text:00002540                 mov     edx, [ebp+var_4] ; jumptable 00001FAC case 6
.text:00002543                 mov     eax, [edx+8]
.text:00002546                 push    eax
.text:00002547                 mov     ecx, [ebp+var_4]
.text:0000254A                 add     ecx, 198h
.text:00002550                 push    ecx
.text:00002551                 mov     edx, [ebp+var_4]
.text:00002554                 add     edx, 194h
.text:0000255A                 push    edx
.text:0000255B                 call    _zlib_huflookup
.text:00002560                 add     esp, 0Ch
.text:00002563                 mov     [ebp+var_C], eax
.text:00002566                 cmp     [ebp+var_C], 0FFFFFFFFh
.text:0000256A                 jnz     short loc_2571
.text:0000256C                 jmp     $finished$7660
.text:00002571 ; ---------------------------------------------------------------------------
.text:00002571
.text:00002571 loc_2571:                               ; CODE XREF: _zlib_decompress_block+696j
.text:00002571                 cmp     [ebp+var_C], 0FFFFFFFEh
.text:00002575                 jnz     short loc_257C
.text:00002577                 jmp     $decode_error$7663
.text:0000257C ; ---------------------------------------------------------------------------
.text:0000257C
.text:0000257C loc_257C:                               ; CODE XREF: _zlib_decompress_block+6A1j
.text:0000257C                 cmp     [ebp+var_C], 100h
.text:00002583                 jge     short loc_2597
.text:00002585                 mov     eax, [ebp+var_C]
.text:00002588                 push    eax
.text:00002589                 mov     ecx, [ebp+var_4]
.text:0000258C                 push    ecx
.text:0000258D                 call    _zlib_emit_char
.text:00002592                 add     esp, 8
.text:00002595                 jmp     short loc_2615
.text:00002597 ; ---------------------------------------------------------------------------
.text:00002597
.text:00002597 loc_2597:                               ; CODE XREF: _zlib_decompress_block+6AFj
.text:00002597                 cmp     [ebp+var_C], 100h
.text:0000259E                 jnz     short loc_25F9
.text:000025A0                 mov     edx, [ebp+var_4]
.text:000025A3                 mov     dword ptr [edx+14h], 1
.text:000025AA                 mov     eax, [ebp+var_4]
.text:000025AD                 mov     ecx, [ebp+var_4]
.text:000025B0                 mov     edx, [eax+8]
.text:000025B3                 cmp     edx, [ecx]
.text:000025B5                 jz      short loc_25D0
.text:000025B7                 mov     eax, [ebp+var_4]
.text:000025BA                 add     eax, 8
.text:000025BD                 push    eax
.text:000025BE                 call    _zlib_freetable
.text:000025C3                 add     esp, 4
.text:000025C6                 mov     ecx, [ebp+var_4]
.text:000025C9                 mov     dword ptr [ecx+8], 0
.text:000025D0
.text:000025D0 loc_25D0:                               ; CODE XREF: _zlib_decompress_block+6E1j
.text:000025D0                 mov     edx, [ebp+var_4]
.text:000025D3                 mov     eax, [ebp+var_4]
.text:000025D6                 mov     ecx, [edx+0Ch]
.text:000025D9                 cmp     ecx, [eax+4]
.text:000025DC                 jz      short loc_25F7
.text:000025DE                 mov     edx, [ebp+var_4]
.text:000025E1                 add     edx, 0Ch
.text:000025E4                 push    edx
.text:000025E5                 call    _zlib_freetable
.text:000025EA                 add     esp, 4
.text:000025ED                 mov     eax, [ebp+var_4]
.text:000025F0                 mov     dword ptr [eax+0Ch], 0
.text:000025F7
.text:000025F7 loc_25F7:                               ; CODE XREF: _zlib_decompress_block+708j
.text:000025F7                 jmp     short loc_2615
.text:000025F9 ; ---------------------------------------------------------------------------
.text:000025F9
.text:000025F9 loc_25F9:                               ; CODE XREF: _zlib_decompress_block+6CAj
.text:000025F9                 cmp     [ebp+var_C], 11Eh
.text:00002600                 jge     short loc_2615
.text:00002602                 mov     ecx, [ebp+var_4]
.text:00002605                 mov     dword ptr [ecx+14h], 7
.text:0000260C                 mov     edx, [ebp+var_4]
.text:0000260F                 mov     eax, [ebp+var_C]
.text:00002612                 mov     [edx+18h], eax
.text:00002615
.text:00002615 loc_2615:                               ; CODE XREF: _zlib_decompress_block+6C1j
.text:00002615                                         ; _zlib_decompress_block:loc_25F7j ...
.text:00002615                 jmp     loc_2946        ; jumptable 00001FAC default case
.text:0000261A ; ---------------------------------------------------------------------------
.text:0000261A
.text:0000261A $LN20:                                  ; CODE XREF: _zlib_decompress_block+D8j
.text:0000261A                                         ; DATA XREF: .text:$LN72o
.text:0000261A                 mov     ecx, [ebp+var_4] ; jumptable 00001FAC case 7
.text:0000261D                 mov     edx, [ecx+18h]
.text:00002620                 sub     edx, 101h
.text:00002626                 imul    edx, 0Ch
.text:00002629                 add     edx, offset _lencodes
.text:0000262F                 mov     [ebp+var_8], edx
.text:00002632                 mov     eax, [ebp+var_8]
.text:00002635                 movsx   ecx, word ptr [eax+2]
.text:00002639                 mov     edx, [ebp+var_4]
.text:0000263C                 cmp     [edx+198h], ecx
.text:00002642                 jge     short loc_2649
.text:00002644                 jmp     $finished$7660
.text:00002649 ; ---------------------------------------------------------------------------
.text:00002649
.text:00002649 loc_2649:                               ; CODE XREF: _zlib_decompress_block+76Ej
.text:00002649                 mov     eax, [ebp+var_8]
.text:0000264C                 movsx   ecx, word ptr [eax+2]
.text:00002650                 mov     edx, 1
.text:00002655                 shl     edx, cl
.text:00002657                 sub     edx, 1
.text:0000265A                 mov     eax, [ebp+var_4]
.text:0000265D                 and     edx, [eax+194h]
.text:00002663                 mov     ecx, [ebp+var_8]
.text:00002666                 add     edx, [ecx+4]
.text:00002669                 mov     eax, [ebp+var_4]
.text:0000266C                 mov     [eax+34h], edx
.text:0000266F                 mov     ecx, [ebp+var_8]
.text:00002672                 movsx   edx, word ptr [ecx+2]
.text:00002676                 mov     eax, [ebp+var_4]
.text:00002679                 mov     ecx, [eax+198h]
.text:0000267F                 sub     ecx, edx
.text:00002681                 mov     edx, [ebp+var_4]
.text:00002684                 mov     [edx+198h], ecx
.text:0000268A                 mov     eax, [ebp+var_8]
.text:0000268D                 movsx   ecx, word ptr [eax+2]
.text:00002691                 mov     edx, [ebp+var_4]
.text:00002694                 mov     eax, [edx+194h]
.text:0000269A                 shr     eax, cl
.text:0000269C                 mov     ecx, [ebp+var_4]
.text:0000269F                 mov     [ecx+194h], eax
.text:000026A5                 mov     edx, [ebp+var_4]
.text:000026A8                 mov     dword ptr [edx+14h], 8
.text:000026AF                 jmp     loc_2946        ; jumptable 00001FAC default case
.text:000026B4 ; ---------------------------------------------------------------------------
.text:000026B4
.text:000026B4 $LN18:                                  ; CODE XREF: _zlib_decompress_block+D8j
.text:000026B4                                         ; DATA XREF: .text:$LN72o
.text:000026B4                 mov     eax, [ebp+var_4] ; jumptable 00001FAC case 8
.text:000026B7                 mov     ecx, [eax+0Ch]
.text:000026BA                 push    ecx
.text:000026BB                 mov     edx, [ebp+var_4]
.text:000026BE                 add     edx, 198h
.text:000026C4                 push    edx
.text:000026C5                 mov     eax, [ebp+var_4]
.text:000026C8                 add     eax, 194h
.text:000026CD                 push    eax
.text:000026CE                 call    _zlib_huflookup
.text:000026D3                 add     esp, 0Ch
.text:000026D6                 mov     [ebp+var_C], eax
.text:000026D9                 cmp     [ebp+var_C], 0FFFFFFFFh
.text:000026DD                 jnz     short loc_26E4
.text:000026DF                 jmp     $finished$7660
.text:000026E4 ; ---------------------------------------------------------------------------
.text:000026E4
.text:000026E4 loc_26E4:                               ; CODE XREF: _zlib_decompress_block+809j
.text:000026E4                 cmp     [ebp+var_C], 0FFFFFFFEh
.text:000026E8                 jnz     short loc_26EF
.text:000026EA                 jmp     $decode_error$7663
.text:000026EF ; ---------------------------------------------------------------------------
.text:000026EF
.text:000026EF loc_26EF:                               ; CODE XREF: _zlib_decompress_block+814j
.text:000026EF                 cmp     [ebp+var_C], 1Eh
.text:000026F3                 jl      short loc_26FA
.text:000026F5                 jmp     $decode_error$7663
.text:000026FA ; ---------------------------------------------------------------------------
.text:000026FA
.text:000026FA loc_26FA:                               ; CODE XREF: _zlib_decompress_block+81Fj
.text:000026FA                 mov     ecx, [ebp+var_4]
.text:000026FD                 mov     dword ptr [ecx+14h], 9
.text:00002704                 mov     edx, [ebp+var_4]
.text:00002707                 mov     eax, [ebp+var_C]
.text:0000270A                 mov     [edx+18h], eax
.text:0000270D                 jmp     loc_2946        ; jumptable 00001FAC default case
.text:00002712 ; ---------------------------------------------------------------------------
.text:00002712
.text:00002712 $LN14:                                  ; CODE XREF: _zlib_decompress_block+D8j
.text:00002712                                         ; DATA XREF: .text:$LN72o
.text:00002712                 mov     ecx, [ebp+var_4] ; jumptable 00001FAC case 9
.text:00002715                 mov     edx, [ecx+18h]
.text:00002718                 imul    edx, 0Ch
.text:0000271B                 add     edx, offset _distcodes
.text:00002721                 mov     [ebp+var_8], edx
.text:00002724                 mov     eax, [ebp+var_8]
.text:00002727                 movsx   ecx, word ptr [eax+2]
.text:0000272B                 mov     edx, [ebp+var_4]
.text:0000272E                 cmp     [edx+198h], ecx
.text:00002734                 jge     short loc_273B
.text:00002736                 jmp     $finished$7660
.text:0000273B ; ---------------------------------------------------------------------------
.text:0000273B
.text:0000273B loc_273B:                               ; CODE XREF: _zlib_decompress_block+860j
.text:0000273B                 mov     eax, [ebp+var_8]
.text:0000273E                 movsx   ecx, word ptr [eax+2]
.text:00002742                 mov     edx, 1
.text:00002747                 shl     edx, cl
.text:00002749                 sub     edx, 1
.text:0000274C                 mov     eax, [ebp+var_4]
.text:0000274F                 and     edx, [eax+194h]
.text:00002755                 mov     ecx, [ebp+var_8]
.text:00002758                 add     edx, [ecx+4]
.text:0000275B                 mov     [ebp+var_18], edx
.text:0000275E                 mov     edx, [ebp+var_8]
.text:00002761                 movsx   eax, word ptr [edx+2]
.text:00002765                 mov     ecx, [ebp+var_4]
.text:00002768                 mov     edx, [ecx+198h]
.text:0000276E                 sub     edx, eax
.text:00002770                 mov     eax, [ebp+var_4]
.text:00002773                 mov     [eax+198h], edx
.text:00002779                 mov     ecx, [ebp+var_8]
.text:0000277C                 movsx   ecx, word ptr [ecx+2]
.text:00002780                 mov     edx, [ebp+var_4]
.text:00002783                 mov     eax, [edx+194h]
.text:00002789                 shr     eax, cl
.text:0000278B                 mov     ecx, [ebp+var_4]
.text:0000278E                 mov     [ecx+194h], eax
.text:00002794                 mov     edx, [ebp+var_4]
.text:00002797                 mov     dword ptr [edx+14h], 6
.text:0000279E
.text:0000279E loc_279E:                               ; CODE XREF: _zlib_decompress_block+911j
.text:0000279E                 mov     eax, [ebp+var_4]
.text:000027A1                 mov     ecx, [eax+34h]
.text:000027A4                 mov     [ebp+var_34], ecx
.text:000027A7                 mov     edx, [ebp+var_4]
.text:000027AA                 mov     eax, [edx+34h]
.text:000027AD                 sub     eax, 1
.text:000027B0                 mov     ecx, [ebp+var_4]
.text:000027B3                 mov     [ecx+34h], eax
.text:000027B6                 cmp     [ebp+var_34], 0
.text:000027BA                 jz      short loc_27E7
.text:000027BC                 mov     edx, [ebp+var_4]
.text:000027BF                 mov     eax, [edx+819Ch]
.text:000027C5                 sub     eax, [ebp+var_18]
.text:000027C8                 and     eax, 7FFFh
.text:000027CD                 mov     ecx, [ebp+var_4]
.text:000027D0                 movzx   edx, byte ptr [ecx+eax+19Ch]
.text:000027D8                 push    edx
.text:000027D9                 mov     eax, [ebp+var_4]
.text:000027DC                 push    eax
.text:000027DD                 call    _zlib_emit_char
.text:000027E2                 add     esp, 8
.text:000027E5                 jmp     short loc_279E
.text:000027E7 ; ---------------------------------------------------------------------------
.text:000027E7
.text:000027E7 loc_27E7:                               ; CODE XREF: _zlib_decompress_block+8E6j
.text:000027E7                 jmp     loc_2946        ; jumptable 00001FAC default case
.text:000027EC ; ---------------------------------------------------------------------------
.text:000027EC
.text:000027EC $LN10:                                  ; CODE XREF: _zlib_decompress_block+D8j
.text:000027EC                                         ; DATA XREF: .text:$LN72o
.text:000027EC                 mov     ecx, [ebp+var_4] ; jumptable 00001FAC case 10
.text:000027EF                 cmp     dword ptr [ecx+198h], 10h
.text:000027F6                 jge     short loc_27FD
.text:000027F8                 jmp     $finished$7660
.text:000027FD ; ---------------------------------------------------------------------------
.text:000027FD
.text:000027FD loc_27FD:                               ; CODE XREF: _zlib_decompress_block+922j
.text:000027FD                 mov     edx, [ebp+var_4]
.text:00002800                 mov     eax, [edx+194h]
.text:00002806                 and     eax, 0FFFFh
.text:0000280B                 mov     ecx, [ebp+var_4]
.text:0000280E                 mov     [ecx+3Ch], eax
.text:00002811                 mov     edx, [ebp+var_4]
.text:00002814                 mov     eax, [edx+198h]
.text:0000281A                 sub     eax, 10h
.text:0000281D                 mov     ecx, [ebp+var_4]
.text:00002820                 mov     [ecx+198h], eax
.text:00002826                 mov     edx, [ebp+var_4]
.text:00002829                 mov     eax, [edx+194h]
.text:0000282F                 shr     eax, 10h
.text:00002832                 mov     ecx, [ebp+var_4]
.text:00002835                 mov     [ecx+194h], eax
.text:0000283B                 mov     edx, [ebp+var_4]
.text:0000283E                 mov     dword ptr [edx+14h], 0Bh
.text:00002845                 jmp     loc_2946        ; jumptable 00001FAC default case
.text:0000284A ; ---------------------------------------------------------------------------
.text:0000284A
.text:0000284A $LN8:                                   ; CODE XREF: _zlib_decompress_block+D8j
.text:0000284A                                         ; DATA XREF: .text:$LN72o
.text:0000284A                 mov     eax, [ebp+var_4] ; jumptable 00001FAC case 11
.text:0000284D                 cmp     dword ptr [eax+198h], 10h
.text:00002854                 jge     short loc_285B
.text:00002856                 jmp     $finished$7660
.text:0000285B ; ---------------------------------------------------------------------------
.text:0000285B
.text:0000285B loc_285B:                               ; CODE XREF: _zlib_decompress_block+980j
.text:0000285B                 mov     ecx, [ebp+var_4]
.text:0000285E                 mov     edx, [ecx+194h]
.text:00002864                 and     edx, 0FFFFh
.text:0000286A                 mov     [ebp+var_1C], edx
.text:0000286D                 mov     eax, [ebp+var_4]
.text:00002870                 mov     ecx, [eax+198h]
.text:00002876                 sub     ecx, 10h
.text:00002879                 mov     edx, [ebp+var_4]
.text:0000287C                 mov     [edx+198h], ecx
.text:00002882                 mov     eax, [ebp+var_4]
.text:00002885                 mov     ecx, [eax+194h]
.text:0000288B                 shr     ecx, 10h
.text:0000288E                 mov     edx, [ebp+var_4]
.text:00002891                 mov     [edx+194h], ecx
.text:00002897                 mov     eax, [ebp+var_1C]
.text:0000289A                 xor     eax, 0FFFFh
.text:0000289F                 mov     ecx, [ebp+var_4]
.text:000028A2                 cmp     [ecx+3Ch], eax
.text:000028A5                 jz      short loc_28AC
.text:000028A7                 jmp     $decode_error$7663
.text:000028AC ; ---------------------------------------------------------------------------
.text:000028AC
.text:000028AC loc_28AC:                               ; CODE XREF: _zlib_decompress_block+9D1j
.text:000028AC                 mov     edx, [ebp+var_4]
.text:000028AF                 cmp     dword ptr [edx+3Ch], 0
.text:000028B3                 jnz     short loc_28C1
.text:000028B5                 mov     eax, [ebp+var_4]
.text:000028B8                 mov     dword ptr [eax+14h], 1
.text:000028BF                 jmp     short loc_28CB
.text:000028C1 ; ---------------------------------------------------------------------------
.text:000028C1
.text:000028C1 loc_28C1:                               ; CODE XREF: _zlib_decompress_block+9DFj
.text:000028C1                 mov     ecx, [ebp+var_4]
.text:000028C4                 mov     dword ptr [ecx+14h], 0Ch
.text:000028CB
.text:000028CB loc_28CB:                               ; CODE XREF: _zlib_decompress_block+9EBj
.text:000028CB                 jmp     short loc_2946  ; jumptable 00001FAC default case
.text:000028CD ; ---------------------------------------------------------------------------
.text:000028CD
.text:000028CD $LN3_0:                                 ; CODE XREF: _zlib_decompress_block+D8j
.text:000028CD                                         ; DATA XREF: .text:$LN72o
.text:000028CD                 mov     edx, [ebp+var_4] ; jumptable 00001FAC case 12
.text:000028D0                 cmp     dword ptr [edx+198h], 8
.text:000028D7                 jge     short loc_28DB
.text:000028D9                 jmp     short $finished$7660
.text:000028DB ; ---------------------------------------------------------------------------
.text:000028DB
.text:000028DB loc_28DB:                               ; CODE XREF: _zlib_decompress_block+A03j
.text:000028DB                 mov     eax, [ebp+var_4]
.text:000028DE                 mov     ecx, [eax+194h]
.text:000028E4                 and     ecx, 0FFh
.text:000028EA                 push    ecx
.text:000028EB                 mov     edx, [ebp+var_4]
.text:000028EE                 push    edx
.text:000028EF                 call    _zlib_emit_char
.text:000028F4                 add     esp, 8
.text:000028F7                 mov     eax, [ebp+var_4]
.text:000028FA                 mov     ecx, [eax+198h]
.text:00002900                 sub     ecx, 8
.text:00002903                 mov     edx, [ebp+var_4]
.text:00002906                 mov     [edx+198h], ecx
.text:0000290C                 mov     eax, [ebp+var_4]
.text:0000290F                 mov     ecx, [eax+194h]
.text:00002915                 shr     ecx, 8
.text:00002918                 mov     edx, [ebp+var_4]
.text:0000291B                 mov     [edx+194h], ecx
.text:00002921                 mov     eax, [ebp+var_4]
.text:00002924                 mov     ecx, [eax+3Ch]
.text:00002927                 sub     ecx, 1
.text:0000292A                 mov     [ebp+var_38], ecx
.text:0000292D                 mov     edx, [ebp+var_4]
.text:00002930                 mov     eax, [ebp+var_38]
.text:00002933                 mov     [edx+3Ch], eax
.text:00002936                 cmp     [ebp+var_38], 0
.text:0000293A                 jnz     short loc_2946  ; jumptable 00001FAC default case
.text:0000293C                 mov     ecx, [ebp+var_4]
.text:0000293F                 mov     dword ptr [ecx+14h], 1
.text:00002946
.text:00002946 loc_2946:                               ; CODE XREF: _zlib_decompress_block+CFj
.text:00002946                                         ; _zlib_decompress_block+189j ...
.text:00002946                 jmp     loc_1F22        ; jumptable 00001FAC default case
.text:0000294B ; ---------------------------------------------------------------------------
.text:0000294B
.text:0000294B $finished$7660:                         ; CODE XREF: _zlib_decompress_block+5Ej
.text:0000294B                                         ; _zlib_decompress_block+EBj ...
.text:0000294B                 mov     edx, [ebp+arg_C]
.text:0000294E                 mov     eax, [ebp+var_4]
.text:00002951                 mov     ecx, [eax+81A0h]
.text:00002957                 mov     [edx], ecx
.text:00002959                 mov     edx, [ebp+arg_10]
.text:0000295C                 mov     eax, [ebp+var_4]
.text:0000295F                 mov     ecx, [eax+81A4h]
.text:00002965                 mov     [edx], ecx
.text:00002967                 mov     eax, 1
.text:0000296C                 jmp     short loc_29A1
.text:0000296E ; ---------------------------------------------------------------------------
.text:0000296E
.text:0000296E $decode_error$7663:                     ; CODE XREF: _zlib_decompress_block:loc_204Ej
.text:0000296E                                         ; _zlib_decompress_block+4FEj ...
.text:0000296E                 mov     edx, [ebp+var_4]
.text:00002971                 mov     eax, [edx+81A0h]
.text:00002977                 push    eax
.text:00002978                 call    _safefree
.text:0000297D                 add     esp, 4
.text:00002980                 mov     ecx, [ebp+var_4]
.text:00002983                 mov     dword ptr [ecx+81A0h], 0
.text:0000298D                 mov     edx, [ebp+arg_C]
.text:00002990                 mov     dword ptr [edx], 0
.text:00002996                 mov     eax, [ebp+arg_10]
.text:00002999                 mov     dword ptr [eax], 0
.text:0000299F                 xor     eax, eax
.text:000029A1
.text:000029A1 loc_29A1:                               ; CODE XREF: _zlib_decompress_block+A98j
.text:000029A1                 pop     edi
.text:000029A2                 add     esp, 38h
.text:000029A5                 cmp     ebp, esp
.text:000029A7                 call    __RTC_CheckEsp
.text:000029AC                 mov     esp, ebp
.text:000029AE                 pop     ebp
.text:000029AF                 retn
.text:000029AF _zlib_decompress_block endp
.text:000029AF
.text:000029AF ; ---------------------------------------------------------------------------
.text:000029B0 $LN72           dd offset $LN58_0       ; DATA XREF: _zlib_decompress_block+D8r
.text:000029B0                 dd offset $LN54         ; jump table for switch statement
.text:000029B0                 dd offset $LN47
.text:000029B0                 dd offset $LN45
.text:000029B0                 dd offset $LN40
.text:000029B0                 dd offset $LN34
.text:000029B0                 dd offset $LN30
.text:000029B0                 dd offset $LN20
.text:000029B0                 dd offset $LN18
.text:000029B0                 dd offset $LN14
.text:000029B0                 dd offset $LN10
.text:000029B0                 dd offset $LN8
.text:000029B0                 dd offset $LN3_0
.text:000029E4
.text:000029E4 ; =============== S U B R O U T I N E =======================================
.text:000029E4
.text:000029E4 ; Attributes: bp-based frame
.text:000029E4
.text:000029E4 _zlib_huflookup proc near               ; CODE XREF: _zlib_decompress_block+4E2p
.text:000029E4                                         ; _zlib_decompress_block+687p ...
.text:000029E4
.text:000029E4 var_C           = dword ptr -0Ch
.text:000029E4 var_8           = dword ptr -8
.text:000029E4 var_4           = dword ptr -4
.text:000029E4 arg_0           = dword ptr  8
.text:000029E4 arg_4           = dword ptr  0Ch
.text:000029E4 arg_8           = dword ptr  10h
.text:000029E4
.text:000029E4                 push    ebp
.text:000029E5                 mov     ebp, esp
.text:000029E7                 sub     esp, 0Ch
.text:000029EA                 mov     [ebp+var_C], 0CCCCCCCCh
.text:000029F1                 mov     [ebp+var_8], 0CCCCCCCCh
.text:000029F8                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000029FF                 mov     eax, [ebp+arg_0]
.text:00002A02                 mov     ecx, [eax]
.text:00002A04                 mov     [ebp+var_4], ecx
.text:00002A07                 mov     edx, [ebp+arg_4]
.text:00002A0A                 mov     eax, [edx]
.text:00002A0C                 mov     [ebp+var_8], eax
.text:00002A0F
.text:00002A0F loc_2A0F:                               ; CODE XREF: _zlib_huflookup:loc_2A99j
.text:00002A0F                 mov     ecx, 1
.text:00002A14                 test    ecx, ecx
.text:00002A16                 jz      loc_2A9E
.text:00002A1C                 mov     edx, [ebp+arg_8]
.text:00002A1F                 mov     eax, [ebp+var_4]
.text:00002A22                 and     eax, [edx]
.text:00002A24                 mov     ecx, [ebp+arg_8]
.text:00002A27                 mov     edx, [ecx+4]
.text:00002A2A                 lea     eax, [edx+eax*8]
.text:00002A2D                 mov     [ebp+var_C], eax
.text:00002A30                 mov     ecx, [ebp+var_C]
.text:00002A33                 movzx   edx, byte ptr [ecx]
.text:00002A36                 cmp     edx, [ebp+var_8]
.text:00002A39                 jle     short loc_2A40
.text:00002A3B                 or      eax, 0FFFFFFFFh
.text:00002A3E                 jmp     short loc_2A9E
.text:00002A40 ; ---------------------------------------------------------------------------
.text:00002A40
.text:00002A40 loc_2A40:                               ; CODE XREF: _zlib_huflookup+55j
.text:00002A40                 mov     eax, [ebp+var_C]
.text:00002A43                 movzx   ecx, byte ptr [eax]
.text:00002A46                 mov     edx, [ebp+var_4]
.text:00002A49                 shr     edx, cl
.text:00002A4B                 mov     [ebp+var_4], edx
.text:00002A4E                 mov     eax, [ebp+var_C]
.text:00002A51                 movzx   ecx, byte ptr [eax]
.text:00002A54                 mov     edx, [ebp+var_8]
.text:00002A57                 sub     edx, ecx
.text:00002A59                 mov     [ebp+var_8], edx
.text:00002A5C                 mov     eax, [ebp+var_C]
.text:00002A5F                 movsx   ecx, word ptr [eax+2]
.text:00002A63                 cmp     ecx, 0FFFFFFFFh
.text:00002A66                 jnz     short loc_2A73
.text:00002A68                 mov     edx, [ebp+var_C]
.text:00002A6B                 mov     eax, [edx+4]
.text:00002A6E                 mov     [ebp+arg_8], eax
.text:00002A71                 jmp     short loc_2A8C
.text:00002A73 ; ---------------------------------------------------------------------------
.text:00002A73
.text:00002A73 loc_2A73:                               ; CODE XREF: _zlib_huflookup+82j
.text:00002A73                 mov     ecx, [ebp+arg_0]
.text:00002A76                 mov     edx, [ebp+var_4]
.text:00002A79                 mov     [ecx], edx
.text:00002A7B                 mov     eax, [ebp+arg_4]
.text:00002A7E                 mov     ecx, [ebp+var_8]
.text:00002A81                 mov     [eax], ecx
.text:00002A83                 mov     edx, [ebp+var_C]
.text:00002A86                 movsx   eax, word ptr [edx+2]
.text:00002A8A                 jmp     short loc_2A9E
.text:00002A8C ; ---------------------------------------------------------------------------
.text:00002A8C
.text:00002A8C loc_2A8C:                               ; CODE XREF: _zlib_huflookup+8Dj
.text:00002A8C                 cmp     [ebp+arg_8], 0
.text:00002A90                 jnz     short loc_2A99
.text:00002A92                 mov     eax, 0FFFFFFFEh
.text:00002A97                 jmp     short loc_2A9E
.text:00002A99 ; ---------------------------------------------------------------------------
.text:00002A99
.text:00002A99 loc_2A99:                               ; CODE XREF: _zlib_huflookup+ACj
.text:00002A99                 jmp     loc_2A0F
.text:00002A9E ; ---------------------------------------------------------------------------
.text:00002A9E
.text:00002A9E loc_2A9E:                               ; CODE XREF: _zlib_huflookup+32j
.text:00002A9E                                         ; _zlib_huflookup+5Aj ...
.text:00002A9E                 mov     esp, ebp
.text:00002AA0                 pop     ebp
.text:00002AA1                 retn
.text:00002AA1 _zlib_huflookup endp
.text:00002AA1
.text:00002AA1 ; ---------------------------------------------------------------------------
.text:00002AA2                 align 4
.text:00002AA4
.text:00002AA4 ; =============== S U B R O U T I N E =======================================
.text:00002AA4
.text:00002AA4 ; Attributes: bp-based frame
.text:00002AA4
.text:00002AA4 _zlib_emit_char proc near               ; CODE XREF: _zlib_decompress_block+6B9p
.text:00002AA4                                         ; _zlib_decompress_block+909p ...
.text:00002AA4
.text:00002AA4 arg_0           = dword ptr  8
.text:00002AA4 arg_4           = byte ptr  0Ch
.text:00002AA4
.text:00002AA4                 push    ebp
.text:00002AA5                 mov     ebp, esp
.text:00002AA7                 mov     eax, [ebp+arg_0]
.text:00002AAA                 mov     ecx, [eax+819Ch]
.text:00002AB0                 mov     edx, [ebp+arg_0]
.text:00002AB3                 mov     al, [ebp+arg_4]
.text:00002AB6                 mov     [edx+ecx+19Ch], al
.text:00002ABD                 mov     ecx, [ebp+arg_0]
.text:00002AC0                 mov     edx, [ecx+819Ch]
.text:00002AC6                 add     edx, 1
.text:00002AC9                 and     edx, 7FFFh
.text:00002ACF                 mov     eax, [ebp+arg_0]
.text:00002AD2                 mov     [eax+819Ch], edx
.text:00002AD8                 mov     ecx, [ebp+arg_0]
.text:00002ADB                 mov     edx, [ebp+arg_0]
.text:00002ADE                 mov     eax, [ecx+81A4h]
.text:00002AE4                 cmp     eax, [edx+81A8h]
.text:00002AEA                 jl      short loc_2B2B
.text:00002AEC                 mov     ecx, [ebp+arg_0]
.text:00002AEF                 mov     edx, [ecx+81A4h]
.text:00002AF5                 add     edx, 200h
.text:00002AFB                 mov     eax, [ebp+arg_0]
.text:00002AFE                 mov     [eax+81A8h], edx
.text:00002B04                 push    1
.text:00002B06                 mov     ecx, [ebp+arg_0]
.text:00002B09                 mov     edx, [ecx+81A8h]
.text:00002B0F                 push    edx
.text:00002B10                 mov     eax, [ebp+arg_0]
.text:00002B13                 mov     ecx, [eax+81A0h]
.text:00002B19                 push    ecx
.text:00002B1A                 call    _saferealloc
.text:00002B1F                 add     esp, 0Ch
.text:00002B22                 mov     edx, [ebp+arg_0]
.text:00002B25                 mov     [edx+81A0h], eax
.text:00002B2B
.text:00002B2B loc_2B2B:                               ; CODE XREF: _zlib_emit_char+46j
.text:00002B2B                 mov     eax, [ebp+arg_0]
.text:00002B2E                 mov     ecx, [eax+81A0h]
.text:00002B34                 mov     edx, [ebp+arg_0]
.text:00002B37                 mov     eax, [edx+81A4h]
.text:00002B3D                 mov     dl, [ebp+arg_4]
.text:00002B40                 mov     [ecx+eax], dl
.text:00002B43                 mov     eax, [ebp+arg_0]
.text:00002B46                 mov     ecx, [eax+81A4h]
.text:00002B4C                 add     ecx, 1
.text:00002B4F                 mov     edx, [ebp+arg_0]
.text:00002B52                 mov     [edx+81A4h], ecx
.text:00002B58                 cmp     ebp, esp
.text:00002B5A                 call    __RTC_CheckEsp
.text:00002B5F                 pop     ebp
.text:00002B60                 retn
.text:00002B60 _zlib_emit_char endp
.text:00002B60
.text:00002B60 ; ---------------------------------------------------------------------------
.text:00002B61                 align 4
.text:00002B61 _text           ends
.text:00002B61
.rtc$TMZ:00002B64 ; ===========================================================================
.rtc$TMZ:00002B64
.rtc$TMZ:00002B64 ; Segment type: Pure data
.rtc$TMZ:00002B64 ; Segment permissions: Read
.rtc$TMZ:00002B64 _rtc$TMZ        segment dword public 'DATA' use32
.rtc$TMZ:00002B64                 assume cs:_rtc$TMZ
.rtc$TMZ:00002B64                 ;org 2B64h
.rtc$TMZ:00002B64 ; COMDAT (pick any)
.rtc$TMZ:00002B64 __RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
.rtc$TMZ:00002B64 _rtc$TMZ        ends
.rtc$TMZ:00002B64
.rtc$IMZ:00002B68 ; ===========================================================================
.rtc$IMZ:00002B68
.rtc$IMZ:00002B68 ; Segment type: Pure data
.rtc$IMZ:00002B68 ; Segment permissions: Read
.rtc$IMZ:00002B68 _rtc$IMZ        segment dword public 'DATA' use32
.rtc$IMZ:00002B68                 assume cs:_rtc$IMZ
.rtc$IMZ:00002B68                 ;org 2B68h
.rtc$IMZ:00002B68 ; COMDAT (pick any)
.rtc$IMZ:00002B68 __RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
.rtc$IMZ:00002B68 _rtc$IMZ        ends
.rtc$IMZ:00002B68
UNDEF:00002B70 ; ===========================================================================
UNDEF:00002B70
UNDEF:00002B70 ; Segment type: Externs
UNDEF:00002B70 ; UNDEF
UNDEF:00002B70                 extrn _safemalloc:near  ; CODE XREF: _zlib_compress_init+18p
UNDEF:00002B70                                         ; _zlib_compress_init+47p ...
UNDEF:00002B74                 extrn __RTC_CheckEsp:near
UNDEF:00002B74                                         ; CODE XREF: _zlib_compress_init+8Bp
UNDEF:00002B74                                         ; _lz77_init+DCp ...
UNDEF:00002B78                 extrn __RTC_Shutdown:near
UNDEF:00002B78                                         ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
UNDEF:00002B7C                 extrn __RTC_InitBase:near
UNDEF:00002B7C                                         ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
UNDEF:00002B80                 extrn _saferealloc:near ; CODE XREF: _outbits+87p
UNDEF:00002B80                                         ; _zlib_emit_char+76p
UNDEF:00002B84 ; void __cdecl _wassert(const wchar_t *Message, const wchar_t *File, unsigned int Line)
UNDEF:00002B84                 extrn __wassert:near    ; CODE XREF: _outbits+20p
UNDEF:00002B84                                         ; _zlib_match+47p ...
UNDEF:00002B88                 extrn _safefree:near    ; CODE XREF: _zlib_compress_cleanup+18p
UNDEF:00002B88                                         ; _zlib_compress_cleanup+26p ...
UNDEF:00002B8C                 extrn ___security_cookie:near ; DATA XREF: _lz77_compress+1Dr
UNDEF:00002B8C                                         ; _zlib_decompress_init+1Cr ...
UNDEF:00002B90 ; __fastcall __security_check_cookie(x)
UNDEF:00002B90                 extrn @__security_check_cookie@4:near
UNDEF:00002B90                                         ; CODE XREF: _lz77_compress+65Dp
UNDEF:00002B90                                         ; _zlib_decompress_init+12Dp ...
UNDEF:00002B94 ; __fastcall _RTC_CheckStackVars(x, x)
UNDEF:00002B94                 extrn @_RTC_CheckStackVars@8:near
UNDEF:00002B94                                         ; CODE XREF: _lz77_compress+64Fp
UNDEF:00002B94                                         ; _zlib_decompress_init+120p ...
UNDEF:00002B98 ; void *__cdecl memset(void *Dst, int Val, size_t Size)
UNDEF:00002B98                 extrn _memset:near      ; CODE XREF: _zlib_decompress_init+46p
UNDEF:00002B98                                         ; _zlib_decompress_init+59p ...
UNDEF:00002B98
UNDEF:00002B98
UNDEF:00002B98                 end
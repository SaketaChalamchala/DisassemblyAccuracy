.data:00000000 ;
.data:00000000 ; +-------------------------------------------------------------------------+
.data:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.data:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.data:00000000 ; |                      License info: 48-3677-7074-51                      |
.data:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.data:00000000 ; +-------------------------------------------------------------------------+
.data:00000000 ;
.data:00000000 ; Input MD5   : 8787EEFECA0BBFF0100DF174398D086C
.data:00000000 ; Input CRC32 : 2F337CA1
.data:00000000
.data:00000000 ; File Name   : C:\workspace\Putty\windows\VS2010\putty\Debug\winproxy.obj
.data:00000000 ; Format      : COFF (X386MAGIC)
.data:00000000 ; includelib "uuid.lib"
.data:00000000 ; includelib "LIBCMTD"
.data:00000000 ; includelib "OLDNAMES"
.data:00000000
.data:00000000                 .686p
.data:00000000                 .mmx
.data:00000000                 .model flat
.data:00000000
.data:00000000 ; ===========================================================================
.data:00000000
.data:00000000 ; Segment type: Pure data
.data:00000000 ; Segment permissions: Read/Write
.data:00000000 _data           segment dword public 'DATA' use32
.data:00000000                 assume cs:_data
.data:00000000 $SG85653        db 'Starting local proxy command: %s',0
.data:00000000                                         ; DATA XREF: _platform_new_connection+5Eo
.data:00000021                 align 4
.data:00000024 $SG85658        db 'Unable to create pipes for proxy command',0
.data:00000024                                         ; DATA XREF: _platform_new_connection+CBo
.data:0000004D                 align 10h
.data:00000050 $SG85661        db 'Unable to create pipes for proxy command',0
.data:00000050                                         ; DATA XREF: _platform_new_connection+11Ao
.data:00000079                 align 4
.data:00000079 _data           ends
.data:00000079
.text:0000007C ; ===========================================================================
.text:0000007C
.text:0000007C ; Segment type: Pure code
.text:0000007C ; Segment permissions: Read/Execute
.text:0000007C _text           segment para public 'CODE' use32
.text:0000007C                 assume cs:_text
.text:0000007C                 ;org 7Ch
.text:0000007C                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text:0000007C
.text:0000007C ; =============== S U B R O U T I N E =======================================
.text:0000007C
.text:0000007C ; Attributes: bp-based frame
.text:0000007C
.text:0000007C                 public _platform_new_connection
.text:0000007C _platform_new_connection proc near
.text:0000007C
.text:0000007C var_B8          = dword ptr -0B8h
.text:0000007C var_B4          = dword ptr -0B4h
.text:0000007C var_B0          = dword ptr -0B0h
.text:0000007C ProcessInformation= _PROCESS_INFORMATION ptr -0A8h
.text:0000007C StartupInfo     = _STARTUPINFOA ptr -90h
.text:0000007C PipeAttributes  = _SECURITY_ATTRIBUTES ptr -44h
.text:0000007C var_30          = dword ptr -30h
.text:0000007C hWritePipe      = dword ptr -24h
.text:0000007C hReadPipe       = dword ptr -18h
.text:0000007C hObject         = dword ptr -0Ch
.text:0000007C lpCommandLine   = dword ptr -4
.text:0000007C arg_0           = dword ptr  8
.text:0000007C arg_8           = dword ptr  10h
.text:0000007C arg_1C          = dword ptr  24h
.text:0000007C arg_20          = dword ptr  28h
.text:0000007C
.text:0000007C                 push    ebp
.text:0000007D                 mov     ebp, esp
.text:0000007F                 sub     esp, 0B8h
.text:00000085                 push    esi
.text:00000086                 push    edi
.text:00000087                 lea     edi, [ebp+var_B8]
.text:0000008D                 mov     ecx, 2Eh ; '.'
.text:00000092                 mov     eax, 0CCCCCCCCh
.text:00000097                 rep stosd
.text:00000099                 push    0Dh
.text:0000009B                 mov     eax, [ebp+arg_20]
.text:0000009E                 push    eax
.text:0000009F                 call    _conf_get_int
.text:000000A4                 add     esp, 8
.text:000000A7                 cmp     eax, 5
.text:000000AA                 jz      short loc_B3
.text:000000AC                 xor     eax, eax
.text:000000AE                 jmp     loc_309
.text:000000B3 ; ---------------------------------------------------------------------------
.text:000000B3
.text:000000B3 loc_B3:                                 ; CODE XREF: _platform_new_connection+2Ej
.text:000000B3                 mov     ecx, [ebp+arg_20]
.text:000000B6                 push    ecx
.text:000000B7                 mov     edx, [ebp+arg_8]
.text:000000BA                 push    edx
.text:000000BB                 mov     eax, [ebp+arg_0]
.text:000000BE                 push    eax
.text:000000BF                 call    _format_telnet_command
.text:000000C4                 add     esp, 0Ch
.text:000000C7                 mov     [ebp+lpCommandLine], eax
.text:000000CA                 mov     ecx, [ebp+arg_0]
.text:000000CD                 push    ecx
.text:000000CE                 call    _sk_addr_free
.text:000000D3                 add     esp, 4
.text:000000D6                 mov     edx, [ebp+lpCommandLine]
.text:000000D9                 push    edx
.text:000000DA                 push    offset $SG85653 ; "Starting local proxy command: %s"
.text:000000DF                 call    _dupprintf
.text:000000E4                 add     esp, 8
.text:000000E7                 mov     [ebp+var_B0], eax
.text:000000ED                 mov     eax, [ebp+var_B0]
.text:000000F3                 push    eax
.text:000000F4                 push    0
.text:000000F6                 call    _logevent
.text:000000FB                 add     esp, 8
.text:000000FE                 mov     ecx, [ebp+var_B0]
.text:00000104                 push    ecx
.text:00000105                 call    _safefree
.text:0000010A                 add     esp, 4
.text:0000010D                 mov     [ebp+PipeAttributes.nLength], 0Ch
.text:00000114                 mov     [ebp+PipeAttributes.lpSecurityDescriptor], 0
.text:0000011B                 mov     [ebp+PipeAttributes.bInheritHandle], 1
.text:00000122                 mov     esi, esp
.text:00000124                 push    0               ; nSize
.text:00000126                 lea     edx, [ebp+PipeAttributes]
.text:00000129                 push    edx             ; lpPipeAttributes
.text:0000012A                 lea     eax, [ebp+hWritePipe]
.text:0000012D                 push    eax             ; hWritePipe
.text:0000012E                 lea     ecx, [ebp+hReadPipe]
.text:00000131                 push    ecx             ; hReadPipe
.text:00000132                 call    dword ptr ds:__imp__CreatePipe@16 ; CreatePipe(x,x,x,x)
.text:00000138                 cmp     esi, esp
.text:0000013A                 call    __RTC_CheckEsp
.text:0000013F                 test    eax, eax
.text:00000141                 jnz     short loc_171
.text:00000143                 mov     edx, [ebp+arg_1C]
.text:00000146                 push    edx
.text:00000147                 push    offset $SG85658 ; "Unable to create pipes for proxy comman"...
.text:0000014C                 call    _new_error_socket
.text:00000151                 add     esp, 8
.text:00000154                 mov     [ebp+var_B4], eax
.text:0000015A                 mov     eax, [ebp+lpCommandLine]
.text:0000015D                 push    eax
.text:0000015E                 call    _safefree
.text:00000163                 add     esp, 4
.text:00000166                 mov     eax, [ebp+var_B4]
.text:0000016C                 jmp     loc_309
.text:00000171 ; ---------------------------------------------------------------------------
.text:00000171
.text:00000171 loc_171:                                ; CODE XREF: _platform_new_connection+C5j
.text:00000171                 mov     esi, esp
.text:00000173                 push    0               ; nSize
.text:00000175                 lea     ecx, [ebp+PipeAttributes]
.text:00000178                 push    ecx             ; lpPipeAttributes
.text:00000179                 lea     edx, [ebp+hObject]
.text:0000017C                 push    edx             ; hWritePipe
.text:0000017D                 lea     eax, [ebp+var_30]
.text:00000180                 push    eax             ; hReadPipe
.text:00000181                 call    dword ptr ds:__imp__CreatePipe@16 ; CreatePipe(x,x,x,x)
.text:00000187                 cmp     esi, esp
.text:00000189                 call    __RTC_CheckEsp
.text:0000018E                 test    eax, eax
.text:00000190                 jnz     short loc_1E6
.text:00000192                 mov     ecx, [ebp+arg_1C]
.text:00000195                 push    ecx
.text:00000196                 push    offset $SG85661 ; "Unable to create pipes for proxy comman"...
.text:0000019B                 call    _new_error_socket
.text:000001A0                 add     esp, 8
.text:000001A3                 mov     [ebp+var_B8], eax
.text:000001A9                 mov     edx, [ebp+lpCommandLine]
.text:000001AC                 push    edx
.text:000001AD                 call    _safefree
.text:000001B2                 add     esp, 4
.text:000001B5                 mov     esi, esp
.text:000001B7                 mov     eax, [ebp+hReadPipe]
.text:000001BA                 push    eax             ; hObject
.text:000001BB                 call    dword ptr ds:__imp__CloseHandle@4 ; CloseHandle(x)
.text:000001C1                 cmp     esi, esp
.text:000001C3                 call    __RTC_CheckEsp
.text:000001C8                 mov     esi, esp
.text:000001CA                 mov     ecx, [ebp+hWritePipe]
.text:000001CD                 push    ecx             ; hObject
.text:000001CE                 call    dword ptr ds:__imp__CloseHandle@4 ; CloseHandle(x)
.text:000001D4                 cmp     esi, esp
.text:000001D6                 call    __RTC_CheckEsp
.text:000001DB                 mov     eax, [ebp+var_B8]
.text:000001E1                 jmp     loc_309
.text:000001E6 ; ---------------------------------------------------------------------------
.text:000001E6
.text:000001E6 loc_1E6:                                ; CODE XREF: _platform_new_connection+114j
.text:000001E6                 mov     esi, esp
.text:000001E8                 push    0               ; dwFlags
.text:000001EA                 push    1               ; dwMask
.text:000001EC                 mov     edx, [ebp+hObject]
.text:000001EF                 push    edx             ; hObject
.text:000001F0                 call    dword ptr ds:__imp__SetHandleInformation@12 ; SetHandleInformation(x,x,x)
.text:000001F6                 cmp     esi, esp
.text:000001F8                 call    __RTC_CheckEsp
.text:000001FD                 mov     esi, esp
.text:000001FF                 push    0               ; dwFlags
.text:00000201                 push    1               ; dwMask
.text:00000203                 mov     eax, [ebp+hReadPipe]
.text:00000206                 push    eax             ; hObject
.text:00000207                 call    dword ptr ds:__imp__SetHandleInformation@12 ; SetHandleInformation(x,x,x)
.text:0000020D                 cmp     esi, esp
.text:0000020F                 call    __RTC_CheckEsp
.text:00000214                 mov     [ebp+StartupInfo.cb], 44h ; 'D'
.text:0000021E                 mov     [ebp+StartupInfo.lpReserved], 0
.text:00000228                 mov     [ebp+StartupInfo.lpDesktop], 0
.text:00000232                 mov     [ebp+StartupInfo.lpTitle], 0
.text:0000023C                 mov     [ebp+StartupInfo.dwFlags], 100h
.text:00000243                 xor     ecx, ecx
.text:00000245                 mov     [ebp+StartupInfo.cbReserved2], cx
.text:00000249                 mov     [ebp+StartupInfo.lpReserved2], 0
.text:00000250                 mov     edx, [ebp+var_30]
.text:00000253                 mov     [ebp+StartupInfo.hStdInput], edx
.text:00000256                 mov     eax, [ebp+hWritePipe]
.text:00000259                 mov     [ebp+StartupInfo.hStdOutput], eax
.text:0000025C                 mov     [ebp+StartupInfo.hStdError], 0
.text:00000263                 mov     esi, esp
.text:00000265                 lea     ecx, [ebp+ProcessInformation]
.text:0000026B                 push    ecx             ; lpProcessInformation
.text:0000026C                 lea     edx, [ebp+StartupInfo]
.text:00000272                 push    edx             ; lpStartupInfo
.text:00000273                 push    0               ; lpCurrentDirectory
.text:00000275                 push    0               ; lpEnvironment
.text:00000277                 push    8000020h        ; dwCreationFlags
.text:0000027C                 push    1               ; bInheritHandles
.text:0000027E                 push    0               ; lpThreadAttributes
.text:00000280                 push    0               ; lpProcessAttributes
.text:00000282                 mov     eax, [ebp+lpCommandLine]
.text:00000285                 push    eax             ; lpCommandLine
.text:00000286                 push    0               ; lpApplicationName
.text:00000288                 call    dword ptr ds:__imp__CreateProcessA@40 ; CreateProcessA(x,x,x,x,x,x,x,x,x,x)
.text:0000028E                 cmp     esi, esp
.text:00000290                 call    __RTC_CheckEsp
.text:00000295                 mov     esi, esp
.text:00000297                 mov     ecx, [ebp+ProcessInformation.hProcess]
.text:0000029D                 push    ecx             ; hObject
.text:0000029E                 call    dword ptr ds:__imp__CloseHandle@4 ; CloseHandle(x)
.text:000002A4                 cmp     esi, esp
.text:000002A6                 call    __RTC_CheckEsp
.text:000002AB                 mov     esi, esp
.text:000002AD                 mov     edx, [ebp+ProcessInformation.hThread]
.text:000002B3                 push    edx             ; hObject
.text:000002B4                 call    dword ptr ds:__imp__CloseHandle@4 ; CloseHandle(x)
.text:000002BA                 cmp     esi, esp
.text:000002BC                 call    __RTC_CheckEsp
.text:000002C1                 mov     eax, [ebp+lpCommandLine]
.text:000002C4                 push    eax
.text:000002C5                 call    _safefree
.text:000002CA                 add     esp, 4
.text:000002CD                 mov     esi, esp
.text:000002CF                 mov     ecx, [ebp+var_30]
.text:000002D2                 push    ecx             ; hObject
.text:000002D3                 call    dword ptr ds:__imp__CloseHandle@4 ; CloseHandle(x)
.text:000002D9                 cmp     esi, esp
.text:000002DB                 call    __RTC_CheckEsp
.text:000002E0                 mov     esi, esp
.text:000002E2                 mov     edx, [ebp+hWritePipe]
.text:000002E5                 push    edx             ; hObject
.text:000002E6                 call    dword ptr ds:__imp__CloseHandle@4 ; CloseHandle(x)
.text:000002EC                 cmp     esi, esp
.text:000002EE                 call    __RTC_CheckEsp
.text:000002F3                 push    0
.text:000002F5                 mov     eax, [ebp+arg_1C]
.text:000002F8                 push    eax
.text:000002F9                 mov     ecx, [ebp+hReadPipe]
.text:000002FC                 push    ecx
.text:000002FD                 mov     edx, [ebp+hObject]
.text:00000300                 push    edx
.text:00000301                 call    _make_handle_socket
.text:00000306                 add     esp, 10h
.text:00000309
.text:00000309 loc_309:                                ; CODE XREF: _platform_new_connection+32j
.text:00000309                                         ; _platform_new_connection+F0j ...
.text:00000309                 push    edx
.text:0000030A                 mov     ecx, ebp
.text:0000030C                 push    eax
.text:0000030D                 lea     edx, $LN14
.text:00000313                 call    @_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
.text:00000318                 pop     eax
.text:00000319                 pop     edx
.text:0000031A                 pop     edi
.text:0000031B                 pop     esi
.text:0000031C                 add     esp, 0B8h
.text:00000322                 cmp     ebp, esp
.text:00000324                 call    __RTC_CheckEsp
.text:00000329                 mov     esp, ebp
.text:0000032B                 pop     ebp
.text:0000032C                 retn
.text:0000032C _platform_new_connection endp
.text:0000032C
.text:0000032C ; ---------------------------------------------------------------------------
.text:0000032D                 align 10h
.text:00000330 $LN14           dd 7                    ; DATA XREF: _platform_new_connection+291o
.text:00000334                 dd offset $LN13
.text:00000338 $LN13           dd 0FFFFFFF4h, 4        ; DATA XREF: .text:00000334o
.text:00000340                 dd offset $LN6          ; "us_to_cmd"
.text:00000344                 dd 0FFFFFFE8h, 4
.text:0000034C                 dd offset $LN7          ; "us_from_cmd"
.text:00000350                 dd 0FFFFFFDCh, 4
.text:00000358                 dd offset $LN8          ; "cmd_to_us"
.text:0000035C                 dd 0FFFFFFD0h, 4
.text:00000364                 dd offset $LN9          ; "cmd_from_us"
.text:00000368                 dd 0FFFFFFBCh, 0Ch
.text:00000370                 dd offset $LN10
.text:00000374                 dd 0FFFFFF70h, 44h
.text:0000037C                 dd offset $LN11
.text:00000380                 dd 0FFFFFF58h, 10h
.text:00000388                 dd offset $LN12
.text:0000038C $LN12           db 70h, 69h, 0          ; DATA XREF: .text:00000388o
.text:0000038F $LN11           db 73h                  ; DATA XREF: .text:0000037Co
.text:00000390                 db 69h, 0
.text:00000392 $LN10           dw 6173h                ; DATA XREF: .text:00000370o
.text:00000394                 db 0
.text:00000395 $LN9            db 'cmd_from_us',0      ; DATA XREF: .text:00000364o
.text:000003A1 $LN8            db 'cmd_to_us',0        ; DATA XREF: .text:00000358o
.text:000003AB $LN7            db 'us_from_cmd',0      ; DATA XREF: .text:0000034Co
.text:000003B7 $LN6            db 'us_to_cmd',0        ; DATA XREF: .text:00000340o
.text:000003C1                 align 4
.text:000003C1 _text           ends
.text:000003C1
.rtc$TMZ:000003C4 ; ===========================================================================
.rtc$TMZ:000003C4
.rtc$TMZ:000003C4 ; Segment type: Pure data
.rtc$TMZ:000003C4 ; Segment permissions: Read
.rtc$TMZ:000003C4 _rtc$TMZ        segment dword public 'DATA' use32
.rtc$TMZ:000003C4                 assume cs:_rtc$TMZ
.rtc$TMZ:000003C4                 ;org 3C4h
.rtc$TMZ:000003C4 ; COMDAT (pick any)
.rtc$TMZ:000003C4 __RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
.rtc$TMZ:000003C4 _rtc$TMZ        ends
.rtc$TMZ:000003C4
.rtc$IMZ:000003C8 ; ===========================================================================
.rtc$IMZ:000003C8
.rtc$IMZ:000003C8 ; Segment type: Pure data
.rtc$IMZ:000003C8 ; Segment permissions: Read
.rtc$IMZ:000003C8 _rtc$IMZ        segment dword public 'DATA' use32
.rtc$IMZ:000003C8                 assume cs:_rtc$IMZ
.rtc$IMZ:000003C8                 ;org 3C8h
.rtc$IMZ:000003C8 ; COMDAT (pick any)
.rtc$IMZ:000003C8 __RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
.rtc$IMZ:000003C8 _rtc$IMZ        ends
.rtc$IMZ:000003C8
UNDEF:000003D0 ; ===========================================================================
UNDEF:000003D0
UNDEF:000003D0 ; Segment type: Externs
UNDEF:000003D0 ; UNDEF
UNDEF:000003D0                 extrn _make_handle_socket:near
UNDEF:000003D0                                         ; CODE XREF: _platform_new_connection+285p
UNDEF:000003D4 ; BOOL __stdcall CreateProcessA(LPCSTR lpApplicationName, LPSTR lpCommandLine, LPSECURITY_ATTRIBUTES lpProcessAttributes, LPSECURITY_ATTRIBUTES lpThreadAttributes, BOOL bInheritHandles, DWORD dwCreationFlags, LPVOID lpEnvironment, LPCSTR lpCurrentDirectory, LPSTARTUPINFOA lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation)
UNDEF:000003D4                 extrn __imp__CreateProcessA@40:near
UNDEF:000003D4                                         ; CODE XREF: _platform_new_connection+20Cp
UNDEF:000003D4                                         ; DATA XREF: _platform_new_connection+20Cr
UNDEF:000003D8 ; BOOL __stdcall SetHandleInformation(HANDLE hObject, DWORD dwMask, DWORD dwFlags)
UNDEF:000003D8                 extrn __imp__SetHandleInformation@12:near
UNDEF:000003D8                                         ; CODE XREF: _platform_new_connection+174p
UNDEF:000003D8                                         ; _platform_new_connection+18Bp
UNDEF:000003D8                                         ; DATA XREF: ...
UNDEF:000003DC ; BOOL __stdcall CloseHandle(HANDLE hObject)
UNDEF:000003DC                 extrn __imp__CloseHandle@4:near
UNDEF:000003DC                                         ; CODE XREF: _platform_new_connection+13Fp
UNDEF:000003DC                                         ; _platform_new_connection+152p ...
UNDEF:000003E0                 extrn _new_error_socket:near
UNDEF:000003E0                                         ; CODE XREF: _platform_new_connection+D0p
UNDEF:000003E0                                         ; _platform_new_connection+11Fp
UNDEF:000003E4 ; BOOL __stdcall CreatePipe(PHANDLE hReadPipe, PHANDLE hWritePipe, LPSECURITY_ATTRIBUTES lpPipeAttributes, DWORD nSize)
UNDEF:000003E4                 extrn __imp__CreatePipe@16:near
UNDEF:000003E4                                         ; CODE XREF: _platform_new_connection+B6p
UNDEF:000003E4                                         ; _platform_new_connection+105p
UNDEF:000003E4                                         ; DATA XREF: ...
UNDEF:000003E8                 extrn _safefree:near    ; CODE XREF: _platform_new_connection+89p
UNDEF:000003E8                                         ; _platform_new_connection+E2p ...
UNDEF:000003EC                 extrn _logevent:near    ; CODE XREF: _platform_new_connection+7Ap
UNDEF:000003F0                 extrn _dupprintf:near   ; CODE XREF: _platform_new_connection+63p
UNDEF:000003F4                 extrn _sk_addr_free:near
UNDEF:000003F4                                         ; CODE XREF: _platform_new_connection+52p
UNDEF:000003F8                 extrn _format_telnet_command:near
UNDEF:000003F8                                         ; CODE XREF: _platform_new_connection+43p
UNDEF:000003FC                 extrn _conf_get_int:near
UNDEF:000003FC                                         ; CODE XREF: _platform_new_connection+23p
UNDEF:00000400 ; __fastcall _RTC_CheckStackVars(x, x)
UNDEF:00000400                 extrn @_RTC_CheckStackVars@8:near
UNDEF:00000400                                         ; CODE XREF: _platform_new_connection+297p
UNDEF:00000404                 extrn __RTC_CheckEsp:near
UNDEF:00000404                                         ; CODE XREF: _platform_new_connection+BEp
UNDEF:00000404                                         ; _platform_new_connection+10Dp ...
UNDEF:00000408                 extrn __RTC_Shutdown:near
UNDEF:00000408                                         ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
UNDEF:0000040C                 extrn __RTC_InitBase:near
UNDEF:0000040C                                         ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
UNDEF:0000040C
UNDEF:0000040C
UNDEF:0000040C                 end
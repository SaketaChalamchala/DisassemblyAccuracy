.bss:00000000 ;
.bss:00000000 ; +-------------------------------------------------------------------------+
.bss:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.bss:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.bss:00000000 ; |                      License info: 48-3677-7074-51                      |
.bss:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.bss:00000000 ; +-------------------------------------------------------------------------+
.bss:00000000 ;
.bss:00000000 ; Input MD5   : E7536D54627A4FA99D5DE40E2177571C
.bss:00000000 ; Input CRC32 : CD929817
.bss:00000000
.bss:00000000 ; File Name   : C:\workspace\Putty\windows\VS2010\putty\Debug\sshrand.obj
.bss:00000000 ; Format      : COFF (X386MAGIC)
.bss:00000000 ; includelib "uuid.lib"
.bss:00000000 ; includelib "LIBCMTD"
.bss:00000000 ; includelib "OLDNAMES"
.bss:00000000
.bss:00000000                 include uni.inc ; see unicode subdir of ida for info on unicode
.bss:00000000
.bss:00000000                 .686p
.bss:00000000                 .mmx
.bss:00000000                 .model flat
.bss:00000000 .intel_syntax noprefix
.bss:00000000
.bss:00000000 ; ===========================================================================
.bss:00000000
.bss:00000000 ; Segment type: Uninitialized
.bss:00000000 ; Segment permissions: Read/Write
.bss:00000000 ; Segment alignment 'qword' can not be represented in assembly
.bss:00000000 _bss            segment para public 'BSS' use32
.bss:00000000                 assume cs:_bss
.bss:00000000                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.bss:00000000 _pool           dd ?                    ; DATA XREF: _random_add_noise+BFr
.bss:00000000                                         ; _random_add_noise+CEw ...
.bss:00000004                 db    ? ;
.bss:00000005                 db    ? ;
.bss:00000006                 db    ? ;
.bss:00000007                 db    ? ;
.bss:00000008                 db    ? ;
.bss:00000009                 db    ? ;
.bss:0000000A                 db    ? ;
.bss:0000000B                 db    ? ;
.bss:0000000C                 db    ? ;
.bss:0000000D                 db    ? ;
.bss:0000000E                 db    ? ;
.bss:0000000F                 db    ? ;
.bss:00000010                 db    ? ;
.bss:00000011                 db    ? ;
.bss:00000012                 db    ? ;
.bss:00000013                 db    ? ;
.bss:00000014                 db    ? ;
.bss:00000015                 db    ? ;
.bss:00000016                 db    ? ;
.bss:00000017                 db    ? ;
.bss:00000018                 db    ? ;
.bss:00000019                 db    ? ;
.bss:0000001A                 db    ? ;
.bss:0000001B                 db    ? ;
.bss:0000001C                 db    ? ;
.bss:0000001D                 db    ? ;
.bss:0000001E                 db    ? ;
.bss:0000001F                 db    ? ;
.bss:00000020                 db    ? ;
.bss:00000021                 db    ? ;
.bss:00000022                 db    ? ;
.bss:00000023                 db    ? ;
.bss:00000024                 db    ? ;
.bss:00000025                 db    ? ;
.bss:00000026                 db    ? ;
.bss:00000027                 db    ? ;
.bss:00000028                 db    ? ;
.bss:00000029                 db    ? ;
.bss:0000002A                 db    ? ;
.bss:0000002B                 db    ? ;
.bss:0000002C                 db    ? ;
.bss:0000002D                 db    ? ;
.bss:0000002E                 db    ? ;
.bss:0000002F                 db    ? ;
.bss:00000030                 db    ? ;
.bss:00000031                 db    ? ;
.bss:00000032                 db    ? ;
.bss:00000033                 db    ? ;
.bss:00000034                 db    ? ;
.bss:00000035                 db    ? ;
.bss:00000036                 db    ? ;
.bss:00000037                 db    ? ;
.bss:00000038                 db    ? ;
.bss:00000039                 db    ? ;
.bss:0000003A                 db    ? ;
.bss:0000003B                 db    ? ;
.bss:0000003C                 db    ? ;
.bss:0000003D                 db    ? ;
.bss:0000003E                 db    ? ;
.bss:0000003F                 db    ? ;
.bss:00000040                 db    ? ;
.bss:00000041                 db    ? ;
.bss:00000042                 db    ? ;
.bss:00000043                 db    ? ;
.bss:00000044                 db    ? ;
.bss:00000045                 db    ? ;
.bss:00000046                 db    ? ;
.bss:00000047                 db    ? ;
.bss:00000048                 db    ? ;
.bss:00000049                 db    ? ;
.bss:0000004A                 db    ? ;
.bss:0000004B                 db    ? ;
.bss:0000004C                 db    ? ;
.bss:0000004D                 db    ? ;
.bss:0000004E                 db    ? ;
.bss:0000004F                 db    ? ;
.bss:00000050                 db    ? ;
.bss:00000051                 db    ? ;
.bss:00000052                 db    ? ;
.bss:00000053                 db    ? ;
.bss:00000054                 db    ? ;
.bss:00000055                 db    ? ;
.bss:00000056                 db    ? ;
.bss:00000057                 db    ? ;
.bss:00000058                 db    ? ;
.bss:00000059                 db    ? ;
.bss:0000005A                 db    ? ;
.bss:0000005B                 db    ? ;
.bss:0000005C                 db    ? ;
.bss:0000005D                 db    ? ;
.bss:0000005E                 db    ? ;
.bss:0000005F                 db    ? ;
.bss:00000060                 db    ? ;
.bss:00000061                 db    ? ;
.bss:00000062                 db    ? ;
.bss:00000063                 db    ? ;
.bss:00000064                 db    ? ;
.bss:00000065                 db    ? ;
.bss:00000066                 db    ? ;
.bss:00000067                 db    ? ;
.bss:00000068                 db    ? ;
.bss:00000069                 db    ? ;
.bss:0000006A                 db    ? ;
.bss:0000006B                 db    ? ;
.bss:0000006C                 db    ? ;
.bss:0000006D                 db    ? ;
.bss:0000006E                 db    ? ;
.bss:0000006F                 db    ? ;
.bss:00000070                 db    ? ;
.bss:00000071                 db    ? ;
.bss:00000072                 db    ? ;
.bss:00000073                 db    ? ;
.bss:00000074                 db    ? ;
.bss:00000075                 db    ? ;
.bss:00000076                 db    ? ;
.bss:00000077                 db    ? ;
.bss:00000078                 db    ? ;
.bss:00000079                 db    ? ;
.bss:0000007A                 db    ? ;
.bss:0000007B                 db    ? ;
.bss:0000007C                 db    ? ;
.bss:0000007D                 db    ? ;
.bss:0000007E                 db    ? ;
.bss:0000007F                 db    ? ;
.bss:00000080                 db    ? ;
.bss:00000081                 db    ? ;
.bss:00000082                 db    ? ;
.bss:00000083                 db    ? ;
.bss:00000084                 db    ? ;
.bss:00000085                 db    ? ;
.bss:00000086                 db    ? ;
.bss:00000087                 db    ? ;
.bss:00000088                 db    ? ;
.bss:00000089                 db    ? ;
.bss:0000008A                 db    ? ;
.bss:0000008B                 db    ? ;
.bss:0000008C                 db    ? ;
.bss:0000008D                 db    ? ;
.bss:0000008E                 db    ? ;
.bss:0000008F                 db    ? ;
.bss:00000090                 db    ? ;
.bss:00000091                 db    ? ;
.bss:00000092                 db    ? ;
.bss:00000093                 db    ? ;
.bss:00000094                 db    ? ;
.bss:00000095                 db    ? ;
.bss:00000096                 db    ? ;
.bss:00000097                 db    ? ;
.bss:00000098                 db    ? ;
.bss:00000099                 db    ? ;
.bss:0000009A                 db    ? ;
.bss:0000009B                 db    ? ;
.bss:0000009C                 db    ? ;
.bss:0000009D                 db    ? ;
.bss:0000009E                 db    ? ;
.bss:0000009F                 db    ? ;
.bss:000000A0                 db    ? ;
.bss:000000A1                 db    ? ;
.bss:000000A2                 db    ? ;
.bss:000000A3                 db    ? ;
.bss:000000A4                 db    ? ;
.bss:000000A5                 db    ? ;
.bss:000000A6                 db    ? ;
.bss:000000A7                 db    ? ;
.bss:000000A8                 db    ? ;
.bss:000000A9                 db    ? ;
.bss:000000AA                 db    ? ;
.bss:000000AB                 db    ? ;
.bss:000000AC                 db    ? ;
.bss:000000AD                 db    ? ;
.bss:000000AE                 db    ? ;
.bss:000000AF                 db    ? ;
.bss:000000B0                 db    ? ;
.bss:000000B1                 db    ? ;
.bss:000000B2                 db    ? ;
.bss:000000B3                 db    ? ;
.bss:000000B4                 db    ? ;
.bss:000000B5                 db    ? ;
.bss:000000B6                 db    ? ;
.bss:000000B7                 db    ? ;
.bss:000000B8                 db    ? ;
.bss:000000B9                 db    ? ;
.bss:000000BA                 db    ? ;
.bss:000000BB                 db    ? ;
.bss:000000BC                 db    ? ;
.bss:000000BD                 db    ? ;
.bss:000000BE                 db    ? ;
.bss:000000BF                 db    ? ;
.bss:000000C0                 db    ? ;
.bss:000000C1                 db    ? ;
.bss:000000C2                 db    ? ;
.bss:000000C3                 db    ? ;
.bss:000000C4                 db    ? ;
.bss:000000C5                 db    ? ;
.bss:000000C6                 db    ? ;
.bss:000000C7                 db    ? ;
.bss:000000C8                 db    ? ;
.bss:000000C9                 db    ? ;
.bss:000000CA                 db    ? ;
.bss:000000CB                 db    ? ;
.bss:000000CC                 db    ? ;
.bss:000000CD                 db    ? ;
.bss:000000CE                 db    ? ;
.bss:000000CF                 db    ? ;
.bss:000000D0                 db    ? ;
.bss:000000D1                 db    ? ;
.bss:000000D2                 db    ? ;
.bss:000000D3                 db    ? ;
.bss:000000D4                 db    ? ;
.bss:000000D5                 db    ? ;
.bss:000000D6                 db    ? ;
.bss:000000D7                 db    ? ;
.bss:000000D8                 db    ? ;
.bss:000000D9                 db    ? ;
.bss:000000DA                 db    ? ;
.bss:000000DB                 db    ? ;
.bss:000000DC                 db    ? ;
.bss:000000DD                 db    ? ;
.bss:000000DE                 db    ? ;
.bss:000000DF                 db    ? ;
.bss:000000E0                 db    ? ;
.bss:000000E1                 db    ? ;
.bss:000000E2                 db    ? ;
.bss:000000E3                 db    ? ;
.bss:000000E4                 db    ? ;
.bss:000000E5                 db    ? ;
.bss:000000E6                 db    ? ;
.bss:000000E7                 db    ? ;
.bss:000000E8                 db    ? ;
.bss:000000E9                 db    ? ;
.bss:000000EA                 db    ? ;
.bss:000000EB                 db    ? ;
.bss:000000EC                 db    ? ;
.bss:000000ED                 db    ? ;
.bss:000000EE                 db    ? ;
.bss:000000EF                 db    ? ;
.bss:000000F0                 db    ? ;
.bss:000000F1                 db    ? ;
.bss:000000F2                 db    ? ;
.bss:000000F3                 db    ? ;
.bss:000000F4                 db    ? ;
.bss:000000F5                 db    ? ;
.bss:000000F6                 db    ? ;
.bss:000000F7                 db    ? ;
.bss:000000F8                 db    ? ;
.bss:000000F9                 db    ? ;
.bss:000000FA                 db    ? ;
.bss:000000FB                 db    ? ;
.bss:000000FC                 db    ? ;
.bss:000000FD                 db    ? ;
.bss:000000FE                 db    ? ;
.bss:000000FF                 db    ? ;
.bss:00000100                 db    ? ;
.bss:00000101                 db    ? ;
.bss:00000102                 db    ? ;
.bss:00000103                 db    ? ;
.bss:00000104                 db    ? ;
.bss:00000105                 db    ? ;
.bss:00000106                 db    ? ;
.bss:00000107                 db    ? ;
.bss:00000108                 db    ? ;
.bss:00000109                 db    ? ;
.bss:0000010A                 db    ? ;
.bss:0000010B                 db    ? ;
.bss:0000010C                 db    ? ;
.bss:0000010D                 db    ? ;
.bss:0000010E                 db    ? ;
.bss:0000010F                 db    ? ;
.bss:00000110                 db    ? ;
.bss:00000111                 db    ? ;
.bss:00000112                 db    ? ;
.bss:00000113                 db    ? ;
.bss:00000114                 db    ? ;
.bss:00000115                 db    ? ;
.bss:00000116                 db    ? ;
.bss:00000117                 db    ? ;
.bss:00000118                 db    ? ;
.bss:00000119                 db    ? ;
.bss:0000011A                 db    ? ;
.bss:0000011B                 db    ? ;
.bss:0000011C                 db    ? ;
.bss:0000011D                 db    ? ;
.bss:0000011E                 db    ? ;
.bss:0000011F                 db    ? ;
.bss:00000120                 db    ? ;
.bss:00000121                 db    ? ;
.bss:00000122                 db    ? ;
.bss:00000123                 db    ? ;
.bss:00000124                 db    ? ;
.bss:00000125                 db    ? ;
.bss:00000126                 db    ? ;
.bss:00000127                 db    ? ;
.bss:00000128                 db    ? ;
.bss:00000129                 db    ? ;
.bss:0000012A                 db    ? ;
.bss:0000012B                 db    ? ;
.bss:0000012C                 db    ? ;
.bss:0000012D                 db    ? ;
.bss:0000012E                 db    ? ;
.bss:0000012F                 db    ? ;
.bss:00000130                 db    ? ;
.bss:00000131                 db    ? ;
.bss:00000132                 db    ? ;
.bss:00000133                 db    ? ;
.bss:00000134                 db    ? ;
.bss:00000135                 db    ? ;
.bss:00000136                 db    ? ;
.bss:00000137                 db    ? ;
.bss:00000138                 db    ? ;
.bss:00000139                 db    ? ;
.bss:0000013A                 db    ? ;
.bss:0000013B                 db    ? ;
.bss:0000013C                 db    ? ;
.bss:0000013D                 db    ? ;
.bss:0000013E                 db    ? ;
.bss:0000013F                 db    ? ;
.bss:00000140                 db    ? ;
.bss:00000141                 db    ? ;
.bss:00000142                 db    ? ;
.bss:00000143                 db    ? ;
.bss:00000144                 db    ? ;
.bss:00000145                 db    ? ;
.bss:00000146                 db    ? ;
.bss:00000147                 db    ? ;
.bss:00000148                 db    ? ;
.bss:00000149                 db    ? ;
.bss:0000014A                 db    ? ;
.bss:0000014B                 db    ? ;
.bss:0000014C                 db    ? ;
.bss:0000014D                 db    ? ;
.bss:0000014E                 db    ? ;
.bss:0000014F                 db    ? ;
.bss:00000150                 db    ? ;
.bss:00000151                 db    ? ;
.bss:00000152                 db    ? ;
.bss:00000153                 db    ? ;
.bss:00000154                 db    ? ;
.bss:00000155                 db    ? ;
.bss:00000156                 db    ? ;
.bss:00000157                 db    ? ;
.bss:00000158                 db    ? ;
.bss:00000159                 db    ? ;
.bss:0000015A                 db    ? ;
.bss:0000015B                 db    ? ;
.bss:0000015C                 db    ? ;
.bss:0000015D                 db    ? ;
.bss:0000015E                 db    ? ;
.bss:0000015F                 db    ? ;
.bss:00000160                 db    ? ;
.bss:00000161                 db    ? ;
.bss:00000162                 db    ? ;
.bss:00000163                 db    ? ;
.bss:00000164                 db    ? ;
.bss:00000165                 db    ? ;
.bss:00000166                 db    ? ;
.bss:00000167                 db    ? ;
.bss:00000168                 db    ? ;
.bss:00000169                 db    ? ;
.bss:0000016A                 db    ? ;
.bss:0000016B                 db    ? ;
.bss:0000016C                 db    ? ;
.bss:0000016D                 db    ? ;
.bss:0000016E                 db    ? ;
.bss:0000016F                 db    ? ;
.bss:00000170                 db    ? ;
.bss:00000171                 db    ? ;
.bss:00000172                 db    ? ;
.bss:00000173                 db    ? ;
.bss:00000174                 db    ? ;
.bss:00000175                 db    ? ;
.bss:00000176                 db    ? ;
.bss:00000177                 db    ? ;
.bss:00000178                 db    ? ;
.bss:00000179                 db    ? ;
.bss:0000017A                 db    ? ;
.bss:0000017B                 db    ? ;
.bss:0000017C                 db    ? ;
.bss:0000017D                 db    ? ;
.bss:0000017E                 db    ? ;
.bss:0000017F                 db    ? ;
.bss:00000180                 db    ? ;
.bss:00000181                 db    ? ;
.bss:00000182                 db    ? ;
.bss:00000183                 db    ? ;
.bss:00000184                 db    ? ;
.bss:00000185                 db    ? ;
.bss:00000186                 db    ? ;
.bss:00000187                 db    ? ;
.bss:00000188                 db    ? ;
.bss:00000189                 db    ? ;
.bss:0000018A                 db    ? ;
.bss:0000018B                 db    ? ;
.bss:0000018C                 db    ? ;
.bss:0000018D                 db    ? ;
.bss:0000018E                 db    ? ;
.bss:0000018F                 db    ? ;
.bss:00000190                 db    ? ;
.bss:00000191                 db    ? ;
.bss:00000192                 db    ? ;
.bss:00000193                 db    ? ;
.bss:00000194                 db    ? ;
.bss:00000195                 db    ? ;
.bss:00000196                 db    ? ;
.bss:00000197                 db    ? ;
.bss:00000198                 db    ? ;
.bss:00000199                 db    ? ;
.bss:0000019A                 db    ? ;
.bss:0000019B                 db    ? ;
.bss:0000019C                 db    ? ;
.bss:0000019D                 db    ? ;
.bss:0000019E                 db    ? ;
.bss:0000019F                 db    ? ;
.bss:000001A0                 db    ? ;
.bss:000001A1                 db    ? ;
.bss:000001A2                 db    ? ;
.bss:000001A3                 db    ? ;
.bss:000001A4                 db    ? ;
.bss:000001A5                 db    ? ;
.bss:000001A6                 db    ? ;
.bss:000001A7                 db    ? ;
.bss:000001A8                 db    ? ;
.bss:000001A9                 db    ? ;
.bss:000001AA                 db    ? ;
.bss:000001AB                 db    ? ;
.bss:000001AC                 db    ? ;
.bss:000001AD                 db    ? ;
.bss:000001AE                 db    ? ;
.bss:000001AF                 db    ? ;
.bss:000001B0                 db    ? ;
.bss:000001B1                 db    ? ;
.bss:000001B2                 db    ? ;
.bss:000001B3                 db    ? ;
.bss:000001B4                 db    ? ;
.bss:000001B5                 db    ? ;
.bss:000001B6                 db    ? ;
.bss:000001B7                 db    ? ;
.bss:000001B8                 db    ? ;
.bss:000001B9                 db    ? ;
.bss:000001BA                 db    ? ;
.bss:000001BB                 db    ? ;
.bss:000001BC                 db    ? ;
.bss:000001BD                 db    ? ;
.bss:000001BE                 db    ? ;
.bss:000001BF                 db    ? ;
.bss:000001C0                 db    ? ;
.bss:000001C1                 db    ? ;
.bss:000001C2                 db    ? ;
.bss:000001C3                 db    ? ;
.bss:000001C4                 db    ? ;
.bss:000001C5                 db    ? ;
.bss:000001C6                 db    ? ;
.bss:000001C7                 db    ? ;
.bss:000001C8                 db    ? ;
.bss:000001C9                 db    ? ;
.bss:000001CA                 db    ? ;
.bss:000001CB                 db    ? ;
.bss:000001CC                 db    ? ;
.bss:000001CD                 db    ? ;
.bss:000001CE                 db    ? ;
.bss:000001CF                 db    ? ;
.bss:000001D0                 db    ? ;
.bss:000001D1                 db    ? ;
.bss:000001D2                 db    ? ;
.bss:000001D3                 db    ? ;
.bss:000001D4                 db    ? ;
.bss:000001D5                 db    ? ;
.bss:000001D6                 db    ? ;
.bss:000001D7                 db    ? ;
.bss:000001D8                 db    ? ;
.bss:000001D9                 db    ? ;
.bss:000001DA                 db    ? ;
.bss:000001DB                 db    ? ;
.bss:000001DC                 db    ? ;
.bss:000001DD                 db    ? ;
.bss:000001DE                 db    ? ;
.bss:000001DF                 db    ? ;
.bss:000001E0                 db    ? ;
.bss:000001E1                 db    ? ;
.bss:000001E2                 db    ? ;
.bss:000001E3                 db    ? ;
.bss:000001E4                 db    ? ;
.bss:000001E5                 db    ? ;
.bss:000001E6                 db    ? ;
.bss:000001E7                 db    ? ;
.bss:000001E8                 db    ? ;
.bss:000001E9                 db    ? ;
.bss:000001EA                 db    ? ;
.bss:000001EB                 db    ? ;
.bss:000001EC                 db    ? ;
.bss:000001ED                 db    ? ;
.bss:000001EE                 db    ? ;
.bss:000001EF                 db    ? ;
.bss:000001F0                 db    ? ;
.bss:000001F1                 db    ? ;
.bss:000001F2                 db    ? ;
.bss:000001F3                 db    ? ;
.bss:000001F4                 db    ? ;
.bss:000001F5                 db    ? ;
.bss:000001F6                 db    ? ;
.bss:000001F7                 db    ? ;
.bss:000001F8                 db    ? ;
.bss:000001F9                 db    ? ;
.bss:000001FA                 db    ? ;
.bss:000001FB                 db    ? ;
.bss:000001FC                 db    ? ;
.bss:000001FD                 db    ? ;
.bss:000001FE                 db    ? ;
.bss:000001FF                 db    ? ;
.bss:00000200                 db    ? ;
.bss:00000201                 db    ? ;
.bss:00000202                 db    ? ;
.bss:00000203                 db    ? ;
.bss:00000204                 db    ? ;
.bss:00000205                 db    ? ;
.bss:00000206                 db    ? ;
.bss:00000207                 db    ? ;
.bss:00000208                 db    ? ;
.bss:00000209                 db    ? ;
.bss:0000020A                 db    ? ;
.bss:0000020B                 db    ? ;
.bss:0000020C                 db    ? ;
.bss:0000020D                 db    ? ;
.bss:0000020E                 db    ? ;
.bss:0000020F                 db    ? ;
.bss:00000210                 db    ? ;
.bss:00000211                 db    ? ;
.bss:00000212                 db    ? ;
.bss:00000213                 db    ? ;
.bss:00000214                 db    ? ;
.bss:00000215                 db    ? ;
.bss:00000216                 db    ? ;
.bss:00000217                 db    ? ;
.bss:00000218                 db    ? ;
.bss:00000219                 db    ? ;
.bss:0000021A                 db    ? ;
.bss:0000021B                 db    ? ;
.bss:0000021C                 db    ? ;
.bss:0000021D                 db    ? ;
.bss:0000021E                 db    ? ;
.bss:0000021F                 db    ? ;
.bss:00000220                 db    ? ;
.bss:00000221                 db    ? ;
.bss:00000222                 db    ? ;
.bss:00000223                 db    ? ;
.bss:00000224                 db    ? ;
.bss:00000225                 db    ? ;
.bss:00000226                 db    ? ;
.bss:00000227                 db    ? ;
.bss:00000228                 db    ? ;
.bss:00000229                 db    ? ;
.bss:0000022A                 db    ? ;
.bss:0000022B                 db    ? ;
.bss:0000022C                 db    ? ;
.bss:0000022D                 db    ? ;
.bss:0000022E                 db    ? ;
.bss:0000022F                 db    ? ;
.bss:00000230                 db    ? ;
.bss:00000231                 db    ? ;
.bss:00000232                 db    ? ;
.bss:00000233                 db    ? ;
.bss:00000234                 db    ? ;
.bss:00000235                 db    ? ;
.bss:00000236                 db    ? ;
.bss:00000237                 db    ? ;
.bss:00000238                 db    ? ;
.bss:00000239                 db    ? ;
.bss:0000023A                 db    ? ;
.bss:0000023B                 db    ? ;
.bss:0000023C                 db    ? ;
.bss:0000023D                 db    ? ;
.bss:0000023E                 db    ? ;
.bss:0000023F                 db    ? ;
.bss:00000240                 db    ? ;
.bss:00000241                 db    ? ;
.bss:00000242                 db    ? ;
.bss:00000243                 db    ? ;
.bss:00000244                 db    ? ;
.bss:00000245                 db    ? ;
.bss:00000246                 db    ? ;
.bss:00000247                 db    ? ;
.bss:00000248                 db    ? ;
.bss:00000249                 db    ? ;
.bss:0000024A                 db    ? ;
.bss:0000024B                 db    ? ;
.bss:0000024C                 db    ? ;
.bss:0000024D                 db    ? ;
.bss:0000024E                 db    ? ;
.bss:0000024F                 db    ? ;
.bss:00000250                 db    ? ;
.bss:00000251                 db    ? ;
.bss:00000252                 db    ? ;
.bss:00000253                 db    ? ;
.bss:00000254                 db    ? ;
.bss:00000255                 db    ? ;
.bss:00000256                 db    ? ;
.bss:00000257                 db    ? ;
.bss:00000258                 db    ? ;
.bss:00000259                 db    ? ;
.bss:0000025A                 db    ? ;
.bss:0000025B                 db    ? ;
.bss:0000025C                 db    ? ;
.bss:0000025D                 db    ? ;
.bss:0000025E                 db    ? ;
.bss:0000025F                 db    ? ;
.bss:00000260                 db    ? ;
.bss:00000261                 db    ? ;
.bss:00000262                 db    ? ;
.bss:00000263                 db    ? ;
.bss:00000264                 db    ? ;
.bss:00000265                 db    ? ;
.bss:00000266                 db    ? ;
.bss:00000267                 db    ? ;
.bss:00000268                 db    ? ;
.bss:00000269                 db    ? ;
.bss:0000026A                 db    ? ;
.bss:0000026B                 db    ? ;
.bss:0000026C                 db    ? ;
.bss:0000026D                 db    ? ;
.bss:0000026E                 db    ? ;
.bss:0000026F                 db    ? ;
.bss:00000270                 db    ? ;
.bss:00000271                 db    ? ;
.bss:00000272                 db    ? ;
.bss:00000273                 db    ? ;
.bss:00000274                 db    ? ;
.bss:00000275                 db    ? ;
.bss:00000276                 db    ? ;
.bss:00000277                 db    ? ;
.bss:00000278                 db    ? ;
.bss:00000279                 db    ? ;
.bss:0000027A                 db    ? ;
.bss:0000027B                 db    ? ;
.bss:0000027C                 db    ? ;
.bss:0000027D                 db    ? ;
.bss:0000027E                 db    ? ;
.bss:0000027F                 db    ? ;
.bss:00000280                 db    ? ;
.bss:00000281                 db    ? ;
.bss:00000282                 db    ? ;
.bss:00000283                 db    ? ;
.bss:00000284                 db    ? ;
.bss:00000285                 db    ? ;
.bss:00000286                 db    ? ;
.bss:00000287                 db    ? ;
.bss:00000288                 db    ? ;
.bss:00000289                 db    ? ;
.bss:0000028A                 db    ? ;
.bss:0000028B                 db    ? ;
.bss:0000028C                 db    ? ;
.bss:0000028D                 db    ? ;
.bss:0000028E                 db    ? ;
.bss:0000028F                 db    ? ;
.bss:00000290                 db    ? ;
.bss:00000291                 db    ? ;
.bss:00000292                 db    ? ;
.bss:00000293                 db    ? ;
.bss:00000294                 db    ? ;
.bss:00000295                 db    ? ;
.bss:00000296                 db    ? ;
.bss:00000297                 db    ? ;
.bss:00000298                 db    ? ;
.bss:00000299                 db    ? ;
.bss:0000029A                 db    ? ;
.bss:0000029B                 db    ? ;
.bss:0000029C                 db    ? ;
.bss:0000029D                 db    ? ;
.bss:0000029E                 db    ? ;
.bss:0000029F                 db    ? ;
.bss:000002A0                 db    ? ;
.bss:000002A1                 db    ? ;
.bss:000002A2                 db    ? ;
.bss:000002A3                 db    ? ;
.bss:000002A4                 db    ? ;
.bss:000002A5                 db    ? ;
.bss:000002A6                 db    ? ;
.bss:000002A7                 db    ? ;
.bss:000002A8                 db    ? ;
.bss:000002A9                 db    ? ;
.bss:000002AA                 db    ? ;
.bss:000002AB                 db    ? ;
.bss:000002AC                 db    ? ;
.bss:000002AD                 db    ? ;
.bss:000002AE                 db    ? ;
.bss:000002AF                 db    ? ;
.bss:000002B0                 db    ? ;
.bss:000002B1                 db    ? ;
.bss:000002B2                 db    ? ;
.bss:000002B3                 db    ? ;
.bss:000002B4                 db    ? ;
.bss:000002B5                 db    ? ;
.bss:000002B6                 db    ? ;
.bss:000002B7                 db    ? ;
.bss:000002B8                 db    ? ;
.bss:000002B9                 db    ? ;
.bss:000002BA                 db    ? ;
.bss:000002BB                 db    ? ;
.bss:000002BC                 db    ? ;
.bss:000002BD                 db    ? ;
.bss:000002BE                 db    ? ;
.bss:000002BF                 db    ? ;
.bss:000002C0                 db    ? ;
.bss:000002C1                 db    ? ;
.bss:000002C2                 db    ? ;
.bss:000002C3                 db    ? ;
.bss:000002C4                 db    ? ;
.bss:000002C5                 db    ? ;
.bss:000002C6                 db    ? ;
.bss:000002C7                 db    ? ;
.bss:000002C8                 db    ? ;
.bss:000002C9                 db    ? ;
.bss:000002CA                 db    ? ;
.bss:000002CB                 db    ? ;
.bss:000002CC                 db    ? ;
.bss:000002CD                 db    ? ;
.bss:000002CE                 db    ? ;
.bss:000002CF                 db    ? ;
.bss:000002D0                 db    ? ;
.bss:000002D1                 db    ? ;
.bss:000002D2                 db    ? ;
.bss:000002D3                 db    ? ;
.bss:000002D4                 db    ? ;
.bss:000002D5                 db    ? ;
.bss:000002D6                 db    ? ;
.bss:000002D7                 db    ? ;
.bss:000002D8                 db    ? ;
.bss:000002D9                 db    ? ;
.bss:000002DA                 db    ? ;
.bss:000002DB                 db    ? ;
.bss:000002DC                 db    ? ;
.bss:000002DD                 db    ? ;
.bss:000002DE                 db    ? ;
.bss:000002DF                 db    ? ;
.bss:000002E0                 db    ? ;
.bss:000002E1                 db    ? ;
.bss:000002E2                 db    ? ;
.bss:000002E3                 db    ? ;
.bss:000002E4                 db    ? ;
.bss:000002E5                 db    ? ;
.bss:000002E6                 db    ? ;
.bss:000002E7                 db    ? ;
.bss:000002E8                 db    ? ;
.bss:000002E9                 db    ? ;
.bss:000002EA                 db    ? ;
.bss:000002EB                 db    ? ;
.bss:000002EC                 db    ? ;
.bss:000002ED                 db    ? ;
.bss:000002EE                 db    ? ;
.bss:000002EF                 db    ? ;
.bss:000002F0                 db    ? ;
.bss:000002F1                 db    ? ;
.bss:000002F2                 db    ? ;
.bss:000002F3                 db    ? ;
.bss:000002F4                 db    ? ;
.bss:000002F5                 db    ? ;
.bss:000002F6                 db    ? ;
.bss:000002F7                 db    ? ;
.bss:000002F8                 db    ? ;
.bss:000002F9                 db    ? ;
.bss:000002FA                 db    ? ;
.bss:000002FB                 db    ? ;
.bss:000002FC                 db    ? ;
.bss:000002FD                 db    ? ;
.bss:000002FE                 db    ? ;
.bss:000002FF                 db    ? ;
.bss:00000300                 db    ? ;
.bss:00000301                 db    ? ;
.bss:00000302                 db    ? ;
.bss:00000303                 db    ? ;
.bss:00000304                 db    ? ;
.bss:00000305                 db    ? ;
.bss:00000306                 db    ? ;
.bss:00000307                 db    ? ;
.bss:00000308                 db    ? ;
.bss:00000309                 db    ? ;
.bss:0000030A                 db    ? ;
.bss:0000030B                 db    ? ;
.bss:0000030C                 db    ? ;
.bss:0000030D                 db    ? ;
.bss:0000030E                 db    ? ;
.bss:0000030F                 db    ? ;
.bss:00000310                 db    ? ;
.bss:00000311                 db    ? ;
.bss:00000312                 db    ? ;
.bss:00000313                 db    ? ;
.bss:00000314                 db    ? ;
.bss:00000315                 db    ? ;
.bss:00000316                 db    ? ;
.bss:00000317                 db    ? ;
.bss:00000318                 db    ? ;
.bss:00000319                 db    ? ;
.bss:0000031A                 db    ? ;
.bss:0000031B                 db    ? ;
.bss:0000031C                 db    ? ;
.bss:0000031D                 db    ? ;
.bss:0000031E                 db    ? ;
.bss:0000031F                 db    ? ;
.bss:00000320                 db    ? ;
.bss:00000321                 db    ? ;
.bss:00000322                 db    ? ;
.bss:00000323                 db    ? ;
.bss:00000324                 db    ? ;
.bss:00000325                 db    ? ;
.bss:00000326                 db    ? ;
.bss:00000327                 db    ? ;
.bss:00000328                 db    ? ;
.bss:00000329                 db    ? ;
.bss:0000032A                 db    ? ;
.bss:0000032B                 db    ? ;
.bss:0000032C                 db    ? ;
.bss:0000032D                 db    ? ;
.bss:0000032E                 db    ? ;
.bss:0000032F                 db    ? ;
.bss:00000330                 db    ? ;
.bss:00000331                 db    ? ;
.bss:00000332                 db    ? ;
.bss:00000333                 db    ? ;
.bss:00000334                 db    ? ;
.bss:00000335                 db    ? ;
.bss:00000336                 db    ? ;
.bss:00000337                 db    ? ;
.bss:00000338                 db    ? ;
.bss:00000339                 db    ? ;
.bss:0000033A                 db    ? ;
.bss:0000033B                 db    ? ;
.bss:0000033C                 db    ? ;
.bss:0000033D                 db    ? ;
.bss:0000033E                 db    ? ;
.bss:0000033F                 db    ? ;
.bss:00000340                 db    ? ;
.bss:00000341                 db    ? ;
.bss:00000342                 db    ? ;
.bss:00000343                 db    ? ;
.bss:00000344                 db    ? ;
.bss:00000345                 db    ? ;
.bss:00000346                 db    ? ;
.bss:00000347                 db    ? ;
.bss:00000348                 db    ? ;
.bss:00000349                 db    ? ;
.bss:0000034A                 db    ? ;
.bss:0000034B                 db    ? ;
.bss:0000034C                 db    ? ;
.bss:0000034D                 db    ? ;
.bss:0000034E                 db    ? ;
.bss:0000034F                 db    ? ;
.bss:00000350                 db    ? ;
.bss:00000351                 db    ? ;
.bss:00000352                 db    ? ;
.bss:00000353                 db    ? ;
.bss:00000354                 db    ? ;
.bss:00000355                 db    ? ;
.bss:00000356                 db    ? ;
.bss:00000357                 db    ? ;
.bss:00000358                 db    ? ;
.bss:00000359                 db    ? ;
.bss:0000035A                 db    ? ;
.bss:0000035B                 db    ? ;
.bss:0000035C                 db    ? ;
.bss:0000035D                 db    ? ;
.bss:0000035E                 db    ? ;
.bss:0000035F                 db    ? ;
.bss:00000360                 db    ? ;
.bss:00000361                 db    ? ;
.bss:00000362                 db    ? ;
.bss:00000363                 db    ? ;
.bss:00000364                 db    ? ;
.bss:00000365                 db    ? ;
.bss:00000366                 db    ? ;
.bss:00000367                 db    ? ;
.bss:00000368                 db    ? ;
.bss:00000369                 db    ? ;
.bss:0000036A                 db    ? ;
.bss:0000036B                 db    ? ;
.bss:0000036C                 db    ? ;
.bss:0000036D                 db    ? ;
.bss:0000036E                 db    ? ;
.bss:0000036F                 db    ? ;
.bss:00000370                 db    ? ;
.bss:00000371                 db    ? ;
.bss:00000372                 db    ? ;
.bss:00000373                 db    ? ;
.bss:00000374                 db    ? ;
.bss:00000375                 db    ? ;
.bss:00000376                 db    ? ;
.bss:00000377                 db    ? ;
.bss:00000378                 db    ? ;
.bss:00000379                 db    ? ;
.bss:0000037A                 db    ? ;
.bss:0000037B                 db    ? ;
.bss:0000037C                 db    ? ;
.bss:0000037D                 db    ? ;
.bss:0000037E                 db    ? ;
.bss:0000037F                 db    ? ;
.bss:00000380                 db    ? ;
.bss:00000381                 db    ? ;
.bss:00000382                 db    ? ;
.bss:00000383                 db    ? ;
.bss:00000384                 db    ? ;
.bss:00000385                 db    ? ;
.bss:00000386                 db    ? ;
.bss:00000387                 db    ? ;
.bss:00000388                 db    ? ;
.bss:00000389                 db    ? ;
.bss:0000038A                 db    ? ;
.bss:0000038B                 db    ? ;
.bss:0000038C                 db    ? ;
.bss:0000038D                 db    ? ;
.bss:0000038E                 db    ? ;
.bss:0000038F                 db    ? ;
.bss:00000390                 db    ? ;
.bss:00000391                 db    ? ;
.bss:00000392                 db    ? ;
.bss:00000393                 db    ? ;
.bss:00000394                 db    ? ;
.bss:00000395                 db    ? ;
.bss:00000396                 db    ? ;
.bss:00000397                 db    ? ;
.bss:00000398                 db    ? ;
.bss:00000399                 db    ? ;
.bss:0000039A                 db    ? ;
.bss:0000039B                 db    ? ;
.bss:0000039C                 db    ? ;
.bss:0000039D                 db    ? ;
.bss:0000039E                 db    ? ;
.bss:0000039F                 db    ? ;
.bss:000003A0                 db    ? ;
.bss:000003A1                 db    ? ;
.bss:000003A2                 db    ? ;
.bss:000003A3                 db    ? ;
.bss:000003A4                 db    ? ;
.bss:000003A5                 db    ? ;
.bss:000003A6                 db    ? ;
.bss:000003A7                 db    ? ;
.bss:000003A8                 db    ? ;
.bss:000003A9                 db    ? ;
.bss:000003AA                 db    ? ;
.bss:000003AB                 db    ? ;
.bss:000003AC                 db    ? ;
.bss:000003AD                 db    ? ;
.bss:000003AE                 db    ? ;
.bss:000003AF                 db    ? ;
.bss:000003B0                 db    ? ;
.bss:000003B1                 db    ? ;
.bss:000003B2                 db    ? ;
.bss:000003B3                 db    ? ;
.bss:000003B4                 db    ? ;
.bss:000003B5                 db    ? ;
.bss:000003B6                 db    ? ;
.bss:000003B7                 db    ? ;
.bss:000003B8                 db    ? ;
.bss:000003B9                 db    ? ;
.bss:000003BA                 db    ? ;
.bss:000003BB                 db    ? ;
.bss:000003BC                 db    ? ;
.bss:000003BD                 db    ? ;
.bss:000003BE                 db    ? ;
.bss:000003BF                 db    ? ;
.bss:000003C0                 db    ? ;
.bss:000003C1                 db    ? ;
.bss:000003C2                 db    ? ;
.bss:000003C3                 db    ? ;
.bss:000003C4                 db    ? ;
.bss:000003C5                 db    ? ;
.bss:000003C6                 db    ? ;
.bss:000003C7                 db    ? ;
.bss:000003C8                 db    ? ;
.bss:000003C9                 db    ? ;
.bss:000003CA                 db    ? ;
.bss:000003CB                 db    ? ;
.bss:000003CC                 db    ? ;
.bss:000003CD                 db    ? ;
.bss:000003CE                 db    ? ;
.bss:000003CF                 db    ? ;
.bss:000003D0                 db    ? ;
.bss:000003D1                 db    ? ;
.bss:000003D2                 db    ? ;
.bss:000003D3                 db    ? ;
.bss:000003D4                 db    ? ;
.bss:000003D5                 db    ? ;
.bss:000003D6                 db    ? ;
.bss:000003D7                 db    ? ;
.bss:000003D8                 db    ? ;
.bss:000003D9                 db    ? ;
.bss:000003DA                 db    ? ;
.bss:000003DB                 db    ? ;
.bss:000003DC                 db    ? ;
.bss:000003DD                 db    ? ;
.bss:000003DE                 db    ? ;
.bss:000003DF                 db    ? ;
.bss:000003E0                 db    ? ;
.bss:000003E1                 db    ? ;
.bss:000003E2                 db    ? ;
.bss:000003E3                 db    ? ;
.bss:000003E4                 db    ? ;
.bss:000003E5                 db    ? ;
.bss:000003E6                 db    ? ;
.bss:000003E7                 db    ? ;
.bss:000003E8                 db    ? ;
.bss:000003E9                 db    ? ;
.bss:000003EA                 db    ? ;
.bss:000003EB                 db    ? ;
.bss:000003EC                 db    ? ;
.bss:000003ED                 db    ? ;
.bss:000003EE                 db    ? ;
.bss:000003EF                 db    ? ;
.bss:000003F0                 db    ? ;
.bss:000003F1                 db    ? ;
.bss:000003F2                 db    ? ;
.bss:000003F3                 db    ? ;
.bss:000003F4                 db    ? ;
.bss:000003F5                 db    ? ;
.bss:000003F6                 db    ? ;
.bss:000003F7                 db    ? ;
.bss:000003F8                 db    ? ;
.bss:000003F9                 db    ? ;
.bss:000003FA                 db    ? ;
.bss:000003FB                 db    ? ;
.bss:000003FC                 db    ? ;
.bss:000003FD                 db    ? ;
.bss:000003FE                 db    ? ;
.bss:000003FF                 db    ? ;
.bss:00000400                 db    ? ;
.bss:00000401                 db    ? ;
.bss:00000402                 db    ? ;
.bss:00000403                 db    ? ;
.bss:00000404                 db    ? ;
.bss:00000405                 db    ? ;
.bss:00000406                 db    ? ;
.bss:00000407                 db    ? ;
.bss:00000408                 db    ? ;
.bss:00000409                 db    ? ;
.bss:0000040A                 db    ? ;
.bss:0000040B                 db    ? ;
.bss:0000040C                 db    ? ;
.bss:0000040D                 db    ? ;
.bss:0000040E                 db    ? ;
.bss:0000040F                 db    ? ;
.bss:00000410                 db    ? ;
.bss:00000411                 db    ? ;
.bss:00000412                 db    ? ;
.bss:00000413                 db    ? ;
.bss:00000414                 db    ? ;
.bss:00000415                 db    ? ;
.bss:00000416                 db    ? ;
.bss:00000417                 db    ? ;
.bss:00000418                 db    ? ;
.bss:00000419                 db    ? ;
.bss:0000041A                 db    ? ;
.bss:0000041B                 db    ? ;
.bss:0000041C                 db    ? ;
.bss:0000041D                 db    ? ;
.bss:0000041E                 db    ? ;
.bss:0000041F                 db    ? ;
.bss:00000420                 db    ? ;
.bss:00000421                 db    ? ;
.bss:00000422                 db    ? ;
.bss:00000423                 db    ? ;
.bss:00000424                 db    ? ;
.bss:00000425                 db    ? ;
.bss:00000426                 db    ? ;
.bss:00000427                 db    ? ;
.bss:00000428                 db    ? ;
.bss:00000429                 db    ? ;
.bss:0000042A                 db    ? ;
.bss:0000042B                 db    ? ;
.bss:0000042C                 db    ? ;
.bss:0000042D                 db    ? ;
.bss:0000042E                 db    ? ;
.bss:0000042F                 db    ? ;
.bss:00000430                 db    ? ;
.bss:00000431                 db    ? ;
.bss:00000432                 db    ? ;
.bss:00000433                 db    ? ;
.bss:00000434                 db    ? ;
.bss:00000435                 db    ? ;
.bss:00000436                 db    ? ;
.bss:00000437                 db    ? ;
.bss:00000438                 db    ? ;
.bss:00000439                 db    ? ;
.bss:0000043A                 db    ? ;
.bss:0000043B                 db    ? ;
.bss:0000043C                 db    ? ;
.bss:0000043D                 db    ? ;
.bss:0000043E                 db    ? ;
.bss:0000043F                 db    ? ;
.bss:00000440                 db    ? ;
.bss:00000441                 db    ? ;
.bss:00000442                 db    ? ;
.bss:00000443                 db    ? ;
.bss:00000444                 db    ? ;
.bss:00000445                 db    ? ;
.bss:00000446                 db    ? ;
.bss:00000447                 db    ? ;
.bss:00000448                 db    ? ;
.bss:00000449                 db    ? ;
.bss:0000044A                 db    ? ;
.bss:0000044B                 db    ? ;
.bss:0000044C                 db    ? ;
.bss:0000044D                 db    ? ;
.bss:0000044E                 db    ? ;
.bss:0000044F                 db    ? ;
.bss:00000450                 db    ? ;
.bss:00000451                 db    ? ;
.bss:00000452                 db    ? ;
.bss:00000453                 db    ? ;
.bss:00000454                 db    ? ;
.bss:00000455                 db    ? ;
.bss:00000456                 db    ? ;
.bss:00000457                 db    ? ;
.bss:00000458                 db    ? ;
.bss:00000459                 db    ? ;
.bss:0000045A                 db    ? ;
.bss:0000045B                 db    ? ;
.bss:0000045C                 db    ? ;
.bss:0000045D                 db    ? ;
.bss:0000045E                 db    ? ;
.bss:0000045F                 db    ? ;
.bss:00000460                 db    ? ;
.bss:00000461                 db    ? ;
.bss:00000462                 db    ? ;
.bss:00000463                 db    ? ;
.bss:00000464                 db    ? ;
.bss:00000465                 db    ? ;
.bss:00000466                 db    ? ;
.bss:00000467                 db    ? ;
.bss:00000468                 db    ? ;
.bss:00000469                 db    ? ;
.bss:0000046A                 db    ? ;
.bss:0000046B                 db    ? ;
.bss:0000046C                 db    ? ;
.bss:0000046D                 db    ? ;
.bss:0000046E                 db    ? ;
.bss:0000046F                 db    ? ;
.bss:00000470                 db    ? ;
.bss:00000471                 db    ? ;
.bss:00000472                 db    ? ;
.bss:00000473                 db    ? ;
.bss:00000474                 db    ? ;
.bss:00000475                 db    ? ;
.bss:00000476                 db    ? ;
.bss:00000477                 db    ? ;
.bss:00000478                 db    ? ;
.bss:00000479                 db    ? ;
.bss:0000047A                 db    ? ;
.bss:0000047B                 db    ? ;
.bss:0000047C                 db    ? ;
.bss:0000047D                 db    ? ;
.bss:0000047E                 db    ? ;
.bss:0000047F                 db    ? ;
.bss:00000480                 db    ? ;
.bss:00000481                 db    ? ;
.bss:00000482                 db    ? ;
.bss:00000483                 db    ? ;
.bss:00000484                 db    ? ;
.bss:00000485                 db    ? ;
.bss:00000486                 db    ? ;
.bss:00000487                 db    ? ;
.bss:00000488                 db    ? ;
.bss:00000489                 db    ? ;
.bss:0000048A                 db    ? ;
.bss:0000048B                 db    ? ;
.bss:0000048C                 db    ? ;
.bss:0000048D                 db    ? ;
.bss:0000048E                 db    ? ;
.bss:0000048F                 db    ? ;
.bss:00000490                 db    ? ;
.bss:00000491                 db    ? ;
.bss:00000492                 db    ? ;
.bss:00000493                 db    ? ;
.bss:00000494                 db    ? ;
.bss:00000495                 db    ? ;
.bss:00000496                 db    ? ;
.bss:00000497                 db    ? ;
.bss:00000498                 db    ? ;
.bss:00000499                 db    ? ;
.bss:0000049A                 db    ? ;
.bss:0000049B                 db    ? ;
.bss:0000049C                 db    ? ;
.bss:0000049D                 db    ? ;
.bss:0000049E                 db    ? ;
.bss:0000049F                 db    ? ;
.bss:000004A0                 db    ? ;
.bss:000004A1                 db    ? ;
.bss:000004A2                 db    ? ;
.bss:000004A3                 db    ? ;
.bss:000004A4                 db    ? ;
.bss:000004A5                 db    ? ;
.bss:000004A6                 db    ? ;
.bss:000004A7                 db    ? ;
.bss:000004A8                 db    ? ;
.bss:000004A9                 db    ? ;
.bss:000004AA                 db    ? ;
.bss:000004AB                 db    ? ;
.bss:000004AC                 db    ? ;
.bss:000004AD                 db    ? ;
.bss:000004AE                 db    ? ;
.bss:000004AF                 db    ? ;
.bss:000004B0 dword_4B0       dd ?                    ; DATA XREF: _random_add_noise+B9r
.bss:000004B0                                         ; _random_add_noise+C8r ...
.bss:000004B4 unk_4B4         db    ? ;               ; DATA XREF: _random_add_noise+8Ao
.bss:000004B4                                         ; _random_stir+4Ao ...
.bss:000004B5                 db    ? ;
.bss:000004B6                 db    ? ;
.bss:000004B7                 db    ? ;
.bss:000004B8                 db    ? ;
.bss:000004B9                 db    ? ;
.bss:000004BA                 db    ? ;
.bss:000004BB                 db    ? ;
.bss:000004BC                 db    ? ;
.bss:000004BD                 db    ? ;
.bss:000004BE                 db    ? ;
.bss:000004BF                 db    ? ;
.bss:000004C0                 db    ? ;
.bss:000004C1                 db    ? ;
.bss:000004C2                 db    ? ;
.bss:000004C3                 db    ? ;
.bss:000004C4                 db    ? ;
.bss:000004C5                 db    ? ;
.bss:000004C6                 db    ? ;
.bss:000004C7                 db    ? ;
.bss:000004C8 byte_4C8        db ?                    ; DATA XREF: _random_add_noise+52o
.bss:000004C8                                         ; _random_add_noise+85o ...
.bss:000004C9                 db    ? ;
.bss:000004CA                 db    ? ;
.bss:000004CB                 db    ? ;
.bss:000004CC                 db    ? ;
.bss:000004CD                 db    ? ;
.bss:000004CE                 db    ? ;
.bss:000004CF                 db    ? ;
.bss:000004D0                 db    ? ;
.bss:000004D1                 db    ? ;
.bss:000004D2                 db    ? ;
.bss:000004D3                 db    ? ;
.bss:000004D4                 db    ? ;
.bss:000004D5                 db    ? ;
.bss:000004D6                 db    ? ;
.bss:000004D7                 db    ? ;
.bss:000004D8                 db    ? ;
.bss:000004D9                 db    ? ;
.bss:000004DA                 db    ? ;
.bss:000004DB                 db    ? ;
.bss:000004DC                 db    ? ;
.bss:000004DD                 db    ? ;
.bss:000004DE                 db    ? ;
.bss:000004DF                 db    ? ;
.bss:000004E0                 db    ? ;
.bss:000004E1                 db    ? ;
.bss:000004E2                 db    ? ;
.bss:000004E3                 db    ? ;
.bss:000004E4                 db    ? ;
.bss:000004E5                 db    ? ;
.bss:000004E6                 db    ? ;
.bss:000004E7                 db    ? ;
.bss:000004E8                 db    ? ;
.bss:000004E9                 db    ? ;
.bss:000004EA                 db    ? ;
.bss:000004EB                 db    ? ;
.bss:000004EC                 db    ? ;
.bss:000004ED                 db    ? ;
.bss:000004EE                 db    ? ;
.bss:000004EF                 db    ? ;
.bss:000004F0                 db    ? ;
.bss:000004F1                 db    ? ;
.bss:000004F2                 db    ? ;
.bss:000004F3                 db    ? ;
.bss:000004F4                 db    ? ;
.bss:000004F5                 db    ? ;
.bss:000004F6                 db    ? ;
.bss:000004F7                 db    ? ;
.bss:000004F8                 db    ? ;
.bss:000004F9                 db    ? ;
.bss:000004FA                 db    ? ;
.bss:000004FB                 db    ? ;
.bss:000004FC                 db    ? ;
.bss:000004FD                 db    ? ;
.bss:000004FE                 db    ? ;
.bss:000004FF                 db    ? ;
.bss:00000500                 db    ? ;
.bss:00000501                 db    ? ;
.bss:00000502                 db    ? ;
.bss:00000503                 db    ? ;
.bss:00000504                 db    ? ;
.bss:00000505                 db    ? ;
.bss:00000506                 db    ? ;
.bss:00000507                 db    ? ;
.bss:00000508 dword_508       dd ?                    ; DATA XREF: _random_add_noise+2Dr
.bss:00000508                                         ; _random_add_noise+41r ...
.bss:0000050C dword_50C       dd ?                    ; DATA XREF: _random_stir+20r
.bss:0000050C                                         ; _random_stir:loc_722w ...
.bss:00000510                 public _random_active
.bss:00000510 _random_active  dd ?                    ; DATA XREF: _random_add_noise+1Ar
.bss:00000510                                         ; _random_ref+3r ...
.bss:00000510 _bss            ends
.bss:00000510
.data:00000514 ; ===========================================================================
.data:00000514
.data:00000514 ; Segment type: Pure data
.data:00000514 ; Segment permissions: Read/Write
.data:00000514 _data           segment dword public 'DATA' use32
.data:00000514                 assume cs:_data
.data:00000514                 ;org 514h
.data:00000514 $SG87174:                               ; DATA XREF: _random_unref+11o
.data:00000514                 unicode 0, <..\..\..\sshrand.c>,0
.data:0000053A                 align 4
.data:0000053C $SG87175:                               ; DATA XREF: _random_unref+16o
.data:0000053C                 unicode 0, <random_active >
.data:0000053C                 dw 3Eh
.data:0000053C                 unicode 0, < 0>,0
.data:00000560 $SG87180:                               ; DATA XREF: _random_byte+19o
.data:00000560                 unicode 0, <..\..\..\sshrand.c>,0
.data:00000586                 align 4
.data:00000588 $SG87181:                               ; DATA XREF: _random_byte+1Eo
.data:00000588                 unicode 0, <random_active>,0
.data:00000588 _data           ends
.data:00000588
.text:000005A4 ; ===========================================================================
.text:000005A4
.text:000005A4 ; Segment type: Pure code
.text:000005A4 ; Segment permissions: Read/Execute
.text:000005A4 _text           segment para public 'CODE' use32
.text:000005A4                 assume cs:_text
.text:000005A4                 ;org 5A4h
.text:000005A4                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text:000005A4
.text:000005A4 ; =============== S U B R O U T I N E =======================================
.text:000005A4
.text:000005A4 ; Attributes: bp-based frame
.text:000005A4
.text:000005A4 ; int __cdecl random_add_noise(int, size_t)
.text:000005A4                 public _random_add_noise
.text:000005A4 _random_add_noise proc near             ; DATA XREF: _random_stir+38o
.text:000005A4
.text:000005A4 var_8           = dword ptr -8
.text:000005A4 var_4           = dword ptr -4
.text:000005A4 arg_0           = dword ptr  8
.text:000005A4 arg_4           = dword ptr  0Ch
.text:000005A4
.text:000005A4                 push    ebp
.text:000005A5                 mov     ebp, esp
.text:000005A7                 sub     esp, 8
.text:000005AA                 mov     [ebp+var_8], 0CCCCCCCCh
.text:000005B1                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000005B8                 mov     eax, [ebp+arg_0]
.text:000005BB                 mov     [ebp+var_4], eax
.text:000005BE                 cmp     ds:_random_active, 0
.text:000005C5                 jnz     short loc_5CC
.text:000005C7                 jmp     loc_6E6
.text:000005CC ; ---------------------------------------------------------------------------
.text:000005CC
.text:000005CC loc_5CC:                                ; CODE XREF: _random_add_noise+21j
.text:000005CC                                         ; _random_add_noise+113j
.text:000005CC                 mov     ecx, 40h ; '@'
.text:000005D1                 sub     ecx, ds:dword_508
.text:000005D7                 cmp     [ebp+arg_4], ecx
.text:000005DA                 jl      loc_6BC
.text:000005E0                 mov     edx, 40h ; '@'
.text:000005E5                 sub     edx, ds:dword_508
.text:000005EB                 push    edx             ; size_t
.text:000005EC                 mov     eax, [ebp+var_4]
.text:000005EF                 push    eax             ; void *
.text:000005F0                 mov     ecx, ds:dword_508
.text:000005F6                 add     ecx, offset byte_4C8
.text:000005FC                 push    ecx             ; void *
.text:000005FD                 call    _memcpy
.text:00000602                 add     esp, 0Ch
.text:00000605                 mov     edx, 40h ; '@'
.text:0000060A                 sub     edx, ds:dword_508
.text:00000610                 add     edx, [ebp+var_4]
.text:00000613                 mov     [ebp+var_4], edx
.text:00000616                 mov     eax, 40h ; '@'
.text:0000061B                 sub     eax, ds:dword_508
.text:00000621                 mov     ecx, [ebp+arg_4]
.text:00000624                 sub     ecx, eax
.text:00000626                 mov     [ebp+arg_4], ecx
.text:00000629                 push    offset byte_4C8
.text:0000062E                 push    offset unk_4B4
.text:00000633                 call    _SHATransform
.text:00000638                 add     esp, 8
.text:0000063B                 mov     [ebp+var_8], 0
.text:00000642                 jmp     short loc_64D
.text:00000644 ; ---------------------------------------------------------------------------
.text:00000644
.text:00000644 loc_644:                                ; CODE XREF: _random_add_noise:loc_69Dj
.text:00000644                 mov     edx, [ebp+var_8]
.text:00000647                 add     edx, 1
.text:0000064A                 mov     [ebp+var_8], edx
.text:0000064D
.text:0000064D loc_64D:                                ; CODE XREF: _random_add_noise+9Ej
.text:0000064D                 cmp     [ebp+var_8], 14h
.text:00000651                 jge     short loc_69F
.text:00000653                 mov     eax, [ebp+var_8]
.text:00000656                 movzx   ecx, ds:byte_4C8[eax]
.text:0000065D                 mov     edx, ds:dword_4B0
.text:00000663                 movzx   eax, byte ptr ds:_pool[edx]
.text:0000066A                 xor     eax, ecx
.text:0000066C                 mov     ecx, ds:dword_4B0
.text:00000672                 mov     byte ptr ds:_pool[ecx], al
.text:00000678                 mov     edx, ds:dword_4B0
.text:0000067E                 add     edx, 1
.text:00000681                 mov     ds:dword_4B0, edx
.text:00000687                 cmp     ds:dword_4B0, 4B0h
.text:00000691                 jl      short loc_69D
.text:00000693                 mov     ds:dword_4B0, 0
.text:0000069D
.text:0000069D loc_69D:                                ; CODE XREF: _random_add_noise+EDj
.text:0000069D                 jmp     short loc_644
.text:0000069F ; ---------------------------------------------------------------------------
.text:0000069F
.text:0000069F loc_69F:                                ; CODE XREF: _random_add_noise+ADj
.text:0000069F                 cmp     ds:dword_4B0, 14h
.text:000006A6                 jge     short loc_6AD
.text:000006A8                 call    _random_stir
.text:000006AD
.text:000006AD loc_6AD:                                ; CODE XREF: _random_add_noise+102j
.text:000006AD                 mov     ds:dword_508, 0
.text:000006B7                 jmp     loc_5CC
.text:000006BC ; ---------------------------------------------------------------------------
.text:000006BC
.text:000006BC loc_6BC:                                ; CODE XREF: _random_add_noise+36j
.text:000006BC                 mov     eax, [ebp+arg_4]
.text:000006BF                 push    eax             ; size_t
.text:000006C0                 mov     ecx, [ebp+var_4]
.text:000006C3                 push    ecx             ; void *
.text:000006C4                 mov     edx, ds:dword_508
.text:000006CA                 add     edx, offset byte_4C8
.text:000006D0                 push    edx             ; void *
.text:000006D1                 call    _memcpy
.text:000006D6                 add     esp, 0Ch
.text:000006D9                 mov     eax, ds:dword_508
.text:000006DE                 add     eax, [ebp+arg_4]
.text:000006E1                 mov     ds:dword_508, eax
.text:000006E6
.text:000006E6 loc_6E6:                                ; CODE XREF: _random_add_noise+23j
.text:000006E6                 add     esp, 8
.text:000006E9                 cmp     ebp, esp
.text:000006EB                 call    __RTC_CheckEsp
.text:000006F0                 mov     esp, ebp
.text:000006F2                 pop     ebp
.text:000006F3                 retn
.text:000006F3 _random_add_noise endp
.text:000006F3
.text:000006F4
.text:000006F4 ; =============== S U B R O U T I N E =======================================
.text:000006F4
.text:000006F4 ; Attributes: bp-based frame
.text:000006F4
.text:000006F4 _random_stir    proc near               ; CODE XREF: _random_add_noise+104p
.text:000006F4                                         ; _random_add_heavynoise:loc_918p ...
.text:000006F4
.text:000006F4 var_74          = dword ptr -74h
.text:000006F4 var_70          = dword ptr -70h
.text:000006F4 var_6C          = dword ptr -6Ch
.text:000006F4 var_64          = dword ptr -64h
.text:000006F4 var_48          = byte ptr -48h
.text:000006F4 var_4           = dword ptr -4
.text:000006F4
.text:000006F4                 push    ebp
.text:000006F5                 mov     ebp, esp
.text:000006F7                 sub     esp, 74h
.text:000006FA                 push    edi
.text:000006FB                 lea     edi, [ebp+var_74]
.text:000006FE                 mov     ecx, 1Dh
.text:00000703                 mov     eax, 0CCCCCCCCh
.text:00000708                 rep stosd
.text:0000070A                 mov     eax, dword ptr ds:___security_cookie
.text:0000070F                 xor     eax, ebp
.text:00000711                 mov     [ebp+var_4], eax
.text:00000714                 cmp     ds:dword_50C, 0
.text:0000071B                 jz      short loc_722
.text:0000071D                 jmp     loc_85A
.text:00000722 ; ---------------------------------------------------------------------------
.text:00000722
.text:00000722 loc_722:                                ; CODE XREF: _random_stir+27j
.text:00000722                 mov     ds:dword_50C, 1
.text:0000072C                 push    offset _random_add_noise
.text:00000731                 call    _noise_get_light
.text:00000736                 add     esp, 4
.text:00000739                 push    offset byte_4C8
.text:0000073E                 push    offset unk_4B4
.text:00000743                 call    _SHATransform
.text:00000748                 add     esp, 8
.text:0000074B                 mov     ds:dword_508, 0
.text:00000755                 push    14h             ; size_t
.text:00000757                 push    offset unk_4B4  ; void *
.text:0000075C                 lea     eax, [ebp+var_64]
.text:0000075F                 push    eax             ; void *
.text:00000760                 call    _memcpy
.text:00000765                 add     esp, 0Ch
.text:00000768                 mov     [ebp+var_6C], 0
.text:0000076F                 jmp     short loc_77A
.text:00000771 ; ---------------------------------------------------------------------------
.text:00000771
.text:00000771 loc_771:                                ; CODE XREF: _random_stir:loc_81Ej
.text:00000771                 mov     ecx, [ebp+var_6C]
.text:00000774                 add     ecx, 1
.text:00000777                 mov     [ebp+var_6C], ecx
.text:0000077A
.text:0000077A loc_77A:                                ; CODE XREF: _random_stir+7Bj
.text:0000077A                 cmp     [ebp+var_6C], 2
.text:0000077E                 jge     loc_823
.text:00000784                 push    40h ; '@'       ; size_t
.text:00000786                 push    offset _pool    ; void *
.text:0000078B                 lea     edx, [ebp+var_48]
.text:0000078E                 push    edx             ; void *
.text:0000078F                 call    _memcpy
.text:00000794                 add     esp, 0Ch
.text:00000797                 mov     [ebp+var_70], 4B0h
.text:0000079E
.text:0000079E loc_79E:                                ; CODE XREF: _random_stir:loc_81Cj
.text:0000079E                 mov     eax, [ebp+var_70]
.text:000007A1                 sub     eax, 14h
.text:000007A4                 mov     [ebp+var_70], eax
.text:000007A7                 js      short loc_81E
.text:000007A9                 mov     [ebp+var_74], 0
.text:000007B0                 jmp     short loc_7BB
.text:000007B2 ; ---------------------------------------------------------------------------
.text:000007B2
.text:000007B2 loc_7B2:                                ; CODE XREF: _random_stir+E8j
.text:000007B2                 mov     ecx, [ebp+var_74]
.text:000007B5                 add     ecx, 1
.text:000007B8                 mov     [ebp+var_74], ecx
.text:000007BB
.text:000007BB loc_7BB:                                ; CODE XREF: _random_stir+BCj
.text:000007BB                 cmp     [ebp+var_74], 5
.text:000007BF                 jnb     short loc_7DE
.text:000007C1                 mov     edx, [ebp+var_74]
.text:000007C4                 mov     eax, [ebp+var_74]
.text:000007C7                 mov     ecx, [ebp+var_70]
.text:000007CA                 mov     edx, [ebp+edx*4+var_64]
.text:000007CE                 xor     edx, ds:_pool[ecx+eax*4]
.text:000007D5                 mov     eax, [ebp+var_74]
.text:000007D8                 mov     [ebp+eax*4+var_64], edx
.text:000007DC                 jmp     short loc_7B2
.text:000007DE ; ---------------------------------------------------------------------------
.text:000007DE
.text:000007DE loc_7DE:                                ; CODE XREF: _random_stir+CBj
.text:000007DE                 lea     ecx, [ebp+var_48]
.text:000007E1                 push    ecx
.text:000007E2                 lea     edx, [ebp+var_64]
.text:000007E5                 push    edx
.text:000007E6                 call    _SHATransform
.text:000007EB                 add     esp, 8
.text:000007EE                 mov     [ebp+var_74], 0
.text:000007F5                 jmp     short loc_800
.text:000007F7 ; ---------------------------------------------------------------------------
.text:000007F7
.text:000007F7 loc_7F7:                                ; CODE XREF: _random_stir+126j
.text:000007F7                 mov     eax, [ebp+var_74]
.text:000007FA                 add     eax, 1
.text:000007FD                 mov     [ebp+var_74], eax
.text:00000800
.text:00000800 loc_800:                                ; CODE XREF: _random_stir+101j
.text:00000800                 cmp     [ebp+var_74], 5
.text:00000804                 jnb     short loc_81C
.text:00000806                 mov     ecx, [ebp+var_74]
.text:00000809                 mov     edx, [ebp+var_70]
.text:0000080C                 mov     eax, [ebp+var_74]
.text:0000080F                 mov     eax, [ebp+eax*4+var_64]
.text:00000813                 mov     ds:_pool[edx+ecx*4], eax
.text:0000081A                 jmp     short loc_7F7
.text:0000081C ; ---------------------------------------------------------------------------
.text:0000081C
.text:0000081C loc_81C:                                ; CODE XREF: _random_stir+110j
.text:0000081C                 jmp     short loc_79E
.text:0000081E ; ---------------------------------------------------------------------------
.text:0000081E
.text:0000081E loc_81E:                                ; CODE XREF: _random_stir+B3j
.text:0000081E                 jmp     loc_771
.text:00000823 ; ---------------------------------------------------------------------------
.text:00000823
.text:00000823 loc_823:                                ; CODE XREF: _random_stir+8Aj
.text:00000823                 lea     ecx, [ebp+var_48]
.text:00000826                 push    ecx
.text:00000827                 lea     edx, [ebp+var_64]
.text:0000082A                 push    edx
.text:0000082B                 call    _SHATransform
.text:00000830                 add     esp, 8
.text:00000833                 push    14h             ; size_t
.text:00000835                 lea     eax, [ebp+var_64]
.text:00000838                 push    eax             ; void *
.text:00000839                 push    offset unk_4B4  ; void *
.text:0000083E                 call    _memcpy
.text:00000843                 add     esp, 0Ch
.text:00000846                 mov     ds:dword_4B0, 14h
.text:00000850                 mov     ds:dword_50C, 0
.text:0000085A
.text:0000085A loc_85A:                                ; CODE XREF: _random_stir+29j
.text:0000085A                 push    edx
.text:0000085B                 mov     ecx, ebp
.text:0000085D                 push    eax
.text:0000085E                 lea     edx, $LN18
.text:00000864                 call    @_RTC_CheckStackVars@8
.text:00000869                 pop     eax
.text:0000086A                 pop     edx
.text:0000086B                 pop     edi
.text:0000086C                 mov     ecx, [ebp+var_4]
.text:0000086F                 xor     ecx, ebp
.text:00000871                 call    @__security_check_cookie@4
.text:00000876                 add     esp, 74h
.text:00000879                 cmp     ebp, esp
.text:0000087B                 call    __RTC_CheckEsp
.text:00000880                 mov     esp, ebp
.text:00000882                 pop     ebp
.text:00000883                 retn
.text:00000883 _random_stir    endp
.text:00000883
.text:00000883 ; ---------------------------------------------------------------------------
.text:00000884 $LN18           dd 2                    ; DATA XREF: _random_stir+16Ao
.text:00000888                 dd offset $LN17
.text:0000088C $LN17           dd 0FFFFFFB8h, 40h      ; DATA XREF: .text:00000888o
.text:00000894                 dd offset $LN15         ; "block"
.text:00000898                 dd 0FFFFFF9Ch, 14h
.text:000008A0                 dd offset $LN16         ; "digest"
.text:000008A4 $LN16           db 'digest',0           ; DATA XREF: .text:000008A0o
.text:000008AB $LN15           db 'block',0            ; DATA XREF: .text:00000894o
.text:000008B1                 align 4
.text:000008B4
.text:000008B4 ; =============== S U B R O U T I N E =======================================
.text:000008B4
.text:000008B4 ; Attributes: bp-based frame
.text:000008B4
.text:000008B4                 public _random_add_heavynoise
.text:000008B4 _random_add_heavynoise proc near
.text:000008B4
.text:000008B4 var_8           = dword ptr -8
.text:000008B4 var_4           = dword ptr -4
.text:000008B4 arg_0           = dword ptr  8
.text:000008B4 arg_4           = dword ptr  0Ch
.text:000008B4
.text:000008B4                 push    ebp
.text:000008B5                 mov     ebp, esp
.text:000008B7                 sub     esp, 8
.text:000008BA                 mov     [ebp+var_8], 0CCCCCCCCh
.text:000008C1                 mov     [ebp+var_4], 0CCCCCCCCh
.text:000008C8                 mov     eax, [ebp+arg_0]
.text:000008CB                 mov     [ebp+var_4], eax
.text:000008CE
.text:000008CE loc_8CE:                                ; CODE XREF: _random_add_heavynoise+75j
.text:000008CE                 cmp     [ebp+arg_4], 4B0h
.text:000008D5                 jl      short loc_92B
.text:000008D7                 mov     [ebp+var_8], 0
.text:000008DE                 jmp     short loc_8E9
.text:000008E0 ; ---------------------------------------------------------------------------
.text:000008E0
.text:000008E0 loc_8E0:                                ; CODE XREF: _random_add_heavynoise+62j
.text:000008E0                 mov     ecx, [ebp+var_8]
.text:000008E3                 add     ecx, 1
.text:000008E6                 mov     [ebp+var_8], ecx
.text:000008E9
.text:000008E9 loc_8E9:                                ; CODE XREF: _random_add_heavynoise+2Aj
.text:000008E9                 cmp     [ebp+var_8], 4B0h
.text:000008F0                 jge     short loc_918
.text:000008F2                 mov     edx, [ebp+var_4]
.text:000008F5                 movzx   eax, byte ptr [edx]
.text:000008F8                 mov     ecx, [ebp+var_8]
.text:000008FB                 movzx   edx, byte ptr ds:_pool[ecx]
.text:00000902                 xor     edx, eax
.text:00000904                 mov     eax, [ebp+var_8]
.text:00000907                 mov     byte ptr ds:_pool[eax], dl
.text:0000090D                 mov     ecx, [ebp+var_4]
.text:00000910                 add     ecx, 1
.text:00000913                 mov     [ebp+var_4], ecx
.text:00000916                 jmp     short loc_8E0
.text:00000918 ; ---------------------------------------------------------------------------
.text:00000918
.text:00000918 loc_918:                                ; CODE XREF: _random_add_heavynoise+3Cj
.text:00000918                 call    _random_stir
.text:0000091D                 mov     edx, [ebp+arg_4]
.text:00000920                 sub     edx, 4B0h
.text:00000926                 mov     [ebp+arg_4], edx
.text:00000929                 jmp     short loc_8CE
.text:0000092B ; ---------------------------------------------------------------------------
.text:0000092B
.text:0000092B loc_92B:                                ; CODE XREF: _random_add_heavynoise+21j
.text:0000092B                 mov     [ebp+var_8], 0
.text:00000932                 jmp     short loc_93D
.text:00000934 ; ---------------------------------------------------------------------------
.text:00000934
.text:00000934 loc_934:                                ; CODE XREF: _random_add_heavynoise+B5j
.text:00000934                 mov     eax, [ebp+var_8]
.text:00000937                 add     eax, 1
.text:0000093A                 mov     [ebp+var_8], eax
.text:0000093D
.text:0000093D loc_93D:                                ; CODE XREF: _random_add_heavynoise+7Ej
.text:0000093D                 mov     ecx, [ebp+var_8]
.text:00000940                 cmp     ecx, [ebp+arg_4]
.text:00000943                 jge     short loc_96B
.text:00000945                 mov     edx, [ebp+var_4]
.text:00000948                 movzx   eax, byte ptr [edx]
.text:0000094B                 mov     ecx, [ebp+var_8]
.text:0000094E                 movzx   edx, byte ptr ds:_pool[ecx]
.text:00000955                 xor     edx, eax
.text:00000957                 mov     eax, [ebp+var_8]
.text:0000095A                 mov     byte ptr ds:_pool[eax], dl
.text:00000960                 mov     ecx, [ebp+var_4]
.text:00000963                 add     ecx, 1
.text:00000966                 mov     [ebp+var_4], ecx
.text:00000969                 jmp     short loc_934
.text:0000096B ; ---------------------------------------------------------------------------
.text:0000096B
.text:0000096B loc_96B:                                ; CODE XREF: _random_add_heavynoise+8Fj
.text:0000096B                 call    _random_stir
.text:00000970                 add     esp, 8
.text:00000973                 cmp     ebp, esp
.text:00000975                 call    __RTC_CheckEsp
.text:0000097A                 mov     esp, ebp
.text:0000097C                 pop     ebp
.text:0000097D                 retn
.text:0000097D _random_add_heavynoise endp
.text:0000097D
.text:0000097D ; ---------------------------------------------------------------------------
.text:0000097E                 db 6 dup(0CCh)
.text:00000984
.text:00000984 ; =============== S U B R O U T I N E =======================================
.text:00000984
.text:00000984 ; Attributes: bp-based frame
.text:00000984
.text:00000984                 public _random_ref
.text:00000984 _random_ref     proc near
.text:00000984                 push    ebp
.text:00000985                 mov     ebp, esp
.text:00000987                 cmp     ds:_random_active, 0
.text:0000098E                 jnz     short loc_9D2
.text:00000990                 push    510h            ; size_t
.text:00000995                 push    0               ; int
.text:00000997                 push    offset _pool    ; void *
.text:0000099C                 call    _memset
.text:000009A1                 add     esp, 0Ch
.text:000009A4                 push    offset _random_add_heavynoise_bitbybit
.text:000009A9                 call    _noise_get_heavy
.text:000009AE                 add     esp, 4
.text:000009B1                 call    _random_stir
.text:000009B6                 push    offset _pool
.text:000009BB                 push    offset _random_timer
.text:000009C0                 push    493E0h
.text:000009C5                 call    _schedule_timer
.text:000009CA                 add     esp, 0Ch
.text:000009CD                 mov     dword ptr ds:_next_noise_collection, eax
.text:000009D2
.text:000009D2 loc_9D2:                                ; CODE XREF: _random_ref+Aj
.text:000009D2                 mov     eax, ds:_random_active
.text:000009D7                 add     eax, 1
.text:000009DA                 mov     ds:_random_active, eax
.text:000009DF                 cmp     ebp, esp
.text:000009E1                 call    __RTC_CheckEsp
.text:000009E6                 pop     ebp
.text:000009E7                 retn
.text:000009E7 _random_ref     endp
.text:000009E7
.text:000009E7 ; ---------------------------------------------------------------------------
.text:000009E8                 db 0Ch dup(0CCh)
.text:000009F4
.text:000009F4 ; =============== S U B R O U T I N E =======================================
.text:000009F4
.text:000009F4 ; Attributes: bp-based frame
.text:000009F4
.text:000009F4 _random_add_heavynoise_bitbybit proc near ; DATA XREF: _random_ref+20o
.text:000009F4
.text:000009F4 var_8           = dword ptr -8
.text:000009F4 var_4           = dword ptr -4
.text:000009F4 arg_0           = dword ptr  8
.text:000009F4 arg_4           = dword ptr  0Ch
.text:000009F4
.text:000009F4                 push    ebp
.text:000009F5                 mov     ebp, esp
.text:000009F7                 sub     esp, 8
.text:000009FA                 mov     [ebp+var_8], 0CCCCCCCCh
.text:00000A01                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00000A08                 mov     eax, [ebp+arg_0]
.text:00000A0B                 mov     [ebp+var_4], eax
.text:00000A0E
.text:00000A0E loc_A0E:                                ; CODE XREF: _random_add_heavynoise_bitbybit+9Fj
.text:00000A0E                 mov     ecx, 4B0h
.text:00000A13                 sub     ecx, ds:dword_4B0
.text:00000A19                 cmp     [ebp+arg_4], ecx
.text:00000A1C                 jl      short loc_A98
.text:00000A1E                 mov     [ebp+var_8], 0
.text:00000A25                 jmp     short loc_A30
.text:00000A27 ; ---------------------------------------------------------------------------
.text:00000A27
.text:00000A27 loc_A27:                                ; CODE XREF: _random_add_heavynoise_bitbybit+7Bj
.text:00000A27                 mov     edx, [ebp+var_8]
.text:00000A2A                 add     edx, 1
.text:00000A2D                 mov     [ebp+var_8], edx
.text:00000A30
.text:00000A30 loc_A30:                                ; CODE XREF: _random_add_heavynoise_bitbybit+31j
.text:00000A30                 mov     eax, 4B0h
.text:00000A35                 sub     eax, ds:dword_4B0
.text:00000A3B                 cmp     [ebp+var_8], eax
.text:00000A3E                 jge     short loc_A71
.text:00000A40                 mov     ecx, [ebp+var_4]
.text:00000A43                 movzx   edx, byte ptr [ecx]
.text:00000A46                 mov     eax, ds:dword_4B0
.text:00000A4B                 add     eax, [ebp+var_8]
.text:00000A4E                 movzx   ecx, byte ptr ds:_pool[eax]
.text:00000A55                 xor     ecx, edx
.text:00000A57                 mov     edx, ds:dword_4B0
.text:00000A5D                 add     edx, [ebp+var_8]
.text:00000A60                 mov     byte ptr ds:_pool[edx], cl
.text:00000A66                 mov     eax, [ebp+var_4]
.text:00000A69                 add     eax, 1
.text:00000A6C                 mov     [ebp+var_4], eax
.text:00000A6F                 jmp     short loc_A27
.text:00000A71 ; ---------------------------------------------------------------------------
.text:00000A71
.text:00000A71 loc_A71:                                ; CODE XREF: _random_add_heavynoise_bitbybit+4Aj
.text:00000A71                 call    _random_stir
.text:00000A76                 mov     ecx, 4B0h
.text:00000A7B                 sub     ecx, ds:dword_4B0
.text:00000A81                 mov     edx, [ebp+arg_4]
.text:00000A84                 sub     edx, ecx
.text:00000A86                 mov     [ebp+arg_4], edx
.text:00000A89                 mov     ds:dword_4B0, 0
.text:00000A93                 jmp     loc_A0E
.text:00000A98 ; ---------------------------------------------------------------------------
.text:00000A98
.text:00000A98 loc_A98:                                ; CODE XREF: _random_add_heavynoise_bitbybit+28j
.text:00000A98                 mov     [ebp+var_8], 0
.text:00000A9F                 jmp     short loc_AAA
.text:00000AA1 ; ---------------------------------------------------------------------------
.text:00000AA1
.text:00000AA1 loc_AA1:                                ; CODE XREF: _random_add_heavynoise_bitbybit+E2j
.text:00000AA1                 mov     eax, [ebp+var_8]
.text:00000AA4                 add     eax, 1
.text:00000AA7                 mov     [ebp+var_8], eax
.text:00000AAA
.text:00000AAA loc_AAA:                                ; CODE XREF: _random_add_heavynoise_bitbybit+ABj
.text:00000AAA                 mov     ecx, [ebp+var_8]
.text:00000AAD                 cmp     ecx, [ebp+arg_4]
.text:00000AB0                 jge     short loc_AD8
.text:00000AB2                 mov     edx, [ebp+var_4]
.text:00000AB5                 movzx   eax, byte ptr [edx]
.text:00000AB8                 mov     ecx, [ebp+var_8]
.text:00000ABB                 movzx   edx, byte ptr ds:_pool[ecx]
.text:00000AC2                 xor     edx, eax
.text:00000AC4                 mov     eax, [ebp+var_8]
.text:00000AC7                 mov     byte ptr ds:_pool[eax], dl
.text:00000ACD                 mov     ecx, [ebp+var_4]
.text:00000AD0                 add     ecx, 1
.text:00000AD3                 mov     [ebp+var_4], ecx
.text:00000AD6                 jmp     short loc_AA1
.text:00000AD8 ; ---------------------------------------------------------------------------
.text:00000AD8
.text:00000AD8 loc_AD8:                                ; CODE XREF: _random_add_heavynoise_bitbybit+BCj
.text:00000AD8                 mov     edx, [ebp+var_8]
.text:00000ADB                 mov     ds:dword_4B0, edx
.text:00000AE1                 add     esp, 8
.text:00000AE4                 cmp     ebp, esp
.text:00000AE6                 call    __RTC_CheckEsp
.text:00000AEB                 mov     esp, ebp
.text:00000AED                 pop     ebp
.text:00000AEE                 retn
.text:00000AEE _random_add_heavynoise_bitbybit endp
.text:00000AEE
.text:00000AEE ; ---------------------------------------------------------------------------
.text:00000AEF                 db 5 dup(0CCh)
.text:00000AF4
.text:00000AF4 ; =============== S U B R O U T I N E =======================================
.text:00000AF4
.text:00000AF4 ; Attributes: bp-based frame
.text:00000AF4
.text:00000AF4 _random_timer   proc near               ; DATA XREF: _random_ref+37o
.text:00000AF4                                         ; _random_timer+21o
.text:00000AF4
.text:00000AF4 arg_4           = dword ptr  0Ch
.text:00000AF4
.text:00000AF4                 push    ebp
.text:00000AF5                 mov     ebp, esp
.text:00000AF7                 cmp     ds:_random_active, 0
.text:00000AFE                 jle     short loc_B2C
.text:00000B00                 mov     eax, [ebp+arg_4]
.text:00000B03                 cmp     eax, dword ptr ds:_next_noise_collection
.text:00000B09                 jnz     short loc_B2C
.text:00000B0B                 call    _noise_regular
.text:00000B10                 push    offset _pool
.text:00000B15                 push    offset _random_timer
.text:00000B1A                 push    493E0h
.text:00000B1F                 call    _schedule_timer
.text:00000B24                 add     esp, 0Ch
.text:00000B27                 mov     dword ptr ds:_next_noise_collection, eax
.text:00000B2C
.text:00000B2C loc_B2C:                                ; CODE XREF: _random_timer+Aj
.text:00000B2C                                         ; _random_timer+15j
.text:00000B2C                 cmp     ebp, esp
.text:00000B2E                 call    __RTC_CheckEsp
.text:00000B33                 pop     ebp
.text:00000B34                 retn
.text:00000B34 _random_timer   endp
.text:00000B34
.text:00000B34 ; ---------------------------------------------------------------------------
.text:00000B35                 db 0Fh dup(0CCh)
.text:00000B44
.text:00000B44 ; =============== S U B R O U T I N E =======================================
.text:00000B44
.text:00000B44 ; Attributes: bp-based frame
.text:00000B44
.text:00000B44                 public _random_unref
.text:00000B44 _random_unref   proc near
.text:00000B44                 push    ebp
.text:00000B45                 mov     ebp, esp
.text:00000B47                 cmp     ds:_random_active, 0
.text:00000B4E                 jg      short loc_B67
.text:00000B50                 push    12Eh
.text:00000B55                 push    offset $SG87174 ; "..\\..\\..\\sshrand.c"
.text:00000B5A                 push    offset $SG87175 ; "random_active > 0"
.text:00000B5F                 call    __wassert
.text:00000B64 ; ---------------------------------------------------------------------------
.text:00000B64                 add     esp, 0Ch
.text:00000B67
.text:00000B67 loc_B67:                                ; CODE XREF: _random_unref+Aj
.text:00000B67                 cmp     ds:_random_active, 1
.text:00000B6E                 jnz     short loc_B82
.text:00000B70                 call    _random_save_seed
.text:00000B75                 push    offset _pool
.text:00000B7A                 call    _expire_timer_context
.text:00000B7F                 add     esp, 4
.text:00000B82
.text:00000B82 loc_B82:                                ; CODE XREF: _random_unref+2Aj
.text:00000B82                 mov     ecx, ds:_random_active
.text:00000B88                 sub     ecx, 1
.text:00000B8B                 mov     ds:_random_active, ecx
.text:00000B91                 cmp     ebp, esp
.text:00000B93                 call    __RTC_CheckEsp
.text:00000B98                 pop     ebp
.text:00000B99                 retn
.text:00000B99 _random_unref   endp
.text:00000B99
.text:00000B99 ; ---------------------------------------------------------------------------
.text:00000B9A                 db 0Ah dup(0CCh)
.text:00000BA4
.text:00000BA4 ; =============== S U B R O U T I N E =======================================
.text:00000BA4
.text:00000BA4 ; Attributes: bp-based frame
.text:00000BA4
.text:00000BA4                 public _random_byte
.text:00000BA4 _random_byte    proc near
.text:00000BA4
.text:00000BA4 var_4           = dword ptr -4
.text:00000BA4
.text:00000BA4                 push    ebp
.text:00000BA5                 mov     ebp, esp
.text:00000BA7                 push    ecx
.text:00000BA8                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00000BAF                 cmp     ds:_random_active, 0
.text:00000BB6                 jnz     short loc_BCF
.text:00000BB8                 push    138h
.text:00000BBD                 push    offset $SG87180 ; "..\\..\\..\\sshrand.c"
.text:00000BC2                 push    offset $SG87181 ; "random_active"
.text:00000BC7                 call    __wassert
.text:00000BCC ; ---------------------------------------------------------------------------
.text:00000BCC                 add     esp, 0Ch
.text:00000BCF
.text:00000BCF loc_BCF:                                ; CODE XREF: _random_byte+12j
.text:00000BCF                 cmp     ds:dword_4B0, 4B0h
.text:00000BD9                 jl      short loc_BE0
.text:00000BDB                 call    _random_stir
.text:00000BE0
.text:00000BE0 loc_BE0:                                ; CODE XREF: _random_byte+35j
.text:00000BE0                 mov     ecx, ds:dword_4B0
.text:00000BE6                 mov     dl, byte ptr ds:_pool[ecx]
.text:00000BEC                 mov     byte ptr [ebp+var_4+3], dl
.text:00000BEF                 mov     eax, ds:dword_4B0
.text:00000BF4                 add     eax, 1
.text:00000BF7                 mov     ds:dword_4B0, eax
.text:00000BFC                 movzx   eax, byte ptr [ebp+var_4+3]
.text:00000C00                 add     esp, 4
.text:00000C03                 cmp     ebp, esp
.text:00000C05                 call    __RTC_CheckEsp
.text:00000C0A                 mov     esp, ebp
.text:00000C0C                 pop     ebp
.text:00000C0D                 retn
.text:00000C0D _random_byte    endp
.text:00000C0D
.text:00000C0D ; ---------------------------------------------------------------------------
.text:00000C0E                 db 6 dup(0CCh)
.text:00000C14
.text:00000C14 ; =============== S U B R O U T I N E =======================================
.text:00000C14
.text:00000C14 ; Attributes: bp-based frame
.text:00000C14
.text:00000C14                 public _random_get_savedata
.text:00000C14 _random_get_savedata proc near
.text:00000C14
.text:00000C14 var_4           = dword ptr -4
.text:00000C14 arg_0           = dword ptr  8
.text:00000C14 arg_4           = dword ptr  0Ch
.text:00000C14
.text:00000C14                 push    ebp
.text:00000C15                 mov     ebp, esp
.text:00000C17                 push    ecx
.text:00000C18                 mov     [ebp+var_4], 0CCCCCCCCh
.text:00000C1F                 push    1
.text:00000C21                 push    258h
.text:00000C26                 call    _safemalloc
.text:00000C2B                 add     esp, 8
.text:00000C2E                 mov     [ebp+var_4], eax
.text:00000C31                 call    _random_stir
.text:00000C36                 push    258h            ; size_t
.text:00000C3B                 mov     eax, ds:dword_4B0
.text:00000C40                 add     eax, offset _pool
.text:00000C45                 push    eax             ; void *
.text:00000C46                 mov     ecx, [ebp+var_4]
.text:00000C49                 push    ecx             ; void *
.text:00000C4A                 call    _memcpy
.text:00000C4F                 add     esp, 0Ch
.text:00000C52                 mov     edx, [ebp+arg_4]
.text:00000C55                 mov     dword ptr [edx], 258h
.text:00000C5B                 mov     eax, [ebp+arg_0]
.text:00000C5E                 mov     ecx, [ebp+var_4]
.text:00000C61                 mov     [eax], ecx
.text:00000C63                 call    _random_stir
.text:00000C68                 add     esp, 4
.text:00000C6B                 cmp     ebp, esp
.text:00000C6D                 call    __RTC_CheckEsp
.text:00000C72                 mov     esp, ebp
.text:00000C74                 pop     ebp
.text:00000C75                 retn
.text:00000C75 _random_get_savedata endp
.text:00000C75
.text:00000C75 ; ---------------------------------------------------------------------------
.text:00000C76                 align 4
.text:00000C76 _text           ends
.text:00000C76
.rtc$TMZ:00000C78 ; ===========================================================================
.rtc$TMZ:00000C78
.rtc$TMZ:00000C78 ; Segment type: Pure data
.rtc$TMZ:00000C78 ; Segment permissions: Read
.rtc$TMZ:00000C78 _rtc$TMZ        segment dword public 'DATA' use32
.rtc$TMZ:00000C78                 assume cs:_rtc$TMZ
.rtc$TMZ:00000C78                 ;org 0C78h
.rtc$TMZ:00000C78 ; COMDAT (pick any)
.rtc$TMZ:00000C78 __RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
.rtc$TMZ:00000C78 _rtc$TMZ        ends
.rtc$TMZ:00000C78
.rtc$IMZ:00000C7C ; ===========================================================================
.rtc$IMZ:00000C7C
.rtc$IMZ:00000C7C ; Segment type: Pure data
.rtc$IMZ:00000C7C ; Segment permissions: Read
.rtc$IMZ:00000C7C _rtc$IMZ        segment dword public 'DATA' use32
.rtc$IMZ:00000C7C                 assume cs:_rtc$IMZ
.rtc$IMZ:00000C7C                 ;org 0C7Ch
.rtc$IMZ:00000C7C ; COMDAT (pick any)
.rtc$IMZ:00000C7C __RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
.rtc$IMZ:00000C7C _rtc$IMZ        ends
.rtc$IMZ:00000C7C
UNDEF:00000C80 ; ===========================================================================
UNDEF:00000C80
UNDEF:00000C80 ; Segment type: Externs
UNDEF:00000C80 ; UNDEF
UNDEF:00000C80                 extrn _next_noise_collection:near
UNDEF:00000C80                                         ; DATA XREF: _random_ref+49w
UNDEF:00000C80                                         ; _random_timer+Fr ...
UNDEF:00000C84                 extrn _SHATransform:near ; CODE XREF: _random_add_noise+8Fp
UNDEF:00000C84                                         ; _random_stir+4Fp ...
UNDEF:00000C88 ; void *__cdecl memcpy(void *, const void *, size_t)
UNDEF:00000C88                 extrn _memcpy:near      ; CODE XREF: _random_add_noise+59p
UNDEF:00000C88                                         ; _random_add_noise+12Dp ...
UNDEF:00000C8C                 extrn __RTC_CheckEsp:near ; CODE XREF: _random_add_noise+147p
UNDEF:00000C8C                                         ; _random_stir+187p ...
UNDEF:00000C90                 extrn __RTC_Shutdown:near
UNDEF:00000C90                                         ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
UNDEF:00000C94                 extrn __RTC_InitBase:near
UNDEF:00000C94                                         ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
UNDEF:00000C98                 extrn _noise_get_light:near ; CODE XREF: _random_stir+3Dp
UNDEF:00000C9C                 extrn ___security_cookie:near ; DATA XREF: _random_stir+16r
UNDEF:00000CA0                 extrn @__security_check_cookie@4:near
UNDEF:00000CA0                                         ; CODE XREF: _random_stir+17Dp
UNDEF:00000CA4                 extrn @_RTC_CheckStackVars@8:near
UNDEF:00000CA4                                         ; CODE XREF: _random_stir+170p
UNDEF:00000CA8                 extrn _schedule_timer:near ; CODE XREF: _random_ref+41p
UNDEF:00000CA8                                         ; _random_timer+2Bp
UNDEF:00000CAC                 extrn _noise_get_heavy:near ; CODE XREF: _random_ref+25p
UNDEF:00000CB0 ; void *__cdecl memset(void *, int, size_t)
UNDEF:00000CB0                 extrn _memset:near      ; CODE XREF: _random_ref+18p
UNDEF:00000CB4                 extrn _noise_regular:near ; CODE XREF: _random_timer+17p
UNDEF:00000CB8                 extrn _expire_timer_context:near
UNDEF:00000CB8                                         ; CODE XREF: _random_unref+36p
UNDEF:00000CBC                 extrn _random_save_seed:near ; CODE XREF: _random_unref+2Cp
UNDEF:00000CC0                 extrn __wassert:near    ; CODE XREF: _random_unref+1Bp
UNDEF:00000CC0                                         ; _random_byte+23p
UNDEF:00000CC4                 extrn _safemalloc:near  ; CODE XREF: _random_get_savedata+12p
UNDEF:00000CC4
UNDEF:00000CC4
UNDEF:00000CC4                 end
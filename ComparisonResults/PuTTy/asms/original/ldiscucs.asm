; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\Putty\ldiscucs.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_luni_send
PUBLIC	_lpage_send
EXTRN	_safefree:PROC
EXTRN	_mb_to_wc:PROC
EXTRN	_safemalloc:PROC
EXTRN	_ldisc_send:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\putty\ldiscucs.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_wclen$ = -16						; size = 4
_widesize$ = -12					; size = 4
_widebuffer$ = -8					; size = 4
_ldisc$ = -4						; size = 4
_handle$ = 8						; size = 4
_codepage$ = 12						; size = 4
_buf$ = 16						; size = 4
_len$ = 20						; size = 4
_interactive$ = 24					; size = 4
_lpage_send PROC
; Line 17
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 18
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ldisc$[ebp], eax
; Line 19
	mov	DWORD PTR _widebuffer$[ebp], 0
; Line 20
	mov	DWORD PTR _widesize$[ebp], 0
; Line 23
	cmp	DWORD PTR _codepage$[ebp], 0
	jge	SHORT $LN1@lpage_send
; Line 24
	mov	ecx, DWORD PTR _interactive$[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ldisc$[ebp]
	push	ecx
	call	_ldisc_send
	add	esp, 16					; 00000010H
; Line 25
	jmp	SHORT $LN2@lpage_send
$LN1@lpage_send:
; Line 28
	mov	edx, DWORD PTR _len$[ebp]
	shl	edx, 1
	mov	DWORD PTR _widesize$[ebp], edx
; Line 29
	push	2
	mov	eax, DWORD PTR _widesize$[ebp]
	push	eax
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _widebuffer$[ebp], eax
; Line 31
	mov	ecx, DWORD PTR _widesize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _widebuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _codepage$[ebp]
	push	edx
	call	_mb_to_wc
	add	esp, 24					; 00000018H
	mov	DWORD PTR _wclen$[ebp], eax
; Line 32
	mov	eax, DWORD PTR _interactive$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wclen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _widebuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _ldisc$[ebp]
	push	eax
	call	_luni_send
	add	esp, 16					; 00000010H
; Line 34
	mov	ecx, DWORD PTR _widebuffer$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN2@lpage_send:
; Line 35
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_lpage_send ENDP
_TEXT	ENDS
EXTRN	_wc_to_mb:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv69 = -40						; size = 4
_rv$85850 = -36						; size = 4
_ch2$85830 = -32					; size = 4
_ch$85827 = -28						; size = 4
_p$ = -24						; size = 4
_i$ = -20						; size = 4
_linesize$ = -16					; size = 4
_linebuffer$ = -12					; size = 4
_ratio$ = -8						; size = 4
_ldisc$ = -4						; size = 4
_handle$ = 8						; size = 4
_widebuf$ = 12						; size = 4
_len$ = 16						; size = 4
_interactive$ = 20					; size = 4
_luni_send PROC
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	edi
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 39
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ldisc$[ebp], eax
; Line 40
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	DWORD PTR [edx+220], 0
	jne	SHORT $LN22@luni_send
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4240]
	cmp	DWORD PTR [edx+12], 65001		; 0000fde9H
	je	SHORT $LN22@luni_send
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN23@luni_send
$LN22@luni_send:
	mov	DWORD PTR tv69[ebp], 3
$LN23@luni_send:
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR _ratio$[ebp], eax
; Line 46
	mov	ecx, DWORD PTR _len$[ebp]
	imul	ecx, DWORD PTR _ratio$[ebp]
	shl	ecx, 1
	mov	DWORD PTR _linesize$[ebp], ecx
; Line 47
	push	1
	mov	edx, DWORD PTR _linesize$[ebp]
	push	edx
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _linebuffer$[ebp], eax
; Line 49
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+220], 0
	jne	SHORT $LN18@luni_send
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4240]
	cmp	DWORD PTR [ecx+12], 65001		; 0000fde9H
	jne	$LN19@luni_send
$LN18@luni_send:
; Line 51
	mov	edx, DWORD PTR _linebuffer$[ebp]
	mov	DWORD PTR _p$[ebp], edx
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN17@luni_send
$LN16@luni_send:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN17@luni_send:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _len$[ebp]
	jge	$LN15@luni_send
; Line 52
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _widebuf$[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	DWORD PTR _ch$85827[ebp], ecx
; Line 54
	cmp	DWORD PTR _ch$85827[ebp], 55296		; 0000d800H
	jb	SHORT $LN14@luni_send
	cmp	DWORD PTR _ch$85827[ebp], 57343		; 0000dfffH
	ja	SHORT $LN14@luni_send
; Line 56
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	cmp	edx, DWORD PTR _len$[ebp]
	jge	SHORT $LN13@luni_send
; Line 57
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _widebuf$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2+2]
	mov	DWORD PTR _ch2$85830[ebp], edx
; Line 58
	cmp	DWORD PTR _ch$85827[ebp], 55296		; 0000d800H
	jb	SHORT $LN12@luni_send
	cmp	DWORD PTR _ch$85827[ebp], 56319		; 0000dbffH
	ja	SHORT $LN12@luni_send
	cmp	DWORD PTR _ch2$85830[ebp], 56320	; 0000dc00H
	jb	SHORT $LN12@luni_send
	cmp	DWORD PTR _ch2$85830[ebp], 57343	; 0000dfffH
	ja	SHORT $LN12@luni_send
; Line 59
	mov	eax, DWORD PTR _ch$85827[ebp]
	and	eax, 1023				; 000003ffH
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _ch2$85830[ebp]
	and	ecx, 1023				; 000003ffH
	lea	edx, DWORD PTR [eax+ecx+65536]
	mov	DWORD PTR _ch$85827[ebp], edx
; Line 60
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN12@luni_send:
; Line 62
	jmp	SHORT $LN14@luni_send
$LN13@luni_send:
; Line 66
	mov	DWORD PTR _ch$85827[ebp], 46		; 0000002eH
$LN14@luni_send:
; Line 70
	cmp	DWORD PTR _ch$85827[ebp], 128		; 00000080H
	jae	SHORT $LN10@luni_send
; Line 71
	mov	ecx, DWORD PTR _p$[ebp]
	mov	dl, BYTE PTR _ch$85827[ebp]
	mov	BYTE PTR [ecx], dl
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
	jmp	$LN9@luni_send
$LN10@luni_send:
; Line 72
	cmp	DWORD PTR _ch$85827[ebp], 2048		; 00000800H
	jae	SHORT $LN8@luni_send
; Line 73
	mov	ecx, DWORD PTR _ch$85827[ebp]
	shr	ecx, 6
	or	ecx, 192				; 000000c0H
	mov	edx, DWORD PTR _p$[ebp]
	mov	BYTE PTR [edx], cl
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
; Line 74
	mov	ecx, DWORD PTR _ch$85827[ebp]
	and	ecx, 63					; 0000003fH
	or	ecx, 128				; 00000080H
	mov	edx, DWORD PTR _p$[ebp]
	mov	BYTE PTR [edx], cl
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
	jmp	$LN9@luni_send
$LN8@luni_send:
; Line 75
	cmp	DWORD PTR _ch$85827[ebp], 65536		; 00010000H
	jae	SHORT $LN6@luni_send
; Line 76
	mov	ecx, DWORD PTR _ch$85827[ebp]
	shr	ecx, 12					; 0000000cH
	or	ecx, 224				; 000000e0H
	mov	edx, DWORD PTR _p$[ebp]
	mov	BYTE PTR [edx], cl
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
; Line 77
	mov	ecx, DWORD PTR _ch$85827[ebp]
	shr	ecx, 6
	and	ecx, 63					; 0000003fH
	or	ecx, 128				; 00000080H
	mov	edx, DWORD PTR _p$[ebp]
	mov	BYTE PTR [edx], cl
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
; Line 78
	mov	ecx, DWORD PTR _ch$85827[ebp]
	and	ecx, 63					; 0000003fH
	or	ecx, 128				; 00000080H
	mov	edx, DWORD PTR _p$[ebp]
	mov	BYTE PTR [edx], cl
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
; Line 79
	jmp	SHORT $LN9@luni_send
$LN6@luni_send:
; Line 80
	mov	ecx, DWORD PTR _ch$85827[ebp]
	shr	ecx, 18					; 00000012H
	or	ecx, 240				; 000000f0H
	mov	edx, DWORD PTR _p$[ebp]
	mov	BYTE PTR [edx], cl
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
; Line 81
	mov	ecx, DWORD PTR _ch$85827[ebp]
	shr	ecx, 12					; 0000000cH
	and	ecx, 63					; 0000003fH
	or	ecx, 128				; 00000080H
	mov	edx, DWORD PTR _p$[ebp]
	mov	BYTE PTR [edx], cl
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
; Line 82
	mov	ecx, DWORD PTR _ch$85827[ebp]
	shr	ecx, 6
	and	ecx, 63					; 0000003fH
	or	ecx, 128				; 00000080H
	mov	edx, DWORD PTR _p$[ebp]
	mov	BYTE PTR [edx], cl
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
; Line 83
	mov	ecx, DWORD PTR _ch$85827[ebp]
	and	ecx, 63					; 0000003fH
	or	ecx, 128				; 00000080H
	mov	edx, DWORD PTR _p$[ebp]
	mov	BYTE PTR [edx], cl
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
$LN9@luni_send:
; Line 85
	jmp	$LN16@luni_send
$LN15@luni_send:
; Line 86
	jmp	SHORT $LN4@luni_send
$LN19@luni_send:
; Line 89
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4240]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _linesize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _linebuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _widebuf$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4240]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_wc_to_mb
	add	esp, 36					; 00000024H
	mov	DWORD PTR _rv$85850[ebp], eax
; Line 90
	cmp	DWORD PTR _rv$85850[ebp], 0
	jl	SHORT $LN3@luni_send
; Line 91
	mov	eax, DWORD PTR _linebuffer$[ebp]
	add	eax, DWORD PTR _rv$85850[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 92
	jmp	SHORT $LN4@luni_send
$LN3@luni_send:
; Line 93
	mov	ecx, DWORD PTR _linebuffer$[ebp]
	mov	DWORD PTR _p$[ebp], ecx
$LN4@luni_send:
; Line 95
	mov	edx, DWORD PTR _p$[ebp]
	cmp	edx, DWORD PTR _linebuffer$[ebp]
	jbe	SHORT $LN1@luni_send
; Line 96
	mov	eax, DWORD PTR _interactive$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	sub	ecx, DWORD PTR _linebuffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _linebuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _ldisc$[ebp]
	push	eax
	call	_ldisc_send
	add	esp, 16					; 00000010H
$LN1@luni_send:
; Line 98
	mov	ecx, DWORD PTR _linebuffer$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 99
	pop	edi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_luni_send ENDP
_TEXT	ENDS
END

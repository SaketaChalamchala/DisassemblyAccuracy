; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\Putty\config.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

_BSS	SEGMENT
$SG86731 DB	01H DUP (?)
$SG86783 DB	01H DUP (?)
$SG86927 DB	01H DUP (?)
$SG86928 DB	01H DUP (?)
$SG86929 DB	01H DUP (?)
$SG87046 DB	01H DUP (?)
$SG87047 DB	01H DUP (?)
$SG87114 DB	01H DUP (?)
$SG87156 DB	01H DUP (?)
$SG87197 DB	01H DUP (?)
$SG87226 DB	01H DUP (?)
$SG87227 DB	01H DUP (?)
$SG87228 DB	01H DUP (?)
$SG87229 DB	01H DUP (?)
$SG87667 DB	01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
?ciphers@?2??cipherlist_handler@@9@9 DD FLAT:$SG86528	; `cipherlist_handler'::`3'::ciphers
	DD	01H
	DD	FLAT:$SG86529
	DD	02H
	DD	FLAT:$SG86530
	DD	04H
	DD	FLAT:$SG86531
	DD	03H
	DD	FLAT:$SG86532
	DD	05H
	DD	FLAT:$SG86533
	DD	00H
?kexes@?2??kexlist_handler@@9@9 DD FLAT:$SG86597	; `kexlist_handler'::`3'::kexes
	DD	01H
	DD	FLAT:$SG86598
	DD	02H
	DD	FLAT:$SG86599
	DD	03H
	DD	FLAT:$SG86600
	DD	04H
	DD	FLAT:$SG86601
	DD	00H
_colours DD	FLAT:$SG86847
	DD	FLAT:$SG86848
	DD	FLAT:$SG86849
	DD	FLAT:$SG86850
	DD	FLAT:$SG86851
	DD	FLAT:$SG86852
	DD	FLAT:$SG86853
	DD	FLAT:$SG86854
	DD	FLAT:$SG86855
	DD	FLAT:$SG86856
	DD	FLAT:$SG86857
	DD	FLAT:$SG86858
	DD	FLAT:$SG86859
	DD	FLAT:$SG86860
	DD	FLAT:$SG86861
	DD	FLAT:$SG86862
	DD	FLAT:$SG86863
	DD	FLAT:$SG86864
	DD	FLAT:$SG86865
	DD	FLAT:$SG86866
	DD	FLAT:$SG86867
	DD	FLAT:$SG86868
?afs@?BE@??portfwd_handler@@9@9 DD FLAT:$SG87146	; `portfwd_handler'::`20'::afs
?dirs@?BE@??portfwd_handler@@9@9 DD FLAT:$SG87149	; `portfwd_handler'::`20'::dirs
CONST	ENDS
_DATA	SEGMENT
$SG86267 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f'
	DB	00H, 'i', 00H, 'g', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG86268 DB	'b', 00H, 'u', 00H, 't', 00H, 't', 00H, 'o', 00H, 'n', 00H
	DB	' ', 00H, '<', 00H, ' ', 00H, 'c', 00H, 't', 00H, 'r', 00H, 'l'
	DB	00H, '-', 00H, '>', 00H, 'r', 00H, 'a', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '.', 00H, 'n', 00H, 'b', 00H, 'u', 00H, 't', 00H, 't'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 00H, 00H
$SG86272 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f'
	DB	00H, 'i', 00H, 'g', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG86318 DB	'%d', 00H
	ORG $+1
$SG86273 DB	'b', 00H, 'u', 00H, 't', 00H, 't', 00H, 'o', 00H, 'n', 00H
	DB	' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&'
	DB	00H, '&', 00H, ' ', 00H, 'b', 00H, 'u', 00H, 't', 00H, 't', 00H
	DB	'o', 00H, 'n', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'c', 00H, 't'
	DB	00H, 'r', 00H, 'l', 00H, '-', 00H, '>', 00H, 'r', 00H, 'a', 00H
	DB	'd', 00H, 'i', 00H, 'o', 00H, '.', 00H, 'n', 00H, 'b', 00H, 'u'
	DB	00H, 't', 00H, 't', 00H, 'o', 00H, 'n', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG86322 DB	'%g', 00H
	ORG $+1
$SG86375 DB	'Serial line', 00H
$SG86377 DB	'Host Name (or IP address)', 00H
	ORG $+2
$SG86398 DB	'Speed', 00H
	ORG $+2
$SG86399 DB	'%d', 00H
	ORG $+1
$SG86401 DB	'Port', 00H
	ORG $+3
$SG86403 DB	'%d', 00H
	ORG $+1
$SG86436 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f'
	DB	00H, 'i', 00H, 'g', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG86437 DB	'b', 00H, 'u', 00H, 't', 00H, 't', 00H, 'o', 00H, 'n', 00H
	DB	' ', 00H, '<', 00H, ' ', 00H, 'c', 00H, 't', 00H, 'r', 00H, 'l'
	DB	00H, '-', 00H, '>', 00H, 'r', 00H, 'a', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '.', 00H, 'n', 00H, 'b', 00H, 'u', 00H, 't', 00H, 't'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 00H, 00H
$SG86444 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f'
	DB	00H, 'i', 00H, 'g', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG86450 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f'
	DB	00H, 'i', 00H, 'g', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG86445 DB	'b', 00H, 'u', 00H, 't', 00H, 't', 00H, 'o', 00H, 'n', 00H
	DB	' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&'
	DB	00H, '&', 00H, ' ', 00H, 'b', 00H, 'u', 00H, 't', 00H, 't', 00H
	DB	'o', 00H, 'n', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'c', 00H, 't'
	DB	00H, 'r', 00H, 'l', 00H, '-', 00H, '>', 00H, 'r', 00H, 'a', 00H
	DB	'd', 00H, 'i', 00H, 'o', 00H, '.', 00H, 'n', 00H, 'b', 00H, 'u'
	DB	00H, 't', 00H, 't', 00H, 'o', 00H, 'n', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG86451 DB	'o', 00H, 'b', 00H, 00H, 00H
	ORG $+2
$SG86453 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f'
	DB	00H, 'i', 00H, 'g', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG86454 DB	'n', 00H, 'b', 00H, 00H, 00H
	ORG $+2
$SG86479 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f'
	DB	00H, 'i', 00H, 'g', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG86500 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f'
	DB	00H, 'i', 00H, 'g', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG86480 DB	'b', 00H, 'u', 00H, 't', 00H, 't', 00H, 'o', 00H, 'n', 00H
	DB	' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&'
	DB	00H, '&', 00H, ' ', 00H, 'b', 00H, 'u', 00H, 't', 00H, 't', 00H
	DB	'o', 00H, 'n', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'c', 00H, 't'
	DB	00H, 'r', 00H, 'l', 00H, '-', 00H, '>', 00H, 'r', 00H, 'a', 00H
	DB	'd', 00H, 'i', 00H, 'o', 00H, '.', 00H, 'n', 00H, 'b', 00H, 'u'
	DB	00H, 't', 00H, 't', 00H, 'o', 00H, 'n', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG86501 DB	'b', 00H, 'u', 00H, 't', 00H, 't', 00H, 'o', 00H, 'n', 00H
	DB	' ', 00H, '<', 00H, ' ', 00H, 'c', 00H, 't', 00H, 'r', 00H, 'l'
	DB	00H, '-', 00H, '>', 00H, 'r', 00H, 'a', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '.', 00H, 'n', 00H, 'b', 00H, 'u', 00H, 't', 00H, 't'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 00H, 00H
$SG86505 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f'
	DB	00H, 'i', 00H, 'g', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG86529 DB	'Blowfish', 00H
	ORG $+3
$SG86506 DB	'b', 00H, 'u', 00H, 't', 00H, 't', 00H, 'o', 00H, 'n', 00H
	DB	' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&'
	DB	00H, '&', 00H, ' ', 00H, 'b', 00H, 'u', 00H, 't', 00H, 't', 00H
	DB	'o', 00H, 'n', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'c', 00H, 't'
	DB	00H, 'r', 00H, 'l', 00H, '-', 00H, '>', 00H, 'r', 00H, 'a', 00H
	DB	'd', 00H, 'i', 00H, 'o', 00H, '.', 00H, 'n', 00H, 'b', 00H, 'u'
	DB	00H, 't', 00H, 't', 00H, 'o', 00H, 'n', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG86528 DB	'3DES', 00H
	ORG $+3
$SG86530 DB	'DES', 00H
$SG86531 DB	'AES (SSH-2 only)', 00H
	ORG $+3
$SG86532 DB	'Arcfour (SSH-2 only)', 00H
	ORG $+3
$SG86533 DB	'-- warn below here --', 00H
	ORG $+2
$SG86570 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f'
	DB	00H, 'i', 00H, 'g', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG86571 DB	'i', 00H, 'd', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'i', 00H, 'd'
	DB	00H, ' ', 00H, '<', 00H, ' ', 00H, 'n', 00H, 'g', 00H, 's', 00H
	DB	's', 00H, 'l', 00H, 'i', 00H, 'b', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG86597 DB	'Diffie-Hellman group 1', 00H
	ORG $+1
$SG86598 DB	'Diffie-Hellman group 14', 00H
$SG86599 DB	'Diffie-Hellman group exchange', 00H
	ORG $+2
$SG86600 DB	'RSA-based key exchange', 00H
	ORG $+1
$SG86601 DB	'-- warn below here --', 00H
	ORG $+2
$SG86637 DB	'None (printing disabled)', 00H
	ORG $+3
$SG86642 DB	'None (printing disabled)', 00H
	ORG $+3
$SG86647 DB	'None (printing disabled)', 00H
	ORG $+3
$SG86685 DB	'Auto', 00H
	ORG $+3
$SG86686 DB	'Off', 00H
$SG86687 DB	'On', 00H
	ORG $+1
$SG86730 DB	'Default Settings', 00H
	ORG $+3
$SG86778 DB	'Default Settings', 00H
	ORG $+3
$SG86782 DB	'Default Settings', 00H
	ORG $+3
$SG86829 DB	'%d', 09H, '(0x%02X)', 09H, '%c', 09H, '%d', 00H
	ORG $+2
$SG86847 DB	'Default Foreground', 00H
	ORG $+1
$SG86848 DB	'Default Bold Foreground', 00H
$SG86849 DB	'Default Background', 00H
	ORG $+1
$SG86850 DB	'Default Bold Background', 00H
$SG86851 DB	'Cursor Text', 00H
$SG86852 DB	'Cursor Colour', 00H
	ORG $+2
$SG86853 DB	'ANSI Black', 00H
	ORG $+1
$SG86854 DB	'ANSI Black Bold', 00H
$SG86855 DB	'ANSI Red', 00H
	ORG $+3
$SG86856 DB	'ANSI Red Bold', 00H
	ORG $+2
$SG86857 DB	'ANSI Green', 00H
	ORG $+1
$SG86858 DB	'ANSI Green Bold', 00H
$SG86859 DB	'ANSI Yellow', 00H
$SG86860 DB	'ANSI Yellow Bold', 00H
	ORG $+3
$SG86861 DB	'ANSI Blue', 00H
	ORG $+2
$SG86862 DB	'ANSI Blue Bold', 00H
	ORG $+1
$SG86863 DB	'ANSI Magenta', 00H
	ORG $+3
$SG86864 DB	'ANSI Magenta Bold', 00H
	ORG $+2
$SG86865 DB	'ANSI Cyan', 00H
	ORG $+2
$SG86866 DB	'ANSI Cyan Bold', 00H
	ORG $+1
$SG86867 DB	'ANSI White', 00H
	ORG $+1
$SG86868 DB	'ANSI White Bold', 00H
$SG86932 DB	'%d', 00H
	ORG $+1
$SG86933 DB	'%d', 00H
	ORG $+1
$SG86934 DB	'%d', 00H
	ORG $+1
$SG86966 DB	'(auto)', 00H
	ORG $+1
$SG86967 DB	'%s', 09H, '%s', 00H
	ORG $+2
$SG86985 DB	'%c%s', 00H
	ORG $+3
$SG87035 DB	'%s', 09H, '%s', 00H
	ORG $+2
$SG87045 DB	09H, 00H
	ORG $+2
$SG87089 DB	'D', 00H
	ORG $+2
$SG87091 DB	'%s', 09H, 00H
$SG87094 DB	'%s', 09H, '%s', 00H
	ORG $+2
$SG87109 DB	'4', 00H
	ORG $+2
$SG87112 DB	'6', 00H
	ORG $+2
$SG87116 DB	'L', 00H
	ORG $+2
$SG87119 DB	'R', 00H
	ORG $+2
$SG87121 DB	'D', 00H
	ORG $+2
$SG87123 DB	'You need to specify a source port number', 00H
	ORG $+3
$SG87127 DB	'You need to specify a destination address', 0aH, 'in the'
	DB	' form "host.name:port"', 00H
	ORG $+1
$SG87129 DB	'L', 00H
	ORG $+2
$SG87130 DB	'D', 00H
	ORG $+2
$SG87133 DB	'Specified forwarding already exists', 00H
$SG87146 DB	'A46', 00H
$SG87149 DB	'LRD', 00H
$SG87155 DB	'D', 00H
	ORG $+2
$SG87190 DB	'You need to specify a host key or fingerprint', 00H
	ORG $+2
$SG87192 DB	'Host key is not in a valid format', 00H
	ORG $+2
$SG87195 DB	'Specified host key is already listed', 00H
	ORG $+3
$SG87232 DB	'Apply', 00H
	ORG $+2
$SG87233 DB	'Open', 00H
	ORG $+3
$SG87235 DB	'Cancel', 00H
	ORG $+1
$SG87236 DB	'Basic options for your %s session', 00H
	ORG $+2
$SG87237 DB	'Session', 00H
$SG87242 DB	'Specify the destination you want to connect to', 00H
	ORG $+1
$SG87243 DB	'hostport', 00H
	ORG $+3
$SG87244 DB	'Session', 00H
$SG87245 DB	'session.hostname:config-hostname', 00H
	ORG $+3
$SG87246 DB	'Host Name (or IP address)', 00H
	ORG $+2
$SG87247 DB	'session.hostname:config-hostname', 00H
	ORG $+3
$SG87248 DB	'Port', 00H
	ORG $+3
$SG87251 DB	'Rlogin', 00H
	ORG $+1
$SG87252 DB	'Telnet', 00H
	ORG $+1
$SG87253 DB	'Raw', 00H
$SG87254 DB	'session.hostname:config-hostname', 00H
	ORG $+3
$SG87255 DB	'Connection type:', 00H
	ORG $+3
$SG87258 DB	'SSH', 00H
$SG87259 DB	'Rlogin', 00H
	ORG $+1
$SG87260 DB	'Telnet', 00H
	ORG $+1
$SG87261 DB	'Raw', 00H
$SG87262 DB	'session.hostname:config-hostname', 00H
	ORG $+3
$SG87263 DB	'Connection type:', 00H
	ORG $+3
$SG87264 DB	'Save the current session settings', 00H
	ORG $+2
$SG87265 DB	'Load, save or delete a stored session', 00H
	ORG $+2
$SG87266 DB	'savedsessions', 00H
	ORG $+2
$SG87267 DB	'Session', 00H
$SG87269 DB	'session.saved:config-saving', 00H
$SG87270 DB	'Saved Sessions', 00H
	ORG $+1
$SG87272 DB	'session.saved:config-saving', 00H
$SG87274 DB	'session.saved:config-saving', 00H
$SG87275 DB	'Load', 00H
	ORG $+3
$SG87278 DB	'session.saved:config-saving', 00H
$SG87279 DB	'Save', 00H
	ORG $+3
$SG87281 DB	'session.saved:config-saving', 00H
$SG87282 DB	'Delete', 00H
	ORG $+1
$SG87286 DB	'otheropts', 00H
	ORG $+2
$SG87287 DB	'Session', 00H
$SG87289 DB	'Only on clean exit', 00H
	ORG $+1
$SG87290 DB	'Never', 00H
	ORG $+2
$SG87291 DB	'Always', 00H
	ORG $+1
$SG87292 DB	'session.coe:config-closeonexit', 00H
	ORG $+1
$SG87293 DB	'Close window on exit:', 00H
	ORG $+2
$SG87294 DB	'Options controlling session logging', 00H
$SG87295 DB	'Session/Logging', 00H
$SG87297 DB	'main', 00H
	ORG $+3
$SG87298 DB	'Session/Logging', 00H
$SG87304 DB	'SSH packets', 00H
$SG87305 DB	'SSH packets and raw data', 00H
	ORG $+3
$SG87310 DB	'All session output', 00H
	ORG $+1
$SG87311 DB	'Printable output', 00H
	ORG $+3
$SG87312 DB	'None', 00H
	ORG $+3
$SG87313 DB	'logging.main:config-logging', 00H
$SG87314 DB	'Session logging:', 00H
	ORG $+3
$SG87316 DB	'logging.filename:config-logfilename', 00H
$SG87317 DB	'Select session log file name', 00H
	ORG $+3
$SG87318 DB	'Log file name:', 00H
	ORG $+1
$SG87319 DB	'logging.filename:config-logfilename', 00H
$SG87320 DB	'(Log file name can contain &Y, &M, &D for date, &T for t'
	DB	'ime, and &H for host name)', 00H
	ORG $+1
$SG87322 DB	'Ask the user every time', 00H
$SG87323 DB	'Always append to the end of it', 00H
	ORG $+1
$SG87324 DB	'Always overwrite it', 00H
$SG87325 DB	'logging.exists:config-logfileexists', 00H
$SG87326 DB	'What to do if the log file already exists:', 00H
	ORG $+1
$SG87327 DB	'logging.flush:config-logflush', 00H
	ORG $+2
$SG87328 DB	'Flush log file frequently', 00H
	ORG $+2
$SG87332 DB	'Options specific to SSH packet logging', 00H
	ORG $+1
$SG87333 DB	'ssh', 00H
$SG87334 DB	'Session/Logging', 00H
$SG87335 DB	'logging.ssh.omitpassword:config-logssh', 00H
	ORG $+1
$SG87336 DB	'Omit known password fields', 00H
	ORG $+1
$SG87337 DB	'logging.ssh.omitdata:config-logssh', 00H
	ORG $+1
$SG87338 DB	'Omit session data', 00H
	ORG $+2
$SG87339 DB	'Options controlling the terminal emulation', 00H
	ORG $+1
$SG87340 DB	'Terminal', 00H
	ORG $+3
$SG87341 DB	'Set various terminal options', 00H
	ORG $+3
$SG87342 DB	'general', 00H
$SG87343 DB	'Terminal', 00H
	ORG $+3
$SG87344 DB	'terminal.autowrap:config-autowrap', 00H
	ORG $+2
$SG87345 DB	'Auto wrap mode initially on', 00H
$SG87346 DB	'terminal.decom:config-decom', 00H
$SG87347 DB	'DEC Origin Mode initially on', 00H
	ORG $+3
$SG87348 DB	'terminal.lfhascr:config-crlf', 00H
	ORG $+3
$SG87349 DB	'Implicit CR in every LF', 00H
$SG87350 DB	'terminal.crhaslf:config-lfcr', 00H
	ORG $+3
$SG87351 DB	'Implicit LF in every CR', 00H
$SG87352 DB	'terminal.bce:config-erase', 00H
	ORG $+2
$SG87353 DB	'Use background colour to erase screen', 00H
	ORG $+2
$SG87354 DB	'terminal.blink:config-blink', 00H
$SG87355 DB	'Enable blinking text', 00H
	ORG $+3
$SG87356 DB	'terminal.answerback:config-answerback', 00H
	ORG $+2
$SG87357 DB	'Answerback to ^E:', 00H
	ORG $+2
$SG87358 DB	'Line discipline options', 00H
$SG87359 DB	'ldisc', 00H
	ORG $+2
$SG87360 DB	'Terminal', 00H
	ORG $+3
$SG87362 DB	'Force off', 00H
	ORG $+2
$SG87363 DB	'Force on', 00H
	ORG $+3
$SG87364 DB	'Auto', 00H
	ORG $+3
$SG87365 DB	'terminal.localecho:config-localecho', 00H
$SG87366 DB	'Local echo:', 00H
$SG87368 DB	'Force off', 00H
	ORG $+2
$SG87369 DB	'Force on', 00H
	ORG $+3
$SG87370 DB	'Auto', 00H
	ORG $+3
$SG87371 DB	'terminal.localedit:config-localedit', 00H
$SG87372 DB	'Local line editing:', 00H
$SG87373 DB	'Remote-controlled printing', 00H
	ORG $+1
$SG87374 DB	'printing', 00H
	ORG $+3
$SG87375 DB	'Terminal', 00H
	ORG $+3
$SG87378 DB	'terminal.printing:config-printing', 00H
	ORG $+2
$SG87379 DB	'Printer to send ANSI printer output to:', 00H
$SG87380 DB	'Options controlling the effects of keys', 00H
$SG87381 DB	'Terminal/Keyboard', 00H
	ORG $+2
$SG87382 DB	'Change the sequences sent by:', 00H
	ORG $+2
$SG87383 DB	'mappings', 00H
	ORG $+3
$SG87384 DB	'Terminal/Keyboard', 00H
	ORG $+2
$SG87386 DB	'Control-? (127)', 00H
$SG87387 DB	'Control-H', 00H
	ORG $+2
$SG87388 DB	'keyboard.backspace:config-backspace', 00H
$SG87389 DB	'The Backspace key', 00H
	ORG $+2
$SG87391 DB	'rxvt', 00H
	ORG $+3
$SG87392 DB	'Standard', 00H
	ORG $+3
$SG87393 DB	'keyboard.homeend:config-homeend', 00H
$SG87394 DB	'The Home and End keys', 00H
	ORG $+2
$SG87396 DB	'SCO', 00H
$SG87397 DB	'VT100+', 00H
	ORG $+1
$SG87398 DB	'VT400', 00H
	ORG $+2
$SG87399 DB	'Xterm R6', 00H
	ORG $+3
$SG87400 DB	'Linux', 00H
	ORG $+2
$SG87401 DB	'ESC[n~', 00H
	ORG $+1
$SG87402 DB	'keyboard.funkeys:config-funkeys', 00H
$SG87403 DB	'The Function keys and keypad', 00H
	ORG $+3
$SG87404 DB	'Application keypad settings:', 00H
	ORG $+3
$SG87405 DB	'appkeypad', 00H
	ORG $+2
$SG87406 DB	'Terminal/Keyboard', 00H
	ORG $+2
$SG87408 DB	'Application', 00H
$SG87409 DB	'Normal', 00H
	ORG $+1
$SG87410 DB	'keyboard.appcursor:config-appcursor', 00H
$SG87411 DB	'Initial state of cursor keys:', 00H
	ORG $+2
$SG87414 DB	'NetHack', 00H
$SG87415 DB	'Application', 00H
$SG87416 DB	'Normal', 00H
	ORG $+1
$SG87417 DB	'keyboard.appkeypad:config-appkeypad', 00H
$SG87418 DB	'Initial state of numeric keypad:', 00H
	ORG $+3
$SG87419 DB	'Options controlling the terminal bell', 00H
	ORG $+2
$SG87420 DB	'Terminal/Bell', 00H
	ORG $+2
$SG87421 DB	'Set the style of bell', 00H
	ORG $+2
$SG87422 DB	'style', 00H
	ORG $+2
$SG87423 DB	'Terminal/Bell', 00H
	ORG $+2
$SG87425 DB	'Visual bell (flash window)', 00H
	ORG $+1
$SG87426 DB	'Make default system alert sound', 00H
$SG87427 DB	'None (bell disabled)', 00H
	ORG $+3
$SG87428 DB	'bell.style:config-bellstyle', 00H
$SG87429 DB	'Action to happen when a bell occurs:', 00H
	ORG $+3
$SG87430 DB	'Control the bell overload behaviour', 00H
$SG87431 DB	'overload', 00H
	ORG $+3
$SG87432 DB	'Terminal/Bell', 00H
	ORG $+2
$SG87433 DB	'bell.overload:config-bellovl', 00H
	ORG $+3
$SG87434 DB	'Bell is temporarily disabled when over-used', 00H
$SG87435 DB	'bell.overload:config-bellovl', 00H
	ORG $+3
$SG87436 DB	'Over-use means this many bells...', 00H
	ORG $+2
$SG87437 DB	'bell.overload:config-bellovl', 00H
	ORG $+3
$SG87438 DB	'... in this many seconds', 00H
	ORG $+3
$SG87439 DB	'bell.overload:config-bellovl', 00H
	ORG $+3
$SG87440 DB	'The bell is re-enabled after a few seconds of silence.', 00H
	ORG $+1
$SG87441 DB	'bell.overload:config-bellovl', 00H
	ORG $+3
$SG87442 DB	'Seconds of silence required', 00H
$SG87443 DB	'Enabling and disabling advanced terminal features', 00H
	ORG $+2
$SG87444 DB	'Terminal/Features', 00H
	ORG $+2
$SG87446 DB	'main', 00H
	ORG $+3
$SG87447 DB	'Terminal/Features', 00H
	ORG $+2
$SG87448 DB	'features.application:config-features-application', 00H
	ORG $+3
$SG87449 DB	'Disable application cursor keys mode', 00H
	ORG $+3
$SG87450 DB	'features.application:config-features-application', 00H
	ORG $+3
$SG87451 DB	'Disable application keypad mode', 00H
$SG87452 DB	'features.mouse:config-features-mouse', 00H
	ORG $+3
$SG87453 DB	'Disable xterm-style mouse reporting', 00H
$SG87454 DB	'features.resize:config-features-resize', 00H
	ORG $+1
$SG87455 DB	'Disable remote-controlled terminal resizing', 00H
$SG87456 DB	'features.altscreen:config-features-altscreen', 00H
	ORG $+3
$SG87457 DB	'Disable switching to alternate terminal screen', 00H
	ORG $+1
$SG87458 DB	'features.retitle:config-features-retitle', 00H
	ORG $+3
$SG87459 DB	'Disable remote-controlled window title changing', 00H
$SG87461 DB	'Window title', 00H
	ORG $+3
$SG87462 DB	'Empty string', 00H
	ORG $+3
$SG87463 DB	'None', 00H
	ORG $+3
$SG87464 DB	'features.qtitle:config-features-qtitle', 00H
	ORG $+1
$SG87465 DB	'Response to remote title query (SECURITY):', 00H
	ORG $+1
$SG87466 DB	'features.dbackspace:config-features-dbackspace', 00H
	ORG $+1
$SG87467 DB	'Disable destructive backspace on server sending ^?', 00H
	ORG $+1
$SG87468 DB	'features.charset:config-features-charset', 00H
	ORG $+3
$SG87469 DB	'Disable remote-controlled character set configuration', 00H
	ORG $+2
$SG87470 DB	'features.arabicshaping:config-features-shaping', 00H
	ORG $+1
$SG87471 DB	'Disable Arabic text shaping', 00H
$SG87472 DB	'features.bidi:config-features-bidi', 00H
	ORG $+1
$SG87473 DB	'Disable bidirectional text display', 00H
	ORG $+1
$SG87474 DB	'Options controlling %s''s window', 00H
$SG87475 DB	'Window', 00H
	ORG $+1
$SG87476 DB	'Set the size of the window', 00H
	ORG $+1
$SG87477 DB	'size', 00H
	ORG $+3
$SG87478 DB	'Window', 00H
	ORG $+1
$SG87479 DB	'window.size:config-winsize', 00H
	ORG $+1
$SG87480 DB	'Columns', 00H
$SG87481 DB	'window.size:config-winsize', 00H
	ORG $+1
$SG87482 DB	'Rows', 00H
	ORG $+3
$SG87483 DB	'Control the scrollback in the window', 00H
	ORG $+3
$SG87484 DB	'scrollback', 00H
	ORG $+1
$SG87485 DB	'Window', 00H
	ORG $+1
$SG87486 DB	'window.scrollback:config-scrollback', 00H
$SG87487 DB	'Lines of scrollback', 00H
$SG87488 DB	'window.scrollback:config-scrollback', 00H
$SG87489 DB	'Display scrollbar', 00H
	ORG $+2
$SG87490 DB	'window.scrollback:config-scrollback', 00H
$SG87491 DB	'Reset scrollback on keypress', 00H
	ORG $+3
$SG87492 DB	'window.scrollback:config-scrollback', 00H
$SG87493 DB	'Reset scrollback on display activity', 00H
	ORG $+3
$SG87494 DB	'window.erased:config-erasetoscrollback', 00H
	ORG $+1
$SG87495 DB	'Push erased text into scrollback', 00H
	ORG $+3
$SG87496 DB	'Configure the appearance of %s''s window', 00H
$SG87497 DB	'Window/Appearance', 00H
	ORG $+2
$SG87498 DB	'Adjust the use of the cursor', 00H
	ORG $+3
$SG87499 DB	'cursor', 00H
	ORG $+1
$SG87500 DB	'Window/Appearance', 00H
	ORG $+2
$SG87502 DB	'Vertical line', 00H
	ORG $+2
$SG87503 DB	'Underline', 00H
	ORG $+2
$SG87504 DB	'Block', 00H
	ORG $+2
$SG87505 DB	'appearance.cursor:config-cursor', 00H
$SG87506 DB	'Cursor appearance:', 00H
	ORG $+1
$SG87507 DB	'appearance.cursor:config-cursor', 00H
$SG87508 DB	'Cursor blinks', 00H
	ORG $+2
$SG87509 DB	'Font settings', 00H
	ORG $+2
$SG87510 DB	'font', 00H
	ORG $+3
$SG87511 DB	'Window/Appearance', 00H
	ORG $+2
$SG87512 DB	'appearance.font:config-font', 00H
$SG87513 DB	'Font used in the terminal window', 00H
	ORG $+3
$SG87514 DB	'Adjust the use of the mouse pointer', 00H
$SG87515 DB	'mouse', 00H
	ORG $+2
$SG87516 DB	'Window/Appearance', 00H
	ORG $+2
$SG87517 DB	'appearance.hidemouse:config-mouseptr', 00H
	ORG $+3
$SG87518 DB	'Hide mouse pointer when typing in window', 00H
	ORG $+3
$SG87519 DB	'Adjust the window border', 00H
	ORG $+3
$SG87520 DB	'border', 00H
	ORG $+1
$SG87521 DB	'Window/Appearance', 00H
	ORG $+2
$SG87522 DB	'appearance.border:config-winborder', 00H
	ORG $+1
$SG87523 DB	'Gap between text and window edge:', 00H
	ORG $+2
$SG87524 DB	'Configure the behaviour of %s''s window', 00H
	ORG $+1
$SG87525 DB	'Window/Behaviour', 00H
	ORG $+3
$SG87526 DB	'Adjust the behaviour of the window title', 00H
	ORG $+3
$SG87527 DB	'title', 00H
	ORG $+2
$SG87528 DB	'Window/Behaviour', 00H
	ORG $+3
$SG87529 DB	'appearance.title:config-title', 00H
	ORG $+2
$SG87530 DB	'Window title:', 00H
	ORG $+2
$SG87531 DB	'appearance.title:config-title', 00H
	ORG $+2
$SG87532 DB	'Separate window and icon titles', 00H
$SG87534 DB	'main', 00H
	ORG $+3
$SG87535 DB	'Window/Behaviour', 00H
	ORG $+3
$SG87536 DB	'behaviour.closewarn:config-warnonclose', 00H
	ORG $+1
$SG87537 DB	'Warn before closing window', 00H
	ORG $+1
$SG87538 DB	'Options controlling character set translation', 00H
	ORG $+2
$SG87539 DB	'Window/Translation', 00H
	ORG $+1
$SG87540 DB	'Character set translation', 00H
	ORG $+2
$SG87541 DB	'trans', 00H
	ORG $+2
$SG87542 DB	'Window/Translation', 00H
	ORG $+1
$SG87545 DB	'translation.codepage:config-charset', 00H
$SG87546 DB	'Remote character set:', 00H
	ORG $+2
$SG87548 DB	'tweaks', 00H
	ORG $+1
$SG87549 DB	'Window/Translation', 00H
	ORG $+1
$SG87550 DB	'translation.cjkambigwide:config-cjk-ambig-wide', 00H
	ORG $+1
$SG87551 DB	'Treat CJK ambiguous characters as wide', 00H
	ORG $+1
$SG87552 DB	'Adjust how %s handles line drawing characters', 00H
	ORG $+2
$SG87553 DB	'linedraw', 00H
	ORG $+3
$SG87554 DB	'Window/Translation', 00H
	ORG $+1
$SG87556 DB	'Poor man''s line drawing (+, - and |)', 00H
	ORG $+3
$SG87557 DB	'Use Unicode line drawing code points', 00H
	ORG $+3
$SG87558 DB	'translation.linedraw:config-linedraw', 00H
	ORG $+3
$SG87559 DB	'Handling of line drawing characters:', 00H
	ORG $+3
$SG87560 DB	'selection.linedraw:config-linedrawpaste', 00H
$SG87561 DB	'Copy and paste line drawing characters as lqqqk', 00H
$SG87562 DB	'Options controlling copy and paste', 00H
	ORG $+1
$SG87563 DB	'Window/Selection', 00H
	ORG $+3
$SG87564 DB	'Control use of mouse', 00H
	ORG $+3
$SG87565 DB	'mouse', 00H
	ORG $+2
$SG87566 DB	'Window/Selection', 00H
	ORG $+3
$SG87567 DB	'selection.shiftdrag:config-mouseshift', 00H
	ORG $+2
$SG87568 DB	'Shift overrides application''s use of mouse', 00H
	ORG $+1
$SG87570 DB	'Rectangular block', 00H
	ORG $+2
$SG87571 DB	'Normal', 00H
	ORG $+1
$SG87572 DB	'selection.rect:config-rectselect', 00H
	ORG $+3
$SG87573 DB	'Default selection mode (Alt+drag does the other one):', 00H
	ORG $+2
$SG87574 DB	'Control the select-one-word-at-a-time mode', 00H
	ORG $+1
$SG87575 DB	'charclass', 00H
	ORG $+2
$SG87576 DB	'Window/Selection', 00H
	ORG $+3
$SG87579 DB	'selection.charclasses:config-charclasses', 00H
	ORG $+3
$SG87580 DB	'Character classes:', 00H
	ORG $+1
$SG87584 DB	'selection.charclasses:config-charclasses', 00H
	ORG $+3
$SG87585 DB	'Set to class', 00H
	ORG $+3
$SG87586 DB	'selection.charclasses:config-charclasses', 00H
	ORG $+3
$SG87587 DB	'Set', 00H
$SG87588 DB	'Options controlling use of colours', 00H
	ORG $+1
$SG87589 DB	'Window/Colours', 00H
	ORG $+1
$SG87590 DB	'General options for colour usage', 00H
	ORG $+3
$SG87591 DB	'general', 00H
$SG87592 DB	'Window/Colours', 00H
	ORG $+1
$SG87593 DB	'colours.ansi:config-ansicolour', 00H
	ORG $+1
$SG87594 DB	'Allow terminal to specify ANSI colours', 00H
	ORG $+1
$SG87595 DB	'colours.xterm256:config-xtermcolour', 00H
$SG87596 DB	'Allow terminal to use xterm 256-colour mode', 00H
$SG87598 DB	'Both', 00H
	ORG $+3
$SG87599 DB	'The colour', 00H
	ORG $+1
$SG87600 DB	'The font', 00H
	ORG $+3
$SG87601 DB	'colours.bold:config-boldcolour', 00H
	ORG $+1
$SG87602 DB	'Indicate bolded text by changing:', 00H
	ORG $+2
$SG87603 DB	'Adjust the precise colours %s displays', 00H
	ORG $+1
$SG87604 DB	'adjust', 00H
	ORG $+1
$SG87605 DB	'Window/Colours', 00H
	ORG $+1
$SG87606 DB	'colours.config:config-colourcfg', 00H
$SG87611 DB	'Select a colour to adjust:', 00H
	ORG $+1
$SG87607 DB	'Select a colour from the list, and then click the Modify'
	DB	' button to change its appearance.', 00H
	ORG $+2
$SG87610 DB	'colours.config:config-colourcfg', 00H
$SG87612 DB	'colours.config:config-colourcfg', 00H
$SG87613 DB	'RGB value:', 00H
	ORG $+1
$SG87615 DB	'colours.config:config-colourcfg', 00H
$SG87616 DB	'Red', 00H
$SG87618 DB	'colours.config:config-colourcfg', 00H
$SG87619 DB	'Green', 00H
	ORG $+2
$SG87621 DB	'colours.config:config-colourcfg', 00H
$SG87622 DB	'Blue', 00H
	ORG $+3
$SG87623 DB	'colours.config:config-colourcfg', 00H
$SG87624 DB	'Modify', 00H
	ORG $+1
$SG87626 DB	'Options controlling the connection', 00H
	ORG $+1
$SG87627 DB	'Connection', 00H
	ORG $+1
$SG87628 DB	'Sending of null packets to keep session active', 00H
	ORG $+1
$SG87629 DB	'keepalive', 00H
	ORG $+2
$SG87630 DB	'Connection', 00H
	ORG $+1
$SG87631 DB	'connection.keepalive:config-keepalive', 00H
	ORG $+2
$SG87632 DB	'Seconds between keepalives (0 to turn off)', 00H
	ORG $+1
$SG87634 DB	'Low-level TCP connection options', 00H
	ORG $+3
$SG87635 DB	'tcp', 00H
$SG87636 DB	'Connection', 00H
	ORG $+1
$SG87637 DB	'connection.nodelay:config-nodelay', 00H
	ORG $+2
$SG87638 DB	'Disable Nagle''s algorithm (TCP_NODELAY option)', 00H
	ORG $+1
$SG87639 DB	'connection.tcpkeepalive:config-tcp-keepalives', 00H
	ORG $+2
$SG87640 DB	'Enable TCP keepalives (SO_KEEPALIVE option)', 00H
$SG87641 DB	'Internet protocol version', 00H
	ORG $+2
$SG87642 DB	'ipversion', 00H
	ORG $+2
$SG87643 DB	'Connection', 00H
	ORG $+1
$SG87646 DB	'IPv6', 00H
	ORG $+3
$SG87647 DB	'IPv4', 00H
	ORG $+3
$SG87648 DB	'Auto', 00H
	ORG $+3
$SG87649 DB	'connection.ipversion:config-address-family', 00H
	ORG $+1
$SG87651 DB	'Logical name of remote host (e.g. for SSH key lookup):', 00H
	ORG $+1
$SG87652 DB	'Logical name of remote host:', 00H
	ORG $+3
$SG87653 DB	'Logical name of remote host', 00H
$SG87654 DB	'identity', 00H
	ORG $+3
$SG87655 DB	'Connection', 00H
	ORG $+1
$SG87656 DB	'connection.loghost:config-loghost', 00H
	ORG $+2
$SG87658 DB	'Data to send to the server', 00H
	ORG $+1
$SG87659 DB	'Connection/Data', 00H
$SG87660 DB	'Login details', 00H
	ORG $+2
$SG87661 DB	'login', 00H
	ORG $+2
$SG87662 DB	'Connection/Data', 00H
$SG87663 DB	'connection.username:config-username', 00H
$SG87664 DB	'Auto-login username', 00H
$SG87668 DB	'Use system username (%s)', 00H
	ORG $+3
$SG87670 DB	'Prompt', 00H
	ORG $+1
$SG87671 DB	'connection.usernamefromenv:config-username-from-env', 00H
$SG87672 DB	'When username is not specified:', 00H
$SG87673 DB	'Terminal details', 00H
	ORG $+3
$SG87674 DB	'term', 00H
	ORG $+3
$SG87675 DB	'Connection/Data', 00H
$SG87676 DB	'connection.termtype:config-termtype', 00H
$SG87677 DB	'Terminal-type string', 00H
	ORG $+3
$SG87678 DB	'connection.termspeed:config-termspeed', 00H
	ORG $+2
$SG87679 DB	'Terminal speeds', 00H
$SG87680 DB	'Environment variables', 00H
	ORG $+2
$SG87681 DB	'env', 00H
$SG87682 DB	'Connection/Data', 00H
$SG87686 DB	'telnet.environ:config-environ', 00H
	ORG $+2
$SG87687 DB	'Variable', 00H
	ORG $+3
$SG87689 DB	'telnet.environ:config-environ', 00H
	ORG $+2
$SG87690 DB	'Value', 00H
	ORG $+2
$SG87691 DB	'telnet.environ:config-environ', 00H
	ORG $+2
$SG87692 DB	'Add', 00H
$SG87693 DB	'telnet.environ:config-environ', 00H
	ORG $+2
$SG87694 DB	'Remove', 00H
	ORG $+1
$SG87696 DB	'telnet.environ:config-environ', 00H
	ORG $+2
$SG87700 DB	'Options controlling proxy usage', 00H
$SG87701 DB	'Connection/Proxy', 00H
	ORG $+3
$SG87703 DB	'basics', 00H
	ORG $+1
$SG87704 DB	'Connection/Proxy', 00H
	ORG $+3
$SG87706 DB	'Telnet', 00H
	ORG $+1
$SG87707 DB	'HTTP', 00H
	ORG $+3
$SG87708 DB	'SOCKS 5', 00H
$SG87709 DB	'SOCKS 4', 00H
$SG87710 DB	'None', 00H
	ORG $+3
$SG87711 DB	'proxy.type:config-proxy-type', 00H
	ORG $+3
$SG87712 DB	'Proxy type:', 00H
$SG87713 DB	'proxy.main:config-proxy', 00H
$SG87714 DB	'Proxy hostname', 00H
	ORG $+1
$SG87715 DB	'proxy.main:config-proxy', 00H
$SG87716 DB	'Port', 00H
	ORG $+3
$SG87717 DB	'proxy.exclude:config-proxy-exclude', 00H
	ORG $+1
$SG87718 DB	'Exclude Hosts/IPs', 00H
	ORG $+2
$SG87719 DB	'proxy.exclude:config-proxy-exclude', 00H
	ORG $+1
$SG87720 DB	'Consider proxying local host connections', 00H
	ORG $+3
$SG87722 DB	'Yes', 00H
$SG87723 DB	'Auto', 00H
	ORG $+3
$SG87724 DB	'No', 00H
	ORG $+1
$SG87725 DB	'proxy.dns:config-proxy-dns', 00H
	ORG $+1
$SG87726 DB	'Do DNS name lookup at proxy end:', 00H
	ORG $+3
$SG87727 DB	'proxy.auth:config-proxy-auth', 00H
	ORG $+3
$SG87728 DB	'Username', 00H
	ORG $+3
$SG87729 DB	'proxy.auth:config-proxy-auth', 00H
	ORG $+3
$SG87730 DB	'Password', 00H
	ORG $+3
$SG87731 DB	'proxy.command:config-proxy-command', 00H
	ORG $+1
$SG87732 DB	'Telnet command', 00H
	ORG $+1
$SG87735 DB	'Options controlling Telnet connections', 00H
	ORG $+1
$SG87736 DB	'Connection/Telnet', 00H
	ORG $+2
$SG87737 DB	'Telnet protocol adjustments', 00H
$SG87738 DB	'protocol', 00H
	ORG $+3
$SG87739 DB	'Connection/Telnet', 00H
	ORG $+2
$SG87742 DB	'RFC 1408 (unusual)', 00H
	ORG $+1
$SG87743 DB	'BSD (commonplace)', 00H
	ORG $+2
$SG87744 DB	'telnet.oldenviron:config-oldenviron', 00H
$SG87745 DB	'Handling of OLD_ENVIRON ambiguity:', 00H
	ORG $+1
$SG87747 DB	'Active', 00H
	ORG $+1
$SG87748 DB	'Passive', 00H
$SG87749 DB	'telnet.passive:config-ptelnet', 00H
	ORG $+2
$SG87750 DB	'Telnet negotiation mode:', 00H
	ORG $+3
$SG87751 DB	'telnet.specialkeys:config-telnetkey', 00H
$SG87752 DB	'Keyboard sends Telnet special commands', 00H
	ORG $+1
$SG87753 DB	'telnet.newline:config-telnetnl', 00H
	ORG $+1
$SG87754 DB	'Return key sends Telnet New Line instead of ^M', 00H
	ORG $+1
$SG87756 DB	'Options controlling Rlogin connections', 00H
	ORG $+1
$SG87757 DB	'Connection/Rlogin', 00H
	ORG $+2
$SG87758 DB	'Data to send to the server', 00H
	ORG $+1
$SG87759 DB	'data', 00H
	ORG $+3
$SG87760 DB	'Connection/Rlogin', 00H
	ORG $+2
$SG87761 DB	'rlogin.localuser:config-rlogin-localuser', 00H
	ORG $+3
$SG87762 DB	'Local username:', 00H
$SG87765 DB	'Options controlling SSH connections', 00H
$SG87766 DB	'Connection/SSH', 00H
	ORG $+1
$SG87770 DB	'disclaimer', 00H
	ORG $+1
$SG87771 DB	'Connection/SSH', 00H
	ORG $+1
$SG87775 DB	'Data to send to the server', 00H
	ORG $+1
$SG87773 DB	'Nothing on this panel may be reconfigured in mid-session'
	DB	'; it is only here so that sub-panels of it can exist without '
	DB	'looking strange.', 00H
	ORG $+2
$SG87776 DB	'data', 00H
	ORG $+3
$SG87777 DB	'Connection/SSH', 00H
	ORG $+1
$SG87778 DB	'ssh.command:config-command', 00H
	ORG $+1
$SG87779 DB	'Remote command:', 00H
$SG87780 DB	'Protocol options', 00H
	ORG $+3
$SG87781 DB	'protocol', 00H
	ORG $+3
$SG87782 DB	'Connection/SSH', 00H
	ORG $+1
$SG87783 DB	'ssh.noshell:config-ssh-noshell', 00H
	ORG $+1
$SG87784 DB	'Don''t start a shell or command at all', 00H
	ORG $+2
$SG87787 DB	'Protocol options', 00H
	ORG $+3
$SG87788 DB	'protocol', 00H
	ORG $+3
$SG87789 DB	'Connection/SSH', 00H
	ORG $+1
$SG87790 DB	'ssh.compress:config-ssh-comp', 00H
	ORG $+3
$SG87791 DB	'Enable compression', 00H
	ORG $+1
$SG87793 DB	'Sharing an SSH connection between PuTTY tools', 00H
	ORG $+2
$SG87794 DB	'sharing', 00H
$SG87795 DB	'Connection/SSH', 00H
	ORG $+1
$SG87796 DB	'ssh.sharing:config-ssh-sharing', 00H
	ORG $+1
$SG87797 DB	'Share SSH connections if possible', 00H
	ORG $+2
$SG87798 DB	'ssh.sharing:config-ssh-sharing', 00H
	ORG $+1
$SG87799 DB	'Permitted roles in a shared connection:', 00H
$SG87800 DB	'ssh.sharing:config-ssh-sharing', 00H
	ORG $+1
$SG87801 DB	'Upstream (connecting to the real server)', 00H
	ORG $+3
$SG87802 DB	'ssh.sharing:config-ssh-sharing', 00H
	ORG $+1
$SG87803 DB	'Downstream (connecting to the upstream PuTTY)', 00H
	ORG $+2
$SG87805 DB	'Protocol options', 00H
	ORG $+3
$SG87806 DB	'protocol', 00H
	ORG $+3
$SG87807 DB	'Connection/SSH', 00H
	ORG $+1
$SG87809 DB	'2 only', 00H
	ORG $+1
$SG87810 DB	'2', 00H
	ORG $+2
$SG87811 DB	'1', 00H
	ORG $+2
$SG87812 DB	'1 only', 00H
	ORG $+1
$SG87813 DB	'ssh.protocol:config-ssh-prot', 00H
	ORG $+3
$SG87814 DB	'Preferred SSH protocol version:', 00H
$SG87816 DB	'Options controlling SSH key exchange', 00H
	ORG $+3
$SG87817 DB	'Connection/SSH/Kex', 00H
	ORG $+1
$SG87818 DB	'Key exchange algorithm options', 00H
	ORG $+1
$SG87819 DB	'main', 00H
	ORG $+3
$SG87820 DB	'Connection/SSH/Kex', 00H
	ORG $+1
$SG87822 DB	'ssh.kex.order:config-ssh-kex-order', 00H
	ORG $+1
$SG87823 DB	'Algorithm selection policy:', 00H
$SG87824 DB	'Options controlling key re-exchange', 00H
$SG87825 DB	'repeat', 00H
	ORG $+1
$SG87826 DB	'Connection/SSH/Kex', 00H
	ORG $+1
$SG87827 DB	'ssh.kex.repeat:config-ssh-kex-rekey', 00H
$SG87828 DB	'Max minutes before rekey (0 for no limit)', 00H
	ORG $+2
$SG87829 DB	'ssh.kex.repeat:config-ssh-kex-rekey', 00H
$SG87830 DB	'Max data before rekey (0 for no limit)', 00H
	ORG $+1
$SG87831 DB	'ssh.kex.repeat:config-ssh-kex-rekey', 00H
$SG87832 DB	'(Use 1M for 1 megabyte, 1G for 1 gigabyte etc)', 00H
	ORG $+1
$SG87834 DB	'Manually configure host keys for this connection', 00H
	ORG $+3
$SG87835 DB	'hostkeys', 00H
	ORG $+3
$SG87836 DB	'Connection/SSH/Kex', 00H
	ORG $+1
$SG87837 DB	'ssh.kex.manualhostkeys:config-ssh-kex-manual-hostkeys', 00H
	ORG $+2
$SG87838 DB	'Host keys or fingerprints to accept:', 00H
	ORG $+3
$SG87841 DB	'ssh.kex.manualhostkeys:config-ssh-kex-manual-hostkeys', 00H
	ORG $+2
$SG87842 DB	'Remove', 00H
	ORG $+1
$SG87844 DB	'ssh.kex.manualhostkeys:config-ssh-kex-manual-hostkeys', 00H
	ORG $+2
$SG87846 DB	'ssh.kex.manualhostkeys:config-ssh-kex-manual-hostkeys', 00H
	ORG $+2
$SG87847 DB	'Key', 00H
$SG87848 DB	'ssh.kex.manualhostkeys:config-ssh-kex-manual-hostkeys', 00H
	ORG $+2
$SG87849 DB	'Add key', 00H
$SG87852 DB	'Options controlling SSH encryption', 00H
	ORG $+1
$SG87853 DB	'Connection/SSH/Cipher', 00H
	ORG $+2
$SG87854 DB	'Encryption options', 00H
	ORG $+1
$SG87855 DB	'encryption', 00H
	ORG $+1
$SG87856 DB	'Connection/SSH/Cipher', 00H
	ORG $+2
$SG87858 DB	'ssh.ciphers:config-ssh-encryption', 00H
	ORG $+2
$SG87859 DB	'Encryption cipher selection policy:', 00H
$SG87860 DB	'ssh.ciphers:config-ssh-encryption', 00H
	ORG $+2
$SG87861 DB	'Enable legacy use of single-DES in SSH-2', 00H
	ORG $+3
$SG87863 DB	'Options controlling SSH authentication', 00H
	ORG $+1
$SG87864 DB	'Connection/SSH/Auth', 00H
$SG87866 DB	'main', 00H
	ORG $+3
$SG87867 DB	'Connection/SSH/Auth', 00H
$SG87868 DB	'ssh.auth.bypass:config-ssh-noauth', 00H
	ORG $+2
$SG87869 DB	'Bypass authentication entirely (SSH-2 only)', 00H
$SG87870 DB	'ssh.auth.banner:config-ssh-banner', 00H
	ORG $+2
$SG87871 DB	'Display pre-authentication banner (SSH-2 only)', 00H
	ORG $+1
$SG87872 DB	'Authentication methods', 00H
	ORG $+1
$SG87873 DB	'methods', 00H
$SG87874 DB	'Connection/SSH/Auth', 00H
$SG87875 DB	'ssh.auth.pageant:config-ssh-tryagent', 00H
	ORG $+3
$SG87876 DB	'Attempt authentication using Pageant', 00H
	ORG $+3
$SG87877 DB	'ssh.auth.tis:config-ssh-tis', 00H
$SG87878 DB	'Attempt TIS or CryptoCard auth (SSH-1)', 00H
	ORG $+1
$SG87879 DB	'ssh.auth.ki:config-ssh-ki', 00H
	ORG $+2
$SG87880 DB	'Attempt "keyboard-interactive" auth (SSH-2)', 00H
$SG87881 DB	'Authentication parameters', 00H
	ORG $+2
$SG87882 DB	'params', 00H
	ORG $+1
$SG87883 DB	'Connection/SSH/Auth', 00H
$SG87884 DB	'ssh.auth.agentfwd:config-ssh-agentfwd', 00H
	ORG $+2
$SG87885 DB	'Allow agent forwarding', 00H
	ORG $+1
$SG87886 DB	'ssh.auth.changeuser:config-ssh-changeuser', 00H
	ORG $+2
$SG87887 DB	'Allow attempted changes of username in SSH-2', 00H
	ORG $+3
$SG87888 DB	'ssh.auth.privkey:config-ssh-privkey', 00H
$SG87889 DB	'Select private key file', 00H
$SG87890 DB	'PuTTY Private Key Files (*.ppk)', 00H, '*.ppk', 00H, 'Al'
	DB	'l Files (*.*)', 00H, '*', 00H, 00H, 00H, 00H
	ORG $+1
$SG87891 DB	'Private key file for authentication:', 00H
	ORG $+3
$SG87892 DB	'Options controlling GSSAPI authentication', 00H
	ORG $+2
$SG87893 DB	'Connection/SSH/Auth/GSSAPI', 00H
	ORG $+1
$SG87895 DB	'gssapi', 00H
	ORG $+1
$SG87896 DB	'Connection/SSH/Auth/GSSAPI', 00H
	ORG $+1
$SG87897 DB	'ssh.auth.gssapi:config-ssh-auth-gssapi', 00H
	ORG $+1
$SG87898 DB	'Attempt GSSAPI authentication (SSH-2 only)', 00H
	ORG $+1
$SG87899 DB	'ssh.auth.gssapi.delegation:config-ssh-auth-gssapi-delega'
	DB	'tion', 00H
	ORG $+3
$SG87900 DB	'Allow GSSAPI credential delegation', 00H
	ORG $+1
$SG87903 DB	'ssh.auth.gssapi.libraries:config-ssh-auth-gssapi-librari'
	DB	'es', 00H
	ORG $+1
$SG87904 DB	'Preference order for GSSAPI libraries:', 00H
	ORG $+1
$SG87905 DB	'ssh.auth.gssapi.libraries:config-ssh-auth-gssapi-librari'
	DB	'es', 00H
	ORG $+1
$SG87906 DB	'Select library file', 00H
$SG87907 DB	'Dynamic Library Files (*.dll)', 00H, '*.dll', 00H, 'All '
	DB	'Files (*.*)', 00H, '*', 00H, 00H, 00H, 00H
	ORG $+3
$SG87908 DB	'User-supplied GSSAPI library path:', 00H
	ORG $+1
$SG87910 DB	'Remote terminal settings', 00H
	ORG $+3
$SG87911 DB	'Connection/SSH/TTY', 00H
	ORG $+1
$SG87913 DB	'sshtty', 00H
	ORG $+1
$SG87914 DB	'Connection/SSH/TTY', 00H
	ORG $+1
$SG87915 DB	'ssh.nopty:config-ssh-pty', 00H
	ORG $+3
$SG87916 DB	'Don''t allocate a pseudo-terminal', 00H
	ORG $+3
$SG87917 DB	'Terminal modes', 00H
	ORG $+1
$SG87918 DB	'ttymodes', 00H
	ORG $+3
$SG87919 DB	'Connection/SSH/TTY', 00H
	ORG $+1
$SG87922 DB	'ssh.ttymodes:config-ttymodes', 00H
	ORG $+3
$SG87923 DB	'Terminal modes to send:', 00H
$SG87924 DB	'ssh.ttymodes:config-ttymodes', 00H
	ORG $+3
$SG87925 DB	'Remove', 00H
	ORG $+1
$SG87927 DB	'ssh.ttymodes:config-ttymodes', 00H
	ORG $+3
$SG87930 DB	'ssh.ttymodes:config-ttymodes', 00H
	ORG $+3
$SG87931 DB	'Mode:', 00H
	ORG $+2
$SG87932 DB	'ssh.ttymodes:config-ttymodes', 00H
	ORG $+3
$SG87933 DB	'Add', 00H
$SG87934 DB	'ssh.ttymodes:config-ttymodes', 00H
	ORG $+3
$SG87935 DB	'Value:', 00H
	ORG $+1
$SG87940 DB	'This:', 00H
	ORG $+2
$SG87941 DB	'Auto', 00H
	ORG $+3
$SG87942 DB	'ssh.ttymodes:config-ttymodes', 00H
	ORG $+3
$SG87945 DB	'ssh.ttymodes:config-ttymodes', 00H
	ORG $+3
$SG87947 DB	'Options controlling SSH X11 forwarding', 00H
	ORG $+1
$SG87948 DB	'Connection/SSH/X11', 00H
	ORG $+1
$SG87949 DB	'X11 forwarding', 00H
	ORG $+1
$SG87950 DB	'x11', 00H
$SG87951 DB	'Connection/SSH/X11', 00H
	ORG $+1
$SG87952 DB	'ssh.tunnels.x11:config-ssh-x11', 00H
	ORG $+1
$SG87953 DB	'Enable X11 forwarding', 00H
	ORG $+2
$SG87954 DB	'ssh.tunnels.x11:config-ssh-x11', 00H
	ORG $+1
$SG87955 DB	'X display location', 00H
	ORG $+1
$SG87957 DB	'XDM-Authorization-1', 00H
$SG87958 DB	'MIT-Magic-Cookie-1', 00H
	ORG $+1
$SG87959 DB	'ssh.tunnels.x11auth:config-ssh-x11auth', 00H
	ORG $+1
$SG87960 DB	'Remote X11 authentication protocol', 00H
	ORG $+1
$SG87961 DB	'Options controlling SSH port forwarding', 00H
$SG87962 DB	'Connection/SSH/Tunnels', 00H
	ORG $+1
$SG87963 DB	'Port forwarding', 00H
$SG87964 DB	'portfwd', 00H
$SG87965 DB	'Connection/SSH/Tunnels', 00H
	ORG $+1
$SG87966 DB	'ssh.tunnels.portfwd.localhost:config-ssh-portfwd-localho'
	DB	'st', 00H
	ORG $+1
$SG87967 DB	'Local ports accept connections from other hosts', 00H
$SG87968 DB	'ssh.tunnels.portfwd.localhost:config-ssh-portfwd-localho'
	DB	'st', 00H
	ORG $+1
$SG87969 DB	'Remote ports do the same (SSH-2 only)', 00H
	ORG $+2
$SG87970 DB	'ssh.tunnels.portfwd:config-ssh-portfwd', 00H
	ORG $+1
$SG87971 DB	'Forwarded ports:', 00H
	ORG $+3
$SG87974 DB	'ssh.tunnels.portfwd:config-ssh-portfwd', 00H
	ORG $+1
$SG87975 DB	'Remove', 00H
	ORG $+1
$SG87977 DB	'ssh.tunnels.portfwd:config-ssh-portfwd', 00H
	ORG $+1
$SG87980 DB	'ssh.tunnels.portfwd:config-ssh-portfwd', 00H
	ORG $+1
$SG87981 DB	'Add new forwarded port:', 00H
$SG87982 DB	'ssh.tunnels.portfwd:config-ssh-portfwd', 00H
	ORG $+1
$SG87983 DB	'Add', 00H
$SG87985 DB	'ssh.tunnels.portfwd:config-ssh-portfwd', 00H
	ORG $+1
$SG87986 DB	'Source port', 00H
$SG87988 DB	'ssh.tunnels.portfwd:config-ssh-portfwd', 00H
	ORG $+1
$SG87989 DB	'Destination', 00H
$SG87995 DB	'Dynamic', 00H
$SG87996 DB	'Remote', 00H
	ORG $+1
$SG87997 DB	'Local', 00H
	ORG $+2
$SG87998 DB	'ssh.tunnels.portfwd:config-ssh-portfwd', 00H
	ORG $+1
$SG88001 DB	'IPv6', 00H
	ORG $+3
$SG88002 DB	'IPv4', 00H
	ORG $+3
$SG88003 DB	'Auto', 00H
	ORG $+3
$SG88004 DB	'ssh.tunnels.portfwd.ipversion:config-ssh-portfwd-address'
	DB	'-family', 00H
$SG88006 DB	'Workarounds for SSH server bugs', 00H
$SG88007 DB	'Connection/SSH/Bugs', 00H
$SG88008 DB	'Detection of known bugs in SSH servers', 00H
	ORG $+1
$SG88009 DB	'main', 00H
	ORG $+3
$SG88010 DB	'Connection/SSH/Bugs', 00H
$SG88011 DB	'ssh.bugs.ignore1:config-ssh-bug-ignore1', 00H
$SG88012 DB	'Chokes on SSH-1 ignore messages', 00H
$SG88013 DB	'ssh.bugs.plainpw1:config-ssh-bug-plainpw1', 00H
	ORG $+2
$SG88014 DB	'Refuses all SSH-1 password camouflage', 00H
	ORG $+2
$SG88015 DB	'ssh.bugs.rsa1:config-ssh-bug-rsa1', 00H
	ORG $+2
$SG88016 DB	'Chokes on SSH-1 RSA authentication', 00H
	ORG $+1
$SG88017 DB	'ssh.bugs.ignore2:config-ssh-bug-ignore2', 00H
$SG88018 DB	'Chokes on SSH-2 ignore messages', 00H
$SG88019 DB	'ssh.bugs.winadj:config-ssh-bug-winadj', 00H
	ORG $+2
$SG88020 DB	'Chokes on PuTTY''s SSH-2 ''winadj'' requests', 00H
	ORG $+2
$SG88021 DB	'ssh.bugs.hmac2:config-ssh-bug-hmac2', 00H
$SG88022 DB	'Miscomputes SSH-2 HMAC keys', 00H
$SG88023 DB	'ssh.bugs.derivekey2:config-ssh-bug-derivekey2', 00H
	ORG $+2
$SG88024 DB	'Miscomputes SSH-2 encryption keys', 00H
	ORG $+2
$SG88025 DB	'ssh.bugs.rsapad2:config-ssh-bug-sig', 00H
$SG88026 DB	'Requires padding on SSH-2 RSA signatures', 00H
	ORG $+3
$SG88027 DB	'ssh.bugs.pksessid2:config-ssh-bug-pksessid2', 00H
$SG88028 DB	'Misuses the session ID in SSH-2 PK auth', 00H
$SG88029 DB	'ssh.bugs.rekey2:config-ssh-bug-rekey', 00H
	ORG $+3
$SG88030 DB	'Handles SSH-2 key re-exchange badly', 00H
$SG88031 DB	'ssh.bugs.maxpkt2:config-ssh-bug-maxpkt2', 00H
$SG88032 DB	'Ignores SSH-2 maximum packet size', 00H
	ORG $+2
$SG88033 DB	'ssh.bugs.winadj:config-ssh-bug-chanreq', 00H
	ORG $+1
$SG88034 DB	'Replies to requests on closed channels', 00H
_DATA	ENDS
PUBLIC	_conf_radiobutton_handler
EXTRN	_conf_set_int:PROC
EXTRN	_dlg_radiobutton_get:PROC
EXTRN	_dlg_radiobutton_set:PROC
EXTRN	__wassert:PROC
EXTRN	_conf_get_int:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\putty\config.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_val$86261 = -12					; size = 4
_conf$ = -8						; size = 4
_button$ = -4						; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_conf_radiobutton_handler PROC
; Line 20
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 22
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], eax
; Line 30
	cmp	DWORD PTR _event$[ebp], 0
	jne	SHORT $LN7@conf_radio
; Line 31
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	DWORD PTR _val$86261[ebp], eax
; Line 32
	mov	DWORD PTR _button$[ebp], 0
	jmp	SHORT $LN6@conf_radio
$LN5@conf_radio:
	mov	ecx, DWORD PTR _button$[ebp]
	add	ecx, 1
	mov	DWORD PTR _button$[ebp], ecx
$LN6@conf_radio:
	mov	edx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR _button$[ebp]
	cmp	eax, DWORD PTR [edx+36]
	jge	SHORT $LN4@conf_radio
; Line 33
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR _button$[ebp]
	mov	ecx, DWORD PTR _val$86261[ebp]
	cmp	ecx, DWORD PTR [edx+eax*4]
	jne	SHORT $LN3@conf_radio
; Line 34
	jmp	SHORT $LN4@conf_radio
$LN3@conf_radio:
; Line 36
	jmp	SHORT $LN5@conf_radio
$LN4@conf_radio:
	mov	edx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR _button$[ebp]
	cmp	eax, DWORD PTR [edx+36]
	jl	SHORT $LN10@conf_radio
	push	36					; 00000024H
	push	OFFSET $SG86267
	push	OFFSET $SG86268
	call	__wassert
	add	esp, 12					; 0000000cH
$LN10@conf_radio:
; Line 37
	mov	edx, DWORD PTR _button$[ebp]
	push	edx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_radiobutton_set
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN8@conf_radio
$LN7@conf_radio:
; Line 38
	cmp	DWORD PTR _event$[ebp], 2
	jne	SHORT $LN8@conf_radio
; Line 39
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_radiobutton_get
	add	esp, 8
	mov	DWORD PTR _button$[ebp], eax
; Line 40
	cmp	DWORD PTR _button$[ebp], 0
	jl	SHORT $LN11@conf_radio
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR _button$[ebp]
	cmp	edx, DWORD PTR [ecx+36]
	jl	SHORT $LN12@conf_radio
$LN11@conf_radio:
	push	40					; 00000028H
	push	OFFSET $SG86272
	push	OFFSET $SG86273
	call	__wassert
	add	esp, 12					; 0000000cH
$LN12@conf_radio:
; Line 42
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR _button$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN8@conf_radio:
; Line 44
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_conf_radiobutton_handler ENDP
_TEXT	ENDS
PUBLIC	_conf_checkbox_handler
EXTRN	_dlg_checkbox_get:PROC
EXTRN	_dlg_checkbox_set:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_val$86290 = -16					; size = 4
_conf$ = -12						; size = 4
_invert$ = -8						; size = 4
_key$ = -4						; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_conf_checkbox_handler PROC
; Line 49
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 51
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], eax
; Line 57
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _key$[ebp], edx
; Line 58
	mov	eax, DWORD PTR _key$[ebp]
	and	eax, 1073741824				; 40000000H
	je	SHORT $LN5@conf_check
; Line 59
	mov	ecx, DWORD PTR _key$[ebp]
	and	ecx, -1073741825			; bfffffffH
	mov	DWORD PTR _key$[ebp], ecx
; Line 60
	mov	DWORD PTR _invert$[ebp], 1
; Line 61
	jmp	SHORT $LN4@conf_check
$LN5@conf_check:
; Line 62
	mov	DWORD PTR _invert$[ebp], 0
$LN4@conf_check:
; Line 70
	cmp	DWORD PTR _event$[ebp], 0
	jne	SHORT $LN3@conf_check
; Line 71
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	DWORD PTR _val$86290[ebp], eax
; Line 72
	xor	ecx, ecx
	cmp	DWORD PTR _val$86290[ebp], 0
	sete	cl
	xor	edx, edx
	cmp	DWORD PTR _invert$[ebp], 0
	sete	dl
	xor	ecx, edx
	push	ecx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_checkbox_set
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN6@conf_check
$LN3@conf_check:
; Line 73
	cmp	DWORD PTR _event$[ebp], 2
	jne	SHORT $LN6@conf_check
; Line 74
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_checkbox_get
	add	esp, 8
	neg	eax
	sbb	eax, eax
	add	eax, 1
	xor	ecx, ecx
	cmp	DWORD PTR _invert$[ebp], 0
	sete	cl
	xor	eax, ecx
	push	eax
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN6@conf_check:
; Line 76
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_conf_checkbox_handler ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_conf_editbox_handler
EXTRN	_atof:PROC
EXTRN	_atoi:PROC
EXTRN	_sprintf:PROC
EXTRN	_safefree:PROC
EXTRN	_conf_set_str:PROC
EXTRN	_dlg_editbox_get:PROC
EXTRN	_dlg_editbox_set:PROC
EXTRN	_conf_get_str:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__ftol2_sse:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv203 = -136						; size = 8
tv193 = -128						; size = 4
tv178 = -124						; size = 4
_str$86325 = -120					; size = 4
_value$86316 = -116					; size = 4
_str$86315 = -108					; size = 80
_field$86311 = -24					; size = 4
_field$86308 = -20					; size = 4
_conf$ = -16						; size = 4
_length$ = -12						; size = 4
_key$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_conf_editbox_handler PROC
; Line 80
	push	ebp
	mov	ebp, esp
	sub	esp, 136				; 00000088H
	push	edi
	lea	edi, DWORD PTR [ebp-136]
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 94
	mov	eax, DWORD PTR _ctrl$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _key$[ebp], ecx
; Line 95
	mov	edx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR _length$[ebp], eax
; Line 96
	mov	ecx, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], ecx
; Line 98
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN13@conf_editb
; Line 99
	cmp	DWORD PTR _event$[ebp], 0
	jne	SHORT $LN12@conf_editb
; Line 100
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_str
	add	esp, 8
	mov	DWORD PTR _field$86308[ebp], eax
; Line 101
	mov	ecx, DWORD PTR _field$86308[ebp]
	push	ecx
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_editbox_set
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN10@conf_editb
$LN12@conf_editb:
; Line 102
	cmp	DWORD PTR _event$[ebp], 2
	jne	SHORT $LN10@conf_editb
; Line 103
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_editbox_get
	add	esp, 8
	mov	DWORD PTR _field$86311[ebp], eax
; Line 104
	mov	eax, DWORD PTR _field$86311[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_str
	add	esp, 12					; 0000000cH
; Line 105
	mov	eax, DWORD PTR _field$86311[ebp]
	push	eax
	call	_safefree
	add	esp, 4
$LN10@conf_editb:
; Line 106
	jmp	$LN3@conf_editb
$LN13@conf_editb:
; Line 107
	cmp	DWORD PTR _length$[ebp], 0
	jge	$LN3@conf_editb
; Line 108
	cmp	DWORD PTR _event$[ebp], 0
	jne	SHORT $LN7@conf_editb
; Line 110
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	mov	DWORD PTR _value$86316[ebp], eax
; Line 111
	cmp	DWORD PTR _length$[ebp], -1
	jne	SHORT $LN6@conf_editb
; Line 112
	mov	eax, DWORD PTR _value$86316[ebp]
	push	eax
	push	OFFSET $SG86318
	lea	ecx, DWORD PTR _str$86315[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 113
	jmp	SHORT $LN5@conf_editb
$LN6@conf_editb:
; Line 114
	fild	DWORD PTR _value$86316[ebp]
	mov	edx, DWORD PTR _length$[ebp]
	neg	edx
	mov	DWORD PTR tv178[ebp], edx
	fild	DWORD PTR tv178[ebp]
	fdivp	ST(1), ST(0)
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG86322
	lea	eax, DWORD PTR _str$86315[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
$LN5@conf_editb:
; Line 115
	lea	ecx, DWORD PTR _str$86315[ebp]
	push	ecx
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_editbox_set
	add	esp, 12					; 0000000cH
	jmp	$LN3@conf_editb
$LN7@conf_editb:
; Line 116
	cmp	DWORD PTR _event$[ebp], 2
	jne	SHORT $LN3@conf_editb
; Line 117
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_editbox_get
	add	esp, 8
	mov	DWORD PTR _str$86325[ebp], eax
; Line 118
	cmp	DWORD PTR _length$[ebp], -1
	jne	SHORT $LN2@conf_editb
; Line 119
	mov	eax, DWORD PTR _str$86325[ebp]
	push	eax
	call	_atoi
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 120
	jmp	SHORT $LN1@conf_editb
$LN2@conf_editb:
; Line 121
	mov	eax, DWORD PTR _length$[ebp]
	neg	eax
	mov	DWORD PTR tv193[ebp], eax
	fild	DWORD PTR tv193[ebp]
	mov	ecx, DWORD PTR _str$86325[ebp]
	push	ecx
	fstp	QWORD PTR tv203[ebp]
	call	_atof
	add	esp, 4
	fmul	QWORD PTR tv203[ebp]
	call	__ftol2_sse
	push	eax
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN1@conf_editb:
; Line 122
	mov	ecx, DWORD PTR _str$86325[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN3@conf_editb:
; Line 125
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@conf_editb
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 136				; 00000088H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN18@conf_editb:
	DD	1
	DD	$LN17@conf_editb
$LN17@conf_editb:
	DD	-108					; ffffff94H
	DD	80					; 00000050H
	DD	$LN16@conf_editb
$LN16@conf_editb:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_conf_editbox_handler ENDP
_TEXT	ENDS
PUBLIC	_conf_filesel_handler
EXTRN	_filename_free:PROC
EXTRN	_conf_set_filename:PROC
EXTRN	_dlg_filesel_get:PROC
EXTRN	_dlg_filesel_set:PROC
EXTRN	_conf_get_filename:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_filename$86344 = -12					; size = 4
_conf$ = -8						; size = 4
_key$ = -4						; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_conf_filesel_handler PROC
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 130
	mov	eax, DWORD PTR _ctrl$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _key$[ebp], ecx
; Line 131
	mov	edx, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], edx
; Line 133
	cmp	DWORD PTR _event$[ebp], 0
	jne	SHORT $LN3@conf_files
; Line 134
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_filename
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_filesel_set
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN4@conf_files
$LN3@conf_files:
; Line 135
	cmp	DWORD PTR _event$[ebp], 2
	jne	SHORT $LN4@conf_files
; Line 136
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_filesel_get
	add	esp, 8
	mov	DWORD PTR _filename$86344[ebp], eax
; Line 137
	mov	eax, DWORD PTR _filename$86344[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_filename
	add	esp, 12					; 0000000cH
; Line 138
	mov	eax, DWORD PTR _filename$86344[ebp]
	push	eax
	call	_filename_free
	add	esp, 4
$LN4@conf_files:
; Line 140
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_conf_filesel_handler ENDP
_TEXT	ENDS
PUBLIC	_conf_fontsel_handler
EXTRN	_fontspec_free:PROC
EXTRN	_conf_set_fontspec:PROC
EXTRN	_dlg_fontsel_get:PROC
EXTRN	_dlg_fontsel_set:PROC
EXTRN	_conf_get_fontspec:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_fontspec$86360 = -12					; size = 4
_conf$ = -8						; size = 4
_key$ = -4						; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_conf_fontsel_handler PROC
; Line 144
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 145
	mov	eax, DWORD PTR _ctrl$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _key$[ebp], ecx
; Line 146
	mov	edx, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], edx
; Line 148
	cmp	DWORD PTR _event$[ebp], 0
	jne	SHORT $LN3@conf_fonts
; Line 149
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_fontspec
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_fontsel_set
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN4@conf_fonts
$LN3@conf_fonts:
; Line 150
	cmp	DWORD PTR _event$[ebp], 2
	jne	SHORT $LN4@conf_fonts
; Line 151
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_fontsel_get
	add	esp, 8
	mov	DWORD PTR _fontspec$86360[ebp], eax
; Line 152
	mov	eax, DWORD PTR _fontspec$86360[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_fontspec
	add	esp, 12					; 0000000cH
; Line 153
	mov	eax, DWORD PTR _fontspec$86360[ebp]
	push	eax
	call	_fontspec_free
	add	esp, 4
$LN4@conf_fonts:
; Line 155
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_conf_fontsel_handler ENDP
_TEXT	ENDS
PUBLIC	_config_protocolbuttons_handler
EXTRN	_dlg_refresh:PROC
EXTRN	_backend_from_proto:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_nb$86448 = -36						; size = 4
_ob$86447 = -32						; size = 4
_port$86442 = -28					; size = 4
_newproto$86441 = -24					; size = 4
_oldproto$86440 = -20					; size = 4
_protocol$86430 = -16					; size = 4
_hp$ = -12						; size = 4
_conf$ = -8						; size = 4
_button$ = -4						; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_config_protocolbuttons_handler PROC
; Line 240
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 242
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], eax
; Line 243
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _hp$[ebp], edx
; Line 252
	cmp	DWORD PTR _event$[ebp], 0
	jne	SHORT $LN9@config_pro
; Line 253
	push	2
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	DWORD PTR _protocol$86430[ebp], eax
; Line 254
	mov	DWORD PTR _button$[ebp], 0
	jmp	SHORT $LN8@config_pro
$LN7@config_pro:
	mov	ecx, DWORD PTR _button$[ebp]
	add	ecx, 1
	mov	DWORD PTR _button$[ebp], ecx
$LN8@config_pro:
	mov	edx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR _button$[ebp]
	cmp	eax, DWORD PTR [edx+36]
	jge	SHORT $LN6@config_pro
; Line 255
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR _button$[ebp]
	mov	ecx, DWORD PTR _protocol$86430[ebp]
	cmp	ecx, DWORD PTR [edx+eax*4]
	jne	SHORT $LN5@config_pro
; Line 256
	jmp	SHORT $LN6@config_pro
$LN5@config_pro:
; Line 258
	jmp	SHORT $LN7@config_pro
$LN6@config_pro:
	mov	edx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR _button$[ebp]
	cmp	eax, DWORD PTR [edx+36]
	jl	SHORT $LN12@config_pro
	push	258					; 00000102H
	push	OFFSET $SG86436
	push	OFFSET $SG86437
	call	__wassert
	add	esp, 12					; 0000000cH
$LN12@config_pro:
; Line 259
	mov	edx, DWORD PTR _button$[ebp]
	push	edx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_radiobutton_set
	add	esp, 12					; 0000000cH
	jmp	$LN10@config_pro
$LN9@config_pro:
; Line 260
	cmp	DWORD PTR _event$[ebp], 2
	jne	$LN10@config_pro
; Line 261
	push	2
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	mov	DWORD PTR _oldproto$86440[ebp], eax
; Line 264
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_radiobutton_get
	add	esp, 8
	mov	DWORD PTR _button$[ebp], eax
; Line 265
	cmp	DWORD PTR _button$[ebp], 0
	jl	SHORT $LN13@config_pro
	mov	edx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR _button$[ebp]
	cmp	eax, DWORD PTR [edx+36]
	jl	SHORT $LN14@config_pro
$LN13@config_pro:
	push	265					; 00000109H
	push	OFFSET $SG86444
	push	OFFSET $SG86445
	call	__wassert
	add	esp, 12					; 0000000cH
$LN14@config_pro:
; Line 266
	mov	edx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+48]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _newproto$86441[ebp], edx
; Line 267
	mov	eax, DWORD PTR _newproto$86441[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 269
	mov	edx, DWORD PTR _oldproto$86440[ebp]
	cmp	edx, DWORD PTR _newproto$86441[ebp]
	je	$LN2@config_pro
; Line 270
	mov	eax, DWORD PTR _oldproto$86440[ebp]
	push	eax
	call	_backend_from_proto
	add	esp, 4
	mov	DWORD PTR _ob$86447[ebp], eax
; Line 271
	mov	ecx, DWORD PTR _newproto$86441[ebp]
	push	ecx
	call	_backend_from_proto
	add	esp, 4
	mov	DWORD PTR _nb$86448[ebp], eax
; Line 272
	cmp	DWORD PTR _ob$86447[ebp], 0
	jne	SHORT $LN15@config_pro
	push	272					; 00000110H
	push	OFFSET $SG86450
	push	OFFSET $SG86451
	call	__wassert
	add	esp, 12					; 0000000cH
$LN15@config_pro:
; Line 273
	cmp	DWORD PTR _nb$86448[ebp], 0
	jne	SHORT $LN16@config_pro
	push	273					; 00000111H
	push	OFFSET $SG86453
	push	OFFSET $SG86454
	call	__wassert
	add	esp, 12					; 0000000cH
$LN16@config_pro:
; Line 283
	push	1
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	DWORD PTR _port$86442[ebp], eax
; Line 284
	mov	edx, DWORD PTR _ob$86447[ebp]
	mov	eax, DWORD PTR _port$86442[ebp]
	cmp	eax, DWORD PTR [edx+72]
	jne	SHORT $LN2@config_pro
; Line 285
	mov	ecx, DWORD PTR _nb$86448[ebp]
	mov	edx, DWORD PTR [ecx+72]
	push	edx
	push	1
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN2@config_pro:
; Line 287
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hp$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_dlg_refresh
	add	esp, 8
; Line 288
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hp$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_dlg_refresh
	add	esp, 8
$LN10@config_pro:
; Line 290
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_config_protocolbuttons_handler ENDP
_TEXT	ENDS
PUBLIC	_setup_config_box
EXTRN	_ctrl_droplist:PROC
EXTRN	_ngsslibs:DWORD
EXTRN	_ctrl_tabdelay:PROC
EXTRN	_ctrl_draglist:PROC
EXTRN	_get_username:PROC
EXTRN	_safemalloc:PROC
EXTRN	_ctrl_fontsel:PROC
EXTRN	_ctrl_combobox:PROC
EXTRN	_ctrl_checkbox:PROC
EXTRN	_ctrl_text:PROC
EXTRN	_ctrl_filesel:PROC
EXTRN	_ctrl_listbox:PROC
EXTRN	_get_sesslist:PROC
EXTRN	_ctrl_radiobuttons:PROC
EXTRN	_ctrl_editbox:PROC
EXTRN	_I:PROC
EXTRN	_ctrl_alloc:PROC
EXTRN	_ctrl_settitle:PROC
EXTRN	_dupprintf:PROC
EXTRN	_appname:DWORD
EXTRN	_ctrl_pushbutton:PROC
EXTRN	_P:PROC
EXTRN	_ctrl_columns:PROC
EXTRN	_ctrl_getset:PROC
EXTRN	_dupstr:PROC
EXTRN	_memset:PROC
EXTRN	_ctrl_alloc_with_free:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv2147 = -80						; size = 4
tv2069 = -76						; size = 4
tv276 = -72						; size = 4
tv133 = -68						; size = 4
_userlabel$87666 = -64					; size = 4
_user$87665 = -60					; size = 4
_label$87650 = -56					; size = 4
_sshrawlogname$87300 = -52				; size = 4
_sshlogname$87299 = -48					; size = 4
_hp$87239 = -44						; size = 4
_str$ = -40						; size = 4
_c$ = -36						; size = 4
_mh$ = -32						; size = 4
_pfd$ = -28						; size = 4
_ed$ = -24						; size = 4
_td$ = -20						; size = 4
_cd$ = -16						; size = 4
_ccd$ = -12						; size = 4
_ssd$ = -8						; size = 4
_s$ = -4						; size = 4
_b$ = 8							; size = 4
_midsession$ = 12					; size = 4
_protocol$ = 16						; size = 4
_protcfginfo$ = 20					; size = 4
_setup_config_box PROC
; Line 1297
	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	edi
	lea	edi, DWORD PTR [ebp-80]
	mov	ecx, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1311
	push	OFFSET _sessionsaver_data_free
	push	48					; 00000030H
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_alloc_with_free
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ssd$[ebp], eax
; Line 1312
	push	48					; 00000030H
	push	0
	mov	ecx, DWORD PTR _ssd$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1313
	push	OFFSET $SG87226
	call	_dupstr
	add	esp, 4
	mov	edx, DWORD PTR _ssd$[ebp]
	mov	DWORD PTR [edx+44], eax
; Line 1314
	mov	eax, DWORD PTR _ssd$[ebp]
	mov	ecx, DWORD PTR _midsession$[ebp]
	mov	DWORD PTR [eax+40], ecx
; Line 1320
	push	OFFSET $SG87227
	push	OFFSET $SG87228
	push	OFFSET $SG87229
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1321
	push	20					; 00000014H
	push	20					; 00000014H
	push	20					; 00000014H
	push	20					; 00000014H
	push	20					; 00000014H
	push	5
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_columns
	add	esp, 28					; 0000001cH
; Line 1326
	cmp	DWORD PTR _midsession$[ebp], 0
	je	SHORT $LN43@setup_conf
	mov	DWORD PTR tv133[ebp], OFFSET $SG87232
	jmp	SHORT $LN44@setup_conf
$LN43@setup_conf:
	mov	DWORD PTR tv133[ebp], OFFSET $SG87233
$LN44@setup_conf:
	mov	ecx, DWORD PTR _ssd$[ebp]
	push	ecx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _sessionsaver_handler
	push	0
	call	_P
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _midsession$[ebp]
	neg	edx
	sbb	edx, edx
	and	edx, -14				; fffffff2H
	add	edx, 111				; 0000006fH
	push	edx
	mov	eax, DWORD PTR tv133[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_pushbutton
	add	esp, 24					; 00000018H
	mov	edx, DWORD PTR _ssd$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 1327
	mov	eax, DWORD PTR _ssd$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx+32], 1
; Line 1328
	mov	edx, DWORD PTR _ssd$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [eax+12], 3
; Line 1330
	mov	ecx, DWORD PTR _ssd$[ebp]
	push	ecx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _sessionsaver_handler
	push	0
	call	_P
	add	esp, 4
	push	eax
	push	99					; 00000063H
	push	OFFSET $SG87235
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_pushbutton
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 1331
	mov	edx, DWORD PTR _ssd$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR [eax+36], 1
; Line 1332
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [edx+12], 4
; Line 1339
	mov	eax, DWORD PTR _appname
	push	eax
	push	OFFSET $SG87236
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _str$[ebp], eax
; Line 1340
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	push	OFFSET $SG87237
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 1341
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 1343
	cmp	DWORD PTR _midsession$[ebp], 0
	jne	$LN40@setup_conf
; Line 1345
	push	8
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_alloc
	add	esp, 8
	mov	DWORD PTR _hp$87239[ebp], eax
; Line 1348
	push	OFFSET $SG87242
	push	OFFSET $SG87243
	push	OFFSET $SG87244
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1349
	push	25					; 00000019H
	push	75					; 0000004bH
	push	2
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_columns
	add	esp, 16					; 00000010H
; Line 1352
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _config_host_handler
	push	OFFSET $SG87245
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	110					; 0000006eH
	push	OFFSET $SG87246
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
	mov	DWORD PTR _c$[ebp], eax
; Line 1353
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 1354
	mov	eax, DWORD PTR _hp$87239[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1357
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _config_port_handler
	push	OFFSET $SG87247
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	112					; 00000070H
	push	OFFSET $SG87248
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
	mov	DWORD PTR _c$[ebp], eax
; Line 1358
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+12], 1
; Line 1359
	mov	ecx, DWORD PTR _hp$87239[ebp]
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 1360
	push	100					; 00000064H
	push	1
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_columns
	add	esp, 12					; 0000000cH
; Line 1362
	push	3
	call	_backend_from_proto
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN39@setup_conf
; Line 1369
	push	0
	push	2
	call	_I
	add	esp, 4
	push	eax
	push	105					; 00000069H
	push	OFFSET $SG87251
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	116					; 00000074H
	push	OFFSET $SG87252
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	119					; 00000077H
	push	OFFSET $SG87253
	mov	ecx, DWORD PTR _hp$87239[ebp]
	push	ecx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _config_protocolbuttons_handler
	push	OFFSET $SG87254
	call	_P
	add	esp, 4
	push	eax
	push	3
	push	0
	push	OFFSET $SG87255
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_radiobuttons
	add	esp, 68					; 00000044H
; Line 1370
	jmp	SHORT $LN40@setup_conf
$LN39@setup_conf:
; Line 1378
	push	0
	push	3
	call	_I
	add	esp, 4
	push	eax
	push	115					; 00000073H
	push	OFFSET $SG87258
	push	2
	call	_I
	add	esp, 4
	push	eax
	push	105					; 00000069H
	push	OFFSET $SG87259
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	116					; 00000074H
	push	OFFSET $SG87260
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	119					; 00000077H
	push	OFFSET $SG87261
	mov	eax, DWORD PTR _hp$87239[ebp]
	push	eax
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _config_protocolbuttons_handler
	push	OFFSET $SG87262
	call	_P
	add	esp, 4
	push	eax
	push	4
	push	0
	push	OFFSET $SG87263
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_radiobuttons
	add	esp, 80					; 00000050H
$LN40@setup_conf:
; Line 1387
	cmp	DWORD PTR _midsession$[ebp], 0
	je	SHORT $LN45@setup_conf
	mov	DWORD PTR tv276[ebp], OFFSET $SG87264
	jmp	SHORT $LN46@setup_conf
$LN45@setup_conf:
	mov	DWORD PTR tv276[ebp], OFFSET $SG87265
$LN46@setup_conf:
	mov	edx, DWORD PTR tv276[ebp]
	push	edx
	push	OFFSET $SG87266
	push	OFFSET $SG87267
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1388
	push	25					; 00000019H
	push	75					; 0000004bH
	push	2
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_columns
	add	esp, 16					; 00000010H
; Line 1389
	push	1
	mov	edx, DWORD PTR _ssd$[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	call	_get_sesslist
	add	esp, 8
; Line 1392
	push	0
	call	_P
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssd$[ebp]
	push	eax
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _sessionsaver_handler
	push	OFFSET $SG87269
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	101					; 00000065H
	push	OFFSET $SG87270
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
	mov	edx, DWORD PTR _ssd$[ebp]
	mov	DWORD PTR [edx], eax
; Line 1393
	mov	eax, DWORD PTR _ssd$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+12], 0
; Line 1396
	push	100					; 00000064H
	push	1
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_columns
	add	esp, 12					; 0000000cH
; Line 1397
	push	25					; 00000019H
	push	75					; 0000004bH
	push	2
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_columns
	add	esp, 16					; 00000010H
; Line 1400
	mov	ecx, DWORD PTR _ssd$[ebp]
	push	ecx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _sessionsaver_handler
	push	OFFSET $SG87272
	call	_P
	add	esp, 4
	push	eax
	push	0
	push	0
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_listbox
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 1401
	mov	edx, DWORD PTR _ssd$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+12], 0
; Line 1402
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+32], 7
; Line 1403
	cmp	DWORD PTR _midsession$[ebp], 0
	jne	SHORT $LN37@setup_conf
; Line 1406
	mov	eax, DWORD PTR _ssd$[ebp]
	push	eax
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _sessionsaver_handler
	push	OFFSET $SG87274
	call	_P
	add	esp, 4
	push	eax
	push	108					; 0000006cH
	push	OFFSET $SG87275
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_pushbutton
	add	esp, 24					; 00000018H
	mov	edx, DWORD PTR _ssd$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 1407
	mov	eax, DWORD PTR _ssd$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+12], 1
; Line 1408
	jmp	SHORT $LN36@setup_conf
$LN37@setup_conf:
; Line 1413
	mov	edx, DWORD PTR _ssd$[ebp]
	mov	DWORD PTR [edx+8], 0
$LN36@setup_conf:
; Line 1418
	mov	eax, DWORD PTR _ssd$[ebp]
	push	eax
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _sessionsaver_handler
	push	OFFSET $SG87278
	call	_P
	add	esp, 4
	push	eax
	push	118					; 00000076H
	push	OFFSET $SG87279
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_pushbutton
	add	esp, 24					; 00000018H
	mov	edx, DWORD PTR _ssd$[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 1419
	mov	eax, DWORD PTR _ssd$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], 1
; Line 1420
	cmp	DWORD PTR _midsession$[ebp], 0
	jne	SHORT $LN35@setup_conf
; Line 1423
	mov	edx, DWORD PTR _ssd$[ebp]
	push	edx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _sessionsaver_handler
	push	OFFSET $SG87281
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	OFFSET $SG87282
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_pushbutton
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 1424
	mov	edx, DWORD PTR _ssd$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [eax+12], 1
; Line 1425
	jmp	SHORT $LN34@setup_conf
$LN35@setup_conf:
; Line 1427
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	DWORD PTR [ecx+16], 0
$LN34@setup_conf:
; Line 1429
	push	100					; 00000064H
	push	1
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_columns
	add	esp, 12					; 0000000cH
; Line 1431
	push	0
	push	OFFSET $SG87286
	push	OFFSET $SG87287
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1438
	push	0
	push	2
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87289
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87290
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87291
	push	4
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_radiobutton_handler
	push	OFFSET $SG87292
	call	_P
	add	esp, 4
	push	eax
	push	4
	push	120					; 00000078H
	push	OFFSET $SG87293
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_radiobuttons
	add	esp, 56					; 00000038H
; Line 1443
	push	OFFSET $SG87294
	push	OFFSET $SG87295
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 1445
	push	0
	push	OFFSET $SG87297
	push	OFFSET $SG87298
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1453
	cmp	DWORD PTR _midsession$[ebp], 0
	je	SHORT $LN31@setup_conf
	cmp	DWORD PTR _protocol$[ebp], 3
	je	SHORT $LN32@setup_conf
$LN31@setup_conf:
	cmp	DWORD PTR _midsession$[ebp], 0
	jne	SHORT $LN33@setup_conf
	push	3
	call	_backend_from_proto
	add	esp, 4
	test	eax, eax
	je	SHORT $LN33@setup_conf
$LN32@setup_conf:
; Line 1454
	mov	DWORD PTR _sshlogname$87299[ebp], OFFSET $SG87304
; Line 1455
	mov	DWORD PTR _sshrawlogname$87300[ebp], OFFSET $SG87305
; Line 1456
	jmp	SHORT $LN30@setup_conf
$LN33@setup_conf:
; Line 1457
	mov	DWORD PTR _sshlogname$87299[ebp], 0
; Line 1458
	mov	DWORD PTR _sshrawlogname$87300[ebp], 0
$LN30@setup_conf:
; Line 1469
	push	0
	push	4
	call	_I
	add	esp, 4
	push	eax
	push	114					; 00000072H
	mov	ecx, DWORD PTR _sshrawlogname$87300[ebp]
	push	ecx
	push	3
	call	_I
	add	esp, 4
	push	eax
	push	115					; 00000073H
	mov	edx, DWORD PTR _sshlogname$87299[ebp]
	push	edx
	push	2
	call	_I
	add	esp, 4
	push	eax
	push	108					; 0000006cH
	push	OFFSET $SG87310
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	112					; 00000070H
	push	OFFSET $SG87311
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	116					; 00000074H
	push	OFFSET $SG87312
	push	115					; 00000073H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _loggingbuttons_handler
	push	OFFSET $SG87313
	call	_P
	add	esp, 4
	push	eax
	push	2
	push	0
	push	OFFSET $SG87314
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_radiobuttons
	add	esp, 92					; 0000005cH
; Line 1474
	push	114					; 00000072H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_filesel_handler
	push	OFFSET $SG87316
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET $SG87317
	push	1
	push	0
	push	102					; 00000066H
	push	OFFSET $SG87318
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_filesel
	add	esp, 36					; 00000024H
; Line 1477
	push	OFFSET $SG87319
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET $SG87320
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_text
	add	esp, 12					; 0000000cH
; Line 1483
	push	0
	push	-1
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87322
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87323
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87324
	push	116					; 00000074H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_radiobutton_handler
	push	OFFSET $SG87325
	call	_P
	add	esp, 4
	push	eax
	push	1
	push	101					; 00000065H
	push	OFFSET $SG87326
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_radiobuttons
	add	esp, 56					; 00000038H
; Line 1486
	push	117					; 00000075H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87327
	call	_P
	add	esp, 4
	push	eax
	push	117					; 00000075H
	push	OFFSET $SG87328
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1489
	cmp	DWORD PTR _midsession$[ebp], 0
	je	SHORT $LN27@setup_conf
	cmp	DWORD PTR _protocol$[ebp], 3
	je	SHORT $LN28@setup_conf
$LN27@setup_conf:
	cmp	DWORD PTR _midsession$[ebp], 0
	jne	$LN29@setup_conf
	push	3
	call	_backend_from_proto
	add	esp, 4
	test	eax, eax
	je	$LN29@setup_conf
$LN28@setup_conf:
; Line 1491
	push	OFFSET $SG87332
	push	OFFSET $SG87333
	push	OFFSET $SG87334
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1494
	push	118					; 00000076H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87335
	call	_P
	add	esp, 4
	push	eax
	push	107					; 0000006bH
	push	OFFSET $SG87336
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1497
	push	119					; 00000077H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87337
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	OFFSET $SG87338
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
$LN29@setup_conf:
; Line 1503
	push	OFFSET $SG87339
	push	OFFSET $SG87340
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 1505
	push	OFFSET $SG87341
	push	OFFSET $SG87342
	push	OFFSET $SG87343
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1508
	push	93					; 0000005dH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87344
	call	_P
	add	esp, 4
	push	eax
	push	119					; 00000077H
	push	OFFSET $SG87345
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1511
	push	92					; 0000005cH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87346
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	OFFSET $SG87347
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1514
	push	94					; 0000005eH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87348
	call	_P
	add	esp, 4
	push	eax
	push	114					; 00000072H
	push	OFFSET $SG87349
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1517
	push	176					; 000000b0H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87350
	call	_P
	add	esp, 4
	push	eax
	push	102					; 00000066H
	push	OFFSET $SG87351
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1520
	push	107					; 0000006bH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87352
	call	_P
	add	esp, 4
	push	eax
	push	101					; 00000065H
	push	OFFSET $SG87353
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1523
	push	108					; 0000006cH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87354
	call	_P
	add	esp, 4
	push	eax
	push	110					; 0000006eH
	push	OFFSET $SG87355
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1526
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	123					; 0000007bH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87356
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	115					; 00000073H
	push	OFFSET $SG87357
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
; Line 1528
	push	OFFSET $SG87358
	push	OFFSET $SG87359
	push	OFFSET $SG87360
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1534
	push	0
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87362
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87363
	push	2
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87364
	push	81					; 00000051H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_radiobutton_handler
	push	OFFSET $SG87365
	call	_P
	add	esp, 4
	push	eax
	push	3
	push	108					; 0000006cH
	push	OFFSET $SG87366
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_radiobuttons
	add	esp, 56					; 00000038H
; Line 1540
	push	0
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87368
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87369
	push	2
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87370
	push	82					; 00000052H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_radiobutton_handler
	push	OFFSET $SG87371
	call	_P
	add	esp, 4
	push	eax
	push	3
	push	116					; 00000074H
	push	OFFSET $SG87372
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_radiobuttons
	add	esp, 56					; 00000038H
; Line 1542
	push	OFFSET $SG87373
	push	OFFSET $SG87374
	push	OFFSET $SG87375
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1545
	push	0
	call	_P
	add	esp, 4
	push	eax
	push	0
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _printerbox_handler
	push	OFFSET $SG87378
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	112					; 00000070H
	push	OFFSET $SG87379
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_combobox
	add	esp, 32					; 00000020H
; Line 1551
	push	OFFSET $SG87380
	push	OFFSET $SG87381
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 1554
	push	OFFSET $SG87382
	push	OFFSET $SG87383
	push	OFFSET $SG87384
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1559
	push	0
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87386
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87387
	push	61					; 0000003dH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_radiobutton_handler
	push	OFFSET $SG87388
	call	_P
	add	esp, 4
	push	eax
	push	2
	push	98					; 00000062H
	push	OFFSET $SG87389
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_radiobuttons
	add	esp, 48					; 00000030H
; Line 1564
	push	0
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87391
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87392
	push	62					; 0000003eH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_radiobutton_handler
	push	OFFSET $SG87393
	call	_P
	add	esp, 4
	push	eax
	push	2
	push	101					; 00000065H
	push	OFFSET $SG87394
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_radiobuttons
	add	esp, 48					; 00000030H
; Line 1570
	push	0
	push	5
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87396
	push	4
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87397
	push	3
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87398
	push	2
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87399
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87400
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87401
	push	63					; 0000003fH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_radiobutton_handler
	push	OFFSET $SG87402
	call	_P
	add	esp, 4
	push	eax
	push	3
	push	102					; 00000066H
	push	OFFSET $SG87403
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_radiobuttons
	add	esp, 80					; 00000050H
; Line 1573
	push	OFFSET $SG87404
	push	OFFSET $SG87405
	push	OFFSET $SG87406
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1578
	push	0
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87408
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87409
	push	73					; 00000049H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_radiobutton_handler
	push	OFFSET $SG87410
	call	_P
	add	esp, 4
	push	eax
	push	3
	push	114					; 00000072H
	push	OFFSET $SG87411
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_radiobuttons
	add	esp, 48					; 00000030H
; Line 1583
	push	0
	push	2
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87414
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87415
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87416
	push	0
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _numeric_keypad_handler
	push	OFFSET $SG87417
	call	_P
	add	esp, 4
	push	eax
	push	3
	push	110					; 0000006eH
	push	OFFSET $SG87418
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_radiobuttons
	add	esp, 56					; 00000038H
; Line 1589
	push	OFFSET $SG87419
	push	OFFSET $SG87420
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 1591
	push	OFFSET $SG87421
	push	OFFSET $SG87422
	push	OFFSET $SG87423
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1597
	push	0
	push	2
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87425
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87426
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87427
	push	97					; 00000061H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_radiobutton_handler
	push	OFFSET $SG87428
	call	_P
	add	esp, 4
	push	eax
	push	1
	push	98					; 00000062H
	push	OFFSET $SG87429
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_radiobuttons
	add	esp, 56					; 00000038H
; Line 1600
	push	OFFSET $SG87430
	push	OFFSET $SG87431
	push	OFFSET $SG87432
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1603
	push	99					; 00000063H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87433
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	OFFSET $SG87434
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1606
	push	-1
	call	_I
	add	esp, 4
	push	eax
	push	100					; 00000064H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87435
	call	_P
	add	esp, 4
	push	eax
	push	20					; 00000014H
	push	109					; 0000006dH
	push	OFFSET $SG87436
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
; Line 1610
	push	-1000					; fffffc18H
	call	_I
	add	esp, 4
	push	eax
	push	101					; 00000065H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87437
	call	_P
	add	esp, 4
	push	eax
	push	20					; 00000014H
	push	116					; 00000074H
	push	OFFSET $SG87438
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
; Line 1612
	push	OFFSET $SG87439
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET $SG87440
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_text
	add	esp, 12					; 0000000cH
; Line 1616
	push	-1000					; fffffc18H
	call	_I
	add	esp, 4
	push	eax
	push	102					; 00000066H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87441
	call	_P
	add	esp, 4
	push	eax
	push	20					; 00000014H
	push	115					; 00000073H
	push	OFFSET $SG87442
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
; Line 1622
	push	OFFSET $SG87443
	push	OFFSET $SG87444
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 1624
	push	0
	push	OFFSET $SG87446
	push	OFFSET $SG87447
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1627
	push	64					; 00000040H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87448
	call	_P
	add	esp, 4
	push	eax
	push	117					; 00000075H
	push	OFFSET $SG87449
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1630
	push	65					; 00000041H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87450
	call	_P
	add	esp, 4
	push	eax
	push	107					; 0000006bH
	push	OFFSET $SG87451
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1633
	push	66					; 00000042H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87452
	call	_P
	add	esp, 4
	push	eax
	push	120					; 00000078H
	push	OFFSET $SG87453
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1637
	push	67					; 00000043H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87454
	call	_P
	add	esp, 4
	push	eax
	push	115					; 00000073H
	push	OFFSET $SG87455
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1640
	push	68					; 00000044H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87456
	call	_P
	add	esp, 4
	push	eax
	push	119					; 00000077H
	push	OFFSET $SG87457
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1644
	push	69					; 00000045H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87458
	call	_P
	add	esp, 4
	push	eax
	push	116					; 00000074H
	push	OFFSET $SG87459
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1651
	push	0
	push	2
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87461
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87462
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87463
	push	72					; 00000048H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_radiobutton_handler
	push	OFFSET $SG87464
	call	_P
	add	esp, 4
	push	eax
	push	3
	push	113					; 00000071H
	push	OFFSET $SG87465
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_radiobuttons
	add	esp, 56					; 00000038H
; Line 1654
	push	70					; 00000046H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87466
	call	_P
	add	esp, 4
	push	eax
	push	98					; 00000062H
	push	OFFSET $SG87467
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1657
	push	71					; 00000047H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87468
	call	_P
	add	esp, 4
	push	eax
	push	114					; 00000072H
	push	OFFSET $SG87469
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1660
	push	125					; 0000007dH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87470
	call	_P
	add	esp, 4
	push	eax
	push	108					; 0000006cH
	push	OFFSET $SG87471
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1663
	push	126					; 0000007eH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87472
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	OFFSET $SG87473
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1668
	mov	ecx, DWORD PTR _appname
	push	ecx
	push	OFFSET $SG87474
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _str$[ebp], eax
; Line 1669
	mov	edx, DWORD PTR _str$[ebp]
	push	edx
	push	OFFSET $SG87475
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 1670
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 1672
	push	OFFSET $SG87476
	push	OFFSET $SG87477
	push	OFFSET $SG87478
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1673
	push	50					; 00000032H
	push	50					; 00000032H
	push	2
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_columns
	add	esp, 16					; 00000010H
; Line 1676
	push	-1
	call	_I
	add	esp, 4
	push	eax
	push	110					; 0000006eH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87479
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	109					; 0000006dH
	push	OFFSET $SG87480
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
	mov	DWORD PTR _c$[ebp], eax
; Line 1677
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 1680
	push	-1
	call	_I
	add	esp, 4
	push	eax
	push	111					; 0000006fH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87481
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	114					; 00000072H
	push	OFFSET $SG87482
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
	mov	DWORD PTR _c$[ebp], eax
; Line 1681
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+12], 1
; Line 1682
	push	100					; 00000064H
	push	1
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_columns
	add	esp, 12					; 0000000cH
; Line 1685
	push	OFFSET $SG87483
	push	OFFSET $SG87484
	push	OFFSET $SG87485
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1688
	push	-1
	call	_I
	add	esp, 4
	push	eax
	push	91					; 0000005bH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87486
	call	_P
	add	esp, 4
	push	eax
	push	50					; 00000032H
	push	115					; 00000073H
	push	OFFSET $SG87487
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
; Line 1691
	push	104					; 00000068H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87488
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	OFFSET $SG87489
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1694
	push	85					; 00000055H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87490
	call	_P
	add	esp, 4
	push	eax
	push	107					; 0000006bH
	push	OFFSET $SG87491
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1697
	push	86					; 00000056H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87492
	call	_P
	add	esp, 4
	push	eax
	push	112					; 00000070H
	push	OFFSET $SG87493
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1701
	push	87					; 00000057H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87494
	call	_P
	add	esp, 4
	push	eax
	push	101					; 00000065H
	push	OFFSET $SG87495
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1706
	mov	eax, DWORD PTR _appname
	push	eax
	push	OFFSET $SG87496
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _str$[ebp], eax
; Line 1707
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	push	OFFSET $SG87497
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 1708
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 1711
	push	OFFSET $SG87498
	push	OFFSET $SG87499
	push	OFFSET $SG87500
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1718
	push	0
	push	2
	call	_I
	add	esp, 4
	push	eax
	push	118					; 00000076H
	push	OFFSET $SG87502
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	117					; 00000075H
	push	OFFSET $SG87503
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	108					; 0000006cH
	push	OFFSET $SG87504
	push	95					; 0000005fH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_radiobutton_handler
	push	OFFSET $SG87505
	call	_P
	add	esp, 4
	push	eax
	push	3
	push	0
	push	OFFSET $SG87506
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_radiobuttons
	add	esp, 68					; 00000044H
; Line 1721
	push	96					; 00000060H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87507
	call	_P
	add	esp, 4
	push	eax
	push	98					; 00000062H
	push	OFFSET $SG87508
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1724
	push	OFFSET $SG87509
	push	OFFSET $SG87510
	push	OFFSET $SG87511
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1727
	push	112					; 00000070H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_fontsel_handler
	push	OFFSET $SG87512
	call	_P
	add	esp, 4
	push	eax
	push	110					; 0000006eH
	push	OFFSET $SG87513
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_fontsel
	add	esp, 24					; 00000018H
; Line 1730
	push	OFFSET $SG87514
	push	OFFSET $SG87515
	push	OFFSET $SG87516
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1733
	push	120					; 00000078H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87517
	call	_P
	add	esp, 4
	push	eax
	push	112					; 00000070H
	push	OFFSET $SG87518
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1736
	push	OFFSET $SG87519
	push	OFFSET $SG87520
	push	OFFSET $SG87521
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1740
	push	-1
	call	_I
	add	esp, 4
	push	eax
	push	122					; 0000007aH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87522
	call	_P
	add	esp, 4
	push	eax
	push	20					; 00000014H
	push	101					; 00000065H
	push	OFFSET $SG87523
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
; Line 1745
	mov	ecx, DWORD PTR _appname
	push	ecx
	push	OFFSET $SG87524
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _str$[ebp], eax
; Line 1746
	mov	edx, DWORD PTR _str$[ebp]
	push	edx
	push	OFFSET $SG87525
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 1747
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 1750
	push	OFFSET $SG87526
	push	OFFSET $SG87527
	push	OFFSET $SG87528
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1753
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	90					; 0000005aH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87529
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	116					; 00000074H
	push	OFFSET $SG87530
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
; Line 1757
	push	1073741933				; 4000006dH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87531
	call	_P
	add	esp, 4
	push	eax
	push	105					; 00000069H
	push	OFFSET $SG87532
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1759
	push	0
	push	OFFSET $SG87534
	push	OFFSET $SG87535
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1762
	push	5
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87536
	call	_P
	add	esp, 4
	push	eax
	push	119					; 00000077H
	push	OFFSET $SG87537
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1768
	push	OFFSET $SG87538
	push	OFFSET $SG87539
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 1771
	push	OFFSET $SG87540
	push	OFFSET $SG87541
	push	OFFSET $SG87542
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1774
	push	0
	call	_P
	add	esp, 4
	push	eax
	push	0
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _codepage_handler
	push	OFFSET $SG87545
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	114					; 00000072H
	push	OFFSET $SG87546
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_combobox
	add	esp, 32					; 00000020H
; Line 1776
	push	0
	push	OFFSET $SG87548
	push	OFFSET $SG87549
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1779
	push	141					; 0000008dH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87550
	call	_P
	add	esp, 4
	push	eax
	push	119					; 00000077H
	push	OFFSET $SG87551
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1781
	mov	eax, DWORD PTR _appname
	push	eax
	push	OFFSET $SG87552
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _str$[ebp], eax
; Line 1782
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	push	OFFSET $SG87553
	push	OFFSET $SG87554
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1783
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 1790
	push	0
	push	3
	call	_I
	add	esp, 4
	push	eax
	push	112					; 00000070H
	push	OFFSET $SG87556
	push	4
	call	_I
	add	esp, 4
	push	eax
	push	117					; 00000075H
	push	OFFSET $SG87557
	push	139					; 0000008bH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_radiobutton_handler
	push	OFFSET $SG87558
	call	_P
	add	esp, 4
	push	eax
	push	1
	push	0
	push	OFFSET $SG87559
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_radiobuttons
	add	esp, 56					; 00000038H
; Line 1793
	push	135					; 00000087H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87560
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	OFFSET $SG87561
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1798
	push	OFFSET $SG87562
	push	OFFSET $SG87563
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 1801
	push	OFFSET $SG87564
	push	OFFSET $SG87565
	push	OFFSET $SG87566
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1804
	push	137					; 00000089H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87567
	call	_P
	add	esp, 4
	push	eax
	push	112					; 00000070H
	push	OFFSET $SG87568
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1812
	push	0
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	114					; 00000072H
	push	OFFSET $SG87570
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	110					; 0000006eH
	push	OFFSET $SG87571
	push	134					; 00000086H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_radiobutton_handler
	push	OFFSET $SG87572
	call	_P
	add	esp, 4
	push	eax
	push	2
	push	0
	push	OFFSET $SG87573
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_radiobuttons
	add	esp, 56					; 00000038H
; Line 1815
	push	OFFSET $SG87574
	push	OFFSET $SG87575
	push	OFFSET $SG87576
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1817
	push	12					; 0000000cH
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_alloc
	add	esp, 8
	mov	DWORD PTR _ccd$[ebp], eax
; Line 1820
	mov	eax, DWORD PTR _ccd$[ebp]
	push	eax
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _charclass_handler
	push	OFFSET $SG87579
	call	_P
	add	esp, 4
	push	eax
	push	101					; 00000065H
	push	OFFSET $SG87580
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_listbox
	add	esp, 24					; 00000018H
	mov	edx, DWORD PTR _ccd$[ebp]
	mov	DWORD PTR [edx], eax
; Line 1821
	mov	eax, DWORD PTR _ccd$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+40], 1
; Line 1822
	mov	edx, DWORD PTR _ccd$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+48], 4
; Line 1823
	push	4
	push	4
	call	_safemalloc
	add	esp, 8
	mov	ecx, DWORD PTR _ccd$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+52], eax
; Line 1824
	mov	eax, DWORD PTR _ccd$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR [edx], 15			; 0000000fH
; Line 1825
	mov	eax, DWORD PTR _ccd$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR [edx+4], 25			; 00000019H
; Line 1826
	mov	eax, DWORD PTR _ccd$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR [edx+8], 20			; 00000014H
; Line 1827
	mov	eax, DWORD PTR _ccd$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR [edx+12], 40			; 00000028H
; Line 1828
	push	33					; 00000021H
	push	67					; 00000043H
	push	2
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_columns
	add	esp, 16					; 00000010H
; Line 1831
	push	0
	call	_P
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ccd$[ebp]
	push	ecx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _charclass_handler
	push	OFFSET $SG87584
	call	_P
	add	esp, 4
	push	eax
	push	50					; 00000032H
	push	116					; 00000074H
	push	OFFSET $SG87585
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
	mov	ecx, DWORD PTR _ccd$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 1832
	mov	edx, DWORD PTR _ccd$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+12], 0
; Line 1835
	mov	ecx, DWORD PTR _ccd$[ebp]
	push	ecx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _charclass_handler
	push	OFFSET $SG87586
	call	_P
	add	esp, 4
	push	eax
	push	115					; 00000073H
	push	OFFSET $SG87587
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_pushbutton
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _ccd$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1836
	mov	edx, DWORD PTR _ccd$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+12], 1
; Line 1837
	push	100					; 00000064H
	push	1
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_columns
	add	esp, 12					; 0000000cH
; Line 1842
	push	OFFSET $SG87588
	push	OFFSET $SG87589
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 1845
	push	OFFSET $SG87590
	push	OFFSET $SG87591
	push	OFFSET $SG87592
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1848
	push	127					; 0000007fH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87593
	call	_P
	add	esp, 4
	push	eax
	push	105					; 00000069H
	push	OFFSET $SG87594
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1851
	push	128					; 00000080H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87595
	call	_P
	add	esp, 4
	push	eax
	push	50					; 00000032H
	push	OFFSET $SG87596
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1858
	push	0
	push	3
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87598
	push	2
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87599
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87600
	push	131					; 00000083H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_radiobutton_handler
	push	OFFSET $SG87601
	call	_P
	add	esp, 4
	push	eax
	push	3
	push	98					; 00000062H
	push	OFFSET $SG87602
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_radiobuttons
	add	esp, 56					; 00000038H
; Line 1860
	mov	ecx, DWORD PTR _appname
	push	ecx
	push	OFFSET $SG87603
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _str$[ebp], eax
; Line 1861
	mov	edx, DWORD PTR _str$[ebp]
	push	edx
	push	OFFSET $SG87604
	push	OFFSET $SG87605
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1862
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 1865
	push	OFFSET $SG87606
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET $SG87607
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_text
	add	esp, 12					; 0000000cH
; Line 1866
	push	33					; 00000021H
	push	67					; 00000043H
	push	2
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_columns
	add	esp, 16					; 00000010H
; Line 1867
	push	20					; 00000014H
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_alloc
	add	esp, 8
	mov	DWORD PTR _cd$[ebp], eax
; Line 1869
	mov	edx, DWORD PTR _cd$[ebp]
	push	edx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _colour_handler
	push	OFFSET $SG87610
	call	_P
	add	esp, 4
	push	eax
	push	117					; 00000075H
	push	OFFSET $SG87611
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_listbox
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _cd$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1870
	mov	edx, DWORD PTR _cd$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+12], 0
; Line 1871
	mov	ecx, DWORD PTR _cd$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+32], 7
; Line 1872
	push	OFFSET $SG87612
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET $SG87613
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_text
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _c$[ebp], eax
; Line 1873
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+12], 1
; Line 1875
	push	0
	call	_P
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _cd$[ebp]
	push	edx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _colour_handler
	push	OFFSET $SG87615
	call	_P
	add	esp, 4
	push	eax
	push	50					; 00000032H
	push	114					; 00000072H
	push	OFFSET $SG87616
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
	mov	ecx, DWORD PTR _cd$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 1876
	mov	edx, DWORD PTR _cd$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+12], 1
; Line 1878
	push	0
	call	_P
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _cd$[ebp]
	push	ecx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _colour_handler
	push	OFFSET $SG87618
	call	_P
	add	esp, 4
	push	eax
	push	50					; 00000032H
	push	110					; 0000006eH
	push	OFFSET $SG87619
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
	mov	ecx, DWORD PTR _cd$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1879
	mov	edx, DWORD PTR _cd$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+12], 1
; Line 1881
	push	0
	call	_P
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _cd$[ebp]
	push	ecx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _colour_handler
	push	OFFSET $SG87621
	call	_P
	add	esp, 4
	push	eax
	push	50					; 00000032H
	push	101					; 00000065H
	push	OFFSET $SG87622
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
	mov	ecx, DWORD PTR _cd$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 1882
	mov	edx, DWORD PTR _cd$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [eax+12], 1
; Line 1884
	mov	ecx, DWORD PTR _cd$[ebp]
	push	ecx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _colour_handler
	push	OFFSET $SG87623
	call	_P
	add	esp, 4
	push	eax
	push	109					; 0000006dH
	push	OFFSET $SG87624
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_pushbutton
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _cd$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 1885
	mov	edx, DWORD PTR _cd$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [eax+12], 1
; Line 1886
	push	100					; 00000064H
	push	1
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_columns
	add	esp, 12					; 0000000cH
; Line 1893
	cmp	DWORD PTR _protocol$[ebp], 0
	jl	$LN26@setup_conf
; Line 1894
	push	OFFSET $SG87626
	push	OFFSET $SG87627
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 1897
	push	OFFSET $SG87628
	push	OFFSET $SG87629
	push	OFFSET $SG87630
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1901
	push	-1
	call	_I
	add	esp, 4
	push	eax
	push	6
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87631
	call	_P
	add	esp, 4
	push	eax
	push	20					; 00000014H
	push	107					; 0000006bH
	push	OFFSET $SG87632
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
; Line 1903
	cmp	DWORD PTR _midsession$[ebp], 0
	jne	$LN25@setup_conf
; Line 1905
	push	OFFSET $SG87634
	push	OFFSET $SG87635
	push	OFFSET $SG87636
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1909
	push	7
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87637
	call	_P
	add	esp, 4
	push	eax
	push	110					; 0000006eH
	push	OFFSET $SG87638
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1913
	push	8
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87639
	call	_P
	add	esp, 4
	push	eax
	push	112					; 00000070H
	push	OFFSET $SG87640
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 1916
	push	OFFSET $SG87641
	push	OFFSET $SG87642
	push	OFFSET $SG87643
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1924
	push	0
	push	2
	call	_I
	add	esp, 4
	push	eax
	push	54					; 00000036H
	push	OFFSET $SG87646
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	52					; 00000034H
	push	OFFSET $SG87647
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	117					; 00000075H
	push	OFFSET $SG87648
	push	3
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_radiobutton_handler
	push	OFFSET $SG87649
	call	_P
	add	esp, 4
	push	eax
	push	3
	push	0
	push	0
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_radiobuttons
	add	esp, 68					; 00000044H
; Line 1930
	push	3
	call	_backend_from_proto
	add	esp, 4
	test	eax, eax
	je	SHORT $LN47@setup_conf
	mov	DWORD PTR tv2069[ebp], OFFSET $SG87651
	jmp	SHORT $LN48@setup_conf
$LN47@setup_conf:
	mov	DWORD PTR tv2069[ebp], OFFSET $SG87652
$LN48@setup_conf:
	mov	ecx, DWORD PTR tv2069[ebp]
	mov	DWORD PTR _label$87650[ebp], ecx
; Line 1932
	push	OFFSET $SG87653
	push	OFFSET $SG87654
	push	OFFSET $SG87655
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1935
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	9
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87656
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	109					; 0000006dH
	mov	eax, DWORD PTR _label$87650[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
$LN25@setup_conf:
; Line 1943
	cmp	DWORD PTR _midsession$[ebp], 0
	jne	$LN26@setup_conf
; Line 1944
	push	OFFSET $SG87658
	push	OFFSET $SG87659
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 1947
	push	OFFSET $SG87660
	push	OFFSET $SG87661
	push	OFFSET $SG87662
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1950
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	50					; 00000032H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87663
	call	_P
	add	esp, 4
	push	eax
	push	50					; 00000032H
	push	117					; 00000075H
	push	OFFSET $SG87664
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
; Line 1954
	call	_get_username
	mov	DWORD PTR _user$87665[ebp], eax
; Line 1956
	cmp	DWORD PTR _user$87665[ebp], 0
	je	SHORT $LN49@setup_conf
	mov	edx, DWORD PTR _user$87665[ebp]
	mov	DWORD PTR tv2147[ebp], edx
	jmp	SHORT $LN50@setup_conf
$LN49@setup_conf:
	mov	DWORD PTR tv2147[ebp], OFFSET $SG87667
$LN50@setup_conf:
	mov	eax, DWORD PTR tv2147[ebp]
	push	eax
	push	OFFSET $SG87668
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _userlabel$87666[ebp], eax
; Line 1957
	mov	ecx, DWORD PTR _user$87665[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 1964
	push	0
	push	1
	call	_I
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _userlabel$87666[ebp]
	push	edx
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87670
	push	51					; 00000033H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_radiobutton_handler
	push	OFFSET $SG87671
	call	_P
	add	esp, 4
	push	eax
	push	4
	push	110					; 0000006eH
	push	OFFSET $SG87672
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_radiobuttons
	add	esp, 48					; 00000030H
; Line 1965
	mov	ecx, DWORD PTR _userlabel$87666[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 1969
	push	OFFSET $SG87673
	push	OFFSET $SG87674
	push	OFFSET $SG87675
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1972
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	46					; 0000002eH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87676
	call	_P
	add	esp, 4
	push	eax
	push	50					; 00000032H
	push	116					; 00000074H
	push	OFFSET $SG87677
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
; Line 1975
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	47					; 0000002fH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87678
	call	_P
	add	esp, 4
	push	eax
	push	50					; 00000032H
	push	115					; 00000073H
	push	OFFSET $SG87679
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
; Line 1978
	push	OFFSET $SG87680
	push	OFFSET $SG87681
	push	OFFSET $SG87682
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1979
	push	20					; 00000014H
	push	80					; 00000050H
	push	2
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_columns
	add	esp, 16					; 00000010H
; Line 1981
	push	20					; 00000014H
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_alloc
	add	esp, 8
	mov	DWORD PTR _ed$[ebp], eax
; Line 1984
	push	0
	call	_P
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ed$[ebp]
	push	edx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _environ_handler
	push	OFFSET $SG87686
	call	_P
	add	esp, 4
	push	eax
	push	60					; 0000003cH
	push	118					; 00000076H
	push	OFFSET $SG87687
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
	mov	ecx, DWORD PTR _ed$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1985
	mov	edx, DWORD PTR _ed$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+12], 0
; Line 1988
	push	0
	call	_P
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ed$[ebp]
	push	ecx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _environ_handler
	push	OFFSET $SG87689
	call	_P
	add	esp, 4
	push	eax
	push	60					; 0000003cH
	push	108					; 0000006cH
	push	OFFSET $SG87690
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
	mov	ecx, DWORD PTR _ed$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 1989
	mov	edx, DWORD PTR _ed$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+12], 0
; Line 1992
	mov	ecx, DWORD PTR _ed$[ebp]
	push	ecx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _environ_handler
	push	OFFSET $SG87691
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	OFFSET $SG87692
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_pushbutton
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _ed$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1993
	mov	edx, DWORD PTR _ed$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+12], 1
; Line 1996
	mov	ecx, DWORD PTR _ed$[ebp]
	push	ecx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _environ_handler
	push	OFFSET $SG87693
	call	_P
	add	esp, 4
	push	eax
	push	114					; 00000072H
	push	OFFSET $SG87694
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_pushbutton
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _ed$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 1997
	mov	edx, DWORD PTR _ed$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [eax+12], 1
; Line 1998
	push	100					; 00000064H
	push	1
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_columns
	add	esp, 12					; 0000000cH
; Line 2001
	mov	edx, DWORD PTR _ed$[ebp]
	push	edx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _environ_handler
	push	OFFSET $SG87696
	call	_P
	add	esp, 4
	push	eax
	push	0
	push	0
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_listbox
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _ed$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 2002
	mov	edx, DWORD PTR _ed$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [eax+32], 3
; Line 2003
	mov	ecx, DWORD PTR _ed$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [edx+48], 2
; Line 2004
	push	4
	push	2
	call	_safemalloc
	add	esp, 8
	mov	ecx, DWORD PTR _ed$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [edx+52], eax
; Line 2005
	mov	eax, DWORD PTR _ed$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR [edx], 30			; 0000001eH
; Line 2006
	mov	eax, DWORD PTR _ed$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR [edx+4], 70			; 00000046H
$LN26@setup_conf:
; Line 2011
	cmp	DWORD PTR _midsession$[ebp], 0
	jne	$LN23@setup_conf
; Line 2016
	push	OFFSET $SG87700
	push	OFFSET $SG87701
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 2018
	push	0
	push	OFFSET $SG87703
	push	OFFSET $SG87704
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2028
	push	0
	push	4
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87706
	push	3
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87707
	push	2
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87708
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87709
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87710
	push	13					; 0000000dH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_radiobutton_handler
	push	OFFSET $SG87711
	call	_P
	add	esp, 4
	push	eax
	push	3
	push	116					; 00000074H
	push	OFFSET $SG87712
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_radiobuttons
	add	esp, 72					; 00000048H
; Line 2029
	push	20					; 00000014H
	push	80					; 00000050H
	push	2
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_columns
	add	esp, 16					; 00000010H
; Line 2033
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	14					; 0000000eH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87713
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	121					; 00000079H
	push	OFFSET $SG87714
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
	mov	DWORD PTR _c$[ebp], eax
; Line 2034
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 2039
	push	-1
	call	_I
	add	esp, 4
	push	eax
	push	15					; 0000000fH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87715
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	112					; 00000070H
	push	OFFSET $SG87716
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
	mov	DWORD PTR _c$[ebp], eax
; Line 2040
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+12], 1
; Line 2041
	push	100					; 00000064H
	push	1
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_columns
	add	esp, 12					; 0000000cH
; Line 2045
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	10					; 0000000aH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87717
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	101					; 00000065H
	push	OFFSET $SG87718
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
; Line 2049
	push	12					; 0000000cH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87719
	call	_P
	add	esp, 4
	push	eax
	push	120					; 00000078H
	push	OFFSET $SG87720
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 2056
	push	0
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87722
	push	2
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87723
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87724
	push	11					; 0000000bH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_radiobutton_handler
	push	OFFSET $SG87725
	call	_P
	add	esp, 4
	push	eax
	push	3
	push	100					; 00000064H
	push	OFFSET $SG87726
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_radiobuttons
	add	esp, 56					; 00000038H
; Line 2060
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	16					; 00000010H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87727
	call	_P
	add	esp, 4
	push	eax
	push	60					; 0000003cH
	push	117					; 00000075H
	push	OFFSET $SG87728
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
; Line 2064
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	17					; 00000011H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87729
	call	_P
	add	esp, 4
	push	eax
	push	60					; 0000003cH
	push	119					; 00000077H
	push	OFFSET $SG87730
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
	mov	DWORD PTR _c$[ebp], eax
; Line 2065
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+36], 1
; Line 2069
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	18					; 00000012H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87731
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	109					; 0000006dH
	push	OFFSET $SG87732
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
$LN23@setup_conf:
; Line 2076
	cmp	DWORD PTR _midsession$[ebp], 0
	je	SHORT $LN21@setup_conf
	cmp	DWORD PTR _protocol$[ebp], 1
	jne	$LN22@setup_conf
$LN21@setup_conf:
; Line 2081
	push	OFFSET $SG87735
	push	OFFSET $SG87736
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 2084
	push	OFFSET $SG87737
	push	OFFSET $SG87738
	push	OFFSET $SG87739
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2086
	cmp	DWORD PTR _midsession$[ebp], 0
	jne	$LN20@setup_conf
; Line 2093
	push	0
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	102					; 00000066H
	push	OFFSET $SG87742
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	98					; 00000062H
	push	OFFSET $SG87743
	push	53					; 00000035H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_radiobutton_handler
	push	OFFSET $SG87744
	call	_P
	add	esp, 4
	push	eax
	push	2
	push	0
	push	OFFSET $SG87745
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_radiobuttons
	add	esp, 56					; 00000038H
; Line 2098
	push	0
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87747
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87748
	push	54					; 00000036H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_radiobutton_handler
	push	OFFSET $SG87749
	call	_P
	add	esp, 4
	push	eax
	push	2
	push	116					; 00000074H
	push	OFFSET $SG87750
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_radiobuttons
	add	esp, 48					; 00000030H
$LN20@setup_conf:
; Line 2103
	push	76					; 0000004cH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87751
	call	_P
	add	esp, 4
	push	eax
	push	107					; 0000006bH
	push	OFFSET $SG87752
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 2107
	push	77					; 0000004dH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87753
	call	_P
	add	esp, 4
	push	eax
	push	109					; 0000006dH
	push	OFFSET $SG87754
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
$LN22@setup_conf:
; Line 2110
	cmp	DWORD PTR _midsession$[ebp], 0
	jne	SHORT $LN19@setup_conf
; Line 2116
	push	OFFSET $SG87756
	push	OFFSET $SG87757
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 2119
	push	OFFSET $SG87758
	push	OFFSET $SG87759
	push	OFFSET $SG87760
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2122
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	52					; 00000034H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87761
	call	_P
	add	esp, 4
	push	eax
	push	50					; 00000032H
	push	108					; 0000006cH
	push	OFFSET $SG87762
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
$LN19@setup_conf:
; Line 2131
	push	3
	call	_backend_from_proto
	add	esp, 4
	test	eax, eax
	je	$LN41@setup_conf
	cmp	DWORD PTR _midsession$[ebp], 0
	je	SHORT $LN17@setup_conf
	cmp	DWORD PTR _protocol$[ebp], 3
	jne	$LN41@setup_conf
$LN17@setup_conf:
; Line 2137
	push	OFFSET $SG87765
	push	OFFSET $SG87766
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 2140
	cmp	DWORD PTR _midsession$[ebp], 0
	je	SHORT $LN16@setup_conf
	cmp	DWORD PTR _protcfginfo$[ebp], 1
	je	SHORT $LN15@setup_conf
	cmp	DWORD PTR _protcfginfo$[ebp], -1
	jne	SHORT $LN16@setup_conf
$LN15@setup_conf:
; Line 2141
	push	0
	push	OFFSET $SG87770
	push	OFFSET $SG87771
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2144
	push	0
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET $SG87773
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_text
	add	esp, 12					; 0000000cH
$LN16@setup_conf:
; Line 2147
	cmp	DWORD PTR _midsession$[ebp], 0
	jne	$LN14@setup_conf
; Line 2150
	push	OFFSET $SG87775
	push	OFFSET $SG87776
	push	OFFSET $SG87777
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2153
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	19					; 00000013H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87778
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	114					; 00000072H
	push	OFFSET $SG87779
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
; Line 2155
	push	OFFSET $SG87780
	push	OFFSET $SG87781
	push	OFFSET $SG87782
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2159
	push	43					; 0000002bH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87783
	call	_P
	add	esp, 4
	push	eax
	push	110					; 0000006eH
	push	OFFSET $SG87784
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
$LN14@setup_conf:
; Line 2162
	cmp	DWORD PTR _midsession$[ebp], 0
	je	SHORT $LN12@setup_conf
	cmp	DWORD PTR _protcfginfo$[ebp], 1
	je	SHORT $LN13@setup_conf
	cmp	DWORD PTR _protcfginfo$[ebp], -1
	je	SHORT $LN13@setup_conf
$LN12@setup_conf:
; Line 2163
	push	OFFSET $SG87787
	push	OFFSET $SG87788
	push	OFFSET $SG87789
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2168
	push	22					; 00000016H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87790
	call	_P
	add	esp, 4
	push	eax
	push	101					; 00000065H
	push	OFFSET $SG87791
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
$LN13@setup_conf:
; Line 2171
	cmp	DWORD PTR _midsession$[ebp], 0
	jne	$LN11@setup_conf
; Line 2172
	push	OFFSET $SG87793
	push	OFFSET $SG87794
	push	OFFSET $SG87795
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2177
	push	164					; 000000a4H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87796
	call	_P
	add	esp, 4
	push	eax
	push	115					; 00000073H
	push	OFFSET $SG87797
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 2180
	push	OFFSET $SG87798
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET $SG87799
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_text
	add	esp, 12					; 0000000cH
; Line 2184
	push	165					; 000000a5H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87800
	call	_P
	add	esp, 4
	push	eax
	push	117					; 00000075H
	push	OFFSET $SG87801
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 2188
	push	166					; 000000a6H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87802
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	OFFSET $SG87803
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
$LN11@setup_conf:
; Line 2191
	cmp	DWORD PTR _midsession$[ebp], 0
	jne	$LN10@setup_conf
; Line 2192
	push	OFFSET $SG87805
	push	OFFSET $SG87806
	push	OFFSET $SG87807
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2201
	push	0
	push	3
	call	_I
	add	esp, 4
	push	eax
	push	121					; 00000079H
	push	OFFSET $SG87809
	push	2
	call	_I
	add	esp, 4
	push	eax
	push	50					; 00000032H
	push	OFFSET $SG87810
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	49					; 00000031H
	push	OFFSET $SG87811
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	108					; 0000006cH
	push	OFFSET $SG87812
	push	31					; 0000001fH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_radiobutton_handler
	push	OFFSET $SG87813
	call	_P
	add	esp, 4
	push	eax
	push	4
	push	0
	push	OFFSET $SG87814
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_radiobuttons
	add	esp, 80					; 00000050H
$LN10@setup_conf:
; Line 2210
	cmp	DWORD PTR _protcfginfo$[ebp], 1
	je	$LN9@setup_conf
	cmp	DWORD PTR _protcfginfo$[ebp], -1
	je	$LN9@setup_conf
; Line 2212
	push	OFFSET $SG87816
	push	OFFSET $SG87817
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 2215
	push	OFFSET $SG87818
	push	OFFSET $SG87819
	push	OFFSET $SG87820
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2218
	push	0
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _kexlist_handler
	push	OFFSET $SG87822
	call	_P
	add	esp, 4
	push	eax
	push	115					; 00000073H
	push	OFFSET $SG87823
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_draglist
	add	esp, 24					; 00000018H
	mov	DWORD PTR _c$[ebp], eax
; Line 2219
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+32], 5
; Line 2222
	push	OFFSET $SG87824
	push	OFFSET $SG87825
	push	OFFSET $SG87826
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2228
	push	-1
	call	_I
	add	esp, 4
	push	eax
	push	24					; 00000018H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87827
	call	_P
	add	esp, 4
	push	eax
	push	20					; 00000014H
	push	116					; 00000074H
	push	OFFSET $SG87828
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
; Line 2233
	push	16					; 00000010H
	call	_I
	add	esp, 4
	push	eax
	push	25					; 00000019H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87829
	call	_P
	add	esp, 4
	push	eax
	push	20					; 00000014H
	push	120					; 00000078H
	push	OFFSET $SG87830
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
; Line 2235
	push	OFFSET $SG87831
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET $SG87832
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_text
	add	esp, 12					; 0000000cH
$LN9@setup_conf:
; Line 2243
	cmp	DWORD PTR _midsession$[ebp], 0
	jne	$LN8@setup_conf
; Line 2245
	push	OFFSET $SG87834
	push	OFFSET $SG87835
	push	OFFSET $SG87836
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2247
	push	25					; 00000019H
	push	75					; 0000004bH
	push	2
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_columns
	add	esp, 16					; 00000010H
; Line 2249
	push	OFFSET $SG87837
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET $SG87838
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_text
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _c$[ebp], eax
; Line 2250
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+12], 0
; Line 2254
	push	16					; 00000010H
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_alloc
	add	esp, 8
	mov	DWORD PTR _mh$[ebp], eax
; Line 2257
	mov	eax, DWORD PTR _mh$[ebp]
	push	eax
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _manual_hostkey_handler
	push	OFFSET $SG87841
	call	_P
	add	esp, 4
	push	eax
	push	114					; 00000072H
	push	OFFSET $SG87842
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_pushbutton
	add	esp, 24					; 00000018H
	mov	edx, DWORD PTR _mh$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 2258
	mov	eax, DWORD PTR _mh$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+12], 1
; Line 2259
	mov	edx, DWORD PTR _mh$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+8], 1
; Line 2262
	mov	ecx, DWORD PTR _mh$[ebp]
	push	ecx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _manual_hostkey_handler
	push	OFFSET $SG87844
	call	_P
	add	esp, 4
	push	eax
	push	0
	push	0
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_listbox
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _mh$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 2267
	mov	edx, DWORD PTR _mh$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+32], 2
; Line 2268
	mov	ecx, DWORD PTR _mh$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+56], 0
; Line 2269
	mov	eax, DWORD PTR _mh$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_tabdelay
	add	esp, 8
; Line 2272
	push	0
	call	_P
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _mh$[ebp]
	push	eax
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _manual_hostkey_handler
	push	OFFSET $SG87846
	call	_P
	add	esp, 4
	push	eax
	push	80					; 00000050H
	push	107					; 0000006bH
	push	OFFSET $SG87847
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
	mov	edx, DWORD PTR _mh$[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 2273
	mov	eax, DWORD PTR _mh$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], 0
; Line 2276
	mov	edx, DWORD PTR _mh$[ebp]
	push	edx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _manual_hostkey_handler
	push	OFFSET $SG87848
	call	_P
	add	esp, 4
	push	eax
	push	121					; 00000079H
	push	OFFSET $SG87849
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_pushbutton
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _mh$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 2277
	mov	edx, DWORD PTR _mh$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+12], 1
; Line 2278
	push	100					; 00000064H
	push	1
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_columns
	add	esp, 12					; 0000000cH
$LN8@setup_conf:
; Line 2281
	cmp	DWORD PTR _midsession$[ebp], 0
	je	SHORT $LN6@setup_conf
	cmp	DWORD PTR _protcfginfo$[ebp], 1
	je	$LN7@setup_conf
	cmp	DWORD PTR _protcfginfo$[ebp], -1
	je	$LN7@setup_conf
$LN6@setup_conf:
; Line 2286
	push	OFFSET $SG87852
	push	OFFSET $SG87853
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 2289
	push	OFFSET $SG87854
	push	OFFSET $SG87855
	push	OFFSET $SG87856
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2292
	push	0
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _cipherlist_handler
	push	OFFSET $SG87858
	call	_P
	add	esp, 4
	push	eax
	push	115					; 00000073H
	push	OFFSET $SG87859
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_draglist
	add	esp, 24					; 00000018H
	mov	DWORD PTR _c$[ebp], eax
; Line 2293
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+32], 6
; Line 2298
	push	32					; 00000020H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87860
	call	_P
	add	esp, 4
	push	eax
	push	105					; 00000069H
	push	OFFSET $SG87861
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
$LN7@setup_conf:
; Line 2301
	cmp	DWORD PTR _midsession$[ebp], 0
	jne	$LN5@setup_conf
; Line 2307
	push	OFFSET $SG87863
	push	OFFSET $SG87864
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 2309
	push	0
	push	OFFSET $SG87866
	push	OFFSET $SG87867
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2313
	push	33					; 00000021H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87868
	call	_P
	add	esp, 4
	push	eax
	push	98					; 00000062H
	push	OFFSET $SG87869
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 2317
	push	34					; 00000022H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87870
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	OFFSET $SG87871
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 2320
	push	OFFSET $SG87872
	push	OFFSET $SG87873
	push	OFFSET $SG87874
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2324
	push	26					; 0000001aH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87875
	call	_P
	add	esp, 4
	push	eax
	push	112					; 00000070H
	push	OFFSET $SG87876
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 2328
	push	35					; 00000023H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87877
	call	_P
	add	esp, 4
	push	eax
	push	109					; 0000006dH
	push	OFFSET $SG87878
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 2332
	push	36					; 00000024H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87879
	call	_P
	add	esp, 4
	push	eax
	push	105					; 00000069H
	push	OFFSET $SG87880
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 2335
	push	OFFSET $SG87881
	push	OFFSET $SG87882
	push	OFFSET $SG87883
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2338
	push	27					; 0000001bH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87884
	call	_P
	add	esp, 4
	push	eax
	push	102					; 00000066H
	push	OFFSET $SG87885
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 2342
	push	28					; 0000001cH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87886
	call	_P
	add	esp, 4
	push	eax
	push	0
	push	OFFSET $SG87887
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 2346
	push	30					; 0000001eH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_filesel_handler
	push	OFFSET $SG87888
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET $SG87889
	push	0
	push	OFFSET $SG87890
	push	107					; 0000006bH
	push	OFFSET $SG87891
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_filesel
	add	esp, 36					; 00000024H
; Line 2354
	push	OFFSET $SG87892
	push	OFFSET $SG87893
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 2355
	push	0
	push	OFFSET $SG87895
	push	OFFSET $SG87896
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2360
	push	37					; 00000025H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87897
	call	_P
	add	esp, 4
	push	eax
	push	116					; 00000074H
	push	OFFSET $SG87898
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 2365
	push	38					; 00000026H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87899
	call	_P
	add	esp, 4
	push	eax
	push	108					; 0000006cH
	push	OFFSET $SG87900
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 2370
	cmp	DWORD PTR _ngsslibs, 1
	jle	SHORT $LN5@setup_conf
; Line 2373
	push	0
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _gsslist_handler
	push	OFFSET $SG87903
	call	_P
	add	esp, 4
	push	eax
	push	112					; 00000070H
	push	OFFSET $SG87904
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_draglist
	add	esp, 24					; 00000018H
	mov	DWORD PTR _c$[ebp], eax
; Line 2374
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _ngsslibs
	mov	DWORD PTR [eax+32], ecx
; Line 2399
	push	40					; 00000028H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_filesel_handler
	push	OFFSET $SG87905
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET $SG87906
	push	0
	push	OFFSET $SG87907
	push	115					; 00000073H
	push	OFFSET $SG87908
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_filesel
	add	esp, 36					; 00000024H
$LN5@setup_conf:
; Line 2404
	cmp	DWORD PTR _midsession$[ebp], 0
	jne	$LN3@setup_conf
; Line 2408
	push	OFFSET $SG87910
	push	OFFSET $SG87911
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 2410
	push	0
	push	OFFSET $SG87913
	push	OFFSET $SG87914
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2414
	push	21					; 00000015H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87915
	call	_P
	add	esp, 4
	push	eax
	push	112					; 00000070H
	push	OFFSET $SG87916
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 2417
	push	OFFSET $SG87917
	push	OFFSET $SG87918
	push	OFFSET $SG87919
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2419
	push	24					; 00000018H
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_alloc
	add	esp, 8
	mov	DWORD PTR _td$[ebp], eax
; Line 2420
	push	25					; 00000019H
	push	75					; 0000004bH
	push	2
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_columns
	add	esp, 16					; 00000010H
; Line 2421
	push	OFFSET $SG87922
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET $SG87923
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_text
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _c$[ebp], eax
; Line 2422
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+12], 0
; Line 2425
	mov	edx, DWORD PTR _td$[ebp]
	push	edx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _ttymodes_handler
	push	OFFSET $SG87924
	call	_P
	add	esp, 4
	push	eax
	push	114					; 00000072H
	push	OFFSET $SG87925
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_pushbutton
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _td$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 2426
	mov	edx, DWORD PTR _td$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [eax+12], 1
; Line 2427
	mov	ecx, DWORD PTR _td$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [edx+8], 1
; Line 2428
	push	100					; 00000064H
	push	1
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_columns
	add	esp, 12					; 0000000cH
; Line 2431
	mov	ecx, DWORD PTR _td$[ebp]
	push	ecx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _ttymodes_handler
	push	OFFSET $SG87927
	call	_P
	add	esp, 4
	push	eax
	push	0
	push	0
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_listbox
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _td$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 2432
	mov	edx, DWORD PTR _td$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [eax+40], 1
; Line 2433
	mov	ecx, DWORD PTR _td$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [edx+32], 4
; Line 2434
	mov	eax, DWORD PTR _td$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx+48], 2
; Line 2435
	push	4
	push	2
	call	_safemalloc
	add	esp, 8
	mov	edx, DWORD PTR _td$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+52], eax
; Line 2436
	mov	edx, DWORD PTR _td$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR [ecx], 40			; 00000028H
; Line 2437
	mov	edx, DWORD PTR _td$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR [ecx+4], 60			; 0000003cH
; Line 2438
	mov	edx, DWORD PTR _td$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_tabdelay
	add	esp, 8
; Line 2439
	push	25					; 00000019H
	push	75					; 0000004bH
	push	2
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_columns
	add	esp, 16					; 00000010H
; Line 2442
	mov	eax, DWORD PTR _td$[ebp]
	push	eax
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _ttymodes_handler
	push	OFFSET $SG87930
	call	_P
	add	esp, 4
	push	eax
	push	67					; 00000043H
	push	109					; 0000006dH
	push	OFFSET $SG87931
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_droplist
	add	esp, 28					; 0000001cH
	mov	edx, DWORD PTR _td$[ebp]
	mov	DWORD PTR [edx], eax
; Line 2443
	mov	eax, DWORD PTR _td$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+12], 0
; Line 2446
	mov	edx, DWORD PTR _td$[ebp]
	push	edx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _ttymodes_handler
	push	OFFSET $SG87932
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	OFFSET $SG87933
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_pushbutton
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _td$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 2447
	mov	edx, DWORD PTR _td$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [eax+12], 1
; Line 2448
	mov	ecx, DWORD PTR _td$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [edx+8], 1
; Line 2449
	push	100					; 00000064H
	push	1
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_columns
	add	esp, 12					; 0000000cH
; Line 2452
	push	25					; 00000019H
	push	50					; 00000032H
	push	25					; 00000019H
	push	3
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_columns
	add	esp, 20					; 00000014H
; Line 2453
	push	OFFSET $SG87934
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET $SG87935
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_text
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _c$[ebp], eax
; Line 2454
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 2460
	push	0
	push	0
	call	_P
	add	esp, 4
	push	eax
	push	0
	push	OFFSET $SG87940
	push	0
	call	_P
	add	esp, 4
	push	eax
	push	0
	push	OFFSET $SG87941
	mov	ecx, DWORD PTR _td$[ebp]
	push	ecx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _ttymodes_handler
	push	OFFSET $SG87942
	call	_P
	add	esp, 4
	push	eax
	push	2
	push	0
	push	0
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_radiobuttons
	add	esp, 56					; 00000038H
	mov	ecx, DWORD PTR _td$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 2461
	mov	edx, DWORD PTR _td$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+12], 1
; Line 2464
	push	0
	call	_P
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _td$[ebp]
	push	ecx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _ttymodes_handler
	push	OFFSET $SG87945
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	0
	push	0
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
	mov	ecx, DWORD PTR _td$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 2465
	mov	edx, DWORD PTR _td$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+12], 2
; Line 2466
	mov	ecx, DWORD PTR _td$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_tabdelay
	add	esp, 8
$LN3@setup_conf:
; Line 2470
	cmp	DWORD PTR _midsession$[ebp], 0
	jne	$LN2@setup_conf
; Line 2475
	push	OFFSET $SG87947
	push	OFFSET $SG87948
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 2477
	push	OFFSET $SG87949
	push	OFFSET $SG87950
	push	OFFSET $SG87951
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2480
	push	144					; 00000090H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87952
	call	_P
	add	esp, 4
	push	eax
	push	101					; 00000065H
	push	OFFSET $SG87953
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 2483
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	145					; 00000091H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG87954
	call	_P
	add	esp, 4
	push	eax
	push	50					; 00000032H
	push	120					; 00000078H
	push	OFFSET $SG87955
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
; Line 2489
	push	0
	push	2
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87957
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET $SG87958
	push	146					; 00000092H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_radiobutton_handler
	push	OFFSET $SG87959
	call	_P
	add	esp, 4
	push	eax
	push	2
	push	117					; 00000075H
	push	OFFSET $SG87960
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_radiobuttons
	add	esp, 48					; 00000030H
$LN2@setup_conf:
; Line 2496
	push	OFFSET $SG87961
	push	OFFSET $SG87962
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 2499
	push	OFFSET $SG87963
	push	OFFSET $SG87964
	push	OFFSET $SG87965
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2503
	push	148					; 00000094H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87966
	call	_P
	add	esp, 4
	push	eax
	push	116					; 00000074H
	push	OFFSET $SG87967
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 2507
	push	149					; 00000095H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_checkbox_handler
	push	OFFSET $SG87968
	call	_P
	add	esp, 4
	push	eax
	push	112					; 00000070H
	push	OFFSET $SG87969
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_checkbox
	add	esp, 24					; 00000018H
; Line 2509
	push	25					; 00000019H
	push	20					; 00000014H
	push	55					; 00000037H
	push	3
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_columns
	add	esp, 20					; 00000014H
; Line 2510
	push	OFFSET $SG87970
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET $SG87971
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_text
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _c$[ebp], eax
; Line 2511
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+12], 65536		; 00010000H
; Line 2514
	push	28					; 0000001cH
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_alloc
	add	esp, 8
	mov	DWORD PTR _pfd$[ebp], eax
; Line 2517
	mov	edx, DWORD PTR _pfd$[ebp]
	push	edx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _portfwd_handler
	push	OFFSET $SG87974
	call	_P
	add	esp, 4
	push	eax
	push	114					; 00000072H
	push	OFFSET $SG87975
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_pushbutton
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _pfd$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 2518
	mov	edx, DWORD PTR _pfd$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+12], 2
; Line 2519
	mov	ecx, DWORD PTR _pfd$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+8], 1
; Line 2522
	mov	eax, DWORD PTR _pfd$[ebp]
	push	eax
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _portfwd_handler
	push	OFFSET $SG87977
	call	_P
	add	esp, 4
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_listbox
	add	esp, 24					; 00000018H
	mov	edx, DWORD PTR _pfd$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 2523
	mov	eax, DWORD PTR _pfd$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+32], 3
; Line 2524
	mov	edx, DWORD PTR _pfd$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+48], 2
; Line 2525
	push	4
	push	2
	call	_safemalloc
	add	esp, 8
	mov	ecx, DWORD PTR _pfd$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+52], eax
; Line 2526
	mov	eax, DWORD PTR _pfd$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR [edx], 20			; 00000014H
; Line 2527
	mov	eax, DWORD PTR _pfd$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR [edx+4], 80			; 00000050H
; Line 2528
	mov	eax, DWORD PTR _pfd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_tabdelay
	add	esp, 8
; Line 2529
	push	OFFSET $SG87980
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET $SG87981
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_text
	add	esp, 12					; 0000000cH
; Line 2534
	mov	ecx, DWORD PTR _pfd$[ebp]
	push	ecx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _portfwd_handler
	push	OFFSET $SG87982
	call	_P
	add	esp, 4
	push	eax
	push	100					; 00000064H
	push	OFFSET $SG87983
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_pushbutton
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _pfd$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 2535
	mov	edx, DWORD PTR _pfd$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+12], 2
; Line 2536
	mov	ecx, DWORD PTR _pfd$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+8], 1
; Line 2539
	push	0
	call	_P
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _pfd$[ebp]
	push	eax
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _portfwd_handler
	push	OFFSET $SG87985
	call	_P
	add	esp, 4
	push	eax
	push	40					; 00000028H
	push	115					; 00000073H
	push	OFFSET $SG87986
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
	mov	edx, DWORD PTR _pfd$[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 2540
	mov	eax, DWORD PTR _pfd$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], 0
; Line 2543
	push	0
	call	_P
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _pfd$[ebp]
	push	edx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _portfwd_handler
	push	OFFSET $SG87988
	call	_P
	add	esp, 4
	push	eax
	push	67					; 00000043H
	push	105					; 00000069H
	push	OFFSET $SG87989
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
	mov	ecx, DWORD PTR _pfd$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 2550
	push	0
	push	0
	call	_P
	add	esp, 4
	push	eax
	push	121					; 00000079H
	push	OFFSET $SG87995
	push	0
	call	_P
	add	esp, 4
	push	eax
	push	109					; 0000006dH
	push	OFFSET $SG87996
	push	0
	call	_P
	add	esp, 4
	push	eax
	push	108					; 0000006cH
	push	OFFSET $SG87997
	mov	edx, DWORD PTR _pfd$[ebp]
	push	edx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _portfwd_handler
	push	OFFSET $SG87998
	call	_P
	add	esp, 4
	push	eax
	push	3
	push	0
	push	0
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_radiobuttons
	add	esp, 68					; 00000044H
	mov	ecx, DWORD PTR _pfd$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 2559
	push	0
	push	2
	call	_I
	add	esp, 4
	push	eax
	push	54					; 00000036H
	push	OFFSET $SG88001
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	52					; 00000034H
	push	OFFSET $SG88002
	push	0
	call	_I
	add	esp, 4
	push	eax
	push	117					; 00000075H
	push	OFFSET $SG88003
	mov	edx, DWORD PTR _pfd$[ebp]
	push	edx
	call	_P
	add	esp, 4
	push	eax
	push	OFFSET _portfwd_handler
	push	OFFSET $SG88004
	call	_P
	add	esp, 4
	push	eax
	push	3
	push	0
	push	0
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_radiobuttons
	add	esp, 68					; 00000044H
	mov	ecx, DWORD PTR _pfd$[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 2561
	mov	edx, DWORD PTR _pfd$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_tabdelay
	add	esp, 8
; Line 2562
	push	100					; 00000064H
	push	1
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_columns
	add	esp, 12					; 0000000cH
; Line 2564
	cmp	DWORD PTR _midsession$[ebp], 0
	jne	$LN41@setup_conf
; Line 2569
	push	OFFSET $SG88006
	push	OFFSET $SG88007
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 2572
	push	OFFSET $SG88008
	push	OFFSET $SG88009
	push	OFFSET $SG88010
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2575
	push	151					; 00000097H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _sshbug_handler
	push	OFFSET $SG88011
	call	_P
	add	esp, 4
	push	eax
	push	20					; 00000014H
	push	105					; 00000069H
	push	OFFSET $SG88012
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_droplist
	add	esp, 28					; 0000001cH
; Line 2578
	push	152					; 00000098H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _sshbug_handler
	push	OFFSET $SG88013
	call	_P
	add	esp, 4
	push	eax
	push	20					; 00000014H
	push	115					; 00000073H
	push	OFFSET $SG88014
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_droplist
	add	esp, 28					; 0000001cH
; Line 2581
	push	153					; 00000099H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _sshbug_handler
	push	OFFSET $SG88015
	call	_P
	add	esp, 4
	push	eax
	push	20					; 00000014H
	push	114					; 00000072H
	push	OFFSET $SG88016
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_droplist
	add	esp, 28					; 0000001cH
; Line 2584
	push	160					; 000000a0H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _sshbug_handler
	push	OFFSET $SG88017
	call	_P
	add	esp, 4
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	OFFSET $SG88018
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_droplist
	add	esp, 28					; 0000001cH
; Line 2587
	push	161					; 000000a1H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _sshbug_handler
	push	OFFSET $SG88019
	call	_P
	add	esp, 4
	push	eax
	push	20					; 00000014H
	push	106					; 0000006aH
	push	OFFSET $SG88020
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_droplist
	add	esp, 28					; 0000001cH
; Line 2590
	push	154					; 0000009aH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _sshbug_handler
	push	OFFSET $SG88021
	call	_P
	add	esp, 4
	push	eax
	push	20					; 00000014H
	push	109					; 0000006dH
	push	OFFSET $SG88022
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_droplist
	add	esp, 28					; 0000001cH
; Line 2593
	push	155					; 0000009bH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _sshbug_handler
	push	OFFSET $SG88023
	call	_P
	add	esp, 4
	push	eax
	push	20					; 00000014H
	push	101					; 00000065H
	push	OFFSET $SG88024
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_droplist
	add	esp, 28					; 0000001cH
; Line 2596
	push	156					; 0000009cH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _sshbug_handler
	push	OFFSET $SG88025
	call	_P
	add	esp, 4
	push	eax
	push	20					; 00000014H
	push	112					; 00000070H
	push	OFFSET $SG88026
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_droplist
	add	esp, 28					; 0000001cH
; Line 2599
	push	157					; 0000009dH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _sshbug_handler
	push	OFFSET $SG88027
	call	_P
	add	esp, 4
	push	eax
	push	20					; 00000014H
	push	110					; 0000006eH
	push	OFFSET $SG88028
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_droplist
	add	esp, 28					; 0000001cH
; Line 2602
	push	158					; 0000009eH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _sshbug_handler
	push	OFFSET $SG88029
	call	_P
	add	esp, 4
	push	eax
	push	20					; 00000014H
	push	107					; 0000006bH
	push	OFFSET $SG88030
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_droplist
	add	esp, 28					; 0000001cH
; Line 2605
	push	159					; 0000009fH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _sshbug_handler
	push	OFFSET $SG88031
	call	_P
	add	esp, 4
	push	eax
	push	20					; 00000014H
	push	120					; 00000078H
	push	OFFSET $SG88032
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_droplist
	add	esp, 28					; 0000001cH
; Line 2608
	push	162					; 000000a2H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _sshbug_handler
	push	OFFSET $SG88033
	call	_P
	add	esp, 4
	push	eax
	push	20					; 00000014H
	push	113					; 00000071H
	push	OFFSET $SG88034
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_droplist
	add	esp, 28					; 0000001cH
$LN41@setup_conf:
; Line 2611
	pop	edi
	add	esp, 80					; 00000050H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_setup_config_box ENDP
_TEXT	ENDS
EXTRN	_dlg_label_change:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_s$86380 = -8						; size = 4
_conf$ = -4						; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_config_host_handler PROC
; Line 159
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 160
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], eax
; Line 167
	cmp	DWORD PTR _event$[ebp], 0
	jne	SHORT $LN7@config_hos
; Line 168
	push	2
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	cmp	eax, 4
	jne	SHORT $LN6@config_hos
; Line 173
	push	OFFSET $SG86375
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_label_change
	add	esp, 12					; 0000000cH
; Line 174
	push	55					; 00000037H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_editbox_set
	add	esp, 12					; 0000000cH
; Line 175
	jmp	SHORT $LN5@config_hos
$LN6@config_hos:
; Line 176
	push	OFFSET $SG86377
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_label_change
	add	esp, 12					; 0000000cH
; Line 177
	push	0
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_str
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_editbox_set
	add	esp, 12					; 0000000cH
$LN5@config_hos:
; Line 178
	jmp	SHORT $LN8@config_hos
$LN7@config_hos:
; Line 179
	cmp	DWORD PTR _event$[ebp], 2
	jne	SHORT $LN8@config_hos
; Line 180
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_editbox_get
	add	esp, 8
	mov	DWORD PTR _s$86380[ebp], eax
; Line 181
	push	2
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	cmp	eax, 4
	jne	SHORT $LN2@config_hos
; Line 182
	mov	eax, DWORD PTR _s$86380[ebp]
	push	eax
	push	55					; 00000037H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_str
	add	esp, 12					; 0000000cH
; Line 183
	jmp	SHORT $LN1@config_hos
$LN2@config_hos:
; Line 184
	mov	edx, DWORD PTR _s$86380[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_str
	add	esp, 12					; 0000000cH
$LN1@config_hos:
; Line 185
	mov	ecx, DWORD PTR _s$86380[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN8@config_hos:
; Line 187
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_config_host_handler ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$86408 = -104						; size = 4
_s$86407 = -100						; size = 4
_buf$ = -92						; size = 80
_conf$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_config_port_handler PROC
; Line 191
	push	ebp
	mov	ebp, esp
	sub	esp, 104				; 00000068H
	push	edi
	lea	edi, DWORD PTR [ebp-104]
	mov	ecx, 26					; 0000001aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 192
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], eax
; Line 200
	cmp	DWORD PTR _event$[ebp], 0
	jne	$LN9@config_por
; Line 201
	push	2
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	cmp	eax, 4
	jne	SHORT $LN8@config_por
; Line 206
	push	OFFSET $SG86398
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_label_change
	add	esp, 12					; 0000000cH
; Line 207
	push	56					; 00000038H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86399
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 208
	jmp	SHORT $LN7@config_por
$LN8@config_por:
; Line 209
	push	OFFSET $SG86401
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_label_change
	add	esp, 12					; 0000000cH
; Line 210
	push	1
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@config_por
; Line 211
	push	1
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86403
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 212
	jmp	SHORT $LN7@config_por
$LN6@config_por:
; Line 214
	mov	BYTE PTR _buf$[ebp], 0
$LN7@config_por:
; Line 216
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_editbox_set
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN10@config_por
$LN9@config_por:
; Line 217
	cmp	DWORD PTR _event$[ebp], 2
	jne	SHORT $LN10@config_por
; Line 218
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_editbox_get
	add	esp, 8
	mov	DWORD PTR _s$86407[ebp], eax
; Line 219
	mov	ecx, DWORD PTR _s$86407[ebp]
	push	ecx
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _i$86408[ebp], eax
; Line 220
	mov	edx, DWORD PTR _s$86407[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 222
	push	2
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	cmp	eax, 4
	jne	SHORT $LN2@config_por
; Line 223
	mov	ecx, DWORD PTR _i$86408[ebp]
	push	ecx
	push	56					; 00000038H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 224
	jmp	SHORT $LN10@config_por
$LN2@config_por:
; Line 225
	mov	eax, DWORD PTR _i$86408[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN10@config_por:
; Line 227
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@config_por
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 104				; 00000068H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN14@config_por:
	DD	1
	DD	$LN13@config_por
$LN13@config_por:
	DD	-92					; ffffffa4H
	DD	80					; 00000050H
	DD	$LN12@config_por
$LN12@config_por:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_config_port_handler ENDP
; Function compile flags: /Odtp /RTCsu
_logtype$86470 = -12					; size = 4
_conf$ = -8						; size = 4
_button$ = -4						; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_loggingbuttons_handler PROC
; Line 294
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 296
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], eax
; Line 301
	cmp	DWORD PTR _event$[ebp], 0
	jne	SHORT $LN8@loggingbut
; Line 302
	push	115					; 00000073H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	DWORD PTR _logtype$86470[ebp], eax
; Line 304
	mov	DWORD PTR _button$[ebp], 0
	jmp	SHORT $LN7@loggingbut
$LN6@loggingbut:
	mov	edx, DWORD PTR _button$[ebp]
	add	edx, 1
	mov	DWORD PTR _button$[ebp], edx
$LN7@loggingbut:
	mov	eax, DWORD PTR _ctrl$[ebp]
	mov	ecx, DWORD PTR _button$[ebp]
	cmp	ecx, DWORD PTR [eax+36]
	jge	SHORT $LN5@loggingbut
; Line 305
	mov	edx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+48]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR _logtype$86470[ebp]
	cmp	edx, DWORD PTR [eax+ecx*4]
	jne	SHORT $LN4@loggingbut
; Line 306
	jmp	SHORT $LN5@loggingbut
$LN4@loggingbut:
; Line 309
	jmp	SHORT $LN6@loggingbut
$LN5@loggingbut:
	mov	eax, DWORD PTR _ctrl$[ebp]
	mov	ecx, DWORD PTR _button$[ebp]
	cmp	ecx, DWORD PTR [eax+36]
	jne	SHORT $LN3@loggingbut
; Line 310
	mov	DWORD PTR _button$[ebp], 0
; Line 311
	push	0
	push	115					; 00000073H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN3@loggingbut:
; Line 313
	mov	eax, DWORD PTR _button$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_radiobutton_set
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN9@loggingbut
$LN8@loggingbut:
; Line 314
	cmp	DWORD PTR _event$[ebp], 2
	jne	SHORT $LN9@loggingbut
; Line 315
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_radiobutton_get
	add	esp, 8
	mov	DWORD PTR _button$[ebp], eax
; Line 316
	cmp	DWORD PTR _button$[ebp], 0
	jl	SHORT $LN11@loggingbut
	mov	edx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR _button$[ebp]
	cmp	eax, DWORD PTR [edx+36]
	jl	SHORT $LN12@loggingbut
$LN11@loggingbut:
	push	316					; 0000013cH
	push	OFFSET $SG86479
	push	OFFSET $SG86480
	call	__wassert
	add	esp, 12					; 0000000cH
$LN12@loggingbut:
; Line 317
	mov	edx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+48]
	mov	ecx, DWORD PTR _button$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	push	edx
	push	115					; 00000073H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN9@loggingbut:
; Line 319
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_loggingbuttons_handler ENDP
; Function compile flags: /Odtp /RTCsu
_conf$ = -8						; size = 4
_button$ = -4						; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_numeric_keypad_handler PROC
; Line 323
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 325
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], eax
; Line 330
	cmp	DWORD PTR _event$[ebp], 0
	jne	SHORT $LN9@numeric_ke
; Line 331
	push	75					; 0000004bH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN8@numeric_ke
; Line 332
	mov	DWORD PTR _button$[ebp], 2
	jmp	SHORT $LN7@numeric_ke
$LN8@numeric_ke:
; Line 333
	push	74					; 0000004aH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@numeric_ke
; Line 334
	mov	DWORD PTR _button$[ebp], 1
; Line 335
	jmp	SHORT $LN7@numeric_ke
$LN6@numeric_ke:
; Line 336
	mov	DWORD PTR _button$[ebp], 0
$LN7@numeric_ke:
; Line 337
	mov	eax, DWORD PTR _ctrl$[ebp]
	mov	ecx, DWORD PTR _button$[ebp]
	cmp	ecx, DWORD PTR [eax+36]
	jl	SHORT $LN12@numeric_ke
	push	337					; 00000151H
	push	OFFSET $SG86500
	push	OFFSET $SG86501
	call	__wassert
	add	esp, 12					; 0000000cH
$LN12@numeric_ke:
; Line 338
	mov	eax, DWORD PTR _button$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_radiobutton_set
	add	esp, 12					; 0000000cH
	jmp	$LN10@numeric_ke
$LN9@numeric_ke:
; Line 339
	cmp	DWORD PTR _event$[ebp], 2
	jne	$LN10@numeric_ke
; Line 340
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_radiobutton_get
	add	esp, 8
	mov	DWORD PTR _button$[ebp], eax
; Line 341
	cmp	DWORD PTR _button$[ebp], 0
	jl	SHORT $LN13@numeric_ke
	mov	edx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR _button$[ebp]
	cmp	eax, DWORD PTR [edx+36]
	jl	SHORT $LN14@numeric_ke
$LN13@numeric_ke:
	push	341					; 00000155H
	push	OFFSET $SG86505
	push	OFFSET $SG86506
	call	__wassert
	add	esp, 12					; 0000000cH
$LN14@numeric_ke:
; Line 342
	cmp	DWORD PTR _button$[ebp], 2
	jne	SHORT $LN2@numeric_ke
; Line 343
	push	0
	push	74					; 0000004aH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 344
	push	1
	push	75					; 0000004bH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 345
	jmp	SHORT $LN10@numeric_ke
$LN2@numeric_ke:
; Line 346
	xor	ecx, ecx
	cmp	DWORD PTR _button$[ebp], 0
	setne	cl
	push	ecx
	push	74					; 0000004aH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 347
	push	0
	push	75					; 0000004bH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN10@numeric_ke:
; Line 350
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_numeric_keypad_handler ENDP
_TEXT	ENDS
EXTRN	_conf_set_int_int:PROC
EXTRN	_dlg_listbox_getid:PROC
EXTRN	_dlg_update_done:PROC
EXTRN	_dlg_listbox_addwithid:PROC
EXTRN	_conf_get_int_int:PROC
EXTRN	_dlg_listbox_clear:PROC
EXTRN	_dlg_update_start:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$86547 = -24						; size = 4
_cstr$86539 = -20					; size = 4
_j$86538 = -16						; size = 4
_c$86537 = -12						; size = 4
_i$86522 = -8						; size = 4
_conf$ = -4						; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_cipherlist_handler PROC
; Line 354
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 355
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], eax
; Line 356
	cmp	DWORD PTR _event$[ebp], 0
	jne	$LN13@cipherlist
; Line 370
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_update_start
	add	esp, 8
; Line 371
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_listbox_clear
	add	esp, 8
; Line 372
	mov	DWORD PTR _i$86522[ebp], 0
	jmp	SHORT $LN12@cipherlist
$LN11@cipherlist:
	mov	edx, DWORD PTR _i$86522[ebp]
	add	edx, 1
	mov	DWORD PTR _i$86522[ebp], edx
$LN12@cipherlist:
	cmp	DWORD PTR _i$86522[ebp], 6
	jge	SHORT $LN10@cipherlist
; Line 373
	mov	eax, DWORD PTR _i$86522[ebp]
	push	eax
	push	29					; 0000001dH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _c$86537[ebp], eax
; Line 375
	mov	DWORD PTR _cstr$86539[ebp], 0
; Line 376
	mov	DWORD PTR _j$86538[ebp], 0
	jmp	SHORT $LN9@cipherlist
$LN8@cipherlist:
	mov	edx, DWORD PTR _j$86538[ebp]
	add	edx, 1
	mov	DWORD PTR _j$86538[ebp], edx
$LN9@cipherlist:
	cmp	DWORD PTR _j$86538[ebp], 6
	jae	SHORT $LN7@cipherlist
; Line 377
	mov	eax, DWORD PTR _j$86538[ebp]
	mov	ecx, DWORD PTR ?ciphers@?2??cipherlist_handler@@9@9[eax*8+4]
	cmp	ecx, DWORD PTR _c$86537[ebp]
	jne	SHORT $LN6@cipherlist
; Line 378
	mov	edx, DWORD PTR _j$86538[ebp]
	mov	eax, DWORD PTR ?ciphers@?2??cipherlist_handler@@9@9[edx*8]
	mov	DWORD PTR _cstr$86539[ebp], eax
; Line 379
	jmp	SHORT $LN7@cipherlist
$LN6@cipherlist:
; Line 381
	jmp	SHORT $LN8@cipherlist
$LN7@cipherlist:
; Line 382
	mov	ecx, DWORD PTR _c$86537[ebp]
	push	ecx
	mov	edx, DWORD PTR _cstr$86539[ebp]
	push	edx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_listbox_addwithid
	add	esp, 16					; 00000010H
; Line 383
	jmp	SHORT $LN11@cipherlist
$LN10@cipherlist:
; Line 384
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_update_done
	add	esp, 8
	jmp	SHORT $LN14@cipherlist
$LN13@cipherlist:
; Line 386
	cmp	DWORD PTR _event$[ebp], 2
	jne	SHORT $LN14@cipherlist
; Line 390
	mov	DWORD PTR _i$86547[ebp], 0
	jmp	SHORT $LN3@cipherlist
$LN2@cipherlist:
	mov	ecx, DWORD PTR _i$86547[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$86547[ebp], ecx
$LN3@cipherlist:
	cmp	DWORD PTR _i$86547[ebp], 6
	jge	SHORT $LN14@cipherlist
; Line 392
	mov	edx, DWORD PTR _i$86547[ebp]
	push	edx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_listbox_getid
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _i$86547[ebp]
	push	edx
	push	29					; 0000001dH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int_int
	add	esp, 16					; 00000010H
	jmp	SHORT $LN2@cipherlist
$LN14@cipherlist:
; Line 394
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_cipherlist_handler ENDP
_TEXT	ENDS
EXTRN	_gsslibnames:BYTE
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$86574 = -16						; size = 4
_id$86568 = -12						; size = 4
_i$86564 = -8						; size = 4
_conf$ = -4						; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_gsslist_handler PROC
; Line 399
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 400
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], eax
; Line 401
	cmp	DWORD PTR _event$[ebp], 0
	jne	$LN9@gsslist_ha
; Line 404
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_update_start
	add	esp, 8
; Line 405
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_listbox_clear
	add	esp, 8
; Line 406
	mov	DWORD PTR _i$86564[ebp], 0
	jmp	SHORT $LN8@gsslist_ha
$LN7@gsslist_ha:
	mov	edx, DWORD PTR _i$86564[ebp]
	add	edx, 1
	mov	DWORD PTR _i$86564[ebp], edx
$LN8@gsslist_ha:
	mov	eax, DWORD PTR _i$86564[ebp]
	cmp	eax, DWORD PTR _ngsslibs
	jge	SHORT $LN6@gsslist_ha
; Line 407
	mov	ecx, DWORD PTR _i$86564[ebp]
	push	ecx
	push	39					; 00000027H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _id$86568[ebp], eax
; Line 408
	cmp	DWORD PTR _id$86568[ebp], 0
	jl	SHORT $LN12@gsslist_ha
	mov	eax, DWORD PTR _id$86568[ebp]
	cmp	eax, DWORD PTR _ngsslibs
	jl	SHORT $LN13@gsslist_ha
$LN12@gsslist_ha:
	push	408					; 00000198H
	push	OFFSET $SG86570
	push	OFFSET $SG86571
	call	__wassert
	add	esp, 12					; 0000000cH
$LN13@gsslist_ha:
; Line 409
	mov	edx, DWORD PTR _id$86568[ebp]
	push	edx
	mov	eax, DWORD PTR _id$86568[ebp]
	mov	ecx, DWORD PTR _gsslibnames[eax*4]
	push	ecx
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_listbox_addwithid
	add	esp, 16					; 00000010H
; Line 410
	jmp	SHORT $LN7@gsslist_ha
$LN6@gsslist_ha:
; Line 411
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_update_done
	add	esp, 8
	jmp	SHORT $LN10@gsslist_ha
$LN9@gsslist_ha:
; Line 413
	cmp	DWORD PTR _event$[ebp], 2
	jne	SHORT $LN10@gsslist_ha
; Line 417
	mov	DWORD PTR _i$86574[ebp], 0
	jmp	SHORT $LN3@gsslist_ha
$LN2@gsslist_ha:
	mov	eax, DWORD PTR _i$86574[ebp]
	add	eax, 1
	mov	DWORD PTR _i$86574[ebp], eax
$LN3@gsslist_ha:
	mov	ecx, DWORD PTR _i$86574[ebp]
	cmp	ecx, DWORD PTR _ngsslibs
	jge	SHORT $LN10@gsslist_ha
; Line 419
	mov	edx, DWORD PTR _i$86574[ebp]
	push	edx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_listbox_getid
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _i$86574[ebp]
	push	edx
	push	39					; 00000027H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int_int
	add	esp, 16					; 00000010H
	jmp	SHORT $LN2@gsslist_ha
$LN10@gsslist_ha:
; Line 421
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_gsslist_handler ENDP
; Function compile flags: /Odtp /RTCsu
_i$86615 = -24						; size = 4
_kstr$86607 = -20					; size = 4
_j$86606 = -16						; size = 4
_k$86605 = -12						; size = 4
_i$86591 = -8						; size = 4
_conf$ = -4						; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_kexlist_handler PROC
; Line 426
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 427
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], eax
; Line 428
	cmp	DWORD PTR _event$[ebp], 0
	jne	$LN13@kexlist_ha
; Line 441
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_update_start
	add	esp, 8
; Line 442
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_listbox_clear
	add	esp, 8
; Line 443
	mov	DWORD PTR _i$86591[ebp], 0
	jmp	SHORT $LN12@kexlist_ha
$LN11@kexlist_ha:
	mov	edx, DWORD PTR _i$86591[ebp]
	add	edx, 1
	mov	DWORD PTR _i$86591[ebp], edx
$LN12@kexlist_ha:
	cmp	DWORD PTR _i$86591[ebp], 5
	jge	SHORT $LN10@kexlist_ha
; Line 444
	mov	eax, DWORD PTR _i$86591[ebp]
	push	eax
	push	23					; 00000017H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _k$86605[ebp], eax
; Line 446
	mov	DWORD PTR _kstr$86607[ebp], 0
; Line 447
	mov	DWORD PTR _j$86606[ebp], 0
	jmp	SHORT $LN9@kexlist_ha
$LN8@kexlist_ha:
	mov	edx, DWORD PTR _j$86606[ebp]
	add	edx, 1
	mov	DWORD PTR _j$86606[ebp], edx
$LN9@kexlist_ha:
	cmp	DWORD PTR _j$86606[ebp], 5
	jae	SHORT $LN7@kexlist_ha
; Line 448
	mov	eax, DWORD PTR _j$86606[ebp]
	mov	ecx, DWORD PTR ?kexes@?2??kexlist_handler@@9@9[eax*8+4]
	cmp	ecx, DWORD PTR _k$86605[ebp]
	jne	SHORT $LN6@kexlist_ha
; Line 449
	mov	edx, DWORD PTR _j$86606[ebp]
	mov	eax, DWORD PTR ?kexes@?2??kexlist_handler@@9@9[edx*8]
	mov	DWORD PTR _kstr$86607[ebp], eax
; Line 450
	jmp	SHORT $LN7@kexlist_ha
$LN6@kexlist_ha:
; Line 452
	jmp	SHORT $LN8@kexlist_ha
$LN7@kexlist_ha:
; Line 453
	mov	ecx, DWORD PTR _k$86605[ebp]
	push	ecx
	mov	edx, DWORD PTR _kstr$86607[ebp]
	push	edx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_listbox_addwithid
	add	esp, 16					; 00000010H
; Line 454
	jmp	SHORT $LN11@kexlist_ha
$LN10@kexlist_ha:
; Line 455
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_update_done
	add	esp, 8
	jmp	SHORT $LN14@kexlist_ha
$LN13@kexlist_ha:
; Line 457
	cmp	DWORD PTR _event$[ebp], 2
	jne	SHORT $LN14@kexlist_ha
; Line 461
	mov	DWORD PTR _i$86615[ebp], 0
	jmp	SHORT $LN3@kexlist_ha
$LN2@kexlist_ha:
	mov	ecx, DWORD PTR _i$86615[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$86615[ebp], ecx
$LN3@kexlist_ha:
	cmp	DWORD PTR _i$86615[ebp], 5
	jge	SHORT $LN14@kexlist_ha
; Line 463
	mov	edx, DWORD PTR _i$86615[ebp]
	push	edx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_listbox_getid
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _i$86615[ebp]
	push	edx
	push	23					; 00000017H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int_int
	add	esp, 16					; 00000010H
	jmp	SHORT $LN2@kexlist_ha
$LN14@kexlist_ha:
; Line 465
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_kexlist_handler ENDP
_TEXT	ENDS
EXTRN	_strcmp:PROC
EXTRN	_printer_finish_enum:PROC
EXTRN	_printer_get_name:PROC
EXTRN	_printer_start_enum:PROC
EXTRN	_dlg_listbox_add:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_printer$86645 = -32					; size = 4
_printer$86635 = -28					; size = 4
_pe$86634 = -24						; size = 4
_i$86633 = -20						; size = 4
_nprinters$86632 = -12					; size = 4
_conf$ = -4						; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_printerbox_handler PROC
; Line 469
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 470
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], eax
; Line 471
	cmp	DWORD PTR _event$[ebp], 0
	jne	$LN9@printerbox
; Line 476
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_update_start
	add	esp, 8
; Line 481
	mov	eax, DWORD PTR _ctrl$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN8@printerbox
; Line 482
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_listbox_clear
	add	esp, 8
; Line 483
	push	OFFSET $SG86637
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_listbox_add
	add	esp, 12					; 0000000cH
; Line 484
	lea	edx, DWORD PTR _nprinters$86632[ebp]
	push	edx
	call	_printer_start_enum
	add	esp, 4
	mov	DWORD PTR _pe$86634[ebp], eax
; Line 485
	mov	DWORD PTR _i$86633[ebp], 0
	jmp	SHORT $LN7@printerbox
$LN6@printerbox:
	mov	eax, DWORD PTR _i$86633[ebp]
	add	eax, 1
	mov	DWORD PTR _i$86633[ebp], eax
$LN7@printerbox:
	mov	ecx, DWORD PTR _i$86633[ebp]
	cmp	ecx, DWORD PTR _nprinters$86632[ebp]
	jge	SHORT $LN5@printerbox
; Line 486
	mov	edx, DWORD PTR _i$86633[ebp]
	push	edx
	mov	eax, DWORD PTR _pe$86634[ebp]
	push	eax
	call	_printer_get_name
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_listbox_add
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN6@printerbox
$LN5@printerbox:
; Line 487
	mov	eax, DWORD PTR _pe$86634[ebp]
	push	eax
	call	_printer_finish_enum
	add	esp, 4
$LN8@printerbox:
; Line 489
	push	124					; 0000007cH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	mov	DWORD PTR _printer$86635[ebp], eax
; Line 490
	cmp	DWORD PTR _printer$86635[ebp], 0
	jne	SHORT $LN4@printerbox
; Line 491
	mov	DWORD PTR _printer$86635[ebp], OFFSET $SG86642
$LN4@printerbox:
; Line 492
	mov	edx, DWORD PTR _printer$86635[ebp]
	push	edx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_editbox_set
	add	esp, 12					; 0000000cH
; Line 493
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_update_done
	add	esp, 8
	jmp	SHORT $LN10@printerbox
$LN9@printerbox:
; Line 494
	cmp	DWORD PTR _event$[ebp], 2
	jne	SHORT $LN10@printerbox
; Line 495
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_editbox_get
	add	esp, 8
	mov	DWORD PTR _printer$86645[ebp], eax
; Line 496
	push	OFFSET $SG86647
	mov	eax, DWORD PTR _printer$86645[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@printerbox
; Line 497
	mov	ecx, DWORD PTR _printer$86645[ebp]
	mov	BYTE PTR [ecx], 0
$LN1@printerbox:
; Line 498
	mov	edx, DWORD PTR _printer$86645[ebp]
	push	edx
	push	124					; 0000007cH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_str
	add	esp, 12					; 0000000cH
; Line 499
	mov	ecx, DWORD PTR _printer$86645[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN10@printerbox:
; Line 501
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@printerbox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN14@printerbox:
	DD	1
	DD	$LN13@printerbox
$LN13@printerbox:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN12@printerbox
$LN12@printerbox:
	DB	110					; 0000006eH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	0
_printerbox_handler ENDP
_TEXT	ENDS
EXTRN	_cp_enumerate:PROC
EXTRN	_cp_name:PROC
EXTRN	_decode_codepage:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_codepage$86670 = -20					; size = 4
_thiscp$86663 = -16					; size = 4
_cp$86662 = -12						; size = 4
_i$86661 = -8						; size = 4
_conf$ = -4						; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_codepage_handler PROC
; Line 505
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 506
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], eax
; Line 507
	cmp	DWORD PTR _event$[ebp], 0
	jne	$LN6@codepage_h
; Line 510
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_update_start
	add	esp, 8
; Line 512
	push	140					; 0000008cH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_str
	add	esp, 8
	push	eax
	call	_decode_codepage
	add	esp, 4
	push	eax
	call	_cp_name
	add	esp, 4
	mov	DWORD PTR _thiscp$86663[ebp], eax
; Line 513
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_listbox_clear
	add	esp, 8
; Line 514
	mov	DWORD PTR _i$86661[ebp], 0
	jmp	SHORT $LN5@codepage_h
$LN4@codepage_h:
	mov	eax, DWORD PTR _i$86661[ebp]
	add	eax, 1
	mov	DWORD PTR _i$86661[ebp], eax
$LN5@codepage_h:
	mov	ecx, DWORD PTR _i$86661[ebp]
	push	ecx
	call	_cp_enumerate
	add	esp, 4
	mov	DWORD PTR _cp$86662[ebp], eax
	cmp	DWORD PTR _cp$86662[ebp], 0
	je	SHORT $LN3@codepage_h
; Line 515
	mov	edx, DWORD PTR _cp$86662[ebp]
	push	edx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_listbox_add
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN4@codepage_h
$LN3@codepage_h:
; Line 516
	mov	edx, DWORD PTR _thiscp$86663[ebp]
	push	edx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_editbox_set
	add	esp, 12					; 0000000cH
; Line 517
	mov	edx, DWORD PTR _thiscp$86663[ebp]
	push	edx
	push	140					; 0000008cH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_str
	add	esp, 12					; 0000000cH
; Line 518
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_update_done
	add	esp, 8
	jmp	SHORT $LN7@codepage_h
$LN6@codepage_h:
; Line 519
	cmp	DWORD PTR _event$[ebp], 2
	jne	SHORT $LN7@codepage_h
; Line 520
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_editbox_get
	add	esp, 8
	mov	DWORD PTR _codepage$86670[ebp], eax
; Line 522
	mov	edx, DWORD PTR _codepage$86670[ebp]
	push	edx
	call	_decode_codepage
	add	esp, 4
	push	eax
	call	_cp_name
	add	esp, 4
	push	eax
	push	140					; 0000008cH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_str
	add	esp, 12					; 0000000cH
; Line 523
	mov	ecx, DWORD PTR _codepage$86670[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN7@codepage_h:
; Line 525
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_codepage_handler ENDP
_TEXT	ENDS
EXTRN	_dlg_listbox_index:PROC
EXTRN	_dlg_listbox_select:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv85 = -16						; size = 4
_i$86697 = -12						; size = 4
_oldconf$86684 = -8					; size = 4
_conf$ = -4						; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_sshbug_handler PROC
; Line 529
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 530
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], eax
; Line 531
	cmp	DWORD PTR _event$[ebp], 0
	jne	$LN10@sshbug_han
; Line 538
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	DWORD PTR _oldconf$86684[ebp], eax
; Line 539
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_update_start
	add	esp, 8
; Line 540
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_listbox_clear
	add	esp, 8
; Line 541
	push	2
	push	OFFSET $SG86685
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_listbox_addwithid
	add	esp, 16					; 00000010H
; Line 542
	push	1
	push	OFFSET $SG86686
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_listbox_addwithid
	add	esp, 16					; 00000010H
; Line 543
	push	0
	push	OFFSET $SG86687
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_listbox_addwithid
	add	esp, 16					; 00000010H
; Line 544
	mov	edx, DWORD PTR _oldconf$86684[ebp]
	mov	DWORD PTR tv85[ebp], edx
	cmp	DWORD PTR tv85[ebp], 0
	je	SHORT $LN5@sshbug_han
	cmp	DWORD PTR tv85[ebp], 1
	je	SHORT $LN6@sshbug_han
	cmp	DWORD PTR tv85[ebp], 2
	je	SHORT $LN7@sshbug_han
	jmp	SHORT $LN8@sshbug_han
$LN7@sshbug_han:
; Line 545
	push	0
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_listbox_select
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN8@sshbug_han
$LN6@sshbug_han:
; Line 546
	push	1
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_listbox_select
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN8@sshbug_han
$LN5@sshbug_han:
; Line 547
	push	2
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_listbox_select
	add	esp, 12					; 0000000cH
$LN8@sshbug_han:
; Line 549
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_update_done
	add	esp, 8
	jmp	SHORT $LN11@sshbug_han
$LN10@sshbug_han:
; Line 550
	cmp	DWORD PTR _event$[ebp], 3
	jne	SHORT $LN11@sshbug_han
; Line 551
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_listbox_index
	add	esp, 8
	mov	DWORD PTR _i$86697[ebp], eax
; Line 552
	cmp	DWORD PTR _i$86697[ebp], 0
	jge	SHORT $LN2@sshbug_han
; Line 553
	mov	DWORD PTR _i$86697[ebp], 2
; Line 554
	jmp	SHORT $LN1@sshbug_han
$LN2@sshbug_han:
; Line 555
	mov	ecx, DWORD PTR _i$86697[ebp]
	push	ecx
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_listbox_getid
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$86697[ebp], eax
$LN1@sshbug_han:
; Line 556
	mov	ecx, DWORD PTR _i$86697[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN11@sshbug_han:
; Line 558
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sshbug_handler ENDP
; Function compile flags: /Odtp /RTCsu
_ssd$ = -4						; size = 4
_ssdv$ = 8						; size = 4
_sessionsaver_data_free PROC
; Line 569
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 570
	mov	eax, DWORD PTR _ssdv$[ebp]
	mov	DWORD PTR _ssd$[ebp], eax
; Line 571
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	_safefree
	add	esp, 4
; Line 572
	mov	eax, DWORD PTR _ssd$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 573
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sessionsaver_data_free ENDP
_TEXT	ENDS
EXTRN	_conf_copy_into:PROC
EXTRN	_conf_free:PROC
EXTRN	_conf_new:PROC
EXTRN	_dlg_last_focused:PROC
EXTRN	_del_settings:PROC
EXTRN	_dlg_error_msg:PROC
EXTRN	_save_settings:PROC
EXTRN	_dlg_beep:PROC
EXTRN	_dlg_end:PROC
EXTRN	_conf_launchable:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv205 = -76						; size = 4
_mbl$86796 = -68					; size = 4
_conf2$86795 = -60					; size = 4
_i$86788 = -56						; size = 4
_errmsg$86784 = -52					; size = 4
_i$86780 = -48						; size = 4
_isdef$86777 = -44					; size = 4
_mbl$86771 = -36					; size = 4
_i$86761 = -28						; size = 4
_halfway$86760 = -24					; size = 4
_bottom$86759 = -20					; size = 4
_top$86758 = -16					; size = 4
_i$86752 = -12						; size = 4
_ssd$ = -8						; size = 4
_conf$ = -4						; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_sessionsaver_handler PROC
; Line 604
	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	edi
	lea	edi, DWORD PTR [ebp-76]
	mov	ecx, 19					; 00000013H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 605
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], eax
; Line 607
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _ssd$[ebp], edx
; Line 609
	cmp	DWORD PTR _event$[ebp], 0
	jne	$LN40@sessionsav
; Line 610
	mov	eax, DWORD PTR _ssd$[ebp]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN39@sessionsav
; Line 611
	mov	edx, DWORD PTR _ssd$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_editbox_set
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN38@sessionsav
$LN39@sessionsav:
; Line 612
	mov	eax, DWORD PTR _ssd$[ebp]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN38@sessionsav
; Line 614
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_update_start
	add	esp, 8
; Line 615
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_listbox_clear
	add	esp, 8
; Line 616
	mov	DWORD PTR _i$86752[ebp], 0
	jmp	SHORT $LN36@sessionsav
$LN35@sessionsav:
	mov	eax, DWORD PTR _i$86752[ebp]
	add	eax, 1
	mov	DWORD PTR _i$86752[ebp], eax
$LN36@sessionsav:
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	edx, DWORD PTR _i$86752[ebp]
	cmp	edx, DWORD PTR [ecx+28]
	jge	SHORT $LN34@sessionsav
; Line 617
	mov	eax, DWORD PTR _ssd$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR _i$86752[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_listbox_add
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN35@sessionsav
$LN34@sessionsav:
; Line 618
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_update_done
	add	esp, 8
$LN38@sessionsav:
; Line 619
	jmp	$LN41@sessionsav
$LN40@sessionsav:
; Line 620
	cmp	DWORD PTR _event$[ebp], 2
	jne	$LN32@sessionsav
; Line 622
	mov	edx, DWORD PTR _ssd$[ebp]
	mov	eax, DWORD PTR _ctrl$[ebp]
	cmp	eax, DWORD PTR [edx]
	jne	$LN31@sessionsav
; Line 623
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	_safefree
	add	esp, 4
; Line 624
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_editbox_get
	add	esp, 8
	mov	edx, DWORD PTR _ssd$[ebp]
	mov	DWORD PTR [edx+44], eax
; Line 625
	mov	eax, DWORD PTR _ssd$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _top$86758[ebp], ecx
; Line 626
	mov	DWORD PTR _bottom$86759[ebp], -1
$LN30@sessionsav:
; Line 627
	mov	edx, DWORD PTR _top$86758[ebp]
	sub	edx, DWORD PTR _bottom$86759[ebp]
	cmp	edx, 1
	jle	SHORT $LN29@sessionsav
; Line 628
	mov	eax, DWORD PTR _top$86758[ebp]
	add	eax, DWORD PTR _bottom$86759[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _halfway$86760[ebp], eax
; Line 629
	mov	eax, DWORD PTR _ssd$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR _halfway$86760[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	_strcmp
	add	esp, 8
	mov	DWORD PTR _i$86761[ebp], eax
; Line 630
	cmp	DWORD PTR _i$86761[ebp], 0
	jg	SHORT $LN28@sessionsav
; Line 631
	mov	eax, DWORD PTR _halfway$86760[ebp]
	mov	DWORD PTR _top$86758[ebp], eax
; Line 632
	jmp	SHORT $LN27@sessionsav
$LN28@sessionsav:
; Line 633
	mov	ecx, DWORD PTR _halfway$86760[ebp]
	mov	DWORD PTR _bottom$86759[ebp], ecx
$LN27@sessionsav:
; Line 635
	jmp	SHORT $LN30@sessionsav
$LN29@sessionsav:
; Line 636
	mov	edx, DWORD PTR _ssd$[ebp]
	mov	eax, DWORD PTR _top$86758[ebp]
	cmp	eax, DWORD PTR [edx+28]
	jne	SHORT $LN26@sessionsav
; Line 637
	mov	ecx, DWORD PTR _top$86758[ebp]
	sub	ecx, 1
	mov	DWORD PTR _top$86758[ebp], ecx
$LN26@sessionsav:
; Line 639
	mov	edx, DWORD PTR _top$86758[ebp]
	push	edx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_dlg_listbox_select
	add	esp, 12					; 0000000cH
$LN31@sessionsav:
; Line 640
	jmp	$LN41@sessionsav
$LN32@sessionsav:
; Line 641
	cmp	DWORD PTR _event$[ebp], 1
	jne	$LN41@sessionsav
; Line 642
	mov	DWORD PTR _mbl$86771[ebp], 0
; Line 645
	mov	eax, DWORD PTR _ssd$[ebp]
	cmp	DWORD PTR [eax+40], 0
	jne	SHORT $LN23@sessionsav
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	edx, DWORD PTR _ctrl$[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN22@sessionsav
	mov	eax, DWORD PTR _ssd$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN23@sessionsav
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	edx, DWORD PTR _ctrl$[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN23@sessionsav
$LN22@sessionsav:
; Line 654
	lea	eax, DWORD PTR _mbl$86771[ebp]
	push	eax
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssd$[ebp]
	push	eax
	call	_load_selected_session
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN21@sessionsav
	cmp	DWORD PTR _mbl$86771[ebp], 0
	je	SHORT $LN21@sessionsav
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	edx, DWORD PTR _ctrl$[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN21@sessionsav
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_launchable
	add	esp, 4
	test	eax, eax
	je	SHORT $LN21@sessionsav
; Line 655
	push	1
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	call	_dlg_end
	add	esp, 8
$LN21@sessionsav:
; Line 656
	jmp	$LN41@sessionsav
$LN23@sessionsav:
; Line 657
	mov	edx, DWORD PTR _ssd$[ebp]
	mov	eax, DWORD PTR _ctrl$[ebp]
	cmp	eax, DWORD PTR [edx+12]
	jne	$LN19@sessionsav
; Line 658
	push	OFFSET $SG86778
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	_strcmp
	add	esp, 8
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	DWORD PTR _isdef$86777[ebp], eax
; Line 659
	mov	eax, DWORD PTR _ssd$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	jne	$LN18@sessionsav
; Line 660
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_dlg_listbox_index
	add	esp, 8
	mov	DWORD PTR _i$86780[ebp], eax
; Line 661
	cmp	DWORD PTR _i$86780[ebp], 0
	jge	SHORT $LN17@sessionsav
; Line 662
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	call	_dlg_beep
	add	esp, 4
; Line 663
	jmp	$LN41@sessionsav
$LN17@sessionsav:
; Line 665
	push	OFFSET $SG86782
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR _i$86780[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_strcmp
	add	esp, 8
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	DWORD PTR _isdef$86777[ebp], eax
; Line 666
	mov	edx, DWORD PTR _ssd$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	_safefree
	add	esp, 4
; Line 668
	cmp	DWORD PTR _isdef$86777[ebp], 0
	je	SHORT $LN43@sessionsav
	mov	DWORD PTR tv205[ebp], OFFSET $SG86783
	jmp	SHORT $LN44@sessionsav
$LN43@sessionsav:
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR _i$86780[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR tv205[ebp], ecx
$LN44@sessionsav:
	mov	edx, DWORD PTR tv205[ebp]
	push	edx
	call	_dupstr
	add	esp, 4
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	DWORD PTR [ecx+44], eax
$LN18@sessionsav:
; Line 671
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssd$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	_save_settings
	add	esp, 8
	mov	DWORD PTR _errmsg$86784[ebp], eax
; Line 672
	cmp	DWORD PTR _errmsg$86784[ebp], 0
	je	SHORT $LN16@sessionsav
; Line 673
	mov	edx, DWORD PTR _errmsg$86784[ebp]
	push	edx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	call	_dlg_error_msg
	add	esp, 8
; Line 674
	mov	ecx, DWORD PTR _errmsg$86784[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN16@sessionsav:
; Line 677
	push	0
	mov	edx, DWORD PTR _ssd$[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	call	_get_sesslist
	add	esp, 8
; Line 678
	push	1
	mov	eax, DWORD PTR _ssd$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	call	_get_sesslist
	add	esp, 8
; Line 679
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssd$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_dlg_refresh
	add	esp, 8
; Line 680
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssd$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_dlg_refresh
	add	esp, 8
; Line 681
	jmp	$LN41@sessionsav
$LN19@sessionsav:
; Line 682
	mov	ecx, DWORD PTR _ssd$[ebp]
	cmp	DWORD PTR [ecx+40], 0
	jne	$LN14@sessionsav
	mov	edx, DWORD PTR _ssd$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	$LN14@sessionsav
	mov	eax, DWORD PTR _ssd$[ebp]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jne	SHORT $LN14@sessionsav
; Line 683
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_dlg_listbox_index
	add	esp, 8
	mov	DWORD PTR _i$86788[ebp], eax
; Line 684
	cmp	DWORD PTR _i$86788[ebp], 0
	jg	SHORT $LN13@sessionsav
; Line 685
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	call	_dlg_beep
	add	esp, 4
; Line 686
	jmp	SHORT $LN12@sessionsav
$LN13@sessionsav:
; Line 687
	mov	eax, DWORD PTR _ssd$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR _i$86788[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	_del_settings
	add	esp, 4
; Line 688
	push	0
	mov	ecx, DWORD PTR _ssd$[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	call	_get_sesslist
	add	esp, 8
; Line 689
	push	1
	mov	edx, DWORD PTR _ssd$[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	call	_get_sesslist
	add	esp, 8
; Line 690
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_dlg_refresh
	add	esp, 8
$LN12@sessionsav:
; Line 691
	jmp	$LN41@sessionsav
$LN14@sessionsav:
; Line 692
	mov	eax, DWORD PTR _ssd$[ebp]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jne	$LN10@sessionsav
; Line 693
	mov	edx, DWORD PTR _ssd$[ebp]
	cmp	DWORD PTR [edx+40], 0
	je	SHORT $LN9@sessionsav
; Line 695
	push	1
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	call	_dlg_end
	add	esp, 8
; Line 696
	jmp	$LN41@sessionsav
$LN9@sessionsav:
; Line 706
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_last_focused
	add	esp, 8
	mov	ecx, DWORD PTR _ssd$[ebp]
	cmp	eax, DWORD PTR [ecx+4]
	jne	$LN8@sessionsav
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_launchable
	add	esp, 4
	test	eax, eax
	jne	$LN8@sessionsav
; Line 707
	call	_conf_new
	mov	DWORD PTR _conf2$86795[ebp], eax
; Line 708
	mov	DWORD PTR _mbl$86796[ebp], 0
; Line 709
	lea	eax, DWORD PTR _mbl$86796[ebp]
	push	eax
	mov	ecx, DWORD PTR _conf2$86795[ebp]
	push	ecx
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssd$[ebp]
	push	eax
	call	_load_selected_session
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN7@sessionsav
; Line 710
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	call	_dlg_beep
	add	esp, 4
; Line 711
	mov	edx, DWORD PTR _conf2$86795[ebp]
	push	edx
	call	_conf_free
	add	esp, 4
; Line 712
	jmp	$LN41@sessionsav
$LN7@sessionsav:
; Line 715
	cmp	DWORD PTR _mbl$86796[ebp], 0
	je	SHORT $LN6@sessionsav
	mov	eax, DWORD PTR _conf2$86795[ebp]
	push	eax
	call	_conf_launchable
	add	esp, 4
	test	eax, eax
	je	SHORT $LN6@sessionsav
; Line 716
	mov	ecx, DWORD PTR _conf2$86795[ebp]
	push	ecx
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_copy_into
	add	esp, 8
; Line 717
	push	1
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	call	_dlg_end
	add	esp, 8
; Line 718
	jmp	SHORT $LN5@sessionsav
$LN6@sessionsav:
; Line 719
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	call	_dlg_beep
	add	esp, 4
$LN5@sessionsav:
; Line 721
	mov	edx, DWORD PTR _conf2$86795[ebp]
	push	edx
	call	_conf_free
	add	esp, 4
; Line 722
	jmp	SHORT $LN41@sessionsav
$LN8@sessionsav:
; Line 729
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_launchable
	add	esp, 4
	test	eax, eax
	je	SHORT $LN4@sessionsav
; Line 730
	push	1
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	call	_dlg_end
	add	esp, 8
; Line 731
	jmp	SHORT $LN3@sessionsav
$LN4@sessionsav:
; Line 732
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	call	_dlg_beep
	add	esp, 4
$LN3@sessionsav:
; Line 733
	jmp	SHORT $LN41@sessionsav
$LN10@sessionsav:
	mov	eax, DWORD PTR _ssd$[ebp]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	cmp	ecx, DWORD PTR [eax+24]
	jne	SHORT $LN41@sessionsav
; Line 734
	push	0
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	call	_dlg_end
	add	esp, 8
$LN41@sessionsav:
; Line 737
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN48@sessionsav
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 76					; 0000004cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN48@sessionsav:
	DD	2
	DD	$LN47@sessionsav
$LN47@sessionsav:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN45@sessionsav
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN46@sessionsav
$LN46@sessionsav:
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	0
$LN45@sessionsav:
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	0
_sessionsaver_handler ENDP
_TEXT	ENDS
EXTRN	_load_settings:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv91 = -12						; size = 4
_isdef$ = -8						; size = 4
_i$ = -4						; size = 4
_ssd$ = 8						; size = 4
_dlg$ = 12						; size = 4
_conf$ = 16						; size = 4
_maybe_launch$ = 20					; size = 4
_load_selected_session PROC
; Line 582
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 583
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_dlg_listbox_index
	add	esp, 8
	mov	DWORD PTR _i$[ebp], eax
; Line 585
	cmp	DWORD PTR _i$[ebp], 0
	jge	SHORT $LN2@load_selec
; Line 586
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	call	_dlg_beep
	add	esp, 4
; Line 587
	xor	eax, eax
	jmp	$LN3@load_selec
$LN2@load_selec:
; Line 589
	push	OFFSET $SG86730
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_strcmp
	add	esp, 8
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	DWORD PTR _isdef$[ebp], eax
; Line 590
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssd$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	_load_settings
	add	esp, 8
; Line 591
	mov	ecx, DWORD PTR _ssd$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	_safefree
	add	esp, 4
; Line 592
	cmp	DWORD PTR _isdef$[ebp], 0
	je	SHORT $LN5@load_selec
	mov	DWORD PTR tv91[ebp], OFFSET $SG86731
	jmp	SHORT $LN6@load_selec
$LN5@load_selec:
	mov	eax, DWORD PTR _ssd$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR tv91[ebp], eax
$LN6@load_selec:
	mov	ecx, DWORD PTR tv91[ebp]
	push	ecx
	call	_dupstr
	add	esp, 4
	mov	edx, DWORD PTR _ssd$[ebp]
	mov	DWORD PTR [edx+44], eax
; Line 593
	cmp	DWORD PTR _maybe_launch$[ebp], 0
	je	SHORT $LN1@load_selec
; Line 594
	xor	eax, eax
	cmp	DWORD PTR _isdef$[ebp], 0
	sete	al
	mov	ecx, DWORD PTR _maybe_launch$[ebp]
	mov	DWORD PTR [ecx], eax
$LN1@load_selec:
; Line 595
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	push	0
	call	_dlg_refresh
	add	esp, 8
; Line 598
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssd$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_dlg_listbox_select
	add	esp, 12					; 0000000cH
; Line 599
	mov	eax, 1
$LN3@load_selec:
; Line 600
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_load_selected_session ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_dlg_listbox_issel:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv81 = -140						; size = 4
_n$86835 = -136						; size = 4
_i$86834 = -132						; size = 4
_str$86833 = -128					; size = 4
_str$86828 = -120					; size = 100
_i$86824 = -16						; size = 4
_ccd$ = -12						; size = 4
_conf$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_charclass_handler PROC
; Line 745
	push	ebp
	mov	ebp, esp
	sub	esp, 140				; 0000008cH
	push	edi
	lea	edi, DWORD PTR [ebp-140]
	mov	ecx, 35					; 00000023H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 746
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], eax
; Line 748
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _ccd$[ebp], edx
; Line 750
	cmp	DWORD PTR _event$[ebp], 0
	jne	$LN12@charclass_
; Line 751
	mov	eax, DWORD PTR _ccd$[ebp]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN11@charclass_
; Line 753
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_update_start
	add	esp, 8
; Line 754
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_listbox_clear
	add	esp, 8
; Line 755
	mov	DWORD PTR _i$86824[ebp], 0
	jmp	SHORT $LN10@charclass_
$LN9@charclass_:
	mov	eax, DWORD PTR _i$86824[ebp]
	add	eax, 1
	mov	DWORD PTR _i$86824[ebp], eax
$LN10@charclass_:
	cmp	DWORD PTR _i$86824[ebp], 128		; 00000080H
	jge	SHORT $LN8@charclass_
; Line 759
	cmp	DWORD PTR _i$86824[ebp], 33		; 00000021H
	jl	SHORT $LN15@charclass_
	cmp	DWORD PTR _i$86824[ebp], 127		; 0000007fH
	je	SHORT $LN15@charclass_
	mov	ecx, DWORD PTR _i$86824[ebp]
	mov	DWORD PTR tv81[ebp], ecx
	jmp	SHORT $LN16@charclass_
$LN15@charclass_:
	mov	DWORD PTR tv81[ebp], 32			; 00000020H
$LN16@charclass_:
	mov	edx, DWORD PTR _i$86824[ebp]
	push	edx
	push	138					; 0000008aH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR tv81[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$86824[ebp]
	push	edx
	mov	eax, DWORD PTR _i$86824[ebp]
	push	eax
	push	OFFSET $SG86829
	lea	ecx, DWORD PTR _str$86828[ebp]
	push	ecx
	call	_sprintf
	add	esp, 24					; 00000018H
; Line 760
	lea	edx, DWORD PTR _str$86828[ebp]
	push	edx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_listbox_add
	add	esp, 12					; 0000000cH
; Line 761
	jmp	SHORT $LN9@charclass_
$LN8@charclass_:
; Line 762
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_update_done
	add	esp, 8
$LN11@charclass_:
; Line 763
	jmp	$LN13@charclass_
$LN12@charclass_:
; Line 764
	cmp	DWORD PTR _event$[ebp], 1
	jne	$LN13@charclass_
; Line 765
	mov	ecx, DWORD PTR _ccd$[ebp]
	mov	edx, DWORD PTR _ctrl$[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN13@charclass_
; Line 768
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ccd$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_dlg_editbox_get
	add	esp, 8
	mov	DWORD PTR _str$86833[ebp], eax
; Line 769
	mov	eax, DWORD PTR _str$86833[ebp]
	push	eax
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _n$86835[ebp], eax
; Line 770
	mov	ecx, DWORD PTR _str$86833[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 771
	mov	DWORD PTR _i$86834[ebp], 0
	jmp	SHORT $LN4@charclass_
$LN3@charclass_:
	mov	edx, DWORD PTR _i$86834[ebp]
	add	edx, 1
	mov	DWORD PTR _i$86834[ebp], edx
$LN4@charclass_:
	cmp	DWORD PTR _i$86834[ebp], 128		; 00000080H
	jge	SHORT $LN2@charclass_
; Line 772
	mov	eax, DWORD PTR _i$86834[ebp]
	push	eax
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ccd$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_dlg_listbox_issel
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN1@charclass_
; Line 773
	mov	ecx, DWORD PTR _n$86835[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$86834[ebp]
	push	edx
	push	138					; 0000008aH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int_int
	add	esp, 16					; 00000010H
$LN1@charclass_:
; Line 774
	jmp	SHORT $LN3@charclass_
$LN2@charclass_:
; Line 775
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ccd$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_dlg_refresh
	add	esp, 8
$LN13@charclass_:
; Line 778
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@charclass_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 140				; 0000008cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN19@charclass_:
	DD	1
	DD	$LN18@charclass_
$LN18@charclass_:
	DD	-120					; ffffff88H
	DD	100					; 00000064H
	DD	$LN17@charclass_
$LN17@charclass_:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_charclass_handler ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_dlg_coloursel_results:PROC
EXTRN	_dlg_coloursel_start:PROC
EXTRN	__RTC_UninitUse:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T88132 = -133						; size = 1
_buf$86931 = -128					; size = 40
_i$86923 = -84						; size = 4
_i$86918 = -80						; size = 4
_cval$86906 = -76					; size = 4
_i$86905 = -72						; size = 4
_str$86904 = -68					; size = 4
_i$86897 = -64						; size = 4
_i$86890 = -60						; size = 4
_b$ = -52						; size = 4
_g$ = -40						; size = 4
_r$ = -28						; size = 4
_clear$ = -20						; size = 4
_update$ = -16						; size = 4
_cd$ = -12						; size = 4
_conf$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_colour_handler PROC
; Line 800
	push	ebp
	mov	ebp, esp
	sub	esp, 136				; 00000088H
	push	edi
	lea	edi, DWORD PTR [ebp-136]
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	BYTE PTR $T88132[ebp], 0
; Line 801
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], eax
; Line 803
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _cd$[ebp], edx
; Line 804
	mov	DWORD PTR _update$[ebp], 0
	mov	DWORD PTR _clear$[ebp], 0
; Line 806
	cmp	DWORD PTR _event$[ebp], 0
	jne	$LN33@colour_han
; Line 807
	mov	eax, DWORD PTR _cd$[ebp]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN32@colour_han
; Line 809
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_update_start
	add	esp, 8
; Line 810
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_listbox_clear
	add	esp, 8
; Line 811
	mov	DWORD PTR _i$86890[ebp], 0
	jmp	SHORT $LN31@colour_han
$LN30@colour_han:
	mov	eax, DWORD PTR _i$86890[ebp]
	add	eax, 1
	mov	DWORD PTR _i$86890[ebp], eax
$LN31@colour_han:
	cmp	DWORD PTR _i$86890[ebp], 22		; 00000016H
	jae	SHORT $LN29@colour_han
; Line 812
	mov	ecx, DWORD PTR _i$86890[ebp]
	mov	edx, DWORD PTR _colours[ecx*4]
	push	edx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_listbox_add
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN30@colour_han
$LN29@colour_han:
; Line 813
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_update_done
	add	esp, 8
; Line 814
	mov	DWORD PTR _clear$[ebp], 1
; Line 815
	mov	DWORD PTR _update$[ebp], 1
$LN32@colour_han:
; Line 816
	jmp	$LN28@colour_han
$LN33@colour_han:
; Line 817
	cmp	DWORD PTR _event$[ebp], 3
	jne	$LN27@colour_han
; Line 818
	mov	ecx, DWORD PTR _cd$[ebp]
	mov	edx, DWORD PTR _ctrl$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jne	$LN26@colour_han
; Line 820
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_listbox_index
	add	esp, 8
	mov	DWORD PTR _i$86897[ebp], eax
; Line 821
	cmp	DWORD PTR _i$86897[ebp], 0
	jge	SHORT $LN25@colour_han
; Line 822
	mov	DWORD PTR _clear$[ebp], 1
; Line 823
	jmp	SHORT $LN24@colour_han
$LN25@colour_han:
; Line 824
	mov	DWORD PTR _clear$[ebp], 0
; Line 825
	mov	edx, DWORD PTR _i$86897[ebp]
	imul	edx, 3
	push	edx
	push	132					; 00000084H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	mov	BYTE PTR $T88132[ebp], 1
	mov	DWORD PTR _r$[ebp], eax
; Line 826
	mov	ecx, DWORD PTR _i$86897[ebp]
	imul	ecx, 3
	add	ecx, 1
	push	ecx
	push	132					; 00000084H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _g$[ebp], eax
; Line 827
	mov	eax, DWORD PTR _i$86897[ebp]
	imul	eax, 3
	add	eax, 2
	push	eax
	push	132					; 00000084H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _b$[ebp], eax
$LN24@colour_han:
; Line 829
	mov	DWORD PTR _update$[ebp], 1
$LN26@colour_han:
; Line 830
	jmp	$LN28@colour_han
$LN27@colour_han:
; Line 831
	cmp	DWORD PTR _event$[ebp], 2
	jne	$LN22@colour_han
; Line 832
	mov	edx, DWORD PTR _cd$[ebp]
	mov	eax, DWORD PTR _ctrl$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	je	SHORT $LN20@colour_han
	mov	ecx, DWORD PTR _cd$[ebp]
	mov	edx, DWORD PTR _ctrl$[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	je	SHORT $LN20@colour_han
	mov	eax, DWORD PTR _cd$[ebp]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jne	$LN21@colour_han
$LN20@colour_han:
; Line 837
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_editbox_get
	add	esp, 8
	mov	DWORD PTR _str$86904[ebp], eax
; Line 838
	mov	ecx, DWORD PTR _str$86904[ebp]
	push	ecx
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _cval$86906[ebp], eax
; Line 839
	mov	edx, DWORD PTR _str$86904[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 840
	cmp	DWORD PTR _cval$86906[ebp], 255		; 000000ffH
	jle	SHORT $LN19@colour_han
	mov	DWORD PTR _cval$86906[ebp], 255		; 000000ffH
$LN19@colour_han:
; Line 841
	cmp	DWORD PTR _cval$86906[ebp], 0
	jge	SHORT $LN18@colour_han
	mov	DWORD PTR _cval$86906[ebp], 0
$LN18@colour_han:
; Line 843
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cd$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_dlg_listbox_index
	add	esp, 8
	mov	DWORD PTR _i$86905[ebp], eax
; Line 844
	cmp	DWORD PTR _i$86905[ebp], 0
	jl	SHORT $LN21@colour_han
; Line 845
	mov	eax, DWORD PTR _cd$[ebp]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN16@colour_han
; Line 846
	mov	edx, DWORD PTR _cval$86906[ebp]
	push	edx
	mov	eax, DWORD PTR _i$86905[ebp]
	imul	eax, 3
	push	eax
	push	132					; 00000084H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int_int
	add	esp, 16					; 00000010H
	jmp	SHORT $LN21@colour_han
$LN16@colour_han:
; Line 847
	mov	edx, DWORD PTR _cd$[ebp]
	mov	eax, DWORD PTR _ctrl$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN14@colour_han
; Line 848
	mov	ecx, DWORD PTR _cval$86906[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$86905[ebp]
	imul	edx, 3
	add	edx, 1
	push	edx
	push	132					; 00000084H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int_int
	add	esp, 16					; 00000010H
	jmp	SHORT $LN21@colour_han
$LN14@colour_han:
; Line 849
	mov	ecx, DWORD PTR _cd$[ebp]
	mov	edx, DWORD PTR _ctrl$[ebp]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN21@colour_han
; Line 850
	mov	eax, DWORD PTR _cval$86906[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$86905[ebp]
	imul	ecx, 3
	add	ecx, 2
	push	ecx
	push	132					; 00000084H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int_int
	add	esp, 16					; 00000010H
$LN21@colour_han:
; Line 852
	jmp	$LN28@colour_han
$LN22@colour_han:
; Line 853
	cmp	DWORD PTR _event$[ebp], 1
	jne	$LN10@colour_han
; Line 854
	mov	eax, DWORD PTR _cd$[ebp]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jne	$LN9@colour_han
; Line 855
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _cd$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_dlg_listbox_index
	add	esp, 8
	mov	DWORD PTR _i$86918[ebp], eax
; Line 856
	cmp	DWORD PTR _i$86918[ebp], 0
	jge	SHORT $LN8@colour_han
; Line 857
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	call	_dlg_beep
	add	esp, 4
; Line 858
	jmp	$LN34@colour_han
$LN8@colour_han:
; Line 868
	mov	eax, DWORD PTR _i$86918[ebp]
	imul	eax, 3
	add	eax, 2
	push	eax
	push	132					; 00000084H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _i$86918[ebp]
	imul	edx, 3
	add	edx, 1
	push	edx
	push	132					; 00000084H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _i$86918[ebp]
	imul	ecx, 3
	push	ecx
	push	132					; 00000084H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_coloursel_start
	add	esp, 20					; 00000014H
$LN9@colour_han:
; Line 869
	jmp	$LN28@colour_han
$LN10@colour_han:
; Line 870
	cmp	DWORD PTR _event$[ebp], 4
	jne	$LN28@colour_han
; Line 871
	mov	edx, DWORD PTR _cd$[ebp]
	mov	eax, DWORD PTR _ctrl$[ebp]
	cmp	eax, DWORD PTR [edx+16]
	jne	$LN28@colour_han
; Line 872
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cd$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_dlg_listbox_index
	add	esp, 8
	mov	DWORD PTR _i$86923[ebp], eax
; Line 878
	lea	ecx, DWORD PTR _b$[ebp]
	push	ecx
	lea	edx, DWORD PTR _g$[ebp]
	push	edx
	mov	BYTE PTR $T88132[ebp], 1
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_coloursel_results
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN28@colour_han
; Line 879
	cmp	BYTE PTR $T88132[ebp], 0
	jne	SHORT $LN36@colour_han
	push	OFFSET $LN37@colour_han
	call	__RTC_UninitUse
	add	esp, 4
$LN36@colour_han:
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$86923[ebp]
	imul	ecx, 3
	push	ecx
	push	132					; 00000084H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int_int
	add	esp, 16					; 00000010H
; Line 880
	mov	eax, DWORD PTR _g$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$86923[ebp]
	imul	ecx, 3
	add	ecx, 1
	push	ecx
	push	132					; 00000084H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int_int
	add	esp, 16					; 00000010H
; Line 881
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$86923[ebp]
	imul	ecx, 3
	add	ecx, 2
	push	ecx
	push	132					; 00000084H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int_int
	add	esp, 16					; 00000010H
; Line 882
	mov	DWORD PTR _clear$[ebp], 0
; Line 883
	mov	DWORD PTR _update$[ebp], 1
$LN28@colour_han:
; Line 888
	cmp	DWORD PTR _update$[ebp], 0
	je	$LN34@colour_han
; Line 889
	cmp	DWORD PTR _clear$[ebp], 0
	je	SHORT $LN2@colour_han
; Line 890
	push	OFFSET $SG86927
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cd$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_dlg_editbox_set
	add	esp, 12					; 0000000cH
; Line 891
	push	OFFSET $SG86928
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cd$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_dlg_editbox_set
	add	esp, 12					; 0000000cH
; Line 892
	push	OFFSET $SG86929
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cd$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_dlg_editbox_set
	add	esp, 12					; 0000000cH
; Line 893
	jmp	$LN34@colour_han
$LN2@colour_han:
; Line 895
	cmp	BYTE PTR $T88132[ebp], 0
	jne	SHORT $LN38@colour_han
	push	OFFSET $LN37@colour_han
	call	__RTC_UninitUse
	add	esp, 4
$LN38@colour_han:
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	push	OFFSET $SG86932
	lea	ecx, DWORD PTR _buf$86931[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
	lea	edx, DWORD PTR _buf$86931[ebp]
	push	edx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cd$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_dlg_editbox_set
	add	esp, 12					; 0000000cH
; Line 896
	mov	eax, DWORD PTR _g$[ebp]
	push	eax
	push	OFFSET $SG86933
	lea	ecx, DWORD PTR _buf$86931[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
	lea	edx, DWORD PTR _buf$86931[ebp]
	push	edx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cd$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_dlg_editbox_set
	add	esp, 12					; 0000000cH
; Line 897
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	push	OFFSET $SG86934
	lea	ecx, DWORD PTR _buf$86931[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
	lea	edx, DWORD PTR _buf$86931[ebp]
	push	edx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cd$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_dlg_editbox_set
	add	esp, 12					; 0000000cH
$LN34@colour_han:
; Line 900
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN43@colour_han
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 136				; 00000088H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN43@colour_han:
	DD	4
	DD	$LN42@colour_han
$LN42@colour_han:
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN37@colour_han
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN39@colour_han
	DD	-52					; ffffffccH
	DD	4
	DD	$LN40@colour_han
	DD	-128					; ffffff80H
	DD	40					; 00000028H
	DD	$LN41@colour_han
$LN41@colour_han:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN40@colour_han:
	DB	98					; 00000062H
	DB	0
$LN39@colour_han:
	DB	103					; 00000067H
	DB	0
$LN37@colour_han:
	DB	114					; 00000072H
	DB	0
_colour_handler ENDP
_TEXT	ENDS
EXTRN	_conf_del_str_str:PROC
EXTRN	_conf_set_str_str:PROC
EXTRN	_ttymodes:BYTE
EXTRN	_conf_get_str_strs:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv87 = -84						; size = 4
_ind$87000 = -80					; size = 4
_multisel$86992 = -76					; size = 4
_val$86991 = -72					; size = 4
_key$86990 = -64					; size = 4
_i$86989 = -56						; size = 4
_val$86984 = -52					; size = 4
_str$86983 = -48					; size = 4
_key$86982 = -44					; size = 4
_type$86981 = -37					; size = 1
_ind$86979 = -36					; size = 4
_i$86970 = -32						; size = 4
_disp$86965 = -28					; size = 4
_val$86959 = -24					; size = 4
_key$86958 = -16					; size = 4
_td$ = -8						; size = 4
_conf$ = -4						; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_ttymodes_handler PROC
; Line 909
	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	edi
	lea	edi, DWORD PTR [ebp-84]
	mov	ecx, 21					; 00000015H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 910
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], eax
; Line 912
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _td$[ebp], edx
; Line 914
	cmp	DWORD PTR _event$[ebp], 0
	jne	$LN27@ttymodes_h
; Line 915
	mov	eax, DWORD PTR _td$[ebp]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jne	$LN26@ttymodes_h
; Line 917
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_update_start
	add	esp, 8
; Line 918
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_listbox_clear
	add	esp, 8
; Line 921
	lea	eax, DWORD PTR _key$86958[ebp]
	push	eax
	push	0
	push	48					; 00000030H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _val$86959[ebp], eax
	jmp	SHORT $LN25@ttymodes_h
$LN24@ttymodes_h:
	lea	edx, DWORD PTR _key$86958[ebp]
	push	edx
	mov	eax, DWORD PTR _key$86958[ebp]
	push	eax
	push	48					; 00000030H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _val$86959[ebp], eax
$LN25@ttymodes_h:
	cmp	DWORD PTR _val$86959[ebp], 0
	je	SHORT $LN23@ttymodes_h
; Line 923
	mov	edx, DWORD PTR _val$86959[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 65					; 00000041H
	jne	SHORT $LN30@ttymodes_h
	mov	DWORD PTR tv87[ebp], OFFSET $SG86966
	jmp	SHORT $LN31@ttymodes_h
$LN30@ttymodes_h:
	mov	ecx, DWORD PTR _val$86959[ebp]
	add	ecx, 1
	mov	DWORD PTR tv87[ebp], ecx
$LN31@ttymodes_h:
	mov	edx, DWORD PTR tv87[ebp]
	push	edx
	mov	eax, DWORD PTR _key$86958[ebp]
	push	eax
	push	OFFSET $SG86967
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _disp$86965[ebp], eax
; Line 924
	mov	ecx, DWORD PTR _disp$86965[ebp]
	push	ecx
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_listbox_add
	add	esp, 12					; 0000000cH
; Line 925
	mov	ecx, DWORD PTR _disp$86965[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 926
	jmp	SHORT $LN24@ttymodes_h
$LN23@ttymodes_h:
; Line 927
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_update_done
	add	esp, 8
	jmp	$LN22@ttymodes_h
$LN26@ttymodes_h:
; Line 928
	mov	ecx, DWORD PTR _td$[ebp]
	mov	edx, DWORD PTR _ctrl$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jne	$LN21@ttymodes_h
; Line 930
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_update_start
	add	esp, 8
; Line 931
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_listbox_clear
	add	esp, 8
; Line 932
	mov	DWORD PTR _i$86970[ebp], 0
	jmp	SHORT $LN20@ttymodes_h
$LN19@ttymodes_h:
	mov	ecx, DWORD PTR _i$86970[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$86970[ebp], ecx
$LN20@ttymodes_h:
	mov	edx, DWORD PTR _i$86970[ebp]
	cmp	DWORD PTR _ttymodes[edx*4], 0
	je	SHORT $LN18@ttymodes_h
; Line 933
	mov	eax, DWORD PTR _i$86970[ebp]
	mov	ecx, DWORD PTR _ttymodes[eax*4]
	push	ecx
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_listbox_add
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN19@ttymodes_h
$LN18@ttymodes_h:
; Line 934
	push	0
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_listbox_select
	add	esp, 12					; 0000000cH
; Line 935
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_update_done
	add	esp, 8
	jmp	SHORT $LN22@ttymodes_h
$LN21@ttymodes_h:
; Line 936
	mov	edx, DWORD PTR _td$[ebp]
	mov	eax, DWORD PTR _ctrl$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jne	SHORT $LN22@ttymodes_h
; Line 937
	push	0
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_radiobutton_set
	add	esp, 12					; 0000000cH
$LN22@ttymodes_h:
; Line 938
	jmp	$LN28@ttymodes_h
$LN27@ttymodes_h:
; Line 939
	cmp	DWORD PTR _event$[ebp], 1
	jne	$LN28@ttymodes_h
; Line 940
	mov	eax, DWORD PTR _td$[ebp]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jne	$LN13@ttymodes_h
; Line 941
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _td$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_dlg_listbox_index
	add	esp, 8
	mov	DWORD PTR _ind$86979[ebp], eax
; Line 942
	cmp	DWORD PTR _ind$86979[ebp], 0
	jl	$LN12@ttymodes_h
; Line 943
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _td$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_dlg_radiobutton_get
	add	esp, 8
	neg	eax
	sbb	eax, eax
	and	eax, 21					; 00000015H
	add	eax, 65					; 00000041H
	mov	BYTE PTR _type$86981[ebp], al
; Line 947
	mov	edx, DWORD PTR _ind$86979[ebp]
	mov	eax, DWORD PTR _ttymodes[edx*4]
	mov	DWORD PTR _key$86982[ebp], eax
; Line 948
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _td$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_dlg_editbox_get
	add	esp, 8
	mov	DWORD PTR _str$86983[ebp], eax
; Line 949
	mov	ecx, DWORD PTR _str$86983[ebp]
	push	ecx
	movsx	edx, BYTE PTR _type$86981[ebp]
	push	edx
	push	OFFSET $SG86985
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _val$86984[ebp], eax
; Line 950
	mov	eax, DWORD PTR _str$86983[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 951
	mov	ecx, DWORD PTR _val$86984[ebp]
	push	ecx
	mov	edx, DWORD PTR _key$86982[ebp]
	push	edx
	push	48					; 00000030H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_str_str
	add	esp, 16					; 00000010H
; Line 952
	mov	ecx, DWORD PTR _val$86984[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 953
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _td$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_dlg_refresh
	add	esp, 8
; Line 954
	jmp	SHORT $LN11@ttymodes_h
$LN12@ttymodes_h:
; Line 955
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	call	_dlg_beep
	add	esp, 4
$LN11@ttymodes_h:
; Line 956
	jmp	$LN28@ttymodes_h
$LN13@ttymodes_h:
	mov	eax, DWORD PTR _td$[ebp]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jne	$LN28@ttymodes_h
; Line 957
	mov	DWORD PTR _i$86989[ebp], 0
; Line 959
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _td$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_dlg_listbox_index
	add	esp, 8
	xor	edx, edx
	test	eax, eax
	setl	dl
	mov	DWORD PTR _multisel$86992[ebp], edx
; Line 962
	lea	eax, DWORD PTR _key$86990[ebp]
	push	eax
	push	0
	push	48					; 00000030H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _val$86991[ebp], eax
	jmp	SHORT $LN8@ttymodes_h
$LN7@ttymodes_h:
	lea	edx, DWORD PTR _key$86990[ebp]
	push	edx
	mov	eax, DWORD PTR _key$86990[ebp]
	push	eax
	push	48					; 00000030H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _val$86991[ebp], eax
$LN8@ttymodes_h:
	cmp	DWORD PTR _val$86991[ebp], 0
	je	$LN6@ttymodes_h
; Line 963
	mov	edx, DWORD PTR _i$86989[ebp]
	push	edx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _td$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	_dlg_listbox_issel
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN5@ttymodes_h
; Line 964
	cmp	DWORD PTR _multisel$86992[ebp], 0
	jne	$LN4@ttymodes_h
; Line 969
	mov	DWORD PTR _ind$87000[ebp], 0
; Line 970
	mov	eax, DWORD PTR _val$86991[ebp]
	add	eax, 1
	mov	DWORD PTR _val$86991[ebp], eax
$LN3@ttymodes_h:
; Line 971
	mov	ecx, DWORD PTR _ind$87000[ebp]
	cmp	DWORD PTR _ttymodes[ecx*4], 0
	je	SHORT $LN2@ttymodes_h
; Line 972
	mov	edx, DWORD PTR _key$86990[ebp]
	push	edx
	mov	eax, DWORD PTR _ind$87000[ebp]
	mov	ecx, DWORD PTR _ttymodes[eax*4]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@ttymodes_h
; Line 973
	jmp	SHORT $LN2@ttymodes_h
$LN1@ttymodes_h:
; Line 974
	mov	edx, DWORD PTR _ind$87000[ebp]
	add	edx, 1
	mov	DWORD PTR _ind$87000[ebp], edx
; Line 975
	jmp	SHORT $LN3@ttymodes_h
$LN2@ttymodes_h:
; Line 976
	mov	eax, DWORD PTR _ind$87000[ebp]
	push	eax
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _td$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_dlg_listbox_select
	add	esp, 12					; 0000000cH
; Line 978
	mov	ecx, DWORD PTR _val$86991[ebp]
	movsx	edx, BYTE PTR [ecx]
	xor	eax, eax
	cmp	edx, 86					; 00000056H
	sete	al
	push	eax
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _td$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_dlg_radiobutton_set
	add	esp, 12					; 0000000cH
; Line 979
	mov	ecx, DWORD PTR _val$86991[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _td$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_dlg_editbox_set
	add	esp, 12					; 0000000cH
$LN4@ttymodes_h:
; Line 981
	mov	edx, DWORD PTR _key$86990[ebp]
	push	edx
	push	48					; 00000030H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_del_str_str
	add	esp, 12					; 0000000cH
$LN5@ttymodes_h:
; Line 983
	mov	ecx, DWORD PTR _i$86989[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$86989[ebp], ecx
; Line 984
	jmp	$LN7@ttymodes_h
$LN6@ttymodes_h:
; Line 985
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _td$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_dlg_refresh
	add	esp, 8
$LN28@ttymodes_h:
; Line 988
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN35@ttymodes_h
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 84					; 00000054H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN35@ttymodes_h:
	DD	2
	DD	$LN34@ttymodes_h
$LN34@ttymodes_h:
	DD	-16					; fffffff0H
	DD	4
	DD	$LN32@ttymodes_h
	DD	-64					; ffffffc0H
	DD	4
	DD	$LN33@ttymodes_h
$LN33@ttymodes_h:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN32@ttymodes_h:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
_ttymodes_handler ENDP
_TEXT	ENDS
EXTRN	_conf_get_str_str:PROC
EXTRN	_conf_get_str_nthstrkey:PROC
EXTRN	_dupcat:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_val$87054 = -52					; size = 4
_key$87053 = -48					; size = 4
_i$87050 = -44						; size = 4
_str$87041 = -40					; size = 4
_val$87040 = -36					; size = 4
_key$87039 = -32					; size = 4
_p$87034 = -28						; size = 4
_val$87028 = -24					; size = 4
_key$87027 = -16					; size = 4
_ed$ = -8						; size = 4
_conf$ = -4						; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_environ_handler PROC
; Line 996
	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	push	edi
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 997
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], eax
; Line 999
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _ed$[ebp], edx
; Line 1001
	cmp	DWORD PTR _event$[ebp], 0
	jne	$LN15@environ_ha
; Line 1002
	mov	eax, DWORD PTR _ed$[ebp]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jne	$LN14@environ_ha
; Line 1004
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_update_start
	add	esp, 8
; Line 1005
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_listbox_clear
	add	esp, 8
; Line 1008
	lea	eax, DWORD PTR _key$87027[ebp]
	push	eax
	push	0
	push	49					; 00000031H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _val$87028[ebp], eax
	jmp	SHORT $LN13@environ_ha
$LN12@environ_ha:
	lea	edx, DWORD PTR _key$87027[ebp]
	push	edx
	mov	eax, DWORD PTR _key$87027[ebp]
	push	eax
	push	49					; 00000031H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _val$87028[ebp], eax
$LN13@environ_ha:
	cmp	DWORD PTR _val$87028[ebp], 0
	je	SHORT $LN11@environ_ha
; Line 1009
	mov	edx, DWORD PTR _val$87028[ebp]
	push	edx
	mov	eax, DWORD PTR _key$87027[ebp]
	push	eax
	push	OFFSET $SG87035
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _p$87034[ebp], eax
; Line 1010
	mov	ecx, DWORD PTR _p$87034[ebp]
	push	ecx
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_listbox_add
	add	esp, 12					; 0000000cH
; Line 1011
	mov	ecx, DWORD PTR _p$87034[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 1012
	jmp	SHORT $LN12@environ_ha
$LN11@environ_ha:
; Line 1013
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_update_done
	add	esp, 8
$LN14@environ_ha:
; Line 1014
	jmp	$LN16@environ_ha
$LN15@environ_ha:
; Line 1015
	cmp	DWORD PTR _event$[ebp], 1
	jne	$LN16@environ_ha
; Line 1016
	mov	ecx, DWORD PTR _ed$[ebp]
	mov	edx, DWORD PTR _ctrl$[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN8@environ_ha
; Line 1018
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ed$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_dlg_editbox_get
	add	esp, 8
	mov	DWORD PTR _key$87039[ebp], eax
; Line 1019
	mov	eax, DWORD PTR _key$87039[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN7@environ_ha
; Line 1020
	mov	edx, DWORD PTR _key$87039[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 1021
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	call	_dlg_beep
	add	esp, 4
; Line 1022
	jmp	$LN16@environ_ha
$LN7@environ_ha:
; Line 1024
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ed$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_dlg_editbox_get
	add	esp, 8
	mov	DWORD PTR _val$87040[ebp], eax
; Line 1025
	mov	ecx, DWORD PTR _val$87040[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	jne	SHORT $LN6@environ_ha
; Line 1026
	mov	eax, DWORD PTR _key$87039[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 1027
	mov	ecx, DWORD PTR _val$87040[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 1028
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	call	_dlg_beep
	add	esp, 4
; Line 1029
	jmp	$LN16@environ_ha
$LN6@environ_ha:
; Line 1031
	mov	eax, DWORD PTR _val$87040[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$87039[ebp]
	push	ecx
	push	49					; 00000031H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_str_str
	add	esp, 16					; 00000010H
; Line 1032
	push	0
	mov	eax, DWORD PTR _val$87040[ebp]
	push	eax
	push	OFFSET $SG87045
	mov	ecx, DWORD PTR _key$87039[ebp]
	push	ecx
	call	_dupcat
	add	esp, 16					; 00000010H
	mov	DWORD PTR _str$87041[ebp], eax
; Line 1033
	push	OFFSET $SG87046
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ed$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_dlg_editbox_set
	add	esp, 12					; 0000000cH
; Line 1034
	push	OFFSET $SG87047
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ed$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_dlg_editbox_set
	add	esp, 12					; 0000000cH
; Line 1035
	mov	edx, DWORD PTR _str$87041[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 1036
	mov	eax, DWORD PTR _key$87039[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 1037
	mov	ecx, DWORD PTR _val$87040[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 1038
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ed$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_dlg_refresh
	add	esp, 8
	jmp	$LN16@environ_ha
$LN8@environ_ha:
; Line 1039
	mov	edx, DWORD PTR _ed$[ebp]
	mov	eax, DWORD PTR _ctrl$[ebp]
	cmp	eax, DWORD PTR [edx+12]
	jne	$LN16@environ_ha
; Line 1040
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ed$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	call	_dlg_listbox_index
	add	esp, 8
	mov	DWORD PTR _i$87050[ebp], eax
; Line 1041
	cmp	DWORD PTR _i$87050[ebp], 0
	jge	SHORT $LN3@environ_ha
; Line 1042
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	call	_dlg_beep
	add	esp, 4
; Line 1043
	jmp	SHORT $LN2@environ_ha
$LN3@environ_ha:
; Line 1046
	mov	edx, DWORD PTR _i$87050[ebp]
	push	edx
	push	49					; 00000031H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_str_nthstrkey
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _key$87053[ebp], eax
; Line 1047
	cmp	DWORD PTR _key$87053[ebp], 0
	je	SHORT $LN2@environ_ha
; Line 1050
	mov	ecx, DWORD PTR _key$87053[ebp]
	push	ecx
	push	49					; 00000031H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_str_str
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _val$87054[ebp], eax
; Line 1051
	mov	eax, DWORD PTR _key$87053[ebp]
	push	eax
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ed$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_dlg_editbox_set
	add	esp, 12					; 0000000cH
; Line 1052
	mov	ecx, DWORD PTR _val$87054[ebp]
	push	ecx
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ed$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_dlg_editbox_set
	add	esp, 12					; 0000000cH
; Line 1054
	mov	edx, DWORD PTR _key$87053[ebp]
	push	edx
	push	49					; 00000031H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_del_str_str
	add	esp, 12					; 0000000cH
$LN2@environ_ha:
; Line 1057
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ed$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	call	_dlg_refresh
	add	esp, 8
$LN16@environ_ha:
; Line 1060
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@environ_ha
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN20@environ_ha:
	DD	1
	DD	$LN19@environ_ha
$LN19@environ_ha:
	DD	-16					; fffffff0H
	DD	4
	DD	$LN18@environ_ha
$LN18@environ_ha:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
_environ_handler ENDP
_TEXT	ENDS
EXTRN	_conf_get_str_str_opt:PROC
EXTRN	_host_strchr:PROC
EXTRN	_strchr:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv228 = -88						; size = 4
_idx$87152 = -84					; size = 4
_dir$87151 = -80					; size = 4
_afp$87150 = -76					; size = 4
_p$87142 = -72						; size = 4
_val$87141 = -68					; size = 4
_key$87140 = -64					; size = 4
_i$87137 = -60						; size = 4
_whichbutton$87107 = -56				; size = 4
_val$87106 = -52					; size = 4
_key$87105 = -48					; size = 4
_src$87104 = -44					; size = 4
_type$87103 = -40					; size = 4
_family$87102 = -36					; size = 4
_L$87090 = -32						; size = 4
_p$87087 = -28						; size = 4
_val$87081 = -24					; size = 4
_key$87080 = -16					; size = 4
_pfd$ = -8						; size = 4
_conf$ = -4						; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_portfwd_handler PROC
; Line 1072
	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	edi
	lea	edi, DWORD PTR [ebp-88]
	mov	ecx, 22					; 00000016H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1073
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], eax
; Line 1075
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _pfd$[ebp], edx
; Line 1077
	cmp	DWORD PTR _event$[ebp], 0
	jne	$LN37@portfwd_ha
; Line 1078
	mov	eax, DWORD PTR _pfd$[ebp]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	$LN36@portfwd_ha
; Line 1080
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_update_start
	add	esp, 8
; Line 1081
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_listbox_clear
	add	esp, 8
; Line 1084
	lea	eax, DWORD PTR _key$87080[ebp]
	push	eax
	push	0
	push	150					; 00000096H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _val$87081[ebp], eax
	jmp	SHORT $LN35@portfwd_ha
$LN34@portfwd_ha:
	lea	edx, DWORD PTR _key$87080[ebp]
	push	edx
	mov	eax, DWORD PTR _key$87080[ebp]
	push	eax
	push	150					; 00000096H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _val$87081[ebp], eax
$LN35@portfwd_ha:
	cmp	DWORD PTR _val$87081[ebp], 0
	je	$LN33@portfwd_ha
; Line 1086
	push	OFFSET $SG87089
	mov	edx, DWORD PTR _val$87081[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN32@portfwd_ha
; Line 1099
	mov	eax, DWORD PTR _key$87080[ebp]
	push	eax
	push	OFFSET $SG87091
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _p$87087[ebp], eax
; Line 1100
	push	76					; 0000004cH
	mov	ecx, DWORD PTR _p$87087[ebp]
	push	ecx
	call	_strchr
	add	esp, 8
	mov	DWORD PTR _L$87090[ebp], eax
; Line 1101
	cmp	DWORD PTR _L$87090[ebp], 0
	je	SHORT $LN31@portfwd_ha
	mov	edx, DWORD PTR _L$87090[ebp]
	mov	BYTE PTR [edx], 68			; 00000044H
$LN31@portfwd_ha:
; Line 1102
	jmp	SHORT $LN30@portfwd_ha
$LN32@portfwd_ha:
; Line 1103
	mov	eax, DWORD PTR _val$87081[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$87080[ebp]
	push	ecx
	push	OFFSET $SG87094
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _p$87087[ebp], eax
$LN30@portfwd_ha:
; Line 1104
	mov	edx, DWORD PTR _p$87087[ebp]
	push	edx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_listbox_add
	add	esp, 12					; 0000000cH
; Line 1105
	mov	edx, DWORD PTR _p$87087[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 1106
	jmp	$LN34@portfwd_ha
$LN33@portfwd_ha:
; Line 1107
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_update_done
	add	esp, 8
	jmp	SHORT $LN29@portfwd_ha
$LN36@portfwd_ha:
; Line 1108
	mov	edx, DWORD PTR _pfd$[ebp]
	mov	eax, DWORD PTR _ctrl$[ebp]
	cmp	eax, DWORD PTR [edx+20]
	jne	SHORT $LN28@portfwd_ha
; Line 1112
	push	0
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_radiobutton_set
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN29@portfwd_ha
$LN28@portfwd_ha:
; Line 1114
	mov	eax, DWORD PTR _pfd$[ebp]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	cmp	ecx, DWORD PTR [eax+24]
	jne	SHORT $LN29@portfwd_ha
; Line 1115
	push	0
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_radiobutton_set
	add	esp, 12					; 0000000cH
$LN29@portfwd_ha:
; Line 1117
	jmp	$LN38@portfwd_ha
$LN37@portfwd_ha:
; Line 1118
	cmp	DWORD PTR _event$[ebp], 1
	jne	$LN38@portfwd_ha
; Line 1119
	mov	ecx, DWORD PTR _pfd$[ebp]
	mov	edx, DWORD PTR _ctrl$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jne	$LN23@portfwd_ha
; Line 1124
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pfd$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	_dlg_radiobutton_get
	add	esp, 8
	mov	DWORD PTR _whichbutton$87107[ebp], eax
; Line 1125
	cmp	DWORD PTR _whichbutton$87107[ebp], 1
	jne	SHORT $LN22@portfwd_ha
; Line 1126
	mov	DWORD PTR _family$87102[ebp], OFFSET $SG87109
	jmp	SHORT $LN21@portfwd_ha
$LN22@portfwd_ha:
; Line 1127
	cmp	DWORD PTR _whichbutton$87107[ebp], 2
	jne	SHORT $LN20@portfwd_ha
; Line 1128
	mov	DWORD PTR _family$87102[ebp], OFFSET $SG87112
; Line 1129
	jmp	SHORT $LN21@portfwd_ha
$LN20@portfwd_ha:
; Line 1131
	mov	DWORD PTR _family$87102[ebp], OFFSET $SG87114
$LN21@portfwd_ha:
; Line 1133
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pfd$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	_dlg_radiobutton_get
	add	esp, 8
	mov	DWORD PTR _whichbutton$87107[ebp], eax
; Line 1134
	cmp	DWORD PTR _whichbutton$87107[ebp], 0
	jne	SHORT $LN18@portfwd_ha
; Line 1135
	mov	DWORD PTR _type$87103[ebp], OFFSET $SG87116
	jmp	SHORT $LN17@portfwd_ha
$LN18@portfwd_ha:
; Line 1136
	cmp	DWORD PTR _whichbutton$87107[ebp], 1
	jne	SHORT $LN16@portfwd_ha
; Line 1137
	mov	DWORD PTR _type$87103[ebp], OFFSET $SG87119
; Line 1138
	jmp	SHORT $LN17@portfwd_ha
$LN16@portfwd_ha:
; Line 1139
	mov	DWORD PTR _type$87103[ebp], OFFSET $SG87121
$LN17@portfwd_ha:
; Line 1141
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pfd$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_dlg_editbox_get
	add	esp, 8
	mov	DWORD PTR _src$87104[ebp], eax
; Line 1142
	mov	eax, DWORD PTR _src$87104[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN14@portfwd_ha
; Line 1143
	push	OFFSET $SG87123
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	call	_dlg_error_msg
	add	esp, 8
; Line 1144
	mov	eax, DWORD PTR _src$87104[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 1145
	jmp	$LN38@portfwd_ha
$LN14@portfwd_ha:
; Line 1147
	mov	ecx, DWORD PTR _type$87103[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 68					; 00000044H
	je	SHORT $LN13@portfwd_ha
; Line 1148
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pfd$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	_dlg_editbox_get
	add	esp, 8
	mov	DWORD PTR _val$87106[ebp], eax
; Line 1149
	mov	eax, DWORD PTR _val$87106[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN11@portfwd_ha
	push	58					; 0000003aH
	mov	edx, DWORD PTR _val$87106[ebp]
	push	edx
	call	_host_strchr
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN12@portfwd_ha
$LN11@portfwd_ha:
; Line 1152
	push	OFFSET $SG87127
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	call	_dlg_error_msg
	add	esp, 8
; Line 1153
	mov	ecx, DWORD PTR _src$87104[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 1154
	mov	edx, DWORD PTR _val$87106[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 1155
	jmp	$LN38@portfwd_ha
$LN12@portfwd_ha:
; Line 1157
	jmp	SHORT $LN10@portfwd_ha
$LN13@portfwd_ha:
; Line 1158
	mov	DWORD PTR _type$87103[ebp], OFFSET $SG87129
; Line 1159
	push	OFFSET $SG87130
	call	_dupstr
	add	esp, 4
	mov	DWORD PTR _val$87106[ebp], eax
$LN10@portfwd_ha:
; Line 1162
	push	0
	mov	eax, DWORD PTR _src$87104[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$87103[ebp]
	push	ecx
	mov	edx, DWORD PTR _family$87102[ebp]
	push	edx
	call	_dupcat
	add	esp, 16					; 00000010H
	mov	DWORD PTR _key$87105[ebp], eax
; Line 1163
	mov	eax, DWORD PTR _src$87104[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 1165
	mov	ecx, DWORD PTR _key$87105[ebp]
	push	ecx
	push	150					; 00000096H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_str_str_opt
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN9@portfwd_ha
; Line 1166
	push	OFFSET $SG87133
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	call	_dlg_error_msg
	add	esp, 8
; Line 1167
	jmp	SHORT $LN8@portfwd_ha
$LN9@portfwd_ha:
; Line 1168
	mov	ecx, DWORD PTR _val$87106[ebp]
	push	ecx
	mov	edx, DWORD PTR _key$87105[ebp]
	push	edx
	push	150					; 00000096H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_str_str
	add	esp, 16					; 00000010H
$LN8@portfwd_ha:
; Line 1171
	mov	ecx, DWORD PTR _key$87105[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 1172
	mov	edx, DWORD PTR _val$87106[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 1173
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pfd$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_dlg_refresh
	add	esp, 8
	jmp	$LN38@portfwd_ha
$LN23@portfwd_ha:
; Line 1174
	mov	eax, DWORD PTR _pfd$[ebp]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jne	$LN38@portfwd_ha
; Line 1175
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _pfd$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_dlg_listbox_index
	add	esp, 8
	mov	DWORD PTR _i$87137[ebp], eax
; Line 1176
	cmp	DWORD PTR _i$87137[ebp], 0
	jge	SHORT $LN5@portfwd_ha
; Line 1177
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	call	_dlg_beep
	add	esp, 4
; Line 1178
	jmp	$LN4@portfwd_ha
$LN5@portfwd_ha:
; Line 1181
	mov	eax, DWORD PTR _i$87137[ebp]
	push	eax
	push	150					; 00000096H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str_nthstrkey
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _key$87140[ebp], eax
; Line 1182
	cmp	DWORD PTR _key$87140[ebp], 0
	je	$LN4@portfwd_ha
; Line 1193
	mov	edx, DWORD PTR _key$87140[ebp]
	mov	DWORD PTR _p$87142[ebp], edx
; Line 1195
	mov	eax, DWORD PTR _p$87142[ebp]
	movsx	ecx, BYTE PTR [eax]
	push	ecx
	mov	edx, DWORD PTR ?afs@?BE@??portfwd_handler@@9@9
	push	edx
	call	_strchr
	add	esp, 8
	mov	DWORD PTR _afp$87150[ebp], eax
; Line 1197
	cmp	DWORD PTR _afp$87150[ebp], 0
	je	SHORT $LN40@portfwd_ha
	mov	eax, DWORD PTR _afp$87150[ebp]
	sub	eax, DWORD PTR ?afs@?BE@??portfwd_handler@@9@9
	mov	DWORD PTR tv228[ebp], eax
	jmp	SHORT $LN41@portfwd_ha
$LN40@portfwd_ha:
	mov	DWORD PTR tv228[ebp], 0
$LN41@portfwd_ha:
	mov	ecx, DWORD PTR tv228[ebp]
	mov	DWORD PTR _idx$87152[ebp], ecx
; Line 1199
	cmp	DWORD PTR _afp$87150[ebp], 0
	je	SHORT $LN2@portfwd_ha
; Line 1200
	mov	edx, DWORD PTR _p$87142[ebp]
	add	edx, 1
	mov	DWORD PTR _p$87142[ebp], edx
$LN2@portfwd_ha:
; Line 1202
	mov	eax, DWORD PTR _idx$87152[ebp]
	push	eax
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pfd$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	_dlg_radiobutton_set
	add	esp, 12					; 0000000cH
; Line 1205
	mov	ecx, DWORD PTR _p$87142[ebp]
	movsx	edx, BYTE PTR [ecx]
	mov	DWORD PTR _dir$87151[ebp], edx
; Line 1207
	mov	eax, DWORD PTR _key$87140[ebp]
	push	eax
	push	150					; 00000096H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str_str
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _val$87141[ebp], eax
; Line 1208
	push	OFFSET $SG87155
	mov	edx, DWORD PTR _val$87141[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@portfwd_ha
; Line 1209
	mov	DWORD PTR _dir$87151[ebp], 68		; 00000044H
; Line 1210
	mov	DWORD PTR _val$87141[ebp], OFFSET $SG87156
$LN1@portfwd_ha:
; Line 1214
	mov	eax, DWORD PTR _dir$87151[ebp]
	push	eax
	mov	ecx, DWORD PTR ?dirs@?BE@??portfwd_handler@@9@9
	push	ecx
	call	_strchr
	add	esp, 8
	sub	eax, DWORD PTR ?dirs@?BE@??portfwd_handler@@9@9
	push	eax
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _pfd$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_dlg_radiobutton_set
	add	esp, 12					; 0000000cH
; Line 1215
	mov	edx, DWORD PTR _p$87142[ebp]
	add	edx, 1
	mov	DWORD PTR _p$87142[ebp], edx
; Line 1217
	mov	eax, DWORD PTR _p$87142[ebp]
	push	eax
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pfd$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	_dlg_editbox_set
	add	esp, 12					; 0000000cH
; Line 1218
	mov	ecx, DWORD PTR _val$87141[ebp]
	push	ecx
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _pfd$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_dlg_editbox_set
	add	esp, 12					; 0000000cH
; Line 1220
	mov	edx, DWORD PTR _key$87140[ebp]
	push	edx
	push	150					; 00000096H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_del_str_str
	add	esp, 12					; 0000000cH
$LN4@portfwd_ha:
; Line 1223
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pfd$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_dlg_refresh
	add	esp, 8
$LN38@portfwd_ha:
; Line 1226
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN44@portfwd_ha
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 88					; 00000058H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN44@portfwd_ha:
	DD	1
	DD	$LN43@portfwd_ha
$LN43@portfwd_ha:
	DD	-16					; fffffff0H
	DD	4
	DD	$LN42@portfwd_ha
$LN42@portfwd_ha:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
_portfwd_handler ENDP
_TEXT	ENDS
EXTRN	_validate_manual_hostkey:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_key$87203 = -36					; size = 4
_i$87200 = -32						; size = 4
_key$87188 = -28					; size = 4
_val$87179 = -24					; size = 4
_key$87178 = -16					; size = 4
_mh$ = -8						; size = 4
_conf$ = -4						; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_manual_hostkey_handler PROC
; Line 1234
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1235
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], eax
; Line 1237
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _mh$[ebp], edx
; Line 1239
	cmp	DWORD PTR _event$[ebp], 0
	jne	$LN18@manual_hos
; Line 1240
	mov	eax, DWORD PTR _mh$[ebp]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	$LN17@manual_hos
; Line 1242
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_update_start
	add	esp, 8
; Line 1243
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_listbox_clear
	add	esp, 8
; Line 1248
	lea	eax, DWORD PTR _key$87178[ebp]
	push	eax
	push	0
	push	167					; 000000a7H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _val$87179[ebp], eax
	jmp	SHORT $LN16@manual_hos
$LN15@manual_hos:
	lea	edx, DWORD PTR _key$87178[ebp]
	push	edx
	mov	eax, DWORD PTR _key$87178[ebp]
	push	eax
	push	167					; 000000a7H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _val$87179[ebp], eax
$LN16@manual_hos:
	cmp	DWORD PTR _val$87179[ebp], 0
	je	SHORT $LN14@manual_hos
; Line 1249
	mov	edx, DWORD PTR _key$87178[ebp]
	push	edx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_listbox_add
	add	esp, 12					; 0000000cH
; Line 1250
	jmp	SHORT $LN15@manual_hos
$LN14@manual_hos:
; Line 1251
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_update_done
	add	esp, 8
$LN17@manual_hos:
; Line 1252
	jmp	$LN19@manual_hos
$LN18@manual_hos:
; Line 1253
	cmp	DWORD PTR _event$[ebp], 1
	jne	$LN19@manual_hos
; Line 1254
	mov	ecx, DWORD PTR _mh$[ebp]
	mov	edx, DWORD PTR _ctrl$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jne	$LN11@manual_hos
; Line 1257
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mh$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_dlg_editbox_get
	add	esp, 8
	mov	DWORD PTR _key$87188[ebp], eax
; Line 1258
	mov	eax, DWORD PTR _key$87188[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN10@manual_hos
; Line 1260
	push	OFFSET $SG87190
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	call	_dlg_error_msg
	add	esp, 8
; Line 1261
	mov	eax, DWORD PTR _key$87188[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 1262
	jmp	$LN19@manual_hos
$LN10@manual_hos:
; Line 1265
	mov	ecx, DWORD PTR _key$87188[ebp]
	push	ecx
	call	_validate_manual_hostkey
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN9@manual_hos
; Line 1266
	push	OFFSET $SG87192
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	call	_dlg_error_msg
	add	esp, 8
; Line 1267
	jmp	SHORT $LN8@manual_hos
$LN9@manual_hos:
; Line 1268
	mov	eax, DWORD PTR _key$87188[ebp]
	push	eax
	push	167					; 000000a7H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str_str_opt
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN7@manual_hos
; Line 1269
	push	OFFSET $SG87195
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	call	_dlg_error_msg
	add	esp, 8
; Line 1270
	jmp	SHORT $LN8@manual_hos
$LN7@manual_hos:
; Line 1271
	push	OFFSET $SG87197
	mov	eax, DWORD PTR _key$87188[ebp]
	push	eax
	push	167					; 000000a7H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_str_str
	add	esp, 16					; 00000010H
$LN8@manual_hos:
; Line 1274
	mov	edx, DWORD PTR _key$87188[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 1275
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mh$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_dlg_refresh
	add	esp, 8
	jmp	$LN19@manual_hos
$LN11@manual_hos:
; Line 1276
	mov	eax, DWORD PTR _mh$[ebp]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jne	$LN19@manual_hos
; Line 1277
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _mh$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_dlg_listbox_index
	add	esp, 8
	mov	DWORD PTR _i$87200[ebp], eax
; Line 1278
	cmp	DWORD PTR _i$87200[ebp], 0
	jge	SHORT $LN3@manual_hos
; Line 1279
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	call	_dlg_beep
	add	esp, 4
; Line 1280
	jmp	SHORT $LN2@manual_hos
$LN3@manual_hos:
; Line 1283
	mov	eax, DWORD PTR _i$87200[ebp]
	push	eax
	push	167					; 000000a7H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str_nthstrkey
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _key$87203[ebp], eax
; Line 1284
	cmp	DWORD PTR _key$87203[ebp], 0
	je	SHORT $LN2@manual_hos
; Line 1285
	mov	edx, DWORD PTR _key$87203[ebp]
	push	edx
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mh$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_dlg_editbox_set
	add	esp, 12					; 0000000cH
; Line 1287
	mov	eax, DWORD PTR _key$87203[ebp]
	push	eax
	push	167					; 000000a7H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_del_str_str
	add	esp, 12					; 0000000cH
$LN2@manual_hos:
; Line 1290
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _mh$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_dlg_refresh
	add	esp, 8
$LN19@manual_hos:
; Line 1293
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@manual_hos
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN23@manual_hos:
	DD	1
	DD	$LN22@manual_hos
$LN22@manual_hos:
	DD	-16					; fffffff0H
	DD	4
	DD	$LN21@manual_hos
$LN21@manual_hos:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
_manual_hostkey_handler ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\Putty\sshaes.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_aes_ssh2_decrypt_blk
PUBLIC	_aes_ssh2_encrypt_blk
PUBLIC	_aes256_key
PUBLIC	_aes192_key
PUBLIC	_aes128_key
PUBLIC	_aes_iv
PUBLIC	_aes_free_context
PUBLIC	_aes_make_context
PUBLIC	_ssh2_aes
_DATA	SEGMENT
$SG7313	DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, 'a'
	DB	00H, 'e', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG7316	DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, 'a'
	DB	00H, 'e', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG7314	DB	'b', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, 'l', 00H
	DB	'e', 00H, 'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '1'
	DB	00H, '6', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 'b', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, 'l', 00H, 'e', 00H, 'n'
	DB	00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '2', 00H, '4', 00H
	DB	' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 'b', 00H, 'l', 00H, 'o'
	DB	00H, 'c', 00H, 'k', 00H, 'l', 00H, 'e', 00H, 'n', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, '3', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG7317	DB	'k', 00H, 'e', 00H, 'y', 00H, 'l', 00H, 'e', 00H, 'n', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '1', 00H, '6', 00H, ' '
	DB	00H, '|', 00H, '|', 00H, ' ', 00H, 'k', 00H, 'e', 00H, 'y', 00H
	DB	'l', 00H, 'e', 00H, 'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, '2', 00H, '4', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H
	DB	'k', 00H, 'e', 00H, 'y', 00H, 'l', 00H, 'e', 00H, 'n', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, '3', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG7383	DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, 'a'
	DB	00H, 'e', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG7384	DB	'(', 00H, 'l', 00H, 'e', 00H, 'n', 00H, ' ', 00H, '&', 00H
	DB	' ', 00H, '1', 00H, '5', 00H, ')', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H
$SG7419	DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, 'a'
	DB	00H, 'e', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG7420	DB	'(', 00H, 'l', 00H, 'e', 00H, 'n', 00H, ' ', 00H, '&', 00H
	DB	' ', 00H, '1', 00H, '5', 00H, ')', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H
$SG7455	DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, 'a'
	DB	00H, 'e', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG7456	DB	'(', 00H, 'l', 00H, 'e', 00H, 'n', 00H, ' ', 00H, '&', 00H
	DB	' ', 00H, '1', 00H, '5', 00H, ')', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H
$SG7571	DB	'aes128-ctr', 00H
	ORG $+1
$SG7572	DB	'AES-128 SDCTR', 00H
	ORG $+2
$SG7574	DB	'aes192-ctr', 00H
	ORG $+1
$SG7575	DB	'AES-192 SDCTR', 00H
	ORG $+2
$SG7577	DB	'aes256-ctr', 00H
	ORG $+1
$SG7578	DB	'AES-256 SDCTR', 00H
	ORG $+2
$SG7580	DB	'aes128-cbc', 00H
	ORG $+1
$SG7581	DB	'AES-128 CBC', 00H
$SG7583	DB	'aes192-cbc', 00H
	ORG $+1
$SG7584	DB	'AES-192 CBC', 00H
$SG7586	DB	'aes256-cbc', 00H
	ORG $+1
$SG7587	DB	'AES-256 CBC', 00H
$SG7589	DB	'rijndael-cbc@lysator.liu.se', 00H
$SG7590	DB	'AES-256 CBC', 00H
_DATA	ENDS
CONST	SEGMENT
_Sbox	DB	063H
	DB	07cH
	DB	077H
	DB	07bH
	DB	0f2H
	DB	06bH
	DB	06fH
	DB	0c5H
	DB	030H
	DB	01H
	DB	067H
	DB	02bH
	DB	0feH
	DB	0d7H
	DB	0abH
	DB	076H
	DB	0caH
	DB	082H
	DB	0c9H
	DB	07dH
	DB	0faH
	DB	059H
	DB	047H
	DB	0f0H
	DB	0adH
	DB	0d4H
	DB	0a2H
	DB	0afH
	DB	09cH
	DB	0a4H
	DB	072H
	DB	0c0H
	DB	0b7H
	DB	0fdH
	DB	093H
	DB	026H
	DB	036H
	DB	03fH
	DB	0f7H
	DB	0ccH
	DB	034H
	DB	0a5H
	DB	0e5H
	DB	0f1H
	DB	071H
	DB	0d8H
	DB	031H
	DB	015H
	DB	04H
	DB	0c7H
	DB	023H
	DB	0c3H
	DB	018H
	DB	096H
	DB	05H
	DB	09aH
	DB	07H
	DB	012H
	DB	080H
	DB	0e2H
	DB	0ebH
	DB	027H
	DB	0b2H
	DB	075H
	DB	09H
	DB	083H
	DB	02cH
	DB	01aH
	DB	01bH
	DB	06eH
	DB	05aH
	DB	0a0H
	DB	052H
	DB	03bH
	DB	0d6H
	DB	0b3H
	DB	029H
	DB	0e3H
	DB	02fH
	DB	084H
	DB	053H
	DB	0d1H
	DB	00H
	DB	0edH
	DB	020H
	DB	0fcH
	DB	0b1H
	DB	05bH
	DB	06aH
	DB	0cbH
	DB	0beH
	DB	039H
	DB	04aH
	DB	04cH
	DB	058H
	DB	0cfH
	DB	0d0H
	DB	0efH
	DB	0aaH
	DB	0fbH
	DB	043H
	DB	04dH
	DB	033H
	DB	085H
	DB	045H
	DB	0f9H
	DB	02H
	DB	07fH
	DB	050H
	DB	03cH
	DB	09fH
	DB	0a8H
	DB	051H
	DB	0a3H
	DB	040H
	DB	08fH
	DB	092H
	DB	09dH
	DB	038H
	DB	0f5H
	DB	0bcH
	DB	0b6H
	DB	0daH
	DB	021H
	DB	010H
	DB	0ffH
	DB	0f3H
	DB	0d2H
	DB	0cdH
	DB	0cH
	DB	013H
	DB	0ecH
	DB	05fH
	DB	097H
	DB	044H
	DB	017H
	DB	0c4H
	DB	0a7H
	DB	07eH
	DB	03dH
	DB	064H
	DB	05dH
	DB	019H
	DB	073H
	DB	060H
	DB	081H
	DB	04fH
	DB	0dcH
	DB	022H
	DB	02aH
	DB	090H
	DB	088H
	DB	046H
	DB	0eeH
	DB	0b8H
	DB	014H
	DB	0deH
	DB	05eH
	DB	0bH
	DB	0dbH
	DB	0e0H
	DB	032H
	DB	03aH
	DB	0aH
	DB	049H
	DB	06H
	DB	024H
	DB	05cH
	DB	0c2H
	DB	0d3H
	DB	0acH
	DB	062H
	DB	091H
	DB	095H
	DB	0e4H
	DB	079H
	DB	0e7H
	DB	0c8H
	DB	037H
	DB	06dH
	DB	08dH
	DB	0d5H
	DB	04eH
	DB	0a9H
	DB	06cH
	DB	056H
	DB	0f4H
	DB	0eaH
	DB	065H
	DB	07aH
	DB	0aeH
	DB	08H
	DB	0baH
	DB	078H
	DB	025H
	DB	02eH
	DB	01cH
	DB	0a6H
	DB	0b4H
	DB	0c6H
	DB	0e8H
	DB	0ddH
	DB	074H
	DB	01fH
	DB	04bH
	DB	0bdH
	DB	08bH
	DB	08aH
	DB	070H
	DB	03eH
	DB	0b5H
	DB	066H
	DB	048H
	DB	03H
	DB	0f6H
	DB	0eH
	DB	061H
	DB	035H
	DB	057H
	DB	0b9H
	DB	086H
	DB	0c1H
	DB	01dH
	DB	09eH
	DB	0e1H
	DB	0f8H
	DB	098H
	DB	011H
	DB	069H
	DB	0d9H
	DB	08eH
	DB	094H
	DB	09bH
	DB	01eH
	DB	087H
	DB	0e9H
	DB	0ceH
	DB	055H
	DB	028H
	DB	0dfH
	DB	08cH
	DB	0a1H
	DB	089H
	DB	0dH
	DB	0bfH
	DB	0e6H
	DB	042H
	DB	068H
	DB	041H
	DB	099H
	DB	02dH
	DB	0fH
	DB	0b0H
	DB	054H
	DB	0bbH
	DB	016H
_Sboxinv DB	052H
	DB	09H
	DB	06aH
	DB	0d5H
	DB	030H
	DB	036H
	DB	0a5H
	DB	038H
	DB	0bfH
	DB	040H
	DB	0a3H
	DB	09eH
	DB	081H
	DB	0f3H
	DB	0d7H
	DB	0fbH
	DB	07cH
	DB	0e3H
	DB	039H
	DB	082H
	DB	09bH
	DB	02fH
	DB	0ffH
	DB	087H
	DB	034H
	DB	08eH
	DB	043H
	DB	044H
	DB	0c4H
	DB	0deH
	DB	0e9H
	DB	0cbH
	DB	054H
	DB	07bH
	DB	094H
	DB	032H
	DB	0a6H
	DB	0c2H
	DB	023H
	DB	03dH
	DB	0eeH
	DB	04cH
	DB	095H
	DB	0bH
	DB	042H
	DB	0faH
	DB	0c3H
	DB	04eH
	DB	08H
	DB	02eH
	DB	0a1H
	DB	066H
	DB	028H
	DB	0d9H
	DB	024H
	DB	0b2H
	DB	076H
	DB	05bH
	DB	0a2H
	DB	049H
	DB	06dH
	DB	08bH
	DB	0d1H
	DB	025H
	DB	072H
	DB	0f8H
	DB	0f6H
	DB	064H
	DB	086H
	DB	068H
	DB	098H
	DB	016H
	DB	0d4H
	DB	0a4H
	DB	05cH
	DB	0ccH
	DB	05dH
	DB	065H
	DB	0b6H
	DB	092H
	DB	06cH
	DB	070H
	DB	048H
	DB	050H
	DB	0fdH
	DB	0edH
	DB	0b9H
	DB	0daH
	DB	05eH
	DB	015H
	DB	046H
	DB	057H
	DB	0a7H
	DB	08dH
	DB	09dH
	DB	084H
	DB	090H
	DB	0d8H
	DB	0abH
	DB	00H
	DB	08cH
	DB	0bcH
	DB	0d3H
	DB	0aH
	DB	0f7H
	DB	0e4H
	DB	058H
	DB	05H
	DB	0b8H
	DB	0b3H
	DB	045H
	DB	06H
	DB	0d0H
	DB	02cH
	DB	01eH
	DB	08fH
	DB	0caH
	DB	03fH
	DB	0fH
	DB	02H
	DB	0c1H
	DB	0afH
	DB	0bdH
	DB	03H
	DB	01H
	DB	013H
	DB	08aH
	DB	06bH
	DB	03aH
	DB	091H
	DB	011H
	DB	041H
	DB	04fH
	DB	067H
	DB	0dcH
	DB	0eaH
	DB	097H
	DB	0f2H
	DB	0cfH
	DB	0ceH
	DB	0f0H
	DB	0b4H
	DB	0e6H
	DB	073H
	DB	096H
	DB	0acH
	DB	074H
	DB	022H
	DB	0e7H
	DB	0adH
	DB	035H
	DB	085H
	DB	0e2H
	DB	0f9H
	DB	037H
	DB	0e8H
	DB	01cH
	DB	075H
	DB	0dfH
	DB	06eH
	DB	047H
	DB	0f1H
	DB	01aH
	DB	071H
	DB	01dH
	DB	029H
	DB	0c5H
	DB	089H
	DB	06fH
	DB	0b7H
	DB	062H
	DB	0eH
	DB	0aaH
	DB	018H
	DB	0beH
	DB	01bH
	DB	0fcH
	DB	056H
	DB	03eH
	DB	04bH
	DB	0c6H
	DB	0d2H
	DB	079H
	DB	020H
	DB	09aH
	DB	0dbH
	DB	0c0H
	DB	0feH
	DB	078H
	DB	0cdH
	DB	05aH
	DB	0f4H
	DB	01fH
	DB	0ddH
	DB	0a8H
	DB	033H
	DB	088H
	DB	07H
	DB	0c7H
	DB	031H
	DB	0b1H
	DB	012H
	DB	010H
	DB	059H
	DB	027H
	DB	080H
	DB	0ecH
	DB	05fH
	DB	060H
	DB	051H
	DB	07fH
	DB	0a9H
	DB	019H
	DB	0b5H
	DB	04aH
	DB	0dH
	DB	02dH
	DB	0e5H
	DB	07aH
	DB	09fH
	DB	093H
	DB	0c9H
	DB	09cH
	DB	0efH
	DB	0a0H
	DB	0e0H
	DB	03bH
	DB	04dH
	DB	0aeH
	DB	02aH
	DB	0f5H
	DB	0b0H
	DB	0c8H
	DB	0ebH
	DB	0bbH
	DB	03cH
	DB	083H
	DB	053H
	DB	099H
	DB	061H
	DB	017H
	DB	02bH
	DB	04H
	DB	07eH
	DB	0baH
	DB	077H
	DB	0d6H
	DB	026H
	DB	0e1H
	DB	069H
	DB	014H
	DB	063H
	DB	055H
	DB	021H
	DB	0cH
	DB	07dH
_E0	DD	0c66363a5H
	DD	0f87c7c84H
	DD	0ee777799H
	DD	0f67b7b8dH
	DD	0fff2f20dH
	DD	0d66b6bbdH
	DD	0de6f6fb1H
	DD	091c5c554H
	DD	060303050H
	DD	02010103H
	DD	0ce6767a9H
	DD	0562b2b7dH
	DD	0e7fefe19H
	DD	0b5d7d762H
	DD	04dababe6H
	DD	0ec76769aH
	DD	08fcaca45H
	DD	01f82829dH
	DD	089c9c940H
	DD	0fa7d7d87H
	DD	0effafa15H
	DD	0b25959ebH
	DD	08e4747c9H
	DD	0fbf0f00bH
	DD	041adadecH
	DD	0b3d4d467H
	DD	05fa2a2fdH
	DD	045afafeaH
	DD	0239c9cbfH
	DD	053a4a4f7H
	DD	0e4727296H
	DD	09bc0c05bH
	DD	075b7b7c2H
	DD	0e1fdfd1cH
	DD	03d9393aeH
	DD	04c26266aH
	DD	06c36365aH
	DD	07e3f3f41H
	DD	0f5f7f702H
	DD	083cccc4fH
	DD	06834345cH
	DD	051a5a5f4H
	DD	0d1e5e534H
	DD	0f9f1f108H
	DD	0e2717193H
	DD	0abd8d873H
	DD	062313153H
	DD	02a15153fH
	DD	0804040cH
	DD	095c7c752H
	DD	046232365H
	DD	09dc3c35eH
	DD	030181828H
	DD	0379696a1H
	DD	0a05050fH
	DD	02f9a9ab5H
	DD	0e070709H
	DD	024121236H
	DD	01b80809bH
	DD	0dfe2e23dH
	DD	0cdebeb26H
	DD	04e272769H
	DD	07fb2b2cdH
	DD	0ea75759fH
	DD	01209091bH
	DD	01d83839eH
	DD	0582c2c74H
	DD	0341a1a2eH
	DD	0361b1b2dH
	DD	0dc6e6eb2H
	DD	0b45a5aeeH
	DD	05ba0a0fbH
	DD	0a45252f6H
	DD	0763b3b4dH
	DD	0b7d6d661H
	DD	07db3b3ceH
	DD	05229297bH
	DD	0dde3e33eH
	DD	05e2f2f71H
	DD	013848497H
	DD	0a65353f5H
	DD	0b9d1d168H
	DD	00H
	DD	0c1eded2cH
	DD	040202060H
	DD	0e3fcfc1fH
	DD	079b1b1c8H
	DD	0b65b5bedH
	DD	0d46a6abeH
	DD	08dcbcb46H
	DD	067bebed9H
	DD	07239394bH
	DD	0944a4adeH
	DD	0984c4cd4H
	DD	0b05858e8H
	DD	085cfcf4aH
	DD	0bbd0d06bH
	DD	0c5efef2aH
	DD	04faaaae5H
	DD	0edfbfb16H
	DD	0864343c5H
	DD	09a4d4dd7H
	DD	066333355H
	DD	011858594H
	DD	08a4545cfH
	DD	0e9f9f910H
	DD	04020206H
	DD	0fe7f7f81H
	DD	0a05050f0H
	DD	0783c3c44H
	DD	0259f9fbaH
	DD	04ba8a8e3H
	DD	0a25151f3H
	DD	05da3a3feH
	DD	0804040c0H
	DD	058f8f8aH
	DD	03f9292adH
	DD	0219d9dbcH
	DD	070383848H
	DD	0f1f5f504H
	DD	063bcbcdfH
	DD	077b6b6c1H
	DD	0afdada75H
	DD	042212163H
	DD	020101030H
	DD	0e5ffff1aH
	DD	0fdf3f30eH
	DD	0bfd2d26dH
	DD	081cdcd4cH
	DD	0180c0c14H
	DD	026131335H
	DD	0c3ecec2fH
	DD	0be5f5fe1H
	DD	0359797a2H
	DD	0884444ccH
	DD	02e171739H
	DD	093c4c457H
	DD	055a7a7f2H
	DD	0fc7e7e82H
	DD	07a3d3d47H
	DD	0c86464acH
	DD	0ba5d5de7H
	DD	03219192bH
	DD	0e6737395H
	DD	0c06060a0H
	DD	019818198H
	DD	09e4f4fd1H
	DD	0a3dcdc7fH
	DD	044222266H
	DD	0542a2a7eH
	DD	03b9090abH
	DD	0b888883H
	DD	08c4646caH
	DD	0c7eeee29H
	DD	06bb8b8d3H
	DD	02814143cH
	DD	0a7dede79H
	DD	0bc5e5ee2H
	DD	0160b0b1dH
	DD	0addbdb76H
	DD	0dbe0e03bH
	DD	064323256H
	DD	0743a3a4eH
	DD	0140a0a1eH
	DD	0924949dbH
	DD	0c06060aH
	DD	04824246cH
	DD	0b85c5ce4H
	DD	09fc2c25dH
	DD	0bdd3d36eH
	DD	043acacefH
	DD	0c46262a6H
	DD	0399191a8H
	DD	0319595a4H
	DD	0d3e4e437H
	DD	0f279798bH
	DD	0d5e7e732H
	DD	08bc8c843H
	DD	06e373759H
	DD	0da6d6db7H
	DD	018d8d8cH
	DD	0b1d5d564H
	DD	09c4e4ed2H
	DD	049a9a9e0H
	DD	0d86c6cb4H
	DD	0ac5656faH
	DD	0f3f4f407H
	DD	0cfeaea25H
	DD	0ca6565afH
	DD	0f47a7a8eH
	DD	047aeaee9H
	DD	010080818H
	DD	06fbabad5H
	DD	0f0787888H
	DD	04a25256fH
	DD	05c2e2e72H
	DD	0381c1c24H
	DD	057a6a6f1H
	DD	073b4b4c7H
	DD	097c6c651H
	DD	0cbe8e823H
	DD	0a1dddd7cH
	DD	0e874749cH
	DD	03e1f1f21H
	DD	0964b4bddH
	DD	061bdbddcH
	DD	0d8b8b86H
	DD	0f8a8a85H
	DD	0e0707090H
	DD	07c3e3e42H
	DD	071b5b5c4H
	DD	0cc6666aaH
	DD	0904848d8H
	DD	06030305H
	DD	0f7f6f601H
	DD	01c0e0e12H
	DD	0c26161a3H
	DD	06a35355fH
	DD	0ae5757f9H
	DD	069b9b9d0H
	DD	017868691H
	DD	099c1c158H
	DD	03a1d1d27H
	DD	0279e9eb9H
	DD	0d9e1e138H
	DD	0ebf8f813H
	DD	02b9898b3H
	DD	022111133H
	DD	0d26969bbH
	DD	0a9d9d970H
	DD	078e8e89H
	DD	0339494a7H
	DD	02d9b9bb6H
	DD	03c1e1e22H
	DD	015878792H
	DD	0c9e9e920H
	DD	087cece49H
	DD	0aa5555ffH
	DD	050282878H
	DD	0a5dfdf7aH
	DD	038c8c8fH
	DD	059a1a1f8H
	DD	09898980H
	DD	01a0d0d17H
	DD	065bfbfdaH
	DD	0d7e6e631H
	DD	0844242c6H
	DD	0d06868b8H
	DD	0824141c3H
	DD	0299999b0H
	DD	05a2d2d77H
	DD	01e0f0f11H
	DD	07bb0b0cbH
	DD	0a85454fcH
	DD	06dbbbbd6H
	DD	02c16163aH
_E1	DD	0a5c66363H
	DD	084f87c7cH
	DD	099ee7777H
	DD	08df67b7bH
	DD	0dfff2f2H
	DD	0bdd66b6bH
	DD	0b1de6f6fH
	DD	05491c5c5H
	DD	050603030H
	DD	03020101H
	DD	0a9ce6767H
	DD	07d562b2bH
	DD	019e7fefeH
	DD	062b5d7d7H
	DD	0e64dababH
	DD	09aec7676H
	DD	0458fcacaH
	DD	09d1f8282H
	DD	04089c9c9H
	DD	087fa7d7dH
	DD	015effafaH
	DD	0ebb25959H
	DD	0c98e4747H
	DD	0bfbf0f0H
	DD	0ec41adadH
	DD	067b3d4d4H
	DD	0fd5fa2a2H
	DD	0ea45afafH
	DD	0bf239c9cH
	DD	0f753a4a4H
	DD	096e47272H
	DD	05b9bc0c0H
	DD	0c275b7b7H
	DD	01ce1fdfdH
	DD	0ae3d9393H
	DD	06a4c2626H
	DD	05a6c3636H
	DD	0417e3f3fH
	DD	02f5f7f7H
	DD	04f83ccccH
	DD	05c683434H
	DD	0f451a5a5H
	DD	034d1e5e5H
	DD	08f9f1f1H
	DD	093e27171H
	DD	073abd8d8H
	DD	053623131H
	DD	03f2a1515H
	DD	0c080404H
	DD	05295c7c7H
	DD	065462323H
	DD	05e9dc3c3H
	DD	028301818H
	DD	0a1379696H
	DD	0f0a0505H
	DD	0b52f9a9aH
	DD	090e0707H
	DD	036241212H
	DD	09b1b8080H
	DD	03ddfe2e2H
	DD	026cdebebH
	DD	0694e2727H
	DD	0cd7fb2b2H
	DD	09fea7575H
	DD	01b120909H
	DD	09e1d8383H
	DD	074582c2cH
	DD	02e341a1aH
	DD	02d361b1bH
	DD	0b2dc6e6eH
	DD	0eeb45a5aH
	DD	0fb5ba0a0H
	DD	0f6a45252H
	DD	04d763b3bH
	DD	061b7d6d6H
	DD	0ce7db3b3H
	DD	07b522929H
	DD	03edde3e3H
	DD	0715e2f2fH
	DD	097138484H
	DD	0f5a65353H
	DD	068b9d1d1H
	DD	00H
	DD	02cc1ededH
	DD	060402020H
	DD	01fe3fcfcH
	DD	0c879b1b1H
	DD	0edb65b5bH
	DD	0bed46a6aH
	DD	0468dcbcbH
	DD	0d967bebeH
	DD	04b723939H
	DD	0de944a4aH
	DD	0d4984c4cH
	DD	0e8b05858H
	DD	04a85cfcfH
	DD	06bbbd0d0H
	DD	02ac5efefH
	DD	0e54faaaaH
	DD	016edfbfbH
	DD	0c5864343H
	DD	0d79a4d4dH
	DD	055663333H
	DD	094118585H
	DD	0cf8a4545H
	DD	010e9f9f9H
	DD	06040202H
	DD	081fe7f7fH
	DD	0f0a05050H
	DD	044783c3cH
	DD	0ba259f9fH
	DD	0e34ba8a8H
	DD	0f3a25151H
	DD	0fe5da3a3H
	DD	0c0804040H
	DD	08a058f8fH
	DD	0ad3f9292H
	DD	0bc219d9dH
	DD	048703838H
	DD	04f1f5f5H
	DD	0df63bcbcH
	DD	0c177b6b6H
	DD	075afdadaH
	DD	063422121H
	DD	030201010H
	DD	01ae5ffffH
	DD	0efdf3f3H
	DD	06dbfd2d2H
	DD	04c81cdcdH
	DD	014180c0cH
	DD	035261313H
	DD	02fc3ececH
	DD	0e1be5f5fH
	DD	0a2359797H
	DD	0cc884444H
	DD	0392e1717H
	DD	05793c4c4H
	DD	0f255a7a7H
	DD	082fc7e7eH
	DD	0477a3d3dH
	DD	0acc86464H
	DD	0e7ba5d5dH
	DD	02b321919H
	DD	095e67373H
	DD	0a0c06060H
	DD	098198181H
	DD	0d19e4f4fH
	DD	07fa3dcdcH
	DD	066442222H
	DD	07e542a2aH
	DD	0ab3b9090H
	DD	0830b8888H
	DD	0ca8c4646H
	DD	029c7eeeeH
	DD	0d36bb8b8H
	DD	03c281414H
	DD	079a7dedeH
	DD	0e2bc5e5eH
	DD	01d160b0bH
	DD	076addbdbH
	DD	03bdbe0e0H
	DD	056643232H
	DD	04e743a3aH
	DD	01e140a0aH
	DD	0db924949H
	DD	0a0c0606H
	DD	06c482424H
	DD	0e4b85c5cH
	DD	05d9fc2c2H
	DD	06ebdd3d3H
	DD	0ef43acacH
	DD	0a6c46262H
	DD	0a8399191H
	DD	0a4319595H
	DD	037d3e4e4H
	DD	08bf27979H
	DD	032d5e7e7H
	DD	0438bc8c8H
	DD	0596e3737H
	DD	0b7da6d6dH
	DD	08c018d8dH
	DD	064b1d5d5H
	DD	0d29c4e4eH
	DD	0e049a9a9H
	DD	0b4d86c6cH
	DD	0faac5656H
	DD	07f3f4f4H
	DD	025cfeaeaH
	DD	0afca6565H
	DD	08ef47a7aH
	DD	0e947aeaeH
	DD	018100808H
	DD	0d56fbabaH
	DD	088f07878H
	DD	06f4a2525H
	DD	0725c2e2eH
	DD	024381c1cH
	DD	0f157a6a6H
	DD	0c773b4b4H
	DD	05197c6c6H
	DD	023cbe8e8H
	DD	07ca1ddddH
	DD	09ce87474H
	DD	0213e1f1fH
	DD	0dd964b4bH
	DD	0dc61bdbdH
	DD	0860d8b8bH
	DD	0850f8a8aH
	DD	090e07070H
	DD	0427c3e3eH
	DD	0c471b5b5H
	DD	0aacc6666H
	DD	0d8904848H
	DD	05060303H
	DD	01f7f6f6H
	DD	0121c0e0eH
	DD	0a3c26161H
	DD	05f6a3535H
	DD	0f9ae5757H
	DD	0d069b9b9H
	DD	091178686H
	DD	05899c1c1H
	DD	0273a1d1dH
	DD	0b9279e9eH
	DD	038d9e1e1H
	DD	013ebf8f8H
	DD	0b32b9898H
	DD	033221111H
	DD	0bbd26969H
	DD	070a9d9d9H
	DD	089078e8eH
	DD	0a7339494H
	DD	0b62d9b9bH
	DD	0223c1e1eH
	DD	092158787H
	DD	020c9e9e9H
	DD	04987ceceH
	DD	0ffaa5555H
	DD	078502828H
	DD	07aa5dfdfH
	DD	08f038c8cH
	DD	0f859a1a1H
	DD	080098989H
	DD	0171a0d0dH
	DD	0da65bfbfH
	DD	031d7e6e6H
	DD	0c6844242H
	DD	0b8d06868H
	DD	0c3824141H
	DD	0b0299999H
	DD	0775a2d2dH
	DD	0111e0f0fH
	DD	0cb7bb0b0H
	DD	0fca85454H
	DD	0d66dbbbbH
	DD	03a2c1616H
_E2	DD	063a5c663H
	DD	07c84f87cH
	DD	07799ee77H
	DD	07b8df67bH
	DD	0f20dfff2H
	DD	06bbdd66bH
	DD	06fb1de6fH
	DD	0c55491c5H
	DD	030506030H
	DD	01030201H
	DD	067a9ce67H
	DD	02b7d562bH
	DD	0fe19e7feH
	DD	0d762b5d7H
	DD	0abe64dabH
	DD	0769aec76H
	DD	0ca458fcaH
	DD	0829d1f82H
	DD	0c94089c9H
	DD	07d87fa7dH
	DD	0fa15effaH
	DD	059ebb259H
	DD	047c98e47H
	DD	0f00bfbf0H
	DD	0adec41adH
	DD	0d467b3d4H
	DD	0a2fd5fa2H
	DD	0afea45afH
	DD	09cbf239cH
	DD	0a4f753a4H
	DD	07296e472H
	DD	0c05b9bc0H
	DD	0b7c275b7H
	DD	0fd1ce1fdH
	DD	093ae3d93H
	DD	0266a4c26H
	DD	0365a6c36H
	DD	03f417e3fH
	DD	0f702f5f7H
	DD	0cc4f83ccH
	DD	0345c6834H
	DD	0a5f451a5H
	DD	0e534d1e5H
	DD	0f108f9f1H
	DD	07193e271H
	DD	0d873abd8H
	DD	031536231H
	DD	0153f2a15H
	DD	040c0804H
	DD	0c75295c7H
	DD	023654623H
	DD	0c35e9dc3H
	DD	018283018H
	DD	096a13796H
	DD	050f0a05H
	DD	09ab52f9aH
	DD	07090e07H
	DD	012362412H
	DD	0809b1b80H
	DD	0e23ddfe2H
	DD	0eb26cdebH
	DD	027694e27H
	DD	0b2cd7fb2H
	DD	0759fea75H
	DD	091b1209H
	DD	0839e1d83H
	DD	02c74582cH
	DD	01a2e341aH
	DD	01b2d361bH
	DD	06eb2dc6eH
	DD	05aeeb45aH
	DD	0a0fb5ba0H
	DD	052f6a452H
	DD	03b4d763bH
	DD	0d661b7d6H
	DD	0b3ce7db3H
	DD	0297b5229H
	DD	0e33edde3H
	DD	02f715e2fH
	DD	084971384H
	DD	053f5a653H
	DD	0d168b9d1H
	DD	00H
	DD	0ed2cc1edH
	DD	020604020H
	DD	0fc1fe3fcH
	DD	0b1c879b1H
	DD	05bedb65bH
	DD	06abed46aH
	DD	0cb468dcbH
	DD	0bed967beH
	DD	0394b7239H
	DD	04ade944aH
	DD	04cd4984cH
	DD	058e8b058H
	DD	0cf4a85cfH
	DD	0d06bbbd0H
	DD	0ef2ac5efH
	DD	0aae54faaH
	DD	0fb16edfbH
	DD	043c58643H
	DD	04dd79a4dH
	DD	033556633H
	DD	085941185H
	DD	045cf8a45H
	DD	0f910e9f9H
	DD	02060402H
	DD	07f81fe7fH
	DD	050f0a050H
	DD	03c44783cH
	DD	09fba259fH
	DD	0a8e34ba8H
	DD	051f3a251H
	DD	0a3fe5da3H
	DD	040c08040H
	DD	08f8a058fH
	DD	092ad3f92H
	DD	09dbc219dH
	DD	038487038H
	DD	0f504f1f5H
	DD	0bcdf63bcH
	DD	0b6c177b6H
	DD	0da75afdaH
	DD	021634221H
	DD	010302010H
	DD	0ff1ae5ffH
	DD	0f30efdf3H
	DD	0d26dbfd2H
	DD	0cd4c81cdH
	DD	0c14180cH
	DD	013352613H
	DD	0ec2fc3ecH
	DD	05fe1be5fH
	DD	097a23597H
	DD	044cc8844H
	DD	017392e17H
	DD	0c45793c4H
	DD	0a7f255a7H
	DD	07e82fc7eH
	DD	03d477a3dH
	DD	064acc864H
	DD	05de7ba5dH
	DD	0192b3219H
	DD	07395e673H
	DD	060a0c060H
	DD	081981981H
	DD	04fd19e4fH
	DD	0dc7fa3dcH
	DD	022664422H
	DD	02a7e542aH
	DD	090ab3b90H
	DD	088830b88H
	DD	046ca8c46H
	DD	0ee29c7eeH
	DD	0b8d36bb8H
	DD	0143c2814H
	DD	0de79a7deH
	DD	05ee2bc5eH
	DD	0b1d160bH
	DD	0db76addbH
	DD	0e03bdbe0H
	DD	032566432H
	DD	03a4e743aH
	DD	0a1e140aH
	DD	049db9249H
	DD	060a0c06H
	DD	0246c4824H
	DD	05ce4b85cH
	DD	0c25d9fc2H
	DD	0d36ebdd3H
	DD	0acef43acH
	DD	062a6c462H
	DD	091a83991H
	DD	095a43195H
	DD	0e437d3e4H
	DD	0798bf279H
	DD	0e732d5e7H
	DD	0c8438bc8H
	DD	037596e37H
	DD	06db7da6dH
	DD	08d8c018dH
	DD	0d564b1d5H
	DD	04ed29c4eH
	DD	0a9e049a9H
	DD	06cb4d86cH
	DD	056faac56H
	DD	0f407f3f4H
	DD	0ea25cfeaH
	DD	065afca65H
	DD	07a8ef47aH
	DD	0aee947aeH
	DD	08181008H
	DD	0bad56fbaH
	DD	07888f078H
	DD	0256f4a25H
	DD	02e725c2eH
	DD	01c24381cH
	DD	0a6f157a6H
	DD	0b4c773b4H
	DD	0c65197c6H
	DD	0e823cbe8H
	DD	0dd7ca1ddH
	DD	0749ce874H
	DD	01f213e1fH
	DD	04bdd964bH
	DD	0bddc61bdH
	DD	08b860d8bH
	DD	08a850f8aH
	DD	07090e070H
	DD	03e427c3eH
	DD	0b5c471b5H
	DD	066aacc66H
	DD	048d89048H
	DD	03050603H
	DD	0f601f7f6H
	DD	0e121c0eH
	DD	061a3c261H
	DD	0355f6a35H
	DD	057f9ae57H
	DD	0b9d069b9H
	DD	086911786H
	DD	0c15899c1H
	DD	01d273a1dH
	DD	09eb9279eH
	DD	0e138d9e1H
	DD	0f813ebf8H
	DD	098b32b98H
	DD	011332211H
	DD	069bbd269H
	DD	0d970a9d9H
	DD	08e89078eH
	DD	094a73394H
	DD	09bb62d9bH
	DD	01e223c1eH
	DD	087921587H
	DD	0e920c9e9H
	DD	0ce4987ceH
	DD	055ffaa55H
	DD	028785028H
	DD	0df7aa5dfH
	DD	08c8f038cH
	DD	0a1f859a1H
	DD	089800989H
	DD	0d171a0dH
	DD	0bfda65bfH
	DD	0e631d7e6H
	DD	042c68442H
	DD	068b8d068H
	DD	041c38241H
	DD	099b02999H
	DD	02d775a2dH
	DD	0f111e0fH
	DD	0b0cb7bb0H
	DD	054fca854H
	DD	0bbd66dbbH
	DD	0163a2c16H
_E3	DD	06363a5c6H
	DD	07c7c84f8H
	DD	0777799eeH
	DD	07b7b8df6H
	DD	0f2f20dffH
	DD	06b6bbdd6H
	DD	06f6fb1deH
	DD	0c5c55491H
	DD	030305060H
	DD	01010302H
	DD	06767a9ceH
	DD	02b2b7d56H
	DD	0fefe19e7H
	DD	0d7d762b5H
	DD	0ababe64dH
	DD	076769aecH
	DD	0caca458fH
	DD	082829d1fH
	DD	0c9c94089H
	DD	07d7d87faH
	DD	0fafa15efH
	DD	05959ebb2H
	DD	04747c98eH
	DD	0f0f00bfbH
	DD	0adadec41H
	DD	0d4d467b3H
	DD	0a2a2fd5fH
	DD	0afafea45H
	DD	09c9cbf23H
	DD	0a4a4f753H
	DD	0727296e4H
	DD	0c0c05b9bH
	DD	0b7b7c275H
	DD	0fdfd1ce1H
	DD	09393ae3dH
	DD	026266a4cH
	DD	036365a6cH
	DD	03f3f417eH
	DD	0f7f702f5H
	DD	0cccc4f83H
	DD	034345c68H
	DD	0a5a5f451H
	DD	0e5e534d1H
	DD	0f1f108f9H
	DD	0717193e2H
	DD	0d8d873abH
	DD	031315362H
	DD	015153f2aH
	DD	04040c08H
	DD	0c7c75295H
	DD	023236546H
	DD	0c3c35e9dH
	DD	018182830H
	DD	09696a137H
	DD	05050f0aH
	DD	09a9ab52fH
	DD	0707090eH
	DD	012123624H
	DD	080809b1bH
	DD	0e2e23ddfH
	DD	0ebeb26cdH
	DD	02727694eH
	DD	0b2b2cd7fH
	DD	075759feaH
	DD	09091b12H
	DD	083839e1dH
	DD	02c2c7458H
	DD	01a1a2e34H
	DD	01b1b2d36H
	DD	06e6eb2dcH
	DD	05a5aeeb4H
	DD	0a0a0fb5bH
	DD	05252f6a4H
	DD	03b3b4d76H
	DD	0d6d661b7H
	DD	0b3b3ce7dH
	DD	029297b52H
	DD	0e3e33eddH
	DD	02f2f715eH
	DD	084849713H
	DD	05353f5a6H
	DD	0d1d168b9H
	DD	00H
	DD	0eded2cc1H
	DD	020206040H
	DD	0fcfc1fe3H
	DD	0b1b1c879H
	DD	05b5bedb6H
	DD	06a6abed4H
	DD	0cbcb468dH
	DD	0bebed967H
	DD	039394b72H
	DD	04a4ade94H
	DD	04c4cd498H
	DD	05858e8b0H
	DD	0cfcf4a85H
	DD	0d0d06bbbH
	DD	0efef2ac5H
	DD	0aaaae54fH
	DD	0fbfb16edH
	DD	04343c586H
	DD	04d4dd79aH
	DD	033335566H
	DD	085859411H
	DD	04545cf8aH
	DD	0f9f910e9H
	DD	02020604H
	DD	07f7f81feH
	DD	05050f0a0H
	DD	03c3c4478H
	DD	09f9fba25H
	DD	0a8a8e34bH
	DD	05151f3a2H
	DD	0a3a3fe5dH
	DD	04040c080H
	DD	08f8f8a05H
	DD	09292ad3fH
	DD	09d9dbc21H
	DD	038384870H
	DD	0f5f504f1H
	DD	0bcbcdf63H
	DD	0b6b6c177H
	DD	0dada75afH
	DD	021216342H
	DD	010103020H
	DD	0ffff1ae5H
	DD	0f3f30efdH
	DD	0d2d26dbfH
	DD	0cdcd4c81H
	DD	0c0c1418H
	DD	013133526H
	DD	0ecec2fc3H
	DD	05f5fe1beH
	DD	09797a235H
	DD	04444cc88H
	DD	01717392eH
	DD	0c4c45793H
	DD	0a7a7f255H
	DD	07e7e82fcH
	DD	03d3d477aH
	DD	06464acc8H
	DD	05d5de7baH
	DD	019192b32H
	DD	0737395e6H
	DD	06060a0c0H
	DD	081819819H
	DD	04f4fd19eH
	DD	0dcdc7fa3H
	DD	022226644H
	DD	02a2a7e54H
	DD	09090ab3bH
	DD	08888830bH
	DD	04646ca8cH
	DD	0eeee29c7H
	DD	0b8b8d36bH
	DD	014143c28H
	DD	0dede79a7H
	DD	05e5ee2bcH
	DD	0b0b1d16H
	DD	0dbdb76adH
	DD	0e0e03bdbH
	DD	032325664H
	DD	03a3a4e74H
	DD	0a0a1e14H
	DD	04949db92H
	DD	06060a0cH
	DD	024246c48H
	DD	05c5ce4b8H
	DD	0c2c25d9fH
	DD	0d3d36ebdH
	DD	0acacef43H
	DD	06262a6c4H
	DD	09191a839H
	DD	09595a431H
	DD	0e4e437d3H
	DD	079798bf2H
	DD	0e7e732d5H
	DD	0c8c8438bH
	DD	03737596eH
	DD	06d6db7daH
	DD	08d8d8c01H
	DD	0d5d564b1H
	DD	04e4ed29cH
	DD	0a9a9e049H
	DD	06c6cb4d8H
	DD	05656faacH
	DD	0f4f407f3H
	DD	0eaea25cfH
	DD	06565afcaH
	DD	07a7a8ef4H
	DD	0aeaee947H
	DD	08081810H
	DD	0babad56fH
	DD	0787888f0H
	DD	025256f4aH
	DD	02e2e725cH
	DD	01c1c2438H
	DD	0a6a6f157H
	DD	0b4b4c773H
	DD	0c6c65197H
	DD	0e8e823cbH
	DD	0dddd7ca1H
	DD	074749ce8H
	DD	01f1f213eH
	DD	04b4bdd96H
	DD	0bdbddc61H
	DD	08b8b860dH
	DD	08a8a850fH
	DD	0707090e0H
	DD	03e3e427cH
	DD	0b5b5c471H
	DD	06666aaccH
	DD	04848d890H
	DD	03030506H
	DD	0f6f601f7H
	DD	0e0e121cH
	DD	06161a3c2H
	DD	035355f6aH
	DD	05757f9aeH
	DD	0b9b9d069H
	DD	086869117H
	DD	0c1c15899H
	DD	01d1d273aH
	DD	09e9eb927H
	DD	0e1e138d9H
	DD	0f8f813ebH
	DD	09898b32bH
	DD	011113322H
	DD	06969bbd2H
	DD	0d9d970a9H
	DD	08e8e8907H
	DD	09494a733H
	DD	09b9bb62dH
	DD	01e1e223cH
	DD	087879215H
	DD	0e9e920c9H
	DD	0cece4987H
	DD	05555ffaaH
	DD	028287850H
	DD	0dfdf7aa5H
	DD	08c8c8f03H
	DD	0a1a1f859H
	DD	089898009H
	DD	0d0d171aH
	DD	0bfbfda65H
	DD	0e6e631d7H
	DD	04242c684H
	DD	06868b8d0H
	DD	04141c382H
	DD	09999b029H
	DD	02d2d775aH
	DD	0f0f111eH
	DD	0b0b0cb7bH
	DD	05454fca8H
	DD	0bbbbd66dH
	DD	016163a2cH
_D0	DD	051f4a750H
	DD	07e416553H
	DD	01a17a4c3H
	DD	03a275e96H
	DD	03bab6bcbH
	DD	01f9d45f1H
	DD	0acfa58abH
	DD	04be30393H
	DD	02030fa55H
	DD	0ad766df6H
	DD	088cc7691H
	DD	0f5024c25H
	DD	04fe5d7fcH
	DD	0c52acbd7H
	DD	026354480H
	DD	0b562a38fH
	DD	0deb15a49H
	DD	025ba1b67H
	DD	045ea0e98H
	DD	05dfec0e1H
	DD	0c32f7502H
	DD	0814cf012H
	DD	08d4697a3H
	DD	06bd3f9c6H
	DD	038f5fe7H
	DD	015929c95H
	DD	0bf6d7aebH
	DD	0955259daH
	DD	0d4be832dH
	DD	0587421d3H
	DD	049e06929H
	DD	08ec9c844H
	DD	075c2896aH
	DD	0f48e7978H
	DD	099583e6bH
	DD	027b971ddH
	DD	0bee14fb6H
	DD	0f088ad17H
	DD	0c920ac66H
	DD	07dce3ab4H
	DD	063df4a18H
	DD	0e51a3182H
	DD	097513360H
	DD	062537f45H
	DD	0b16477e0H
	DD	0bb6bae84H
	DD	0fe81a01cH
	DD	0f9082b94H
	DD	070486858H
	DD	08f45fd19H
	DD	094de6c87H
	DD	0527bf8b7H
	DD	0ab73d323H
	DD	0724b02e2H
	DD	0e31f8f57H
	DD	06655ab2aH
	DD	0b2eb2807H
	DD	02fb5c203H
	DD	086c57b9aH
	DD	0d33708a5H
	DD	0302887f2H
	DD	023bfa5b2H
	DD	02036abaH
	DD	0ed16825cH
	DD	08acf1c2bH
	DD	0a779b492H
	DD	0f307f2f0H
	DD	04e69e2a1H
	DD	065daf4cdH
	DD	0605bed5H
	DD	0d134621fH
	DD	0c4a6fe8aH
	DD	0342e539dH
	DD	0a2f355a0H
	DD	058ae132H
	DD	0a4f6eb75H
	DD	0b83ec39H
	DD	04060efaaH
	DD	05e719f06H
	DD	0bd6e1051H
	DD	03e218af9H
	DD	096dd063dH
	DD	0dd3e05aeH
	DD	04de6bd46H
	DD	091548db5H
	DD	071c45d05H
	DD	0406d46fH
	DD	0605015ffH
	DD	01998fb24H
	DD	0d6bde997H
	DD	0894043ccH
	DD	067d99e77H
	DD	0b0e842bdH
	DD	07898b88H
	DD	0e7195b38H
	DD	079c8eedbH
	DD	0a17c0a47H
	DD	07c420fe9H
	DD	0f8841ec9H
	DD	00H
	DD	09808683H
	DD	0322bed48H
	DD	01e1170acH
	DD	06c5a724eH
	DD	0fd0efffbH
	DD	0f853856H
	DD	03daed51eH
	DD	0362d3927H
	DD	0a0fd964H
	DD	0685ca621H
	DD	09b5b54d1H
	DD	024362e3aH
	DD	0c0a67b1H
	DD	09357e70fH
	DD	0b4ee96d2H
	DD	01b9b919eH
	DD	080c0c54fH
	DD	061dc20a2H
	DD	05a774b69H
	DD	01c121a16H
	DD	0e293ba0aH
	DD	0c0a02ae5H
	DD	03c22e043H
	DD	0121b171dH
	DD	0e090d0bH
	DD	0f28bc7adH
	DD	02db6a8b9H
	DD	0141ea9c8H
	DD	057f11985H
	DD	0af75074cH
	DD	0ee99ddbbH
	DD	0a37f60fdH
	DD	0f701269fH
	DD	05c72f5bcH
	DD	044663bc5H
	DD	05bfb7e34H
	DD	08b432976H
	DD	0cb23c6dcH
	DD	0b6edfc68H
	DD	0b8e4f163H
	DD	0d731dccaH
	DD	042638510H
	DD	013972240H
	DD	084c61120H
	DD	0854a247dH
	DD	0d2bb3df8H
	DD	0aef93211H
	DD	0c729a16dH
	DD	01d9e2f4bH
	DD	0dcb230f3H
	DD	0d8652ecH
	DD	077c1e3d0H
	DD	02bb3166cH
	DD	0a970b999H
	DD	0119448faH
	DD	047e96422H
	DD	0a8fc8cc4H
	DD	0a0f03f1aH
	DD	0567d2cd8H
	DD	0223390efH
	DD	087494ec7H
	DD	0d938d1c1H
	DD	08ccaa2feH
	DD	098d40b36H
	DD	0a6f581cfH
	DD	0a57ade28H
	DD	0dab78e26H
	DD	03fadbfa4H
	DD	02c3a9de4H
	DD	05078920dH
	DD	06a5fcc9bH
	DD	0547e4662H
	DD	0f68d13c2H
	DD	090d8b8e8H
	DD	02e39f75eH
	DD	082c3aff5H
	DD	09f5d80beH
	DD	069d0937cH
	DD	06fd52da9H
	DD	0cf2512b3H
	DD	0c8ac993bH
	DD	010187da7H
	DD	0e89c636eH
	DD	0db3bbb7bH
	DD	0cd267809H
	DD	06e5918f4H
	DD	0ec9ab701H
	DD	0834f9aa8H
	DD	0e6956e65H
	DD	0aaffe67eH
	DD	021bccf08H
	DD	0ef15e8e6H
	DD	0bae79bd9H
	DD	04a6f36ceH
	DD	0ea9f09d4H
	DD	029b07cd6H
	DD	031a4b2afH
	DD	02a3f2331H
	DD	0c6a59430H
	DD	035a266c0H
	DD	0744ebc37H
	DD	0fc82caa6H
	DD	0e090d0b0H
	DD	033a7d815H
	DD	0f104984aH
	DD	041ecdaf7H
	DD	07fcd500eH
	DD	01791f62fH
	DD	0764dd68dH
	DD	043efb04dH
	DD	0ccaa4d54H
	DD	0e49604dfH
	DD	09ed1b5e3H
	DD	04c6a881bH
	DD	0c12c1fb8H
	DD	04665517fH
	DD	09d5eea04H
	DD	018c355dH
	DD	0fa877473H
	DD	0fb0b412eH
	DD	0b3671d5aH
	DD	092dbd252H
	DD	0e9105633H
	DD	06dd64713H
	DD	09ad7618cH
	DD	037a10c7aH
	DD	059f8148eH
	DD	0eb133c89H
	DD	0cea927eeH
	DD	0b761c935H
	DD	0e11ce5edH
	DD	07a47b13cH
	DD	09cd2df59H
	DD	055f2733fH
	DD	01814ce79H
	DD	073c737bfH
	DD	053f7cdeaH
	DD	05ffdaa5bH
	DD	0df3d6f14H
	DD	07844db86H
	DD	0caaff381H
	DD	0b968c43eH
	DD	03824342cH
	DD	0c2a3405fH
	DD	0161dc372H
	DD	0bce2250cH
	DD	0283c498bH
	DD	0ff0d9541H
	DD	039a80171H
	DD	080cb3deH
	DD	0d8b4e49cH
	DD	06456c190H
	DD	07bcb8461H
	DD	0d532b670H
	DD	0486c5c74H
	DD	0d0b85742H
_D1	DD	05051f4a7H
	DD	0537e4165H
	DD	0c31a17a4H
	DD	0963a275eH
	DD	0cb3bab6bH
	DD	0f11f9d45H
	DD	0abacfa58H
	DD	0934be303H
	DD	0552030faH
	DD	0f6ad766dH
	DD	09188cc76H
	DD	025f5024cH
	DD	0fc4fe5d7H
	DD	0d7c52acbH
	DD	080263544H
	DD	08fb562a3H
	DD	049deb15aH
	DD	06725ba1bH
	DD	09845ea0eH
	DD	0e15dfec0H
	DD	02c32f75H
	DD	012814cf0H
	DD	0a38d4697H
	DD	0c66bd3f9H
	DD	0e7038f5fH
	DD	09515929cH
	DD	0ebbf6d7aH
	DD	0da955259H
	DD	02dd4be83H
	DD	0d3587421H
	DD	02949e069H
	DD	0448ec9c8H
	DD	06a75c289H
	DD	078f48e79H
	DD	06b99583eH
	DD	0dd27b971H
	DD	0b6bee14fH
	DD	017f088adH
	DD	066c920acH
	DD	0b47dce3aH
	DD	01863df4aH
	DD	082e51a31H
	DD	060975133H
	DD	04562537fH
	DD	0e0b16477H
	DD	084bb6baeH
	DD	01cfe81a0H
	DD	094f9082bH
	DD	058704868H
	DD	0198f45fdH
	DD	08794de6cH
	DD	0b7527bf8H
	DD	023ab73d3H
	DD	0e2724b02H
	DD	057e31f8fH
	DD	02a6655abH
	DD	07b2eb28H
	DD	032fb5c2H
	DD	09a86c57bH
	DD	0a5d33708H
	DD	0f2302887H
	DD	0b223bfa5H
	DD	0ba02036aH
	DD	05ced1682H
	DD	02b8acf1cH
	DD	092a779b4H
	DD	0f0f307f2H
	DD	0a14e69e2H
	DD	0cd65daf4H
	DD	0d50605beH
	DD	01fd13462H
	DD	08ac4a6feH
	DD	09d342e53H
	DD	0a0a2f355H
	DD	032058ae1H
	DD	075a4f6ebH
	DD	0390b83ecH
	DD	0aa4060efH
	DD	065e719fH
	DD	051bd6e10H
	DD	0f93e218aH
	DD	03d96dd06H
	DD	0aedd3e05H
	DD	0464de6bdH
	DD	0b591548dH
	DD	0571c45dH
	DD	06f0406d4H
	DD	0ff605015H
	DD	0241998fbH
	DD	097d6bde9H
	DD	0cc894043H
	DD	07767d99eH
	DD	0bdb0e842H
	DD	08807898bH
	DD	038e7195bH
	DD	0db79c8eeH
	DD	047a17c0aH
	DD	0e97c420fH
	DD	0c9f8841eH
	DD	00H
	DD	083098086H
	DD	048322bedH
	DD	0ac1e1170H
	DD	04e6c5a72H
	DD	0fbfd0effH
	DD	0560f8538H
	DD	01e3daed5H
	DD	027362d39H
	DD	0640a0fd9H
	DD	021685ca6H
	DD	0d19b5b54H
	DD	03a24362eH
	DD	0b10c0a67H
	DD	0f9357e7H
	DD	0d2b4ee96H
	DD	09e1b9b91H
	DD	04f80c0c5H
	DD	0a261dc20H
	DD	0695a774bH
	DD	0161c121aH
	DD	0ae293baH
	DD	0e5c0a02aH
	DD	0433c22e0H
	DD	01d121b17H
	DD	0b0e090dH
	DD	0adf28bc7H
	DD	0b92db6a8H
	DD	0c8141ea9H
	DD	08557f119H
	DD	04caf7507H
	DD	0bbee99ddH
	DD	0fda37f60H
	DD	09ff70126H
	DD	0bc5c72f5H
	DD	0c544663bH
	DD	0345bfb7eH
	DD	0768b4329H
	DD	0dccb23c6H
	DD	068b6edfcH
	DD	063b8e4f1H
	DD	0cad731dcH
	DD	010426385H
	DD	040139722H
	DD	02084c611H
	DD	07d854a24H
	DD	0f8d2bb3dH
	DD	011aef932H
	DD	06dc729a1H
	DD	04b1d9e2fH
	DD	0f3dcb230H
	DD	0ec0d8652H
	DD	0d077c1e3H
	DD	06c2bb316H
	DD	099a970b9H
	DD	0fa119448H
	DD	02247e964H
	DD	0c4a8fc8cH
	DD	01aa0f03fH
	DD	0d8567d2cH
	DD	0ef223390H
	DD	0c787494eH
	DD	0c1d938d1H
	DD	0fe8ccaa2H
	DD	03698d40bH
	DD	0cfa6f581H
	DD	028a57adeH
	DD	026dab78eH
	DD	0a43fadbfH
	DD	0e42c3a9dH
	DD	0d507892H
	DD	09b6a5fccH
	DD	062547e46H
	DD	0c2f68d13H
	DD	0e890d8b8H
	DD	05e2e39f7H
	DD	0f582c3afH
	DD	0be9f5d80H
	DD	07c69d093H
	DD	0a96fd52dH
	DD	0b3cf2512H
	DD	03bc8ac99H
	DD	0a710187dH
	DD	06ee89c63H
	DD	07bdb3bbbH
	DD	09cd2678H
	DD	0f46e5918H
	DD	01ec9ab7H
	DD	0a8834f9aH
	DD	065e6956eH
	DD	07eaaffe6H
	DD	0821bccfH
	DD	0e6ef15e8H
	DD	0d9bae79bH
	DD	0ce4a6f36H
	DD	0d4ea9f09H
	DD	0d629b07cH
	DD	0af31a4b2H
	DD	0312a3f23H
	DD	030c6a594H
	DD	0c035a266H
	DD	037744ebcH
	DD	0a6fc82caH
	DD	0b0e090d0H
	DD	01533a7d8H
	DD	04af10498H
	DD	0f741ecdaH
	DD	0e7fcd50H
	DD	02f1791f6H
	DD	08d764dd6H
	DD	04d43efb0H
	DD	054ccaa4dH
	DD	0dfe49604H
	DD	0e39ed1b5H
	DD	01b4c6a88H
	DD	0b8c12c1fH
	DD	07f466551H
	DD	049d5eeaH
	DD	05d018c35H
	DD	073fa8774H
	DD	02efb0b41H
	DD	05ab3671dH
	DD	05292dbd2H
	DD	033e91056H
	DD	0136dd647H
	DD	08c9ad761H
	DD	07a37a10cH
	DD	08e59f814H
	DD	089eb133cH
	DD	0eecea927H
	DD	035b761c9H
	DD	0ede11ce5H
	DD	03c7a47b1H
	DD	0599cd2dfH
	DD	03f55f273H
	DD	0791814ceH
	DD	0bf73c737H
	DD	0ea53f7cdH
	DD	05b5ffdaaH
	DD	014df3d6fH
	DD	0867844dbH
	DD	081caaff3H
	DD	03eb968c4H
	DD	02c382434H
	DD	05fc2a340H
	DD	072161dc3H
	DD	0cbce225H
	DD	08b283c49H
	DD	041ff0d95H
	DD	07139a801H
	DD	0de080cb3H
	DD	09cd8b4e4H
	DD	0906456c1H
	DD	0617bcb84H
	DD	070d532b6H
	DD	074486c5cH
	DD	042d0b857H
_D2	DD	0a75051f4H
	DD	065537e41H
	DD	0a4c31a17H
	DD	05e963a27H
	DD	06bcb3babH
	DD	045f11f9dH
	DD	058abacfaH
	DD	03934be3H
	DD	0fa552030H
	DD	06df6ad76H
	DD	0769188ccH
	DD	04c25f502H
	DD	0d7fc4fe5H
	DD	0cbd7c52aH
	DD	044802635H
	DD	0a38fb562H
	DD	05a49deb1H
	DD	01b6725baH
	DD	0e9845eaH
	DD	0c0e15dfeH
	DD	07502c32fH
	DD	0f012814cH
	DD	097a38d46H
	DD	0f9c66bd3H
	DD	05fe7038fH
	DD	09c951592H
	DD	07aebbf6dH
	DD	059da9552H
	DD	0832dd4beH
	DD	021d35874H
	DD	0692949e0H
	DD	0c8448ec9H
	DD	0896a75c2H
	DD	07978f48eH
	DD	03e6b9958H
	DD	071dd27b9H
	DD	04fb6bee1H
	DD	0ad17f088H
	DD	0ac66c920H
	DD	03ab47dceH
	DD	04a1863dfH
	DD	03182e51aH
	DD	033609751H
	DD	07f456253H
	DD	077e0b164H
	DD	0ae84bb6bH
	DD	0a01cfe81H
	DD	02b94f908H
	DD	068587048H
	DD	0fd198f45H
	DD	06c8794deH
	DD	0f8b7527bH
	DD	0d323ab73H
	DD	02e2724bH
	DD	08f57e31fH
	DD	0ab2a6655H
	DD	02807b2ebH
	DD	0c2032fb5H
	DD	07b9a86c5H
	DD	08a5d337H
	DD	087f23028H
	DD	0a5b223bfH
	DD	06aba0203H
	DD	0825ced16H
	DD	01c2b8acfH
	DD	0b492a779H
	DD	0f2f0f307H
	DD	0e2a14e69H
	DD	0f4cd65daH
	DD	0bed50605H
	DD	0621fd134H
	DD	0fe8ac4a6H
	DD	0539d342eH
	DD	055a0a2f3H
	DD	0e132058aH
	DD	0eb75a4f6H
	DD	0ec390b83H
	DD	0efaa4060H
	DD	09f065e71H
	DD	01051bd6eH
	DD	08af93e21H
	DD	063d96ddH
	DD	05aedd3eH
	DD	0bd464de6H
	DD	08db59154H
	DD	05d0571c4H
	DD	0d46f0406H
	DD	015ff6050H
	DD	0fb241998H
	DD	0e997d6bdH
	DD	043cc8940H
	DD	09e7767d9H
	DD	042bdb0e8H
	DD	08b880789H
	DD	05b38e719H
	DD	0eedb79c8H
	DD	0a47a17cH
	DD	0fe97c42H
	DD	01ec9f884H
	DD	00H
	DD	086830980H
	DD	0ed48322bH
	DD	070ac1e11H
	DD	0724e6c5aH
	DD	0fffbfd0eH
	DD	038560f85H
	DD	0d51e3daeH
	DD	03927362dH
	DD	0d9640a0fH
	DD	0a621685cH
	DD	054d19b5bH
	DD	02e3a2436H
	DD	067b10c0aH
	DD	0e70f9357H
	DD	096d2b4eeH
	DD	0919e1b9bH
	DD	0c54f80c0H
	DD	020a261dcH
	DD	04b695a77H
	DD	01a161c12H
	DD	0ba0ae293H
	DD	02ae5c0a0H
	DD	0e0433c22H
	DD	0171d121bH
	DD	0d0b0e09H
	DD	0c7adf28bH
	DD	0a8b92db6H
	DD	0a9c8141eH
	DD	0198557f1H
	DD	074caf75H
	DD	0ddbbee99H
	DD	060fda37fH
	DD	0269ff701H
	DD	0f5bc5c72H
	DD	03bc54466H
	DD	07e345bfbH
	DD	029768b43H
	DD	0c6dccb23H
	DD	0fc68b6edH
	DD	0f163b8e4H
	DD	0dccad731H
	DD	085104263H
	DD	022401397H
	DD	0112084c6H
	DD	0247d854aH
	DD	03df8d2bbH
	DD	03211aef9H
	DD	0a16dc729H
	DD	02f4b1d9eH
	DD	030f3dcb2H
	DD	052ec0d86H
	DD	0e3d077c1H
	DD	0166c2bb3H
	DD	0b999a970H
	DD	048fa1194H
	DD	0642247e9H
	DD	08cc4a8fcH
	DD	03f1aa0f0H
	DD	02cd8567dH
	DD	090ef2233H
	DD	04ec78749H
	DD	0d1c1d938H
	DD	0a2fe8ccaH
	DD	0b3698d4H
	DD	081cfa6f5H
	DD	0de28a57aH
	DD	08e26dab7H
	DD	0bfa43fadH
	DD	09de42c3aH
	DD	0920d5078H
	DD	0cc9b6a5fH
	DD	04662547eH
	DD	013c2f68dH
	DD	0b8e890d8H
	DD	0f75e2e39H
	DD	0aff582c3H
	DD	080be9f5dH
	DD	0937c69d0H
	DD	02da96fd5H
	DD	012b3cf25H
	DD	0993bc8acH
	DD	07da71018H
	DD	0636ee89cH
	DD	0bb7bdb3bH
	DD	07809cd26H
	DD	018f46e59H
	DD	0b701ec9aH
	DD	09aa8834fH
	DD	06e65e695H
	DD	0e67eaaffH
	DD	0cf0821bcH
	DD	0e8e6ef15H
	DD	09bd9bae7H
	DD	036ce4a6fH
	DD	09d4ea9fH
	DD	07cd629b0H
	DD	0b2af31a4H
	DD	023312a3fH
	DD	09430c6a5H
	DD	066c035a2H
	DD	0bc37744eH
	DD	0caa6fc82H
	DD	0d0b0e090H
	DD	0d81533a7H
	DD	0984af104H
	DD	0daf741ecH
	DD	0500e7fcdH
	DD	0f62f1791H
	DD	0d68d764dH
	DD	0b04d43efH
	DD	04d54ccaaH
	DD	04dfe496H
	DD	0b5e39ed1H
	DD	0881b4c6aH
	DD	01fb8c12cH
	DD	0517f4665H
	DD	0ea049d5eH
	DD	0355d018cH
	DD	07473fa87H
	DD	0412efb0bH
	DD	01d5ab367H
	DD	0d25292dbH
	DD	05633e910H
	DD	047136dd6H
	DD	0618c9ad7H
	DD	0c7a37a1H
	DD	0148e59f8H
	DD	03c89eb13H
	DD	027eecea9H
	DD	0c935b761H
	DD	0e5ede11cH
	DD	0b13c7a47H
	DD	0df599cd2H
	DD	0733f55f2H
	DD	0ce791814H
	DD	037bf73c7H
	DD	0cdea53f7H
	DD	0aa5b5ffdH
	DD	06f14df3dH
	DD	0db867844H
	DD	0f381caafH
	DD	0c43eb968H
	DD	0342c3824H
	DD	0405fc2a3H
	DD	0c372161dH
	DD	0250cbce2H
	DD	0498b283cH
	DD	09541ff0dH
	DD	017139a8H
	DD	0b3de080cH
	DD	0e49cd8b4H
	DD	0c1906456H
	DD	084617bcbH
	DD	0b670d532H
	DD	05c74486cH
	DD	05742d0b8H
_D3	DD	0f4a75051H
	DD	04165537eH
	DD	017a4c31aH
	DD	0275e963aH
	DD	0ab6bcb3bH
	DD	09d45f11fH
	DD	0fa58abacH
	DD	0e303934bH
	DD	030fa5520H
	DD	0766df6adH
	DD	0cc769188H
	DD	024c25f5H
	DD	0e5d7fc4fH
	DD	02acbd7c5H
	DD	035448026H
	DD	062a38fb5H
	DD	0b15a49deH
	DD	0ba1b6725H
	DD	0ea0e9845H
	DD	0fec0e15dH
	DD	02f7502c3H
	DD	04cf01281H
	DD	04697a38dH
	DD	0d3f9c66bH
	DD	08f5fe703H
	DD	0929c9515H
	DD	06d7aebbfH
	DD	05259da95H
	DD	0be832dd4H
	DD	07421d358H
	DD	0e0692949H
	DD	0c9c8448eH
	DD	0c2896a75H
	DD	08e7978f4H
	DD	0583e6b99H
	DD	0b971dd27H
	DD	0e14fb6beH
	DD	088ad17f0H
	DD	020ac66c9H
	DD	0ce3ab47dH
	DD	0df4a1863H
	DD	01a3182e5H
	DD	051336097H
	DD	0537f4562H
	DD	06477e0b1H
	DD	06bae84bbH
	DD	081a01cfeH
	DD	082b94f9H
	DD	048685870H
	DD	045fd198fH
	DD	0de6c8794H
	DD	07bf8b752H
	DD	073d323abH
	DD	04b02e272H
	DD	01f8f57e3H
	DD	055ab2a66H
	DD	0eb2807b2H
	DD	0b5c2032fH
	DD	0c57b9a86H
	DD	03708a5d3H
	DD	02887f230H
	DD	0bfa5b223H
	DD	036aba02H
	DD	016825cedH
	DD	0cf1c2b8aH
	DD	079b492a7H
	DD	07f2f0f3H
	DD	069e2a14eH
	DD	0daf4cd65H
	DD	05bed506H
	DD	034621fd1H
	DD	0a6fe8ac4H
	DD	02e539d34H
	DD	0f355a0a2H
	DD	08ae13205H
	DD	0f6eb75a4H
	DD	083ec390bH
	DD	060efaa40H
	DD	0719f065eH
	DD	06e1051bdH
	DD	0218af93eH
	DD	0dd063d96H
	DD	03e05aeddH
	DD	0e6bd464dH
	DD	0548db591H
	DD	0c45d0571H
	DD	06d46f04H
	DD	05015ff60H
	DD	098fb2419H
	DD	0bde997d6H
	DD	04043cc89H
	DD	0d99e7767H
	DD	0e842bdb0H
	DD	0898b8807H
	DD	0195b38e7H
	DD	0c8eedb79H
	DD	07c0a47a1H
	DD	0420fe97cH
	DD	0841ec9f8H
	DD	00H
	DD	080868309H
	DD	02bed4832H
	DD	01170ac1eH
	DD	05a724e6cH
	DD	0efffbfdH
	DD	08538560fH
	DD	0aed51e3dH
	DD	02d392736H
	DD	0fd9640aH
	DD	05ca62168H
	DD	05b54d19bH
	DD	0362e3a24H
	DD	0a67b10cH
	DD	057e70f93H
	DD	0ee96d2b4H
	DD	09b919e1bH
	DD	0c0c54f80H
	DD	0dc20a261H
	DD	0774b695aH
	DD	0121a161cH
	DD	093ba0ae2H
	DD	0a02ae5c0H
	DD	022e0433cH
	DD	01b171d12H
	DD	090d0b0eH
	DD	08bc7adf2H
	DD	0b6a8b92dH
	DD	01ea9c814H
	DD	0f1198557H
	DD	075074cafH
	DD	099ddbbeeH
	DD	07f60fda3H
	DD	01269ff7H
	DD	072f5bc5cH
	DD	0663bc544H
	DD	0fb7e345bH
	DD	04329768bH
	DD	023c6dccbH
	DD	0edfc68b6H
	DD	0e4f163b8H
	DD	031dccad7H
	DD	063851042H
	DD	097224013H
	DD	0c6112084H
	DD	04a247d85H
	DD	0bb3df8d2H
	DD	0f93211aeH
	DD	029a16dc7H
	DD	09e2f4b1dH
	DD	0b230f3dcH
	DD	08652ec0dH
	DD	0c1e3d077H
	DD	0b3166c2bH
	DD	070b999a9H
	DD	09448fa11H
	DD	0e9642247H
	DD	0fc8cc4a8H
	DD	0f03f1aa0H
	DD	07d2cd856H
	DD	03390ef22H
	DD	0494ec787H
	DD	038d1c1d9H
	DD	0caa2fe8cH
	DD	0d40b3698H
	DD	0f581cfa6H
	DD	07ade28a5H
	DD	0b78e26daH
	DD	0adbfa43fH
	DD	03a9de42cH
	DD	078920d50H
	DD	05fcc9b6aH
	DD	07e466254H
	DD	08d13c2f6H
	DD	0d8b8e890H
	DD	039f75e2eH
	DD	0c3aff582H
	DD	05d80be9fH
	DD	0d0937c69H
	DD	0d52da96fH
	DD	02512b3cfH
	DD	0ac993bc8H
	DD	0187da710H
	DD	09c636ee8H
	DD	03bbb7bdbH
	DD	0267809cdH
	DD	05918f46eH
	DD	09ab701ecH
	DD	04f9aa883H
	DD	0956e65e6H
	DD	0ffe67eaaH
	DD	0bccf0821H
	DD	015e8e6efH
	DD	0e79bd9baH
	DD	06f36ce4aH
	DD	09f09d4eaH
	DD	0b07cd629H
	DD	0a4b2af31H
	DD	03f23312aH
	DD	0a59430c6H
	DD	0a266c035H
	DD	04ebc3774H
	DD	082caa6fcH
	DD	090d0b0e0H
	DD	0a7d81533H
	DD	04984af1H
	DD	0ecdaf741H
	DD	0cd500e7fH
	DD	091f62f17H
	DD	04dd68d76H
	DD	0efb04d43H
	DD	0aa4d54ccH
	DD	09604dfe4H
	DD	0d1b5e39eH
	DD	06a881b4cH
	DD	02c1fb8c1H
	DD	065517f46H
	DD	05eea049dH
	DD	08c355d01H
	DD	0877473faH
	DD	0b412efbH
	DD	0671d5ab3H
	DD	0dbd25292H
	DD	0105633e9H
	DD	0d647136dH
	DD	0d7618c9aH
	DD	0a10c7a37H
	DD	0f8148e59H
	DD	0133c89ebH
	DD	0a927eeceH
	DD	061c935b7H
	DD	01ce5ede1H
	DD	047b13c7aH
	DD	0d2df599cH
	DD	0f2733f55H
	DD	014ce7918H
	DD	0c737bf73H
	DD	0f7cdea53H
	DD	0fdaa5b5fH
	DD	03d6f14dfH
	DD	044db8678H
	DD	0aff381caH
	DD	068c43eb9H
	DD	024342c38H
	DD	0a3405fc2H
	DD	01dc37216H
	DD	0e2250cbcH
	DD	03c498b28H
	DD	0d9541ffH
	DD	0a8017139H
	DD	0cb3de08H
	DD	0b4e49cd8H
	DD	056c19064H
	DD	0cb84617bH
	DD	032b670d5H
	DD	06c5c7448H
	DD	0b85742d0H
?C1@?1??aes_encrypt_nb_4@@9@9 DD 01H			; `aes_encrypt_nb_4'::`2'::C1
?C2@?1??aes_encrypt_nb_4@@9@9 DD 02H			; `aes_encrypt_nb_4'::`2'::C2
?C3@?1??aes_encrypt_nb_4@@9@9 DD 03H			; `aes_encrypt_nb_4'::`2'::C3
?Nb@?1??aes_encrypt_nb_4@@9@9 DD 04H			; `aes_encrypt_nb_4'::`2'::Nb
?C1@?1??aes_encrypt_nb_6@@9@9 DD 01H			; `aes_encrypt_nb_6'::`2'::C1
?C2@?1??aes_encrypt_nb_6@@9@9 DD 02H			; `aes_encrypt_nb_6'::`2'::C2
?C3@?1??aes_encrypt_nb_6@@9@9 DD 03H			; `aes_encrypt_nb_6'::`2'::C3
?Nb@?1??aes_encrypt_nb_6@@9@9 DD 06H			; `aes_encrypt_nb_6'::`2'::Nb
?C1@?1??aes_encrypt_nb_8@@9@9 DD 01H			; `aes_encrypt_nb_8'::`2'::C1
?C2@?1??aes_encrypt_nb_8@@9@9 DD 03H			; `aes_encrypt_nb_8'::`2'::C2
?C3@?1??aes_encrypt_nb_8@@9@9 DD 04H			; `aes_encrypt_nb_8'::`2'::C3
?Nb@?1??aes_encrypt_nb_8@@9@9 DD 08H			; `aes_encrypt_nb_8'::`2'::Nb
?C1@?1??aes_decrypt_nb_4@@9@9 DD 03H			; `aes_decrypt_nb_4'::`2'::C1
?C2@?1??aes_decrypt_nb_4@@9@9 DD 02H			; `aes_decrypt_nb_4'::`2'::C2
?C3@?1??aes_decrypt_nb_4@@9@9 DD 01H			; `aes_decrypt_nb_4'::`2'::C3
?Nb@?1??aes_decrypt_nb_4@@9@9 DD 04H			; `aes_decrypt_nb_4'::`2'::Nb
?C1@?1??aes_decrypt_nb_6@@9@9 DD 05H			; `aes_decrypt_nb_6'::`2'::C1
?C2@?1??aes_decrypt_nb_6@@9@9 DD 04H			; `aes_decrypt_nb_6'::`2'::C2
?C3@?1??aes_decrypt_nb_6@@9@9 DD 03H			; `aes_decrypt_nb_6'::`2'::C3
?Nb@?1??aes_decrypt_nb_6@@9@9 DD 06H			; `aes_decrypt_nb_6'::`2'::Nb
?C1@?1??aes_decrypt_nb_8@@9@9 DD 07H			; `aes_decrypt_nb_8'::`2'::C1
?C2@?1??aes_decrypt_nb_8@@9@9 DD 05H			; `aes_decrypt_nb_8'::`2'::C2
?C3@?1??aes_decrypt_nb_8@@9@9 DD 04H			; `aes_decrypt_nb_8'::`2'::C3
?Nb@?1??aes_decrypt_nb_8@@9@9 DD 08H			; `aes_decrypt_nb_8'::`2'::Nb
_ssh_aes128_ctr DD FLAT:_aes_make_context
	DD	FLAT:_aes_free_context
	DD	FLAT:_aes_iv
	DD	FLAT:_aes128_key
	DD	FLAT:_aes_ssh2_sdctr
	DD	FLAT:_aes_ssh2_sdctr
	DD	FLAT:$SG7571
	DD	010H
	DD	080H
	DD	00H
	DD	FLAT:$SG7572
_ssh_aes192_ctr DD FLAT:_aes_make_context
	DD	FLAT:_aes_free_context
	DD	FLAT:_aes_iv
	DD	FLAT:_aes192_key
	DD	FLAT:_aes_ssh2_sdctr
	DD	FLAT:_aes_ssh2_sdctr
	DD	FLAT:$SG7574
	DD	010H
	DD	0c0H
	DD	00H
	DD	FLAT:$SG7575
_ssh_aes256_ctr DD FLAT:_aes_make_context
	DD	FLAT:_aes_free_context
	DD	FLAT:_aes_iv
	DD	FLAT:_aes256_key
	DD	FLAT:_aes_ssh2_sdctr
	DD	FLAT:_aes_ssh2_sdctr
	DD	FLAT:$SG7577
	DD	010H
	DD	0100H
	DD	00H
	DD	FLAT:$SG7578
_ssh_aes128 DD	FLAT:_aes_make_context
	DD	FLAT:_aes_free_context
	DD	FLAT:_aes_iv
	DD	FLAT:_aes128_key
	DD	FLAT:_aes_ssh2_encrypt_blk
	DD	FLAT:_aes_ssh2_decrypt_blk
	DD	FLAT:$SG7580
	DD	010H
	DD	080H
	DD	01H
	DD	FLAT:$SG7581
_ssh_aes192 DD	FLAT:_aes_make_context
	DD	FLAT:_aes_free_context
	DD	FLAT:_aes_iv
	DD	FLAT:_aes192_key
	DD	FLAT:_aes_ssh2_encrypt_blk
	DD	FLAT:_aes_ssh2_decrypt_blk
	DD	FLAT:$SG7583
	DD	010H
	DD	0c0H
	DD	01H
	DD	FLAT:$SG7584
_ssh_aes256 DD	FLAT:_aes_make_context
	DD	FLAT:_aes_free_context
	DD	FLAT:_aes_iv
	DD	FLAT:_aes256_key
	DD	FLAT:_aes_ssh2_encrypt_blk
	DD	FLAT:_aes_ssh2_decrypt_blk
	DD	FLAT:$SG7586
	DD	010H
	DD	0100H
	DD	01H
	DD	FLAT:$SG7587
_ssh_rijndael_lysator DD FLAT:_aes_make_context
	DD	FLAT:_aes_free_context
	DD	FLAT:_aes_iv
	DD	FLAT:_aes256_key
	DD	FLAT:_aes_ssh2_encrypt_blk
	DD	FLAT:_aes_ssh2_decrypt_blk
	DD	FLAT:$SG7589
	DD	010H
	DD	0100H
	DD	01H
	DD	FLAT:$SG7590
_aes_list DD	FLAT:_ssh_aes256_ctr
	DD	FLAT:_ssh_aes256
	DD	FLAT:_ssh_rijndael_lysator
	DD	FLAT:_ssh_aes192_ctr
	DD	FLAT:_ssh_aes192
	DD	FLAT:_ssh_aes128_ctr
	DD	FLAT:_ssh_aes128
_ssh2_aes DD	07H
	DD	FLAT:_aes_list
CONST	ENDS
EXTRN	_safemalloc:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\putty\sshaes.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_aes_make_context PROC
; Line 1101
	push	ebp
	mov	ebp, esp
; Line 1102
	push	1008					; 000003f0H
	push	1
	call	_safemalloc
	add	esp, 8
; Line 1103
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_aes_make_context ENDP
_TEXT	ENDS
EXTRN	_safefree:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_handle$ = 8						; size = 4
_aes_free_context PROC
; Line 1106
	push	ebp
	mov	ebp, esp
; Line 1107
	mov	eax, DWORD PTR _handle$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 1108
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_aes_free_context ENDP
; Function compile flags: /Odtp /RTCsu
_ctx$ = -4						; size = 4
_handle$ = 8						; size = 4
_key$ = 12						; size = 4
_aes128_key PROC
; Line 1111
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1112
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ctx$[ebp], eax
; Line 1113
	push	16					; 00000010H
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _ctx$[ebp]
	push	edx
	call	_aes_setup
	add	esp, 16					; 00000010H
; Line 1114
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_aes128_key ENDP
_TEXT	ENDS
EXTRN	__wassert:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv85 = -76						; size = 4
_d$7359 = -72						; size = 4
_c$7358 = -68						; size = 4
_b$7357 = -64						; size = 4
_a$7356 = -60						; size = 4
_temp$7354 = -56					; size = 4
_d$7347 = -52						; size = 4
_c$7346 = -48						; size = 4
_b$7345 = -44						; size = 4
_a$7344 = -40						; size = 4
_d$7341 = -36						; size = 4
_c$7340 = -32						; size = 4
_b$7339 = -28						; size = 4
_a$7338 = -24						; size = 4
_temp$7336 = -20					; size = 4
_rconst$ = -16						; size = 4
_Nk$ = -12						; size = 4
_j$ = -8						; size = 4
_i$ = -4						; size = 4
_ctx$ = 8						; size = 4
_blocklen$ = 12						; size = 4
_key$ = 16						; size = 4
_keylen$ = 20						; size = 4
_aes_setup PROC
; Line 931
	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	edi
	lea	edi, DWORD PTR [ebp-76]
	mov	ecx, 19					; 00000013H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 934
	cmp	DWORD PTR _blocklen$[ebp], 16		; 00000010H
	je	SHORT $LN23@aes_setup
	cmp	DWORD PTR _blocklen$[ebp], 24		; 00000018H
	je	SHORT $LN23@aes_setup
	cmp	DWORD PTR _blocklen$[ebp], 32		; 00000020H
	je	SHORT $LN23@aes_setup
	push	934					; 000003a6H
	push	OFFSET $SG7313
	push	OFFSET $SG7314
	call	__wassert
	add	esp, 12					; 0000000cH
$LN23@aes_setup:
; Line 935
	cmp	DWORD PTR _keylen$[ebp], 16		; 00000010H
	je	SHORT $LN24@aes_setup
	cmp	DWORD PTR _keylen$[ebp], 24		; 00000018H
	je	SHORT $LN24@aes_setup
	cmp	DWORD PTR _keylen$[ebp], 32		; 00000020H
	je	SHORT $LN24@aes_setup
	push	935					; 000003a7H
	push	OFFSET $SG7316
	push	OFFSET $SG7317
	call	__wassert
	add	esp, 12					; 0000000cH
$LN24@aes_setup:
; Line 940
	mov	eax, DWORD PTR _keylen$[ebp]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	mov	DWORD PTR _Nk$[ebp], eax
; Line 941
	mov	eax, DWORD PTR _blocklen$[ebp]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [edx+1000], eax
; Line 942
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	ecx, DWORD PTR [eax+1000]
	cmp	ecx, DWORD PTR _Nk$[ebp]
	jle	SHORT $LN25@aes_setup
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+1000]
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN26@aes_setup
$LN25@aes_setup:
	mov	ecx, DWORD PTR _Nk$[ebp]
	mov	DWORD PTR tv85[ebp], ecx
$LN26@aes_setup:
	mov	edx, DWORD PTR tv85[ebp]
	add	edx, 6
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [eax+1004], edx
; Line 947
	mov	ecx, DWORD PTR _ctx$[ebp]
	cmp	DWORD PTR [ecx+1000], 8
	jne	SHORT $LN20@aes_setup
; Line 948
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [edx+960], OFFSET _aes_encrypt_nb_8
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [eax+964], OFFSET _aes_decrypt_nb_8
	jmp	SHORT $LN19@aes_setup
$LN20@aes_setup:
; Line 949
	mov	ecx, DWORD PTR _ctx$[ebp]
	cmp	DWORD PTR [ecx+1000], 6
	jne	SHORT $LN18@aes_setup
; Line 950
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [edx+960], OFFSET _aes_encrypt_nb_6
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [eax+964], OFFSET _aes_decrypt_nb_6
	jmp	SHORT $LN19@aes_setup
$LN18@aes_setup:
; Line 951
	mov	ecx, DWORD PTR _ctx$[ebp]
	cmp	DWORD PTR [ecx+1000], 4
	jne	SHORT $LN19@aes_setup
; Line 952
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [edx+960], OFFSET _aes_encrypt_nb_4
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [eax+964], OFFSET _aes_decrypt_nb_4
$LN19@aes_setup:
; Line 957
	mov	DWORD PTR _rconst$[ebp], 1
; Line 958
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN15@aes_setup
$LN14@aes_setup:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN15@aes_setup:
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+1004]
	add	eax, 1
	mov	ecx, DWORD PTR _ctx$[ebp]
	imul	eax, DWORD PTR [ecx+1000]
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN13@aes_setup
; Line 959
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR _Nk$[ebp]
	jge	SHORT $LN12@aes_setup
; Line 960
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _key$[ebp]
	movzx	edx, BYTE PTR [ecx+eax*4]
	shl	edx, 24					; 00000018H
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _key$[ebp]
	movzx	eax, BYTE PTR [ecx+eax*4+1]
	shl	eax, 16					; 00000010H
	or	edx, eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _key$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx*4+2]
	shl	ecx, 8
	or	edx, ecx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _key$[ebp]
	movzx	eax, BYTE PTR [ecx+eax*4+3]
	or	edx, eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 961
	jmp	$LN11@aes_setup
$LN12@aes_setup:
; Line 962
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4-4]
	mov	DWORD PTR _temp$7336[ebp], eax
; Line 963
	mov	eax, DWORD PTR _i$[ebp]
	cdq
	idiv	DWORD PTR _Nk$[ebp]
	test	edx, edx
	jne	$LN10@aes_setup
; Line 965
	mov	ecx, DWORD PTR _temp$7336[ebp]
	shr	ecx, 16					; 00000010H
	and	ecx, 255				; 000000ffH
	mov	DWORD PTR _a$7338[ebp], ecx
; Line 966
	mov	edx, DWORD PTR _temp$7336[ebp]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	mov	DWORD PTR _b$7339[ebp], edx
; Line 967
	mov	eax, DWORD PTR _temp$7336[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _c$7340[ebp], eax
; Line 968
	mov	ecx, DWORD PTR _temp$7336[ebp]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	DWORD PTR _d$7341[ebp], ecx
; Line 969
	mov	edx, DWORD PTR _a$7338[ebp]
	movzx	eax, BYTE PTR _Sbox[edx]
	xor	eax, DWORD PTR _rconst$[ebp]
	mov	DWORD PTR _temp$7336[ebp], eax
; Line 970
	mov	ecx, DWORD PTR _temp$7336[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _b$7339[ebp]
	movzx	eax, BYTE PTR _Sbox[edx]
	or	ecx, eax
	mov	DWORD PTR _temp$7336[ebp], ecx
; Line 971
	mov	ecx, DWORD PTR _temp$7336[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _c$7340[ebp]
	movzx	eax, BYTE PTR _Sbox[edx]
	or	ecx, eax
	mov	DWORD PTR _temp$7336[ebp], ecx
; Line 972
	mov	ecx, DWORD PTR _temp$7336[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _d$7341[ebp]
	movzx	eax, BYTE PTR _Sbox[edx]
	or	ecx, eax
	mov	DWORD PTR _temp$7336[ebp], ecx
; Line 973
	mov	ecx, DWORD PTR _rconst$[ebp]
	and	ecx, 127				; 0000007fH
	shl	ecx, 1
	mov	edx, DWORD PTR _rconst$[ebp]
	and	edx, 128				; 00000080H
	neg	edx
	sbb	edx, edx
	and	edx, 27					; 0000001bH
	xor	ecx, edx
	mov	DWORD PTR _rconst$[ebp], ecx
	jmp	$LN9@aes_setup
$LN10@aes_setup:
; Line 974
	mov	eax, DWORD PTR _i$[ebp]
	cdq
	idiv	DWORD PTR _Nk$[ebp]
	cmp	edx, 4
	jne	$LN9@aes_setup
	cmp	DWORD PTR _Nk$[ebp], 6
	jle	$LN9@aes_setup
; Line 976
	mov	eax, DWORD PTR _temp$7336[ebp]
	shr	eax, 24					; 00000018H
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _a$7344[ebp], eax
; Line 977
	mov	ecx, DWORD PTR _temp$7336[ebp]
	shr	ecx, 16					; 00000010H
	and	ecx, 255				; 000000ffH
	mov	DWORD PTR _b$7345[ebp], ecx
; Line 978
	mov	edx, DWORD PTR _temp$7336[ebp]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	mov	DWORD PTR _c$7346[ebp], edx
; Line 979
	mov	eax, DWORD PTR _temp$7336[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _d$7347[ebp], eax
; Line 980
	mov	ecx, DWORD PTR _a$7344[ebp]
	movzx	edx, BYTE PTR _Sbox[ecx]
	mov	DWORD PTR _temp$7336[ebp], edx
; Line 981
	mov	eax, DWORD PTR _temp$7336[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _b$7345[ebp]
	movzx	edx, BYTE PTR _Sbox[ecx]
	or	eax, edx
	mov	DWORD PTR _temp$7336[ebp], eax
; Line 982
	mov	eax, DWORD PTR _temp$7336[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _c$7346[ebp]
	movzx	edx, BYTE PTR _Sbox[ecx]
	or	eax, edx
	mov	DWORD PTR _temp$7336[ebp], eax
; Line 983
	mov	eax, DWORD PTR _temp$7336[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _d$7347[ebp]
	movzx	edx, BYTE PTR _Sbox[ecx]
	or	eax, edx
	mov	DWORD PTR _temp$7336[ebp], eax
$LN9@aes_setup:
; Line 985
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, DWORD PTR _Nk$[ebp]
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	xor	edx, DWORD PTR _temp$7336[ebp]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
$LN11@aes_setup:
; Line 987
	jmp	$LN14@aes_setup
$LN13@aes_setup:
; Line 992
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@aes_setup
$LN6@aes_setup:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN7@aes_setup:
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+1004]
	jg	$LN21@aes_setup
; Line 993
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN4@aes_setup
$LN3@aes_setup:
	mov	edx, DWORD PTR _j$[ebp]
	add	edx, 1
	mov	DWORD PTR _j$[ebp], edx
$LN4@aes_setup:
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	cmp	ecx, DWORD PTR [eax+1000]
	jge	$LN2@aes_setup
; Line 995
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+1004]
	sub	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _ctx$[ebp]
	imul	eax, DWORD PTR [ecx+1000]
	add	eax, DWORD PTR _j$[ebp]
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _temp$7354[ebp], eax
; Line 996
	cmp	DWORD PTR _i$[ebp], 0
	je	$LN1@aes_setup
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR [ecx+1004]
	je	$LN1@aes_setup
; Line 1004
	mov	eax, DWORD PTR _temp$7354[ebp]
	shr	eax, 24					; 00000018H
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _a$7356[ebp], eax
; Line 1005
	mov	ecx, DWORD PTR _temp$7354[ebp]
	shr	ecx, 16					; 00000010H
	and	ecx, 255				; 000000ffH
	mov	DWORD PTR _b$7357[ebp], ecx
; Line 1006
	mov	edx, DWORD PTR _temp$7354[ebp]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	mov	DWORD PTR _c$7358[ebp], edx
; Line 1007
	mov	eax, DWORD PTR _temp$7354[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _d$7359[ebp], eax
; Line 1008
	mov	ecx, DWORD PTR _a$7356[ebp]
	movzx	edx, BYTE PTR _Sbox[ecx]
	mov	eax, DWORD PTR _D0[edx*4]
	mov	DWORD PTR _temp$7354[ebp], eax
; Line 1009
	mov	ecx, DWORD PTR _b$7357[ebp]
	movzx	edx, BYTE PTR _Sbox[ecx]
	mov	eax, DWORD PTR _temp$7354[ebp]
	xor	eax, DWORD PTR _D1[edx*4]
	mov	DWORD PTR _temp$7354[ebp], eax
; Line 1010
	mov	ecx, DWORD PTR _c$7358[ebp]
	movzx	edx, BYTE PTR _Sbox[ecx]
	mov	eax, DWORD PTR _temp$7354[ebp]
	xor	eax, DWORD PTR _D2[edx*4]
	mov	DWORD PTR _temp$7354[ebp], eax
; Line 1011
	mov	ecx, DWORD PTR _d$7359[ebp]
	movzx	edx, BYTE PTR _Sbox[ecx]
	mov	eax, DWORD PTR _temp$7354[ebp]
	xor	eax, DWORD PTR _D3[edx*4]
	mov	DWORD PTR _temp$7354[ebp], eax
$LN1@aes_setup:
; Line 1013
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, DWORD PTR [ecx+1000]
	add	edx, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	ecx, DWORD PTR _temp$7354[ebp]
	mov	DWORD PTR [eax+edx*4+480], ecx
; Line 1014
	jmp	$LN3@aes_setup
$LN2@aes_setup:
; Line 1015
	jmp	$LN6@aes_setup
$LN21@aes_setup:
; Line 1016
	pop	edi
	add	esp, 76					; 0000004cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_aes_setup ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_newstate$ = -32					; size = 16
_keysched$ = -12					; size = 4
_i$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_block$ = 12						; size = 4
_aes_encrypt_nb_4 PROC
; Line 683
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 686
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _keysched$[ebp], eax
; Line 688
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@aes_encryp
$LN2@aes_encryp:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN3@aes_encryp:
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+1004]
	sub	eax, 1
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN1@aes_encryp
; Line 689
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+12], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
; Line 690
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_4@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _E0[ecx*4]
	xor	ecx, DWORD PTR _E1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_4@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_4@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E3[edx*4]
	mov	DWORD PTR _newstate$[ebp], ecx
; Line 691
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_4@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _E0[ecx*4]
	xor	ecx, DWORD PTR _E1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_4@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_4@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E3[edx*4]
	mov	DWORD PTR _newstate$[ebp+4], ecx
; Line 692
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_4@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _E0[ecx*4]
	xor	ecx, DWORD PTR _E1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_4@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_4@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E3[edx*4]
	mov	DWORD PTR _newstate$[ebp+8], ecx
; Line 693
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_4@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _E0[ecx*4]
	xor	ecx, DWORD PTR _E1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_4@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_4@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E3[edx*4]
	mov	DWORD PTR _newstate$[ebp+12], ecx
; Line 694
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 695
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _newstate$[ebp+4]
	mov	DWORD PTR [edx+4], eax
; Line 696
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
; Line 697
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp+12]
	mov	DWORD PTR [eax+12], ecx
; Line 698
	jmp	$LN2@aes_encryp
$LN1@aes_encryp:
; Line 699
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+8]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+12], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
; Line 700
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sbox[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_4@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_4@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_4@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp], ecx
; Line 701
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sbox[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_4@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_4@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_4@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+4], ecx
; Line 702
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sbox[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_4@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_4@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_4@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+8], ecx
; Line 703
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sbox[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_4@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_4@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_4@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+12], ecx
; Line 704
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 705
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp+4]
	mov	DWORD PTR [eax+4], ecx
; Line 706
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _newstate$[ebp+8]
	mov	DWORD PTR [edx+8], eax
; Line 707
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp+12]
	mov	DWORD PTR [ecx+12], edx
; Line 708
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+12]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
; Line 709
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@aes_encryp
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@aes_encryp:
	DD	1
	DD	$LN7@aes_encryp
$LN7@aes_encryp:
	DD	-32					; ffffffe0H
	DD	16					; 00000010H
	DD	$LN6@aes_encryp
$LN6@aes_encryp:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
_aes_encrypt_nb_4 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_newstate$ = -40					; size = 24
_keysched$ = -12					; size = 4
_i$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_block$ = 12						; size = 4
_aes_encrypt_nb_6 PROC
; Line 711
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	edi
	lea	edi, DWORD PTR [ebp-44]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 714
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _keysched$[ebp], eax
; Line 716
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@aes_encryp@2
$LN2@aes_encryp@2:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN3@aes_encryp@2:
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+1004]
	sub	eax, 1
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN1@aes_encryp@2
; Line 717
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+12], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+16]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+16], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+20], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
; Line 718
	mov	ecx, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [ecx]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_6@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _E0[ecx*4]
	xor	ecx, DWORD PTR _E1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_6@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_6@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E3[edx*4]
	mov	DWORD PTR _newstate$[ebp], ecx
; Line 719
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_6@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _E0[ecx*4]
	xor	ecx, DWORD PTR _E1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_6@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_6@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E3[edx*4]
	mov	DWORD PTR _newstate$[ebp+4], ecx
; Line 720
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_6@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _E0[ecx*4]
	xor	ecx, DWORD PTR _E1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_6@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_6@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E3[edx*4]
	mov	DWORD PTR _newstate$[ebp+8], ecx
; Line 721
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_6@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _E0[ecx*4]
	xor	ecx, DWORD PTR _E1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_6@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_6@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E3[edx*4]
	mov	DWORD PTR _newstate$[ebp+12], ecx
; Line 722
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_6@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _E0[ecx*4]
	xor	ecx, DWORD PTR _E1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_6@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_6@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E3[edx*4]
	mov	DWORD PTR _newstate$[ebp+16], ecx
; Line 723
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_6@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _E0[ecx*4]
	xor	ecx, DWORD PTR _E1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_6@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_6@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E3[edx*4]
	mov	DWORD PTR _newstate$[ebp+20], ecx
; Line 724
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 725
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _newstate$[ebp+4]
	mov	DWORD PTR [edx+4], eax
; Line 726
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
; Line 727
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp+12]
	mov	DWORD PTR [eax+12], ecx
; Line 728
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _newstate$[ebp+16]
	mov	DWORD PTR [edx+16], eax
; Line 729
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp+20]
	mov	DWORD PTR [ecx+20], edx
; Line 730
	jmp	$LN2@aes_encryp@2
$LN1@aes_encryp@2:
; Line 731
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+12]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+16], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+20]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+20], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
; Line 732
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sbox[ecx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_6@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_6@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_6@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp], ecx
; Line 733
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sbox[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_6@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_6@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_6@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+4], ecx
; Line 734
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sbox[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_6@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_6@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_6@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+8], ecx
; Line 735
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sbox[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_6@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_6@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_6@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+12], ecx
; Line 736
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sbox[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_6@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_6@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_6@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+16], ecx
; Line 737
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sbox[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_6@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_6@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_6@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+20], ecx
; Line 738
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 739
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp+4]
	mov	DWORD PTR [eax+4], ecx
; Line 740
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _newstate$[ebp+8]
	mov	DWORD PTR [edx+8], eax
; Line 741
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp+12]
	mov	DWORD PTR [ecx+12], edx
; Line 742
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp+16]
	mov	DWORD PTR [eax+16], ecx
; Line 743
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _newstate$[ebp+20]
	mov	DWORD PTR [edx+20], eax
; Line 744
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+12], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+16]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+16], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+20], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
; Line 745
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@aes_encryp@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@aes_encryp@2:
	DD	1
	DD	$LN7@aes_encryp@2
$LN7@aes_encryp@2:
	DD	-40					; ffffffd8H
	DD	24					; 00000018H
	DD	$LN6@aes_encryp@2
$LN6@aes_encryp@2:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
_aes_encrypt_nb_6 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_newstate$ = -48					; size = 32
_keysched$ = -12					; size = 4
_i$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_block$ = 12						; size = 4
_aes_encrypt_nb_8 PROC
; Line 747
	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	push	edi
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 750
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _keysched$[ebp], eax
; Line 752
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@aes_encryp@3
$LN2@aes_encryp@3:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN3@aes_encryp@3:
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+1004]
	sub	eax, 1
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN1@aes_encryp@3
; Line 753
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+12], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+16]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+16], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+20], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+24]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+24], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+28]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+28], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
; Line 754
	mov	edx, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [edx]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_8@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _E0[ecx*4]
	xor	ecx, DWORD PTR _E1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_8@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_8@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E3[edx*4]
	mov	DWORD PTR _newstate$[ebp], ecx
; Line 755
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_8@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _E0[ecx*4]
	xor	ecx, DWORD PTR _E1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_8@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_8@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E3[edx*4]
	mov	DWORD PTR _newstate$[ebp+4], ecx
; Line 756
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_8@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _E0[ecx*4]
	xor	ecx, DWORD PTR _E1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_8@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_8@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E3[edx*4]
	mov	DWORD PTR _newstate$[ebp+8], ecx
; Line 757
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_8@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _E0[ecx*4]
	xor	ecx, DWORD PTR _E1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_8@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_8@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E3[edx*4]
	mov	DWORD PTR _newstate$[ebp+12], ecx
; Line 758
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_8@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _E0[ecx*4]
	xor	ecx, DWORD PTR _E1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_8@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_8@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E3[edx*4]
	mov	DWORD PTR _newstate$[ebp+16], ecx
; Line 759
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_8@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _E0[ecx*4]
	xor	ecx, DWORD PTR _E1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_8@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_8@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E3[edx*4]
	mov	DWORD PTR _newstate$[ebp+20], ecx
; Line 760
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_8@@9@9
	add	eax, 6
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _E0[ecx*4]
	xor	ecx, DWORD PTR _E1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_8@@9@9
	add	eax, 6
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_8@@9@9
	add	eax, 6
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E3[edx*4]
	mov	DWORD PTR _newstate$[ebp+24], ecx
; Line 761
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_8@@9@9
	add	eax, 7
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _E0[ecx*4]
	xor	ecx, DWORD PTR _E1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_8@@9@9
	add	eax, 7
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_8@@9@9
	add	eax, 7
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _E3[edx*4]
	mov	DWORD PTR _newstate$[ebp+28], ecx
; Line 762
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 763
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _newstate$[ebp+4]
	mov	DWORD PTR [edx+4], eax
; Line 764
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
; Line 765
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp+12]
	mov	DWORD PTR [eax+12], ecx
; Line 766
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _newstate$[ebp+16]
	mov	DWORD PTR [edx+16], eax
; Line 767
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp+20]
	mov	DWORD PTR [ecx+20], edx
; Line 768
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp+24]
	mov	DWORD PTR [eax+24], ecx
; Line 769
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _newstate$[ebp+28]
	mov	DWORD PTR [edx+28], eax
; Line 770
	jmp	$LN2@aes_encryp@3
$LN1@aes_encryp@3:
; Line 771
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+12], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+16]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+16], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+20], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+24]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+24], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+28]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+28], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
; Line 772
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR [edx]
	shr	eax, 24					; 00000018H
	and	eax, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sbox[eax]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_8@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_8@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_8@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp], ecx
; Line 773
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sbox[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_8@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_8@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_8@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+4], ecx
; Line 774
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sbox[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_8@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_8@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_8@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+8], ecx
; Line 775
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sbox[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_8@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_8@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_8@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+12], ecx
; Line 776
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sbox[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_8@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_8@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_8@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+16], ecx
; Line 777
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sbox[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_8@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_8@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_8@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+20], ecx
; Line 778
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sbox[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_8@@9@9
	add	eax, 6
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_8@@9@9
	add	eax, 6
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_8@@9@9
	add	eax, 6
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+24], ecx
; Line 779
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sbox[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_encrypt_nb_8@@9@9
	add	eax, 7
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_encrypt_nb_8@@9@9
	add	eax, 7
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_encrypt_nb_8@@9@9
	add	eax, 7
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_encrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sbox[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+28], ecx
; Line 780
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 781
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp+4]
	mov	DWORD PTR [eax+4], ecx
; Line 782
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _newstate$[ebp+8]
	mov	DWORD PTR [edx+8], eax
; Line 783
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp+12]
	mov	DWORD PTR [ecx+12], edx
; Line 784
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp+16]
	mov	DWORD PTR [eax+16], ecx
; Line 785
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _newstate$[ebp+20]
	mov	DWORD PTR [edx+20], eax
; Line 786
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp+24]
	mov	DWORD PTR [ecx+24], edx
; Line 787
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp+28]
	mov	DWORD PTR [eax+28], ecx
; Line 788
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+8]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+12], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+20]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+20], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+24], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+28]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+28], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
; Line 789
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@aes_encryp@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@aes_encryp@3:
	DD	1
	DD	$LN7@aes_encryp@3
$LN7@aes_encryp@3:
	DD	-48					; ffffffd0H
	DD	32					; 00000020H
	DD	$LN6@aes_encryp@3
$LN6@aes_encryp@3:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
_aes_encrypt_nb_8 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_newstate$ = -32					; size = 16
_keysched$ = -12					; size = 4
_i$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_block$ = 12						; size = 4
_aes_decrypt_nb_4 PROC
; Line 812
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 815
	mov	eax, DWORD PTR _ctx$[ebp]
	add	eax, 480				; 000001e0H
	mov	DWORD PTR _keysched$[ebp], eax
; Line 817
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@aes_decryp
$LN2@aes_decryp:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN3@aes_decryp:
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+1004]
	sub	eax, 1
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN1@aes_decryp
; Line 818
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+12], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
; Line 819
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_4@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _D0[ecx*4]
	xor	ecx, DWORD PTR _D1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_4@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_4@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D3[edx*4]
	mov	DWORD PTR _newstate$[ebp], ecx
; Line 820
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_4@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _D0[ecx*4]
	xor	ecx, DWORD PTR _D1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_4@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_4@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D3[edx*4]
	mov	DWORD PTR _newstate$[ebp+4], ecx
; Line 821
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_4@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _D0[ecx*4]
	xor	ecx, DWORD PTR _D1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_4@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_4@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D3[edx*4]
	mov	DWORD PTR _newstate$[ebp+8], ecx
; Line 822
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_4@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _D0[ecx*4]
	xor	ecx, DWORD PTR _D1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_4@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_4@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D3[edx*4]
	mov	DWORD PTR _newstate$[ebp+12], ecx
; Line 823
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 824
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _newstate$[ebp+4]
	mov	DWORD PTR [edx+4], eax
; Line 825
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
; Line 826
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp+12]
	mov	DWORD PTR [eax+12], ecx
; Line 827
	jmp	$LN2@aes_decryp
$LN1@aes_decryp:
; Line 828
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+8]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+12], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
; Line 829
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sboxinv[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_4@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_4@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_4@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp], ecx
; Line 830
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sboxinv[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_4@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_4@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_4@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+4], ecx
; Line 831
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sboxinv[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_4@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_4@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_4@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+8], ecx
; Line 832
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sboxinv[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_4@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_4@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_4@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_4@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+12], ecx
; Line 833
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 834
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp+4]
	mov	DWORD PTR [eax+4], ecx
; Line 835
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _newstate$[ebp+8]
	mov	DWORD PTR [edx+8], eax
; Line 836
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp+12]
	mov	DWORD PTR [ecx+12], edx
; Line 837
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+12]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
; Line 838
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@aes_decryp
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN8@aes_decryp:
	DD	1
	DD	$LN7@aes_decryp
$LN7@aes_decryp:
	DD	-32					; ffffffe0H
	DD	16					; 00000010H
	DD	$LN6@aes_decryp
$LN6@aes_decryp:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
_aes_decrypt_nb_4 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_newstate$ = -40					; size = 24
_keysched$ = -12					; size = 4
_i$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_block$ = 12						; size = 4
_aes_decrypt_nb_6 PROC
; Line 840
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	edi
	lea	edi, DWORD PTR [ebp-44]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 843
	mov	eax, DWORD PTR _ctx$[ebp]
	add	eax, 480				; 000001e0H
	mov	DWORD PTR _keysched$[ebp], eax
; Line 845
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@aes_decryp@2
$LN2@aes_decryp@2:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN3@aes_decryp@2:
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+1004]
	sub	eax, 1
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN1@aes_decryp@2
; Line 846
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+12], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+16]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+16], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+20], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
; Line 847
	mov	ecx, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [ecx]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_6@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _D0[ecx*4]
	xor	ecx, DWORD PTR _D1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_6@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_6@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D3[edx*4]
	mov	DWORD PTR _newstate$[ebp], ecx
; Line 848
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_6@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _D0[ecx*4]
	xor	ecx, DWORD PTR _D1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_6@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_6@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D3[edx*4]
	mov	DWORD PTR _newstate$[ebp+4], ecx
; Line 849
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_6@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _D0[ecx*4]
	xor	ecx, DWORD PTR _D1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_6@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_6@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D3[edx*4]
	mov	DWORD PTR _newstate$[ebp+8], ecx
; Line 850
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_6@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _D0[ecx*4]
	xor	ecx, DWORD PTR _D1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_6@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_6@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D3[edx*4]
	mov	DWORD PTR _newstate$[ebp+12], ecx
; Line 851
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_6@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _D0[ecx*4]
	xor	ecx, DWORD PTR _D1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_6@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_6@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D3[edx*4]
	mov	DWORD PTR _newstate$[ebp+16], ecx
; Line 852
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_6@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _D0[ecx*4]
	xor	ecx, DWORD PTR _D1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_6@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_6@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D3[edx*4]
	mov	DWORD PTR _newstate$[ebp+20], ecx
; Line 853
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 854
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _newstate$[ebp+4]
	mov	DWORD PTR [edx+4], eax
; Line 855
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
; Line 856
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp+12]
	mov	DWORD PTR [eax+12], ecx
; Line 857
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _newstate$[ebp+16]
	mov	DWORD PTR [edx+16], eax
; Line 858
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp+20]
	mov	DWORD PTR [ecx+20], edx
; Line 859
	jmp	$LN2@aes_decryp@2
$LN1@aes_decryp@2:
; Line 860
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+12]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+16], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+20]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+20], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
; Line 861
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sboxinv[ecx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_6@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_6@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_6@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp], ecx
; Line 862
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sboxinv[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_6@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_6@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_6@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+4], ecx
; Line 863
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sboxinv[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_6@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_6@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_6@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+8], ecx
; Line 864
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sboxinv[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_6@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_6@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_6@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+12], ecx
; Line 865
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sboxinv[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_6@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_6@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_6@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+16], ecx
; Line 866
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sboxinv[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_6@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_6@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_6@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_6@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+20], ecx
; Line 867
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 868
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp+4]
	mov	DWORD PTR [eax+4], ecx
; Line 869
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _newstate$[ebp+8]
	mov	DWORD PTR [edx+8], eax
; Line 870
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp+12]
	mov	DWORD PTR [ecx+12], edx
; Line 871
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp+16]
	mov	DWORD PTR [eax+16], ecx
; Line 872
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _newstate$[ebp+20]
	mov	DWORD PTR [edx+20], eax
; Line 873
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+12], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+16]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+16], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+20], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
; Line 874
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@aes_decryp@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@aes_decryp@2:
	DD	1
	DD	$LN7@aes_decryp@2
$LN7@aes_decryp@2:
	DD	-40					; ffffffd8H
	DD	24					; 00000018H
	DD	$LN6@aes_decryp@2
$LN6@aes_decryp@2:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
_aes_decrypt_nb_6 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_newstate$ = -48					; size = 32
_keysched$ = -12					; size = 4
_i$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_block$ = 12						; size = 4
_aes_decrypt_nb_8 PROC
; Line 876
	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	push	edi
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 879
	mov	eax, DWORD PTR _ctx$[ebp]
	add	eax, 480				; 000001e0H
	mov	DWORD PTR _keysched$[ebp], eax
; Line 881
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@aes_decryp@3
$LN2@aes_decryp@3:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN3@aes_decryp@3:
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+1004]
	sub	eax, 1
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN1@aes_decryp@3
; Line 882
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+12], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+16]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+16], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+20], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+24]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+24], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+28]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+28], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
; Line 883
	mov	edx, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [edx]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_8@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _D0[ecx*4]
	xor	ecx, DWORD PTR _D1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_8@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_8@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D3[edx*4]
	mov	DWORD PTR _newstate$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_8@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _D0[ecx*4]
	xor	ecx, DWORD PTR _D1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_8@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_8@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D3[edx*4]
	mov	DWORD PTR _newstate$[ebp+4], ecx
; Line 885
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_8@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _D0[ecx*4]
	xor	ecx, DWORD PTR _D1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_8@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_8@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D3[edx*4]
	mov	DWORD PTR _newstate$[ebp+8], ecx
; Line 886
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_8@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _D0[ecx*4]
	xor	ecx, DWORD PTR _D1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_8@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_8@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D3[edx*4]
	mov	DWORD PTR _newstate$[ebp+12], ecx
; Line 887
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_8@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _D0[ecx*4]
	xor	ecx, DWORD PTR _D1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_8@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_8@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D3[edx*4]
	mov	DWORD PTR _newstate$[ebp+16], ecx
; Line 888
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_8@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _D0[ecx*4]
	xor	ecx, DWORD PTR _D1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_8@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_8@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D3[edx*4]
	mov	DWORD PTR _newstate$[ebp+20], ecx
; Line 889
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_8@@9@9
	add	eax, 6
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _D0[ecx*4]
	xor	ecx, DWORD PTR _D1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_8@@9@9
	add	eax, 6
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_8@@9@9
	add	eax, 6
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D3[edx*4]
	mov	DWORD PTR _newstate$[ebp+24], ecx
; Line 890
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_8@@9@9
	add	eax, 7
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _D0[ecx*4]
	xor	ecx, DWORD PTR _D1[edx*4]
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_8@@9@9
	add	eax, 7
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D2[edx*4]
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_8@@9@9
	add	eax, 7
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	xor	ecx, DWORD PTR _D3[edx*4]
	mov	DWORD PTR _newstate$[ebp+28], ecx
; Line 891
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 892
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _newstate$[ebp+4]
	mov	DWORD PTR [edx+4], eax
; Line 893
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
; Line 894
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp+12]
	mov	DWORD PTR [eax+12], ecx
; Line 895
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _newstate$[ebp+16]
	mov	DWORD PTR [edx+16], eax
; Line 896
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp+20]
	mov	DWORD PTR [ecx+20], edx
; Line 897
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp+24]
	mov	DWORD PTR [eax+24], ecx
; Line 898
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _newstate$[ebp+28]
	mov	DWORD PTR [edx+28], eax
; Line 899
	jmp	$LN2@aes_decryp@3
$LN1@aes_decryp@3:
; Line 900
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+12], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+16]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+16], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+20], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+24]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+24], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+28]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+28], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
; Line 901
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR [edx]
	shr	eax, 24					; 00000018H
	and	eax, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sboxinv[eax]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_8@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_8@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_8@@9@9
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp], ecx
; Line 902
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sboxinv[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_8@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_8@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_8@@9@9
	add	eax, 1
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+4], ecx
; Line 903
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sboxinv[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_8@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_8@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_8@@9@9
	add	eax, 2
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+8], ecx
; Line 904
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sboxinv[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_8@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_8@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_8@@9@9
	add	eax, 3
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+12], ecx
; Line 905
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sboxinv[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_8@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_8@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_8@@9@9
	add	eax, 4
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+16], ecx
; Line 906
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sboxinv[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_8@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_8@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_8@@9@9
	add	eax, 5
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+20], ecx
; Line 907
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sboxinv[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_8@@9@9
	add	eax, 6
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_8@@9@9
	add	eax, 6
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_8@@9@9
	add	eax, 6
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+24], ecx
; Line 908
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Sboxinv[edx]
	shl	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?C1@?1??aes_decrypt_nb_8@@9@9
	add	eax, 7
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	eax, DWORD PTR ?C2@?1??aes_decrypt_nb_8@@9@9
	add	eax, 7
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	shl	eax, 8
	or	ecx, eax
	mov	eax, DWORD PTR ?C3@?1??aes_decrypt_nb_8@@9@9
	add	eax, 7
	cdq
	idiv	DWORD PTR ?Nb@?1??aes_decrypt_nb_8@@9@9
	mov	eax, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	and	edx, 255				; 000000ffH
	movzx	eax, BYTE PTR _Sboxinv[edx]
	or	ecx, eax
	mov	DWORD PTR _newstate$[ebp+28], ecx
; Line 909
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 910
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp+4]
	mov	DWORD PTR [eax+4], ecx
; Line 911
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _newstate$[ebp+8]
	mov	DWORD PTR [edx+8], eax
; Line 912
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp+12]
	mov	DWORD PTR [ecx+12], edx
; Line 913
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp+16]
	mov	DWORD PTR [eax+16], ecx
; Line 914
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _newstate$[ebp+20]
	mov	DWORD PTR [edx+20], eax
; Line 915
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp+24]
	mov	DWORD PTR [ecx+24], edx
; Line 916
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp+28]
	mov	DWORD PTR [eax+28], ecx
; Line 917
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+8]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+12], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _keysched$[ebp]
	mov	edx, DWORD PTR [eax+20]
	xor	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR [eax+20], edx
	mov	ecx, DWORD PTR _keysched$[ebp]
	add	ecx, 4
	mov	DWORD PTR _keysched$[ebp], ecx
	mov	edx, DWORD PTR _block$[ebp]
	mov	eax, DWORD PTR _keysched$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	xor	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [edx+24], ecx
	mov	eax, DWORD PTR _keysched$[ebp]
	add	eax, 4
	mov	DWORD PTR _keysched$[ebp], eax
	mov	ecx, DWORD PTR _block$[ebp]
	mov	edx, DWORD PTR _keysched$[ebp]
	mov	eax, DWORD PTR [ecx+28]
	xor	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _block$[ebp]
	mov	DWORD PTR [ecx+28], eax
	mov	edx, DWORD PTR _keysched$[ebp]
	add	edx, 4
	mov	DWORD PTR _keysched$[ebp], edx
; Line 918
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@aes_decryp@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN8@aes_decryp@3:
	DD	1
	DD	$LN7@aes_decryp@3
$LN7@aes_decryp@3:
	DD	-48					; ffffffd0H
	DD	32					; 00000020H
	DD	$LN6@aes_decryp@3
$LN6@aes_decryp@3:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
_aes_decrypt_nb_8 ENDP
; Function compile flags: /Odtp /RTCsu
_ctx$ = -4						; size = 4
_handle$ = 8						; size = 4
_key$ = 12						; size = 4
_aes192_key PROC
; Line 1117
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1118
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ctx$[ebp], eax
; Line 1119
	push	24					; 00000018H
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _ctx$[ebp]
	push	edx
	call	_aes_setup
	add	esp, 16					; 00000010H
; Line 1120
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_aes192_key ENDP
; Function compile flags: /Odtp /RTCsu
_ctx$ = -4						; size = 4
_handle$ = 8						; size = 4
_key$ = 12						; size = 4
_aes256_key PROC
; Line 1123
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1124
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ctx$[ebp], eax
; Line 1125
	push	32					; 00000020H
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _ctx$[ebp]
	push	edx
	call	_aes_setup
	add	esp, 16					; 00000010H
; Line 1126
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_aes256_key ENDP
; Function compile flags: /Odtp /RTCsu
_i$ = -8						; size = 4
_ctx$ = -4						; size = 4
_handle$ = 8						; size = 4
_iv$ = 12						; size = 4
_aes_iv	PROC
; Line 1129
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1130
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ctx$[ebp], eax
; Line 1132
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@aes_iv
$LN2@aes_iv:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN3@aes_iv:
	cmp	DWORD PTR _i$[ebp], 4
	jge	SHORT $LN4@aes_iv
; Line 1133
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _iv$[ebp]
	movzx	ecx, BYTE PTR [eax+edx*4]
	shl	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _iv$[ebp]
	movzx	edx, BYTE PTR [eax+edx*4+1]
	shl	edx, 16					; 00000010H
	or	ecx, edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _iv$[ebp]
	movzx	eax, BYTE PTR [edx+eax*4+2]
	shl	eax, 8
	or	ecx, eax
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _iv$[ebp]
	movzx	edx, BYTE PTR [eax+edx*4+3]
	or	ecx, edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [edx+eax*4+968], ecx
	jmp	SHORT $LN2@aes_iv
$LN4@aes_iv:
; Line 1134
	mov	esp, ebp
	pop	ebp
	ret	0
_aes_iv	ENDP
; Function compile flags: /Odtp /RTCsu
_ctx$ = -4						; size = 4
_handle$ = 8						; size = 4
_blk$ = 12						; size = 4
_len$ = 16						; size = 4
_aes_ssh2_encrypt_blk PROC
; Line 1137
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1138
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ctx$[ebp], eax
; Line 1139
	mov	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _blk$[ebp]
	push	eax
	call	_aes_encrypt_cbc
	add	esp, 12					; 0000000cH
; Line 1140
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_aes_ssh2_encrypt_blk ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$ = -32						; size = 4
_iv$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_blk$ = 8						; size = 4
_len$ = 12						; size = 4
_ctx$ = 16						; size = 4
_aes_encrypt_cbc PROC
; Line 1029
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1033
	mov	eax, DWORD PTR _len$[ebp]
	and	eax, 15					; 0000000fH
	je	SHORT $LN11@aes_encryp@4
	push	1033					; 00000409H
	push	OFFSET $SG7383
	push	OFFSET $SG7384
	call	__wassert
	add	esp, 12					; 0000000cH
$LN11@aes_encryp@4:
; Line 1035
	push	16					; 00000010H
	mov	edx, DWORD PTR _ctx$[ebp]
	add	edx, 968				; 000003c8H
	push	edx
	lea	eax, DWORD PTR _iv$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN8@aes_encryp@4:
; Line 1037
	cmp	DWORD PTR _len$[ebp], 0
	jle	$LN7@aes_encryp@4
; Line 1038
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@aes_encryp@4
$LN5@aes_encryp@4:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN6@aes_encryp@4:
	cmp	DWORD PTR _i$[ebp], 4
	jge	SHORT $LN4@aes_encryp@4
; Line 1039
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _blk$[ebp]
	movzx	ecx, BYTE PTR [eax+edx*4]
	shl	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _blk$[ebp]
	movzx	edx, BYTE PTR [eax+edx*4+1]
	shl	edx, 16					; 00000010H
	or	ecx, edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _blk$[ebp]
	movzx	eax, BYTE PTR [edx+eax*4+2]
	shl	eax, 8
	or	ecx, eax
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _blk$[ebp]
	movzx	edx, BYTE PTR [eax+edx*4+3]
	or	ecx, edx
	mov	eax, DWORD PTR _i$[ebp]
	xor	ecx, DWORD PTR _iv$[ebp+eax*4]
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _iv$[ebp+edx*4], ecx
	jmp	SHORT $LN5@aes_encryp@4
$LN4@aes_encryp@4:
; Line 1040
	lea	eax, DWORD PTR _iv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	call	_aes_encrypt
	add	esp, 8
; Line 1041
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@aes_encryp@4
$LN2@aes_encryp@4:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN3@aes_encryp@4:
	cmp	DWORD PTR _i$[ebp], 4
	jge	SHORT $LN1@aes_encryp@4
; Line 1042
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _iv$[ebp+eax*4]
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _blk$[ebp]
	mov	BYTE PTR [eax+edx*4], cl
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _iv$[ebp+ecx*4]
	shr	edx, 16					; 00000010H
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _blk$[ebp]
	mov	BYTE PTR [ecx+eax*4+1], dl
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _iv$[ebp+edx*4]
	shr	eax, 8
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _blk$[ebp]
	mov	BYTE PTR [edx+ecx*4+2], al
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _blk$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	mov	dl, BYTE PTR _iv$[ebp+edx*4]
	mov	BYTE PTR [ecx+eax*4+3], dl
	jmp	SHORT $LN2@aes_encryp@4
$LN1@aes_encryp@4:
; Line 1043
	mov	eax, DWORD PTR _blk$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _blk$[ebp], eax
; Line 1044
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, 16					; 00000010H
	mov	DWORD PTR _len$[ebp], ecx
; Line 1045
	jmp	$LN8@aes_encryp@4
$LN7@aes_encryp@4:
; Line 1047
	push	16					; 00000010H
	lea	edx, DWORD PTR _iv$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctx$[ebp]
	add	eax, 968				; 000003c8H
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1048
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@aes_encryp@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN14@aes_encryp@4:
	DD	1
	DD	$LN13@aes_encryp@4
$LN13@aes_encryp@4:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN12@aes_encryp@4
$LN12@aes_encryp@4:
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	0
_aes_encrypt_cbc ENDP
; Function compile flags: /Odtp /RTCsu
_ctx$ = 8						; size = 4
_block$ = 12						; size = 4
_aes_encrypt PROC
; Line 1019
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1020
	mov	esi, esp
	mov	eax, DWORD PTR _block$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+960]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1021
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_aes_encrypt ENDP
; Function compile flags: /Odtp /RTCsu
_ctx$ = -4						; size = 4
_handle$ = 8						; size = 4
_blk$ = 12						; size = 4
_len$ = 16						; size = 4
_aes_ssh2_decrypt_blk PROC
; Line 1143
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1144
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ctx$[ebp], eax
; Line 1145
	mov	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _blk$[ebp]
	push	eax
	call	_aes_decrypt_cbc
	add	esp, 12					; 0000000cH
; Line 1146
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_aes_ssh2_decrypt_blk ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv133 = -84						; size = 4
_i$ = -80						; size = 4
_ct$ = -72						; size = 16
_x$ = -48						; size = 16
_iv$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_blk$ = 8						; size = 4
_len$ = 12						; size = 4
_ctx$ = 16						; size = 4
_aes_decrypt_cbc PROC
; Line 1051
	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	edi
	lea	edi, DWORD PTR [ebp-84]
	mov	ecx, 21					; 00000015H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1055
	mov	eax, DWORD PTR _len$[ebp]
	and	eax, 15					; 0000000fH
	je	SHORT $LN11@aes_decryp@4
	push	1055					; 0000041fH
	push	OFFSET $SG7419
	push	OFFSET $SG7420
	call	__wassert
	add	esp, 12					; 0000000cH
$LN11@aes_decryp@4:
; Line 1057
	push	16					; 00000010H
	mov	edx, DWORD PTR _ctx$[ebp]
	add	edx, 968				; 000003c8H
	push	edx
	lea	eax, DWORD PTR _iv$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN8@aes_decryp@4:
; Line 1059
	cmp	DWORD PTR _len$[ebp], 0
	jle	$LN7@aes_decryp@4
; Line 1060
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@aes_decryp@4
$LN5@aes_decryp@4:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN6@aes_decryp@4:
	cmp	DWORD PTR _i$[ebp], 4
	jge	SHORT $LN4@aes_decryp@4
; Line 1061
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _blk$[ebp]
	movzx	ecx, BYTE PTR [eax+edx*4]
	shl	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _blk$[ebp]
	movzx	edx, BYTE PTR [eax+edx*4+1]
	shl	edx, 16					; 00000010H
	or	ecx, edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _blk$[ebp]
	movzx	eax, BYTE PTR [edx+eax*4+2]
	shl	eax, 8
	or	ecx, eax
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _blk$[ebp]
	movzx	edx, BYTE PTR [eax+edx*4+3]
	or	ecx, edx
	mov	DWORD PTR tv133[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR tv133[ebp]
	mov	DWORD PTR _ct$[ebp+eax*4], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR tv133[ebp]
	mov	DWORD PTR _x$[ebp+edx*4], eax
	jmp	SHORT $LN5@aes_decryp@4
$LN4@aes_decryp@4:
; Line 1062
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctx$[ebp]
	push	edx
	call	_aes_decrypt
	add	esp, 8
; Line 1063
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@aes_decryp@4
$LN2@aes_decryp@4:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@aes_decryp@4:
	cmp	DWORD PTR _i$[ebp], 4
	jge	SHORT $LN1@aes_decryp@4
; Line 1064
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _iv$[ebp+ecx*4]
	xor	eax, DWORD PTR _x$[ebp+edx*4]
	shr	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _blk$[ebp]
	mov	BYTE PTR [edx+ecx*4], al
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _iv$[ebp+eax*4]
	xor	edx, DWORD PTR _x$[ebp+ecx*4]
	shr	edx, 16					; 00000010H
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _blk$[ebp]
	mov	BYTE PTR [ecx+eax*4+1], dl
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _iv$[ebp+edx*4]
	xor	ecx, DWORD PTR _x$[ebp+eax*4]
	shr	ecx, 8
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _blk$[ebp]
	mov	BYTE PTR [eax+edx*4+2], cl
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _iv$[ebp+ecx*4]
	xor	eax, DWORD PTR _x$[ebp+edx*4]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _blk$[ebp]
	mov	BYTE PTR [edx+ecx*4+3], al
; Line 1065
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _ct$[ebp+ecx*4]
	mov	DWORD PTR _iv$[ebp+eax*4], edx
; Line 1066
	jmp	$LN2@aes_decryp@4
$LN1@aes_decryp@4:
; Line 1067
	mov	eax, DWORD PTR _blk$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _blk$[ebp], eax
; Line 1068
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, 16					; 00000010H
	mov	DWORD PTR _len$[ebp], ecx
; Line 1069
	jmp	$LN8@aes_decryp@4
$LN7@aes_decryp@4:
; Line 1071
	push	16					; 00000010H
	lea	edx, DWORD PTR _iv$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctx$[ebp]
	add	eax, 968				; 000003c8H
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1072
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@aes_decryp@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 84					; 00000054H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN16@aes_decryp@4:
	DD	3
	DD	$LN15@aes_decryp@4
$LN15@aes_decryp@4:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN12@aes_decryp@4
	DD	-48					; ffffffd0H
	DD	16					; 00000010H
	DD	$LN13@aes_decryp@4
	DD	-72					; ffffffb8H
	DD	16					; 00000010H
	DD	$LN14@aes_decryp@4
$LN14@aes_decryp@4:
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN13@aes_decryp@4:
	DB	120					; 00000078H
	DB	0
$LN12@aes_decryp@4:
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	0
_aes_decrypt_cbc ENDP
; Function compile flags: /Odtp /RTCsu
_ctx$ = 8						; size = 4
_block$ = 12						; size = 4
_aes_decrypt PROC
; Line 1024
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1025
	mov	esi, esp
	mov	eax, DWORD PTR _block$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+964]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1026
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_aes_decrypt ENDP
; Function compile flags: /Odtp /RTCsu
_ctx$ = -4						; size = 4
_handle$ = 8						; size = 4
_blk$ = 12						; size = 4
_len$ = 16						; size = 4
_aes_ssh2_sdctr PROC
; Line 1149
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1150
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ctx$[ebp], eax
; Line 1151
	mov	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _blk$[ebp]
	push	eax
	call	_aes_sdctr
	add	esp, 12					; 0000000cH
; Line 1152
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_aes_ssh2_sdctr ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv171 = -64						; size = 4
_i$ = -60						; size = 4
_tmp$ = -56						; size = 4
_b$ = -48						; size = 16
_iv$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_blk$ = 8						; size = 4
_len$ = 12						; size = 4
_ctx$ = 16						; size = 4
_aes_sdctr PROC
; Line 1075
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	edi
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1079
	mov	eax, DWORD PTR _len$[ebp]
	and	eax, 15					; 0000000fH
	je	SHORT $LN12@aes_sdctr
	push	1079					; 00000437H
	push	OFFSET $SG7455
	push	OFFSET $SG7456
	call	__wassert
	add	esp, 12					; 0000000cH
$LN12@aes_sdctr:
; Line 1081
	push	16					; 00000010H
	mov	edx, DWORD PTR _ctx$[ebp]
	add	edx, 968				; 000003c8H
	push	edx
	lea	eax, DWORD PTR _iv$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN9@aes_sdctr:
; Line 1083
	cmp	DWORD PTR _len$[ebp], 0
	jle	$LN8@aes_sdctr
; Line 1084
	push	16					; 00000010H
	lea	ecx, DWORD PTR _iv$[ebp]
	push	ecx
	lea	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1085
	lea	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	call	_aes_encrypt
	add	esp, 8
; Line 1086
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@aes_sdctr
$LN6@aes_sdctr:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN7@aes_sdctr:
	cmp	DWORD PTR _i$[ebp], 4
	jge	$LN5@aes_sdctr
; Line 1087
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _blk$[ebp]
	movzx	edx, BYTE PTR [ecx+eax*4]
	shl	edx, 24					; 00000018H
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _blk$[ebp]
	movzx	eax, BYTE PTR [ecx+eax*4+1]
	shl	eax, 16					; 00000010H
	or	edx, eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _blk$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx*4+2]
	shl	ecx, 8
	or	edx, ecx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _blk$[ebp]
	movzx	eax, BYTE PTR [ecx+eax*4+3]
	or	edx, eax
	mov	DWORD PTR _tmp$[ebp], edx
; Line 1088
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _tmp$[ebp]
	xor	edx, DWORD PTR _b$[ebp+ecx*4]
	shr	edx, 24					; 00000018H
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _blk$[ebp]
	mov	BYTE PTR [ecx+eax*4], dl
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _tmp$[ebp]
	xor	eax, DWORD PTR _b$[ebp+edx*4]
	shr	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _blk$[ebp]
	mov	BYTE PTR [edx+ecx*4+1], al
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _tmp$[ebp]
	xor	ecx, DWORD PTR _b$[ebp+eax*4]
	shr	ecx, 8
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _blk$[ebp]
	mov	BYTE PTR [eax+edx*4+2], cl
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _tmp$[ebp]
	xor	edx, DWORD PTR _b$[ebp+ecx*4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _blk$[ebp]
	mov	BYTE PTR [ecx+eax*4+3], dl
; Line 1089
	jmp	$LN6@aes_sdctr
$LN5@aes_sdctr:
; Line 1090
	mov	DWORD PTR _i$[ebp], 3
	jmp	SHORT $LN4@aes_sdctr
$LN3@aes_sdctr:
	mov	edx, DWORD PTR _i$[ebp]
	sub	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN4@aes_sdctr:
	cmp	DWORD PTR _i$[ebp], 0
	jl	SHORT $LN2@aes_sdctr
; Line 1091
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _iv$[ebp+eax*4]
	add	ecx, 1
	mov	DWORD PTR tv171[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR tv171[ebp]
	mov	DWORD PTR _iv$[ebp+edx*4], eax
	cmp	DWORD PTR tv171[ebp], 0
	je	SHORT $LN1@aes_sdctr
; Line 1092
	jmp	SHORT $LN2@aes_sdctr
$LN1@aes_sdctr:
; Line 1093
	jmp	SHORT $LN3@aes_sdctr
$LN2@aes_sdctr:
	mov	ecx, DWORD PTR _blk$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR _blk$[ebp], ecx
; Line 1094
	mov	edx, DWORD PTR _len$[ebp]
	sub	edx, 16					; 00000010H
	mov	DWORD PTR _len$[ebp], edx
; Line 1095
	jmp	$LN9@aes_sdctr
$LN8@aes_sdctr:
; Line 1097
	push	16					; 00000010H
	lea	eax, DWORD PTR _iv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctx$[ebp]
	add	ecx, 968				; 000003c8H
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1098
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@aes_sdctr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN16@aes_sdctr:
	DD	2
	DD	$LN15@aes_sdctr
$LN15@aes_sdctr:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN13@aes_sdctr
	DD	-48					; ffffffd0H
	DD	16					; 00000010H
	DD	$LN14@aes_sdctr
$LN14@aes_sdctr:
	DB	98					; 00000062H
	DB	0
$LN13@aes_sdctr:
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	0
_aes_sdctr ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_aes256_encrypt_pubkey
EXTRN	_smemclr:PROC
EXTRN	_memset:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ctx$ = -1016						; size = 1008
__$ArrayPad$ = -4					; size = 4
_key$ = 8						; size = 4
_blk$ = 12						; size = 4
_len$ = 16						; size = 4
_aes256_encrypt_pubkey PROC
; Line 1155
	push	ebp
	mov	ebp, esp
	sub	esp, 1020				; 000003fcH
	push	edi
	lea	edi, DWORD PTR [ebp-1020]
	mov	ecx, 255				; 000000ffH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1157
	push	32					; 00000020H
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	push	16					; 00000010H
	lea	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	call	_aes_setup
	add	esp, 16					; 00000010H
; Line 1158
	push	32					; 00000020H
	push	0
	lea	edx, DWORD PTR _ctx$[ebp+968]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1159
	lea	eax, DWORD PTR _ctx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _blk$[ebp]
	push	edx
	call	_aes_encrypt_cbc
	add	esp, 12					; 0000000cH
; Line 1160
	push	1008					; 000003f0H
	lea	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	_smemclr
	add	esp, 8
; Line 1161
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@aes256_enc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1020				; 000003fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@aes256_enc:
	DD	1
	DD	$LN4@aes256_enc
$LN4@aes256_enc:
	DD	-1016					; fffffc08H
	DD	1008					; 000003f0H
	DD	$LN3@aes256_enc
$LN3@aes256_enc:
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	120					; 00000078H
	DB	0
_aes256_encrypt_pubkey ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_aes256_decrypt_pubkey
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ctx$ = -1016						; size = 1008
__$ArrayPad$ = -4					; size = 4
_key$ = 8						; size = 4
_blk$ = 12						; size = 4
_len$ = 16						; size = 4
_aes256_decrypt_pubkey PROC
; Line 1164
	push	ebp
	mov	ebp, esp
	sub	esp, 1020				; 000003fcH
	push	edi
	lea	edi, DWORD PTR [ebp-1020]
	mov	ecx, 255				; 000000ffH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1166
	push	32					; 00000020H
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	push	16					; 00000010H
	lea	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	call	_aes_setup
	add	esp, 16					; 00000010H
; Line 1167
	push	32					; 00000020H
	push	0
	lea	edx, DWORD PTR _ctx$[ebp+968]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1168
	lea	eax, DWORD PTR _ctx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _blk$[ebp]
	push	edx
	call	_aes_decrypt_cbc
	add	esp, 12					; 0000000cH
; Line 1169
	push	1008					; 000003f0H
	lea	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	_smemclr
	add	esp, 8
; Line 1170
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@aes256_dec
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1020				; 000003fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@aes256_dec:
	DD	1
	DD	$LN4@aes256_dec
$LN4@aes256_dec:
	DD	-1016					; fffffc08H
	DD	1008					; 000003f0H
	DD	$LN3@aes256_dec
$LN3@aes256_dec:
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	120					; 00000078H
	DB	0
_aes256_decrypt_pubkey ENDP
_TEXT	ENDS
END

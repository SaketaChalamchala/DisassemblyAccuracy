; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\Putty\windows\winprint.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG85632 DB	'PuTTY remote printer output', 00H
$SG85634 DB	'RAW', 00H
_DATA	ENDS
PUBLIC	_printer_start_enum
EXTRN	_safefree:PROC
EXTRN	_osVersion:BYTE
EXTRN	_safemalloc:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\putty\windows\winprint.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv82 = -20						; size = 4
_buffer$ = -12						; size = 4
_ret$ = -4						; size = 4
_nprinters_ptr$ = 8					; size = 4
_printer_start_enum PROC
; Line 51
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 52
	push	12					; 0000000cH
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _ret$[ebp], eax
; Line 53
	mov	DWORD PTR _buffer$[ebp], 0
; Line 55
	mov	eax, DWORD PTR _nprinters_ptr$[ebp]
	mov	DWORD PTR [eax], 0
; Line 56
	push	1
	push	512					; 00000200H
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _buffer$[ebp], eax
; Line 68
	cmp	DWORD PTR _osVersion+16, 2
	je	SHORT $LN7@printer_st
; Line 69
	mov	ecx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [ecx+4], 5
; Line 70
	jmp	SHORT $LN6@printer_st
$LN7@printer_st:
; Line 71
	mov	edx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [edx+4], 4
$LN6@printer_st:
; Line 75
	mov	eax, DWORD PTR _nprinters_ptr$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ret$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	push	6
	call	_printer_add_enum
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN5@printer_st
; Line 76
	jmp	SHORT $error$85581
$LN5@printer_st:
; Line 78
	mov	ecx, DWORD PTR _ret$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv82[ebp], edx
	cmp	DWORD PTR tv82[ebp], 4
	je	SHORT $LN2@printer_st
	cmp	DWORD PTR tv82[ebp], 5
	je	SHORT $LN1@printer_st
	jmp	SHORT $LN3@printer_st
$LN2@printer_st:
; Line 80
	mov	eax, DWORD PTR _ret$[ebp]
	mov	ecx, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 81
	jmp	SHORT $LN3@printer_st
$LN1@printer_st:
; Line 83
	mov	edx, DWORD PTR _ret$[ebp]
	mov	eax, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR [edx+8], eax
$LN3@printer_st:
; Line 86
	mov	ecx, DWORD PTR _ret$[ebp]
	mov	edx, DWORD PTR _nprinters_ptr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
; Line 88
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	SHORT $LN8@printer_st
$error$85581:
; Line 91
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 92
	mov	edx, DWORD PTR _ret$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 93
	mov	eax, DWORD PTR _nprinters_ptr$[ebp]
	mov	DWORD PTR [eax], 0
; Line 94
	xor	eax, eax
$LN8@printer_st:
; Line 95
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@printer_st
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN12@printer_st:
	DD	1
	DD	$LN11@printer_st
$LN11@printer_st:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN10@printer_st
$LN10@printer_st:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_printer_start_enum ENDP
_TEXT	ENDS
EXTRN	_EnumPrintersA@28:PROC
EXTRN	_saferealloc:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_nprinters$ = -20					; size = 4
_needed$ = -8						; size = 4
_param$ = 8						; size = 4
_level$ = 12						; size = 4
_buffer$ = 16						; size = 4
_offset$ = 20						; size = 4
_nprinters_ptr$ = 24					; size = 4
_printer_add_enum PROC
; Line 23
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 24
	mov	DWORD PTR _needed$[ebp], 0
	mov	DWORD PTR _nprinters$[ebp], 0
; Line 26
	push	1
	mov	eax, DWORD PTR _offset$[ebp]
	add	eax, 512				; 00000200H
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 34
	lea	edx, DWORD PTR _nprinters$[ebp]
	push	edx
	lea	eax, DWORD PTR _needed$[ebp]
	push	eax
	push	512					; 00000200H
	mov	ecx, DWORD PTR _buffer$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, DWORD PTR _offset$[ebp]
	push	edx
	mov	eax, DWORD PTR _level$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _param$[ebp]
	push	ecx
	call	_EnumPrintersA@28
; Line 36
	cmp	DWORD PTR _needed$[ebp], 512		; 00000200H
	jae	SHORT $LN2@printer_ad
; Line 37
	mov	DWORD PTR _needed$[ebp], 512		; 00000200H
$LN2@printer_ad:
; Line 39
	push	1
	mov	edx, DWORD PTR _offset$[ebp]
	add	edx, DWORD PTR _needed$[ebp]
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR [edx], eax
; Line 42
	lea	eax, DWORD PTR _nprinters$[ebp]
	push	eax
	lea	ecx, DWORD PTR _needed$[ebp]
	push	ecx
	mov	edx, DWORD PTR _needed$[ebp]
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _level$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	call	_EnumPrintersA@28
	test	eax, eax
	jne	SHORT $LN1@printer_ad
; Line 43
	xor	eax, eax
	jmp	SHORT $LN3@printer_ad
$LN1@printer_ad:
; Line 45
	mov	ecx, DWORD PTR _nprinters_ptr$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, DWORD PTR _nprinters$[ebp]
	mov	eax, DWORD PTR _nprinters_ptr$[ebp]
	mov	DWORD PTR [eax], edx
; Line 47
	mov	eax, 1
$LN3@printer_ad:
; Line 48
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@printer_ad
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN8@printer_ad:
	DD	2
	DD	$LN7@printer_ad
$LN7@printer_ad:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@printer_ad
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@printer_ad
$LN6@printer_ad:
	DB	110					; 0000006eH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	0
$LN5@printer_ad:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
_printer_add_enum ENDP
_TEXT	ENDS
PUBLIC	_printer_get_name
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv68 = -4						; size = 4
_pe$ = 8						; size = 4
_i$ = 12						; size = 4
_printer_get_name PROC
; Line 98
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 99
	cmp	DWORD PTR _pe$[ebp], 0
	jne	SHORT $LN8@printer_ge
; Line 100
	xor	eax, eax
	jmp	SHORT $LN9@printer_ge
$LN8@printer_ge:
; Line 101
	cmp	DWORD PTR _i$[ebp], 0
	jl	SHORT $LN6@printer_ge
	mov	eax, DWORD PTR _pe$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jl	SHORT $LN7@printer_ge
$LN6@printer_ge:
; Line 102
	xor	eax, eax
	jmp	SHORT $LN9@printer_ge
$LN7@printer_ge:
; Line 103
	mov	edx, DWORD PTR _pe$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR tv68[ebp], eax
	cmp	DWORD PTR tv68[ebp], 4
	je	SHORT $LN3@printer_ge
	cmp	DWORD PTR tv68[ebp], 5
	je	SHORT $LN2@printer_ge
	jmp	SHORT $LN1@printer_ge
$LN3@printer_ge:
; Line 105
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _pe$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	eax, DWORD PTR [ecx+eax]
	jmp	SHORT $LN9@printer_ge
$LN2@printer_ge:
; Line 107
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 20					; 00000014H
	mov	edx, DWORD PTR _pe$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	eax, DWORD PTR [ecx+eax]
	jmp	SHORT $LN9@printer_ge
$LN1@printer_ge:
; Line 109
	xor	eax, eax
$LN9@printer_ge:
; Line 111
	mov	esp, ebp
	pop	ebp
	ret	0
_printer_get_name ENDP
_TEXT	ENDS
PUBLIC	_printer_finish_enum
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv66 = -4						; size = 4
_pe$ = 8						; size = 4
_printer_finish_enum PROC
; Line 114
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 115
	cmp	DWORD PTR _pe$[ebp], 0
	jne	SHORT $LN5@printer_fi
; Line 116
	jmp	SHORT $LN6@printer_fi
$LN5@printer_fi:
; Line 117
	mov	eax, DWORD PTR _pe$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv66[ebp], ecx
	cmp	DWORD PTR tv66[ebp], 4
	je	SHORT $LN2@printer_fi
	cmp	DWORD PTR tv66[ebp], 5
	je	SHORT $LN1@printer_fi
	jmp	SHORT $LN3@printer_fi
$LN2@printer_fi:
; Line 119
	mov	edx, DWORD PTR _pe$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_safefree
	add	esp, 4
; Line 120
	jmp	SHORT $LN3@printer_fi
$LN1@printer_fi:
; Line 122
	mov	ecx, DWORD PTR _pe$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_safefree
	add	esp, 4
$LN3@printer_fi:
; Line 125
	mov	eax, DWORD PTR _pe$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
$LN6@printer_fi:
; Line 126
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_printer_finish_enum ENDP
_TEXT	ENDS
PUBLIC	_printer_start_job
EXTRN	_ClosePrinter@4:PROC
EXTRN	_EndDocPrinter@4:PROC
EXTRN	_EndPagePrinter@4:PROC
EXTRN	_StartPagePrinter@4:PROC
EXTRN	_StartDocPrinterA@12:PROC
EXTRN	_OpenPrinterA@12:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pagestarted$ = -32					; size = 4
_jobstarted$ = -28					; size = 4
_docinfo$ = -20						; size = 12
_ret$ = -4						; size = 4
_printer$ = 8						; size = 4
_printer_start_job PROC
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 130
	push	4
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _ret$[ebp], eax
; Line 132
	mov	DWORD PTR _jobstarted$[ebp], 0
	mov	DWORD PTR _pagestarted$[ebp], 0
; Line 134
	mov	eax, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [eax], 0
; Line 135
	push	0
	mov	ecx, DWORD PTR _ret$[ebp]
	push	ecx
	mov	edx, DWORD PTR _printer$[ebp]
	push	edx
	call	_OpenPrinterA@12
	test	eax, eax
	jne	SHORT $LN6@printer_st@2
; Line 136
	jmp	SHORT $error$85631
$LN6@printer_st@2:
; Line 138
	mov	DWORD PTR _docinfo$[ebp], OFFSET $SG85632
; Line 139
	mov	DWORD PTR _docinfo$[ebp+4], 0
; Line 140
	mov	DWORD PTR _docinfo$[ebp+8], OFFSET $SG85634
; Line 142
	lea	eax, DWORD PTR _docinfo$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _ret$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_StartDocPrinterA@12
	test	eax, eax
	jne	SHORT $LN5@printer_st@2
; Line 143
	jmp	SHORT $error$85631
$LN5@printer_st@2:
; Line 144
	mov	DWORD PTR _jobstarted$[ebp], 1
; Line 146
	mov	eax, DWORD PTR _ret$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_StartPagePrinter@4
	test	eax, eax
	jne	SHORT $LN4@printer_st@2
; Line 147
	jmp	SHORT $error$85631
$LN4@printer_st@2:
; Line 148
	mov	DWORD PTR _pagestarted$[ebp], 1
; Line 150
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	SHORT $LN7@printer_st@2
$error$85631:
; Line 153
	cmp	DWORD PTR _pagestarted$[ebp], 0
	je	SHORT $LN3@printer_st@2
; Line 154
	mov	edx, DWORD PTR _ret$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_EndPagePrinter@4
$LN3@printer_st@2:
; Line 155
	cmp	DWORD PTR _jobstarted$[ebp], 0
	je	SHORT $LN2@printer_st@2
; Line 156
	mov	ecx, DWORD PTR _ret$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_EndDocPrinter@4
$LN2@printer_st@2:
; Line 157
	mov	eax, DWORD PTR _ret$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@printer_st@2
; Line 158
	mov	ecx, DWORD PTR _ret$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_ClosePrinter@4
$LN1@printer_st@2:
; Line 159
	mov	eax, DWORD PTR _ret$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 160
	xor	eax, eax
$LN7@printer_st@2:
; Line 161
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@printer_st@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@printer_st@2:
	DD	1
	DD	$LN10@printer_st@2
$LN10@printer_st@2:
	DD	-20					; ffffffecH
	DD	12					; 0000000cH
	DD	$LN9@printer_st@2
$LN9@printer_st@2:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
_printer_start_job ENDP
_TEXT	ENDS
PUBLIC	_printer_job_data
EXTRN	_WritePrinter@16:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_written$ = -8						; size = 4
_pj$ = 8						; size = 4
_data$ = 12						; size = 4
_len$ = 16						; size = 4
_printer_job_data PROC
; Line 164
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 167
	cmp	DWORD PTR _pj$[ebp], 0
	jne	SHORT $LN1@printer_jo
; Line 168
	jmp	SHORT $LN2@printer_jo
$LN1@printer_jo:
; Line 170
	lea	eax, DWORD PTR _written$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	eax, DWORD PTR _pj$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_WritePrinter@16
$LN2@printer_jo:
; Line 171
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@printer_jo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@printer_jo:
	DD	1
	DD	$LN5@printer_jo
$LN5@printer_jo:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@printer_jo
$LN4@printer_jo:
	DB	119					; 00000077H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
_printer_job_data ENDP
_TEXT	ENDS
PUBLIC	_printer_finish_job
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pj$ = 8						; size = 4
_printer_finish_job PROC
; Line 174
	push	ebp
	mov	ebp, esp
; Line 175
	cmp	DWORD PTR _pj$[ebp], 0
	jne	SHORT $LN1@printer_fi@2
; Line 176
	jmp	SHORT $LN2@printer_fi@2
$LN1@printer_fi@2:
; Line 178
	mov	eax, DWORD PTR _pj$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_EndPagePrinter@4
; Line 179
	mov	edx, DWORD PTR _pj$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_EndDocPrinter@4
; Line 180
	mov	ecx, DWORD PTR _pj$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_ClosePrinter@4
; Line 181
	mov	eax, DWORD PTR _pj$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
$LN2@printer_fi@2:
; Line 182
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_printer_finish_job ENDP
_TEXT	ENDS
END

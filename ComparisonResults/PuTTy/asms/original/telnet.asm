; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\Putty\telnet.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_telnet_backend
_BSS	SEGMENT
$SG86164 DB	01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
_o_naws	DD	0fbH
	DD	0fcH
	DD	0fdH
	DD	0feH
	DD	01fH
	DD	00H
	DD	00H
_o_tspeed DD	0fbH
	DD	0fcH
	DD	0fdH
	DD	0feH
	DD	020H
	DD	01H
	DD	00H
_o_ttype DD	0fbH
	DD	0fcH
	DD	0fdH
	DD	0feH
	DD	018H
	DD	02H
	DD	00H
_o_oenv	DD	0fbH
	DD	0fcH
	DD	0fdH
	DD	0feH
	DD	024H
	DD	03H
	DD	02H
_o_nenv	DD	0fbH
	DD	0fcH
	DD	0fdH
	DD	0feH
	DD	027H
	DD	04H
	DD	00H
_o_echo	DD	0fdH
	DD	0feH
	DD	0fbH
	DD	0fcH
	DD	01H
	DD	05H
	DD	00H
_o_we_sga DD	0fbH
	DD	0fcH
	DD	0fdH
	DD	0feH
	DD	03H
	DD	06H
	DD	00H
_o_they_sga DD	0fdH
	DD	0feH
	DD	0fbH
	DD	0fcH
	DD	03H
	DD	07H
	DD	00H
_o_we_bin DD	0fbH
	DD	0fcH
	DD	0fdH
	DD	0feH
	DD	00H
	DD	08H
	DD	02H
_o_they_bin DD	0fdH
	DD	0feH
	DD	0fbH
	DD	0fcH
	DD	00H
	DD	09H
	DD	02H
_opts	DD	FLAT:_o_naws
	DD	FLAT:_o_tspeed
	DD	FLAT:_o_ttype
	DD	FLAT:_o_oenv
	DD	FLAT:_o_nenv
	DD	FLAT:_o_echo
	DD	FLAT:_o_we_sga
	DD	FLAT:_o_they_sga
	DD	FLAT:_o_we_bin
	DD	FLAT:_o_they_bin
	DD	00H
?fn_table@?1??telnet_init@@9@9 DD FLAT:_telnet_log	; `telnet_init'::`2'::fn_table
	DD	FLAT:_telnet_closing
	DD	FLAT:_telnet_receive
	DD	FLAT:_telnet_sent
	ORG $+4
?iac@?1??telnet_send@@9@9 DB 0ffH			; `telnet_send'::`2'::iac
	DB	0ffH
	ORG $+2
?cr@?1??telnet_send@@9@9 DB 0dH				; `telnet_send'::`2'::cr
	DB	00H
	ORG $+2
?specials@?1??telnet_get_specials@@9@9 DD FLAT:$SG86326	; `telnet_get_specials'::`2'::specials
	DD	00H
	DD	FLAT:$SG86327
	DD	01H
	DD	FLAT:$SG86328
	DD	02H
	DD	FLAT:$SG86329
	DD	03H
	DD	FLAT:$SG86330
	DD	04H
	DD	FLAT:$SG86331
	DD	05H
	DD	FLAT:$SG86332
	DD	06H
	DD	00H
	DD	01fH
	DD	FLAT:$SG86334
	DD	07H
	DD	FLAT:$SG86335
	DD	08H
	DD	FLAT:$SG86336
	DD	09H
	DD	FLAT:$SG86337
	DD	0aH
	DD	00H
	DD	01fH
	DD	FLAT:$SG86339
	DD	0bH
	DD	FLAT:$SG86340
	DD	0cH
	DD	00H
	DD	021H
CONST	ENDS
_DATA	SEGMENT
$SG85602 DB	'BINARY', 00H
	ORG $+1
$SG85604 DB	'ECHO', 00H
	ORG $+3
$SG85606 DB	'RCP', 00H
$SG85608 DB	'SGA', 00H
$SG85610 DB	'NAMS', 00H
	ORG $+3
$SG85612 DB	'STATUS', 00H
	ORG $+1
$SG85614 DB	'TM', 00H
	ORG $+1
$SG85616 DB	'RCTE', 00H
	ORG $+3
$SG85618 DB	'NAOL', 00H
	ORG $+3
$SG85620 DB	'NAOP', 00H
	ORG $+3
$SG85622 DB	'NAOCRD', 00H
	ORG $+1
$SG85624 DB	'NAOHTS', 00H
	ORG $+1
$SG85626 DB	'NAOHTD', 00H
	ORG $+1
$SG85628 DB	'NAOFFD', 00H
	ORG $+1
$SG85630 DB	'NAOVTS', 00H
	ORG $+1
$SG85632 DB	'NAOVTD', 00H
	ORG $+1
$SG85634 DB	'NAOLFD', 00H
	ORG $+1
$SG85636 DB	'XASCII', 00H
	ORG $+1
$SG85638 DB	'LOGOUT', 00H
	ORG $+1
$SG85640 DB	'BM', 00H
	ORG $+1
$SG85642 DB	'DET', 00H
$SG85644 DB	'SUPDUP', 00H
	ORG $+1
$SG85646 DB	'SUPDUPOUTPUT', 00H
	ORG $+3
$SG85648 DB	'SNDLOC', 00H
	ORG $+1
$SG85650 DB	'TTYPE', 00H
	ORG $+2
$SG85652 DB	'EOR', 00H
$SG85654 DB	'TUID', 00H
	ORG $+3
$SG85656 DB	'OUTMRK', 00H
	ORG $+1
$SG85658 DB	'TTYLOC', 00H
	ORG $+1
$SG85660 DB	'3270REGIME', 00H
	ORG $+1
$SG85662 DB	'X3PAD', 00H
	ORG $+2
$SG85664 DB	'NAWS', 00H
	ORG $+3
$SG85666 DB	'TSPEED', 00H
	ORG $+1
$SG85668 DB	'LFLOW', 00H
	ORG $+2
$SG85670 DB	'LINEMODE', 00H
	ORG $+3
$SG85672 DB	'XDISPLOC', 00H
	ORG $+3
$SG85674 DB	'OLD_ENVIRON', 00H
$SG85676 DB	'AUTHENTICATION', 00H
	ORG $+1
$SG85678 DB	'ENCRYPT', 00H
$SG85680 DB	'NEW_ENVIRON', 00H
$SG85682 DB	'TN3270E', 00H
$SG85684 DB	'XAUTH', 00H
	ORG $+2
$SG85686 DB	'CHARSET', 00H
$SG85688 DB	'RSP', 00H
$SG85690 DB	'COM_PORT_OPTION', 00H
$SG85692 DB	'SLE', 00H
$SG85694 DB	'STARTTLS', 00H
	ORG $+3
$SG85696 DB	'KERMIT', 00H
	ORG $+1
$SG85698 DB	'SEND_URL', 00H
	ORG $+3
$SG85700 DB	'FORWARD_X', 00H
	ORG $+2
$SG85702 DB	'PRAGMA_LOGON', 00H
	ORG $+3
$SG85704 DB	'SSPI_LOGON', 00H
	ORG $+1
$SG85706 DB	'PRAGMA_HEARTBEAT', 00H
	ORG $+3
$SG85708 DB	'EXOPL', 00H
	ORG $+2
$SG85710 DB	'<unknown>', 00H
	ORG $+2
$SG85808 DB	'WILL', 00H
	ORG $+3
$SG85809 DB	'WONT', 00H
	ORG $+3
$SG85810 DB	'DO', 00H
	ORG $+1
$SG85811 DB	'DONT', 00H
	ORG $+3
$SG85812 DB	'<??>', 00H
	ORG $+3
$SG85813 DB	'%s:', 09H, '%s %s', 00H
	ORG $+2
$SG85824 DB	'client', 00H
	ORG $+1
$SG85875 DB	'server', 00H
	ORG $+1
$SG85926 DB	'server:', 09H, 'SB TSPEED SEND', 00H
	ORG $+1
$SG85927 DB	'client:', 09H, 'SB TSPEED IS %s', 00H
$SG85929 DB	'server:', 09H, 'SB TSPEED <something weird>', 00H
$SG85940 DB	'server:', 09H, 'SB TTYPE SEND', 00H
	ORG $+2
$SG85941 DB	'client:', 09H, 'SB TTYPE IS %s', 00H
	ORG $+1
$SG85943 DB	'server:', 09H, 'SB TTYPE <something weird>', 0dH, 0aH, 00H
	ORG $+3
$SG85947 DB	'server:', 09H, 'SB %s SEND', 00H
	ORG $+1
$SG85983 DB	'client:', 09H, 'SB %s IS <nothing>', 00H
	ORG $+1
$SG85985 DB	'client:', 09H, 'SB %s IS:', 00H
	ORG $+2
$SG85991 DB	09H, '%s=%s', 00H
	ORG $+1
$SG85993 DB	09H, 'USER=%s', 00H
	ORG $+3
$SG86089 DB	'Connecting to %s port %d', 00H
	ORG $+3
$SG86091 DB	'Failed to connect to %s: %s', 00H
$SG86108 DB	'%s', 00H
	ORG $+1
$SG86162 DB	' (IPv4)', 00H
$SG86163 DB	' (IPv6)', 00H
$SG86165 DB	'Looking up host "%s"%s', 00H
	ORG $+1
$SG86263 DB	'client:', 09H, 'SB NAWS %d,%d', 00H
	ORG $+2
$SG86305 DB	0dH, 00H
	ORG $+2
$SG86307 DB	0dH, 0aH, 00H
	ORG $+1
$SG86326 DB	'Are You There', 00H
	ORG $+2
$SG86327 DB	'Break', 00H
	ORG $+2
$SG86328 DB	'Synch', 00H
	ORG $+2
$SG86329 DB	'Erase Character', 00H
$SG86330 DB	'Erase Line', 00H
	ORG $+1
$SG86331 DB	'Go Ahead', 00H
	ORG $+3
$SG86332 DB	'No Operation', 00H
	ORG $+3
$SG86334 DB	'Abort Process', 00H
	ORG $+2
$SG86335 DB	'Abort Output', 00H
	ORG $+3
$SG86336 DB	'Interrupt Process', 00H
	ORG $+2
$SG86337 DB	'Suspend Process', 00H
$SG86339 DB	'End Of Record', 00H
	ORG $+2
$SG86340 DB	'End Of File', 00H
$SG86400 DB	'telnet', 00H
	ORG $+5
_telnet_backend DD FLAT:_telnet_init
	DD	FLAT:_telnet_free
	DD	FLAT:_telnet_reconfig
	DD	FLAT:_telnet_send
	DD	FLAT:_telnet_sendbuffer
	DD	FLAT:_telnet_size
	DD	FLAT:_telnet_special
	DD	FLAT:_telnet_get_specials
	DD	FLAT:_telnet_connected
	DD	FLAT:_telnet_exitcode
	DD	FLAT:_telnet_sendok
	DD	FLAT:_telnet_ldisc
	DD	FLAT:_telnet_provide_ldisc
	DD	FLAT:_telnet_provide_logctx
	DD	FLAT:_telnet_unthrottle
	DD	FLAT:_telnet_cfg_info
	DD	FLAT:$SG86400
	DD	01H
	DD	017H
_DATA	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_safefree:PROC
EXTRN	_logevent:PROC
EXTRN	_dupprintf:PROC
EXTRN	_sk_getaddr:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\putty\telnet.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_msg$ = -276						; size = 4
_addrbuf$ = -268					; size = 256
_telnet$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_plug$ = 8						; size = 4
_type$ = 12						; size = 4
_addr$ = 16						; size = 4
_port$ = 20						; size = 4
_error_msg$ = 24					; size = 4
_error_code$ = 28					; size = 4
_telnet_log PROC
; Line 653
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 654
	mov	eax, DWORD PTR _plug$[ebp]
	mov	DWORD PTR _telnet$[ebp], eax
; Line 657
	push	256					; 00000100H
	lea	ecx, DWORD PTR _addrbuf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _addr$[ebp]
	push	edx
	call	_sk_getaddr
	add	esp, 12					; 0000000cH
; Line 659
	cmp	DWORD PTR _type$[ebp], 0
	jne	SHORT $LN2@telnet_log
; Line 660
	mov	eax, DWORD PTR _port$[ebp]
	push	eax
	lea	ecx, DWORD PTR _addrbuf$[ebp]
	push	ecx
	push	OFFSET $SG86089
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _msg$[ebp], eax
; Line 661
	jmp	SHORT $LN1@telnet_log
$LN2@telnet_log:
; Line 662
	mov	edx, DWORD PTR _error_msg$[ebp]
	push	edx
	lea	eax, DWORD PTR _addrbuf$[ebp]
	push	eax
	push	OFFSET $SG86091
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _msg$[ebp], eax
$LN1@telnet_log:
; Line 664
	mov	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	_logevent
	add	esp, 8
; Line 665
	mov	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 666
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@telnet_log
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@telnet_log:
	DD	1
	DD	$LN6@telnet_log
$LN6@telnet_log:
	DD	-268					; fffffef4H
	DD	256					; 00000100H
	DD	$LN5@telnet_log
$LN5@telnet_log:
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	114					; 00000072H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_telnet_log ENDP
_TEXT	ENDS
EXTRN	_connection_fatal:PROC
EXTRN	_notify_remote_exit:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_telnet$ = -4						; size = 4
_plug$ = 8						; size = 4
_error_msg$ = 12					; size = 4
_error_code$ = 16					; size = 4
_calling_back$ = 20					; size = 4
_telnet_closing PROC
; Line 670
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 671
	mov	eax, DWORD PTR _plug$[ebp]
	mov	DWORD PTR _telnet$[ebp], eax
; Line 679
	mov	ecx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN3@telnet_clo
; Line 680
	mov	esi, esp
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 681
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 682
	cmp	DWORD PTR _error_msg$[ebp], 0
	je	SHORT $LN2@telnet_clo
; Line 683
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [eax+8], 1
$LN2@telnet_clo:
; Line 684
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_notify_remote_exit
	add	esp, 4
$LN3@telnet_clo:
; Line 686
	cmp	DWORD PTR _error_msg$[ebp], 0
	je	SHORT $LN1@telnet_clo
; Line 687
	mov	eax, DWORD PTR _error_msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_logevent
	add	esp, 8
; Line 688
	mov	eax, DWORD PTR _error_msg$[ebp]
	push	eax
	push	OFFSET $SG86108
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_connection_fatal
	add	esp, 12					; 0000000cH
$LN1@telnet_clo:
; Line 691
	xor	eax, eax
; Line 692
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_telnet_closing ENDP
; Function compile flags: /Odtp /RTCsu
_telnet$ = -4						; size = 4
_plug$ = 8						; size = 4
_urgent$ = 12						; size = 4
_data$ = 16						; size = 4
_len$ = 20						; size = 4
_telnet_receive PROC
; Line 695
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 696
	mov	eax, DWORD PTR _plug$[ebp]
	mov	DWORD PTR _telnet$[ebp], eax
; Line 697
	cmp	DWORD PTR _urgent$[ebp], 0
	je	SHORT $LN1@telnet_rec
; Line 698
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+84], 1
$LN1@telnet_rec:
; Line 699
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	push	ecx
	call	_do_telnet_read
	add	esp, 12					; 0000000cH
; Line 700
	mov	eax, 1
; Line 701
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_telnet_receive ENDP
_TEXT	ENDS
EXTRN	_saferealloc:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv70 = -24						; size = 4
tv65 = -20						; size = 4
_c$86009 = -16						; size = 4
_outbufsize$ = -12					; size = 4
_outbuflen$ = -8					; size = 4
_outbuf$ = -4						; size = 4
_telnet$ = 8						; size = 4
_buf$ = 12						; size = 4
_len$ = 16						; size = 4
_do_telnet_read PROC
; Line 534
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 535
	mov	DWORD PTR _outbuf$[ebp], 0
; Line 536
	mov	DWORD PTR _outbuflen$[ebp], 0
	mov	DWORD PTR _outbufsize$[ebp], 0
$LN49@do_telnet_:
; Line 546
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _len$[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 0
	je	$LN48@do_telnet_
; Line 547
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	mov	DWORD PTR _c$86009[ebp], eax
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
; Line 549
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+104]
	mov	DWORD PTR tv70[ebp], eax
	cmp	DWORD PTR tv70[ebp], 9
	ja	$LN46@do_telnet_
	mov	ecx, DWORD PTR tv70[ebp]
	jmp	DWORD PTR $LN52@do_telnet_[ecx*4]
$LN45@do_telnet_:
; Line 552
	cmp	DWORD PTR _c$86009[ebp], 0
	jne	SHORT $LN44@do_telnet_
	mov	edx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [edx+104], 9
	jne	SHORT $LN44@do_telnet_
; Line 553
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [eax+104], 0
	jmp	$LN43@do_telnet_
$LN44@do_telnet_:
; Line 554
	cmp	DWORD PTR _c$86009[ebp], 255		; 000000ffH
	jne	SHORT $LN42@do_telnet_
; Line 555
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+104], 1
; Line 556
	jmp	$LN43@do_telnet_
$LN42@do_telnet_:
; Line 557
	mov	edx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [edx+84], 0
	jne	SHORT $LN40@do_telnet_
$LN39@do_telnet_:
; Line 558
	mov	eax, DWORD PTR _outbuflen$[ebp]
	cmp	eax, DWORD PTR _outbufsize$[ebp]
	jl	SHORT $LN36@do_telnet_
	mov	ecx, DWORD PTR _outbuflen$[ebp]
	add	ecx, 256				; 00000100H
	mov	DWORD PTR _outbufsize$[ebp], ecx
	push	1
	mov	edx, DWORD PTR _outbufsize$[ebp]
	push	edx
	mov	eax, DWORD PTR _outbuf$[ebp]
	push	eax
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _outbuf$[ebp], eax
$LN36@do_telnet_:
	mov	ecx, DWORD PTR _outbuf$[ebp]
	add	ecx, DWORD PTR _outbuflen$[ebp]
	mov	dl, BYTE PTR _c$86009[ebp]
	mov	BYTE PTR [ecx], dl
	mov	eax, DWORD PTR _outbuflen$[ebp]
	add	eax, 1
	mov	DWORD PTR _outbuflen$[ebp], eax
	xor	ecx, ecx
	jne	SHORT $LN39@do_telnet_
; Line 569
	jmp	SHORT $LN35@do_telnet_
$LN40@do_telnet_:
	cmp	DWORD PTR _c$86009[ebp], 242		; 000000f2H
	jne	SHORT $LN35@do_telnet_
; Line 570
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+84], 0
$LN35@do_telnet_:
; Line 572
	cmp	DWORD PTR _c$86009[ebp], 13		; 0000000dH
	jne	SHORT $LN33@do_telnet_
	mov	eax, DWORD PTR _o_they_bin+20
	mov	ecx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [ecx+eax*4+28], 1
	je	SHORT $LN33@do_telnet_
; Line 573
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+104], 9
; Line 574
	jmp	SHORT $LN43@do_telnet_
$LN33@do_telnet_:
; Line 575
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [eax+104], 0
$LN43@do_telnet_:
; Line 577
	jmp	$LN46@do_telnet_
$LN31@do_telnet_:
; Line 579
	cmp	DWORD PTR _c$86009[ebp], 253		; 000000fdH
	jne	SHORT $LN30@do_telnet_
; Line 580
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+104], 4
	jmp	$LN29@do_telnet_
$LN30@do_telnet_:
; Line 581
	cmp	DWORD PTR _c$86009[ebp], 254		; 000000feH
	jne	SHORT $LN28@do_telnet_
; Line 582
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+104], 5
	jmp	$LN29@do_telnet_
$LN28@do_telnet_:
; Line 583
	cmp	DWORD PTR _c$86009[ebp], 251		; 000000fbH
	jne	SHORT $LN26@do_telnet_
; Line 584
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [eax+104], 2
	jmp	$LN29@do_telnet_
$LN26@do_telnet_:
; Line 585
	cmp	DWORD PTR _c$86009[ebp], 252		; 000000fcH
	jne	SHORT $LN24@do_telnet_
; Line 586
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+104], 3
	jmp	$LN29@do_telnet_
$LN24@do_telnet_:
; Line 587
	cmp	DWORD PTR _c$86009[ebp], 250		; 000000faH
	jne	SHORT $LN22@do_telnet_
; Line 588
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+104], 6
	jmp	SHORT $LN29@do_telnet_
$LN22@do_telnet_:
; Line 589
	cmp	DWORD PTR _c$86009[ebp], 242		; 000000f2H
	jne	SHORT $LN20@do_telnet_
; Line 590
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [eax+84], 0
; Line 591
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+104], 0
; Line 592
	jmp	SHORT $LN29@do_telnet_
$LN20@do_telnet_:
; Line 594
	cmp	DWORD PTR _c$86009[ebp], 255		; 000000ffH
	jne	SHORT $LN18@do_telnet_
$LN17@do_telnet_:
; Line 595
	mov	edx, DWORD PTR _outbuflen$[ebp]
	cmp	edx, DWORD PTR _outbufsize$[ebp]
	jl	SHORT $LN14@do_telnet_
	mov	eax, DWORD PTR _outbuflen$[ebp]
	add	eax, 256				; 00000100H
	mov	DWORD PTR _outbufsize$[ebp], eax
	push	1
	mov	ecx, DWORD PTR _outbufsize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _outbuf$[ebp]
	push	edx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _outbuf$[ebp], eax
$LN14@do_telnet_:
	mov	eax, DWORD PTR _outbuf$[ebp]
	add	eax, DWORD PTR _outbuflen$[ebp]
	mov	cl, BYTE PTR _c$86009[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _outbuflen$[ebp]
	add	edx, 1
	mov	DWORD PTR _outbuflen$[ebp], edx
	xor	eax, eax
	jne	SHORT $LN17@do_telnet_
$LN18@do_telnet_:
; Line 597
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+104], 0
$LN29@do_telnet_:
; Line 599
	jmp	$LN46@do_telnet_
$LN13@do_telnet_:
; Line 601
	mov	edx, DWORD PTR _c$86009[ebp]
	push	edx
	push	251					; 000000fbH
	mov	eax, DWORD PTR _telnet$[ebp]
	push	eax
	call	_proc_rec_opt
	add	esp, 12					; 0000000cH
; Line 602
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+104], 0
; Line 603
	jmp	$LN46@do_telnet_
$LN12@do_telnet_:
; Line 605
	mov	edx, DWORD PTR _c$86009[ebp]
	push	edx
	push	252					; 000000fcH
	mov	eax, DWORD PTR _telnet$[ebp]
	push	eax
	call	_proc_rec_opt
	add	esp, 12					; 0000000cH
; Line 606
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+104], 0
; Line 607
	jmp	$LN46@do_telnet_
$LN11@do_telnet_:
; Line 609
	mov	edx, DWORD PTR _c$86009[ebp]
	push	edx
	push	253					; 000000fdH
	mov	eax, DWORD PTR _telnet$[ebp]
	push	eax
	call	_proc_rec_opt
	add	esp, 12					; 0000000cH
; Line 610
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+104], 0
; Line 611
	jmp	$LN46@do_telnet_
$LN10@do_telnet_:
; Line 613
	mov	edx, DWORD PTR _c$86009[ebp]
	push	edx
	push	254					; 000000feH
	mov	eax, DWORD PTR _telnet$[ebp]
	push	eax
	call	_proc_rec_opt
	add	esp, 12					; 0000000cH
; Line 614
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+104], 0
; Line 615
	jmp	$LN46@do_telnet_
$LN9@do_telnet_:
; Line 617
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR _c$86009[ebp]
	mov	DWORD PTR [edx+88], eax
; Line 618
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+92], 0
; Line 619
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+104], 7
; Line 620
	jmp	$LN46@do_telnet_
$LN8@do_telnet_:
; Line 622
	cmp	DWORD PTR _c$86009[ebp], 255		; 000000ffH
	jne	SHORT $subneg_addchar$86061
; Line 623
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [eax+104], 8
; Line 624
	jmp	SHORT $LN6@do_telnet_
$subneg_addchar$86061:
; Line 626
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [ecx+92]
	cmp	eax, DWORD PTR [edx+100]
	jl	SHORT $LN5@do_telnet_
; Line 627
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	add	edx, 1024				; 00000400H
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [eax+100], edx
; Line 629
	push	1
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	push	ecx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+96], eax
$LN5@do_telnet_:
; Line 631
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+92]
	mov	dl, BYTE PTR _c$86009[ebp]
	mov	BYTE PTR [ecx+eax], dl
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	add	ecx, 1
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+92], ecx
; Line 632
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [eax+104], 7
$LN6@do_telnet_:
; Line 634
	jmp	SHORT $LN46@do_telnet_
$LN4@do_telnet_:
; Line 636
	cmp	DWORD PTR _c$86009[ebp], 240		; 000000f0H
	je	SHORT $LN3@do_telnet_
; Line 637
	jmp	SHORT $subneg_addchar$86061
; Line 638
	jmp	SHORT $LN46@do_telnet_
$LN3@do_telnet_:
; Line 639
	mov	ecx, DWORD PTR _telnet$[ebp]
	push	ecx
	call	_process_subneg
	add	esp, 4
; Line 640
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+104], 0
$LN46@do_telnet_:
; Line 644
	jmp	$LN49@do_telnet_
$LN48@do_telnet_:
; Line 646
	cmp	DWORD PTR _outbuflen$[ebp], 0
	je	SHORT $LN1@do_telnet_
; Line 647
	mov	eax, DWORD PTR _outbuflen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outbuf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	push	edx
	call	_c_write
	add	esp, 12					; 0000000cH
$LN1@do_telnet_:
; Line 648
	mov	eax, DWORD PTR _outbuf$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 649
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN52@do_telnet_:
	DD	$LN45@do_telnet_
	DD	$LN31@do_telnet_
	DD	$LN13@do_telnet_
	DD	$LN12@do_telnet_
	DD	$LN11@do_telnet_
	DD	$LN10@do_telnet_
	DD	$LN9@do_telnet_
	DD	$LN8@do_telnet_
	DD	$LN4@do_telnet_
	DD	$LN45@do_telnet_
_do_telnet_read ENDP
_TEXT	ENDS
EXTRN	_from_backend:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_backlog$ = -4						; size = 4
_telnet$ = 8						; size = 4
_buf$ = 12						; size = 4
_len$ = 16						; size = 4
_c_write PROC
; Line 216
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 218
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	_from_backend
	add	esp, 16					; 00000010H
	mov	DWORD PTR _backlog$[ebp], eax
; Line 219
	xor	ecx, ecx
	cmp	DWORD PTR _backlog$[ebp], 4096		; 00001000H
	setg	cl
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 220
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_c_write ENDP
; Function compile flags: /Odtp /RTCsu
tv142 = -12						; size = 4
tv78 = -8						; size = 4
_o$ = -4						; size = 4
_telnet$ = 8						; size = 4
_cmd$ = 12						; size = 4
_option$ = 16						; size = 4
_proc_rec_opt PROC
; Line 315
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 318
	mov	eax, DWORD PTR _option$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cmd$[ebp]
	push	ecx
	push	OFFSET $SG85875
	mov	edx, DWORD PTR _telnet$[ebp]
	push	edx
	call	_log_option
	add	esp, 16					; 00000010H
; Line 319
	mov	DWORD PTR _o$[ebp], OFFSET _opts
	jmp	SHORT $LN19@proc_rec_o
$LN18@proc_rec_o:
	mov	eax, DWORD PTR _o$[ebp]
	add	eax, 4
	mov	DWORD PTR _o$[ebp], eax
$LN19@proc_rec_o:
	mov	ecx, DWORD PTR _o$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	$LN17@proc_rec_o
; Line 320
	mov	edx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR _option$[ebp]
	jne	$LN16@proc_rec_o
	mov	edx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _cmd$[ebp]
	jne	$LN16@proc_rec_o
; Line 321
	mov	edx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+28]
	mov	DWORD PTR tv78[ebp], eax
	cmp	DWORD PTR tv78[ebp], 0
	je	SHORT $LN13@proc_rec_o
	cmp	DWORD PTR tv78[ebp], 2
	je	SHORT $LN11@proc_rec_o
	cmp	DWORD PTR tv78[ebp], 3
	je	SHORT $LN10@proc_rec_o
	jmp	$LN14@proc_rec_o
$LN13@proc_rec_o:
; Line 323
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+eax*4+28], 1
; Line 324
	mov	edx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	push	ecx
	call	_activate_option
	add	esp, 8
; Line 325
	jmp	SHORT $LN14@proc_rec_o
; Line 327
	jmp	SHORT $LN14@proc_rec_o
$LN11@proc_rec_o:
; Line 329
	mov	edx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+ecx*4+28], 1
; Line 330
	mov	eax, DWORD PTR _option$[ebp]
	push	eax
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	push	ecx
	call	_send_opt
	add	esp, 12					; 0000000cH
; Line 331
	mov	edx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	push	ecx
	call	_activate_option
	add	esp, 8
; Line 332
	jmp	SHORT $LN14@proc_rec_o
$LN10@proc_rec_o:
; Line 334
	mov	edx, DWORD PTR _option$[ebp]
	push	edx
	mov	eax, DWORD PTR _o$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	push	eax
	call	_send_opt
	add	esp, 12					; 0000000cH
$LN14@proc_rec_o:
; Line 337
	jmp	$LN20@proc_rec_o
	jmp	$LN9@proc_rec_o
$LN16@proc_rec_o:
; Line 338
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	cmp	eax, DWORD PTR _option$[ebp]
	jne	$LN9@proc_rec_o
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	cmp	eax, DWORD PTR _cmd$[ebp]
	jne	$LN9@proc_rec_o
; Line 339
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+28]
	mov	DWORD PTR tv142[ebp], edx
	cmp	DWORD PTR tv142[ebp], 0
	je	SHORT $LN5@proc_rec_o
	cmp	DWORD PTR tv142[ebp], 1
	je	SHORT $LN4@proc_rec_o
	jmp	SHORT $LN6@proc_rec_o
$LN5@proc_rec_o:
; Line 341
	mov	eax, DWORD PTR _o$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [eax+edx*4+28], 2
; Line 342
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	push	eax
	call	_refused_option
	add	esp, 8
; Line 343
	jmp	SHORT $LN6@proc_rec_o
$LN4@proc_rec_o:
; Line 345
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+eax*4+28], 2
; Line 346
	mov	edx, DWORD PTR _option$[ebp]
	push	edx
	mov	eax, DWORD PTR _o$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	push	eax
	call	_send_opt
	add	esp, 12					; 0000000cH
; Line 347
	push	0
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	push	eax
	call	_option_side_effects
	add	esp, 12					; 0000000cH
$LN6@proc_rec_o:
; Line 353
	jmp	SHORT $LN20@proc_rec_o
$LN9@proc_rec_o:
; Line 355
	jmp	$LN18@proc_rec_o
$LN17@proc_rec_o:
; Line 362
	cmp	DWORD PTR _cmd$[ebp], 251		; 000000fbH
	je	SHORT $LN1@proc_rec_o
	cmp	DWORD PTR _cmd$[ebp], 253		; 000000fdH
	jne	SHORT $LN20@proc_rec_o
$LN1@proc_rec_o:
; Line 363
	mov	ecx, DWORD PTR _option$[ebp]
	push	ecx
	xor	edx, edx
	cmp	DWORD PTR _cmd$[ebp], 251		; 000000fbH
	sete	dl
	lea	edx, DWORD PTR [edx+edx+252]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	push	eax
	call	_send_opt
	add	esp, 12					; 0000000cH
$LN20@proc_rec_o:
; Line 364
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_proc_rec_opt ENDP
; Function compile flags: /Odtp /RTCsu
tv72 = -20						; size = 4
tv73 = -16						; size = 4
tv74 = -12						; size = 4
tv75 = -8						; size = 4
_buf$ = -4						; size = 4
_telnet$ = 8						; size = 4
_sender$ = 12						; size = 4
_cmd$ = 16						; size = 4
_option$ = 20						; size = 4
_log_option PROC
; Line 223
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 233
	cmp	DWORD PTR _cmd$[ebp], 251		; 000000fbH
	jne	SHORT $LN9@log_option
	mov	DWORD PTR tv75[ebp], OFFSET $SG85808
	jmp	SHORT $LN10@log_option
$LN9@log_option:
	cmp	DWORD PTR _cmd$[ebp], 252		; 000000fcH
	jne	SHORT $LN7@log_option
	mov	DWORD PTR tv74[ebp], OFFSET $SG85809
	jmp	SHORT $LN8@log_option
$LN7@log_option:
	cmp	DWORD PTR _cmd$[ebp], 253		; 000000fdH
	jne	SHORT $LN5@log_option
	mov	DWORD PTR tv73[ebp], OFFSET $SG85810
	jmp	SHORT $LN6@log_option
$LN5@log_option:
	cmp	DWORD PTR _cmd$[ebp], 254		; 000000feH
	jne	SHORT $LN3@log_option
	mov	DWORD PTR tv72[ebp], OFFSET $SG85811
	jmp	SHORT $LN4@log_option
$LN3@log_option:
	mov	DWORD PTR tv72[ebp], OFFSET $SG85812
$LN4@log_option:
	mov	eax, DWORD PTR tv72[ebp]
	mov	DWORD PTR tv73[ebp], eax
$LN6@log_option:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR tv74[ebp], ecx
$LN8@log_option:
	mov	edx, DWORD PTR tv74[ebp]
	mov	DWORD PTR tv75[ebp], edx
$LN10@log_option:
	mov	eax, DWORD PTR _option$[ebp]
	push	eax
	call	_telopt
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv75[ebp]
	push	ecx
	mov	edx, DWORD PTR _sender$[ebp]
	push	edx
	push	OFFSET $SG85813
	call	_dupprintf
	add	esp, 16					; 00000010H
	mov	DWORD PTR _buf$[ebp], eax
; Line 234
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_logevent
	add	esp, 8
; Line 235
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 236
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_log_option ENDP
; Function compile flags: /Odtp /RTCsu
tv64 = -4						; size = 4
_opt$ = 8						; size = 4
_telopt	PROC
; Line 117
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 119
	mov	eax, DWORD PTR _opt$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 255		; 000000ffH
	jg	SHORT $LN60@telopt
	cmp	DWORD PTR tv64[ebp], 255		; 000000ffH
	je	$LN2@telopt
	cmp	DWORD PTR tv64[ebp], 140		; 0000008cH
	ja	$LN1@telopt
	mov	ecx, DWORD PTR tv64[ebp]
	movzx	edx, BYTE PTR $LN61@telopt[ecx]
	jmp	DWORD PTR $LN62@telopt[edx*4]
$LN60@telopt:
	jmp	$LN1@telopt
$LN55@telopt:
; Line 120
	mov	eax, OFFSET $SG85602
	jmp	$LN58@telopt
$LN54@telopt:
	mov	eax, OFFSET $SG85604
	jmp	$LN58@telopt
$LN53@telopt:
	mov	eax, OFFSET $SG85606
	jmp	$LN58@telopt
$LN52@telopt:
	mov	eax, OFFSET $SG85608
	jmp	$LN58@telopt
$LN51@telopt:
	mov	eax, OFFSET $SG85610
	jmp	$LN58@telopt
$LN50@telopt:
	mov	eax, OFFSET $SG85612
	jmp	$LN58@telopt
$LN49@telopt:
	mov	eax, OFFSET $SG85614
	jmp	$LN58@telopt
$LN48@telopt:
	mov	eax, OFFSET $SG85616
	jmp	$LN58@telopt
$LN47@telopt:
	mov	eax, OFFSET $SG85618
	jmp	$LN58@telopt
$LN46@telopt:
	mov	eax, OFFSET $SG85620
	jmp	$LN58@telopt
$LN45@telopt:
	mov	eax, OFFSET $SG85622
	jmp	$LN58@telopt
$LN44@telopt:
	mov	eax, OFFSET $SG85624
	jmp	$LN58@telopt
$LN43@telopt:
	mov	eax, OFFSET $SG85626
	jmp	$LN58@telopt
$LN42@telopt:
	mov	eax, OFFSET $SG85628
	jmp	$LN58@telopt
$LN41@telopt:
	mov	eax, OFFSET $SG85630
	jmp	$LN58@telopt
$LN40@telopt:
	mov	eax, OFFSET $SG85632
	jmp	$LN58@telopt
$LN39@telopt:
	mov	eax, OFFSET $SG85634
	jmp	$LN58@telopt
$LN38@telopt:
	mov	eax, OFFSET $SG85636
	jmp	$LN58@telopt
$LN37@telopt:
	mov	eax, OFFSET $SG85638
	jmp	$LN58@telopt
$LN36@telopt:
	mov	eax, OFFSET $SG85640
	jmp	$LN58@telopt
$LN35@telopt:
	mov	eax, OFFSET $SG85642
	jmp	$LN58@telopt
$LN34@telopt:
	mov	eax, OFFSET $SG85644
	jmp	$LN58@telopt
$LN33@telopt:
	mov	eax, OFFSET $SG85646
	jmp	$LN58@telopt
$LN32@telopt:
	mov	eax, OFFSET $SG85648
	jmp	$LN58@telopt
$LN31@telopt:
	mov	eax, OFFSET $SG85650
	jmp	$LN58@telopt
$LN30@telopt:
	mov	eax, OFFSET $SG85652
	jmp	$LN58@telopt
$LN29@telopt:
	mov	eax, OFFSET $SG85654
	jmp	$LN58@telopt
$LN28@telopt:
	mov	eax, OFFSET $SG85656
	jmp	$LN58@telopt
$LN27@telopt:
	mov	eax, OFFSET $SG85658
	jmp	$LN58@telopt
$LN26@telopt:
	mov	eax, OFFSET $SG85660
	jmp	$LN58@telopt
$LN25@telopt:
	mov	eax, OFFSET $SG85662
	jmp	$LN58@telopt
$LN24@telopt:
	mov	eax, OFFSET $SG85664
	jmp	$LN58@telopt
$LN23@telopt:
	mov	eax, OFFSET $SG85666
	jmp	$LN58@telopt
$LN22@telopt:
	mov	eax, OFFSET $SG85668
	jmp	$LN58@telopt
$LN21@telopt:
	mov	eax, OFFSET $SG85670
	jmp	$LN58@telopt
$LN20@telopt:
	mov	eax, OFFSET $SG85672
	jmp	$LN58@telopt
$LN19@telopt:
	mov	eax, OFFSET $SG85674
	jmp	SHORT $LN58@telopt
$LN18@telopt:
	mov	eax, OFFSET $SG85676
	jmp	SHORT $LN58@telopt
$LN17@telopt:
	mov	eax, OFFSET $SG85678
	jmp	SHORT $LN58@telopt
$LN16@telopt:
	mov	eax, OFFSET $SG85680
	jmp	SHORT $LN58@telopt
$LN15@telopt:
	mov	eax, OFFSET $SG85682
	jmp	SHORT $LN58@telopt
$LN14@telopt:
	mov	eax, OFFSET $SG85684
	jmp	SHORT $LN58@telopt
$LN13@telopt:
	mov	eax, OFFSET $SG85686
	jmp	SHORT $LN58@telopt
$LN12@telopt:
	mov	eax, OFFSET $SG85688
	jmp	SHORT $LN58@telopt
$LN11@telopt:
	mov	eax, OFFSET $SG85690
	jmp	SHORT $LN58@telopt
$LN10@telopt:
	mov	eax, OFFSET $SG85692
	jmp	SHORT $LN58@telopt
$LN9@telopt:
	mov	eax, OFFSET $SG85694
	jmp	SHORT $LN58@telopt
$LN8@telopt:
	mov	eax, OFFSET $SG85696
	jmp	SHORT $LN58@telopt
$LN7@telopt:
	mov	eax, OFFSET $SG85698
	jmp	SHORT $LN58@telopt
$LN6@telopt:
	mov	eax, OFFSET $SG85700
	jmp	SHORT $LN58@telopt
$LN5@telopt:
	mov	eax, OFFSET $SG85702
	jmp	SHORT $LN58@telopt
$LN4@telopt:
	mov	eax, OFFSET $SG85704
	jmp	SHORT $LN58@telopt
$LN3@telopt:
	mov	eax, OFFSET $SG85706
	jmp	SHORT $LN58@telopt
$LN2@telopt:
	mov	eax, OFFSET $SG85708
	jmp	SHORT $LN58@telopt
$LN1@telopt:
; Line 122
	mov	eax, OFFSET $SG85710
$LN58@telopt:
; Line 125
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN62@telopt:
	DD	$LN55@telopt
	DD	$LN54@telopt
	DD	$LN53@telopt
	DD	$LN52@telopt
	DD	$LN51@telopt
	DD	$LN50@telopt
	DD	$LN49@telopt
	DD	$LN48@telopt
	DD	$LN47@telopt
	DD	$LN46@telopt
	DD	$LN45@telopt
	DD	$LN44@telopt
	DD	$LN43@telopt
	DD	$LN42@telopt
	DD	$LN41@telopt
	DD	$LN40@telopt
	DD	$LN39@telopt
	DD	$LN38@telopt
	DD	$LN37@telopt
	DD	$LN36@telopt
	DD	$LN35@telopt
	DD	$LN34@telopt
	DD	$LN33@telopt
	DD	$LN32@telopt
	DD	$LN31@telopt
	DD	$LN30@telopt
	DD	$LN29@telopt
	DD	$LN28@telopt
	DD	$LN27@telopt
	DD	$LN26@telopt
	DD	$LN25@telopt
	DD	$LN24@telopt
	DD	$LN23@telopt
	DD	$LN22@telopt
	DD	$LN21@telopt
	DD	$LN20@telopt
	DD	$LN19@telopt
	DD	$LN18@telopt
	DD	$LN17@telopt
	DD	$LN16@telopt
	DD	$LN15@telopt
	DD	$LN14@telopt
	DD	$LN13@telopt
	DD	$LN12@telopt
	DD	$LN11@telopt
	DD	$LN10@telopt
	DD	$LN9@telopt
	DD	$LN8@telopt
	DD	$LN7@telopt
	DD	$LN6@telopt
	DD	$LN5@telopt
	DD	$LN4@telopt
	DD	$LN3@telopt
	DD	$LN1@telopt
$LN61@telopt:
	DB	0
	DB	1
	DB	2
	DB	3
	DB	4
	DB	5
	DB	6
	DB	7
	DB	8
	DB	9
	DB	10					; 0000000aH
	DB	11					; 0000000bH
	DB	12					; 0000000cH
	DB	13					; 0000000dH
	DB	14					; 0000000eH
	DB	15					; 0000000fH
	DB	16					; 00000010H
	DB	17					; 00000011H
	DB	18					; 00000012H
	DB	19					; 00000013H
	DB	20					; 00000014H
	DB	21					; 00000015H
	DB	22					; 00000016H
	DB	23					; 00000017H
	DB	24					; 00000018H
	DB	25					; 00000019H
	DB	26					; 0000001aH
	DB	27					; 0000001bH
	DB	28					; 0000001cH
	DB	29					; 0000001dH
	DB	30					; 0000001eH
	DB	31					; 0000001fH
	DB	32					; 00000020H
	DB	33					; 00000021H
	DB	34					; 00000022H
	DB	35					; 00000023H
	DB	36					; 00000024H
	DB	37					; 00000025H
	DB	38					; 00000026H
	DB	39					; 00000027H
	DB	40					; 00000028H
	DB	41					; 00000029H
	DB	42					; 0000002aH
	DB	43					; 0000002bH
	DB	44					; 0000002cH
	DB	45					; 0000002dH
	DB	46					; 0000002eH
	DB	47					; 0000002fH
	DB	48					; 00000030H
	DB	49					; 00000031H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	53					; 00000035H
	DB	50					; 00000032H
	DB	51					; 00000033H
	DB	52					; 00000034H
_telopt	ENDP
; Function compile flags: /Odtp /RTCsu
_b$ = -8						; size = 3
_telnet$ = 8						; size = 4
_cmd$ = 12						; size = 4
_option$ = 16						; size = 4
_send_opt PROC
; Line 239
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 242
	mov	BYTE PTR _b$[ebp], 255			; 000000ffH
; Line 243
	mov	al, BYTE PTR _cmd$[ebp]
	mov	BYTE PTR _b$[ebp+1], al
; Line 244
	mov	cl, BYTE PTR _option$[ebp]
	mov	BYTE PTR _b$[ebp+2], cl
; Line 245
	mov	esi, esp
	push	3
	lea	edx, DWORD PTR _b$[ebp]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 246
	mov	edx, DWORD PTR _option$[ebp]
	push	edx
	mov	eax, DWORD PTR _cmd$[ebp]
	push	eax
	push	OFFSET $SG85824
	mov	ecx, DWORD PTR _telnet$[ebp]
	push	ecx
	call	_log_option
	add	esp, 16					; 00000010H
; Line 247
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@send_opt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@send_opt:
	DD	1
	DD	$LN4@send_opt
$LN4@send_opt:
	DD	-8					; fffffff8H
	DD	3
	DD	$LN3@send_opt
$LN3@send_opt:
	DB	98					; 00000062H
	DB	0
_send_opt ENDP
_TEXT	ENDS
EXTRN	_ldisc_send:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_telnet$ = 8						; size = 4
_o$ = 12						; size = 4
_enabled$ = 16						; size = 4
_option_side_effects PROC
; Line 261
	push	ebp
	mov	ebp, esp
; Line 262
	mov	eax, DWORD PTR _o$[ebp]
	cmp	DWORD PTR [eax+16], 1
	jne	SHORT $LN8@option_sid
	mov	ecx, DWORD PTR _o$[ebp]
	cmp	DWORD PTR [ecx], 253			; 000000fdH
	jne	SHORT $LN8@option_sid
; Line 263
	xor	edx, edx
	cmp	DWORD PTR _enabled$[ebp], 0
	sete	dl
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [eax+68], edx
	jmp	SHORT $LN7@option_sid
$LN8@option_sid:
; Line 264
	mov	ecx, DWORD PTR _o$[ebp]
	cmp	DWORD PTR [ecx+16], 3
	jne	SHORT $LN7@option_sid
	mov	edx, DWORD PTR _o$[ebp]
	cmp	DWORD PTR [edx], 253			; 000000fdH
	jne	SHORT $LN7@option_sid
; Line 265
	xor	eax, eax
	cmp	DWORD PTR _enabled$[ebp], 0
	sete	al
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+72], eax
$LN7@option_sid:
; Line 266
	mov	edx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN5@option_sid
; Line 267
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_ldisc_send
	add	esp, 16					; 00000010H
$LN5@option_sid:
; Line 270
	mov	edx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [edx+76], 0
	jne	$LN9@option_sid
; Line 271
	mov	eax, DWORD PTR _o_echo+20
	mov	ecx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [ecx+eax*4+28], 2
	jne	SHORT $LN3@option_sid
; Line 272
	mov	edx, DWORD PTR _o_echo+20
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [eax+edx*4+28], 0
; Line 273
	mov	ecx, DWORD PTR _o_echo+16
	push	ecx
	mov	edx, DWORD PTR _o_echo
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	push	eax
	call	_send_opt
	add	esp, 12					; 0000000cH
$LN3@option_sid:
; Line 275
	mov	ecx, DWORD PTR _o_we_sga+20
	mov	edx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [edx+ecx*4+28], 2
	jne	SHORT $LN2@option_sid
; Line 276
	mov	eax, DWORD PTR _o_we_sga+20
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+eax*4+28], 0
; Line 277
	mov	edx, DWORD PTR _o_we_sga+16
	push	edx
	mov	eax, DWORD PTR _o_we_sga
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	push	ecx
	call	_send_opt
	add	esp, 12					; 0000000cH
$LN2@option_sid:
; Line 279
	mov	edx, DWORD PTR _o_they_sga+20
	mov	eax, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [eax+edx*4+28], 2
	jne	SHORT $LN1@option_sid
; Line 280
	mov	ecx, DWORD PTR _o_they_sga+20
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+ecx*4+28], 0
; Line 281
	mov	eax, DWORD PTR _o_they_sga+16
	push	eax
	mov	ecx, DWORD PTR _o_they_sga
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	push	edx
	call	_send_opt
	add	esp, 12					; 0000000cH
$LN1@option_sid:
; Line 283
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [eax+76], 1
$LN9@option_sid:
; Line 285
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_option_side_effects ENDP
; Function compile flags: /Odtp /RTCsu
tv79 = -4						; size = 4
_telnet$ = 8						; size = 4
_o$ = 12						; size = 4
_activate_option PROC
; Line 288
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 289
	mov	eax, DWORD PTR _o$[ebp]
	cmp	DWORD PTR [eax], 251			; 000000fbH
	jne	SHORT $LN3@activate_o
	mov	ecx, DWORD PTR _o$[ebp]
	cmp	DWORD PTR [ecx+16], 31			; 0000001fH
	jne	SHORT $LN3@activate_o
; Line 290
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	push	eax
	call	_telnet_size
	add	esp, 12					; 0000000cH
$LN3@activate_o:
; Line 293
	mov	ecx, DWORD PTR _o$[ebp]
	cmp	DWORD PTR [ecx], 251			; 000000fbH
	jne	SHORT $LN2@activate_o
	mov	edx, DWORD PTR _o$[ebp]
	cmp	DWORD PTR [edx+16], 39			; 00000027H
	je	SHORT $LN1@activate_o
	mov	eax, DWORD PTR _o$[ebp]
	cmp	DWORD PTR [eax+16], 36			; 00000024H
	jne	SHORT $LN2@activate_o
$LN1@activate_o:
; Line 299
	mov	ecx, DWORD PTR _o$[ebp]
	cmp	DWORD PTR [ecx+16], 39			; 00000027H
	jne	SHORT $LN6@activate_o
	mov	DWORD PTR tv79[ebp], OFFSET _o_oenv
	jmp	SHORT $LN7@activate_o
$LN6@activate_o:
	mov	DWORD PTR tv79[ebp], OFFSET _o_nenv
$LN7@activate_o:
	mov	edx, DWORD PTR tv79[ebp]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	push	eax
	call	_deactivate_option
	add	esp, 8
$LN2@activate_o:
; Line 301
	push	1
	mov	ecx, DWORD PTR _o$[ebp]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	push	edx
	call	_option_side_effects
	add	esp, 12					; 0000000cH
; Line 302
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_activate_option ENDP
; Function compile flags: /Odtp /RTCsu
_telnet$ = 8						; size = 4
_o$ = 12						; size = 4
_deactivate_option PROC
; Line 250
	push	ebp
	mov	ebp, esp
; Line 252
	mov	eax, DWORD PTR _o$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [edx+ecx*4+28], 0
	je	SHORT $LN1@deactivate
	mov	eax, DWORD PTR _o$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [edx+ecx*4+28], 1
	jne	SHORT $LN2@deactivate
$LN1@deactivate:
; Line 253
	mov	eax, DWORD PTR _o$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	push	ecx
	call	_send_opt
	add	esp, 12					; 0000000cH
$LN2@deactivate:
; Line 254
	mov	edx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+eax*4+28], 3
; Line 255
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_deactivate_option ENDP
; Function compile flags: /Odtp /RTCsu
_telnet$ = 8						; size = 4
_o$ = 12						; size = 4
_refused_option PROC
; Line 305
	push	ebp
	mov	ebp, esp
; Line 307
	mov	eax, DWORD PTR _o$[ebp]
	cmp	DWORD PTR [eax], 251			; 000000fbH
	jne	SHORT $LN1@refused_op
	mov	ecx, DWORD PTR _o$[ebp]
	cmp	DWORD PTR [ecx+16], 39			; 00000027H
	jne	SHORT $LN1@refused_op
	mov	edx, DWORD PTR _o_oenv+20
	mov	eax, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [eax+edx*4+28], 2
	jne	SHORT $LN1@refused_op
; Line 308
	push	36					; 00000024H
	push	251					; 000000fbH
	mov	ecx, DWORD PTR _telnet$[ebp]
	push	ecx
	call	_send_opt
	add	esp, 12					; 0000000cH
; Line 309
	mov	edx, DWORD PTR _o_oenv+20
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [eax+edx*4+28], 0
$LN1@refused_op:
; Line 311
	push	0
	mov	ecx, DWORD PTR _o$[ebp]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	push	edx
	call	_option_side_effects
	add	esp, 12					; 0000000cH
; Line 312
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_refused_option ENDP
_TEXT	ENDS
EXTRN	_get_remote_username:PROC
EXTRN	_conf_get_str_strs:PROC
EXTRN	_conf_get_int:PROC
EXTRN	_strcpy:PROC
EXTRN	_safemalloc:PROC
EXTRN	_strlen:PROC
EXTRN	_conf_get_str:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv187 = -80						; size = 4
tv65 = -76						; size = 4
_logbuf$85946 = -72					; size = 4
_termtype$85933 = -68					; size = 4
_logbuf$85932 = -64					; size = 4
_termspeed$85921 = -60					; size = 4
_logbuf$85920 = -56					; size = 4
_user$ = -52						; size = 4
_ekey$ = -44						; size = 4
_eval$ = -36						; size = 4
_e$ = -32						; size = 4
_bsize$ = -28						; size = 4
_n$ = -24						; size = 4
_value$ = -20						; size = 4
_var$ = -16						; size = 4
_q$ = -12						; size = 4
_p$ = -8						; size = 4
_b$ = -4						; size = 4
_telnet$ = 8						; size = 4
_process_subneg PROC
; Line 367
	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-80]
	mov	ecx, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 372
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	DWORD PTR tv65[ebp], ecx
	mov	edx, DWORD PTR tv65[ebp]
	sub	edx, 24					; 00000018H
	mov	DWORD PTR tv65[ebp], edx
	cmp	DWORD PTR tv65[ebp], 15			; 0000000fH
	ja	$LN46@process_su
	mov	eax, DWORD PTR tv65[ebp]
	movzx	ecx, BYTE PTR $LN50@process_su[eax]
	jmp	DWORD PTR $LN54@process_su[ecx*4]
$LN43@process_su:
; Line 374
	mov	edx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [edx+92], 1
	jne	$LN42@process_su
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	movzx	edx, BYTE PTR [ecx]
	cmp	edx, 1
	jne	$LN42@process_su
; Line 376
	push	47					; 0000002fH
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	mov	DWORD PTR _termspeed$85921[ebp], eax
; Line 377
	push	1
	mov	edx, DWORD PTR _termspeed$85921[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	add	eax, 20					; 00000014H
	push	eax
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _b$[ebp], eax
; Line 378
	mov	eax, DWORD PTR _b$[ebp]
	mov	BYTE PTR [eax], 255			; 000000ffH
; Line 379
	mov	ecx, DWORD PTR _b$[ebp]
	mov	BYTE PTR [ecx+1], 250			; 000000faH
; Line 380
	mov	edx, DWORD PTR _b$[ebp]
	mov	BYTE PTR [edx+2], 32			; 00000020H
; Line 381
	mov	eax, DWORD PTR _b$[ebp]
	mov	BYTE PTR [eax+3], 0
; Line 382
	mov	ecx, DWORD PTR _termspeed$85921[ebp]
	push	ecx
	mov	edx, DWORD PTR _b$[ebp]
	add	edx, 4
	push	edx
	call	_strcpy
	add	esp, 8
; Line 383
	mov	eax, DWORD PTR _termspeed$85921[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 4
	mov	DWORD PTR _n$[ebp], eax
; Line 384
	mov	ecx, DWORD PTR _b$[ebp]
	add	ecx, DWORD PTR _n$[ebp]
	mov	BYTE PTR [ecx], 255			; 000000ffH
; Line 385
	mov	edx, DWORD PTR _b$[ebp]
	add	edx, DWORD PTR _n$[ebp]
	mov	BYTE PTR [edx+1], 240			; 000000f0H
; Line 386
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 2
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+80], eax
; Line 387
	push	OFFSET $SG85926
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 388
	mov	edx, DWORD PTR _termspeed$85921[ebp]
	push	edx
	push	OFFSET $SG85927
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _logbuf$85920[ebp], eax
; Line 389
	mov	eax, DWORD PTR _logbuf$85920[ebp]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_logevent
	add	esp, 8
; Line 390
	mov	eax, DWORD PTR _logbuf$85920[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 391
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 392
	jmp	SHORT $LN41@process_su
$LN42@process_su:
; Line 393
	push	OFFSET $SG85929
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	_logevent
	add	esp, 8
$LN41@process_su:
; Line 394
	jmp	$LN46@process_su
$LN40@process_su:
; Line 396
	mov	ecx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [ecx+92], 1
	jne	$LN39@process_su
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+96]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	$LN39@process_su
; Line 398
	push	46					; 0000002eH
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	call	_conf_get_str
	add	esp, 8
	mov	DWORD PTR _termtype$85933[ebp], eax
; Line 399
	push	1
	mov	ecx, DWORD PTR _termtype$85933[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	add	eax, 20					; 00000014H
	push	eax
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _b$[ebp], eax
; Line 400
	mov	edx, DWORD PTR _b$[ebp]
	mov	BYTE PTR [edx], 255			; 000000ffH
; Line 401
	mov	eax, DWORD PTR _b$[ebp]
	mov	BYTE PTR [eax+1], 250			; 000000faH
; Line 402
	mov	ecx, DWORD PTR _b$[ebp]
	mov	BYTE PTR [ecx+2], 24			; 00000018H
; Line 403
	mov	edx, DWORD PTR _b$[ebp]
	mov	BYTE PTR [edx+3], 0
; Line 404
	mov	DWORD PTR _n$[ebp], 0
	jmp	SHORT $LN38@process_su
$LN37@process_su:
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
$LN38@process_su:
	mov	ecx, DWORD PTR _termtype$85933[ebp]
	add	ecx, DWORD PTR _n$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN36@process_su
; Line 407
	mov	eax, DWORD PTR _termtype$85933[ebp]
	add	eax, DWORD PTR _n$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 97					; 00000061H
	jl	SHORT $LN48@process_su
	mov	edx, DWORD PTR _termtype$85933[ebp]
	add	edx, DWORD PTR _n$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 122				; 0000007aH
	jg	SHORT $LN48@process_su
	mov	ecx, DWORD PTR _termtype$85933[ebp]
	add	ecx, DWORD PTR _n$[ebp]
	movsx	edx, BYTE PTR [ecx]
	sub	edx, 32					; 00000020H
	mov	DWORD PTR tv187[ebp], edx
	jmp	SHORT $LN49@process_su
$LN48@process_su:
	mov	eax, DWORD PTR _termtype$85933[ebp]
	add	eax, DWORD PTR _n$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	DWORD PTR tv187[ebp], ecx
$LN49@process_su:
	mov	edx, DWORD PTR _b$[ebp]
	add	edx, DWORD PTR _n$[ebp]
	mov	al, BYTE PTR tv187[ebp]
	mov	BYTE PTR [edx+4], al
	jmp	SHORT $LN37@process_su
$LN36@process_su:
; Line 408
	mov	ecx, DWORD PTR _b$[ebp]
	add	ecx, DWORD PTR _n$[ebp]
	mov	BYTE PTR [ecx+4], 255			; 000000ffH
; Line 409
	mov	edx, DWORD PTR _b$[ebp]
	add	edx, DWORD PTR _n$[ebp]
	mov	BYTE PTR [edx+5], 240			; 000000f0H
; Line 410
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 6
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+80], eax
; Line 411
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _n$[ebp]
	mov	BYTE PTR [eax+4], 0
; Line 412
	push	OFFSET $SG85940
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_logevent
	add	esp, 8
; Line 413
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, 4
	push	eax
	push	OFFSET $SG85941
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _logbuf$85932[ebp], eax
; Line 414
	mov	ecx, DWORD PTR _logbuf$85932[ebp]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	_logevent
	add	esp, 8
; Line 415
	mov	ecx, DWORD PTR _logbuf$85932[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 416
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 417
	jmp	SHORT $LN35@process_su
$LN39@process_su:
; Line 418
	push	OFFSET $SG85943
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_logevent
	add	esp, 8
$LN35@process_su:
; Line 419
	jmp	$LN46@process_su
$LN34@process_su:
; Line 422
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR _p$[ebp], eax
; Line 423
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, DWORD PTR [ecx+92]
	mov	DWORD PTR _q$[ebp], edx
; Line 424
	mov	eax, DWORD PTR _p$[ebp]
	cmp	eax, DWORD PTR _q$[ebp]
	jae	$LN46@process_su
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, BYTE PTR [ecx]
	cmp	edx, 1
	jne	$LN46@process_su
; Line 426
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
; Line 427
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	push	edx
	call	_telopt
	add	esp, 4
	push	eax
	push	OFFSET $SG85947
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _logbuf$85946[ebp], eax
; Line 428
	mov	eax, DWORD PTR _logbuf$85946[ebp]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_logevent
	add	esp, 8
; Line 429
	mov	eax, DWORD PTR _logbuf$85946[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 430
	mov	ecx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [ecx+88], 36			; 00000024H
	jne	SHORT $LN32@process_su
; Line 431
	push	53					; 00000035H
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN31@process_su
; Line 432
	mov	DWORD PTR _value$[ebp], 1
; Line 433
	mov	DWORD PTR _var$[ebp], 0
; Line 434
	jmp	SHORT $LN29@process_su
$LN31@process_su:
; Line 435
	mov	DWORD PTR _value$[ebp], 0
; Line 436
	mov	DWORD PTR _var$[ebp], 1
$LN29@process_su:
; Line 441
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	ecx, DWORD PTR _q$[ebp]
	jae	SHORT $LN28@process_su
; Line 442
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, BYTE PTR [edx]
	test	eax, eax
	jne	SHORT $LN27@process_su
; Line 443
	mov	DWORD PTR _value$[ebp], 1
; Line 444
	mov	DWORD PTR _var$[ebp], 0
	jmp	SHORT $LN26@process_su
$LN27@process_su:
; Line 445
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, BYTE PTR [ecx]
	cmp	edx, 1
	jne	SHORT $LN26@process_su
; Line 446
	mov	DWORD PTR _value$[ebp], 0
; Line 447
	mov	DWORD PTR _var$[ebp], 1
$LN26@process_su:
; Line 449
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
; Line 450
	jmp	SHORT $LN29@process_su
$LN28@process_su:
; Line 451
	jmp	SHORT $LN24@process_su
$LN32@process_su:
; Line 456
	mov	DWORD PTR _value$[ebp], 1
; Line 457
	mov	DWORD PTR _var$[ebp], 0
$LN24@process_su:
; Line 459
	mov	DWORD PTR _bsize$[ebp], 20		; 00000014H
; Line 464
	lea	ecx, DWORD PTR _ekey$[ebp]
	push	ecx
	push	0
	push	49					; 00000031H
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _eval$[ebp], eax
	jmp	SHORT $LN23@process_su
$LN22@process_su:
	lea	ecx, DWORD PTR _ekey$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ekey$[ebp]
	push	edx
	push	49					; 00000031H
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _eval$[ebp], eax
$LN23@process_su:
	cmp	DWORD PTR _eval$[ebp], 0
	je	SHORT $LN21@process_su
; Line 465
	mov	edx, DWORD PTR _ekey$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR _eval$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _bsize$[ebp]
	lea	ecx, DWORD PTR [eax+esi+2]
	mov	DWORD PTR _bsize$[ebp], ecx
	jmp	SHORT $LN22@process_su
$LN21@process_su:
; Line 466
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	call	_get_remote_username
	add	esp, 4
	mov	DWORD PTR _user$[ebp], eax
; Line 467
	cmp	DWORD PTR _user$[ebp], 0
	je	SHORT $LN20@process_su
; Line 468
	mov	ecx, DWORD PTR _user$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	edx, DWORD PTR _bsize$[ebp]
	lea	eax, DWORD PTR [edx+eax+6]
	mov	DWORD PTR _bsize$[ebp], eax
$LN20@process_su:
; Line 470
	push	1
	mov	ecx, DWORD PTR _bsize$[ebp]
	push	ecx
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _b$[ebp], eax
; Line 471
	mov	edx, DWORD PTR _b$[ebp]
	mov	BYTE PTR [edx], 255			; 000000ffH
; Line 472
	mov	eax, DWORD PTR _b$[ebp]
	mov	BYTE PTR [eax+1], 250			; 000000faH
; Line 473
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	al, BYTE PTR [edx+88]
	mov	BYTE PTR [ecx+2], al
; Line 474
	mov	ecx, DWORD PTR _b$[ebp]
	mov	BYTE PTR [ecx+3], 0
; Line 475
	mov	DWORD PTR _n$[ebp], 4
; Line 480
	lea	edx, DWORD PTR _ekey$[ebp]
	push	edx
	push	0
	push	49					; 00000031H
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _eval$[ebp], eax
	jmp	SHORT $LN19@process_su
$LN18@process_su:
	lea	edx, DWORD PTR _ekey$[ebp]
	push	edx
	mov	eax, DWORD PTR _ekey$[ebp]
	push	eax
	push	49					; 00000031H
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _eval$[ebp], eax
$LN19@process_su:
	cmp	DWORD PTR _eval$[ebp], 0
	je	$LN17@process_su
; Line 481
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _n$[ebp]
	mov	cl, BYTE PTR _var$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _n$[ebp]
	add	edx, 1
	mov	DWORD PTR _n$[ebp], edx
; Line 482
	mov	eax, DWORD PTR _ekey$[ebp]
	mov	DWORD PTR _e$[ebp], eax
	jmp	SHORT $LN16@process_su
$LN15@process_su:
	mov	ecx, DWORD PTR _e$[ebp]
	add	ecx, 1
	mov	DWORD PTR _e$[ebp], ecx
$LN16@process_su:
	mov	edx, DWORD PTR _e$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN14@process_su
; Line 483
	mov	ecx, DWORD PTR _b$[ebp]
	add	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _e$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR [ecx], al
	mov	ecx, DWORD PTR _n$[ebp]
	add	ecx, 1
	mov	DWORD PTR _n$[ebp], ecx
	jmp	SHORT $LN15@process_su
$LN14@process_su:
; Line 484
	mov	edx, DWORD PTR _b$[ebp]
	add	edx, DWORD PTR _n$[ebp]
	mov	al, BYTE PTR _value$[ebp]
	mov	BYTE PTR [edx], al
	mov	ecx, DWORD PTR _n$[ebp]
	add	ecx, 1
	mov	DWORD PTR _n$[ebp], ecx
; Line 485
	mov	edx, DWORD PTR _eval$[ebp]
	mov	DWORD PTR _e$[ebp], edx
	jmp	SHORT $LN13@process_su
$LN12@process_su:
	mov	eax, DWORD PTR _e$[ebp]
	add	eax, 1
	mov	DWORD PTR _e$[ebp], eax
$LN13@process_su:
	mov	ecx, DWORD PTR _e$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN11@process_su
; Line 486
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
	jmp	SHORT $LN12@process_su
$LN11@process_su:
; Line 487
	jmp	$LN18@process_su
$LN17@process_su:
; Line 488
	cmp	DWORD PTR _user$[ebp], 0
	je	$LN10@process_su
; Line 489
	mov	ecx, DWORD PTR _b$[ebp]
	add	ecx, DWORD PTR _n$[ebp]
	mov	dl, BYTE PTR _var$[ebp]
	mov	BYTE PTR [ecx], dl
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
; Line 490
	mov	ecx, DWORD PTR _b$[ebp]
	add	ecx, DWORD PTR _n$[ebp]
	mov	BYTE PTR [ecx], 85			; 00000055H
	mov	edx, DWORD PTR _n$[ebp]
	add	edx, 1
	mov	DWORD PTR _n$[ebp], edx
; Line 491
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _n$[ebp]
	mov	BYTE PTR [eax], 83			; 00000053H
	mov	ecx, DWORD PTR _n$[ebp]
	add	ecx, 1
	mov	DWORD PTR _n$[ebp], ecx
; Line 492
	mov	edx, DWORD PTR _b$[ebp]
	add	edx, DWORD PTR _n$[ebp]
	mov	BYTE PTR [edx], 69			; 00000045H
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
; Line 493
	mov	ecx, DWORD PTR _b$[ebp]
	add	ecx, DWORD PTR _n$[ebp]
	mov	BYTE PTR [ecx], 82			; 00000052H
	mov	edx, DWORD PTR _n$[ebp]
	add	edx, 1
	mov	DWORD PTR _n$[ebp], edx
; Line 494
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _n$[ebp]
	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _n$[ebp]
	add	edx, 1
	mov	DWORD PTR _n$[ebp], edx
; Line 495
	mov	eax, DWORD PTR _user$[ebp]
	mov	DWORD PTR _e$[ebp], eax
	jmp	SHORT $LN9@process_su
$LN8@process_su:
	mov	ecx, DWORD PTR _e$[ebp]
	add	ecx, 1
	mov	DWORD PTR _e$[ebp], ecx
$LN9@process_su:
	mov	edx, DWORD PTR _e$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN10@process_su
; Line 496
	mov	ecx, DWORD PTR _b$[ebp]
	add	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _e$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR [ecx], al
	mov	ecx, DWORD PTR _n$[ebp]
	add	ecx, 1
	mov	DWORD PTR _n$[ebp], ecx
	jmp	SHORT $LN8@process_su
$LN10@process_su:
; Line 498
	mov	edx, DWORD PTR _b$[ebp]
	add	edx, DWORD PTR _n$[ebp]
	mov	BYTE PTR [edx], 255			; 000000ffH
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
; Line 499
	mov	ecx, DWORD PTR _b$[ebp]
	add	ecx, DWORD PTR _n$[ebp]
	mov	BYTE PTR [ecx], 240			; 000000f0H
	mov	edx, DWORD PTR _n$[ebp]
	add	edx, 1
	mov	DWORD PTR _n$[ebp], edx
; Line 500
	mov	esi, esp
	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+80], eax
; Line 501
	cmp	DWORD PTR _n$[ebp], 6
	jne	SHORT $LN6@process_su
; Line 503
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	push	ecx
	call	_telopt
	add	esp, 4
	push	eax
	push	OFFSET $SG85983
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _logbuf$85946[ebp], eax
; Line 504
	mov	edx, DWORD PTR _logbuf$85946[ebp]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 505
	mov	edx, DWORD PTR _logbuf$85946[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 506
	jmp	$LN5@process_su
$LN6@process_su:
; Line 508
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	push	ecx
	call	_telopt
	add	esp, 4
	push	eax
	push	OFFSET $SG85985
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _logbuf$85946[ebp], eax
; Line 509
	mov	edx, DWORD PTR _logbuf$85946[ebp]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 510
	mov	edx, DWORD PTR _logbuf$85946[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 515
	lea	eax, DWORD PTR _ekey$[ebp]
	push	eax
	push	0
	push	49					; 00000031H
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _eval$[ebp], eax
	jmp	SHORT $LN4@process_su
$LN3@process_su:
	lea	eax, DWORD PTR _ekey$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ekey$[ebp]
	push	ecx
	push	49					; 00000031H
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _eval$[ebp], eax
$LN4@process_su:
	cmp	DWORD PTR _eval$[ebp], 0
	je	SHORT $LN2@process_su
; Line 516
	mov	ecx, DWORD PTR _eval$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ekey$[ebp]
	push	edx
	push	OFFSET $SG85991
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _logbuf$85946[ebp], eax
; Line 517
	mov	eax, DWORD PTR _logbuf$85946[ebp]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_logevent
	add	esp, 8
; Line 518
	mov	eax, DWORD PTR _logbuf$85946[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 519
	jmp	SHORT $LN3@process_su
$LN2@process_su:
; Line 520
	cmp	DWORD PTR _user$[ebp], 0
	je	SHORT $LN5@process_su
; Line 521
	mov	ecx, DWORD PTR _user$[ebp]
	push	ecx
	push	OFFSET $SG85993
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _logbuf$85946[ebp], eax
; Line 522
	mov	edx, DWORD PTR _logbuf$85946[ebp]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 523
	mov	edx, DWORD PTR _logbuf$85946[ebp]
	push	edx
	call	_safefree
	add	esp, 4
$LN5@process_su:
; Line 526
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 527
	mov	ecx, DWORD PTR _user$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN46@process_su:
; Line 531
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN53@process_su
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 80					; 00000050H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN53@process_su:
	DD	1
	DD	$LN52@process_su
$LN52@process_su:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN51@process_su
$LN51@process_su:
	DB	101					; 00000065H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
	npad	3
$LN54@process_su:
	DD	$LN40@process_su
	DD	$LN43@process_su
	DD	$LN34@process_su
	DD	$LN46@process_su
$LN50@process_su:
	DB	0
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	1
	DB	3
	DB	3
	DB	3
	DB	2
	DB	3
	DB	3
	DB	2
_process_subneg ENDP
; Function compile flags: /Odtp /RTCsu
_telnet$ = -4						; size = 4
_plug$ = 8						; size = 4
_bufsize$ = 12						; size = 4
_telnet_sent PROC
; Line 704
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 705
	mov	eax, DWORD PTR _plug$[ebp]
	mov	DWORD PTR _telnet$[ebp], eax
; Line 706
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR _bufsize$[ebp]
	mov	DWORD PTR [ecx+80], edx
; Line 707
	mov	esp, ebp
	pop	ebp
	ret	0
_telnet_sent ENDP
_TEXT	ENDS
EXTRN	_host_strrchr:PROC
EXTRN	_dupstr:PROC
EXTRN	_update_specials_menu:PROC
EXTRN	_pinger_new:PROC
EXTRN	_new_connection:PROC
EXTRN	_sk_addr_free:PROC
EXTRN	_sk_addr_error:PROC
EXTRN	_name_lookup:PROC
EXTRN	_conf_copy:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv130 = -44						; size = 4
tv131 = -40						; size = 4
_colon$86184 = -36					; size = 4
_o$86178 = -32						; size = 4
_o$86173 = -28						; size = 4
_buf$86161 = -24					; size = 4
_addressfamily$ = -20					; size = 4
_loghost$ = -16						; size = 4
_telnet$ = -12						; size = 4
_err$ = -8						; size = 4
_addr$ = -4						; size = 4
_frontend_handle$ = 8					; size = 4
_backend_handle$ = 12					; size = 4
_conf$ = 16						; size = 4
_host$ = 20						; size = 4
_port$ = 24						; size = 4
_realhost$ = 28						; size = 4
_nodelay$ = 32						; size = 4
_keepalive$ = 36					; size = 4
_telnet_init PROC
; Line 720
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-44]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 733
	push	116					; 00000074H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _telnet$[ebp], eax
; Line 734
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [eax], OFFSET ?fn_table@?1??telnet_init@@9@9
; Line 735
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_copy
	add	esp, 4
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+108], eax
; Line 736
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 737
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 738
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+68], 1
; Line 739
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [eax+72], 1
; Line 740
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+76], 0
; Line 741
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+96], 0
; Line 742
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [eax+100], 0
; Line 743
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR _frontend_handle$[ebp]
	mov	DWORD PTR [ecx+12], edx
; Line 744
	push	110					; 0000006eH
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 745
	push	111					; 0000006fH
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+24], eax
; Line 746
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [eax+104], 0
; Line 747
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+16], 0
; Line 748
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+112], 0
; Line 749
	mov	eax, DWORD PTR _backend_handle$[ebp]
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 756
	push	3
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	DWORD PTR _addressfamily$[ebp], eax
; Line 760
	cmp	DWORD PTR _addressfamily$[ebp], 1
	jne	SHORT $LN19@telnet_ini
	mov	DWORD PTR tv131[ebp], OFFSET $SG86162
	jmp	SHORT $LN20@telnet_ini
$LN19@telnet_ini:
	cmp	DWORD PTR _addressfamily$[ebp], 2
	jne	SHORT $LN17@telnet_ini
	mov	DWORD PTR tv130[ebp], OFFSET $SG86163
	jmp	SHORT $LN18@telnet_ini
$LN17@telnet_ini:
	mov	DWORD PTR tv130[ebp], OFFSET $SG86164
$LN18@telnet_ini:
	mov	ecx, DWORD PTR tv130[ebp]
	mov	DWORD PTR tv131[ebp], ecx
$LN20@telnet_ini:
	mov	edx, DWORD PTR tv131[ebp]
	push	edx
	mov	eax, DWORD PTR _host$[ebp]
	push	eax
	push	OFFSET $SG86165
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _buf$86161[ebp], eax
; Line 761
	mov	ecx, DWORD PTR _buf$86161[ebp]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	_logevent
	add	esp, 8
; Line 762
	mov	ecx, DWORD PTR _buf$86161[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 764
	mov	edx, DWORD PTR _addressfamily$[ebp]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR _realhost$[ebp]
	push	edx
	mov	eax, DWORD PTR _port$[ebp]
	push	eax
	mov	ecx, DWORD PTR _host$[ebp]
	push	ecx
	call	_name_lookup
	add	esp, 20					; 00000014H
	mov	DWORD PTR _addr$[ebp], eax
; Line 765
	mov	edx, DWORD PTR _addr$[ebp]
	push	edx
	call	_sk_addr_error
	add	esp, 4
	mov	DWORD PTR _err$[ebp], eax
	cmp	DWORD PTR _err$[ebp], 0
	je	SHORT $LN14@telnet_ini
; Line 766
	mov	eax, DWORD PTR _addr$[ebp]
	push	eax
	call	_sk_addr_free
	add	esp, 4
; Line 767
	mov	eax, DWORD PTR _err$[ebp]
	jmp	$LN15@telnet_ini
$LN14@telnet_ini:
; Line 770
	cmp	DWORD PTR _port$[ebp], 0
	jge	SHORT $LN13@telnet_ini
; Line 771
	mov	DWORD PTR _port$[ebp], 23		; 00000017H
$LN13@telnet_ini:
; Line 777
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _keepalive$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nodelay$[ebp]
	push	edx
	push	1
	push	0
	mov	eax, DWORD PTR _port$[ebp]
	push	eax
	mov	ecx, DWORD PTR _realhost$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _addr$[ebp]
	push	eax
	call	_new_connection
	add	esp, 36					; 00000024H
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 778
	mov	esi, esp
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+28]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _err$[ebp], eax
	cmp	DWORD PTR _err$[ebp], 0
	je	SHORT $LN12@telnet_ini
; Line 779
	mov	eax, DWORD PTR _err$[ebp]
	jmp	$LN15@telnet_ini
$LN12@telnet_ini:
; Line 781
	mov	edx, DWORD PTR _telnet$[ebp]
	push	edx
	push	OFFSET _telnet_backend
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	call	_pinger_new
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+112], eax
; Line 786
	push	54					; 00000036H
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN11@telnet_ini
; Line 789
	mov	DWORD PTR _o$86173[ebp], OFFSET _opts
	jmp	SHORT $LN10@telnet_ini
$LN9@telnet_ini:
	mov	edx, DWORD PTR _o$86173[ebp]
	add	edx, 4
	mov	DWORD PTR _o$86173[ebp], edx
$LN10@telnet_ini:
	mov	eax, DWORD PTR _o$86173[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN8@telnet_ini
; Line 790
	mov	ecx, DWORD PTR _o$86173[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+eax*4+28], 2
	jmp	SHORT $LN9@telnet_ini
$LN8@telnet_ini:
; Line 791
	jmp	SHORT $LN7@telnet_ini
$LN11@telnet_ini:
; Line 794
	mov	DWORD PTR _o$86178[ebp], OFFSET _opts
	jmp	SHORT $LN6@telnet_ini
$LN5@telnet_ini:
	mov	edx, DWORD PTR _o$86178[ebp]
	add	edx, 4
	mov	DWORD PTR _o$86178[ebp], edx
$LN6@telnet_ini:
	mov	eax, DWORD PTR _o$86178[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN4@telnet_ini
; Line 795
	mov	ecx, DWORD PTR _o$86178[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _o$86178[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+20]
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+eax*4+28], edx
; Line 796
	mov	eax, DWORD PTR _o$86178[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [eax+edx*4+28], 0
	jne	SHORT $LN3@telnet_ini
; Line 797
	mov	ecx, DWORD PTR _o$86178[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _o$86178[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	push	ecx
	call	_send_opt
	add	esp, 12					; 0000000cH
$LN3@telnet_ini:
; Line 798
	jmp	SHORT $LN5@telnet_ini
$LN4@telnet_ini:
; Line 799
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+76], 1
$LN7@telnet_ini:
; Line 805
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [eax+84], 0
; Line 810
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_update_specials_menu
	add	esp, 4
; Line 815
	push	9
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	mov	DWORD PTR _loghost$[ebp], eax
; Line 816
	mov	edx, DWORD PTR _loghost$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN2@telnet_ini
; Line 819
	mov	ecx, DWORD PTR _realhost$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_safefree
	add	esp, 4
; Line 820
	mov	eax, DWORD PTR _loghost$[ebp]
	push	eax
	call	_dupstr
	add	esp, 4
	mov	ecx, DWORD PTR _realhost$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 822
	push	58					; 0000003aH
	mov	edx, DWORD PTR _realhost$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_host_strrchr
	add	esp, 8
	mov	DWORD PTR _colon$86184[ebp], eax
; Line 823
	cmp	DWORD PTR _colon$86184[ebp], 0
	je	SHORT $LN2@telnet_ini
; Line 824
	mov	ecx, DWORD PTR _colon$86184[ebp]
	mov	BYTE PTR [ecx], 0
	mov	edx, DWORD PTR _colon$86184[ebp]
	add	edx, 1
	mov	DWORD PTR _colon$86184[ebp], edx
$LN2@telnet_ini:
; Line 827
	xor	eax, eax
$LN15@telnet_ini:
; Line 828
	pop	edi
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_telnet_init ENDP
_TEXT	ENDS
EXTRN	_conf_free:PROC
EXTRN	_pinger_free:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_telnet$ = -4						; size = 4
_handle$ = 8						; size = 4
_telnet_free PROC
; Line 831
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 832
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _telnet$[ebp], eax
; Line 834
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	push	edx
	call	_safefree
	add	esp, 4
; Line 835
	mov	eax, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@telnet_fre
; Line 836
	mov	esi, esp
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@telnet_fre:
; Line 837
	mov	ecx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [ecx+112], 0
	je	SHORT $LN1@telnet_fre
; Line 838
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+112]
	push	eax
	call	_pinger_free
	add	esp, 4
$LN1@telnet_fre:
; Line 839
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	call	_conf_free
	add	esp, 4
; Line 840
	mov	eax, DWORD PTR _telnet$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 841
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_telnet_free ENDP
_TEXT	ENDS
EXTRN	_pinger_reconfig:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_telnet$ = -4						; size = 4
_handle$ = 8						; size = 4
_conf$ = 12						; size = 4
_telnet_reconfig PROC
; Line 848
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 849
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _telnet$[ebp], eax
; Line 850
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	push	edx
	call	_pinger_reconfig
	add	esp, 12					; 0000000cH
; Line 851
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	call	_conf_free
	add	esp, 4
; Line 852
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_copy
	add	esp, 4
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+108], eax
; Line 853
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_telnet_reconfig ENDP
; Function compile flags: /Odtp /RTCsu
tv137 = -20						; size = 4
_q$86226 = -16						; size = 4
_end$ = -12						; size = 4
_p$ = -8						; size = 4
_telnet$ = -4						; size = 4
_handle$ = 8						; size = 4
_buf$ = 12						; size = 4
_len$ = 16						; size = 4
_telnet_send PROC
; Line 859
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 860
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _telnet$[ebp], eax
; Line 868
	mov	ecx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	jne	SHORT $LN9@telnet_sen
; Line 869
	xor	eax, eax
	jmp	$LN10@telnet_sen
$LN9@telnet_sen:
; Line 871
	mov	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR _p$[ebp], edx
; Line 872
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR _end$[ebp], eax
$LN8@telnet_sen:
; Line 873
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	ecx, DWORD PTR _end$[ebp]
	jae	$LN7@telnet_sen
; Line 874
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR _q$86226[ebp], edx
$LN6@telnet_sen:
; Line 876
	mov	eax, DWORD PTR _p$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jae	SHORT $LN5@telnet_sen
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, BYTE PTR [ecx]
	cmp	edx, 255				; 000000ffH
	je	SHORT $LN5@telnet_sen
	mov	eax, DWORD PTR _o_we_bin+20
	mov	ecx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [ecx+eax*4+28], 1
	je	SHORT $LN4@telnet_sen
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, BYTE PTR [edx]
	cmp	eax, 13					; 0000000dH
	je	SHORT $LN5@telnet_sen
$LN4@telnet_sen:
; Line 877
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 1
	mov	DWORD PTR _p$[ebp], ecx
	jmp	SHORT $LN6@telnet_sen
$LN5@telnet_sen:
; Line 878
	mov	edx, DWORD PTR _p$[ebp]
	sub	edx, DWORD PTR _q$86226[ebp]
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _q$86226[ebp]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+80], eax
$LN3@telnet_sen:
; Line 880
	mov	edx, DWORD PTR _p$[ebp]
	cmp	edx, DWORD PTR _end$[ebp]
	jae	$LN2@telnet_sen
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 255				; 000000ffH
	je	SHORT $LN1@telnet_sen
	mov	edx, DWORD PTR _o_we_bin+20
	mov	eax, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [eax+edx*4+28], 1
	je	SHORT $LN2@telnet_sen
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, BYTE PTR [ecx]
	cmp	edx, 13					; 0000000dH
	jne	SHORT $LN2@telnet_sen
$LN1@telnet_sen:
; Line 882
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 255				; 000000ffH
	jne	SHORT $LN12@telnet_sen
	mov	DWORD PTR tv137[ebp], OFFSET ?iac@?1??telnet_send@@9@9
	jmp	SHORT $LN13@telnet_sen
$LN12@telnet_sen:
	mov	DWORD PTR tv137[ebp], OFFSET ?cr@?1??telnet_send@@9@9
$LN13@telnet_sen:
	mov	esi, esp
	push	2
	mov	edx, DWORD PTR tv137[ebp]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 883
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 1
	mov	DWORD PTR _p$[ebp], edx
; Line 884
	jmp	$LN3@telnet_sen
$LN2@telnet_sen:
; Line 885
	jmp	$LN8@telnet_sen
$LN7@telnet_sen:
; Line 887
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [eax+80]
$LN10@telnet_sen:
; Line 888
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_telnet_send ENDP
; Function compile flags: /Odtp /RTCsu
_telnet$ = -4						; size = 4
_handle$ = 8						; size = 4
_telnet_sendbuffer PROC
; Line 894
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 895
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _telnet$[ebp], eax
; Line 896
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [ecx+80]
; Line 897
	mov	esp, ebp
	pop	ebp
	ret	0
_telnet_sendbuffer ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_logbuf$ = -48						; size = 4
_n$ = -44						; size = 4
_b$ = -36						; size = 24
_telnet$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_handle$ = 8						; size = 4
_width$ = 12						; size = 4
_height$ = 16						; size = 4
_telnet_size PROC
; Line 903
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-48]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 904
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _telnet$[ebp], eax
; Line 909
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR _width$[ebp]
	mov	DWORD PTR [ecx+20], edx
; Line 910
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR _height$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 912
	mov	edx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	SHORT $LN5@telnet_siz
	mov	eax, DWORD PTR _o_naws+20
	mov	ecx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [ecx+eax*4+28], 1
	je	SHORT $LN6@telnet_siz
$LN5@telnet_siz:
; Line 913
	jmp	$LN7@telnet_siz
$LN6@telnet_siz:
; Line 914
	mov	DWORD PTR _n$[ebp], 0
; Line 915
	mov	edx, DWORD PTR _n$[ebp]
	mov	BYTE PTR _b$[ebp+edx], 255		; 000000ffH
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
; Line 916
	mov	ecx, DWORD PTR _n$[ebp]
	mov	BYTE PTR _b$[ebp+ecx], 250		; 000000faH
	mov	edx, DWORD PTR _n$[ebp]
	add	edx, 1
	mov	DWORD PTR _n$[ebp], edx
; Line 917
	mov	eax, DWORD PTR _n$[ebp]
	mov	BYTE PTR _b$[ebp+eax], 31		; 0000001fH
	mov	ecx, DWORD PTR _n$[ebp]
	add	ecx, 1
	mov	DWORD PTR _n$[ebp], ecx
; Line 918
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sar	eax, 8
	mov	ecx, DWORD PTR _n$[ebp]
	mov	BYTE PTR _b$[ebp+ecx], al
	mov	edx, DWORD PTR _n$[ebp]
	add	edx, 1
	mov	DWORD PTR _n$[ebp], edx
; Line 919
	mov	eax, DWORD PTR _n$[ebp]
	movzx	ecx, BYTE PTR _b$[ebp+eax-1]
	cmp	ecx, 255				; 000000ffH
	jne	SHORT $LN4@telnet_siz
	mov	edx, DWORD PTR _n$[ebp]
	mov	BYTE PTR _b$[ebp+edx], 255		; 000000ffH
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
$LN4@telnet_siz:
; Line 920
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	and	edx, 255				; 000000ffH
	mov	eax, DWORD PTR _n$[ebp]
	mov	BYTE PTR _b$[ebp+eax], dl
	mov	ecx, DWORD PTR _n$[ebp]
	add	ecx, 1
	mov	DWORD PTR _n$[ebp], ecx
; Line 921
	mov	edx, DWORD PTR _n$[ebp]
	movzx	eax, BYTE PTR _b$[ebp+edx-1]
	cmp	eax, 255				; 000000ffH
	jne	SHORT $LN3@telnet_siz
	mov	ecx, DWORD PTR _n$[ebp]
	mov	BYTE PTR _b$[ebp+ecx], 255		; 000000ffH
	mov	edx, DWORD PTR _n$[ebp]
	add	edx, 1
	mov	DWORD PTR _n$[ebp], edx
$LN3@telnet_siz:
; Line 922
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sar	ecx, 8
	mov	edx, DWORD PTR _n$[ebp]
	mov	BYTE PTR _b$[ebp+edx], cl
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
; Line 923
	mov	ecx, DWORD PTR _n$[ebp]
	movzx	edx, BYTE PTR _b$[ebp+ecx-1]
	cmp	edx, 255				; 000000ffH
	jne	SHORT $LN2@telnet_siz
	mov	eax, DWORD PTR _n$[ebp]
	mov	BYTE PTR _b$[ebp+eax], 255		; 000000ffH
	mov	ecx, DWORD PTR _n$[ebp]
	add	ecx, 1
	mov	DWORD PTR _n$[ebp], ecx
$LN2@telnet_siz:
; Line 924
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+24]
	and	eax, 255				; 000000ffH
	mov	ecx, DWORD PTR _n$[ebp]
	mov	BYTE PTR _b$[ebp+ecx], al
	mov	edx, DWORD PTR _n$[ebp]
	add	edx, 1
	mov	DWORD PTR _n$[ebp], edx
; Line 925
	mov	eax, DWORD PTR _n$[ebp]
	movzx	ecx, BYTE PTR _b$[ebp+eax-1]
	cmp	ecx, 255				; 000000ffH
	jne	SHORT $LN1@telnet_siz
	mov	edx, DWORD PTR _n$[ebp]
	mov	BYTE PTR _b$[ebp+edx], 255		; 000000ffH
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
$LN1@telnet_siz:
; Line 926
	mov	ecx, DWORD PTR _n$[ebp]
	mov	BYTE PTR _b$[ebp+ecx], 255		; 000000ffH
	mov	edx, DWORD PTR _n$[ebp]
	add	edx, 1
	mov	DWORD PTR _n$[ebp], edx
; Line 927
	mov	eax, DWORD PTR _n$[ebp]
	mov	BYTE PTR _b$[ebp+eax], 240		; 000000f0H
	mov	ecx, DWORD PTR _n$[ebp]
	add	ecx, 1
	mov	DWORD PTR _n$[ebp], ecx
; Line 928
	mov	esi, esp
	mov	edx, DWORD PTR _n$[ebp]
	push	edx
	lea	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 930
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	push	OFFSET $SG86263
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _logbuf$[ebp], eax
; Line 931
	mov	eax, DWORD PTR _logbuf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_logevent
	add	esp, 8
; Line 932
	mov	eax, DWORD PTR _logbuf$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
$LN7@telnet_siz:
; Line 933
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@telnet_siz
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@telnet_siz:
	DD	1
	DD	$LN10@telnet_siz
$LN10@telnet_siz:
	DD	-36					; ffffffdcH
	DD	24					; 00000018H
	DD	$LN9@telnet_siz
$LN9@telnet_siz:
	DB	98					; 00000062H
	DB	0
_telnet_size ENDP
; Function compile flags: /Odtp /RTCsu
tv66 = -20						; size = 4
_b$ = -12						; size = 2
_telnet$ = -4						; size = 4
_handle$ = 8						; size = 4
_code$ = 12						; size = 4
_telnet_special PROC
; Line 939
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 940
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _telnet$[ebp], eax
; Line 943
	mov	ecx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	jne	SHORT $LN27@telnet_spe
; Line 944
	jmp	$LN28@telnet_spe
$LN27@telnet_spe:
; Line 946
	mov	BYTE PTR _b$[ebp], 255			; 000000ffH
; Line 947
	mov	edx, DWORD PTR _code$[ebp]
	mov	DWORD PTR tv66[ebp], edx
	cmp	DWORD PTR tv66[ebp], 16			; 00000010H
	ja	$LN28@telnet_spe
	mov	eax, DWORD PTR tv66[ebp]
	jmp	DWORD PTR $LN33@telnet_spe[eax*4]
$LN24@telnet_spe:
; Line 949
	mov	BYTE PTR _b$[ebp+1], 246		; 000000f6H
; Line 950
	mov	esi, esp
	push	2
	lea	ecx, DWORD PTR _b$[ebp]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+80], eax
; Line 951
	jmp	$LN28@telnet_spe
$LN23@telnet_spe:
; Line 953
	mov	BYTE PTR _b$[ebp+1], 243		; 000000f3H
; Line 954
	mov	esi, esp
	push	2
	lea	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 955
	jmp	$LN28@telnet_spe
$LN22@telnet_spe:
; Line 957
	mov	BYTE PTR _b$[ebp+1], 247		; 000000f7H
; Line 958
	mov	esi, esp
	push	2
	lea	edx, DWORD PTR _b$[ebp]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 959
	jmp	$LN28@telnet_spe
$LN21@telnet_spe:
; Line 961
	mov	BYTE PTR _b$[ebp+1], 248		; 000000f8H
; Line 962
	mov	esi, esp
	push	2
	lea	edx, DWORD PTR _b$[ebp]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 963
	jmp	$LN28@telnet_spe
$LN20@telnet_spe:
; Line 965
	mov	BYTE PTR _b$[ebp+1], 249		; 000000f9H
; Line 966
	mov	esi, esp
	push	2
	lea	edx, DWORD PTR _b$[ebp]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 967
	jmp	$LN28@telnet_spe
$LN19@telnet_spe:
; Line 969
	mov	BYTE PTR _b$[ebp+1], 241		; 000000f1H
; Line 970
	mov	esi, esp
	push	2
	lea	edx, DWORD PTR _b$[ebp]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 971
	jmp	$LN28@telnet_spe
$LN18@telnet_spe:
; Line 973
	mov	BYTE PTR _b$[ebp+1], 238		; 000000eeH
; Line 974
	mov	esi, esp
	push	2
	lea	edx, DWORD PTR _b$[ebp]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 975
	jmp	$LN28@telnet_spe
$LN17@telnet_spe:
; Line 977
	mov	BYTE PTR _b$[ebp+1], 245		; 000000f5H
; Line 978
	mov	esi, esp
	push	2
	lea	edx, DWORD PTR _b$[ebp]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 979
	jmp	$LN28@telnet_spe
$LN16@telnet_spe:
; Line 981
	mov	BYTE PTR _b$[ebp+1], 244		; 000000f4H
; Line 982
	mov	esi, esp
	push	2
	lea	edx, DWORD PTR _b$[ebp]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 983
	jmp	$LN28@telnet_spe
$LN15@telnet_spe:
; Line 985
	mov	BYTE PTR _b$[ebp+1], 237		; 000000edH
; Line 986
	mov	esi, esp
	push	2
	lea	edx, DWORD PTR _b$[ebp]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 987
	jmp	$LN28@telnet_spe
$LN14@telnet_spe:
; Line 989
	mov	BYTE PTR _b$[ebp+1], 239		; 000000efH
; Line 990
	mov	esi, esp
	push	2
	lea	edx, DWORD PTR _b$[ebp]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 991
	jmp	$LN28@telnet_spe
$LN13@telnet_spe:
; Line 993
	mov	BYTE PTR _b$[ebp+1], 236		; 000000ecH
; Line 994
	mov	esi, esp
	push	2
	lea	edx, DWORD PTR _b$[ebp]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 995
	jmp	$LN28@telnet_spe
$LN12@telnet_spe:
; Line 999
	mov	edx, DWORD PTR _o_we_bin+20
	mov	eax, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [eax+edx*4+28], 1
	jne	SHORT $LN11@telnet_spe
; Line 1000
	mov	esi, esp
	push	1
	push	OFFSET $SG86305
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 1001
	jmp	SHORT $LN10@telnet_spe
$LN11@telnet_spe:
; Line 1002
	mov	esi, esp
	push	2
	push	OFFSET $SG86307
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+80], eax
$LN10@telnet_spe:
; Line 1003
	jmp	$LN28@telnet_spe
$LN9@telnet_spe:
; Line 1005
	mov	BYTE PTR _b$[ebp+1], 242		; 000000f2H
; Line 1006
	mov	esi, esp
	push	1
	lea	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 1007
	mov	esi, esp
	push	1
	lea	edx, DWORD PTR _b$[ebp+1]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 1008
	jmp	$LN28@telnet_spe
$LN8@telnet_spe:
; Line 1011
	mov	edx, DWORD PTR _o_echo+20
	mov	eax, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [eax+edx*4+28], 2
	je	SHORT $LN6@telnet_spe
	mov	ecx, DWORD PTR _o_echo+20
	mov	edx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [edx+ecx*4+28], 3
	jne	SHORT $LN7@telnet_spe
$LN6@telnet_spe:
; Line 1012
	mov	eax, DWORD PTR _o_echo+20
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+eax*4+28], 0
; Line 1013
	mov	edx, DWORD PTR _o_echo+16
	push	edx
	mov	eax, DWORD PTR _o_echo
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	push	ecx
	call	_send_opt
	add	esp, 12					; 0000000cH
$LN7@telnet_spe:
; Line 1015
	jmp	SHORT $LN28@telnet_spe
$LN5@telnet_spe:
; Line 1017
	mov	edx, DWORD PTR _o_echo+20
	mov	eax, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [eax+edx*4+28], 1
	jne	SHORT $LN4@telnet_spe
; Line 1018
	mov	ecx, DWORD PTR _o_echo+20
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [edx+ecx*4+28], 0
; Line 1019
	mov	eax, DWORD PTR _o_echo+16
	push	eax
	mov	ecx, DWORD PTR _o_echo+4
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	push	edx
	call	_send_opt
	add	esp, 12					; 0000000cH
$LN4@telnet_spe:
; Line 1021
	jmp	SHORT $LN28@telnet_spe
$LN3@telnet_spe:
; Line 1023
	mov	eax, DWORD PTR _o_they_sga+20
	mov	ecx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [ecx+eax*4+28], 1
	jne	SHORT $LN28@telnet_spe
; Line 1024
	mov	BYTE PTR _b$[ebp+1], 241		; 000000f1H
; Line 1025
	mov	esi, esp
	push	2
	lea	edx, DWORD PTR _b$[ebp]
	push	edx
	mov	eax, DWORD PTR _telnet$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	DWORD PTR [ecx+80], eax
$LN28@telnet_spe:
; Line 1031
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@telnet_spe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN32@telnet_spe:
	DD	1
	DD	$LN31@telnet_spe
$LN31@telnet_spe:
	DD	-12					; fffffff4H
	DD	2
	DD	$LN30@telnet_spe
$LN30@telnet_spe:
	DB	98					; 00000062H
	DB	0
	npad	2
$LN33@telnet_spe:
	DD	$LN24@telnet_spe
	DD	$LN23@telnet_spe
	DD	$LN9@telnet_spe
	DD	$LN22@telnet_spe
	DD	$LN21@telnet_spe
	DD	$LN20@telnet_spe
	DD	$LN19@telnet_spe
	DD	$LN18@telnet_spe
	DD	$LN17@telnet_spe
	DD	$LN16@telnet_spe
	DD	$LN15@telnet_spe
	DD	$LN14@telnet_spe
	DD	$LN13@telnet_spe
	DD	$LN5@telnet_spe
	DD	$LN8@telnet_spe
	DD	$LN3@telnet_spe
	DD	$LN12@telnet_spe
_telnet_special ENDP
; Function compile flags: /Odtp /RTCsu
_handle$ = 8						; size = 4
_telnet_get_specials PROC
; Line 1034
	push	ebp
	mov	ebp, esp
; Line 1053
	mov	eax, OFFSET ?specials@?1??telnet_get_specials@@9@9
; Line 1054
	pop	ebp
	ret	0
_telnet_get_specials ENDP
; Function compile flags: /Odtp /RTCsu
_telnet$ = -4						; size = 4
_handle$ = 8						; size = 4
_telnet_connected PROC
; Line 1057
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1058
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _telnet$[ebp], eax
; Line 1059
	mov	ecx, DWORD PTR _telnet$[ebp]
	xor	eax, eax
	cmp	DWORD PTR [ecx+4], 0
	setne	al
; Line 1060
	mov	esp, ebp
	pop	ebp
	ret	0
_telnet_connected ENDP
; Function compile flags: /Odtp /RTCsu
_handle$ = 8						; size = 4
_telnet_sendok PROC
; Line 1063
	push	ebp
	mov	ebp, esp
; Line 1065
	mov	eax, 1
; Line 1066
	pop	ebp
	ret	0
_telnet_sendok ENDP
; Function compile flags: /Odtp /RTCsu
_telnet$ = -4						; size = 4
_handle$ = 8						; size = 4
_backlog$ = 12						; size = 4
_telnet_unthrottle PROC
; Line 1069
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1070
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _telnet$[ebp], eax
; Line 1071
	xor	ecx, ecx
	cmp	DWORD PTR _backlog$[ebp], 4096		; 00001000H
	setg	cl
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1072
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_telnet_unthrottle ENDP
; Function compile flags: /Odtp /RTCsu
_telnet$ = -4						; size = 4
_handle$ = 8						; size = 4
_option$ = 12						; size = 4
_telnet_ldisc PROC
; Line 1075
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1076
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _telnet$[ebp], eax
; Line 1077
	cmp	DWORD PTR _option$[ebp], 1
	jne	SHORT $LN2@telnet_ldi
; Line 1078
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [ecx+68]
	jmp	SHORT $LN3@telnet_ldi
$LN2@telnet_ldi:
; Line 1079
	cmp	DWORD PTR _option$[ebp], 0
	jne	SHORT $LN1@telnet_ldi
; Line 1080
	mov	edx, DWORD PTR _telnet$[ebp]
	mov	eax, DWORD PTR [edx+72]
	jmp	SHORT $LN3@telnet_ldi
$LN1@telnet_ldi:
; Line 1081
	xor	eax, eax
$LN3@telnet_ldi:
; Line 1082
	mov	esp, ebp
	pop	ebp
	ret	0
_telnet_ldisc ENDP
; Function compile flags: /Odtp /RTCsu
_telnet$ = -4						; size = 4
_handle$ = 8						; size = 4
_ldisc$ = 12						; size = 4
_telnet_provide_ldisc PROC
; Line 1085
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1086
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _telnet$[ebp], eax
; Line 1087
	mov	ecx, DWORD PTR _telnet$[ebp]
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [ecx+16], edx
; Line 1088
	mov	esp, ebp
	pop	ebp
	ret	0
_telnet_provide_ldisc ENDP
; Function compile flags: /Odtp /RTCsu
_handle$ = 8						; size = 4
_logctx$ = 12						; size = 4
_telnet_provide_logctx PROC
; Line 1091
	push	ebp
	mov	ebp, esp
; Line 1093
	pop	ebp
	ret	0
_telnet_provide_logctx ENDP
; Function compile flags: /Odtp /RTCsu
_telnet$ = -4						; size = 4
_handle$ = 8						; size = 4
_telnet_exitcode PROC
; Line 1096
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1097
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _telnet$[ebp], eax
; Line 1098
	mov	ecx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN4@telnet_exi
; Line 1099
	or	eax, -1
	jmp	SHORT $LN5@telnet_exi
	jmp	SHORT $LN5@telnet_exi
$LN4@telnet_exi:
; Line 1100
	mov	edx, DWORD PTR _telnet$[ebp]
	cmp	DWORD PTR [edx+8], 0
	je	SHORT $LN2@telnet_exi
; Line 1101
	mov	eax, 2147483647				; 7fffffffH
	jmp	SHORT $LN5@telnet_exi
; Line 1102
	jmp	SHORT $LN5@telnet_exi
$LN2@telnet_exi:
; Line 1104
	xor	eax, eax
$LN5@telnet_exi:
; Line 1105
	mov	esp, ebp
	pop	ebp
	ret	0
_telnet_exitcode ENDP
; Function compile flags: /Odtp /RTCsu
_handle$ = 8						; size = 4
_telnet_cfg_info PROC
; Line 1111
	push	ebp
	mov	ebp, esp
; Line 1112
	xor	eax, eax
; Line 1113
	pop	ebp
	ret	0
_telnet_cfg_info ENDP
_TEXT	ENDS
END

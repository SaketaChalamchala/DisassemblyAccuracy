; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\Putty\ldisc.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG85836 DB	'<%02X>', 00H
	ORG $+1
$SG85855 DB	08H, ' ', 08H, 00H
$SG85904 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 'l', 00H, 'd', 00H, 'i', 00H, 's'
	DB	00H, 'c', 00H, '.', 00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG85905 DB	'l', 00H, 'd', 00H, 'i', 00H, 's', 00H, 'c', 00H, '-', 00H
	DB	'>', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm', 00H, 00H, 00H
$SG85956 DB	'^R', 0dH, 0aH, 00H
	ORG $+3
$SG85972 DB	0dH, 0aH, 00H
	ORG $+1
$SG85976 DB	0dH, 00H
	ORG $+2
$SG85980 DB	0dH, 0aH, 00H
	ORG $+1
$SG86007 DB	0dH, 00H
_DATA	ENDS
PUBLIC	_ldisc_configure
PUBLIC	_ldisc_create
EXTRN	_safemalloc:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\putty\ldisc.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_ldisc$ = -4						; size = 4
_conf$ = 8						; size = 4
_term$ = 12						; size = 4
_back$ = 16						; size = 4
_backhandle$ = 20					; size = 4
_frontend$ = 24						; size = 4
_ldisc_create PROC
; Line 83
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 84
	push	52					; 00000034H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _ldisc$[ebp], eax
; Line 86
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [eax+36], 0
; Line 87
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [ecx+40], 0
; Line 88
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [edx+44], 0
; Line 89
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [eax+48], 0
; Line 91
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR _back$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 92
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR _backhandle$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 93
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx], eax
; Line 94
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR _frontend$[ebp]
	mov	DWORD PTR [ecx+12], edx
; Line 96
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ldisc$[ebp]
	push	ecx
	call	_ldisc_configure
	add	esp, 8
; Line 99
	cmp	DWORD PTR _term$[ebp], 0
	je	SHORT $LN2@ldisc_crea
; Line 100
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [edx+4228], eax
$LN2@ldisc_crea:
; Line 101
	cmp	DWORD PTR _back$[ebp], 0
	je	SHORT $LN1@ldisc_crea
; Line 102
	mov	esi, esp
	mov	ecx, DWORD PTR _ldisc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _backhandle$[ebp]
	push	edx
	mov	eax, DWORD PTR _back$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@ldisc_crea:
; Line 104
	mov	eax, DWORD PTR _ldisc$[ebp]
; Line 105
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ldisc_create ENDP
_TEXT	ENDS
EXTRN	_conf_get_int:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ldisc$ = -4						; size = 4
_handle$ = 8						; size = 4
_conf$ = 12						; size = 4
_ldisc_configure PROC
; Line 108
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 109
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ldisc$[ebp], eax
; Line 111
	push	76					; 0000004cH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 112
	push	77					; 0000004dH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 113
	push	2
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 114
	push	81					; 00000051H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [ecx+28], eax
; Line 115
	push	82					; 00000052H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [ecx+32], eax
; Line 116
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ldisc_configure ENDP
_TEXT	ENDS
PUBLIC	_ldisc_free
EXTRN	_safefree:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ldisc$ = -4						; size = 4
_handle$ = 8						; size = 4
_ldisc_free PROC
; Line 119
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 120
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ldisc$[ebp], eax
; Line 122
	mov	ecx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN3@ldisc_free
; Line 123
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+4228], 0
$LN3@ldisc_free:
; Line 124
	mov	ecx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN2@ldisc_free
; Line 125
	mov	esi, esp
	push	0
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@ldisc_free:
; Line 126
	mov	ecx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [ecx+36], 0
	je	SHORT $LN1@ldisc_free
; Line 127
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	call	_safefree
	add	esp, 4
$LN1@ldisc_free:
; Line 128
	mov	ecx, DWORD PTR _ldisc$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 129
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ldisc_free ENDP
_TEXT	ENDS
PUBLIC	_ldisc_send
EXTRN	_saferealloc:PROC
EXTRN	_isspace:PROC
EXTRN	_strlen:PROC
EXTRN	_term_nopaste:PROC
EXTRN	_frontend_keypress:PROC
EXTRN	__wassert:PROC
EXTRN	_ldisc_update:PROC
EXTRN	_term_ldisc:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv540 = -40						; size = 4
tv172 = -36						; size = 4
tv171 = -32						; size = 4
tv161 = -28						; size = 4
tv129 = -24						; size = 4
tv80 = -20						; size = 4
_i$85955 = -16						; size = 4
_c$85914 = -12						; size = 4
_keyflag$ = -8						; size = 4
_ldisc$ = -4						; size = 4
_handle$ = 8						; size = 4
_buf$ = 12						; size = 4
_len$ = 16						; size = 4
_interactive$ = 20					; size = 4
_ldisc_send PROC
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 133
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ldisc$[ebp], eax
; Line 134
	mov	DWORD PTR _keyflag$[ebp], 0
; Line 139
	cmp	DWORD PTR _len$[ebp], 0
	jne	$LN88@ldisc_send
; Line 140
	mov	ecx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [ecx+32], 0
	je	SHORT $LN91@ldisc_send
	mov	edx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [edx+32], 2
	jne	SHORT $LN92@ldisc_send
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+44]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN91@ldisc_send
	push	0
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_term_ldisc
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN91@ldisc_send
$LN92@ldisc_send:
	mov	DWORD PTR tv80[ebp], 0
	jmp	SHORT $LN94@ldisc_send
$LN91@ldisc_send:
	mov	DWORD PTR tv80[ebp], 1
$LN94@ldisc_send:
	mov	ecx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [ecx+28], 0
	je	SHORT $LN95@ldisc_send
	mov	edx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [edx+28], 2
	jne	SHORT $LN96@ldisc_send
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+44]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN95@ldisc_send
	push	1
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_term_ldisc
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN95@ldisc_send
$LN96@ldisc_send:
	mov	DWORD PTR tv129[ebp], 0
	jmp	SHORT $LN98@ldisc_send
$LN95@ldisc_send:
	mov	DWORD PTR tv129[ebp], 1
$LN98@ldisc_send:
	mov	ecx, DWORD PTR tv80[ebp]
	push	ecx
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_ldisc_update
	add	esp, 12					; 0000000cH
; Line 141
	jmp	$LN89@ldisc_send
$LN88@ldisc_send:
; Line 152
	mov	edx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN99@ldisc_send
	push	152					; 00000098H
	push	OFFSET $SG85904
	push	OFFSET $SG85905
	call	__wassert
	add	esp, 12					; 0000000cH
$LN99@ldisc_send:
; Line 159
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_frontend_keypress
	add	esp, 4
; Line 161
	cmp	DWORD PTR _interactive$[ebp], 0
	je	SHORT $LN87@ldisc_send
; Line 170
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_term_nopaste
	add	esp, 4
$LN87@ldisc_send:
; Line 176
	cmp	DWORD PTR _len$[ebp], 0
	jge	SHORT $LN86@ldisc_send
; Line 177
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _len$[ebp], eax
; Line 178
	mov	DWORD PTR _keyflag$[ebp], 256		; 00000100H
$LN86@ldisc_send:
; Line 183
	mov	eax, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN82@ldisc_send
	mov	ecx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [ecx+32], 2
	jne	$LN85@ldisc_send
	mov	esi, esp
	push	0
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN82@ldisc_send
	push	0
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_term_ldisc
	add	esp, 8
	test	eax, eax
	je	$LN85@ldisc_send
$LN82@ldisc_send:
; Line 184
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR tv161[ebp], eax
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _len$[ebp], ecx
	cmp	DWORD PTR tv161[ebp], 0
	je	$LN81@ldisc_send
; Line 186
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	add	eax, DWORD PTR _keyflag$[ebp]
	mov	DWORD PTR _c$85914[ebp], eax
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
; Line 187
	cmp	DWORD PTR _interactive$[ebp], 0
	jne	SHORT $LN80@ldisc_send
	cmp	DWORD PTR _c$85914[ebp], 13		; 0000000dH
	jne	SHORT $LN80@ldisc_send
; Line 188
	mov	edx, DWORD PTR _c$85914[ebp]
	add	edx, 256				; 00000100H
	mov	DWORD PTR _c$85914[ebp], edx
$LN80@ldisc_send:
; Line 189
	mov	eax, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN100@ldisc_send
	mov	DWORD PTR tv171[ebp], 32		; 00000020H
	jmp	SHORT $LN101@ldisc_send
$LN100@ldisc_send:
	mov	ecx, DWORD PTR _c$85914[ebp]
	mov	DWORD PTR tv171[ebp], ecx
$LN101@ldisc_send:
	mov	edx, DWORD PTR tv171[ebp]
	mov	DWORD PTR tv172[ebp], edx
	cmp	DWORD PTR tv172[ebp], 21		; 00000015H
	jg	SHORT $LN102@ldisc_send
	cmp	DWORD PTR tv172[ebp], 21		; 00000015H
	je	$LN61@ldisc_send
	mov	eax, DWORD PTR tv172[ebp]
	sub	eax, 3
	mov	DWORD PTR tv172[ebp], eax
	cmp	DWORD PTR tv172[ebp], 15		; 0000000fH
	ja	$default_case$85947
	mov	ecx, DWORD PTR tv172[ebp]
	movzx	edx, BYTE PTR $LN104@ldisc_send[ecx]
	jmp	DWORD PTR $LN106@ldisc_send[edx*4]
$LN102@ldisc_send:
	cmp	DWORD PTR tv172[ebp], 264		; 00000108H
	jg	SHORT $LN103@ldisc_send
	cmp	DWORD PTR tv172[ebp], 264		; 00000108H
	je	SHORT $LN77@ldisc_send
	mov	eax, DWORD PTR tv172[ebp]
	sub	eax, 22					; 00000016H
	mov	DWORD PTR tv172[ebp], eax
	cmp	DWORD PTR tv172[ebp], 6
	ja	$default_case$85947
	mov	ecx, DWORD PTR tv172[ebp]
	jmp	DWORD PTR $LN107@ldisc_send[ecx*4]
$LN103@ldisc_send:
	cmp	DWORD PTR tv172[ebp], 269		; 0000010dH
	je	$LN36@ldisc_send
	cmp	DWORD PTR tv172[ebp], 383		; 0000017fH
	je	SHORT $LN77@ldisc_send
	jmp	$default_case$85947
$LN77@ldisc_send:
; Line 208
	mov	edx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [edx+40], 0
	jle	$LN76@ldisc_send
$LN75@ldisc_send:
; Line 210
	mov	eax, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN71@ldisc_send
	mov	ecx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [ecx+28], 2
	jne	SHORT $LN72@ldisc_send
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN71@ldisc_send
	push	1
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_term_ldisc
	add	esp, 8
	test	eax, eax
	je	SHORT $LN72@ldisc_send
$LN71@ldisc_send:
; Line 211
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+36]
	movzx	ecx, BYTE PTR [eax+ecx-1]
	push	ecx
	mov	edx, DWORD PTR _ldisc$[ebp]
	push	edx
	call	_plen
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _ldisc$[ebp]
	push	eax
	call	_bsb
	add	esp, 8
$LN72@ldisc_send:
; Line 212
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	sub	edx, 1
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [eax+40], edx
; Line 213
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	movzx	edx, BYTE PTR [edx+ecx]
	push	edx
	mov	eax, DWORD PTR _ldisc$[ebp]
	push	eax
	call	_char_start
	add	esp, 8
	test	eax, eax
	je	$LN75@ldisc_send
$LN76@ldisc_send:
; Line 215
	jmp	$LN78@ldisc_send
$LN68@ldisc_send:
; Line 217
	mov	ecx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [ecx+40], 0
	jle	$LN67@ldisc_send
; Line 218
	mov	edx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [edx+28], 0
	je	SHORT $LN65@ldisc_send
	mov	eax, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [eax+28], 2
	jne	SHORT $LN66@ldisc_send
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+44]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN65@ldisc_send
	push	1
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_term_ldisc
	add	esp, 8
	test	eax, eax
	je	SHORT $LN66@ldisc_send
$LN65@ldisc_send:
; Line 219
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	movzx	eax, BYTE PTR [edx+eax-1]
	push	eax
	mov	ecx, DWORD PTR _ldisc$[ebp]
	push	ecx
	call	_plen
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _ldisc$[ebp]
	push	edx
	call	_bsb
	add	esp, 8
$LN66@ldisc_send:
; Line 220
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	sub	ecx, 1
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [edx+40], ecx
; Line 223
	mov	eax, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [eax+40], 0
	jle	SHORT $LN63@ldisc_send
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	movzx	edx, BYTE PTR [ecx+edx-1]
	push	edx
	call	_isspace
	add	esp, 4
	test	eax, eax
	je	SHORT $LN63@ldisc_send
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+40]
	movzx	ecx, BYTE PTR [ecx+eax]
	push	ecx
	call	_isspace
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN63@ldisc_send
; Line 224
	jmp	SHORT $LN67@ldisc_send
$LN63@ldisc_send:
; Line 225
	jmp	$LN68@ldisc_send
$LN67@ldisc_send:
; Line 226
	jmp	$LN78@ldisc_send
$LN61@ldisc_send:
; Line 231
	mov	edx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [edx+40], 0
	jle	$LN60@ldisc_send
; Line 232
	mov	eax, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN58@ldisc_send
	mov	ecx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [ecx+28], 2
	jne	SHORT $LN59@ldisc_send
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN58@ldisc_send
	push	1
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_term_ldisc
	add	esp, 8
	test	eax, eax
	je	SHORT $LN59@ldisc_send
$LN58@ldisc_send:
; Line 233
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+36]
	movzx	ecx, BYTE PTR [eax+ecx-1]
	push	ecx
	mov	edx, DWORD PTR _ldisc$[ebp]
	push	edx
	call	_plen
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _ldisc$[ebp]
	push	eax
	call	_bsb
	add	esp, 8
$LN59@ldisc_send:
; Line 234
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	sub	edx, 1
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [eax+40], edx
; Line 235
	jmp	$LN61@ldisc_send
$LN60@ldisc_send:
; Line 236
	mov	esi, esp
	push	4
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+24]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 242
	mov	eax, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN56@ldisc_send
; Line 243
	jmp	$default_case$85947
$LN56@ldisc_send:
; Line 244
	cmp	DWORD PTR _c$85914[ebp], 3
	jne	SHORT $LN55@ldisc_send
; Line 245
	mov	esi, esp
	push	9
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+24]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN55@ldisc_send:
; Line 246
	cmp	DWORD PTR _c$85914[ebp], 26		; 0000001aH
	jne	SHORT $LN54@ldisc_send
; Line 247
	mov	esi, esp
	push	10					; 0000000aH
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN54@ldisc_send:
; Line 248
	cmp	DWORD PTR _c$85914[ebp], 28		; 0000001cH
	jne	SHORT $LN53@ldisc_send
; Line 249
	mov	esi, esp
	push	7
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN53@ldisc_send:
; Line 250
	jmp	$LN78@ldisc_send
$LN52@ldisc_send:
; Line 252
	mov	ecx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [ecx+28], 0
	je	SHORT $LN50@ldisc_send
	mov	edx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [edx+28], 2
	jne	$LN51@ldisc_send
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+44]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN50@ldisc_send
	push	1
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_term_ldisc
	add	esp, 8
	test	eax, eax
	je	SHORT $LN51@ldisc_send
$LN50@ldisc_send:
; Line 254
	push	4
	push	OFFSET $SG85956
	mov	ecx, DWORD PTR _ldisc$[ebp]
	push	ecx
	call	_c_write
	add	esp, 12					; 0000000cH
; Line 255
	mov	DWORD PTR _i$85955[ebp], 0
	jmp	SHORT $LN48@ldisc_send
$LN47@ldisc_send:
	mov	edx, DWORD PTR _i$85955[ebp]
	add	edx, 1
	mov	DWORD PTR _i$85955[ebp], edx
$LN48@ldisc_send:
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR _i$85955[ebp]
	cmp	ecx, DWORD PTR [eax+40]
	jge	SHORT $LN51@ldisc_send
; Line 256
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	ecx, DWORD PTR _i$85955[ebp]
	movzx	edx, BYTE PTR [eax+ecx]
	push	edx
	mov	eax, DWORD PTR _ldisc$[ebp]
	push	eax
	call	_pwrite
	add	esp, 8
	jmp	SHORT $LN47@ldisc_send
$LN51@ldisc_send:
; Line 258
	jmp	$LN78@ldisc_send
$LN45@ldisc_send:
; Line 260
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [ecx+48], 1
; Line 261
	jmp	$LN78@ldisc_send
$LN44@ldisc_send:
; Line 263
	mov	edx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [edx+40], 0
	jne	SHORT $LN43@ldisc_send
; Line 264
	mov	esi, esp
	push	12					; 0000000cH
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 265
	jmp	SHORT $LN42@ldisc_send
$LN43@ldisc_send:
; Line 266
	mov	esi, esp
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+40]
	push	eax
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	push	edx
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 267
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [edx+40], 0
$LN42@ldisc_send:
; Line 269
	jmp	$LN78@ldisc_send
$LN41@ldisc_send:
; Line 295
	mov	eax, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [eax+24], 0
	jne	$default_case$85947
	mov	ecx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [ecx+40], 0
	jle	$default_case$85947
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	movsx	eax, BYTE PTR [edx+eax-1]
	cmp	eax, 13					; 0000000dH
	jne	$default_case$85947
; Line 296
	mov	ecx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [ecx+28], 0
	je	SHORT $LN38@ldisc_send
	mov	edx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [edx+28], 2
	jne	SHORT $LN39@ldisc_send
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+44]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN38@ldisc_send
	push	1
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_term_ldisc
	add	esp, 8
	test	eax, eax
	je	SHORT $LN39@ldisc_send
$LN38@ldisc_send:
; Line 297
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	movzx	edx, BYTE PTR [ecx+edx-1]
	push	edx
	mov	eax, DWORD PTR _ldisc$[ebp]
	push	eax
	call	_plen
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _ldisc$[ebp]
	push	ecx
	call	_bsb
	add	esp, 8
$LN39@ldisc_send:
; Line 298
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+40]
	sub	eax, 1
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [ecx+40], eax
$LN36@ldisc_send:
; Line 301
	mov	edx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [edx+40], 0
	jle	SHORT $LN35@ldisc_send
; Line 302
	mov	esi, esp
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN35@ldisc_send:
; Line 303
	mov	eax, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [eax+24], 0
	jne	SHORT $LN34@ldisc_send
; Line 304
	mov	esi, esp
	push	2
	push	OFFSET $SG85972
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN33@ldisc_send
$LN34@ldisc_send:
; Line 305
	mov	eax, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [eax+24], 1
	jne	SHORT $LN32@ldisc_send
	mov	ecx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [ecx+20], 0
	je	SHORT $LN32@ldisc_send
; Line 306
	mov	esi, esp
	push	16					; 00000010H
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 307
	jmp	SHORT $LN33@ldisc_send
$LN32@ldisc_send:
; Line 308
	mov	esi, esp
	push	1
	push	OFFSET $SG85976
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN33@ldisc_send:
; Line 309
	mov	eax, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN29@ldisc_send
	mov	ecx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [ecx+28], 2
	jne	SHORT $LN30@ldisc_send
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN29@ldisc_send
	push	1
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_term_ldisc
	add	esp, 8
	test	eax, eax
	je	SHORT $LN30@ldisc_send
$LN29@ldisc_send:
; Line 310
	push	2
	push	OFFSET $SG85980
	mov	eax, DWORD PTR _ldisc$[ebp]
	push	eax
	call	_c_write
	add	esp, 12					; 0000000cH
$LN30@ldisc_send:
; Line 311
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [ecx+40], 0
; Line 312
	jmp	$LN78@ldisc_send
$default_case$85947:
; Line 317
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	cmp	ecx, DWORD PTR [eax+44]
	jl	SHORT $LN26@ldisc_send
; Line 318
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+40]
	add	eax, 256				; 00000100H
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [ecx+44], eax
; Line 319
	push	1
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	push	edx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [ecx+36], eax
$LN26@ldisc_send:
; Line 321
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	cl, BYTE PTR _c$85914[ebp]
	mov	BYTE PTR [eax+edx], cl
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+40]
	add	eax, 1
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [ecx+40], eax
; Line 322
	mov	edx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [edx+28], 0
	je	SHORT $LN24@ldisc_send
	mov	eax, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [eax+28], 2
	jne	SHORT $LN25@ldisc_send
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+44]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN24@ldisc_send
	push	1
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_term_ldisc
	add	esp, 8
	test	eax, eax
	je	SHORT $LN25@ldisc_send
$LN24@ldisc_send:
; Line 323
	movzx	edx, BYTE PTR _c$85914[ebp]
	push	edx
	mov	eax, DWORD PTR _ldisc$[ebp]
	push	eax
	call	_pwrite
	add	esp, 8
$LN25@ldisc_send:
; Line 324
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [ecx+48], 0
$LN78@ldisc_send:
; Line 327
	jmp	$LN82@ldisc_send
$LN81@ldisc_send:
; Line 328
	jmp	$LN89@ldisc_send
$LN85@ldisc_send:
; Line 329
	mov	edx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [edx+40], 0
	je	SHORT $LN21@ldisc_send
; Line 330
	mov	esi, esp
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN20@ldisc_send:
; Line 331
	mov	eax, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [eax+40], 0
	jle	SHORT $LN21@ldisc_send
; Line 332
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	movzx	edx, BYTE PTR [ecx+edx-1]
	push	edx
	mov	eax, DWORD PTR _ldisc$[ebp]
	push	eax
	call	_plen
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _ldisc$[ebp]
	push	ecx
	call	_bsb
	add	esp, 8
; Line 333
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+40]
	sub	eax, 1
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [ecx+40], eax
; Line 334
	jmp	SHORT $LN20@ldisc_send
$LN21@ldisc_send:
; Line 336
	cmp	DWORD PTR _len$[ebp], 0
	jle	$LN89@ldisc_send
; Line 337
	mov	edx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [edx+28], 0
	je	SHORT $LN16@ldisc_send
	mov	eax, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [eax+28], 2
	jne	SHORT $LN17@ldisc_send
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+44]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN16@ldisc_send
	push	1
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_term_ldisc
	add	esp, 8
	test	eax, eax
	je	SHORT $LN17@ldisc_send
$LN16@ldisc_send:
; Line 338
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ldisc$[ebp]
	push	ecx
	call	_c_write
	add	esp, 12					; 0000000cH
$LN17@ldisc_send:
; Line 339
	cmp	DWORD PTR _keyflag$[ebp], 0
	je	$LN14@ldisc_send
	mov	edx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [edx+24], 1
	jne	$LN14@ldisc_send
	cmp	DWORD PTR _len$[ebp], 1
	jne	$LN14@ldisc_send
; Line 340
	mov	eax, DWORD PTR _buf$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	DWORD PTR tv540[ebp], ecx
	mov	edx, DWORD PTR tv540[ebp]
	sub	edx, 3
	mov	DWORD PTR tv540[ebp], edx
	cmp	DWORD PTR tv540[ebp], 124		; 0000007cH
	ja	$LN2@ldisc_send
	mov	eax, DWORD PTR tv540[ebp]
	movzx	ecx, BYTE PTR $LN105@ldisc_send[eax]
	jmp	DWORD PTR $LN108@ldisc_send[ecx*4]
$LN11@ldisc_send:
; Line 342
	mov	edx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [edx+24], 1
	jne	SHORT $LN10@ldisc_send
	mov	eax, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN10@ldisc_send
; Line 343
	mov	esi, esp
	push	16					; 00000010H
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+24]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 344
	jmp	SHORT $LN9@ldisc_send
$LN10@ldisc_send:
; Line 345
	mov	esi, esp
	push	1
	push	OFFSET $SG86007
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@ldisc_send:
; Line 346
	jmp	$LN12@ldisc_send
$LN8@ldisc_send:
; Line 349
	mov	edx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN6@ldisc_send
; Line 350
	mov	esi, esp
	push	3
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 351
	jmp	SHORT $LN12@ldisc_send
$LN6@ldisc_send:
; Line 354
	mov	edx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN4@ldisc_send
; Line 355
	mov	esi, esp
	push	9
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 356
	jmp	SHORT $LN12@ldisc_send
$LN4@ldisc_send:
; Line 359
	mov	edx, DWORD PTR _ldisc$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN2@ldisc_send
; Line 360
	mov	esi, esp
	push	10					; 0000000aH
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 361
	jmp	SHORT $LN12@ldisc_send
$LN2@ldisc_send:
; Line 365
	mov	esi, esp
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@ldisc_send:
; Line 368
	jmp	SHORT $LN89@ldisc_send
$LN14@ldisc_send:
; Line 369
	mov	esi, esp
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN89@ldisc_send:
; Line 372
	pop	edi
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN106@ldisc_send:
	DD	$LN61@ldisc_send
	DD	$LN44@ldisc_send
	DD	$LN41@ldisc_send
	DD	$LN52@ldisc_send
	DD	$default_case$85947
$LN104@ldisc_send:
	DB	0
	DB	1
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	2
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	3
$LN107@ldisc_send:
	DD	$LN45@ldisc_send
	DD	$LN68@ldisc_send
	DD	$default_case$85947
	DD	$default_case$85947
	DD	$LN61@ldisc_send
	DD	$default_case$85947
	DD	$LN61@ldisc_send
$LN108@ldisc_send:
	DD	$LN6@ldisc_send
	DD	$LN8@ldisc_send
	DD	$LN11@ldisc_send
	DD	$LN4@ldisc_send
	DD	$LN2@ldisc_send
$LN105@ldisc_send:
	DB	0
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
	DB	4
	DB	4
	DB	4
	DB	4
	DB	2
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	3
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
_ldisc_send ENDP
_TEXT	ENDS
EXTRN	_from_backend:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ldisc$ = 8						; size = 4
_buf$ = 12						; size = 4
_len$ = 16						; size = 4
_c_write PROC
; Line 26
	push	ebp
	mov	ebp, esp
; Line 27
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	_from_backend
	add	esp, 16					; 00000010H
; Line 28
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_c_write ENDP
; Function compile flags: /Odtp /RTCsu
_ldisc$ = 8						; size = 4
_c$ = 12						; size = 1
_plen	PROC
; Line 31
	push	ebp
	mov	ebp, esp
; Line 32
	movzx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 32					; 00000020H
	jl	SHORT $LN10@plen
	movzx	ecx, BYTE PTR _c$[ebp]
	cmp	ecx, 126				; 0000007eH
	jle	SHORT $LN11@plen
$LN10@plen:
	movzx	edx, BYTE PTR _c$[ebp]
	cmp	edx, 160				; 000000a0H
	jl	SHORT $LN12@plen
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+220], 0
	jne	SHORT $LN12@plen
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4240]
	cmp	DWORD PTR [ecx+12], 65001		; 0000fde9H
	je	SHORT $LN12@plen
$LN11@plen:
; Line 33
	mov	eax, 1
	jmp	$LN13@plen
	jmp	$LN13@plen
$LN12@plen:
; Line 34
	movzx	edx, BYTE PTR _c$[ebp]
	cmp	edx, 128				; 00000080H
	jge	SHORT $LN8@plen
; Line 35
	mov	eax, 2
	jmp	SHORT $LN13@plen
	jmp	SHORT $LN13@plen
$LN8@plen:
; Line 36
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+220], 0
	jne	SHORT $LN5@plen
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4240]
	cmp	DWORD PTR [ecx+12], 65001		; 0000fde9H
	jne	SHORT $LN6@plen
$LN5@plen:
	movzx	edx, BYTE PTR _c$[ebp]
	cmp	edx, 192				; 000000c0H
	jl	SHORT $LN6@plen
; Line 37
	mov	eax, 1
	jmp	SHORT $LN13@plen
	jmp	SHORT $LN13@plen
$LN6@plen:
; Line 39
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+220], 0
	jne	SHORT $LN2@plen
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4240]
	cmp	DWORD PTR [ecx+12], 65001		; 0000fde9H
	jne	SHORT $LN3@plen
$LN2@plen:
	movzx	edx, BYTE PTR _c$[ebp]
	cmp	edx, 128				; 00000080H
	jl	SHORT $LN3@plen
	movzx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 192				; 000000c0H
	jge	SHORT $LN3@plen
; Line 40
	xor	eax, eax
	jmp	SHORT $LN13@plen
; Line 41
	jmp	SHORT $LN13@plen
$LN3@plen:
; Line 42
	mov	eax, 4
$LN13@plen:
; Line 43
	pop	ebp
	ret	0
_plen	ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_sprintf:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv92 = -36						; size = 4
_cc$85835 = -28						; size = 5
_cc$85833 = -12						; size = 2
__$ArrayPad$ = -4					; size = 4
_ldisc$ = 8						; size = 4
_c$ = 12						; size = 1
_pwrite	PROC
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 49
	movzx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 32					; 00000020H
	jl	SHORT $LN6@pwrite
	movzx	ecx, BYTE PTR _c$[ebp]
	cmp	ecx, 126				; 0000007eH
	jle	SHORT $LN7@pwrite
$LN6@pwrite:
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	DWORD PTR [eax+220], 0
	jne	SHORT $LN5@pwrite
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4240]
	cmp	DWORD PTR [eax+12], 65001		; 0000fde9H
	je	SHORT $LN5@pwrite
	movzx	ecx, BYTE PTR _c$[ebp]
	cmp	ecx, 160				; 000000a0H
	jge	SHORT $LN7@pwrite
$LN5@pwrite:
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	DWORD PTR [eax+220], 0
	jne	SHORT $LN4@pwrite
	mov	ecx, DWORD PTR _ldisc$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4240]
	cmp	DWORD PTR [eax+12], 65001		; 0000fde9H
	jne	SHORT $LN8@pwrite
$LN4@pwrite:
	movzx	ecx, BYTE PTR _c$[ebp]
	cmp	ecx, 128				; 00000080H
	jl	SHORT $LN8@pwrite
$LN7@pwrite:
; Line 50
	push	1
	lea	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _ldisc$[ebp]
	push	eax
	call	_c_write
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN9@pwrite
$LN8@pwrite:
; Line 51
	movzx	ecx, BYTE PTR _c$[ebp]
	cmp	ecx, 128				; 00000080H
	jge	SHORT $LN2@pwrite
; Line 53
	movzx	edx, BYTE PTR _c$[ebp]
	cmp	edx, 127				; 0000007fH
	jne	SHORT $LN11@pwrite
	mov	DWORD PTR tv92[ebp], 63			; 0000003fH
	jmp	SHORT $LN12@pwrite
$LN11@pwrite:
	movzx	eax, BYTE PTR _c$[ebp]
	add	eax, 64					; 00000040H
	mov	DWORD PTR tv92[ebp], eax
$LN12@pwrite:
	mov	cl, BYTE PTR tv92[ebp]
	mov	BYTE PTR _cc$85833[ebp+1], cl
; Line 54
	mov	BYTE PTR _cc$85833[ebp], 94		; 0000005eH
; Line 55
	push	2
	lea	edx, DWORD PTR _cc$85833[ebp]
	push	edx
	mov	eax, DWORD PTR _ldisc$[ebp]
	push	eax
	call	_c_write
	add	esp, 12					; 0000000cH
; Line 56
	jmp	SHORT $LN9@pwrite
$LN2@pwrite:
; Line 58
	movzx	ecx, BYTE PTR _c$[ebp]
	push	ecx
	push	OFFSET $SG85836
	lea	edx, DWORD PTR _cc$85835[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 59
	push	4
	lea	eax, DWORD PTR _cc$85835[ebp]
	push	eax
	mov	ecx, DWORD PTR _ldisc$[ebp]
	push	ecx
	call	_c_write
	add	esp, 12					; 0000000cH
$LN9@pwrite:
; Line 61
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@pwrite
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN16@pwrite:
	DD	2
	DD	$LN15@pwrite
$LN15@pwrite:
	DD	-12					; fffffff4H
	DD	2
	DD	$LN13@pwrite
	DD	-28					; ffffffe4H
	DD	5
	DD	$LN14@pwrite
$LN14@pwrite:
	DB	99					; 00000063H
	DB	99					; 00000063H
	DB	0
$LN13@pwrite:
	DB	99					; 00000063H
	DB	99					; 00000063H
	DB	0
_pwrite	ENDP
; Function compile flags: /Odtp /RTCsu
tv73 = -4						; size = 4
_ldisc$ = 8						; size = 4
_c$ = 12						; size = 1
_char_start PROC
; Line 64
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 65
	mov	eax, DWORD PTR _ldisc$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+220], 0
	jne	SHORT $LN2@char_start
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4240]
	cmp	DWORD PTR [ecx+12], 65001		; 0000fde9H
	jne	SHORT $LN3@char_start
$LN2@char_start:
; Line 66
	movzx	edx, BYTE PTR _c$[ebp]
	cmp	edx, 128				; 00000080H
	jl	SHORT $LN6@char_start
	movzx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 192				; 000000c0H
	jge	SHORT $LN6@char_start
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN7@char_start
$LN6@char_start:
	mov	DWORD PTR tv73[ebp], 1
$LN7@char_start:
	mov	eax, DWORD PTR tv73[ebp]
	jmp	SHORT $LN4@char_start
; Line 67
	jmp	SHORT $LN4@char_start
$LN3@char_start:
; Line 68
	mov	eax, 1
$LN4@char_start:
; Line 69
	mov	esp, ebp
	pop	ebp
	ret	0
_char_start ENDP
; Function compile flags: /Odtp /RTCsu
tv65 = -4						; size = 4
_ldisc$ = 8						; size = 4
_n$ = 12						; size = 4
_bsb	PROC
; Line 72
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
$LN2@bsb:
; Line 73
	mov	eax, DWORD PTR _n$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR _n$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _n$[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 0
	je	SHORT $LN3@bsb
; Line 74
	push	3
	push	OFFSET $SG85855
	mov	edx, DWORD PTR _ldisc$[ebp]
	push	edx
	call	_c_write
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN2@bsb
$LN3@bsb:
; Line 75
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_bsb	ENDP
_TEXT	ENDS
END

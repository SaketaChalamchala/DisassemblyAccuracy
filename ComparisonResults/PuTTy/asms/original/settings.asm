; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\Putty\settings.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_ttymodes
_BSS	SEGMENT
$SG85896 DB	01H DUP (?)
	ALIGN	4

$SG86031 DB	01H DUP (?)
	ALIGN	4

$SG86194 DB	01H DUP (?)
	ALIGN	4

$SG86261 DB	01H DUP (?)
	ALIGN	4

$SG86262 DB	01H DUP (?)
	ALIGN	4

$SG86263 DB	01H DUP (?)
	ALIGN	4

$SG86264 DB	01H DUP (?)
	ALIGN	4

$SG86296 DB	01H DUP (?)
	ALIGN	4

$SG86318 DB	01H DUP (?)
	ALIGN	4

$SG86320 DB	01H DUP (?)
	ALIGN	4

$SG86325 DB	01H DUP (?)
	ALIGN	4

$SG86328 DB	01H DUP (?)
	ALIGN	4

$SG86336 DB	02H DUP (?)
	ALIGN	4

$SG86349 DB	01H DUP (?)
	ALIGN	4

$SG86357 DB	02H DUP (?)
	ALIGN	4

$SG86362 DB	01H DUP (?)
	ALIGN	4

$SG86416 DB	01H DUP (?)
	ALIGN	4

$SG86494 DB	01H DUP (?)
	ALIGN	4

$SG86498 DB	01H DUP (?)
	ALIGN	4

$SG86510 DB	01H DUP (?)
	ALIGN	4

$SG86541 DB	01H DUP (?)
	ALIGN	4

$SG86548 DB	01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
_ciphernames DD	FLAT:$SG85659
	DD	03H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:$SG85660
	DD	02H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:$SG85661
	DD	01H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:$SG85662
	DD	00H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:$SG85663
	DD	05H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:$SG85664
	DD	04H
	DD	0ffffffffH
	DD	0ffffffffH
_kexnames DD	FLAT:$SG85666
	DD	03H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:$SG85667
	DD	02H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:$SG85668
	DD	01H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:$SG85669
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	FLAT:$SG85670
	DD	00H
	DD	0ffffffffH
	DD	0ffffffffH
_ttymodes DD	FLAT:$SG85671
	DD	FLAT:$SG85672
	DD	FLAT:$SG85673
	DD	FLAT:$SG85674
	DD	FLAT:$SG85675
	DD	FLAT:$SG85676
	DD	FLAT:$SG85677
	DD	FLAT:$SG85678
	DD	FLAT:$SG85679
	DD	FLAT:$SG85680
	DD	FLAT:$SG85681
	DD	FLAT:$SG85682
	DD	FLAT:$SG85683
	DD	FLAT:$SG85684
	DD	FLAT:$SG85685
	DD	FLAT:$SG85686
	DD	FLAT:$SG85687
	DD	FLAT:$SG85688
	DD	FLAT:$SG85689
	DD	FLAT:$SG85690
	DD	FLAT:$SG85691
	DD	FLAT:$SG85692
	DD	FLAT:$SG85693
	DD	FLAT:$SG85694
	DD	FLAT:$SG85695
	DD	FLAT:$SG85696
	DD	FLAT:$SG85697
	DD	FLAT:$SG85698
	DD	FLAT:$SG85699
	DD	FLAT:$SG85700
	DD	FLAT:$SG85701
	DD	FLAT:$SG85702
	DD	FLAT:$SG85703
	DD	FLAT:$SG85704
	DD	FLAT:$SG85705
	DD	FLAT:$SG85706
	DD	FLAT:$SG85707
	DD	FLAT:$SG85708
	DD	FLAT:$SG85709
	DD	FLAT:$SG85710
	DD	FLAT:$SG85711
	DD	FLAT:$SG85712
	DD	FLAT:$SG85713
	DD	FLAT:$SG85714
	DD	FLAT:$SG85715
	DD	FLAT:$SG85716
	DD	FLAT:$SG85717
	DD	FLAT:$SG85718
	DD	FLAT:$SG85719
	DD	FLAT:$SG85720
	DD	FLAT:$SG85721
	DD	FLAT:$SG85722
	DD	FLAT:$SG85723
	DD	00H
?defaults@?L@??load_open_settings@@9@9 DD FLAT:$SG86433	; `load_open_settings'::`11'::defaults
	DD	FLAT:$SG86434
	DD	FLAT:$SG86435
	DD	FLAT:$SG86436
	DD	FLAT:$SG86437
	DD	FLAT:$SG86438
	DD	FLAT:$SG86439
	DD	FLAT:$SG86440
	DD	FLAT:$SG86441
	DD	FLAT:$SG86442
	DD	FLAT:$SG86443
	DD	FLAT:$SG86444
	DD	FLAT:$SG86445
	DD	FLAT:$SG86446
	DD	FLAT:$SG86447
	DD	FLAT:$SG86448
	DD	FLAT:$SG86449
	DD	FLAT:$SG86450
	DD	FLAT:$SG86451
	DD	FLAT:$SG86452
	DD	FLAT:$SG86453
	DD	FLAT:$SG86454
?defaults@?N@??load_open_settings@@9@9 DD FLAT:$SG86473	; `load_open_settings'::`13'::defaults
	DD	FLAT:$SG86474
	DD	FLAT:$SG86475
	DD	FLAT:$SG86476
	DD	FLAT:$SG86477
	DD	FLAT:$SG86478
	DD	FLAT:$SG86479
	DD	FLAT:$SG86480
CONST	ENDS
_DATA	SEGMENT
$SG85659 DB	'aes', 00H
$SG85660 DB	'blowfish', 00H
	ORG $+3
$SG85661 DB	'3des', 00H
	ORG $+3
$SG85662 DB	'WARN', 00H
	ORG $+3
$SG85663 DB	'arcfour', 00H
$SG85664 DB	'des', 00H
$SG85666 DB	'dh-gex-sha1', 00H
$SG85667 DB	'dh-group14-sha1', 00H
$SG85668 DB	'dh-group1-sha1', 00H
	ORG $+1
$SG85669 DB	'rsa', 00H
$SG85670 DB	'WARN', 00H
	ORG $+3
$SG85671 DB	'INTR', 00H
	ORG $+3
$SG85672 DB	'QUIT', 00H
	ORG $+3
$SG85673 DB	'ERASE', 00H
	ORG $+2
$SG85674 DB	'KILL', 00H
	ORG $+3
$SG85675 DB	'EOF', 00H
$SG85676 DB	'EOL', 00H
$SG85677 DB	'EOL2', 00H
	ORG $+3
$SG85678 DB	'START', 00H
	ORG $+2
$SG85679 DB	'STOP', 00H
	ORG $+3
$SG85680 DB	'SUSP', 00H
	ORG $+3
$SG85681 DB	'DSUSP', 00H
	ORG $+2
$SG85682 DB	'REPRINT', 00H
$SG85683 DB	'WERASE', 00H
	ORG $+1
$SG85684 DB	'LNEXT', 00H
	ORG $+2
$SG85685 DB	'FLUSH', 00H
	ORG $+2
$SG85686 DB	'SWTCH', 00H
	ORG $+2
$SG85687 DB	'STATUS', 00H
	ORG $+1
$SG85688 DB	'DISCARD', 00H
$SG85689 DB	'IGNPAR', 00H
	ORG $+1
$SG85690 DB	'PARMRK', 00H
	ORG $+1
$SG85691 DB	'INPCK', 00H
	ORG $+2
$SG85692 DB	'ISTRIP', 00H
	ORG $+1
$SG85693 DB	'INLCR', 00H
	ORG $+2
$SG85694 DB	'IGNCR', 00H
	ORG $+2
$SG85695 DB	'ICRNL', 00H
	ORG $+2
$SG85696 DB	'IUCLC', 00H
	ORG $+2
$SG85697 DB	'IXON', 00H
	ORG $+3
$SG85698 DB	'IXANY', 00H
	ORG $+2
$SG85699 DB	'IXOFF', 00H
	ORG $+2
$SG85700 DB	'IMAXBEL', 00H
$SG85701 DB	'ISIG', 00H
	ORG $+3
$SG85702 DB	'ICANON', 00H
	ORG $+1
$SG85703 DB	'XCASE', 00H
	ORG $+2
$SG85704 DB	'ECHO', 00H
	ORG $+3
$SG85705 DB	'ECHOE', 00H
	ORG $+2
$SG85706 DB	'ECHOK', 00H
	ORG $+2
$SG85707 DB	'ECHONL', 00H
	ORG $+1
$SG85708 DB	'NOFLSH', 00H
	ORG $+1
$SG85709 DB	'TOSTOP', 00H
	ORG $+1
$SG85710 DB	'IEXTEN', 00H
	ORG $+1
$SG85711 DB	'ECHOCTL', 00H
$SG85712 DB	'ECHOKE', 00H
	ORG $+1
$SG85713 DB	'PENDIN', 00H
	ORG $+1
$SG85714 DB	'OPOST', 00H
	ORG $+2
$SG85715 DB	'OLCUC', 00H
	ORG $+2
$SG85716 DB	'ONLCR', 00H
	ORG $+2
$SG85717 DB	'OCRNL', 00H
	ORG $+2
$SG85718 DB	'ONOCR', 00H
	ORG $+2
$SG85719 DB	'ONLRET', 00H
	ORG $+1
$SG85720 DB	'CS7', 00H
$SG85721 DB	'CS8', 00H
$SG85722 DB	'PARENB', 00H
	ORG $+1
$SG85723 DB	'PARODD', 00H
	ORG $+1
$SG85860 DB	'D', 00H
	ORG $+2
$SG85894 DB	'D', 00H
	ORG $+2
$SG85984 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 'e', 00H, 't', 00H, 't'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG85985 DB	'm', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, '[', 00H, 'i', 00H, ']', 00H, '.', 00H, 'v', 00H, ' '
	DB	00H, '<', 00H, ' ', 00H, '3', 00H, '2', 00H, 00H, 00H
$SG85995 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 'e', 00H, 't', 00H, 't'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG85996 DB	'j', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'n', 00H, 00H, 00H
$SG86030 DB	',', 00H
	ORG $+2
$SG86032 DB	'%s%s', 00H
	ORG $+3
$SG86034 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 'e', 00H, 't', 00H, 't'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG86035 DB	'p', 00H, ' ', 00H, '-', 00H, ' ', 00H, 'b', 00H, 'u', 00H
	DB	'f', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'm', 00H, 'a'
	DB	00H, 'x', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 00H, 00H
$SG86052 DB	'Present', 00H
$SG86053 DB	'HostName', 00H
	ORG $+3
$SG86054 DB	'LogFileName', 00H
$SG86055 DB	'LogType', 00H
$SG86056 DB	'LogFileClash', 00H
	ORG $+3
$SG86057 DB	'LogFlush', 00H
	ORG $+3
$SG86058 DB	'SSHLogOmitPasswords', 00H
$SG86059 DB	'SSHLogOmitData', 00H
	ORG $+1
$SG86060 DB	'raw', 00H
$SG86063 DB	'Protocol', 00H
	ORG $+3
$SG86064 DB	'PortNumber', 00H
	ORG $+1
$SG86065 DB	'CloseOnExit', 00H
$SG86066 DB	'WarnOnClose', 00H
$SG86067 DB	'PingInterval', 00H
	ORG $+3
$SG86068 DB	'PingIntervalSecs', 00H
	ORG $+3
$SG86069 DB	'TCPNoDelay', 00H
	ORG $+1
$SG86070 DB	'TCPKeepalives', 00H
	ORG $+2
$SG86071 DB	'TerminalType', 00H
	ORG $+3
$SG86072 DB	'TerminalSpeed', 00H
	ORG $+2
$SG86073 DB	'TerminalModes', 00H
	ORG $+2
$SG86074 DB	'AddressFamily', 00H
	ORG $+2
$SG86075 DB	'ProxyExcludeList', 00H
	ORG $+3
$SG86076 DB	'ProxyDNS', 00H
	ORG $+3
$SG86077 DB	'ProxyLocalhost', 00H
	ORG $+1
$SG86078 DB	'ProxyMethod', 00H
$SG86079 DB	'ProxyHost', 00H
	ORG $+2
$SG86080 DB	'ProxyPort', 00H
	ORG $+2
$SG86081 DB	'ProxyUsername', 00H
	ORG $+2
$SG86082 DB	'ProxyPassword', 00H
	ORG $+2
$SG86083 DB	'ProxyTelnetCommand', 00H
	ORG $+1
$SG86084 DB	'Environment', 00H
$SG86085 DB	'UserName', 00H
	ORG $+3
$SG86086 DB	'UserNameFromEnvironment', 00H
$SG86087 DB	'LocalUserName', 00H
	ORG $+2
$SG86088 DB	'NoPTY', 00H
	ORG $+2
$SG86089 DB	'Compression', 00H
$SG86090 DB	'TryAgent', 00H
	ORG $+3
$SG86091 DB	'AgentFwd', 00H
	ORG $+3
$SG86092 DB	'GssapiFwd', 00H
	ORG $+2
$SG86093 DB	'ChangeUsername', 00H
	ORG $+1
$SG86094 DB	'Cipher', 00H
	ORG $+1
$SG86095 DB	'KEX', 00H
$SG86096 DB	'RekeyTime', 00H
	ORG $+2
$SG86097 DB	'RekeyBytes', 00H
	ORG $+1
$SG86098 DB	'SshNoAuth', 00H
	ORG $+2
$SG86099 DB	'SshBanner', 00H
	ORG $+2
$SG86100 DB	'AuthTIS', 00H
$SG86101 DB	'AuthKI', 00H
	ORG $+1
$SG86102 DB	'AuthGSSAPI', 00H
	ORG $+1
$SG86103 DB	'GSSLibs', 00H
$SG86104 DB	'GSSCustom', 00H
	ORG $+2
$SG86105 DB	'SshNoShell', 00H
	ORG $+1
$SG86106 DB	'SshProt', 00H
$SG86107 DB	'LogHost', 00H
$SG86108 DB	'SSH2DES', 00H
$SG86109 DB	'PublicKeyFile', 00H
	ORG $+2
$SG86110 DB	'RemoteCommand', 00H
	ORG $+2
$SG86111 DB	'RFCEnviron', 00H
	ORG $+1
$SG86112 DB	'PassiveTelnet', 00H
	ORG $+2
$SG86113 DB	'BackspaceIsDelete', 00H
	ORG $+2
$SG86114 DB	'RXVTHomeEnd', 00H
$SG86115 DB	'LinuxFunctionKeys', 00H
	ORG $+2
$SG86116 DB	'NoApplicationKeys', 00H
	ORG $+2
$SG86117 DB	'NoApplicationCursors', 00H
	ORG $+3
$SG86118 DB	'NoMouseReporting', 00H
	ORG $+3
$SG86119 DB	'NoRemoteResize', 00H
	ORG $+1
$SG86120 DB	'NoAltScreen', 00H
$SG86121 DB	'NoRemoteWinTitle', 00H
	ORG $+3
$SG86122 DB	'RemoteQTitleAction', 00H
	ORG $+1
$SG86123 DB	'NoDBackspace', 00H
	ORG $+3
$SG86124 DB	'NoRemoteCharset', 00H
$SG86125 DB	'ApplicationCursorKeys', 00H
	ORG $+2
$SG86126 DB	'ApplicationKeypad', 00H
	ORG $+2
$SG86127 DB	'NetHackKeypad', 00H
	ORG $+2
$SG86128 DB	'AltF4', 00H
	ORG $+2
$SG86129 DB	'AltSpace', 00H
	ORG $+3
$SG86130 DB	'AltOnly', 00H
$SG86131 DB	'ComposeKey', 00H
	ORG $+1
$SG86132 DB	'CtrlAltKeys', 00H
$SG86133 DB	'TelnetKey', 00H
	ORG $+2
$SG86134 DB	'TelnetRet', 00H
	ORG $+2
$SG86135 DB	'LocalEcho', 00H
	ORG $+2
$SG86136 DB	'LocalEdit', 00H
	ORG $+2
$SG86137 DB	'Answerback', 00H
	ORG $+1
$SG86138 DB	'AlwaysOnTop', 00H
$SG86139 DB	'FullScreenOnAltEnter', 00H
	ORG $+3
$SG86140 DB	'HideMousePtr', 00H
	ORG $+3
$SG86141 DB	'SunkenEdge', 00H
	ORG $+1
$SG86142 DB	'WindowBorder', 00H
	ORG $+3
$SG86143 DB	'CurType', 00H
$SG86144 DB	'BlinkCur', 00H
	ORG $+3
$SG86145 DB	'Beep', 00H
	ORG $+3
$SG86146 DB	'BeepInd', 00H
$SG86147 DB	'BellWaveFile', 00H
	ORG $+3
$SG86148 DB	'BellOverload', 00H
	ORG $+3
$SG86149 DB	'BellOverloadN', 00H
	ORG $+2
$SG86150 DB	'BellOverloadT', 00H
	ORG $+2
$SG86151 DB	'BellOverloadS', 00H
	ORG $+2
$SG86152 DB	'ScrollbackLines', 00H
$SG86153 DB	'DECOriginMode', 00H
	ORG $+2
$SG86154 DB	'AutoWrapMode', 00H
	ORG $+3
$SG86155 DB	'LFImpliesCR', 00H
$SG86156 DB	'CRImpliesLF', 00H
$SG86157 DB	'DisableArabicShaping', 00H
	ORG $+3
$SG86158 DB	'DisableBidi', 00H
$SG86159 DB	'WinNameAlways', 00H
	ORG $+2
$SG86160 DB	'WinTitle', 00H
	ORG $+3
$SG86161 DB	'TermWidth', 00H
	ORG $+2
$SG86162 DB	'TermHeight', 00H
	ORG $+1
$SG86163 DB	'Font', 00H
	ORG $+3
$SG86164 DB	'FontQuality', 00H
$SG86165 DB	'FontVTMode', 00H
	ORG $+1
$SG86166 DB	'UseSystemColours', 00H
	ORG $+3
$SG86167 DB	'TryPalette', 00H
	ORG $+1
$SG86168 DB	'ANSIColour', 00H
	ORG $+1
$SG86169 DB	'Xterm256Colour', 00H
	ORG $+1
$SG86170 DB	'BoldAsColour', 00H
	ORG $+3
$SG86176 DB	'Colour%d', 00H
	ORG $+3
$SG86177 DB	'%d,%d,%d', 00H
	ORG $+3
$SG86178 DB	'RawCNP', 00H
	ORG $+1
$SG86179 DB	'PasteRTF', 00H
	ORG $+3
$SG86180 DB	'MouseIsXterm', 00H
	ORG $+3
$SG86181 DB	'RectSelect', 00H
	ORG $+1
$SG86182 DB	'MouseOverride', 00H
	ORG $+2
$SG86189 DB	'Wordness%d', 00H
	ORG $+1
$SG86193 DB	',', 00H
	ORG $+2
$SG86195 DB	'%s%d', 00H
	ORG $+3
$SG86196 DB	'LineCodePage', 00H
	ORG $+3
$SG86197 DB	'CJKAmbigWide', 00H
	ORG $+3
$SG86198 DB	'UTF8Override', 00H
	ORG $+3
$SG86199 DB	'Printer', 00H
$SG86200 DB	'CapsLockCyr', 00H
$SG86201 DB	'ScrollBar', 00H
	ORG $+2
$SG86202 DB	'ScrollBarFullScreen', 00H
$SG86203 DB	'ScrollOnKey', 00H
$SG86204 DB	'ScrollOnDisp', 00H
	ORG $+3
$SG86205 DB	'EraseToScrollback', 00H
	ORG $+2
$SG86206 DB	'LockSize', 00H
	ORG $+3
$SG86207 DB	'BCE', 00H
$SG86208 DB	'BlinkText', 00H
	ORG $+2
$SG86209 DB	'X11Forward', 00H
	ORG $+1
$SG86210 DB	'X11Display', 00H
	ORG $+1
$SG86211 DB	'X11AuthType', 00H
$SG86212 DB	'X11AuthFile', 00H
$SG86213 DB	'LocalPortAcceptAll', 00H
	ORG $+1
$SG86214 DB	'RemotePortAcceptAll', 00H
$SG86215 DB	'PortForwardings', 00H
$SG86216 DB	'BugIgnore1', 00H
	ORG $+1
$SG86217 DB	'BugPlainPW1', 00H
$SG86218 DB	'BugRSA1', 00H
$SG86219 DB	'BugIgnore2', 00H
	ORG $+1
$SG86220 DB	'BugHMAC2', 00H
	ORG $+3
$SG86221 DB	'BugDeriveKey2', 00H
	ORG $+2
$SG86222 DB	'BugRSAPad2', 00H
	ORG $+1
$SG86223 DB	'BugPKSessID2', 00H
	ORG $+3
$SG86224 DB	'BugRekey2', 00H
	ORG $+2
$SG86225 DB	'BugMaxPkt2', 00H
	ORG $+1
$SG86226 DB	'BugWinadj', 00H
	ORG $+2
$SG86227 DB	'BugChanReq', 00H
	ORG $+1
$SG86228 DB	'StampUtmp', 00H
	ORG $+2
$SG86229 DB	'LoginShell', 00H
	ORG $+1
$SG86230 DB	'ScrollbarOnLeft', 00H
$SG86231 DB	'BoldFont', 00H
	ORG $+3
$SG86232 DB	'WideFont', 00H
	ORG $+3
$SG86233 DB	'WideBoldFont', 00H
	ORG $+3
$SG86234 DB	'ShadowBold', 00H
	ORG $+1
$SG86235 DB	'ShadowBoldOffset', 00H
	ORG $+3
$SG86236 DB	'SerialLine', 00H
	ORG $+1
$SG86237 DB	'SerialSpeed', 00H
$SG86238 DB	'SerialDataBits', 00H
	ORG $+1
$SG86239 DB	'SerialStopHalfbits', 00H
	ORG $+1
$SG86240 DB	'SerialParity', 00H
	ORG $+3
$SG86241 DB	'SerialFlowControl', 00H
	ORG $+2
$SG86242 DB	'WindowClass', 00H
$SG86243 DB	'ConnectionSharing', 00H
	ORG $+2
$SG86244 DB	'ConnectionSharingUpstream', 00H
	ORG $+2
$SG86245 DB	'ConnectionSharingDownstream', 00H
$SG86246 DB	'SSHManualHostKeys', 00H
	ORG $+2
$SG86265 DB	'HostName', 00H
	ORG $+3
$SG86266 DB	'LogFileName', 00H
$SG86267 DB	'LogType', 00H
$SG86268 DB	'LogFileClash', 00H
	ORG $+3
$SG86269 DB	'LogFlush', 00H
	ORG $+3
$SG86270 DB	'SSHLogOmitPasswords', 00H
$SG86271 DB	'SSHLogOmitData', 00H
	ORG $+1
$SG86272 DB	'default', 00H
$SG86273 DB	'Protocol', 00H
	ORG $+3
$SG86276 DB	'PortNumber', 00H
	ORG $+1
$SG86277 DB	'AddressFamily', 00H
	ORG $+2
$SG86278 DB	'CloseOnExit', 00H
$SG86279 DB	'WarnOnClose', 00H
$SG86282 DB	'PingInterval', 00H
	ORG $+3
$SG86283 DB	'PingIntervalSecs', 00H
	ORG $+3
$SG86284 DB	'TCPNoDelay', 00H
	ORG $+1
$SG86285 DB	'TCPKeepalives', 00H
	ORG $+2
$SG86286 DB	'xterm', 00H
	ORG $+2
$SG86287 DB	'TerminalType', 00H
	ORG $+3
$SG86288 DB	'38400,38400', 00H
$SG86289 DB	'TerminalSpeed', 00H
	ORG $+2
$SG86291 DB	'TerminalModes', 00H
	ORG $+2
$SG86295 DB	'A', 00H
	ORG $+2
$SG86297 DB	'ProxyExcludeList', 00H
	ORG $+3
$SG86298 DB	'ProxyDNS', 00H
	ORG $+3
$SG86299 DB	'ProxyLocalhost', 00H
	ORG $+1
$SG86300 DB	'ProxyMethod', 00H
$SG86303 DB	'ProxyType', 00H
	ORG $+2
$SG86312 DB	'ProxySOCKSVersion', 00H
	ORG $+2
$SG86315 DB	'proxy', 00H
	ORG $+2
$SG86316 DB	'ProxyHost', 00H
	ORG $+2
$SG86317 DB	'ProxyPort', 00H
	ORG $+2
$SG86319 DB	'ProxyUsername', 00H
	ORG $+2
$SG86321 DB	'ProxyPassword', 00H
	ORG $+2
$SG86322 DB	'connect %host %port\n', 00H
	ORG $+2
$SG86323 DB	'ProxyTelnetCommand', 00H
	ORG $+1
$SG86324 DB	'Environment', 00H
$SG86326 DB	'UserName', 00H
	ORG $+3
$SG86327 DB	'UserNameFromEnvironment', 00H
$SG86329 DB	'LocalUserName', 00H
	ORG $+2
$SG86330 DB	'NoPTY', 00H
	ORG $+2
$SG86331 DB	'Compression', 00H
$SG86332 DB	'TryAgent', 00H
	ORG $+3
$SG86333 DB	'AgentFwd', 00H
	ORG $+3
$SG86334 DB	'ChangeUsername', 00H
	ORG $+1
$SG86335 DB	'GssapiFwd', 00H
	ORG $+2
$SG86337 DB	'Cipher', 00H
	ORG $+1
$SG86339 DB	'BugDHGEx2', 00H
	ORG $+2
$SG86341 DB	'dh-group14-sha1,dh-group1-sha1,rsa,WARN,dh-gex-sha1', 00H
$SG86343 DB	'dh-gex-sha1,dh-group14-sha1,dh-group1-sha1,rsa,WARN', 00H
$SG86344 DB	'KEX', 00H
$SG86345 DB	'RekeyTime', 00H
	ORG $+2
$SG86346 DB	'1G', 00H
	ORG $+1
$SG86347 DB	'RekeyBytes', 00H
	ORG $+1
$SG86348 DB	'SshProt', 00H
$SG86350 DB	'LogHost', 00H
$SG86351 DB	'SSH2DES', 00H
$SG86352 DB	'SshNoAuth', 00H
	ORG $+2
$SG86353 DB	'SshBanner', 00H
	ORG $+2
$SG86354 DB	'AuthTIS', 00H
$SG86355 DB	'AuthKI', 00H
	ORG $+1
$SG86356 DB	'AuthGSSAPI', 00H
	ORG $+1
$SG86358 DB	'GSSLibs', 00H
$SG86359 DB	'GSSCustom', 00H
	ORG $+2
$SG86360 DB	'SshNoShell', 00H
	ORG $+1
$SG86361 DB	'PublicKeyFile', 00H
	ORG $+2
$SG86363 DB	'RemoteCommand', 00H
	ORG $+2
$SG86364 DB	'RFCEnviron', 00H
	ORG $+1
$SG86365 DB	'PassiveTelnet', 00H
	ORG $+2
$SG86366 DB	'BackspaceIsDelete', 00H
	ORG $+2
$SG86367 DB	'RXVTHomeEnd', 00H
$SG86368 DB	'LinuxFunctionKeys', 00H
	ORG $+2
$SG86369 DB	'NoApplicationKeys', 00H
	ORG $+2
$SG86370 DB	'NoApplicationCursors', 00H
	ORG $+3
$SG86371 DB	'NoMouseReporting', 00H
	ORG $+3
$SG86372 DB	'NoRemoteResize', 00H
	ORG $+1
$SG86373 DB	'NoAltScreen', 00H
$SG86374 DB	'NoRemoteWinTitle', 00H
	ORG $+3
$SG86376 DB	'NoRemoteQTitle', 00H
	ORG $+1
$SG86377 DB	'RemoteQTitleAction', 00H
	ORG $+1
$SG86378 DB	'NoDBackspace', 00H
	ORG $+3
$SG86379 DB	'NoRemoteCharset', 00H
$SG86380 DB	'ApplicationCursorKeys', 00H
	ORG $+2
$SG86381 DB	'ApplicationKeypad', 00H
	ORG $+2
$SG86382 DB	'NetHackKeypad', 00H
	ORG $+2
$SG86383 DB	'AltF4', 00H
	ORG $+2
$SG86384 DB	'AltSpace', 00H
	ORG $+3
$SG86385 DB	'AltOnly', 00H
$SG86386 DB	'ComposeKey', 00H
	ORG $+1
$SG86387 DB	'CtrlAltKeys', 00H
$SG86388 DB	'TelnetKey', 00H
	ORG $+2
$SG86389 DB	'TelnetRet', 00H
	ORG $+2
$SG86390 DB	'LocalEcho', 00H
	ORG $+2
$SG86391 DB	'LocalEdit', 00H
	ORG $+2
$SG86392 DB	'PuTTY', 00H
	ORG $+2
$SG86393 DB	'Answerback', 00H
	ORG $+1
$SG86394 DB	'AlwaysOnTop', 00H
$SG86395 DB	'FullScreenOnAltEnter', 00H
	ORG $+3
$SG86396 DB	'HideMousePtr', 00H
	ORG $+3
$SG86397 DB	'SunkenEdge', 00H
	ORG $+1
$SG86398 DB	'WindowBorder', 00H
	ORG $+3
$SG86399 DB	'CurType', 00H
$SG86400 DB	'BlinkCur', 00H
	ORG $+3
$SG86401 DB	'Beep', 00H
	ORG $+3
$SG86402 DB	'BeepInd', 00H
$SG86403 DB	'BellWaveFile', 00H
	ORG $+3
$SG86404 DB	'BellOverload', 00H
	ORG $+3
$SG86405 DB	'BellOverloadN', 00H
	ORG $+2
$SG86406 DB	'BellOverloadT', 00H
	ORG $+2
$SG86407 DB	'BellOverloadS', 00H
	ORG $+2
$SG86408 DB	'ScrollbackLines', 00H
$SG86409 DB	'DECOriginMode', 00H
	ORG $+2
$SG86410 DB	'AutoWrapMode', 00H
	ORG $+3
$SG86411 DB	'LFImpliesCR', 00H
$SG86412 DB	'CRImpliesLF', 00H
$SG86413 DB	'DisableArabicShaping', 00H
	ORG $+3
$SG86414 DB	'DisableBidi', 00H
$SG86415 DB	'WinNameAlways', 00H
	ORG $+2
$SG86417 DB	'WinTitle', 00H
	ORG $+3
$SG86418 DB	'TermWidth', 00H
	ORG $+2
$SG86419 DB	'TermHeight', 00H
	ORG $+1
$SG86420 DB	'Font', 00H
	ORG $+3
$SG86421 DB	'FontQuality', 00H
$SG86422 DB	'FontVTMode', 00H
	ORG $+1
$SG86423 DB	'UseSystemColours', 00H
	ORG $+3
$SG86424 DB	'TryPalette', 00H
	ORG $+1
$SG86425 DB	'ANSIColour', 00H
	ORG $+1
$SG86426 DB	'Xterm256Colour', 00H
	ORG $+1
$SG86427 DB	'BoldAsColour', 00H
	ORG $+3
$SG86433 DB	'187,187,187', 00H
$SG86434 DB	'255,255,255', 00H
$SG86435 DB	'0,0,0', 00H
	ORG $+2
$SG86436 DB	'85,85,85', 00H
	ORG $+3
$SG86437 DB	'0,0,0', 00H
	ORG $+2
$SG86438 DB	'0,255,0', 00H
$SG86439 DB	'0,0,0', 00H
	ORG $+2
$SG86440 DB	'85,85,85', 00H
	ORG $+3
$SG86441 DB	'187,0,0', 00H
$SG86442 DB	'255,85,85', 00H
	ORG $+2
$SG86443 DB	'0,187,0', 00H
$SG86444 DB	'85,255,85', 00H
	ORG $+2
$SG86445 DB	'187,187,0', 00H
	ORG $+2
$SG86446 DB	'255,255,85', 00H
	ORG $+1
$SG86447 DB	'0,0,187', 00H
$SG86448 DB	'85,85,255', 00H
	ORG $+2
$SG86449 DB	'187,0,187', 00H
	ORG $+2
$SG86450 DB	'255,85,255', 00H
	ORG $+1
$SG86451 DB	'0,187,187', 00H
	ORG $+2
$SG86452 DB	'85,255,255', 00H
	ORG $+1
$SG86453 DB	'187,187,187', 00H
$SG86454 DB	'255,255,255', 00H
$SG86460 DB	'Colour%d', 00H
	ORG $+3
$SG86462 DB	'%d,%d,%d', 00H
	ORG $+3
$SG86463 DB	'RawCNP', 00H
	ORG $+1
$SG86464 DB	'PasteRTF', 00H
	ORG $+3
$SG86465 DB	'MouseIsXterm', 00H
	ORG $+3
$SG86466 DB	'RectSelect', 00H
	ORG $+1
$SG86467 DB	'MouseOverride', 00H
	ORG $+2
$SG86485 DB	'Wordness%d', 00H
	ORG $+1
$SG86473 DB	'0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,'
	DB	'0,0,0,0', 00H
$SG86474 DB	'0,1,2,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,'
	DB	'1,1,1,1', 00H
$SG86475 DB	'1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,'
	DB	'1,1,1,2', 00H
$SG86476 DB	'1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,'
	DB	'1,1,1,1', 00H
$SG86477 DB	'1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,'
	DB	'1,1,1,1', 00H
$SG86478 DB	'1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,'
	DB	'1,1,1,1', 00H
$SG86479 DB	'2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,'
	DB	'2,2,2,2', 00H
$SG86480 DB	'2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,'
	DB	'2,2,2,2', 00H
$SG86495 DB	'LineCodePage', 00H
	ORG $+3
$SG86496 DB	'CJKAmbigWide', 00H
	ORG $+3
$SG86497 DB	'UTF8Override', 00H
	ORG $+3
$SG86499 DB	'Printer', 00H
$SG86500 DB	'CapsLockCyr', 00H
$SG86501 DB	'ScrollBar', 00H
	ORG $+2
$SG86502 DB	'ScrollBarFullScreen', 00H
$SG86503 DB	'ScrollOnKey', 00H
$SG86504 DB	'ScrollOnDisp', 00H
	ORG $+3
$SG86505 DB	'EraseToScrollback', 00H
	ORG $+2
$SG86506 DB	'LockSize', 00H
	ORG $+3
$SG86507 DB	'BCE', 00H
$SG86508 DB	'BlinkText', 00H
	ORG $+2
$SG86509 DB	'X11Forward', 00H
	ORG $+1
$SG86511 DB	'X11Display', 00H
	ORG $+1
$SG86512 DB	'X11AuthType', 00H
$SG86513 DB	'X11AuthFile', 00H
$SG86514 DB	'LocalPortAcceptAll', 00H
	ORG $+1
$SG86515 DB	'RemotePortAcceptAll', 00H
$SG86516 DB	'PortForwardings', 00H
$SG86517 DB	'BugIgnore1', 00H
	ORG $+1
$SG86518 DB	'BugPlainPW1', 00H
$SG86519 DB	'BugRSA1', 00H
$SG86520 DB	'BugIgnore2', 00H
	ORG $+1
$SG86522 DB	'BugHMAC2', 00H
	ORG $+3
$SG86524 DB	'BuggyMAC', 00H
	ORG $+3
$SG86526 DB	'BugDeriveKey2', 00H
	ORG $+2
$SG86527 DB	'BugRSAPad2', 00H
	ORG $+1
$SG86528 DB	'BugPKSessID2', 00H
	ORG $+3
$SG86529 DB	'BugRekey2', 00H
	ORG $+2
$SG86530 DB	'BugMaxPkt2', 00H
	ORG $+1
$SG86531 DB	'BugWinadj', 00H
	ORG $+2
$SG86532 DB	'BugChanReq', 00H
	ORG $+1
$SG86533 DB	'StampUtmp', 00H
	ORG $+2
$SG86534 DB	'LoginShell', 00H
	ORG $+1
$SG86535 DB	'ScrollbarOnLeft', 00H
$SG86536 DB	'ShadowBold', 00H
	ORG $+1
$SG86537 DB	'BoldFont', 00H
	ORG $+3
$SG86538 DB	'WideFont', 00H
	ORG $+3
$SG86539 DB	'WideBoldFont', 00H
	ORG $+3
$SG86540 DB	'ShadowBoldOffset', 00H
	ORG $+3
$SG86542 DB	'SerialLine', 00H
	ORG $+1
$SG86543 DB	'SerialSpeed', 00H
$SG86544 DB	'SerialDataBits', 00H
	ORG $+1
$SG86545 DB	'SerialStopHalfbits', 00H
	ORG $+1
$SG86546 DB	'SerialParity', 00H
	ORG $+3
$SG86547 DB	'SerialFlowControl', 00H
	ORG $+2
$SG86549 DB	'WindowClass', 00H
$SG86550 DB	'ConnectionSharing', 00H
	ORG $+2
$SG86551 DB	'ConnectionSharingUpstream', 00H
	ORG $+2
$SG86552 DB	'ConnectionSharingDownstream', 00H
$SG86553 DB	'SSHManualHostKeys', 00H
	ORG $+2
$SG86570 DB	'Default Settings', 00H
	ORG $+3
$SG86572 DB	'Default Settings', 00H
	ORG $+3
$SG86605 DB	'Default Settings', 00H
	ORG $+3
$SG86611 DB	'Default Settings', 00H
	ORG $+3
$SG86616 DB	'Default Settings', 00H
_DATA	ENDS
PUBLIC	_backend_from_name
EXTRN	_strcmp:PROC
EXTRN	_backends:BYTE
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\putty\settings.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_p$ = -4						; size = 4
_name$ = 8						; size = 4
_backend_from_name PROC
; Line 56
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 58
	mov	DWORD PTR _p$[ebp], OFFSET _backends
	jmp	SHORT $LN4@backend_fr
$LN3@backend_fr:
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 4
	mov	DWORD PTR _p$[ebp], eax
$LN4@backend_fr:
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN2@backend_fr
; Line 59
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+64]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@backend_fr
; Line 60
	mov	eax, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN5@backend_fr
$LN1@backend_fr:
; Line 61
	jmp	SHORT $LN3@backend_fr
$LN2@backend_fr:
	xor	eax, eax
$LN5@backend_fr:
; Line 62
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_backend_from_name ENDP
_TEXT	ENDS
PUBLIC	_backend_from_proto
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_p$ = -4						; size = 4
_proto$ = 8						; size = 4
_backend_from_proto PROC
; Line 65
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 67
	mov	DWORD PTR _p$[ebp], OFFSET _backends
	jmp	SHORT $LN4@backend_fr@2
$LN3@backend_fr@2:
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 4
	mov	DWORD PTR _p$[ebp], eax
$LN4@backend_fr@2:
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN2@backend_fr@2
; Line 68
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+68]
	cmp	ecx, DWORD PTR _proto$[ebp]
	jne	SHORT $LN1@backend_fr@2
; Line 69
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	jmp	SHORT $LN5@backend_fr@2
$LN1@backend_fr@2:
; Line 70
	jmp	SHORT $LN3@backend_fr@2
$LN2@backend_fr@2:
	xor	eax, eax
$LN5@backend_fr@2:
; Line 71
	mov	esp, ebp
	pop	ebp
	ret	0
_backend_from_proto ENDP
_TEXT	ENDS
PUBLIC	_get_remote_username
EXTRN	_get_username:PROC
EXTRN	_conf_get_int:PROC
EXTRN	_dupstr:PROC
EXTRN	_conf_get_str:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_username$ = -4						; size = 4
_conf$ = 8						; size = 4
_get_remote_username PROC
; Line 74
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 75
	push	50					; 00000032H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_str
	add	esp, 8
	mov	DWORD PTR _username$[ebp], eax
; Line 76
	mov	ecx, DWORD PTR _username$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN4@get_remote
; Line 77
	mov	eax, DWORD PTR _username$[ebp]
	push	eax
	call	_dupstr
	add	esp, 4
	jmp	SHORT $LN5@get_remote
	jmp	SHORT $LN5@get_remote
$LN4@get_remote:
; Line 78
	push	51					; 00000033H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@get_remote
; Line 80
	call	_get_username
	jmp	SHORT $LN5@get_remote
; Line 81
	jmp	SHORT $LN5@get_remote
$LN2@get_remote:
; Line 82
	xor	eax, eax
$LN5@get_remote:
; Line 84
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_get_remote_username ENDP
_TEXT	ENDS
PUBLIC	_save_open_settings
PUBLIC	_save_settings
EXTRN	_close_settings_w:PROC
EXTRN	_open_settings_w:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_errmsg$ = -12						; size = 4
_sesskey$ = -4						; size = 4
_section$ = 8						; size = 4
_conf$ = 12						; size = 4
_save_settings PROC
; Line 421
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 425
	lea	eax, DWORD PTR _errmsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _section$[ebp]
	push	ecx
	call	_open_settings_w
	add	esp, 8
	mov	DWORD PTR _sesskey$[ebp], eax
; Line 426
	cmp	DWORD PTR _sesskey$[ebp], 0
	jne	SHORT $LN1@save_setti
; Line 427
	mov	eax, DWORD PTR _errmsg$[ebp]
	jmp	SHORT $LN2@save_setti
$LN1@save_setti:
; Line 428
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_save_open_settings
	add	esp, 8
; Line 429
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_close_settings_w
	add	esp, 4
; Line 430
	xor	eax, eax
$LN2@save_setti:
; Line 431
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@save_setti
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@save_setti:
	DD	1
	DD	$LN5@save_setti
$LN5@save_setti:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN4@save_setti
$LN4@save_setti:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
_save_settings ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_strlen:PROC
EXTRN	_conf_get_int_int:PROC
EXTRN	_sprintf:PROC
EXTRN	_write_setting_fontspec:PROC
EXTRN	_conf_get_fontspec:PROC
EXTRN	_gsslibkeywords:BYTE
EXTRN	_ngsslibs:DWORD
EXTRN	_write_setting_filename:PROC
EXTRN	_conf_get_filename:PROC
EXTRN	_write_setting_s:PROC
EXTRN	_write_setting_i:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv1004 = -384						; size = 4
_j$86188 = -380						; size = 4
_buf2$86187 = -372					; size = 256
_buf$86186 = -108					; size = 20
_buf2$86175 = -80					; size = 30
_buf$86174 = -40					; size = 20
_b$86061 = -16						; size = 4
_p$ = -12						; size = 4
_i$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_sesskey$ = 8						; size = 4
_conf$ = 12						; size = 4
_save_open_settings PROC
; Line 434
	push	ebp
	mov	ebp, esp
	sub	esp, 384				; 00000180H
	push	edi
	lea	edi, DWORD PTR [ebp-384]
	mov	ecx, 96					; 00000060H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 438
	push	1
	push	OFFSET $SG86052
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 439
	push	0
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	push	eax
	push	OFFSET $SG86053
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 440
	push	114					; 00000072H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_filename
	add	esp, 8
	push	eax
	push	OFFSET $SG86054
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_filename
	add	esp, 12					; 0000000cH
; Line 441
	push	115					; 00000073H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86055
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 442
	push	116					; 00000074H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86056
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 443
	push	117					; 00000075H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86057
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 444
	push	118					; 00000076H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86058
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 445
	push	119					; 00000077H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86059
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 446
	mov	DWORD PTR _p$[ebp], OFFSET $SG86060
; Line 448
	push	2
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	call	_backend_from_proto
	add	esp, 4
	mov	DWORD PTR _b$86061[ebp], eax
; Line 449
	cmp	DWORD PTR _b$86061[ebp], 0
	je	SHORT $LN10@save_open_
; Line 450
	mov	ecx, DWORD PTR _b$86061[ebp]
	mov	edx, DWORD PTR [ecx+64]
	mov	DWORD PTR _p$[ebp], edx
$LN10@save_open_:
; Line 452
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	OFFSET $SG86063
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 453
	push	1
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86064
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 456
	push	4
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	add	eax, 2
	cdq
	mov	ecx, 3
	idiv	ecx
	push	edx
	push	OFFSET $SG86065
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 457
	push	5
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	neg	eax
	sbb	eax, eax
	neg	eax
	push	eax
	push	OFFSET $SG86066
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 458
	push	6
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	push	eax
	push	OFFSET $SG86067
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 459
	push	6
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	push	edx
	push	OFFSET $SG86068
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 460
	push	7
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86069
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 461
	push	8
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86070
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 462
	push	46					; 0000002eH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	push	eax
	push	OFFSET $SG86071
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 463
	push	47					; 0000002fH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_str
	add	esp, 8
	push	eax
	push	OFFSET $SG86072
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 464
	push	1
	push	48					; 00000030H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	OFFSET $SG86073
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_wmap
	add	esp, 20					; 00000014H
; Line 467
	push	3
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86074
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 470
	push	10					; 0000000aH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_str
	add	esp, 8
	push	eax
	push	OFFSET $SG86075
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 471
	push	11					; 0000000bH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	add	eax, 2
	cdq
	mov	ecx, 3
	idiv	ecx
	push	edx
	push	OFFSET $SG86076
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 472
	push	12					; 0000000cH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86077
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 473
	push	13					; 0000000dH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86078
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 474
	push	14					; 0000000eH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	push	eax
	push	OFFSET $SG86079
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 475
	push	15					; 0000000fH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86080
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 476
	push	16					; 00000010H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_str
	add	esp, 8
	push	eax
	push	OFFSET $SG86081
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 477
	push	17					; 00000011H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	push	eax
	push	OFFSET $SG86082
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 478
	push	18					; 00000012H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_str
	add	esp, 8
	push	eax
	push	OFFSET $SG86083
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 479
	push	1
	push	49					; 00000031H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	OFFSET $SG86084
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_wmap
	add	esp, 20					; 00000014H
; Line 480
	push	50					; 00000032H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	push	eax
	push	OFFSET $SG86085
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 481
	push	51					; 00000033H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86086
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 482
	push	52					; 00000034H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_str
	add	esp, 8
	push	eax
	push	OFFSET $SG86087
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 483
	push	21					; 00000015H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86088
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 484
	push	22					; 00000016H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86089
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 485
	push	26					; 0000001aH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86090
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 486
	push	27					; 0000001bH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86091
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 487
	push	38					; 00000026H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86092
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 488
	push	28					; 0000001cH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86093
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 489
	push	29					; 0000001dH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	6
	push	OFFSET _ciphernames
	push	OFFSET $SG86094
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_wprefs
	add	esp, 24					; 00000018H
; Line 490
	push	23					; 00000017H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	5
	push	OFFSET _kexnames
	push	OFFSET $SG86095
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_wprefs
	add	esp, 24					; 00000018H
; Line 491
	push	24					; 00000018H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86096
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 492
	push	25					; 00000019H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	push	eax
	push	OFFSET $SG86097
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 493
	push	33					; 00000021H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86098
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 494
	push	34					; 00000022H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86099
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 495
	push	35					; 00000023H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86100
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 496
	push	36					; 00000024H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86101
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 497
	push	37					; 00000025H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86102
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 499
	push	39					; 00000027H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ngsslibs
	push	edx
	push	OFFSET _gsslibkeywords
	push	OFFSET $SG86103
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_wprefs
	add	esp, 24					; 00000018H
; Line 500
	push	40					; 00000028H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_filename
	add	esp, 8
	push	eax
	push	OFFSET $SG86104
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_filename
	add	esp, 12					; 0000000cH
; Line 502
	push	43					; 0000002bH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86105
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 503
	push	31					; 0000001fH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86106
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 504
	push	9
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	push	eax
	push	OFFSET $SG86107
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 505
	push	32					; 00000020H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86108
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 506
	push	30					; 0000001eH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_filename
	add	esp, 8
	push	eax
	push	OFFSET $SG86109
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_filename
	add	esp, 12					; 0000000cH
; Line 507
	push	19					; 00000013H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	push	eax
	push	OFFSET $SG86110
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 508
	push	53					; 00000035H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86111
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 509
	push	54					; 00000036H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86112
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 510
	push	61					; 0000003dH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86113
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 511
	push	62					; 0000003eH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86114
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 512
	push	63					; 0000003fH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86115
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 513
	push	65					; 00000041H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86116
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 514
	push	64					; 00000040H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86117
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 515
	push	66					; 00000042H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86118
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 516
	push	67					; 00000043H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86119
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 517
	push	68					; 00000044H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86120
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 518
	push	69					; 00000045H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86121
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 519
	push	72					; 00000048H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86122
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 520
	push	70					; 00000046H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86123
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 521
	push	71					; 00000047H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86124
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 522
	push	73					; 00000049H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86125
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 523
	push	74					; 0000004aH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86126
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 524
	push	75					; 0000004bH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86127
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 525
	push	78					; 0000004eH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86128
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 526
	push	79					; 0000004fH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86129
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 527
	push	80					; 00000050H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86130
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 528
	push	88					; 00000058H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86131
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 529
	push	89					; 00000059H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86132
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 530
	push	76					; 0000004cH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86133
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 531
	push	77					; 0000004dH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86134
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 532
	push	81					; 00000051H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86135
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 533
	push	82					; 00000052H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86136
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 534
	push	123					; 0000007bH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	push	eax
	push	OFFSET $SG86137
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 535
	push	83					; 00000053H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86138
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 536
	push	84					; 00000054H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86139
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 537
	push	120					; 00000078H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86140
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 538
	push	121					; 00000079H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86141
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 539
	push	122					; 0000007aH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86142
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 540
	push	95					; 0000005fH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86143
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 541
	push	96					; 00000060H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86144
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 542
	push	97					; 00000061H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86145
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 543
	push	98					; 00000062H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86146
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 544
	push	103					; 00000067H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_filename
	add	esp, 8
	push	eax
	push	OFFSET $SG86147
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_filename
	add	esp, 12					; 0000000cH
; Line 545
	push	99					; 00000063H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86148
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 546
	push	100					; 00000064H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86149
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 551
	push	101					; 00000065H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86150
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 556
	push	102					; 00000066H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86151
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 557
	push	91					; 0000005bH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86152
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 558
	push	92					; 0000005cH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86153
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 559
	push	93					; 0000005dH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86154
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 560
	push	94					; 0000005eH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86155
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 561
	push	176					; 000000b0H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86156
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 562
	push	125					; 0000007dH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86157
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 563
	push	126					; 0000007eH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86158
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 564
	push	109					; 0000006dH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86159
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 565
	push	90					; 0000005aH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_str
	add	esp, 8
	push	eax
	push	OFFSET $SG86160
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 566
	push	110					; 0000006eH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86161
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 567
	push	111					; 0000006fH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86162
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 568
	push	112					; 00000070H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_fontspec
	add	esp, 8
	push	eax
	push	OFFSET $SG86163
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_fontspec
	add	esp, 12					; 0000000cH
; Line 569
	push	113					; 00000071H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86164
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 570
	push	139					; 0000008bH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86165
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 571
	push	129					; 00000081H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86166
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 572
	push	130					; 00000082H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86167
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 573
	push	127					; 0000007fH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86168
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 574
	push	128					; 00000080H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86169
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 575
	push	131					; 00000083H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	sub	eax, 1
	push	eax
	push	OFFSET $SG86170
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 577
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@save_open_
$LN8@save_open_:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN9@save_open_:
	cmp	DWORD PTR _i$[ebp], 22			; 00000016H
	jge	$LN7@save_open_
; Line 579
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	push	OFFSET $SG86176
	lea	edx, DWORD PTR _buf$86174[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 583
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 3
	add	eax, 2
	push	eax
	push	132					; 00000084H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 3
	add	edx, 1
	push	edx
	push	132					; 00000084H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 3
	push	ecx
	push	132					; 00000084H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	push	eax
	push	OFFSET $SG86177
	lea	eax, DWORD PTR _buf2$86175[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H
; Line 584
	lea	ecx, DWORD PTR _buf2$86175[ebp]
	push	ecx
	lea	edx, DWORD PTR _buf$86174[ebp]
	push	edx
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 585
	jmp	$LN8@save_open_
$LN7@save_open_:
; Line 586
	push	135					; 00000087H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86178
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 587
	push	136					; 00000088H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86179
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 588
	push	133					; 00000085H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86180
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 589
	push	134					; 00000086H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86181
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 590
	push	137					; 00000089H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86182
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 591
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@save_open_
$LN5@save_open_:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 32					; 00000020H
	mov	DWORD PTR _i$[ebp], edx
$LN6@save_open_:
	cmp	DWORD PTR _i$[ebp], 256			; 00000100H
	jge	$LN4@save_open_
; Line 594
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	push	OFFSET $SG86189
	lea	ecx, DWORD PTR _buf$86186[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 595
	mov	BYTE PTR _buf2$86187[ebp], 0
; Line 596
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _j$86188[ebp], edx
	jmp	SHORT $LN3@save_open_
$LN2@save_open_:
	mov	eax, DWORD PTR _j$86188[ebp]
	add	eax, 1
	mov	DWORD PTR _j$86188[ebp], eax
$LN3@save_open_:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 32					; 00000020H
	cmp	DWORD PTR _j$86188[ebp], ecx
	jge	SHORT $LN1@save_open_
; Line 599
	movsx	edx, BYTE PTR _buf2$86187[ebp]
	test	edx, edx
	je	SHORT $LN13@save_open_
	mov	DWORD PTR tv1004[ebp], OFFSET $SG86193
	jmp	SHORT $LN14@save_open_
$LN13@save_open_:
	mov	DWORD PTR tv1004[ebp], OFFSET $SG86194
$LN14@save_open_:
	mov	eax, DWORD PTR _j$86188[ebp]
	push	eax
	push	138					; 0000008aH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR tv1004[ebp]
	push	edx
	push	OFFSET $SG86195
	lea	eax, DWORD PTR _buf2$86187[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	lea	ecx, DWORD PTR _buf2$86187[ebp+eax]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 600
	jmp	$LN2@save_open_
$LN1@save_open_:
; Line 601
	lea	edx, DWORD PTR _buf2$86187[ebp]
	push	edx
	lea	eax, DWORD PTR _buf$86186[ebp]
	push	eax
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 602
	jmp	$LN5@save_open_
$LN4@save_open_:
; Line 603
	push	140					; 0000008cH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_str
	add	esp, 8
	push	eax
	push	OFFSET $SG86196
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 604
	push	141					; 0000008dH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86197
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 605
	push	142					; 0000008eH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86198
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 606
	push	124					; 0000007cH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_str
	add	esp, 8
	push	eax
	push	OFFSET $SG86199
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 607
	push	143					; 0000008fH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86200
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 608
	push	104					; 00000068H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86201
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 609
	push	105					; 00000069H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86202
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 610
	push	85					; 00000055H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86203
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 611
	push	86					; 00000056H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86204
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 612
	push	87					; 00000057H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86205
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 613
	push	106					; 0000006aH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86206
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 614
	push	107					; 0000006bH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86207
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 615
	push	108					; 0000006cH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86208
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 616
	push	144					; 00000090H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86209
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 617
	push	145					; 00000091H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_str
	add	esp, 8
	push	eax
	push	OFFSET $SG86210
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 618
	push	146					; 00000092H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86211
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 619
	push	147					; 00000093H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_filename
	add	esp, 8
	push	eax
	push	OFFSET $SG86212
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_filename
	add	esp, 12					; 0000000cH
; Line 620
	push	148					; 00000094H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86213
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 621
	push	149					; 00000095H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86214
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 622
	push	1
	push	150					; 00000096H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	OFFSET $SG86215
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_wmap
	add	esp, 20					; 00000014H
; Line 623
	push	151					; 00000097H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	ecx, 2
	sub	ecx, eax
	push	ecx
	push	OFFSET $SG86216
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 624
	push	152					; 00000098H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	ecx, 2
	sub	ecx, eax
	push	ecx
	push	OFFSET $SG86217
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 625
	push	153					; 00000099H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	ecx, 2
	sub	ecx, eax
	push	ecx
	push	OFFSET $SG86218
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 626
	push	160					; 000000a0H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	ecx, 2
	sub	ecx, eax
	push	ecx
	push	OFFSET $SG86219
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 627
	push	154					; 0000009aH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	ecx, 2
	sub	ecx, eax
	push	ecx
	push	OFFSET $SG86220
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 628
	push	155					; 0000009bH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	ecx, 2
	sub	ecx, eax
	push	ecx
	push	OFFSET $SG86221
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 629
	push	156					; 0000009cH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	ecx, 2
	sub	ecx, eax
	push	ecx
	push	OFFSET $SG86222
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 630
	push	157					; 0000009dH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	ecx, 2
	sub	ecx, eax
	push	ecx
	push	OFFSET $SG86223
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 631
	push	158					; 0000009eH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	ecx, 2
	sub	ecx, eax
	push	ecx
	push	OFFSET $SG86224
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 632
	push	159					; 0000009fH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	ecx, 2
	sub	ecx, eax
	push	ecx
	push	OFFSET $SG86225
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 633
	push	161					; 000000a1H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	ecx, 2
	sub	ecx, eax
	push	ecx
	push	OFFSET $SG86226
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 634
	push	162					; 000000a2H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	ecx, 2
	sub	ecx, eax
	push	ecx
	push	OFFSET $SG86227
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 635
	push	168					; 000000a8H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86228
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 636
	push	169					; 000000a9H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86229
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 637
	push	170					; 000000aaH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86230
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 638
	push	172					; 000000acH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_fontspec
	add	esp, 8
	push	eax
	push	OFFSET $SG86231
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_fontspec
	add	esp, 12					; 0000000cH
; Line 639
	push	173					; 000000adH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_fontspec
	add	esp, 8
	push	eax
	push	OFFSET $SG86232
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_fontspec
	add	esp, 12					; 0000000cH
; Line 640
	push	174					; 000000aeH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_fontspec
	add	esp, 8
	push	eax
	push	OFFSET $SG86233
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_fontspec
	add	esp, 12					; 0000000cH
; Line 641
	push	171					; 000000abH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86234
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 642
	push	175					; 000000afH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86235
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 643
	push	55					; 00000037H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	push	eax
	push	OFFSET $SG86236
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 644
	push	56					; 00000038H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86237
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 645
	push	57					; 00000039H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86238
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 646
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86239
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 647
	push	59					; 0000003bH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86240
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 648
	push	60					; 0000003cH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86241
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 649
	push	177					; 000000b1H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	push	eax
	push	OFFSET $SG86242
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 650
	push	164					; 000000a4H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86243
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 651
	push	165					; 000000a5H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86244
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 652
	push	166					; 000000a6H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	OFFSET $SG86245
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_write_setting_i
	add	esp, 12					; 0000000cH
; Line 653
	push	0
	push	167					; 000000a7H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	OFFSET $SG86246
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_wmap
	add	esp, 20					; 00000014H
; Line 654
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@save_open_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 384				; 00000180H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN20@save_open_:
	DD	4
	DD	$LN19@save_open_
$LN19@save_open_:
	DD	-40					; ffffffd8H
	DD	20					; 00000014H
	DD	$LN15@save_open_
	DD	-80					; ffffffb0H
	DD	30					; 0000001eH
	DD	$LN16@save_open_
	DD	-108					; ffffff94H
	DD	20					; 00000014H
	DD	$LN17@save_open_
	DD	-372					; fffffe8cH
	DD	256					; 00000100H
	DD	$LN18@save_open_
$LN18@save_open_:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	50					; 00000032H
	DB	0
$LN17@save_open_:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN16@save_open_:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	50					; 00000032H
	DB	0
$LN15@save_open_:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_save_open_settings ENDP
_TEXT	ENDS
EXTRN	_safefree:PROC
EXTRN	_free:PROC
EXTRN	_strchr:PROC
EXTRN	_safemalloc:PROC
EXTRN	_conf_get_str_strs:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_L$85895 = -40						; size = 4
_len$ = -36						; size = 4
_val$ = -32						; size = 4
_realkey$ = -28						; size = 4
_key$ = -20						; size = 4
_q$ = -12						; size = 4
_p$ = -8						; size = 4
_buf$ = -4						; size = 4
_handle$ = 8						; size = 4
_outkey$ = 12						; size = 4
_conf$ = 16						; size = 4
_primary$ = 20						; size = 4
_include_values$ = 24					; size = 4
_wmap	PROC
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 217
	mov	DWORD PTR _len$[ebp], 1
; Line 221
	lea	eax, DWORD PTR _key$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _primary$[ebp]
	push	ecx
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _val$[ebp], eax
	jmp	SHORT $LN22@wmap
$LN21@wmap:
	lea	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _primary$[ebp]
	push	edx
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _val$[ebp], eax
$LN22@wmap:
	cmp	DWORD PTR _val$[ebp], 0
	je	SHORT $LN20@wmap
; Line 222
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	esi, eax
	mov	edx, DWORD PTR _val$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	add	esi, eax
	mov	eax, DWORD PTR _len$[ebp]
	lea	ecx, DWORD PTR [eax+esi*2+2]
	mov	DWORD PTR _len$[ebp], ecx
	jmp	SHORT $LN21@wmap
$LN20@wmap:
; Line 224
	push	1
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax
; Line 225
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 229
	lea	ecx, DWORD PTR _key$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _primary$[ebp]
	push	edx
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _val$[ebp], eax
	jmp	SHORT $LN19@wmap
$LN18@wmap:
	lea	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	eax, DWORD PTR _primary$[ebp]
	push	eax
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _val$[ebp], eax
$LN19@wmap:
	cmp	DWORD PTR _val$[ebp], 0
	je	$LN17@wmap
; Line 231
	cmp	DWORD PTR _primary$[ebp], 150		; 00000096H
	jne	SHORT $LN16@wmap
	push	OFFSET $SG85894
	mov	edx, DWORD PTR _val$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN16@wmap
; Line 241
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _realkey$[ebp], eax
; Line 242
	mov	DWORD PTR _val$[ebp], OFFSET $SG85896
; Line 243
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	call	_dupstr
	add	esp, 4
	mov	DWORD PTR _key$[ebp], eax
; Line 244
	push	76					; 0000004cH
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	call	_strchr
	add	esp, 8
	mov	DWORD PTR _L$85895[ebp], eax
; Line 245
	cmp	DWORD PTR _L$85895[ebp], 0
	je	SHORT $LN15@wmap
	mov	eax, DWORD PTR _L$85895[ebp]
	mov	BYTE PTR [eax], 68			; 00000044H
$LN15@wmap:
; Line 246
	jmp	SHORT $LN14@wmap
$LN16@wmap:
; Line 247
	mov	DWORD PTR _realkey$[ebp], 0
$LN14@wmap:
; Line 250
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	ecx, DWORD PTR _buf$[ebp]
	je	SHORT $LN13@wmap
; Line 251
	mov	edx, DWORD PTR _p$[ebp]
	mov	BYTE PTR [edx], 44			; 0000002cH
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
$LN13@wmap:
; Line 252
	mov	ecx, DWORD PTR _key$[ebp]
	mov	DWORD PTR _q$[ebp], ecx
	jmp	SHORT $LN12@wmap
$LN11@wmap:
	mov	edx, DWORD PTR _q$[ebp]
	add	edx, 1
	mov	DWORD PTR _q$[ebp], edx
$LN12@wmap:
	mov	eax, DWORD PTR _q$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN10@wmap
; Line 253
	mov	edx, DWORD PTR _q$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 61					; 0000003dH
	je	SHORT $LN8@wmap
	mov	ecx, DWORD PTR _q$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 44					; 0000002cH
	je	SHORT $LN8@wmap
	mov	eax, DWORD PTR _q$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 92					; 0000005cH
	jne	SHORT $LN9@wmap
$LN8@wmap:
; Line 254
	mov	edx, DWORD PTR _p$[ebp]
	mov	BYTE PTR [edx], 92			; 0000005cH
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
$LN9@wmap:
; Line 255
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _q$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR [ecx], al
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 1
	mov	DWORD PTR _p$[ebp], ecx
; Line 256
	jmp	SHORT $LN11@wmap
$LN10@wmap:
; Line 257
	cmp	DWORD PTR _include_values$[ebp], 0
	je	SHORT $LN7@wmap
; Line 258
	mov	edx, DWORD PTR _p$[ebp]
	mov	BYTE PTR [edx], 61			; 0000003dH
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
; Line 259
	mov	ecx, DWORD PTR _val$[ebp]
	mov	DWORD PTR _q$[ebp], ecx
	jmp	SHORT $LN6@wmap
$LN5@wmap:
	mov	edx, DWORD PTR _q$[ebp]
	add	edx, 1
	mov	DWORD PTR _q$[ebp], edx
$LN6@wmap:
	mov	eax, DWORD PTR _q$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN7@wmap
; Line 260
	mov	edx, DWORD PTR _q$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 61					; 0000003dH
	je	SHORT $LN2@wmap
	mov	ecx, DWORD PTR _q$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 44					; 0000002cH
	je	SHORT $LN2@wmap
	mov	eax, DWORD PTR _q$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 92					; 0000005cH
	jne	SHORT $LN3@wmap
$LN2@wmap:
; Line 261
	mov	edx, DWORD PTR _p$[ebp]
	mov	BYTE PTR [edx], 92			; 0000005cH
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
$LN3@wmap:
; Line 262
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _q$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR [ecx], al
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 1
	mov	DWORD PTR _p$[ebp], ecx
; Line 263
	jmp	SHORT $LN5@wmap
$LN7@wmap:
; Line 266
	cmp	DWORD PTR _realkey$[ebp], 0
	je	SHORT $LN1@wmap
; Line 267
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	call	_free
	add	esp, 4
; Line 268
	mov	eax, DWORD PTR _realkey$[ebp]
	mov	DWORD PTR _key$[ebp], eax
$LN1@wmap:
; Line 270
	jmp	$LN18@wmap
$LN17@wmap:
; Line 271
	mov	ecx, DWORD PTR _p$[ebp]
	mov	BYTE PTR [ecx], 0
; Line 272
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _outkey$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handle$[ebp]
	push	ecx
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 273
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 274
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@wmap
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN27@wmap:
	DD	1
	DD	$LN26@wmap
$LN26@wmap:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN25@wmap
$LN25@wmap:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
_wmap	ENDP
_TEXT	ENDS
EXTRN	__wassert:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv131 = -28						; size = 4
_s$86028 = -24						; size = 4
_s$86021 = -20						; size = 4
_maxlen$ = -16						; size = 4
_i$ = -12						; size = 4
_p$ = -8						; size = 4
_buf$ = -4						; size = 4
_sesskey$ = 8						; size = 4
_name$ = 12						; size = 4
_mapping$ = 16						; size = 4
_nvals$ = 20						; size = 4
_conf$ = 24						; size = 4
_primary$ = 28						; size = 4
_wprefs	PROC
; Line 389
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 393
	mov	DWORD PTR _i$[ebp], 0
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _maxlen$[ebp], eax
	jmp	SHORT $LN8@wprefs
$LN7@wprefs:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN8@wprefs:
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR _nvals$[ebp]
	jge	SHORT $LN6@wprefs
; Line 395
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _primary$[ebp]
	push	ecx
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _nvals$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mapping$[ebp]
	push	ecx
	call	_val2key
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _s$86021[ebp], eax
; Line 396
	cmp	DWORD PTR _s$86021[ebp], 0
	je	SHORT $LN5@wprefs
; Line 397
	xor	ebx, ebx
	cmp	DWORD PTR _maxlen$[ebp], 0
	setg	bl
	mov	edx, DWORD PTR _s$86021[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _maxlen$[ebp]
	add	eax, ebx
	mov	DWORD PTR _maxlen$[ebp], eax
$LN5@wprefs:
; Line 399
	jmp	SHORT $LN7@wprefs
$LN6@wprefs:
; Line 401
	push	1
	mov	eax, DWORD PTR _maxlen$[ebp]
	add	eax, 1
	push	eax
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax
; Line 402
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR _p$[ebp], ecx
; Line 404
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@wprefs
$LN3@wprefs:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN4@wprefs:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _nvals$[ebp]
	jge	SHORT $LN2@wprefs
; Line 406
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _primary$[ebp]
	push	edx
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _nvals$[ebp]
	push	ecx
	mov	edx, DWORD PTR _mapping$[ebp]
	push	edx
	call	_val2key
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _s$86028[ebp], eax
; Line 407
	cmp	DWORD PTR _s$86028[ebp], 0
	je	SHORT $LN1@wprefs
; Line 408
	mov	eax, DWORD PTR _p$[ebp]
	cmp	eax, DWORD PTR _buf$[ebp]
	jbe	SHORT $LN11@wprefs
	mov	DWORD PTR tv131[ebp], OFFSET $SG86030
	jmp	SHORT $LN12@wprefs
$LN11@wprefs:
	mov	DWORD PTR tv131[ebp], OFFSET $SG86031
$LN12@wprefs:
	mov	ecx, DWORD PTR _s$86028[ebp]
	push	ecx
	mov	edx, DWORD PTR tv131[ebp]
	push	edx
	push	OFFSET $SG86032
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _p$[ebp], eax
$LN1@wprefs:
; Line 410
	jmp	SHORT $LN3@wprefs
$LN2@wprefs:
; Line 412
	mov	ecx, DWORD PTR _p$[ebp]
	sub	ecx, DWORD PTR _buf$[ebp]
	cmp	ecx, DWORD PTR _maxlen$[ebp]
	je	SHORT $LN13@wprefs
	push	412					; 0000019cH
	push	OFFSET $SG86034
	push	OFFSET $SG86035
	call	__wassert
	add	esp, 12					; 0000000cH
$LN13@wprefs:
; Line 413
	mov	eax, DWORD PTR _p$[ebp]
	mov	BYTE PTR [eax], 0
; Line 415
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_write_setting_s
	add	esp, 12					; 0000000cH
; Line 417
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 418
	pop	ebx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_wprefs	ENDP
; Function compile flags: /Odtp /RTCsu
_i$ = -4						; size = 4
_mapping$ = 8						; size = 4
_nmaps$ = 12						; size = 4
_val$ = 16						; size = 4
_val2key PROC
; Line 287
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 289
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@val2key
$LN3@val2key:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@val2key:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _nmaps$[ebp]
	jge	SHORT $LN2@val2key
; Line 290
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _mapping$[ebp]
	mov	ecx, DWORD PTR [eax+edx+4]
	cmp	ecx, DWORD PTR _val$[ebp]
	jne	SHORT $LN1@val2key
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _mapping$[ebp]
	mov	eax, DWORD PTR [eax+edx]
	jmp	SHORT $LN5@val2key
$LN1@val2key:
; Line 291
	jmp	SHORT $LN3@val2key
$LN2@val2key:
	xor	eax, eax
$LN5@val2key:
; Line 292
	mov	esp, ebp
	pop	ebp
	ret	0
_val2key ENDP
_TEXT	ENDS
PUBLIC	_load_open_settings
PUBLIC	_load_settings
EXTRN	_add_session_to_jumplist:PROC
EXTRN	_conf_launchable:PROC
EXTRN	_close_settings_r:PROC
EXTRN	_open_settings_r:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_sesskey$ = -4						; size = 4
_section$ = 8						; size = 4
_conf$ = 12						; size = 4
_load_settings PROC
; Line 657
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 660
	mov	eax, DWORD PTR _section$[ebp]
	push	eax
	call	_open_settings_r
	add	esp, 4
	mov	DWORD PTR _sesskey$[ebp], eax
; Line 661
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_load_open_settings
	add	esp, 8
; Line 662
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_close_settings_r
	add	esp, 4
; Line 664
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_launchable
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@load_setti
; Line 665
	mov	edx, DWORD PTR _section$[ebp]
	push	edx
	call	_add_session_to_jumplist
	add	esp, 4
$LN2@load_setti:
; Line 666
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_load_settings ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_atoi:PROC
EXTRN	_conf_set_int_int:PROC
EXTRN	_sscanf:PROC
EXTRN	_conf_set_str_str:PROC
EXTRN	_default_port:DWORD
EXTRN	_default_protocol:DWORD
EXTRN	_conf_set_str:PROC
EXTRN	_conf_set_int:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$86521 = -152						; size = 4
_q$86489 = -148						; size = 4
_j$86484 = -144						; size = 4
_p$86483 = -140						; size = 4
_buf2$86482 = -136					; size = 4
_buf$86481 = -128					; size = 20
_c2$86459 = -100					; size = 4
_c1$86458 = -88						; size = 4
_c0$86457 = -76						; size = 4
_buf2$86456 = -68					; size = 4
_buf$86455 = -60					; size = 20
_no_remote_qtitle$86375 = -36				; size = 4
_default_kexes$86338 = -32				; size = 4
_i$86302 = -28						; size = 4
_pingsec$86281 = -24					; size = 4
_pingmin$86280 = -20					; size = 4
_b$86274 = -16						; size = 4
_prot$ = -12						; size = 4
_i$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_sesskey$ = 8						; size = 4
_conf$ = 12						; size = 4
_load_open_settings PROC
; Line 669
	push	ebp
	mov	ebp, esp
	sub	esp, 152				; 00000098H
	push	edi
	lea	edi, DWORD PTR [ebp-152]
	mov	ecx, 38					; 00000026H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 673
	push	0
	push	41					; 00000029H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 674
	push	OFFSET $SG86261
	push	19					; 00000013H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_str
	add	esp, 12					; 0000000cH
; Line 675
	push	OFFSET $SG86262
	push	20					; 00000014H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_str
	add	esp, 12					; 0000000cH
; Line 676
	push	OFFSET $SG86263
	push	44					; 0000002cH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_str
	add	esp, 12					; 0000000cH
; Line 678
	push	0
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	OFFSET $SG86264
	push	OFFSET $SG86265
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gpps
	add	esp, 20					; 00000014H
; Line 679
	push	114					; 00000072H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	OFFSET $SG86266
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppfile
	add	esp, 16					; 00000010H
; Line 680
	push	115					; 00000073H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86267
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 681
	push	116					; 00000074H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	-1
	push	OFFSET $SG86268
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 682
	push	117					; 00000075H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	1
	push	OFFSET $SG86269
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 683
	push	118					; 00000076H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	1
	push	OFFSET $SG86270
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 684
	push	119					; 00000077H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	0
	push	OFFSET $SG86271
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 686
	push	OFFSET $SG86272
	push	OFFSET $SG86273
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gpps_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _prot$[ebp], eax
; Line 687
	mov	ecx, DWORD PTR _default_protocol
	push	ecx
	push	2
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 688
	mov	eax, DWORD PTR _default_port
	push	eax
	push	1
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 690
	mov	edx, DWORD PTR _prot$[ebp]
	push	edx
	call	_backend_from_name
	add	esp, 4
	mov	DWORD PTR _b$86274[ebp], eax
; Line 691
	cmp	DWORD PTR _b$86274[ebp], 0
	je	SHORT $LN33@load_open_
; Line 692
	mov	eax, DWORD PTR _b$86274[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	push	2
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 693
	push	1
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _default_port
	push	ecx
	push	OFFSET $SG86276
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
$LN33@load_open_:
; Line 696
	mov	eax, DWORD PTR _prot$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 699
	push	3
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	0
	push	OFFSET $SG86277
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 703
	push	1
	push	OFFSET $SG86278
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$[ebp], eax
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	cdq
	mov	ecx, 3
	idiv	ecx
	push	edx
	push	4
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 704
	push	5
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	1
	push	OFFSET $SG86279
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 708
	push	0
	push	OFFSET $SG86282
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pingmin$86280[ebp], eax
; Line 709
	push	0
	push	OFFSET $SG86283
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pingsec$86281[ebp], eax
; Line 710
	mov	ecx, DWORD PTR _pingmin$86280[ebp]
	imul	ecx, 60					; 0000003cH
	add	ecx, DWORD PTR _pingsec$86281[ebp]
	push	ecx
	push	6
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 712
	push	7
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	1
	push	OFFSET $SG86284
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 713
	push	8
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86285
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 714
	push	46					; 0000002eH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	OFFSET $SG86286
	push	OFFSET $SG86287
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gpps
	add	esp, 20					; 00000014H
; Line 715
	push	47					; 0000002fH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	OFFSET $SG86288
	push	OFFSET $SG86289
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gpps
	add	esp, 20					; 00000014H
; Line 716
	push	48					; 00000030H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	OFFSET $SG86291
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppmap
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN32@load_open_
; Line 719
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN31@load_open_
$LN30@load_open_:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN31@load_open_:
	mov	edx, DWORD PTR _i$[ebp]
	cmp	DWORD PTR _ttymodes[edx*4], 0
	je	SHORT $LN32@load_open_
; Line 720
	push	OFFSET $SG86295
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _ttymodes[eax*4]
	push	ecx
	push	48					; 00000030H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_str_str
	add	esp, 16					; 00000010H
	jmp	SHORT $LN30@load_open_
$LN32@load_open_:
; Line 724
	push	10					; 0000000aH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	OFFSET $SG86296
	push	OFFSET $SG86297
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gpps
	add	esp, 20					; 00000014H
; Line 725
	push	1
	push	OFFSET $SG86298
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$[ebp], eax
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	cdq
	mov	ecx, 3
	idiv	ecx
	push	edx
	push	11					; 0000000bH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 726
	push	12					; 0000000cH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	0
	push	OFFSET $SG86299
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 727
	push	13					; 0000000dH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	-1
	push	OFFSET $SG86300
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 728
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	cmp	eax, -1
	jne	$LN28@load_open_
; Line 730
	push	0
	push	OFFSET $SG86303
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$86302[ebp], eax
; Line 731
	cmp	DWORD PTR _i$86302[ebp], 0
	jne	SHORT $LN27@load_open_
; Line 732
	push	0
	push	13					; 0000000dH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
	jmp	$LN28@load_open_
$LN27@load_open_:
; Line 733
	cmp	DWORD PTR _i$86302[ebp], 1
	jne	SHORT $LN25@load_open_
; Line 734
	push	3
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN28@load_open_
$LN25@load_open_:
; Line 735
	cmp	DWORD PTR _i$86302[ebp], 3
	jne	SHORT $LN23@load_open_
; Line 736
	push	4
	push	13					; 0000000dH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN28@load_open_
$LN23@load_open_:
; Line 737
	cmp	DWORD PTR _i$86302[ebp], 4
	jne	SHORT $LN21@load_open_
; Line 738
	push	5
	push	13					; 0000000dH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 739
	jmp	SHORT $LN28@load_open_
$LN21@load_open_:
; Line 740
	push	5
	push	OFFSET $SG86312
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$86302[ebp], eax
; Line 741
	cmp	DWORD PTR _i$86302[ebp], 5
	jne	SHORT $LN19@load_open_
; Line 742
	push	2
	push	13					; 0000000dH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 743
	jmp	SHORT $LN28@load_open_
$LN19@load_open_:
; Line 744
	push	1
	push	13					; 0000000dH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN28@load_open_:
; Line 747
	push	14					; 0000000eH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	OFFSET $SG86315
	push	OFFSET $SG86316
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gpps
	add	esp, 20					; 00000014H
; Line 748
	push	15					; 0000000fH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	80					; 00000050H
	push	OFFSET $SG86317
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 749
	push	16					; 00000010H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	OFFSET $SG86318
	push	OFFSET $SG86319
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gpps
	add	esp, 20					; 00000014H
; Line 750
	push	17					; 00000011H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	OFFSET $SG86320
	push	OFFSET $SG86321
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gpps
	add	esp, 20					; 00000014H
; Line 752
	push	18					; 00000012H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	OFFSET $SG86322
	push	OFFSET $SG86323
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gpps
	add	esp, 20					; 00000014H
; Line 753
	push	49					; 00000031H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	OFFSET $SG86324
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppmap
	add	esp, 16					; 00000010H
; Line 754
	push	50					; 00000032H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	OFFSET $SG86325
	push	OFFSET $SG86326
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gpps
	add	esp, 20					; 00000014H
; Line 755
	push	51					; 00000033H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	0
	push	OFFSET $SG86327
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 756
	push	52					; 00000034H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	OFFSET $SG86328
	push	OFFSET $SG86329
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gpps
	add	esp, 20					; 00000014H
; Line 757
	push	21					; 00000015H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	0
	push	OFFSET $SG86330
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 758
	push	22					; 00000016H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	0
	push	OFFSET $SG86331
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 759
	push	26					; 0000001aH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	1
	push	OFFSET $SG86332
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 760
	push	27					; 0000001bH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	0
	push	OFFSET $SG86333
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 761
	push	28					; 0000001cH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	0
	push	OFFSET $SG86334
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 762
	push	38					; 00000026H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86335
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 764
	push	29					; 0000001dH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	6
	push	OFFSET _ciphernames
	push	OFFSET $SG86336
	push	OFFSET $SG86337
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gprefs
	add	esp, 28					; 0000001cH
; Line 771
	push	0
	push	OFFSET $SG86339
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	ecx, 2
	sub	ecx, eax
	mov	DWORD PTR _i$[ebp], ecx
; Line 772
	jne	SHORT $LN17@load_open_
; Line 773
	mov	DWORD PTR _default_kexes$86338[ebp], OFFSET $SG86341
; Line 774
	jmp	SHORT $LN16@load_open_
$LN17@load_open_:
; Line 775
	mov	DWORD PTR _default_kexes$86338[ebp], OFFSET $SG86343
$LN16@load_open_:
; Line 777
	push	23					; 00000017H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	5
	push	OFFSET _kexnames
	mov	eax, DWORD PTR _default_kexes$86338[ebp]
	push	eax
	push	OFFSET $SG86344
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gprefs
	add	esp, 28					; 0000001cH
; Line 779
	push	24					; 00000018H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	60					; 0000003cH
	push	OFFSET $SG86345
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 780
	push	25					; 00000019H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	OFFSET $SG86346
	push	OFFSET $SG86347
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gpps
	add	esp, 20					; 00000014H
; Line 782
	push	31					; 0000001fH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	3
	push	OFFSET $SG86348
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 783
	push	9
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	OFFSET $SG86349
	push	OFFSET $SG86350
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gpps
	add	esp, 20					; 00000014H
; Line 784
	push	32					; 00000020H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	0
	push	OFFSET $SG86351
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 785
	push	33					; 00000021H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	0
	push	OFFSET $SG86352
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 786
	push	34					; 00000022H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	1
	push	OFFSET $SG86353
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 787
	push	35					; 00000023H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	0
	push	OFFSET $SG86354
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 788
	push	36					; 00000024H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	1
	push	OFFSET $SG86355
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 789
	push	37					; 00000025H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	1
	push	OFFSET $SG86356
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 792
	push	39					; 00000027H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ngsslibs
	push	edx
	push	OFFSET _gsslibkeywords
	push	OFFSET $SG86357
	push	OFFSET $SG86358
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gprefs
	add	esp, 28					; 0000001cH
; Line 793
	push	40					; 00000028H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	OFFSET $SG86359
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppfile
	add	esp, 16					; 00000010H
; Line 795
	push	43					; 0000002bH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	0
	push	OFFSET $SG86360
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 796
	push	30					; 0000001eH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	OFFSET $SG86361
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppfile
	add	esp, 16					; 00000010H
; Line 797
	push	19					; 00000013H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	OFFSET $SG86362
	push	OFFSET $SG86363
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gpps
	add	esp, 20					; 00000014H
; Line 798
	push	53					; 00000035H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	0
	push	OFFSET $SG86364
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 799
	push	54					; 00000036H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86365
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 800
	push	61					; 0000003dH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	1
	push	OFFSET $SG86366
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 801
	push	62					; 0000003eH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	0
	push	OFFSET $SG86367
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 802
	push	63					; 0000003fH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86368
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 803
	push	65					; 00000041H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	0
	push	OFFSET $SG86369
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 804
	push	64					; 00000040H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	0
	push	OFFSET $SG86370
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 805
	push	66					; 00000042H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86371
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 806
	push	67					; 00000043H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	0
	push	OFFSET $SG86372
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 807
	push	68					; 00000044H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	0
	push	OFFSET $SG86373
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 808
	push	69					; 00000045H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86374
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 811
	push	1
	push	OFFSET $SG86376
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _no_remote_qtitle$86375[ebp], eax
; Line 817
	push	72					; 00000048H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	mov	eax, DWORD PTR _no_remote_qtitle$86375[ebp]
	neg	eax
	sbb	eax, eax
	add	eax, 2
	push	eax
	push	OFFSET $SG86377
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 819
	push	70					; 00000046H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86378
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 820
	push	71					; 00000047H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	0
	push	OFFSET $SG86379
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 821
	push	73					; 00000049H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	0
	push	OFFSET $SG86380
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 822
	push	74					; 0000004aH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86381
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 823
	push	75					; 0000004bH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	0
	push	OFFSET $SG86382
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 824
	push	78					; 0000004eH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	1
	push	OFFSET $SG86383
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 825
	push	79					; 0000004fH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86384
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 826
	push	80					; 00000050H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	0
	push	OFFSET $SG86385
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 827
	push	88					; 00000058H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	0
	push	OFFSET $SG86386
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 828
	push	89					; 00000059H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	1
	push	OFFSET $SG86387
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 829
	push	76					; 0000004cH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	0
	push	OFFSET $SG86388
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 830
	push	77					; 0000004dH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	1
	push	OFFSET $SG86389
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 831
	push	81					; 00000051H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	2
	push	OFFSET $SG86390
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 832
	push	82					; 00000052H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	2
	push	OFFSET $SG86391
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 833
	push	123					; 0000007bH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	OFFSET $SG86392
	push	OFFSET $SG86393
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gpps
	add	esp, 20					; 00000014H
; Line 834
	push	83					; 00000053H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86394
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 835
	push	84					; 00000054H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	0
	push	OFFSET $SG86395
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 836
	push	120					; 00000078H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	0
	push	OFFSET $SG86396
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 837
	push	121					; 00000079H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86397
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 838
	push	122					; 0000007aH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	1
	push	OFFSET $SG86398
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 839
	push	95					; 0000005fH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	0
	push	OFFSET $SG86399
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 840
	push	96					; 00000060H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86400
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 842
	push	97					; 00000061H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	1
	push	OFFSET $SG86401
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 843
	push	98					; 00000062H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	0
	push	OFFSET $SG86402
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 844
	push	103					; 00000067H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	OFFSET $SG86403
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppfile
	add	esp, 16					; 00000010H
; Line 845
	push	99					; 00000063H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	1
	push	OFFSET $SG86404
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 846
	push	100					; 00000064H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	5
	push	OFFSET $SG86405
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 851
	push	2000					; 000007d0H
	push	OFFSET $SG86406
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$[ebp], eax
; Line 856
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	push	101					; 00000065H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 861
	push	5000					; 00001388H
	push	OFFSET $SG86407
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$[ebp], eax
; Line 866
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	push	102					; 00000066H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 867
	push	91					; 0000005bH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	2000					; 000007d0H
	push	OFFSET $SG86408
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 868
	push	92					; 0000005cH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	0
	push	OFFSET $SG86409
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 869
	push	93					; 0000005dH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	1
	push	OFFSET $SG86410
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 870
	push	94					; 0000005eH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86411
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 871
	push	176					; 000000b0H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	0
	push	OFFSET $SG86412
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 872
	push	125					; 0000007dH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	0
	push	OFFSET $SG86413
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 873
	push	126					; 0000007eH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86414
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 874
	push	109					; 0000006dH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	1
	push	OFFSET $SG86415
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 875
	push	90					; 0000005aH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	OFFSET $SG86416
	push	OFFSET $SG86417
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gpps
	add	esp, 20					; 00000014H
; Line 876
	push	110					; 0000006eH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	80					; 00000050H
	push	OFFSET $SG86418
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 877
	push	111					; 0000006fH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	24					; 00000018H
	push	OFFSET $SG86419
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 878
	push	112					; 00000070H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	OFFSET $SG86420
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppfont
	add	esp, 16					; 00000010H
; Line 879
	push	113					; 00000071H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86421
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 880
	push	139					; 0000008bH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	4
	push	OFFSET $SG86422
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 881
	push	129					; 00000081H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	0
	push	OFFSET $SG86423
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 882
	push	130					; 00000082H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86424
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 883
	push	127					; 0000007fH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	1
	push	OFFSET $SG86425
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 884
	push	128					; 00000080H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	1
	push	OFFSET $SG86426
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 885
	push	1
	push	OFFSET $SG86427
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$[ebp], eax
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	push	eax
	push	131					; 00000083H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 887
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN15@load_open_
$LN14@load_open_:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN15@load_open_:
	cmp	DWORD PTR _i$[ebp], 22			; 00000016H
	jge	$LN13@load_open_
; Line 897
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	push	OFFSET $SG86460
	lea	ecx, DWORD PTR _buf$86455[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 898
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR ?defaults@?L@??load_open_settings@@9@9[edx*4]
	push	eax
	lea	ecx, DWORD PTR _buf$86455[ebp]
	push	ecx
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gpps_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _buf2$86456[ebp], eax
; Line 899
	lea	eax, DWORD PTR _c2$86459[ebp]
	push	eax
	lea	ecx, DWORD PTR _c1$86458[ebp]
	push	ecx
	lea	edx, DWORD PTR _c0$86457[ebp]
	push	edx
	push	OFFSET $SG86462
	mov	eax, DWORD PTR _buf2$86456[ebp]
	push	eax
	call	_sscanf
	add	esp, 20					; 00000014H
	cmp	eax, 3
	jne	SHORT $LN12@load_open_
; Line 900
	mov	ecx, DWORD PTR _c0$86457[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 3
	push	edx
	push	132					; 00000084H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int_int
	add	esp, 16					; 00000010H
; Line 901
	mov	ecx, DWORD PTR _c1$86458[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 3
	add	edx, 1
	push	edx
	push	132					; 00000084H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int_int
	add	esp, 16					; 00000010H
; Line 902
	mov	ecx, DWORD PTR _c2$86459[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 3
	add	edx, 2
	push	edx
	push	132					; 00000084H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int_int
	add	esp, 16					; 00000010H
$LN12@load_open_:
; Line 904
	mov	ecx, DWORD PTR _buf2$86456[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 905
	jmp	$LN14@load_open_
$LN13@load_open_:
; Line 906
	push	135					; 00000087H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86463
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 907
	push	136					; 00000088H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	0
	push	OFFSET $SG86464
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 908
	push	133					; 00000085H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	0
	push	OFFSET $SG86465
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 909
	push	134					; 00000086H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86466
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 910
	push	137					; 00000089H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	1
	push	OFFSET $SG86467
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 911
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN11@load_open_
$LN10@load_open_:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 32					; 00000020H
	mov	DWORD PTR _i$[ebp], eax
$LN11@load_open_:
	cmp	DWORD PTR _i$[ebp], 256			; 00000100H
	jge	$LN9@load_open_
; Line 924
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	push	OFFSET $SG86485
	lea	edx, DWORD PTR _buf$86481[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 925
	mov	eax, DWORD PTR _i$[ebp]
	cdq
	and	edx, 31					; 0000001fH
	add	eax, edx
	sar	eax, 5
	mov	eax, DWORD PTR ?defaults@?N@??load_open_settings@@9@9[eax*4]
	push	eax
	lea	ecx, DWORD PTR _buf$86481[ebp]
	push	ecx
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gpps_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _buf2$86482[ebp], eax
; Line 926
	mov	eax, DWORD PTR _buf2$86482[ebp]
	mov	DWORD PTR _p$86483[ebp], eax
; Line 927
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _j$86484[ebp], ecx
	jmp	SHORT $LN8@load_open_
$LN7@load_open_:
	mov	edx, DWORD PTR _j$86484[ebp]
	add	edx, 1
	mov	DWORD PTR _j$86484[ebp], edx
$LN8@load_open_:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 32					; 00000020H
	cmp	DWORD PTR _j$86484[ebp], eax
	jge	$LN6@load_open_
; Line 928
	mov	ecx, DWORD PTR _p$86483[ebp]
	mov	DWORD PTR _q$86489[ebp], ecx
$LN5@load_open_:
; Line 929
	mov	edx, DWORD PTR _p$86483[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN4@load_open_
	mov	ecx, DWORD PTR _p$86483[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 44					; 0000002cH
	je	SHORT $LN4@load_open_
; Line 930
	mov	eax, DWORD PTR _p$86483[ebp]
	add	eax, 1
	mov	DWORD PTR _p$86483[ebp], eax
	jmp	SHORT $LN5@load_open_
$LN4@load_open_:
; Line 931
	mov	ecx, DWORD PTR _p$86483[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 44					; 0000002cH
	jne	SHORT $LN3@load_open_
; Line 932
	mov	eax, DWORD PTR _p$86483[ebp]
	mov	BYTE PTR [eax], 0
	mov	ecx, DWORD PTR _p$86483[ebp]
	add	ecx, 1
	mov	DWORD PTR _p$86483[ebp], ecx
$LN3@load_open_:
; Line 933
	mov	edx, DWORD PTR _q$86489[ebp]
	push	edx
	call	_atoi
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _j$86484[ebp]
	push	eax
	push	138					; 0000008aH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int_int
	add	esp, 16					; 00000010H
; Line 934
	jmp	$LN7@load_open_
$LN6@load_open_:
; Line 935
	mov	edx, DWORD PTR _buf2$86482[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 936
	jmp	$LN10@load_open_
$LN9@load_open_:
; Line 941
	push	140					; 0000008cH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	OFFSET $SG86494
	push	OFFSET $SG86495
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gpps
	add	esp, 20					; 00000014H
; Line 942
	push	141					; 0000008dH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86496
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 943
	push	142					; 0000008eH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	1
	push	OFFSET $SG86497
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 944
	push	124					; 0000007cH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	OFFSET $SG86498
	push	OFFSET $SG86499
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gpps
	add	esp, 20					; 00000014H
; Line 945
	push	143					; 0000008fH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86500
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 946
	push	104					; 00000068H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	1
	push	OFFSET $SG86501
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 947
	push	105					; 00000069H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	0
	push	OFFSET $SG86502
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 948
	push	85					; 00000055H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86503
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 949
	push	86					; 00000056H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	1
	push	OFFSET $SG86504
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 950
	push	87					; 00000057H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	1
	push	OFFSET $SG86505
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 951
	push	106					; 0000006aH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86506
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 952
	push	107					; 0000006bH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	1
	push	OFFSET $SG86507
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 953
	push	108					; 0000006cH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	0
	push	OFFSET $SG86508
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 954
	push	144					; 00000090H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86509
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 955
	push	145					; 00000091H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	OFFSET $SG86510
	push	OFFSET $SG86511
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gpps
	add	esp, 20					; 00000014H
; Line 956
	push	146					; 00000092H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	1
	push	OFFSET $SG86512
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 957
	push	147					; 00000093H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	OFFSET $SG86513
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppfile
	add	esp, 16					; 00000010H
; Line 959
	push	148					; 00000094H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	0
	push	OFFSET $SG86514
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 960
	push	149					; 00000095H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	0
	push	OFFSET $SG86515
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 961
	push	150					; 00000096H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	OFFSET $SG86516
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppmap
	add	esp, 16					; 00000010H
; Line 962
	push	0
	push	OFFSET $SG86517
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$[ebp], eax
	mov	edx, 2
	sub	edx, DWORD PTR _i$[ebp]
	push	edx
	push	151					; 00000097H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 963
	push	0
	push	OFFSET $SG86518
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$[ebp], eax
	mov	edx, 2
	sub	edx, DWORD PTR _i$[ebp]
	push	edx
	push	152					; 00000098H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 964
	push	0
	push	OFFSET $SG86519
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$[ebp], eax
	mov	edx, 2
	sub	edx, DWORD PTR _i$[ebp]
	push	edx
	push	153					; 00000099H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 965
	push	0
	push	OFFSET $SG86520
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$[ebp], eax
	mov	edx, 2
	sub	edx, DWORD PTR _i$[ebp]
	push	edx
	push	160					; 000000a0H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 968
	push	0
	push	OFFSET $SG86522
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$86521[ebp], eax
	mov	edx, 2
	sub	edx, DWORD PTR _i$86521[ebp]
	push	edx
	push	154					; 0000009aH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 969
	mov	ecx, 2
	sub	ecx, DWORD PTR _i$86521[ebp]
	cmp	ecx, 2
	jne	SHORT $LN2@load_open_
; Line 970
	push	0
	push	OFFSET $SG86524
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$86521[ebp], eax
; Line 971
	cmp	DWORD PTR _i$86521[ebp], 1
	jne	SHORT $LN2@load_open_
; Line 972
	push	0
	push	154					; 0000009aH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN2@load_open_:
; Line 975
	push	0
	push	OFFSET $SG86526
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$[ebp], eax
	mov	edx, 2
	sub	edx, DWORD PTR _i$[ebp]
	push	edx
	push	155					; 0000009bH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 976
	push	0
	push	OFFSET $SG86527
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$[ebp], eax
	mov	edx, 2
	sub	edx, DWORD PTR _i$[ebp]
	push	edx
	push	156					; 0000009cH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 977
	push	0
	push	OFFSET $SG86528
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$[ebp], eax
	mov	edx, 2
	sub	edx, DWORD PTR _i$[ebp]
	push	edx
	push	157					; 0000009dH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 978
	push	0
	push	OFFSET $SG86529
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$[ebp], eax
	mov	edx, 2
	sub	edx, DWORD PTR _i$[ebp]
	push	edx
	push	158					; 0000009eH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 979
	push	0
	push	OFFSET $SG86530
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$[ebp], eax
	mov	edx, 2
	sub	edx, DWORD PTR _i$[ebp]
	push	edx
	push	159					; 0000009fH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 980
	push	0
	push	OFFSET $SG86531
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$[ebp], eax
	mov	edx, 2
	sub	edx, DWORD PTR _i$[ebp]
	push	edx
	push	161					; 000000a1H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 981
	push	0
	push	OFFSET $SG86532
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$[ebp], eax
	mov	edx, 2
	sub	edx, DWORD PTR _i$[ebp]
	push	edx
	push	162					; 000000a2H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 982
	push	0
	push	163					; 000000a3H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 983
	push	168					; 000000a8H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	1
	push	OFFSET $SG86533
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 984
	push	169					; 000000a9H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	1
	push	OFFSET $SG86534
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 985
	push	170					; 000000aaH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	0
	push	OFFSET $SG86535
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 986
	push	171					; 000000abH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86536
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 987
	push	172					; 000000acH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	OFFSET $SG86537
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppfont
	add	esp, 16					; 00000010H
; Line 988
	push	173					; 000000adH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	OFFSET $SG86538
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppfont
	add	esp, 16					; 00000010H
; Line 989
	push	174					; 000000aeH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	OFFSET $SG86539
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppfont
	add	esp, 16					; 00000010H
; Line 990
	push	175					; 000000afH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	1
	push	OFFSET $SG86540
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 991
	push	55					; 00000037H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	OFFSET $SG86541
	push	OFFSET $SG86542
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gpps
	add	esp, 20					; 00000014H
; Line 992
	push	56					; 00000038H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	9600					; 00002580H
	push	OFFSET $SG86543
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 993
	push	57					; 00000039H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	8
	push	OFFSET $SG86544
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 994
	push	58					; 0000003aH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	2
	push	OFFSET $SG86545
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 995
	push	59					; 0000003bH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86546
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 996
	push	60					; 0000003cH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	1
	push	OFFSET $SG86547
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 997
	push	177					; 000000b1H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	OFFSET $SG86548
	push	OFFSET $SG86549
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gpps
	add	esp, 20					; 00000014H
; Line 998
	push	164					; 000000a4H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	0
	push	OFFSET $SG86550
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppi
	add	esp, 20					; 00000014H
; Line 999
	push	165					; 000000a5H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	1
	push	OFFSET $SG86551
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 1000
	push	166					; 000000a6H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	push	1
	push	OFFSET $SG86552
	mov	ecx, DWORD PTR _sesskey$[ebp]
	push	ecx
	call	_gppi
	add	esp, 20					; 00000014H
; Line 1001
	push	167					; 000000a7H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	push	OFFSET $SG86553
	mov	eax, DWORD PTR _sesskey$[ebp]
	push	eax
	call	_gppmap
	add	esp, 16					; 00000010H
; Line 1002
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN42@load_open_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 152				; 00000098H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN42@load_open_:
	DD	5
	DD	$LN41@load_open_
$LN41@load_open_:
	DD	-60					; ffffffc4H
	DD	20					; 00000014H
	DD	$LN36@load_open_
	DD	-76					; ffffffb4H
	DD	4
	DD	$LN37@load_open_
	DD	-88					; ffffffa8H
	DD	4
	DD	$LN38@load_open_
	DD	-100					; ffffff9cH
	DD	4
	DD	$LN39@load_open_
	DD	-128					; ffffff80H
	DD	20					; 00000014H
	DD	$LN40@load_open_
$LN40@load_open_:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN39@load_open_:
	DB	99					; 00000063H
	DB	50					; 00000032H
	DB	0
$LN38@load_open_:
	DB	99					; 00000063H
	DB	49					; 00000031H
	DB	0
$LN37@load_open_:
	DB	99					; 00000063H
	DB	48					; 00000030H
	DB	0
$LN36@load_open_:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_load_open_settings ENDP
_TEXT	ENDS
EXTRN	_platform_default_s:PROC
EXTRN	_read_setting_s:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv74 = -8						; size = 4
_ret$ = -4						; size = 4
_handle$ = 8						; size = 4
_name$ = 12						; size = 4
_def$ = 16						; size = 4
_gpps_raw PROC
; Line 87
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 88
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handle$[ebp]
	push	ecx
	call	_read_setting_s
	add	esp, 8
	mov	DWORD PTR _ret$[ebp], eax
; Line 89
	cmp	DWORD PTR _ret$[ebp], 0
	jne	SHORT $LN2@gpps_raw
; Line 90
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	_platform_default_s
	add	esp, 4
	mov	DWORD PTR _ret$[ebp], eax
$LN2@gpps_raw:
; Line 91
	cmp	DWORD PTR _ret$[ebp], 0
	jne	SHORT $LN1@gpps_raw
; Line 92
	cmp	DWORD PTR _def$[ebp], 0
	je	SHORT $LN5@gpps_raw
	mov	eax, DWORD PTR _def$[ebp]
	push	eax
	call	_dupstr
	add	esp, 4
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN6@gpps_raw
$LN5@gpps_raw:
	mov	DWORD PTR tv74[ebp], 0
$LN6@gpps_raw:
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR _ret$[ebp], ecx
$LN1@gpps_raw:
; Line 93
	mov	eax, DWORD PTR _ret$[ebp]
; Line 94
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_gpps_raw ENDP
; Function compile flags: /Odtp /RTCsu
_val$ = -4						; size = 4
_handle$ = 8						; size = 4
_name$ = 12						; size = 4
_def$ = 16						; size = 4
_conf$ = 20						; size = 4
_primary$ = 24						; size = 4
_gpps	PROC
; Line 98
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 99
	mov	eax, DWORD PTR _def$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _handle$[ebp]
	push	edx
	call	_gpps_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _val$[ebp], eax
; Line 100
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _primary$[ebp]
	push	ecx
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_str
	add	esp, 12					; 0000000cH
; Line 101
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 102
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_gpps	ENDP
_TEXT	ENDS
EXTRN	_fontspec_free:PROC
EXTRN	_conf_set_fontspec:PROC
EXTRN	_platform_default_fontspec:PROC
EXTRN	_read_setting_fontspec:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_result$ = -4						; size = 4
_handle$ = 8						; size = 4
_name$ = 12						; size = 4
_conf$ = 16						; size = 4
_primary$ = 20						; size = 4
_gppfont PROC
; Line 110
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 111
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handle$[ebp]
	push	ecx
	call	_read_setting_fontspec
	add	esp, 8
	mov	DWORD PTR _result$[ebp], eax
; Line 112
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN1@gppfont
; Line 113
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	_platform_default_fontspec
	add	esp, 4
	mov	DWORD PTR _result$[ebp], eax
$LN1@gppfont:
; Line 114
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _primary$[ebp]
	push	ecx
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_fontspec
	add	esp, 12					; 0000000cH
; Line 115
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_fontspec_free
	add	esp, 4
; Line 116
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_gppfont ENDP
_TEXT	ENDS
EXTRN	_filename_free:PROC
EXTRN	_conf_set_filename:PROC
EXTRN	_platform_default_filename:PROC
EXTRN	_read_setting_filename:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_result$ = -4						; size = 4
_handle$ = 8						; size = 4
_name$ = 12						; size = 4
_conf$ = 16						; size = 4
_primary$ = 20						; size = 4
_gppfile PROC
; Line 118
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 119
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handle$[ebp]
	push	ecx
	call	_read_setting_filename
	add	esp, 8
	mov	DWORD PTR _result$[ebp], eax
; Line 120
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN1@gppfile
; Line 121
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	_platform_default_filename
	add	esp, 4
	mov	DWORD PTR _result$[ebp], eax
$LN1@gppfile:
; Line 122
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _primary$[ebp]
	push	ecx
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_filename
	add	esp, 12					; 0000000cH
; Line 123
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_filename_free
	add	esp, 4
; Line 124
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_gppfile ENDP
_TEXT	ENDS
EXTRN	_read_setting_i:PROC
EXTRN	_platform_default_i:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_handle$ = 8						; size = 4
_name$ = 12						; size = 4
_def$ = 16						; size = 4
_gppi_raw PROC
; Line 127
	push	ebp
	mov	ebp, esp
; Line 128
	mov	eax, DWORD PTR _def$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	call	_platform_default_i
	add	esp, 8
	mov	DWORD PTR _def$[ebp], eax
; Line 129
	mov	edx, DWORD PTR _def$[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handle$[ebp]
	push	ecx
	call	_read_setting_i
	add	esp, 12					; 0000000cH
; Line 130
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_gppi_raw ENDP
; Function compile flags: /Odtp /RTCsu
_handle$ = 8						; size = 4
_name$ = 12						; size = 4
_def$ = 16						; size = 4
_conf$ = 20						; size = 4
_primary$ = 24						; size = 4
_gppi	PROC
; Line 133
	push	ebp
	mov	ebp, esp
; Line 134
	mov	eax, DWORD PTR _def$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _handle$[ebp]
	push	edx
	call	_gppi_raw
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _primary$[ebp]
	push	eax
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 135
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_gppi	ENDP
_TEXT	ENDS
EXTRN	_conf_del_str_str:PROC
EXTRN	_conf_get_str_nthstrkey:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_newkey$85859 = -28					; size = 4
_c$85851 = -24						; size = 4
_val$ = -20						; size = 4
_key$ = -16						; size = 4
_q$ = -12						; size = 4
_p$ = -8						; size = 4
_buf$ = -4						; size = 4
_handle$ = 8						; size = 4
_name$ = 12						; size = 4
_conf$ = 16						; size = 4
_primary$ = 20						; size = 4
_gppmap	PROC
; Line 145
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
$LN14@gppmap:
; Line 151
	push	0
	mov	eax, DWORD PTR _primary$[ebp]
	push	eax
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_str_nthstrkey
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _key$[ebp], eax
	cmp	DWORD PTR _key$[ebp], 0
	je	SHORT $LN13@gppmap
; Line 152
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	eax, DWORD PTR _primary$[ebp]
	push	eax
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_del_str_str
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN14@gppmap
$LN13@gppmap:
; Line 158
	push	0
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR _handle$[ebp]
	push	eax
	call	_gpps_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _buf$[ebp], eax
; Line 159
	cmp	DWORD PTR _buf$[ebp], 0
	jne	SHORT $LN12@gppmap
; Line 160
	xor	eax, eax
	jmp	$LN15@gppmap
$LN12@gppmap:
; Line 162
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR _p$[ebp], ecx
$LN11@gppmap:
; Line 163
	mov	edx, DWORD PTR _p$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	$LN10@gppmap
; Line 164
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR _q$[ebp], ecx
; Line 165
	mov	DWORD PTR _val$[ebp], 0
$LN9@gppmap:
; Line 166
	mov	edx, DWORD PTR _p$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN8@gppmap
	mov	ecx, DWORD PTR _p$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 44					; 0000002cH
	je	SHORT $LN8@gppmap
; Line 167
	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _c$85851[ebp], ecx
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 1
	mov	DWORD PTR _p$[ebp], edx
; Line 168
	cmp	DWORD PTR _c$85851[ebp], 61		; 0000003dH
	jne	SHORT $LN7@gppmap
; Line 169
	mov	DWORD PTR _c$85851[ebp], 0
$LN7@gppmap:
; Line 170
	cmp	DWORD PTR _c$85851[ebp], 92		; 0000005cH
	jne	SHORT $LN6@gppmap
; Line 171
	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _c$85851[ebp], ecx
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 1
	mov	DWORD PTR _p$[ebp], edx
$LN6@gppmap:
; Line 172
	mov	eax, DWORD PTR _q$[ebp]
	mov	cl, BYTE PTR _c$85851[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _q$[ebp]
	add	edx, 1
	mov	DWORD PTR _q$[ebp], edx
; Line 173
	cmp	DWORD PTR _c$85851[ebp], 0
	jne	SHORT $LN5@gppmap
; Line 174
	mov	eax, DWORD PTR _q$[ebp]
	mov	DWORD PTR _val$[ebp], eax
$LN5@gppmap:
; Line 175
	jmp	SHORT $LN9@gppmap
$LN8@gppmap:
; Line 176
	mov	ecx, DWORD PTR _p$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 44					; 0000002cH
	jne	SHORT $LN4@gppmap
; Line 177
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
$LN4@gppmap:
; Line 178
	cmp	DWORD PTR _val$[ebp], 0
	jne	SHORT $LN3@gppmap
; Line 179
	mov	ecx, DWORD PTR _q$[ebp]
	mov	DWORD PTR _val$[ebp], ecx
$LN3@gppmap:
; Line 180
	mov	edx, DWORD PTR _q$[ebp]
	mov	BYTE PTR [edx], 0
; Line 182
	cmp	DWORD PTR _primary$[ebp], 150		; 00000096H
	jne	SHORT $LN2@gppmap
	push	68					; 00000044H
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_strchr
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@gppmap
; Line 194
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_dupstr
	add	esp, 4
	mov	DWORD PTR _newkey$85859[ebp], eax
; Line 195
	push	68					; 00000044H
	mov	edx, DWORD PTR _newkey$85859[ebp]
	push	edx
	call	_strchr
	add	esp, 8
	mov	BYTE PTR [eax], 76			; 0000004cH
; Line 196
	push	OFFSET $SG85860
	mov	eax, DWORD PTR _newkey$85859[ebp]
	push	eax
	mov	ecx, DWORD PTR _primary$[ebp]
	push	ecx
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_str_str
	add	esp, 16					; 00000010H
; Line 197
	mov	eax, DWORD PTR _newkey$85859[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 198
	jmp	SHORT $LN1@gppmap
$LN2@gppmap:
; Line 199
	mov	ecx, DWORD PTR _val$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _primary$[ebp]
	push	eax
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_str_str
	add	esp, 16					; 00000010H
$LN1@gppmap:
; Line 201
	jmp	$LN11@gppmap
$LN10@gppmap:
; Line 202
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 204
	mov	eax, 1
$LN15@gppmap:
; Line 205
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_gppmap	ENDP
; Function compile flags: /Odtp /RTCsu
tv188 = -44						; size = 4
tv167 = -40						; size = 4
_seen$ = -36						; size = 4
_pos$ = -32						; size = 4
_v$ = -28						; size = 4
_n$ = -24						; size = 4
_j$ = -20						; size = 4
_i$ = -16						; size = 4
_q$ = -12						; size = 4
_p$ = -8						; size = 4
_commalist$ = -4					; size = 4
_sesskey$ = 8						; size = 4
_name$ = 12						; size = 4
_def$ = 16						; size = 4
_mapping$ = 20						; size = 4
_nvals$ = 24						; size = 4
_conf$ = 28						; size = 4
_primary$ = 32						; size = 4
_gprefs	PROC
; Line 303
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	edi
	lea	edi, DWORD PTR [ebp-44]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 307
	mov	DWORD PTR _seen$[ebp], 0
; Line 312
	mov	eax, DWORD PTR _def$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sesskey$[ebp]
	push	edx
	call	_gpps_raw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _commalist$[ebp], eax
; Line 317
	mov	DWORD PTR _n$[ebp], 0
; Line 318
	mov	eax, DWORD PTR _commalist$[ebp]
	mov	DWORD PTR _p$[ebp], eax
$LN25@gprefs:
; Line 319
	mov	ecx, 1
	test	ecx, ecx
	je	$LN24@gprefs
$LN23@gprefs:
; Line 320
	mov	edx, DWORD PTR _p$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN22@gprefs
	mov	ecx, DWORD PTR _p$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 44					; 0000002cH
	jne	SHORT $LN22@gprefs
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
	jmp	SHORT $LN23@gprefs
$LN22@gprefs:
; Line 321
	mov	ecx, DWORD PTR _p$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	jne	SHORT $LN21@gprefs
; Line 322
	jmp	$LN24@gprefs
$LN21@gprefs:
; Line 324
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _q$[ebp], eax
$LN20@gprefs:
; Line 325
	mov	ecx, DWORD PTR _p$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN19@gprefs
	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 44					; 0000002cH
	je	SHORT $LN19@gprefs
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 1
	mov	DWORD PTR _p$[ebp], edx
	jmp	SHORT $LN20@gprefs
$LN19@gprefs:
; Line 326
	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN18@gprefs
	mov	edx, DWORD PTR _p$[ebp]
	mov	BYTE PTR [edx], 0
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
$LN18@gprefs:
; Line 328
	mov	ecx, DWORD PTR _q$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nvals$[ebp]
	push	edx
	mov	eax, DWORD PTR _mapping$[ebp]
	push	eax
	call	_key2val
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _v$[ebp], eax
; Line 329
	cmp	DWORD PTR _v$[ebp], -1
	je	SHORT $LN17@gprefs
	mov	edx, 1
	mov	ecx, DWORD PTR _v$[ebp]
	shl	edx, cl
	and	edx, DWORD PTR _seen$[ebp]
	jne	SHORT $LN17@gprefs
; Line 330
	mov	eax, 1
	mov	ecx, DWORD PTR _v$[ebp]
	shl	eax, cl
	or	eax, DWORD PTR _seen$[ebp]
	mov	DWORD PTR _seen$[ebp], eax
; Line 331
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	mov	edx, DWORD PTR _n$[ebp]
	push	edx
	mov	eax, DWORD PTR _primary$[ebp]
	push	eax
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int_int
	add	esp, 16					; 00000010H
; Line 332
	mov	edx, DWORD PTR _n$[ebp]
	add	edx, 1
	mov	DWORD PTR _n$[ebp], edx
$LN17@gprefs:
; Line 334
	jmp	$LN25@gprefs
$LN24@gprefs:
; Line 336
	mov	eax, DWORD PTR _commalist$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
$LN16@gprefs:
; Line 344
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	ecx, DWORD PTR _nvals$[ebp]
	jge	$LN26@gprefs
; Line 345
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN14@gprefs
$LN13@gprefs:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN14@gprefs:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _nvals$[ebp]
	jge	$LN12@gprefs
; Line 346
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _mapping$[ebp]
	cmp	DWORD PTR [edx+ecx+4], 32		; 00000020H
	jl	SHORT $LN28@gprefs
	push	346					; 0000015aH
	push	OFFSET $SG85984
	push	OFFSET $SG85985
	call	__wassert
	add	esp, 12					; 0000000cH
$LN28@gprefs:
; Line 348
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _mapping$[ebp]
	mov	eax, 1
	mov	ecx, DWORD PTR [edx+ecx+4]
	shl	eax, cl
	and	eax, DWORD PTR _seen$[ebp]
	jne	$LN11@gprefs
; Line 352
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _mapping$[ebp]
	cmp	DWORD PTR [edx+ecx+8], -1
	je	SHORT $LN10@gprefs
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _mapping$[ebp]
	mov	edx, 1
	mov	ecx, DWORD PTR [ecx+eax+8]
	shl	edx, cl
	and	edx, DWORD PTR _seen$[ebp]
	jne	SHORT $LN10@gprefs
; Line 353
	jmp	$LN13@gprefs
$LN10@gprefs:
; Line 359
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _mapping$[ebp]
	cmp	DWORD PTR [ecx+eax+8], -1
	jne	SHORT $LN9@gprefs
; Line 360
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _mapping$[ebp]
	cmp	DWORD PTR [eax+edx+12], 0
	jge	SHORT $LN29@gprefs
	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR tv167[ebp], ecx
	jmp	SHORT $LN30@gprefs
$LN29@gprefs:
	mov	DWORD PTR tv167[ebp], 0
$LN30@gprefs:
	mov	edx, DWORD PTR tv167[ebp]
	mov	DWORD PTR _pos$[ebp], edx
; Line 361
	jmp	$LN8@gprefs
$LN9@gprefs:
; Line 362
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN7@gprefs
$LN6@gprefs:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN7@gprefs:
	mov	ecx, DWORD PTR _j$[ebp]
	cmp	ecx, DWORD PTR _n$[ebp]
	jge	SHORT $LN5@gprefs
; Line 364
	mov	edx, DWORD PTR _j$[ebp]
	push	edx
	mov	eax, DWORD PTR _primary$[ebp]
	push	eax
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	mov	ecx, DWORD PTR _mapping$[ebp]
	cmp	eax, DWORD PTR [ecx+edx+8]
	jne	SHORT $LN4@gprefs
; Line 365
	jmp	SHORT $LN5@gprefs
$LN4@gprefs:
; Line 366
	jmp	SHORT $LN6@gprefs
$LN5@gprefs:
	mov	edx, DWORD PTR _j$[ebp]
	cmp	edx, DWORD PTR _n$[ebp]
	jl	SHORT $LN31@gprefs
	push	366					; 0000016eH
	push	OFFSET $SG85995
	push	OFFSET $SG85996
	call	__wassert
	add	esp, 12					; 0000000cH
$LN31@gprefs:
; Line 367
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _mapping$[ebp]
	cmp	DWORD PTR [edx+ecx+12], 0
	jge	SHORT $LN32@gprefs
	mov	eax, DWORD PTR _j$[ebp]
	mov	DWORD PTR tv188[ebp], eax
	jmp	SHORT $LN33@gprefs
$LN32@gprefs:
	mov	ecx, DWORD PTR _j$[ebp]
	add	ecx, 1
	mov	DWORD PTR tv188[ebp], ecx
$LN33@gprefs:
	mov	edx, DWORD PTR tv188[ebp]
	mov	DWORD PTR _pos$[ebp], edx
$LN8@gprefs:
; Line 373
	mov	eax, DWORD PTR _n$[ebp]
	sub	eax, 1
	mov	DWORD PTR _j$[ebp], eax
	jmp	SHORT $LN3@gprefs
$LN2@gprefs:
	mov	ecx, DWORD PTR _j$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _j$[ebp], ecx
$LN3@gprefs:
	mov	edx, DWORD PTR _j$[ebp]
	cmp	edx, DWORD PTR _pos$[ebp]
	jl	SHORT $LN1@gprefs
; Line 375
	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _primary$[ebp]
	push	ecx
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _primary$[ebp]
	push	ecx
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int_int
	add	esp, 16					; 00000010H
	jmp	SHORT $LN2@gprefs
$LN1@gprefs:
; Line 376
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _mapping$[ebp]
	mov	edx, DWORD PTR [ecx+eax+4]
	push	edx
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _primary$[ebp]
	push	ecx
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int_int
	add	esp, 16					; 00000010H
; Line 377
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
$LN11@gprefs:
; Line 379
	jmp	$LN13@gprefs
$LN12@gprefs:
; Line 380
	jmp	$LN16@gprefs
$LN26@gprefs:
; Line 381
	pop	edi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_gprefs	ENDP
; Function compile flags: /Odtp /RTCsu
_i$ = -4						; size = 4
_mapping$ = 8						; size = 4
_nmaps$ = 12						; size = 4
_key$ = 16						; size = 4
_key2val PROC
; Line 278
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 280
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@key2val
$LN3@key2val:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@key2val:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _nmaps$[ebp]
	jge	SHORT $LN2@key2val
; Line 281
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _mapping$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@key2val
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _mapping$[ebp]
	mov	eax, DWORD PTR [ecx+eax+4]
	jmp	SHORT $LN5@key2val
$LN1@key2val:
; Line 282
	jmp	SHORT $LN3@key2val
$LN2@key2val:
	or	eax, -1
$LN5@key2val:
; Line 283
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_key2val ENDP
_TEXT	ENDS
PUBLIC	_do_defaults
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_session$ = 8						; size = 4
_conf$ = 12						; size = 4
_do_defaults PROC
; Line 1005
	push	ebp
	mov	ebp, esp
; Line 1006
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _session$[ebp]
	push	ecx
	call	_load_settings
	add	esp, 8
; Line 1007
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_do_defaults ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_get_sesslist
EXTRN	_qsort:PROC
EXTRN	_enum_settings_finish:PROC
EXTRN	_strcpy:PROC
EXTRN	_saferealloc:PROC
EXTRN	_enum_settings_next:PROC
EXTRN	_enum_settings_start:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_len$86593 = -2088					; size = 4
_handle$ = -2084					; size = 4
_ret$ = -2080						; size = 4
_p$ = -2076						; size = 4
_i$ = -2072						; size = 4
_bufsize$ = -2068					; size = 4
_buflen$ = -2064					; size = 4
_otherbuf$ = -2056					; size = 2048
__$ArrayPad$ = -4					; size = 4
_list$ = 8						; size = 4
_allocate$ = 12						; size = 4
_get_sesslist PROC
; Line 1030
	push	ebp
	mov	ebp, esp
	sub	esp, 2088				; 00000828H
	push	edi
	lea	edi, DWORD PTR [ebp-2088]
	mov	ecx, 522				; 0000020aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1036
	cmp	DWORD PTR _allocate$[ebp], 0
	je	$LN18@get_sessli
; Line 1038
	mov	DWORD PTR _bufsize$[ebp], 0
	mov	eax, DWORD PTR _bufsize$[ebp]
	mov	DWORD PTR _buflen$[ebp], eax
; Line 1039
	mov	ecx, DWORD PTR _list$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 1040
	call	_enum_settings_start
	mov	DWORD PTR _handle$[ebp], eax
	cmp	DWORD PTR _handle$[ebp], 0
	je	$LN17@get_sessli
$LN16@get_sessli:
; Line 1042
	push	2048					; 00000800H
	lea	edx, DWORD PTR _otherbuf$[ebp]
	push	edx
	mov	eax, DWORD PTR _handle$[ebp]
	push	eax
	call	_enum_settings_next
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$[ebp], eax
; Line 1043
	cmp	DWORD PTR _ret$[ebp], 0
	je	$LN15@get_sessli
; Line 1044
	lea	ecx, DWORD PTR _otherbuf$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _len$86593[ebp], eax
; Line 1045
	mov	edx, DWORD PTR _buflen$[ebp]
	add	edx, DWORD PTR _len$86593[ebp]
	cmp	DWORD PTR _bufsize$[ebp], edx
	jge	SHORT $LN12@get_sessli
; Line 1046
	mov	eax, DWORD PTR _len$86593[ebp]
	mov	ecx, DWORD PTR _buflen$[ebp]
	lea	edx, DWORD PTR [ecx+eax+2048]
	mov	DWORD PTR _bufsize$[ebp], edx
; Line 1047
	push	1
	mov	eax, DWORD PTR _bufsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _list$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN12@get_sessli:
; Line 1049
	lea	edx, DWORD PTR _otherbuf$[ebp]
	push	edx
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, DWORD PTR _buflen$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 1050
	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, DWORD PTR _buflen$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _buflen$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _buflen$[ebp], edx
$LN15@get_sessli:
; Line 1052
	cmp	DWORD PTR _ret$[ebp], 0
	jne	$LN16@get_sessli
; Line 1053
	mov	eax, DWORD PTR _handle$[ebp]
	push	eax
	call	_enum_settings_finish
	add	esp, 4
$LN17@get_sessli:
; Line 1055
	push	1
	mov	ecx, DWORD PTR _buflen$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _list$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1056
	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _buflen$[ebp]
	mov	BYTE PTR [eax+ecx], 0
; Line 1064
	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _p$[ebp], eax
; Line 1065
	mov	ecx, DWORD PTR _list$[ebp]
	mov	DWORD PTR [ecx], 1
$LN11@get_sessli:
; Line 1066
	mov	edx, DWORD PTR _p$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN10@get_sessli
; Line 1067
	push	OFFSET $SG86605
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN8@get_sessli
; Line 1068
	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _list$[ebp]
	mov	DWORD PTR [ecx], eax
$LN8@get_sessli:
; Line 1069
	mov	edx, DWORD PTR _p$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN7@get_sessli
; Line 1070
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 1
	mov	DWORD PTR _p$[ebp], ecx
	jmp	SHORT $LN8@get_sessli
$LN7@get_sessli:
; Line 1071
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 1
	mov	DWORD PTR _p$[ebp], edx
; Line 1072
	jmp	SHORT $LN11@get_sessli
$LN10@get_sessli:
; Line 1074
	push	4
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	push	ecx
	call	_safemalloc
	add	esp, 8
	mov	edx, DWORD PTR _list$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 1075
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], OFFSET $SG86611
; Line 1076
	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _p$[ebp], eax
; Line 1077
	mov	DWORD PTR _i$[ebp], 1
$LN6@get_sessli:
; Line 1078
	mov	ecx, DWORD PTR _p$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN5@get_sessli
; Line 1079
	push	OFFSET $SG86616
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@get_sessli
; Line 1080
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+eax*4], ecx
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN3@get_sessli:
; Line 1081
	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@get_sessli
; Line 1082
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 1
	mov	DWORD PTR _p$[ebp], edx
	jmp	SHORT $LN3@get_sessli
$LN2@get_sessli:
; Line 1083
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
; Line 1084
	jmp	SHORT $LN6@get_sessli
$LN5@get_sessli:
; Line 1086
	push	OFFSET _sessioncmp
	push	4
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_qsort
	add	esp, 16					; 00000010H
; Line 1087
	jmp	SHORT $LN19@get_sessli
$LN18@get_sessli:
; Line 1088
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_safefree
	add	esp, 4
; Line 1089
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 1090
	mov	edx, DWORD PTR _list$[ebp]
	mov	DWORD PTR [edx+8], 0
; Line 1091
	mov	eax, DWORD PTR _list$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN19@get_sessli:
; Line 1093
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@get_sessli
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 2088				; 00000828H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN23@get_sessli:
	DD	1
	DD	$LN22@get_sessli
$LN22@get_sessli:
	DD	-2056					; fffff7f8H
	DD	2048					; 00000800H
	DD	$LN21@get_sessli
$LN21@get_sessli:
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_get_sesslist ENDP
; Function compile flags: /Odtp /RTCsu
_b$ = -8						; size = 4
_a$ = -4						; size = 4
_av$ = 8						; size = 4
_bv$ = 12						; size = 4
_sessioncmp PROC
; Line 1010
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1011
	mov	eax, DWORD PTR _av$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _a$[ebp], ecx
; Line 1012
	mov	edx, DWORD PTR _bv$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _b$[ebp], eax
; Line 1018
	push	OFFSET $SG86570
	mov	ecx, DWORD PTR _a$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@sessioncmp
; Line 1019
	or	eax, -1
	jmp	SHORT $LN3@sessioncmp
$LN2@sessioncmp:
; Line 1020
	push	OFFSET $SG86572
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@sessioncmp
; Line 1021
	mov	eax, 1
	jmp	SHORT $LN3@sessioncmp
$LN1@sessioncmp:
; Line 1026
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
$LN3@sessioncmp:
; Line 1027
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sessioncmp ENDP
_TEXT	ENDS
END

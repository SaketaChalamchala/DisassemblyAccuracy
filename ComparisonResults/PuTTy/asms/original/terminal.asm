; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\Putty\terminal.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_EMPTY_WINDOW_TITLE
PUBLIC	_sco2ansicolour
PUBLIC	_sel_nl
_BSS	SEGMENT
$SG85778 DB	01H DUP (?)
$SG88609 DB	01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
_sco2ansicolour DB 00H
	DB	04H
	DB	02H
	DB	06H
	DB	01H
	DB	05H
	DB	03H
	DB	07H
_sel_nl	DW	0dH
	DW	0aH
	ORG $+4
?ucs_words@?1??wordtype@@9@9 DD 080H			; `wordtype'::`2'::ucs_words
	DD	0a0H
	DD	00H
	DD	0a1H
	DD	0bfH
	DD	01H
	DD	0d7H
	DD	0d7H
	DD	01H
	DD	0f7H
	DD	0f7H
	DD	01H
	DD	037eH
	DD	037eH
	DD	01H
	DD	0387H
	DD	0387H
	DD	01H
	DD	055aH
	DD	055fH
	DD	01H
	DD	0589H
	DD	0589H
	DD	01H
	DD	0700H
	DD	070dH
	DD	01H
	DD	0104aH
	DD	0104fH
	DD	01H
	DD	010fbH
	DD	010fbH
	DD	01H
	DD	01361H
	DD	01368H
	DD	01H
	DD	0166dH
	DD	0166eH
	DD	01H
	DD	017d4H
	DD	017dcH
	DD	01H
	DD	01800H
	DD	0180aH
	DD	01H
	DD	02000H
	DD	0200aH
	DD	00H
	DD	02070H
	DD	0207fH
	DD	02H
	DD	02080H
	DD	0208fH
	DD	02H
	DD	0200bH
	DD	027ffH
	DD	01H
	DD	03000H
	DD	03000H
	DD	00H
	DD	03001H
	DD	03020H
	DD	01H
	DD	0303fH
	DD	0309fH
	DD	03H
	DD	030a0H
	DD	030ffH
	DD	03H
	DD	03300H
	DD	09fffH
	DD	03H
	DD	0ac00H
	DD	0d7a3H
	DD	03H
	DD	0f900H
	DD	0faffH
	DD	03H
	DD	0fe30H
	DD	0fe6bH
	DD	01H
	DD	0ff00H
	DD	0ff0fH
	DD	01H
	DD	0ff1aH
	DD	0ff20H
	DD	01H
	DD	0ff3bH
	DD	0ff40H
	DD	01H
	DD	0ff5bH
	DD	0ff64H
	DD	01H
	DD	0fff0H
	DD	0ffffH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
_DATA	SEGMENT
_EMPTY_WINDOW_TITLE DD FLAT:$SG85778
$SG85860 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG85861 DB	'c', 00H, 'o', 00H, 'l', 00H, ' ', 00H, '>', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'c'
	DB	00H, 'o', 00H, 'l', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'l', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, '-', 00H, '>', 00H, 'c', 00H, 'o'
	DB	00H, 'l', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG85886 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG85887 DB	'c', 00H, 'o', 00H, 'l', 00H, ' ', 00H, '>', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'c'
	DB	00H, 'o', 00H, 'l', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'l', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, '-', 00H, '>', 00H, 'c', 00H, 'o'
	DB	00H, 'l', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG85992 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG85993 DB	'h', 00H, 'd', 00H, 'r', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG85996 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG85997 DB	'p', 00H, 'r', 00H, 'e', 00H, 'v', 00H, 'p', 00H, 'o', 00H
	DB	's', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'h', 00H, 'd'
	DB	00H, 'r', 00H, 'p', 00H, 'o', 00H, 's', 00H, ' ', 00H, '+', 00H
	DB	' ', 00H, '1', 00H, 00H, 00H
$SG86000 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG86001 DB	'h', 00H, 'd', 00H, 'r', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '1', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, 'h', 00H, 'd', 00H, 'r', 00H
	DB	's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '<', 00H, '='
	DB	00H, ' ', 00H, '1', 00H, '2', 00H, '8', 00H, 00H, 00H
	ORG $+2
$SG86010 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG86011 DB	'r', 00H, 'u', 00H, 'n', 00H, 'l', 00H, 'e', 00H, 'n', 00H
	DB	' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '2', 00H, ' ', 00H, '&'
	DB	00H, '&', 00H, ' ', 00H, 'r', 00H, 'u', 00H, 'n', 00H, 'l', 00H
	DB	'e', 00H, 'n', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '1'
	DB	00H, '2', 00H, '9', 00H, 00H, 00H
	ORG $+2
$SG86017 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG86018 DB	'h', 00H, 'd', 00H, 'r', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '1', 00H, '2'
	DB	00H, '8', 00H, 00H, 00H
	ORG $+2
$SG86083 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG86084 DB	'c', 00H, '-', 00H, '>', 00H, 'c', 00H, 'h', 00H, 'r', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG86141 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG86142 DB	'n', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'l', 00H, 'd', 00H
	DB	'a', 00H, 't', 00H, 'a', 00H, '-', 00H, '>', 00H, 'c', 00H, 'o'
	DB	00H, 'l', 00H, 's', 00H, 00H, 00H
$SG86149 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG86150 DB	'n', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'l', 00H, 'd', 00H
	DB	'a', 00H, 't', 00H, 'a', 00H, '-', 00H, '>', 00H, 'c', 00H, 'o'
	DB	00H, 'l', 00H, 's', 00H, 00H, 00H
$SG86152 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG86153 DB	'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'l', 00H
	DB	'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, '-', 00H, '>', 00H, 'c'
	DB	00H, 'o', 00H, 'l', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG86174 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG86175 DB	'b', 00H, 'y', 00H, 't', 00H, 'e', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 'x', 00H, 'F', 00H, '0', 00H, 00H
	DB	00H
	ORG $+2
$SG86283 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG86284 DB	'!', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'e', 00H
	DB	'n', 00H, 00H, 00H
$SG86298 DB	'l', 00H, 'i', 00H, 'n', 00H, 'e', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, 'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H
	DB	00H
	ORG $+2
$SG86294 DB	'line==NULL in terminal.c', 0aH, 'lineno=%d y=%d w=%d h=%'
	DB	'd', 0aH, 'count(scrollback=%p)=%d', 0aH, 'count(screen=%p)=%d'
	DB	0aH, 'count(alt=%p)=%d alt_sblines=%d', 0aH, 'whichtree=%p tre'
	DB	'eindex=%d', 0aH, 0aH, 'Please contact <putty@projects.tartaru'
	DB	's.org> and pass on the above information.', 00H
	ORG $+3
$SG86297 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG86486 DB	01bH, '[?6c', 00H
	ORG $+2
$SG86552 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG86571 DB	't', 00H, 'e', 00H, 'r', 00H, 'm', 00H, '-', 00H, '>', 00H
	DB	'r', 00H, 'o', 00H, 'w', 00H, 's', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, 'n', 00H, 'e', 00H, 'w', 00H, 'r', 00H, 'o', 00H
	DB	'w', 00H, 's', 00H, 00H, 00H
$SG86553 DB	't', 00H, 'e', 00H, 'r', 00H, 'm', 00H, '-', 00H, '>', 00H
	DB	'r', 00H, 'o', 00H, 'w', 00H, 's', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, 'c', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H
	DB	'2', 00H, '3', 00H, '4', 00H, '(', 00H, 't', 00H, 'e', 00H, 'r'
	DB	00H, 'm', 00H, '-', 00H, '>', 00H, 's', 00H, 'c', 00H, 'r', 00H
	DB	'e', 00H, 'e', 00H, 'n', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG86560 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG86561 DB	's', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'n', 00H, ' ', 00H
	DB	'>', 00H, '=', 00H, ' ', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, '-', 00H, '>', 00H, 't', 00H, 'e', 00H, 'm', 00H, 'p', 00H
	DB	's', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'e', 00H, 's'
	DB	00H, 00H, 00H
	ORG $+2
$SG86570 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG86573 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG86859 DB	't', 00H, 'e', 00H, 'r', 00H, 'm', 00H, '-', 00H, '>', 00H
	DB	's', 00H, 'e', 00H, 'l', 00H, 's', 00H, 't', 00H, 'a', 00H, 'r'
	DB	00H, 't', 00H, '.', 00H, 'x', 00H, ' ', 00H, '<', 00H, ' ', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'm', 00H, '-', 00H, '>', 00H, 'c'
	DB	00H, 'o', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG86574 DB	'c', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, '2', 00H
	DB	'3', 00H, '4', 00H, '(', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, '-', 00H, '>', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'e', 00H
	DB	'e', 00H, 'n', 00H, ')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 'n', 00H, 'e', 00H, 'w', 00H, 'r', 00H, 'o', 00H, 'w', 00H
	DB	's', 00H, 00H, 00H
$SG86580 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG86862 DB	't', 00H, 'e', 00H, 'r', 00H, 'm', 00H, '-', 00H, '>', 00H
	DB	's', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'd', 00H, '.'
	DB	00H, 'x', 00H, ' ', 00H, '>', 00H, ' ', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'm', 00H, '-', 00H, '>', 00H, 'c', 00H, 'u', 00H, 'r'
	DB	00H, 's', 00H, '.', 00H, 'x', 00H, 00H, 00H
$SG86581 DB	'c', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, '2', 00H
	DB	'3', 00H, '4', 00H, '(', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, '-', 00H, '>', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'o', 00H
	DB	'l', 00H, 'l', 00H, 'b', 00H, 'a', 00H, 'c', 00H, 'k', 00H, ')'
	DB	00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'n', 00H, 'e', 00H
	DB	'w', 00H, 's', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'l', 00H, 'i'
	DB	00H, 'n', 00H, 'e', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG86583 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG86584 DB	'c', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, '2', 00H
	DB	'3', 00H, '4', 00H, '(', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, '-', 00H, '>', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'o', 00H
	DB	'l', 00H, 'l', 00H, 'b', 00H, 'a', 00H, 'c', 00H, 'k', 00H, ')'
	DB	00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'm', 00H, '-', 00H, '>', 00H, 't', 00H, 'e', 00H, 'm'
	DB	00H, 'p', 00H, 's', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 'n', 00H
	DB	'e', 00H, 's', 00H, 00H, 00H
$SG86855 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG86856 DB	't', 00H, 'e', 00H, 'r', 00H, 'm', 00H, '-', 00H, '>', 00H
	DB	's', 00H, 'e', 00H, 'l', 00H, 's', 00H, 't', 00H, 'a', 00H, 'r'
	DB	00H, 't', 00H, '.', 00H, 'x', 00H, ' ', 00H, '>', 00H, '=', 00H
	DB	' ', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm', 00H, '-', 00H, '>'
	DB	00H, 'c', 00H, 'u', 00H, 'r', 00H, 's', 00H, '.', 00H, 'x', 00H
	DB	00H, 00H
	ORG $+2
$SG86858 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG86861 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG86864 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG86865 DB	't', 00H, 'e', 00H, 'r', 00H, 'm', 00H, '-', 00H, '>', 00H
	DB	's', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'd', 00H, '.'
	DB	00H, 'x', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'm', 00H, '-', 00H, '>', 00H, 'c', 00H, 'o'
	DB	00H, 'l', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG87020 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG87021 DB	'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 's', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U', 00H, 'L', 00H, 'L'
	DB	00H, 00H, 00H
$SG87221 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG87222 DB	'x', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG87358 DB	01bH, '[>0;136;0c', 00H
$SG87399 DB	01bH, '[%d;%dR', 00H
	ORG $+3
$SG87402 DB	01bH, '[0n', 00H
	ORG $+3
$SG87522 DB	01bH, '[2t', 00H
	ORG $+3
$SG87523 DB	01bH, '[1t', 00H
	ORG $+3
$SG87526 DB	01bH, '[3;%d;%dt', 00H
	ORG $+1
$SG87529 DB	01bH, '[4;%d;%dt', 00H
	ORG $+1
$SG87532 DB	01bH, '[8;%d;%dt', 00H
	ORG $+1
$SG87538 DB	01bH, ']L', 00H
$SG87539 DB	01bH, '\', 00H
	ORG $+1
$SG87544 DB	01bH, ']l', 00H
$SG87545 DB	01bH, '\', 00H
	ORG $+1
$SG87575 DB	01bH, '[2;1;1;112;112;1;0x', 00H
	ORG $+3
$SG87634 DB	01bH, '[?', 00H
$SG87639 DB	';', 00H
	ORG $+2
$SG87640 DB	'%d', 00H
	ORG $+1
$SG87641 DB	'c', 00H
	ORG $+2
$SG87710 DB	01bH, '/Z', 00H
$SG87813 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG87814 DB	'0', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'p', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'p', 00H, ' ', 00H, '<'
	DB	00H, ' ', 00H, 'w', 00H, 'i', 00H, 'd', 00H, 't', 00H, 'h', 00H
	DB	00H, 00H
$SG88038 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'c', 00H
	DB	00H, 00H
$SG88039 DB	'!', 00H, '(', 00H, 'i', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	' ', 00H, 'o', 00H, 'u', 00H, 'r', 00H, '_', 00H, 'c', 00H, 'u'
	DB	00H, 'r', 00H, 's', 00H, '_', 00H, 'y', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, 'j', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 'o', 00H, 'u', 00H, 'r', 00H, '_', 00H, 'c', 00H, 'u', 00H
	DB	'r', 00H, 's', 00H, '_', 00H, 'x', 00H, ')', 00H, 00H, 00H
$SG88354 DB	01bH, 00H, '[', 00H, '2', 00H, '0', 00H, '0', 00H, '~', 00H
	DB	00H, 00H
	ORG $+2
$SG88372 DB	01bH, 00H, '[', 00H, '2', 00H, '0', 00H, '1', 00H, '~', 00H
	DB	00H, 00H
	ORG $+2
$SG88447 DB	01bH, '[<%d;%d;%d%c', 00H
	ORG $+2
$SG88450 DB	01bH, '[%d;%d;%dM', 00H
$SG88453 DB	01bH, '[M%c%c%c', 00H
	ORG $+2
$SG88502 DB	01bH, '%c', 00H
$SG88508 DB	01bH, 'O%c', 00H
	ORG $+3
$SG88511 DB	01bH, '[%c', 00H
	ORG $+3
$SG88554 DB	0dH, 0aH, 00H
	ORG $+1
$SG88575 DB	'ERASE', 00H
	ORG $+2
$SG88576 DB	'^?', 00H
	ORG $+1
$SG88577 DB	'^H', 00H
	ORG $+1
$SG88599 DB	0aH, 00H
	ORG $+2
$SG88603 DB	0aH, 00H
	ORG $+2
$SG88627 DB	0dH, 0aH, 00H
	ORG $+1
$SG88631 DB	08H, ' ', 08H, 00H
$SG88637 DB	08H, ' ', 08H, 00H
$SG88639 DB	0dH, 0aH, 00H
_DATA	ENDS
PUBLIC	_term_update
EXTRN	_free_ctx:PROC
EXTRN	_sys_cursor:PROC
EXTRN	_get_ctx:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\putty\terminal.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_need_sbar_update$86390 = -8				; size = 4
_ctx$ = -4						; size = 4
_term$ = 8						; size = 4
_term_update PROC
; Line 1293
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1296
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+4252], 0
; Line 1298
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4232]
	push	edx
	call	_get_ctx
	add	esp, 4
	mov	DWORD PTR _ctx$[ebp], eax
; Line 1299
	cmp	DWORD PTR _ctx$[ebp], 0
	je	$LN4@term_updat
; Line 1300
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+340]
	mov	DWORD PTR _need_sbar_update$86390[ebp], ecx
; Line 1301
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+340], 0
	je	SHORT $LN2@term_updat
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4452], 0
	je	SHORT $LN2@term_updat
; Line 1302
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+16], 0
; Line 1303
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+340], 0
; Line 1304
	mov	DWORD PTR _need_sbar_update$86390[ebp], 1
$LN2@term_updat:
; Line 1307
	cmp	DWORD PTR _need_sbar_update$86390[ebp], 0
	je	SHORT $LN1@term_updat
; Line 1308
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_update_sbar
	add	esp, 4
$LN1@term_updat:
; Line 1309
	push	1
	mov	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_do_paint
	add	esp, 12					; 0000000cH
; Line 1310
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [eax+108]
	sub	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4232]
	push	eax
	call	_sys_cursor
	add	esp, 12					; 0000000cH
; Line 1311
	mov	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	call	_free_ctx
	add	esp, 4
$LN4@term_updat:
; Line 1313
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_term_update ENDP
_TEXT	ENDS
PUBLIC	_term_seen_key_event
EXTRN	_safefree:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_tmp$86399 = -4						; size = 4
_term$ = 8						; size = 4
_term_seen_key_event PROC
; Line 1320
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1328
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+52], 0
$LN3@term_seen_:
; Line 1329
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+40], 0
	je	SHORT $LN2@term_seen_
; Line 1330
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR _tmp$86399[ebp], eax
; Line 1331
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _tmp$86399[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+40], eax
; Line 1332
	mov	ecx, DWORD PTR _tmp$86399[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 1333
	jmp	SHORT $LN3@term_seen_
$LN2@term_seen_:
; Line 1334
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+44], 0
; Line 1335
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+48], 0
; Line 1340
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4456], 0
	je	SHORT $LN4@term_seen_
; Line 1341
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+16], 0
; Line 1342
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_seen_disp_event
	add	esp, 4
$LN4@term_seen_:
; Line 1344
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_term_seen_key_event ENDP
; Function compile flags: /Odtp /RTCsu
_term$ = 8						; size = 4
_seen_disp_event PROC
; Line 1144
	push	ebp
	mov	ebp, esp
; Line 1145
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+340], 1
; Line 1146
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_schedule_update
	add	esp, 4
; Line 1147
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_seen_disp_event ENDP
_TEXT	ENDS
EXTRN	_schedule_timer:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_term$ = 8						; size = 4
_term_schedule_update PROC
; Line 1132
	push	ebp
	mov	ebp, esp
; Line 1133
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4252], 0
	jne	SHORT $LN2@term_sched
; Line 1134
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+4252], 1
; Line 1135
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	push	OFFSET _term_timer
	push	20					; 00000014H
	call	_schedule_timer
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+4256], eax
$LN2@term_sched:
; Line 1137
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_term_schedule_update ENDP
; Function compile flags: /Odtp /RTCsu
_update$ = -8						; size = 4
_term$ = -4						; size = 4
_ctx$ = 8						; size = 4
_now$ = 12						; size = 4
_term_timer PROC
; Line 1103
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1104
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _term$[ebp], eax
; Line 1105
	mov	DWORD PTR _update$[ebp], 0
; Line 1107
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4260], 0
	je	SHORT $LN5@term_timer
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _now$[ebp]
	cmp	eax, DWORD PTR [edx+4268]
	jne	SHORT $LN5@term_timer
; Line 1108
	mov	ecx, DWORD PTR _term$[ebp]
	xor	edx, edx
	cmp	DWORD PTR [ecx+192], 0
	sete	dl
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+192], edx
; Line 1109
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+4260], 0
; Line 1110
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_term_schedule_tblink
	add	esp, 4
; Line 1111
	mov	DWORD PTR _update$[ebp], 1
$LN5@term_timer:
; Line 1114
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4264], 0
	je	SHORT $LN4@term_timer
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _now$[ebp]
	cmp	edx, DWORD PTR [ecx+4272]
	jne	SHORT $LN4@term_timer
; Line 1115
	mov	eax, DWORD PTR _term$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+188], 0
	sete	cl
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+188], ecx
; Line 1116
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+4264], 0
; Line 1117
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_schedule_cblink
	add	esp, 4
; Line 1118
	mov	DWORD PTR _update$[ebp], 1
$LN4@term_timer:
; Line 1121
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+312], 0
	je	SHORT $LN3@term_timer
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _now$[ebp]
	cmp	ecx, DWORD PTR [eax+316]
	jne	SHORT $LN3@term_timer
; Line 1122
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+312], 0
; Line 1123
	mov	DWORD PTR _update$[ebp], 1
$LN3@term_timer:
; Line 1127
	cmp	DWORD PTR _update$[ebp], 0
	jne	SHORT $LN1@term_timer
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4252], 0
	je	SHORT $LN6@term_timer
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _now$[ebp]
	cmp	edx, DWORD PTR [ecx+4256]
	jne	SHORT $LN6@term_timer
$LN1@term_timer:
; Line 1128
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_term_update
	add	esp, 4
$LN6@term_timer:
; Line 1129
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_term_timer ENDP
; Function compile flags: /Odtp /RTCsu
_term$ = 8						; size = 4
_term_schedule_tblink PROC
; Line 1154
	push	ebp
	mov	ebp, esp
; Line 1155
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+196], 0
	je	SHORT $LN3@term_sched@2
; Line 1156
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4260], 0
	jne	SHORT $LN2@term_sched@2
; Line 1157
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	push	OFFSET _term_timer
	push	450					; 000001c2H
	call	_schedule_timer
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+4268], eax
$LN2@term_sched@2:
; Line 1158
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4260], 1
; Line 1159
	jmp	SHORT $LN4@term_sched@2
$LN3@term_sched@2:
; Line 1160
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+192], 1
; Line 1161
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+4260], 0
$LN4@term_sched@2:
; Line 1163
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_term_schedule_tblink ENDP
_TEXT	ENDS
EXTRN	__imp__GetCaretBlinkTime@0:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_term$ = 8						; size = 4
_term_schedule_cblink PROC
; Line 1169
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1170
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4352], 0
	je	SHORT $LN3@term_sched@3
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+308], 0
	je	SHORT $LN3@term_sched@3
; Line 1171
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4264], 0
	jne	SHORT $LN2@term_sched@3
; Line 1172
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	push	OFFSET _term_timer
	mov	esi, esp
	call	DWORD PTR __imp__GetCaretBlinkTime@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_schedule_timer
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+4272], eax
$LN2@term_sched@3:
; Line 1173
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4264], 1
; Line 1174
	jmp	SHORT $LN4@term_sched@3
$LN3@term_sched@3:
; Line 1175
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+188], 1
; Line 1176
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+4264], 0
$LN4@term_sched@3:
; Line 1178
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_term_schedule_cblink ENDP
_TEXT	ENDS
PUBLIC	_term_pwron
EXTRN	_ldisc_send:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_term$ = 8						; size = 4
_clear$ = 12						; size = 4
_term_pwron PROC
; Line 1350
	push	ebp
	mov	ebp, esp
; Line 1351
	mov	eax, DWORD PTR _clear$[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_power_on
	add	esp, 8
; Line 1352
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4228], 0
	je	SHORT $LN1@term_pwron
; Line 1353
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4228]
	push	ecx
	call	_ldisc_send
	add	esp, 16					; 00000010H
$LN1@term_pwron:
; Line 1354
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+16], 0
; Line 1355
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_deselect
	add	esp, 4
; Line 1356
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_update
	add	esp, 4
; Line 1357
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_term_pwron ENDP
_TEXT	ENDS
EXTRN	_conf_get_int_int:PROC
EXTRN	_set_raw_mouse_mode:PROC
EXTRN	_conf_get_int:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv137 = -20						; size = 4
tv93 = -16						; size = 4
tv77 = -12						; size = 4
_i$86377 = -8						; size = 4
_i$86373 = -4						; size = 4
_term$ = 8						; size = 4
_clear$ = 12						; size = 4
_power_on PROC
; Line 1220
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1221
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+380], 0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+376], 0
; Line 1222
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+116], 0
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+120], 0
; Line 1223
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+264], 0
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+268], 0
; Line 1224
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+124], 0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+412], 0
; Line 1225
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+296], -1
	je	SHORT $LN13@power_on
; Line 1226
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	sub	ecx, 1
	mov	DWORD PTR tv77[ebp], ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR [edx+128], eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR tv77[ebp]
	mov	DWORD PTR [ecx+416], edx
; Line 1227
	jmp	SHORT $LN12@power_on
$LN13@power_on:
; Line 1228
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+128], 0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+416], 0
$LN12@power_on:
; Line 1229
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+300], -1
	je	SHORT $LN11@power_on
; Line 1231
	mov	DWORD PTR _i$86373[ebp], 0
	jmp	SHORT $LN10@power_on
$LN9@power_on:
	mov	eax, DWORD PTR _i$86373[ebp]
	add	eax, 1
	mov	DWORD PTR _i$86373[ebp], eax
$LN10@power_on:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _i$86373[ebp]
	cmp	edx, DWORD PTR [ecx+300]
	jge	SHORT $LN11@power_on
; Line 1232
	mov	eax, DWORD PTR _i$86373[ebp]
	and	eax, -2147483641			; 80000007H
	jns	SHORT $LN16@power_on
	dec	eax
	or	eax, -8					; fffffff8H
	inc	eax
$LN16@power_on:
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3648]
	mov	ecx, DWORD PTR _i$86373[ebp]
	mov	BYTE PTR [edx+ecx], al
	jmp	SHORT $LN9@power_on
$LN11@power_on:
; Line 1234
	push	92					; 0000005cH
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4244]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	DWORD PTR tv93[ebp], eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR tv93[ebp]
	mov	DWORD PTR [ecx+132], edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR tv93[ebp]
	mov	DWORD PTR [eax+384], ecx
; Line 1235
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+144], 0
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+396], 0
; Line 1237
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+288], 0
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+164], 0
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+140], 0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+392], 0
; Line 1238
	push	93					; 0000005dH
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4244]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	DWORD PTR tv137[ebp], eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR tv137[ebp]
	mov	DWORD PTR [ecx+136], edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR tv137[ebp]
	mov	DWORD PTR [eax+388], ecx
; Line 1239
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+276], 0
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+152], 0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+148], 0
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+400], 0
; Line 1240
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+284], 0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+160], 0
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+220], 0
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+408], 0
; Line 1241
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+224], 0
; Line 1243
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+292], 0
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+212], 0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+208], 0
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+404], 0
; Line 1245
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+280], 55296		; 0000d800H
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+156], 55296		; 0000d800H
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+372], 55296		; 0000d800H
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+368], 55296		; 0000d800H
; Line 1246
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+168], 0
; Line 1247
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+312], 0
; Line 1248
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+176], 1
; Line 1249
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+344], 0
; Line 1251
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+64], 132352		; 00020500H
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+272], 132352		; 00020500H
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+68], 132352		; 00020500H
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+60], 132352		; 00020500H
; Line 1252
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+200], 0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+204], 0
; Line 1253
	push	73					; 00000049H
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4244]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+320], eax
; Line 1254
	push	74					; 0000004aH
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4244]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+324], eax
; Line 1255
	push	107					; 0000006bH
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4244]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+184], eax
; Line 1256
	push	108					; 0000006cH
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4244]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+196], eax
; Line 1257
	mov	edx, DWORD PTR _term$[ebp]
	add	edx, 72					; 00000048H
	mov	eax, DWORD PTR _term$[ebp]
	add	eax, 84					; 00000054H
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], edx
; Line 1258
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+420], 0
; Line 1259
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_print_finish
	add	esp, 4
; Line 1260
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+348], 0
; Line 1261
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+352], 0
; Line 1262
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+356], 0
; Line 1263
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4232]
	push	eax
	call	_set_raw_mouse_mode
	add	esp, 8
; Line 1264
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+364], 0
; Line 1267
	mov	DWORD PTR _i$86377[ebp], 0
	jmp	SHORT $LN7@power_on
$LN6@power_on:
	mov	edx, DWORD PTR _i$86377[ebp]
	add	edx, 1
	mov	DWORD PTR _i$86377[ebp], edx
$LN7@power_on:
	cmp	DWORD PTR _i$86377[ebp], 256		; 00000100H
	jge	SHORT $LN5@power_on
; Line 1268
	mov	eax, DWORD PTR _i$86377[ebp]
	push	eax
	push	138					; 0000008aH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4244]
	push	edx
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _i$86377[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	WORD PTR [edx+ecx*2+3692], ax
	jmp	SHORT $LN6@power_on
$LN5@power_on:
; Line 1270
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	$LN4@power_on
; Line 1271
	push	0
	push	0
	push	1
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_swap_screen
	add	esp, 16					; 00000010H
; Line 1272
	push	1
	push	1
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_erase_lots
	add	esp, 16					; 00000010H
; Line 1273
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_swap_screen
	add	esp, 16					; 00000010H
; Line 1274
	cmp	DWORD PTR _clear$[ebp], 0
	je	SHORT $LN3@power_on
; Line 1275
	push	1
	push	1
	push	0
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_erase_lots
	add	esp, 16					; 00000010H
$LN3@power_on:
; Line 1276
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_find_last_nonempty_line
	add	esp, 8
	add	eax, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+108], eax
; Line 1277
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [eax+108]
	cmp	edx, DWORD PTR [ecx+296]
	jne	SHORT $LN2@power_on
; Line 1278
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	sub	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+108], ecx
; Line 1279
	push	1
	push	1
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	sub	ecx, 1
	push	ecx
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_scroll
	add	esp, 20					; 00000014H
$LN2@power_on:
; Line 1281
	jmp	SHORT $LN1@power_on
$LN4@power_on:
; Line 1282
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+108], 0
$LN1@power_on:
; Line 1284
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+112], 0
; Line 1285
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_term_schedule_tblink
	add	esp, 4
; Line 1286
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_term_schedule_cblink
	add	esp, 4
; Line 1287
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_power_on ENDP
_TEXT	ENDS
PUBLIC	_term_copy_stuff_from_conf
EXTRN	_ctrlparse:PROC
EXTRN	_safemalloc:PROC
EXTRN	_strlen:PROC
EXTRN	_conf_get_str:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_c$86426 = -21						; size = 1
_n$86425 = -16						; size = 4
_maxlen$86419 = -8					; size = 4
_answerback$86418 = -4					; size = 4
_term$ = 8						; size = 4
_term_copy_stuff_from_conf PROC
; Line 1374
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1375
	push	127					; 0000007fH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4308], eax
; Line 1376
	push	125					; 0000007dH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4320], eax
; Line 1377
	push	97					; 00000061H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4324], eax
; Line 1378
	push	99					; 00000063H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4328], eax
; Line 1379
	push	100					; 00000064H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4332], eax
; Line 1380
	push	102					; 00000066H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4336], eax
; Line 1381
	push	101					; 00000065H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4340], eax
; Line 1382
	push	126					; 0000007eH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4344], eax
; Line 1383
	push	61					; 0000003dH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4348], eax
; Line 1384
	push	96					; 00000060H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4352], eax
; Line 1385
	push	108					; 0000006cH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4356], eax
; Line 1386
	push	141					; 0000008dH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4360], eax
; Line 1387
	push	111					; 0000006fH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4364], eax
; Line 1388
	push	110					; 0000006eH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4368], eax
; Line 1389
	push	176					; 000000b0H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4372], eax
; Line 1390
	push	87					; 00000057H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4376], eax
; Line 1391
	push	63					; 0000003fH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4380], eax
; Line 1392
	push	94					; 0000005eH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4384], eax
; Line 1393
	push	117					; 00000075H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4388], eax
; Line 1394
	push	115					; 00000073H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4392], eax
; Line 1395
	push	137					; 00000089H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4396], eax
; Line 1396
	push	75					; 0000004bH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4400], eax
; Line 1397
	push	68					; 00000044H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4404], eax
; Line 1398
	push	64					; 00000040H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4408], eax
; Line 1399
	push	65					; 00000041H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4412], eax
; Line 1400
	push	70					; 00000046H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4416], eax
; Line 1401
	push	66					; 00000042H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4420], eax
; Line 1402
	push	71					; 00000047H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4424], eax
; Line 1403
	push	67					; 00000043H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4428], eax
; Line 1404
	push	69					; 00000045H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4432], eax
; Line 1405
	push	135					; 00000087H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4436], eax
; Line 1406
	push	134					; 00000086H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4440], eax
; Line 1407
	push	72					; 00000048H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4444], eax
; Line 1408
	push	62					; 0000003eH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4448], eax
; Line 1409
	push	86					; 00000056H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4452], eax
; Line 1410
	push	85					; 00000055H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4456], eax
; Line 1411
	push	128					; 00000080H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4460], eax
; Line 1418
	push	123					; 0000007bH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	mov	DWORD PTR _answerback$86418[ebp], eax
; Line 1419
	mov	edx, DWORD PTR _answerback$86418[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _maxlen$86419[ebp], eax
; Line 1421
	push	1
	mov	eax, DWORD PTR _maxlen$86419[ebp]
	push	eax
	call	_safemalloc
	add	esp, 8
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+4312], eax
; Line 1422
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4316], 0
$LN4@term_copy_:
; Line 1424
	mov	eax, DWORD PTR _answerback$86418[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	$LN5@term_copy_
; Line 1426
	lea	edx, DWORD PTR _n$86425[ebp]
	push	edx
	mov	eax, DWORD PTR _answerback$86418[ebp]
	push	eax
	call	_ctrlparse
	add	esp, 8
	mov	BYTE PTR _c$86426[ebp], al
; Line 1427
	cmp	DWORD PTR _n$86425[ebp], 0
	je	SHORT $LN2@term_copy_
; Line 1428
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4312]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4316]
	mov	al, BYTE PTR _c$86426[ebp]
	mov	BYTE PTR [edx+ecx], al
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4316]
	add	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+4316], edx
; Line 1429
	mov	ecx, DWORD PTR _n$86425[ebp]
	mov	DWORD PTR _answerback$86418[ebp], ecx
; Line 1430
	jmp	SHORT $LN1@term_copy_
$LN2@term_copy_:
; Line 1431
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4312]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4316]
	mov	ecx, DWORD PTR _answerback$86418[ebp]
	mov	cl, BYTE PTR [ecx]
	mov	BYTE PTR [eax+edx], cl
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4316]
	add	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+4316], eax
	mov	edx, DWORD PTR _answerback$86418[ebp]
	add	edx, 1
	mov	DWORD PTR _answerback$86418[ebp], edx
$LN1@term_copy_:
; Line 1433
	jmp	$LN4@term_copy_
$LN5@term_copy_:
; Line 1435
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@term_copy_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@term_copy_:
	DD	1
	DD	$LN8@term_copy_
$LN8@term_copy_:
	DD	-16					; fffffff0H
	DD	4
	DD	$LN7@term_copy_
$LN7@term_copy_:
	DB	110					; 0000006eH
	DB	0
_term_copy_stuff_from_conf ENDP
_TEXT	ENDS
PUBLIC	_term_reconfig
EXTRN	_conf_copy:PROC
EXTRN	_conf_free:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv202 = -32						; size = 4
tv195 = -28						; size = 4
_i$ = -24						; size = 4
_reset_charclass$ = -20					; size = 4
_reset_tblink$ = -16					; size = 4
_reset_bce$ = -12					; size = 4
_reset_decom$ = -8					; size = 4
_reset_wrap$ = -4					; size = 4
_term$ = 8						; size = 4
_conf$ = 12						; size = 4
_term_reconfig PROC
; Line 1444
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1456
	push	93					; 0000005dH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	esi, eax
	push	93					; 0000005dH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	xor	ecx, ecx
	cmp	esi, eax
	setne	cl
	mov	DWORD PTR _reset_wrap$[ebp], ecx
; Line 1458
	push	92					; 0000005cH
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4244]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	esi, eax
	push	92					; 0000005cH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	xor	edx, edx
	cmp	esi, eax
	setne	dl
	mov	DWORD PTR _reset_decom$[ebp], edx
; Line 1460
	push	107					; 0000006bH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	esi, eax
	push	107					; 0000006bH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	xor	ecx, ecx
	cmp	esi, eax
	setne	cl
	mov	DWORD PTR _reset_bce$[ebp], ecx
; Line 1462
	push	108					; 0000006cH
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4244]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	esi, eax
	push	108					; 0000006cH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	xor	edx, edx
	cmp	esi, eax
	setne	dl
	mov	DWORD PTR _reset_tblink$[ebp], edx
; Line 1463
	mov	DWORD PTR _reset_charclass$[ebp], 0
; Line 1464
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN21@term_recon
$LN20@term_recon:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN21@term_recon:
	cmp	DWORD PTR _i$[ebp], 256			; 00000100H
	jge	SHORT $LN19@term_recon
; Line 1466
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	push	138					; 0000008aH
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4244]
	push	eax
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	mov	esi, eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	push	138					; 0000008aH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	cmp	esi, eax
	je	SHORT $LN18@term_recon
; Line 1467
	mov	DWORD PTR _reset_charclass$[ebp], 1
$LN18@term_recon:
; Line 1473
	jmp	SHORT $LN20@term_recon
$LN19@term_recon:
; Line 1476
	push	125					; 0000007dH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	esi, eax
	push	125					; 0000007dH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	cmp	esi, eax
	jne	SHORT $LN16@term_recon
	push	126					; 0000007eH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	esi, eax
	push	126					; 0000007eH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_int
	add	esp, 8
	cmp	esi, eax
	je	$LN17@term_recon
$LN16@term_recon:
; Line 1477
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN15@term_recon
$LN14@term_recon:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN15@term_recon:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR [ecx+4304]
	jge	$LN17@term_recon
; Line 1478
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4296]
	mov	eax, DWORD PTR [edx+eax+4]
	push	eax
	call	_safefree
	add	esp, 4
; Line 1479
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4300]
	mov	ecx, DWORD PTR [eax+ecx+4]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 1480
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4296]
	mov	DWORD PTR [edx+ecx], -1
; Line 1481
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4296]
	mov	DWORD PTR [ecx+edx+4], 0
; Line 1482
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4300]
	mov	DWORD PTR [edx+ecx], -1
; Line 1483
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4300]
	mov	DWORD PTR [ecx+edx+4], 0
; Line 1484
	jmp	$LN14@term_recon
$LN17@term_recon:
; Line 1487
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4244]
	push	eax
	call	_conf_free
	add	esp, 4
; Line 1488
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_copy
	add	esp, 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4244], eax
; Line 1490
	cmp	DWORD PTR _reset_wrap$[ebp], 0
	je	SHORT $LN12@term_recon
; Line 1491
	push	93					; 0000005dH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	DWORD PTR tv195[ebp], eax
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR tv195[ebp]
	mov	DWORD PTR [edx+136], eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR tv195[ebp]
	mov	DWORD PTR [ecx+388], edx
$LN12@term_recon:
; Line 1492
	cmp	DWORD PTR _reset_decom$[ebp], 0
	je	SHORT $LN11@term_recon
; Line 1493
	push	92					; 0000005cH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	DWORD PTR tv202[ebp], eax
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR tv202[ebp]
	mov	DWORD PTR [edx+132], eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR tv202[ebp]
	mov	DWORD PTR [ecx+384], edx
$LN11@term_recon:
; Line 1494
	cmp	DWORD PTR _reset_bce$[ebp], 0
	je	SHORT $LN10@term_recon
; Line 1495
	push	107					; 0000006bH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+184], eax
; Line 1496
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_set_erase_char
	add	esp, 4
$LN10@term_recon:
; Line 1498
	cmp	DWORD PTR _reset_tblink$[ebp], 0
	je	SHORT $LN9@term_recon
; Line 1499
	push	108					; 0000006cH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4244]
	push	edx
	call	_conf_get_int
	add	esp, 8
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+196], eax
$LN9@term_recon:
; Line 1501
	cmp	DWORD PTR _reset_charclass$[ebp], 0
	je	SHORT $LN8@term_recon
; Line 1502
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@term_recon
$LN6@term_recon:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN7@term_recon:
	cmp	DWORD PTR _i$[ebp], 256			; 00000100H
	jge	SHORT $LN8@term_recon
; Line 1503
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	push	138					; 0000008aH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4244]
	push	edx
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	WORD PTR [edx+ecx*2+3692], ax
	jmp	SHORT $LN6@term_recon
$LN8@term_recon:
; Line 1505
	push	68					; 00000044H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@term_recon
; Line 1506
	push	0
	push	0
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_swap_screen
	add	esp, 16					; 00000010H
$LN4@term_recon:
; Line 1507
	push	66					; 00000042H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@term_recon
; Line 1508
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+348], 0
; Line 1509
	push	0
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4232]
	push	ecx
	call	_set_raw_mouse_mode
	add	esp, 8
$LN3@term_recon:
; Line 1511
	push	71					; 00000047H
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4244]
	push	eax
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@term_recon
; Line 1512
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+372], 55296		; 0000d800H
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+368], 55296		; 0000d800H
; Line 1513
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+404], 0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+208], 0
; Line 1514
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+220], 0
$LN2@term_recon:
; Line 1516
	push	124					; 0000007cH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4244]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@term_recon
; Line 1517
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_term_print_finish
	add	esp, 4
$LN1@term_recon:
; Line 1519
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_term_schedule_tblink
	add	esp, 4
; Line 1520
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_schedule_cblink
	add	esp, 4
; Line 1521
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_term_copy_stuff_from_conf
	add	esp, 4
; Line 1522
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_term_reconfig ENDP
; Function compile flags: /Odtp /RTCsu
_term$ = 8						; size = 4
_set_erase_char PROC
; Line 1360
	push	ebp
	mov	ebp, esp
; Line 1361
	mov	eax, DWORD PTR _term$[ebp]
	add	eax, 72					; 00000048H
	mov	ecx, DWORD PTR _term$[ebp]
	add	ecx, 84					; 00000054H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
; Line 1362
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+184], 0
	je	SHORT $LN2@set_erase_
; Line 1364
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, 262143				; 0003ffffH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+88], eax
$LN2@set_erase_:
; Line 1365
	pop	ebp
	ret	0
_set_erase_char ENDP
_TEXT	ENDS
PUBLIC	_term_clrsb
EXTRN	_delpos234:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$ = -8						; size = 4
_line$ = -4						; size = 4
_term$ = 8						; size = 4
_term_clrsb PROC
; Line 1528
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1536
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+16], 0
$LN5@term_clrsb:
; Line 1541
	push	0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_delpos234
	add	esp, 8
	mov	DWORD PTR _line$[ebp], eax
	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN4@term_clrsb
; Line 1542
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 1543
	jmp	SHORT $LN5@term_clrsb
$LN4@term_clrsb:
; Line 1554
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@term_clrsb
$LN2@term_clrsb:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN3@term_clrsb:
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR [edx+296]
	jge	SHORT $LN1@term_clrsb
; Line 1555
	push	1
	push	1555					; 00000613H
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_lineptr
	add	esp, 16					; 00000010H
	push	eax
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_check_line_size
	add	esp, 8
	jmp	SHORT $LN2@term_clrsb
$LN1@term_clrsb:
; Line 1562
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+20], 0
; Line 1563
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+424], 0
; Line 1568
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_update_sbar
	add	esp, 4
; Line 1569
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_term_clrsb ENDP
_TEXT	ENDS
EXTRN	_fatalbox:PROC
EXTRN	_index234:PROC
EXTRN	_count234:PROC
EXTRN	__wassert:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_cline$86289 = -20					; size = 4
_altlines$86281 = -16					; size = 4
_treeindex$ = -12					; size = 4
_whichtree$ = -8					; size = 4
_line$ = -4						; size = 4
_term$ = 8						; size = 4
_y$ = 12						; size = 4
_lineno$ = 16						; size = 4
_screen$ = 20						; size = 4
_lineptr PROC
; Line 1006
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1011
	cmp	DWORD PTR _y$[ebp], 0
	jl	SHORT $LN9@lineptr
; Line 1012
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _whichtree$[ebp], ecx
; Line 1013
	mov	edx, DWORD PTR _y$[ebp]
	mov	DWORD PTR _treeindex$[ebp], edx
; Line 1014
	jmp	$LN8@lineptr
$LN9@lineptr:
; Line 1015
	mov	DWORD PTR _altlines$86281[ebp], 0
; Line 1017
	cmp	DWORD PTR _screen$[ebp], 0
	je	SHORT $LN12@lineptr
	push	1017					; 000003f9H
	push	OFFSET $SG86283
	push	OFFSET $SG86284
	call	__wassert
	add	esp, 12					; 0000000cH
$LN12@lineptr:
; Line 1020
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4376], 0
	je	SHORT $LN7@lineptr
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+420], 0
	je	SHORT $LN7@lineptr
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN7@lineptr
; Line 1021
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+424]
	mov	DWORD PTR _altlines$86281[ebp], edx
$LN7@lineptr:
; Line 1023
	mov	eax, DWORD PTR _altlines$86281[ebp]
	neg	eax
	cmp	DWORD PTR _y$[ebp], eax
	jge	SHORT $LN6@lineptr
; Line 1024
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _whichtree$[ebp], edx
; Line 1025
	mov	esi, DWORD PTR _y$[ebp]
	add	esi, DWORD PTR _altlines$86281[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_count234
	add	esp, 4
	add	esi, eax
	mov	DWORD PTR _treeindex$[ebp], esi
; Line 1026
	jmp	SHORT $LN8@lineptr
$LN6@lineptr:
; Line 1027
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _whichtree$[ebp], eax
; Line 1028
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _y$[ebp]
	add	edx, DWORD PTR [ecx+424]
	mov	DWORD PTR _treeindex$[ebp], edx
$LN8@lineptr:
; Line 1032
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _whichtree$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN4@lineptr
; Line 1033
	mov	edx, DWORD PTR _treeindex$[ebp]
	push	edx
	mov	eax, DWORD PTR _whichtree$[ebp]
	push	eax
	call	_index234
	add	esp, 8
	mov	DWORD PTR _cline$86289[ebp], eax
; Line 1034
	push	0
	mov	ecx, DWORD PTR _cline$86289[ebp]
	push	ecx
	call	_decompressline
	add	esp, 8
	mov	DWORD PTR _line$[ebp], eax
; Line 1035
	jmp	SHORT $LN3@lineptr
$LN4@lineptr:
; Line 1036
	mov	edx, DWORD PTR _treeindex$[ebp]
	push	edx
	mov	eax, DWORD PTR _whichtree$[ebp]
	push	eax
	call	_index234
	add	esp, 8
	mov	DWORD PTR _line$[ebp], eax
$LN3@lineptr:
; Line 1040
	cmp	DWORD PTR _line$[ebp], 0
	jne	$LN2@lineptr
; Line 1053
	mov	ecx, DWORD PTR _treeindex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _whichtree$[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+424]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	_count234
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_count234
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_count234
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+296]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+300]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lineno$[ebp]
	push	ecx
	push	OFFSET $SG86294
	call	_fatalbox
	add	esp, 56					; 00000038H
$LN2@lineptr:
; Line 1055
	cmp	DWORD PTR _line$[ebp], 0
	jne	SHORT $LN13@lineptr
	push	1055					; 0000041fH
	push	OFFSET $SG86297
	push	OFFSET $SG86298
	call	__wassert
	add	esp, 12					; 0000000cH
$LN13@lineptr:
; Line 1074
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax+300]
	cmp	edx, DWORD PTR [ecx+4]
	jle	SHORT $LN1@lineptr
; Line 1075
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	push	ecx
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_resizeline
	add	esp, 12					; 0000000cH
$LN1@lineptr:
; Line 1077
	mov	eax, DWORD PTR _line$[ebp]
; Line 1078
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_lineptr ENDP
; Function compile flags: /Odtp /RTCsu
_i$86225 = -44						; size = 4
_ldata$ = -40						; size = 4
_b$ = -36						; size = 4
_buffer$ = -28						; size = 12
_shift$ = -12						; size = 4
_byte$ = -8						; size = 4
_ncols$ = -4						; size = 4
_data$ = 8						; size = 4
_bytes_used$ = 12					; size = 4
_decompressline PROC
; Line 847
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	edi
	lea	edi, DWORD PTR [ebp-44]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 849
	lea	eax, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR _b$[ebp], eax
; Line 852
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 853
	mov	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 858
	mov	DWORD PTR _shift$[ebp], 0
	mov	ecx, DWORD PTR _shift$[ebp]
	mov	DWORD PTR _ncols$[ebp], ecx
$LN10@decompress:
; Line 860
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_get
	add	esp, 4
	mov	DWORD PTR _byte$[ebp], eax
; Line 861
	mov	eax, DWORD PTR _byte$[ebp]
	and	eax, 127				; 0000007fH
	mov	ecx, DWORD PTR _shift$[ebp]
	shl	eax, cl
	or	eax, DWORD PTR _ncols$[ebp]
	mov	DWORD PTR _ncols$[ebp], eax
; Line 862
	mov	ecx, DWORD PTR _shift$[ebp]
	add	ecx, 7
	mov	DWORD PTR _shift$[ebp], ecx
; Line 863
	mov	edx, DWORD PTR _byte$[ebp]
	and	edx, 128				; 00000080H
	jne	SHORT $LN10@decompress
; Line 868
	push	24					; 00000018H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _ldata$[ebp], eax
; Line 869
	push	12					; 0000000cH
	mov	eax, DWORD PTR _ncols$[ebp]
	push	eax
	call	_safemalloc
	add	esp, 8
	mov	ecx, DWORD PTR _ldata$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 870
	mov	edx, DWORD PTR _ldata$[ebp]
	mov	eax, DWORD PTR _ncols$[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR _ldata$[ebp]
	mov	edx, DWORD PTR _ncols$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 871
	mov	eax, DWORD PTR _ldata$[ebp]
	mov	DWORD PTR [eax+12], 1
; Line 872
	mov	ecx, DWORD PTR _ldata$[ebp]
	mov	DWORD PTR [ecx+16], 0
; Line 882
	mov	DWORD PTR _i$86225[ebp], 0
	jmp	SHORT $LN7@decompress
$LN6@decompress:
	mov	edx, DWORD PTR _i$86225[ebp]
	add	edx, 1
	mov	DWORD PTR _i$86225[ebp], edx
$LN7@decompress:
	mov	eax, DWORD PTR _ldata$[ebp]
	mov	ecx, DWORD PTR _i$86225[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN5@decompress
; Line 883
	mov	edx, DWORD PTR _i$86225[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _ldata$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx+edx+8], 0
	jmp	SHORT $LN6@decompress
$LN5@decompress:
; Line 889
	mov	DWORD PTR _shift$[ebp], 0
	mov	edx, DWORD PTR _ldata$[ebp]
	mov	ax, WORD PTR _shift$[ebp]
	mov	WORD PTR [edx], ax
$LN4@decompress:
; Line 891
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_get
	add	esp, 4
	mov	DWORD PTR _byte$[ebp], eax
; Line 892
	mov	edx, DWORD PTR _byte$[ebp]
	and	edx, 127				; 0000007fH
	mov	ecx, DWORD PTR _shift$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _ldata$[ebp]
	movzx	ecx, WORD PTR [eax]
	or	ecx, edx
	mov	edx, DWORD PTR _ldata$[ebp]
	mov	WORD PTR [edx], cx
; Line 893
	mov	eax, DWORD PTR _shift$[ebp]
	add	eax, 7
	mov	DWORD PTR _shift$[ebp], eax
; Line 894
	mov	ecx, DWORD PTR _byte$[ebp]
	and	ecx, 128				; 00000080H
	jne	SHORT $LN4@decompress
; Line 899
	push	OFFSET _readliteral_chr
	mov	edx, DWORD PTR _ldata$[ebp]
	push	edx
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_readrle
	add	esp, 12					; 0000000cH
; Line 900
	push	OFFSET _readliteral_attr
	mov	ecx, DWORD PTR _ldata$[ebp]
	push	ecx
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_readrle
	add	esp, 12					; 0000000cH
; Line 901
	push	OFFSET _readliteral_cc
	mov	eax, DWORD PTR _ldata$[ebp]
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_readrle
	add	esp, 12					; 0000000cH
; Line 904
	cmp	DWORD PTR _bytes_used$[ebp], 0
	je	SHORT $LN1@decompress
; Line 905
	mov	edx, DWORD PTR _bytes_used$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx], ecx
$LN1@decompress:
; Line 907
	mov	eax, DWORD PTR _ldata$[ebp]
; Line 908
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@decompress
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN15@decompress:
	DD	1
	DD	$LN14@decompress
$LN14@decompress:
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN13@decompress
$LN13@decompress:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_decompressline ENDP
; Function compile flags: /Odtp /RTCsu
tv69 = -1						; size = 1
_b$ = 8							; size = 4
_get	PROC
; Line 369
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 370
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	cl, BYTE PTR [ecx+eax]
	mov	BYTE PTR tv69[ebp], cl
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR [ecx+4], eax
	movzx	eax, BYTE PTR tv69[ebp]
; Line 371
	mov	esp, ebp
	pop	ebp
	ret	0
_get	ENDP
; Function compile flags: /Odtp /RTCsu
tv92 = -40						; size = 4
tv73 = -36						; size = 4
_count$86144 = -32					; size = 4
_count$86136 = -28					; size = 4
_pos$86135 = -24					; size = 4
_hdr$86133 = -20					; size = 4
_state$ = -12						; size = 4
_n$ = -4						; size = 4
_b$ = 8							; size = 4
_ldata$ = 12						; size = 4
_readliteral$ = 16					; size = 4
_readrle PROC
; Line 732
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 733
	mov	DWORD PTR _n$[ebp], 0
; Line 734
	mov	DWORD PTR _state$[ebp], 0
$LN8@readrle:
; Line 736
	mov	eax, DWORD PTR _ldata$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	$LN7@readrle
; Line 737
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_get
	add	esp, 4
	mov	DWORD PTR _hdr$86133[ebp], eax
; Line 739
	cmp	DWORD PTR _hdr$86133[ebp], 128		; 00000080H
	jl	$LN6@readrle
; Line 742
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _pos$86135[ebp], ecx
	mov	edx, DWORD PTR _hdr$86133[ebp]
	sub	edx, 126				; 0000007eH
	mov	DWORD PTR _count$86136[ebp], edx
$LN5@readrle:
; Line 743
	mov	eax, DWORD PTR _count$86136[ebp]
	mov	DWORD PTR tv73[ebp], eax
	mov	ecx, DWORD PTR _count$86136[ebp]
	sub	ecx, 1
	mov	DWORD PTR _count$86136[ebp], ecx
	cmp	DWORD PTR tv73[ebp], 0
	je	SHORT $LN4@readrle
; Line 744
	mov	edx, DWORD PTR _ldata$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jl	SHORT $LN11@readrle
	push	744					; 000002e8H
	push	OFFSET $SG86141
	push	OFFSET $SG86142
	call	__wassert
	add	esp, 12					; 0000000cH
$LN11@readrle:
; Line 745
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR _pos$86135[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 746
	mov	esi, esp
	lea	ecx, DWORD PTR _state$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ldata$[ebp]
	push	edx
	mov	eax, DWORD PTR _n$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _ldata$[ebp]
	add	eax, DWORD PTR [ecx+20]
	push	eax
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	DWORD PTR _readliteral$[ebp]
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 747
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
; Line 748
	jmp	SHORT $LN5@readrle
$LN4@readrle:
; Line 749
	jmp	SHORT $LN3@readrle
$LN6@readrle:
; Line 752
	mov	ecx, DWORD PTR _hdr$86133[ebp]
	add	ecx, 1
	mov	DWORD PTR _count$86144[ebp], ecx
$LN2@readrle:
; Line 753
	mov	edx, DWORD PTR _count$86144[ebp]
	mov	DWORD PTR tv92[ebp], edx
	mov	eax, DWORD PTR _count$86144[ebp]
	sub	eax, 1
	mov	DWORD PTR _count$86144[ebp], eax
	cmp	DWORD PTR tv92[ebp], 0
	je	SHORT $LN3@readrle
; Line 754
	mov	ecx, DWORD PTR _ldata$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jl	SHORT $LN12@readrle
	push	754					; 000002f2H
	push	OFFSET $SG86149
	push	OFFSET $SG86150
	call	__wassert
	add	esp, 12					; 0000000cH
$LN12@readrle:
; Line 755
	mov	esi, esp
	lea	ecx, DWORD PTR _state$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ldata$[ebp]
	push	edx
	mov	eax, DWORD PTR _n$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _ldata$[ebp]
	add	eax, DWORD PTR [ecx+20]
	push	eax
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	DWORD PTR _readliteral$[ebp]
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 756
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
; Line 757
	jmp	SHORT $LN2@readrle
$LN3@readrle:
; Line 759
	jmp	$LN8@readrle
$LN7@readrle:
; Line 761
	mov	ecx, DWORD PTR _ldata$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN9@readrle
	push	761					; 000002f9H
	push	OFFSET $SG86152
	push	OFFSET $SG86153
	call	__wassert
	add	esp, 12					; 0000000cH
$LN9@readrle:
; Line 762
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@readrle
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN16@readrle:
	DD	1
	DD	$LN15@readrle
$LN15@readrle:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN14@readrle
$LN14@readrle:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
_readrle ENDP
; Function compile flags: /Odtp /RTCsu
_byte$ = -4						; size = 4
_b$ = 8							; size = 4
_c$ = 12						; size = 4
_ldata$ = 16						; size = 4
_state$ = 20						; size = 4
_readliteral_chr PROC
; Line 765
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 776
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_get
	add	esp, 4
	mov	DWORD PTR _byte$[ebp], eax
; Line 777
	cmp	DWORD PTR _byte$[ebp], 128		; 00000080H
	jge	SHORT $LN8@readlitera
; Line 778
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR _byte$[ebp]
	or	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax], edx
	jmp	$LN7@readlitera
$LN8@readlitera:
; Line 779
	cmp	DWORD PTR _byte$[ebp], 192		; 000000c0H
	jge	SHORT $LN6@readlitera
; Line 780
	mov	ecx, DWORD PTR _byte$[ebp]
	and	ecx, -193				; ffffff3fH
	shl	ecx, 8
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 781
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_get
	add	esp, 4
	mov	ecx, DWORD PTR _c$[ebp]
	or	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	$LN7@readlitera
$LN6@readlitera:
; Line 782
	cmp	DWORD PTR _byte$[ebp], 224		; 000000e0H
	jge	SHORT $LN4@readlitera
; Line 783
	mov	eax, DWORD PTR _byte$[ebp]
	and	eax, -225				; ffffff1fH
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 784
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_get
	add	esp, 4
	shl	eax, 8
	mov	ecx, DWORD PTR _c$[ebp]
	or	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx], eax
; Line 785
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_get
	add	esp, 4
	mov	ecx, DWORD PTR _c$[ebp]
	or	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	$LN7@readlitera
$LN4@readlitera:
; Line 786
	cmp	DWORD PTR _byte$[ebp], 240		; 000000f0H
	jge	SHORT $LN2@readlitera
; Line 787
	mov	eax, DWORD PTR _byte$[ebp]
	and	eax, -241				; ffffff0fH
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 788
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_get
	add	esp, 4
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _c$[ebp]
	or	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx], eax
; Line 789
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_get
	add	esp, 4
	shl	eax, 8
	mov	ecx, DWORD PTR _c$[ebp]
	or	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx], eax
; Line 790
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_get
	add	esp, 4
	mov	ecx, DWORD PTR _c$[ebp]
	or	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx], eax
; Line 791
	jmp	SHORT $LN7@readlitera
$LN2@readlitera:
; Line 792
	cmp	DWORD PTR _byte$[ebp], 240		; 000000f0H
	je	SHORT $LN11@readlitera
	push	792					; 00000318H
	push	OFFSET $SG86174
	push	OFFSET $SG86175
	call	__wassert
	add	esp, 12					; 0000000cH
$LN11@readlitera:
; Line 793
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_get
	add	esp, 4
	shl	eax, 24					; 00000018H
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx], eax
; Line 794
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_get
	add	esp, 4
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _c$[ebp]
	or	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx], eax
; Line 795
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_get
	add	esp, 4
	shl	eax, 8
	mov	ecx, DWORD PTR _c$[ebp]
	or	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx], eax
; Line 796
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_get
	add	esp, 4
	mov	ecx, DWORD PTR _c$[ebp]
	or	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx], eax
$LN7@readlitera:
; Line 798
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, -256				; ffffff00H
	mov	edx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 799
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_readliteral_chr ENDP
; Function compile flags: /Odtp /RTCsu
_colourbits$ = -12					; size = 4
_attr$ = -8						; size = 4
_val$ = -4						; size = 4
_b$ = 8							; size = 4
_c$ = 12						; size = 4
_ldata$ = 16						; size = 4
_state$ = 20						; size = 4
_readliteral_attr PROC
; Line 802
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 805
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_get
	add	esp, 4
	shl	eax, 8
	mov	DWORD PTR _val$[ebp], eax
; Line 806
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_get
	add	esp, 4
	or	eax, DWORD PTR _val$[ebp]
	mov	DWORD PTR _val$[ebp], eax
; Line 808
	cmp	DWORD PTR _val$[ebp], 32768		; 00008000H
	jb	SHORT $LN1@readlitera@2
; Line 809
	mov	edx, DWORD PTR _val$[ebp]
	and	edx, -32769				; ffff7fffH
	mov	DWORD PTR _val$[ebp], edx
; Line 810
	mov	eax, DWORD PTR _val$[ebp]
	shl	eax, 16					; 00000010H
	mov	DWORD PTR _val$[ebp], eax
; Line 811
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_get
	add	esp, 4
	shl	eax, 8
	or	eax, DWORD PTR _val$[ebp]
	mov	DWORD PTR _val$[ebp], eax
; Line 812
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_get
	add	esp, 4
	or	eax, DWORD PTR _val$[ebp]
	mov	DWORD PTR _val$[ebp], eax
$LN1@readlitera@2:
; Line 815
	mov	eax, DWORD PTR _val$[ebp]
	shr	eax, 23					; 00000017H
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _colourbits$[ebp], eax
; Line 816
	mov	ecx, DWORD PTR _val$[ebp]
	and	ecx, 8388607				; 007fffffH
	mov	DWORD PTR _attr$[ebp], ecx
; Line 819
	mov	edx, DWORD PTR _attr$[ebp]
	shr	edx, 4
	shl	edx, 8
	mov	eax, DWORD PTR _attr$[ebp]
	and	eax, 15					; 0000000fH
	or	edx, eax
	mov	DWORD PTR _attr$[ebp], edx
; Line 821
	mov	ecx, DWORD PTR _attr$[ebp]
	shr	ecx, 13					; 0000000dH
	shl	ecx, 17					; 00000011H
	mov	edx, DWORD PTR _attr$[ebp]
	and	edx, 8191				; 00001fffH
	or	ecx, edx
	mov	DWORD PTR _attr$[ebp], ecx
; Line 823
	mov	eax, DWORD PTR _colourbits$[ebp]
	shr	eax, 4
	shl	eax, 13					; 0000000dH
	or	eax, DWORD PTR _attr$[ebp]
	mov	DWORD PTR _attr$[ebp], eax
; Line 824
	mov	ecx, DWORD PTR _colourbits$[ebp]
	and	ecx, 15					; 0000000fH
	shl	ecx, 4
	or	ecx, DWORD PTR _attr$[ebp]
	mov	DWORD PTR _attr$[ebp], ecx
; Line 826
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR _attr$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 827
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_readliteral_attr ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_x$ = -40						; size = 4
_zstate$ = -32						; size = 4
_n$ = -20						; size = 12
__$ArrayPad$ = -4					; size = 4
_b$ = 8							; size = 4
_c$ = 12						; size = 4
_ldata$ = 16						; size = 4
_state$ = 20						; size = 4
_readliteral_cc PROC
; Line 830
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	edi
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 833
	mov	eax, DWORD PTR _ldata$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	sub	ecx, DWORD PTR [eax+20]
	mov	eax, ecx
	cdq
	mov	ecx, 12					; 0000000cH
	idiv	ecx
	mov	DWORD PTR _x$[ebp], eax
; Line 835
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+8], 0
$LN3@readlitera@3:
; Line 837
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN4@readlitera@3
; Line 838
	mov	DWORD PTR _zstate$[ebp], 0
; Line 839
	lea	ecx, DWORD PTR _zstate$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ldata$[ebp]
	push	edx
	lea	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_readliteral_chr
	add	esp, 16					; 00000010H
; Line 840
	cmp	DWORD PTR _n$[ebp], 0
	jne	SHORT $LN1@readlitera@3
; Line 841
	jmp	SHORT $LN4@readlitera@3
$LN1@readlitera@3:
; Line 842
	mov	edx, DWORD PTR _n$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ldata$[ebp]
	push	ecx
	call	_add_cc
	add	esp, 12					; 0000000cH
; Line 843
	jmp	SHORT $LN3@readlitera@3
$LN4@readlitera@3:
; Line 844
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@readlitera@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@readlitera@3:
	DD	2
	DD	$LN8@readlitera@3
$LN8@readlitera@3:
	DD	-20					; ffffffecH
	DD	12					; 0000000cH
	DD	$LN6@readlitera@3
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@readlitera@3
$LN7@readlitera@3:
	DB	122					; 0000007aH
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN6@readlitera@3:
	DB	110					; 0000006eH
	DB	0
_readliteral_cc ENDP
_TEXT	ENDS
EXTRN	_saferealloc:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_n$85863 = -8						; size = 4
_newcc$ = -4						; size = 4
_line$ = 8						; size = 4
_col$ = 12						; size = 4
_chr$ = 16						; size = 4
_add_cc	PROC
; Line 202
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 205
	cmp	DWORD PTR _col$[ebp], 0
	jl	SHORT $LN12@add_cc
	mov	eax, DWORD PTR _line$[ebp]
	mov	ecx, DWORD PTR _col$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jl	SHORT $LN13@add_cc
$LN12@add_cc:
	push	205					; 000000cdH
	push	OFFSET $SG85860
	push	OFFSET $SG85861
	call	__wassert
	add	esp, 12					; 0000000cH
$LN13@add_cc:
; Line 210
	mov	eax, DWORD PTR _line$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	$LN4@add_cc
; Line 211
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _n$85863[ebp], edx
; Line 212
	mov	eax, DWORD PTR _line$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	edx, DWORD PTR _line$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	lea	edx, DWORD PTR [eax+ecx+16]
	mov	eax, DWORD PTR _line$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 213
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _line$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _line$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 214
	mov	eax, DWORD PTR _line$[ebp]
	mov	ecx, DWORD PTR _n$85863[ebp]
	mov	DWORD PTR [eax+16], ecx
$LN8@add_cc:
; Line 215
	mov	edx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR _n$85863[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jge	SHORT $LN4@add_cc
; Line 216
	mov	ecx, DWORD PTR _n$85863[ebp]
	add	ecx, 1
	mov	edx, DWORD PTR _line$[ebp]
	cmp	ecx, DWORD PTR [edx+8]
	jge	SHORT $LN6@add_cc
; Line 217
	mov	eax, DWORD PTR _n$85863[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [edx+eax+8], 1
; Line 218
	jmp	SHORT $LN5@add_cc
$LN6@add_cc:
; Line 219
	mov	eax, DWORD PTR _n$85863[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [edx+eax+8], 0
$LN5@add_cc:
; Line 220
	mov	eax, DWORD PTR _n$85863[ebp]
	add	eax, 1
	mov	DWORD PTR _n$85863[ebp], eax
; Line 221
	jmp	SHORT $LN8@add_cc
$LN4@add_cc:
; Line 227
	mov	ecx, DWORD PTR _col$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+20]
	cmp	DWORD PTR [eax+ecx+8], 0
	je	SHORT $LN3@add_cc
; Line 228
	mov	ecx, DWORD PTR _col$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	edx, DWORD PTR _col$[ebp]
	add	edx, DWORD PTR [eax+ecx+8]
	mov	DWORD PTR _col$[ebp], edx
	jmp	SHORT $LN4@add_cc
$LN3@add_cc:
; Line 234
	mov	eax, DWORD PTR _line$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _newcc$[ebp], ecx
; Line 235
	mov	edx, DWORD PTR _newcc$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _line$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	DWORD PTR [ecx+edx+8], 0
	je	SHORT $LN2@add_cc
; Line 236
	mov	edx, DWORD PTR _newcc$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _line$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR _newcc$[ebp]
	add	eax, DWORD PTR [ecx+edx+8]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 237
	jmp	SHORT $LN1@add_cc
$LN2@add_cc:
; Line 238
	mov	edx, DWORD PTR _line$[ebp]
	mov	DWORD PTR [edx+16], 0
$LN1@add_cc:
; Line 239
	mov	eax, DWORD PTR _newcc$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [edx+eax+8], 0
; Line 240
	mov	eax, DWORD PTR _newcc$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	ecx, DWORD PTR _chr$[ebp]
	mov	DWORD PTR [eax+edx], ecx
; Line 241
	mov	edx, DWORD PTR _newcc$[ebp]
	sub	edx, DWORD PTR _col$[ebp]
	mov	eax, DWORD PTR _col$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _line$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	mov	DWORD PTR [ecx+eax+8], edx
; Line 246
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_add_cc	ENDP
_TEXT	ENDS
EXTRN	_memmove:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_oldcols$ = -8						; size = 4
_i$ = -4						; size = 4
_term$ = 8						; size = 4
_line$ = 12						; size = 4
_cols$ = 16						; size = 4
_resizeline PROC
; Line 914
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 917
	mov	eax, DWORD PTR _line$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _cols$[ebp]
	je	$LN15@resizeline
; Line 919
	mov	edx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _oldcols$[ebp], eax
; Line 929
	mov	ecx, DWORD PTR _cols$[ebp]
	mov	DWORD PTR _i$[ebp], ecx
	jmp	SHORT $LN13@resizeline
$LN12@resizeline:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN13@resizeline:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _oldcols$[ebp]
	jge	SHORT $LN11@resizeline
; Line 930
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_clear_cc
	add	esp, 8
	jmp	SHORT $LN12@resizeline
$LN11@resizeline:
; Line 940
	mov	eax, DWORD PTR _cols$[ebp]
	cmp	eax, DWORD PTR _oldcols$[ebp]
	jge	SHORT $LN10@resizeline
; Line 942
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	imul	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _oldcols$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _line$[ebp]
	add	ecx, DWORD PTR [edx+20]
	push	ecx
	mov	eax, DWORD PTR _cols$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _line$[ebp]
	add	eax, DWORD PTR [ecx+20]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
$LN10@resizeline:
; Line 948
	mov	edx, DWORD PTR _cols$[ebp]
	sub	edx, DWORD PTR _oldcols$[ebp]
	mov	eax, DWORD PTR _line$[ebp]
	add	edx, DWORD PTR [eax+8]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 949
	push	12					; 0000000cH
	mov	edx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _line$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 950
	mov	edx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR _cols$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 956
	mov	ecx, DWORD PTR _cols$[ebp]
	cmp	ecx, DWORD PTR _oldcols$[ebp]
	jle	SHORT $LN9@resizeline
; Line 958
	mov	edx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR _line$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax+4]
	imul	ecx, 12					; 0000000cH
	push	ecx
	mov	edx, DWORD PTR _oldcols$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _line$[ebp]
	add	edx, DWORD PTR [eax+20]
	push	edx
	mov	ecx, DWORD PTR _cols$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _line$[ebp]
	add	ecx, DWORD PTR [edx+20]
	push	ecx
	call	_memmove
	add	esp, 12					; 0000000cH
$LN9@resizeline:
; Line 967
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN8@resizeline
$LN7@resizeline:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN8@resizeline:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _oldcols$[ebp]
	jge	SHORT $LN6@resizeline
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR _cols$[ebp]
	jge	SHORT $LN6@resizeline
; Line 968
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	cmp	DWORD PTR [edx+eax+8], 0
	je	SHORT $LN5@resizeline
; Line 969
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	ecx, DWORD PTR _cols$[ebp]
	sub	ecx, DWORD PTR _oldcols$[ebp]
	add	ecx, DWORD PTR [edx+eax+8]
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR [eax+edx+8], ecx
$LN5@resizeline:
; Line 970
	jmp	SHORT $LN7@resizeline
$LN6@resizeline:
	mov	ecx, DWORD PTR _line$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN4@resizeline
; Line 971
	mov	edx, DWORD PTR _cols$[ebp]
	sub	edx, DWORD PTR _oldcols$[ebp]
	mov	eax, DWORD PTR _line$[ebp]
	add	edx, DWORD PTR [eax+16]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	DWORD PTR [ecx+16], edx
$LN4@resizeline:
; Line 978
	mov	edx, DWORD PTR _oldcols$[ebp]
	mov	DWORD PTR _i$[ebp], edx
	jmp	SHORT $LN3@resizeline
$LN2@resizeline:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@resizeline:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _cols$[ebp]
	jge	SHORT $LN15@resizeline
; Line 979
	mov	edx, DWORD PTR _term$[ebp]
	add	edx, 72					; 00000048H
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _line$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	add	ecx, eax
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN2@resizeline
$LN15@resizeline:
; Line 985
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_resizeline ENDP
; Function compile flags: /Odtp /RTCsu
_origcol$ = -8						; size = 4
_oldfree$ = -4						; size = 4
_line$ = 8						; size = 4
_col$ = 12						; size = 4
_clear_cc PROC
; Line 252
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 253
	mov	eax, DWORD PTR _col$[ebp]
	mov	DWORD PTR _origcol$[ebp], eax
; Line 255
	cmp	DWORD PTR _col$[ebp], 0
	jl	SHORT $LN8@clear_cc
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR _col$[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jl	SHORT $LN9@clear_cc
$LN8@clear_cc:
	push	255					; 000000ffH
	push	OFFSET $SG85886
	push	OFFSET $SG85887
	call	__wassert
	add	esp, 12					; 0000000cH
$LN9@clear_cc:
; Line 257
	mov	ecx, DWORD PTR _col$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+20]
	cmp	DWORD PTR [eax+ecx+8], 0
	jne	SHORT $LN5@clear_cc
; Line 258
	jmp	$LN6@clear_cc
$LN5@clear_cc:
; Line 260
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _oldfree$[ebp], edx
; Line 261
	mov	eax, DWORD PTR _col$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	ecx, DWORD PTR _col$[ebp]
	add	ecx, DWORD PTR [edx+eax+8]
	mov	edx, DWORD PTR _line$[ebp]
	mov	DWORD PTR [edx+16], ecx
$LN4@clear_cc:
; Line 262
	mov	eax, DWORD PTR _col$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	cmp	DWORD PTR [edx+eax+8], 0
	je	SHORT $LN3@clear_cc
; Line 263
	mov	eax, DWORD PTR _col$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	ecx, DWORD PTR _col$[ebp]
	add	ecx, DWORD PTR [edx+eax+8]
	mov	DWORD PTR _col$[ebp], ecx
	jmp	SHORT $LN4@clear_cc
$LN3@clear_cc:
; Line 264
	cmp	DWORD PTR _oldfree$[ebp], 0
	je	SHORT $LN2@clear_cc
; Line 265
	mov	edx, DWORD PTR _oldfree$[ebp]
	sub	edx, DWORD PTR _col$[ebp]
	mov	eax, DWORD PTR _col$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _line$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	mov	DWORD PTR [ecx+eax+8], edx
; Line 266
	jmp	SHORT $LN1@clear_cc
$LN2@clear_cc:
; Line 267
	mov	edx, DWORD PTR _col$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _line$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx+edx+8], 0
$LN1@clear_cc:
; Line 269
	mov	edx, DWORD PTR _origcol$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _line$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx+edx+8], 0
$LN6@clear_cc:
; Line 274
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_clear_cc ENDP
; Function compile flags: /Odtp /RTCsu
_term$ = 8						; size = 4
_line$ = 12						; size = 4
_check_line_size PROC
; Line 1094
	push	ebp
	mov	ebp, esp
; Line 1095
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [eax+300]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN2@check_line
; Line 1096
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	push	ecx
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_resizeline
	add	esp, 12					; 0000000cH
$LN2@check_line:
; Line 1097
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_check_line_size ENDP
_TEXT	ENDS
PUBLIC	_term_init
EXTRN	_bufchain_init:PROC
EXTRN	_strcpy:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_term$ = -4						; size = 4
_myconf$ = 8						; size = 4
_ucsdata$ = 12						; size = 4
_frontend$ = 16						; size = 4
_term_init PROC
; Line 1576
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1583
	push	4464					; 00001170H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _term$[ebp], eax
; Line 1584
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _frontend$[ebp]
	mov	DWORD PTR [eax+4232], ecx
; Line 1585
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _ucsdata$[ebp]
	mov	DWORD PTR [edx+4240], eax
; Line 1586
	mov	ecx, DWORD PTR _myconf$[ebp]
	push	ecx
	call	_conf_copy
	add	esp, 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4244], eax
; Line 1587
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+4236], 0
; Line 1588
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx], 65535			; 0000ffffH
; Line 1589
	push	OFFSET $SG86486
	mov	edx, DWORD PTR _term$[ebp]
	add	edx, 2624				; 00000a40H
	push	edx
	call	_strcpy
	add	esp, 8
; Line 1590
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+4260], 0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+4264], 0
; Line 1591
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4208], 0
; Line 1592
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+4212], 0
; Line 1593
	mov	ecx, DWORD PTR _term$[ebp]
	add	ecx, 96					; 00000060H
	push	ecx
	call	_bufchain_init
	add	esp, 4
; Line 1594
	mov	edx, DWORD PTR _term$[ebp]
	add	edx, 248				; 000000f8H
	push	edx
	call	_bufchain_init
	add	esp, 4
; Line 1595
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+240], 0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+236], 0
; Line 1596
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+260], 0
; Line 1597
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+328], 0
; Line 1598
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+336], 0
; Line 1599
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+340], 0
; Line 1600
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+360], 0
; Line 1601
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+180], 0
; Line 1602
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+192], 0
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+188], 0
; Line 1603
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+308], 1
; Line 1604
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+332], 0
; Line 1605
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
; Line 1606
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3656], 0
; Line 1607
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+36], 0
; Line 1609
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_term_copy_stuff_from_conf
	add	esp, 4
; Line 1611
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+12], 0
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1612
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+20], 0
; Line 1613
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+424], 0
; Line 1614
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 1615
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+24], 0
; Line 1616
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+32], -1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+28], -1
; Line 1617
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3648], 0
; Line 1618
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_deselect
	add	esp, 4
; Line 1619
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+300], -1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+296], -1
; Line 1620
	push	1
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_power_on
	add	esp, 8
; Line 1621
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+44], 0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+40], 0
; Line 1625
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+48], 0
; Line 1626
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+56], 0
; Line 1627
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+52], 0
; Line 1628
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4204], -1
; Line 1629
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+4220], 0
; Line 1630
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+4224], 0
; Line 1631
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4248], 0
; Line 1632
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+4276], 0
; Line 1633
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+4280], 0
; Line 1634
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4284], 0
; Line 1635
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+4288], 0
; Line 1636
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+4292], 0
; Line 1638
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4252], 0
; Line 1640
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+4304], 0
; Line 1641
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+4300], 0
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4296], 0
; Line 1644
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+72], 55328		; 0000d820H
; Line 1645
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+76], 132352		; 00020500H
; Line 1646
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+80], 0
; Line 1647
	mov	eax, DWORD PTR _term$[ebp]
	add	eax, 72					; 00000048H
	mov	ecx, DWORD PTR _term$[ebp]
	add	ecx, 84					; 00000054H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
; Line 1649
	mov	eax, DWORD PTR _term$[ebp]
; Line 1650
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_term_init ENDP
_TEXT	ENDS
PUBLIC	_term_free
EXTRN	_expire_timer_context:PROC
EXTRN	_printer_finish_job:PROC
EXTRN	_bufchain_clear:PROC
EXTRN	_freetree234:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$ = -12						; size = 4
_beep$ = -8						; size = 4
_line$ = -4						; size = 4
_term$ = 8						; size = 4
_term_free PROC
; Line 1653
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
$LN16@term_free:
; Line 1658
	push	0
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_delpos234
	add	esp, 8
	mov	DWORD PTR _line$[ebp], eax
	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN15@term_free
; Line 1659
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
	jmp	SHORT $LN16@term_free
$LN15@term_free:
; Line 1660
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_freetree234
	add	esp, 4
$LN14@term_free:
; Line 1661
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_delpos234
	add	esp, 8
	mov	DWORD PTR _line$[ebp], eax
	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN13@term_free
; Line 1662
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	_freeline
	add	esp, 4
	jmp	SHORT $LN14@term_free
$LN13@term_free:
; Line 1663
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_freetree234
	add	esp, 4
$LN12@term_free:
; Line 1664
	push	0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_delpos234
	add	esp, 8
	mov	DWORD PTR _line$[ebp], eax
	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN11@term_free
; Line 1665
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	_freeline
	add	esp, 4
	jmp	SHORT $LN12@term_free
$LN11@term_free:
; Line 1666
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_freetree234
	add	esp, 4
; Line 1667
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN10@term_free
; Line 1668
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@term_free
$LN8@term_free:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN9@term_free:
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR [edx+296]
	jge	SHORT $LN10@term_free
; Line 1669
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_freeline
	add	esp, 4
	jmp	SHORT $LN8@term_free
$LN10@term_free:
; Line 1671
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	_safefree
	add	esp, 4
$LN6@term_free:
; Line 1672
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+40], 0
	je	SHORT $LN5@term_free
; Line 1673
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR _beep$[ebp], eax
; Line 1674
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _beep$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+40], eax
; Line 1675
	mov	ecx, DWORD PTR _beep$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 1676
	jmp	SHORT $LN6@term_free
$LN5@term_free:
; Line 1677
	mov	edx, DWORD PTR _term$[ebp]
	add	edx, 96					; 00000060H
	push	edx
	call	_bufchain_clear
	add	esp, 4
; Line 1678
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+260], 0
	je	SHORT $LN4@term_free
; Line 1679
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+260]
	push	edx
	call	_printer_finish_job
	add	esp, 4
$LN4@term_free:
; Line 1680
	mov	eax, DWORD PTR _term$[ebp]
	add	eax, 248				; 000000f8H
	push	eax
	call	_bufchain_clear
	add	esp, 4
; Line 1681
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4208]
	push	edx
	call	_safefree
	add	esp, 4
; Line 1682
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4276]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 1683
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4284]
	push	eax
	call	_safefree
	add	esp, 4
; Line 1684
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4288]
	push	edx
	call	_safefree
	add	esp, 4
; Line 1686
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@term_free
$LN2@term_free:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@term_free:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR [ecx+4304]
	jge	SHORT $LN1@term_free
; Line 1687
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4296]
	mov	eax, DWORD PTR [edx+eax+4]
	push	eax
	call	_safefree
	add	esp, 4
; Line 1688
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4300]
	mov	ecx, DWORD PTR [eax+ecx+4]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 1689
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4300]
	mov	edx, DWORD PTR [ecx+edx+8]
	push	edx
	call	_safefree
	add	esp, 4
; Line 1690
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4300]
	mov	eax, DWORD PTR [edx+eax+12]
	push	eax
	call	_safefree
	add	esp, 4
; Line 1691
	jmp	$LN2@term_free
$LN1@term_free:
; Line 1692
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4296]
	push	edx
	call	_safefree
	add	esp, 4
; Line 1693
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4300]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 1695
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3648]
	push	eax
	call	_safefree
	add	esp, 4
; Line 1697
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_expire_timer_context
	add	esp, 4
; Line 1699
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4244]
	push	eax
	call	_conf_free
	add	esp, 4
; Line 1701
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 1702
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_term_free ENDP
; Function compile flags: /Odtp /RTCsu
_line$ = 8						; size = 4
_freeline PROC
; Line 132
	push	ebp
	mov	ebp, esp
; Line 133
	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN2@freeline
; Line 134
	mov	eax, DWORD PTR _line$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 135
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
$LN2@freeline:
; Line 137
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_freeline ENDP
_TEXT	ENDS
PUBLIC	_term_size
EXTRN	_addpos234:PROC
EXTRN	_newtree234:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv341 = -52						; size = 4
tv210 = -48						; size = 4
tv83 = -44						; size = 4
_i$86609 = -40						; size = 4
_cline$86558 = -36					; size = 4
_save_alt_which$ = -32					; size = 4
_sblen$ = -28						; size = 4
_oldrows$ = -24						; size = 4
_j$ = -20						; size = 4
_i$ = -16						; size = 4
_line$ = -12						; size = 4
_newdisp$ = -8						; size = 4
_newalt$ = -4						; size = 4
_term$ = 8						; size = 4
_newrows$ = 12						; size = 4
_newcols$ = 16						; size = 4
_newsavelines$ = 20					; size = 4
_term_size PROC
; Line 1708
	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1711
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	mov	DWORD PTR _oldrows$[ebp], ecx
; Line 1713
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+420]
	mov	DWORD PTR _save_alt_which$[ebp], eax
; Line 1716
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _newrows$[ebp]
	cmp	edx, DWORD PTR [ecx+296]
	jne	SHORT $LN47@term_size
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _newcols$[ebp]
	cmp	ecx, DWORD PTR [eax+300]
	jne	SHORT $LN47@term_size
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _newsavelines$[ebp]
	cmp	eax, DWORD PTR [edx+304]
	jne	SHORT $LN47@term_size
; Line 1717
	jmp	$LN48@term_size
$LN47@term_size:
; Line 1721
	cmp	DWORD PTR _newrows$[ebp], 1
	jge	SHORT $LN46@term_size
	mov	DWORD PTR _newrows$[ebp], 1
$LN46@term_size:
; Line 1722
	cmp	DWORD PTR _newcols$[ebp], 1
	jge	SHORT $LN45@term_size
	mov	DWORD PTR _newcols$[ebp], 1
$LN45@term_size:
; Line 1724
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_deselect
	add	esp, 4
; Line 1725
	push	0
	push	0
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_swap_screen
	add	esp, 16					; 00000010H
; Line 1727
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+124], 0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+412], 0
; Line 1728
	mov	edx, DWORD PTR _newrows$[ebp]
	sub	edx, 1
	mov	DWORD PTR tv83[ebp], edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR tv83[ebp]
	mov	DWORD PTR [eax+128], ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR tv83[ebp]
	mov	DWORD PTR [edx+416], eax
; Line 1730
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+296], -1
	jne	SHORT $LN44@term_size
; Line 1731
	push	0
	call	_newtree234
	add	esp, 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 1732
	push	0
	call	_newtree234
	add	esp, 4
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1733
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+20], 0
; Line 1734
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+296], 0
$LN44@term_size:
; Line 1756
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_count234
	add	esp, 4
	mov	DWORD PTR _sblen$[ebp], eax
; Line 1758
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_count234
	add	esp, 4
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+296], eax
	je	SHORT $LN43@term_size
	push	1758					; 000006deH
	push	OFFSET $SG86552
	push	OFFSET $SG86553
	call	__wassert
	add	esp, 12					; 0000000cH
$LN43@term_size:
; Line 1759
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+296]
	cmp	edx, DWORD PTR _newrows$[ebp]
	jge	$LN39@term_size
; Line 1760
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jle	$LN41@term_size
; Line 1763
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _sblen$[ebp]
	cmp	edx, DWORD PTR [ecx+20]
	jge	SHORT $LN51@term_size
	push	1763					; 000006e3H
	push	OFFSET $SG86560
	push	OFFSET $SG86561
	call	__wassert
	add	esp, 12					; 0000000cH
$LN51@term_size:
; Line 1764
	mov	ecx, DWORD PTR _sblen$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _sblen$[ebp], ecx
	mov	edx, DWORD PTR _sblen$[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_delpos234
	add	esp, 8
	mov	DWORD PTR _cline$86558[ebp], eax
; Line 1765
	push	0
	mov	edx, DWORD PTR _cline$86558[ebp]
	push	edx
	call	_decompressline
	add	esp, 8
	mov	DWORD PTR _line$[ebp], eax
; Line 1766
	mov	eax, DWORD PTR _cline$86558[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 1767
	mov	ecx, DWORD PTR _line$[ebp]
	mov	DWORD PTR [ecx+12], 0
; Line 1768
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 1769
	push	0
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_addpos234
	add	esp, 12					; 0000000cH
; Line 1770
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+108]
	add	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+108], eax
; Line 1771
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+116]
	add	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+116], eax
; Line 1772
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+380]
	add	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+380], eax
; Line 1773
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+264]
	add	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+264], eax
; Line 1774
	jmp	SHORT $LN40@term_size
$LN41@term_size:
; Line 1776
	push	0
	mov	edx, DWORD PTR _newcols$[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_newline
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _line$[ebp], eax
; Line 1777
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_count234
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_addpos234
	add	esp, 12					; 0000000cH
$LN40@term_size:
; Line 1779
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	add	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+296], ecx
; Line 1780
	jmp	$LN43@term_size
$LN39@term_size:
; Line 1782
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	cmp	ecx, DWORD PTR _newrows$[ebp]
	jle	$LN38@term_size
; Line 1783
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+296]
	sub	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+108], eax
	jge	SHORT $LN37@term_size
; Line 1785
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+296]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_delpos234
	add	esp, 8
	mov	DWORD PTR _line$[ebp], eax
; Line 1786
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	_freeline
	add	esp, 4
; Line 1787
	jmp	$LN36@term_size
$LN37@term_size:
; Line 1789
	push	0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_delpos234
	add	esp, 8
	mov	DWORD PTR _line$[ebp], eax
; Line 1790
	mov	eax, DWORD PTR _sblen$[ebp]
	mov	DWORD PTR tv210[ebp], eax
	mov	ecx, DWORD PTR _sblen$[ebp]
	add	ecx, 1
	mov	DWORD PTR _sblen$[ebp], ecx
	mov	edx, DWORD PTR tv210[ebp]
	push	edx
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	_compressline
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_addpos234
	add	esp, 12					; 0000000cH
; Line 1791
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	_freeline
	add	esp, 4
; Line 1792
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	add	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+20], edx
; Line 1793
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	sub	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+108], edx
; Line 1794
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	sub	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+116], edx
; Line 1795
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+380]
	sub	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+380], edx
; Line 1796
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+264]
	sub	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+264], edx
$LN36@term_size:
; Line 1798
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+296]
	sub	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+296], edx
; Line 1799
	jmp	$LN39@term_size
$LN38@term_size:
; Line 1800
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+296]
	cmp	edx, DWORD PTR _newrows$[ebp]
	je	SHORT $LN52@term_size
	push	1800					; 00000708H
	push	OFFSET $SG86570
	push	OFFSET $SG86571
	call	__wassert
	add	esp, 12					; 0000000cH
$LN52@term_size:
; Line 1801
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_count234
	add	esp, 4
	cmp	eax, DWORD PTR _newrows$[ebp]
	je	SHORT $LN35@term_size
	push	1801					; 00000709H
	push	OFFSET $SG86573
	push	OFFSET $SG86574
	call	__wassert
	add	esp, 12					; 0000000cH
$LN35@term_size:
; Line 1804
	mov	ecx, DWORD PTR _sblen$[ebp]
	cmp	ecx, DWORD PTR _newsavelines$[ebp]
	jle	SHORT $LN34@term_size
; Line 1805
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_delpos234
	add	esp, 8
	mov	DWORD PTR _line$[ebp], eax
; Line 1806
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 1807
	mov	edx, DWORD PTR _sblen$[ebp]
	sub	edx, 1
	mov	DWORD PTR _sblen$[ebp], edx
; Line 1808
	jmp	SHORT $LN35@term_size
$LN34@term_size:
; Line 1809
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _sblen$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jge	SHORT $LN33@term_size
; Line 1810
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _sblen$[ebp]
	mov	DWORD PTR [edx+20], eax
$LN33@term_size:
; Line 1811
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_count234
	add	esp, 4
	cmp	eax, DWORD PTR _newsavelines$[ebp]
	jle	SHORT $LN54@term_size
	push	1811					; 00000713H
	push	OFFSET $SG86580
	push	OFFSET $SG86581
	call	__wassert
	add	esp, 12					; 0000000cH
$LN54@term_size:
; Line 1812
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_count234
	add	esp, 4
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	eax, DWORD PTR [ecx+20]
	jge	SHORT $LN55@term_size
	push	1812					; 00000714H
	push	OFFSET $SG86583
	push	OFFSET $SG86584
	call	__wassert
	add	esp, 12					; 0000000cH
$LN55@term_size:
; Line 1813
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 1816
	push	4
	mov	ecx, DWORD PTR _newrows$[ebp]
	push	ecx
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _newdisp$[ebp], eax
; Line 1817
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN32@term_size
$LN31@term_size:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN32@term_size:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _newrows$[ebp]
	jge	SHORT $LN30@term_size
; Line 1818
	push	0
	mov	ecx, DWORD PTR _newcols$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_newline
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _newdisp$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 1819
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN29@term_size
$LN28@term_size:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN29@term_size:
	mov	ecx, DWORD PTR _j$[ebp]
	cmp	ecx, DWORD PTR _newcols$[ebp]
	jge	SHORT $LN27@term_size
; Line 1820
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _newdisp$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR _j$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+edx+4], 262143		; 0003ffffH
	jmp	SHORT $LN28@term_size
$LN27@term_size:
; Line 1821
	jmp	SHORT $LN31@term_size
$LN30@term_size:
; Line 1822
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+24], 0
	je	SHORT $LN26@term_size
; Line 1823
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN25@term_size
$LN24@term_size:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN25@term_size:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _oldrows$[ebp]
	jge	SHORT $LN26@term_size
; Line 1824
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_freeline
	add	esp, 4
	jmp	SHORT $LN24@term_size
$LN26@term_size:
; Line 1826
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	_safefree
	add	esp, 4
; Line 1827
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _newdisp$[ebp]
	mov	DWORD PTR [ecx+24], edx
; Line 1828
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+32], -1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+28], -1
; Line 1831
	push	0
	call	_newtree234
	add	esp, 4
	mov	DWORD PTR _newalt$[ebp], eax
; Line 1832
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN22@term_size
$LN21@term_size:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN22@term_size:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _newrows$[ebp]
	jge	SHORT $LN20@term_size
; Line 1833
	push	1
	mov	ecx, DWORD PTR _newcols$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_newline
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _line$[ebp], eax
; Line 1834
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	mov	edx, DWORD PTR _newalt$[ebp]
	push	edx
	call	_addpos234
	add	esp, 12					; 0000000cH
; Line 1835
	jmp	SHORT $LN21@term_size
$LN20@term_size:
; Line 1836
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN19@term_size
$LN18@term_size:
; Line 1837
	push	0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_delpos234
	add	esp, 8
	mov	DWORD PTR _line$[ebp], eax
	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN17@term_size
; Line 1838
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	_freeline
	add	esp, 4
	jmp	SHORT $LN18@term_size
$LN17@term_size:
; Line 1839
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_freetree234
	add	esp, 4
$LN19@term_size:
; Line 1841
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _newalt$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 1842
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+424], 0
; Line 1844
	push	1
	mov	eax, DWORD PTR _newcols$[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3648]
	push	edx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3648], eax
; Line 1847
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+300], 0
	jle	SHORT $LN56@term_size
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	mov	DWORD PTR tv341[ebp], ecx
	jmp	SHORT $LN57@term_size
$LN56@term_size:
	mov	DWORD PTR tv341[ebp], 0
$LN57@term_size:
	mov	edx, DWORD PTR tv341[ebp]
	mov	DWORD PTR _i$86609[ebp], edx
	jmp	SHORT $LN16@term_size
$LN15@term_size:
	mov	eax, DWORD PTR _i$86609[ebp]
	add	eax, 1
	mov	DWORD PTR _i$86609[ebp], eax
$LN16@term_size:
	mov	ecx, DWORD PTR _i$86609[ebp]
	cmp	ecx, DWORD PTR _newcols$[ebp]
	jge	SHORT $LN14@term_size
; Line 1848
	mov	edx, DWORD PTR _i$86609[ebp]
	and	edx, -2147483641			; 80000007H
	jns	SHORT $LN58@term_size
	dec	edx
	or	edx, -8					; fffffff8H
	inc	edx
$LN58@term_size:
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3648]
	mov	eax, DWORD PTR _i$86609[ebp]
	mov	BYTE PTR [ecx+eax], dl
	jmp	SHORT $LN15@term_size
$LN14@term_size:
; Line 1852
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+116], 0
	jge	SHORT $LN13@term_size
; Line 1853
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+116], 0
$LN13@term_size:
; Line 1854
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	cmp	ecx, DWORD PTR _newrows$[ebp]
	jl	SHORT $LN12@term_size
; Line 1855
	mov	edx, DWORD PTR _newrows$[ebp]
	sub	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+116], edx
$LN12@term_size:
; Line 1856
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	cmp	edx, DWORD PTR _newcols$[ebp]
	jl	SHORT $LN11@term_size
; Line 1857
	mov	eax, DWORD PTR _newcols$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+120], eax
$LN11@term_size:
; Line 1858
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+264], 0
	jge	SHORT $LN10@term_size
; Line 1859
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+264], 0
$LN10@term_size:
; Line 1860
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+264]
	cmp	edx, DWORD PTR _newrows$[ebp]
	jl	SHORT $LN9@term_size
; Line 1861
	mov	eax, DWORD PTR _newrows$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+264], eax
$LN9@term_size:
; Line 1862
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+268]
	cmp	eax, DWORD PTR _newcols$[ebp]
	jl	SHORT $LN8@term_size
; Line 1863
	mov	ecx, DWORD PTR _newcols$[ebp]
	sub	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+268], ecx
$LN8@term_size:
; Line 1864
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+108], 0
	jge	SHORT $LN7@term_size
; Line 1865
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+108], 0
$LN7@term_size:
; Line 1866
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+108]
	cmp	eax, DWORD PTR _newrows$[ebp]
	jl	SHORT $LN6@term_size
; Line 1867
	mov	ecx, DWORD PTR _newrows$[ebp]
	sub	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+108], ecx
$LN6@term_size:
; Line 1868
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	cmp	ecx, DWORD PTR _newcols$[ebp]
	jl	SHORT $LN5@term_size
; Line 1869
	mov	edx, DWORD PTR _newcols$[ebp]
	sub	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+112], edx
$LN5@term_size:
; Line 1870
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+380], 0
	jge	SHORT $LN4@term_size
; Line 1871
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+380], 0
$LN4@term_size:
; Line 1872
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+380]
	cmp	ecx, DWORD PTR _newrows$[ebp]
	jl	SHORT $LN3@term_size
; Line 1873
	mov	edx, DWORD PTR _newrows$[ebp]
	sub	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+380], edx
$LN3@term_size:
; Line 1874
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+376]
	cmp	edx, DWORD PTR _newcols$[ebp]
	jl	SHORT $LN2@term_size
; Line 1875
	mov	eax, DWORD PTR _newcols$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+376], eax
$LN2@term_size:
; Line 1876
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+380], 0
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+376], 0
; Line 1877
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+392], 0
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+140], 0
; Line 1879
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _newrows$[ebp]
	mov	DWORD PTR [eax+296], ecx
; Line 1880
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _newcols$[ebp]
	mov	DWORD PTR [edx+300], eax
; Line 1881
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _newsavelines$[ebp]
	mov	DWORD PTR [ecx+304], edx
; Line 1883
	push	0
	push	0
	mov	eax, DWORD PTR _save_alt_which$[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_swap_screen
	add	esp, 16					; 00000010H
; Line 1885
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_update_sbar
	add	esp, 4
; Line 1886
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_term_update
	add	esp, 4
; Line 1887
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4220], 0
	je	SHORT $LN48@term_size
; Line 1888
	mov	esi, esp
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+296]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+300]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4224]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4220]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN48@term_size:
; Line 1889
	pop	edi
	pop	esi
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_term_size ENDP
; Function compile flags: /Odtp /RTCsu
tv79 = -12						; size = 4
_j$ = -8						; size = 4
_line$ = -4						; size = 4
_term$ = 8						; size = 4
_cols$ = 12						; size = 4
_bce$ = 16						; size = 4
_newline PROC
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 119
	push	24					; 00000018H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _line$[ebp], eax
; Line 120
	push	12					; 0000000cH
	mov	eax, DWORD PTR _cols$[ebp]
	push	eax
	call	_safemalloc
	add	esp, 8
	mov	ecx, DWORD PTR _line$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 121
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN3@newline
$LN2@newline:
	mov	edx, DWORD PTR _j$[ebp]
	add	edx, 1
	mov	DWORD PTR _j$[ebp], edx
$LN3@newline:
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _cols$[ebp]
	jge	SHORT $LN1@newline
; Line 122
	cmp	DWORD PTR _bce$[ebp], 0
	je	SHORT $LN6@newline
	mov	ecx, DWORD PTR _term$[ebp]
	add	ecx, 84					; 00000054H
	mov	DWORD PTR tv79[ebp], ecx
	jmp	SHORT $LN7@newline
$LN6@newline:
	mov	edx, DWORD PTR _term$[ebp]
	add	edx, 72					; 00000048H
	mov	DWORD PTR tv79[ebp], edx
$LN7@newline:
	mov	eax, DWORD PTR tv79[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [edx+20]
	add	edx, ecx
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], eax
	jmp	SHORT $LN2@newline
$LN1@newline:
; Line 123
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR _cols$[ebp]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _line$[ebp]
	mov	ecx, DWORD PTR _cols$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 124
	xor	edx, edx
	mov	eax, DWORD PTR _line$[ebp]
	mov	WORD PTR [eax], dx
; Line 125
	mov	ecx, DWORD PTR _line$[ebp]
	mov	DWORD PTR [ecx+12], 0
; Line 126
	mov	edx, DWORD PTR _line$[ebp]
	mov	DWORD PTR [edx+16], 0
; Line 128
	mov	eax, DWORD PTR _line$[ebp]
; Line 129
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_newline ENDP
; Function compile flags: /Odtp /RTCsu
_n$86103 = -32						; size = 4
_n$86097 = -28						; size = 4
_b$ = -24						; size = 4
_buffer$ = -16						; size = 12
_ldata$ = 8						; size = 4
_compressline PROC
; Line 639
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 640
	mov	DWORD PTR _buffer$[ebp], 0
	mov	DWORD PTR _buffer$[ebp+4], 0
	mov	DWORD PTR _buffer$[ebp+8], 0
	lea	eax, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR _b$[ebp], eax
; Line 648
	mov	ecx, DWORD PTR _ldata$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _n$86097[ebp], edx
$LN4@compressli:
; Line 649
	cmp	DWORD PTR _n$86097[ebp], 128		; 00000080H
	jl	SHORT $LN3@compressli
; Line 650
	mov	eax, DWORD PTR _n$86097[ebp]
	and	eax, 127				; 0000007fH
	or	eax, 128				; 00000080H
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_add
	add	esp, 8
; Line 651
	mov	edx, DWORD PTR _n$86097[ebp]
	sar	edx, 7
	mov	DWORD PTR _n$86097[ebp], edx
; Line 652
	jmp	SHORT $LN4@compressli
$LN3@compressli:
; Line 653
	movzx	eax, BYTE PTR _n$86097[ebp]
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_add
	add	esp, 8
; Line 660
	mov	edx, DWORD PTR _ldata$[ebp]
	movzx	eax, WORD PTR [edx]
	mov	DWORD PTR _n$86103[ebp], eax
$LN2@compressli:
; Line 661
	cmp	DWORD PTR _n$86103[ebp], 128		; 00000080H
	jl	SHORT $LN1@compressli
; Line 662
	mov	ecx, DWORD PTR _n$86103[ebp]
	and	ecx, 127				; 0000007fH
	or	ecx, 128				; 00000080H
	push	ecx
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_add
	add	esp, 8
; Line 663
	mov	eax, DWORD PTR _n$86103[ebp]
	sar	eax, 7
	mov	DWORD PTR _n$86103[ebp], eax
; Line 664
	jmp	SHORT $LN2@compressli
$LN1@compressli:
; Line 665
	movzx	ecx, BYTE PTR _n$86103[ebp]
	push	ecx
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_add
	add	esp, 8
; Line 681
	push	OFFSET _makeliteral_chr
	mov	eax, DWORD PTR _ldata$[ebp]
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_makerle
	add	esp, 12					; 0000000cH
; Line 682
	push	OFFSET _makeliteral_attr
	mov	edx, DWORD PTR _ldata$[ebp]
	push	edx
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_makerle
	add	esp, 12					; 0000000cH
; Line 683
	push	OFFSET _makeliteral_cc
	mov	ecx, DWORD PTR _ldata$[ebp]
	push	ecx
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_makerle
	add	esp, 12					; 0000000cH
; Line 726
	push	1
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_saferealloc
	add	esp, 12					; 0000000cH
; Line 727
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@compressli
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@compressli:
	DD	1
	DD	$LN8@compressli
$LN8@compressli:
	DD	-16					; fffffff0H
	DD	12					; 0000000cH
	DD	$LN7@compressli
$LN7@compressli:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_compressline ENDP
; Function compile flags: /Odtp /RTCsu
_b$ = 8						; size = 4
_c$ = 12						; size = 1
_add	PROC
; Line 361
	push	ebp
	mov	ebp, esp
; Line 362
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jl	SHORT $LN1@add
; Line 363
	mov	eax, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [eax+4]
	imul	eax, 3
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, 512				; 00000200H
	mov	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 364
	push	1
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR [ecx], eax
$LN1@add:
; Line 366
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	cl, BYTE PTR _c$[ebp]
	mov	BYTE PTR [eax+edx], cl
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 367
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_add	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv76 = -76						; size = 4
tv71 = -72						; size = 4
_tmplen$86006 = -68					; size = 4
_tmppos$86005 = -64					; size = 4
_runlen$85989 = -60					; size = 4
_runpos$85988 = -56					; size = 4
_oldstate$ = -52					; size = 4
_state$ = -44						; size = 4
_c$ = -36						; size = 4
_prev2$ = -32						; size = 4
_thispos$ = -28						; size = 4
_thislen$ = -24						; size = 4
_prevpos$ = -20						; size = 4
_prevlen$ = -16						; size = 4
_n$ = -12						; size = 4
_hdrsize$ = -8						; size = 4
_hdrpos$ = -4						; size = 4
_b$ = 8							; size = 4
_ldata$ = 12						; size = 4
_makeliteral$ = 16					; size = 4
_makerle PROC
; Line 375
	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-76]
	mov	ecx, 19					; 00000013H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 377
	mov	eax, DWORD PTR _ldata$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _c$[ebp], ecx
; Line 378
	mov	DWORD PTR _state$[ebp], 0
; Line 380
	mov	edx, DWORD PTR _ldata$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _n$[ebp], eax
; Line 382
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _hdrpos$[ebp], edx
; Line 383
	mov	DWORD PTR _hdrsize$[ebp], 0
; Line 384
	push	0
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_add
	add	esp, 8
; Line 385
	mov	DWORD PTR _prevpos$[ebp], 0
	mov	ecx, DWORD PTR _prevpos$[ebp]
	mov	DWORD PTR _prevlen$[ebp], ecx
; Line 386
	mov	DWORD PTR _prev2$[ebp], 0
$LN17@makerle:
; Line 388
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	sub	eax, 1
	mov	DWORD PTR _n$[ebp], eax
	test	edx, edx
	jle	SHORT $LN20@makerle
	mov	DWORD PTR tv71[ebp], 1
	jmp	SHORT $LN21@makerle
$LN20@makerle:
	mov	DWORD PTR tv71[ebp], 0
$LN21@makerle:
	cmp	DWORD PTR tv71[ebp], 0
	je	$LN16@makerle
; Line 389
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _thispos$[ebp], edx
; Line 390
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR tv76[ebp], eax
	mov	ecx, DWORD PTR _c$[ebp]
	add	ecx, 12					; 0000000cH
	mov	DWORD PTR _c$[ebp], ecx
	mov	esi, esp
	lea	edx, DWORD PTR _state$[ebp]
	push	edx
	mov	eax, DWORD PTR tv76[ebp]
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	DWORD PTR _makeliteral$[ebp]
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 391
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, DWORD PTR _thispos$[ebp]
	mov	DWORD PTR _thislen$[ebp], eax
; Line 393
	mov	ecx, DWORD PTR _thislen$[ebp]
	cmp	ecx, DWORD PTR _prevlen$[ebp]
	jne	$LN15@makerle
	mov	edx, DWORD PTR _thislen$[ebp]
	push	edx
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _thispos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR _prevpos$[ebp]
	push	eax
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN15@makerle
; Line 405
	cmp	DWORD PTR _thislen$[ebp], 1
	jg	SHORT $LN13@makerle
	cmp	DWORD PTR _prev2$[ebp], 0
	je	$LN14@makerle
$LN13@makerle:
; Line 414
	mov	ecx, DWORD PTR _hdrsize$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _hdrsize$[ebp], ecx
; Line 415
	cmp	DWORD PTR _prev2$[ebp], 0
	je	SHORT $LN12@makerle
; Line 416
	cmp	DWORD PTR _hdrsize$[ebp], 0
	jg	SHORT $LN22@makerle
	push	416					; 000001a0H
	push	OFFSET $SG85992
	push	OFFSET $SG85993
	call	__wassert
	add	esp, 12					; 0000000cH
$LN22@makerle:
; Line 417
	mov	eax, DWORD PTR _hdrsize$[ebp]
	sub	eax, 1
	mov	DWORD PTR _hdrsize$[ebp], eax
; Line 418
	mov	ecx, DWORD PTR _prevpos$[ebp]
	sub	ecx, DWORD PTR _prevlen$[ebp]
	mov	DWORD PTR _prevpos$[ebp], ecx
$LN12@makerle:
; Line 421
	cmp	DWORD PTR _hdrsize$[ebp], 0
	jne	SHORT $LN11@makerle
; Line 422
	mov	edx, DWORD PTR _hdrpos$[ebp]
	add	edx, 1
	cmp	DWORD PTR _prevpos$[ebp], edx
	je	SHORT $LN23@makerle
	push	422					; 000001a6H
	push	OFFSET $SG85996
	push	OFFSET $SG85997
	call	__wassert
	add	esp, 12					; 0000000cH
$LN23@makerle:
; Line 423
	mov	ecx, DWORD PTR _hdrpos$[ebp]
	mov	DWORD PTR _runpos$85988[ebp], ecx
; Line 424
	mov	edx, DWORD PTR _prevpos$[ebp]
	add	edx, DWORD PTR _prevlen$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 425
	jmp	SHORT $LN10@makerle
$LN11@makerle:
; Line 426
	mov	ecx, DWORD PTR _prevlen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR _prevpos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _prevpos$[ebp]
	lea	ecx, DWORD PTR [edx+eax+1]
	push	ecx
	call	_memmove
	add	esp, 12					; 0000000cH
; Line 427
	mov	edx, DWORD PTR _prevpos$[ebp]
	mov	DWORD PTR _runpos$85988[ebp], edx
; Line 428
	mov	eax, DWORD PTR _prevlen$[ebp]
	mov	ecx, DWORD PTR _prevpos$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 433
	cmp	DWORD PTR _hdrsize$[ebp], 1
	jl	SHORT $LN24@makerle
	cmp	DWORD PTR _hdrsize$[ebp], 128		; 00000080H
	jle	SHORT $LN25@makerle
$LN24@makerle:
	push	433					; 000001b1H
	push	OFFSET $SG86000
	push	OFFSET $SG86001
	call	__wassert
	add	esp, 12					; 0000000cH
$LN25@makerle:
; Line 434
	mov	edx, DWORD PTR _hdrsize$[ebp]
	sub	edx, 1
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR _hdrpos$[ebp]
	mov	BYTE PTR [ecx+eax], dl
$LN10@makerle:
; Line 437
	xor	ecx, ecx
	cmp	DWORD PTR _prev2$[ebp], 0
	setne	cl
	add	ecx, 2
	mov	DWORD PTR _runlen$85989[ebp], ecx
$LN9@makerle:
; Line 439
	cmp	DWORD PTR _n$[ebp], 0
	jle	$LN8@makerle
	cmp	DWORD PTR _runlen$85989[ebp], 129	; 00000081H
	jge	$LN8@makerle
; Line 441
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _tmppos$86005[ebp], eax
; Line 442
	mov	ecx, DWORD PTR _state$[ebp]
	mov	DWORD PTR _oldstate$[ebp], ecx
; Line 443
	mov	esi, esp
	lea	edx, DWORD PTR _state$[ebp]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	DWORD PTR _makeliteral$[ebp]
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 444
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, DWORD PTR _tmppos$86005[ebp]
	mov	DWORD PTR _tmplen$86006[ebp], eax
; Line 445
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR _tmppos$86005[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 447
	mov	eax, DWORD PTR _tmplen$86006[ebp]
	cmp	eax, DWORD PTR _thislen$[ebp]
	jne	SHORT $LN6@makerle
	mov	ecx, DWORD PTR _tmplen$86006[ebp]
	push	ecx
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR _tmppos$86005[ebp]
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _runpos$85988[ebp]
	lea	ecx, DWORD PTR [edx+eax+1]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN7@makerle
$LN6@makerle:
; Line 448
	mov	edx, DWORD PTR _oldstate$[ebp]
	mov	DWORD PTR _state$[ebp], edx
; Line 449
	jmp	SHORT $LN8@makerle
$LN7@makerle:
; Line 451
	mov	eax, DWORD PTR _n$[ebp]
	sub	eax, 1
	mov	DWORD PTR _n$[ebp], eax
	mov	ecx, DWORD PTR _c$[ebp]
	add	ecx, 12					; 0000000cH
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _runlen$85989[ebp]
	add	edx, 1
	mov	DWORD PTR _runlen$85989[ebp], edx
; Line 452
	jmp	$LN9@makerle
$LN8@makerle:
; Line 454
	cmp	DWORD PTR _runlen$85989[ebp], 2
	jl	SHORT $LN26@makerle
	cmp	DWORD PTR _runlen$85989[ebp], 129	; 00000081H
	jle	SHORT $LN27@makerle
$LN26@makerle:
	push	454					; 000001c6H
	push	OFFSET $SG86010
	push	OFFSET $SG86011
	call	__wassert
	add	esp, 12					; 0000000cH
$LN27@makerle:
; Line 455
	mov	ecx, DWORD PTR _runlen$85989[ebp]
	add	ecx, 126				; 0000007eH
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _runpos$85988[ebp]
	mov	BYTE PTR [eax+edx], cl
; Line 457
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hdrpos$[ebp], ecx
; Line 458
	mov	DWORD PTR _hdrsize$[ebp], 0
; Line 459
	push	0
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_add
	add	esp, 8
; Line 461
	mov	DWORD PTR _prevpos$[ebp], 0
	mov	eax, DWORD PTR _prevpos$[ebp]
	mov	DWORD PTR _prevlen$[ebp], eax
; Line 462
	mov	DWORD PTR _prev2$[ebp], 0
; Line 464
	jmp	$LN17@makerle
; Line 465
	jmp	SHORT $LN5@makerle
$LN14@makerle:
; Line 471
	mov	DWORD PTR _prev2$[ebp], 1
; Line 472
	mov	ecx, DWORD PTR _thislen$[ebp]
	mov	DWORD PTR _prevlen$[ebp], ecx
; Line 473
	mov	edx, DWORD PTR _thispos$[ebp]
	mov	DWORD PTR _prevpos$[ebp], edx
$LN5@makerle:
; Line 475
	jmp	SHORT $LN4@makerle
$LN15@makerle:
; Line 476
	mov	DWORD PTR _prev2$[ebp], 0
; Line 477
	mov	eax, DWORD PTR _thislen$[ebp]
	mov	DWORD PTR _prevlen$[ebp], eax
; Line 478
	mov	ecx, DWORD PTR _thispos$[ebp]
	mov	DWORD PTR _prevpos$[ebp], ecx
$LN4@makerle:
; Line 485
	mov	edx, DWORD PTR _hdrsize$[ebp]
	add	edx, 1
	mov	DWORD PTR _hdrsize$[ebp], edx
; Line 486
	cmp	DWORD PTR _hdrsize$[ebp], 128		; 00000080H
	jne	SHORT $LN3@makerle
; Line 487
	mov	eax, DWORD PTR _hdrsize$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _hdrpos$[ebp]
	mov	BYTE PTR [edx+ecx], al
; Line 488
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _hdrpos$[ebp], eax
; Line 489
	mov	DWORD PTR _hdrsize$[ebp], 0
; Line 490
	push	0
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_add
	add	esp, 8
; Line 491
	mov	DWORD PTR _prevpos$[ebp], 0
	mov	edx, DWORD PTR _prevpos$[ebp]
	mov	DWORD PTR _prevlen$[ebp], edx
; Line 492
	mov	DWORD PTR _prev2$[ebp], 0
$LN3@makerle:
; Line 494
	jmp	$LN17@makerle
$LN16@makerle:
; Line 499
	cmp	DWORD PTR _hdrsize$[ebp], 0
	jle	SHORT $LN2@makerle
; Line 500
	cmp	DWORD PTR _hdrsize$[ebp], 128		; 00000080H
	jle	SHORT $LN28@makerle
	push	500					; 000001f4H
	push	OFFSET $SG86017
	push	OFFSET $SG86018
	call	__wassert
	add	esp, 12					; 0000000cH
$LN28@makerle:
; Line 501
	mov	ecx, DWORD PTR _hdrsize$[ebp]
	sub	ecx, 1
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _hdrpos$[ebp]
	mov	BYTE PTR [eax+edx], cl
; Line 502
	jmp	SHORT $LN18@makerle
$LN2@makerle:
; Line 503
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR _hdrpos$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN18@makerle:
; Line 505
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@makerle
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 76					; 0000004cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN32@makerle:
	DD	1
	DD	$LN31@makerle
$LN31@makerle:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN30@makerle
$LN30@makerle:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
_makerle ENDP
; Function compile flags: /Odtp /RTCsu
_b$ = 8						; size = 4
_c$ = 12						; size = 4
_state$ = 16						; size = 4
_makeliteral_chr PROC
; Line 507
	push	ebp
	mov	ebp, esp
; Line 543
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, -128				; ffffff80H
	mov	edx, DWORD PTR _state$[ebp]
	cmp	ecx, DWORD PTR [edx]
	jne	SHORT $LN8@makelitera
; Line 544
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 127				; 0000007fH
	push	ecx
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_add
	add	esp, 8
	jmp	$LN7@makelitera
$LN8@makelitera:
; Line 545
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax], 16384			; 00004000H
	jae	SHORT $LN6@makelitera
; Line 546
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx]
	shr	edx, 8
	and	edx, 63					; 0000003fH
	or	edx, 128				; 00000080H
	push	edx
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_add
	add	esp, 8
; Line 547
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 255				; 000000ffH
	push	edx
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_add
	add	esp, 8
	jmp	$LN7@makelitera
$LN6@makelitera:
; Line 548
	mov	ecx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [ecx], 2097152		; 00200000H
	jae	SHORT $LN4@makelitera
; Line 549
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx]
	shr	eax, 16					; 00000010H
	and	eax, 31					; 0000001fH
	or	eax, 192				; 000000c0H
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_add
	add	esp, 8
; Line 550
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx]
	shr	eax, 8
	and	eax, 255				; 000000ffH
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_add
	add	esp, 8
; Line 551
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 255				; 000000ffH
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_add
	add	esp, 8
	jmp	$LN7@makelitera
$LN4@makelitera:
; Line 552
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx], 268435456		; 10000000H
	jae	SHORT $LN2@makelitera
; Line 553
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 24					; 00000018H
	and	ecx, 15					; 0000000fH
	or	ecx, 224				; 000000e0H
	push	ecx
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_add
	add	esp, 8
; Line 554
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 16					; 00000010H
	and	ecx, 255				; 000000ffH
	push	ecx
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_add
	add	esp, 8
; Line 555
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 8
	and	ecx, 255				; 000000ffH
	push	ecx
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_add
	add	esp, 8
; Line 556
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 255				; 000000ffH
	push	ecx
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_add
	add	esp, 8
; Line 557
	jmp	SHORT $LN7@makelitera
$LN2@makelitera:
; Line 558
	push	240					; 000000f0H
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_add
	add	esp, 8
; Line 559
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	push	edx
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_add
	add	esp, 8
; Line 560
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx]
	shr	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	push	edx
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_add
	add	esp, 8
; Line 561
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	push	edx
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_add
	add	esp, 8
; Line 562
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 255				; 000000ffH
	push	edx
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_add
	add	esp, 8
$LN7@makelitera:
; Line 564
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, -256				; ffffff00H
	mov	eax, DWORD PTR _state$[ebp]
	mov	DWORD PTR [eax], edx
; Line 565
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_makeliteral_chr ENDP
; Function compile flags: /Odtp /RTCsu
_colourbits$ = -8					; size = 4
_attr$ = -4						; size = 4
_b$ = 8							; size = 4
_c$ = 12						; size = 4
_state$ = 16						; size = 4
_makeliteral_attr PROC
; Line 567
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 584
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _attr$[ebp], ecx
; Line 588
	mov	edx, DWORD PTR _attr$[ebp]
	shr	edx, 13					; 0000000dH
	and	edx, 15					; 0000000fH
	mov	DWORD PTR _colourbits$[ebp], edx
; Line 589
	mov	eax, DWORD PTR _colourbits$[ebp]
	shl	eax, 4
	mov	DWORD PTR _colourbits$[ebp], eax
; Line 590
	mov	ecx, DWORD PTR _attr$[ebp]
	shr	ecx, 4
	and	ecx, 15					; 0000000fH
	or	ecx, DWORD PTR _colourbits$[ebp]
	mov	DWORD PTR _colourbits$[ebp], ecx
; Line 593
	mov	edx, DWORD PTR _attr$[ebp]
	shr	edx, 17					; 00000011H
	shl	edx, 13					; 0000000dH
	mov	eax, DWORD PTR _attr$[ebp]
	and	eax, 8191				; 00001fffH
	or	edx, eax
	mov	DWORD PTR _attr$[ebp], edx
; Line 595
	mov	ecx, DWORD PTR _attr$[ebp]
	shr	ecx, 8
	shl	ecx, 4
	mov	edx, DWORD PTR _attr$[ebp]
	and	edx, 15					; 0000000fH
	or	ecx, edx
	mov	DWORD PTR _attr$[ebp], ecx
; Line 597
	mov	eax, DWORD PTR _colourbits$[ebp]
	shl	eax, 23					; 00000017H
	or	eax, DWORD PTR _attr$[ebp]
	mov	DWORD PTR _attr$[ebp], eax
; Line 599
	cmp	DWORD PTR _attr$[ebp], 32768		; 00008000H
	jae	SHORT $LN2@makelitera@2
; Line 600
	mov	ecx, DWORD PTR _attr$[ebp]
	shr	ecx, 8
	and	ecx, 255				; 000000ffH
	push	ecx
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_add
	add	esp, 8
; Line 601
	mov	eax, DWORD PTR _attr$[ebp]
	and	eax, 255				; 000000ffH
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_add
	add	esp, 8
; Line 602
	jmp	SHORT $LN3@makelitera@2
$LN2@makelitera@2:
; Line 603
	mov	edx, DWORD PTR _attr$[ebp]
	shr	edx, 24					; 00000018H
	and	edx, 127				; 0000007fH
	or	edx, 128				; 00000080H
	push	edx
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_add
	add	esp, 8
; Line 604
	mov	ecx, DWORD PTR _attr$[ebp]
	shr	ecx, 16					; 00000010H
	and	ecx, 255				; 000000ffH
	push	ecx
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_add
	add	esp, 8
; Line 605
	mov	eax, DWORD PTR _attr$[ebp]
	shr	eax, 8
	and	eax, 255				; 000000ffH
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_add
	add	esp, 8
; Line 606
	mov	edx, DWORD PTR _attr$[ebp]
	and	edx, 255				; 000000ffH
	push	edx
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_add
	add	esp, 8
$LN3@makelitera@2:
; Line 608
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_makeliteral_attr ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_z$ = -32						; size = 12
_zstate$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_b$ = 8							; size = 4
_c$ = 12						; size = 4
_state$ = 16						; size = 4
_makeliteral_cc PROC
; Line 610
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
$LN2@makelitera@3:
; Line 622
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@makelitera@3
; Line 623
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	imul	edx, 12					; 0000000cH
	add	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR _c$[ebp], edx
; Line 625
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN5@makelitera@3
	push	625					; 00000271H
	push	OFFSET $SG86083
	push	OFFSET $SG86084
	call	__wassert
	add	esp, 12					; 0000000cH
$LN5@makelitera@3:
; Line 627
	mov	DWORD PTR _zstate$[ebp], 0
; Line 628
	lea	edx, DWORD PTR _zstate$[ebp]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_makeliteral_chr
	add	esp, 12					; 0000000cH
; Line 629
	jmp	SHORT $LN2@makelitera@3
$LN1@makelitera@3:
; Line 631
	mov	DWORD PTR _z$[ebp], 0
; Line 632
	mov	DWORD PTR _zstate$[ebp], 0
; Line 633
	lea	edx, DWORD PTR _zstate$[ebp]
	push	edx
	lea	eax, DWORD PTR _z$[ebp]
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_makeliteral_chr
	add	esp, 12					; 0000000cH
; Line 634
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@makelitera@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@makelitera@3:
	DD	2
	DD	$LN8@makelitera@3
$LN8@makelitera@3:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN6@makelitera@3
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN7@makelitera@3
$LN7@makelitera@3:
	DB	122					; 0000007aH
	DB	0
$LN6@makelitera@3:
	DB	122					; 0000007aH
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
_makeliteral_cc ENDP
_TEXT	ENDS
PUBLIC	_term_provide_resize_fn
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_term$ = 8						; size = 4
_resize_fn$ = 12					; size = 4
_resize_ctx$ = 16					; size = 4
_term_provide_resize_fn PROC
; Line 1898
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1899
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _resize_fn$[ebp]
	mov	DWORD PTR [eax+4220], ecx
; Line 1900
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _resize_ctx$[ebp]
	mov	DWORD PTR [edx+4224], eax
; Line 1901
	cmp	DWORD PTR _resize_fn$[ebp], 0
	je	SHORT $LN2@term_provi
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+300], 0
	jle	SHORT $LN2@term_provi
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+296], 0
	jle	SHORT $LN2@term_provi
; Line 1902
	mov	esi, esp
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+300]
	push	eax
	mov	ecx, DWORD PTR _resize_ctx$[ebp]
	push	ecx
	call	DWORD PTR _resize_fn$[ebp]
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@term_provi:
; Line 1903
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_term_provide_resize_fn ENDP
; Function compile flags: /Odtp /RTCsu
_j$86647 = -12						; size = 4
_line$86646 = -8					; size = 4
_i$ = -4						; size = 4
_term$ = 8						; size = 4
_screen$ = 12						; size = 4
_find_last_nonempty_line PROC
; Line 1910
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1912
	mov	eax, DWORD PTR _screen$[ebp]
	push	eax
	call	_count234
	add	esp, 4
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN8@find_last_
$LN7@find_last_:
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN8@find_last_:
	cmp	DWORD PTR _i$[ebp], 0
	jl	SHORT $LN6@find_last_
; Line 1913
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	eax, DWORD PTR _screen$[ebp]
	push	eax
	call	_index234
	add	esp, 8
	mov	DWORD PTR _line$86646[ebp], eax
; Line 1915
	mov	DWORD PTR _j$86647[ebp], 0
	jmp	SHORT $LN5@find_last_
$LN4@find_last_:
	mov	ecx, DWORD PTR _j$86647[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$86647[ebp], ecx
$LN5@find_last_:
	mov	edx, DWORD PTR _line$86646[ebp]
	mov	eax, DWORD PTR _j$86647[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jge	SHORT $LN3@find_last_
; Line 1916
	mov	ecx, DWORD PTR _term$[ebp]
	add	ecx, 84					; 00000054H
	push	ecx
	mov	edx, DWORD PTR _j$86647[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _line$86646[ebp]
	add	edx, DWORD PTR [eax+20]
	push	edx
	call	_termchars_equal
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@find_last_
; Line 1917
	jmp	SHORT $LN3@find_last_
$LN2@find_last_:
; Line 1918
	jmp	SHORT $LN4@find_last_
$LN3@find_last_:
	mov	ecx, DWORD PTR _line$86646[ebp]
	mov	edx, DWORD PTR _j$86647[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN1@find_last_
	jmp	SHORT $LN6@find_last_
$LN1@find_last_:
; Line 1919
	jmp	SHORT $LN7@find_last_
$LN6@find_last_:
; Line 1920
	mov	eax, DWORD PTR _i$[ebp]
; Line 1921
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_find_last_nonempty_line ENDP
; Function compile flags: /Odtp /RTCsu
_a$ = 8						; size = 4
_b$ = 12						; size = 4
_termchars_equal PROC
; Line 301
	push	ebp
	mov	ebp, esp
; Line 302
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	mov	edx, DWORD PTR _a$[ebp]
	push	edx
	call	_termchars_equal_override
	add	esp, 16					; 00000010H
; Line 303
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_termchars_equal ENDP
; Function compile flags: /Odtp /RTCsu
_a$ = 8						; size = 4
_b$ = 12						; size = 4
_bchr$ = 16						; size = 4
_battr$ = 20						; size = 4
_termchars_equal_override PROC
; Line 283
	push	ebp
	mov	ebp, esp
; Line 285
	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _bchr$[ebp]
	je	SHORT $LN8@termchars_
; Line 286
	xor	eax, eax
	jmp	SHORT $LN9@termchars_
$LN8@termchars_:
; Line 287
	mov	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR [edx+4]
	and	eax, 268435455				; 0fffffffH
	mov	ecx, DWORD PTR _battr$[ebp]
	and	ecx, 268435455				; 0fffffffH
	cmp	eax, ecx
	je	SHORT $LN6@termchars_
; Line 288
	xor	eax, eax
	jmp	SHORT $LN9@termchars_
$LN6@termchars_:
; Line 289
	mov	edx, DWORD PTR _a$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jne	SHORT $LN4@termchars_
	mov	eax, DWORD PTR _b$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN5@termchars_
$LN4@termchars_:
; Line 290
	mov	ecx, DWORD PTR _a$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	je	SHORT $LN2@termchars_
	mov	edx, DWORD PTR _b$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jne	SHORT $LN3@termchars_
$LN2@termchars_:
; Line 291
	xor	eax, eax
	jmp	SHORT $LN9@termchars_
$LN3@termchars_:
; Line 292
	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	imul	ecx, 12					; 0000000cH
	add	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR _a$[ebp], ecx
; Line 293
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx+8]
	imul	eax, 12					; 0000000cH
	add	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _b$[ebp], eax
; Line 294
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	je	SHORT $LN1@termchars_
; Line 295
	xor	eax, eax
	jmp	SHORT $LN9@termchars_
$LN1@termchars_:
; Line 296
	jmp	SHORT $LN6@termchars_
$LN5@termchars_:
; Line 297
	mov	eax, 1
$LN9@termchars_:
; Line 298
	pop	ebp
	ret	0
_termchars_equal_override ENDP
; Function compile flags: /Odtp /RTCsu
_ttr$ = -24						; size = 4
_tp$ = -16						; size = 8
_t$ = -4						; size = 4
_term$ = 8						; size = 4
_which$ = 12						; size = 4
_reset$ = 16						; size = 4
_keep_cur_pos$ = 20					; size = 4
_swap_screen PROC
; Line 1931
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1936
	cmp	DWORD PTR _which$[ebp], 0
	jne	SHORT $LN21@swap_scree
; Line 1937
	mov	DWORD PTR _reset$[ebp], 0
$LN21@swap_scree:
; Line 1939
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _which$[ebp]
	cmp	ecx, DWORD PTR [eax+420]
	je	$LN20@swap_scree
; Line 1940
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _which$[ebp]
	mov	DWORD PTR [edx+420], eax
; Line 1942
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _ttr$[ebp], edx
; Line 1943
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+12], edx
; Line 1944
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _ttr$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1945
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_find_last_nonempty_line
	add	esp, 8
	add	eax, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+424], eax
; Line 1946
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	mov	DWORD PTR _t$[ebp], ecx
; Line 1947
	cmp	DWORD PTR _reset$[ebp], 0
	jne	SHORT $LN19@swap_scree
	cmp	DWORD PTR _keep_cur_pos$[ebp], 0
	jne	SHORT $LN19@swap_scree
; Line 1948
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+376]
	mov	DWORD PTR [edx+112], ecx
$LN19@swap_scree:
; Line 1949
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR [edx+376], eax
; Line 1950
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR _t$[ebp], edx
; Line 1951
	cmp	DWORD PTR _reset$[ebp], 0
	jne	SHORT $LN18@swap_scree
	cmp	DWORD PTR _keep_cur_pos$[ebp], 0
	jne	SHORT $LN18@swap_scree
; Line 1952
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+380]
	mov	DWORD PTR [eax+108], edx
$LN18@swap_scree:
; Line 1953
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+380], ecx
; Line 1954
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+124]
	mov	DWORD PTR _t$[ebp], eax
; Line 1955
	cmp	DWORD PTR _reset$[ebp], 0
	jne	SHORT $LN17@swap_scree
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+412]
	mov	DWORD PTR [ecx+124], eax
$LN17@swap_scree:
; Line 1956
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [ecx+412], edx
; Line 1957
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	DWORD PTR _t$[ebp], ecx
; Line 1958
	cmp	DWORD PTR _reset$[ebp], 0
	jne	SHORT $LN16@swap_scree
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+416]
	mov	DWORD PTR [edx+128], ecx
$LN16@swap_scree:
; Line 1959
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR [edx+416], eax
; Line 1960
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	mov	DWORD PTR _t$[ebp], edx
; Line 1961
	cmp	DWORD PTR _reset$[ebp], 0
	jne	SHORT $LN15@swap_scree
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+384]
	mov	DWORD PTR [eax+132], edx
$LN15@swap_scree:
; Line 1962
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+384], ecx
; Line 1963
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+136]
	mov	DWORD PTR _t$[ebp], eax
; Line 1964
	cmp	DWORD PTR _reset$[ebp], 0
	jne	SHORT $LN14@swap_scree
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+388]
	mov	DWORD PTR [ecx+136], eax
$LN14@swap_scree:
; Line 1965
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [ecx+388], edx
; Line 1966
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	mov	DWORD PTR _t$[ebp], ecx
; Line 1967
	cmp	DWORD PTR _reset$[ebp], 0
	jne	SHORT $LN13@swap_scree
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+392]
	mov	DWORD PTR [edx+140], ecx
$LN13@swap_scree:
; Line 1968
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR [edx+392], eax
; Line 1969
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	mov	DWORD PTR _t$[ebp], edx
; Line 1970
	cmp	DWORD PTR _reset$[ebp], 0
	jne	SHORT $LN12@swap_scree
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+396]
	mov	DWORD PTR [eax+144], edx
$LN12@swap_scree:
; Line 1971
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+396], ecx
; Line 1972
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+148]
	mov	DWORD PTR _t$[ebp], eax
; Line 1973
	cmp	DWORD PTR _reset$[ebp], 0
	jne	SHORT $LN11@swap_scree
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+400]
	mov	DWORD PTR [ecx+148], eax
$LN11@swap_scree:
; Line 1974
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [ecx+400], edx
; Line 1975
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+220]
	mov	DWORD PTR _t$[ebp], ecx
; Line 1976
	cmp	DWORD PTR _reset$[ebp], 0
	jne	SHORT $LN10@swap_scree
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+408]
	mov	DWORD PTR [edx+220], ecx
$LN10@swap_scree:
; Line 1977
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR [edx+408], eax
; Line 1978
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+208]
	mov	DWORD PTR _t$[ebp], edx
; Line 1979
	cmp	DWORD PTR _reset$[ebp], 0
	jne	SHORT $LN9@swap_scree
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+404]
	mov	DWORD PTR [eax+208], edx
$LN9@swap_scree:
; Line 1980
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+404], ecx
; Line 1982
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+116]
	mov	ecx, DWORD PTR [edx+120]
	mov	DWORD PTR _tp$[ebp], eax
	mov	DWORD PTR _tp$[ebp+4], ecx
; Line 1983
	cmp	DWORD PTR _reset$[ebp], 0
	jne	SHORT $LN8@swap_scree
	cmp	DWORD PTR _keep_cur_pos$[ebp], 0
	jne	SHORT $LN8@swap_scree
; Line 1984
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+264]
	mov	ecx, DWORD PTR [edx+268]
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+116], eax
	mov	DWORD PTR [edx+120], ecx
$LN8@swap_scree:
; Line 1985
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _tp$[ebp]
	mov	DWORD PTR [eax+264], ecx
	mov	edx, DWORD PTR _tp$[ebp+4]
	mov	DWORD PTR [eax+268], edx
; Line 1986
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	DWORD PTR _t$[ebp], ecx
; Line 1987
	cmp	DWORD PTR _reset$[ebp], 0
	jne	SHORT $LN7@swap_scree
	cmp	DWORD PTR _keep_cur_pos$[ebp], 0
	jne	SHORT $LN7@swap_scree
; Line 1988
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+276]
	mov	DWORD PTR [edx+152], ecx
$LN7@swap_scree:
; Line 1989
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR [edx+276], eax
; Line 1990
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+156]
	mov	DWORD PTR _t$[ebp], edx
; Line 1991
	cmp	DWORD PTR _reset$[ebp], 0
	jne	SHORT $LN6@swap_scree
	cmp	DWORD PTR _keep_cur_pos$[ebp], 0
	jne	SHORT $LN6@swap_scree
; Line 1992
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+280]
	mov	DWORD PTR [eax+156], edx
$LN6@swap_scree:
; Line 1993
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+280], ecx
; Line 1994
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+68]
	mov	DWORD PTR _t$[ebp], eax
; Line 1995
	cmp	DWORD PTR _reset$[ebp], 0
	jne	SHORT $LN5@swap_scree
	cmp	DWORD PTR _keep_cur_pos$[ebp], 0
	jne	SHORT $LN5@swap_scree
; Line 1996
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+272]
	mov	DWORD PTR [ecx+68], eax
$LN5@swap_scree:
; Line 1997
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [ecx+272], edx
; Line 1998
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	mov	DWORD PTR _t$[ebp], ecx
; Line 1999
	cmp	DWORD PTR _reset$[ebp], 0
	jne	SHORT $LN4@swap_scree
	cmp	DWORD PTR _keep_cur_pos$[ebp], 0
	jne	SHORT $LN4@swap_scree
; Line 2000
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+284]
	mov	DWORD PTR [edx+160], ecx
$LN4@swap_scree:
; Line 2001
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR [edx+284], eax
; Line 2002
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+164]
	mov	DWORD PTR _t$[ebp], edx
; Line 2003
	cmp	DWORD PTR _reset$[ebp], 0
	jne	SHORT $LN3@swap_scree
	cmp	DWORD PTR _keep_cur_pos$[ebp], 0
	jne	SHORT $LN3@swap_scree
; Line 2004
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+288]
	mov	DWORD PTR [eax+164], edx
$LN3@swap_scree:
; Line 2005
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+288], ecx
; Line 2006
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+212]
	mov	DWORD PTR _t$[ebp], eax
; Line 2007
	cmp	DWORD PTR _reset$[ebp], 0
	jne	SHORT $LN2@swap_scree
	cmp	DWORD PTR _keep_cur_pos$[ebp], 0
	jne	SHORT $LN2@swap_scree
; Line 2008
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+292]
	mov	DWORD PTR [ecx+212], eax
$LN2@swap_scree:
; Line 2009
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [ecx+292], edx
$LN20@swap_scree:
; Line 2012
	cmp	DWORD PTR _reset$[ebp], 0
	je	SHORT $LN22@swap_scree
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN22@swap_scree
; Line 2016
	push	1
	push	1
	push	0
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_erase_lots
	add	esp, 16					; 00000010H
$LN22@swap_scree:
; Line 2018
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@swap_scree
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN26@swap_scree:
	DD	1
	DD	$LN25@swap_scree
$LN25@swap_scree:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN24@swap_scree
$LN24@swap_scree:
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	0
_swap_screen ENDP
_TEXT	ENDS
EXTRN	_set_sbar:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_nscroll$ = -4						; size = 4
_term$ = 8						; size = 4
_update_sbar PROC
; Line 2024
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2025
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_sblines
	add	esp, 4
	mov	DWORD PTR _nscroll$[ebp], eax
; Line 2027
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+296]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _nscroll$[ebp]
	add	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _nscroll$[ebp]
	add	eax, DWORD PTR [edx+296]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4232]
	push	edx
	call	_set_sbar
	add	esp, 16					; 00000010H
; Line 2028
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_update_sbar ENDP
; Function compile flags: /Odtp /RTCsu
_sblines$ = -4						; size = 4
_term$ = 8						; size = 4
_sblines PROC
; Line 991
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 992
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_count234
	add	esp, 4
	mov	DWORD PTR _sblines$[ebp], eax
; Line 994
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4376], 0
	je	SHORT $LN1@sblines
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+420], 0
	je	SHORT $LN1@sblines
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	je	SHORT $LN1@sblines
; Line 995
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _sblines$[ebp]
	add	eax, DWORD PTR [edx+424]
	mov	DWORD PTR _sblines$[ebp], eax
$LN1@sblines:
; Line 997
	mov	eax, DWORD PTR _sblines$[ebp]
; Line 998
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sblines ENDP
; Function compile flags: /Odtp /RTCsu
tv213 = -36						; size = 4
tv156 = -32						; size = 4
tv74 = -28						; size = 4
_cline$86738 = -24					; size = 4
_sblen$86736 = -20					; size = 4
_scrollwinsize$ = -16					; size = 4
_seltop$ = -12						; size = 4
_i$ = -8						; size = 4
_line$ = -4						; size = 4
_term$ = 8						; size = 4
_topline$ = 12						; size = 4
_botline$ = 16						; size = 4
_lines$ = 20						; size = 4
_sb$ = 24						; size = 4
_scroll	PROC
; Line 2046
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 2053
	cmp	DWORD PTR _topline$[ebp], 0
	jne	SHORT $LN30@scroll
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+420], 0
	je	SHORT $LN31@scroll
$LN30@scroll:
; Line 2054
	mov	DWORD PTR _sb$[ebp], 0
$LN31@scroll:
; Line 2061
	mov	ecx, DWORD PTR _botline$[ebp]
	sub	ecx, DWORD PTR _topline$[ebp]
	add	ecx, 1
	mov	DWORD PTR _scrollwinsize$[ebp], ecx
; Line 2063
	cmp	DWORD PTR _lines$[ebp], 0
	jge	$LN29@scroll
; Line 2064
	mov	edx, DWORD PTR _lines$[ebp]
	neg	edx
	mov	DWORD PTR _lines$[ebp], edx
; Line 2065
	mov	eax, DWORD PTR _lines$[ebp]
	cmp	eax, DWORD PTR _scrollwinsize$[ebp]
	jle	SHORT $LN27@scroll
; Line 2066
	mov	ecx, DWORD PTR _scrollwinsize$[ebp]
	mov	DWORD PTR _lines$[ebp], ecx
$LN27@scroll:
; Line 2067
	mov	edx, DWORD PTR _lines$[ebp]
	mov	eax, DWORD PTR _lines$[ebp]
	sub	eax, 1
	mov	DWORD PTR _lines$[ebp], eax
	test	edx, edx
	jle	SHORT $LN34@scroll
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN35@scroll
$LN34@scroll:
	mov	DWORD PTR tv74[ebp], 0
$LN35@scroll:
	cmp	DWORD PTR tv74[ebp], 0
	je	$LN26@scroll
; Line 2068
	mov	ecx, DWORD PTR _botline$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_delpos234
	add	esp, 8
	mov	DWORD PTR _line$[ebp], eax
; Line 2069
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+300]
	push	edx
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_resizeline
	add	esp, 12					; 0000000cH
; Line 2070
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN25@scroll
$LN24@scroll:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN25@scroll:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+300]
	jge	SHORT $LN23@scroll
; Line 2071
	mov	edx, DWORD PTR _term$[ebp]
	add	edx, 84					; 00000054H
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	_copy_termchar
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN24@scroll
$LN23@scroll:
; Line 2072
	xor	edx, edx
	mov	eax, DWORD PTR _line$[ebp]
	mov	WORD PTR [eax], dx
; Line 2073
	mov	ecx, DWORD PTR _topline$[ebp]
	push	ecx
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_addpos234
	add	esp, 12					; 0000000cH
; Line 2075
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3668]
	cmp	eax, DWORD PTR _topline$[ebp]
	jl	SHORT $LN22@scroll
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3668]
	cmp	edx, DWORD PTR _botline$[ebp]
	jg	SHORT $LN22@scroll
; Line 2076
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3668]
	add	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3668], ecx
; Line 2077
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3668]
	cmp	ecx, DWORD PTR _botline$[ebp]
	jle	SHORT $LN22@scroll
; Line 2078
	mov	edx, DWORD PTR _botline$[ebp]
	add	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3668], edx
; Line 2079
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3672], 0
$LN22@scroll:
; Line 2082
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3676]
	cmp	eax, DWORD PTR _topline$[ebp]
	jl	SHORT $LN20@scroll
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3676]
	cmp	edx, DWORD PTR _botline$[ebp]
	jg	SHORT $LN20@scroll
; Line 2083
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3676]
	add	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3676], ecx
; Line 2084
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3676]
	cmp	ecx, DWORD PTR _botline$[ebp]
	jle	SHORT $LN20@scroll
; Line 2085
	mov	edx, DWORD PTR _botline$[ebp]
	add	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3676], edx
; Line 2086
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3680], 0
$LN20@scroll:
; Line 2089
	jmp	$LN27@scroll
$LN26@scroll:
; Line 2090
	jmp	$LN32@scroll
$LN29@scroll:
; Line 2091
	mov	edx, DWORD PTR _lines$[ebp]
	cmp	edx, DWORD PTR _scrollwinsize$[ebp]
	jle	SHORT $LN16@scroll
; Line 2092
	mov	eax, DWORD PTR _scrollwinsize$[ebp]
	mov	DWORD PTR _lines$[ebp], eax
$LN16@scroll:
; Line 2093
	mov	ecx, DWORD PTR _lines$[ebp]
	mov	edx, DWORD PTR _lines$[ebp]
	sub	edx, 1
	mov	DWORD PTR _lines$[ebp], edx
	test	ecx, ecx
	jle	SHORT $LN36@scroll
	mov	DWORD PTR tv156[ebp], 1
	jmp	SHORT $LN37@scroll
$LN36@scroll:
	mov	DWORD PTR tv156[ebp], 0
$LN37@scroll:
	cmp	DWORD PTR tv156[ebp], 0
	je	$LN32@scroll
; Line 2094
	mov	eax, DWORD PTR _topline$[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_delpos234
	add	esp, 8
	mov	DWORD PTR _line$[ebp], eax
; Line 2098
	cmp	DWORD PTR _sb$[ebp], 0
	je	$LN14@scroll
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+304], 0
	jle	$LN14@scroll
; Line 2099
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_count234
	add	esp, 4
	mov	DWORD PTR _sblen$86736[ebp], eax
; Line 2105
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _sblen$86736[ebp]
	cmp	ecx, DWORD PTR [eax+304]
	jne	SHORT $LN13@scroll
; Line 2108
	mov	edx, DWORD PTR _sblen$86736[ebp]
	sub	edx, 1
	mov	DWORD PTR _sblen$86736[ebp], edx
; Line 2109
	push	0
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_delpos234
	add	esp, 8
	mov	DWORD PTR _cline$86738[ebp], eax
; Line 2110
	mov	edx, DWORD PTR _cline$86738[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 2111
	jmp	SHORT $LN12@scroll
$LN13@scroll:
; Line 2112
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+20], ecx
$LN12@scroll:
; Line 2114
	mov	eax, DWORD PTR _sblen$86736[ebp]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	_compressline
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_addpos234
	add	esp, 12					; 0000000cH
; Line 2132
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+304]
	neg	edx
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+16], edx
	jle	SHORT $LN14@scroll
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	jge	SHORT $LN14@scroll
; Line 2133
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+16], eax
$LN14@scroll:
; Line 2135
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+300]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_resizeline
	add	esp, 12					; 0000000cH
; Line 2136
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN10@scroll
$LN9@scroll:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN10@scroll:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR [ecx+300]
	jge	SHORT $LN8@scroll
; Line 2137
	mov	eax, DWORD PTR _term$[ebp]
	add	eax, 84					; 00000054H
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_copy_termchar
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN9@scroll
$LN8@scroll:
; Line 2138
	xor	eax, eax
	mov	ecx, DWORD PTR _line$[ebp]
	mov	WORD PTR [ecx], ax
; Line 2139
	mov	edx, DWORD PTR _botline$[ebp]
	push	edx
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_addpos234
	add	esp, 12					; 0000000cH
; Line 2152
	cmp	DWORD PTR _sb$[ebp], 0
	je	SHORT $LN38@scroll
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+304]
	neg	ecx
	mov	DWORD PTR tv213[ebp], ecx
	jmp	SHORT $LN39@scroll
$LN38@scroll:
	mov	edx, DWORD PTR _topline$[ebp]
	mov	DWORD PTR tv213[ebp], edx
$LN39@scroll:
	mov	eax, DWORD PTR tv213[ebp]
	mov	DWORD PTR _seltop$[ebp], eax
; Line 2154
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+3656], 0
	je	$LN7@scroll
; Line 2156
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3668]
	cmp	eax, DWORD PTR _seltop$[ebp]
	jl	SHORT $LN6@scroll
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3668]
	cmp	edx, DWORD PTR _botline$[ebp]
	jg	SHORT $LN6@scroll
; Line 2157
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3668]
	sub	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3668], ecx
; Line 2158
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3668]
	cmp	ecx, DWORD PTR _seltop$[ebp]
	jge	SHORT $LN6@scroll
; Line 2159
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _seltop$[ebp]
	mov	DWORD PTR [edx+3668], eax
; Line 2160
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3672], 0
$LN6@scroll:
; Line 2163
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3676]
	cmp	eax, DWORD PTR _seltop$[ebp]
	jl	SHORT $LN4@scroll
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3676]
	cmp	edx, DWORD PTR _botline$[ebp]
	jg	SHORT $LN4@scroll
; Line 2164
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3676]
	sub	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3676], ecx
; Line 2165
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3676]
	cmp	ecx, DWORD PTR _seltop$[ebp]
	jge	SHORT $LN4@scroll
; Line 2166
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _seltop$[ebp]
	mov	DWORD PTR [edx+3676], eax
; Line 2167
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3680], 0
$LN4@scroll:
; Line 2171
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3684]
	cmp	eax, DWORD PTR _seltop$[ebp]
	jl	SHORT $LN7@scroll
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3684]
	cmp	edx, DWORD PTR _botline$[ebp]
	jg	SHORT $LN7@scroll
; Line 2172
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3684]
	sub	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3684], ecx
; Line 2173
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3684]
	cmp	ecx, DWORD PTR _seltop$[ebp]
	jge	SHORT $LN7@scroll
; Line 2174
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _seltop$[ebp]
	mov	DWORD PTR [edx+3684], eax
; Line 2175
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3688], 0
$LN7@scroll:
; Line 2179
	jmp	$LN16@scroll
$LN32@scroll:
; Line 2186
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_scroll	ENDP
; Function compile flags: /Odtp /RTCsu
_destline$ = 8						; size = 4
_x$ = 12						; size = 4
_src$ = 16						; size = 4
_copy_termchar PROC
; Line 310
	push	ebp
	mov	ebp, esp
; Line 311
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _destline$[ebp]
	push	ecx
	call	_clear_cc
	add	esp, 8
; Line 313
	mov	edx, DWORD PTR _src$[ebp]
	mov	eax, DWORD PTR _x$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _destline$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	add	ecx, eax
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], edx
; Line 314
	mov	eax, DWORD PTR _x$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _destline$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [edx+eax+8], 0
$LN2@copy_termc:
; Line 316
	mov	eax, DWORD PTR _src$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@copy_termc
; Line 317
	mov	ecx, DWORD PTR _src$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	imul	edx, 12					; 0000000cH
	add	edx, DWORD PTR _src$[ebp]
	mov	DWORD PTR _src$[ebp], edx
; Line 318
	mov	eax, DWORD PTR _src$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _destline$[ebp]
	push	eax
	call	_add_cc
	add	esp, 12					; 0000000cH
; Line 319
	jmp	SHORT $LN2@copy_termc
$LN3@copy_termc:
; Line 324
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_copy_termchar ENDP
_TEXT	ENDS
PUBLIC	_term_invalidate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv172 = -56						; size = 4
tv79 = -52						; size = 4
_ldata$86821 = -48					; size = 4
_scrolllines$86817 = -44				; size = 4
_erasing_lines_from_top$ = -40				; size = 4
_erase_lattr$ = -36					; size = 4
_end$ = -28						; size = 8
_start$ = -12						; size = 8
_term$ = 8						; size = 4
_line_only$ = 12					; size = 4
_from_begin$ = 16					; size = 4
_to_end$ = 20						; size = 4
_erase_lots PROC
; Line 2369
	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	push	edi
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 14					; 0000000eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2372
	mov	DWORD PTR _erasing_lines_from_top$[ebp], 0
; Line 2374
	cmp	DWORD PTR _line_only$[ebp], 0
	je	SHORT $LN21@erase_lots
; Line 2375
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR _start$[ebp], ecx
; Line 2376
	mov	DWORD PTR _start$[ebp+4], 0
; Line 2377
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+108]
	add	eax, 1
	mov	DWORD PTR _end$[ebp], eax
; Line 2378
	mov	DWORD PTR _end$[ebp+4], 0
; Line 2379
	mov	DWORD PTR _erase_lattr$[ebp], 0
; Line 2380
	jmp	SHORT $LN20@erase_lots
$LN21@erase_lots:
; Line 2381
	mov	DWORD PTR _start$[ebp], 0
; Line 2382
	mov	DWORD PTR _start$[ebp+4], 0
; Line 2383
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+296]
	mov	DWORD PTR _end$[ebp], edx
; Line 2384
	mov	DWORD PTR _end$[ebp+4], 0
; Line 2385
	mov	DWORD PTR _erase_lattr$[ebp], 1
$LN20@erase_lots:
; Line 2387
	cmp	DWORD PTR _from_begin$[ebp], 0
	jne	SHORT $LN19@erase_lots
; Line 2388
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	edx, DWORD PTR [eax+112]
	mov	DWORD PTR _start$[ebp], ecx
	mov	DWORD PTR _start$[ebp+4], edx
$LN19@erase_lots:
; Line 2390
	cmp	DWORD PTR _to_end$[ebp], 0
	jne	SHORT $LN18@erase_lots
; Line 2391
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	edx, DWORD PTR [eax+112]
	mov	DWORD PTR _end$[ebp], ecx
	mov	DWORD PTR _end$[ebp+4], edx
; Line 2392
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _end$[ebp+4]
	cmp	ecx, DWORD PTR [eax+300]
	jne	SHORT $LN24@erase_lots
	mov	DWORD PTR _end$[ebp+4], 0
	mov	edx, DWORD PTR _end$[ebp]
	add	edx, 1
	mov	DWORD PTR _end$[ebp], edx
	mov	DWORD PTR tv79[ebp], 1
	jmp	SHORT $LN18@erase_lots
$LN24@erase_lots:
	mov	eax, DWORD PTR _end$[ebp+4]
	add	eax, 1
	mov	DWORD PTR _end$[ebp+4], eax
	mov	DWORD PTR tv79[ebp], 0
$LN18@erase_lots:
; Line 2394
	cmp	DWORD PTR _from_begin$[ebp], 0
	je	SHORT $LN16@erase_lots
	cmp	DWORD PTR _to_end$[ebp], 0
	jne	SHORT $LN17@erase_lots
$LN16@erase_lots:
; Line 2395
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_check_boundary
	add	esp, 12					; 0000000cH
$LN17@erase_lots:
; Line 2396
	mov	eax, DWORD PTR _end$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _end$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_check_selection
	add	esp, 20					; 00000014H
; Line 2399
	cmp	DWORD PTR _start$[ebp], 0
	jne	SHORT $LN15@erase_lots
	cmp	DWORD PTR _start$[ebp+4], 0
	jne	SHORT $LN15@erase_lots
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _end$[ebp]
	cmp	eax, DWORD PTR [edx+296]
	jne	SHORT $LN15@erase_lots
; Line 2400
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_invalidate
	add	esp, 4
$LN15@erase_lots:
; Line 2404
	cmp	DWORD PTR _start$[ebp], 0
	jne	SHORT $LN14@erase_lots
	cmp	DWORD PTR _start$[ebp+4], 0
	jne	SHORT $LN14@erase_lots
	cmp	DWORD PTR _end$[ebp+4], 0
	jne	SHORT $LN14@erase_lots
	cmp	DWORD PTR _erase_lattr$[ebp], 0
	je	SHORT $LN14@erase_lots
; Line 2405
	mov	DWORD PTR _erasing_lines_from_top$[ebp], 1
$LN14@erase_lots:
; Line 2407
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4376], 0
	je	SHORT $LN13@erase_lots
	cmp	DWORD PTR _erasing_lines_from_top$[ebp], 0
	je	SHORT $LN13@erase_lots
; Line 2411
	mov	eax, DWORD PTR _end$[ebp]
	mov	DWORD PTR _scrolllines$86817[ebp], eax
; Line 2412
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _end$[ebp]
	cmp	edx, DWORD PTR [ecx+296]
	jne	SHORT $LN12@erase_lots
; Line 2414
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_find_last_nonempty_line
	add	esp, 8
	add	eax, 1
	mov	DWORD PTR _scrolllines$86817[ebp], eax
$LN12@erase_lots:
; Line 2416
	cmp	DWORD PTR _scrolllines$86817[ebp], 0
	jle	SHORT $LN11@erase_lots
; Line 2417
	push	1
	mov	eax, DWORD PTR _scrolllines$86817[ebp]
	push	eax
	mov	ecx, DWORD PTR _scrolllines$86817[ebp]
	sub	ecx, 1
	push	ecx
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_scroll
	add	esp, 20					; 00000014H
$LN11@erase_lots:
; Line 2418
	jmp	$LN10@erase_lots
$LN13@erase_lots:
; Line 2419
	push	1
	push	2419					; 00000973H
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_lineptr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ldata$86821[ebp], eax
$LN9@erase_lots:
; Line 2420
	mov	edx, DWORD PTR _start$[ebp]
	cmp	edx, DWORD PTR _end$[ebp]
	jl	SHORT $LN7@erase_lots
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jne	$LN10@erase_lots
	mov	ecx, DWORD PTR _start$[ebp+4]
	cmp	ecx, DWORD PTR _end$[ebp+4]
	jge	$LN10@erase_lots
$LN7@erase_lots:
; Line 2421
	mov	edx, DWORD PTR _ldata$86821[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_check_line_size
	add	esp, 8
; Line 2422
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _start$[ebp+4]
	cmp	edx, DWORD PTR [ecx+300]
	jne	SHORT $LN6@erase_lots
; Line 2423
	cmp	DWORD PTR _erase_lattr$[ebp], 0
	jne	SHORT $LN5@erase_lots
; Line 2424
	mov	eax, DWORD PTR _ldata$86821[ebp]
	movzx	ecx, WORD PTR [eax]
	and	ecx, -49				; ffffffcfH
	mov	edx, DWORD PTR _ldata$86821[ebp]
	mov	WORD PTR [edx], cx
; Line 2425
	jmp	SHORT $LN4@erase_lots
$LN5@erase_lots:
; Line 2426
	xor	eax, eax
	mov	ecx, DWORD PTR _ldata$86821[ebp]
	mov	WORD PTR [ecx], ax
$LN4@erase_lots:
; Line 2427
	jmp	SHORT $LN3@erase_lots
$LN6@erase_lots:
; Line 2428
	mov	edx, DWORD PTR _term$[ebp]
	add	edx, 84					; 00000054H
	push	edx
	mov	eax, DWORD PTR _start$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _ldata$86821[ebp]
	push	ecx
	call	_copy_termchar
	add	esp, 12					; 0000000cH
$LN3@erase_lots:
; Line 2430
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _start$[ebp+4]
	cmp	eax, DWORD PTR [edx+300]
	jne	SHORT $LN26@erase_lots
	mov	DWORD PTR _start$[ebp+4], 0
	mov	ecx, DWORD PTR _start$[ebp]
	add	ecx, 1
	mov	DWORD PTR _start$[ebp], ecx
	mov	DWORD PTR tv172[ebp], 1
	jmp	SHORT $LN27@erase_lots
$LN26@erase_lots:
	mov	edx, DWORD PTR _start$[ebp+4]
	add	edx, 1
	mov	DWORD PTR _start$[ebp+4], edx
	mov	DWORD PTR tv172[ebp], 0
$LN27@erase_lots:
	cmp	DWORD PTR tv172[ebp], 0
	je	SHORT $LN2@erase_lots
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _start$[ebp]
	cmp	ecx, DWORD PTR [eax+296]
	jge	SHORT $LN2@erase_lots
; Line 2431
	push	1
	push	2431					; 0000097fH
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_lineptr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ldata$86821[ebp], eax
$LN2@erase_lots:
; Line 2433
	jmp	$LN9@erase_lots
$LN10@erase_lots:
; Line 2439
	cmp	DWORD PTR _erasing_lines_from_top$[ebp], 0
	je	SHORT $LN22@erase_lots
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+420], 0
	jne	SHORT $LN22@erase_lots
; Line 2440
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+20], 0
$LN22@erase_lots:
; Line 2441
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN31@erase_lots
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN31@erase_lots:
	DD	2
	DD	$LN30@erase_lots
$LN30@erase_lots:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN28@erase_lots
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN29@erase_lots
$LN29@erase_lots:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN28@erase_lots:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
_erase_lots ENDP
; Function compile flags: /Odtp /RTCsu
_term$ = 8						; size = 4
_from$ = 12						; size = 8
_to$ = 20						; size = 8
_check_selection PROC
; Line 2035
	push	ebp
	mov	ebp, esp
; Line 2036
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _from$[ebp]
	cmp	ecx, DWORD PTR [eax+3676]
	jl	SHORT $LN2@check_sele
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _from$[ebp]
	cmp	eax, DWORD PTR [edx+3676]
	jne	SHORT $LN4@check_sele
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _from$[ebp+4]
	cmp	edx, DWORD PTR [ecx+3680]
	jge	SHORT $LN4@check_sele
$LN2@check_sele:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3668]
	cmp	ecx, DWORD PTR _to$[ebp]
	jl	SHORT $LN1@check_sele
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3668]
	cmp	eax, DWORD PTR _to$[ebp]
	jne	SHORT $LN4@check_sele
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3672]
	cmp	edx, DWORD PTR _to$[ebp+4]
	jge	SHORT $LN4@check_sele
$LN1@check_sele:
; Line 2037
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_deselect
	add	esp, 4
$LN4@check_sele:
; Line 2038
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_check_selection ENDP
; Function compile flags: /Odtp /RTCsu
_ldata$ = -4						; size = 4
_term$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_check_boundary PROC
; Line 2342
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2346
	cmp	DWORD PTR _x$[ebp], 0
	je	SHORT $LN4@check_boun
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	cmp	ecx, DWORD PTR [eax+300]
	jle	SHORT $LN5@check_boun
$LN4@check_boun:
; Line 2347
	jmp	$LN6@check_boun
$LN5@check_boun:
; Line 2349
	push	1
	push	2349					; 0000092dH
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_lineptr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ldata$[ebp], eax
; Line 2350
	mov	ecx, DWORD PTR _ldata$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_check_line_size
	add	esp, 8
; Line 2351
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	cmp	ecx, DWORD PTR [eax+300]
	jne	SHORT $LN3@check_boun
; Line 2352
	mov	edx, DWORD PTR _ldata$[ebp]
	movzx	eax, WORD PTR [edx]
	and	eax, -33				; ffffffdfH
	mov	ecx, DWORD PTR _ldata$[ebp]
	mov	WORD PTR [ecx], ax
; Line 2353
	jmp	SHORT $LN6@check_boun
$LN3@check_boun:
; Line 2354
	mov	edx, DWORD PTR _x$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _ldata$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	DWORD PTR [edx+ecx], 57343		; 0000dfffH
	jne	SHORT $LN6@check_boun
; Line 2355
	mov	edx, DWORD PTR _x$[ebp]
	sub	edx, 1
	push	edx
	mov	eax, DWORD PTR _ldata$[ebp]
	push	eax
	call	_clear_cc
	add	esp, 8
; Line 2356
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ldata$[ebp]
	push	edx
	call	_clear_cc
	add	esp, 8
; Line 2357
	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, 1
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _ldata$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+edx], 55328		; 0000d820H
; Line 2358
	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, 1
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _ldata$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	add	edx, eax
	mov	eax, DWORD PTR _x$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _ldata$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	add	ecx, eax
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], edx
$LN6@check_boun:
; Line 2361
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_check_boundary ENDP
_TEXT	ENDS
EXTRN	_printer_job_data:PROC
EXTRN	_bufchain_consume:PROC
EXTRN	_bufchain_prefix:PROC
EXTRN	_bufchain_size:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_c$ = -33						; size = 1
_size$ = -28						; size = 4
_len$ = -20						; size = 4
_data$ = -8						; size = 4
_term$ = 8						; size = 4
_term_print_finish PROC
; Line 2702
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	edi
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2707
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+236], 0
	jne	SHORT $LN6@term_print
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+240], 0
	jne	SHORT $LN6@term_print
; Line 2708
	jmp	$LN7@term_print
$LN6@term_print:
; Line 2710
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_term_print_flush
	add	esp, 4
$LN5@term_print:
; Line 2711
	mov	eax, DWORD PTR _term$[ebp]
	add	eax, 248				; 000000f8H
	push	eax
	call	_bufchain_size
	add	esp, 4
	mov	DWORD PTR _size$[ebp], eax
	cmp	DWORD PTR _size$[ebp], 0
	jle	SHORT $LN4@term_print
; Line 2712
	lea	ecx, DWORD PTR _len$[ebp]
	push	ecx
	lea	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	add	eax, 248				; 000000f8H
	push	eax
	call	_bufchain_prefix
	add	esp, 12					; 0000000cH
; Line 2713
	mov	ecx, DWORD PTR _data$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR _c$[ebp], dl
; Line 2714
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 27					; 0000001bH
	je	SHORT $LN2@term_print
	movsx	ecx, BYTE PTR _c$[ebp]
	cmp	ecx, -101				; ffffff9bH
	jne	SHORT $LN3@term_print
$LN2@term_print:
; Line 2715
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	add	eax, 248				; 000000f8H
	push	eax
	call	_bufchain_consume
	add	esp, 8
; Line 2716
	jmp	SHORT $LN4@term_print
; Line 2717
	jmp	SHORT $LN1@term_print
$LN3@term_print:
; Line 2718
	push	1
	lea	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+260]
	push	eax
	call	_printer_job_data
	add	esp, 12					; 0000000cH
; Line 2719
	push	1
	mov	ecx, DWORD PTR _term$[ebp]
	add	ecx, 248				; 000000f8H
	push	ecx
	call	_bufchain_consume
	add	esp, 8
$LN1@term_print:
; Line 2721
	jmp	$LN5@term_print
$LN4@term_print:
; Line 2722
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+260]
	push	eax
	call	_printer_finish_job
	add	esp, 4
; Line 2723
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+260], 0
; Line 2724
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+240], 0
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+236], 0
$LN7@term_print:
; Line 2725
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@term_print
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN13@term_print:
	DD	3
	DD	$LN12@term_print
$LN12@term_print:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN9@term_print
	DD	-20					; ffffffecH
	DD	4
	DD	$LN10@term_print
	DD	-33					; ffffffdfH
	DD	1
	DD	$LN11@term_print
$LN11@term_print:
	DB	99					; 00000063H
	DB	0
$LN10@term_print:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN9@term_print:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_term_print_finish ENDP
; Function compile flags: /Odtp /RTCsu
_size$ = -28						; size = 4
_len$ = -20						; size = 4
_data$ = -8						; size = 4
_term$ = 8						; size = 4
_term_print_flush PROC
; Line 2689
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
$LN3@term_print@2:
; Line 2693
	mov	eax, DWORD PTR _term$[ebp]
	add	eax, 248				; 000000f8H
	push	eax
	call	_bufchain_size
	add	esp, 4
	mov	DWORD PTR _size$[ebp], eax
	cmp	DWORD PTR _size$[ebp], 5
	jle	SHORT $LN4@term_print@2
; Line 2694
	lea	ecx, DWORD PTR _len$[ebp]
	push	ecx
	lea	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	add	eax, 248				; 000000f8H
	push	eax
	call	_bufchain_prefix
	add	esp, 12					; 0000000cH
; Line 2695
	mov	ecx, DWORD PTR _size$[ebp]
	sub	ecx, 5
	cmp	DWORD PTR _len$[ebp], ecx
	jle	SHORT $LN1@term_print@2
; Line 2696
	mov	edx, DWORD PTR _size$[ebp]
	sub	edx, 5
	mov	DWORD PTR _len$[ebp], edx
$LN1@term_print@2:
; Line 2697
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+260]
	push	eax
	call	_printer_job_data
	add	esp, 12					; 0000000cH
; Line 2698
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	add	edx, 248				; 000000f8H
	push	edx
	call	_bufchain_consume
	add	esp, 8
; Line 2699
	jmp	SHORT $LN3@term_print@2
$LN4@term_print@2:
; Line 2700
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@term_print@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@term_print@2:
	DD	2
	DD	$LN8@term_print@2
$LN8@term_print@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN6@term_print@2
	DD	-20					; ffffffecH
	DD	4
	DD	$LN7@term_print@2
$LN7@term_print@2:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN6@term_print@2:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_term_print_flush ENDP
_TEXT	ENDS
EXTRN	_do_cursor:PROC
EXTRN	_do_text:PROC
EXTRN	_char_width:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv620 = -192						; size = 4
tv570 = -188						; size = 4
tv513 = -184						; size = 4
tv328 = -180						; size = 4
tv287 = -176						; size = 4
tv240 = -172						; size = 4
tv219 = -168						; size = 4
_schar$88016 = -164					; size = 4
_dd$88012 = -160					; size = 4
_d$87984 = -156						; size = 4
_do_copy$87983 = -152					; size = 4
_break_run$87982 = -148					; size = 4
_tchar$87981 = -144					; size = 4
_tattr$87980 = -140					; size = 4
_k$87971 = -136						; size = 4
_colour$87940 = -132					; size = 4
_d$87937 = -128						; size = 4
_tchar$87936 = -124					; size = 4
_tattr$87935 = -120					; size = 4
_backward$87928 = -116					; size = 4
_dirtyrect$87927 = -112					; size = 4
_laststart$87926 = -108					; size = 4
_last_run_dirty$87925 = -104				; size = 4
_ccount$87924 = -100					; size = 4
_start$87923 = -96					; size = 4
_cset$87922 = -92					; size = 4
_attr$87921 = -88					; size = 4
_selected$87920 = -84					; size = 4
_dirty_run$87919 = -80					; size = 4
_dirty_line$87918 = -76					; size = 4
_lchars$87917 = -72					; size = 4
_ldata$87916 = -68					; size = 4
_dispcurs$87910 = -64					; size = 4
_lchars$87903 = -60					; size = 4
_ldata$87902 = -56					; size = 4
_newline$ = -52						; size = 4
_chlen$ = -48						; size = 4
_ch$ = -44						; size = 4
_scrpos$ = -36						; size = 8
_cursor$ = -24						; size = 4
_rv$ = -20						; size = 4
_our_curs_x$ = -16					; size = 4
_our_curs_y$ = -12					; size = 4
_j$ = -8						; size = 4
_i$ = -4						; size = 4
_term$ = 8						; size = 4
_ctx$ = 12						; size = 4
_may_optimise$ = 16					; size = 4
_do_paint PROC
; Line 4883
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 4894
	mov	DWORD PTR _chlen$[ebp], 1024		; 00000400H
; Line 4895
	push	2
	mov	eax, DWORD PTR _chlen$[ebp]
	push	eax
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _ch$[ebp], eax
; Line 4897
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+300]
	push	edx
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _newline$[ebp], eax
; Line 4899
	mov	eax, DWORD PTR _term$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+168], 0
	sete	cl
	mov	edx, DWORD PTR _term$[ebp]
	xor	eax, eax
	cmp	DWORD PTR [edx+312], 0
	sete	al
	xor	ecx, eax
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 1048576				; 00100000H
	mov	DWORD PTR _rv$[ebp], ecx
; Line 4909
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+176], 0
	je	SHORT $LN98@do_paint
; Line 4910
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+308], 0
	je	SHORT $LN97@do_paint
; Line 4911
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+188], 0
	jne	SHORT $LN95@do_paint
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4352], 0
	jne	SHORT $LN96@do_paint
$LN95@do_paint:
; Line 4912
	mov	DWORD PTR _cursor$[ebp], 1073741824	; 40000000H
; Line 4913
	jmp	SHORT $LN94@do_paint
$LN96@do_paint:
; Line 4914
	mov	DWORD PTR _cursor$[ebp], 0
$LN94@do_paint:
; Line 4915
	jmp	SHORT $LN93@do_paint
$LN97@do_paint:
; Line 4916
	mov	DWORD PTR _cursor$[ebp], 536870912	; 20000000H
$LN93@do_paint:
; Line 4917
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+140], 0
	je	SHORT $LN92@do_paint
; Line 4918
	mov	eax, DWORD PTR _cursor$[ebp]
	or	eax, 268435456				; 10000000H
	mov	DWORD PTR _cursor$[ebp], eax
$LN92@do_paint:
; Line 4919
	jmp	SHORT $LN91@do_paint
$LN98@do_paint:
; Line 4920
	mov	DWORD PTR _cursor$[ebp], 0
$LN91@do_paint:
; Line 4921
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [ecx+108]
	sub	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _our_curs_y$[ebp], eax
; Line 4932
	push	0
	push	4932					; 00001344H
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_lineptr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ldata$87902[ebp], eax
; Line 4935
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	mov	DWORD PTR _our_curs_x$[ebp], edx
; Line 4937
	mov	eax, DWORD PTR _our_curs_y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ldata$87902[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_term_bidi_line
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _lchars$87903[ebp], eax
	cmp	DWORD PTR _lchars$87903[ebp], 0
	je	SHORT $LN90@do_paint
; Line 4938
	mov	eax, DWORD PTR _our_curs_y$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4300]
	mov	eax, DWORD PTR [edx+eax+8]
	mov	ecx, DWORD PTR _our_curs_x$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _our_curs_x$[ebp], edx
; Line 4939
	jmp	SHORT $LN89@do_paint
$LN90@do_paint:
; Line 4940
	mov	eax, DWORD PTR _ldata$87902[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _lchars$87903[ebp], ecx
$LN89@do_paint:
; Line 4943
	cmp	DWORD PTR _our_curs_x$[ebp], 0
	jle	SHORT $LN88@do_paint
	mov	edx, DWORD PTR _our_curs_x$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _lchars$87903[ebp]
	cmp	DWORD PTR [eax+edx], 57343		; 0000dfffH
	jne	SHORT $LN88@do_paint
; Line 4944
	mov	ecx, DWORD PTR _our_curs_x$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _our_curs_x$[ebp], ecx
$LN88@do_paint:
; Line 4946
	mov	edx, DWORD PTR _ldata$87902[ebp]
	push	edx
	call	_unlineptr
	add	esp, 4
; Line 4957
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+32], 0
	jl	$LN87@do_paint
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	cmp	edx, DWORD PTR _cursor$[ebp]
	jne	SHORT $LN86@do_paint
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	cmp	ecx, DWORD PTR _our_curs_y$[ebp]
	jne	SHORT $LN86@do_paint
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+28]
	cmp	eax, DWORD PTR _our_curs_x$[ebp]
	je	$LN87@do_paint
$LN86@do_paint:
; Line 4959
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+edx*4]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 12					; 0000000cH
	add	ecx, DWORD PTR [edx+20]
	mov	DWORD PTR _dispcurs$87910[ebp], ecx
; Line 4961
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+28], 0
	jle	SHORT $LN85@do_paint
	mov	eax, DWORD PTR _dispcurs$87910[ebp]
	cmp	DWORD PTR [eax], 57343			; 0000dfffH
	jne	SHORT $LN85@do_paint
; Line 4962
	mov	ecx, DWORD PTR _dispcurs$87910[ebp]
	mov	edx, DWORD PTR [ecx-8]
	or	edx, 262143				; 0003ffffH
	mov	eax, DWORD PTR _dispcurs$87910[ebp]
	mov	DWORD PTR [eax-8], edx
$LN85@do_paint:
; Line 4963
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+300]
	sub	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+28], edx
	jge	SHORT $LN84@do_paint
	mov	ecx, DWORD PTR _dispcurs$87910[ebp]
	cmp	DWORD PTR [ecx+12], 57343		; 0000dfffH
	jne	SHORT $LN84@do_paint
; Line 4964
	mov	edx, DWORD PTR _dispcurs$87910[ebp]
	mov	eax, DWORD PTR [edx+16]
	or	eax, 262143				; 0003ffffH
	mov	ecx, DWORD PTR _dispcurs$87910[ebp]
	mov	DWORD PTR [ecx+16], eax
$LN84@do_paint:
; Line 4965
	mov	edx, DWORD PTR _dispcurs$87910[ebp]
	mov	eax, DWORD PTR [edx+4]
	or	eax, 262143				; 0003ffffH
	mov	ecx, DWORD PTR _dispcurs$87910[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 4967
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+36], 0
$LN87@do_paint:
; Line 4969
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+32], -1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+28], -1
; Line 4984
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN83@do_paint
$LN82@do_paint:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN83@do_paint:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+296]
	jge	$LN81@do_paint
; Line 4988
	mov	DWORD PTR _attr$87921[ebp], 0
	mov	DWORD PTR _cset$87922[ebp], 0
; Line 4989
	mov	DWORD PTR _start$87923[ebp], 0
; Line 4990
	mov	DWORD PTR _ccount$87924[ebp], 0
; Line 4991
	mov	DWORD PTR _last_run_dirty$87925[ebp], 0
; Line 4995
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _scrpos$[ebp], eax
; Line 4996
	push	0
	push	4996					; 00001384H
	mov	ecx, DWORD PTR _scrpos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_lineptr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ldata$87916[ebp], eax
; Line 4999
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ldata$87916[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_term_bidi_line
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _lchars$87917[ebp], eax
; Line 5000
	cmp	DWORD PTR _lchars$87917[ebp], 0
	je	SHORT $LN80@do_paint
; Line 5001
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4300]
	mov	eax, DWORD PTR [edx+eax+12]
	mov	DWORD PTR _backward$87928[ebp], eax
; Line 5002
	jmp	SHORT $LN79@do_paint
$LN80@do_paint:
; Line 5003
	mov	ecx, DWORD PTR _ldata$87916[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _lchars$87917[ebp], edx
; Line 5004
	mov	DWORD PTR _backward$87928[ebp], 0
$LN79@do_paint:
; Line 5011
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN78@do_paint
$LN77@do_paint:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN78@do_paint:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _j$[ebp]
	cmp	edx, DWORD PTR [ecx+300]
	jge	$LN76@do_paint
; Line 5013
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	add	eax, DWORD PTR _lchars$87917[ebp]
	mov	DWORD PTR _d$87937[ebp], eax
; Line 5014
	cmp	DWORD PTR _backward$87928[ebp], 0
	je	SHORT $LN101@do_paint
	mov	ecx, DWORD PTR _j$[ebp]
	mov	edx, DWORD PTR _backward$87928[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR tv219[ebp], eax
	jmp	SHORT $LN102@do_paint
$LN101@do_paint:
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR tv219[ebp], ecx
$LN102@do_paint:
	mov	edx, DWORD PTR tv219[ebp]
	mov	DWORD PTR _scrpos$[ebp+4], edx
; Line 5016
	mov	eax, DWORD PTR _d$87937[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _tchar$87936[ebp], ecx
; Line 5017
	mov	edx, DWORD PTR _d$87937[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _tattr$87935[ebp], eax
; Line 5019
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4308], 0
	jne	SHORT $LN75@do_paint
; Line 5021
	mov	edx, DWORD PTR _tattr$87935[ebp]
	and	edx, -262144				; fffc0000H
	or	edx, 256				; 00000100H
	or	edx, 132096				; 00020400H
	mov	DWORD PTR _tattr$87935[ebp], edx
$LN75@do_paint:
; Line 5023
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4460], 0
	jne	SHORT $LN74@do_paint
; Line 5025
	mov	ecx, DWORD PTR _tattr$87935[ebp]
	and	ecx, 511				; 000001ffH
	mov	DWORD PTR _colour$87940[ebp], ecx
; Line 5026
	cmp	DWORD PTR _colour$87940[ebp], 16	; 00000010H
	jl	SHORT $LN73@do_paint
	cmp	DWORD PTR _colour$87940[ebp], 256	; 00000100H
	jge	SHORT $LN73@do_paint
; Line 5027
	mov	edx, DWORD PTR _tattr$87935[ebp]
	and	edx, -512				; fffffe00H
	or	edx, 256				; 00000100H
	mov	DWORD PTR _tattr$87935[ebp], edx
$LN73@do_paint:
; Line 5028
	mov	eax, DWORD PTR _tattr$87935[ebp]
	and	eax, 261632				; 0003fe00H
	shr	eax, 9
	mov	DWORD PTR _colour$87940[ebp], eax
; Line 5029
	cmp	DWORD PTR _colour$87940[ebp], 16	; 00000010H
	jl	SHORT $LN74@do_paint
	cmp	DWORD PTR _colour$87940[ebp], 256	; 00000100H
	jge	SHORT $LN74@do_paint
; Line 5030
	mov	ecx, DWORD PTR _tattr$87935[ebp]
	and	ecx, -261633				; fffc01ffH
	or	ecx, 132096				; 00020400H
	mov	DWORD PTR _tattr$87935[ebp], ecx
$LN74@do_paint:
; Line 5033
	mov	edx, DWORD PTR _tchar$87936[ebp]
	and	edx, -256				; ffffff00H
	mov	DWORD PTR tv240[ebp], edx
	cmp	DWORD PTR tv240[ebp], 55296		; 0000d800H
	je	SHORT $LN69@do_paint
	cmp	DWORD PTR tv240[ebp], 55552		; 0000d900H
	je	SHORT $LN68@do_paint
	cmp	DWORD PTR tv240[ebp], 55808		; 0000da00H
	je	SHORT $LN67@do_paint
	jmp	SHORT $LN70@do_paint
$LN69@do_paint:
; Line 5035
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4240]
	mov	edx, DWORD PTR _tchar$87936[ebp]
	and	edx, 255				; 000000ffH
	movzx	eax, WORD PTR [ecx+edx*2+528]
	mov	DWORD PTR _tchar$87936[ebp], eax
; Line 5036
	jmp	SHORT $LN70@do_paint
$LN68@do_paint:
; Line 5038
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4240]
	mov	eax, DWORD PTR _tchar$87936[ebp]
	and	eax, 255				; 000000ffH
	movzx	ecx, WORD PTR [edx+eax*2+1552]
	mov	DWORD PTR _tchar$87936[ebp], ecx
; Line 5039
	jmp	SHORT $LN70@do_paint
$LN67@do_paint:
; Line 5041
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4240]
	mov	ecx, DWORD PTR _tchar$87936[ebp]
	and	ecx, 255				; 000000ffH
	movzx	edx, WORD PTR [eax+ecx*2+16]
	mov	DWORD PTR _tchar$87936[ebp], edx
$LN70@do_paint:
; Line 5044
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	sub	ecx, 1
	cmp	DWORD PTR _j$[ebp], ecx
	jge	SHORT $LN66@do_paint
	mov	edx, DWORD PTR _d$87937[ebp]
	cmp	DWORD PTR [edx+12], 57343		; 0000dfffH
	jne	SHORT $LN66@do_paint
; Line 5045
	mov	eax, DWORD PTR _tattr$87935[ebp]
	or	eax, 4194304				; 00400000H
	mov	DWORD PTR _tattr$87935[ebp], eax
$LN66@do_paint:
; Line 5048
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+3656], 2
	je	SHORT $LN64@do_paint
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+3656], 3
	jne	$LN65@do_paint
$LN64@do_paint:
; Line 5049
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+3660], 0
	jne	SHORT $LN63@do_paint
; Line 5051
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3668]
	cmp	edx, DWORD PTR _scrpos$[ebp]
	jl	SHORT $LN104@do_paint
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3668]
	cmp	ecx, DWORD PTR _scrpos$[ebp]
	jne	SHORT $LN105@do_paint
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3672]
	cmp	eax, DWORD PTR _scrpos$[ebp+4]
	jg	SHORT $LN105@do_paint
$LN104@do_paint:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _scrpos$[ebp]
	cmp	edx, DWORD PTR [ecx+3676]
	jl	SHORT $LN106@do_paint
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _scrpos$[ebp]
	cmp	ecx, DWORD PTR [eax+3676]
	jne	SHORT $LN105@do_paint
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _scrpos$[ebp+4]
	cmp	eax, DWORD PTR [edx+3680]
	jge	SHORT $LN105@do_paint
$LN106@do_paint:
	mov	DWORD PTR tv287[ebp], 1
	jmp	SHORT $LN107@do_paint
$LN105@do_paint:
	mov	DWORD PTR tv287[ebp], 0
$LN107@do_paint:
	mov	ecx, DWORD PTR tv287[ebp]
	mov	DWORD PTR _selected$87920[ebp], ecx
; Line 5052
	jmp	SHORT $LN62@do_paint
$LN63@do_paint:
; Line 5054
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3668]
	cmp	eax, DWORD PTR _scrpos$[ebp]
	jg	SHORT $LN109@do_paint
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3672]
	cmp	edx, DWORD PTR _scrpos$[ebp+4]
	jg	SHORT $LN109@do_paint
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _scrpos$[ebp]
	cmp	ecx, DWORD PTR [eax+3676]
	jg	SHORT $LN109@do_paint
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _scrpos$[ebp+4]
	cmp	eax, DWORD PTR [edx+3680]
	jge	SHORT $LN109@do_paint
	mov	DWORD PTR tv328[ebp], 1
	jmp	SHORT $LN110@do_paint
$LN109@do_paint:
	mov	DWORD PTR tv328[ebp], 0
$LN110@do_paint:
	mov	ecx, DWORD PTR tv328[ebp]
	mov	DWORD PTR _selected$87920[ebp], ecx
$LN62@do_paint:
; Line 5055
	jmp	SHORT $LN61@do_paint
$LN65@do_paint:
; Line 5056
	mov	DWORD PTR _selected$87920[ebp], 0
$LN61@do_paint:
; Line 5058
	mov	edx, DWORD PTR _tattr$87935[ebp]
	xor	edx, DWORD PTR _rv$[ebp]
	mov	eax, DWORD PTR _selected$87920[ebp]
	neg	eax
	sbb	eax, eax
	and	eax, 1048576				; 00100000H
	xor	edx, eax
	mov	DWORD PTR _tattr$87935[ebp], edx
; Line 5061
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+196], 0
	je	SHORT $LN60@do_paint
	mov	edx, DWORD PTR _tattr$87935[ebp]
	and	edx, 2097152				; 00200000H
	je	SHORT $LN60@do_paint
; Line 5062
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+308], 0
	je	SHORT $LN59@do_paint
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+192], 0
	je	SHORT $LN59@do_paint
; Line 5063
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4240]
	movzx	ecx, WORD PTR [eax+592]
	mov	DWORD PTR _tchar$87936[ebp], ecx
$LN59@do_paint:
; Line 5065
	mov	edx, DWORD PTR _tattr$87935[ebp]
	and	edx, -2097153				; ffdfffffH
	mov	DWORD PTR _tattr$87935[ebp], edx
$LN60@do_paint:
; Line 5074
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _j$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR _tchar$87936[ebp]
	cmp	eax, DWORD PTR [ecx+edx]
	jne	SHORT $LN57@do_paint
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	edx, DWORD PTR _j$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR [ecx+20]
	mov	ecx, DWORD PTR [eax+edx+4]
	and	ecx, 260046847				; 0f7fffffH
	cmp	DWORD PTR _tattr$87935[ebp], ecx
	je	SHORT $LN58@do_paint
$LN57@do_paint:
; Line 5075
	mov	edx, DWORD PTR _tattr$87935[ebp]
	and	edx, 4194304				; 00400000H
	jne	SHORT $LN56@do_paint
	mov	eax, DWORD PTR _tchar$87936[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	call	_char_width
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN56@do_paint
; Line 5076
	mov	edx, DWORD PTR _tattr$87935[ebp]
	or	edx, 8388608				; 00800000H
	mov	DWORD PTR _tattr$87935[ebp], edx
$LN56@do_paint:
; Line 5077
	jmp	SHORT $LN55@do_paint
$LN58@do_paint:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _j$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+ecx+4]
	and	eax, 8388608				; 00800000H
	je	SHORT $LN55@do_paint
; Line 5078
	mov	ecx, DWORD PTR _tattr$87935[ebp]
	or	ecx, 8388608				; 00800000H
	mov	DWORD PTR _tattr$87935[ebp], ecx
$LN55@do_paint:
; Line 5080
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR _our_curs_y$[ebp]
	jne	SHORT $LN53@do_paint
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _our_curs_x$[ebp]
	jne	SHORT $LN53@do_paint
; Line 5081
	mov	ecx, DWORD PTR _tattr$87935[ebp]
	or	ecx, DWORD PTR _cursor$[ebp]
	mov	DWORD PTR _tattr$87935[ebp], ecx
; Line 5082
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _cursor$[ebp]
	mov	DWORD PTR [edx+36], eax
; Line 5083
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _j$[ebp]
	mov	DWORD PTR [ecx+28], edx
; Line 5084
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [eax+32], ecx
$LN53@do_paint:
; Line 5088
	mov	edx, DWORD PTR _j$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _newline$[ebp]
	mov	ecx, DWORD PTR _tattr$87935[ebp]
	mov	DWORD PTR [eax+edx+4], ecx
; Line 5089
	mov	edx, DWORD PTR _j$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _newline$[ebp]
	mov	ecx, DWORD PTR _tchar$87936[ebp]
	mov	DWORD PTR [eax+edx], ecx
; Line 5091
	mov	edx, DWORD PTR _j$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _newline$[ebp]
	mov	DWORD PTR [eax+edx+8], 0
; Line 5092
	jmp	$LN77@do_paint
$LN76@do_paint:
; Line 5108
	mov	DWORD PTR _laststart$87926[ebp], 0
; Line 5109
	mov	DWORD PTR _dirtyrect$87927[ebp], 0
; Line 5110
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN52@do_paint
$LN51@do_paint:
	mov	ecx, DWORD PTR _j$[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$[ebp], ecx
$LN52@do_paint:
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR [edx+300]
	jge	$LN50@do_paint
; Line 5111
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	edx, DWORD PTR _j$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR [ecx+20]
	mov	ecx, DWORD PTR [eax+edx+4]
	and	ecx, -2147483648			; 80000000H
	je	SHORT $LN49@do_paint
; Line 5112
	mov	edx, DWORD PTR _j$[ebp]
	mov	DWORD PTR _laststart$87926[ebp], edx
; Line 5113
	mov	DWORD PTR _dirtyrect$87927[ebp], 0
$LN49@do_paint:
; Line 5118
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _j$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	mov	esi, DWORD PTR _newline$[ebp]
	mov	ecx, DWORD PTR [ecx+edx]
	cmp	ecx, DWORD PTR [esi+eax]
	jne	SHORT $LN47@do_paint
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [ecx+eax+4]
	and	edx, 268435455				; 0fffffffH
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _newline$[ebp]
	cmp	edx, DWORD PTR [ecx+eax+4]
	je	SHORT $LN48@do_paint
$LN47@do_paint:
; Line 5121
	cmp	DWORD PTR _dirtyrect$87927[ebp], 0
	jne	SHORT $LN48@do_paint
; Line 5122
	mov	edx, DWORD PTR _laststart$87926[ebp]
	mov	DWORD PTR _k$87971[ebp], edx
	jmp	SHORT $LN45@do_paint
$LN44@do_paint:
	mov	eax, DWORD PTR _k$87971[ebp]
	add	eax, 1
	mov	DWORD PTR _k$87971[ebp], eax
$LN45@do_paint:
	mov	ecx, DWORD PTR _k$87971[ebp]
	cmp	ecx, DWORD PTR _j$[ebp]
	jge	SHORT $LN43@do_paint
; Line 5123
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _k$87971[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [ecx+eax+4]
	or	edx, 262143				; 0003ffffH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _k$87971[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [ecx+20]
	mov	DWORD PTR [ecx+eax+4], edx
	jmp	SHORT $LN44@do_paint
$LN43@do_paint:
; Line 5125
	mov	DWORD PTR _dirtyrect$87927[ebp], 1
$LN48@do_paint:
; Line 5129
	cmp	DWORD PTR _dirtyrect$87927[ebp], 0
	je	SHORT $LN42@do_paint
; Line 5130
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [ecx+eax+4]
	or	edx, 262143				; 0003ffffH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [ecx+20]
	mov	DWORD PTR [ecx+eax+4], edx
$LN42@do_paint:
; Line 5131
	jmp	$LN51@do_paint
$LN50@do_paint:
; Line 5137
	mov	edx, DWORD PTR _ldata$87916[ebp]
	movzx	eax, WORD PTR [edx]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [edx+ecx*4]
	movzx	ecx, WORD PTR [edx]
	xor	edx, edx
	cmp	eax, ecx
	setne	dl
	mov	DWORD PTR _dirty_line$87918[ebp], edx
	mov	eax, DWORD PTR _dirty_line$87918[ebp]
	mov	DWORD PTR _dirty_run$87919[ebp], eax
; Line 5138
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	edx, DWORD PTR _ldata$87916[ebp]
	mov	ax, WORD PTR [edx]
	mov	WORD PTR [ecx], ax
; Line 5140
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN41@do_paint
$LN40@do_paint:
	mov	ecx, DWORD PTR _j$[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$[ebp], ecx
$LN41@do_paint:
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR [edx+300]
	jge	$LN39@do_paint
; Line 5143
	mov	ecx, DWORD PTR _j$[ebp]
	imul	ecx, 12					; 0000000cH
	add	ecx, DWORD PTR _lchars$87917[ebp]
	mov	DWORD PTR _d$87984[ebp], ecx
; Line 5145
	mov	edx, DWORD PTR _j$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _newline$[ebp]
	mov	ecx, DWORD PTR [eax+edx+4]
	mov	DWORD PTR _tattr$87980[ebp], ecx
; Line 5146
	mov	edx, DWORD PTR _j$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _newline$[ebp]
	mov	ecx, DWORD PTR [eax+edx]
	mov	DWORD PTR _tchar$87981[ebp], ecx
; Line 5148
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [ecx+eax+4]
	xor	edx, DWORD PTR _tattr$87980[ebp]
	and	edx, 4194304				; 00400000H
	je	SHORT $LN38@do_paint
; Line 5149
	mov	DWORD PTR _dirty_line$87918[ebp], 1
$LN38@do_paint:
; Line 5151
	mov	eax, DWORD PTR _tattr$87980[ebp]
	xor	eax, DWORD PTR _attr$87921[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	and	eax, DWORD PTR [ecx+4204]
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	DWORD PTR _break_run$87982[ebp], eax
; Line 5157
	cmp	DWORD PTR _tchar$87981[ebp], 9146	; 000023baH
	jb	SHORT $LN35@do_paint
	cmp	DWORD PTR _tchar$87981[ebp], 9149	; 000023bdH
	jbe	SHORT $LN36@do_paint
$LN35@do_paint:
	cmp	DWORD PTR _j$[ebp], 0
	jle	SHORT $LN37@do_paint
	mov	edx, DWORD PTR _j$[ebp]
	sub	edx, 1
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _newline$[ebp]
	cmp	DWORD PTR [eax+edx], 9146		; 000023baH
	jb	SHORT $LN37@do_paint
	mov	ecx, DWORD PTR _j$[ebp]
	sub	ecx, 1
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _newline$[ebp]
	cmp	DWORD PTR [edx+ecx], 9149		; 000023bdH
	ja	SHORT $LN37@do_paint
$LN36@do_paint:
; Line 5158
	mov	DWORD PTR _break_run$87982[ebp], 1
$LN37@do_paint:
; Line 5165
	mov	eax, DWORD PTR _tchar$87981[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	je	SHORT $LN111@do_paint
	mov	ecx, DWORD PTR _tchar$87981[ebp]
	and	ecx, -512				; fffffe00H
	cmp	ecx, 61440				; 0000f000H
	je	SHORT $LN111@do_paint
	mov	DWORD PTR tv513[ebp], 0
	jmp	SHORT $LN112@do_paint
$LN111@do_paint:
	mov	edx, DWORD PTR _tchar$87981[ebp]
	and	edx, -256				; ffffff00H
	mov	DWORD PTR tv513[ebp], edx
$LN112@do_paint:
	mov	eax, DWORD PTR tv513[ebp]
	cmp	eax, DWORD PTR _cset$87922[ebp]
	je	SHORT $LN34@do_paint
; Line 5166
	mov	DWORD PTR _break_run$87982[ebp], 1
$LN34@do_paint:
; Line 5172
	mov	ecx, DWORD PTR _d$87984[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jne	SHORT $LN32@do_paint
	cmp	DWORD PTR _j$[ebp], 0
	jle	SHORT $LN33@do_paint
	mov	edx, DWORD PTR _d$87984[ebp]
	cmp	DWORD PTR [edx-4], 0
	je	SHORT $LN33@do_paint
$LN32@do_paint:
; Line 5173
	mov	DWORD PTR _break_run$87982[ebp], 1
$LN33@do_paint:
; Line 5175
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4240]
	cmp	DWORD PTR [ecx+4], 0
	jne	SHORT $LN31@do_paint
	cmp	DWORD PTR _dirty_line$87918[ebp], 0
	jne	SHORT $LN31@do_paint
; Line 5177
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+ecx]
	cmp	edx, DWORD PTR _tchar$87981[ebp]
	jne	SHORT $LN30@do_paint
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _j$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+ecx+4]
	and	eax, 268435455				; 0fffffffH
	cmp	eax, DWORD PTR _tattr$87980[ebp]
	jne	SHORT $LN30@do_paint
; Line 5178
	mov	DWORD PTR _break_run$87982[ebp], 1
	jmp	SHORT $LN31@do_paint
$LN30@do_paint:
; Line 5179
	cmp	DWORD PTR _dirty_run$87919[ebp], 0
	jne	SHORT $LN31@do_paint
	cmp	DWORD PTR _ccount$87924[ebp], 1
	jne	SHORT $LN31@do_paint
; Line 5180
	mov	DWORD PTR _break_run$87982[ebp], 1
$LN31@do_paint:
; Line 5183
	cmp	DWORD PTR _break_run$87982[ebp], 0
	je	$LN27@do_paint
; Line 5184
	cmp	DWORD PTR _dirty_run$87919[ebp], 0
	jne	SHORT $LN25@do_paint
	cmp	DWORD PTR _last_run_dirty$87925[ebp], 0
	je	SHORT $LN26@do_paint
$LN25@do_paint:
	cmp	DWORD PTR _ccount$87924[ebp], 0
	jle	SHORT $LN26@do_paint
; Line 5186
	mov	ecx, DWORD PTR _ldata$87916[ebp]
	movzx	edx, WORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _attr$87921[ebp]
	push	eax
	mov	ecx, DWORD PTR _ccount$87924[ebp]
	push	ecx
	mov	edx, DWORD PTR _ch$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$87923[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctx$[ebp]
	push	edx
	call	_do_text
	add	esp, 28					; 0000001cH
; Line 5187
	mov	eax, DWORD PTR _attr$87921[ebp]
	and	eax, 1610612736				; 60000000H
	je	SHORT $LN26@do_paint
; Line 5189
	mov	ecx, DWORD PTR _ldata$87916[ebp]
	movzx	edx, WORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _attr$87921[ebp]
	push	eax
	mov	ecx, DWORD PTR _ccount$87924[ebp]
	push	ecx
	mov	edx, DWORD PTR _ch$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$87923[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctx$[ebp]
	push	edx
	call	_do_cursor
	add	esp, 28					; 0000001cH
$LN26@do_paint:
; Line 5191
	mov	eax, DWORD PTR _j$[ebp]
	mov	DWORD PTR _start$87923[ebp], eax
; Line 5192
	mov	DWORD PTR _ccount$87924[ebp], 0
; Line 5193
	mov	ecx, DWORD PTR _tattr$87980[ebp]
	mov	DWORD PTR _attr$87921[ebp], ecx
; Line 5194
	mov	edx, DWORD PTR _tchar$87981[ebp]
	and	edx, -1024				; fffffc00H
	cmp	edx, 55296				; 0000d800H
	je	SHORT $LN113@do_paint
	mov	eax, DWORD PTR _tchar$87981[ebp]
	and	eax, -512				; fffffe00H
	cmp	eax, 61440				; 0000f000H
	je	SHORT $LN113@do_paint
	mov	DWORD PTR tv570[ebp], 0
	jmp	SHORT $LN114@do_paint
$LN113@do_paint:
	mov	ecx, DWORD PTR _tchar$87981[ebp]
	and	ecx, -256				; ffffff00H
	mov	DWORD PTR tv570[ebp], ecx
$LN114@do_paint:
	mov	edx, DWORD PTR tv570[ebp]
	mov	DWORD PTR _cset$87922[ebp], edx
; Line 5195
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4240]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN23@do_paint
; Line 5196
	mov	edx, DWORD PTR _dirty_run$87919[ebp]
	mov	DWORD PTR _last_run_dirty$87925[ebp], edx
$LN23@do_paint:
; Line 5197
	mov	eax, DWORD PTR _dirty_line$87918[ebp]
	mov	DWORD PTR _dirty_run$87919[ebp], eax
$LN27@do_paint:
; Line 5200
	mov	DWORD PTR _do_copy$87983[ebp], 0
; Line 5202
	mov	ecx, DWORD PTR _tattr$87980[ebp]
	push	ecx
	mov	edx, DWORD PTR _tchar$87981[ebp]
	push	edx
	mov	eax, DWORD PTR _d$87984[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	edx, DWORD PTR _j$[ebp]
	imul	edx, 12					; 0000000cH
	add	edx, DWORD PTR [ecx+20]
	push	edx
	call	_termchars_equal_override
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN22@do_paint
; Line 5203
	mov	DWORD PTR _do_copy$87983[ebp], 1
; Line 5204
	mov	DWORD PTR _dirty_run$87919[ebp], 1
$LN22@do_paint:
; Line 5207
	mov	eax, DWORD PTR _ccount$87924[ebp]
	add	eax, 2
	cmp	eax, DWORD PTR _chlen$[ebp]
	jle	SHORT $LN21@do_paint
; Line 5208
	mov	ecx, DWORD PTR _ccount$87924[ebp]
	add	ecx, 256				; 00000100H
	mov	DWORD PTR _chlen$[ebp], ecx
; Line 5209
	push	2
	mov	edx, DWORD PTR _chlen$[ebp]
	push	edx
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ch$[ebp], eax
$LN21@do_paint:
; Line 5213
	cmp	DWORD PTR _tchar$87981[ebp], 65536	; 00010000H
	jbe	SHORT $LN20@do_paint
	cmp	DWORD PTR _tchar$87981[ebp], 1114112	; 00110000H
	jae	SHORT $LN20@do_paint
; Line 5214
	mov	ecx, DWORD PTR _tchar$87981[ebp]
	sub	ecx, 65536				; 00010000H
	shr	ecx, 10					; 0000000aH
	add	ecx, 55296				; 0000d800H
	mov	edx, DWORD PTR _ccount$87924[ebp]
	mov	eax, DWORD PTR _ch$[ebp]
	mov	WORD PTR [eax+edx*2], cx
	mov	ecx, DWORD PTR _ccount$87924[ebp]
	add	ecx, 1
	mov	DWORD PTR _ccount$87924[ebp], ecx
; Line 5215
	mov	edx, DWORD PTR _tchar$87981[ebp]
	sub	edx, 65536				; 00010000H
	and	edx, 1023				; 000003ffH
	add	edx, 56320				; 0000dc00H
	mov	eax, DWORD PTR _ccount$87924[ebp]
	mov	ecx, DWORD PTR _ch$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _ccount$87924[ebp]
	add	edx, 1
	mov	DWORD PTR _ccount$87924[ebp], edx
; Line 5216
	jmp	SHORT $LN19@do_paint
$LN20@do_paint:
; Line 5218
	mov	eax, DWORD PTR _ccount$87924[ebp]
	mov	ecx, DWORD PTR _ch$[ebp]
	mov	dx, WORD PTR _tchar$87981[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	eax, DWORD PTR _ccount$87924[ebp]
	add	eax, 1
	mov	DWORD PTR _ccount$87924[ebp], eax
$LN19@do_paint:
; Line 5220
	mov	ecx, DWORD PTR _d$87984[ebp]
	cmp	DWORD PTR [ecx+8], 0
	je	$LN18@do_paint
; Line 5221
	mov	edx, DWORD PTR _d$87984[ebp]
	mov	DWORD PTR _dd$88012[ebp], edx
$LN17@do_paint:
; Line 5223
	mov	eax, DWORD PTR _dd$88012[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	$LN16@do_paint
; Line 5226
	mov	ecx, DWORD PTR _dd$88012[ebp]
	mov	edx, DWORD PTR [ecx+8]
	imul	edx, 12					; 0000000cH
	add	edx, DWORD PTR _dd$88012[ebp]
	mov	DWORD PTR _dd$88012[ebp], edx
; Line 5228
	mov	eax, DWORD PTR _dd$88012[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _schar$88016[ebp], ecx
; Line 5229
	mov	edx, DWORD PTR _schar$88016[ebp]
	and	edx, -256				; ffffff00H
	mov	DWORD PTR tv620[ebp], edx
	cmp	DWORD PTR tv620[ebp], 55296		; 0000d800H
	je	SHORT $LN13@do_paint
	cmp	DWORD PTR tv620[ebp], 55552		; 0000d900H
	je	SHORT $LN12@do_paint
	cmp	DWORD PTR tv620[ebp], 55808		; 0000da00H
	je	SHORT $LN11@do_paint
	jmp	SHORT $LN14@do_paint
$LN13@do_paint:
; Line 5231
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4240]
	mov	edx, DWORD PTR _schar$88016[ebp]
	and	edx, 255				; 000000ffH
	movzx	eax, WORD PTR [ecx+edx*2+528]
	mov	DWORD PTR _schar$88016[ebp], eax
; Line 5232
	jmp	SHORT $LN14@do_paint
$LN12@do_paint:
; Line 5234
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4240]
	mov	eax, DWORD PTR _schar$88016[ebp]
	and	eax, 255				; 000000ffH
	movzx	ecx, WORD PTR [edx+eax*2+1552]
	mov	DWORD PTR _schar$88016[ebp], ecx
; Line 5235
	jmp	SHORT $LN14@do_paint
$LN11@do_paint:
; Line 5237
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4240]
	mov	ecx, DWORD PTR _schar$88016[ebp]
	and	ecx, 255				; 000000ffH
	movzx	edx, WORD PTR [eax+ecx*2+16]
	mov	DWORD PTR _schar$88016[ebp], edx
$LN14@do_paint:
; Line 5241
	mov	eax, DWORD PTR _ccount$87924[ebp]
	add	eax, 2
	cmp	eax, DWORD PTR _chlen$[ebp]
	jle	SHORT $LN10@do_paint
; Line 5242
	mov	ecx, DWORD PTR _ccount$87924[ebp]
	add	ecx, 256				; 00000100H
	mov	DWORD PTR _chlen$[ebp], ecx
; Line 5243
	push	2
	mov	edx, DWORD PTR _chlen$[ebp]
	push	edx
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ch$[ebp], eax
$LN10@do_paint:
; Line 5247
	cmp	DWORD PTR _schar$88016[ebp], 65536	; 00010000H
	jbe	SHORT $LN9@do_paint
	cmp	DWORD PTR _schar$88016[ebp], 1114112	; 00110000H
	jae	SHORT $LN9@do_paint
; Line 5248
	mov	ecx, DWORD PTR _schar$88016[ebp]
	sub	ecx, 65536				; 00010000H
	shr	ecx, 10					; 0000000aH
	add	ecx, 55296				; 0000d800H
	mov	edx, DWORD PTR _ccount$87924[ebp]
	mov	eax, DWORD PTR _ch$[ebp]
	mov	WORD PTR [eax+edx*2], cx
	mov	ecx, DWORD PTR _ccount$87924[ebp]
	add	ecx, 1
	mov	DWORD PTR _ccount$87924[ebp], ecx
; Line 5249
	mov	edx, DWORD PTR _schar$88016[ebp]
	sub	edx, 65536				; 00010000H
	and	edx, 1023				; 000003ffH
	add	edx, 56320				; 0000dc00H
	mov	eax, DWORD PTR _ccount$87924[ebp]
	mov	ecx, DWORD PTR _ch$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _ccount$87924[ebp]
	add	edx, 1
	mov	DWORD PTR _ccount$87924[ebp], edx
; Line 5250
	jmp	SHORT $LN8@do_paint
$LN9@do_paint:
; Line 5252
	mov	eax, DWORD PTR _ccount$87924[ebp]
	mov	ecx, DWORD PTR _ch$[ebp]
	mov	dx, WORD PTR _schar$88016[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	eax, DWORD PTR _ccount$87924[ebp]
	add	eax, 1
	mov	DWORD PTR _ccount$87924[ebp], eax
$LN8@do_paint:
; Line 5253
	jmp	$LN17@do_paint
$LN16@do_paint:
; Line 5255
	mov	ecx, DWORD PTR _attr$87921[ebp]
	or	ecx, -2147483648			; 80000000H
	mov	DWORD PTR _attr$87921[ebp], ecx
$LN18@do_paint:
; Line 5258
	cmp	DWORD PTR _do_copy$87983[ebp], 0
	je	$LN7@do_paint
; Line 5259
	mov	edx, DWORD PTR _d$87984[ebp]
	push	edx
	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_copy_termchar
	add	esp, 12					; 0000000cH
; Line 5260
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR _tchar$87981[ebp]
	mov	DWORD PTR [eax+ecx], edx
; Line 5261
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _j$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR _tattr$87980[ebp]
	mov	DWORD PTR [edx+ecx+4], eax
; Line 5262
	mov	ecx, DWORD PTR _start$87923[ebp]
	cmp	ecx, DWORD PTR _j$[ebp]
	jne	SHORT $LN7@do_paint
; Line 5263
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [ecx+eax+4]
	or	edx, -2147483648			; 80000000H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [ecx+20]
	mov	DWORD PTR [ecx+eax+4], edx
$LN7@do_paint:
; Line 5267
	mov	edx, DWORD PTR _tattr$87980[ebp]
	and	edx, 4194304				; 00400000H
	je	$LN5@do_paint
; Line 5268
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _j$[ebp]
	cmp	edx, DWORD PTR [ecx+300]
	jge	$LN5@do_paint
; Line 5269
	mov	eax, DWORD PTR _d$87984[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _d$87984[ebp], eax
; Line 5275
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _our_curs_y$[ebp]
	jne	SHORT $LN115@do_paint
	mov	edx, DWORD PTR _j$[ebp]
	cmp	edx, DWORD PTR _our_curs_x$[ebp]
	jne	SHORT $LN115@do_paint
	push	5275					; 0000149bH
	push	OFFSET $SG88038
	push	OFFSET $SG88039
	call	__wassert
	add	esp, 12					; 0000000cH
$LN115@do_paint:
; Line 5276
	mov	ecx, DWORD PTR _d$87984[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	add	eax, DWORD PTR [edx+20]
	push	eax
	call	_termchars_equal
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@do_paint
; Line 5277
	mov	DWORD PTR _dirty_run$87919[ebp], 1
$LN3@do_paint:
; Line 5278
	mov	ecx, DWORD PTR _d$87984[ebp]
	push	ecx
	mov	edx, DWORD PTR _j$[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	_copy_termchar
	add	esp, 12					; 0000000cH
$LN5@do_paint:
; Line 5281
	jmp	$LN40@do_paint
$LN39@do_paint:
; Line 5282
	cmp	DWORD PTR _dirty_run$87919[ebp], 0
	je	SHORT $LN2@do_paint
	cmp	DWORD PTR _ccount$87924[ebp], 0
	jle	SHORT $LN2@do_paint
; Line 5284
	mov	ecx, DWORD PTR _ldata$87916[ebp]
	movzx	edx, WORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _attr$87921[ebp]
	push	eax
	mov	ecx, DWORD PTR _ccount$87924[ebp]
	push	ecx
	mov	edx, DWORD PTR _ch$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$87923[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctx$[ebp]
	push	edx
	call	_do_text
	add	esp, 28					; 0000001cH
; Line 5285
	mov	eax, DWORD PTR _attr$87921[ebp]
	and	eax, 1610612736				; 60000000H
	je	SHORT $LN2@do_paint
; Line 5287
	mov	ecx, DWORD PTR _ldata$87916[ebp]
	movzx	edx, WORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _attr$87921[ebp]
	push	eax
	mov	ecx, DWORD PTR _ccount$87924[ebp]
	push	ecx
	mov	edx, DWORD PTR _ch$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$87923[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctx$[ebp]
	push	edx
	call	_do_cursor
	add	esp, 28					; 0000001cH
$LN2@do_paint:
; Line 5290
	mov	eax, DWORD PTR _ldata$87916[ebp]
	push	eax
	call	_unlineptr
	add	esp, 4
; Line 5291
	jmp	$LN82@do_paint
$LN81@do_paint:
; Line 5293
	mov	ecx, DWORD PTR _newline$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 5294
	mov	edx, DWORD PTR _ch$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 5295
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN118@do_paint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN118@do_paint:
	DD	1
	DD	$LN117@do_paint
$LN117@do_paint:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN116@do_paint
$LN116@do_paint:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_do_paint ENDP
; Function compile flags: /Odtp /RTCsu
_line$ = 8						; size = 4
_unlineptr PROC
; Line 140
	push	ebp
	mov	ebp, esp
; Line 141
	mov	eax, DWORD PTR _line$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN2@unlineptr
; Line 142
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	_freeline
	add	esp, 4
$LN2@unlineptr:
; Line 143
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_unlineptr ENDP
_TEXT	ENDS
EXTRN	_memcpy:PROC
EXTRN	_do_shape:PROC
EXTRN	_do_bidi:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv159 = -20						; size = 4
tv134 = -16						; size = 4
_uc$87838 = -12						; size = 4
_it$ = -8						; size = 4
_lchars$ = -4						; size = 4
_term$ = 8						; size = 4
_ldata$ = 12						; size = 4
_scr_y$ = 16						; size = 4
_term_bidi_line PROC
; Line 4786
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 4791
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4344], 0
	je	SHORT $LN30@term_bidi_
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4320], 0
	jne	$LN31@term_bidi_
$LN30@term_bidi_:
; Line 4793
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+300]
	push	eax
	mov	ecx, DWORD PTR _ldata$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR _scr_y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_bidi_cache_hit
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	$LN29@term_bidi_
; Line 4795
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [edx+4292]
	cmp	ecx, DWORD PTR [eax+300]
	jge	SHORT $LN28@term_bidi_
; Line 4796
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	mov	DWORD PTR [edx+4292], ecx
; Line 4798
	push	12					; 0000000cH
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4292]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4284]
	push	edx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+4284], eax
; Line 4800
	push	12					; 0000000cH
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4292]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4288]
	push	edx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+4288], eax
$LN28@term_bidi_:
; Line 4803
	mov	DWORD PTR _it$[ebp], 0
	jmp	SHORT $LN27@term_bidi_
$LN26@term_bidi_:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 1
	mov	DWORD PTR _it$[ebp], edx
$LN27@term_bidi_:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _it$[ebp]
	cmp	ecx, DWORD PTR [eax+300]
	jge	$LN25@term_bidi_
; Line 4805
	mov	edx, DWORD PTR _it$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _ldata$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [edx+ecx]
	mov	DWORD PTR _uc$87838[ebp], edx
; Line 4807
	mov	eax, DWORD PTR _uc$87838[ebp]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR tv134[ebp], eax
	cmp	DWORD PTR tv134[ebp], 55296		; 0000d800H
	je	SHORT $LN20@term_bidi_
	cmp	DWORD PTR tv134[ebp], 55552		; 0000d900H
	je	SHORT $LN22@term_bidi_
	cmp	DWORD PTR tv134[ebp], 55808		; 0000da00H
	je	SHORT $LN19@term_bidi_
	jmp	SHORT $LN23@term_bidi_
$LN22@term_bidi_:
; Line 4809
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4436], 0
	jne	SHORT $LN20@term_bidi_
; Line 4810
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4240]
	mov	ecx, DWORD PTR _uc$87838[ebp]
	and	ecx, 255				; 000000ffH
	movzx	edx, WORD PTR [eax+ecx*2+1552]
	mov	DWORD PTR _uc$87838[ebp], edx
; Line 4811
	jmp	SHORT $LN23@term_bidi_
$LN20@term_bidi_:
; Line 4814
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4240]
	mov	edx, DWORD PTR _uc$87838[ebp]
	and	edx, 255				; 000000ffH
	movzx	eax, WORD PTR [ecx+edx*2+528]
	mov	DWORD PTR _uc$87838[ebp], eax
; Line 4815
	jmp	SHORT $LN23@term_bidi_
$LN19@term_bidi_:
; Line 4817
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4240]
	mov	eax, DWORD PTR _uc$87838[ebp]
	and	eax, 255				; 000000ffH
	movzx	ecx, WORD PTR [edx+eax*2+16]
	mov	DWORD PTR _uc$87838[ebp], ecx
$LN23@term_bidi_:
; Line 4820
	mov	edx, DWORD PTR _uc$87838[ebp]
	and	edx, -256				; ffffff00H
	mov	DWORD PTR tv159[ebp], edx
	cmp	DWORD PTR tv159[ebp], 61440		; 0000f000H
	je	SHORT $LN15@term_bidi_
	cmp	DWORD PTR tv159[ebp], 61696		; 0000f100H
	je	SHORT $LN16@term_bidi_
	jmp	SHORT $LN17@term_bidi_
$LN16@term_bidi_:
; Line 4822
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4240]
	mov	edx, DWORD PTR _uc$87838[ebp]
	and	edx, 255				; 000000ffH
	movzx	eax, WORD PTR [ecx+edx*2+1040]
	mov	DWORD PTR _uc$87838[ebp], eax
; Line 4823
	jmp	SHORT $LN17@term_bidi_
$LN15@term_bidi_:
; Line 4825
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4240]
	mov	eax, DWORD PTR _uc$87838[ebp]
	and	eax, 255				; 000000ffH
	movzx	ecx, WORD PTR [edx+eax*2+2064]
	mov	DWORD PTR _uc$87838[ebp], ecx
$LN17@term_bidi_:
; Line 4830
	mov	edx, DWORD PTR _it$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4284]
	mov	eax, DWORD PTR _uc$87838[ebp]
	mov	DWORD PTR [ecx+edx+4], eax
	mov	ecx, DWORD PTR _it$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4284]
	mov	edx, DWORD PTR _uc$87838[ebp]
	mov	DWORD PTR [ecx+eax], edx
; Line 4831
	mov	eax, DWORD PTR _it$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4284]
	mov	cx, WORD PTR _it$[ebp]
	mov	WORD PTR [edx+eax+8], cx
; Line 4832
	jmp	$LN26@term_bidi_
$LN25@term_bidi_:
; Line 4834
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4344], 0
	jne	SHORT $LN14@term_bidi_
; Line 4835
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4284]
	push	eax
	call	_do_bidi
	add	esp, 8
$LN14@term_bidi_:
; Line 4838
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4344], 0
	jne	SHORT $LN13@term_bidi_
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4320], 0
	je	SHORT $LN13@term_bidi_
; Line 4839
	mov	DWORD PTR _it$[ebp], 0
	jmp	SHORT $LN12@term_bidi_
$LN11@term_bidi_:
	mov	eax, DWORD PTR _it$[ebp]
	add	eax, 1
	mov	DWORD PTR _it$[ebp], eax
$LN12@term_bidi_:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _it$[ebp]
	cmp	edx, DWORD PTR [ecx+300]
	jge	SHORT $LN13@term_bidi_
; Line 4840
	mov	eax, DWORD PTR _it$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4284]
	add	edx, eax
	mov	eax, DWORD PTR _it$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [ecx+4288]
	add	ecx, eax
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN11@term_bidi_
$LN13@term_bidi_:
; Line 4842
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4320], 0
	jne	SHORT $LN9@term_bidi_
; Line 4843
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+300]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4288]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4284]
	push	eax
	call	_do_shape
	add	esp, 12					; 0000000cH
$LN9@term_bidi_:
; Line 4845
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _ldata$[ebp]
	mov	eax, DWORD PTR [ecx+4280]
	cmp	eax, DWORD PTR [edx+8]
	jge	SHORT $LN8@term_bidi_
; Line 4846
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _ldata$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+4280], eax
; Line 4848
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4280]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4276]
	push	ecx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4276], eax
$LN8@term_bidi_:
; Line 4851
	mov	eax, DWORD PTR _ldata$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	imul	ecx, 12					; 0000000cH
	push	ecx
	mov	edx, DWORD PTR _ldata$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4276]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 4853
	mov	DWORD PTR _it$[ebp], 0
	jmp	SHORT $LN7@term_bidi_
$LN6@term_bidi_:
	mov	eax, DWORD PTR _it$[ebp]
	add	eax, 1
	mov	DWORD PTR _it$[ebp], eax
$LN7@term_bidi_:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _it$[ebp]
	cmp	edx, DWORD PTR [ecx+300]
	jge	$LN5@term_bidi_
; Line 4855
	mov	eax, DWORD PTR _it$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4288]
	movzx	eax, WORD PTR [edx+eax+8]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _ldata$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	add	edx, eax
	mov	eax, DWORD PTR _it$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [ecx+4276]
	add	ecx, eax
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], edx
; Line 4856
	mov	eax, DWORD PTR _it$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4276]
	cmp	DWORD PTR [edx+eax+8], 0
	je	SHORT $LN4@term_bidi_
; Line 4858
	mov	eax, DWORD PTR _it$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4276]
	mov	ecx, DWORD PTR _it$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	esi, DWORD PTR _term$[ebp]
	mov	esi, DWORD PTR [esi+4288]
	movzx	ecx, WORD PTR [esi+ecx+8]
	mov	esi, DWORD PTR _it$[ebp]
	sub	esi, ecx
	mov	edx, DWORD PTR [edx+eax+8]
	sub	edx, esi
	mov	eax, DWORD PTR _it$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [ecx+4276]
	mov	DWORD PTR [ecx+eax+8], edx
$LN4@term_bidi_:
; Line 4860
	mov	edx, DWORD PTR _it$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4288]
	mov	eax, DWORD PTR _it$[ebp]
	imul	eax, 12					; 0000000cH
	mov	esi, DWORD PTR _term$[ebp]
	mov	esi, DWORD PTR [esi+4288]
	mov	ecx, DWORD PTR [edx+ecx]
	cmp	ecx, DWORD PTR [esi+eax+4]
	je	SHORT $LN3@term_bidi_
; Line 4861
	mov	edx, DWORD PTR _it$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4288]
	mov	eax, DWORD PTR _it$[ebp]
	imul	eax, 12					; 0000000cH
	mov	esi, DWORD PTR _term$[ebp]
	mov	esi, DWORD PTR [esi+4276]
	mov	ecx, DWORD PTR [ecx+edx+4]
	mov	DWORD PTR [eax+esi], ecx
$LN3@term_bidi_:
; Line 4862
	jmp	$LN6@term_bidi_
$LN5@term_bidi_:
; Line 4865
	mov	edx, DWORD PTR _ldata$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+300]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4288]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4276]
	push	eax
	mov	ecx, DWORD PTR _ldata$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR _scr_y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_bidi_cache_store
	add	esp, 28					; 0000001cH
; Line 4867
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4276]
	mov	DWORD PTR _lchars$[ebp], eax
; Line 4868
	jmp	SHORT $LN2@term_bidi_
$LN29@term_bidi_:
; Line 4869
	mov	ecx, DWORD PTR _scr_y$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4300]
	mov	ecx, DWORD PTR [eax+ecx+4]
	mov	DWORD PTR _lchars$[ebp], ecx
$LN2@term_bidi_:
; Line 4871
	jmp	SHORT $LN1@term_bidi_
$LN31@term_bidi_:
; Line 4872
	mov	DWORD PTR _lchars$[ebp], 0
$LN1@term_bidi_:
; Line 4875
	mov	eax, DWORD PTR _lchars$[ebp]
; Line 4876
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_term_bidi_line ENDP
; Function compile flags: /Odtp /RTCsu
_i$ = -4						; size = 4
_term$ = 8						; size = 4
_line$ = 12						; size = 4
_lbefore$ = 16						; size = 4
_width$ = 20						; size = 4
_term_bidi_cache_hit PROC
; Line 4699
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 4702
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4296], 0
	jne	SHORT $LN8@term_bidi_@2
; Line 4703
	xor	eax, eax
	jmp	$LN9@term_bidi_@2
$LN8@term_bidi_@2:
; Line 4705
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _line$[ebp]
	cmp	edx, DWORD PTR [ecx+4304]
	jl	SHORT $LN7@term_bidi_@2
; Line 4706
	xor	eax, eax
	jmp	$LN9@term_bidi_@2
$LN7@term_bidi_@2:
; Line 4708
	mov	eax, DWORD PTR _line$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4296]
	cmp	DWORD PTR [edx+eax+4], 0
	jne	SHORT $LN6@term_bidi_@2
; Line 4709
	xor	eax, eax
	jmp	SHORT $LN9@term_bidi_@2
$LN6@term_bidi_@2:
; Line 4711
	mov	eax, DWORD PTR _line$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4296]
	mov	eax, DWORD PTR [eax+edx]
	cmp	eax, DWORD PTR _width$[ebp]
	je	SHORT $LN5@term_bidi_@2
; Line 4712
	xor	eax, eax
	jmp	SHORT $LN9@term_bidi_@2
$LN5@term_bidi_@2:
; Line 4714
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@term_bidi_@2
$LN3@term_bidi_@2:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN4@term_bidi_@2:
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR _width$[ebp]
	jge	SHORT $LN2@term_bidi_@2
; Line 4715
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	add	eax, DWORD PTR _lbefore$[ebp]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4296]
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 12					; 0000000cH
	add	edx, DWORD PTR [eax+ecx+4]
	push	edx
	call	_termchars_equal
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@term_bidi_@2
; Line 4716
	xor	eax, eax
	jmp	SHORT $LN9@term_bidi_@2
$LN1@term_bidi_@2:
; Line 4718
	jmp	SHORT $LN3@term_bidi_@2
$LN2@term_bidi_@2:
	mov	eax, 1
$LN9@term_bidi_@2:
; Line 4719
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_term_bidi_cache_hit ENDP
_TEXT	ENDS
EXTRN	_memset:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_p$87811 = -12						; size = 4
_j$87783 = -8						; size = 4
_i$ = -4						; size = 4
_term$ = 8						; size = 4
_line$ = 12						; size = 4
_lbefore$ = 16						; size = 4
_lafter$ = 20						; size = 4
_wcTo$ = 24						; size = 4
_width$ = 28						; size = 4
_size$ = 32						; size = 4
_term_bidi_cache_store PROC
; Line 4724
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 4727
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4296], 0
	je	SHORT $LN6@term_bidi_@3
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4304]
	cmp	edx, DWORD PTR _line$[ebp]
	jg	$LN7@term_bidi_@3
$LN6@term_bidi_@3:
; Line 4728
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4304]
	mov	DWORD PTR _j$87783[ebp], ecx
; Line 4729
	mov	edx, DWORD PTR _line$[ebp]
	add	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+4304], edx
; Line 4732
	push	16					; 00000010H
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4304]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4296]
	push	ecx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4296], eax
; Line 4735
	push	16					; 00000010H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4304]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4300]
	push	eax
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+4300], eax
$LN5@term_bidi_@3:
; Line 4736
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _j$87783[ebp]
	cmp	eax, DWORD PTR [edx+4304]
	jge	$LN7@term_bidi_@3
; Line 4738
	mov	ecx, DWORD PTR _j$87783[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4300]
	mov	DWORD PTR [eax+ecx+4], 0
	mov	ecx, DWORD PTR _j$87783[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4296]
	mov	DWORD PTR [eax+ecx+4], 0
; Line 4740
	mov	ecx, DWORD PTR _j$87783[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4300]
	mov	DWORD PTR [ecx+eax], -1
	mov	ecx, DWORD PTR _j$87783[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4296]
	mov	DWORD PTR [ecx+eax], -1
; Line 4742
	mov	ecx, DWORD PTR _j$87783[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4300]
	mov	DWORD PTR [eax+ecx+8], 0
	mov	ecx, DWORD PTR _j$87783[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4296]
	mov	DWORD PTR [eax+ecx+8], 0
; Line 4744
	mov	ecx, DWORD PTR _j$87783[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4300]
	mov	DWORD PTR [eax+ecx+12], 0
	mov	ecx, DWORD PTR _j$87783[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4296]
	mov	DWORD PTR [eax+ecx+12], 0
; Line 4745
	mov	ecx, DWORD PTR _j$87783[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$87783[ebp], ecx
; Line 4746
	jmp	$LN5@term_bidi_@3
$LN7@term_bidi_@3:
; Line 4749
	mov	edx, DWORD PTR _line$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4296]
	mov	edx, DWORD PTR [ecx+edx+4]
	push	edx
	call	_safefree
	add	esp, 4
; Line 4750
	mov	eax, DWORD PTR _line$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4300]
	mov	eax, DWORD PTR [edx+eax+4]
	push	eax
	call	_safefree
	add	esp, 4
; Line 4751
	mov	ecx, DWORD PTR _line$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4300]
	mov	ecx, DWORD PTR [eax+ecx+8]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 4752
	mov	edx, DWORD PTR _line$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4300]
	mov	edx, DWORD PTR [ecx+edx+12]
	push	edx
	call	_safefree
	add	esp, 4
; Line 4754
	mov	eax, DWORD PTR _line$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4296]
	mov	ecx, DWORD PTR _width$[ebp]
	mov	DWORD PTR [eax+edx], ecx
; Line 4755
	push	12					; 0000000cH
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	call	_safemalloc
	add	esp, 8
	mov	ecx, DWORD PTR _line$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [edx+4296]
	mov	DWORD PTR [edx+ecx+4], eax
; Line 4756
	mov	eax, DWORD PTR _line$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4300]
	mov	ecx, DWORD PTR _width$[ebp]
	mov	DWORD PTR [eax+edx], ecx
; Line 4757
	push	12					; 0000000cH
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	call	_safemalloc
	add	esp, 8
	mov	ecx, DWORD PTR _line$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [edx+4300]
	mov	DWORD PTR [edx+ecx+4], eax
; Line 4758
	push	4
	mov	eax, DWORD PTR _width$[ebp]
	push	eax
	call	_safemalloc
	add	esp, 8
	mov	ecx, DWORD PTR _line$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [edx+4300]
	mov	DWORD PTR [edx+ecx+8], eax
; Line 4759
	push	4
	mov	eax, DWORD PTR _width$[ebp]
	push	eax
	call	_safemalloc
	add	esp, 8
	mov	ecx, DWORD PTR _line$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [edx+4300]
	mov	DWORD PTR [edx+ecx+12], eax
; Line 4761
	mov	eax, DWORD PTR _size$[ebp]
	imul	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _lbefore$[ebp]
	push	ecx
	mov	edx, DWORD PTR _line$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4296]
	mov	edx, DWORD PTR [ecx+edx+4]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 4762
	mov	eax, DWORD PTR _size$[ebp]
	imul	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _lafter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _line$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4300]
	mov	edx, DWORD PTR [ecx+edx+4]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 4763
	mov	eax, DWORD PTR _width$[ebp]
	shl	eax, 2
	push	eax
	push	0
	mov	ecx, DWORD PTR _line$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4300]
	mov	ecx, DWORD PTR [eax+ecx+8]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 4764
	mov	edx, DWORD PTR _width$[ebp]
	shl	edx, 2
	push	edx
	push	0
	mov	eax, DWORD PTR _line$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4300]
	mov	eax, DWORD PTR [edx+eax+12]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 4766
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@term_bidi_@3
$LN2@term_bidi_@3:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN3@term_bidi_@3:
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR _width$[ebp]
	jge	SHORT $LN8@term_bidi_@3
; Line 4767
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _wcTo$[ebp]
	movzx	edx, WORD PTR [ecx+eax+8]
	mov	DWORD PTR _p$87811[ebp], edx
; Line 4769
	cmp	DWORD PTR _p$87811[ebp], 0
	jl	SHORT $LN10@term_bidi_@3
	mov	eax, DWORD PTR _p$87811[ebp]
	cmp	eax, DWORD PTR _width$[ebp]
	jl	SHORT $LN11@term_bidi_@3
$LN10@term_bidi_@3:
	push	4769					; 000012a1H
	push	OFFSET $SG87813
	push	OFFSET $SG87814
	call	__wassert
	add	esp, 12					; 0000000cH
$LN11@term_bidi_@3:
; Line 4771
	mov	edx, DWORD PTR _line$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4300]
	mov	edx, DWORD PTR [ecx+edx+12]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _p$87811[ebp]
	mov	DWORD PTR [edx+eax*4], ecx
; Line 4772
	mov	edx, DWORD PTR _line$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4300]
	mov	edx, DWORD PTR [ecx+edx+8]
	mov	eax, DWORD PTR _p$87811[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [edx+eax*4], ecx
; Line 4773
	jmp	$LN2@term_bidi_@3
$LN8@term_bidi_@3:
; Line 4774
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_term_bidi_cache_store ENDP
; Function compile flags: /Odtp /RTCsu
_j$ = -8						; size = 4
_i$ = -4						; size = 4
_term$ = 8						; size = 4
_term_invalidate PROC
; Line 5301
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 5304
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@term_inval
$LN5@term_inval:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@term_inval:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR [ecx+296]
	jge	SHORT $LN4@term_inval
; Line 5305
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN3@term_inval
$LN2@term_inval:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN3@term_inval:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _j$[ebp]
	cmp	edx, DWORD PTR [ecx+300]
	jge	SHORT $LN1@term_inval
; Line 5306
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _j$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+ecx+4]
	or	eax, 262143				; 0003ffffH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _j$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR [edx+20]
	mov	DWORD PTR [edx+ecx+4], eax
	jmp	SHORT $LN2@term_inval
$LN1@term_inval:
	jmp	SHORT $LN5@term_inval
$LN4@term_inval:
; Line 5308
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_term_schedule_update
	add	esp, 4
; Line 5309
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_term_invalidate ENDP
_TEXT	ENDS
PUBLIC	_term_paint
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_j$ = -8						; size = 4
_i$ = -4						; size = 4
_term$ = 8						; size = 4
_ctx$ = 12						; size = 4
_left$ = 16						; size = 4
_top$ = 20						; size = 4
_right$ = 24						; size = 4
_bottom$ = 28						; size = 4
_immediately$ = 32					; size = 4
_term_paint PROC
; Line 5316
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 5318
	cmp	DWORD PTR _left$[ebp], 0
	jge	SHORT $LN17@term_paint
	mov	DWORD PTR _left$[ebp], 0
$LN17@term_paint:
; Line 5319
	cmp	DWORD PTR _top$[ebp], 0
	jge	SHORT $LN16@term_paint
	mov	DWORD PTR _top$[ebp], 0
$LN16@term_paint:
; Line 5320
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	cmp	ecx, DWORD PTR [eax+300]
	jl	SHORT $LN15@term_paint
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+300]
	sub	eax, 1
	mov	DWORD PTR _right$[ebp], eax
$LN15@term_paint:
; Line 5321
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _bottom$[ebp]
	cmp	edx, DWORD PTR [ecx+296]
	jl	SHORT $LN14@term_paint
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	sub	ecx, 1
	mov	DWORD PTR _bottom$[ebp], ecx
$LN14@term_paint:
; Line 5323
	mov	edx, DWORD PTR _top$[ebp]
	mov	DWORD PTR _i$[ebp], edx
	jmp	SHORT $LN13@term_paint
$LN12@term_paint:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN13@term_paint:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _bottom$[ebp]
	jg	$LN11@term_paint
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR [edx+296]
	jge	$LN11@term_paint
; Line 5324
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	movzx	edx, WORD PTR [ecx]
	and	edx, 3
	jne	SHORT $LN10@term_paint
; Line 5325
	mov	eax, DWORD PTR _left$[ebp]
	mov	DWORD PTR _j$[ebp], eax
	jmp	SHORT $LN9@term_paint
$LN8@term_paint:
	mov	ecx, DWORD PTR _j$[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$[ebp], ecx
$LN9@term_paint:
	mov	edx, DWORD PTR _j$[ebp]
	cmp	edx, DWORD PTR _right$[ebp]
	jg	SHORT $LN7@term_paint
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	cmp	ecx, DWORD PTR [eax+300]
	jge	SHORT $LN7@term_paint
; Line 5326
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [ecx+eax+4]
	or	edx, 262143				; 0003ffffH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [ecx+20]
	mov	DWORD PTR [ecx+eax+4], edx
	jmp	SHORT $LN8@term_paint
$LN7@term_paint:
; Line 5327
	jmp	SHORT $LN6@term_paint
$LN10@term_paint:
; Line 5328
	mov	eax, DWORD PTR _left$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _j$[ebp], eax
	jmp	SHORT $LN5@term_paint
$LN4@term_paint:
	mov	edx, DWORD PTR _j$[ebp]
	add	edx, 1
	mov	DWORD PTR _j$[ebp], edx
$LN5@term_paint:
	mov	eax, DWORD PTR _right$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, 1
	cmp	DWORD PTR _j$[ebp], eax
	jg	SHORT $LN6@term_paint
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	cmp	ecx, DWORD PTR [eax+300]
	jge	SHORT $LN6@term_paint
; Line 5329
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [ecx+eax+4]
	or	edx, 262143				; 0003ffffH
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [ecx+20]
	mov	DWORD PTR [ecx+eax+4], edx
	jmp	SHORT $LN4@term_paint
$LN6@term_paint:
; Line 5330
	jmp	$LN12@term_paint
$LN11@term_paint:
; Line 5332
	cmp	DWORD PTR _immediately$[ebp], 0
	je	SHORT $LN2@term_paint
; Line 5333
	push	0
	mov	edx, DWORD PTR _ctx$[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_do_paint
	add	esp, 12					; 0000000cH
; Line 5334
	jmp	SHORT $LN18@term_paint
$LN2@term_paint:
; Line 5335
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_schedule_update
	add	esp, 4
$LN18@term_paint:
; Line 5337
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_term_paint ENDP
_TEXT	ENDS
PUBLIC	_term_scroll
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv71 = -12						; size = 4
tv72 = -8						; size = 4
_sbtop$ = -4						; size = 4
_term$ = 8						; size = 4
_rel$ = 12						; size = 4
_where$ = 16						; size = 4
_term_scroll PROC
; Line 5347
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 5348
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_sblines
	add	esp, 4
	neg	eax
	mov	DWORD PTR _sbtop$[ebp], eax
; Line 5354
	cmp	DWORD PTR _rel$[ebp], 0
	jge	SHORT $LN7@term_scrol
	mov	DWORD PTR tv72[ebp], 0
	jmp	SHORT $LN8@term_scrol
$LN7@term_scrol:
	cmp	DWORD PTR _rel$[ebp], 0
	jle	SHORT $LN5@term_scrol
	mov	ecx, DWORD PTR _sbtop$[ebp]
	mov	DWORD PTR tv71[ebp], ecx
	jmp	SHORT $LN6@term_scrol
$LN5@term_scrol:
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR tv71[ebp], eax
$LN6@term_scrol:
	mov	ecx, DWORD PTR tv71[ebp]
	mov	DWORD PTR tv72[ebp], ecx
$LN8@term_scrol:
	mov	edx, DWORD PTR tv72[ebp]
	add	edx, DWORD PTR _where$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+16], edx
; Line 5355
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	cmp	edx, DWORD PTR _sbtop$[ebp]
	jge	SHORT $LN2@term_scrol
; Line 5356
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _sbtop$[ebp]
	mov	DWORD PTR [eax+16], ecx
$LN2@term_scrol:
; Line 5357
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+16], 0
	jle	SHORT $LN1@term_scrol
; Line 5358
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+16], 0
$LN1@term_scrol:
; Line 5359
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_update_sbar
	add	esp, 4
; Line 5365
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_term_update
	add	esp, 4
; Line 5366
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_term_scroll ENDP
_TEXT	ENDS
PUBLIC	_term_scroll_to_selection
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_sbtop$ = -24						; size = 4
_y$ = -20						; size = 4
_target$ = -12						; size = 8
_term$ = 8						; size = 4
_which_end$ = 12					; size = 4
_term_scroll_to_selection PROC
; Line 5373
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 5376
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_sblines
	add	esp, 4
	neg	eax
	mov	DWORD PTR _sbtop$[ebp], eax
; Line 5378
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+3656], 3
	je	SHORT $LN6@term_scrol@2
; Line 5379
	jmp	SHORT $LN7@term_scrol@2
$LN6@term_scrol@2:
; Line 5380
	cmp	DWORD PTR _which_end$[ebp], 0
	je	SHORT $LN5@term_scrol@2
; Line 5381
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3676]
	mov	ecx, DWORD PTR [edx+3680]
	mov	DWORD PTR _target$[ebp], eax
	mov	DWORD PTR _target$[ebp+4], ecx
; Line 5382
	jmp	SHORT $LN4@term_scrol@2
$LN5@term_scrol@2:
; Line 5383
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3668]
	mov	ecx, DWORD PTR [edx+3672]
	mov	DWORD PTR _target$[ebp], eax
	mov	DWORD PTR _target$[ebp+4], ecx
$LN4@term_scrol@2:
; Line 5385
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+296]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _target$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _y$[ebp], ecx
; Line 5386
	mov	edx, DWORD PTR _y$[ebp]
	cmp	edx, DWORD PTR _sbtop$[ebp]
	jge	SHORT $LN3@term_scrol@2
; Line 5387
	mov	eax, DWORD PTR _sbtop$[ebp]
	mov	DWORD PTR _y$[ebp], eax
	jmp	SHORT $LN2@term_scrol@2
$LN3@term_scrol@2:
; Line 5388
	cmp	DWORD PTR _y$[ebp], 0
	jle	SHORT $LN2@term_scrol@2
; Line 5389
	mov	DWORD PTR _y$[ebp], 0
$LN2@term_scrol@2:
; Line 5390
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	push	-1
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_term_scroll
	add	esp, 12					; 0000000cH
$LN7@term_scrol@2:
; Line 5391
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@term_scrol@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN11@term_scrol@2:
	DD	1
	DD	$LN10@term_scrol@2
$LN10@term_scrol@2:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN9@term_scrol@2
$LN9@term_scrol@2:
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_term_scroll_to_selection ENDP
_TEXT	ENDS
PUBLIC	_term_copyall
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_screen$ = -36						; size = 4
_bottom$ = -28						; size = 8
_top$ = -12						; size = 8
_term$ = 8						; size = 4
_term_copyall PROC
; Line 5583
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 5586
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _screen$[ebp], ecx
; Line 5587
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_sblines
	add	esp, 4
	neg	eax
	mov	DWORD PTR _top$[ebp], eax
; Line 5588
	mov	DWORD PTR _top$[ebp+4], 0
; Line 5589
	mov	eax, DWORD PTR _screen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_find_last_nonempty_line
	add	esp, 8
	mov	DWORD PTR _bottom$[ebp], eax
; Line 5590
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+300]
	mov	DWORD PTR _bottom$[ebp+4], eax
; Line 5591
	push	1
	push	0
	mov	ecx, DWORD PTR _bottom$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _bottom$[ebp]
	push	edx
	mov	eax, DWORD PTR _top$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _top$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_clipme
	add	esp, 28					; 0000001cH
; Line 5592
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@term_copya
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@term_copya:
	DD	2
	DD	$LN5@term_copya
$LN5@term_copya:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@term_copya
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN4@term_copya
$LN4@term_copya:
	DB	98					; 00000062H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	0
$LN3@term_copya:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
_term_copyall ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_write_clip:PROC
EXTRN	_mb_to_wc:PROC
EXTRN	_is_dbcs_leadbyte:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv337 = -180						; size = 4
tv238 = -176						; size = 4
tv181 = -172						; size = 4
tv156 = -168						; size = 4
tv145 = -164						; size = 4
_i$88220 = -160						; size = 4
_rv$88207 = -156					; size = 4
_wbuf$88206 = -148					; size = 8
_buf$88205 = -132					; size = 4
_uc$88186 = -124					; size = 4
_x$88181 = -120						; size = 4
_c$88180 = -116						; size = 4
_p$88179 = -112						; size = 4
_cbuf$88178 = -104					; size = 32
_nlpos$88160 = -64					; size = 8
_ldata$88159 = -52					; size = 4
_nl$88158 = -48						; size = 4
_attr$ = -44						; size = 4
_old_top_x$ = -40					; size = 4
_buf$ = -32						; size = 24
__$ArrayPad$ = -4					; size = 4
_term$ = 8						; size = 4
_top$ = 12						; size = 8
_bottom$ = 20						; size = 8
_rect$ = 28						; size = 4
_desel$ = 32						; size = 4
_clipme	PROC
; Line 5420
	push	ebp
	mov	ebp, esp
	sub	esp, 180				; 000000b4H
	push	edi
	lea	edi, DWORD PTR [ebp-180]
	mov	ecx, 45					; 0000002dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 5425
	mov	DWORD PTR _buf$[ebp], 5120		; 00001400H
; Line 5426
	mov	DWORD PTR _buf$[ebp+4], 0
; Line 5427
	push	2
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _buf$[ebp+8], eax
	mov	ecx, DWORD PTR _buf$[ebp+8]
	mov	DWORD PTR _buf$[ebp+12], ecx
; Line 5428
	push	4
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _buf$[ebp+16], eax
	mov	eax, DWORD PTR _buf$[ebp+16]
	mov	DWORD PTR _buf$[ebp+20], eax
; Line 5430
	mov	ecx, DWORD PTR _top$[ebp+4]
	mov	DWORD PTR _old_top_x$[ebp], ecx
$LN47@clipme:
; Line 5432
	mov	edx, DWORD PTR _top$[ebp]
	cmp	edx, DWORD PTR _bottom$[ebp]
	jl	SHORT $LN45@clipme
	mov	eax, DWORD PTR _top$[ebp]
	cmp	eax, DWORD PTR _bottom$[ebp]
	jne	$LN46@clipme
	mov	ecx, DWORD PTR _top$[ebp+4]
	cmp	ecx, DWORD PTR _bottom$[ebp+4]
	jge	$LN46@clipme
$LN45@clipme:
; Line 5433
	mov	DWORD PTR _nl$88158[ebp], 0
; Line 5434
	push	0
	push	5434					; 0000153aH
	mov	edx, DWORD PTR _top$[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_lineptr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ldata$88159[ebp], eax
; Line 5442
	mov	ecx, DWORD PTR _top$[ebp]
	mov	DWORD PTR _nlpos$88160[ebp], ecx
; Line 5443
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+300]
	mov	DWORD PTR _nlpos$88160[ebp+4], eax
; Line 5451
	mov	ecx, DWORD PTR _ldata$88159[ebp]
	movzx	edx, WORD PTR [ecx]
	and	edx, 16					; 00000010H
	jne	$LN44@clipme
$LN43@clipme:
; Line 5455
	cmp	DWORD PTR _nlpos$88160[ebp+4], 0
	je	$LN42@clipme
	mov	eax, DWORD PTR _nlpos$88160[ebp+4]
	sub	eax, 1
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _ldata$88159[ebp]
	mov	edx, DWORD PTR [ecx+20]
	cmp	DWORD PTR [eax+edx], 32			; 00000020H
	je	SHORT $LN41@clipme
	mov	eax, DWORD PTR _nlpos$88160[ebp+4]
	sub	eax, 1
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _ldata$88159[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+eax]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	$LN42@clipme
	mov	ecx, DWORD PTR _nlpos$88160[ebp+4]
	sub	ecx, 1
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _ldata$88159[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR [eax+ecx]
	and	ecx, 255				; 000000ffH
	cmp	ecx, 32					; 00000020H
	jne	SHORT $LN42@clipme
$LN41@clipme:
	mov	edx, DWORD PTR _nlpos$88160[ebp+4]
	sub	edx, 1
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _ldata$88159[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	DWORD PTR [ecx+edx+8], 0
	jne	SHORT $LN42@clipme
	mov	edx, DWORD PTR _top$[ebp]
	cmp	edx, DWORD PTR _nlpos$88160[ebp]
	jl	SHORT $LN40@clipme
	mov	eax, DWORD PTR _top$[ebp]
	cmp	eax, DWORD PTR _nlpos$88160[ebp]
	jne	SHORT $LN42@clipme
	mov	ecx, DWORD PTR _top$[ebp+4]
	cmp	ecx, DWORD PTR _nlpos$88160[ebp+4]
	jge	SHORT $LN42@clipme
$LN40@clipme:
; Line 5456
	cmp	DWORD PTR _nlpos$88160[ebp+4], 0
	jne	SHORT $LN50@clipme
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+300]
	mov	DWORD PTR _nlpos$88160[ebp+4], eax
	mov	ecx, DWORD PTR _nlpos$88160[ebp]
	sub	ecx, 1
	mov	DWORD PTR _nlpos$88160[ebp], ecx
	mov	DWORD PTR tv145[ebp], 1
	jmp	SHORT $LN51@clipme
$LN50@clipme:
	mov	edx, DWORD PTR _nlpos$88160[ebp+4]
	sub	edx, 1
	mov	DWORD PTR _nlpos$88160[ebp+4], edx
	mov	DWORD PTR tv145[ebp], 0
$LN51@clipme:
	jmp	$LN43@clipme
$LN42@clipme:
; Line 5457
	mov	eax, DWORD PTR _nlpos$88160[ebp]
	cmp	eax, DWORD PTR _bottom$[ebp]
	jl	SHORT $LN38@clipme
	mov	ecx, DWORD PTR _nlpos$88160[ebp]
	cmp	ecx, DWORD PTR _bottom$[ebp]
	jne	SHORT $LN39@clipme
	mov	edx, DWORD PTR _nlpos$88160[ebp+4]
	cmp	edx, DWORD PTR _bottom$[ebp+4]
	jge	SHORT $LN39@clipme
$LN38@clipme:
; Line 5458
	mov	DWORD PTR _nl$88158[ebp], 1
$LN39@clipme:
; Line 5459
	jmp	SHORT $LN37@clipme
$LN44@clipme:
	mov	eax, DWORD PTR _ldata$88159[ebp]
	movzx	ecx, WORD PTR [eax]
	and	ecx, 32					; 00000020H
	je	SHORT $LN37@clipme
; Line 5461
	cmp	DWORD PTR _nlpos$88160[ebp+4], 0
	jne	SHORT $LN52@clipme
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+300]
	mov	DWORD PTR _nlpos$88160[ebp+4], eax
	mov	ecx, DWORD PTR _nlpos$88160[ebp]
	sub	ecx, 1
	mov	DWORD PTR _nlpos$88160[ebp], ecx
	mov	DWORD PTR tv156[ebp], 1
	jmp	SHORT $LN37@clipme
$LN52@clipme:
	mov	edx, DWORD PTR _nlpos$88160[ebp+4]
	sub	edx, 1
	mov	DWORD PTR _nlpos$88160[ebp+4], edx
	mov	DWORD PTR tv156[ebp], 0
$LN37@clipme:
; Line 5471
	cmp	DWORD PTR _rect$[ebp], 0
	je	SHORT $LN33@clipme
; Line 5472
	mov	eax, DWORD PTR _nlpos$88160[ebp+4]
	cmp	eax, DWORD PTR _bottom$[ebp+4]
	jle	SHORT $LN34@clipme
; Line 5473
	mov	ecx, DWORD PTR _bottom$[ebp+4]
	mov	DWORD PTR _nlpos$88160[ebp+4], ecx
$LN34@clipme:
; Line 5474
	mov	edx, DWORD PTR _top$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR _bottom$[ebp]
	setl	al
	mov	DWORD PTR _nl$88158[ebp], eax
$LN33@clipme:
; Line 5477
	mov	ecx, DWORD PTR _top$[ebp]
	cmp	ecx, DWORD PTR _bottom$[ebp]
	jl	SHORT $LN31@clipme
	mov	edx, DWORD PTR _top$[ebp]
	cmp	edx, DWORD PTR _bottom$[ebp]
	jne	$LN32@clipme
	mov	eax, DWORD PTR _top$[ebp+4]
	cmp	eax, DWORD PTR _bottom$[ebp+4]
	jge	$LN32@clipme
$LN31@clipme:
	mov	ecx, DWORD PTR _top$[ebp]
	cmp	ecx, DWORD PTR _nlpos$88160[ebp]
	jl	SHORT $LN30@clipme
	mov	edx, DWORD PTR _top$[ebp]
	cmp	edx, DWORD PTR _nlpos$88160[ebp]
	jne	$LN32@clipme
	mov	eax, DWORD PTR _top$[ebp+4]
	cmp	eax, DWORD PTR _nlpos$88160[ebp+4]
	jge	$LN32@clipme
$LN30@clipme:
; Line 5484
	mov	ecx, DWORD PTR _top$[ebp+4]
	mov	DWORD PTR _x$88181[ebp], ecx
; Line 5486
	mov	edx, DWORD PTR _x$88181[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _ldata$88159[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	DWORD PTR [edx+ecx], 57343		; 0000dfffH
	jne	SHORT $LN28@clipme
; Line 5487
	mov	edx, DWORD PTR _top$[ebp+4]
	add	edx, 1
	mov	DWORD PTR _top$[ebp+4], edx
; Line 5488
	jmp	SHORT $LN33@clipme
$LN28@clipme:
; Line 5491
	mov	eax, 1
	test	eax, eax
	je	$LN27@clipme
; Line 5492
	mov	ecx, DWORD PTR _x$88181[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _ldata$88159[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR [ecx+eax]
	mov	DWORD PTR _uc$88186[ebp], ecx
; Line 5493
	mov	edx, DWORD PTR _x$88181[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _ldata$88159[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [ecx+edx+4]
	mov	DWORD PTR _attr$[ebp], edx
; Line 5495
	mov	eax, DWORD PTR _uc$88186[ebp]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR tv181[ebp], eax
	cmp	DWORD PTR tv181[ebp], 55296		; 0000d800H
	je	SHORT $LN22@clipme
	cmp	DWORD PTR tv181[ebp], 55552		; 0000d900H
	je	SHORT $LN24@clipme
	cmp	DWORD PTR tv181[ebp], 55808		; 0000da00H
	je	SHORT $LN21@clipme
	jmp	SHORT $LN25@clipme
$LN24@clipme:
; Line 5497
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4436], 0
	jne	SHORT $LN22@clipme
; Line 5498
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4240]
	mov	ecx, DWORD PTR _uc$88186[ebp]
	and	ecx, 255				; 000000ffH
	movzx	edx, WORD PTR [eax+ecx*2+1552]
	mov	DWORD PTR _uc$88186[ebp], edx
; Line 5499
	jmp	SHORT $LN25@clipme
$LN22@clipme:
; Line 5502
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4240]
	mov	edx, DWORD PTR _uc$88186[ebp]
	and	edx, 255				; 000000ffH
	movzx	eax, WORD PTR [ecx+edx*2+528]
	mov	DWORD PTR _uc$88186[ebp], eax
; Line 5503
	jmp	SHORT $LN25@clipme
$LN21@clipme:
; Line 5505
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4240]
	mov	eax, DWORD PTR _uc$88186[ebp]
	and	eax, 255				; 000000ffH
	movzx	ecx, WORD PTR [edx+eax*2+16]
	mov	DWORD PTR _uc$88186[ebp], ecx
$LN25@clipme:
; Line 5508
	mov	edx, DWORD PTR _uc$88186[ebp]
	and	edx, -256				; ffffff00H
	mov	DWORD PTR tv238[ebp], edx
	cmp	DWORD PTR tv238[ebp], 61440		; 0000f000H
	je	SHORT $LN17@clipme
	cmp	DWORD PTR tv238[ebp], 61696		; 0000f100H
	je	SHORT $LN18@clipme
	jmp	SHORT $LN19@clipme
$LN18@clipme:
; Line 5510
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4240]
	mov	edx, DWORD PTR _uc$88186[ebp]
	and	edx, 255				; 000000ffH
	movzx	eax, WORD PTR [ecx+edx*2+1040]
	mov	DWORD PTR _uc$88186[ebp], eax
; Line 5511
	jmp	SHORT $LN19@clipme
$LN17@clipme:
; Line 5513
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4240]
	mov	eax, DWORD PTR _uc$88186[ebp]
	and	eax, 255				; 000000ffH
	movzx	ecx, WORD PTR [edx+eax*2+2064]
	mov	DWORD PTR _uc$88186[ebp], ecx
$LN19@clipme:
; Line 5517
	mov	edx, DWORD PTR _uc$88186[ebp]
	and	edx, 255				; 000000ffH
	mov	DWORD PTR _c$88180[ebp], edx
; Line 5519
	cmp	DWORD PTR _uc$88186[ebp], 65536		; 00010000H
	jle	SHORT $LN16@clipme
	cmp	DWORD PTR _uc$88186[ebp], 1114112	; 00110000H
	jge	SHORT $LN16@clipme
; Line 5520
	mov	eax, DWORD PTR _uc$88186[ebp]
	sub	eax, 65536				; 00010000H
	sar	eax, 10					; 0000000aH
	or	eax, 55296				; 0000d800H
	mov	WORD PTR _cbuf$88178[ebp], ax
; Line 5521
	mov	ecx, DWORD PTR _uc$88186[ebp]
	sub	ecx, 65536				; 00010000H
	and	ecx, 1023				; 000003ffH
	or	ecx, 56320				; 0000dc00H
	mov	WORD PTR _cbuf$88178[ebp+2], cx
; Line 5522
	xor	edx, edx
	mov	WORD PTR _cbuf$88178[ebp+4], dx
; Line 5523
	jmp	SHORT $LN15@clipme
$LN16@clipme:
; Line 5526
	mov	ax, WORD PTR _uc$88186[ebp]
	mov	WORD PTR _cbuf$88178[ebp], ax
; Line 5527
	xor	ecx, ecx
	mov	WORD PTR _cbuf$88178[ebp+2], cx
$LN15@clipme:
; Line 5530
	mov	edx, DWORD PTR _uc$88186[ebp]
	and	edx, -512				; fffffe00H
	cmp	edx, 61440				; 0000f000H
	jne	$LN14@clipme
; Line 5531
	cmp	DWORD PTR _c$88180[ebp], 32		; 00000020H
	jl	$LN14@clipme
	cmp	DWORD PTR _c$88180[ebp], 127		; 0000007fH
	je	$LN14@clipme
; Line 5535
	movzx	eax, BYTE PTR _c$88180[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4240]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_is_dbcs_leadbyte
	add	esp, 8
	test	eax, eax
	je	SHORT $LN12@clipme
; Line 5536
	mov	cl, BYTE PTR _c$88180[ebp]
	mov	BYTE PTR _buf$88205[ebp], cl
; Line 5537
	mov	edx, DWORD PTR _top$[ebp+4]
	add	edx, 1
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _ldata$88159[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [ecx+edx]
	and	edx, 255				; 000000ffH
	mov	BYTE PTR _buf$88205[ebp+1], dl
; Line 5538
	push	4
	lea	eax, DWORD PTR _wbuf$88206[ebp]
	push	eax
	push	2
	lea	ecx, DWORD PTR _buf$88205[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4240]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_mb_to_wc
	add	esp, 24					; 00000018H
	mov	DWORD PTR _rv$88207[ebp], eax
; Line 5539
	mov	edx, DWORD PTR _top$[ebp+4]
	add	edx, 1
	mov	DWORD PTR _top$[ebp+4], edx
; Line 5540
	jmp	SHORT $LN11@clipme
$LN12@clipme:
; Line 5541
	mov	al, BYTE PTR _c$88180[ebp]
	mov	BYTE PTR _buf$88205[ebp], al
; Line 5542
	push	4
	lea	ecx, DWORD PTR _wbuf$88206[ebp]
	push	ecx
	push	1
	lea	edx, DWORD PTR _buf$88205[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4240]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_mb_to_wc
	add	esp, 24					; 00000018H
	mov	DWORD PTR _rv$88207[ebp], eax
$LN11@clipme:
; Line 5545
	cmp	DWORD PTR _rv$88207[ebp], 0
	jle	SHORT $LN14@clipme
; Line 5546
	mov	eax, DWORD PTR _rv$88207[ebp]
	shl	eax, 1
	push	eax
	lea	ecx, DWORD PTR _wbuf$88206[ebp]
	push	ecx
	lea	edx, DWORD PTR _cbuf$88178[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 5547
	xor	eax, eax
	mov	ecx, DWORD PTR _rv$88207[ebp]
	mov	WORD PTR _cbuf$88178[ebp+ecx*2], ax
$LN14@clipme:
; Line 5553
	lea	edx, DWORD PTR _cbuf$88178[ebp]
	mov	DWORD PTR _p$88179[ebp], edx
	jmp	SHORT $LN9@clipme
$LN8@clipme:
	mov	eax, DWORD PTR _p$88179[ebp]
	add	eax, 2
	mov	DWORD PTR _p$88179[ebp], eax
$LN9@clipme:
	mov	ecx, DWORD PTR _p$88179[ebp]
	movzx	edx, WORD PTR [ecx]
	test	edx, edx
	je	SHORT $LN7@clipme
; Line 5554
	mov	eax, DWORD PTR _attr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$88179[ebp]
	movzx	edx, WORD PTR [ecx]
	push	edx
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_clip_addchar
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN8@clipme
$LN7@clipme:
; Line 5556
	mov	ecx, DWORD PTR _x$88181[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _ldata$88159[ebp]
	mov	eax, DWORD PTR [edx+20]
	cmp	DWORD PTR [eax+ecx+8], 0
	je	SHORT $LN6@clipme
; Line 5557
	mov	ecx, DWORD PTR _x$88181[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _ldata$88159[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	edx, DWORD PTR _x$88181[ebp]
	add	edx, DWORD PTR [eax+ecx+8]
	mov	DWORD PTR _x$88181[ebp], edx
; Line 5558
	jmp	SHORT $LN5@clipme
$LN6@clipme:
; Line 5559
	jmp	SHORT $LN27@clipme
$LN5@clipme:
; Line 5560
	jmp	$LN28@clipme
$LN27@clipme:
; Line 5561
	mov	eax, DWORD PTR _top$[ebp+4]
	add	eax, 1
	mov	DWORD PTR _top$[ebp+4], eax
; Line 5562
	jmp	$LN33@clipme
$LN32@clipme:
; Line 5563
	cmp	DWORD PTR _nl$88158[ebp], 0
	je	SHORT $LN4@clipme
; Line 5565
	mov	DWORD PTR _i$88220[ebp], 0
	jmp	SHORT $LN3@clipme
$LN2@clipme:
	mov	ecx, DWORD PTR _i$88220[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$88220[ebp], ecx
$LN3@clipme:
	cmp	DWORD PTR _i$88220[ebp], 2
	jae	SHORT $LN4@clipme
; Line 5566
	push	0
	mov	edx, DWORD PTR _i$88220[ebp]
	movzx	eax, WORD PTR _sel_nl[edx*2]
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_clip_addchar
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN2@clipme
$LN4@clipme:
; Line 5568
	mov	edx, DWORD PTR _top$[ebp]
	add	edx, 1
	mov	DWORD PTR _top$[ebp], edx
; Line 5569
	cmp	DWORD PTR _rect$[ebp], 0
	je	SHORT $LN54@clipme
	mov	eax, DWORD PTR _old_top_x$[ebp]
	mov	DWORD PTR tv337[ebp], eax
	jmp	SHORT $LN55@clipme
$LN54@clipme:
	mov	DWORD PTR tv337[ebp], 0
$LN55@clipme:
	mov	ecx, DWORD PTR tv337[ebp]
	mov	DWORD PTR _top$[ebp+4], ecx
; Line 5571
	mov	edx, DWORD PTR _ldata$88159[ebp]
	push	edx
	call	_unlineptr
	add	esp, 4
; Line 5572
	jmp	$LN47@clipme
$LN46@clipme:
; Line 5574
	push	0
	push	0
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_clip_addchar
	add	esp, 12					; 0000000cH
; Line 5577
	mov	ecx, DWORD PTR _desel$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp+16]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp+8]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4232]
	push	eax
	call	_write_clip
	add	esp, 20					; 00000014H
; Line 5578
	mov	ecx, DWORD PTR _buf$[ebp+8]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 5579
	mov	edx, DWORD PTR _buf$[ebp+16]
	push	edx
	call	_safefree
	add	esp, 4
; Line 5580
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN63@clipme
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 180				; 000000b4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN63@clipme:
	DD	5
	DD	$LN62@clipme
$LN62@clipme:
	DD	-32					; ffffffe0H
	DD	24					; 00000018H
	DD	$LN57@clipme
	DD	-64					; ffffffc0H
	DD	8
	DD	$LN58@clipme
	DD	-104					; ffffff98H
	DD	32					; 00000020H
	DD	$LN59@clipme
	DD	-132					; ffffff7cH
	DD	4
	DD	$LN60@clipme
	DD	-148					; ffffff6cH
	DD	8
	DD	$LN61@clipme
$LN61@clipme:
	DB	119					; 00000077H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN60@clipme:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN59@clipme:
	DB	99					; 00000063H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN58@clipme:
	DB	110					; 0000006eH
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN57@clipme:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_clipme	ENDP
; Function compile flags: /Odtp /RTCsu
_b$ = 8						; size = 4
_chr$ = 12						; size = 2
_attr$ = 16						; size = 4
_clip_addchar PROC
; Line 5406
	push	ebp
	mov	ebp, esp
; Line 5407
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx]
	jl	SHORT $LN1@clip_addch
; Line 5408
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 128				; 00000080H
	mov	edx, DWORD PTR _b$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 5409
	push	2
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 5410
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 5411
	push	4
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 5412
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	lea	eax, DWORD PTR [edx+eax*4]
	mov	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR [ecx+20], eax
$LN1@clip_addch:
; Line 5414
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	cx, WORD PTR _chr$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx+12]
	add	eax, 2
	mov	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 5415
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _attr$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx+20]
	add	eax, 4
	mov	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 5416
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 5417
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_clip_addchar ENDP
_TEXT	ENDS
PUBLIC	_term_do_paste
EXTRN	_queue_toplevel_callback:PROC
EXTRN	_luni_send:PROC
EXTRN	_get_clip:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$88363 = -36						; size = 4
_q$88348 = -32						; size = 4
_p$88347 = -28						; size = 4
_len$ = -20						; size = 4
_data$ = -8						; size = 4
_term$ = 8						; size = 4
_term_do_paste PROC
; Line 5851
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 5855
	lea	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4232]
	push	eax
	call	_get_clip
	add	esp, 12					; 0000000cH
; Line 5856
	cmp	DWORD PTR _data$[ebp], 0
	je	$LN16@term_do_pa
	cmp	DWORD PTR _len$[ebp], 0
	jle	$LN16@term_do_pa
; Line 5859
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_seen_key_event
	add	esp, 4
; Line 5861
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4208], 0
	je	SHORT $LN15@term_do_pa
; Line 5862
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4208]
	push	ecx
	call	_safefree
	add	esp, 4
$LN15@term_do_pa:
; Line 5863
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4212], 0
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+4216], 0
; Line 5864
	push	2
	mov	ecx, DWORD PTR _len$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	_safemalloc
	add	esp, 8
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4208], eax
; Line 5866
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+364], 0
	je	SHORT $LN14@term_do_pa
; Line 5867
	push	12					; 0000000cH
	push	OFFSET $SG88354
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4208]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 5868
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4212]
	add	ecx, 6
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4212], ecx
$LN14@term_do_pa:
; Line 5871
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _q$88348[ebp], eax
	mov	ecx, DWORD PTR _q$88348[ebp]
	mov	DWORD PTR _p$88347[ebp], ecx
$LN13@term_do_pa:
; Line 5872
	mov	edx, DWORD PTR _len$[ebp]
	mov	eax, DWORD PTR _data$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	cmp	DWORD PTR _p$88347[ebp], ecx
	jae	$LN12@term_do_pa
$LN11@term_do_pa:
; Line 5875
	mov	edx, DWORD PTR _len$[ebp]
	mov	eax, DWORD PTR _data$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	cmp	DWORD PTR _p$88347[ebp], ecx
	jae	SHORT $LN10@term_do_pa
	mov	edx, DWORD PTR _len$[ebp]
	mov	eax, DWORD PTR _data$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2-4]
	cmp	DWORD PTR _p$88347[ebp], ecx
	ja	SHORT $LN9@term_do_pa
	push	4
	push	OFFSET _sel_nl
	mov	edx, DWORD PTR _p$88347[ebp]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN10@term_do_pa
$LN9@term_do_pa:
; Line 5876
	mov	eax, DWORD PTR _p$88347[ebp]
	add	eax, 2
	mov	DWORD PTR _p$88347[ebp], eax
	jmp	SHORT $LN11@term_do_pa
$LN10@term_do_pa:
; Line 5880
	mov	DWORD PTR _i$88363[ebp], 0
	jmp	SHORT $LN8@term_do_pa
$LN7@term_do_pa:
	mov	ecx, DWORD PTR _i$88363[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$88363[ebp], ecx
$LN8@term_do_pa:
	mov	edx, DWORD PTR _p$88347[ebp]
	sub	edx, DWORD PTR _q$88348[ebp]
	sar	edx, 1
	cmp	DWORD PTR _i$88363[ebp], edx
	jge	SHORT $LN6@term_do_pa
; Line 5881
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4212]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4208]
	mov	edx, DWORD PTR _i$88363[ebp]
	mov	esi, DWORD PTR _q$88348[ebp]
	mov	dx, WORD PTR [esi+edx*2]
	mov	WORD PTR [eax+ecx*2], dx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4212]
	add	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4212], ecx
; Line 5882
	jmp	SHORT $LN7@term_do_pa
$LN6@term_do_pa:
; Line 5886
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _data$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2-4]
	cmp	DWORD PTR _p$88347[ebp], edx
	ja	SHORT $LN5@term_do_pa
	push	4
	push	OFFSET _sel_nl
	mov	eax, DWORD PTR _p$88347[ebp]
	push	eax
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN5@term_do_pa
; Line 5887
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4212]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4208]
	mov	eax, 13					; 0000000dH
	mov	WORD PTR [ecx+edx*2], ax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4212]
	add	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+4212], edx
; Line 5888
	mov	ecx, DWORD PTR _p$88347[ebp]
	add	ecx, 4
	mov	DWORD PTR _p$88347[ebp], ecx
$LN5@term_do_pa:
; Line 5890
	mov	edx, DWORD PTR _p$88347[ebp]
	mov	DWORD PTR _q$88348[ebp], edx
; Line 5891
	jmp	$LN13@term_do_pa
$LN12@term_do_pa:
; Line 5893
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+364], 0
	je	SHORT $LN4@term_do_pa
; Line 5895
	push	12					; 0000000cH
	push	OFFSET $SG88372
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4212]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4208]
	lea	edx, DWORD PTR [ecx+edx*2]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 5896
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4212]
	add	ecx, 6
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4212], ecx
$LN4@term_do_pa:
; Line 5900
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4212], 256		; 00000100H
	jge	SHORT $LN16@term_do_pa
; Line 5901
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4228], 0
	je	SHORT $LN2@term_do_pa
; Line 5902
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4212]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4208]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4228]
	push	ecx
	call	_luni_send
	add	esp, 16					; 00000010H
$LN2@term_do_pa:
; Line 5903
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4208], 0
	je	SHORT $LN1@term_do_pa
; Line 5904
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4208]
	push	ecx
	call	_safefree
	add	esp, 4
$LN1@term_do_pa:
; Line 5905
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4208], 0
; Line 5906
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+4212], 0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+4216], 0
$LN16@term_do_pa:
; Line 5909
	push	0
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4232]
	push	eax
	call	_get_clip
	add	esp, 12					; 0000000cH
; Line 5911
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	push	OFFSET _term_paste_callback
	call	_queue_toplevel_callback
	add	esp, 8
; Line 5912
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@term_do_pa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN22@term_do_pa:
	DD	2
	DD	$LN21@term_do_pa
$LN21@term_do_pa:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN19@term_do_pa
	DD	-20					; ffffffecH
	DD	4
	DD	$LN20@term_do_pa
$LN20@term_do_pa:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN19@term_do_pa:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_term_do_paste ENDP
; Function compile flags: /Odtp /RTCsu
tv81 = -12						; size = 4
_n$88333 = -8						; size = 4
_term$ = -4						; size = 4
_vterm$ = 8						; size = 4
_term_paste_callback PROC
; Line 5824
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 5825
	mov	eax, DWORD PTR _vterm$[ebp]
	mov	DWORD PTR _term$[ebp], eax
; Line 5827
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4212], 0
	jne	SHORT $LN7@term_paste
; Line 5828
	jmp	$LN9@term_paste
$LN7@term_paste:
; Line 5830
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [edx+4216]
	cmp	ecx, DWORD PTR [eax+4212]
	jge	$LN6@term_paste
; Line 5831
	mov	DWORD PTR _n$88333[ebp], 0
$LN5@term_paste:
; Line 5832
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _n$88333[ebp]
	add	eax, DWORD PTR [edx+4216]
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	eax, DWORD PTR [ecx+4212]
	jge	SHORT $LN4@term_paste
; Line 5833
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4216]
	add	eax, DWORD PTR _n$88333[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4208]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _n$88333[ebp]
	add	ecx, 1
	mov	DWORD PTR _n$88333[ebp], ecx
	cmp	eax, 13					; 0000000dH
	jne	SHORT $LN11@term_paste
	mov	DWORD PTR tv81[ebp], 1
	jmp	SHORT $LN12@term_paste
$LN11@term_paste:
	mov	DWORD PTR tv81[ebp], 0
$LN12@term_paste:
	cmp	DWORD PTR tv81[ebp], 0
	je	SHORT $LN3@term_paste
; Line 5834
	jmp	SHORT $LN4@term_paste
$LN3@term_paste:
; Line 5835
	jmp	SHORT $LN5@term_paste
$LN4@term_paste:
; Line 5836
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4228], 0
	je	SHORT $LN2@term_paste
; Line 5837
	push	0
	mov	eax, DWORD PTR _n$88333[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4216]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4208]
	lea	edx, DWORD PTR [ecx+edx*2]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4228]
	push	ecx
	call	_luni_send
	add	esp, 16					; 00000010H
$LN2@term_paste:
; Line 5838
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4216]
	add	eax, DWORD PTR _n$88333[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+4216], eax
; Line 5840
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [edx+4216]
	cmp	ecx, DWORD PTR [eax+4212]
	jge	SHORT $LN1@term_paste
; Line 5841
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	push	OFFSET _term_paste_callback
	call	_queue_toplevel_callback
	add	esp, 8
; Line 5842
	jmp	SHORT $LN9@term_paste
$LN1@term_paste:
; Line 5844
	jmp	$LN7@term_paste
$LN6@term_paste:
; Line 5845
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4208]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 5846
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4208], 0
; Line 5847
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+4212], 0
$LN9@term_paste:
; Line 5848
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_term_paste_callback ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_term_mouse
EXTRN	_request_paste:PROC
EXTRN	_sprintf:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv405 = -136						; size = 4
tv400 = -132						; size = 4
tv394 = -128						; size = 4
tv389 = -124						; size = 4
tv384 = -120						; size = 4
tv367 = -116						; size = 4
tv313 = -112						; size = 4
tv260 = -108						; size = 4
tv163 = -104						; size = 4
tv158 = -100						; size = 4
tv71 = -96						; size = 4
_len$88418 = -92					; size = 4
_abuf$88417 = -84					; size = 32
_wheel$88416 = -48					; size = 4
_c$88415 = -44						; size = 4
_r$88414 = -40						; size = 4
_encstate$88413 = -36					; size = 4
_default_seltype$ = -32					; size = 4
_raw_mouse$ = -28					; size = 4
_ldata$ = -24						; size = 4
_selpoint$ = -16					; size = 8
__$ArrayPad$ = -4					; size = 4
_term$ = 8						; size = 4
_braw$ = 12						; size = 4
_bcooked$ = 16						; size = 4
_a$ = 20						; size = 4
_x$ = 24						; size = 4
_y$ = 28						; size = 4
_shift$ = 32						; size = 4
_ctrl$ = 36						; size = 4
_alt$ = 40						; size = 4
_term_mouse PROC
; Line 5916
	push	ebp
	mov	ebp, esp
	sub	esp, 136				; 00000088H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-136]
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 5921
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+348], 0
	je	SHORT $LN78@term_mouse
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4420], 0
	jne	SHORT $LN78@term_mouse
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4396], 0
	je	SHORT $LN79@term_mouse
	cmp	DWORD PTR _shift$[ebp], 0
	jne	SHORT $LN78@term_mouse
$LN79@term_mouse:
	mov	DWORD PTR tv71[ebp], 1
	jmp	SHORT $LN80@term_mouse
$LN78@term_mouse:
	mov	DWORD PTR tv71[ebp], 0
$LN80@term_mouse:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR _raw_mouse$[ebp], eax
; Line 5924
	cmp	DWORD PTR _y$[ebp], 0
	jge	SHORT $LN75@term_mouse
; Line 5925
	mov	DWORD PTR _y$[ebp], 0
; Line 5926
	cmp	DWORD PTR _a$[ebp], 4
	jne	SHORT $LN75@term_mouse
	cmp	DWORD PTR _raw_mouse$[ebp], 0
	jne	SHORT $LN75@term_mouse
; Line 5927
	push	-1
	push	0
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_scroll
	add	esp, 12					; 0000000cH
$LN75@term_mouse:
; Line 5929
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR [edx+296]
	jl	SHORT $LN73@term_mouse
; Line 5930
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+296]
	sub	edx, 1
	mov	DWORD PTR _y$[ebp], edx
; Line 5931
	cmp	DWORD PTR _a$[ebp], 4
	jne	SHORT $LN73@term_mouse
	cmp	DWORD PTR _raw_mouse$[ebp], 0
	jne	SHORT $LN73@term_mouse
; Line 5932
	push	1
	push	0
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_term_scroll
	add	esp, 12					; 0000000cH
$LN73@term_mouse:
; Line 5934
	cmp	DWORD PTR _x$[ebp], 0
	jge	SHORT $LN71@term_mouse
; Line 5935
	cmp	DWORD PTR _y$[ebp], 0
	jle	SHORT $LN70@term_mouse
; Line 5936
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+300]
	sub	edx, 1
	mov	DWORD PTR _x$[ebp], edx
; Line 5937
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, 1
	mov	DWORD PTR _y$[ebp], eax
; Line 5938
	jmp	SHORT $LN71@term_mouse
$LN70@term_mouse:
; Line 5939
	mov	DWORD PTR _x$[ebp], 0
$LN71@term_mouse:
; Line 5941
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _x$[ebp]
	cmp	edx, DWORD PTR [ecx+300]
	jl	SHORT $LN68@term_mouse
; Line 5942
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	sub	ecx, 1
	mov	DWORD PTR _x$[ebp], ecx
$LN68@term_mouse:
; Line 5944
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _selpoint$[ebp], eax
; Line 5945
	push	0
	push	5945					; 00001739H
	mov	ecx, DWORD PTR _selpoint$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_lineptr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ldata$[ebp], eax
; Line 5947
	mov	eax, DWORD PTR _ldata$[ebp]
	movzx	ecx, WORD PTR [eax]
	and	ecx, 3
	je	SHORT $LN67@term_mouse
; Line 5948
	mov	eax, DWORD PTR _x$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _x$[ebp], eax
$LN67@term_mouse:
; Line 5954
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _ldata$[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_bidi_line
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN66@term_mouse
; Line 5955
	mov	edx, DWORD PTR _y$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4300]
	mov	edx, DWORD PTR [ecx+edx+12]
	mov	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _x$[ebp], ecx
$LN66@term_mouse:
; Line 5958
	mov	edx, DWORD PTR _x$[ebp]
	mov	DWORD PTR _selpoint$[ebp+4], edx
; Line 5959
	mov	eax, DWORD PTR _ldata$[ebp]
	push	eax
	call	_unlineptr
	add	esp, 4
; Line 5970
	cmp	DWORD PTR _raw_mouse$[ebp], 0
	je	$LN65@term_mouse
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+3656], 1
	je	$LN65@term_mouse
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+3656], 2
	je	$LN65@term_mouse
; Line 5971
	mov	DWORD PTR _encstate$88413[ebp], 0
; Line 5973
	mov	DWORD PTR _len$88418[ebp], 0
; Line 5975
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4228], 0
	je	$LN64@term_mouse
; Line 5977
	mov	ecx, DWORD PTR _braw$[ebp]
	mov	DWORD PTR tv158[ebp], ecx
	mov	edx, DWORD PTR tv158[ebp]
	sub	edx, 1
	mov	DWORD PTR tv158[ebp], edx
	cmp	DWORD PTR tv158[ebp], 7
	ja	SHORT $LN56@term_mouse
	mov	eax, DWORD PTR tv158[ebp]
	jmp	DWORD PTR $LN101@term_mouse[eax*4]
$LN61@term_mouse:
; Line 5979
	mov	DWORD PTR _encstate$88413[ebp], 0
; Line 5980
	mov	DWORD PTR _wheel$88416[ebp], 0
; Line 5981
	jmp	SHORT $LN62@term_mouse
$LN60@term_mouse:
; Line 5983
	mov	DWORD PTR _encstate$88413[ebp], 1
; Line 5984
	mov	DWORD PTR _wheel$88416[ebp], 0
; Line 5985
	jmp	SHORT $LN62@term_mouse
$LN59@term_mouse:
; Line 5987
	mov	DWORD PTR _encstate$88413[ebp], 2
; Line 5988
	mov	DWORD PTR _wheel$88416[ebp], 0
; Line 5989
	jmp	SHORT $LN62@term_mouse
$LN58@term_mouse:
; Line 5991
	mov	DWORD PTR _encstate$88413[ebp], 64	; 00000040H
; Line 5992
	mov	DWORD PTR _wheel$88416[ebp], 1
; Line 5993
	jmp	SHORT $LN62@term_mouse
$LN57@term_mouse:
; Line 5995
	mov	DWORD PTR _encstate$88413[ebp], 65	; 00000041H
; Line 5996
	mov	DWORD PTR _wheel$88416[ebp], 1
; Line 5997
	jmp	SHORT $LN62@term_mouse
$LN56@term_mouse:
; Line 5999
	jmp	$LN76@term_mouse
$LN62@term_mouse:
; Line 6001
	cmp	DWORD PTR _wheel$88416[ebp], 0
	je	SHORT $LN55@term_mouse
; Line 6006
	cmp	DWORD PTR _a$[ebp], 1
	je	SHORT $LN54@term_mouse
; Line 6007
	jmp	$LN76@term_mouse
$LN54@term_mouse:
; Line 6008
	jmp	SHORT $LN53@term_mouse
$LN55@term_mouse:
	mov	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR tv163[ebp], ecx
	cmp	DWORD PTR tv163[ebp], 1
	je	SHORT $LN46@term_mouse
	cmp	DWORD PTR tv163[ebp], 4
	je	SHORT $LN50@term_mouse
	cmp	DWORD PTR tv163[ebp], 5
	je	SHORT $LN48@term_mouse
	jmp	SHORT $LN44@term_mouse
$LN50@term_mouse:
; Line 6010
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+348], 1
	jne	SHORT $LN49@term_mouse
; Line 6011
	jmp	$LN76@term_mouse
$LN49@term_mouse:
; Line 6012
	mov	eax, DWORD PTR _encstate$88413[ebp]
	add	eax, 32					; 00000020H
	mov	DWORD PTR _encstate$88413[ebp], eax
; Line 6013
	jmp	SHORT $LN53@term_mouse
$LN48@term_mouse:
; Line 6016
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+352], 0
	jne	SHORT $LN47@term_mouse
; Line 6017
	mov	DWORD PTR _encstate$88413[ebp], 3
$LN47@term_mouse:
; Line 6018
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+360], 0
; Line 6019
	jmp	SHORT $LN53@term_mouse
$LN46@term_mouse:
; Line 6021
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	cmp	ecx, DWORD PTR _braw$[ebp]
	jne	SHORT $LN45@term_mouse
; Line 6022
	jmp	$LN76@term_mouse
$LN45@term_mouse:
; Line 6023
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _braw$[ebp]
	mov	DWORD PTR [edx+360], eax
; Line 6024
	jmp	SHORT $LN53@term_mouse
$LN44@term_mouse:
; Line 6026
	jmp	$LN76@term_mouse
$LN53@term_mouse:
; Line 6028
	cmp	DWORD PTR _shift$[ebp], 0
	je	SHORT $LN43@term_mouse
; Line 6029
	mov	ecx, DWORD PTR _encstate$88413[ebp]
	add	ecx, 4
	mov	DWORD PTR _encstate$88413[ebp], ecx
$LN43@term_mouse:
; Line 6030
	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN42@term_mouse
; Line 6031
	mov	edx, DWORD PTR _encstate$88413[ebp]
	add	edx, 16					; 00000010H
	mov	DWORD PTR _encstate$88413[ebp], edx
$LN42@term_mouse:
; Line 6032
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, 1
	mov	DWORD PTR _r$88414[ebp], eax
; Line 6033
	mov	ecx, DWORD PTR _x$[ebp]
	add	ecx, 1
	mov	DWORD PTR _c$88415[ebp], ecx
; Line 6036
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+352], 0
	je	SHORT $LN41@term_mouse
; Line 6037
	mov	eax, DWORD PTR _a$[ebp]
	sub	eax, 5
	neg	eax
	sbb	eax, eax
	and	eax, -32				; ffffffe0H
	add	eax, 109				; 0000006dH
	push	eax
	mov	ecx, DWORD PTR _r$88414[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$88415[ebp]
	push	edx
	mov	eax, DWORD PTR _encstate$88413[ebp]
	push	eax
	push	OFFSET $SG88447
	lea	ecx, DWORD PTR _abuf$88417[ebp]
	push	ecx
	call	_sprintf
	add	esp, 24					; 00000018H
	mov	DWORD PTR _len$88418[ebp], eax
	jmp	SHORT $LN40@term_mouse
$LN41@term_mouse:
; Line 6038
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+356], 0
	je	SHORT $LN39@term_mouse
; Line 6039
	mov	eax, DWORD PTR _r$88414[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$88415[ebp]
	push	ecx
	mov	edx, DWORD PTR _encstate$88413[ebp]
	add	edx, 32					; 00000020H
	push	edx
	push	OFFSET $SG88450
	lea	eax, DWORD PTR _abuf$88417[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H
	mov	DWORD PTR _len$88418[ebp], eax
	jmp	SHORT $LN40@term_mouse
$LN39@term_mouse:
; Line 6040
	cmp	DWORD PTR _c$88415[ebp], 223		; 000000dfH
	jg	SHORT $LN40@term_mouse
	cmp	DWORD PTR _r$88414[ebp], 223		; 000000dfH
	jg	SHORT $LN40@term_mouse
; Line 6041
	mov	ecx, DWORD PTR _r$88414[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	mov	edx, DWORD PTR _c$88415[ebp]
	add	edx, 32					; 00000020H
	push	edx
	mov	eax, DWORD PTR _encstate$88413[ebp]
	add	eax, 32					; 00000020H
	push	eax
	push	OFFSET $SG88453
	lea	ecx, DWORD PTR _abuf$88417[ebp]
	push	ecx
	call	_sprintf
	add	esp, 20					; 00000014H
	mov	DWORD PTR _len$88418[ebp], eax
$LN40@term_mouse:
; Line 6043
	push	0
	mov	edx, DWORD PTR _len$88418[ebp]
	push	edx
	lea	eax, DWORD PTR _abuf$88417[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4228]
	push	edx
	call	_ldisc_send
	add	esp, 16					; 00000010H
$LN64@term_mouse:
; Line 6045
	jmp	$LN76@term_mouse
$LN65@term_mouse:
; Line 6052
	xor	eax, eax
	cmp	DWORD PTR _alt$[ebp], 0
	sete	al
	mov	ecx, DWORD PTR _term$[ebp]
	xor	edx, edx
	cmp	DWORD PTR [ecx+4440], 0
	sete	dl
	xor	eax, edx
	je	SHORT $LN36@term_mouse
; Line 6053
	mov	DWORD PTR _default_seltype$[ebp], 1
; Line 6054
	jmp	SHORT $LN35@term_mouse
$LN36@term_mouse:
; Line 6055
	mov	DWORD PTR _default_seltype$[ebp], 0
$LN35@term_mouse:
; Line 6057
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+3656], 0
	jne	SHORT $LN34@term_mouse
; Line 6058
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _default_seltype$[ebp]
	mov	DWORD PTR [ecx+3660], edx
$LN34@term_mouse:
; Line 6061
	cmp	DWORD PTR _bcooked$[ebp], 4
	jne	SHORT $LN33@term_mouse
	cmp	DWORD PTR _a$[ebp], 1
	jne	SHORT $LN33@term_mouse
; Line 6062
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_deselect
	add	esp, 4
; Line 6063
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3656], 1
; Line 6064
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _default_seltype$[ebp]
	mov	DWORD PTR [edx+3660], eax
; Line 6065
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _selpoint$[ebp]
	mov	DWORD PTR [ecx+3684], edx
	mov	eax, DWORD PTR _selpoint$[ebp+4]
	mov	DWORD PTR [ecx+3688], eax
; Line 6066
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3664], 0
	jmp	$LN32@term_mouse
$LN33@term_mouse:
; Line 6067
	cmp	DWORD PTR _bcooked$[ebp], 4
	jne	$LN31@term_mouse
	cmp	DWORD PTR _a$[ebp], 2
	je	SHORT $LN30@term_mouse
	cmp	DWORD PTR _a$[ebp], 3
	jne	$LN31@term_mouse
$LN30@term_mouse:
; Line 6068
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_deselect
	add	esp, 4
; Line 6069
	xor	eax, eax
	cmp	DWORD PTR _a$[ebp], 2
	setne	al
	add	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3664], eax
; Line 6070
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3656], 2
; Line 6071
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _selpoint$[ebp]
	mov	DWORD PTR [eax+3684], ecx
	mov	edx, DWORD PTR _selpoint$[ebp+4]
	mov	DWORD PTR [eax+3688], edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _selpoint$[ebp]
	mov	DWORD PTR [eax+3668], ecx
	mov	edx, DWORD PTR _selpoint$[ebp+4]
	mov	DWORD PTR [eax+3672], edx
; Line 6072
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3668]
	mov	edx, DWORD PTR [eax+3672]
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3676], ecx
	mov	DWORD PTR [eax+3680], edx
; Line 6073
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [ecx+3680]
	cmp	eax, DWORD PTR [edx+300]
	jne	SHORT $LN81@term_mouse
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3680], 0
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3676]
	add	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3676], eax
	mov	DWORD PTR tv260[ebp], 1
	jmp	SHORT $LN82@term_mouse
$LN81@term_mouse:
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3680]
	add	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3680], eax
	mov	DWORD PTR tv260[ebp], 0
$LN82@term_mouse:
; Line 6074
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_sel_spread
	add	esp, 4
; Line 6075
	jmp	$LN32@term_mouse
$LN31@term_mouse:
; Line 6076
	cmp	DWORD PTR _bcooked$[ebp], 4
	jne	SHORT $LN26@term_mouse
	cmp	DWORD PTR _a$[ebp], 4
	je	SHORT $LN27@term_mouse
$LN26@term_mouse:
	cmp	DWORD PTR _bcooked$[ebp], 5
	jne	$LN28@term_mouse
	cmp	DWORD PTR _a$[ebp], 5
	je	$LN28@term_mouse
$LN27@term_mouse:
; Line 6077
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+3656], 1
	jne	SHORT $LN25@term_mouse
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3684]
	cmp	edx, DWORD PTR _selpoint$[ebp]
	jne	SHORT $LN25@term_mouse
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3688]
	cmp	ecx, DWORD PTR _selpoint$[ebp+4]
	jne	SHORT $LN25@term_mouse
; Line 6078
	jmp	$LN76@term_mouse
$LN25@term_mouse:
; Line 6080
	cmp	DWORD PTR _bcooked$[ebp], 5
	jne	$LN24@term_mouse
	cmp	DWORD PTR _a$[ebp], 4
	je	$LN24@term_mouse
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+3656], 3
	jne	$LN24@term_mouse
; Line 6081
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+3660], 0
	jne	$LN23@term_mouse
; Line 6088
	mov	ecx, DWORD PTR _term$[ebp]
	mov	esi, DWORD PTR _selpoint$[ebp]
	sub	esi, DWORD PTR [ecx+3668]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+300]
	add	eax, 1
	imul	esi, eax
	add	esi, DWORD PTR _selpoint$[ebp+4]
	mov	ecx, DWORD PTR _term$[ebp]
	sub	esi, DWORD PTR [ecx+3672]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [edx+3676]
	sub	ecx, DWORD PTR [eax+3668]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+300]
	add	eax, 1
	imul	ecx, eax
	mov	edx, DWORD PTR _term$[ebp]
	add	ecx, DWORD PTR [edx+3680]
	mov	eax, DWORD PTR _term$[ebp]
	sub	ecx, DWORD PTR [eax+3672]
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	cmp	esi, eax
	jge	SHORT $LN22@term_mouse
; Line 6089
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3676]
	mov	eax, DWORD PTR [ecx+3680]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3684], edx
	mov	DWORD PTR [ecx+3688], eax
; Line 6090
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+3688], 0
	jne	SHORT $LN83@term_mouse
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+300]
	mov	DWORD PTR [eax+3688], edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3684]
	sub	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3684], ecx
	mov	DWORD PTR tv313[ebp], 1
	jmp	SHORT $LN84@term_mouse
$LN83@term_mouse:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3688]
	sub	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3688], ecx
	mov	DWORD PTR tv313[ebp], 0
$LN84@term_mouse:
; Line 6091
	jmp	SHORT $LN21@term_mouse
$LN22@term_mouse:
; Line 6092
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3668]
	mov	edx, DWORD PTR [eax+3672]
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3684], ecx
	mov	DWORD PTR [eax+3688], edx
$LN21@term_mouse:
; Line 6094
	jmp	$LN20@term_mouse
$LN23@term_mouse:
; Line 6100
	mov	ecx, DWORD PTR _selpoint$[ebp+4]
	shl	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3672]
	mov	edx, DWORD PTR _term$[ebp]
	add	eax, DWORD PTR [edx+3680]
	cmp	ecx, eax
	jge	SHORT $LN19@term_mouse
; Line 6101
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3680]
	sub	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3688], ecx
; Line 6102
	jmp	SHORT $LN18@term_mouse
$LN19@term_mouse:
; Line 6103
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3672]
	mov	DWORD PTR [eax+3688], edx
$LN18@term_mouse:
; Line 6105
	mov	eax, DWORD PTR _selpoint$[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3668]
	mov	ecx, DWORD PTR _term$[ebp]
	add	edx, DWORD PTR [ecx+3676]
	cmp	eax, edx
	jge	SHORT $LN17@term_mouse
; Line 6106
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3676]
	mov	DWORD PTR [edx+3684], ecx
; Line 6107
	jmp	SHORT $LN20@term_mouse
$LN17@term_mouse:
; Line 6108
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3668]
	mov	DWORD PTR [edx+3684], ecx
$LN20@term_mouse:
; Line 6110
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3656], 2
$LN24@term_mouse:
; Line 6112
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+3656], 1
	je	SHORT $LN15@term_mouse
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+3656], 2
	je	SHORT $LN15@term_mouse
; Line 6113
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _selpoint$[ebp]
	mov	DWORD PTR [edx+3684], eax
	mov	ecx, DWORD PTR _selpoint$[ebp+4]
	mov	DWORD PTR [edx+3688], ecx
$LN15@term_mouse:
; Line 6114
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3656], 2
; Line 6115
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+3660], 0
	jne	$LN14@term_mouse
; Line 6120
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _selpoint$[ebp]
	cmp	edx, DWORD PTR [ecx+3684]
	jl	SHORT $LN12@term_mouse
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _selpoint$[ebp]
	cmp	ecx, DWORD PTR [eax+3684]
	jne	$LN13@term_mouse
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _selpoint$[ebp+4]
	cmp	eax, DWORD PTR [edx+3688]
	jge	$LN13@term_mouse
$LN12@term_mouse:
; Line 6121
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _selpoint$[ebp]
	mov	DWORD PTR [ecx+3668], edx
	mov	eax, DWORD PTR _selpoint$[ebp+4]
	mov	DWORD PTR [ecx+3672], eax
; Line 6122
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3684]
	mov	eax, DWORD PTR [ecx+3688]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3676], edx
	mov	DWORD PTR [ecx+3680], eax
; Line 6123
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [edx+3680]
	cmp	ecx, DWORD PTR [eax+300]
	jne	SHORT $LN85@term_mouse
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3680], 0
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3676]
	add	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3676], ecx
	mov	DWORD PTR tv367[ebp], 1
	jmp	SHORT $LN86@term_mouse
$LN85@term_mouse:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3680]
	add	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3680], ecx
	mov	DWORD PTR tv367[ebp], 0
$LN86@term_mouse:
; Line 6124
	jmp	$LN11@term_mouse
$LN13@term_mouse:
; Line 6125
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3684]
	mov	edx, DWORD PTR [eax+3688]
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3668], ecx
	mov	DWORD PTR [eax+3672], edx
; Line 6126
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _selpoint$[ebp]
	mov	DWORD PTR [ecx+3676], edx
	mov	eax, DWORD PTR _selpoint$[ebp+4]
	mov	DWORD PTR [ecx+3680], eax
; Line 6127
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [ecx+3680]
	cmp	eax, DWORD PTR [edx+300]
	jne	SHORT $LN87@term_mouse
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3680], 0
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3676]
	add	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3676], eax
	mov	DWORD PTR tv384[ebp], 1
	jmp	SHORT $LN11@term_mouse
$LN87@term_mouse:
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3680]
	add	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3680], eax
	mov	DWORD PTR tv384[ebp], 0
$LN11@term_mouse:
; Line 6129
	jmp	$LN10@term_mouse
$LN14@term_mouse:
; Line 6135
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3688]
	cmp	eax, DWORD PTR _selpoint$[ebp+4]
	jge	SHORT $LN89@term_mouse
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3688]
	mov	DWORD PTR tv389[ebp], edx
	jmp	SHORT $LN90@term_mouse
$LN89@term_mouse:
	mov	eax, DWORD PTR _selpoint$[ebp+4]
	mov	DWORD PTR tv389[ebp], eax
$LN90@term_mouse:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR tv389[ebp]
	mov	DWORD PTR [ecx+3672], edx
; Line 6136
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3688]
	cmp	ecx, DWORD PTR _selpoint$[ebp+4]
	jle	SHORT $LN91@term_mouse
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3688]
	mov	DWORD PTR tv394[ebp], eax
	jmp	SHORT $LN92@term_mouse
$LN91@term_mouse:
	mov	ecx, DWORD PTR _selpoint$[ebp+4]
	mov	DWORD PTR tv394[ebp], ecx
$LN92@term_mouse:
	mov	edx, DWORD PTR tv394[ebp]
	add	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3680], edx
; Line 6137
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3684]
	cmp	edx, DWORD PTR _selpoint$[ebp]
	jge	SHORT $LN93@term_mouse
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3684]
	mov	DWORD PTR tv400[ebp], ecx
	jmp	SHORT $LN94@term_mouse
$LN93@term_mouse:
	mov	edx, DWORD PTR _selpoint$[ebp]
	mov	DWORD PTR tv400[ebp], edx
$LN94@term_mouse:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR tv400[ebp]
	mov	DWORD PTR [eax+3668], ecx
; Line 6138
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3684]
	cmp	eax, DWORD PTR _selpoint$[ebp]
	jle	SHORT $LN95@term_mouse
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3684]
	mov	DWORD PTR tv405[ebp], edx
	jmp	SHORT $LN96@term_mouse
$LN95@term_mouse:
	mov	eax, DWORD PTR _selpoint$[ebp]
	mov	DWORD PTR tv405[ebp], eax
$LN96@term_mouse:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR tv405[ebp]
	mov	DWORD PTR [ecx+3676], edx
$LN10@term_mouse:
; Line 6140
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_sel_spread
	add	esp, 4
; Line 6141
	jmp	$LN32@term_mouse
$LN28@term_mouse:
; Line 6142
	cmp	DWORD PTR _bcooked$[ebp], 4
	je	SHORT $LN7@term_mouse
	cmp	DWORD PTR _bcooked$[ebp], 5
	jne	SHORT $LN8@term_mouse
$LN7@term_mouse:
	cmp	DWORD PTR _a$[ebp], 5
	jne	SHORT $LN8@term_mouse
; Line 6143
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+3656], 2
	jne	SHORT $LN6@term_mouse
; Line 6149
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	xor	eax, eax
	cmp	DWORD PTR [edx+3660], 1
	sete	al
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3680]
	push	edx
	mov	eax, DWORD PTR [ecx+3676]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3672]
	push	edx
	mov	eax, DWORD PTR [ecx+3668]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_clipme
	add	esp, 28					; 0000001cH
; Line 6150
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3656], 3
; Line 6151
	jmp	SHORT $LN5@term_mouse
$LN6@term_mouse:
; Line 6152
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3656], 0
$LN5@term_mouse:
; Line 6153
	jmp	SHORT $LN32@term_mouse
$LN8@term_mouse:
; Line 6158
	cmp	DWORD PTR _bcooked$[ebp], 6
	jne	SHORT $LN32@term_mouse
	cmp	DWORD PTR _a$[ebp], 1
	je	SHORT $LN2@term_mouse
	cmp	DWORD PTR _a$[ebp], 2
	je	SHORT $LN2@term_mouse
	cmp	DWORD PTR _a$[ebp], 3
	jne	SHORT $LN32@term_mouse
$LN2@term_mouse:
; Line 6159
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4232]
	push	edx
	call	_request_paste
	add	esp, 4
$LN32@term_mouse:
; Line 6167
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+3656], 2
	je	SHORT $LN1@term_mouse
; Line 6168
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_out
	add	esp, 4
$LN1@term_mouse:
; Line 6169
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_term_update
	add	esp, 4
$LN76@term_mouse:
; Line 6170
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN100@term_mouse
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 136				; 00000088H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN100@term_mouse:
	DD	2
	DD	$LN99@term_mouse
$LN99@term_mouse:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN97@term_mouse
	DD	-84					; ffffffacH
	DD	32					; 00000020H
	DD	$LN98@term_mouse
$LN98@term_mouse:
	DB	97					; 00000061H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN97@term_mouse:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
	npad	2
$LN101@term_mouse:
	DD	$LN61@term_mouse
	DD	$LN60@term_mouse
	DD	$LN59@term_mouse
	DD	$LN56@term_mouse
	DD	$LN56@term_mouse
	DD	$LN56@term_mouse
	DD	$LN58@term_mouse
	DD	$LN57@term_mouse
_term_mouse ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_logflush:PROC
EXTRN	_palette_set:PROC
EXTRN	_palette_reset:PROC
EXTRN	_strcat:PROC
EXTRN	_get_window_title:PROC
EXTRN	_get_window_pixels:PROC
EXTRN	_get_window_pos:PROC
EXTRN	_is_iconic:PROC
EXTRN	_set_zoomed:PROC
EXTRN	_refresh_window:PROC
EXTRN	_set_zorder:PROC
EXTRN	_move_window:PROC
EXTRN	_set_iconic:PROC
EXTRN	_isdigit:PROC
EXTRN	_request_resize:PROC
EXTRN	_mk_wcwidth:PROC
EXTRN	_mk_wcwidth_cjk:PROC
EXTRN	_do_beep:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	_lpage_send:PROC
EXTRN	_bufchain_add:PROC
EXTRN	_logtraffic:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv2810 = -1048						; size = 4
tv2601 = -1044						; size = 4
tv2587 = -1040						; size = 4
tv2483 = -1036						; size = 4
tv2393 = -1032						; size = 4
tv2275 = -1028						; size = 4
tv2248 = -1024						; size = 4
tv2225 = -1020						; size = 4
tv2211 = -1016						; size = 4
tv2206 = -1012						; size = 4
tv2172 = -1008						; size = 4
tv2159 = -1004						; size = 4
tv2137 = -1000						; size = 4
tv2111 = -996						; size = 4
tv2093 = -992						; size = 4
tv1978 = -988						; size = 4
tv1957 = -984						; size = 4
tv1949 = -980						; size = 4
tv1927 = -976						; size = 4
tv1920 = -972						; size = 4
tv1904 = -968						; size = 4
tv1884 = -964						; size = 4
tv1685 = -960						; size = 4
tv1684 = -956						; size = 4
tv1672 = -952						; size = 4
tv1657 = -948						; size = 4
tv1656 = -944						; size = 4
tv1642 = -940						; size = 4
tv1510 = -936						; size = 4
tv1498 = -932						; size = 4
tv1482 = -928						; size = 4
tv1461 = -924						; size = 4
tv1435 = -920						; size = 4
tv1411 = -916						; size = 4
tv1401 = -912						; size = 4
tv1392 = -908						; size = 4
tv1386 = -904						; size = 4
tv1367 = -900						; size = 4
tv1361 = -896						; size = 4
tv1346 = -892						; size = 4
tv1329 = -888						; size = 4
tv1313 = -884						; size = 4
tv1298 = -880						; size = 4
tv1284 = -876						; size = 4
tv1255 = -872						; size = 4
tv1238 = -868						; size = 4
tv1230 = -864						; size = 4
tv1046 = -860						; size = 4
tv864 = -856						; size = 4
tv673 = -852						; size = 4
tv658 = -848						; size = 4
tv610 = -844						; size = 4
tv594 = -840						; size = 4
tv351 = -836						; size = 4
tv264 = -832						; size = 4
tv220 = -828						; size = 4
tv167 = -824						; size = 4
_cursplus$87743 = -816					; size = 8
_val$87667 = -804					; size = 4
_max$87666 = -800					; size = 4
_lbuf$87633 = -792					; size = 64
_i$87632 = -724						; size = 4
_colour$87614 = -720					; size = 4
_colour$87610 = -716					; size = 4
_old_curs$87579 = -708					; size = 8
_i$87578 = -696						; size = 4
_i$87572 = -692						; size = 4
_buf$87571 = -684					; size = 32
_cline$87563 = -648					; size = 4
_p$87562 = -644						; size = 4
_cursplus$87561 = -636					; size = 8
_n$87560 = -624						; size = 4
_p$87505 = -620						; size = 4
_buf$87504 = -612					; size = 80
_len$87503 = -528					; size = 4
_y$87502 = -520						; size = 4
_x$87501 = -508						; size = 4
_i$87440 = -500						; size = 4
_bot$87436 = -496					; size = 4
_top$87435 = -492					; size = 4
_i$87428 = -488						; size = 4
_i$87418 = -484						; size = 4
_printer$87411 = -480					; size = 4
_i$87405 = -476						; size = 4
_buf$87398 = -468					; size = 32
_i$87380 = -432						; size = 4
_i$87374 = -428						; size = 4
_ldata$87294 = -424					; size = 4
_nlattr$87293 = -420					; size = 4
_scrbot$87283 = -412					; size = 8
_scrtop$87282 = -396					; size = 8
_j$87281 = -384						; size = 4
_i$87280 = -380						; size = 4
_ldata$87279 = -376					; size = 4
_x$87217 = -372						; size = 4
_cursplus$87201 = -364					; size = 8
_width$87190 = -352					; size = 4
_cline$87189 = -348					; size = 4
_ldata$87174 = -344					; size = 4
_old_curs$87173 = -336					; size = 8
_tmp$87127 = -324					; size = 4
_ticks$87117 = -320					; size = 4
_newbeep$87116 = -316					; size = 4
_ret$87016 = -308					; size = 4
_nchars$ = -296						; size = 4
_chars$ = -288						; size = 4
_localbuf$ = -280					; size = 256
_unget$ = -20						; size = 4
_c$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_term$ = 8						; size = 4
_term_out PROC
; Line 2733
	push	ebp
	mov	ebp, esp
	sub	esp, 1048				; 00000418H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1048]
	mov	ecx, 262				; 00000106H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 2737
	mov	DWORD PTR _nchars$[ebp], 0
; Line 2739
	mov	DWORD PTR _unget$[ebp], -1
; Line 2741
	mov	DWORD PTR _chars$[ebp], 0
$LN606@term_out:
; Line 2742
	cmp	DWORD PTR _nchars$[ebp], 0
	jg	SHORT $LN604@term_out
	cmp	DWORD PTR _unget$[ebp], -1
	jne	SHORT $LN604@term_out
	mov	eax, DWORD PTR _term$[ebp]
	add	eax, 96					; 00000060H
	push	eax
	call	_bufchain_size
	add	esp, 4
	test	eax, eax
	jle	$LN605@term_out
$LN604@term_out:
; Line 2743
	cmp	DWORD PTR _unget$[ebp], -1
	jne	$LN603@term_out
; Line 2744
	cmp	DWORD PTR _nchars$[ebp], 0
	jne	$LN602@term_out
; Line 2746
	lea	ecx, DWORD PTR _nchars$[ebp]
	push	ecx
	lea	edx, DWORD PTR _ret$87016[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	add	eax, 96					; 00000060H
	push	eax
	call	_bufchain_prefix
	add	esp, 12					; 0000000cH
; Line 2747
	cmp	DWORD PTR _nchars$[ebp], 256		; 00000100H
	jbe	SHORT $LN601@term_out
; Line 2748
	mov	DWORD PTR _nchars$[ebp], 256		; 00000100H
$LN601@term_out:
; Line 2749
	mov	ecx, DWORD PTR _nchars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ret$87016[ebp]
	push	edx
	lea	eax, DWORD PTR _localbuf$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2750
	mov	ecx, DWORD PTR _nchars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	add	edx, 96					; 00000060H
	push	edx
	call	_bufchain_consume
	add	esp, 8
; Line 2751
	lea	eax, DWORD PTR _localbuf$[ebp]
	mov	DWORD PTR _chars$[ebp], eax
; Line 2752
	cmp	DWORD PTR _chars$[ebp], 0
	jne	SHORT $LN602@term_out
	push	2752					; 00000ac0H
	push	OFFSET $SG87020
	push	OFFSET $SG87021
	call	__wassert
	add	esp, 12					; 0000000cH
$LN602@term_out:
; Line 2754
	mov	edx, DWORD PTR _chars$[ebp]
	movzx	eax, BYTE PTR [edx]
	mov	DWORD PTR _c$[ebp], eax
	mov	ecx, DWORD PTR _chars$[ebp]
	add	ecx, 1
	mov	DWORD PTR _chars$[ebp], ecx
; Line 2755
	mov	edx, DWORD PTR _nchars$[ebp]
	sub	edx, 1
	mov	DWORD PTR _nchars$[ebp], edx
; Line 2761
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4392], 2
	jne	SHORT $LN600@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4236], 0
	je	SHORT $LN600@term_out
; Line 2762
	push	2
	movzx	edx, BYTE PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4236]
	push	ecx
	call	_logtraffic
	add	esp, 12					; 0000000cH
$LN600@term_out:
; Line 2763
	jmp	SHORT $LN599@term_out
$LN603@term_out:
; Line 2764
	mov	edx, DWORD PTR _unget$[ebp]
	mov	DWORD PTR _c$[ebp], edx
; Line 2765
	mov	DWORD PTR _unget$[ebp], -1
$LN599@term_out:
; Line 2777
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+236], 0
	je	$LN598@term_out
; Line 2778
	push	1
	lea	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	add	edx, 248				; 000000f8H
	push	edx
	call	_bufchain_add
	add	esp, 12					; 0000000cH
; Line 2785
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+240], 0
	je	$LN598@term_out
; Line 2786
	cmp	DWORD PTR _c$[ebp], 27			; 0000001bH
	jne	SHORT $LN596@term_out
; Line 2787
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+244], 1
	jmp	$LN595@term_out
$LN596@term_out:
; Line 2788
	cmp	DWORD PTR _c$[ebp], 155			; 0000009bH
	jne	SHORT $LN594@term_out
; Line 2789
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+244], 2
	jmp	SHORT $LN595@term_out
$LN594@term_out:
; Line 2790
	cmp	DWORD PTR _c$[ebp], 91			; 0000005bH
	jne	SHORT $LN592@term_out
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+244], 1
	jne	SHORT $LN592@term_out
; Line 2791
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+244], 2
	jmp	SHORT $LN595@term_out
$LN592@term_out:
; Line 2792
	cmp	DWORD PTR _c$[ebp], 52			; 00000034H
	jne	SHORT $LN590@term_out
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+244], 2
	jne	SHORT $LN590@term_out
; Line 2793
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+244], 3
	jmp	SHORT $LN595@term_out
$LN590@term_out:
; Line 2794
	cmp	DWORD PTR _c$[ebp], 105			; 00000069H
	jne	SHORT $LN588@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+244], 3
	jne	SHORT $LN588@term_out
; Line 2795
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+244], 4
; Line 2796
	jmp	SHORT $LN595@term_out
$LN588@term_out:
; Line 2797
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+244], 0
$LN595@term_out:
; Line 2798
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+244], 4
	jne	SHORT $LN586@term_out
; Line 2799
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_term_print_finish
	add	esp, 4
$LN586@term_out:
; Line 2801
	jmp	$LN606@term_out
$LN598@term_out:
; Line 2806
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+3652], 0
	jne	$LN585@term_out
; Line 2807
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+220], 0
	jne	SHORT $LN583@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4240]
	cmp	DWORD PTR [eax+12], 65001		; 0000fde9H
	jne	$LN584@term_out
$LN583@term_out:
; Line 2808
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+224]
	mov	DWORD PTR tv167[ebp], edx
	cmp	DWORD PTR tv167[ebp], 0
	je	SHORT $LN580@term_out
	cmp	DWORD PTR tv167[ebp], 0
	jle	$LN581@term_out
	cmp	DWORD PTR tv167[ebp], 5
	jle	$LN565@term_out
	jmp	$LN581@term_out
$LN580@term_out:
; Line 2810
	cmp	DWORD PTR _c$[ebp], 128			; 00000080H
	jae	SHORT $LN579@term_out
; Line 2812
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4240]
	mov	edx, DWORD PTR _c$[ebp]
	movzx	eax, BYTE PTR [ecx+edx+2576]
	cmp	eax, 255				; 000000ffH
	je	SHORT $LN578@term_out
; Line 2813
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4240]
	mov	eax, DWORD PTR _c$[ebp]
	movzx	ecx, BYTE PTR [edx+eax+2576]
	mov	DWORD PTR _c$[ebp], ecx
	jmp	SHORT $LN577@term_out
$LN578@term_out:
; Line 2814
	movzx	edx, BYTE PTR _c$[ebp]
	or	edx, 55296				; 0000d800H
	mov	DWORD PTR _c$[ebp], edx
$LN577@term_out:
; Line 2815
	jmp	$LN581@term_out
	jmp	$LN576@term_out
$LN579@term_out:
; Line 2816
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 224				; 000000e0H
	cmp	eax, 192				; 000000c0H
	jne	SHORT $LN575@term_out
; Line 2817
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+224], 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+232], 1
; Line 2818
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+228], eax
	jmp	$LN576@term_out
$LN575@term_out:
; Line 2819
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 240				; 000000f0H
	cmp	edx, 224				; 000000e0H
	jne	SHORT $LN573@term_out
; Line 2820
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+224], 2
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+232], 2
; Line 2821
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 15					; 0000000fH
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+228], edx
	jmp	$LN576@term_out
$LN573@term_out:
; Line 2822
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 248				; 000000f8H
	cmp	ecx, 240				; 000000f0H
	jne	SHORT $LN571@term_out
; Line 2823
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+224], 3
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+232], 3
; Line 2824
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 7
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+228], ecx
	jmp	$LN576@term_out
$LN571@term_out:
; Line 2825
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 252				; 000000fcH
	cmp	eax, 248				; 000000f8H
	jne	SHORT $LN569@term_out
; Line 2826
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+224], 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+232], 4
; Line 2827
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 3
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+228], eax
	jmp	SHORT $LN576@term_out
$LN569@term_out:
; Line 2828
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 254				; 000000feH
	cmp	edx, 252				; 000000fcH
	jne	SHORT $LN567@term_out
; Line 2829
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+224], 5
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+232], 5
; Line 2830
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+228], edx
; Line 2831
	jmp	SHORT $LN576@term_out
$LN567@term_out:
; Line 2832
	mov	DWORD PTR _c$[ebp], 55649		; 0000d961H
; Line 2833
	jmp	$LN581@term_out
$LN576@term_out:
; Line 2835
	jmp	$LN606@term_out
$LN565@term_out:
; Line 2841
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 192				; 000000c0H
	cmp	ecx, 128				; 00000080H
	je	SHORT $LN564@term_out
; Line 2842
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR _unget$[ebp], edx
; Line 2843
	mov	DWORD PTR _c$[ebp], 55649		; 0000d961H
; Line 2844
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+224], 0
; Line 2845
	jmp	$LN581@term_out
$LN564@term_out:
; Line 2847
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	shl	edx, 6
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 63					; 0000003fH
	or	edx, eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+228], edx
; Line 2848
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+224]
	sub	eax, 1
	mov	DWORD PTR tv220[ebp], eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR tv220[ebp]
	mov	DWORD PTR [ecx+224], edx
	cmp	DWORD PTR tv220[ebp], 0
	je	SHORT $LN563@term_out
; Line 2849
	jmp	$LN606@term_out
$LN563@term_out:
; Line 2851
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	mov	DWORD PTR _c$[ebp], ecx
; Line 2858
	cmp	DWORD PTR _c$[ebp], 128			; 00000080H
	jb	SHORT $LN561@term_out
	cmp	DWORD PTR _c$[ebp], 2048		; 00000800H
	jae	SHORT $LN560@term_out
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+232], 2
	jge	SHORT $LN561@term_out
$LN560@term_out:
	cmp	DWORD PTR _c$[ebp], 65536		; 00010000H
	jae	SHORT $LN559@term_out
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+232], 3
	jge	SHORT $LN561@term_out
$LN559@term_out:
	cmp	DWORD PTR _c$[ebp], 2097152		; 00200000H
	jae	SHORT $LN558@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+232], 4
	jge	SHORT $LN561@term_out
$LN558@term_out:
	cmp	DWORD PTR _c$[ebp], 67108864		; 04000000H
	jae	SHORT $LN562@term_out
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+232], 5
	jl	SHORT $LN562@term_out
$LN561@term_out:
; Line 2859
	mov	DWORD PTR _c$[ebp], 55649		; 0000d961H
$LN562@term_out:
; Line 2862
	cmp	DWORD PTR _c$[ebp], 8232		; 00002028H
	je	SHORT $LN556@term_out
	cmp	DWORD PTR _c$[ebp], 8233		; 00002029H
	jne	SHORT $LN557@term_out
$LN556@term_out:
; Line 2863
	mov	DWORD PTR _c$[ebp], 133			; 00000085H
$LN557@term_out:
; Line 2866
	cmp	DWORD PTR _c$[ebp], 160			; 000000a0H
	jae	SHORT $LN555@term_out
; Line 2867
	mov	DWORD PTR _c$[ebp], 65533		; 0000fffdH
$LN555@term_out:
; Line 2872
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jb	SHORT $LN554@term_out
	cmp	DWORD PTR _c$[ebp], 57344		; 0000e000H
	jae	SHORT $LN554@term_out
; Line 2873
	mov	DWORD PTR _c$[ebp], 55649		; 0000d961H
$LN554@term_out:
; Line 2876
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	jbe	SHORT $LN553@term_out
; Line 2877
	mov	DWORD PTR _c$[ebp], 55649		; 0000d961H
$LN553@term_out:
; Line 2880
	cmp	DWORD PTR _c$[ebp], 917504		; 000e0000H
	jb	SHORT $LN552@term_out
	cmp	DWORD PTR _c$[ebp], 917631		; 000e007fH
	ja	SHORT $LN552@term_out
; Line 2881
	jmp	$LN606@term_out
$LN552@term_out:
; Line 2884
	cmp	DWORD PTR _c$[ebp], 65279		; 0000feffH
	jne	SHORT $LN551@term_out
; Line 2885
	jmp	$LN606@term_out
$LN551@term_out:
; Line 2887
	cmp	DWORD PTR _c$[ebp], 65534		; 0000fffeH
	je	SHORT $LN549@term_out
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	jne	SHORT $LN581@term_out
$LN549@term_out:
; Line 2888
	mov	DWORD PTR _c$[ebp], 55649		; 0000d961H
$LN581@term_out:
; Line 2893
	jmp	$LN585@term_out
$LN584@term_out:
; Line 2894
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+208], 0
	je	SHORT $LN547@term_out
	cmp	DWORD PTR _c$[ebp], 27			; 0000001bH
	je	SHORT $LN547@term_out
	cmp	DWORD PTR _c$[ebp], 10			; 0000000aH
	je	SHORT $LN547@term_out
	cmp	DWORD PTR _c$[ebp], 13			; 0000000dH
	je	SHORT $LN547@term_out
	cmp	DWORD PTR _c$[ebp], 8
	je	SHORT $LN547@term_out
; Line 2896
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+208], 2
	jne	SHORT $LN546@term_out
	mov	edx, DWORD PTR _c$[ebp]
	or	edx, 128				; 00000080H
	mov	DWORD PTR _c$[ebp], edx
$LN546@term_out:
; Line 2897
	mov	eax, DWORD PTR _c$[ebp]
	or	eax, 55808				; 0000da00H
	mov	DWORD PTR _c$[ebp], eax
; Line 2898
	jmp	$LN585@term_out
$LN547@term_out:
; Line 2899
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+148]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+368]
	mov	DWORD PTR tv264[ebp], ecx
	cmp	DWORD PTR tv264[ebp], 55808		; 0000da00H
	jg	SHORT $LN610@term_out
	cmp	DWORD PTR tv264[ebp], 55808		; 0000da00H
	je	$LN534@term_out
	cmp	DWORD PTR tv264[ebp], 55296		; 0000d800H
	je	SHORT $LN537@term_out
	cmp	DWORD PTR tv264[ebp], 55552		; 0000d900H
	je	SHORT $LN542@term_out
	jmp	$LN585@term_out
$LN610@term_out:
	cmp	DWORD PTR tv264[ebp], 56064		; 0000db00H
	je	SHORT $LN539@term_out
	jmp	$LN585@term_out
$LN542@term_out:
; Line 2907
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4240]
	mov	ecx, DWORD PTR _c$[ebp]
	movzx	edx, BYTE PTR [eax+ecx+2576]
	cmp	edx, 255				; 000000ffH
	je	SHORT $LN541@term_out
; Line 2908
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4240]
	mov	edx, DWORD PTR _c$[ebp]
	movzx	eax, BYTE PTR [ecx+edx+2576]
	mov	DWORD PTR _c$[ebp], eax
; Line 2909
	jmp	SHORT $LN540@term_out
$LN541@term_out:
; Line 2910
	movzx	ecx, BYTE PTR _c$[ebp]
	or	ecx, 55552				; 0000d900H
	mov	DWORD PTR _c$[ebp], ecx
$LN540@term_out:
; Line 2911
	jmp	SHORT $LN585@term_out
$LN539@term_out:
; Line 2915
	cmp	DWORD PTR _c$[ebp], 35			; 00000023H
	jne	SHORT $LN537@term_out
; Line 2916
	mov	DWORD PTR _c$[ebp], 55677		; 0000d97dH
; Line 2917
	jmp	SHORT $LN585@term_out
$LN537@term_out:
; Line 2920
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4240]
	mov	ecx, DWORD PTR _c$[ebp]
	movzx	edx, BYTE PTR [eax+ecx+2576]
	cmp	edx, 255				; 000000ffH
	je	SHORT $LN536@term_out
; Line 2921
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4240]
	mov	edx, DWORD PTR _c$[ebp]
	movzx	eax, BYTE PTR [ecx+edx+2576]
	mov	DWORD PTR _c$[ebp], eax
; Line 2922
	jmp	SHORT $LN535@term_out
$LN536@term_out:
; Line 2923
	movzx	ecx, BYTE PTR _c$[ebp]
	or	ecx, 55296				; 0000d800H
	mov	DWORD PTR _c$[ebp], ecx
$LN535@term_out:
; Line 2924
	jmp	SHORT $LN585@term_out
$LN534@term_out:
; Line 2926
	cmp	DWORD PTR _c$[ebp], 32			; 00000020H
	jb	SHORT $LN585@term_out
	movzx	edx, BYTE PTR _c$[ebp]
	or	edx, 55808				; 0000da00H
	mov	DWORD PTR _c$[ebp], edx
$LN585@term_out:
; Line 2937
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -32				; ffffffe0H
	cmp	eax, 128				; 00000080H
	jne	SHORT $LN532@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+3652], 5
	jge	SHORT $LN532@term_out
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+328], 0
	jne	SHORT $LN532@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 16					; 00000010H
	je	SHORT $LN532@term_out
; Line 2938
	cmp	DWORD PTR _c$[ebp], 154			; 0000009aH
	jne	SHORT $LN531@term_out
; Line 2939
	mov	DWORD PTR _c$[ebp], 0
; Line 2940
	jmp	SHORT $LN532@term_out
$LN531@term_out:
; Line 2941
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 1
; Line 2942
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+560], 0
; Line 2943
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	add	ecx, 64					; 00000040H
	mov	DWORD PTR _c$[ebp], ecx
$LN532@term_out:
; Line 2948
	cmp	DWORD PTR _c$[ebp], 127			; 0000007fH
	jne	$LN529@term_out
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+3652], 5
	jge	$LN529@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 16384				; 00004000H
	je	$LN529@term_out
; Line 2949
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+112], 0
	je	SHORT $LN528@term_out
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+140], 0
	jne	SHORT $LN528@term_out
; Line 2950
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	sub	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+112], edx
$LN528@term_out:
; Line 2951
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+140], 0
; Line 2953
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4416], 0
	jne	SHORT $LN527@term_out
; Line 2954
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+112]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_check_boundary
	add	esp, 12					; 0000000cH
; Line 2955
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_check_boundary
	add	esp, 12					; 0000000cH
; Line 2957
	mov	ecx, DWORD PTR _term$[ebp]
	add	ecx, 84					; 00000054H
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+112]
	push	eax
	push	1
	push	2956					; 00000b8cH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_lineptr
	add	esp, 16					; 00000010H
	push	eax
	call	_copy_termchar
	add	esp, 12					; 0000000cH
$LN527@term_out:
; Line 2959
	jmp	$LN526@term_out
$LN529@term_out:
; Line 2961
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, -32				; ffffffe0H
	jne	$LN525@term_out
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+3652], 5
	jge	$LN525@term_out
; Line 2962
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR tv351[ebp], eax
	mov	ecx, DWORD PTR tv351[ebp]
	sub	ecx, 5
	mov	DWORD PTR tv351[ebp], ecx
	cmp	DWORD PTR tv351[ebp], 22		; 00000016H
	ja	$LN523@term_out
	mov	edx, DWORD PTR tv351[ebp]
	movzx	eax, BYTE PTR $LN705@term_out[edx]
	jmp	DWORD PTR $LN731@term_out[eax*4]
$LN522@term_out:
; Line 2971
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 1
	jne	SHORT $LN521@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
	jmp	$LN523@term_out
$LN521@term_out:
; Line 2972
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4228], 0
	je	SHORT $LN520@term_out
; Line 2974
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4316]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4312]
	push	edx
	push	0
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4228]
	push	ecx
	call	_lpage_send
	add	esp, 20					; 00000014H
$LN520@term_out:
; Line 2976
	jmp	$LN523@term_out
$LN519@term_out:
; Line 2982
	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ticks$87117[ebp], eax
; Line 2984
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+52], 0
	jne	SHORT $LN515@term_out
; Line 2985
	push	8
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _newbeep$87116[ebp], eax
; Line 2986
	mov	eax, DWORD PTR _newbeep$87116[ebp]
	mov	ecx, DWORD PTR _ticks$87117[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 2987
	mov	edx, DWORD PTR _newbeep$87116[ebp]
	mov	DWORD PTR [edx], 0
; Line 2988
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+40], 0
	jne	SHORT $LN517@term_out
; Line 2989
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _newbeep$87116[ebp]
	mov	DWORD PTR [ecx+40], edx
; Line 2990
	jmp	SHORT $LN516@term_out
$LN517@term_out:
; Line 2991
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _newbeep$87116[ebp]
	mov	DWORD PTR [ecx], edx
$LN516@term_out:
; Line 2992
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _newbeep$87116[ebp]
	mov	DWORD PTR [eax+44], ecx
; Line 2993
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+48]
	add	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+48], eax
$LN515@term_out:
; Line 3001
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+40], 0
	je	SHORT $LN514@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _ticks$87117[ebp]
	sub	eax, DWORD PTR [edx+4340]
	cmp	DWORD PTR [ecx+4], eax
	jae	SHORT $LN514@term_out
; Line 3002
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR _tmp$87127[ebp], edx
; Line 3003
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _tmp$87127[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+40], edx
; Line 3004
	mov	eax, DWORD PTR _tmp$87127[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 3005
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+40], 0
	jne	SHORT $LN513@term_out
; Line 3006
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+44], 0
$LN513@term_out:
; Line 3007
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	sub	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+48], ecx
; Line 3008
	jmp	SHORT $LN515@term_out
$LN514@term_out:
; Line 3011
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4328], 0
	je	SHORT $LN512@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+52], 0
	je	SHORT $LN512@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _ticks$87117[ebp]
	sub	eax, DWORD PTR [edx+56]
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	eax, DWORD PTR [ecx+4336]
	jb	SHORT $LN512@term_out
; Line 3017
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+52], 0
; Line 3018
	jmp	SHORT $LN511@term_out
$LN512@term_out:
; Line 3019
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4328], 0
	je	SHORT $LN511@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+52], 0
	jne	SHORT $LN511@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	cmp	ecx, DWORD PTR [eax+4332]
	jl	SHORT $LN511@term_out
; Line 3025
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+52], 1
$LN511@term_out:
; Line 3027
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _ticks$87117[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 3032
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4328], 0
	je	SHORT $LN508@term_out
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+52], 0
	jne	SHORT $LN509@term_out
$LN508@term_out:
; Line 3033
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4324]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4232]
	push	ecx
	call	_do_beep
	add	esp, 8
; Line 3035
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4324], 2
	jne	SHORT $LN509@term_out
; Line 3036
	push	0
	push	0
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_term_schedule_vbell
	add	esp, 12					; 0000000cH
$LN509@term_out:
; Line 3039
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_seen_disp_event
	add	esp, 4
; Line 3041
	jmp	$LN523@term_out
$LN506@term_out:
; Line 3044
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+112], 0
	jne	SHORT $LN505@term_out
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+108], 0
	je	SHORT $LN504@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+136], 0
	jne	SHORT $LN505@term_out
$LN504@term_out:
; Line 3046
	jmp	SHORT $LN503@term_out
$LN505@term_out:
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+112], 0
	jne	SHORT $LN502@term_out
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+108], 0
	jle	SHORT $LN502@term_out
; Line 3047
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+300]
	sub	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+112], edx
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	sub	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+108], edx
	jmp	SHORT $LN503@term_out
$LN502@term_out:
; Line 3048
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+140], 0
	je	SHORT $LN500@term_out
; Line 3049
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+140], 0
; Line 3050
	jmp	SHORT $LN503@term_out
$LN500@term_out:
; Line 3051
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	sub	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+112], ecx
$LN503@term_out:
; Line 3052
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_seen_disp_event
	add	esp, 4
; Line 3053
	jmp	$LN523@term_out
$LN498@term_out:
; Line 3055
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 2
	jne	SHORT $LN497@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
	jmp	$LN523@term_out
$LN497@term_out:
; Line 3056
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+148], 1
; Line 3057
	jmp	$LN523@term_out
$LN496@term_out:
; Line 3059
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 2
	jne	SHORT $LN495@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN523@term_out
$LN495@term_out:
; Line 3060
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+148], 0
; Line 3061
	jmp	$LN523@term_out
$LN494@term_out:
; Line 3063
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+328], 0
	je	SHORT $LN493@term_out
; Line 3064
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 9
; Line 3065
	jmp	SHORT $LN492@term_out
$LN493@term_out:
; Line 3066
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 1
	jne	SHORT $LN491@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN523@term_out
$LN491@term_out:
; Line 3067
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 1
; Line 3068
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+560], 0
$LN492@term_out:
; Line 3070
	jmp	$LN523@term_out
$LN490@term_out:
; Line 3072
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+112], 0
; Line 3073
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+140], 0
; Line 3074
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_seen_disp_event
	add	esp, 4
; Line 3076
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4372], 0
	je	SHORT $LN489@term_out
; Line 3077
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [edx+108]
	cmp	ecx, DWORD PTR [eax+128]
	jne	SHORT $LN488@term_out
; Line 3078
	push	1
	push	1
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+128]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_scroll
	add	esp, 20					; 00000014H
	jmp	SHORT $LN489@term_out
$LN488@term_out:
; Line 3079
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+296]
	sub	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+108], edx
	jge	SHORT $LN489@term_out
; Line 3080
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	add	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+108], edx
$LN489@term_out:
; Line 3082
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4236], 0
	je	SHORT $LN485@term_out
; Line 3083
	push	1
	movzx	edx, BYTE PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4236]
	push	ecx
	call	_logtraffic
	add	esp, 12					; 0000000cH
$LN485@term_out:
; Line 3084
	jmp	$LN523@term_out
$LN484@term_out:
; Line 3086
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 4096				; 00001000H
	je	SHORT $LN481@term_out
; Line 3087
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_move
	add	esp, 16					; 00000010H
; Line 3088
	push	1
	push	0
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_erase_lots
	add	esp, 16					; 00000010H
; Line 3089
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4452], 0
	je	SHORT $LN482@term_out
; Line 3090
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+16], 0
$LN482@term_out:
; Line 3091
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+140], 0
; Line 3092
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_seen_disp_event
	add	esp, 4
; Line 3093
	jmp	$LN523@term_out
$LN481@term_out:
; Line 3096
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 2
	jne	SHORT $LN479@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
	jmp	$LN523@term_out
$LN479@term_out:
; Line 3098
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [ecx+108]
	cmp	eax, DWORD PTR [edx+128]
	jne	SHORT $LN478@term_out
; Line 3099
	push	1
	push	1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_scroll
	add	esp, 20					; 00000014H
	jmp	SHORT $LN477@term_out
$LN478@term_out:
; Line 3100
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	sub	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+108], ecx
	jge	SHORT $LN477@term_out
; Line 3101
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	add	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+108], ecx
$LN477@term_out:
; Line 3102
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4384], 0
	je	SHORT $LN475@term_out
; Line 3103
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+112], 0
$LN475@term_out:
; Line 3104
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+140], 0
; Line 3105
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_seen_disp_event
	add	esp, 4
; Line 3106
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4236], 0
	je	SHORT $LN474@term_out
; Line 3107
	push	1
	movzx	edx, BYTE PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4236]
	push	ecx
	call	_logtraffic
	add	esp, 12					; 0000000cH
$LN474@term_out:
; Line 3108
	jmp	$LN523@term_out
$LN473@term_out:
; Line 3111
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	ecx, DWORD PTR [edx+112]
	mov	DWORD PTR _old_curs$87173[ebp], eax
	mov	DWORD PTR _old_curs$87173[ebp+4], ecx
; Line 3112
	push	1
	push	3112					; 00000c28H
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_lineptr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ldata$87174[ebp], eax
$LN472@term_out:
; Line 3115
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+112]
	add	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+112], eax
; Line 3117
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+300]
	sub	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+112], eax
	jge	SHORT $LN470@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3648]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	movzx	eax, BYTE PTR [eax+edx]
	test	eax, eax
	je	SHORT $LN472@term_out
$LN470@term_out:
; Line 3119
	mov	ecx, DWORD PTR _ldata$87174[ebp]
	movzx	edx, WORD PTR [ecx]
	and	edx, 3
	je	SHORT $LN468@term_out
; Line 3120
	mov	eax, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [eax+300]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+112], eax
	jl	SHORT $LN467@term_out
; Line 3121
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+300]
	cdq
	sub	eax, edx
	sar	eax, 1
	sub	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+112], eax
$LN467@term_out:
; Line 3122
	jmp	SHORT $LN466@term_out
$LN468@term_out:
; Line 3123
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [edx+112]
	cmp	ecx, DWORD PTR [eax+300]
	jl	SHORT $LN466@term_out
; Line 3124
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+300]
	sub	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+112], eax
$LN466@term_out:
; Line 3127
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+112]
	push	eax
	mov	ecx, DWORD PTR [edx+108]
	push	ecx
	mov	edx, DWORD PTR _old_curs$87173[ebp+4]
	push	edx
	mov	eax, DWORD PTR _old_curs$87173[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_check_selection
	add	esp, 20					; 00000014H
; Line 3129
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_seen_disp_event
	add	esp, 4
$LN523@term_out:
; Line 3132
	jmp	$LN526@term_out
$LN525@term_out:
; Line 3133
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3652]
	mov	DWORD PTR tv594[ebp], ecx
	cmp	DWORD PTR tv594[ebp], 13		; 0000000dH
	ja	$LN526@term_out
	mov	edx, DWORD PTR tv594[ebp]
	jmp	DWORD PTR $LN732@term_out[edx*4]
$LN461@term_out:
; Line 3138
	push	1
	push	3138					; 00000c42H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_lineptr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _cline$87189[ebp], eax
; Line 3139
	mov	DWORD PTR _width$87190[ebp], 0
; Line 3140
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN460@term_out
; Line 3141
	mov	DWORD PTR _width$87190[ebp], 1
$LN460@term_out:
; Line 3142
	cmp	DWORD PTR _width$87190[ebp], 0
	jne	SHORT $LN459@term_out
; Line 3145
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4360], 0
	je	SHORT $LN611@term_out
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	call	_mk_wcwidth_cjk
	add	esp, 4
	mov	DWORD PTR tv610[ebp], eax
	jmp	SHORT $LN612@term_out
$LN611@term_out:
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_mk_wcwidth
	add	esp, 4
	mov	DWORD PTR tv610[ebp], eax
$LN612@term_out:
	mov	ecx, DWORD PTR tv610[ebp]
	mov	DWORD PTR _width$87190[ebp], ecx
$LN459@term_out:
; Line 3147
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+140], 0
	je	$LN458@term_out
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+136], 0
	je	$LN458@term_out
	cmp	DWORD PTR _width$87190[ebp], 0
	jle	$LN458@term_out
; Line 3148
	mov	ecx, DWORD PTR _cline$87189[ebp]
	movzx	edx, WORD PTR [ecx]
	or	edx, 16					; 00000010H
	mov	eax, DWORD PTR _cline$87189[ebp]
	mov	WORD PTR [eax], dx
; Line 3149
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [ecx+108]
	cmp	eax, DWORD PTR [edx+128]
	jne	SHORT $LN457@term_out
; Line 3150
	push	1
	push	1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_scroll
	add	esp, 20					; 00000014H
	jmp	SHORT $LN456@term_out
$LN457@term_out:
; Line 3151
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	sub	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+108], ecx
	jge	SHORT $LN456@term_out
; Line 3152
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	add	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+108], ecx
$LN456@term_out:
; Line 3153
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+112], 0
; Line 3154
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+140], 0
; Line 3155
	push	1
	push	3155					; 00000c53H
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_lineptr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _cline$87189[ebp], eax
$LN458@term_out:
; Line 3157
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+144], 0
	je	SHORT $LN454@term_out
	cmp	DWORD PTR _width$87190[ebp], 0
	jle	SHORT $LN454@term_out
; Line 3158
	mov	eax, DWORD PTR _width$87190[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_insch
	add	esp, 8
$LN454@term_out:
; Line 3159
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+3656], 0
	je	$LN453@term_out
; Line 3160
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	edx, DWORD PTR [eax+112]
	mov	DWORD PTR _cursplus$87201[ebp], ecx
	mov	DWORD PTR _cursplus$87201[ebp+4], edx
; Line 3161
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _cursplus$87201[ebp+4]
	cmp	ecx, DWORD PTR [eax+300]
	jne	SHORT $LN613@term_out
	mov	DWORD PTR _cursplus$87201[ebp+4], 0
	mov	edx, DWORD PTR _cursplus$87201[ebp]
	add	edx, 1
	mov	DWORD PTR _cursplus$87201[ebp], edx
	mov	DWORD PTR tv658[ebp], 1
	jmp	SHORT $LN614@term_out
$LN613@term_out:
	mov	eax, DWORD PTR _cursplus$87201[ebp+4]
	add	eax, 1
	mov	DWORD PTR _cursplus$87201[ebp+4], eax
	mov	DWORD PTR tv658[ebp], 0
$LN614@term_out:
; Line 3162
	mov	ecx, DWORD PTR _cursplus$87201[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _cursplus$87201[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	mov	edx, DWORD PTR [eax+108]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_check_selection
	add	esp, 20					; 00000014H
$LN453@term_out:
; Line 3166
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, -256				; ffffff00H
	cmp	ecx, 55296				; 0000d800H
	je	SHORT $LN451@term_out
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, -256				; ffffff00H
	jne	SHORT $LN452@term_out
$LN451@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4236], 0
	je	SHORT $LN452@term_out
; Line 3168
	push	1
	movzx	ecx, BYTE PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4236]
	push	eax
	call	_logtraffic
	add	esp, 12					; 0000000cH
$LN452@term_out:
; Line 3170
	mov	ecx, DWORD PTR _width$87190[ebp]
	mov	DWORD PTR tv673[ebp], ecx
	cmp	DWORD PTR tv673[ebp], 0
	je	$LN442@term_out
	cmp	DWORD PTR tv673[ebp], 1
	je	$LN443@term_out
	cmp	DWORD PTR tv673[ebp], 2
	je	SHORT $LN448@term_out
	jmp	$LN438@term_out
$LN448@term_out:
; Line 3191
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_check_boundary
	add	esp, 12					; 0000000cH
; Line 3192
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_check_boundary
	add	esp, 12					; 0000000cH
; Line 3193
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	sub	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+112], ecx
	jne	$LN447@term_out
; Line 3195
	mov	eax, DWORD PTR _term$[ebp]
	add	eax, 84					; 00000054H
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	push	edx
	mov	eax, DWORD PTR _cline$87189[ebp]
	push	eax
	call	_copy_termchar
	add	esp, 12					; 0000000cH
; Line 3196
	mov	ecx, DWORD PTR _cline$87189[ebp]
	movzx	edx, WORD PTR [ecx]
	or	edx, 48					; 00000030H
	mov	eax, DWORD PTR _cline$87189[ebp]
	mov	WORD PTR [eax], dx
; Line 3197
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [ecx+108]
	cmp	eax, DWORD PTR [edx+128]
	jne	SHORT $LN446@term_out
; Line 3199
	push	1
	push	1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_scroll
	add	esp, 20					; 00000014H
	jmp	SHORT $LN445@term_out
$LN446@term_out:
; Line 3200
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	sub	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+108], ecx
	jge	SHORT $LN445@term_out
; Line 3201
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	add	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+108], ecx
$LN445@term_out:
; Line 3202
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+112], 0
; Line 3203
	push	1
	push	3203					; 00000c83H
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_lineptr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _cline$87189[ebp], eax
; Line 3205
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_check_boundary
	add	esp, 12					; 0000000cH
; Line 3206
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+112]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_check_boundary
	add	esp, 12					; 0000000cH
$LN447@term_out:
; Line 3210
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+112]
	push	eax
	mov	ecx, DWORD PTR _cline$87189[ebp]
	push	ecx
	call	_clear_cc
	add	esp, 8
; Line 3211
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+112]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _cline$87189[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+edx], ecx
; Line 3212
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+112]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _cline$87189[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [ecx+64]
	mov	DWORD PTR [edx+eax+4], ecx
; Line 3214
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+112]
	add	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+112], eax
; Line 3217
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+112]
	push	eax
	mov	ecx, DWORD PTR _cline$87189[ebp]
	push	ecx
	call	_clear_cc
	add	esp, 8
; Line 3218
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+112]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _cline$87189[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+edx], 57343		; 0000dfffH
; Line 3219
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _cline$87189[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	edx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [edx+64]
	mov	DWORD PTR [eax+ecx+4], edx
; Line 3221
	jmp	$LN449@term_out
$LN443@term_out:
; Line 3223
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+112]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_check_boundary
	add	esp, 12					; 0000000cH
; Line 3224
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_check_boundary
	add	esp, 12					; 0000000cH
; Line 3227
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	push	edx
	mov	eax, DWORD PTR _cline$87189[ebp]
	push	eax
	call	_clear_cc
	add	esp, 8
; Line 3228
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _cline$87189[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+ecx], eax
; Line 3229
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _cline$87189[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [eax+64]
	mov	DWORD PTR [ecx+edx+4], eax
; Line 3231
	jmp	$LN449@term_out
$LN442@term_out:
; Line 3233
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+112], 0
	jle	$LN441@term_out
; Line 3234
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+112]
	sub	eax, 1
	mov	DWORD PTR _x$87217[ebp], eax
; Line 3238
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+140], 0
	je	SHORT $LN440@term_out
; Line 3239
	mov	edx, DWORD PTR _x$87217[ebp]
	add	edx, 1
	mov	DWORD PTR _x$87217[ebp], edx
$LN440@term_out:
; Line 3245
	mov	eax, DWORD PTR _x$87217[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _cline$87189[ebp]
	mov	edx, DWORD PTR [ecx+20]
	cmp	DWORD PTR [eax+edx], 57343		; 0000dfffH
	jne	SHORT $LN439@term_out
; Line 3246
	cmp	DWORD PTR _x$87217[ebp], 0
	jg	SHORT $LN615@term_out
	push	3246					; 00000caeH
	push	OFFSET $SG87221
	push	OFFSET $SG87222
	call	__wassert
	add	esp, 12					; 0000000cH
$LN615@term_out:
; Line 3247
	mov	ecx, DWORD PTR _x$87217[ebp]
	sub	ecx, 1
	mov	DWORD PTR _x$87217[ebp], ecx
$LN439@term_out:
; Line 3250
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$87217[ebp]
	push	eax
	mov	ecx, DWORD PTR _cline$87189[ebp]
	push	ecx
	call	_add_cc
	add	esp, 12					; 0000000cH
; Line 3251
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_seen_disp_event
	add	esp, 4
$LN441@term_out:
; Line 3253
	jmp	$LN606@term_out
$LN438@term_out:
; Line 3255
	jmp	$LN606@term_out
$LN449@term_out:
; Line 3257
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	add	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+112], ecx
; Line 3258
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [eax+112]
	cmp	edx, DWORD PTR [ecx+300]
	jne	$LN437@term_out
; Line 3259
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	sub	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+112], ecx
; Line 3260
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+140], 1
; Line 3261
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+136], 0
	je	$LN437@term_out
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+328], 0
	je	$LN437@term_out
; Line 3262
	mov	eax, DWORD PTR _cline$87189[ebp]
	movzx	ecx, WORD PTR [eax]
	or	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _cline$87189[ebp]
	mov	WORD PTR [edx], cx
; Line 3263
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [eax+108]
	cmp	edx, DWORD PTR [ecx+128]
	jne	SHORT $LN435@term_out
; Line 3264
	push	1
	push	1
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+124]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_scroll
	add	esp, 20					; 00000014H
	jmp	SHORT $LN434@term_out
$LN435@term_out:
; Line 3265
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+296]
	sub	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+108], eax
	jge	SHORT $LN434@term_out
; Line 3266
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+108]
	add	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+108], eax
$LN434@term_out:
; Line 3267
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+112], 0
; Line 3268
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+140], 0
$LN437@term_out:
; Line 3271
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_seen_disp_event
	add	esp, 4
; Line 3273
	jmp	$LN526@term_out
$LN432@term_out:
; Line 3281
	cmp	DWORD PTR _c$[ebp], 92			; 0000005cH
	jne	SHORT $LN430@term_out
; Line 3282
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_do_osc
	add	esp, 4
; Line 3283
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
; Line 3284
	jmp	$LN526@term_out
$LN430@term_out:
; Line 3288
	cmp	DWORD PTR _c$[ebp], 32			; 00000020H
	jb	SHORT $LN429@term_out
	cmp	DWORD PTR _c$[ebp], 47			; 0000002fH
	ja	SHORT $LN429@term_out
; Line 3289
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+560], 0
	je	SHORT $LN428@term_out
; Line 3290
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+560], -1
; Line 3291
	jmp	SHORT $LN427@term_out
$LN428@term_out:
; Line 3292
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+560], ecx
$LN427@term_out:
; Line 3293
	jmp	$LN526@term_out
$LN429@term_out:
; Line 3295
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
; Line 3296
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+560]
	shl	ecx, 8
	add	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR tv864[ebp], ecx
	cmp	DWORD PTR tv864[ebp], 9014		; 00002336H
	ja	SHORT $LN616@term_out
	cmp	DWORD PTR tv864[ebp], 9011		; 00002333H
	jae	$LN378@term_out
	mov	edx, DWORD PTR tv864[ebp]
	sub	edx, 55					; 00000037H
	mov	DWORD PTR tv864[ebp], edx
	cmp	DWORD PTR tv864[ebp], 44		; 0000002cH
	ja	$LN425@term_out
	mov	eax, DWORD PTR tv864[ebp]
	movzx	ecx, BYTE PTR $LN706@term_out[eax]
	jmp	DWORD PTR $LN733@term_out[ecx*4]
$LN616@term_out:
	cmp	DWORD PTR tv864[ebp], 10306		; 00002842H
	ja	$LN617@term_out
	cmp	DWORD PTR tv864[ebp], 10306		; 00002842H
	je	$LN367@term_out
	cmp	DWORD PTR tv864[ebp], 9543		; 00002547H
	ja	SHORT $LN618@term_out
	cmp	DWORD PTR tv864[ebp], 9543		; 00002547H
	je	$LN346@term_out
	cmp	DWORD PTR tv864[ebp], 9016		; 00002338H
	je	$LN387@term_out
	cmp	DWORD PTR tv864[ebp], 9528		; 00002538H
	je	$LN346@term_out
	cmp	DWORD PTR tv864[ebp], 9536		; 00002540H
	je	$LN343@term_out
	jmp	$LN425@term_out
$LN618@term_out:
	cmp	DWORD PTR tv864[ebp], 10288		; 00002830H
	je	$LN364@term_out
	cmp	DWORD PTR tv864[ebp], 10305		; 00002841H
	je	$LN370@term_out
	jmp	$LN425@term_out
$LN617@term_out:
	cmp	DWORD PTR tv864[ebp], 10561		; 00002941H
	ja	SHORT $LN619@term_out
	cmp	DWORD PTR tv864[ebp], 10561		; 00002941H
	je	$LN358@term_out
	cmp	DWORD PTR tv864[ebp], 10325		; 00002855H
	je	$LN361@term_out
	cmp	DWORD PTR tv864[ebp], 10544		; 00002930H
	je	$LN352@term_out
	jmp	$LN425@term_out
$LN619@term_out:
	cmp	DWORD PTR tv864[ebp], 10562		; 00002942H
	je	$LN355@term_out
	cmp	DWORD PTR tv864[ebp], 10581		; 00002955H
	je	$LN349@term_out
	jmp	$LN425@term_out
$LN424@term_out:
; Line 3298
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 2
; Line 3299
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+556], 1
; Line 3300
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+428], 0
; Line 3301
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+560], 0
; Line 3302
	jmp	$LN425@term_out
$LN423@term_out:
; Line 3305
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 16384				; 00004000H
	jne	SHORT $LN422@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN425@term_out
$LN422@term_out:
; Line 3306
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 3
; Line 3307
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+428], 0
; Line 3308
	jmp	$LN425@term_out
$LN421@term_out:
; Line 3310
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 2
	jne	SHORT $LN420@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN425@term_out
$LN420@term_out:
; Line 3311
	push	1
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_save_cursor
	add	esp, 8
; Line 3312
	jmp	$LN425@term_out
$LN419@term_out:
; Line 3314
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 2
	jne	SHORT $LN418@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN425@term_out
$LN418@term_out:
; Line 3315
	push	0
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_save_cursor
	add	esp, 8
; Line 3316
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_seen_disp_event
	add	esp, 4
; Line 3317
	jmp	$LN425@term_out
$LN417@term_out:
; Line 3319
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 2
	jne	SHORT $LN416@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN425@term_out
$LN416@term_out:
; Line 3320
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+324], 1
; Line 3321
	jmp	$LN425@term_out
$LN415@term_out:
; Line 3323
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 2
	jne	SHORT $LN414@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN425@term_out
$LN414@term_out:
; Line 3324
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+324], 0
; Line 3325
	jmp	$LN425@term_out
$LN413@term_out:
; Line 3327
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 2
	jne	SHORT $LN412@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
	jmp	$LN425@term_out
$LN412@term_out:
; Line 3328
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [ecx+108]
	cmp	eax, DWORD PTR [edx+128]
	jne	SHORT $LN411@term_out
; Line 3329
	push	1
	push	1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_scroll
	add	esp, 20					; 00000014H
	jmp	SHORT $LN410@term_out
$LN411@term_out:
; Line 3330
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	sub	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+108], ecx
	jge	SHORT $LN410@term_out
; Line 3331
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	add	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+108], ecx
$LN410@term_out:
; Line 3332
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+140], 0
; Line 3333
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_seen_disp_event
	add	esp, 4
; Line 3334
	jmp	$LN425@term_out
$LN408@term_out:
; Line 3336
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 2
	jne	SHORT $LN407@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN425@term_out
$LN407@term_out:
; Line 3337
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+112], 0
; Line 3338
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [eax+108]
	cmp	edx, DWORD PTR [ecx+128]
	jne	SHORT $LN406@term_out
; Line 3339
	push	1
	push	1
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+124]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_scroll
	add	esp, 20					; 00000014H
	jmp	SHORT $LN405@term_out
$LN406@term_out:
; Line 3340
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+296]
	sub	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+108], eax
	jge	SHORT $LN405@term_out
; Line 3341
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+108]
	add	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+108], eax
$LN405@term_out:
; Line 3342
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+140], 0
; Line 3343
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_seen_disp_event
	add	esp, 4
; Line 3344
	jmp	$LN425@term_out
$LN403@term_out:
; Line 3346
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 2
	jne	SHORT $LN402@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
	jmp	$LN425@term_out
$LN402@term_out:
; Line 3347
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [ecx+108]
	cmp	eax, DWORD PTR [edx+124]
	jne	SHORT $LN401@term_out
; Line 3348
	push	1
	push	-1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_scroll
	add	esp, 20					; 00000014H
	jmp	SHORT $LN400@term_out
$LN401@term_out:
; Line 3349
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+108], 0
	jle	SHORT $LN400@term_out
; Line 3350
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	sub	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+108], edx
$LN400@term_out:
; Line 3351
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+140], 0
; Line 3352
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_seen_disp_event
	add	esp, 4
; Line 3353
	jmp	$LN425@term_out
$LN398@term_out:
; Line 3355
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 2
	jne	SHORT $LN397@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN425@term_out
$LN397@term_out:
; Line 3356
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4228], 0
	je	SHORT $LN396@term_out
; Line 3358
	push	0
	mov	ecx, DWORD PTR _term$[ebp]
	add	ecx, 2624				; 00000a40H
	push	ecx
	call	_strlen
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _term$[ebp]
	add	edx, 2624				; 00000a40H
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4228]
	push	ecx
	call	_ldisc_send
	add	esp, 16					; 00000010H
$LN396@term_out:
; Line 3359
	jmp	$LN425@term_out
$LN395@term_out:
; Line 3361
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 2
	jne	SHORT $LN394@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN425@term_out
$LN394@term_out:
; Line 3362
	push	1
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_power_on
	add	esp, 8
; Line 3363
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4228], 0
	je	SHORT $LN393@term_out
; Line 3364
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4228]
	push	edx
	call	_ldisc_send
	add	esp, 16					; 00000010H
$LN393@term_out:
; Line 3365
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+180], 0
	je	SHORT $LN392@term_out
; Line 3366
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4428], 0
	jne	SHORT $LN391@term_out
; Line 3367
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+296]
	push	eax
	push	80					; 00000050H
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4232]
	push	edx
	call	_request_resize
	add	esp, 12					; 0000000cH
$LN391@term_out:
; Line 3368
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+180], 0
$LN392@term_out:
; Line 3370
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4452], 0
	je	SHORT $LN390@term_out
; Line 3371
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+16], 0
$LN390@term_out:
; Line 3372
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_seen_disp_event
	add	esp, 4
; Line 3373
	jmp	$LN425@term_out
$LN389@term_out:
; Line 3375
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 2
	jne	SHORT $LN388@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
	jmp	$LN425@term_out
$LN388@term_out:
; Line 3376
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3648]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	mov	BYTE PTR [edx+ecx], 1
; Line 3377
	jmp	$LN425@term_out
$LN387@term_out:
; Line 3380
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 2
	jne	SHORT $LN386@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN425@term_out
$LN386@term_out:
; Line 3386
	mov	DWORD PTR _i$87280[ebp], 0
	jmp	SHORT $LN385@term_out
$LN384@term_out:
	mov	edx, DWORD PTR _i$87280[ebp]
	add	edx, 1
	mov	DWORD PTR _i$87280[ebp], edx
$LN385@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _i$87280[ebp]
	cmp	ecx, DWORD PTR [eax+296]
	jge	$LN383@term_out
; Line 3387
	push	1
	push	3387					; 00000d3bH
	mov	edx, DWORD PTR _i$87280[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_lineptr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ldata$87279[ebp], eax
; Line 3388
	mov	ecx, DWORD PTR _ldata$87279[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_check_line_size
	add	esp, 8
; Line 3389
	mov	DWORD PTR _j$87281[ebp], 0
	jmp	SHORT $LN382@term_out
$LN381@term_out:
	mov	eax, DWORD PTR _j$87281[ebp]
	add	eax, 1
	mov	DWORD PTR _j$87281[ebp], eax
$LN382@term_out:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _j$87281[ebp]
	cmp	edx, DWORD PTR [ecx+300]
	jge	SHORT $LN380@term_out
; Line 3391
	mov	eax, DWORD PTR _term$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _j$87281[ebp]
	push	ecx
	mov	edx, DWORD PTR _ldata$87279[ebp]
	push	edx
	call	_copy_termchar
	add	esp, 12					; 0000000cH
; Line 3392
	mov	eax, DWORD PTR _j$87281[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _ldata$87279[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+edx], 69			; 00000045H
; Line 3393
	jmp	SHORT $LN381@term_out
$LN380@term_out:
; Line 3394
	xor	eax, eax
	mov	ecx, DWORD PTR _ldata$87279[ebp]
	mov	WORD PTR [ecx], ax
; Line 3395
	jmp	$LN384@term_out
$LN383@term_out:
; Line 3396
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4452], 0
	je	SHORT $LN379@term_out
; Line 3397
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+16], 0
$LN379@term_out:
; Line 3398
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_seen_disp_event
	add	esp, 4
; Line 3399
	mov	DWORD PTR _scrtop$87282[ebp], 0
	mov	edx, DWORD PTR _scrtop$87282[ebp]
	mov	DWORD PTR _scrtop$87282[ebp+4], edx
; Line 3400
	mov	DWORD PTR _scrbot$87283[ebp+4], 0
; Line 3401
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	mov	DWORD PTR _scrbot$87283[ebp], ecx
; Line 3402
	mov	edx, DWORD PTR _scrbot$87283[ebp+4]
	push	edx
	mov	eax, DWORD PTR _scrbot$87283[ebp]
	push	eax
	mov	ecx, DWORD PTR _scrtop$87282[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _scrtop$87282[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_check_selection
	add	esp, 20					; 00000014H
; Line 3404
	jmp	$LN425@term_out
$LN378@term_out:
; Line 3410
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 2
	jne	SHORT $LN377@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
	jmp	$LN425@term_out
$LN377@term_out:
; Line 3415
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+560]
	shl	edx, 8
	add	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR tv1046[ebp], edx
	cmp	DWORD PTR tv1046[ebp], 9011		; 00002333H
	je	SHORT $LN374@term_out
	cmp	DWORD PTR tv1046[ebp], 9012		; 00002334H
	je	SHORT $LN373@term_out
	cmp	DWORD PTR tv1046[ebp], 9013		; 00002335H
	je	SHORT $LN372@term_out
	jmp	SHORT $LN371@term_out
$LN374@term_out:
; Line 3417
	mov	DWORD PTR _nlattr$87293[ebp], 2
; Line 3418
	jmp	SHORT $LN375@term_out
$LN373@term_out:
; Line 3420
	mov	DWORD PTR _nlattr$87293[ebp], 3
; Line 3421
	jmp	SHORT $LN375@term_out
$LN372@term_out:
; Line 3423
	mov	DWORD PTR _nlattr$87293[ebp], 0
; Line 3424
	jmp	SHORT $LN375@term_out
$LN371@term_out:
; Line 3426
	mov	DWORD PTR _nlattr$87293[ebp], 1
$LN375@term_out:
; Line 3429
	push	1
	push	3429					; 00000d65H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_lineptr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ldata$87294[ebp], eax
; Line 3430
	mov	eax, DWORD PTR _ldata$87294[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_check_line_size
	add	esp, 8
; Line 3431
	mov	edx, DWORD PTR _ldata$87294[ebp]
	mov	ax, WORD PTR _nlattr$87293[ebp]
	mov	WORD PTR [edx], ax
; Line 3433
	jmp	$LN425@term_out
$LN370@term_out:
; Line 3436
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 2
	jne	SHORT $LN369@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
	jmp	$LN425@term_out
$LN369@term_out:
; Line 3437
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4424], 0
	jne	SHORT $LN368@term_out
; Line 3438
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+368], 56064		; 0000db00H
$LN368@term_out:
; Line 3439
	jmp	$LN425@term_out
$LN367@term_out:
; Line 3441
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 2
	jne	SHORT $LN366@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN425@term_out
$LN366@term_out:
; Line 3442
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4424], 0
	jne	SHORT $LN365@term_out
; Line 3443
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+368], 55296		; 0000d800H
$LN365@term_out:
; Line 3444
	jmp	$LN425@term_out
$LN364@term_out:
; Line 3446
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 2
	jne	SHORT $LN363@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN425@term_out
$LN363@term_out:
; Line 3447
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4424], 0
	jne	SHORT $LN362@term_out
; Line 3448
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+368], 55552		; 0000d900H
$LN362@term_out:
; Line 3449
	jmp	$LN425@term_out
$LN361@term_out:
; Line 3451
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 16384				; 00004000H
	jne	SHORT $LN360@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
	jmp	$LN425@term_out
$LN360@term_out:
; Line 3452
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4424], 0
	jne	SHORT $LN359@term_out
; Line 3453
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+368], 55808		; 0000da00H
$LN359@term_out:
; Line 3454
	jmp	$LN425@term_out
$LN358@term_out:
; Line 3457
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 2
	jne	SHORT $LN357@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN425@term_out
$LN357@term_out:
; Line 3458
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4424], 0
	jne	SHORT $LN356@term_out
; Line 3459
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+372], 56064		; 0000db00H
$LN356@term_out:
; Line 3460
	jmp	$LN425@term_out
$LN355@term_out:
; Line 3462
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 2
	jne	SHORT $LN354@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN425@term_out
$LN354@term_out:
; Line 3463
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4424], 0
	jne	SHORT $LN353@term_out
; Line 3464
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+372], 55296		; 0000d800H
$LN353@term_out:
; Line 3465
	jmp	$LN425@term_out
$LN352@term_out:
; Line 3467
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 2
	jne	SHORT $LN351@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
	jmp	$LN425@term_out
$LN351@term_out:
; Line 3468
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4424], 0
	jne	SHORT $LN350@term_out
; Line 3469
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+372], 55552		; 0000d900H
$LN350@term_out:
; Line 3470
	jmp	$LN425@term_out
$LN349@term_out:
; Line 3472
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 16384				; 00004000H
	jne	SHORT $LN348@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN425@term_out
$LN348@term_out:
; Line 3473
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4424], 0
	jne	SHORT $LN347@term_out
; Line 3474
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+372], 55808		; 0000da00H
$LN347@term_out:
; Line 3475
	jmp	SHORT $LN425@term_out
$LN346@term_out:
; Line 3479
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 16384				; 00004000H
	jne	SHORT $LN345@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	SHORT $LN425@term_out
$LN345@term_out:
; Line 3480
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4424], 0
	jne	SHORT $LN344@term_out
; Line 3481
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+220], 1
$LN344@term_out:
; Line 3482
	jmp	SHORT $LN425@term_out
$LN343@term_out:
; Line 3484
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 16384				; 00004000H
	jne	SHORT $LN342@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
	jmp	SHORT $LN425@term_out
$LN342@term_out:
; Line 3485
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4424], 0
	jne	SHORT $LN425@term_out
; Line 3486
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+220], 0
$LN425@term_out:
; Line 3489
	jmp	$LN526@term_out
$LN340@term_out:
; Line 3491
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
; Line 3492
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	call	_isdigit
	add	esp, 4
	test	eax, eax
	je	SHORT $LN339@term_out
; Line 3493
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+556], 32			; 00000020H
	jg	SHORT $LN338@term_out
; Line 3494
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+556]
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+ecx*4+424], 0
	jne	SHORT $LN337@term_out
; Line 3495
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+556]
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+ecx*4+424], 0
$LN337@term_out:
; Line 3497
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+556]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+424]
	imul	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _c$[ebp]
	lea	edx, DWORD PTR [eax+ecx-48]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+556]
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+ecx*4+424], edx
$LN338@term_out:
; Line 3499
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 2
	jmp	$LN336@term_out
$LN339@term_out:
; Line 3500
	cmp	DWORD PTR _c$[ebp], 59			; 0000003bH
	jne	SHORT $LN335@term_out
; Line 3501
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+556], 32			; 00000020H
	jge	SHORT $LN334@term_out
; Line 3502
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+556]
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+ecx*4+428], 0
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+556]
	add	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+556], ecx
$LN334@term_out:
; Line 3503
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 2
	jmp	$LN336@term_out
$LN335@term_out:
; Line 3504
	cmp	DWORD PTR _c$[ebp], 64			; 00000040H
	jae	SHORT $LN332@term_out
; Line 3505
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+560], 0
	je	SHORT $LN331@term_out
; Line 3506
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+560], -1
	jmp	SHORT $LN330@term_out
$LN331@term_out:
; Line 3507
	cmp	DWORD PTR _c$[ebp], 63			; 0000003fH
	jne	SHORT $LN329@term_out
; Line 3508
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+560], 1
; Line 3509
	jmp	SHORT $LN330@term_out
$LN329@term_out:
; Line 3510
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+560], edx
$LN330@term_out:
; Line 3511
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 2
; Line 3512
	jmp	$LN336@term_out
$LN332@term_out:
; Line 3513
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+560]
	shl	edx, 8
	add	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR tv1230[ebp], edx
	cmp	DWORD PTR tv1230[ebp], 360		; 00000168H
	ja	SHORT $LN692@term_out
	cmp	DWORD PTR tv1230[ebp], 360		; 00000168H
	je	$LN278@term_out
	mov	eax, DWORD PTR tv1230[ebp]
	sub	eax, 64					; 00000040H
	mov	DWORD PTR tv1230[ebp], eax
	cmp	DWORD PTR tv1230[ebp], 56		; 00000038H
	ja	$LN336@term_out
	mov	ecx, DWORD PTR tv1230[ebp]
	movzx	edx, BYTE PTR $LN707@term_out[ecx]
	jmp	DWORD PTR $LN734@term_out[edx*4]
$LN692@term_out:
	cmp	DWORD PTR tv1230[ebp], 15683		; 00003d43H
	ja	SHORT $LN693@term_out
	cmp	DWORD PTR tv1230[ebp], 15683		; 00003d43H
	je	$LN122@term_out
	cmp	DWORD PTR tv1230[ebp], 8816		; 00002270H
	ja	SHORT $LN694@term_out
	cmp	DWORD PTR tv1230[ebp], 8816		; 00002270H
	je	$LN103@term_out
	cmp	DWORD PTR tv1230[ebp], 361		; 00000169H
	je	$LN273@term_out
	cmp	DWORD PTR tv1230[ebp], 364		; 0000016cH
	je	$LN267@term_out
	jmp	$LN336@term_out
$LN694@term_out:
	cmp	DWORD PTR tv1230[ebp], 9340		; 0000247cH
	je	$LN152@term_out
	cmp	DWORD PTR tv1230[ebp], 10876		; 00002a7cH
	je	$LN156@term_out
	jmp	$LN336@term_out
$LN693@term_out:
	cmp	DWORD PTR tv1230[ebp], 15692		; 00003d4cH
	ja	SHORT $LN695@term_out
	cmp	DWORD PTR tv1230[ebp], 15692		; 00003d4cH
	je	$LN105@term_out
	mov	eax, DWORD PTR tv1230[ebp]
	sub	eax, 15684				; 00003d44H
	mov	DWORD PTR tv1230[ebp], eax
	cmp	DWORD PTR tv1230[ebp], 3
	ja	$LN336@term_out
	mov	ecx, DWORD PTR tv1230[ebp]
	jmp	DWORD PTR $LN735@term_out[ecx*4]
$LN695@term_out:
	cmp	DWORD PTR tv1230[ebp], 15715		; 00003d63H
	je	$LN129@term_out
	cmp	DWORD PTR tv1230[ebp], 15971		; 00003e63H
	je	$LN320@term_out
	jmp	$LN336@term_out
$LN324@term_out:
; Line 3516
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+428], 0
	jne	SHORT $LN620@term_out
	mov	DWORD PTR tv1238[ebp], 1
	jmp	SHORT $LN621@term_out
$LN620@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+428]
	mov	DWORD PTR tv1238[ebp], ecx
$LN621@term_out:
	push	1
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+108]
	sub	eax, DWORD PTR tv1238[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_move
	add	esp, 16					; 00000010H
; Line 3517
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_seen_disp_event
	add	esp, 4
; Line 3518
	jmp	$LN336@term_out
$LN323@term_out:
; Line 3520
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 8192				; 00002000H
	jne	SHORT $LN321@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN336@term_out
$LN321@term_out:
; Line 3524
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+428], 0
	jne	SHORT $LN622@term_out
	mov	DWORD PTR tv1255[ebp], 1
	jmp	SHORT $LN623@term_out
$LN622@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+428]
	mov	DWORD PTR tv1255[ebp], ecx
$LN623@term_out:
	push	1
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+108]
	add	eax, DWORD PTR tv1255[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_move
	add	esp, 16					; 00000010H
; Line 3525
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_seen_disp_event
	add	esp, 4
; Line 3526
	jmp	$LN336@term_out
$LN320@term_out:
; Line 3528
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 16384				; 00004000H
	jne	SHORT $LN319@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN336@term_out
$LN319@term_out:
; Line 3531
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4228], 0
	je	SHORT $LN318@term_out
; Line 3532
	push	0
	push	11					; 0000000bH
	push	OFFSET $SG87358
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4228]
	push	ecx
	call	_ldisc_send
	add	esp, 16					; 00000010H
$LN318@term_out:
; Line 3533
	jmp	$LN336@term_out
$LN317@term_out:
; Line 3535
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 8192				; 00002000H
	jne	SHORT $LN315@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN336@term_out
$LN315@term_out:
; Line 3539
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+428], 0
	jne	SHORT $LN624@term_out
	mov	DWORD PTR tv1284[ebp], 1
	jmp	SHORT $LN625@term_out
$LN624@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+428]
	mov	DWORD PTR tv1284[ebp], ecx
$LN625@term_out:
	push	1
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	add	edx, DWORD PTR tv1284[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_move
	add	esp, 16					; 00000010H
; Line 3540
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_seen_disp_event
	add	esp, 4
; Line 3541
	jmp	$LN336@term_out
$LN314@term_out:
; Line 3544
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+428], 0
	jne	SHORT $LN626@term_out
	mov	DWORD PTR tv1298[ebp], 1
	jmp	SHORT $LN627@term_out
$LN626@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+428]
	mov	DWORD PTR tv1298[ebp], ecx
$LN627@term_out:
	push	1
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	sub	edx, DWORD PTR tv1298[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_move
	add	esp, 16					; 00000010H
; Line 3545
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_seen_disp_event
	add	esp, 4
; Line 3546
	jmp	$LN336@term_out
$LN313@term_out:
; Line 3548
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 8192				; 00002000H
	jne	SHORT $LN312@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN336@term_out
$LN312@term_out:
; Line 3550
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+428], 0
	jne	SHORT $LN628@term_out
	mov	DWORD PTR tv1313[ebp], 1
	jmp	SHORT $LN629@term_out
$LN628@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+428]
	mov	DWORD PTR tv1313[ebp], ecx
$LN629@term_out:
	push	1
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+108]
	add	eax, DWORD PTR tv1313[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_move
	add	esp, 16					; 00000010H
; Line 3551
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_seen_disp_event
	add	esp, 4
; Line 3552
	jmp	$LN336@term_out
$LN311@term_out:
; Line 3554
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 8192				; 00002000H
	jne	SHORT $LN310@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN336@term_out
$LN310@term_out:
; Line 3556
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+428], 0
	jne	SHORT $LN630@term_out
	mov	DWORD PTR tv1329[ebp], 1
	jmp	SHORT $LN631@term_out
$LN630@term_out:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+428]
	mov	DWORD PTR tv1329[ebp], edx
$LN631@term_out:
	push	1
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	sub	ecx, DWORD PTR tv1329[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_move
	add	esp, 16					; 00000010H
; Line 3557
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_seen_disp_event
	add	esp, 4
; Line 3558
	jmp	$LN336@term_out
$LN309@term_out:
; Line 3561
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 8192				; 00002000H
	jne	SHORT $LN308@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
	jmp	$LN336@term_out
$LN308@term_out:
; Line 3563
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+428], 0
	jne	SHORT $LN632@term_out
	mov	DWORD PTR tv1346[ebp], 1
	jmp	SHORT $LN633@term_out
$LN632@term_out:
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+428]
	mov	DWORD PTR tv1346[ebp], eax
$LN633@term_out:
	push	0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR tv1346[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_move
	add	esp, 16					; 00000010H
; Line 3564
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_seen_disp_event
	add	esp, 4
; Line 3565
	jmp	$LN336@term_out
$LN307@term_out:
; Line 3567
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 8192				; 00002000H
	jne	SHORT $LN306@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN336@term_out
$LN306@term_out:
; Line 3571
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+132], 0
	je	SHORT $LN634@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	mov	DWORD PTR tv1361[ebp], edx
	jmp	SHORT $LN635@term_out
$LN634@term_out:
	mov	DWORD PTR tv1361[ebp], 0
$LN635@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+428], 0
	jne	SHORT $LN636@term_out
	mov	DWORD PTR tv1367[ebp], 1
	jmp	SHORT $LN637@term_out
$LN636@term_out:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+428]
	mov	DWORD PTR tv1367[ebp], edx
$LN637@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 2
	push	ecx
	mov	edx, DWORD PTR tv1367[ebp]
	mov	eax, DWORD PTR tv1361[ebp]
	lea	ecx, DWORD PTR [eax+edx-1]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+112]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_move
	add	esp, 16					; 00000010H
; Line 3572
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_seen_disp_event
	add	esp, 4
; Line 3573
	jmp	$LN336@term_out
$LN305@term_out:
; Line 3576
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+556], 2
	jge	SHORT $LN304@term_out
; Line 3577
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+432], 0
$LN304@term_out:
; Line 3581
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+132], 0
	je	SHORT $LN638@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR tv1386[ebp], ecx
	jmp	SHORT $LN639@term_out
$LN638@term_out:
	mov	DWORD PTR tv1386[ebp], 0
$LN639@term_out:
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+428], 0
	jne	SHORT $LN640@term_out
	mov	DWORD PTR tv1392[ebp], 1
	jmp	SHORT $LN641@term_out
$LN640@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+428]
	mov	DWORD PTR tv1392[ebp], ecx
$LN641@term_out:
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+432], 0
	jne	SHORT $LN642@term_out
	mov	DWORD PTR tv1401[ebp], 1
	jmp	SHORT $LN643@term_out
$LN642@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+432]
	mov	DWORD PTR tv1401[ebp], ecx
$LN643@term_out:
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+132]
	neg	eax
	sbb	eax, eax
	and	eax, 2
	push	eax
	mov	ecx, DWORD PTR tv1392[ebp]
	mov	edx, DWORD PTR tv1386[ebp]
	lea	eax, DWORD PTR [edx+ecx-1]
	push	eax
	mov	ecx, DWORD PTR tv1401[ebp]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_move
	add	esp, 16					; 00000010H
; Line 3582
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_seen_disp_event
	add	esp, 4
; Line 3583
	jmp	$LN336@term_out
$LN303@term_out:
; Line 3586
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+428], 0
	jne	SHORT $LN644@term_out
	mov	DWORD PTR tv1411[ebp], 0
	jmp	SHORT $LN645@term_out
$LN644@term_out:
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+428]
	mov	DWORD PTR tv1411[ebp], eax
$LN645@term_out:
	mov	ecx, DWORD PTR tv1411[ebp]
	mov	DWORD PTR _i$87374[ebp], ecx
; Line 3587
	cmp	DWORD PTR _i$87374[ebp], 3
	jne	SHORT $LN302@term_out
; Line 3590
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_term_clrsb
	add	esp, 4
; Line 3591
	jmp	SHORT $LN301@term_out
$LN302@term_out:
; Line 3592
	mov	eax, DWORD PTR _i$87374[ebp]
	add	eax, 1
	mov	DWORD PTR _i$87374[ebp], eax
; Line 3593
	cmp	DWORD PTR _i$87374[ebp], 3
	jbe	SHORT $LN300@term_out
; Line 3594
	mov	DWORD PTR _i$87374[ebp], 0
$LN300@term_out:
; Line 3595
	mov	ecx, DWORD PTR _i$87374[ebp]
	and	ecx, 1
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	push	ecx
	mov	edx, DWORD PTR _i$87374[ebp]
	and	edx, 2
	neg	edx
	sbb	edx, edx
	neg	edx
	push	edx
	push	0
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_erase_lots
	add	esp, 16					; 00000010H
$LN301@term_out:
; Line 3598
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4452], 0
	je	SHORT $LN299@term_out
; Line 3599
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+16], 0
$LN299@term_out:
; Line 3600
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_seen_disp_event
	add	esp, 4
; Line 3601
	jmp	$LN336@term_out
$LN298@term_out:
; Line 3604
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+428], 0
	jne	SHORT $LN646@term_out
	mov	DWORD PTR tv1435[ebp], 0
	jmp	SHORT $LN647@term_out
$LN646@term_out:
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+428]
	mov	DWORD PTR tv1435[ebp], eax
$LN647@term_out:
	mov	ecx, DWORD PTR tv1435[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$87380[ebp], ecx
; Line 3605
	cmp	DWORD PTR _i$87380[ebp], 3
	jbe	SHORT $LN297@term_out
; Line 3606
	mov	DWORD PTR _i$87380[ebp], 0
$LN297@term_out:
; Line 3607
	mov	edx, DWORD PTR _i$87380[ebp]
	and	edx, 1
	neg	edx
	sbb	edx, edx
	neg	edx
	push	edx
	mov	eax, DWORD PTR _i$87380[ebp]
	and	eax, 2
	neg	eax
	sbb	eax, eax
	neg	eax
	push	eax
	push	1
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_erase_lots
	add	esp, 16					; 00000010H
; Line 3609
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_seen_disp_event
	add	esp, 4
; Line 3610
	jmp	$LN336@term_out
$LN296@term_out:
; Line 3612
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 8
	jne	SHORT $LN295@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN336@term_out
$LN295@term_out:
; Line 3613
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [eax+108]
	cmp	edx, DWORD PTR [ecx+128]
	jg	SHORT $LN294@term_out
; Line 3615
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+428], 0
	jne	SHORT $LN648@term_out
	mov	DWORD PTR tv1461[ebp], 1
	jmp	SHORT $LN649@term_out
$LN648@term_out:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+428]
	mov	DWORD PTR tv1461[ebp], edx
$LN649@term_out:
	push	0
	mov	eax, DWORD PTR tv1461[ebp]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_scroll
	add	esp, 20					; 00000014H
$LN294@term_out:
; Line 3616
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_seen_disp_event
	add	esp, 4
; Line 3617
	jmp	$LN336@term_out
$LN293@term_out:
; Line 3619
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 8
	jne	SHORT $LN292@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
	jmp	$LN336@term_out
$LN292@term_out:
; Line 3620
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [ecx+108]
	cmp	eax, DWORD PTR [edx+128]
	jg	SHORT $LN291@term_out
; Line 3623
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+428], 0
	jne	SHORT $LN650@term_out
	mov	DWORD PTR tv1482[ebp], 1
	jmp	SHORT $LN651@term_out
$LN650@term_out:
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+428]
	mov	DWORD PTR tv1482[ebp], eax
$LN651@term_out:
	push	1
	mov	ecx, DWORD PTR tv1482[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+128]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_scroll
	add	esp, 20					; 00000014H
$LN291@term_out:
; Line 3624
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_seen_disp_event
	add	esp, 4
; Line 3625
	jmp	$LN336@term_out
$LN290@term_out:
; Line 3628
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 8
	jne	SHORT $LN289@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN336@term_out
$LN289@term_out:
; Line 3629
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+428], 0
	jne	SHORT $LN652@term_out
	mov	DWORD PTR tv1498[ebp], 1
	jmp	SHORT $LN653@term_out
$LN652@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+428]
	mov	DWORD PTR tv1498[ebp], ecx
$LN653@term_out:
	mov	edx, DWORD PTR tv1498[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_insch
	add	esp, 8
; Line 3630
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_seen_disp_event
	add	esp, 4
; Line 3631
	jmp	$LN336@term_out
$LN288@term_out:
; Line 3633
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 8
	jne	SHORT $LN287@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN336@term_out
$LN287@term_out:
; Line 3634
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+428], 0
	jne	SHORT $LN654@term_out
	mov	DWORD PTR tv1510[ebp], 1
	jmp	SHORT $LN655@term_out
$LN654@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+428]
	mov	DWORD PTR tv1510[ebp], ecx
$LN655@term_out:
	mov	edx, DWORD PTR tv1510[ebp]
	neg	edx
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_insch
	add	esp, 8
; Line 3635
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_seen_disp_event
	add	esp, 4
; Line 3636
	jmp	$LN336@term_out
$LN286@term_out:
; Line 3638
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 2
	jne	SHORT $LN285@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN336@term_out
$LN285@term_out:
; Line 3640
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4228], 0
	je	SHORT $LN284@term_out
; Line 3642
	push	0
	mov	eax, DWORD PTR _term$[ebp]
	add	eax, 2624				; 00000a40H
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	add	ecx, 2624				; 00000a40H
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4228]
	push	eax
	call	_ldisc_send
	add	esp, 16					; 00000010H
$LN284@term_out:
; Line 3643
	jmp	$LN336@term_out
$LN283@term_out:
; Line 3645
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4228], 0
	je	$LN282@term_out
; Line 3646
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+428], 6
	jne	SHORT $LN281@term_out
; Line 3649
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+108]
	add	eax, 1
	push	eax
	push	OFFSET $SG87399
	lea	ecx, DWORD PTR _buf$87398[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 3650
	push	0
	lea	edx, DWORD PTR _buf$87398[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR _buf$87398[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4228]
	push	edx
	call	_ldisc_send
	add	esp, 16					; 00000010H
	jmp	SHORT $LN282@term_out
$LN281@term_out:
; Line 3651
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+428], 5
	jne	SHORT $LN282@term_out
; Line 3652
	push	0
	push	4
	push	OFFSET $SG87402
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4228]
	push	edx
	call	_ldisc_send
	add	esp, 16					; 00000010H
$LN282@term_out:
; Line 3655
	jmp	$LN336@term_out
$LN278@term_out:
; Line 3658
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 2
	jne	SHORT $LN277@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN336@term_out
$LN277@term_out:
; Line 3661
	mov	DWORD PTR _i$87405[ebp], 0
	jmp	SHORT $LN276@term_out
$LN275@term_out:
	mov	eax, DWORD PTR _i$87405[ebp]
	add	eax, 1
	mov	DWORD PTR _i$87405[ebp], eax
$LN276@term_out:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _i$87405[ebp]
	cmp	edx, DWORD PTR [ecx+556]
	jge	SHORT $LN274@term_out
; Line 3663
	push	1
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+560]
	push	ecx
	mov	edx, DWORD PTR _i$87405[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+428]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_toggle_mode
	add	esp, 16					; 00000010H
	jmp	SHORT $LN275@term_out
$LN274@term_out:
; Line 3665
	jmp	$LN336@term_out
$LN273@term_out:
; Line 3668
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 2
	jne	SHORT $LN272@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN336@term_out
$LN272@term_out:
; Line 3671
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+556], 1
	je	SHORT $LN271@term_out
	jmp	$LN336@term_out
$LN271@term_out:
; Line 3674
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+428], 5
	jne	SHORT $LN270@term_out
	push	124					; 0000007cH
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4244]
	push	eax
	call	_conf_get_str
	add	esp, 8
	mov	DWORD PTR _printer$87411[ebp], eax
	mov	ecx, DWORD PTR _printer$87411[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN270@term_out
; Line 3675
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+236], 1
; Line 3676
	mov	ecx, DWORD PTR _term$[ebp]
	xor	edx, edx
	cmp	DWORD PTR [ecx+560], 0
	sete	dl
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+240], edx
; Line 3677
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+244], 0
; Line 3678
	mov	edx, DWORD PTR _printer$87411[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_term_print_setup
	add	esp, 8
; Line 3679
	jmp	SHORT $LN269@term_out
$LN270@term_out:
; Line 3680
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+428], 4
	jne	SHORT $LN269@term_out
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+236], 0
	je	SHORT $LN269@term_out
; Line 3681
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_term_print_finish
	add	esp, 4
$LN269@term_out:
; Line 3684
	jmp	$LN336@term_out
$LN267@term_out:
; Line 3687
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 2
	jne	SHORT $LN266@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
	jmp	$LN336@term_out
$LN266@term_out:
; Line 3690
	mov	DWORD PTR _i$87418[ebp], 0
	jmp	SHORT $LN265@term_out
$LN264@term_out:
	mov	ecx, DWORD PTR _i$87418[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$87418[ebp], ecx
$LN265@term_out:
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _i$87418[ebp]
	cmp	eax, DWORD PTR [edx+556]
	jge	SHORT $LN263@term_out
; Line 3692
	push	0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+560]
	push	edx
	mov	eax, DWORD PTR _i$87418[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+428]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_toggle_mode
	add	esp, 16					; 00000010H
	jmp	SHORT $LN264@term_out
$LN263@term_out:
; Line 3694
	jmp	$LN336@term_out
$LN262@term_out:
; Line 3696
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 2
	jne	SHORT $LN261@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
	jmp	$LN336@term_out
$LN261@term_out:
; Line 3697
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+556], 1
	jne	SHORT $LN260@term_out
; Line 3698
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+428], 0
	jne	SHORT $LN259@term_out
; Line 3699
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3648]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+112]
	mov	BYTE PTR [ecx+eax], 0
	jmp	SHORT $LN260@term_out
$LN259@term_out:
; Line 3700
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+428], 3
	jne	SHORT $LN260@term_out
; Line 3702
	mov	DWORD PTR _i$87428[ebp], 0
	jmp	SHORT $LN256@term_out
$LN255@term_out:
	mov	edx, DWORD PTR _i$87428[ebp]
	add	edx, 1
	mov	DWORD PTR _i$87428[ebp], edx
$LN256@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _i$87428[ebp]
	cmp	ecx, DWORD PTR [eax+300]
	jge	SHORT $LN260@term_out
; Line 3703
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3648]
	mov	ecx, DWORD PTR _i$87428[ebp]
	mov	BYTE PTR [eax+ecx], 0
	jmp	SHORT $LN255@term_out
$LN260@term_out:
; Line 3706
	jmp	$LN336@term_out
$LN253@term_out:
; Line 3708
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 2
	jne	SHORT $LN252@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN336@term_out
$LN252@term_out:
; Line 3709
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+556], 2
	jg	$LN251@term_out
; Line 3711
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+428], 0
	jne	SHORT $LN656@term_out
	mov	DWORD PTR tv1642[ebp], 1
	jmp	SHORT $LN657@term_out
$LN656@term_out:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+428]
	mov	DWORD PTR tv1642[ebp], edx
$LN657@term_out:
	mov	eax, DWORD PTR tv1642[ebp]
	sub	eax, 1
	mov	DWORD PTR _top$87435[ebp], eax
; Line 3715
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+556], 1
	jle	SHORT $LN658@term_out
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+432], 0
	je	SHORT $LN658@term_out
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+432], 0
	jne	SHORT $LN659@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+296]
	mov	DWORD PTR tv1656[ebp], edx
	jmp	SHORT $LN660@term_out
$LN659@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+432]
	mov	DWORD PTR tv1656[ebp], ecx
$LN660@term_out:
	mov	edx, DWORD PTR tv1656[ebp]
	mov	DWORD PTR tv1657[ebp], edx
	jmp	SHORT $LN661@term_out
$LN658@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	mov	DWORD PTR tv1657[ebp], ecx
$LN661@term_out:
	mov	edx, DWORD PTR tv1657[ebp]
	sub	edx, 1
	mov	DWORD PTR _bot$87436[ebp], edx
; Line 3716
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _bot$87436[ebp]
	cmp	ecx, DWORD PTR [eax+296]
	jl	SHORT $LN250@term_out
; Line 3717
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+296]
	sub	eax, 1
	mov	DWORD PTR _bot$87436[ebp], eax
$LN250@term_out:
; Line 3721
	mov	ecx, DWORD PTR _bot$87436[ebp]
	sub	ecx, DWORD PTR _top$87435[ebp]
	test	ecx, ecx
	jle	SHORT $LN251@term_out
; Line 3722
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _top$87435[ebp]
	mov	DWORD PTR [edx+124], eax
; Line 3723
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _bot$87436[ebp]
	mov	DWORD PTR [ecx+128], edx
; Line 3724
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+112], 0
; Line 3735
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+132], 0
	je	SHORT $LN662@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+124]
	mov	DWORD PTR tv1672[ebp], eax
	jmp	SHORT $LN663@term_out
$LN662@term_out:
	mov	DWORD PTR tv1672[ebp], 0
$LN663@term_out:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR tv1672[ebp]
	mov	DWORD PTR [ecx+108], edx
; Line 3736
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_seen_disp_event
	add	esp, 4
$LN251@term_out:
; Line 3739
	jmp	$LN336@term_out
$LN248@term_out:
; Line 3771
	mov	DWORD PTR _i$87440[ebp], 0
	jmp	SHORT $LN247@term_out
$LN246@term_out:
	mov	ecx, DWORD PTR _i$87440[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$87440[ebp], ecx
$LN247@term_out:
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _i$87440[ebp]
	cmp	eax, DWORD PTR [edx+556]
	jge	$LN245@term_out
; Line 3772
	mov	ecx, DWORD PTR _i$87440[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+ecx*4+428], 0
	jne	SHORT $LN664@term_out
	mov	DWORD PTR tv1684[ebp], 0
	jmp	SHORT $LN665@term_out
$LN664@term_out:
	mov	eax, DWORD PTR _i$87440[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+428]
	mov	DWORD PTR tv1684[ebp], edx
$LN665@term_out:
	mov	eax, DWORD PTR tv1684[ebp]
	mov	DWORD PTR tv1685[ebp], eax
	cmp	DWORD PTR tv1685[ebp], 107		; 0000006bH
	ja	$LN243@term_out
	mov	ecx, DWORD PTR tv1685[ebp]
	movzx	edx, BYTE PTR $LN708@term_out[ecx]
	jmp	DWORD PTR $LN736@term_out[edx*4]
$LN242@term_out:
; Line 3774
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	mov	DWORD PTR [eax+64], edx
; Line 3775
	jmp	$LN243@term_out
$LN241@term_out:
; Line 3777
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 4
	jne	SHORT $LN240@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN243@term_out
$LN240@term_out:
; Line 3778
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	or	ecx, 262144				; 00040000H
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 3779
	jmp	$LN243@term_out
$LN239@term_out:
; Line 3781
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 16384				; 00004000H
	jne	SHORT $LN237@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN243@term_out
$LN237@term_out:
; Line 3783
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 4
	jne	SHORT $LN236@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN243@term_out
$LN236@term_out:
; Line 3784
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	or	ecx, 524288				; 00080000H
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 3785
	jmp	$LN243@term_out
$LN235@term_out:
; Line 3787
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 4
	jne	SHORT $LN234@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN243@term_out
$LN234@term_out:
; Line 3788
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	or	ecx, 2097152				; 00200000H
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 3789
	jmp	$LN243@term_out
$LN233@term_out:
; Line 3791
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 4096				; 00001000H
	jne	SHORT $LN232@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN243@term_out
$LN232@term_out:
; Line 3792
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+196], 0
; Line 3793
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	or	edx, 2097152				; 00200000H
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+64], edx
; Line 3794
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_schedule_tblink
	add	esp, 4
; Line 3795
	jmp	$LN243@term_out
$LN231@term_out:
; Line 3797
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+64]
	or	eax, 1048576				; 00100000H
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+64], eax
; Line 3798
	jmp	$LN243@term_out
$LN230@term_out:
; Line 3800
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 4096				; 00001000H
	jne	SHORT $LN229@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN243@term_out
$LN229@term_out:
; Line 3801
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4424], 0
	je	SHORT $LN228@term_out
	jmp	$LN243@term_out
$LN228@term_out:
; Line 3802
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+208], 0
	jmp	$LN243@term_out
$LN227@term_out:
; Line 3804
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 4096				; 00001000H
	jne	SHORT $LN226@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
	jmp	$LN243@term_out
$LN226@term_out:
; Line 3805
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4424], 0
	je	SHORT $LN225@term_out
	jmp	$LN243@term_out
$LN225@term_out:
; Line 3806
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+208], 1
	jmp	$LN243@term_out
$LN224@term_out:
; Line 3808
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 4096				; 00001000H
	jne	SHORT $LN223@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN243@term_out
$LN223@term_out:
; Line 3809
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4424], 0
	je	SHORT $LN222@term_out
	jmp	$LN243@term_out
$LN222@term_out:
; Line 3810
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+208], 2
	jmp	$LN243@term_out
$LN221@term_out:
; Line 3812
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 16400				; 00004010H
	jne	SHORT $LN220@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN243@term_out
$LN220@term_out:
; Line 3813
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, -262145				; fffbffffH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+64], eax
; Line 3814
	jmp	$LN243@term_out
$LN219@term_out:
; Line 3816
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 16400				; 00004010H
	jne	SHORT $LN218@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN243@term_out
$LN218@term_out:
; Line 3817
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, -524289				; fff7ffffH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+64], eax
; Line 3818
	jmp	$LN243@term_out
$LN217@term_out:
; Line 3820
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 16400				; 00004010H
	jne	SHORT $LN216@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN243@term_out
$LN216@term_out:
; Line 3821
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, -2097153				; ffdfffffH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+64], eax
; Line 3822
	jmp	$LN243@term_out
$LN215@term_out:
; Line 3824
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 16400				; 00004010H
	jne	SHORT $LN214@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN243@term_out
$LN214@term_out:
; Line 3825
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, -1048577				; ffefffffH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+64], eax
; Line 3826
	jmp	$LN243@term_out
$LN213@term_out:
; Line 3836
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, -512				; fffffe00H
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+64], eax
; Line 3838
	mov	edx, DWORD PTR _i$87440[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+428]
	sub	ecx, 30					; 0000001eH
	mov	edx, DWORD PTR _term$[ebp]
	or	ecx, DWORD PTR [edx+64]
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+64], ecx
; Line 3839
	jmp	$LN243@term_out
$LN212@term_out:
; Line 3849
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	and	edx, -512				; fffffe00H
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+64], edx
; Line 3852
	mov	ecx, DWORD PTR _i$87440[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+428]
	sub	eax, 82					; 00000052H
	mov	ecx, DWORD PTR _term$[ebp]
	or	eax, DWORD PTR [ecx+64]
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+64], eax
; Line 3853
	jmp	$LN243@term_out
$LN211@term_out:
; Line 3855
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, -512				; fffffe00H
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 3856
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	or	ecx, 256				; 00000100H
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 3857
	jmp	$LN243@term_out
$LN210@term_out:
; Line 3867
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, -261633				; fffc01ffH
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 3869
	mov	eax, DWORD PTR _i$87440[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+428]
	sub	edx, 40					; 00000028H
	shl	edx, 9
	mov	eax, DWORD PTR _term$[ebp]
	or	edx, DWORD PTR [eax+64]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+64], edx
; Line 3870
	jmp	$LN243@term_out
$LN209@term_out:
; Line 3880
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, -261633				; fffc01ffH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+64], eax
; Line 3883
	mov	edx, DWORD PTR _i$87440[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+428]
	sub	ecx, 92					; 0000005cH
	shl	ecx, 9
	mov	edx, DWORD PTR _term$[ebp]
	or	ecx, DWORD PTR [edx+64]
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+64], ecx
; Line 3884
	jmp	$LN243@term_out
$LN208@term_out:
; Line 3886
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	and	edx, -261633				; fffc01ffH
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+64], edx
; Line 3887
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	or	edx, 132096				; 00020400H
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+64], edx
; Line 3888
	jmp	$LN243@term_out
$LN207@term_out:
; Line 3891
	mov	ecx, DWORD PTR _i$87440[ebp]
	add	ecx, 2
	mov	edx, DWORD PTR _term$[ebp]
	cmp	ecx, DWORD PTR [edx+556]
	jge	SHORT $LN206@term_out
	mov	eax, DWORD PTR _i$87440[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+eax*4+432], 5
	jne	SHORT $LN206@term_out
; Line 3892
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, -512				; fffffe00H
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+64], eax
; Line 3895
	mov	edx, DWORD PTR _i$87440[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+436]
	and	ecx, 255				; 000000ffH
	mov	edx, DWORD PTR _term$[ebp]
	or	ecx, DWORD PTR [edx+64]
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+64], ecx
; Line 3896
	mov	ecx, DWORD PTR _i$87440[ebp]
	add	ecx, 2
	mov	DWORD PTR _i$87440[ebp], ecx
$LN206@term_out:
; Line 3898
	jmp	SHORT $LN243@term_out
$LN205@term_out:
; Line 3901
	mov	edx, DWORD PTR _i$87440[ebp]
	add	edx, 2
	mov	eax, DWORD PTR _term$[ebp]
	cmp	edx, DWORD PTR [eax+556]
	jge	SHORT $LN243@term_out
	mov	ecx, DWORD PTR _i$87440[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+ecx*4+432], 5
	jne	SHORT $LN243@term_out
; Line 3902
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, -261633				; fffc01ffH
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 3905
	mov	eax, DWORD PTR _i$87440[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+436]
	and	edx, 255				; 000000ffH
	shl	edx, 9
	mov	eax, DWORD PTR _term$[ebp]
	or	edx, DWORD PTR [eax+64]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+64], edx
; Line 3906
	mov	edx, DWORD PTR _i$87440[ebp]
	add	edx, 2
	mov	DWORD PTR _i$87440[ebp], edx
$LN243@term_out:
; Line 3910
	jmp	$LN246@term_out
$LN245@term_out:
; Line 3911
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_set_erase_char
	add	esp, 4
; Line 3913
	jmp	$LN336@term_out
$LN203@term_out:
; Line 3915
	push	1
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_save_cursor
	add	esp, 8
; Line 3916
	jmp	$LN336@term_out
$LN202@term_out:
; Line 3918
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_save_cursor
	add	esp, 8
; Line 3919
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_seen_disp_event
	add	esp, 4
; Line 3920
	jmp	$LN336@term_out
$LN201@term_out:
; Line 3930
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+556], 1
	jg	$LN200@term_out
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+428], 1
	jl	SHORT $LN199@term_out
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+428], 24			; 00000018H
	jl	$LN200@term_out
$LN199@term_out:
; Line 3931
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 256				; 00000100H
	jne	SHORT $LN198@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
	jmp	$LN336@term_out
$LN198@term_out:
; Line 3932
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4428], 0
	jne	SHORT $LN197@term_out
; Line 3934
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+428], 0
	jne	SHORT $LN666@term_out
	mov	DWORD PTR tv1884[ebp], 24		; 00000018H
	jmp	SHORT $LN667@term_out
$LN666@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+428]
	mov	DWORD PTR tv1884[ebp], ecx
$LN667@term_out:
	mov	edx, DWORD PTR tv1884[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4232]
	push	eax
	call	_request_resize
	add	esp, 12					; 0000000cH
$LN197@term_out:
; Line 3935
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_deselect
	add	esp, 4
; Line 3936
	jmp	$LN196@term_out
$LN200@term_out:
; Line 3938
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+556], 1
	jl	$LN196@term_out
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+428], 1
	jl	$LN196@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+428], 24			; 00000018H
	jge	$LN196@term_out
; Line 3939
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 16384				; 00004000H
	jne	SHORT $LN194@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN336@term_out
$LN194@term_out:
; Line 3941
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+428]
	mov	DWORD PTR tv1904[ebp], eax
	mov	ecx, DWORD PTR tv1904[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv1904[ebp], ecx
	cmp	DWORD PTR tv1904[ebp], 20		; 00000014H
	ja	$LN196@term_out
	mov	edx, DWORD PTR tv1904[ebp]
	jmp	DWORD PTR $LN737@term_out[edx*4]
$LN191@term_out:
; Line 3945
	push	0
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4232]
	push	ecx
	call	_set_iconic
	add	esp, 8
; Line 3946
	jmp	$LN196@term_out
$LN190@term_out:
; Line 3948
	push	1
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4232]
	push	eax
	call	_set_iconic
	add	esp, 8
; Line 3949
	jmp	$LN196@term_out
$LN189@term_out:
; Line 3951
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+556], 3
	jl	SHORT $LN188@term_out
; Line 3952
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4428], 0
	jne	SHORT $LN188@term_out
; Line 3955
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+436], 0
	jne	SHORT $LN668@term_out
	mov	DWORD PTR tv1920[ebp], 0
	jmp	SHORT $LN669@term_out
$LN668@term_out:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+436]
	mov	DWORD PTR tv1920[ebp], edx
$LN669@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+432], 0
	jne	SHORT $LN670@term_out
	mov	DWORD PTR tv1927[ebp], 0
	jmp	SHORT $LN671@term_out
$LN670@term_out:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+432]
	mov	DWORD PTR tv1927[ebp], edx
$LN671@term_out:
	mov	eax, DWORD PTR tv1920[ebp]
	push	eax
	mov	ecx, DWORD PTR tv1927[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4232]
	push	eax
	call	_move_window
	add	esp, 12					; 0000000cH
$LN188@term_out:
; Line 3957
	jmp	$LN196@term_out
; Line 3963
	jmp	$LN196@term_out
$LN185@term_out:
; Line 3966
	push	1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4232]
	push	edx
	call	_set_zorder
	add	esp, 8
; Line 3967
	jmp	$LN196@term_out
$LN184@term_out:
; Line 3970
	push	0
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4232]
	push	ecx
	call	_set_zorder
	add	esp, 8
; Line 3971
	jmp	$LN196@term_out
$LN183@term_out:
; Line 3973
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4232]
	push	eax
	call	_refresh_window
	add	esp, 4
; Line 3974
	jmp	$LN196@term_out
$LN182@term_out:
; Line 3976
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+556], 3
	jl	$LN181@term_out
; Line 3977
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4428], 0
	jne	SHORT $LN181@term_out
; Line 3980
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+432], 0
	jne	SHORT $LN672@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4364]
	mov	DWORD PTR tv1949[ebp], edx
	jmp	SHORT $LN673@term_out
$LN672@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+432]
	mov	DWORD PTR tv1949[ebp], ecx
$LN673@term_out:
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+436], 0
	jne	SHORT $LN674@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4368]
	mov	DWORD PTR tv1957[ebp], ecx
	jmp	SHORT $LN675@term_out
$LN674@term_out:
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+436]
	mov	DWORD PTR tv1957[ebp], eax
$LN675@term_out:
	mov	ecx, DWORD PTR tv1949[ebp]
	push	ecx
	mov	edx, DWORD PTR tv1957[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4232]
	push	ecx
	call	_request_resize
	add	esp, 12					; 0000000cH
$LN181@term_out:
; Line 3982
	jmp	$LN196@term_out
$LN179@term_out:
; Line 3984
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+556], 2
	jl	SHORT $LN178@term_out
; Line 3987
	mov	eax, DWORD PTR _term$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+432], 0
	setne	cl
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4232]
	push	eax
	call	_set_zoomed
	add	esp, 8
$LN178@term_out:
; Line 3988
	jmp	$LN196@term_out
$LN177@term_out:
; Line 3990
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4228], 0
	je	SHORT $LN176@term_out
; Line 3993
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4232]
	push	eax
	call	_is_iconic
	add	esp, 4
	test	eax, eax
	je	SHORT $LN676@term_out
	mov	DWORD PTR tv1978[ebp], OFFSET $SG87522
	jmp	SHORT $LN677@term_out
$LN676@term_out:
	mov	DWORD PTR tv1978[ebp], OFFSET $SG87523
$LN677@term_out:
	push	0
	push	4
	mov	ecx, DWORD PTR tv1978[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4228]
	push	eax
	call	_ldisc_send
	add	esp, 16					; 00000010H
$LN176@term_out:
; Line 3994
	jmp	$LN196@term_out
$LN175@term_out:
; Line 3996
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4228], 0
	je	SHORT $LN174@term_out
; Line 3997
	lea	edx, DWORD PTR _y$87502[ebp]
	push	edx
	lea	eax, DWORD PTR _x$87501[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4232]
	push	edx
	call	_get_window_pos
	add	esp, 12					; 0000000cH
; Line 3998
	mov	eax, DWORD PTR _y$87502[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$87501[ebp]
	push	ecx
	push	OFFSET $SG87526
	lea	edx, DWORD PTR _buf$87504[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H
	mov	DWORD PTR _len$87503[ebp], eax
; Line 3999
	push	0
	mov	eax, DWORD PTR _len$87503[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$87504[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4228]
	push	eax
	call	_ldisc_send
	add	esp, 16					; 00000010H
$LN174@term_out:
; Line 4001
	jmp	$LN196@term_out
$LN173@term_out:
; Line 4003
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4228], 0
	je	SHORT $LN172@term_out
; Line 4004
	lea	edx, DWORD PTR _y$87502[ebp]
	push	edx
	lea	eax, DWORD PTR _x$87501[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4232]
	push	edx
	call	_get_window_pixels
	add	esp, 12					; 0000000cH
; Line 4005
	mov	eax, DWORD PTR _x$87501[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$87502[ebp]
	push	ecx
	push	OFFSET $SG87529
	lea	edx, DWORD PTR _buf$87504[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H
	mov	DWORD PTR _len$87503[ebp], eax
; Line 4006
	push	0
	mov	eax, DWORD PTR _len$87503[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$87504[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4228]
	push	eax
	call	_ldisc_send
	add	esp, 16					; 00000010H
$LN172@term_out:
; Line 4008
	jmp	$LN196@term_out
$LN171@term_out:
; Line 4010
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4228], 0
	je	SHORT $LN170@term_out
; Line 4012
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+300]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+296]
	push	edx
	push	OFFSET $SG87532
	lea	eax, DWORD PTR _buf$87504[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
	mov	DWORD PTR _len$87503[ebp], eax
; Line 4013
	push	0
	mov	ecx, DWORD PTR _len$87503[ebp]
	push	ecx
	lea	edx, DWORD PTR _buf$87504[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4228]
	push	ecx
	call	_ldisc_send
	add	esp, 16					; 00000010H
$LN170@term_out:
; Line 4015
	jmp	$LN196@term_out
; Line 4032
	jmp	$LN196@term_out
$LN168@term_out:
; Line 4035
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4228], 0
	je	$LN167@term_out
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4444], 0
	je	$LN167@term_out
; Line 4036
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4444], 2
	jne	SHORT $LN166@term_out
; Line 4037
	push	1
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4232]
	push	eax
	call	_get_window_title
	add	esp, 8
	mov	DWORD PTR _p$87505[ebp], eax
; Line 4038
	jmp	SHORT $LN165@term_out
$LN166@term_out:
; Line 4039
	mov	ecx, DWORD PTR _EMPTY_WINDOW_TITLE
	mov	DWORD PTR _p$87505[ebp], ecx
$LN165@term_out:
; Line 4040
	mov	edx, DWORD PTR _p$87505[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _len$87503[ebp], eax
; Line 4041
	push	0
	push	3
	push	OFFSET $SG87538
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4228]
	push	ecx
	call	_ldisc_send
	add	esp, 16					; 00000010H
; Line 4042
	push	0
	mov	edx, DWORD PTR _len$87503[ebp]
	push	edx
	mov	eax, DWORD PTR _p$87505[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4228]
	push	edx
	call	_ldisc_send
	add	esp, 16					; 00000010H
; Line 4043
	push	0
	push	2
	push	OFFSET $SG87539
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4228]
	push	ecx
	call	_ldisc_send
	add	esp, 16					; 00000010H
$LN167@term_out:
; Line 4045
	jmp	$LN196@term_out
$LN164@term_out:
; Line 4048
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4228], 0
	je	$LN196@term_out
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4444], 0
	je	$LN196@term_out
; Line 4049
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4444], 2
	jne	SHORT $LN162@term_out
; Line 4050
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4232]
	push	eax
	call	_get_window_title
	add	esp, 8
	mov	DWORD PTR _p$87505[ebp], eax
; Line 4051
	jmp	SHORT $LN161@term_out
$LN162@term_out:
; Line 4052
	mov	ecx, DWORD PTR _EMPTY_WINDOW_TITLE
	mov	DWORD PTR _p$87505[ebp], ecx
$LN161@term_out:
; Line 4053
	mov	edx, DWORD PTR _p$87505[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _len$87503[ebp], eax
; Line 4054
	push	0
	push	3
	push	OFFSET $SG87544
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4228]
	push	ecx
	call	_ldisc_send
	add	esp, 16					; 00000010H
; Line 4055
	push	0
	mov	edx, DWORD PTR _len$87503[ebp]
	push	edx
	mov	eax, DWORD PTR _p$87505[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4228]
	push	edx
	call	_ldisc_send
	add	esp, 16					; 00000010H
; Line 4056
	push	0
	push	2
	push	OFFSET $SG87545
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4228]
	push	ecx
	call	_ldisc_send
	add	esp, 16					; 00000010H
$LN196@term_out:
; Line 4061
	jmp	$LN336@term_out
$LN160@term_out:
; Line 4063
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 4096				; 00001000H
	jne	SHORT $LN159@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN336@term_out
$LN159@term_out:
; Line 4065
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+428], 0
	jne	SHORT $LN678@term_out
	mov	DWORD PTR tv2093[ebp], 1
	jmp	SHORT $LN679@term_out
$LN678@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+428]
	mov	DWORD PTR tv2093[ebp], ecx
$LN679@term_out:
	push	1
	mov	edx, DWORD PTR tv2093[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+124]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_scroll
	add	esp, 20					; 00000014H
; Line 4066
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+140], 0
; Line 4067
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_seen_disp_event
	add	esp, 4
; Line 4068
	jmp	$LN336@term_out
$LN158@term_out:
; Line 4070
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 4096				; 00001000H
	jne	SHORT $LN157@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
	jmp	$LN336@term_out
$LN157@term_out:
; Line 4072
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+428], 0
	jne	SHORT $LN680@term_out
	mov	DWORD PTR tv2111[ebp], 1
	jmp	SHORT $LN681@term_out
$LN680@term_out:
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+428]
	mov	DWORD PTR tv2111[ebp], eax
$LN681@term_out:
	push	1
	mov	ecx, DWORD PTR tv2111[ebp]
	neg	ecx
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+128]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_scroll
	add	esp, 20					; 00000014H
; Line 4073
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+140], 0
; Line 4074
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_seen_disp_event
	add	esp, 4
; Line 4075
	jmp	$LN336@term_out
$LN156@term_out:
; Line 4083
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 64					; 00000040H
	jne	SHORT $LN155@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN336@term_out
$LN155@term_out:
; Line 4084
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+556], 1
	jne	SHORT $LN154@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+428], 0
	jle	SHORT $LN154@term_out
; Line 4085
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4428], 0
	jne	SHORT $LN153@term_out
; Line 4088
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+428], 0
	jne	SHORT $LN682@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4364]
	mov	DWORD PTR tv2137[ebp], edx
	jmp	SHORT $LN683@term_out
$LN682@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+428]
	mov	DWORD PTR tv2137[ebp], ecx
$LN683@term_out:
	mov	edx, DWORD PTR tv2137[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4232]
	push	eax
	call	_request_resize
	add	esp, 12					; 0000000cH
$LN153@term_out:
; Line 4089
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_deselect
	add	esp, 4
$LN154@term_out:
; Line 4091
	jmp	$LN336@term_out
$LN152@term_out:
; Line 4098
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 256				; 00000100H
	jne	SHORT $LN151@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN336@term_out
$LN151@term_out:
; Line 4099
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+556], 1
	jg	SHORT $LN150@term_out
; Line 4100
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4428], 0
	jne	SHORT $LN149@term_out
; Line 4104
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+428], 0
	jne	SHORT $LN684@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4368]
	mov	DWORD PTR tv2159[ebp], eax
	jmp	SHORT $LN685@term_out
$LN684@term_out:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+428]
	mov	DWORD PTR tv2159[ebp], edx
$LN685@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	push	ecx
	mov	edx, DWORD PTR tv2159[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4232]
	push	ecx
	call	_request_resize
	add	esp, 12					; 0000000cH
$LN149@term_out:
; Line 4105
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_deselect
	add	esp, 4
$LN150@term_out:
; Line 4107
	jmp	$LN336@term_out
$LN148@term_out:
; Line 4111
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 1
	jne	SHORT $LN147@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN336@term_out
$LN147@term_out:
; Line 4113
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+428], 0
	jne	SHORT $LN686@term_out
	mov	DWORD PTR tv2172[ebp], 1
	jmp	SHORT $LN687@term_out
$LN686@term_out:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+428]
	mov	DWORD PTR tv2172[ebp], edx
$LN687@term_out:
	mov	eax, DWORD PTR tv2172[ebp]
	mov	DWORD PTR _n$87560[ebp], eax
; Line 4115
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	mov	DWORD PTR _p$87562[ebp], edx
; Line 4116
	push	1
	push	4116					; 00001014H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_lineptr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _cline$87563[ebp], eax
; Line 4118
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [eax+300]
	sub	edx, DWORD PTR [ecx+112]
	cmp	DWORD PTR _n$87560[ebp], edx
	jle	SHORT $LN146@term_out
; Line 4119
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [eax+300]
	sub	edx, DWORD PTR [ecx+112]
	mov	DWORD PTR _n$87560[ebp], edx
$LN146@term_out:
; Line 4120
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	edx, DWORD PTR [eax+112]
	mov	DWORD PTR _cursplus$87561[ebp], ecx
	mov	DWORD PTR _cursplus$87561[ebp+4], edx
; Line 4121
	mov	eax, DWORD PTR _cursplus$87561[ebp+4]
	add	eax, DWORD PTR _n$87560[ebp]
	mov	DWORD PTR _cursplus$87561[ebp+4], eax
; Line 4122
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_check_boundary
	add	esp, 12					; 0000000cH
; Line 4123
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+112]
	add	eax, DWORD PTR _n$87560[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_check_boundary
	add	esp, 12					; 0000000cH
; Line 4124
	mov	edx, DWORD PTR _cursplus$87561[ebp+4]
	push	edx
	mov	eax, DWORD PTR _cursplus$87561[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	push	edx
	mov	eax, DWORD PTR [ecx+108]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_check_selection
	add	esp, 20					; 00000014H
$LN145@term_out:
; Line 4125
	mov	edx, DWORD PTR _n$87560[ebp]
	mov	DWORD PTR tv2206[ebp], edx
	mov	eax, DWORD PTR _n$87560[ebp]
	sub	eax, 1
	mov	DWORD PTR _n$87560[ebp], eax
	cmp	DWORD PTR tv2206[ebp], 0
	je	SHORT $LN144@term_out
; Line 4127
	mov	ecx, DWORD PTR _p$87562[ebp]
	mov	DWORD PTR tv2211[ebp], ecx
	mov	edx, DWORD PTR _p$87562[ebp]
	add	edx, 1
	mov	DWORD PTR _p$87562[ebp], edx
	mov	eax, DWORD PTR _term$[ebp]
	add	eax, 84					; 00000054H
	push	eax
	mov	ecx, DWORD PTR tv2211[ebp]
	push	ecx
	mov	edx, DWORD PTR _cline$87563[ebp]
	push	edx
	call	_copy_termchar
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN145@term_out
$LN144@term_out:
; Line 4128
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_seen_disp_event
	add	esp, 4
; Line 4130
	jmp	$LN336@term_out
$LN143@term_out:
; Line 4132
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 2
	jne	SHORT $LN142@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
	jmp	$LN336@term_out
$LN142@term_out:
; Line 4133
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4228], 0
	je	$LN141@term_out
; Line 4135
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+428], 0
	jne	SHORT $LN688@term_out
	mov	DWORD PTR tv2225[ebp], 0
	jmp	SHORT $LN689@term_out
$LN688@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+428]
	mov	DWORD PTR tv2225[ebp], ecx
$LN689@term_out:
	mov	edx, DWORD PTR tv2225[ebp]
	mov	DWORD PTR _i$87572[ebp], edx
; Line 4136
	cmp	DWORD PTR _i$87572[ebp], 0
	je	SHORT $LN139@term_out
	cmp	DWORD PTR _i$87572[ebp], 1
	jne	SHORT $LN141@term_out
$LN139@term_out:
; Line 4137
	push	OFFSET $SG87575
	lea	eax, DWORD PTR _buf$87571[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 4138
	movsx	ecx, BYTE PTR _buf$87571[ebp+2]
	add	ecx, DWORD PTR _i$87572[ebp]
	mov	BYTE PTR _buf$87571[ebp+2], cl
; Line 4139
	push	0
	push	20					; 00000014H
	lea	edx, DWORD PTR _buf$87571[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4228]
	push	ecx
	call	_ldisc_send
	add	esp, 16					; 00000010H
$LN141@term_out:
; Line 4142
	jmp	$LN336@term_out
$LN138@term_out:
; Line 4144
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 16384				; 00004000H
	jne	SHORT $LN137@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN336@term_out
$LN137@term_out:
; Line 4146
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+428], 0
	jne	SHORT $LN690@term_out
	mov	DWORD PTR tv2248[ebp], 1
	jmp	SHORT $LN691@term_out
$LN690@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+428]
	mov	DWORD PTR tv2248[ebp], ecx
$LN691@term_out:
	mov	edx, DWORD PTR tv2248[ebp]
	mov	DWORD PTR _i$87578[ebp], edx
; Line 4147
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	edx, DWORD PTR [eax+112]
	mov	DWORD PTR _old_curs$87579[ebp], ecx
	mov	DWORD PTR _old_curs$87579[ebp+4], edx
; Line 4149
	jmp	SHORT $LN136@term_out
$LN135@term_out:
	mov	eax, DWORD PTR _i$87578[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$87578[ebp], eax
$LN136@term_out:
	cmp	DWORD PTR _i$87578[ebp], 0
	jle	SHORT $LN134@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+112], 0
	jle	SHORT $LN134@term_out
$LN133@term_out:
; Line 4151
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+112]
	sub	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+112], eax
; Line 4153
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+112], 0
	jle	SHORT $LN131@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3648]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+112]
	movzx	ecx, BYTE PTR [ecx+eax]
	test	ecx, ecx
	je	SHORT $LN133@term_out
$LN131@term_out:
; Line 4154
	jmp	SHORT $LN135@term_out
$LN134@term_out:
; Line 4155
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+112]
	push	eax
	mov	ecx, DWORD PTR [edx+108]
	push	ecx
	mov	edx, DWORD PTR _old_curs$87579[ebp+4]
	push	edx
	mov	eax, DWORD PTR _old_curs$87579[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_check_selection
	add	esp, 20					; 00000014H
; Line 4157
	jmp	$LN336@term_out
$LN129@term_out:
; Line 4159
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 4096				; 00001000H
	jne	SHORT $LN128@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN336@term_out
$LN128@term_out:
; Line 4160
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+428]
	mov	DWORD PTR tv2275[ebp], eax
	cmp	DWORD PTR tv2275[ebp], 0
	je	SHORT $LN125@term_out
	cmp	DWORD PTR tv2275[ebp], 1
	je	SHORT $LN124@term_out
	cmp	DWORD PTR tv2275[ebp], 2
	je	SHORT $LN123@term_out
	jmp	SHORT $LN126@term_out
$LN125@term_out:
; Line 4162
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+176], 0
; Line 4163
	jmp	SHORT $LN126@term_out
$LN124@term_out:
; Line 4165
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+344], 0
; Line 4166
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+176], 1
; Line 4167
	jmp	SHORT $LN126@term_out
$LN123@term_out:
; Line 4169
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+344], 1
; Line 4170
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+176], 1
$LN126@term_out:
; Line 4173
	jmp	$LN336@term_out
$LN122@term_out:
; Line 4181
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 4096				; 00001000H
	jne	SHORT $LN121@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN336@term_out
$LN121@term_out:
; Line 4182
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+556], 2
	jl	SHORT $LN120@term_out
; Line 4183
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [ecx+428]
	cmp	eax, DWORD PTR [edx+432]
	jle	SHORT $LN119@term_out
; Line 4184
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+176], 0
; Line 4185
	jmp	SHORT $LN120@term_out
$LN119@term_out:
; Line 4186
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+176], 1
$LN120@term_out:
; Line 4188
	jmp	$LN336@term_out
$LN117@term_out:
; Line 4190
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 4096				; 00001000H
	jne	SHORT $LN116@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN336@term_out
$LN116@term_out:
; Line 4191
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+196], 0
; Line 4192
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_schedule_tblink
	add	esp, 4
; Line 4193
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+428], 1
	jl	SHORT $LN115@term_out
; Line 4194
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	or	ecx, 2097152				; 00200000H
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 4195
	jmp	SHORT $LN114@term_out
$LN115@term_out:
; Line 4196
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, -2097153				; ffdfffffH
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+64], ecx
$LN114@term_out:
; Line 4197
	jmp	$LN336@term_out
$LN113@term_out:
; Line 4199
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 4096				; 00001000H
	jne	SHORT $LN112@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN336@term_out
$LN112@term_out:
; Line 4200
	mov	eax, DWORD PTR _term$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+428], 1
	setge	cl
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+196], ecx
; Line 4201
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_term_schedule_tblink
	add	esp, 4
; Line 4202
	jmp	$LN336@term_out
$LN111@term_out:
; Line 4204
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 4096				; 00001000H
	jne	SHORT $LN110@term_out
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
	jmp	$LN336@term_out
$LN110@term_out:
; Line 4205
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+428], 0
	jl	$LN109@term_out
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+428], 16			; 00000010H
	jge	SHORT $LN109@term_out
; Line 4209
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+428]
	and	ecx, 7
	movsx	edx, BYTE PTR _sco2ansicolour[ecx]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+428]
	and	ecx, 8
	or	edx, ecx
	mov	DWORD PTR _colour$87610[ebp], edx
; Line 4210
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, -512				; fffffe00H
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+64], eax
; Line 4211
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+64]
	or	eax, DWORD PTR _colour$87610[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+64], eax
; Line 4212
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+60]
	and	eax, -512				; fffffe00H
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+60], eax
; Line 4213
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+60]
	or	eax, DWORD PTR _colour$87610[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+60], eax
; Line 4214
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_set_erase_char
	add	esp, 4
$LN109@term_out:
; Line 4216
	jmp	$LN336@term_out
$LN108@term_out:
; Line 4218
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 4096				; 00001000H
	jne	SHORT $LN107@term_out
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN336@term_out
$LN107@term_out:
; Line 4219
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+428], 0
	jl	$LN106@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+428], 16			; 00000010H
	jge	SHORT $LN106@term_out
; Line 4223
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+428]
	and	eax, 7
	movsx	ecx, BYTE PTR _sco2ansicolour[eax]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+428]
	and	eax, 8
	or	ecx, eax
	shl	ecx, 9
	mov	DWORD PTR _colour$87614[ebp], ecx
; Line 4224
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	and	edx, -261633				; fffc01ffH
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+64], edx
; Line 4225
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	or	edx, DWORD PTR _colour$87614[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+64], edx
; Line 4226
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	and	edx, -261633				; fffc01ffH
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+60], edx
; Line 4227
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	or	edx, DWORD PTR _colour$87614[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+60], edx
; Line 4228
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_set_erase_char
	add	esp, 4
$LN106@term_out:
; Line 4230
	jmp	$LN336@term_out
$LN105@term_out:
; Line 4232
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 4096				; 00001000H
	jne	SHORT $LN104@term_out
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN336@term_out
$LN104@term_out:
; Line 4233
	mov	edx, DWORD PTR _term$[ebp]
	xor	eax, eax
	cmp	DWORD PTR [edx+428], 0
	setle	al
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+184], eax
; Line 4234
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_set_erase_char
	add	esp, 4
; Line 4235
	jmp	$LN336@term_out
$LN103@term_out:
; Line 4255
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+428]
	mov	DWORD PTR tv2393[ebp], ecx
	cmp	DWORD PTR tv2393[ebp], 62		; 0000003eH
	ja	SHORT $LN98@term_out
	mov	edx, DWORD PTR tv2393[ebp]
	movzx	eax, BYTE PTR $LN709@term_out[edx]
	jmp	DWORD PTR $LN738@term_out[eax*4]
$LN100@term_out:
; Line 4257
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, -512				; fffffe00H
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax], edx
; Line 4258
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	or	edx, 15					; 0000000fH
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax], edx
; Line 4259
	jmp	SHORT $LN101@term_out
$LN99@term_out:
; Line 4261
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, -512				; fffffe00H
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax], edx
; Line 4262
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	or	edx, 31					; 0000001fH
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax], edx
; Line 4263
	jmp	SHORT $LN101@term_out
$LN98@term_out:
; Line 4267
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+428], 60			; 0000003cH
	jle	SHORT $LN97@term_out
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+428], 70			; 00000046H
	jge	SHORT $LN97@term_out
; Line 4268
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	or	ecx, 511				; 000001ffH
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx], ecx
$LN97@term_out:
; Line 4269
	jmp	SHORT $LN101@term_out
$LN96@term_out:
; Line 4272
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 511				; 000001ffH
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 4273
	jmp	SHORT $LN101@term_out
$LN95@term_out:
; Line 4275
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax], 65535			; 0000ffffH
; Line 4276
	jmp	SHORT $LN101@term_out
$LN94@term_out:
; Line 4278
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx], 4097			; 00001001H
; Line 4279
	jmp	SHORT $LN101@term_out
$LN93@term_out:
; Line 4282
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx], 65535			; 0000ffffH
$LN101@term_out:
; Line 4289
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+428], 50			; 00000032H
	jne	$LN336@term_out
; Line 4292
	push	OFFSET $SG87634
	mov	ecx, DWORD PTR _term$[ebp]
	add	ecx, 2624				; 00000a40H
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 4293
	mov	DWORD PTR _i$87632[ebp], 1
	jmp	SHORT $LN90@term_out
$LN89@term_out:
	mov	edx, DWORD PTR _i$87632[ebp]
	add	edx, 1
	mov	DWORD PTR _i$87632[ebp], edx
$LN90@term_out:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _i$87632[ebp]
	cmp	ecx, DWORD PTR [eax+556]
	jge	SHORT $LN88@term_out
; Line 4294
	cmp	DWORD PTR _i$87632[ebp], 1
	je	SHORT $LN87@term_out
; Line 4295
	push	OFFSET $SG87639
	mov	edx, DWORD PTR _term$[ebp]
	add	edx, 2624				; 00000a40H
	push	edx
	call	_strcat
	add	esp, 8
$LN87@term_out:
; Line 4296
	mov	eax, DWORD PTR _i$87632[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+428]
	push	edx
	push	OFFSET $SG87640
	lea	eax, DWORD PTR _lbuf$87633[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 4297
	lea	ecx, DWORD PTR _lbuf$87633[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	add	edx, 2624				; 00000a40H
	push	edx
	call	_strcat
	add	esp, 8
; Line 4298
	jmp	SHORT $LN89@term_out
$LN88@term_out:
; Line 4299
	push	OFFSET $SG87641
	mov	eax, DWORD PTR _term$[ebp]
	add	eax, 2624				; 00000a40H
	push	eax
	call	_strcat
	add	esp, 8
$LN336@term_out:
; Line 4316
	jmp	$LN526@term_out
$LN86@term_out:
; Line 4318
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+2620], 0
; Line 4319
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR tv2483[ebp], edx
	mov	eax, DWORD PTR tv2483[ebp]
	sub	eax, 48					; 00000030H
	mov	DWORD PTR tv2483[ebp], eax
	cmp	DWORD PTR tv2483[ebp], 39		; 00000027H
	ja	$LN77@term_out
	mov	ecx, DWORD PTR tv2483[ebp]
	movzx	edx, BYTE PTR $LN710@term_out[ecx]
	jmp	DWORD PTR $LN739@term_out[edx*4]
$LN83@term_out:
; Line 4321
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 6
; Line 4322
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+564], 0
; Line 4323
	jmp	$LN84@term_out
$LN82@term_out:
; Line 4325
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4232]
	push	eax
	call	_palette_reset
	add	esp, 4
; Line 4326
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_invalidate
	add	esp, 4
; Line 4327
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
; Line 4328
	jmp	SHORT $LN84@term_out
$LN81@term_out:
; Line 4330
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 4
; Line 4331
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+2620], 1
; Line 4332
	jmp	SHORT $LN84@term_out
$LN80@term_out:
; Line 4343
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+428]
	imul	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _c$[ebp]
	lea	edx, DWORD PTR [eax+ecx-48]
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+428], edx
; Line 4344
	jmp	SHORT $LN84@term_out
$LN79@term_out:
; Line 4350
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+428], 2
	jne	SHORT $LN77@term_out
; Line 4351
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+428], 1
; Line 4352
	jmp	SHORT $LN84@term_out
$LN77@term_out:
; Line 4356
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 7
; Line 4357
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+564], 0
$LN84@term_out:
; Line 4359
	jmp	$LN526@term_out
$LN76@term_out:
; Line 4371
	cmp	DWORD PTR _c$[ebp], 10			; 0000000aH
	je	SHORT $LN74@term_out
	cmp	DWORD PTR _c$[ebp], 13			; 0000000dH
	jne	SHORT $LN75@term_out
$LN74@term_out:
; Line 4372
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	SHORT $LN73@term_out
$LN75@term_out:
; Line 4373
	cmp	DWORD PTR _c$[ebp], 156			; 0000009cH
	je	SHORT $LN71@term_out
	cmp	DWORD PTR _c$[ebp], 7
	jne	SHORT $LN72@term_out
$LN71@term_out:
; Line 4381
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_do_osc
	add	esp, 4
; Line 4382
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	SHORT $LN73@term_out
$LN72@term_out:
; Line 4383
	cmp	DWORD PTR _c$[ebp], 27			; 0000001bH
	jne	SHORT $LN69@term_out
; Line 4384
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 8
	jmp	SHORT $LN73@term_out
$LN69@term_out:
; Line 4385
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+564], 2048		; 00000800H
	jge	SHORT $LN73@term_out
; Line 4386
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+564]
	mov	eax, DWORD PTR _term$[ebp]
	mov	cl, BYTE PTR _c$[ebp]
	mov	BYTE PTR [eax+edx+568], cl
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+564]
	add	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+564], eax
$LN73@term_out:
; Line 4387
	jmp	$LN526@term_out
$LN66@term_out:
; Line 4390
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+564]
	neg	eax
	sbb	eax, eax
	and	eax, -6					; fffffffaH
	add	eax, 21					; 00000015H
	mov	DWORD PTR _max$87666[ebp], eax
; Line 4392
	cmp	DWORD PTR _c$[ebp], 48			; 00000030H
	jl	SHORT $LN65@term_out
	cmp	DWORD PTR _c$[ebp], 57			; 00000039H
	jg	SHORT $LN65@term_out
; Line 4393
	mov	ecx, DWORD PTR _c$[ebp]
	sub	ecx, 48					; 00000030H
	mov	DWORD PTR _val$87667[ebp], ecx
	jmp	SHORT $LN64@term_out
$LN65@term_out:
; Line 4394
	cmp	DWORD PTR _c$[ebp], 65			; 00000041H
	jl	SHORT $LN63@term_out
	mov	edx, DWORD PTR _max$87666[ebp]
	add	edx, 55					; 00000037H
	cmp	DWORD PTR _c$[ebp], edx
	jg	SHORT $LN63@term_out
; Line 4395
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, 55					; 00000037H
	mov	DWORD PTR _val$87667[ebp], eax
	jmp	SHORT $LN64@term_out
$LN63@term_out:
; Line 4396
	cmp	DWORD PTR _c$[ebp], 97			; 00000061H
	jl	SHORT $LN61@term_out
	mov	ecx, DWORD PTR _max$87666[ebp]
	add	ecx, 87					; 00000057H
	cmp	DWORD PTR _c$[ebp], ecx
	jg	SHORT $LN61@term_out
; Line 4397
	mov	edx, DWORD PTR _c$[ebp]
	sub	edx, 87					; 00000057H
	mov	DWORD PTR _val$87667[ebp], edx
; Line 4398
	jmp	SHORT $LN64@term_out
$LN61@term_out:
; Line 4399
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
; Line 4400
	jmp	$LN526@term_out
$LN64@term_out:
; Line 4402
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+564]
	mov	eax, DWORD PTR _term$[ebp]
	mov	cl, BYTE PTR _val$87667[ebp]
	mov	BYTE PTR [eax+edx+568], cl
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+564]
	add	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+564], eax
; Line 4403
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+564], 7
	jl	$LN59@term_out
; Line 4407
	mov	eax, DWORD PTR _term$[ebp]
	movsx	ecx, BYTE PTR [eax+573]
	shl	ecx, 4
	mov	edx, DWORD PTR _term$[ebp]
	movsx	eax, BYTE PTR [edx+574]
	add	ecx, eax
	push	ecx
	mov	ecx, DWORD PTR _term$[ebp]
	movsx	edx, BYTE PTR [ecx+571]
	shl	edx, 4
	mov	eax, DWORD PTR _term$[ebp]
	movsx	ecx, BYTE PTR [eax+572]
	add	edx, ecx
	push	edx
	mov	edx, DWORD PTR _term$[ebp]
	movsx	eax, BYTE PTR [edx+569]
	shl	eax, 4
	mov	ecx, DWORD PTR _term$[ebp]
	movsx	edx, BYTE PTR [ecx+570]
	add	eax, edx
	push	eax
	mov	eax, DWORD PTR _term$[ebp]
	movsx	ecx, BYTE PTR [eax+568]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4232]
	push	eax
	call	_palette_set
	add	esp, 20					; 00000014H
; Line 4408
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_invalidate
	add	esp, 4
; Line 4409
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
$LN59@term_out:
; Line 4412
	jmp	$LN526@term_out
$LN58@term_out:
; Line 4414
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR tv2587[ebp], eax
	cmp	DWORD PTR tv2587[ebp], 48		; 00000030H
	jb	SHORT $LN54@term_out
	cmp	DWORD PTR tv2587[ebp], 57		; 00000039H
	jbe	SHORT $LN55@term_out
	jmp	SHORT $LN54@term_out
$LN55@term_out:
; Line 4425
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+428]
	imul	edx, 10					; 0000000aH
	mov	eax, DWORD PTR _c$[ebp]
	lea	ecx, DWORD PTR [edx+eax-48]
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+428], ecx
; Line 4426
	jmp	SHORT $LN56@term_out
$LN54@term_out:
; Line 4428
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 7
; Line 4429
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+564], 0
$LN56@term_out:
; Line 4431
	jmp	$LN526@term_out
$LN53@term_out:
; Line 4433
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
; Line 4434
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_seen_disp_event
	add	esp, 4
; Line 4435
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR tv2601[ebp], ecx
	mov	edx, DWORD PTR tv2601[ebp]
	sub	edx, 60					; 0000003cH
	mov	DWORD PTR tv2601[ebp], edx
	cmp	DWORD PTR tv2601[ebp], 59		; 0000003bH
	ja	$LN51@term_out
	mov	eax, DWORD PTR tv2601[ebp]
	movzx	ecx, BYTE PTR $LN711@term_out[eax]
	jmp	DWORD PTR $LN740@term_out[ecx*4]
$LN50@term_out:
; Line 4437
	push	1
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+108]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_move
	add	esp, 16					; 00000010H
; Line 4438
	jmp	$LN51@term_out
$LN49@term_out:
; Line 4440
	push	1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_move
	add	esp, 16					; 00000010H
; Line 4441
	jmp	$LN51@term_out
$LN48@term_out:
; Line 4443
	push	1
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+112]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_move
	add	esp, 16					; 00000010H
; Line 4444
	jmp	$LN51@term_out
$LN47@term_out:
; Line 4446
	push	1
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	sub	edx, 1
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_move
	add	esp, 16					; 00000010H
; Line 4447
	jmp	$LN51@term_out
$LN46@term_out:
; Line 4489
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+148], 0
	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+edx+368], 55552		; 0000d900H
; Line 4490
	jmp	$LN51@term_out
$LN45@term_out:
; Line 4492
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+148], 0
	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+edx+368], 55296		; 0000d800H
; Line 4493
	jmp	$LN51@term_out
$LN44@term_out:
; Line 4495
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_move
	add	esp, 16					; 00000010H
; Line 4496
	jmp	$LN51@term_out
$LN43@term_out:
; Line 4498
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+108], 0
	jne	SHORT $LN42@term_out
; Line 4499
	push	1
	push	-1
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	sub	ecx, 1
	push	ecx
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_scroll
	add	esp, 20					; 00000014H
	jmp	SHORT $LN41@term_out
$LN42@term_out:
; Line 4500
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+108], 0
	jle	SHORT $LN41@term_out
; Line 4501
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	sub	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+108], edx
$LN41@term_out:
; Line 4502
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+140], 0
; Line 4503
	jmp	$LN51@term_out
$LN39@term_out:
; Line 4505
	push	1
	push	0
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_erase_lots
	add	esp, 16					; 00000010H
; Line 4506
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4452], 0
	je	SHORT $LN38@term_out
; Line 4507
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+16], 0
$LN38@term_out:
; Line 4508
	jmp	$LN51@term_out
$LN37@term_out:
; Line 4510
	push	1
	push	0
	push	1
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_erase_lots
	add	esp, 16					; 00000010H
; Line 4511
	jmp	$LN51@term_out
$LN36@term_out:
; Line 4524
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 10		; 0000000aH
; Line 4525
	jmp	$LN51@term_out
$LN35@term_out:
; Line 4527
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4228], 0
	je	SHORT $LN34@term_out
; Line 4528
	push	0
	push	3
	push	OFFSET $SG87710
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4228]
	push	eax
	call	_ldisc_send
	add	esp, 16					; 00000010H
$LN34@term_out:
; Line 4529
	jmp	$LN51@term_out
$LN33@term_out:
; Line 4531
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+324], 1
; Line 4532
	jmp	$LN51@term_out
$LN32@term_out:
; Line 4534
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+324], 0
; Line 4535
	jmp	$LN51@term_out
$LN31@term_out:
; Line 4541
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+328], 0
; Line 4542
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4356]
	mov	DWORD PTR [ecx+196], eax
; Line 4543
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_schedule_tblink
	add	esp, 4
; Line 4544
	jmp	$LN51@term_out
$LN30@term_out:
; Line 4560
	push	0
	push	0
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_move
	add	esp, 16					; 00000010H
; Line 4561
	push	1
	push	0
	push	0
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_erase_lots
	add	esp, 16					; 00000010H
; Line 4562
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4452], 0
	je	SHORT $LN29@term_out
; Line 4563
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+16], 0
$LN29@term_out:
; Line 4564
	jmp	$LN51@term_out
$LN28@term_out:
; Line 4567
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [eax+108]
	cmp	edx, DWORD PTR [ecx+128]
	jg	SHORT $LN27@term_out
; Line 4568
	push	0
	push	-1
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_scroll
	add	esp, 20					; 00000014H
$LN27@term_out:
; Line 4569
	jmp	$LN51@term_out
$LN26@term_out:
; Line 4572
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [edx+108]
	cmp	ecx, DWORD PTR [eax+128]
	jg	SHORT $LN25@term_out
; Line 4573
	push	1
	push	1
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+128]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_scroll
	add	esp, 20					; 00000014H
$LN25@term_out:
; Line 4574
	jmp	$LN51@term_out
$LN24@term_out:
; Line 4577
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 12		; 0000000cH
; Line 4578
	jmp	$LN51@term_out
$LN23@term_out:
; Line 4581
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 13		; 0000000dH
; Line 4582
	jmp	$LN51@term_out
$LN22@term_out:
; Line 4585
	push	0
	push	1
	push	0
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_erase_lots
	add	esp, 16					; 00000010H
; Line 4586
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4452], 0
	je	SHORT $LN21@term_out
; Line 4587
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+16], 0
$LN21@term_out:
; Line 4588
	jmp	$LN51@term_out
$LN20@term_out:
; Line 4591
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+176], 1
; Line 4592
	jmp	$LN51@term_out
$LN19@term_out:
; Line 4595
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+176], 0
; Line 4596
	jmp	$LN51@term_out
$LN18@term_out:
; Line 4601
	push	1
	push	1
	push	1
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_erase_lots
	add	esp, 16					; 00000010H
; Line 4602
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+112], 0
; Line 4603
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+140], 0
; Line 4604
	jmp	$LN51@term_out
$LN17@term_out:
; Line 4607
	push	0
	push	1
	push	1
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_erase_lots
	add	esp, 16					; 00000010H
; Line 4608
	jmp	$LN51@term_out
$LN16@term_out:
; Line 4611
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	or	ecx, 1048576				; 00100000H
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 4612
	jmp	$LN51@term_out
$LN15@term_out:
; Line 4615
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, -1048577				; ffefffffH
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 4616
	jmp	$LN51@term_out
$LN14@term_out:
; Line 4619
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+136], 1
; Line 4620
	jmp	$LN51@term_out
$LN13@term_out:
; Line 4623
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+136], 0
; Line 4624
	jmp	$LN51@term_out
$LN12@term_out:
; Line 4628
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+216], 0
; Line 4629
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+64], 132352		; 00020500H
; Line 4630
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_set_erase_char
	add	esp, 4
; Line 4631
	jmp	SHORT $LN51@term_out
$LN11@term_out:
; Line 4634
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+64]
	or	eax, 524288				; 00080000H
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+64], eax
; Line 4635
	jmp	SHORT $LN51@term_out
$LN10@term_out:
; Line 4638
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, -524289				; fff7ffffH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+64], eax
; Line 4639
	jmp	SHORT $LN51@term_out
$LN9@term_out:
; Line 4642
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+216], 1
; Line 4643
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	or	ecx, 262144				; 00040000H
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 4644
	jmp	SHORT $LN51@term_out
$LN8@term_out:
; Line 4647
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+216], 0
; Line 4648
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	and	edx, -262145				; fffbffffH
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+64], edx
$LN51@term_out:
; Line 4652
	jmp	$LN526@term_out
$LN7@term_out:
; Line 4654
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 11		; 0000000bH
; Line 4655
	push	0
	mov	edx, DWORD PTR _c$[ebp]
	sub	edx, 32					; 00000020H
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_move
	add	esp, 16					; 00000010H
; Line 4656
	jmp	$LN526@term_out
$LN6@term_out:
; Line 4658
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
; Line 4659
	push	0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_move
	add	esp, 16					; 00000010H
; Line 4660
	jmp	$LN526@term_out
$LN5@term_out:
; Line 4664
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
; Line 4665
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, -512				; fffffe00H
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 4666
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, -262145				; fffbffffH
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 4667
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _term$[ebp]
	or	eax, DWORD PTR [ecx+64]
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+64], eax
; Line 4668
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_set_erase_char
	add	esp, 4
; Line 4669
	jmp	SHORT $LN526@term_out
$LN4@term_out:
; Line 4671
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
; Line 4672
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, -261633				; fffc01ffH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+64], eax
; Line 4673
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, -2097153				; ffdfffffH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+64], eax
; Line 4674
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 15					; 0000000fH
	shl	edx, 9
	mov	eax, DWORD PTR _term$[ebp]
	or	edx, DWORD PTR [eax+64]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+64], edx
; Line 4675
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_set_erase_char
	add	esp, 4
$LN526@term_out:
; Line 4680
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+3656], 0
	je	$LN2@term_out
; Line 4681
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	eax, DWORD PTR [ecx+112]
	mov	DWORD PTR _cursplus$87743[ebp], edx
	mov	DWORD PTR _cursplus$87743[ebp+4], eax
; Line 4682
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _cursplus$87743[ebp+4]
	cmp	edx, DWORD PTR [ecx+300]
	jne	SHORT $LN696@term_out
	mov	DWORD PTR _cursplus$87743[ebp+4], 0
	mov	eax, DWORD PTR _cursplus$87743[ebp]
	add	eax, 1
	mov	DWORD PTR _cursplus$87743[ebp], eax
	mov	DWORD PTR tv2810[ebp], 1
	jmp	SHORT $LN697@term_out
$LN696@term_out:
	mov	ecx, DWORD PTR _cursplus$87743[ebp+4]
	add	ecx, 1
	mov	DWORD PTR _cursplus$87743[ebp+4], ecx
	mov	DWORD PTR tv2810[ebp], 0
$LN697@term_out:
; Line 4683
	mov	edx, DWORD PTR _cursplus$87743[ebp+4]
	push	edx
	mov	eax, DWORD PTR _cursplus$87743[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	push	edx
	mov	eax, DWORD PTR [ecx+108]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_check_selection
	add	esp, 20					; 00000014H
$LN2@term_out:
; Line 4685
	jmp	$LN606@term_out
$LN605@term_out:
; Line 4687
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_term_print_flush
	add	esp, 4
; Line 4688
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4388], 0
	je	SHORT $LN607@term_out
; Line 4689
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4236]
	push	edx
	call	_logflush
	add	esp, 4
$LN607@term_out:
; Line 4690
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN730@term_out
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1048				; 00000418H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN730@term_out:
	DD	17					; 00000011H
	DD	$LN729@term_out
$LN729@term_out:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN712@term_out
	DD	-280					; fffffee8H
	DD	256					; 00000100H
	DD	$LN713@term_out
	DD	-296					; fffffed8H
	DD	4
	DD	$LN714@term_out
	DD	-308					; fffffeccH
	DD	4
	DD	$LN715@term_out
	DD	-336					; fffffeb0H
	DD	8
	DD	$LN716@term_out
	DD	-364					; fffffe94H
	DD	8
	DD	$LN717@term_out
	DD	-396					; fffffe74H
	DD	8
	DD	$LN718@term_out
	DD	-412					; fffffe64H
	DD	8
	DD	$LN719@term_out
	DD	-468					; fffffe2cH
	DD	32					; 00000020H
	DD	$LN720@term_out
	DD	-508					; fffffe04H
	DD	4
	DD	$LN721@term_out
	DD	-520					; fffffdf8H
	DD	4
	DD	$LN722@term_out
	DD	-612					; fffffd9cH
	DD	80					; 00000050H
	DD	$LN723@term_out
	DD	-636					; fffffd84H
	DD	8
	DD	$LN724@term_out
	DD	-684					; fffffd54H
	DD	32					; 00000020H
	DD	$LN725@term_out
	DD	-708					; fffffd3cH
	DD	8
	DD	$LN726@term_out
	DD	-792					; fffffce8H
	DD	64					; 00000040H
	DD	$LN727@term_out
	DD	-816					; fffffcd0H
	DD	8
	DD	$LN728@term_out
$LN728@term_out:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN727@term_out:
	DB	108					; 0000006cH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN726@term_out:
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	0
$LN725@term_out:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN724@term_out:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN723@term_out:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN722@term_out:
	DB	121					; 00000079H
	DB	0
$LN721@term_out:
	DB	120					; 00000078H
	DB	0
$LN720@term_out:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN719@term_out:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	98					; 00000062H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	0
$LN718@term_out:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
$LN717@term_out:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN716@term_out:
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	0
$LN715@term_out:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN714@term_out:
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	0
$LN713@term_out:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN712@term_out:
	DB	99					; 00000063H
	DB	0
	npad	2
$LN731@term_out:
	DD	$LN522@term_out
	DD	$LN519@term_out
	DD	$LN506@term_out
	DD	$LN473@term_out
	DD	$LN479@term_out
	DD	$LN481@term_out
	DD	$LN484@term_out
	DD	$LN490@term_out
	DD	$LN498@term_out
	DD	$LN496@term_out
	DD	$LN494@term_out
	DD	$LN523@term_out
$LN705@term_out:
	DB	0
	DB	11					; 0000000bH
	DB	1
	DB	2
	DB	3
	DB	4
	DB	5
	DB	6
	DB	7
	DB	8
	DB	9
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	10					; 0000000aH
	npad	1
$LN732@term_out:
	DD	$LN461@term_out
	DD	$LN430@term_out
	DD	$LN340@term_out
	DD	$LN86@term_out
	DD	$LN58@term_out
	DD	$LN526@term_out
	DD	$LN66@term_out
	DD	$LN76@term_out
	DD	$LN432@term_out
	DD	$LN53@term_out
	DD	$LN7@term_out
	DD	$LN6@term_out
	DD	$LN5@term_out
	DD	$LN4@term_out
$LN733@term_out:
	DD	$LN421@term_out
	DD	$LN419@term_out
	DD	$LN417@term_out
	DD	$LN415@term_out
	DD	$LN413@term_out
	DD	$LN408@term_out
	DD	$LN389@term_out
	DD	$LN403@term_out
	DD	$LN398@term_out
	DD	$LN424@term_out
	DD	$LN423@term_out
	DD	$LN395@term_out
	DD	$LN425@term_out
$LN706@term_out:
	DB	0
	DB	1
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	2
	DB	3
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	4
	DB	5
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	6
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	7
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	8
	DB	9
	DB	12					; 0000000cH
	DB	10					; 0000000aH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	11					; 0000000bH
	npad	3
$LN734@term_out:
	DD	$LN290@term_out
	DD	$LN324@term_out
	DD	$LN321@term_out
	DD	$LN315@term_out
	DD	$LN314@term_out
	DD	$LN313@term_out
	DD	$LN311@term_out
	DD	$LN309@term_out
	DD	$LN305@term_out
	DD	$LN303@term_out
	DD	$LN298@term_out
	DD	$LN296@term_out
	DD	$LN293@term_out
	DD	$LN288@term_out
	DD	$LN160@term_out
	DD	$LN158@term_out
	DD	$LN148@term_out
	DD	$LN138@term_out
	DD	$LN317@term_out
	DD	$LN286@term_out
	DD	$LN307@term_out
	DD	$LN323@term_out
	DD	$LN262@term_out
	DD	$LN278@term_out
	DD	$LN273@term_out
	DD	$LN267@term_out
	DD	$LN248@term_out
	DD	$LN283@term_out
	DD	$LN253@term_out
	DD	$LN203@term_out
	DD	$LN201@term_out
	DD	$LN202@term_out
	DD	$LN143@term_out
	DD	$LN336@term_out
$LN707@term_out:
	DB	0
	DB	1
	DB	2
	DB	3
	DB	4
	DB	5
	DB	6
	DB	7
	DB	8
	DB	33					; 00000021H
	DB	9
	DB	10					; 0000000aH
	DB	11					; 0000000bH
	DB	12					; 0000000cH
	DB	33					; 00000021H
	DB	33					; 00000021H
	DB	13					; 0000000dH
	DB	33					; 00000021H
	DB	33					; 00000021H
	DB	14					; 0000000eH
	DB	15					; 0000000fH
	DB	33					; 00000021H
	DB	33					; 00000021H
	DB	33					; 00000021H
	DB	16					; 00000010H
	DB	33					; 00000021H
	DB	17					; 00000011H
	DB	33					; 00000021H
	DB	33					; 00000021H
	DB	33					; 00000021H
	DB	33					; 00000021H
	DB	33					; 00000021H
	DB	7
	DB	18					; 00000012H
	DB	33					; 00000021H
	DB	19					; 00000013H
	DB	20					; 00000014H
	DB	21					; 00000015H
	DB	8
	DB	22					; 00000016H
	DB	23					; 00000017H
	DB	24					; 00000018H
	DB	33					; 00000021H
	DB	33					; 00000021H
	DB	25					; 00000019H
	DB	26					; 0000001aH
	DB	27					; 0000001bH
	DB	33					; 00000021H
	DB	33					; 00000021H
	DB	33					; 00000021H
	DB	28					; 0000001cH
	DB	29					; 0000001dH
	DB	30					; 0000001eH
	DB	31					; 0000001fH
	DB	33					; 00000021H
	DB	33					; 00000021H
	DB	32					; 00000020H
	npad	3
$LN735@term_out:
	DD	$LN117@term_out
	DD	$LN113@term_out
	DD	$LN111@term_out
	DD	$LN108@term_out
$LN736@term_out:
	DD	$LN242@term_out
	DD	$LN241@term_out
	DD	$LN237@term_out
	DD	$LN235@term_out
	DD	$LN233@term_out
	DD	$LN231@term_out
	DD	$LN230@term_out
	DD	$LN227@term_out
	DD	$LN224@term_out
	DD	$LN239@term_out
	DD	$LN221@term_out
	DD	$LN219@term_out
	DD	$LN217@term_out
	DD	$LN215@term_out
	DD	$LN213@term_out
	DD	$LN207@term_out
	DD	$LN211@term_out
	DD	$LN210@term_out
	DD	$LN205@term_out
	DD	$LN208@term_out
	DD	$LN212@term_out
	DD	$LN209@term_out
	DD	$LN243@term_out
$LN708@term_out:
	DB	0
	DB	1
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	2
	DB	3
	DB	4
	DB	5
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	6
	DB	7
	DB	8
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	9
	DB	10					; 0000000aH
	DB	22					; 00000016H
	DB	11					; 0000000bH
	DB	12					; 0000000cH
	DB	22					; 00000016H
	DB	13					; 0000000dH
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	15					; 0000000fH
	DB	16					; 00000010H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	18					; 00000012H
	DB	19					; 00000013H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	22					; 00000016H
	DB	22					; 00000016H
	DB	21					; 00000015H
	DB	21					; 00000015H
	DB	21					; 00000015H
	DB	21					; 00000015H
	DB	21					; 00000015H
	DB	21					; 00000015H
	DB	21					; 00000015H
	DB	21					; 00000015H
$LN737@term_out:
	DD	$LN191@term_out
	DD	$LN190@term_out
	DD	$LN189@term_out
	DD	$LN196@term_out
	DD	$LN185@term_out
	DD	$LN184@term_out
	DD	$LN183@term_out
	DD	$LN182@term_out
	DD	$LN179@term_out
	DD	$LN196@term_out
	DD	$LN177@term_out
	DD	$LN196@term_out
	DD	$LN175@term_out
	DD	$LN173@term_out
	DD	$LN196@term_out
	DD	$LN196@term_out
	DD	$LN196@term_out
	DD	$LN171@term_out
	DD	$LN196@term_out
	DD	$LN168@term_out
	DD	$LN164@term_out
$LN738@term_out:
	DD	$LN93@term_out
	DD	$LN96@term_out
	DD	$LN95@term_out
	DD	$LN94@term_out
	DD	$LN101@term_out
	DD	$LN100@term_out
	DD	$LN99@term_out
	DD	$LN98@term_out
$LN709@term_out:
	DB	0
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	1
	DB	2
	DB	3
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	4
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	5
	DB	6
	npad	1
$LN739@term_out:
	DD	$LN80@term_out
	DD	$LN79@term_out
	DD	$LN83@term_out
	DD	$LN82@term_out
	DD	$LN81@term_out
	DD	$LN77@term_out
$LN710@term_out:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	1
	DB	5
	DB	5
	DB	5
	DB	2
	DB	5
	DB	3
	DB	5
	DB	5
	DB	5
	DB	5
	DB	4
$LN740@term_out:
	DD	$LN31@term_out
	DD	$LN33@term_out
	DD	$LN32@term_out
	DD	$LN50@term_out
	DD	$LN49@term_out
	DD	$LN48@term_out
	DD	$LN47@term_out
	DD	$LN30@term_out
	DD	$LN46@term_out
	DD	$LN45@term_out
	DD	$LN44@term_out
	DD	$LN43@term_out
	DD	$LN39@term_out
	DD	$LN37@term_out
	DD	$LN28@term_out
	DD	$LN26@term_out
	DD	$LN12@term_out
	DD	$LN11@term_out
	DD	$LN8@term_out
	DD	$LN9@term_out
	DD	$LN10@term_out
	DD	$LN36@term_out
	DD	$LN35@term_out
	DD	$LN24@term_out
	DD	$LN23@term_out
	DD	$LN22@term_out
	DD	$LN20@term_out
	DD	$LN19@term_out
	DD	$LN18@term_out
	DD	$LN17@term_out
	DD	$LN16@term_out
	DD	$LN15@term_out
	DD	$LN14@term_out
	DD	$LN13@term_out
	DD	$LN51@term_out
$LN711@term_out:
	DB	0
	DB	1
	DB	2
	DB	34					; 00000022H
	DB	34					; 00000022H
	DB	3
	DB	4
	DB	5
	DB	6
	DB	7
	DB	8
	DB	9
	DB	10					; 0000000aH
	DB	11					; 0000000bH
	DB	12					; 0000000cH
	DB	13					; 0000000dH
	DB	14					; 0000000eH
	DB	15					; 0000000fH
	DB	34					; 00000022H
	DB	34					; 00000022H
	DB	34					; 00000022H
	DB	34					; 00000022H
	DB	16					; 00000010H
	DB	17					; 00000011H
	DB	18					; 00000012H
	DB	19					; 00000013H
	DB	34					; 00000022H
	DB	20					; 00000014H
	DB	34					; 00000022H
	DB	21					; 00000015H
	DB	22					; 00000016H
	DB	34					; 00000022H
	DB	34					; 00000022H
	DB	34					; 00000022H
	DB	34					; 00000022H
	DB	34					; 00000022H
	DB	34					; 00000022H
	DB	34					; 00000022H
	DB	23					; 00000017H
	DB	24					; 00000018H
	DB	25					; 00000019H
	DB	26					; 0000001aH
	DB	27					; 0000001bH
	DB	34					; 00000022H
	DB	34					; 00000022H
	DB	34					; 00000022H
	DB	34					; 00000022H
	DB	34					; 00000022H
	DB	28					; 0000001cH
	DB	34					; 00000022H
	DB	34					; 00000022H
	DB	29					; 0000001dH
	DB	30					; 0000001eH
	DB	31					; 0000001fH
	DB	34					; 00000022H
	DB	34					; 00000022H
	DB	34					; 00000022H
	DB	34					; 00000022H
	DB	32					; 00000020H
	DB	33					; 00000021H
_term_out ENDP
; Function compile flags: /Odtp /RTCsu
_ticks_already_gone$ = -4				; size = 4
_term$ = 8						; size = 4
_already_started$ = 12					; size = 4
_startpoint$ = 16					; size = 4
_term_schedule_vbell PROC
; Line 1196
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1199
	cmp	DWORD PTR _already_started$[ebp], 0
	je	SHORT $LN4@term_sched@4
; Line 1200
	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _startpoint$[ebp]
	mov	DWORD PTR _ticks_already_gone$[ebp], eax
; Line 1201
	jmp	SHORT $LN3@term_sched@4
$LN4@term_sched@4:
; Line 1202
	mov	DWORD PTR _ticks_already_gone$[ebp], 0
$LN3@term_sched@4:
; Line 1204
	cmp	DWORD PTR _ticks_already_gone$[ebp], 100 ; 00000064H
	jge	SHORT $LN2@term_sched@4
; Line 1205
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+312], 1
; Line 1207
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	push	OFFSET _term_timer
	mov	edx, 100				; 00000064H
	sub	edx, DWORD PTR _ticks_already_gone$[ebp]
	push	edx
	call	_schedule_timer
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+316], eax
; Line 1208
	jmp	SHORT $LN5@term_sched@4
$LN2@term_sched@4:
; Line 1209
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+312], 0
$LN5@term_sched@4:
; Line 1211
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_term_schedule_vbell ENDP
; Function compile flags: /Odtp /RTCsu
_term$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_marg_clip$ = 20					; size = 4
_move	PROC
; Line 2263
	push	ebp
	mov	ebp, esp
; Line 2264
	cmp	DWORD PTR _x$[ebp], 0
	jge	SHORT $LN9@move
; Line 2265
	mov	DWORD PTR _x$[ebp], 0
$LN9@move:
; Line 2266
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	cmp	ecx, DWORD PTR [eax+300]
	jl	SHORT $LN8@move
; Line 2267
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+300]
	sub	eax, 1
	mov	DWORD PTR _x$[ebp], eax
$LN8@move:
; Line 2268
	cmp	DWORD PTR _marg_clip$[ebp], 0
	je	SHORT $LN7@move
; Line 2270
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [ecx+108]
	cmp	eax, DWORD PTR [edx+124]
	jge	SHORT $LN5@move
	cmp	DWORD PTR _marg_clip$[ebp], 2
	jne	SHORT $LN6@move
$LN5@move:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _y$[ebp]
	cmp	edx, DWORD PTR [ecx+124]
	jge	SHORT $LN6@move
; Line 2271
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR _y$[ebp], ecx
$LN6@move:
; Line 2273
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [edx+108]
	cmp	ecx, DWORD PTR [eax+128]
	jle	SHORT $LN3@move
	cmp	DWORD PTR _marg_clip$[ebp], 2
	jne	SHORT $LN7@move
$LN3@move:
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR [edx+128]
	jle	SHORT $LN7@move
; Line 2274
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	mov	DWORD PTR _y$[ebp], edx
$LN7@move:
; Line 2276
	cmp	DWORD PTR _y$[ebp], 0
	jge	SHORT $LN2@move
; Line 2277
	mov	DWORD PTR _y$[ebp], 0
$LN2@move:
; Line 2278
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	cmp	ecx, DWORD PTR [eax+296]
	jl	SHORT $LN1@move
; Line 2279
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+296]
	sub	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN1@move:
; Line 2280
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [ecx+112], edx
; Line 2281
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	mov	DWORD PTR [eax+108], ecx
; Line 2282
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+140], 0
; Line 2283
	pop	ebp
	ret	0
_move	ENDP
; Function compile flags: /Odtp /RTCsu
_term$ = 8						; size = 4
_save$ = 12						; size = 4
_save_cursor PROC
; Line 2289
	push	ebp
	mov	ebp, esp
; Line 2290
	cmp	DWORD PTR _save$[ebp], 0
	je	$LN5@save_curso
; Line 2291
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	edx, DWORD PTR [eax+112]
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+116], ecx
	mov	DWORD PTR [eax+120], edx
; Line 2292
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+64]
	mov	DWORD PTR [ecx+68], eax
; Line 2293
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+148]
	mov	DWORD PTR [ecx+152], eax
; Line 2294
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+220]
	mov	DWORD PTR [ecx+160], eax
; Line 2295
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+140]
	mov	DWORD PTR [ecx+164], eax
; Line 2296
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+148]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+edx*4+368]
	mov	DWORD PTR [eax+156], edx
; Line 2297
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+208]
	mov	DWORD PTR [eax+212], edx
; Line 2298
	jmp	$LN6@save_curso
$LN5@save_curso:
; Line 2299
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	edx, DWORD PTR [eax+120]
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+108], ecx
	mov	DWORD PTR [eax+112], edx
; Line 2301
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [ecx+112]
	cmp	eax, DWORD PTR [edx+300]
	jl	SHORT $LN3@save_curso
; Line 2302
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+300]
	sub	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+112], edx
$LN3@save_curso:
; Line 2303
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [ecx+108]
	cmp	eax, DWORD PTR [edx+296]
	jl	SHORT $LN2@save_curso
; Line 2304
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+296]
	sub	edx, 1
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+108], edx
$LN2@save_curso:
; Line 2306
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+68]
	mov	DWORD PTR [ecx+64], eax
; Line 2307
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+152]
	mov	DWORD PTR [ecx+148], eax
; Line 2308
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+160]
	mov	DWORD PTR [ecx+220], eax
; Line 2309
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+164]
	mov	DWORD PTR [ecx+140], eax
; Line 2314
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+140], 0
	je	SHORT $LN1@save_curso
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+300]
	sub	eax, 1
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+112], eax
	jge	SHORT $LN1@save_curso
; Line 2315
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+140], 0
$LN1@save_curso:
; Line 2316
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [eax+156]
	mov	DWORD PTR [edx+ecx*4+368], eax
; Line 2317
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+212]
	mov	DWORD PTR [ecx+208], eax
; Line 2318
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_set_erase_char
	add	esp, 4
$LN6@save_curso:
; Line 2320
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_save_cursor ENDP
; Function compile flags: /Odtp /RTCsu
tv253 = -84						; size = 4
tv233 = -80						; size = 4
tv229 = -76						; size = 4
tv222 = -72						; size = 4
tv68 = -68						; size = 4
_okend$86848 = -60					; size = 8
_okstart$86847 = -44					; size = 8
_ldata$ = -32						; size = 4
_eol$ = -24						; size = 8
_j$ = -12						; size = 4
_m$ = -8						; size = 4
_dir$ = -4						; size = 4
_term$ = 8						; size = 4
_n$ = 12						; size = 4
_insch	PROC
; Line 2448
	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	edi
	lea	edi, DWORD PTR [ebp-84]
	mov	ecx, 21					; 00000015H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2449
	xor	eax, eax
	cmp	DWORD PTR _n$[ebp], 0
	setge	al
	lea	eax, DWORD PTR [eax+eax-1]
	mov	DWORD PTR _dir$[ebp], eax
; Line 2454
	cmp	DWORD PTR _n$[ebp], 0
	jge	SHORT $LN25@insch
	mov	ecx, DWORD PTR _n$[ebp]
	neg	ecx
	mov	DWORD PTR tv68[ebp], ecx
	jmp	SHORT $LN26@insch
$LN25@insch:
	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR tv68[ebp], edx
$LN26@insch:
	mov	eax, DWORD PTR tv68[ebp]
	mov	DWORD PTR _n$[ebp], eax
; Line 2455
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [ecx+300]
	sub	eax, DWORD PTR [edx+112]
	cmp	DWORD PTR _n$[ebp], eax
	jle	SHORT $LN22@insch
; Line 2456
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [ecx+300]
	sub	eax, DWORD PTR [edx+112]
	mov	DWORD PTR _n$[ebp], eax
$LN22@insch:
; Line 2457
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [ecx+300]
	sub	eax, DWORD PTR [edx+112]
	sub	eax, DWORD PTR _n$[ebp]
	mov	DWORD PTR _m$[ebp], eax
; Line 2467
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR _eol$[ebp], edx
; Line 2468
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	mov	DWORD PTR _eol$[ebp+4], ecx
; Line 2469
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [edx+108]
	cmp	ecx, DWORD PTR [eax+3676]
	jl	SHORT $LN20@insch
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [edx+108]
	cmp	ecx, DWORD PTR [eax+3676]
	jne	$LN21@insch
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [edx+112]
	cmp	ecx, DWORD PTR [eax+3680]
	jge	$LN21@insch
$LN20@insch:
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3668]
	cmp	eax, DWORD PTR _eol$[ebp]
	jl	SHORT $LN19@insch
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3668]
	cmp	edx, DWORD PTR _eol$[ebp]
	jne	$LN21@insch
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3672]
	cmp	ecx, DWORD PTR _eol$[ebp+4]
	jge	$LN21@insch
$LN19@insch:
; Line 2470
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	ecx, DWORD PTR [edx+112]
	mov	DWORD PTR _okstart$86847[ebp], eax
	mov	DWORD PTR _okstart$86847[ebp+4], ecx
; Line 2471
	mov	edx, DWORD PTR _eol$[ebp]
	mov	DWORD PTR _okend$86848[ebp], edx
	mov	eax, DWORD PTR _eol$[ebp+4]
	mov	DWORD PTR _okend$86848[ebp+4], eax
; Line 2472
	cmp	DWORD PTR _dir$[ebp], 0
	jle	SHORT $LN18@insch
; Line 2474
	mov	ecx, DWORD PTR _okend$86848[ebp+4]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR _okend$86848[ebp+4], ecx
; Line 2475
	jmp	SHORT $LN17@insch
$LN18@insch:
; Line 2477
	mov	edx, DWORD PTR _okstart$86847[ebp+4]
	add	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR _okstart$86847[ebp+4], edx
$LN17@insch:
; Line 2479
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _okstart$86847[ebp]
	cmp	ecx, DWORD PTR [eax+3668]
	jl	SHORT $LN15@insch
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _okstart$86847[ebp]
	cmp	eax, DWORD PTR [edx+3668]
	jne	$LN16@insch
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _okstart$86847[ebp+4]
	cmp	edx, DWORD PTR [ecx+3672]
	jg	$LN16@insch
$LN15@insch:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3676]
	cmp	ecx, DWORD PTR _okend$86848[ebp]
	jl	SHORT $LN14@insch
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+3676]
	cmp	eax, DWORD PTR _okend$86848[ebp]
	jne	$LN16@insch
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3680]
	cmp	edx, DWORD PTR _okend$86848[ebp+4]
	jg	$LN16@insch
$LN14@insch:
; Line 2483
	mov	eax, DWORD PTR _dir$[ebp]
	imul	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	add	eax, DWORD PTR [ecx+3672]
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3672], eax
; Line 2484
	mov	eax, DWORD PTR _dir$[ebp]
	imul	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	add	eax, DWORD PTR [ecx+3680]
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3680], eax
; Line 2485
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [eax+3672]
	cmp	edx, DWORD PTR [ecx+112]
	jge	SHORT $LN27@insch
	push	2485					; 000009b5H
	push	OFFSET $SG86855
	push	OFFSET $SG86856
	call	__wassert
	add	esp, 12					; 0000000cH
$LN27@insch:
; Line 2486
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [ecx+3672]
	cmp	eax, DWORD PTR [edx+300]
	jl	SHORT $LN28@insch
	push	2486					; 000009b6H
	push	OFFSET $SG86858
	push	OFFSET $SG86859
	call	__wassert
	add	esp, 12					; 0000000cH
$LN28@insch:
; Line 2487
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [edx+3680]
	cmp	ecx, DWORD PTR [eax+112]
	jg	SHORT $LN29@insch
	push	2487					; 000009b7H
	push	OFFSET $SG86861
	push	OFFSET $SG86862
	call	__wassert
	add	esp, 12					; 0000000cH
$LN29@insch:
; Line 2488
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [eax+3680]
	cmp	edx, DWORD PTR [ecx+300]
	jle	SHORT $LN30@insch
	push	2488					; 000009b8H
	push	OFFSET $SG86864
	push	OFFSET $SG86865
	call	__wassert
	add	esp, 12					; 0000000cH
$LN30@insch:
; Line 2489
	jmp	SHORT $LN21@insch
$LN16@insch:
; Line 2492
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_deselect
	add	esp, 4
$LN21@insch:
; Line 2496
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_check_boundary
	add	esp, 12					; 0000000cH
; Line 2497
	cmp	DWORD PTR _dir$[ebp], 0
	jge	SHORT $LN12@insch
; Line 2498
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	add	ecx, DWORD PTR _n$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_check_boundary
	add	esp, 12					; 0000000cH
$LN12@insch:
; Line 2499
	push	1
	push	2499					; 000009c3H
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_lineptr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ldata$[ebp], eax
; Line 2500
	cmp	DWORD PTR _dir$[ebp], 0
	jge	$LN11@insch
; Line 2501
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN10@insch
$LN9@insch:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN10@insch:
	mov	ecx, DWORD PTR _j$[ebp]
	cmp	ecx, DWORD PTR _m$[ebp]
	jge	SHORT $LN7@insch
; Line 2504
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+112]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _ldata$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	add	edx, eax
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	add	edx, eax
	mov	ecx, DWORD PTR _n$[ebp]
	imul	ecx, 12					; 0000000cH
	add	edx, ecx
	push	edx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+112]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _ldata$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	add	edx, eax
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	add	edx, eax
	push	edx
	mov	ecx, DWORD PTR _ldata$[ebp]
	push	ecx
	call	_move_termchar
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN9@insch
$LN7@insch:
; Line 2505
	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR tv222[ebp], edx
	mov	eax, DWORD PTR _n$[ebp]
	sub	eax, 1
	mov	DWORD PTR _n$[ebp], eax
	cmp	DWORD PTR tv222[ebp], 0
	je	SHORT $LN6@insch
; Line 2506
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	add	edx, DWORD PTR _m$[ebp]
	mov	DWORD PTR tv229[ebp], edx
	mov	eax, DWORD PTR _m$[ebp]
	add	eax, 1
	mov	DWORD PTR _m$[ebp], eax
	mov	ecx, DWORD PTR _term$[ebp]
	add	ecx, 84					; 00000054H
	push	ecx
	mov	edx, DWORD PTR tv229[ebp]
	push	edx
	mov	eax, DWORD PTR _ldata$[ebp]
	push	eax
	call	_copy_termchar
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN7@insch
$LN6@insch:
; Line 2507
	jmp	$LN23@insch
$LN11@insch:
; Line 2508
	mov	ecx, DWORD PTR _m$[ebp]
	mov	DWORD PTR _j$[ebp], ecx
$LN4@insch:
	mov	edx, DWORD PTR _j$[ebp]
	mov	DWORD PTR tv233[ebp], edx
	mov	eax, DWORD PTR _j$[ebp]
	sub	eax, 1
	mov	DWORD PTR _j$[ebp], eax
	cmp	DWORD PTR tv233[ebp], 0
	je	SHORT $LN2@insch
; Line 2511
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _ldata$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, edx
	mov	edx, DWORD PTR _j$[ebp]
	imul	edx, 12					; 0000000cH
	add	ecx, edx
	push	ecx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _ldata$[ebp]
	mov	eax, DWORD PTR [edx+20]
	add	eax, ecx
	mov	ecx, DWORD PTR _j$[ebp]
	imul	ecx, 12					; 0000000cH
	add	eax, ecx
	mov	edx, DWORD PTR _n$[ebp]
	imul	edx, 12					; 0000000cH
	add	eax, edx
	push	eax
	mov	eax, DWORD PTR _ldata$[ebp]
	push	eax
	call	_move_termchar
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN4@insch
$LN2@insch:
; Line 2512
	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR tv253[ebp], ecx
	mov	edx, DWORD PTR _n$[ebp]
	sub	edx, 1
	mov	DWORD PTR _n$[ebp], edx
	cmp	DWORD PTR tv253[ebp], 0
	je	SHORT $LN23@insch
; Line 2513
	mov	eax, DWORD PTR _term$[ebp]
	add	eax, 84					; 00000054H
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	add	edx, DWORD PTR _n$[ebp]
	push	edx
	mov	eax, DWORD PTR _ldata$[ebp]
	push	eax
	call	_copy_termchar
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN2@insch
$LN23@insch:
; Line 2515
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN35@insch
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 84					; 00000054H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN35@insch:
	DD	3
	DD	$LN34@insch
$LN34@insch:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN31@insch
	DD	-44					; ffffffd4H
	DD	8
	DD	$LN32@insch
	DD	-60					; ffffffc4H
	DD	8
	DD	$LN33@insch
$LN33@insch:
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN32@insch:
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN31@insch:
	DB	101					; 00000065H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	0
_insch	ENDP
; Function compile flags: /Odtp /RTCsu
_line$ = 8						; size = 4
_dest$ = 12						; size = 4
_src$ = 16						; size = 4
_move_termchar PROC
; Line 330
	push	ebp
	mov	ebp, esp
; Line 332
	mov	eax, DWORD PTR _line$[ebp]
	mov	ecx, DWORD PTR _dest$[ebp]
	sub	ecx, DWORD PTR [eax+20]
	mov	eax, ecx
	cdq
	mov	ecx, 12					; 0000000cH
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_clear_cc
	add	esp, 8
; Line 335
	mov	eax, DWORD PTR _src$[ebp]
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
; Line 336
	mov	ecx, DWORD PTR _src$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	je	SHORT $LN1@move_termc
; Line 337
	mov	eax, DWORD PTR _dest$[ebp]
	sub	eax, DWORD PTR _src$[ebp]
	cdq
	mov	ecx, 12					; 0000000cH
	idiv	ecx
	mov	edx, DWORD PTR _src$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, eax
	mov	edx, DWORD PTR _dest$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@move_termc:
; Line 340
	mov	eax, DWORD PTR _src$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 345
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_move_termchar ENDP
; Function compile flags: /Odtp /RTCsu
tv259 = -12						; size = 4
tv93 = -8						; size = 4
tv65 = -4						; size = 4
_term$ = 8						; size = 4
_mode$ = 12						; size = 4
_query$ = 16						; size = 4
_state$ = 20						; size = 4
_toggle_mode PROC
; Line 2522
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2523
	cmp	DWORD PTR _query$[ebp], 0
	je	$LN50@toggle_mod
; Line 2524
	mov	eax, DWORD PTR _mode$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	cmp	DWORD PTR tv65[ebp], 1000		; 000003e8H
	jg	SHORT $LN53@toggle_mod
	cmp	DWORD PTR tv65[ebp], 1000		; 000003e8H
	je	$LN27@toggle_mod
	mov	ecx, DWORD PTR tv65[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 46			; 0000002eH
	ja	$LN48@toggle_mod
	mov	edx, DWORD PTR tv65[ebp]
	movzx	eax, BYTE PTR $LN55@toggle_mod[edx]
	jmp	DWORD PTR $LN57@toggle_mod[eax*4]
$LN53@toggle_mod:
	cmp	DWORD PTR tv65[ebp], 1047		; 00000417H
	jg	SHORT $LN54@toggle_mod
	cmp	DWORD PTR tv65[ebp], 1047		; 00000417H
	je	$LN23@toggle_mod
	cmp	DWORD PTR tv65[ebp], 1002		; 000003eaH
	je	$LN26@toggle_mod
	cmp	DWORD PTR tv65[ebp], 1006		; 000003eeH
	je	$LN25@toggle_mod
	cmp	DWORD PTR tv65[ebp], 1015		; 000003f7H
	je	$LN24@toggle_mod
	jmp	$LN48@toggle_mod
$LN54@toggle_mod:
	cmp	DWORD PTR tv65[ebp], 1048		; 00000418H
	je	$LN20@toggle_mod
	cmp	DWORD PTR tv65[ebp], 1049		; 00000419H
	je	$LN17@toggle_mod
	cmp	DWORD PTR tv65[ebp], 2004		; 000007d4H
	je	$LN11@toggle_mod
	jmp	$LN48@toggle_mod
$LN47@toggle_mod:
; Line 2526
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [ecx+320], edx
; Line 2527
	jmp	$LN48@toggle_mod
$LN46@toggle_mod:
; Line 2529
	xor	eax, eax
	cmp	DWORD PTR _state$[ebp], 0
	sete	al
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+328], eax
; Line 2530
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+328], 0
	je	SHORT $LN45@toggle_mod
; Line 2531
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+196], 0
; Line 2532
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+216], 0
; Line 2533
	jmp	SHORT $LN44@toggle_mod
$LN45@toggle_mod:
; Line 2534
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4356]
	mov	DWORD PTR [edx+196], ecx
$LN44@toggle_mod:
; Line 2536
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_term_schedule_tblink
	add	esp, 4
; Line 2537
	jmp	$LN48@toggle_mod
$LN43@toggle_mod:
; Line 2539
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_deselect
	add	esp, 4
; Line 2540
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4428], 0
	jne	SHORT $LN42@toggle_mod
; Line 2541
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+296]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 52					; 00000034H
	add	ecx, 80					; 00000050H
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4232]
	push	eax
	call	_request_resize
	add	esp, 12					; 0000000cH
$LN42@toggle_mod:
; Line 2542
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [ecx+180], edx
; Line 2543
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+124], 0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+412], 0
; Line 2544
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+296]
	sub	eax, 1
	mov	DWORD PTR tv93[ebp], eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR tv93[ebp]
	mov	DWORD PTR [ecx+128], edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR tv93[ebp]
	mov	DWORD PTR [eax+416], ecx
; Line 2545
	push	0
	push	0
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_move
	add	esp, 16					; 00000010H
; Line 2546
	push	1
	push	1
	push	0
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_erase_lots
	add	esp, 16					; 00000010H
; Line 2547
	jmp	$LN48@toggle_mod
$LN41@toggle_mod:
; Line 2555
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+168], 0
	je	SHORT $LN40@toggle_mod
	cmp	DWORD PTR _state$[ebp], 0
	jne	SHORT $LN40@toggle_mod
; Line 2557
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+172]
	push	eax
	push	1
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_schedule_vbell
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN39@toggle_mod
$LN40@toggle_mod:
; Line 2558
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+168], 0
	jne	SHORT $LN39@toggle_mod
	cmp	DWORD PTR _state$[ebp], 0
	je	SHORT $LN39@toggle_mod
; Line 2560
	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+172], eax
$LN39@toggle_mod:
; Line 2562
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _state$[ebp]
	mov	DWORD PTR [edx+168], eax
; Line 2563
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_seen_disp_event
	add	esp, 4
; Line 2564
	jmp	$LN48@toggle_mod
$LN37@toggle_mod:
; Line 2566
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _state$[ebp]
	mov	DWORD PTR [edx+132], eax
; Line 2567
	jmp	$LN48@toggle_mod
$LN36@toggle_mod:
; Line 2569
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [ecx+136], edx
; Line 2570
	jmp	$LN48@toggle_mod
$LN35@toggle_mod:
; Line 2572
	xor	eax, eax
	cmp	DWORD PTR _state$[ebp], 0
	sete	al
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+332], eax
; Line 2573
	jmp	$LN48@toggle_mod
$LN34@toggle_mod:
; Line 2575
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _state$[ebp]
	mov	DWORD PTR [edx+204], eax
; Line 2576
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4228], 0
	je	SHORT $LN33@toggle_mod
; Line 2577
	push	0
	push	0
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4228]
	push	eax
	call	_ldisc_send
	add	esp, 16					; 00000010H
$LN33@toggle_mod:
; Line 2578
	jmp	$LN48@toggle_mod
$LN32@toggle_mod:
; Line 2580
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 16400				; 00004010H
	jne	SHORT $LN31@toggle_mod
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
	jmp	$LN48@toggle_mod
$LN31@toggle_mod:
; Line 2581
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [ecx+176], edx
; Line 2582
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_seen_disp_event
	add	esp, 4
; Line 2583
	jmp	$LN48@toggle_mod
$LN30@toggle_mod:
; Line 2585
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 16384				; 00004000H
	jne	SHORT $LN29@toggle_mod
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3652], 0
	jmp	$LN48@toggle_mod
$LN29@toggle_mod:
; Line 2586
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_deselect
	add	esp, 4
; Line 2587
	push	0
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4404]
	neg	eax
	sbb	eax, eax
	not	eax
	and	eax, DWORD PTR _state$[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_swap_screen
	add	esp, 16					; 00000010H
; Line 2588
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4452], 0
	je	SHORT $LN28@toggle_mod
; Line 2589
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+16], 0
$LN28@toggle_mod:
; Line 2590
	jmp	$LN48@toggle_mod
$LN27@toggle_mod:
; Line 2592
	xor	ecx, ecx
	cmp	DWORD PTR _state$[ebp], 0
	setne	cl
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+348], ecx
; Line 2593
	mov	eax, DWORD PTR _state$[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4232]
	push	edx
	call	_set_raw_mouse_mode
	add	esp, 8
; Line 2594
	jmp	$LN48@toggle_mod
$LN26@toggle_mod:
; Line 2596
	mov	eax, DWORD PTR _state$[ebp]
	neg	eax
	sbb	eax, eax
	and	eax, 2
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+348], eax
; Line 2597
	mov	edx, DWORD PTR _state$[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4232]
	push	ecx
	call	_set_raw_mouse_mode
	add	esp, 8
; Line 2598
	jmp	$LN48@toggle_mod
$LN25@toggle_mod:
; Line 2600
	xor	edx, edx
	cmp	DWORD PTR _state$[ebp], 0
	setne	dl
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+352], edx
; Line 2601
	jmp	$LN48@toggle_mod
$LN24@toggle_mod:
; Line 2603
	xor	ecx, ecx
	cmp	DWORD PTR _state$[ebp], 0
	setne	cl
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+356], ecx
; Line 2604
	jmp	$LN48@toggle_mod
$LN23@toggle_mod:
; Line 2606
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 16384				; 00004000H
	jne	SHORT $LN22@toggle_mod
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3652], 0
	jmp	$LN48@toggle_mod
$LN22@toggle_mod:
; Line 2607
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_deselect
	add	esp, 4
; Line 2608
	push	1
	push	1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4404]
	neg	edx
	sbb	edx, edx
	not	edx
	and	edx, DWORD PTR _state$[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_swap_screen
	add	esp, 16					; 00000010H
; Line 2609
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4452], 0
	je	SHORT $LN21@toggle_mod
; Line 2610
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+16], 0
$LN21@toggle_mod:
; Line 2611
	jmp	$LN48@toggle_mod
$LN20@toggle_mod:
; Line 2613
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4404], 0
	jne	SHORT $LN19@toggle_mod
; Line 2614
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_save_cursor
	add	esp, 8
$LN19@toggle_mod:
; Line 2615
	cmp	DWORD PTR _state$[ebp], 0
	jne	SHORT $LN18@toggle_mod
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_seen_disp_event
	add	esp, 4
$LN18@toggle_mod:
; Line 2616
	jmp	$LN48@toggle_mod
$LN17@toggle_mod:
; Line 2618
	cmp	DWORD PTR _state$[ebp], 0
	je	SHORT $LN16@toggle_mod
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4404], 0
	jne	SHORT $LN16@toggle_mod
; Line 2619
	mov	edx, DWORD PTR _state$[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_save_cursor
	add	esp, 8
$LN16@toggle_mod:
; Line 2620
	cmp	DWORD PTR _state$[ebp], 0
	jne	SHORT $LN15@toggle_mod
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_seen_disp_event
	add	esp, 4
$LN15@toggle_mod:
; Line 2621
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 16384				; 00004000H
	jne	SHORT $LN14@toggle_mod
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	SHORT $LN48@toggle_mod
$LN14@toggle_mod:
; Line 2622
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_deselect
	add	esp, 4
; Line 2623
	push	0
	push	1
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4404]
	neg	ecx
	sbb	ecx, ecx
	not	ecx
	and	ecx, DWORD PTR _state$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_swap_screen
	add	esp, 16					; 00000010H
; Line 2624
	cmp	DWORD PTR _state$[ebp], 0
	jne	SHORT $LN13@toggle_mod
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4404], 0
	jne	SHORT $LN13@toggle_mod
; Line 2625
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_save_cursor
	add	esp, 8
$LN13@toggle_mod:
; Line 2626
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4452], 0
	je	SHORT $LN12@toggle_mod
; Line 2627
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+16], 0
$LN12@toggle_mod:
; Line 2628
	jmp	SHORT $LN48@toggle_mod
$LN11@toggle_mod:
; Line 2630
	xor	edx, edx
	cmp	DWORD PTR _state$[ebp], 0
	setne	dl
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+364], edx
$LN48@toggle_mod:
; Line 2632
	jmp	$LN51@toggle_mod
$LN50@toggle_mod:
; Line 2633
	mov	ecx, DWORD PTR _mode$[ebp]
	mov	DWORD PTR tv259[ebp], ecx
	mov	edx, DWORD PTR tv259[ebp]
	sub	edx, 4
	mov	DWORD PTR tv259[ebp], edx
	cmp	DWORD PTR tv259[ebp], 30		; 0000001eH
	ja	$LN51@toggle_mod
	mov	eax, DWORD PTR tv259[ebp]
	movzx	ecx, BYTE PTR $LN56@toggle_mod[eax]
	jmp	DWORD PTR $LN58@toggle_mod[ecx*4]
$LN7@toggle_mod:
; Line 2635
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 8
	jne	SHORT $LN6@toggle_mod
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	$LN51@toggle_mod
$LN6@toggle_mod:
; Line 2636
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _state$[ebp]
	mov	DWORD PTR [edx+144], eax
; Line 2637
	jmp	SHORT $LN51@toggle_mod
$LN5@toggle_mod:
; Line 2639
	xor	ecx, ecx
	cmp	DWORD PTR _state$[ebp], 0
	sete	cl
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+200], ecx
; Line 2640
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4228], 0
	je	SHORT $LN4@toggle_mod
; Line 2641
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4228]
	push	edx
	call	_ldisc_send
	add	esp, 16					; 00000010H
$LN4@toggle_mod:
; Line 2642
	jmp	SHORT $LN51@toggle_mod
$LN3@toggle_mod:
; Line 2644
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [eax+336], ecx
; Line 2645
	jmp	SHORT $LN51@toggle_mod
$LN2@toggle_mod:
; Line 2647
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 16400				; 00004010H
	jne	SHORT $LN1@toggle_mod
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3652], 0
	jmp	SHORT $LN51@toggle_mod
$LN1@toggle_mod:
; Line 2648
	xor	edx, edx
	cmp	DWORD PTR _state$[ebp], 0
	sete	dl
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+344], edx
$LN51@toggle_mod:
; Line 2650
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN57@toggle_mod:
	DD	$LN47@toggle_mod
	DD	$LN46@toggle_mod
	DD	$LN43@toggle_mod
	DD	$LN41@toggle_mod
	DD	$LN37@toggle_mod
	DD	$LN36@toggle_mod
	DD	$LN35@toggle_mod
	DD	$LN34@toggle_mod
	DD	$LN32@toggle_mod
	DD	$LN30@toggle_mod
	DD	$LN48@toggle_mod
$LN55@toggle_mod:
	DB	0
	DB	1
	DB	2
	DB	10					; 0000000aH
	DB	3
	DB	4
	DB	5
	DB	6
	DB	10					; 0000000aH
	DB	7
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	8
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	9
	npad	1
$LN58@toggle_mod:
	DD	$LN7@toggle_mod
	DD	$LN5@toggle_mod
	DD	$LN3@toggle_mod
	DD	$LN2@toggle_mod
	DD	$LN51@toggle_mod
$LN56@toggle_mod:
	DB	0
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	2
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	3
_toggle_mode ENDP
_TEXT	ENDS
EXTRN	_set_title:PROC
EXTRN	_set_icon:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv86 = -8						; size = 4
tv70 = -4						; size = 4
_term$ = 8						; size = 4
_do_osc	PROC
; Line 2656
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2657
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+2620], 0
	je	SHORT $LN11@do_osc
$LN10@do_osc:
; Line 2658
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+564]
	mov	DWORD PTR tv70[ebp], edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+564]
	sub	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+564], ecx
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN9@do_osc
; Line 2660
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+564]
	mov	edx, DWORD PTR _term$[ebp]
	movzx	eax, BYTE PTR [edx+ecx+568]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR _term$[ebp]
	mov	dx, WORD PTR [edx+428]
	mov	WORD PTR [ecx+eax*2+3692], dx
	jmp	SHORT $LN10@do_osc
$LN9@do_osc:
; Line 2661
	jmp	$LN12@do_osc
$LN11@do_osc:
; Line 2662
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+564]
	mov	edx, DWORD PTR _term$[ebp]
	mov	BYTE PTR [edx+ecx+568], 0
; Line 2663
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+428]
	mov	DWORD PTR tv86[ebp], ecx
	cmp	DWORD PTR tv86[ebp], 21			; 00000015H
	ja	SHORT $LN12@do_osc
	mov	edx, DWORD PTR tv86[ebp]
	movzx	eax, BYTE PTR $LN14@do_osc[edx]
	jmp	DWORD PTR $LN15@do_osc[eax*4]
$LN5@do_osc:
; Line 2666
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4432], 0
	jne	SHORT $LN4@do_osc
; Line 2667
	mov	edx, DWORD PTR _term$[ebp]
	add	edx, 568				; 00000238H
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4232]
	push	ecx
	call	_set_icon
	add	esp, 8
$LN4@do_osc:
; Line 2668
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+428], 1
	jne	SHORT $LN2@do_osc
; Line 2669
	jmp	SHORT $LN12@do_osc
$LN2@do_osc:
; Line 2673
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4432], 0
	jne	SHORT $LN12@do_osc
; Line 2674
	mov	ecx, DWORD PTR _term$[ebp]
	add	ecx, 568				; 00000238H
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4232]
	push	eax
	call	_set_title
	add	esp, 8
$LN12@do_osc:
; Line 2678
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN15@do_osc:
	DD	$LN5@do_osc
	DD	$LN2@do_osc
	DD	$LN12@do_osc
$LN14@do_osc:
	DB	0
	DB	0
	DB	1
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	1
_do_osc	ENDP
_TEXT	ENDS
EXTRN	_printer_start_job:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_term$ = 8						; size = 4
_printer$ = 12						; size = 4
_term_print_setup PROC
; Line 2684
	push	ebp
	mov	ebp, esp
; Line 2685
	mov	eax, DWORD PTR _term$[ebp]
	add	eax, 248				; 000000f8H
	push	eax
	call	_bufchain_clear
	add	esp, 4
; Line 2686
	mov	ecx, DWORD PTR _printer$[ebp]
	push	ecx
	call	_printer_start_job
	add	esp, 4
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+260], eax
; Line 2687
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_term_print_setup ENDP
; Function compile flags: /Odtp /RTCsu
tv135 = -8						; size = 4
tv84 = -4						; size = 4
_term$ = 8						; size = 4
_sel_spread PROC
; Line 5814
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 5815
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+3660], 0
	jne	$LN2@sel_spread
; Line 5816
	push	-1
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+3672]
	push	edx
	mov	eax, DWORD PTR [ecx+3668]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_sel_spread_half
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3668], eax
	mov	DWORD PTR [ecx+3672], edx
; Line 5817
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+3680], 0
	jne	SHORT $LN4@sel_spread
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+300]
	mov	DWORD PTR [eax+3680], edx
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3676]
	sub	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3676], ecx
	mov	DWORD PTR tv84[ebp], 1
	jmp	SHORT $LN5@sel_spread
$LN4@sel_spread:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3680]
	sub	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3680], ecx
	mov	DWORD PTR tv84[ebp], 0
$LN5@sel_spread:
; Line 5818
	push	1
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3680]
	push	ecx
	mov	edx, DWORD PTR [eax+3676]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_sel_spread_half
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3676], eax
	mov	DWORD PTR [ecx+3680], edx
; Line 5819
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [edx+3680]
	cmp	ecx, DWORD PTR [eax+300]
	jne	SHORT $LN6@sel_spread
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3680], 0
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3676]
	add	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3676], ecx
	mov	DWORD PTR tv135[ebp], 1
	jmp	SHORT $LN2@sel_spread
$LN6@sel_spread:
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3680]
	add	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3680], ecx
	mov	DWORD PTR tv135[ebp], 0
$LN2@sel_spread:
; Line 5821
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sel_spread ENDP
; Function compile flags: /Odtp /RTCsu
tv291 = -68						; size = 4
tv279 = -64						; size = 4
tv258 = -60						; size = 4
tv239 = -56						; size = 4
tv192 = -52						; size = 4
tv172 = -48						; size = 4
tv160 = -44						; size = 4
tv146 = -40						; size = 4
tv73 = -36						; size = 4
_maxcols$88311 = -32					; size = 4
_ldata2$88310 = -28					; size = 4
_ldata2$88298 = -24					; size = 4
_maxcols$88292 = -20					; size = 4
_q$88280 = -16						; size = 4
_topy$ = -12						; size = 4
_wvalue$ = -8						; size = 2
_ldata$ = -4						; size = 4
_term$ = 8						; size = 4
_p$ = 12						; size = 8
_dir$ = 20						; size = 4
_sel_spread_half PROC
; Line 5711
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	edi
	lea	edi, DWORD PTR [ebp-68]
	mov	ecx, 17					; 00000011H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 5714
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_sblines
	add	esp, 4
	neg	eax
	mov	DWORD PTR _topy$[ebp], eax
; Line 5716
	push	0
	push	5716					; 00001654H
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_lineptr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ldata$[ebp], eax
; Line 5718
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+3664]
	mov	DWORD PTR tv73[ebp], ecx
	cmp	DWORD PTR tv73[ebp], 0
	je	SHORT $LN32@sel_spread@2
	cmp	DWORD PTR tv73[ebp], 1
	je	$LN25@sel_spread@2
	cmp	DWORD PTR tv73[ebp], 2
	je	$LN1@sel_spread@2
	jmp	$LN33@sel_spread@2
$LN32@sel_spread@2:
; Line 5724
	mov	edx, DWORD PTR _ldata$[ebp]
	movzx	eax, WORD PTR [edx]
	and	eax, 16					; 00000010H
	jne	$LN31@sel_spread@2
; Line 5725
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+300]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _ldata$[ebp]
	add	edx, DWORD PTR [eax+20]
	mov	DWORD PTR _q$88280[ebp], edx
$LN30@sel_spread@2:
; Line 5727
	mov	ecx, DWORD PTR _ldata$[ebp]
	mov	edx, DWORD PTR _q$88280[ebp]
	cmp	edx, DWORD PTR [ecx+20]
	jbe	SHORT $LN29@sel_spread@2
	mov	eax, DWORD PTR _q$88280[ebp]
	cmp	DWORD PTR [eax-12], 32			; 00000020H
	je	SHORT $LN28@sel_spread@2
	mov	ecx, DWORD PTR _q$88280[ebp]
	mov	edx, DWORD PTR [ecx-12]
	and	edx, -1024				; fffffc00H
	cmp	edx, 55296				; 0000d800H
	jne	SHORT $LN29@sel_spread@2
	mov	eax, DWORD PTR _q$88280[ebp]
	mov	ecx, DWORD PTR [eax-12]
	and	ecx, 255				; 000000ffH
	cmp	ecx, 32					; 00000020H
	jne	SHORT $LN29@sel_spread@2
$LN28@sel_spread@2:
	mov	edx, DWORD PTR _q$88280[ebp]
	cmp	DWORD PTR [edx-4], 0
	jne	SHORT $LN29@sel_spread@2
; Line 5728
	mov	eax, DWORD PTR _q$88280[ebp]
	sub	eax, 12					; 0000000cH
	mov	DWORD PTR _q$88280[ebp], eax
	jmp	SHORT $LN30@sel_spread@2
$LN29@sel_spread@2:
; Line 5729
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+300]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _ldata$[ebp]
	add	edx, DWORD PTR [eax+20]
	cmp	DWORD PTR _q$88280[ebp], edx
	jne	SHORT $LN27@sel_spread@2
; Line 5730
	mov	ecx, DWORD PTR _q$88280[ebp]
	sub	ecx, 12					; 0000000cH
	mov	DWORD PTR _q$88280[ebp], ecx
$LN27@sel_spread@2:
; Line 5731
	mov	edx, DWORD PTR _ldata$[ebp]
	mov	eax, DWORD PTR _q$88280[ebp]
	sub	eax, DWORD PTR [edx+20]
	cdq
	mov	ecx, 12					; 0000000cH
	idiv	ecx
	cmp	DWORD PTR _p$[ebp+4], eax
	jl	SHORT $LN31@sel_spread@2
; Line 5732
	cmp	DWORD PTR _dir$[ebp], -1
	jne	SHORT $LN37@sel_spread@2
	mov	edx, DWORD PTR _ldata$[ebp]
	mov	eax, DWORD PTR _q$88280[ebp]
	sub	eax, DWORD PTR [edx+20]
	cdq
	mov	ecx, 12					; 0000000cH
	idiv	ecx
	mov	DWORD PTR tv146[ebp], eax
	jmp	SHORT $LN38@sel_spread@2
$LN37@sel_spread@2:
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+300]
	sub	eax, 1
	mov	DWORD PTR tv146[ebp], eax
$LN38@sel_spread@2:
	mov	ecx, DWORD PTR tv146[ebp]
	mov	DWORD PTR _p$[ebp+4], ecx
$LN31@sel_spread@2:
; Line 5734
	jmp	$LN33@sel_spread@2
$LN25@sel_spread@2:
; Line 5740
	cmp	DWORD PTR _p$[ebp+4], 0
	jle	SHORT $LN39@sel_spread@2
	mov	edx, DWORD PTR _p$[ebp+4]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _ldata$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	DWORD PTR [edx+ecx], 57343		; 0000dfffH
	jne	SHORT $LN39@sel_spread@2
	mov	edx, DWORD PTR _p$[ebp+4]
	sub	edx, 1
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _ldata$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [edx+ecx]
	mov	DWORD PTR tv160[ebp], edx
	jmp	SHORT $LN40@sel_spread@2
$LN39@sel_spread@2:
	mov	eax, DWORD PTR _p$[ebp+4]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _ldata$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [eax+edx]
	mov	DWORD PTR tv160[ebp], eax
$LN40@sel_spread@2:
	mov	ecx, DWORD PTR tv160[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_wordtype
	add	esp, 8
	mov	WORD PTR _wvalue$[ebp], ax
; Line 5741
	cmp	DWORD PTR _dir$[ebp], 1
	jne	$LN12@sel_spread@2
$LN23@sel_spread@2:
; Line 5742
	mov	eax, 1
	test	eax, eax
	je	$LN22@sel_spread@2
; Line 5744
	mov	ecx, DWORD PTR _ldata$[ebp]
	movzx	edx, WORD PTR [ecx]
	and	edx, 32					; 00000020H
	je	SHORT $LN41@sel_spread@2
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	sub	ecx, 1
	mov	DWORD PTR tv172[ebp], ecx
	jmp	SHORT $LN42@sel_spread@2
$LN41@sel_spread@2:
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+300]
	mov	DWORD PTR tv172[ebp], eax
$LN42@sel_spread@2:
	mov	ecx, DWORD PTR tv172[ebp]
	mov	DWORD PTR _maxcols$88292[ebp], ecx
; Line 5745
	mov	edx, DWORD PTR _maxcols$88292[ebp]
	sub	edx, 1
	cmp	DWORD PTR _p$[ebp+4], edx
	jge	SHORT $LN21@sel_spread@2
; Line 5746
	mov	eax, DWORD PTR _p$[ebp+4]
	add	eax, 1
	test	eax, eax
	jle	SHORT $LN43@sel_spread@2
	mov	ecx, DWORD PTR _p$[ebp+4]
	add	ecx, 1
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _ldata$[ebp]
	mov	eax, DWORD PTR [edx+20]
	cmp	DWORD PTR [ecx+eax], 57343		; 0000dfffH
	jne	SHORT $LN43@sel_spread@2
	mov	ecx, DWORD PTR _p$[ebp+4]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _ldata$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR [ecx+eax]
	mov	DWORD PTR tv192[ebp], ecx
	jmp	SHORT $LN44@sel_spread@2
$LN43@sel_spread@2:
	mov	edx, DWORD PTR _p$[ebp+4]
	add	edx, 1
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _ldata$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [edx+ecx]
	mov	DWORD PTR tv192[ebp], edx
$LN44@sel_spread@2:
	mov	eax, DWORD PTR tv192[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_wordtype
	add	esp, 8
	movsx	edx, WORD PTR _wvalue$[ebp]
	cmp	eax, edx
	jne	SHORT $LN20@sel_spread@2
; Line 5747
	mov	eax, DWORD PTR _p$[ebp+4]
	add	eax, 1
	mov	DWORD PTR _p$[ebp+4], eax
; Line 5748
	jmp	SHORT $LN19@sel_spread@2
$LN20@sel_spread@2:
; Line 5749
	jmp	$LN22@sel_spread@2
$LN19@sel_spread@2:
; Line 5750
	jmp	$LN18@sel_spread@2
$LN21@sel_spread@2:
; Line 5752
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 1
	mov	edx, DWORD PTR _term$[ebp]
	cmp	ecx, DWORD PTR [edx+296]
	jge	SHORT $LN17@sel_spread@2
	mov	eax, DWORD PTR _ldata$[ebp]
	movzx	ecx, WORD PTR [eax]
	and	ecx, 16					; 00000010H
	je	SHORT $LN17@sel_spread@2
; Line 5754
	push	0
	push	5754					; 0000167aH
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_lineptr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ldata2$88298[ebp], eax
; Line 5756
	mov	ecx, DWORD PTR _ldata2$88298[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_wordtype
	add	esp, 8
	movsx	edx, WORD PTR _wvalue$[ebp]
	cmp	eax, edx
	jne	SHORT $LN16@sel_spread@2
; Line 5757
	mov	DWORD PTR _p$[ebp+4], 0
; Line 5758
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
; Line 5759
	mov	ecx, DWORD PTR _ldata$[ebp]
	push	ecx
	call	_unlineptr
	add	esp, 4
; Line 5760
	mov	edx, DWORD PTR _ldata2$88298[ebp]
	mov	DWORD PTR _ldata$[ebp], edx
; Line 5761
	jmp	SHORT $LN15@sel_spread@2
$LN16@sel_spread@2:
; Line 5762
	mov	eax, DWORD PTR _ldata2$88298[ebp]
	push	eax
	call	_unlineptr
	add	esp, 4
; Line 5763
	jmp	SHORT $LN22@sel_spread@2
$LN15@sel_spread@2:
; Line 5765
	jmp	SHORT $LN18@sel_spread@2
$LN17@sel_spread@2:
; Line 5766
	jmp	SHORT $LN22@sel_spread@2
$LN18@sel_spread@2:
; Line 5768
	jmp	$LN23@sel_spread@2
$LN22@sel_spread@2:
; Line 5769
	jmp	$LN13@sel_spread@2
$LN12@sel_spread@2:
; Line 5770
	mov	ecx, 1
	test	ecx, ecx
	je	$LN13@sel_spread@2
; Line 5771
	cmp	DWORD PTR _p$[ebp+4], 0
	jle	SHORT $LN10@sel_spread@2
; Line 5772
	mov	edx, DWORD PTR _p$[ebp+4]
	sub	edx, 1
	test	edx, edx
	jle	SHORT $LN45@sel_spread@2
	mov	eax, DWORD PTR _p$[ebp+4]
	sub	eax, 1
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _ldata$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	cmp	DWORD PTR [eax+edx], 57343		; 0000dfffH
	jne	SHORT $LN45@sel_spread@2
	mov	eax, DWORD PTR _p$[ebp+4]
	sub	eax, 2
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _ldata$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [eax+edx]
	mov	DWORD PTR tv239[ebp], eax
	jmp	SHORT $LN46@sel_spread@2
$LN45@sel_spread@2:
	mov	ecx, DWORD PTR _p$[ebp+4]
	sub	ecx, 1
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _ldata$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR [ecx+eax]
	mov	DWORD PTR tv239[ebp], ecx
$LN46@sel_spread@2:
	mov	edx, DWORD PTR tv239[ebp]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_wordtype
	add	esp, 8
	movsx	ecx, WORD PTR _wvalue$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN9@sel_spread@2
; Line 5773
	mov	edx, DWORD PTR _p$[ebp+4]
	sub	edx, 1
	mov	DWORD PTR _p$[ebp+4], edx
; Line 5774
	jmp	SHORT $LN8@sel_spread@2
$LN9@sel_spread@2:
; Line 5775
	jmp	$LN13@sel_spread@2
$LN8@sel_spread@2:
; Line 5776
	jmp	$LN7@sel_spread@2
$LN10@sel_spread@2:
; Line 5779
	mov	eax, DWORD PTR _p$[ebp]
	cmp	eax, DWORD PTR _topy$[ebp]
	jg	SHORT $LN6@sel_spread@2
; Line 5780
	jmp	$LN13@sel_spread@2
$LN6@sel_spread@2:
; Line 5781
	push	0
	push	5781					; 00001695H
	mov	ecx, DWORD PTR _p$[ebp]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_lineptr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ldata2$88310[ebp], eax
; Line 5783
	mov	eax, DWORD PTR _ldata2$88310[ebp]
	movzx	ecx, WORD PTR [eax]
	and	ecx, 32					; 00000020H
	je	SHORT $LN47@sel_spread@2
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+300]
	sub	eax, 1
	mov	DWORD PTR tv258[ebp], eax
	jmp	SHORT $LN48@sel_spread@2
$LN47@sel_spread@2:
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+300]
	mov	DWORD PTR tv258[ebp], edx
$LN48@sel_spread@2:
	mov	eax, DWORD PTR tv258[ebp]
	mov	DWORD PTR _maxcols$88311[ebp], eax
; Line 5784
	mov	ecx, DWORD PTR _ldata2$88310[ebp]
	movzx	edx, WORD PTR [ecx]
	and	edx, 16					; 00000010H
	je	$LN5@sel_spread@2
; Line 5786
	mov	eax, DWORD PTR _maxcols$88311[ebp]
	sub	eax, 1
	test	eax, eax
	jle	SHORT $LN49@sel_spread@2
	mov	ecx, DWORD PTR _maxcols$88311[ebp]
	sub	ecx, 1
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _ldata2$88310[ebp]
	mov	eax, DWORD PTR [edx+20]
	cmp	DWORD PTR [ecx+eax], 57343		; 0000dfffH
	jne	SHORT $LN49@sel_spread@2
	mov	ecx, DWORD PTR _maxcols$88311[ebp]
	sub	ecx, 2
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _ldata2$88310[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR [ecx+eax]
	mov	DWORD PTR tv279[ebp], ecx
	jmp	SHORT $LN50@sel_spread@2
$LN49@sel_spread@2:
	mov	edx, DWORD PTR _maxcols$88311[ebp]
	sub	edx, 1
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _ldata2$88310[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [edx+ecx]
	mov	DWORD PTR tv279[ebp], edx
$LN50@sel_spread@2:
	mov	eax, DWORD PTR tv279[ebp]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_wordtype
	add	esp, 8
	movsx	edx, WORD PTR _wvalue$[ebp]
	cmp	eax, edx
	jne	SHORT $LN4@sel_spread@2
; Line 5787
	mov	eax, DWORD PTR _maxcols$88311[ebp]
	sub	eax, 1
	mov	DWORD PTR _p$[ebp+4], eax
; Line 5788
	mov	ecx, DWORD PTR _p$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _p$[ebp], ecx
; Line 5789
	mov	edx, DWORD PTR _ldata$[ebp]
	push	edx
	call	_unlineptr
	add	esp, 4
; Line 5790
	mov	eax, DWORD PTR _ldata2$88310[ebp]
	mov	DWORD PTR _ldata$[ebp], eax
; Line 5791
	jmp	SHORT $LN3@sel_spread@2
$LN4@sel_spread@2:
; Line 5792
	mov	ecx, DWORD PTR _ldata2$88310[ebp]
	push	ecx
	call	_unlineptr
	add	esp, 4
; Line 5793
	jmp	SHORT $LN13@sel_spread@2
$LN3@sel_spread@2:
; Line 5795
	jmp	SHORT $LN7@sel_spread@2
$LN5@sel_spread@2:
; Line 5796
	jmp	SHORT $LN13@sel_spread@2
$LN7@sel_spread@2:
; Line 5798
	jmp	$LN12@sel_spread@2
$LN13@sel_spread@2:
; Line 5800
	jmp	SHORT $LN33@sel_spread@2
$LN1@sel_spread@2:
; Line 5805
	cmp	DWORD PTR _dir$[ebp], -1
	jne	SHORT $LN51@sel_spread@2
	mov	DWORD PTR tv291[ebp], 0
	jmp	SHORT $LN52@sel_spread@2
$LN51@sel_spread@2:
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+300]
	sub	eax, 1
	mov	DWORD PTR tv291[ebp], eax
$LN52@sel_spread@2:
	mov	ecx, DWORD PTR tv291[ebp]
	mov	DWORD PTR _p$[ebp+4], ecx
$LN33@sel_spread@2:
; Line 5809
	mov	edx, DWORD PTR _ldata$[ebp]
	push	edx
	call	_unlineptr
	add	esp, 4
; Line 5810
	mov	eax, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _p$[ebp+4]
; Line 5811
	pop	edi
	add	esp, 68					; 00000044H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sel_spread_half ENDP
; Function compile flags: /Odtp /RTCsu
tv88 = -12						; size = 4
tv65 = -8						; size = 4
_wptr$ = -4						; size = 4
_term$ = 8						; size = 4
_uc$ = 12						; size = 4
_wordtype PROC
; Line 5599
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 5669
	mov	eax, DWORD PTR _uc$[ebp]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR tv65[ebp], eax
	cmp	DWORD PTR tv65[ebp], 55296		; 0000d800H
	je	SHORT $LN12@wordtype
	cmp	DWORD PTR tv65[ebp], 55552		; 0000d900H
	je	SHORT $LN13@wordtype
	cmp	DWORD PTR tv65[ebp], 55808		; 0000da00H
	je	SHORT $LN11@wordtype
	jmp	SHORT $LN14@wordtype
$LN13@wordtype:
; Line 5671
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4240]
	mov	eax, DWORD PTR _uc$[ebp]
	and	eax, 255				; 000000ffH
	movzx	ecx, WORD PTR [edx+eax*2+1552]
	mov	DWORD PTR _uc$[ebp], ecx
; Line 5672
	jmp	SHORT $LN14@wordtype
$LN12@wordtype:
; Line 5674
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4240]
	mov	ecx, DWORD PTR _uc$[ebp]
	and	ecx, 255				; 000000ffH
	movzx	edx, WORD PTR [eax+ecx*2+528]
	mov	DWORD PTR _uc$[ebp], edx
; Line 5675
	jmp	SHORT $LN14@wordtype
$LN11@wordtype:
; Line 5677
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4240]
	mov	edx, DWORD PTR _uc$[ebp]
	and	edx, 255				; 000000ffH
	movzx	eax, WORD PTR [ecx+edx*2+16]
	mov	DWORD PTR _uc$[ebp], eax
$LN14@wordtype:
; Line 5680
	mov	ecx, DWORD PTR _uc$[ebp]
	and	ecx, -256				; ffffff00H
	mov	DWORD PTR tv88[ebp], ecx
	cmp	DWORD PTR tv88[ebp], 61440		; 0000f000H
	je	SHORT $LN7@wordtype
	cmp	DWORD PTR tv88[ebp], 61696		; 0000f100H
	je	SHORT $LN8@wordtype
	jmp	SHORT $LN9@wordtype
$LN8@wordtype:
; Line 5682
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4240]
	mov	ecx, DWORD PTR _uc$[ebp]
	and	ecx, 255				; 000000ffH
	movzx	edx, WORD PTR [eax+ecx*2+1040]
	mov	DWORD PTR _uc$[ebp], edx
; Line 5683
	jmp	SHORT $LN9@wordtype
$LN7@wordtype:
; Line 5685
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4240]
	mov	edx, DWORD PTR _uc$[ebp]
	and	edx, 255				; 000000ffH
	movzx	eax, WORD PTR [ecx+edx*2+2064]
	mov	DWORD PTR _uc$[ebp], eax
$LN9@wordtype:
; Line 5693
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4240]
	cmp	DWORD PTR [edx+4], 0
	je	SHORT $LN6@wordtype
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR [eax+4240]
	mov	edx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [edx+4240]
	mov	ecx, DWORD PTR [ecx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN6@wordtype
; Line 5694
	xor	eax, eax
	cmp	DWORD PTR _uc$[ebp], 32			; 00000020H
	setne	al
	jmp	SHORT $LN16@wordtype
$LN6@wordtype:
; Line 5696
	cmp	DWORD PTR _uc$[ebp], 128		; 00000080H
	jge	SHORT $LN5@wordtype
; Line 5697
	mov	edx, DWORD PTR _uc$[ebp]
	mov	eax, DWORD PTR _term$[ebp]
	movsx	eax, WORD PTR [eax+edx*2+3692]
	jmp	SHORT $LN16@wordtype
$LN5@wordtype:
; Line 5699
	mov	DWORD PTR _wptr$[ebp], OFFSET ?ucs_words@?1??wordtype@@9@9
	jmp	SHORT $LN4@wordtype
$LN3@wordtype:
	mov	ecx, DWORD PTR _wptr$[ebp]
	add	ecx, 12					; 0000000cH
	mov	DWORD PTR _wptr$[ebp], ecx
$LN4@wordtype:
	mov	edx, DWORD PTR _wptr$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN2@wordtype
; Line 5700
	mov	eax, DWORD PTR _wptr$[ebp]
	mov	ecx, DWORD PTR _uc$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jl	SHORT $LN1@wordtype
	mov	edx, DWORD PTR _wptr$[ebp]
	mov	eax, DWORD PTR _uc$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jg	SHORT $LN1@wordtype
; Line 5701
	mov	ecx, DWORD PTR _wptr$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	jmp	SHORT $LN16@wordtype
$LN1@wordtype:
; Line 5702
	jmp	SHORT $LN3@wordtype
$LN2@wordtype:
; Line 5704
	mov	eax, 2
$LN16@wordtype:
; Line 5705
	mov	esp, ebp
	pop	ebp
	ret	0
_wordtype ENDP
_TEXT	ENDS
PUBLIC	_format_arrow_key
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -12						; size = 4
_app_flg$88504 = -8					; size = 4
_p$ = -4						; size = 4
_buf$ = 8						; size = 4
_term$ = 12						; size = 4
_xkey$ = 16						; size = 4
_ctrl$ = 20						; size = 4
_format_arrow_key PROC
; Line 6173
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 6174
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 6176
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+328], 0
	je	SHORT $LN5@format_arr
; Line 6177
	mov	edx, DWORD PTR _xkey$[ebp]
	push	edx
	push	OFFSET $SG88502
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 6178
	jmp	SHORT $LN4@format_arr
$LN5@format_arr:
; Line 6179
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+320], 0
	je	SHORT $LN8@format_arr
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+4408], 0
	jne	SHORT $LN8@format_arr
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN9@format_arr
$LN8@format_arr:
	mov	DWORD PTR tv75[ebp], 0
$LN9@format_arr:
	mov	eax, DWORD PTR tv75[ebp]
	mov	DWORD PTR _app_flg$88504[ebp], eax
; Line 6196
	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN3@format_arr
; Line 6197
	xor	ecx, ecx
	cmp	DWORD PTR _app_flg$88504[ebp], 0
	sete	cl
	mov	DWORD PTR _app_flg$88504[ebp], ecx
$LN3@format_arr:
; Line 6199
	cmp	DWORD PTR _app_flg$88504[ebp], 0
	je	SHORT $LN2@format_arr
; Line 6200
	mov	edx, DWORD PTR _xkey$[ebp]
	push	edx
	push	OFFSET $SG88508
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 6201
	jmp	SHORT $LN4@format_arr
$LN2@format_arr:
; Line 6202
	mov	ecx, DWORD PTR _xkey$[ebp]
	push	ecx
	push	OFFSET $SG88511
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _p$[ebp], eax
$LN4@format_arr:
; Line 6205
	mov	eax, DWORD PTR _p$[ebp]
	sub	eax, DWORD PTR _buf$[ebp]
; Line 6206
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_format_arrow_key ENDP
_TEXT	ENDS
PUBLIC	_term_nopaste
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_term$ = 8						; size = 4
_term_nopaste PROC
; Line 6209
	push	ebp
	mov	ebp, esp
; Line 6210
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4212], 0
	jne	SHORT $LN1@term_nopas
; Line 6211
	jmp	SHORT $LN2@term_nopas
$LN1@term_nopas:
; Line 6212
	mov	ecx, DWORD PTR _term$[ebp]
	mov	edx, DWORD PTR [ecx+4208]
	push	edx
	call	_safefree
	add	esp, 4
; Line 6213
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+4208], 0
; Line 6214
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+4212], 0
$LN2@term_nopas:
; Line 6215
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_term_nopaste ENDP
; Function compile flags: /Odtp /RTCsu
_term$ = 8						; size = 4
_deselect PROC
; Line 6218
	push	ebp
	mov	ebp, esp
; Line 6219
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3656], 0
; Line 6220
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3676], 0
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+3680], 0
	mov	eax, DWORD PTR _term$[ebp]
	mov	DWORD PTR [eax+3668], 0
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+3672], 0
; Line 6221
	pop	ebp
	ret	0
_deselect ENDP
_TEXT	ENDS
PUBLIC	_term_deselect
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_term$ = 8						; size = 4
_term_deselect PROC
; Line 6224
	push	ebp
	mov	ebp, esp
; Line 6225
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_deselect
	add	esp, 4
; Line 6226
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_update
	add	esp, 4
; Line 6233
	mov	edx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [edx+3656], 2
	je	SHORT $LN2@term_desel
; Line 6234
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_term_out
	add	esp, 4
$LN2@term_desel:
; Line 6235
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_term_deselect ENDP
_TEXT	ENDS
PUBLIC	_term_ldisc
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_term$ = 8						; size = 4
_option$ = 12						; size = 4
_term_ldisc PROC
; Line 6238
	push	ebp
	mov	ebp, esp
; Line 6239
	cmp	DWORD PTR _option$[ebp], 1
	jne	SHORT $LN2@term_ldisc
; Line 6240
	mov	eax, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [eax+200]
	jmp	SHORT $LN3@term_ldisc
$LN2@term_ldisc:
; Line 6241
	cmp	DWORD PTR _option$[ebp], 0
	jne	SHORT $LN1@term_ldisc
; Line 6242
	mov	ecx, DWORD PTR _term$[ebp]
	mov	eax, DWORD PTR [ecx+204]
	jmp	SHORT $LN3@term_ldisc
$LN1@term_ldisc:
; Line 6243
	xor	eax, eax
$LN3@term_ldisc:
; Line 6244
	pop	ebp
	ret	0
_term_ldisc ENDP
_TEXT	ENDS
PUBLIC	_term_data
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_term$ = 8						; size = 4
_is_stderr$ = 12					; size = 4
_data$ = 16						; size = 4
_len$ = 20						; size = 4
_term_data PROC
; Line 6247
	push	ebp
	mov	ebp, esp
; Line 6248
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _term$[ebp]
	add	edx, 96					; 00000060H
	push	edx
	call	_bufchain_add
	add	esp, 12					; 0000000cH
; Line 6250
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+4248], 0
	jne	SHORT $LN2@term_data
; Line 6251
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+4248], 1
; Line 6252
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_term_reset_cblink
	add	esp, 4
; Line 6258
	mov	eax, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [eax+3656], 2
	je	SHORT $LN1@term_data
; Line 6259
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_out
	add	esp, 4
$LN1@term_data:
; Line 6260
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4248], 0
$LN2@term_data:
; Line 6282
	xor	eax, eax
; Line 6283
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_term_data ENDP
; Function compile flags: /Odtp /RTCsu
_term$ = 8						; size = 4
_term_reset_cblink PROC
; Line 1184
	push	ebp
	mov	ebp, esp
; Line 1185
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_seen_disp_event
	add	esp, 4
; Line 1186
	mov	ecx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [ecx+188], 1
; Line 1187
	mov	edx, DWORD PTR _term$[ebp]
	mov	DWORD PTR [edx+4264], 0
; Line 1188
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_term_schedule_cblink
	add	esp, 4
; Line 1189
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_term_reset_cblink ENDP
_TEXT	ENDS
PUBLIC	_term_data_untrusted
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$ = -4						; size = 4
_term$ = 8						; size = 4
_data$ = 12						; size = 4
_len$ = 16						; size = 4
_term_data_untrusted PROC
; Line 6291
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 6294
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@term_data_
$LN5@term_data_:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@term_data_:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _len$[ebp]
	jge	SHORT $LN4@term_data_
; Line 6295
	mov	edx, DWORD PTR _data$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 10					; 0000000aH
	jne	SHORT $LN3@term_data_
; Line 6296
	push	2
	push	OFFSET $SG88554
	push	1
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_data
	add	esp, 16					; 00000010H
	jmp	SHORT $LN2@term_data_
$LN3@term_data_:
; Line 6297
	mov	edx, DWORD PTR _data$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	movsx	eax, BYTE PTR [edx]
	and	eax, 96					; 00000060H
	je	SHORT $LN2@term_data_
; Line 6298
	push	1
	mov	ecx, DWORD PTR _data$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_term_data
	add	esp, 16					; 00000010H
$LN2@term_data_:
; Line 6299
	jmp	SHORT $LN5@term_data_
$LN4@term_data_:
; Line 6300
	xor	eax, eax
; Line 6301
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_term_data_untrusted ENDP
_TEXT	ENDS
PUBLIC	_term_provide_logctx
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_term$ = 8						; size = 4
_logctx$ = 12						; size = 4
_term_provide_logctx PROC
; Line 6304
	push	ebp
	mov	ebp, esp
; Line 6305
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _logctx$[ebp]
	mov	DWORD PTR [eax+4236], ecx
; Line 6306
	pop	ebp
	ret	0
_term_provide_logctx ENDP
_TEXT	ENDS
PUBLIC	_term_set_focus
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_term$ = 8						; size = 4
_has_focus$ = 12					; size = 4
_term_set_focus PROC
; Line 6309
	push	ebp
	mov	ebp, esp
; Line 6310
	mov	eax, DWORD PTR _term$[ebp]
	mov	ecx, DWORD PTR _has_focus$[ebp]
	mov	DWORD PTR [eax+308], ecx
; Line 6311
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_term_schedule_cblink
	add	esp, 4
; Line 6312
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_term_set_focus ENDP
_TEXT	ENDS
PUBLIC	_term_get_ttymode
EXTRN	_dupstr:PROC
EXTRN	_strcmp:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv70 = -8						; size = 4
_val$ = -4						; size = 4
_term$ = 8						; size = 4
_mode$ = 12						; size = 4
_term_get_ttymode PROC
; Line 6319
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 6320
	mov	DWORD PTR _val$[ebp], 0
; Line 6321
	push	OFFSET $SG88575
	mov	eax, DWORD PTR _mode$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@term_get_t
; Line 6322
	mov	ecx, DWORD PTR _term$[ebp]
	cmp	DWORD PTR [ecx+4348], 0
	je	SHORT $LN4@term_get_t
	mov	DWORD PTR tv70[ebp], OFFSET $SG88576
	jmp	SHORT $LN5@term_get_t
$LN4@term_get_t:
	mov	DWORD PTR tv70[ebp], OFFSET $SG88577
$LN5@term_get_t:
	mov	edx, DWORD PTR tv70[ebp]
	mov	DWORD PTR _val$[ebp], edx
$LN1@term_get_t:
; Line 6326
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	call	_dupstr
	add	esp, 4
; Line 6327
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_term_get_ttymode ENDP
_TEXT	ENDS
PUBLIC	_term_get_userpass_input
EXTRN	_prompt_ensure_result_size:PROC
EXTRN	_prompt_set_result:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv168 = -40						; size = 4
_c$88621 = -29						; size = 1
_finished_prompt$88614 = -24				; size = 4
_pr$88613 = -20						; size = 4
_i$88604 = -16						; size = 4
_l$88601 = -12						; size = 4
_l$88597 = -8						; size = 4
_s$ = -4						; size = 4
_term$ = 8						; size = 4
_p$ = 12						; size = 4
_in$ = 16						; size = 4
_inlen$ = 20						; size = 4
_term_get_userpass_input PROC
; Line 6341
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	edi
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 6342
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _s$[ebp], ecx
; Line 6343
	cmp	DWORD PTR _s$[ebp], 0
	jne	$LN25@term_get_u
; Line 6347
	push	12					; 0000000cH
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _s$[ebp], eax
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+32], eax
; Line 6348
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 6349
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 6351
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN32@term_get_u
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN32@term_get_u
; Line 6352
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _l$88597[ebp], eax
; Line 6353
	mov	ecx, DWORD PTR _l$88597[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_data_untrusted
	add	esp, 12					; 0000000cH
; Line 6354
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _l$88597[ebp]
	movsx	edx, BYTE PTR [eax+ecx-1]
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN32@term_get_u
; Line 6355
	push	1
	push	OFFSET $SG88599
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_term_data_untrusted
	add	esp, 12					; 0000000cH
$LN32@term_get_u:
; Line 6358
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	je	SHORT $LN30@term_get_u
; Line 6359
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _l$88601[ebp], eax
; Line 6360
	mov	ecx, DWORD PTR _l$88601[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_data_untrusted
	add	esp, 12					; 0000000cH
; Line 6361
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR _l$88601[ebp]
	movsx	edx, BYTE PTR [eax+ecx-1]
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN30@term_get_u
; Line 6362
	push	1
	push	OFFSET $SG88603
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_term_data_untrusted
	add	esp, 12					; 0000000cH
$LN30@term_get_u:
; Line 6369
	mov	DWORD PTR _i$88604[ebp], 0
	jmp	SHORT $LN28@term_get_u
$LN27@term_get_u:
	mov	ecx, DWORD PTR _i$88604[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$88604[ebp], ecx
$LN28@term_get_u:
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _i$88604[ebp]
	cmp	eax, DWORD PTR [edx+20]
	jge	SHORT $LN25@term_get_u
; Line 6370
	push	OFFSET $SG88609
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _i$88604[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_prompt_set_result
	add	esp, 8
	jmp	SHORT $LN27@term_get_u
$LN25@term_get_u:
; Line 6374
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax+20]
	jae	$LN24@term_get_u
; Line 6376
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _pr$88613[ebp], eax
; Line 6377
	mov	DWORD PTR _finished_prompt$88614[ebp], 0
; Line 6379
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	jne	SHORT $LN23@term_get_u
; Line 6380
	mov	edx, DWORD PTR _pr$88613[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _pr$88613[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _term$[ebp]
	push	eax
	call	_term_data_untrusted
	add	esp, 12					; 0000000cH
; Line 6381
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+4], 1
; Line 6382
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+8], 0
$LN23@term_get_u:
; Line 6387
	cmp	DWORD PTR _in$[ebp], 0
	je	SHORT $LN21@term_get_u
	cmp	DWORD PTR _inlen$[ebp], 0
	jne	SHORT $LN20@term_get_u
$LN21@term_get_u:
	jmp	$LN24@term_get_u
$LN20@term_get_u:
; Line 6390
	cmp	DWORD PTR _finished_prompt$88614[ebp], 0
	jne	$LN19@term_get_u
	cmp	DWORD PTR _inlen$[ebp], 0
	je	$LN19@term_get_u
; Line 6391
	mov	eax, DWORD PTR _in$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$88621[ebp], cl
	mov	edx, DWORD PTR _in$[ebp]
	add	edx, 1
	mov	DWORD PTR _in$[ebp], edx
; Line 6392
	mov	eax, DWORD PTR _inlen$[ebp]
	sub	eax, 1
	mov	DWORD PTR _inlen$[ebp], eax
; Line 6393
	movsx	ecx, BYTE PTR _c$88621[ebp]
	mov	DWORD PTR tv168[ebp], ecx
	mov	edx, DWORD PTR tv168[ebp]
	sub	edx, 3
	mov	DWORD PTR tv168[ebp], edx
	cmp	DWORD PTR tv168[ebp], 124		; 0000007cH
	ja	$LN7@term_get_u
	mov	eax, DWORD PTR tv168[ebp]
	movzx	ecx, BYTE PTR $LN36@term_get_u[eax]
	jmp	DWORD PTR $LN40@term_get_u[ecx*4]
$LN16@term_get_u:
; Line 6396
	push	2
	push	OFFSET $SG88627
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_term_data
	add	esp, 16					; 00000010H
; Line 6397
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _pr$88613[ebp]
	push	edx
	call	_prompt_ensure_result_size
	add	esp, 8
; Line 6398
	mov	eax, DWORD PTR _pr$88613[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	BYTE PTR [ecx+eax], 0
; Line 6400
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax], edx
; Line 6401
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 6402
	mov	DWORD PTR _finished_prompt$88614[ebp], 1
; Line 6403
	jmp	$LN17@term_get_u
$LN15@term_get_u:
; Line 6406
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jbe	SHORT $LN14@term_get_u
; Line 6407
	mov	eax, DWORD PTR _pr$88613[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN13@term_get_u
; Line 6408
	push	3
	push	OFFSET $SG88631
	push	0
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_data
	add	esp, 16					; 00000010H
$LN13@term_get_u:
; Line 6409
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, 1
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN14@term_get_u:
; Line 6411
	jmp	$LN17@term_get_u
$LN11@term_get_u:
; Line 6414
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jbe	SHORT $LN10@term_get_u
; Line 6415
	mov	eax, DWORD PTR _pr$88613[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN9@term_get_u
; Line 6416
	push	3
	push	OFFSET $SG88637
	push	0
	mov	ecx, DWORD PTR _term$[ebp]
	push	ecx
	call	_term_data
	add	esp, 16					; 00000010H
$LN9@term_get_u:
; Line 6417
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, 1
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 6418
	jmp	SHORT $LN11@term_get_u
$LN10@term_get_u:
; Line 6419
	jmp	$LN17@term_get_u
$LN8@term_get_u:
; Line 6423
	push	2
	push	OFFSET $SG88639
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_term_data
	add	esp, 16					; 00000010H
; Line 6424
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 6425
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+32], 0
; Line 6426
	xor	eax, eax
	jmp	$LN34@term_get_u
$LN7@term_get_u:
; Line 6434
	mov	edx, DWORD PTR _pr$88613[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	SHORT $LN5@term_get_u
	movsx	eax, BYTE PTR _c$88621[ebp]
	cmp	eax, 32					; 00000020H
	jl	SHORT $LN4@term_get_u
	movsx	ecx, BYTE PTR _c$88621[ebp]
	cmp	ecx, 126				; 0000007eH
	jle	SHORT $LN5@term_get_u
$LN4@term_get_u:
	movzx	edx, BYTE PTR _c$88621[ebp]
	cmp	edx, 160				; 000000a0H
	jl	SHORT $LN17@term_get_u
$LN5@term_get_u:
; Line 6435
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _pr$88613[ebp]
	push	edx
	call	_prompt_ensure_result_size
	add	esp, 8
; Line 6436
	mov	eax, DWORD PTR _pr$88613[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	dl, BYTE PTR _c$88621[ebp]
	mov	BYTE PTR [ecx+eax], dl
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 6437
	mov	eax, DWORD PTR _pr$88613[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN17@term_get_u
; Line 6438
	push	1
	lea	ecx, DWORD PTR _c$88621[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _term$[ebp]
	push	edx
	call	_term_data
	add	esp, 16					; 00000010H
$LN17@term_get_u:
; Line 6442
	jmp	$LN20@term_get_u
$LN19@term_get_u:
; Line 6444
	jmp	$LN25@term_get_u
$LN24@term_get_u:
; Line 6446
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+20]
	jae	SHORT $LN2@term_get_u
; Line 6447
	or	eax, -1
	jmp	SHORT $LN34@term_get_u
; Line 6448
	jmp	SHORT $LN34@term_get_u
$LN2@term_get_u:
; Line 6449
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 6450
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+32], 0
; Line 6451
	mov	eax, 1
$LN34@term_get_u:
; Line 6453
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN39@term_get_u
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN39@term_get_u:
	DD	1
	DD	$LN38@term_get_u
$LN38@term_get_u:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN37@term_get_u
$LN37@term_get_u:
	DB	99					; 00000063H
	DB	0
	npad	2
$LN40@term_get_u:
	DD	$LN8@term_get_u
	DD	$LN15@term_get_u
	DD	$LN16@term_get_u
	DD	$LN11@term_get_u
	DD	$LN7@term_get_u
$LN36@term_get_u:
	DB	0
	DB	0
	DB	4
	DB	4
	DB	4
	DB	1
	DB	4
	DB	2
	DB	4
	DB	4
	DB	2
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	3
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	3
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
_term_get_userpass_input ENDP
_TEXT	ENDS
END

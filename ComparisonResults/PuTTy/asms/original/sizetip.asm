; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\Putty\windows\sizetip.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_tip_class DW	01H DUP (?)
	ALIGN	4

_tip_wnd DD	01H DUP (?)
_tip_enabled DD	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
$SG87463 DB	'SizeTipClass', 00H
	ORG $+3
$SG87467 DB	'%dx%d', 00H
_DATA	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_UpdateSizeTip
EXTRN	__imp__SetWindowTextA@8:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__CreateWindowExA@48:PROC
EXTRN	__imp__GetWindowRect@8:PROC
EXTRN	__imp__DeleteDC@4:PROC
EXTRN	__imp__GetTextExtentPoint32A@16:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__CreateCompatibleDC@4:PROC
EXTRN	_sprintf:PROC
EXTRN	__imp__CreateFontIndirectA@4:PROC
EXTRN	__imp__SystemParametersInfoA@16:PROC
EXTRN	_memset:PROC
EXTRN	__imp__GetSysColor@4:PROC
EXTRN	__imp__RegisterClassA@4:PROC
EXTRN	_hinst:DWORD
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
_BSS	SEGMENT
_tip_font DD	01H DUP (?)
_tip_text DD	01H DUP (?)
_tip_bg	DD	01H DUP (?)
_BSS	ENDS
;	COMDAT rtc$TMZ
; File c:\workspace\putty\windows\sizetip.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_iy$87473 = -496					; size = 4
_ix$87472 = -492					; size = 4
_wr$87471 = -484					; size = 16
_sz$87470 = -460					; size = 8
_hdc$87469 = -448					; size = 4
_wc$87458 = -440					; size = 40
_nci$87456 = -392					; size = 344
_str$ = -40						; size = 32
__$ArrayPad$ = -4					; size = 4
_src$ = 8						; size = 4
_cx$ = 12						; size = 4
_cy$ = 16						; size = 4
_UpdateSizeTip PROC
; Line 97
	push	ebp
	mov	ebp, esp
	sub	esp, 496				; 000001f0H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-496]
	mov	ecx, 124				; 0000007cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 100
	cmp	DWORD PTR _tip_enabled, 0
	jne	SHORT $LN7@UpdateSize
; Line 101
	jmp	$LN8@UpdateSize
$LN7@UpdateSize:
; Line 103
	cmp	DWORD PTR _tip_wnd, 0
	jne	$LN6@UpdateSize
; Line 108
	movzx	eax, WORD PTR _tip_class
	test	eax, eax
	jne	$LN5@UpdateSize
; Line 110
	mov	DWORD PTR _wc$87458[ebp], 3
; Line 111
	mov	DWORD PTR _wc$87458[ebp+4], OFFSET _SizeTipWndProc@16
; Line 112
	mov	DWORD PTR _wc$87458[ebp+8], 0
; Line 113
	mov	DWORD PTR _wc$87458[ebp+12], 0
; Line 114
	mov	ecx, DWORD PTR _hinst
	mov	DWORD PTR _wc$87458[ebp+16], ecx
; Line 115
	mov	DWORD PTR _wc$87458[ebp+20], 0
; Line 116
	mov	DWORD PTR _wc$87458[ebp+24], 0
; Line 117
	mov	DWORD PTR _wc$87458[ebp+28], 0
; Line 118
	mov	DWORD PTR _wc$87458[ebp+32], 0
; Line 119
	mov	DWORD PTR _wc$87458[ebp+36], OFFSET $SG87463
; Line 121
	mov	esi, esp
	lea	edx, DWORD PTR _wc$87458[ebp]
	push	edx
	call	DWORD PTR __imp__RegisterClassA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _tip_class, ax
$LN5@UpdateSize:
; Line 133
	mov	esi, esp
	push	24					; 00000018H
	call	DWORD PTR __imp__GetSysColor@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tip_bg, eax
; Line 134
	mov	esi, esp
	push	23					; 00000017H
	call	DWORD PTR __imp__GetSysColor@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tip_text, eax
; Line 136
	push	344					; 00000158H
	push	0
	lea	eax, DWORD PTR _nci$87456[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 137
	mov	DWORD PTR _nci$87456[ebp], 344		; 00000158H
; Line 139
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _nci$87456[ebp]
	push	ecx
	push	344					; 00000158H
	push	41					; 00000029H
	call	DWORD PTR __imp__SystemParametersInfoA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 140
	mov	esi, esp
	lea	edx, DWORD PTR _nci$87456[ebp+220]
	push	edx
	call	DWORD PTR __imp__CreateFontIndirectA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tip_font, eax
$LN6@UpdateSize:
; Line 145
	mov	eax, DWORD PTR _cy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cx$[ebp]
	push	ecx
	push	OFFSET $SG87467
	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 147
	cmp	DWORD PTR _tip_wnd, 0
	jne	$LN4@UpdateSize
; Line 155
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__CreateCompatibleDC@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hdc$87469[ebp], eax
; Line 156
	mov	esi, esp
	lea	eax, DWORD PTR _sz$87470[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	mov	eax, DWORD PTR _hdc$87469[ebp]
	push	eax
	call	DWORD PTR __imp__GetTextExtentPoint32A@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 157
	mov	esi, esp
	mov	ecx, DWORD PTR _hdc$87469[ebp]
	push	ecx
	call	DWORD PTR __imp__DeleteDC@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 159
	mov	esi, esp
	lea	edx, DWORD PTR _wr$87471[ebp]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 161
	mov	ecx, DWORD PTR _wr$87471[ebp]
	mov	DWORD PTR _ix$87472[ebp], ecx
; Line 162
	cmp	DWORD PTR _ix$87472[ebp], 16		; 00000010H
	jge	SHORT $LN3@UpdateSize
; Line 163
	mov	DWORD PTR _ix$87472[ebp], 16		; 00000010H
$LN3@UpdateSize:
; Line 165
	mov	edx, DWORD PTR _wr$87471[ebp+4]
	sub	edx, DWORD PTR _sz$87470[ebp+4]
	mov	DWORD PTR _iy$87473[ebp], edx
; Line 166
	cmp	DWORD PTR _iy$87473[ebp], 16		; 00000010H
	jge	SHORT $LN2@UpdateSize
; Line 167
	mov	DWORD PTR _iy$87473[ebp], 16		; 00000010H
$LN2@UpdateSize:
; Line 174
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _hinst
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _sz$87470[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _sz$87470[ebp]
	push	edx
	mov	eax, DWORD PTR _iy$87473[ebp]
	push	eax
	mov	ecx, DWORD PTR _ix$87472[ebp]
	push	ecx
	push	-2147483648				; 80000000H
	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	movzx	eax, WORD PTR _tip_class
	push	eax
	push	136					; 00000088H
	call	DWORD PTR __imp__CreateWindowExA@48
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tip_wnd, eax
; Line 176
	mov	esi, esp
	push	4
	mov	ecx, DWORD PTR _tip_wnd
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 178
	jmp	SHORT $LN8@UpdateSize
$LN4@UpdateSize:
; Line 182
	mov	esi, esp
	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	mov	eax, DWORD PTR _tip_wnd
	push	eax
	call	DWORD PTR __imp__SetWindowTextA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@UpdateSize:
; Line 184
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@UpdateSize
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 496				; 000001f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN16@UpdateSize:
	DD	5
	DD	$LN15@UpdateSize
$LN15@UpdateSize:
	DD	-40					; ffffffd8H
	DD	32					; 00000020H
	DD	$LN10@UpdateSize
	DD	-392					; fffffe78H
	DD	344					; 00000158H
	DD	$LN11@UpdateSize
	DD	-440					; fffffe48H
	DD	40					; 00000028H
	DD	$LN12@UpdateSize
	DD	-460					; fffffe34H
	DD	8
	DD	$LN13@UpdateSize
	DD	-484					; fffffe1cH
	DD	16					; 00000010H
	DD	$LN14@UpdateSize
$LN14@UpdateSize:
	DB	119					; 00000077H
	DB	114					; 00000072H
	DB	0
$LN13@UpdateSize:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	0
$LN12@UpdateSize:
	DB	119					; 00000077H
	DB	99					; 00000063H
	DB	0
$LN11@UpdateSize:
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	105					; 00000069H
	DB	0
$LN10@UpdateSize:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_UpdateSizeTip ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp__DefWindowProcA@16:PROC
EXTRN	__imp__InvalidateRect@12:PROC
EXTRN	__imp__SetWindowPos@28:PROC
EXTRN	__imp__EndPaint@8:PROC
EXTRN	__imp__DeleteObject@4:PROC
EXTRN	_safefree:PROC
EXTRN	__imp__TextOutA@20:PROC
EXTRN	__imp__SetBkColor@8:PROC
EXTRN	__imp__SetTextColor@8:PROC
EXTRN	__imp__GetWindowTextA@12:PROC
EXTRN	_safemalloc:PROC
EXTRN	__imp__GetWindowTextLengthA@4:PROC
EXTRN	__imp__Rectangle@20:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__CreateSolidBrush@4:PROC
EXTRN	__imp__GetStockObject@4:PROC
EXTRN	__imp__SelectObject@8:PROC
EXTRN	__imp__BeginPaint@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv64 = -148						; size = 4
_hdc$87439 = -144					; size = 4
_sz$87438 = -136					; size = 8
_str$87436 = -124					; size = 4
_ps$87428 = -116					; size = 64
_hdc$87427 = -48					; size = 4
_wt$87426 = -44						; size = 4
_wtlen$87425 = -40					; size = 4
_cr$87424 = -32						; size = 16
_holdbr$87423 = -12					; size = 4
_hbr$87422 = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
_nMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
_SizeTipWndProc@16 PROC
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 148				; 00000094H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-148]
	mov	ecx, 37					; 00000025H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 21
	mov	eax, DWORD PTR _nMsg$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 2
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 130		; 00000082H
	ja	$LN6@SizeTipWnd
	mov	edx, DWORD PTR tv64[ebp]
	movzx	eax, BYTE PTR $LN10@SizeTipWnd[edx]
	jmp	DWORD PTR $LN16@SizeTipWnd[eax*4]
$LN5@SizeTipWnd:
; Line 23
	mov	eax, 1
	jmp	$LN8@SizeTipWnd
$LN4@SizeTipWnd:
; Line 35
	mov	esi, esp
	lea	ecx, DWORD PTR _ps$87428[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__BeginPaint@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hdc$87427[ebp], eax
; Line 37
	mov	esi, esp
	mov	eax, DWORD PTR _tip_font
	push	eax
	mov	ecx, DWORD PTR _hdc$87427[ebp]
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 38
	mov	esi, esp
	push	7
	call	DWORD PTR __imp__GetStockObject@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _hdc$87427[ebp]
	push	edx
	call	DWORD PTR __imp__SelectObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 40
	mov	esi, esp
	mov	eax, DWORD PTR _tip_bg
	push	eax
	call	DWORD PTR __imp__CreateSolidBrush@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hbr$87422[ebp], eax
; Line 41
	mov	esi, esp
	mov	ecx, DWORD PTR _hbr$87422[ebp]
	push	ecx
	mov	edx, DWORD PTR _hdc$87427[ebp]
	push	edx
	call	DWORD PTR __imp__SelectObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _holdbr$87423[ebp], eax
; Line 43
	mov	esi, esp
	lea	eax, DWORD PTR _cr$87424[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 44
	mov	esi, esp
	mov	edx, DWORD PTR _cr$87424[ebp+12]
	push	edx
	mov	eax, DWORD PTR _cr$87424[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _cr$87424[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _cr$87424[ebp]
	push	edx
	mov	eax, DWORD PTR _hdc$87427[ebp]
	push	eax
	call	DWORD PTR __imp__Rectangle@20
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 46
	mov	esi, esp
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowTextLengthA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _wtlen$87425[ebp], eax
; Line 47
	push	1
	mov	edx, DWORD PTR _wtlen$87425[ebp]
	add	edx, 1
	push	edx
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _wt$87426[ebp], eax
; Line 48
	mov	eax, DWORD PTR _wtlen$87425[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _wt$87426[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetWindowTextA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 50
	mov	esi, esp
	mov	eax, DWORD PTR _tip_text
	push	eax
	mov	ecx, DWORD PTR _hdc$87427[ebp]
	push	ecx
	call	DWORD PTR __imp__SetTextColor@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 51
	mov	esi, esp
	mov	edx, DWORD PTR _tip_bg
	push	edx
	mov	eax, DWORD PTR _hdc$87427[ebp]
	push	eax
	call	DWORD PTR __imp__SetBkColor@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 53
	mov	esi, esp
	mov	ecx, DWORD PTR _wtlen$87425[ebp]
	push	ecx
	mov	edx, DWORD PTR _wt$87426[ebp]
	push	edx
	mov	eax, DWORD PTR _cr$87424[ebp+4]
	add	eax, 3
	push	eax
	mov	ecx, DWORD PTR _cr$87424[ebp]
	add	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _hdc$87427[ebp]
	push	edx
	call	DWORD PTR __imp__TextOutA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 55
	mov	eax, DWORD PTR _wt$87426[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 57
	mov	esi, esp
	mov	ecx, DWORD PTR _holdbr$87423[ebp]
	push	ecx
	mov	edx, DWORD PTR _hdc$87427[ebp]
	push	edx
	call	DWORD PTR __imp__SelectObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 58
	mov	esi, esp
	mov	eax, DWORD PTR _hbr$87422[ebp]
	push	eax
	call	DWORD PTR __imp__DeleteObject@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 60
	mov	esi, esp
	lea	ecx, DWORD PTR _ps$87428[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__EndPaint@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 62
	xor	eax, eax
	jmp	$LN8@SizeTipWnd
$LN3@SizeTipWnd:
; Line 65
	or	eax, -1
	jmp	$LN8@SizeTipWnd
$LN2@SizeTipWnd:
; Line 68
	mov	esi, esp
	mov	eax, DWORD PTR _tip_font
	push	eax
	call	DWORD PTR __imp__DeleteObject@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 69
	mov	DWORD PTR _tip_font, 0
; Line 70
	jmp	$LN6@SizeTipWnd
$LN1@SizeTipWnd:
; Line 74
	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _str$87436[ebp], ecx
; Line 76
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__CreateCompatibleDC@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hdc$87439[ebp], eax
; Line 78
	mov	esi, esp
	mov	edx, DWORD PTR _tip_font
	push	edx
	mov	eax, DWORD PTR _hdc$87439[ebp]
	push	eax
	call	DWORD PTR __imp__SelectObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 79
	mov	esi, esp
	lea	ecx, DWORD PTR _sz$87438[ebp]
	push	ecx
	mov	edx, DWORD PTR _str$87436[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _str$87436[ebp]
	push	eax
	mov	ecx, DWORD PTR _hdc$87439[ebp]
	push	ecx
	call	DWORD PTR __imp__GetTextExtentPoint32A@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 82
	mov	esi, esp
	push	22					; 00000016H
	mov	edx, DWORD PTR _sz$87438[ebp+4]
	add	edx, 6
	push	edx
	mov	eax, DWORD PTR _sz$87438[ebp]
	add	eax, 6
	push	eax
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetWindowPos@28
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 83
	mov	esi, esp
	push	0
	push	0
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__InvalidateRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 85
	mov	esi, esp
	mov	eax, DWORD PTR _hdc$87439[ebp]
	push	eax
	call	DWORD PTR __imp__DeleteDC@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@SizeTipWnd:
; Line 90
	mov	esi, esp
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _nMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__DefWindowProcA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@SizeTipWnd:
; Line 91
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@SizeTipWnd
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 148				; 00000094H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN15@SizeTipWnd:
	DD	3
	DD	$LN14@SizeTipWnd
$LN14@SizeTipWnd:
	DD	-32					; ffffffe0H
	DD	16					; 00000010H
	DD	$LN11@SizeTipWnd
	DD	-116					; ffffff8cH
	DD	64					; 00000040H
	DD	$LN12@SizeTipWnd
	DD	-136					; ffffff78H
	DD	8
	DD	$LN13@SizeTipWnd
$LN13@SizeTipWnd:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	0
$LN12@SizeTipWnd:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN11@SizeTipWnd:
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	0
	npad	3
$LN16@SizeTipWnd:
	DD	$LN2@SizeTipWnd
	DD	$LN1@SizeTipWnd
	DD	$LN4@SizeTipWnd
	DD	$LN5@SizeTipWnd
	DD	$LN3@SizeTipWnd
	DD	$LN6@SizeTipWnd
$LN10@SizeTipWnd:
	DB	0
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	1
	DB	5
	DB	5
	DB	2
	DB	5
	DB	5
	DB	5
	DB	5
	DB	3
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	4
_SizeTipWndProc@16 ENDP
_TEXT	ENDS
PUBLIC	_EnableSizeTip
EXTRN	__imp__DestroyWindow@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bEnable$ = 8						; size = 4
_EnableSizeTip PROC
; Line 187
	push	ebp
	mov	ebp, esp
	push	esi
; Line 188
	cmp	DWORD PTR _tip_wnd, 0
	je	SHORT $LN1@EnableSize
	cmp	DWORD PTR _bEnable$[ebp], 0
	jne	SHORT $LN1@EnableSize
; Line 189
	mov	esi, esp
	mov	eax, DWORD PTR _tip_wnd
	push	eax
	call	DWORD PTR __imp__DestroyWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 190
	mov	DWORD PTR _tip_wnd, 0
$LN1@EnableSize:
; Line 193
	mov	ecx, DWORD PTR _bEnable$[ebp]
	mov	DWORD PTR _tip_enabled, ecx
; Line 194
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_EnableSizeTip ENDP
_TEXT	ENDS
END

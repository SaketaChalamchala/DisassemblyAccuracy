; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\Putty\wcwidth.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
?combining@?1??mk_wcwidth@@9@9 DD 0300H			; `mk_wcwidth'::`2'::combining
	DD	036fH
	DD	0483H
	DD	0486H
	DD	0488H
	DD	0489H
	DD	0591H
	DD	05bdH
	DD	05bfH
	DD	05bfH
	DD	05c1H
	DD	05c2H
	DD	05c4H
	DD	05c5H
	DD	05c7H
	DD	05c7H
	DD	0600H
	DD	0603H
	DD	0610H
	DD	0615H
	DD	064bH
	DD	065eH
	DD	0670H
	DD	0670H
	DD	06d6H
	DD	06e4H
	DD	06e7H
	DD	06e8H
	DD	06eaH
	DD	06edH
	DD	070fH
	DD	070fH
	DD	0711H
	DD	0711H
	DD	0730H
	DD	074aH
	DD	07a6H
	DD	07b0H
	DD	07ebH
	DD	07f3H
	DD	0901H
	DD	0902H
	DD	093cH
	DD	093cH
	DD	0941H
	DD	0948H
	DD	094dH
	DD	094dH
	DD	0951H
	DD	0954H
	DD	0962H
	DD	0963H
	DD	0981H
	DD	0981H
	DD	09bcH
	DD	09bcH
	DD	09c1H
	DD	09c4H
	DD	09cdH
	DD	09cdH
	DD	09e2H
	DD	09e3H
	DD	0a01H
	DD	0a02H
	DD	0a3cH
	DD	0a3cH
	DD	0a41H
	DD	0a42H
	DD	0a47H
	DD	0a48H
	DD	0a4bH
	DD	0a4dH
	DD	0a70H
	DD	0a71H
	DD	0a81H
	DD	0a82H
	DD	0abcH
	DD	0abcH
	DD	0ac1H
	DD	0ac5H
	DD	0ac7H
	DD	0ac8H
	DD	0acdH
	DD	0acdH
	DD	0ae2H
	DD	0ae3H
	DD	0b01H
	DD	0b01H
	DD	0b3cH
	DD	0b3cH
	DD	0b3fH
	DD	0b3fH
	DD	0b41H
	DD	0b43H
	DD	0b4dH
	DD	0b4dH
	DD	0b56H
	DD	0b56H
	DD	0b82H
	DD	0b82H
	DD	0bc0H
	DD	0bc0H
	DD	0bcdH
	DD	0bcdH
	DD	0c3eH
	DD	0c40H
	DD	0c46H
	DD	0c48H
	DD	0c4aH
	DD	0c4dH
	DD	0c55H
	DD	0c56H
	DD	0cbcH
	DD	0cbcH
	DD	0cbfH
	DD	0cbfH
	DD	0cc6H
	DD	0cc6H
	DD	0cccH
	DD	0ccdH
	DD	0ce2H
	DD	0ce3H
	DD	0d41H
	DD	0d43H
	DD	0d4dH
	DD	0d4dH
	DD	0dcaH
	DD	0dcaH
	DD	0dd2H
	DD	0dd4H
	DD	0dd6H
	DD	0dd6H
	DD	0e31H
	DD	0e31H
	DD	0e34H
	DD	0e3aH
	DD	0e47H
	DD	0e4eH
	DD	0eb1H
	DD	0eb1H
	DD	0eb4H
	DD	0eb9H
	DD	0ebbH
	DD	0ebcH
	DD	0ec8H
	DD	0ecdH
	DD	0f18H
	DD	0f19H
	DD	0f35H
	DD	0f35H
	DD	0f37H
	DD	0f37H
	DD	0f39H
	DD	0f39H
	DD	0f71H
	DD	0f7eH
	DD	0f80H
	DD	0f84H
	DD	0f86H
	DD	0f87H
	DD	0f90H
	DD	0f97H
	DD	0f99H
	DD	0fbcH
	DD	0fc6H
	DD	0fc6H
	DD	0102dH
	DD	01030H
	DD	01032H
	DD	01032H
	DD	01036H
	DD	01037H
	DD	01039H
	DD	01039H
	DD	01058H
	DD	01059H
	DD	01160H
	DD	011ffH
	DD	0135fH
	DD	0135fH
	DD	01712H
	DD	01714H
	DD	01732H
	DD	01734H
	DD	01752H
	DD	01753H
	DD	01772H
	DD	01773H
	DD	017b4H
	DD	017b5H
	DD	017b7H
	DD	017bdH
	DD	017c6H
	DD	017c6H
	DD	017c9H
	DD	017d3H
	DD	017ddH
	DD	017ddH
	DD	0180bH
	DD	0180dH
	DD	018a9H
	DD	018a9H
	DD	01920H
	DD	01922H
	DD	01927H
	DD	01928H
	DD	01932H
	DD	01932H
	DD	01939H
	DD	0193bH
	DD	01a17H
	DD	01a18H
	DD	01b00H
	DD	01b03H
	DD	01b34H
	DD	01b34H
	DD	01b36H
	DD	01b3aH
	DD	01b3cH
	DD	01b3cH
	DD	01b42H
	DD	01b42H
	DD	01b6bH
	DD	01b73H
	DD	01dc0H
	DD	01dcaH
	DD	01dfeH
	DD	01dffH
	DD	0200bH
	DD	0200fH
	DD	0202aH
	DD	0202eH
	DD	02060H
	DD	02063H
	DD	0206aH
	DD	0206fH
	DD	020d0H
	DD	020efH
	DD	0302aH
	DD	0302fH
	DD	03099H
	DD	0309aH
	DD	0a806H
	DD	0a806H
	DD	0a80bH
	DD	0a80bH
	DD	0a825H
	DD	0a826H
	DD	0fb1eH
	DD	0fb1eH
	DD	0fe00H
	DD	0fe0fH
	DD	0fe20H
	DD	0fe23H
	DD	0feffH
	DD	0feffH
	DD	0fff9H
	DD	0fffbH
	DD	010a01H
	DD	010a03H
	DD	010a05H
	DD	010a06H
	DD	010a0cH
	DD	010a0fH
	DD	010a38H
	DD	010a3aH
	DD	010a3fH
	DD	010a3fH
	DD	01d167H
	DD	01d169H
	DD	01d173H
	DD	01d182H
	DD	01d185H
	DD	01d18bH
	DD	01d1aaH
	DD	01d1adH
	DD	01d242H
	DD	01d244H
	DD	0e0001H
	DD	0e0001H
	DD	0e0020H
	DD	0e007fH
	DD	0e0100H
	DD	0e01efH
?ambiguous@?1??mk_wcwidth_cjk@@9@9 DD 0a1H		; `mk_wcwidth_cjk'::`2'::ambiguous
	DD	0a1H
	DD	0a4H
	DD	0a4H
	DD	0a7H
	DD	0a8H
	DD	0aaH
	DD	0aaH
	DD	0aeH
	DD	0aeH
	DD	0b0H
	DD	0b4H
	DD	0b6H
	DD	0baH
	DD	0bcH
	DD	0bfH
	DD	0c6H
	DD	0c6H
	DD	0d0H
	DD	0d0H
	DD	0d7H
	DD	0d8H
	DD	0deH
	DD	0e1H
	DD	0e6H
	DD	0e6H
	DD	0e8H
	DD	0eaH
	DD	0ecH
	DD	0edH
	DD	0f0H
	DD	0f0H
	DD	0f2H
	DD	0f3H
	DD	0f7H
	DD	0faH
	DD	0fcH
	DD	0fcH
	DD	0feH
	DD	0feH
	DD	0101H
	DD	0101H
	DD	0111H
	DD	0111H
	DD	0113H
	DD	0113H
	DD	011bH
	DD	011bH
	DD	0126H
	DD	0127H
	DD	012bH
	DD	012bH
	DD	0131H
	DD	0133H
	DD	0138H
	DD	0138H
	DD	013fH
	DD	0142H
	DD	0144H
	DD	0144H
	DD	0148H
	DD	014bH
	DD	014dH
	DD	014dH
	DD	0152H
	DD	0153H
	DD	0166H
	DD	0167H
	DD	016bH
	DD	016bH
	DD	01ceH
	DD	01ceH
	DD	01d0H
	DD	01d0H
	DD	01d2H
	DD	01d2H
	DD	01d4H
	DD	01d4H
	DD	01d6H
	DD	01d6H
	DD	01d8H
	DD	01d8H
	DD	01daH
	DD	01daH
	DD	01dcH
	DD	01dcH
	DD	0251H
	DD	0251H
	DD	0261H
	DD	0261H
	DD	02c4H
	DD	02c4H
	DD	02c7H
	DD	02c7H
	DD	02c9H
	DD	02cbH
	DD	02cdH
	DD	02cdH
	DD	02d0H
	DD	02d0H
	DD	02d8H
	DD	02dbH
	DD	02ddH
	DD	02ddH
	DD	02dfH
	DD	02dfH
	DD	0391H
	DD	03a1H
	DD	03a3H
	DD	03a9H
	DD	03b1H
	DD	03c1H
	DD	03c3H
	DD	03c9H
	DD	0401H
	DD	0401H
	DD	0410H
	DD	044fH
	DD	0451H
	DD	0451H
	DD	02010H
	DD	02010H
	DD	02013H
	DD	02016H
	DD	02018H
	DD	02019H
	DD	0201cH
	DD	0201dH
	DD	02020H
	DD	02022H
	DD	02024H
	DD	02027H
	DD	02030H
	DD	02030H
	DD	02032H
	DD	02033H
	DD	02035H
	DD	02035H
	DD	0203bH
	DD	0203bH
	DD	0203eH
	DD	0203eH
	DD	02074H
	DD	02074H
	DD	0207fH
	DD	0207fH
	DD	02081H
	DD	02084H
	DD	020acH
	DD	020acH
	DD	02103H
	DD	02103H
	DD	02105H
	DD	02105H
	DD	02109H
	DD	02109H
	DD	02113H
	DD	02113H
	DD	02116H
	DD	02116H
	DD	02121H
	DD	02122H
	DD	02126H
	DD	02126H
	DD	0212bH
	DD	0212bH
	DD	02153H
	DD	02154H
	DD	0215bH
	DD	0215eH
	DD	02160H
	DD	0216bH
	DD	02170H
	DD	02179H
	DD	02190H
	DD	02199H
	DD	021b8H
	DD	021b9H
	DD	021d2H
	DD	021d2H
	DD	021d4H
	DD	021d4H
	DD	021e7H
	DD	021e7H
	DD	02200H
	DD	02200H
	DD	02202H
	DD	02203H
	DD	02207H
	DD	02208H
	DD	0220bH
	DD	0220bH
	DD	0220fH
	DD	0220fH
	DD	02211H
	DD	02211H
	DD	02215H
	DD	02215H
	DD	0221aH
	DD	0221aH
	DD	0221dH
	DD	02220H
	DD	02223H
	DD	02223H
	DD	02225H
	DD	02225H
	DD	02227H
	DD	0222cH
	DD	0222eH
	DD	0222eH
	DD	02234H
	DD	02237H
	DD	0223cH
	DD	0223dH
	DD	02248H
	DD	02248H
	DD	0224cH
	DD	0224cH
	DD	02252H
	DD	02252H
	DD	02260H
	DD	02261H
	DD	02264H
	DD	02267H
	DD	0226aH
	DD	0226bH
	DD	0226eH
	DD	0226fH
	DD	02282H
	DD	02283H
	DD	02286H
	DD	02287H
	DD	02295H
	DD	02295H
	DD	02299H
	DD	02299H
	DD	022a5H
	DD	022a5H
	DD	022bfH
	DD	022bfH
	DD	02312H
	DD	02312H
	DD	02460H
	DD	024e9H
	DD	024ebH
	DD	0254bH
	DD	02550H
	DD	02573H
	DD	02580H
	DD	0258fH
	DD	02592H
	DD	02595H
	DD	025a0H
	DD	025a1H
	DD	025a3H
	DD	025a9H
	DD	025b2H
	DD	025b3H
	DD	025b6H
	DD	025b7H
	DD	025bcH
	DD	025bdH
	DD	025c0H
	DD	025c1H
	DD	025c6H
	DD	025c8H
	DD	025cbH
	DD	025cbH
	DD	025ceH
	DD	025d1H
	DD	025e2H
	DD	025e5H
	DD	025efH
	DD	025efH
	DD	02605H
	DD	02606H
	DD	02609H
	DD	02609H
	DD	0260eH
	DD	0260fH
	DD	02614H
	DD	02615H
	DD	0261cH
	DD	0261cH
	DD	0261eH
	DD	0261eH
	DD	02640H
	DD	02640H
	DD	02642H
	DD	02642H
	DD	02660H
	DD	02661H
	DD	02663H
	DD	02665H
	DD	02667H
	DD	0266aH
	DD	0266cH
	DD	0266dH
	DD	0266fH
	DD	0266fH
	DD	0273dH
	DD	0273dH
	DD	02776H
	DD	0277fH
	DD	0e000H
	DD	0f8ffH
	DD	0fffdH
	DD	0fffdH
	DD	0f0000H
	DD	0ffffdH
	DD	0100000H
	DD	010fffdH
CONST	ENDS
PUBLIC	_mk_wcwidth
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\putty\wcwidth.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv128 = -4						; size = 4
_ucs$ = 8						; size = 4
_mk_wcwidth PROC
; Line 125
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 180
	cmp	DWORD PTR _ucs$[ebp], 0
	jne	SHORT $LN4@mk_wcwidth
; Line 181
	xor	eax, eax
	jmp	$LN5@mk_wcwidth
$LN4@mk_wcwidth:
; Line 182
	cmp	DWORD PTR _ucs$[ebp], 32		; 00000020H
	jb	SHORT $LN2@mk_wcwidth
	cmp	DWORD PTR _ucs$[ebp], 127		; 0000007fH
	jb	SHORT $LN3@mk_wcwidth
	cmp	DWORD PTR _ucs$[ebp], 160		; 000000a0H
	jae	SHORT $LN3@mk_wcwidth
$LN2@mk_wcwidth:
; Line 183
	or	eax, -1
	jmp	$LN5@mk_wcwidth
$LN3@mk_wcwidth:
; Line 187
	push	141					; 0000008dH
	push	OFFSET ?combining@?1??mk_wcwidth@@9@9
	mov	eax, DWORD PTR _ucs$[ebp]
	push	eax
	call	_bisearch
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN1@mk_wcwidth
; Line 188
	xor	eax, eax
	jmp	$LN5@mk_wcwidth
$LN1@mk_wcwidth:
; Line 205
	cmp	DWORD PTR _ucs$[ebp], 4352		; 00001100H
	jb	$LN16@mk_wcwidth
	cmp	DWORD PTR _ucs$[ebp], 4447		; 0000115fH
	jbe	$LN7@mk_wcwidth
	cmp	DWORD PTR _ucs$[ebp], 9001		; 00002329H
	je	$LN7@mk_wcwidth
	cmp	DWORD PTR _ucs$[ebp], 9002		; 0000232aH
	je	$LN7@mk_wcwidth
	cmp	DWORD PTR _ucs$[ebp], 11904		; 00002e80H
	jb	SHORT $LN8@mk_wcwidth
	cmp	DWORD PTR _ucs$[ebp], 42191		; 0000a4cfH
	ja	SHORT $LN8@mk_wcwidth
	cmp	DWORD PTR _ucs$[ebp], 12351		; 0000303fH
	jne	$LN7@mk_wcwidth
$LN8@mk_wcwidth:
	cmp	DWORD PTR _ucs$[ebp], 44032		; 0000ac00H
	jb	SHORT $LN9@mk_wcwidth
	cmp	DWORD PTR _ucs$[ebp], 55203		; 0000d7a3H
	jbe	SHORT $LN7@mk_wcwidth
$LN9@mk_wcwidth:
	cmp	DWORD PTR _ucs$[ebp], 63744		; 0000f900H
	jb	SHORT $LN10@mk_wcwidth
	cmp	DWORD PTR _ucs$[ebp], 64255		; 0000faffH
	jbe	SHORT $LN7@mk_wcwidth
$LN10@mk_wcwidth:
	cmp	DWORD PTR _ucs$[ebp], 65040		; 0000fe10H
	jb	SHORT $LN11@mk_wcwidth
	cmp	DWORD PTR _ucs$[ebp], 65049		; 0000fe19H
	jbe	SHORT $LN7@mk_wcwidth
$LN11@mk_wcwidth:
	cmp	DWORD PTR _ucs$[ebp], 65072		; 0000fe30H
	jb	SHORT $LN12@mk_wcwidth
	cmp	DWORD PTR _ucs$[ebp], 65135		; 0000fe6fH
	jbe	SHORT $LN7@mk_wcwidth
$LN12@mk_wcwidth:
	cmp	DWORD PTR _ucs$[ebp], 65280		; 0000ff00H
	jb	SHORT $LN13@mk_wcwidth
	cmp	DWORD PTR _ucs$[ebp], 65376		; 0000ff60H
	jbe	SHORT $LN7@mk_wcwidth
$LN13@mk_wcwidth:
	cmp	DWORD PTR _ucs$[ebp], 65504		; 0000ffe0H
	jb	SHORT $LN14@mk_wcwidth
	cmp	DWORD PTR _ucs$[ebp], 65510		; 0000ffe6H
	jbe	SHORT $LN7@mk_wcwidth
$LN14@mk_wcwidth:
	cmp	DWORD PTR _ucs$[ebp], 131072		; 00020000H
	jb	SHORT $LN15@mk_wcwidth
	cmp	DWORD PTR _ucs$[ebp], 196605		; 0002fffdH
	jbe	SHORT $LN7@mk_wcwidth
$LN15@mk_wcwidth:
	cmp	DWORD PTR _ucs$[ebp], 196608		; 00030000H
	jb	SHORT $LN16@mk_wcwidth
	cmp	DWORD PTR _ucs$[ebp], 262141		; 0003fffdH
	ja	SHORT $LN16@mk_wcwidth
$LN7@mk_wcwidth:
	mov	DWORD PTR tv128[ebp], 1
	jmp	SHORT $LN18@mk_wcwidth
$LN16@mk_wcwidth:
	mov	DWORD PTR tv128[ebp], 0
$LN18@mk_wcwidth:
	mov	eax, DWORD PTR tv128[ebp]
	add	eax, 1
$LN5@mk_wcwidth:
; Line 206
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_mk_wcwidth ENDP
; Function compile flags: /Odtp /RTCsu
_mid$ = -8						; size = 4
_min$ = -4						; size = 4
_ucs$ = 8						; size = 4
_table$ = 12						; size = 4
_max$ = 16						; size = 4
_bisearch PROC
; Line 72
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 73
	mov	DWORD PTR _min$[ebp], 0
; Line 76
	mov	eax, DWORD PTR _table$[ebp]
	mov	ecx, DWORD PTR _ucs$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jb	SHORT $LN7@bisearch
	mov	edx, DWORD PTR _max$[ebp]
	mov	eax, DWORD PTR _table$[ebp]
	mov	ecx, DWORD PTR _ucs$[ebp]
	cmp	ecx, DWORD PTR [eax+edx*8+4]
	jbe	SHORT $LN6@bisearch
$LN7@bisearch:
; Line 77
	xor	eax, eax
	jmp	SHORT $LN9@bisearch
$LN6@bisearch:
; Line 78
	mov	edx, DWORD PTR _max$[ebp]
	cmp	edx, DWORD PTR _min$[ebp]
	jl	SHORT $LN5@bisearch
; Line 79
	mov	eax, DWORD PTR _min$[ebp]
	add	eax, DWORD PTR _max$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _mid$[ebp], eax
; Line 80
	mov	eax, DWORD PTR _mid$[ebp]
	mov	ecx, DWORD PTR _table$[ebp]
	mov	edx, DWORD PTR _ucs$[ebp]
	cmp	edx, DWORD PTR [ecx+eax*8+4]
	jbe	SHORT $LN4@bisearch
; Line 81
	mov	eax, DWORD PTR _mid$[ebp]
	add	eax, 1
	mov	DWORD PTR _min$[ebp], eax
	jmp	SHORT $LN3@bisearch
$LN4@bisearch:
; Line 82
	mov	ecx, DWORD PTR _mid$[ebp]
	mov	edx, DWORD PTR _table$[ebp]
	mov	eax, DWORD PTR _ucs$[ebp]
	cmp	eax, DWORD PTR [edx+ecx*8]
	jae	SHORT $LN2@bisearch
; Line 83
	mov	ecx, DWORD PTR _mid$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _max$[ebp], ecx
; Line 84
	jmp	SHORT $LN3@bisearch
$LN2@bisearch:
; Line 85
	mov	eax, 1
	jmp	SHORT $LN9@bisearch
$LN3@bisearch:
; Line 86
	jmp	SHORT $LN6@bisearch
$LN5@bisearch:
; Line 88
	xor	eax, eax
$LN9@bisearch:
; Line 89
	mov	esp, ebp
	pop	ebp
	ret	0
_bisearch ENDP
_TEXT	ENDS
PUBLIC	_mk_wcswidth
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv68 = -12						; size = 4
_width$ = -8						; size = 4
_w$ = -4						; size = 4
_pwcs$ = 8						; size = 4
_n$ = 12						; size = 4
_mk_wcswidth PROC
; Line 210
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 211
	mov	DWORD PTR _width$[ebp], 0
; Line 213
	jmp	SHORT $LN5@mk_wcswidt
$LN4@mk_wcswidt:
	mov	eax, DWORD PTR _pwcs$[ebp]
	add	eax, 4
	mov	DWORD PTR _pwcs$[ebp], eax
$LN5@mk_wcswidt:
	mov	ecx, DWORD PTR _pwcs$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN3@mk_wcswidt
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	sub	eax, 1
	mov	DWORD PTR _n$[ebp], eax
	test	edx, edx
	jbe	SHORT $LN8@mk_wcswidt
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN9@mk_wcswidt
$LN8@mk_wcswidt:
	mov	DWORD PTR tv68[ebp], 0
$LN9@mk_wcswidt:
	cmp	DWORD PTR tv68[ebp], 0
	je	SHORT $LN3@mk_wcswidt
; Line 214
	mov	ecx, DWORD PTR _pwcs$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_mk_wcwidth
	add	esp, 4
	mov	DWORD PTR _w$[ebp], eax
	cmp	DWORD PTR _w$[ebp], 0
	jge	SHORT $LN2@mk_wcswidt
; Line 215
	or	eax, -1
	jmp	SHORT $LN6@mk_wcswidt
; Line 216
	jmp	SHORT $LN1@mk_wcswidt
$LN2@mk_wcswidt:
; Line 217
	mov	eax, DWORD PTR _width$[ebp]
	add	eax, DWORD PTR _w$[ebp]
	mov	DWORD PTR _width$[ebp], eax
$LN1@mk_wcswidt:
	jmp	SHORT $LN4@mk_wcswidt
$LN3@mk_wcswidt:
; Line 219
	mov	eax, DWORD PTR _width$[ebp]
$LN6@mk_wcswidt:
; Line 220
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_mk_wcswidth ENDP
_TEXT	ENDS
PUBLIC	_mk_wcwidth_cjk
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ucs$ = 8						; size = 4
_mk_wcwidth_cjk PROC
; Line 233
	push	ebp
	mov	ebp, esp
; Line 293
	push	155					; 0000009bH
	push	OFFSET ?ambiguous@?1??mk_wcwidth_cjk@@9@9
	mov	eax, DWORD PTR _ucs$[ebp]
	push	eax
	call	_bisearch
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN1@mk_wcwidth@2
; Line 294
	mov	eax, 2
	jmp	SHORT $LN2@mk_wcwidth@2
$LN1@mk_wcwidth@2:
; Line 296
	mov	ecx, DWORD PTR _ucs$[ebp]
	push	ecx
	call	_mk_wcwidth
	add	esp, 4
$LN2@mk_wcwidth@2:
; Line 297
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_mk_wcwidth_cjk ENDP
_TEXT	ENDS
PUBLIC	_mk_wcswidth_cjk
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv68 = -12						; size = 4
_width$ = -8						; size = 4
_w$ = -4						; size = 4
_pwcs$ = 8						; size = 4
_n$ = 12						; size = 4
_mk_wcswidth_cjk PROC
; Line 301
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 302
	mov	DWORD PTR _width$[ebp], 0
; Line 304
	jmp	SHORT $LN5@mk_wcswidt@2
$LN4@mk_wcswidt@2:
	mov	eax, DWORD PTR _pwcs$[ebp]
	add	eax, 4
	mov	DWORD PTR _pwcs$[ebp], eax
$LN5@mk_wcswidt@2:
	mov	ecx, DWORD PTR _pwcs$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN3@mk_wcswidt@2
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	sub	eax, 1
	mov	DWORD PTR _n$[ebp], eax
	test	edx, edx
	jbe	SHORT $LN8@mk_wcswidt@2
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN9@mk_wcswidt@2
$LN8@mk_wcswidt@2:
	mov	DWORD PTR tv68[ebp], 0
$LN9@mk_wcswidt@2:
	cmp	DWORD PTR tv68[ebp], 0
	je	SHORT $LN3@mk_wcswidt@2
; Line 305
	mov	ecx, DWORD PTR _pwcs$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_mk_wcwidth_cjk
	add	esp, 4
	mov	DWORD PTR _w$[ebp], eax
	cmp	DWORD PTR _w$[ebp], 0
	jge	SHORT $LN2@mk_wcswidt@2
; Line 306
	or	eax, -1
	jmp	SHORT $LN6@mk_wcswidt@2
; Line 307
	jmp	SHORT $LN1@mk_wcswidt@2
$LN2@mk_wcswidt@2:
; Line 308
	mov	eax, DWORD PTR _width$[ebp]
	add	eax, DWORD PTR _w$[ebp]
	mov	DWORD PTR _width$[ebp], eax
$LN1@mk_wcswidt@2:
	jmp	SHORT $LN4@mk_wcswidt@2
$LN3@mk_wcswidt@2:
; Line 310
	mov	eax, DWORD PTR _width$[ebp]
$LN6@mk_wcswidt@2:
; Line 311
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_mk_wcswidth_cjk ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\Putty\windows\winnoise.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_wincrypt_module DD 01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
$SG87199 DB	'\*', 00H
	ORG $+1
$SG87207 DB	'advapi32.dll', 00H
	ORG $+3
$SG87210 DB	'CryptAcquireContextA', 00H
	ORG $+3
$SG87213 DB	'CryptGenRandom', 00H
	ORG $+1
$SG87216 DB	'CryptReleaseContext', 00H
_DATA	ENDS
PUBLIC	_random_save_seed
PUBLIC	__$ArrayPad$
PUBLIC	_noise_get_heavy
EXTRN	_read_random_seed:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	_load_system32_dll:PROC
EXTRN	__imp__GetCurrentProcessId@0:PROC
EXTRN	__imp__FindClose@4:PROC
EXTRN	__imp__FindNextFileA@8:PROC
EXTRN	__imp__FindFirstFileA@8:PROC
EXTRN	_strcat:PROC
EXTRN	__imp__GetWindowsDirectoryA@8:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
_BSS	SEGMENT
_p_CryptReleaseContext DD 01H DUP (?)
_p_CryptGenRandom DD 01H DUP (?)
_p_CryptAcquireContextA DD 01H DUP (?)
_BSS	ENDS
;	COMDAT rtc$TMZ
; File c:\workspace\putty\windows\winnoise.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv131 = -684						; size = 4
tv94 = -680						; size = 4
tv89 = -676						; size = 4
_buf$87220 = -668					; size = 32
_winpath$ = -628					; size = 263
_crypt_provider$ = -356					; size = 4
_pid$ = -344						; size = 4
_finddata$ = -332					; size = 320
_srch$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_func$ = 8						; size = 4
_noise_get_heavy PROC
; Line 27
	push	ebp
	mov	ebp, esp
	sub	esp, 684				; 000002acH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-684]
	mov	ecx, 171				; 000000abH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 34
	mov	esi, esp
	push	263					; 00000107H
	lea	eax, DWORD PTR _winpath$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowsDirectoryA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 35
	push	OFFSET $SG87199
	lea	ecx, DWORD PTR _winpath$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 36
	mov	esi, esp
	lea	edx, DWORD PTR _finddata$[ebp]
	push	edx
	lea	eax, DWORD PTR _winpath$[ebp]
	push	eax
	call	DWORD PTR __imp__FindFirstFileA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _srch$[ebp], eax
; Line 37
	cmp	DWORD PTR _srch$[ebp], -1
	je	SHORT $LN7@noise_get_
$LN6@noise_get_:
; Line 39
	mov	esi, esp
	push	320					; 00000140H
	lea	ecx, DWORD PTR _finddata$[ebp]
	push	ecx
	call	DWORD PTR _func$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 40
	mov	esi, esp
	lea	edx, DWORD PTR _finddata$[ebp]
	push	edx
	mov	eax, DWORD PTR _srch$[ebp]
	push	eax
	call	DWORD PTR __imp__FindNextFileA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN6@noise_get_
; Line 41
	mov	esi, esp
	mov	ecx, DWORD PTR _srch$[ebp]
	push	ecx
	call	DWORD PTR __imp__FindClose@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@noise_get_:
; Line 44
	mov	esi, esp
	call	DWORD PTR __imp__GetCurrentProcessId@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pid$[ebp], eax
; Line 45
	mov	esi, esp
	push	4
	lea	edx, DWORD PTR _pid$[ebp]
	push	edx
	call	DWORD PTR _func$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 47
	cmp	DWORD PTR _wincrypt_module, 0
	jne	$LN3@noise_get_
; Line 48
	push	OFFSET $SG87207
	call	_load_system32_dll
	add	esp, 4
	mov	DWORD PTR _wincrypt_module, eax
; Line 49
	cmp	DWORD PTR _wincrypt_module, 0
	je	SHORT $LN10@noise_get_
	mov	esi, esp
	push	OFFSET $SG87210
	mov	eax, DWORD PTR _wincrypt_module
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN11@noise_get_
$LN10@noise_get_:
	mov	DWORD PTR tv89[ebp], 0
$LN11@noise_get_:
	mov	ecx, DWORD PTR tv89[ebp]
	mov	DWORD PTR _p_CryptAcquireContextA, ecx
; Line 50
	cmp	DWORD PTR _wincrypt_module, 0
	je	SHORT $LN12@noise_get_
	mov	esi, esp
	push	OFFSET $SG87213
	mov	edx, DWORD PTR _wincrypt_module
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN13@noise_get_
$LN12@noise_get_:
	mov	DWORD PTR tv94[ebp], 0
$LN13@noise_get_:
	mov	eax, DWORD PTR tv94[ebp]
	mov	DWORD PTR _p_CryptGenRandom, eax
; Line 51
	cmp	DWORD PTR _wincrypt_module, 0
	je	SHORT $LN14@noise_get_
	mov	esi, esp
	push	OFFSET $SG87216
	mov	ecx, DWORD PTR _wincrypt_module
	push	ecx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN15@noise_get_
$LN14@noise_get_:
	mov	DWORD PTR tv131[ebp], 0
$LN15@noise_get_:
	mov	edx, DWORD PTR tv131[ebp]
	mov	DWORD PTR _p_CryptReleaseContext, edx
$LN3@noise_get_:
; Line 57
	cmp	DWORD PTR _wincrypt_module, 0
	je	$LN2@noise_get_
	cmp	DWORD PTR _p_CryptAcquireContextA, 0
	je	$LN2@noise_get_
	cmp	DWORD PTR _p_CryptGenRandom, 0
	je	$LN2@noise_get_
	cmp	DWORD PTR _p_CryptReleaseContext, 0
	je	SHORT $LN2@noise_get_
	mov	esi, esp
	push	-268435456				; f0000000H
	push	1
	push	0
	push	0
	lea	eax, DWORD PTR _crypt_provider$[ebp]
	push	eax
	call	DWORD PTR _p_CryptAcquireContextA
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@noise_get_
; Line 59
	mov	esi, esp
	lea	ecx, DWORD PTR _buf$87220[ebp]
	push	ecx
	push	32					; 00000020H
	mov	edx, DWORD PTR _crypt_provider$[ebp]
	push	edx
	call	DWORD PTR _p_CryptGenRandom
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@noise_get_
; Line 60
	mov	esi, esp
	push	32					; 00000020H
	lea	eax, DWORD PTR _buf$87220[ebp]
	push	eax
	call	DWORD PTR _func$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@noise_get_:
; Line 62
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _crypt_provider$[ebp]
	push	ecx
	call	DWORD PTR _p_CryptReleaseContext
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@noise_get_:
; Line 65
	mov	edx, DWORD PTR _func$[ebp]
	push	edx
	call	_read_random_seed
	add	esp, 4
; Line 67
	call	_random_save_seed
; Line 68
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@noise_get_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 684				; 000002acH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN22@noise_get_:
	DD	5
	DD	$LN21@noise_get_
$LN21@noise_get_:
	DD	-332					; fffffeb4H
	DD	320					; 00000140H
	DD	$LN16@noise_get_
	DD	-344					; fffffea8H
	DD	4
	DD	$LN17@noise_get_
	DD	-356					; fffffe9cH
	DD	4
	DD	$LN18@noise_get_
	DD	-628					; fffffd8cH
	DD	263					; 00000107H
	DD	$LN19@noise_get_
	DD	-668					; fffffd64H
	DD	32					; 00000020H
	DD	$LN20@noise_get_
$LN20@noise_get_:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN19@noise_get_:
	DB	119					; 00000077H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN18@noise_get_:
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN17@noise_get_:
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN16@noise_get_:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_noise_get_heavy ENDP
_TEXT	ENDS
EXTRN	_safefree:PROC
EXTRN	_write_random_seed:PROC
EXTRN	_random_get_savedata:PROC
EXTRN	_random_active:DWORD
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_data$ = -20						; size = 4
_len$ = -8						; size = 4
_random_save_seed PROC
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 75
	cmp	DWORD PTR _random_active, 0
	je	SHORT $LN2@random_sav
; Line 76
	lea	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _data$[ebp]
	push	ecx
	call	_random_get_savedata
	add	esp, 8
; Line 77
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	call	_write_random_seed
	add	esp, 8
; Line 78
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN2@random_sav:
; Line 80
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@random_sav
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@random_sav:
	DD	2
	DD	$LN6@random_sav
$LN6@random_sav:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@random_sav
	DD	-20					; ffffffecH
	DD	4
	DD	$LN5@random_sav
$LN5@random_sav:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN4@random_sav:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
_random_save_seed ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_noise_get_light
EXTRN	__imp__GetSystemTimeAdjustment@12:PROC
EXTRN	__imp__GetSystemTime@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_rubbish$ = -52						; size = 4
_adjust$ = -40						; size = 8
_systime$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_func$ = 8						; size = 4
_noise_get_light PROC
; Line 88
	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 14					; 0000000eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 93
	mov	esi, esp
	lea	eax, DWORD PTR _systime$[ebp]
	push	eax
	call	DWORD PTR __imp__GetSystemTime@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 94
	mov	esi, esp
	push	16					; 00000010H
	lea	ecx, DWORD PTR _systime$[ebp]
	push	ecx
	call	DWORD PTR _func$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 96
	mov	esi, esp
	lea	edx, DWORD PTR _rubbish$[ebp]
	push	edx
	lea	eax, DWORD PTR _adjust$[ebp+4]
	push	eax
	lea	ecx, DWORD PTR _adjust$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetSystemTimeAdjustment@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 97
	mov	esi, esp
	push	8
	lea	edx, DWORD PTR _adjust$[ebp]
	push	edx
	call	DWORD PTR _func$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 98
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@noise_get_@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@noise_get_@2:
	DD	3
	DD	$LN6@noise_get_@2
$LN6@noise_get_@2:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN3@noise_get_@2
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN4@noise_get_@2
	DD	-52					; ffffffccH
	DD	4
	DD	$LN5@noise_get_@2
$LN5@noise_get_@2:
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	98					; 00000062H
	DB	98					; 00000062H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	0
$LN4@noise_get_@2:
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	106					; 0000006aH
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN3@noise_get_@2:
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_noise_get_light ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_noise_regular
EXTRN	__imp__GetProcessTimes@20:PROC
EXTRN	__imp__GetCurrentProcess@0:PROC
EXTRN	__imp__GetThreadTimes@20:PROC
EXTRN	__imp__GetCurrentThread@0:PROC
EXTRN	__imp__GlobalMemoryStatus@4:PROC
EXTRN	__imp__GetCursorPos@4:PROC
EXTRN	__imp__GetQueueStatus@4:PROC
EXTRN	__imp__GetClipboardOwner@0:PROC
EXTRN	__imp__GetCapture@0:PROC
EXTRN	_random_add_noise:PROC
EXTRN	__imp__GetForegroundWindow@0:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_times$ = -120						; size = 32
_memstat$ = -80						; size = 32
_pt$ = -40						; size = 8
_z$ = -24						; size = 4
_w$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_noise_regular PROC
; Line 107
	push	ebp
	mov	ebp, esp
	sub	esp, 124				; 0000007cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-124]
	mov	ecx, 31					; 0000001fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 114
	mov	esi, esp
	call	DWORD PTR __imp__GetForegroundWindow@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _w$[ebp], eax
; Line 115
	push	4
	lea	eax, DWORD PTR _w$[ebp]
	push	eax
	call	_random_add_noise
	add	esp, 8
; Line 116
	mov	esi, esp
	call	DWORD PTR __imp__GetCapture@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _w$[ebp], eax
; Line 117
	push	4
	lea	ecx, DWORD PTR _w$[ebp]
	push	ecx
	call	_random_add_noise
	add	esp, 8
; Line 118
	mov	esi, esp
	call	DWORD PTR __imp__GetClipboardOwner@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _w$[ebp], eax
; Line 119
	push	4
	lea	edx, DWORD PTR _w$[ebp]
	push	edx
	call	_random_add_noise
	add	esp, 8
; Line 120
	mov	esi, esp
	push	1215					; 000004bfH
	call	DWORD PTR __imp__GetQueueStatus@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _z$[ebp], eax
; Line 121
	push	4
	lea	eax, DWORD PTR _z$[ebp]
	push	eax
	call	_random_add_noise
	add	esp, 8
; Line 123
	mov	esi, esp
	lea	ecx, DWORD PTR _pt$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetCursorPos@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 124
	push	8
	lea	edx, DWORD PTR _pt$[ebp]
	push	edx
	call	_random_add_noise
	add	esp, 8
; Line 126
	mov	esi, esp
	lea	eax, DWORD PTR _memstat$[ebp]
	push	eax
	call	DWORD PTR __imp__GlobalMemoryStatus@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 127
	push	32					; 00000020H
	lea	ecx, DWORD PTR _memstat$[ebp]
	push	ecx
	call	_random_add_noise
	add	esp, 8
; Line 130
	lea	edx, DWORD PTR _times$[ebp+24]
	mov	esi, esp
	push	edx
	lea	eax, DWORD PTR _times$[ebp+16]
	push	eax
	lea	ecx, DWORD PTR _times$[ebp+8]
	push	ecx
	lea	edx, DWORD PTR _times$[ebp]
	push	edx
	mov	edi, esp
	call	DWORD PTR __imp__GetCurrentThread@0
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__GetThreadTimes@20
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 131
	push	32					; 00000020H
	lea	eax, DWORD PTR _times$[ebp]
	push	eax
	call	_random_add_noise
	add	esp, 8
; Line 133
	lea	ecx, DWORD PTR _times$[ebp+24]
	mov	esi, esp
	push	ecx
	lea	edx, DWORD PTR _times$[ebp+16]
	push	edx
	lea	eax, DWORD PTR _times$[ebp+8]
	push	eax
	lea	ecx, DWORD PTR _times$[ebp]
	push	ecx
	mov	edi, esp
	call	DWORD PTR __imp__GetCurrentProcess@0
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__GetProcessTimes@20
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 134
	push	32					; 00000020H
	lea	edx, DWORD PTR _times$[ebp]
	push	edx
	call	_random_add_noise
	add	esp, 8
; Line 135
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@noise_regu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 124				; 0000007cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@noise_regu:
	DD	5
	DD	$LN8@noise_regu
$LN8@noise_regu:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@noise_regu
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN4@noise_regu
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN5@noise_regu
	DD	-80					; ffffffb0H
	DD	32					; 00000020H
	DD	$LN6@noise_regu
	DD	-120					; ffffff88H
	DD	32					; 00000020H
	DD	$LN7@noise_regu
$LN7@noise_regu:
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN6@noise_regu:
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
$LN5@noise_regu:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	0
$LN4@noise_regu:
	DB	122					; 0000007aH
	DB	0
$LN3@noise_regu:
	DB	119					; 00000077H
	DB	0
_noise_regular ENDP
_TEXT	ENDS
PUBLIC	_noise_ultralight
EXTRN	__imp__QueryPerformanceCounter@4:PROC
EXTRN	__imp__GetTickCount@0:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_perftime$ = -24					; size = 8
_wintime$ = -8						; size = 4
_data$ = 8						; size = 4
_noise_ultralight PROC
; Line 144
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 148
	push	4
	lea	eax, DWORD PTR _data$[ebp]
	push	eax
	call	_random_add_noise
	add	esp, 8
; Line 150
	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _wintime$[ebp], eax
; Line 151
	push	4
	lea	ecx, DWORD PTR _wintime$[ebp]
	push	ecx
	call	_random_add_noise
	add	esp, 8
; Line 153
	mov	esi, esp
	lea	edx, DWORD PTR _perftime$[ebp]
	push	edx
	call	DWORD PTR __imp__QueryPerformanceCounter@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@noise_ultr
; Line 154
	push	8
	lea	eax, DWORD PTR _perftime$[ebp]
	push	eax
	call	_random_add_noise
	add	esp, 8
$LN2@noise_ultr:
; Line 155
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@noise_ultr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@noise_ultr:
	DD	2
	DD	$LN6@noise_ultr
$LN6@noise_ultr:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@noise_ultr
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN5@noise_ultr
$LN5@noise_ultr:
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	102					; 00000066H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN4@noise_ultr:
	DB	119					; 00000077H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_noise_ultralight ENDP
_TEXT	ENDS
END

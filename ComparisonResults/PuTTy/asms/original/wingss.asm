; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\Putty\windows\wingss.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_ngsslibs
PUBLIC	_gsslibnames
PUBLIC	_gsslibkeywords
PUBLIC	_gss_mech_krb5
PUBLIC	_gsslogmsg
_BSS	SEGMENT
_gsslogmsg DD	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
$SG87085 DB	'MIT Kerberos GSSAPI32.DLL', 00H
	ORG $+2
$SG87086 DB	'Microsoft SSPI SECUR32.DLL', 00H
	ORG $+1
$SG87087 DB	'User-specified GSSAPI DLL', 00H
	ORG $+2
$SG87088 DB	'gssapi32', 00H
	ORG $+3
$SG87089 DB	'sspi', 00H
	ORG $+3
$SG87090 DB	'custom', 00H
	ORG $+1
$SG87145 DB	'*', 086H, 'H', 086H, 0f7H, 012H, 01H, 02H, 02H, 00H
	ORG $+2
$SG87167 DB	'SOFTWARE\MIT\Kerberos', 00H
	ORG $+2
$SG87174 DB	'InstallDir', 00H
	ORG $+1
$SG87179 DB	'InstallDir', 00H
	ORG $+1
$SG87181 DB	'\bin\gssapi32.dll', 00H
	ORG $+2
$SG87184 DB	'Using GSSAPI from GSSAPI32.DLL', 00H
	ORG $+1
$SG87187 DB	'gss_delete_sec_context', 00H
	ORG $+1
$SG87189 DB	'gss_display_status', 00H
	ORG $+1
$SG87191 DB	'gss_get_mic', 00H
$SG87193 DB	'gss_import_name', 00H
$SG87195 DB	'gss_init_sec_context', 00H
	ORG $+3
$SG87197 DB	'gss_release_buffer', 00H
	ORG $+1
$SG87199 DB	'gss_release_cred', 00H
	ORG $+3
$SG87201 DB	'gss_release_name', 00H
	ORG $+3
$SG87202 DB	'secur32.dll', 00H
$SG87205 DB	'Using SSPI from SECUR32.DLL', 00H
$SG87209 DB	'AcquireCredentialsHandleA', 00H
	ORG $+2
$SG87212 DB	'InitializeSecurityContextA', 00H
	ORG $+1
$SG87215 DB	'FreeContextBuffer', 00H
	ORG $+2
$SG87218 DB	'FreeCredentialsHandle', 00H
	ORG $+2
$SG87221 DB	'DeleteSecurityContext', 00H
	ORG $+2
$SG87224 DB	'QueryContextAttributesA', 00H
$SG87227 DB	'MakeSignature', 00H
	ORG $+2
$SG87232 DB	'Using GSSAPI from user-specified library ''%s''', 00H
	ORG $+2
$SG87235 DB	'gss_delete_sec_context', 00H
	ORG $+1
$SG87237 DB	'gss_display_status', 00H
	ORG $+1
$SG87239 DB	'gss_get_mic', 00H
$SG87241 DB	'gss_import_name', 00H
$SG87243 DB	'gss_init_sec_context', 00H
	ORG $+3
$SG87245 DB	'gss_release_buffer', 00H
	ORG $+1
$SG87247 DB	'gss_release_cred', 00H
	ORG $+3
$SG87249 DB	'gss_release_name', 00H
	ORG $+3
$SG87278 DB	'host/', 00H
	ORG $+2
$SG87297 DB	'Kerberos', 00H
	ORG $+3
$SG87384 DB	'SSPI status OK', 00H
	ORG $+1
$SG87387 DB	'The handle passed to the function is invalid.', 00H
	ORG $+2
$SG87390 DB	'The target was not recognized.', 00H
	ORG $+1
$SG87393 DB	'The logon failed.', 00H
	ORG $+2
$SG87396 DB	'The Local Security Authority cannot be contacted.', 00H
	ORG $+2
$SG87399 DB	'No credentials are available in the security package.', 00H
	ORG $+2
$SG87402 DB	'No authority could be contacted for authentication.The d'
	DB	'omain name of the authenticating party could be wrong, the do'
	DB	'main could be unreachable, or there might have been a trust r'
	DB	'elationship failure.', 00H
	ORG $+1
$SG87405 DB	'One or more of the SecBufferDesc structures passed as an'
	DB	' OUT parameter has a buffer that is too small.', 00H
	ORG $+1
$SG87408 DB	'The error is due to a malformed input token, such as a t'
	DB	'oken corrupted in transit, a token of incorrect size, or a to'
	DB	'ken passed into the wrong security package. Passing a token t'
	DB	'o the wrong package can happen if client and server did not n'
	DB	'egotiate the proper security package.', 00H
	ORG $+3
$SG87410 DB	'Internal SSPI error', 00H
_DATA	ENDS
CONST	SEGMENT
_ngsslibs DD	03H
_gsslibnames DD	FLAT:$SG87085
	DD	FLAT:$SG87086
	DD	FLAT:$SG87087
_gsslibkeywords DD FLAT:$SG87088
	DD	00H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:$SG87089
	DD	01H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	FLAT:$SG87090
	DD	02H
	DD	0ffffffffH
	DD	0ffffffffH
_gss_mech_krb5 DD 09H
	DD	FLAT:$SG87145
CONST	ENDS
PUBLIC	_ssh_gss_setup
EXTRN	_dupprintf:PROC
EXTRN	_conf_get_filename:PROC
EXTRN	_load_system32_dll:PROC
EXTRN	_ssh_gssapi_bind_fns:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__RegCloseKey@4:PROC
EXTRN	_safefree:PROC
EXTRN	__imp__LoadLibraryA@4:PROC
EXTRN	_strcat:PROC
EXTRN	__imp__RegQueryValueExA@24:PROC
EXTRN	__imp__RegOpenKeyA@12:PROC
EXTRN	_safemalloc:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
_BSS	SEGMENT
_p_MakeSignature DD 01H DUP (?)
_p_QueryContextAttributesA DD 01H DUP (?)
_p_DeleteSecurityContext DD 01H DUP (?)
_p_FreeCredentialsHandle DD 01H DUP (?)
_p_FreeContextBuffer DD 01H DUP (?)
_p_InitializeSecurityContextA DD 01H DUP (?)
_p_AcquireCredentialsHandleA DD 01H DUP (?)
_BSS	ENDS
;	COMDAT rtc$TMZ
; File c:\workspace\putty\windows\wingss.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv223 = -96						; size = 4
tv218 = -92						; size = 4
tv213 = -88						; size = 4
tv208 = -84						; size = 4
tv203 = -80						; size = 4
tv198 = -76						; size = 4
tv193 = -72						; size = 4
_lib$87231 = -68					; size = 4
_lib$87204 = -64					; size = 4
_lib$87183 = -60					; size = 4
_buffer$87171 = -56					; size = 4
_ret$87170 = -52					; size = 4
_size$87169 = -44					; size = 4
_type$87168 = -32					; size = 4
_path$ = -24						; size = 4
_list$ = -20						; size = 4
_regkey$ = -12						; size = 4
_module$ = -4						; size = 4
_conf$ = 8						; size = 4
_ssh_gss_setup PROC
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-96]
	mov	ecx, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 73
	push	8
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _list$[ebp], eax
; Line 76
	push	84					; 00000054H
	push	3
	call	_safemalloc
	add	esp, 8
	mov	ecx, DWORD PTR _list$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 77
	mov	edx, DWORD PTR _list$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 81
	mov	DWORD PTR _module$[ebp], 0
; Line 83
	mov	esi, esp
	lea	eax, DWORD PTR _regkey$[ebp]
	push	eax
	push	OFFSET $SG87167
	push	-2147483646				; 80000002H
	call	DWORD PTR __imp__RegOpenKeyA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	$LN7@ssh_gss_se
; Line 89
	mov	esi, esp
	lea	ecx, DWORD PTR _size$87169[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR _type$87168[ebp]
	push	edx
	push	0
	push	OFFSET $SG87174
	mov	eax, DWORD PTR _regkey$[ebp]
	push	eax
	call	DWORD PTR __imp__RegQueryValueExA@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ret$87170[ebp], eax
; Line 91
	cmp	DWORD PTR _ret$87170[ebp], 0
	jne	$LN6@ssh_gss_se
	cmp	DWORD PTR _type$87168[ebp], 1
	jne	SHORT $LN6@ssh_gss_se
; Line 92
	push	1
	mov	ecx, DWORD PTR _size$87169[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _buffer$87171[ebp], eax
; Line 94
	mov	esi, esp
	lea	edx, DWORD PTR _size$87169[ebp]
	push	edx
	mov	eax, DWORD PTR _buffer$87171[ebp]
	push	eax
	lea	ecx, DWORD PTR _type$87168[ebp]
	push	ecx
	push	0
	push	OFFSET $SG87179
	mov	edx, DWORD PTR _regkey$[ebp]
	push	edx
	call	DWORD PTR __imp__RegQueryValueExA@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ret$87170[ebp], eax
; Line 95
	cmp	DWORD PTR _ret$87170[ebp], 0
	jne	SHORT $LN5@ssh_gss_se
	cmp	DWORD PTR _type$87168[ebp], 1
	jne	SHORT $LN5@ssh_gss_se
; Line 96
	push	OFFSET $SG87181
	mov	eax, DWORD PTR _buffer$87171[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 97
	mov	esi, esp
	mov	ecx, DWORD PTR _buffer$87171[ebp]
	push	ecx
	call	DWORD PTR __imp__LoadLibraryA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _module$[ebp], eax
$LN5@ssh_gss_se:
; Line 99
	mov	edx, DWORD PTR _buffer$87171[ebp]
	push	edx
	call	_safefree
	add	esp, 4
$LN6@ssh_gss_se:
; Line 101
	mov	esi, esp
	mov	eax, DWORD PTR _regkey$[ebp]
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@ssh_gss_se:
; Line 103
	cmp	DWORD PTR _module$[ebp], 0
	je	$LN4@ssh_gss_se
; Line 105
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 84					; 00000054H
	mov	eax, DWORD PTR _list$[ebp]
	add	edx, DWORD PTR [eax]
	mov	DWORD PTR _lib$87183[ebp], edx
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _list$[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 107
	mov	ecx, DWORD PTR _lib$87183[ebp]
	mov	DWORD PTR [ecx], 0
; Line 108
	mov	edx, DWORD PTR _lib$87183[ebp]
	mov	DWORD PTR [edx+4], OFFSET $SG87184
; Line 109
	mov	eax, DWORD PTR _lib$87183[ebp]
	mov	ecx, DWORD PTR _module$[ebp]
	mov	DWORD PTR [eax+80], ecx
; Line 114
	mov	esi, esp
	push	OFFSET $SG87187
	mov	edx, DWORD PTR _module$[ebp]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _lib$87183[ebp]
	mov	DWORD PTR [ecx+48], eax
; Line 115
	mov	esi, esp
	push	OFFSET $SG87189
	mov	edx, DWORD PTR _module$[ebp]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _lib$87183[ebp]
	mov	DWORD PTR [ecx+52], eax
; Line 116
	mov	esi, esp
	push	OFFSET $SG87191
	mov	edx, DWORD PTR _module$[ebp]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _lib$87183[ebp]
	mov	DWORD PTR [ecx+56], eax
; Line 117
	mov	esi, esp
	push	OFFSET $SG87193
	mov	edx, DWORD PTR _module$[ebp]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _lib$87183[ebp]
	mov	DWORD PTR [ecx+60], eax
; Line 118
	mov	esi, esp
	push	OFFSET $SG87195
	mov	edx, DWORD PTR _module$[ebp]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _lib$87183[ebp]
	mov	DWORD PTR [ecx+64], eax
; Line 119
	mov	esi, esp
	push	OFFSET $SG87197
	mov	edx, DWORD PTR _module$[ebp]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _lib$87183[ebp]
	mov	DWORD PTR [ecx+68], eax
; Line 120
	mov	esi, esp
	push	OFFSET $SG87199
	mov	edx, DWORD PTR _module$[ebp]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _lib$87183[ebp]
	mov	DWORD PTR [ecx+72], eax
; Line 121
	mov	esi, esp
	push	OFFSET $SG87201
	mov	edx, DWORD PTR _module$[ebp]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _lib$87183[ebp]
	mov	DWORD PTR [ecx+76], eax
; Line 125
	mov	edx, DWORD PTR _lib$87183[ebp]
	push	edx
	call	_ssh_gssapi_bind_fns
	add	esp, 4
$LN4@ssh_gss_se:
; Line 129
	push	OFFSET $SG87202
	call	_load_system32_dll
	add	esp, 4
	mov	DWORD PTR _module$[ebp], eax
; Line 130
	cmp	DWORD PTR _module$[ebp], 0
	je	$LN3@ssh_gss_se
; Line 132
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 84					; 00000054H
	mov	edx, DWORD PTR _list$[ebp]
	add	ecx, DWORD PTR [edx]
	mov	DWORD PTR _lib$87204[ebp], ecx
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _list$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 134
	mov	eax, DWORD PTR _lib$87204[ebp]
	mov	DWORD PTR [eax], 1
; Line 135
	mov	ecx, DWORD PTR _lib$87204[ebp]
	mov	DWORD PTR [ecx+4], OFFSET $SG87205
; Line 136
	mov	edx, DWORD PTR _lib$87204[ebp]
	mov	eax, DWORD PTR _module$[ebp]
	mov	DWORD PTR [edx+80], eax
; Line 138
	cmp	DWORD PTR _module$[ebp], 0
	je	SHORT $LN10@ssh_gss_se
	mov	esi, esp
	push	OFFSET $SG87209
	mov	ecx, DWORD PTR _module$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv193[ebp], eax
	jmp	SHORT $LN11@ssh_gss_se
$LN10@ssh_gss_se:
	mov	DWORD PTR tv193[ebp], 0
$LN11@ssh_gss_se:
	mov	edx, DWORD PTR tv193[ebp]
	mov	DWORD PTR _p_AcquireCredentialsHandleA, edx
; Line 139
	cmp	DWORD PTR _module$[ebp], 0
	je	SHORT $LN12@ssh_gss_se
	mov	esi, esp
	push	OFFSET $SG87212
	mov	eax, DWORD PTR _module$[ebp]
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv198[ebp], eax
	jmp	SHORT $LN13@ssh_gss_se
$LN12@ssh_gss_se:
	mov	DWORD PTR tv198[ebp], 0
$LN13@ssh_gss_se:
	mov	ecx, DWORD PTR tv198[ebp]
	mov	DWORD PTR _p_InitializeSecurityContextA, ecx
; Line 140
	cmp	DWORD PTR _module$[ebp], 0
	je	SHORT $LN14@ssh_gss_se
	mov	esi, esp
	push	OFFSET $SG87215
	mov	edx, DWORD PTR _module$[ebp]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv203[ebp], eax
	jmp	SHORT $LN15@ssh_gss_se
$LN14@ssh_gss_se:
	mov	DWORD PTR tv203[ebp], 0
$LN15@ssh_gss_se:
	mov	eax, DWORD PTR tv203[ebp]
	mov	DWORD PTR _p_FreeContextBuffer, eax
; Line 141
	cmp	DWORD PTR _module$[ebp], 0
	je	SHORT $LN16@ssh_gss_se
	mov	esi, esp
	push	OFFSET $SG87218
	mov	ecx, DWORD PTR _module$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv208[ebp], eax
	jmp	SHORT $LN17@ssh_gss_se
$LN16@ssh_gss_se:
	mov	DWORD PTR tv208[ebp], 0
$LN17@ssh_gss_se:
	mov	edx, DWORD PTR tv208[ebp]
	mov	DWORD PTR _p_FreeCredentialsHandle, edx
; Line 142
	cmp	DWORD PTR _module$[ebp], 0
	je	SHORT $LN18@ssh_gss_se
	mov	esi, esp
	push	OFFSET $SG87221
	mov	eax, DWORD PTR _module$[ebp]
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv213[ebp], eax
	jmp	SHORT $LN19@ssh_gss_se
$LN18@ssh_gss_se:
	mov	DWORD PTR tv213[ebp], 0
$LN19@ssh_gss_se:
	mov	ecx, DWORD PTR tv213[ebp]
	mov	DWORD PTR _p_DeleteSecurityContext, ecx
; Line 143
	cmp	DWORD PTR _module$[ebp], 0
	je	SHORT $LN20@ssh_gss_se
	mov	esi, esp
	push	OFFSET $SG87224
	mov	edx, DWORD PTR _module$[ebp]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv218[ebp], eax
	jmp	SHORT $LN21@ssh_gss_se
$LN20@ssh_gss_se:
	mov	DWORD PTR tv218[ebp], 0
$LN21@ssh_gss_se:
	mov	eax, DWORD PTR tv218[ebp]
	mov	DWORD PTR _p_QueryContextAttributesA, eax
; Line 144
	cmp	DWORD PTR _module$[ebp], 0
	je	SHORT $LN22@ssh_gss_se
	mov	esi, esp
	push	OFFSET $SG87227
	mov	ecx, DWORD PTR _module$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv223[ebp], eax
	jmp	SHORT $LN23@ssh_gss_se
$LN22@ssh_gss_se:
	mov	DWORD PTR tv223[ebp], 0
$LN23@ssh_gss_se:
	mov	edx, DWORD PTR tv223[ebp]
	mov	DWORD PTR _p_MakeSignature, edx
; Line 146
	mov	eax, DWORD PTR _lib$87204[ebp]
	push	eax
	call	_ssh_sspi_bind_fns
	add	esp, 4
$LN3@ssh_gss_se:
; Line 152
	mov	DWORD PTR _module$[ebp], 0
; Line 153
	push	40					; 00000028H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_filename
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _path$[ebp], edx
; Line 154
	mov	eax, DWORD PTR _path$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@ssh_gss_se
; Line 155
	mov	esi, esp
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	call	DWORD PTR __imp__LoadLibraryA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _module$[ebp], eax
$LN2@ssh_gss_se:
; Line 157
	cmp	DWORD PTR _module$[ebp], 0
	je	$LN1@ssh_gss_se
; Line 159
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 84					; 00000054H
	mov	edx, DWORD PTR _list$[ebp]
	add	ecx, DWORD PTR [edx]
	mov	DWORD PTR _lib$87231[ebp], ecx
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _list$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 161
	mov	eax, DWORD PTR _lib$87231[ebp]
	mov	DWORD PTR [eax], 2
; Line 163
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	push	OFFSET $SG87232
	call	_dupprintf
	add	esp, 8
	mov	edx, DWORD PTR _lib$87231[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 164
	mov	eax, DWORD PTR _lib$87231[ebp]
	mov	ecx, DWORD PTR _module$[ebp]
	mov	DWORD PTR [eax+80], ecx
; Line 169
	mov	esi, esp
	push	OFFSET $SG87235
	mov	edx, DWORD PTR _module$[ebp]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _lib$87231[ebp]
	mov	DWORD PTR [ecx+48], eax
; Line 170
	mov	esi, esp
	push	OFFSET $SG87237
	mov	edx, DWORD PTR _module$[ebp]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _lib$87231[ebp]
	mov	DWORD PTR [ecx+52], eax
; Line 171
	mov	esi, esp
	push	OFFSET $SG87239
	mov	edx, DWORD PTR _module$[ebp]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _lib$87231[ebp]
	mov	DWORD PTR [ecx+56], eax
; Line 172
	mov	esi, esp
	push	OFFSET $SG87241
	mov	edx, DWORD PTR _module$[ebp]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _lib$87231[ebp]
	mov	DWORD PTR [ecx+60], eax
; Line 173
	mov	esi, esp
	push	OFFSET $SG87243
	mov	edx, DWORD PTR _module$[ebp]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _lib$87231[ebp]
	mov	DWORD PTR [ecx+64], eax
; Line 174
	mov	esi, esp
	push	OFFSET $SG87245
	mov	edx, DWORD PTR _module$[ebp]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _lib$87231[ebp]
	mov	DWORD PTR [ecx+68], eax
; Line 175
	mov	esi, esp
	push	OFFSET $SG87247
	mov	edx, DWORD PTR _module$[ebp]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _lib$87231[ebp]
	mov	DWORD PTR [ecx+72], eax
; Line 176
	mov	esi, esp
	push	OFFSET $SG87249
	mov	edx, DWORD PTR _module$[ebp]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _lib$87231[ebp]
	mov	DWORD PTR [ecx+76], eax
; Line 180
	mov	edx, DWORD PTR _lib$87231[ebp]
	push	edx
	call	_ssh_gssapi_bind_fns
	add	esp, 4
$LN1@ssh_gss_se:
; Line 184
	mov	eax, DWORD PTR _list$[ebp]
; Line 185
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN28@ssh_gss_se
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 96					; 00000060H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN28@ssh_gss_se:
	DD	3
	DD	$LN27@ssh_gss_se
$LN27@ssh_gss_se:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN24@ssh_gss_se
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN25@ssh_gss_se
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN26@ssh_gss_se
$LN26@ssh_gss_se:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN25@ssh_gss_se:
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
$LN24@ssh_gss_se:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
_ssh_gss_setup ENDP
_TEXT	ENDS
PUBLIC	_ssh_gss_cleanup
EXTRN	__imp__FreeLibrary@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$ = -4						; size = 4
_list$ = 8						; size = 4
_ssh_gss_cleanup PROC
; Line 188
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 200
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@ssh_gss_cl
$LN3@ssh_gss_cl:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@ssh_gss_cl:
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jge	SHORT $LN2@ssh_gss_cl
; Line 201
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 84					; 00000054H
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+eax+80]
	push	eax
	call	DWORD PTR __imp__FreeLibrary@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 202
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 84					; 00000054H
	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	DWORD PTR [ecx+eax], 2
	jne	SHORT $LN1@ssh_gss_cl
; Line 205
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 84					; 00000054H
	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+ecx+4]
	push	ecx
	call	_safefree
	add	esp, 4
$LN1@ssh_gss_cl:
; Line 207
	jmp	SHORT $LN3@ssh_gss_cl
$LN2@ssh_gss_cl:
; Line 208
	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_safefree
	add	esp, 4
; Line 209
	mov	ecx, DWORD PTR _list$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 210
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_gss_cleanup ENDP
; Function compile flags: /Odtp /RTCsu
_lib$ = 8						; size = 4
_ssh_sspi_bind_fns PROC
; Line 459
	push	ebp
	mov	ebp, esp
; Line 460
	mov	eax, DWORD PTR _lib$[ebp]
	mov	DWORD PTR [eax+8], OFFSET _ssh_sspi_indicate_mech
; Line 461
	mov	ecx, DWORD PTR _lib$[ebp]
	mov	DWORD PTR [ecx+12], OFFSET _ssh_sspi_import_name
; Line 462
	mov	edx, DWORD PTR _lib$[ebp]
	mov	DWORD PTR [edx+16], OFFSET _ssh_sspi_release_name
; Line 463
	mov	eax, DWORD PTR _lib$[ebp]
	mov	DWORD PTR [eax+20], OFFSET _ssh_sspi_init_sec_context
; Line 464
	mov	ecx, DWORD PTR _lib$[ebp]
	mov	DWORD PTR [ecx+24], OFFSET _ssh_sspi_free_tok
; Line 465
	mov	edx, DWORD PTR _lib$[ebp]
	mov	DWORD PTR [edx+28], OFFSET _ssh_sspi_acquire_cred
; Line 466
	mov	eax, DWORD PTR _lib$[ebp]
	mov	DWORD PTR [eax+32], OFFSET _ssh_sspi_release_cred
; Line 467
	mov	ecx, DWORD PTR _lib$[ebp]
	mov	DWORD PTR [ecx+36], OFFSET _ssh_sspi_get_mic
; Line 468
	mov	edx, DWORD PTR _lib$[ebp]
	mov	DWORD PTR [edx+40], OFFSET _ssh_sspi_free_mic
; Line 469
	mov	eax, DWORD PTR _lib$[ebp]
	mov	DWORD PTR [eax+44], OFFSET _ssh_sspi_display_status
; Line 470
	pop	ebp
	ret	0
_ssh_sspi_bind_fns ENDP
; Function compile flags: /Odtp /RTCsu
_lib$ = 8						; size = 4
_mech$ = 12						; size = 4
_ssh_sspi_indicate_mech PROC
; Line 214
	push	ebp
	mov	ebp, esp
; Line 215
	mov	eax, DWORD PTR _mech$[ebp]
	mov	ecx, DWORD PTR _gss_mech_krb5
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _gss_mech_krb5+4
	mov	DWORD PTR [eax+4], edx
; Line 216
	xor	eax, eax
; Line 217
	pop	ebp
	ret	0
_ssh_sspi_indicate_mech ENDP
_TEXT	ENDS
EXTRN	_dupcat:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pStr$ = -4						; size = 4
_lib$ = 8						; size = 4
_host$ = 12						; size = 4
_srv_name$ = 16						; size = 4
_ssh_sspi_import_name PROC
; Line 222
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 226
	cmp	DWORD PTR _host$[ebp], 0
	jne	SHORT $LN1@ssh_sspi_i
	mov	eax, 4
	jmp	SHORT $LN2@ssh_sspi_i
$LN1@ssh_sspi_i:
; Line 229
	push	0
	mov	eax, DWORD PTR _host$[ebp]
	push	eax
	push	OFFSET $SG87278
	call	_dupcat
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pStr$[ebp], eax
; Line 231
	mov	ecx, DWORD PTR _srv_name$[ebp]
	mov	edx, DWORD PTR _pStr$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 233
	xor	eax, eax
$LN2@ssh_sspi_i:
; Line 234
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_sspi_import_name ENDP
_TEXT	ENDS
EXTRN	_memset:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_winctx$ = -4						; size = 4
_lib$ = 8						; size = 4
_ctx$ = 12						; size = 4
_ssh_sspi_acquire_cred PROC
; Line 238
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 239
	push	40					; 00000028H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _winctx$[ebp], eax
; Line 240
	push	40					; 00000028H
	push	0
	mov	eax, DWORD PTR _winctx$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 243
	mov	ecx, DWORD PTR _winctx$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _winctx$[ebp]
	mov	DWORD PTR [edx], 0
; Line 244
	mov	eax, DWORD PTR _winctx$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 257
	mov	ecx, DWORD PTR _winctx$[ebp]
	add	ecx, 32					; 00000020H
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _winctx$[ebp]
	add	edx, 8
	push	edx
	push	0
	push	0
	push	0
	push	0
	push	2
	push	OFFSET $SG87297
	push	0
	call	DWORD PTR _p_AcquireCredentialsHandleA
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _winctx$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 259
	mov	edx, DWORD PTR _winctx$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN1@ssh_sspi_a
	mov	eax, 4
	jmp	SHORT $LN2@ssh_sspi_a
$LN1@ssh_sspi_a:
; Line 261
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	ecx, DWORD PTR _winctx$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 262
	xor	eax, eax
$LN2@ssh_sspi_a:
; Line 263
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_sspi_acquire_cred ENDP
; Function compile flags: /Odtp /RTCsu
_ret_flags$ = -96					; size = 4
_flags$ = -88						; size = 4
_input_desc$ = -80					; size = 12
_output_desc$ = -60					; size = 12
_wrecv_tok$ = -40					; size = 12
_wsend_tok$ = -20					; size = 12
_winctx$ = -4						; size = 4
_lib$ = 8						; size = 4
_ctx$ = 12						; size = 4
_srv_name$ = 16						; size = 4
_to_deleg$ = 20						; size = 4
_recv_tok$ = 24						; size = 4
_send_tok$ = 28						; size = 4
_ssh_sspi_init_sec_context PROC
; Line 272
	push	ebp
	mov	ebp, esp
	sub	esp, 100				; 00000064H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-100]
	mov	ecx, 25					; 00000019H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 273
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _winctx$[ebp], ecx
; Line 274
	mov	edx, DWORD PTR _send_tok$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _wsend_tok$[ebp], eax
	mov	DWORD PTR _wsend_tok$[ebp+4], 2
	mov	ecx, DWORD PTR _send_tok$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _wsend_tok$[ebp+8], edx
; Line 275
	mov	eax, DWORD PTR _recv_tok$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _wrecv_tok$[ebp], ecx
	mov	DWORD PTR _wrecv_tok$[ebp+4], 2
	mov	edx, DWORD PTR _recv_tok$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _wrecv_tok$[ebp+8], eax
; Line 276
	mov	DWORD PTR _output_desc$[ebp], 0
	mov	DWORD PTR _output_desc$[ebp+4], 1
	lea	ecx, DWORD PTR _wsend_tok$[ebp]
	mov	DWORD PTR _output_desc$[ebp+8], ecx
; Line 277
	mov	DWORD PTR _input_desc$[ebp], 0
	mov	DWORD PTR _input_desc$[ebp+4], 1
	lea	edx, DWORD PTR _wrecv_tok$[ebp]
	mov	DWORD PTR _input_desc$[ebp+8], edx
; Line 279
	mov	DWORD PTR _flags$[ebp], 278		; 00000116H
; Line 280
	mov	DWORD PTR _ret_flags$[ebp], 0
; Line 283
	cmp	DWORD PTR _to_deleg$[ebp], 0
	je	SHORT $LN3@ssh_sspi_i@2
	mov	eax, DWORD PTR _flags$[ebp]
	or	eax, 1
	mov	DWORD PTR _flags$[ebp], eax
$LN3@ssh_sspi_i@2:
; Line 295
	mov	ecx, DWORD PTR _winctx$[ebp]
	add	ecx, 32					; 00000020H
	mov	esi, esp
	push	ecx
	lea	edx, DWORD PTR _ret_flags$[ebp]
	push	edx
	lea	eax, DWORD PTR _output_desc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _winctx$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	push	0
	lea	edx, DWORD PTR _input_desc$[ebp]
	push	edx
	push	16					; 00000010H
	push	0
	mov	eax, DWORD PTR _flags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srv_name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _winctx$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _winctx$[ebp]
	add	ecx, 8
	push	ecx
	call	DWORD PTR _p_InitializeSecurityContextA
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _winctx$[ebp]
	mov	DWORD PTR [edx], eax
; Line 298
	mov	eax, DWORD PTR _winctx$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _winctx$[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 299
	mov	edx, DWORD PTR _send_tok$[ebp]
	mov	eax, DWORD PTR _wsend_tok$[ebp+8]
	mov	DWORD PTR [edx+4], eax
; Line 300
	mov	ecx, DWORD PTR _send_tok$[ebp]
	mov	edx, DWORD PTR _wsend_tok$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 303
	mov	eax, DWORD PTR _winctx$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN2@ssh_sspi_i@2
	xor	eax, eax
	jmp	SHORT $LN4@ssh_sspi_i@2
$LN2@ssh_sspi_i@2:
; Line 304
	mov	ecx, DWORD PTR _winctx$[ebp]
	cmp	DWORD PTR [ecx], 590610			; 00090312H
	jne	SHORT $LN1@ssh_sspi_i@2
	mov	eax, 1
	jmp	SHORT $LN4@ssh_sspi_i@2
$LN1@ssh_sspi_i@2:
; Line 306
	mov	eax, 4
$LN4@ssh_sspi_i@2:
; Line 307
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@ssh_sspi_i@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 100				; 00000064H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN12@ssh_sspi_i@2:
	DD	5
	DD	$LN11@ssh_sspi_i@2
$LN11@ssh_sspi_i@2:
	DD	-20					; ffffffecH
	DD	12					; 0000000cH
	DD	$LN6@ssh_sspi_i@2
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN7@ssh_sspi_i@2
	DD	-60					; ffffffc4H
	DD	12					; 0000000cH
	DD	$LN8@ssh_sspi_i@2
	DD	-80					; ffffffb0H
	DD	12					; 0000000cH
	DD	$LN9@ssh_sspi_i@2
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN10@ssh_sspi_i@2
$LN10@ssh_sspi_i@2:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	102					; 00000066H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
$LN9@ssh_sspi_i@2:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
$LN8@ssh_sspi_i@2:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
$LN7@ssh_sspi_i@2:
	DB	119					; 00000077H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	118					; 00000076H
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	0
$LN6@ssh_sspi_i@2:
	DB	119					; 00000077H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	0
_ssh_sspi_init_sec_context ENDP
; Function compile flags: /Odtp /RTCsu
_lib$ = 8						; size = 4
_send_tok$ = 12						; size = 4
_ssh_sspi_free_tok PROC
; Line 311
	push	ebp
	mov	ebp, esp
	push	esi
; Line 313
	cmp	DWORD PTR _send_tok$[ebp], 0
	jne	SHORT $LN4@ssh_sspi_f
	mov	eax, 4
	jmp	SHORT $LN5@ssh_sspi_f
$LN4@ssh_sspi_f:
; Line 316
	mov	esi, esp
	mov	eax, DWORD PTR _send_tok$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR _p_FreeContextBuffer
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@ssh_sspi_f:
; Line 317
	mov	edx, DWORD PTR _send_tok$[ebp]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR _send_tok$[ebp]
	mov	DWORD PTR [eax+4], 0
	xor	ecx, ecx
	jne	SHORT $LN3@ssh_sspi_f
; Line 319
	xor	eax, eax
$LN5@ssh_sspi_f:
; Line 320
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh_sspi_free_tok ENDP
; Function compile flags: /Odtp /RTCsu
_winctx$ = -4						; size = 4
_lib$ = 8						; size = 4
_ctx$ = 12						; size = 4
_ssh_sspi_release_cred PROC
; Line 324
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 325
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _winctx$[ebp], ecx
; Line 328
	cmp	DWORD PTR _winctx$[ebp], 0
	jne	SHORT $LN1@ssh_sspi_r
	mov	eax, 4
	jmp	SHORT $LN2@ssh_sspi_r
$LN1@ssh_sspi_r:
; Line 331
	mov	edx, DWORD PTR _winctx$[ebp]
	add	edx, 8
	mov	esi, esp
	push	edx
	call	DWORD PTR _p_FreeCredentialsHandle
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 332
	mov	eax, DWORD PTR _winctx$[ebp]
	add	eax, 16					; 00000010H
	mov	esi, esp
	push	eax
	call	DWORD PTR _p_DeleteSecurityContext
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 335
	mov	ecx, DWORD PTR _winctx$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 336
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [edx], 0
; Line 338
	xor	eax, eax
$LN2@ssh_sspi_r:
; Line 339
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_sspi_release_cred ENDP
; Function compile flags: /Odtp /RTCsu
_pStr$ = -4						; size = 4
_lib$ = 8						; size = 4
_srv_name$ = 12						; size = 4
_ssh_sspi_release_name PROC
; Line 344
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 345
	mov	eax, DWORD PTR _srv_name$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pStr$[ebp], ecx
; Line 347
	cmp	DWORD PTR _pStr$[ebp], 0
	jne	SHORT $LN1@ssh_sspi_r@2
	mov	eax, 4
	jmp	SHORT $LN2@ssh_sspi_r@2
$LN1@ssh_sspi_r@2:
; Line 348
	mov	edx, DWORD PTR _pStr$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 349
	mov	eax, DWORD PTR _srv_name$[ebp]
	mov	DWORD PTR [eax], 0
; Line 351
	xor	eax, eax
$LN2@ssh_sspi_r@2:
; Line 352
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_sspi_release_name ENDP
_TEXT	ENDS
EXTRN	_strlen:PROC
EXTRN	_dupstr:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv65 = -12						; size = 4
_msg$ = -8						; size = 4
_winctx$ = -4						; size = 4
_lib$ = 8						; size = 4
_ctx$ = 12						; size = 4
_buf$ = 16						; size = 4
_ssh_sspi_display_status PROC
; Line 356
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 357
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _winctx$[ebp], eax
; Line 360
	cmp	DWORD PTR _winctx$[ebp], 0
	jne	SHORT $LN13@ssh_sspi_d
	mov	eax, 4
	jmp	$LN14@ssh_sspi_d
$LN13@ssh_sspi_d:
; Line 363
	mov	ecx, DWORD PTR _winctx$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv65[ebp], edx
	cmp	DWORD PTR tv65[ebp], -2146893048	; 80090308H
	ja	SHORT $LN16@ssh_sspi_d
	cmp	DWORD PTR tv65[ebp], -2146893048	; 80090308H
	je	$LN2@ssh_sspi_d
	cmp	DWORD PTR tv65[ebp], -2146893055	; 80090301H
	ja	SHORT $LN17@ssh_sspi_d
	cmp	DWORD PTR tv65[ebp], -2146893055	; 80090301H
	je	SHORT $LN9@ssh_sspi_d
	cmp	DWORD PTR tv65[ebp], 0
	je	SHORT $LN10@ssh_sspi_d
	cmp	DWORD PTR tv65[ebp], -2146893056	; 80090300H
	je	SHORT $LN3@ssh_sspi_d
	jmp	$LN1@ssh_sspi_d
$LN17@ssh_sspi_d:
	cmp	DWORD PTR tv65[ebp], -2146893053	; 80090303H
	je	SHORT $LN8@ssh_sspi_d
	cmp	DWORD PTR tv65[ebp], -2146893052	; 80090304H
	je	SHORT $LN6@ssh_sspi_d
	jmp	SHORT $LN1@ssh_sspi_d
$LN16@ssh_sspi_d:
	cmp	DWORD PTR tv65[ebp], -2146893044	; 8009030cH
	je	SHORT $LN7@ssh_sspi_d
	cmp	DWORD PTR tv65[ebp], -2146893042	; 8009030eH
	je	SHORT $LN5@ssh_sspi_d
	cmp	DWORD PTR tv65[ebp], -2146893039	; 80090311H
	je	SHORT $LN4@ssh_sspi_d
	jmp	SHORT $LN1@ssh_sspi_d
$LN10@ssh_sspi_d:
; Line 364
	mov	DWORD PTR _msg$[ebp], OFFSET $SG87384
	jmp	SHORT $LN11@ssh_sspi_d
$LN9@ssh_sspi_d:
; Line 366
	mov	DWORD PTR _msg$[ebp], OFFSET $SG87387
; Line 367
	jmp	SHORT $LN11@ssh_sspi_d
$LN8@ssh_sspi_d:
; Line 368
	mov	DWORD PTR _msg$[ebp], OFFSET $SG87390
	jmp	SHORT $LN11@ssh_sspi_d
$LN7@ssh_sspi_d:
; Line 369
	mov	DWORD PTR _msg$[ebp], OFFSET $SG87393
	jmp	SHORT $LN11@ssh_sspi_d
$LN6@ssh_sspi_d:
; Line 371
	mov	DWORD PTR _msg$[ebp], OFFSET $SG87396
; Line 372
	jmp	SHORT $LN11@ssh_sspi_d
$LN5@ssh_sspi_d:
; Line 374
	mov	DWORD PTR _msg$[ebp], OFFSET $SG87399
; Line 375
	jmp	SHORT $LN11@ssh_sspi_d
$LN4@ssh_sspi_d:
; Line 380
	mov	DWORD PTR _msg$[ebp], OFFSET $SG87402
; Line 381
	jmp	SHORT $LN11@ssh_sspi_d
$LN3@ssh_sspi_d:
; Line 384
	mov	DWORD PTR _msg$[ebp], OFFSET $SG87405
; Line 385
	jmp	SHORT $LN11@ssh_sspi_d
$LN2@ssh_sspi_d:
; Line 392
	mov	DWORD PTR _msg$[ebp], OFFSET $SG87408
; Line 393
	jmp	SHORT $LN11@ssh_sspi_d
$LN1@ssh_sspi_d:
; Line 395
	mov	DWORD PTR _msg$[ebp], OFFSET $SG87410
$LN11@ssh_sspi_d:
; Line 399
	mov	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	_dupstr
	add	esp, 4
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 400
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 402
	xor	eax, eax
$LN14@ssh_sspi_d:
; Line 403
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_sspi_display_status ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_InputSecurityToken$ = -80				; size = 24
_InputBufferDescriptor$ = -48				; size = 12
_ContextSizes$ = -28					; size = 16
_winctx$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lib$ = 8						; size = 4
_ctx$ = 12						; size = 4
_buf$ = 16						; size = 4
_hash$ = 20						; size = 4
_ssh_sspi_get_mic PROC
; Line 408
	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-84]
	mov	ecx, 21					; 00000015H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 409
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _winctx$[ebp], eax
; Line 414
	cmp	DWORD PTR _winctx$[ebp], 0
	jne	SHORT $LN4@ssh_sspi_g
	mov	eax, 4
	jmp	$LN5@ssh_sspi_g
$LN4@ssh_sspi_g:
; Line 416
	mov	ecx, DWORD PTR _winctx$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 418
	push	16					; 00000010H
	push	0
	lea	edx, DWORD PTR _ContextSizes$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 422
	mov	esi, esp
	lea	eax, DWORD PTR _ContextSizes$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _winctx$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	call	DWORD PTR _p_QueryContextAttributesA
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _winctx$[ebp]
	mov	DWORD PTR [edx], eax
; Line 425
	mov	eax, DWORD PTR _winctx$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN2@ssh_sspi_g
	cmp	DWORD PTR _ContextSizes$[ebp+4], 0
	jne	SHORT $LN3@ssh_sspi_g
$LN2@ssh_sspi_g:
; Line 426
	mov	ecx, DWORD PTR _winctx$[ebp]
	mov	eax, DWORD PTR [ecx]
	jmp	$LN5@ssh_sspi_g
$LN3@ssh_sspi_g:
; Line 428
	mov	DWORD PTR _InputBufferDescriptor$[ebp+4], 2
; Line 429
	lea	edx, DWORD PTR _InputSecurityToken$[ebp]
	mov	DWORD PTR _InputBufferDescriptor$[ebp+8], edx
; Line 430
	mov	DWORD PTR _InputBufferDescriptor$[ebp], 0
; Line 431
	mov	DWORD PTR _InputSecurityToken$[ebp+4], 1
; Line 432
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _InputSecurityToken$[ebp], ecx
; Line 433
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _InputSecurityToken$[ebp+8], eax
; Line 434
	mov	DWORD PTR _InputSecurityToken$[ebp+16], 2
; Line 435
	mov	ecx, DWORD PTR _ContextSizes$[ebp+4]
	mov	DWORD PTR _InputSecurityToken$[ebp+12], ecx
; Line 436
	push	1
	mov	edx, DWORD PTR _ContextSizes$[ebp+4]
	push	edx
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _InputSecurityToken$[ebp+20], eax
; Line 441
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _InputBufferDescriptor$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _winctx$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	call	DWORD PTR _p_MakeSignature
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _winctx$[ebp]
	mov	DWORD PTR [edx], eax
; Line 443
	mov	eax, DWORD PTR _winctx$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN1@ssh_sspi_g
; Line 444
	mov	ecx, DWORD PTR _hash$[ebp]
	mov	edx, DWORD PTR _InputSecurityToken$[ebp+12]
	mov	DWORD PTR [ecx], edx
; Line 445
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR _InputSecurityToken$[ebp+20]
	mov	DWORD PTR [eax+4], ecx
$LN1@ssh_sspi_g:
; Line 448
	mov	edx, DWORD PTR _winctx$[ebp]
	mov	eax, DWORD PTR [edx]
$LN5@ssh_sspi_g:
; Line 449
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@ssh_sspi_g
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 84					; 00000054H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@ssh_sspi_g:
	DD	3
	DD	$LN10@ssh_sspi_g
$LN10@ssh_sspi_g:
	DD	-28					; ffffffe4H
	DD	16					; 00000010H
	DD	$LN7@ssh_sspi_g
	DD	-48					; ffffffd0H
	DD	12					; 0000000cH
	DD	$LN8@ssh_sspi_g
	DD	-80					; ffffffb0H
	DD	24					; 00000018H
	DD	$LN9@ssh_sspi_g
$LN9@ssh_sspi_g:
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN8@ssh_sspi_g:
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN7@ssh_sspi_g:
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_ssh_sspi_get_mic ENDP
; Function compile flags: /Odtp /RTCsu
_lib$ = 8						; size = 4
_hash$ = 12						; size = 4
_ssh_sspi_free_mic PROC
; Line 453
	push	ebp
	mov	ebp, esp
; Line 454
	mov	eax, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 455
	xor	eax, eax
; Line 456
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh_sspi_free_mic ENDP
_TEXT	ENDS
END

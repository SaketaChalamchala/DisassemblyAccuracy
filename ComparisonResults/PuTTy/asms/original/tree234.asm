; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\Putty\tree234.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG5139	DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'e'
	DB	00H, '2', 00H, '3', 00H, '4', 00H, '.', 00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG5140	DB	'r', 00H, 'e', 00H, 'l', 00H, 'a', 00H, 't', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'R'
	DB	00H, 'E', 00H, 'L', 00H, '2', 00H, '3', 00H, '4', 00H, '_', 00H
	DB	'L', 00H, 'T', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 'r'
	DB	00H, 'e', 00H, 'l', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'R', 00H, 'E'
	DB	00H, 'L', 00H, '2', 00H, '3', 00H, '4', 00H, '_', 00H, 'G', 00H
	DB	'T', 00H, 00H, 00H
_DATA	ENDS
PUBLIC	_newtree234
EXTRN	_safemalloc:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\putty\tree234.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_ret$ = -4						; size = 4
_cmp$ = 8						; size = 4
_newtree234 PROC
; Line 65
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 66
	push	8
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _ret$[ebp], eax
; Line 68
	mov	eax, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [eax], 0
; Line 69
	mov	ecx, DWORD PTR _ret$[ebp]
	mov	edx, DWORD PTR _cmp$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 70
	mov	eax, DWORD PTR _ret$[ebp]
; Line 71
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_newtree234 ENDP
_TEXT	ENDS
PUBLIC	_freetree234
EXTRN	_safefree:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_t$ = 8							; size = 4
_freetree234 PROC
; Line 88
	push	ebp
	mov	ebp, esp
; Line 89
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_freenode234
	add	esp, 4
; Line 90
	mov	edx, DWORD PTR _t$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 91
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_freetree234 ENDP
; Function compile flags: /Odtp /RTCsu
_n$ = 8						; size = 4
_freenode234 PROC
; Line 77
	push	ebp
	mov	ebp, esp
; Line 78
	cmp	DWORD PTR _n$[ebp], 0
	jne	SHORT $LN1@freenode23
; Line 79
	jmp	SHORT $LN2@freenode23
$LN1@freenode23:
; Line 80
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_freenode234
	add	esp, 4
; Line 81
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_freenode234
	add	esp, 4
; Line 82
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_freenode234
	add	esp, 4
; Line 83
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_freenode234
	add	esp, 4
; Line 84
	mov	edx, DWORD PTR _n$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
$LN2@freenode23:
; Line 85
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_freenode234 ENDP
_TEXT	ENDS
PUBLIC	_count234
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_t$ = 8							; size = 4
_count234 PROC
; Line 114
	push	ebp
	mov	ebp, esp
; Line 115
	mov	eax, DWORD PTR _t$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@count234
; Line 116
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_countnode234
	add	esp, 4
	jmp	SHORT $LN3@count234
; Line 117
	jmp	SHORT $LN3@count234
$LN2@count234:
; Line 118
	xor	eax, eax
$LN3@count234:
; Line 119
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_count234 ENDP
; Function compile flags: /Odtp /RTCsu
_i$ = -8						; size = 4
_count$ = -4						; size = 4
_n$ = 8							; size = 4
_countnode234 PROC
; Line 97
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 98
	mov	DWORD PTR _count$[ebp], 0
; Line 100
	cmp	DWORD PTR _n$[ebp], 0
	jne	SHORT $LN8@countnode2
; Line 101
	xor	eax, eax
	jmp	SHORT $LN9@countnode2
$LN8@countnode2:
; Line 102
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@countnode2
$LN6@countnode2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@countnode2:
	cmp	DWORD PTR _i$[ebp], 4
	jge	SHORT $LN5@countnode2
; Line 103
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, DWORD PTR [edx+ecx*4+20]
	mov	DWORD PTR _count$[ebp], eax
	jmp	SHORT $LN6@countnode2
$LN5@countnode2:
; Line 104
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@countnode2
$LN3@countnode2:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN4@countnode2:
	cmp	DWORD PTR _i$[ebp], 3
	jge	SHORT $LN2@countnode2
; Line 105
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [eax+edx*4+36], 0
	je	SHORT $LN1@countnode2
; Line 106
	mov	ecx, DWORD PTR _count$[ebp]
	add	ecx, 1
	mov	DWORD PTR _count$[ebp], ecx
$LN1@countnode2:
; Line 107
	jmp	SHORT $LN3@countnode2
$LN2@countnode2:
	mov	eax, DWORD PTR _count$[ebp]
$LN9@countnode2:
; Line 108
	mov	esp, ebp
	pop	ebp
	ret	0
_countnode234 ENDP
_TEXT	ENDS
PUBLIC	_add234
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_t$ = 8							; size = 4
_e$ = 12						; size = 4
_add234	PROC
; Line 455
	push	ebp
	mov	ebp, esp
; Line 456
	mov	eax, DWORD PTR _t$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN1@add234
; Line 457
	xor	eax, eax
	jmp	SHORT $LN2@add234
$LN1@add234:
; Line 459
	push	-1
	mov	ecx, DWORD PTR _e$[ebp]
	push	ecx
	mov	edx, DWORD PTR _t$[ebp]
	push	edx
	call	_add234_internal
	add	esp, 12					; 0000000cH
$LN2@add234:
; Line 460
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_add234	ENDP
; Function compile flags: /Odtp /RTCsu
tv623 = -68						; size = 4
tv624 = -64						; size = 4
tv606 = -60						; size = 4
tv607 = -56						; size = 4
tv608 = -52						; size = 4
_childnum$5058 = -48					; size = 4
_count$5057 = -44					; size = 4
_m$5036 = -40						; size = 4
_childnum$4983 = -36					; size = 4
_rcount$ = -32						; size = 4
_lcount$ = -28						; size = 4
_c$ = -24						; size = 4
_orig_e$ = -20						; size = 4
_right$ = -16						; size = 4
_left$ = -12						; size = 4
_np$ = -8						; size = 4
_n$ = -4						; size = 4
_t$ = 8							; size = 4
_e$ = 12						; size = 4
_index$ = 16						; size = 4
_add234_internal PROC
; Line 126
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-68]
	mov	ecx, 17					; 00000011H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 128
	mov	eax, DWORD PTR _e$[ebp]
	mov	DWORD PTR _orig_e$[ebp], eax
; Line 132
	mov	ecx, DWORD PTR _t$[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	$LN65@add234_int
; Line 133
	push	48					; 00000030H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	edx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [edx], eax
; Line 134
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+44], 0
	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+40], 0
; Line 135
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], 0
; Line 136
	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+16], 0
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+12], 0
; Line 137
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+24], 0
	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+20], 0
; Line 138
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+32], 0
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+28], 0
; Line 139
	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax], 0
; Line 140
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _e$[ebp]
	mov	DWORD PTR [edx+36], eax
; Line 142
	mov	eax, DWORD PTR _orig_e$[ebp]
	jmp	$LN66@add234_int
$LN65@add234_int:
; Line 145
	mov	DWORD PTR _n$[ebp], 0
; Line 146
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR _np$[ebp], ecx
$LN64@add234_int:
; Line 147
	mov	edx, DWORD PTR _np$[ebp]
	cmp	DWORD PTR [edx], 0
	je	$LN63@add234_int
; Line 149
	mov	eax, DWORD PTR _np$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _n$[ebp], ecx
; Line 156
	cmp	DWORD PTR _index$[ebp], 0
	jl	$LN62@add234_int
; Line 157
	mov	edx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [edx+4], 0
	jne	SHORT $LN59@add234_int
; Line 164
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR _childnum$4983[ebp], eax
; Line 165
	jmp	$LN60@add234_int
$LN59@add234_int:
; Line 172
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _index$[ebp]
	cmp	edx, DWORD PTR [ecx+20]
	jg	SHORT $LN56@add234_int
; Line 173
	mov	DWORD PTR _childnum$4983[ebp], 0
; Line 174
	jmp	SHORT $LN60@add234_int
$LN56@add234_int:
; Line 176
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	mov	edx, DWORD PTR _index$[ebp]
	sub	edx, ecx
	mov	DWORD PTR _index$[ebp], edx
; Line 177
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+24]
	jg	SHORT $LN55@add234_int
; Line 178
	mov	DWORD PTR _childnum$4983[ebp], 1
; Line 179
	jmp	SHORT $LN60@add234_int
$LN55@add234_int:
; Line 181
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+24]
	add	eax, 1
	mov	ecx, DWORD PTR _index$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _index$[ebp], ecx
; Line 182
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _index$[ebp]
	cmp	eax, DWORD PTR [edx+28]
	jg	SHORT $LN54@add234_int
; Line 183
	mov	DWORD PTR _childnum$4983[ebp], 2
; Line 184
	jmp	SHORT $LN60@add234_int
$LN54@add234_int:
; Line 186
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	add	edx, 1
	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, edx
	mov	DWORD PTR _index$[ebp], eax
; Line 187
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _index$[ebp]
	cmp	edx, DWORD PTR [ecx+32]
	jg	SHORT $LN53@add234_int
; Line 188
	mov	DWORD PTR _childnum$4983[ebp], 3
; Line 189
	jmp	SHORT $LN60@add234_int
$LN53@add234_int:
; Line 191
	xor	eax, eax
	jmp	$LN66@add234_int
; Line 192
	xor	eax, eax
	jne	$LN59@add234_int
$LN60@add234_int:
; Line 194
	jmp	$LN52@add234_int
$LN62@add234_int:
; Line 195
	mov	esi, esp
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	push	edx
	mov	eax, DWORD PTR _e$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$[ebp], eax
	cmp	DWORD PTR _c$[ebp], 0
	jge	SHORT $LN51@add234_int
; Line 196
	mov	DWORD PTR _childnum$4983[ebp], 0
	jmp	$LN52@add234_int
$LN51@add234_int:
; Line 197
	cmp	DWORD PTR _c$[ebp], 0
	jne	SHORT $LN49@add234_int
; Line 198
	mov	eax, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [eax+36]
	jmp	$LN66@add234_int
; Line 199
	jmp	$LN52@add234_int
$LN49@add234_int:
; Line 200
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [ecx+40], 0
	je	SHORT $LN46@add234_int
	mov	esi, esp
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+40]
	push	eax
	mov	ecx, DWORD PTR _e$[ebp]
	push	ecx
	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$[ebp], eax
	cmp	DWORD PTR _c$[ebp], 0
	jge	SHORT $LN47@add234_int
$LN46@add234_int:
	mov	DWORD PTR _childnum$4983[ebp], 1
	jmp	SHORT $LN52@add234_int
$LN47@add234_int:
; Line 201
	cmp	DWORD PTR _c$[ebp], 0
	jne	SHORT $LN44@add234_int
; Line 202
	mov	ecx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [ecx+40]
	jmp	$LN66@add234_int
; Line 203
	jmp	SHORT $LN52@add234_int
$LN44@add234_int:
; Line 204
	mov	edx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [edx+44], 0
	je	SHORT $LN41@add234_int
	mov	esi, esp
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$[ebp], eax
	cmp	DWORD PTR _c$[ebp], 0
	jge	SHORT $LN42@add234_int
$LN41@add234_int:
	mov	DWORD PTR _childnum$4983[ebp], 2
	jmp	SHORT $LN52@add234_int
$LN42@add234_int:
; Line 205
	cmp	DWORD PTR _c$[ebp], 0
	jne	SHORT $LN39@add234_int
; Line 206
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+44]
	jmp	$LN66@add234_int
; Line 207
	jmp	SHORT $LN52@add234_int
$LN39@add234_int:
; Line 208
	mov	DWORD PTR _childnum$4983[ebp], 3
$LN52@add234_int:
; Line 210
	mov	eax, DWORD PTR _childnum$4983[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4+4]
	mov	DWORD PTR _np$[ebp], edx
; Line 212
	jmp	$LN64@add234_int
$LN63@add234_int:
; Line 217
	mov	DWORD PTR _left$[ebp], 0
; Line 218
	mov	DWORD PTR _lcount$[ebp], 0
; Line 219
	mov	DWORD PTR _right$[ebp], 0
; Line 220
	mov	DWORD PTR _rcount$[ebp], 0
$LN37@add234_int:
; Line 221
	cmp	DWORD PTR _n$[ebp], 0
	je	$LN36@add234_int
; Line 230
	mov	eax, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [eax+40], 0
	jne	$LN35@add234_int
; Line 234
	mov	ecx, DWORD PTR _n$[ebp]
	add	ecx, 4
	cmp	DWORD PTR _np$[ebp], ecx
	jne	SHORT $LN34@add234_int
; Line 236
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+12], ecx
; Line 237
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+28], ecx
; Line 238
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR [edx+40], ecx
; Line 239
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _right$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 240
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _rcount$[ebp]
	mov	DWORD PTR [ecx+24], edx
; Line 241
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 242
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _left$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 243
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _lcount$[ebp]
	mov	DWORD PTR [ecx+20], edx
; Line 244
	jmp	SHORT $LN33@add234_int
$LN34@add234_int:
; Line 246
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 247
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _rcount$[ebp]
	mov	DWORD PTR [edx+28], eax
; Line 248
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [ecx+40], edx
; Line 249
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _left$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 250
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _lcount$[ebp]
	mov	DWORD PTR [edx+24], eax
$LN33@add234_int:
; Line 252
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN32@add234_int
; Line 253
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [eax], ecx
$LN32@add234_int:
; Line 254
	mov	edx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [edx+8], 0
	je	SHORT $LN31@add234_int
; Line 255
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [ecx], edx
$LN31@add234_int:
; Line 256
	mov	eax, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN30@add234_int
; Line 257
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _n$[ebp]
	mov	DWORD PTR [edx], eax
$LN30@add234_int:
; Line 259
	jmp	$LN36@add234_int
	jmp	$LN29@add234_int
$LN35@add234_int:
; Line 260
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [ecx+44], 0
	jne	$LN28@add234_int
; Line 264
	mov	edx, DWORD PTR _n$[ebp]
	add	edx, 4
	cmp	DWORD PTR _np$[ebp], edx
	jne	SHORT $LN27@add234_int
; Line 266
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+16], edx
; Line 267
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+32], edx
; Line 268
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR [eax+44], edx
; Line 269
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+12], edx
; Line 270
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+28], edx
; Line 271
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+40], edx
; Line 272
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 273
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _rcount$[ebp]
	mov	DWORD PTR [edx+24], eax
; Line 274
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [ecx+36], edx
; Line 275
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _left$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 276
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _lcount$[ebp]
	mov	DWORD PTR [edx+20], eax
	jmp	$LN26@add234_int
$LN27@add234_int:
; Line 277
	mov	ecx, DWORD PTR _n$[ebp]
	add	ecx, 8
	cmp	DWORD PTR _np$[ebp], ecx
	jne	SHORT $LN25@add234_int
; Line 279
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+16], ecx
; Line 280
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR [edx+32], ecx
; Line 281
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR [edx+44], ecx
; Line 282
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _right$[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 283
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _rcount$[ebp]
	mov	DWORD PTR [ecx+28], edx
; Line 284
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [eax+40], ecx
; Line 285
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _left$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 286
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _lcount$[ebp]
	mov	DWORD PTR [ecx+24], edx
; Line 287
	jmp	SHORT $LN26@add234_int
$LN25@add234_int:
; Line 289
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 290
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _rcount$[ebp]
	mov	DWORD PTR [edx+32], eax
; Line 291
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [ecx+44], edx
; Line 292
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _left$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 293
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _lcount$[ebp]
	mov	DWORD PTR [edx+28], eax
$LN26@add234_int:
; Line 295
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN23@add234_int
; Line 296
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [eax], ecx
$LN23@add234_int:
; Line 297
	mov	edx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [edx+8], 0
	je	SHORT $LN22@add234_int
; Line 298
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [ecx], edx
$LN22@add234_int:
; Line 299
	mov	eax, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN21@add234_int
; Line 300
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _n$[ebp]
	mov	DWORD PTR [edx], eax
$LN21@add234_int:
; Line 301
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN20@add234_int
; Line 302
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [eax], ecx
$LN20@add234_int:
; Line 304
	jmp	$LN36@add234_int
; Line 305
	jmp	$LN29@add234_int
$LN28@add234_int:
; Line 306
	push	48					; 00000030H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _m$5036[ebp], eax
; Line 307
	mov	edx, DWORD PTR _m$5036[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
; Line 317
	mov	edx, DWORD PTR _n$[ebp]
	add	edx, 4
	cmp	DWORD PTR _np$[ebp], edx
	jne	$LN18@add234_int
; Line 318
	mov	eax, DWORD PTR _m$5036[ebp]
	mov	ecx, DWORD PTR _left$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 319
	mov	edx, DWORD PTR _m$5036[ebp]
	mov	eax, DWORD PTR _lcount$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 320
	mov	ecx, DWORD PTR _m$5036[ebp]
	mov	edx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [ecx+36], edx
; Line 321
	mov	eax, DWORD PTR _m$5036[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 322
	mov	edx, DWORD PTR _m$5036[ebp]
	mov	eax, DWORD PTR _rcount$[ebp]
	mov	DWORD PTR [edx+24], eax
; Line 323
	mov	ecx, DWORD PTR _m$5036[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	DWORD PTR [ecx+40], eax
; Line 324
	mov	ecx, DWORD PTR _m$5036[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+12], eax
; Line 325
	mov	ecx, DWORD PTR _m$5036[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+28], eax
; Line 326
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR _e$[ebp], edx
; Line 327
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+4], edx
; Line 328
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+20], edx
; Line 329
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR [eax+36], edx
; Line 330
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+8], edx
; Line 331
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+24], edx
	jmp	$LN17@add234_int
$LN18@add234_int:
; Line 332
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 8
	cmp	DWORD PTR _np$[ebp], eax
	jne	$LN16@add234_int
; Line 333
	mov	ecx, DWORD PTR _m$5036[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
; Line 334
	mov	ecx, DWORD PTR _m$5036[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], eax
; Line 335
	mov	ecx, DWORD PTR _m$5036[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	DWORD PTR [ecx+36], eax
; Line 336
	mov	ecx, DWORD PTR _m$5036[ebp]
	mov	edx, DWORD PTR _left$[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 337
	mov	eax, DWORD PTR _m$5036[ebp]
	mov	ecx, DWORD PTR _lcount$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 338
	mov	edx, DWORD PTR _m$5036[ebp]
	mov	eax, DWORD PTR _e$[ebp]
	mov	DWORD PTR [edx+40], eax
; Line 339
	mov	ecx, DWORD PTR _m$5036[ebp]
	mov	edx, DWORD PTR _right$[ebp]
	mov	DWORD PTR [ecx+12], edx
; Line 340
	mov	eax, DWORD PTR _m$5036[ebp]
	mov	ecx, DWORD PTR _rcount$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 341
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR _e$[ebp], eax
; Line 342
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+4], eax
; Line 343
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR [ecx+20], eax
; Line 344
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR [ecx+36], eax
; Line 345
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+8], eax
; Line 346
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR [ecx+24], eax
	jmp	$LN17@add234_int
$LN16@add234_int:
; Line 347
	mov	ecx, DWORD PTR _n$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR _np$[ebp], ecx
	jne	$LN14@add234_int
; Line 348
	mov	edx, DWORD PTR _m$5036[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
; Line 349
	mov	edx, DWORD PTR _m$5036[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR [edx+20], ecx
; Line 350
	mov	edx, DWORD PTR _m$5036[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR [edx+36], ecx
; Line 351
	mov	edx, DWORD PTR _m$5036[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
; Line 352
	mov	edx, DWORD PTR _m$5036[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx
; Line 353
	mov	edx, DWORD PTR _m$5036[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR [edx+40], ecx
; Line 354
	mov	edx, DWORD PTR _m$5036[ebp]
	mov	eax, DWORD PTR _left$[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 355
	mov	ecx, DWORD PTR _m$5036[ebp]
	mov	edx, DWORD PTR _lcount$[ebp]
	mov	DWORD PTR [ecx+28], edx
; Line 357
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 358
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _rcount$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 359
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR [ecx+36], eax
; Line 360
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+8], eax
; Line 361
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR [ecx+24], eax
; Line 362
	jmp	$LN17@add234_int
$LN14@add234_int:
; Line 363
	mov	ecx, DWORD PTR _m$5036[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
; Line 364
	mov	ecx, DWORD PTR _m$5036[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], eax
; Line 365
	mov	ecx, DWORD PTR _m$5036[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	DWORD PTR [ecx+36], eax
; Line 366
	mov	ecx, DWORD PTR _m$5036[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
; Line 367
	mov	ecx, DWORD PTR _m$5036[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+24], eax
; Line 368
	mov	ecx, DWORD PTR _m$5036[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR [ecx+40], eax
; Line 369
	mov	ecx, DWORD PTR _m$5036[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+12], eax
; Line 370
	mov	ecx, DWORD PTR _m$5036[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR [ecx+28], eax
; Line 371
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _left$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 372
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _lcount$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 373
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _e$[ebp]
	mov	DWORD PTR [edx+36], eax
; Line 374
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _right$[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 375
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _rcount$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 376
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR _e$[ebp], eax
$LN17@add234_int:
; Line 378
	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [ecx+12], 0
	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [edx+16], 0
	mov	eax, DWORD PTR _m$5036[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 379
	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [ecx+28], 0
	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [edx+32], 0
	mov	eax, DWORD PTR _m$5036[ebp]
	mov	DWORD PTR [eax+32], 0
; Line 380
	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [ecx+40], 0
	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [edx+44], 0
	mov	eax, DWORD PTR _m$5036[ebp]
	mov	DWORD PTR [eax+44], 0
; Line 381
	mov	ecx, DWORD PTR _m$5036[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN12@add234_int
; Line 382
	mov	edx, DWORD PTR _m$5036[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _m$5036[ebp]
	mov	DWORD PTR [eax], ecx
$LN12@add234_int:
; Line 383
	mov	edx, DWORD PTR _m$5036[ebp]
	cmp	DWORD PTR [edx+8], 0
	je	SHORT $LN11@add234_int
; Line 384
	mov	eax, DWORD PTR _m$5036[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _m$5036[ebp]
	mov	DWORD PTR [ecx], edx
$LN11@add234_int:
; Line 385
	mov	eax, DWORD PTR _m$5036[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN10@add234_int
; Line 386
	mov	ecx, DWORD PTR _m$5036[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _m$5036[ebp]
	mov	DWORD PTR [edx], eax
$LN10@add234_int:
; Line 387
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN9@add234_int
; Line 388
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [eax], ecx
$LN9@add234_int:
; Line 389
	mov	edx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [edx+8], 0
	je	SHORT $LN8@add234_int
; Line 390
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [ecx], edx
$LN8@add234_int:
; Line 398
	mov	eax, DWORD PTR _m$5036[ebp]
	mov	DWORD PTR _left$[ebp], eax
; Line 399
	mov	ecx, DWORD PTR _left$[ebp]
	push	ecx
	call	_countnode234
	add	esp, 4
	mov	DWORD PTR _lcount$[ebp], eax
; Line 400
	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR _right$[ebp], edx
; Line 401
	mov	eax, DWORD PTR _right$[ebp]
	push	eax
	call	_countnode234
	add	esp, 4
	mov	DWORD PTR _rcount$[ebp], eax
$LN29@add234_int:
; Line 403
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN7@add234_int
; Line 407
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _n$[ebp]
	jne	SHORT $LN72@add234_int
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 4
	mov	DWORD PTR tv608[ebp], eax
	jmp	SHORT $LN73@add234_int
$LN72@add234_int:
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR _n$[ebp]
	jne	SHORT $LN70@add234_int
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 8
	mov	DWORD PTR tv607[ebp], edx
	jmp	SHORT $LN71@add234_int
$LN70@add234_int:
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	cmp	edx, DWORD PTR _n$[ebp]
	jne	SHORT $LN68@add234_int
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 12					; 0000000cH
	mov	DWORD PTR tv606[ebp], ecx
	jmp	SHORT $LN69@add234_int
$LN68@add234_int:
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv606[ebp], eax
$LN69@add234_int:
	mov	ecx, DWORD PTR tv606[ebp]
	mov	DWORD PTR tv607[ebp], ecx
$LN71@add234_int:
	mov	edx, DWORD PTR tv607[ebp]
	mov	DWORD PTR tv608[ebp], edx
$LN73@add234_int:
	mov	eax, DWORD PTR tv608[ebp]
	mov	DWORD PTR _np$[ebp], eax
$LN7@add234_int:
; Line 408
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _n$[ebp], edx
; Line 409
	jmp	$LN37@add234_int
$LN36@add234_int:
; Line 417
	cmp	DWORD PTR _n$[ebp], 0
	je	$LN6@add234_int
$LN5@add234_int:
; Line 418
	mov	eax, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN4@add234_int
; Line 419
	mov	ecx, DWORD PTR _n$[ebp]
	push	ecx
	call	_countnode234
	add	esp, 4
	mov	DWORD PTR _count$5057[ebp], eax
; Line 423
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _n$[ebp]
	jne	SHORT $LN76@add234_int
	mov	DWORD PTR tv624[ebp], 0
	jmp	SHORT $LN77@add234_int
$LN76@add234_int:
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _n$[ebp]
	jne	SHORT $LN74@add234_int
	mov	DWORD PTR tv623[ebp], 1
	jmp	SHORT $LN75@add234_int
$LN74@add234_int:
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+12]
	xor	edx, edx
	cmp	ecx, DWORD PTR _n$[ebp]
	setne	dl
	add	edx, 2
	mov	DWORD PTR tv623[ebp], edx
$LN75@add234_int:
	mov	eax, DWORD PTR tv623[ebp]
	mov	DWORD PTR tv624[ebp], eax
$LN77@add234_int:
	mov	ecx, DWORD PTR tv624[ebp]
	mov	DWORD PTR _childnum$5058[ebp], ecx
; Line 424
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _childnum$5058[ebp]
	mov	edx, DWORD PTR _count$5057[ebp]
	mov	DWORD PTR [eax+ecx*4+20], edx
; Line 425
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _n$[ebp], ecx
; Line 426
	jmp	SHORT $LN5@add234_int
$LN4@add234_int:
; Line 427
	jmp	$LN3@add234_int
$LN6@add234_int:
; Line 429
	push	48					; 00000030H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	edx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [edx], eax
; Line 430
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _left$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 431
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _lcount$[ebp]
	mov	DWORD PTR [ecx+20], edx
; Line 432
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [ecx+36], edx
; Line 433
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _right$[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 434
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _rcount$[ebp]
	mov	DWORD PTR [ecx+24], edx
; Line 435
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+40], 0
; Line 436
	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+12], 0
; Line 437
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+28], 0
; Line 438
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+44], 0
; Line 439
	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+16], 0
; Line 440
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+32], 0
; Line 441
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], 0
; Line 442
	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@add234_int
; Line 443
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN2@add234_int:
; Line 444
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+8], 0
	je	SHORT $LN3@add234_int
; Line 445
	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
$LN3@add234_int:
; Line 451
	mov	eax, DWORD PTR _orig_e$[ebp]
$LN66@add234_int:
; Line 452
	pop	edi
	pop	esi
	add	esp, 68					; 00000044H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_add234_internal ENDP
_TEXT	ENDS
PUBLIC	_addpos234
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_t$ = 8							; size = 4
_e$ = 12						; size = 4
_index$ = 16						; size = 4
_addpos234 PROC
; Line 462
	push	ebp
	mov	ebp, esp
; Line 464
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN1@addpos234
	mov	eax, DWORD PTR _t$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@addpos234
$LN1@addpos234:
; Line 465
	xor	eax, eax
	jmp	SHORT $LN3@addpos234
$LN2@addpos234:
; Line 467
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	call	_add234_internal
	add	esp, 12					; 0000000cH
$LN3@addpos234:
; Line 468
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_addpos234 ENDP
_TEXT	ENDS
PUBLIC	_index234
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_n$ = -4						; size = 4
_t$ = 8							; size = 4
_index$ = 12						; size = 4
_index234 PROC
; Line 475
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 478
	mov	eax, DWORD PTR _t$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN17@index234
; Line 479
	xor	eax, eax
	jmp	$LN18@index234
$LN17@index234:
; Line 481
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN15@index234
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_countnode234
	add	esp, 4
	cmp	DWORD PTR _index$[ebp], eax
	jl	SHORT $LN16@index234
$LN15@index234:
; Line 482
	xor	eax, eax
	jmp	$LN18@index234
$LN16@index234:
; Line 484
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _n$[ebp], ecx
$LN14@index234:
; Line 486
	cmp	DWORD PTR _n$[ebp], 0
	je	$LN13@index234
; Line 487
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _index$[ebp]
	cmp	eax, DWORD PTR [edx+20]
	jge	SHORT $LN12@index234
; Line 488
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _n$[ebp], edx
	jmp	$LN11@index234
$LN12@index234:
; Line 489
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	mov	edx, DWORD PTR _index$[ebp]
	sub	edx, ecx
	mov	DWORD PTR _index$[ebp], edx
	jns	SHORT $LN10@index234
; Line 490
	mov	eax, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [eax+36]
	jmp	SHORT $LN18@index234
	jmp	SHORT $LN11@index234
$LN10@index234:
; Line 491
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _index$[ebp]
	cmp	edx, DWORD PTR [ecx+24]
	jge	SHORT $LN8@index234
; Line 492
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _n$[ebp], ecx
	jmp	SHORT $LN11@index234
$LN8@index234:
; Line 493
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+24]
	add	eax, 1
	mov	ecx, DWORD PTR _index$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _index$[ebp], ecx
	jns	SHORT $LN6@index234
; Line 494
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+40]
	jmp	SHORT $LN18@index234
	jmp	SHORT $LN11@index234
$LN6@index234:
; Line 495
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+28]
	jge	SHORT $LN4@index234
; Line 496
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _n$[ebp], eax
	jmp	SHORT $LN11@index234
$LN4@index234:
; Line 497
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	add	edx, 1
	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, edx
	mov	DWORD PTR _index$[ebp], eax
	jns	SHORT $LN2@index234
; Line 498
	mov	ecx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [ecx+44]
	jmp	SHORT $LN18@index234
; Line 499
	jmp	SHORT $LN11@index234
$LN2@index234:
; Line 500
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _n$[ebp], eax
$LN11@index234:
; Line 501
	jmp	$LN14@index234
$LN13@index234:
; Line 504
	xor	eax, eax
$LN18@index234:
; Line 505
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_index234 ENDP
_TEXT	ENDS
PUBLIC	_findrelpos234
EXTRN	__wassert:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv91 = -32						; size = 4
_cmpret$ = -28						; size = 4
_kcount$ = -24						; size = 4
_ecount$ = -20						; size = 4
_idx$ = -16						; size = 4
_c$ = -12						; size = 4
_ret$ = -8						; size = 4
_n$ = -4						; size = 4
_t$ = 8							; size = 4
_e$ = 12						; size = 4
_cmp$ = 16						; size = 4
_relation$ = 20						; size = 4
_index$ = 24						; size = 4
_findrelpos234 PROC
; Line 516
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 522
	mov	eax, DWORD PTR _t$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN28@findrelpos
; Line 523
	xor	eax, eax
	jmp	$LN29@findrelpos
$LN28@findrelpos:
; Line 525
	cmp	DWORD PTR _cmp$[ebp], 0
	jne	SHORT $LN27@findrelpos
; Line 526
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _cmp$[ebp], edx
$LN27@findrelpos:
; Line 528
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _n$[ebp], ecx
; Line 532
	mov	DWORD PTR _idx$[ebp], 0
; Line 533
	mov	DWORD PTR _ecount$[ebp], -1
; Line 537
	mov	DWORD PTR _cmpret$[ebp], 0
; Line 538
	cmp	DWORD PTR _e$[ebp], 0
	jne	SHORT $LN22@findrelpos
; Line 539
	cmp	DWORD PTR _relation$[ebp], 1
	je	SHORT $LN31@findrelpos
	cmp	DWORD PTR _relation$[ebp], 3
	je	SHORT $LN31@findrelpos
	push	539					; 0000021bH
	push	OFFSET $SG5139
	push	OFFSET $SG5140
	call	__wassert
	add	esp, 12					; 0000000cH
$LN31@findrelpos:
; Line 540
	cmp	DWORD PTR _relation$[ebp], 1
	jne	SHORT $LN25@findrelpos
; Line 541
	mov	DWORD PTR _cmpret$[ebp], 1
	jmp	SHORT $LN22@findrelpos
$LN25@findrelpos:
; Line 542
	cmp	DWORD PTR _relation$[ebp], 3
	jne	SHORT $LN22@findrelpos
; Line 543
	mov	DWORD PTR _cmpret$[ebp], -1
$LN22@findrelpos:
; Line 545
	mov	eax, 1
	test	eax, eax
	je	$LN21@findrelpos
; Line 546
	mov	DWORD PTR _kcount$[ebp], 0
	jmp	SHORT $LN20@findrelpos
$LN19@findrelpos:
	mov	ecx, DWORD PTR _kcount$[ebp]
	add	ecx, 1
	mov	DWORD PTR _kcount$[ebp], ecx
$LN20@findrelpos:
	cmp	DWORD PTR _kcount$[ebp], 4
	jge	$LN18@findrelpos
; Line 548
	cmp	DWORD PTR _kcount$[ebp], 3
	jge	SHORT $LN16@findrelpos
	mov	edx, DWORD PTR _kcount$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [eax+edx*4+36], 0
	je	SHORT $LN16@findrelpos
	cmp	DWORD PTR _cmpret$[ebp], 0
	je	SHORT $LN32@findrelpos
	mov	ecx, DWORD PTR _cmpret$[ebp]
	mov	DWORD PTR tv91[ebp], ecx
	jmp	SHORT $LN33@findrelpos
$LN32@findrelpos:
	mov	esi, esp
	mov	edx, DWORD PTR _kcount$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+36]
	push	ecx
	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	call	DWORD PTR _cmp$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv91[ebp], eax
$LN33@findrelpos:
	mov	eax, DWORD PTR tv91[ebp]
	mov	DWORD PTR _c$[ebp], eax
	cmp	DWORD PTR _c$[ebp], 0
	jge	SHORT $LN17@findrelpos
$LN16@findrelpos:
; Line 549
	jmp	SHORT $LN18@findrelpos
$LN17@findrelpos:
; Line 551
	mov	ecx, DWORD PTR _kcount$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [edx+ecx*4+4], 0
	je	SHORT $LN15@findrelpos
; Line 552
	mov	eax, DWORD PTR _kcount$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _idx$[ebp]
	add	edx, DWORD PTR [ecx+eax*4+20]
	mov	DWORD PTR _idx$[ebp], edx
$LN15@findrelpos:
; Line 553
	cmp	DWORD PTR _c$[ebp], 0
	jne	SHORT $LN14@findrelpos
; Line 554
	mov	eax, DWORD PTR _kcount$[ebp]
	mov	DWORD PTR _ecount$[ebp], eax
; Line 555
	jmp	SHORT $LN18@findrelpos
$LN14@findrelpos:
; Line 557
	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	mov	DWORD PTR _idx$[ebp], ecx
; Line 558
	jmp	$LN19@findrelpos
$LN18@findrelpos:
; Line 559
	cmp	DWORD PTR _ecount$[ebp], 0
	jl	SHORT $LN13@findrelpos
; Line 560
	jmp	SHORT $LN21@findrelpos
$LN13@findrelpos:
; Line 561
	mov	edx, DWORD PTR _kcount$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [eax+edx*4+4], 0
	je	SHORT $LN12@findrelpos
; Line 562
	mov	ecx, DWORD PTR _kcount$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+4]
	mov	DWORD PTR _n$[ebp], eax
; Line 563
	jmp	SHORT $LN11@findrelpos
$LN12@findrelpos:
; Line 564
	jmp	SHORT $LN21@findrelpos
$LN11@findrelpos:
; Line 565
	jmp	$LN22@findrelpos
$LN21@findrelpos:
; Line 567
	cmp	DWORD PTR _ecount$[ebp], 0
	jl	SHORT $LN10@findrelpos
; Line 573
	cmp	DWORD PTR _relation$[ebp], 1
	je	SHORT $LN9@findrelpos
	cmp	DWORD PTR _relation$[ebp], 3
	je	SHORT $LN9@findrelpos
; Line 574
	cmp	DWORD PTR _index$[ebp], 0
	je	SHORT $LN8@findrelpos
; Line 575
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR _idx$[ebp]
	mov	DWORD PTR [ecx], edx
$LN8@findrelpos:
; Line 576
	mov	eax, DWORD PTR _ecount$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+36]
	jmp	SHORT $LN29@findrelpos
$LN9@findrelpos:
; Line 585
	cmp	DWORD PTR _relation$[ebp], 1
	jne	SHORT $LN7@findrelpos
; Line 586
	mov	edx, DWORD PTR _idx$[ebp]
	sub	edx, 1
	mov	DWORD PTR _idx$[ebp], edx
; Line 587
	jmp	SHORT $LN6@findrelpos
$LN7@findrelpos:
; Line 588
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$[ebp], eax
$LN6@findrelpos:
; Line 589
	jmp	SHORT $LN5@findrelpos
$LN10@findrelpos:
; Line 599
	cmp	DWORD PTR _relation$[ebp], 0
	jne	SHORT $LN4@findrelpos
; Line 600
	xor	eax, eax
	jmp	SHORT $LN29@findrelpos
$LN4@findrelpos:
; Line 607
	cmp	DWORD PTR _relation$[ebp], 1
	je	SHORT $LN2@findrelpos
	cmp	DWORD PTR _relation$[ebp], 2
	jne	SHORT $LN5@findrelpos
$LN2@findrelpos:
; Line 608
	mov	ecx, DWORD PTR _idx$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _idx$[ebp], ecx
$LN5@findrelpos:
; Line 617
	mov	edx, DWORD PTR _idx$[ebp]
	push	edx
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	call	_index234
	add	esp, 8
	mov	DWORD PTR _ret$[ebp], eax
; Line 618
	cmp	DWORD PTR _ret$[ebp], 0
	je	SHORT $LN1@findrelpos
	cmp	DWORD PTR _index$[ebp], 0
	je	SHORT $LN1@findrelpos
; Line 619
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR _idx$[ebp]
	mov	DWORD PTR [ecx], edx
$LN1@findrelpos:
; Line 620
	mov	eax, DWORD PTR _ret$[ebp]
$LN29@findrelpos:
; Line 621
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_findrelpos234 ENDP
_TEXT	ENDS
PUBLIC	_find234
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_t$ = 8							; size = 4
_e$ = 12						; size = 4
_cmp$ = 16						; size = 4
_find234 PROC
; Line 623
	push	ebp
	mov	ebp, esp
; Line 624
	push	0
	push	0
	mov	eax, DWORD PTR _cmp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _e$[ebp]
	push	ecx
	mov	edx, DWORD PTR _t$[ebp]
	push	edx
	call	_findrelpos234
	add	esp, 20					; 00000014H
; Line 625
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_find234 ENDP
_TEXT	ENDS
PUBLIC	_findrel234
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_t$ = 8							; size = 4
_e$ = 12						; size = 4
_cmp$ = 16						; size = 4
_relation$ = 20						; size = 4
_findrel234 PROC
; Line 627
	push	ebp
	mov	ebp, esp
; Line 628
	push	0
	mov	eax, DWORD PTR _relation$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cmp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	call	_findrelpos234
	add	esp, 20					; 00000014H
; Line 629
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_findrel234 ENDP
_TEXT	ENDS
PUBLIC	_findpos234
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_t$ = 8							; size = 4
_e$ = 12						; size = 4
_cmp$ = 16						; size = 4
_index$ = 20						; size = 4
_findpos234 PROC
; Line 631
	push	ebp
	mov	ebp, esp
; Line 632
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _cmp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	call	_findrelpos234
	add	esp, 20					; 00000014H
; Line 633
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_findpos234 ENDP
_TEXT	ENDS
PUBLIC	_delpos234
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_t$ = 8							; size = 4
_index$ = 12						; size = 4
_delpos234 PROC
; Line 978
	push	ebp
	mov	ebp, esp
; Line 979
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN1@delpos234
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_countnode234
	add	esp, 4
	cmp	DWORD PTR _index$[ebp], eax
	jl	SHORT $LN2@delpos234
$LN1@delpos234:
; Line 980
	xor	eax, eax
	jmp	SHORT $LN3@delpos234
$LN2@delpos234:
; Line 981
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	call	_delpos234_internal
	add	esp, 8
$LN3@delpos234:
; Line 982
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_delpos234 ENDP
; Function compile flags: /Odtp /RTCsu
tv556 = -116						; size = 4
tv558 = -112						; size = 4
tv540 = -108						; size = 4
tv542 = -104						; size = 4
tv544 = -100						; size = 4
tv501 = -96						; size = 4
tv502 = -92						; size = 4
tv439 = -88						; size = 4
tv147 = -84						; size = 4
_j$5289 = -80						; size = 4
_b$5288 = -76						; size = 4
_a$5287 = -72						; size = 4
_target$5282 = -68					; size = 4
_m$5281 = -64						; size = 4
_target$5275 = -60					; size = 4
_m$5274 = -56						; size = 4
_childnum$5271 = -52					; size = 4
_i$5263 = -48						; size = 4
_j$5244 = -44						; size = 4
_sib$5243 = -40						; size = 4
_j$5235 = -36						; size = 4
_sib$5234 = -32						; size = 4
_lastelem$5228 = -28					; size = 4
_sib$5227 = -24						; size = 4
_sub$5212 = -20						; size = 4
_ki$5211 = -16						; size = 4
_ei$ = -12						; size = 4
_retval$ = -8						; size = 4
_n$ = -4						; size = 4
_t$ = 8							; size = 4
_index$ = 12						; size = 4
_delpos234_internal PROC
; Line 640
	push	ebp
	mov	ebp, esp
	sub	esp, 116				; 00000074H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-116]
	mov	ecx, 29					; 0000001dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 643
	mov	DWORD PTR _ei$[ebp], -1
; Line 645
	mov	DWORD PTR _retval$[ebp], 0
; Line 647
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _n$[ebp], ecx
$LN58@delpos234_:
; Line 649
	mov	edx, 1
	test	edx, edx
	je	$LN59@delpos234_
$LN56@delpos234_:
; Line 650
	cmp	DWORD PTR _n$[ebp], 0
	je	$LN55@delpos234_
; Line 659
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jge	SHORT $LN54@delpos234_
; Line 660
	mov	DWORD PTR _ki$5211[ebp], 0
	jmp	$LN53@delpos234_
$LN54@delpos234_:
; Line 661
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+20]
	add	eax, 1
	mov	ecx, DWORD PTR _index$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _index$[ebp], ecx
	jns	SHORT $LN52@delpos234_
; Line 662
	mov	DWORD PTR _ei$[ebp], 0
; Line 663
	jmp	$LN55@delpos234_
	jmp	SHORT $LN53@delpos234_
$LN52@delpos234_:
; Line 664
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _index$[ebp]
	cmp	eax, DWORD PTR [edx+24]
	jge	SHORT $LN50@delpos234_
; Line 665
	mov	DWORD PTR _ki$5211[ebp], 1
	jmp	SHORT $LN53@delpos234_
$LN50@delpos234_:
; Line 666
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	add	edx, 1
	mov	eax, DWORD PTR _index$[ebp]
	sub	eax, edx
	mov	DWORD PTR _index$[ebp], eax
	jns	SHORT $LN48@delpos234_
; Line 667
	mov	DWORD PTR _ei$[ebp], 1
; Line 668
	jmp	$LN55@delpos234_
	jmp	SHORT $LN53@delpos234_
$LN48@delpos234_:
; Line 669
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _index$[ebp]
	cmp	edx, DWORD PTR [ecx+28]
	jge	SHORT $LN46@delpos234_
; Line 670
	mov	DWORD PTR _ki$5211[ebp], 2
	jmp	SHORT $LN53@delpos234_
$LN46@delpos234_:
; Line 671
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 1
	mov	edx, DWORD PTR _index$[ebp]
	sub	edx, ecx
	mov	DWORD PTR _index$[ebp], edx
	jns	SHORT $LN44@delpos234_
; Line 672
	mov	DWORD PTR _ei$[ebp], 2
; Line 673
	jmp	$LN55@delpos234_
; Line 674
	jmp	SHORT $LN53@delpos234_
$LN44@delpos234_:
; Line 675
	mov	DWORD PTR _ki$5211[ebp], 3
$LN53@delpos234_:
; Line 682
	mov	eax, DWORD PTR _ki$5211[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+4]
	mov	DWORD PTR _sub$5212[ebp], edx
; Line 683
	mov	eax, DWORD PTR _sub$5212[ebp]
	cmp	DWORD PTR [eax+40], 0
	jne	$LN42@delpos234_
; Line 685
	cmp	DWORD PTR _ki$5211[ebp], 0
	jle	$LN41@delpos234_
	mov	ecx, DWORD PTR _ki$5211[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	cmp	DWORD PTR [eax+40], 0
	je	$LN41@delpos234_
; Line 696
	mov	ecx, DWORD PTR _ki$5211[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _sib$5227[ebp], eax
; Line 698
	mov	ecx, DWORD PTR _sib$5227[ebp]
	cmp	DWORD PTR [ecx+44], 0
	je	SHORT $LN61@delpos234_
	mov	DWORD PTR tv147[ebp], 2
	jmp	SHORT $LN62@delpos234_
$LN61@delpos234_:
	mov	edx, DWORD PTR _sib$5227[ebp]
	xor	eax, eax
	cmp	DWORD PTR [edx+40], 0
	setne	al
	mov	DWORD PTR tv147[ebp], eax
$LN62@delpos234_:
	mov	ecx, DWORD PTR tv147[ebp]
	mov	DWORD PTR _lastelem$5228[ebp], ecx
; Line 699
	mov	edx, DWORD PTR _sub$5212[ebp]
	mov	eax, DWORD PTR _sub$5212[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+12], ecx
; Line 700
	mov	edx, DWORD PTR _sub$5212[ebp]
	mov	eax, DWORD PTR _sub$5212[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+28], ecx
; Line 701
	mov	edx, DWORD PTR _sub$5212[ebp]
	mov	eax, DWORD PTR _sub$5212[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR [edx+40], ecx
; Line 702
	mov	edx, DWORD PTR _sub$5212[ebp]
	mov	eax, DWORD PTR _sub$5212[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+8], ecx
; Line 703
	mov	edx, DWORD PTR _sub$5212[ebp]
	mov	eax, DWORD PTR _sub$5212[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR [edx+24], ecx
; Line 704
	mov	edx, DWORD PTR _sub$5212[ebp]
	mov	eax, DWORD PTR _ki$5211[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+32]
	mov	DWORD PTR [edx+36], eax
; Line 705
	mov	ecx, DWORD PTR _sub$5212[ebp]
	mov	edx, DWORD PTR _lastelem$5228[ebp]
	mov	eax, DWORD PTR _sib$5227[ebp]
	mov	edx, DWORD PTR [eax+edx*4+8]
	mov	DWORD PTR [ecx+4], edx
; Line 706
	mov	eax, DWORD PTR _sub$5212[ebp]
	mov	ecx, DWORD PTR _lastelem$5228[ebp]
	mov	edx, DWORD PTR _sib$5227[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4+24]
	mov	DWORD PTR [eax+20], ecx
; Line 707
	mov	edx, DWORD PTR _sub$5212[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	SHORT $LN40@delpos234_
; Line 708
	mov	eax, DWORD PTR _sub$5212[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _sub$5212[ebp]
	mov	DWORD PTR [ecx], edx
$LN40@delpos234_:
; Line 709
	mov	eax, DWORD PTR _ki$5211[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _lastelem$5228[ebp]
	mov	esi, DWORD PTR _sib$5227[ebp]
	mov	edx, DWORD PTR [esi+edx*4+36]
	mov	DWORD PTR [ecx+eax*4+32], edx
; Line 710
	mov	eax, DWORD PTR _lastelem$5228[ebp]
	mov	ecx, DWORD PTR _sib$5227[ebp]
	mov	DWORD PTR [ecx+eax*4+8], 0
; Line 711
	mov	edx, DWORD PTR _lastelem$5228[ebp]
	mov	eax, DWORD PTR _sib$5227[ebp]
	mov	DWORD PTR [eax+edx*4+24], 0
; Line 712
	mov	ecx, DWORD PTR _lastelem$5228[ebp]
	mov	edx, DWORD PTR _sib$5227[ebp]
	mov	DWORD PTR [edx+ecx*4+36], 0
; Line 713
	mov	eax, DWORD PTR _sub$5212[ebp]
	push	eax
	call	_countnode234
	add	esp, 4
	mov	ecx, DWORD PTR _ki$5211[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [edx+ecx*4+20], eax
; Line 718
	mov	eax, DWORD PTR _ki$5211[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _index$[ebp]
	add	edx, DWORD PTR [ecx+eax*4+16]
	mov	DWORD PTR _index$[ebp], edx
; Line 719
	mov	eax, DWORD PTR _sib$5227[ebp]
	push	eax
	call	_countnode234
	add	esp, 4
	mov	ecx, DWORD PTR _ki$5211[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [edx+ecx*4+16], eax
; Line 720
	mov	eax, DWORD PTR _ki$5211[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _index$[ebp]
	sub	edx, DWORD PTR [ecx+eax*4+16]
	mov	DWORD PTR _index$[ebp], edx
; Line 724
	jmp	$LN42@delpos234_
$LN41@delpos234_:
; Line 725
	cmp	DWORD PTR _ki$5211[ebp], 3
	jge	$LN38@delpos234_
	mov	eax, DWORD PTR _ki$5211[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [ecx+eax*4+8], 0
	je	$LN38@delpos234_
	mov	edx, DWORD PTR _ki$5211[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+8]
	cmp	DWORD PTR [ecx+40], 0
	je	$LN38@delpos234_
; Line 735
	mov	edx, DWORD PTR _ki$5211[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+8]
	mov	DWORD PTR _sib$5234[ebp], ecx
; Line 737
	mov	edx, DWORD PTR _sub$5212[ebp]
	mov	eax, DWORD PTR _ki$5211[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+36]
	mov	DWORD PTR [edx+40], eax
; Line 738
	mov	ecx, DWORD PTR _sub$5212[ebp]
	mov	edx, DWORD PTR _sib$5234[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+12], eax
; Line 739
	mov	ecx, DWORD PTR _sub$5212[ebp]
	mov	edx, DWORD PTR _sib$5234[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+28], eax
; Line 740
	mov	ecx, DWORD PTR _sub$5212[ebp]
	cmp	DWORD PTR [ecx+12], 0
	je	SHORT $LN37@delpos234_
; Line 741
	mov	edx, DWORD PTR _sub$5212[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR _sub$5212[ebp]
	mov	DWORD PTR [eax], ecx
$LN37@delpos234_:
; Line 742
	mov	edx, DWORD PTR _ki$5211[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _sib$5234[ebp]
	mov	ecx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+edx*4+36], ecx
; Line 743
	mov	edx, DWORD PTR _sib$5234[ebp]
	mov	eax, DWORD PTR _sib$5234[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+4], ecx
; Line 744
	mov	edx, DWORD PTR _sib$5234[ebp]
	mov	eax, DWORD PTR _sib$5234[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+20], ecx
; Line 745
	mov	DWORD PTR _j$5235[ebp], 0
	jmp	SHORT $LN36@delpos234_
$LN35@delpos234_:
	mov	edx, DWORD PTR _j$5235[ebp]
	add	edx, 1
	mov	DWORD PTR _j$5235[ebp], edx
$LN36@delpos234_:
	cmp	DWORD PTR _j$5235[ebp], 2
	jge	SHORT $LN34@delpos234_
	mov	eax, DWORD PTR _j$5235[ebp]
	mov	ecx, DWORD PTR _sib$5234[ebp]
	cmp	DWORD PTR [ecx+eax*4+40], 0
	je	SHORT $LN34@delpos234_
; Line 746
	mov	edx, DWORD PTR _j$5235[ebp]
	mov	eax, DWORD PTR _sib$5234[ebp]
	mov	ecx, DWORD PTR _j$5235[ebp]
	mov	esi, DWORD PTR _sib$5234[ebp]
	mov	ecx, DWORD PTR [esi+ecx*4+12]
	mov	DWORD PTR [eax+edx*4+8], ecx
; Line 747
	mov	edx, DWORD PTR _j$5235[ebp]
	mov	eax, DWORD PTR _sib$5234[ebp]
	mov	ecx, DWORD PTR _j$5235[ebp]
	mov	esi, DWORD PTR _sib$5234[ebp]
	mov	ecx, DWORD PTR [esi+ecx*4+28]
	mov	DWORD PTR [eax+edx*4+24], ecx
; Line 748
	mov	edx, DWORD PTR _j$5235[ebp]
	mov	eax, DWORD PTR _sib$5234[ebp]
	mov	ecx, DWORD PTR _j$5235[ebp]
	mov	esi, DWORD PTR _sib$5234[ebp]
	mov	ecx, DWORD PTR [esi+ecx*4+40]
	mov	DWORD PTR [eax+edx*4+36], ecx
; Line 749
	jmp	SHORT $LN35@delpos234_
$LN34@delpos234_:
; Line 750
	mov	edx, DWORD PTR _j$5235[ebp]
	mov	eax, DWORD PTR _sib$5234[ebp]
	mov	DWORD PTR [eax+edx*4+8], 0
; Line 751
	mov	ecx, DWORD PTR _j$5235[ebp]
	mov	edx, DWORD PTR _sib$5234[ebp]
	mov	DWORD PTR [edx+ecx*4+24], 0
; Line 752
	mov	eax, DWORD PTR _j$5235[ebp]
	mov	ecx, DWORD PTR _sib$5234[ebp]
	mov	DWORD PTR [ecx+eax*4+36], 0
; Line 753
	mov	edx, DWORD PTR _sub$5212[ebp]
	push	edx
	call	_countnode234
	add	esp, 4
	mov	ecx, DWORD PTR _ki$5211[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [edx+ecx*4+20], eax
; Line 754
	mov	eax, DWORD PTR _sib$5234[ebp]
	push	eax
	call	_countnode234
	add	esp, 4
	mov	ecx, DWORD PTR _ki$5211[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [edx+ecx*4+24], eax
; Line 756
	jmp	$LN42@delpos234_
$LN38@delpos234_:
; Line 779
	cmp	DWORD PTR _ki$5211[ebp], 0
	jle	SHORT $LN32@delpos234_
; Line 780
	mov	eax, DWORD PTR _ki$5211[ebp]
	sub	eax, 1
	mov	DWORD PTR _ki$5211[ebp], eax
; Line 781
	mov	ecx, DWORD PTR _ki$5211[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+20]
	mov	ecx, DWORD PTR _index$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _index$[ebp], edx
$LN32@delpos234_:
; Line 783
	mov	eax, DWORD PTR _ki$5211[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+4]
	mov	DWORD PTR _sib$5243[ebp], edx
; Line 784
	mov	eax, DWORD PTR _ki$5211[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+8]
	mov	DWORD PTR _sub$5212[ebp], edx
; Line 786
	mov	eax, DWORD PTR _sub$5212[ebp]
	mov	ecx, DWORD PTR _sub$5212[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+16], edx
; Line 787
	mov	eax, DWORD PTR _sub$5212[ebp]
	mov	ecx, DWORD PTR _sub$5212[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+32], edx
; Line 788
	mov	eax, DWORD PTR _sub$5212[ebp]
	mov	ecx, DWORD PTR _sub$5212[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+44], edx
; Line 789
	mov	eax, DWORD PTR _sub$5212[ebp]
	mov	ecx, DWORD PTR _sub$5212[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+12], edx
; Line 790
	mov	eax, DWORD PTR _sub$5212[ebp]
	mov	ecx, DWORD PTR _sub$5212[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+28], edx
; Line 791
	mov	eax, DWORD PTR _sub$5212[ebp]
	mov	ecx, DWORD PTR _ki$5211[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4+36]
	mov	DWORD PTR [eax+40], ecx
; Line 792
	mov	edx, DWORD PTR _sub$5212[ebp]
	mov	eax, DWORD PTR _sib$5243[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
; Line 793
	mov	edx, DWORD PTR _sub$5212[ebp]
	mov	eax, DWORD PTR _sib$5243[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx
; Line 794
	mov	edx, DWORD PTR _sub$5212[ebp]
	cmp	DWORD PTR [edx+8], 0
	je	SHORT $LN31@delpos234_
; Line 795
	mov	eax, DWORD PTR _sub$5212[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _sub$5212[ebp]
	mov	DWORD PTR [ecx], edx
$LN31@delpos234_:
; Line 796
	mov	eax, DWORD PTR _sub$5212[ebp]
	mov	ecx, DWORD PTR _sib$5243[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+36], edx
; Line 797
	mov	eax, DWORD PTR _sub$5212[ebp]
	mov	ecx, DWORD PTR _sib$5243[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 798
	mov	eax, DWORD PTR _sub$5212[ebp]
	mov	ecx, DWORD PTR _sib$5243[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
; Line 799
	mov	eax, DWORD PTR _sub$5212[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN30@delpos234_
; Line 800
	mov	ecx, DWORD PTR _sub$5212[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _sub$5212[ebp]
	mov	DWORD PTR [edx], eax
$LN30@delpos234_:
; Line 802
	mov	ecx, DWORD PTR _sub$5212[ebp]
	push	ecx
	call	_countnode234
	add	esp, 4
	mov	edx, DWORD PTR _ki$5211[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [ecx+edx*4+24], eax
; Line 804
	mov	edx, DWORD PTR _sib$5243[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 810
	mov	eax, DWORD PTR _ki$5211[ebp]
	mov	DWORD PTR _j$5244[ebp], eax
	jmp	SHORT $LN29@delpos234_
$LN28@delpos234_:
	mov	ecx, DWORD PTR _j$5244[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$5244[ebp], ecx
$LN29@delpos234_:
	cmp	DWORD PTR _j$5244[ebp], 3
	jge	SHORT $LN27@delpos234_
	mov	edx, DWORD PTR _j$5244[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [eax+edx*4+8], 0
	je	SHORT $LN27@delpos234_
; Line 811
	mov	ecx, DWORD PTR _j$5244[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _j$5244[ebp]
	mov	esi, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [esi+eax*4+8]
	mov	DWORD PTR [edx+ecx*4+4], eax
; Line 812
	mov	ecx, DWORD PTR _j$5244[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _j$5244[ebp]
	mov	esi, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [esi+eax*4+24]
	mov	DWORD PTR [edx+ecx*4+20], eax
; Line 813
	cmp	DWORD PTR _j$5244[ebp], 2
	jge	SHORT $LN63@delpos234_
	mov	ecx, DWORD PTR _j$5244[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+40]
	mov	DWORD PTR tv439[ebp], eax
	jmp	SHORT $LN64@delpos234_
$LN63@delpos234_:
	mov	DWORD PTR tv439[ebp], 0
$LN64@delpos234_:
	mov	ecx, DWORD PTR _j$5244[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR tv439[ebp]
	mov	DWORD PTR [edx+ecx*4+36], eax
; Line 814
	jmp	SHORT $LN28@delpos234_
$LN27@delpos234_:
; Line 815
	mov	ecx, DWORD PTR _j$5244[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [edx+ecx*4+4], 0
; Line 816
	mov	eax, DWORD PTR _j$5244[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [ecx+eax*4+20], 0
; Line 817
	cmp	DWORD PTR _j$5244[ebp], 3
	jge	SHORT $LN26@delpos234_
; Line 818
	mov	edx, DWORD PTR _j$5244[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	DWORD PTR [eax+edx*4+36], 0
$LN26@delpos234_:
; Line 821
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [ecx+36], 0
	jne	SHORT $LN42@delpos234_
; Line 827
	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR _sub$5212[ebp]
	mov	DWORD PTR [edx], eax
; Line 828
	mov	ecx, DWORD PTR _sub$5212[ebp]
	mov	DWORD PTR [ecx], 0
; Line 829
	mov	edx, DWORD PTR _n$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
$LN42@delpos234_:
; Line 833
	mov	eax, DWORD PTR _sub$5212[ebp]
	mov	DWORD PTR _n$[ebp], eax
; Line 834
	jmp	$LN56@delpos234_
$LN55@delpos234_:
; Line 835
	cmp	DWORD PTR _retval$[ebp], 0
	jne	SHORT $LN24@delpos234_
; Line 836
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+36]
	mov	DWORD PTR _retval$[ebp], eax
$LN24@delpos234_:
; Line 838
	cmp	DWORD PTR _ei$[ebp], -1
	jne	SHORT $LN23@delpos234_
; Line 839
	xor	eax, eax
	jmp	$LN59@delpos234_
$LN23@delpos234_:
; Line 846
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN22@delpos234_
	mov	edx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [edx+40], 0
	jne	SHORT $LN22@delpos234_
	mov	eax, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN22@delpos234_
; Line 848
	mov	ecx, DWORD PTR _n$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 849
	mov	edx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [edx], 0
; Line 850
	mov	eax, DWORD PTR _retval$[ebp]
	jmp	$LN59@delpos234_
$LN22@delpos234_:
; Line 859
	mov	eax, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	$LN21@delpos234_
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [ecx+40], 0
	je	$LN21@delpos234_
; Line 867
	mov	edx, DWORD PTR _ei$[ebp]
	mov	DWORD PTR _i$5263[ebp], edx
	jmp	SHORT $LN20@delpos234_
$LN19@delpos234_:
	mov	eax, DWORD PTR _i$5263[ebp]
	add	eax, 1
	mov	DWORD PTR _i$5263[ebp], eax
$LN20@delpos234_:
	cmp	DWORD PTR _i$5263[ebp], 2
	jge	SHORT $LN18@delpos234_
	mov	ecx, DWORD PTR _i$5263[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [edx+ecx*4+40], 0
	je	SHORT $LN18@delpos234_
; Line 868
	mov	eax, DWORD PTR _i$5263[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _i$5263[ebp]
	mov	esi, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [esi+edx*4+40]
	mov	DWORD PTR [ecx+eax*4+36], edx
	jmp	SHORT $LN19@delpos234_
$LN18@delpos234_:
; Line 869
	mov	eax, DWORD PTR _i$5263[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [ecx+eax*4+36], 0
$LN17@delpos234_:
; Line 874
	mov	edx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN16@delpos234_
; Line 878
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR _n$[ebp]
	jne	SHORT $LN67@delpos234_
	mov	DWORD PTR tv502[ebp], 0
	jmp	SHORT $LN68@delpos234_
$LN67@delpos234_:
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR _n$[ebp]
	jne	SHORT $LN65@delpos234_
	mov	DWORD PTR tv501[ebp], 1
	jmp	SHORT $LN66@delpos234_
$LN65@delpos234_:
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	xor	eax, eax
	cmp	edx, DWORD PTR _n$[ebp]
	setne	al
	add	eax, 2
	mov	DWORD PTR tv501[ebp], eax
$LN66@delpos234_:
	mov	ecx, DWORD PTR tv501[ebp]
	mov	DWORD PTR tv502[ebp], ecx
$LN68@delpos234_:
	mov	edx, DWORD PTR tv502[ebp]
	mov	DWORD PTR _childnum$5271[ebp], edx
; Line 879
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _childnum$5271[ebp]
	mov	eax, DWORD PTR [ecx+edx*4+20]
	sub	eax, 1
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _childnum$5271[ebp]
	mov	DWORD PTR [edx+ecx*4+20], eax
; Line 880
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _n$[ebp], eax
; Line 881
	jmp	SHORT $LN17@delpos234_
$LN16@delpos234_:
; Line 882
	mov	eax, DWORD PTR _retval$[ebp]
	jmp	$LN59@delpos234_
	jmp	$LN15@delpos234_
$LN21@delpos234_:
; Line 883
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+4]
	cmp	DWORD PTR [eax+40], 0
	je	$LN14@delpos234_
; Line 892
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+4]
	mov	DWORD PTR _m$5274[ebp], eax
$LN13@delpos234_:
; Line 895
	mov	ecx, DWORD PTR _m$5274[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN12@delpos234_
; Line 898
	mov	edx, DWORD PTR _m$5274[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN73@delpos234_
	mov	eax, DWORD PTR _m$5274[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv544[ebp], ecx
	jmp	SHORT $LN74@delpos234_
$LN73@delpos234_:
	mov	edx, DWORD PTR _m$5274[ebp]
	cmp	DWORD PTR [edx+12], 0
	je	SHORT $LN71@delpos234_
	mov	eax, DWORD PTR _m$5274[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR tv542[ebp], ecx
	jmp	SHORT $LN72@delpos234_
$LN71@delpos234_:
	mov	edx, DWORD PTR _m$5274[ebp]
	cmp	DWORD PTR [edx+8], 0
	je	SHORT $LN69@delpos234_
	mov	eax, DWORD PTR _m$5274[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR tv540[ebp], ecx
	jmp	SHORT $LN70@delpos234_
$LN69@delpos234_:
	mov	edx, DWORD PTR _m$5274[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR tv540[ebp], eax
$LN70@delpos234_:
	mov	ecx, DWORD PTR tv540[ebp]
	mov	DWORD PTR tv542[ebp], ecx
$LN72@delpos234_:
	mov	edx, DWORD PTR tv542[ebp]
	mov	DWORD PTR tv544[ebp], edx
$LN74@delpos234_:
	mov	eax, DWORD PTR tv544[ebp]
	mov	DWORD PTR _m$5274[ebp], eax
; Line 899
	jmp	SHORT $LN13@delpos234_
$LN12@delpos234_:
; Line 901
	mov	ecx, DWORD PTR _m$5274[ebp]
	cmp	DWORD PTR [ecx+44], 0
	je	SHORT $LN77@delpos234_
	mov	edx, DWORD PTR _m$5274[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR tv558[ebp], eax
	jmp	SHORT $LN78@delpos234_
$LN77@delpos234_:
	mov	ecx, DWORD PTR _m$5274[ebp]
	cmp	DWORD PTR [ecx+40], 0
	je	SHORT $LN75@delpos234_
	mov	edx, DWORD PTR _m$5274[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR tv556[ebp], eax
	jmp	SHORT $LN76@delpos234_
$LN75@delpos234_:
	mov	ecx, DWORD PTR _m$5274[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv556[ebp], edx
$LN76@delpos234_:
	mov	eax, DWORD PTR tv556[ebp]
	mov	DWORD PTR tv558[ebp], eax
$LN78@delpos234_:
	mov	ecx, DWORD PTR tv558[ebp]
	mov	DWORD PTR _target$5275[ebp], ecx
; Line 902
	mov	edx, DWORD PTR _ei$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _target$5275[ebp]
	mov	DWORD PTR [eax+edx*4+36], ecx
; Line 903
	mov	edx, DWORD PTR _ei$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+20]
	sub	ecx, 1
	mov	DWORD PTR _index$[ebp], ecx
; Line 904
	mov	edx, DWORD PTR _ei$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+4]
	mov	DWORD PTR _n$[ebp], ecx
	jmp	$LN15@delpos234_
$LN14@delpos234_:
; Line 905
	mov	edx, DWORD PTR _ei$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+8]
	cmp	DWORD PTR [ecx+40], 0
	je	SHORT $LN10@delpos234_
; Line 910
	mov	edx, DWORD PTR _ei$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+8]
	mov	DWORD PTR _m$5281[ebp], ecx
$LN9@delpos234_:
; Line 913
	mov	edx, DWORD PTR _m$5281[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	SHORT $LN8@delpos234_
; Line 914
	mov	eax, DWORD PTR _m$5281[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _m$5281[ebp], ecx
; Line 915
	jmp	SHORT $LN9@delpos234_
$LN8@delpos234_:
; Line 916
	mov	edx, DWORD PTR _m$5281[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	DWORD PTR _target$5282[ebp], eax
; Line 917
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _target$5282[ebp]
	mov	DWORD PTR [edx+ecx*4+36], eax
; Line 918
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+8]
	mov	DWORD PTR _n$[ebp], eax
; Line 919
	mov	DWORD PTR _index$[ebp], 0
; Line 920
	jmp	$LN15@delpos234_
$LN10@delpos234_:
; Line 929
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+4]
	mov	DWORD PTR _a$5287[ebp], eax
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+8]
	mov	DWORD PTR _b$5288[ebp], eax
; Line 933
	mov	ecx, DWORD PTR _a$5287[ebp]
	mov	edx, DWORD PTR _ei$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [eax+edx*4+36]
	mov	DWORD PTR [ecx+40], edx
; Line 934
	mov	eax, DWORD PTR _a$5287[ebp]
	mov	ecx, DWORD PTR _b$5288[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+12], edx
; Line 935
	mov	eax, DWORD PTR _a$5287[ebp]
	mov	ecx, DWORD PTR _b$5288[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+28], edx
; Line 936
	mov	eax, DWORD PTR _a$5287[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN6@delpos234_
; Line 937
	mov	ecx, DWORD PTR _a$5287[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _a$5287[ebp]
	mov	DWORD PTR [edx], eax
$LN6@delpos234_:
; Line 938
	mov	ecx, DWORD PTR _a$5287[ebp]
	mov	edx, DWORD PTR _b$5288[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	DWORD PTR [ecx+44], eax
; Line 939
	mov	ecx, DWORD PTR _a$5287[ebp]
	mov	edx, DWORD PTR _b$5288[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+16], eax
; Line 940
	mov	ecx, DWORD PTR _a$5287[ebp]
	mov	edx, DWORD PTR _b$5288[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+32], eax
; Line 941
	mov	ecx, DWORD PTR _a$5287[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN5@delpos234_
; Line 942
	mov	edx, DWORD PTR _a$5287[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR _a$5287[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@delpos234_:
; Line 943
	mov	edx, DWORD PTR _b$5288[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 944
	mov	eax, DWORD PTR _a$5287[ebp]
	push	eax
	call	_countnode234
	add	esp, 4
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [edx+ecx*4+20], eax
; Line 949
	mov	eax, DWORD PTR _ei$[ebp]
	mov	DWORD PTR _j$5289[ebp], eax
	jmp	SHORT $LN4@delpos234_
$LN3@delpos234_:
	mov	ecx, DWORD PTR _j$5289[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$5289[ebp], ecx
$LN4@delpos234_:
	cmp	DWORD PTR _j$5289[ebp], 2
	jge	SHORT $LN2@delpos234_
	mov	edx, DWORD PTR _j$5289[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [eax+edx*4+40], 0
	je	SHORT $LN2@delpos234_
; Line 950
	mov	ecx, DWORD PTR _j$5289[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _j$5289[ebp]
	mov	esi, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [esi+eax*4+40]
	mov	DWORD PTR [edx+ecx*4+36], eax
; Line 951
	mov	ecx, DWORD PTR _j$5289[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _j$5289[ebp]
	mov	esi, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [esi+eax*4+12]
	mov	DWORD PTR [edx+ecx*4+8], eax
; Line 952
	mov	ecx, DWORD PTR _j$5289[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _j$5289[ebp]
	mov	esi, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [esi+eax*4+28]
	mov	DWORD PTR [edx+ecx*4+24], eax
; Line 953
	jmp	SHORT $LN3@delpos234_
$LN2@delpos234_:
; Line 954
	mov	ecx, DWORD PTR _j$5289[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [edx+ecx*4+36], 0
; Line 955
	mov	eax, DWORD PTR _j$5289[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [ecx+eax*4+8], 0
; Line 956
	mov	edx, DWORD PTR _j$5289[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	DWORD PTR [eax+edx*4+24], 0
; Line 962
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [ecx+36], 0
	jne	SHORT $LN1@delpos234_
; Line 964
	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR _a$5287[ebp]
	mov	DWORD PTR [edx], eax
; Line 965
	mov	ecx, DWORD PTR _a$5287[ebp]
	mov	DWORD PTR [ecx], 0
; Line 966
	mov	edx, DWORD PTR _n$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
$LN1@delpos234_:
; Line 972
	mov	eax, DWORD PTR _a$5287[ebp]
	mov	DWORD PTR _n$[ebp], eax
; Line 973
	mov	ecx, DWORD PTR _a$5287[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _a$5287[ebp]
	mov	ecx, DWORD PTR [eax+24]
	lea	edx, DWORD PTR [edx+ecx+1]
	mov	DWORD PTR _index$[ebp], edx
$LN15@delpos234_:
; Line 975
	jmp	$LN58@delpos234_
$LN59@delpos234_:
; Line 976
	pop	edi
	pop	esi
	add	esp, 116				; 00000074H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_delpos234_internal ENDP
_TEXT	ENDS
PUBLIC	_del234
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_index$ = -8						; size = 4
_t$ = 8							; size = 4
_e$ = 12						; size = 4
_del234	PROC
; Line 984
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 986
	lea	eax, DWORD PTR _index$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _e$[ebp]
	push	ecx
	mov	edx, DWORD PTR _t$[ebp]
	push	edx
	call	_findrelpos234
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN1@del234
; Line 987
	xor	eax, eax
	jmp	SHORT $LN2@del234
$LN1@del234:
; Line 988
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	call	_delpos234_internal
	add	esp, 8
$LN2@del234:
; Line 989
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@del234
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@del234:
	DD	1
	DD	$LN5@del234
$LN5@del234:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@del234
$LN4@del234:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
_del234	ENDP
_TEXT	ENDS
END

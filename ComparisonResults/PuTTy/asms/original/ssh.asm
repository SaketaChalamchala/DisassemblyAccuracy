; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\Putty\ssh.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_ssh_backend
EXTRN	_ssh_zlib:BYTE
EXTRN	_ssh_hmac_sha1_96_buggy:BYTE
EXTRN	_ssh_hmac_sha1_buggy:BYTE
EXTRN	_ssh_hmac_md5:BYTE
EXTRN	_ssh_hmac_sha1_96:BYTE
EXTRN	_ssh_hmac_sha1:BYTE
EXTRN	_ssh_hmac_sha256:BYTE
EXTRN	_ssh_dss:BYTE
EXTRN	_ssh_rsa:BYTE
_BSS	SEGMENT
$SG89869 DB	01H DUP (?)
	ALIGN	4

$SG90585 DB	01H DUP (?)
	ALIGN	4

$SG90591 DB	01H DUP (?)
	ALIGN	4

$SG90618 DB	01H DUP (?)
	ALIGN	4

$SG90624 DB	01H DUP (?)
	ALIGN	4

$SG90957 DB	01H DUP (?)
	ALIGN	4

$SG90958 DB	01H DUP (?)
	ALIGN	4

$SG90976 DB	01H DUP (?)
	ALIGN	4

$SG90990 DB	01H DUP (?)
	ALIGN	4

$SG90992 DB	01H DUP (?)
	ALIGN	4

$SG90993 DB	01H DUP (?)
	ALIGN	4

$SG90995 DB	01H DUP (?)
	ALIGN	4

$SG90996 DB	01H DUP (?)
	ALIGN	4

$SG91002 DB	01H DUP (?)
	ALIGN	4

$SG91004 DB	01H DUP (?)
	ALIGN	4

$SG91005 DB	01H DUP (?)
	ALIGN	4

$SG91009 DB	01H DUP (?)
	ALIGN	4

$SG91011 DB	01H DUP (?)
	ALIGN	4

$SG91014 DB	01H DUP (?)
	ALIGN	4

$SG91021 DB	01H DUP (?)
	ALIGN	4

$SG91023 DB	01H DUP (?)
	ALIGN	4

$SG91026 DB	01H DUP (?)
	ALIGN	4

$SG91040 DB	01H DUP (?)
	ALIGN	4

$SG91174 DB	01H DUP (?)
	ALIGN	4

$SG92539 DB	01H DUP (?)
	ALIGN	4

$SG92541 DB	01H DUP (?)
	ALIGN	4

$SG92640 DB	01H DUP (?)
	ALIGN	4

$SG92889 DB	02H DUP (?)
	ALIGN	4

$SG93573 DB	01H DUP (?)
	ALIGN	4

$SG93574 DB	01H DUP (?)
	ALIGN	4

$SG93611 DB	01H DUP (?)
	ALIGN	4

$SG94299 DB	01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
_ssh2_disconnect_reasons DD 00H
	DD	FLAT:$SG87294
	DD	FLAT:$SG87295
	DD	FLAT:$SG87296
	DD	FLAT:$SG87297
	DD	FLAT:$SG87298
	DD	FLAT:$SG87299
	DD	FLAT:$SG87300
	DD	FLAT:$SG87301
	DD	FLAT:$SG87302
	DD	FLAT:$SG87303
	DD	FLAT:$SG87304
	DD	FLAT:$SG87305
	DD	FLAT:$SG87306
	DD	FLAT:$SG87307
	DD	FLAT:$SG87308
_ssh_ttymodes DD FLAT:$SG87317
	DD	01H
	DD	00H
	DD	FLAT:$SG87318
	DD	02H
	DD	00H
	DD	FLAT:$SG87319
	DD	03H
	DD	00H
	DD	FLAT:$SG87320
	DD	04H
	DD	00H
	DD	FLAT:$SG87321
	DD	05H
	DD	00H
	DD	FLAT:$SG87322
	DD	06H
	DD	00H
	DD	FLAT:$SG87323
	DD	07H
	DD	00H
	DD	FLAT:$SG87324
	DD	08H
	DD	00H
	DD	FLAT:$SG87325
	DD	09H
	DD	00H
	DD	FLAT:$SG87326
	DD	0aH
	DD	00H
	DD	FLAT:$SG87327
	DD	0bH
	DD	00H
	DD	FLAT:$SG87328
	DD	0cH
	DD	00H
	DD	FLAT:$SG87329
	DD	0dH
	DD	00H
	DD	FLAT:$SG87330
	DD	0eH
	DD	00H
	DD	FLAT:$SG87331
	DD	0fH
	DD	00H
	DD	FLAT:$SG87332
	DD	010H
	DD	00H
	DD	FLAT:$SG87333
	DD	011H
	DD	00H
	DD	FLAT:$SG87334
	DD	012H
	DD	00H
	DD	FLAT:$SG87335
	DD	01eH
	DD	01H
	DD	FLAT:$SG87336
	DD	01fH
	DD	01H
	DD	FLAT:$SG87337
	DD	020H
	DD	01H
	DD	FLAT:$SG87338
	DD	021H
	DD	01H
	DD	FLAT:$SG87339
	DD	022H
	DD	01H
	DD	FLAT:$SG87340
	DD	023H
	DD	01H
	DD	FLAT:$SG87341
	DD	024H
	DD	01H
	DD	FLAT:$SG87342
	DD	025H
	DD	01H
	DD	FLAT:$SG87343
	DD	026H
	DD	01H
	DD	FLAT:$SG87344
	DD	027H
	DD	01H
	DD	FLAT:$SG87345
	DD	028H
	DD	01H
	DD	FLAT:$SG87346
	DD	029H
	DD	01H
	DD	FLAT:$SG87347
	DD	032H
	DD	01H
	DD	FLAT:$SG87348
	DD	033H
	DD	01H
	DD	FLAT:$SG87349
	DD	034H
	DD	01H
	DD	FLAT:$SG87350
	DD	035H
	DD	01H
	DD	FLAT:$SG87351
	DD	036H
	DD	01H
	DD	FLAT:$SG87352
	DD	037H
	DD	01H
	DD	FLAT:$SG87353
	DD	038H
	DD	01H
	DD	FLAT:$SG87354
	DD	039H
	DD	01H
	DD	FLAT:$SG87355
	DD	03aH
	DD	01H
	DD	FLAT:$SG87356
	DD	03bH
	DD	01H
	DD	FLAT:$SG87357
	DD	03cH
	DD	01H
	DD	FLAT:$SG87358
	DD	03dH
	DD	01H
	DD	FLAT:$SG87359
	DD	03eH
	DD	01H
	DD	FLAT:$SG87360
	DD	046H
	DD	01H
	DD	FLAT:$SG87361
	DD	047H
	DD	01H
	DD	FLAT:$SG87362
	DD	048H
	DD	01H
	DD	FLAT:$SG87363
	DD	049H
	DD	01H
	DD	FLAT:$SG87364
	DD	04aH
	DD	01H
	DD	FLAT:$SG87365
	DD	04bH
	DD	01H
	DD	FLAT:$SG87366
	DD	05aH
	DD	01H
	DD	FLAT:$SG87367
	DD	05bH
	DD	01H
	DD	FLAT:$SG87368
	DD	05cH
	DD	01H
	DD	FLAT:$SG87369
	DD	05dH
	DD	01H
_ssh_comp_none DD FLAT:$SG87710
	DD	00H
	DD	FLAT:_ssh_comp_none_init
	DD	FLAT:_ssh_comp_none_cleanup
	DD	FLAT:_ssh_comp_none_block
	DD	FLAT:_ssh_comp_none_init
	DD	FLAT:_ssh_comp_none_cleanup
	DD	FLAT:_ssh_comp_none_block
	DD	FLAT:_ssh_comp_none_disable
	DD	00H
?protoname@?1??do_ssh_init@@9@9 DB 'SSH-', 00H		; `do_ssh_init'::`2'::protoname
	ORG $+3
?protoname@?1??do_ssh_connection_init@@9@9 DB 'SSHCONNECTION@putty.projec'
	DB	'ts.tartarus.org-', 00H			; `do_ssh_connection_init'::`2'::protoname
	ORG $+1
?fn_table@?1??connect_to_host@@9@9 DD FLAT:_ssh_socket_log ; `connect_to_host'::`2'::fn_table
	DD	FLAT:_ssh_closing
	DD	FLAT:_ssh_receive
	DD	FLAT:_ssh_sent
	DD	00H
?reasons@?1??ssh2_msg_channel_open_failure@@9@9 DD FLAT:$SG92490 ; `ssh2_msg_channel_open_failure'::`2'::reasons
	DD	FLAT:$SG92491
	DD	FLAT:$SG92492
	DD	FLAT:$SG92493
	DD	FLAT:$SG92494
?ssh1_ignore_special@?1??ssh_get_specials@@9@9 DD FLAT:$SG94203 ; `ssh_get_specials'::`2'::ssh1_ignore_special
	DD	06H
?ssh2_ignore_special@?1??ssh_get_specials@@9@9 DD FLAT:$SG94206 ; `ssh_get_specials'::`2'::ssh2_ignore_special
	DD	06H
?ssh2_rekey_special@?1??ssh_get_specials@@9@9 DD FLAT:$SG94209 ; `ssh_get_specials'::`2'::ssh2_rekey_special
	DD	011H
?ssh2_session_specials@?1??ssh_get_specials@@9@9 DD 00H	; `ssh_get_specials'::`2'::ssh2_session_specials
	DD	01fH
	DD	FLAT:$SG94213
	DD	01H
	DD	FLAT:$SG94214
	DD	017H
	DD	FLAT:$SG94215
	DD	01cH
	DD	FLAT:$SG94216
	DD	018H
	DD	FLAT:$SG94217
	DD	01aH
	DD	FLAT:$SG94218
	DD	015H
	DD	FLAT:$SG94219
	DD	020H
	DD	FLAT:$SG94220
	DD	012H
	DD	FLAT:$SG94221
	DD	013H
	DD	FLAT:$SG94222
	DD	014H
	DD	FLAT:$SG94223
	DD	016H
	DD	FLAT:$SG94224
	DD	019H
	DD	FLAT:$SG94225
	DD	01bH
	DD	FLAT:$SG94226
	DD	01dH
	DD	FLAT:$SG94227
	DD	01eH
	DD	00H
	DD	021H
?specials_end@?1??ssh_get_specials@@9@9 DD 00H		; `ssh_get_specials'::`2'::specials_end
	DD	021H
CONST	ENDS
_DATA	SEGMENT
$SG87294 DB	'host not allowed to connect', 00H
$SG87295 DB	'protocol error', 00H
	ORG $+1
$SG87296 DB	'key exchange failed', 00H
$SG87297 DB	'host authentication failed', 00H
	ORG $+1
$SG87298 DB	'MAC error', 00H
	ORG $+2
$SG87299 DB	'compression error', 00H
	ORG $+2
$SG87300 DB	'service not available', 00H
	ORG $+2
$SG87301 DB	'protocol version not supported', 00H
	ORG $+1
$SG87302 DB	'host key not verifiable', 00H
$SG87303 DB	'connection lost', 00H
$SG87304 DB	'by application', 00H
	ORG $+1
$SG87305 DB	'too many connections', 00H
	ORG $+3
$SG87306 DB	'auth cancelled by user', 00H
	ORG $+1
$SG87307 DB	'no more auth methods available', 00H
	ORG $+1
$SG87308 DB	'illegal user name', 00H
	ORG $+2
$SG87317 DB	'INTR', 00H
	ORG $+3
$SG87318 DB	'QUIT', 00H
	ORG $+3
$SG87319 DB	'ERASE', 00H
	ORG $+2
$SG87320 DB	'KILL', 00H
	ORG $+3
$SG87321 DB	'EOF', 00H
$SG87322 DB	'EOL', 00H
$SG87323 DB	'EOL2', 00H
	ORG $+3
$SG87324 DB	'START', 00H
	ORG $+2
$SG87325 DB	'STOP', 00H
	ORG $+3
$SG87326 DB	'SUSP', 00H
	ORG $+3
$SG87327 DB	'DSUSP', 00H
	ORG $+2
$SG87328 DB	'REPRINT', 00H
$SG87329 DB	'WERASE', 00H
	ORG $+1
$SG87330 DB	'LNEXT', 00H
	ORG $+2
$SG87331 DB	'FLUSH', 00H
	ORG $+2
$SG87332 DB	'SWTCH', 00H
	ORG $+2
$SG87333 DB	'STATUS', 00H
	ORG $+1
$SG87334 DB	'DISCARD', 00H
$SG87335 DB	'IGNPAR', 00H
	ORG $+1
$SG87336 DB	'PARMRK', 00H
	ORG $+1
$SG87337 DB	'INPCK', 00H
	ORG $+2
$SG87338 DB	'ISTRIP', 00H
	ORG $+1
$SG87339 DB	'INLCR', 00H
	ORG $+2
$SG87340 DB	'IGNCR', 00H
	ORG $+2
$SG87341 DB	'ICRNL', 00H
	ORG $+2
$SG87342 DB	'IUCLC', 00H
	ORG $+2
$SG87343 DB	'IXON', 00H
	ORG $+3
$SG87344 DB	'IXANY', 00H
	ORG $+2
$SG87345 DB	'IXOFF', 00H
	ORG $+2
$SG87346 DB	'IMAXBEL', 00H
$SG87347 DB	'ISIG', 00H
	ORG $+3
$SG87348 DB	'ICANON', 00H
	ORG $+1
$SG87349 DB	'XCASE', 00H
	ORG $+2
$SG87350 DB	'ECHO', 00H
	ORG $+3
$SG87351 DB	'ECHOE', 00H
	ORG $+2
$SG87352 DB	'ECHOK', 00H
	ORG $+2
$SG87353 DB	'ECHONL', 00H
	ORG $+1
$SG87354 DB	'NOFLSH', 00H
	ORG $+1
$SG87355 DB	'TOSTOP', 00H
	ORG $+1
$SG87356 DB	'IEXTEN', 00H
	ORG $+1
$SG87357 DB	'ECHOCTL', 00H
$SG87358 DB	'ECHOKE', 00H
	ORG $+1
$SG87359 DB	'PENDIN', 00H
	ORG $+1
$SG87360 DB	'OPOST', 00H
	ORG $+2
$SG87361 DB	'OLCUC', 00H
	ORG $+2
$SG87362 DB	'ONLCR', 00H
	ORG $+2
$SG87363 DB	'OCRNL', 00H
	ORG $+2
$SG87364 DB	'ONOCR', 00H
	ORG $+2
$SG87365 DB	'ONLRET', 00H
	ORG $+1
$SG87366 DB	'CS7', 00H
$SG87367 DB	'CS8', 00H
$SG87368 DB	'PARENB', 00H
	ORG $+1
$SG87369 DB	'PARODD', 00H
	ORG $+1
$SG87386 DB	'yes', 00H
$SG87387 DB	'on', 00H
	ORG $+1
$SG87388 DB	'true', 00H
	ORG $+3
$SG87389 DB	'+', 00H
	ORG $+2
$SG87393 DB	'no', 00H
	ORG $+1
$SG87394 DB	'off', 00H
$SG87395 DB	'false', 00H
	ORG $+2
$SG87396 DB	'-', 00H
	ORG $+2
$SG87403 DB	'SSH1_MSG_DISCONNECT', 00H
$SG87405 DB	'SSH1_SMSG_PUBLIC_KEY', 00H
	ORG $+3
$SG87407 DB	'SSH1_CMSG_SESSION_KEY', 00H
	ORG $+2
$SG87409 DB	'SSH1_CMSG_USER', 00H
	ORG $+1
$SG87411 DB	'SSH1_CMSG_AUTH_RSA', 00H
	ORG $+1
$SG87413 DB	'SSH1_SMSG_AUTH_RSA_CHALLENGE', 00H
	ORG $+3
$SG87415 DB	'SSH1_CMSG_AUTH_RSA_RESPONSE', 00H
$SG87417 DB	'SSH1_CMSG_AUTH_PASSWORD', 00H
$SG87419 DB	'SSH1_CMSG_REQUEST_PTY', 00H
	ORG $+2
$SG87421 DB	'SSH1_CMSG_WINDOW_SIZE', 00H
	ORG $+2
$SG87423 DB	'SSH1_CMSG_EXEC_SHELL', 00H
	ORG $+3
$SG87425 DB	'SSH1_CMSG_EXEC_CMD', 00H
	ORG $+1
$SG87427 DB	'SSH1_SMSG_SUCCESS', 00H
	ORG $+2
$SG87429 DB	'SSH1_SMSG_FAILURE', 00H
	ORG $+2
$SG87431 DB	'SSH1_CMSG_STDIN_DATA', 00H
	ORG $+3
$SG87433 DB	'SSH1_SMSG_STDOUT_DATA', 00H
	ORG $+2
$SG87435 DB	'SSH1_SMSG_STDERR_DATA', 00H
	ORG $+2
$SG87437 DB	'SSH1_CMSG_EOF', 00H
	ORG $+2
$SG87439 DB	'SSH1_SMSG_EXIT_STATUS', 00H
	ORG $+2
$SG87441 DB	'SSH1_MSG_CHANNEL_OPEN_CONFIRMATION', 00H
	ORG $+1
$SG87443 DB	'SSH1_MSG_CHANNEL_OPEN_FAILURE', 00H
	ORG $+2
$SG87445 DB	'SSH1_MSG_CHANNEL_DATA', 00H
	ORG $+2
$SG87447 DB	'SSH1_MSG_CHANNEL_CLOSE', 00H
	ORG $+1
$SG87449 DB	'SSH1_MSG_CHANNEL_CLOSE_CONFIRMATION', 00H
$SG87451 DB	'SSH1_SMSG_X11_OPEN', 00H
	ORG $+1
$SG87453 DB	'SSH1_CMSG_PORT_FORWARD_REQUEST', 00H
	ORG $+1
$SG87455 DB	'SSH1_MSG_PORT_OPEN', 00H
	ORG $+1
$SG87457 DB	'SSH1_CMSG_AGENT_REQUEST_FORWARDING', 00H
	ORG $+1
$SG87459 DB	'SSH1_SMSG_AGENT_OPEN', 00H
	ORG $+3
$SG87461 DB	'SSH1_MSG_IGNORE', 00H
$SG87463 DB	'SSH1_CMSG_EXIT_CONFIRMATION', 00H
$SG87465 DB	'SSH1_CMSG_X11_REQUEST_FORWARDING', 00H
	ORG $+3
$SG87467 DB	'SSH1_CMSG_AUTH_RHOSTS_RSA', 00H
	ORG $+2
$SG87469 DB	'SSH1_MSG_DEBUG', 00H
	ORG $+1
$SG87471 DB	'SSH1_CMSG_REQUEST_COMPRESSION', 00H
	ORG $+2
$SG87473 DB	'SSH1_CMSG_AUTH_TIS', 00H
	ORG $+1
$SG87475 DB	'SSH1_SMSG_AUTH_TIS_CHALLENGE', 00H
	ORG $+3
$SG87477 DB	'SSH1_CMSG_AUTH_TIS_RESPONSE', 00H
$SG87479 DB	'SSH1_CMSG_AUTH_CCARD', 00H
	ORG $+3
$SG87481 DB	'SSH1_SMSG_AUTH_CCARD_CHALLENGE', 00H
	ORG $+1
$SG87483 DB	'SSH1_CMSG_AUTH_CCARD_RESPONSE', 00H
	ORG $+2
$SG87484 DB	'unknown', 00H
$SG87494 DB	'SSH2_MSG_USERAUTH_GSSAPI_RESPONSE', 00H
	ORG $+2
$SG87496 DB	'SSH2_MSG_USERAUTH_GSSAPI_TOKEN', 00H
	ORG $+1
$SG87498 DB	'SSH2_MSG_USERAUTH_GSSAPI_EXCHANGE_COMPLETE', 00H
	ORG $+1
$SG87500 DB	'SSH2_MSG_USERAUTH_GSSAPI_ERROR', 00H
	ORG $+1
$SG87502 DB	'SSH2_MSG_USERAUTH_GSSAPI_ERRTOK', 00H
$SG87504 DB	'SSH2_MSG_USERAUTH_GSSAPI_MIC', 00H
	ORG $+3
$SG87506 DB	'SSH2_MSG_DISCONNECT', 00H
$SG87508 DB	'SSH2_MSG_IGNORE', 00H
$SG87510 DB	'SSH2_MSG_UNIMPLEMENTED', 00H
	ORG $+1
$SG87512 DB	'SSH2_MSG_DEBUG', 00H
	ORG $+1
$SG87514 DB	'SSH2_MSG_SERVICE_REQUEST', 00H
	ORG $+3
$SG87516 DB	'SSH2_MSG_SERVICE_ACCEPT', 00H
$SG87518 DB	'SSH2_MSG_KEXINIT', 00H
	ORG $+3
$SG87520 DB	'SSH2_MSG_NEWKEYS', 00H
	ORG $+3
$SG87522 DB	'SSH2_MSG_KEXDH_INIT', 00H
$SG87524 DB	'SSH2_MSG_KEXDH_REPLY', 00H
	ORG $+3
$SG87526 DB	'SSH2_MSG_KEX_DH_GEX_REQUEST', 00H
$SG87528 DB	'SSH2_MSG_KEX_DH_GEX_GROUP', 00H
	ORG $+2
$SG87530 DB	'SSH2_MSG_KEX_DH_GEX_INIT', 00H
	ORG $+3
$SG87532 DB	'SSH2_MSG_KEX_DH_GEX_REPLY', 00H
	ORG $+2
$SG87534 DB	'SSH2_MSG_KEXRSA_PUBKEY', 00H
	ORG $+1
$SG87536 DB	'SSH2_MSG_KEXRSA_SECRET', 00H
	ORG $+1
$SG87538 DB	'SSH2_MSG_KEXRSA_DONE', 00H
	ORG $+3
$SG87540 DB	'SSH2_MSG_USERAUTH_REQUEST', 00H
	ORG $+2
$SG87542 DB	'SSH2_MSG_USERAUTH_FAILURE', 00H
	ORG $+2
$SG87544 DB	'SSH2_MSG_USERAUTH_SUCCESS', 00H
	ORG $+2
$SG87546 DB	'SSH2_MSG_USERAUTH_BANNER', 00H
	ORG $+3
$SG87548 DB	'SSH2_MSG_USERAUTH_PK_OK', 00H
$SG87550 DB	'SSH2_MSG_USERAUTH_PASSWD_CHANGEREQ', 00H
	ORG $+1
$SG87552 DB	'SSH2_MSG_USERAUTH_INFO_REQUEST', 00H
	ORG $+1
$SG87554 DB	'SSH2_MSG_USERAUTH_INFO_RESPONSE', 00H
$SG87556 DB	'SSH2_MSG_GLOBAL_REQUEST', 00H
$SG87558 DB	'SSH2_MSG_REQUEST_SUCCESS', 00H
	ORG $+3
$SG87560 DB	'SSH2_MSG_REQUEST_FAILURE', 00H
	ORG $+3
$SG87562 DB	'SSH2_MSG_CHANNEL_OPEN', 00H
	ORG $+2
$SG87564 DB	'SSH2_MSG_CHANNEL_OPEN_CONFIRMATION', 00H
	ORG $+1
$SG87566 DB	'SSH2_MSG_CHANNEL_OPEN_FAILURE', 00H
	ORG $+2
$SG87568 DB	'SSH2_MSG_CHANNEL_WINDOW_ADJUST', 00H
	ORG $+1
$SG87570 DB	'SSH2_MSG_CHANNEL_DATA', 00H
	ORG $+2
$SG87572 DB	'SSH2_MSG_CHANNEL_EXTENDED_DATA', 00H
	ORG $+1
$SG87574 DB	'SSH2_MSG_CHANNEL_EOF', 00H
	ORG $+3
$SG87576 DB	'SSH2_MSG_CHANNEL_CLOSE', 00H
	ORG $+1
$SG87578 DB	'SSH2_MSG_CHANNEL_REQUEST', 00H
	ORG $+3
$SG87580 DB	'SSH2_MSG_CHANNEL_SUCCESS', 00H
	ORG $+3
$SG87582 DB	'SSH2_MSG_CHANNEL_FAILURE', 00H
	ORG $+3
$SG87583 DB	'unknown', 00H
_hostkey_algs DD FLAT:_ssh_rsa
	DD	FLAT:_ssh_dss
_macs	DD	FLAT:_ssh_hmac_sha256
	DD	FLAT:_ssh_hmac_sha1
	DD	FLAT:_ssh_hmac_sha1_96
	DD	FLAT:_ssh_hmac_md5
_buggymacs DD	FLAT:_ssh_hmac_sha1_buggy
	DD	FLAT:_ssh_hmac_sha1_96_buggy
	DD	FLAT:_ssh_hmac_md5
$SG87710 DB	'none', 00H
	ORG $+3
_compressions DD FLAT:_ssh_zlib
	DD	FLAT:_ssh_comp_none
$SG88133 DB	'%s', 00H
	ORG $+1
$SG88263 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG88264 DB	'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'n', 00H, 'd', 00H, '2'
	DB	00H, '3', 00H, '4', 00H, '(', 00H, 's', 00H, 's', 00H, 'h', 00H
	DB	'-', 00H, '>', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'n', 00H, 'n'
	DB	00H, 'e', 00H, 'l', 00H, 's', 00H, ',', 00H, ' ', 00H, '&', 00H
	DB	'i', 00H, ',', 00H, ' ', 00H, 's', 00H, 's', 00H, 'h', 00H, '_'
	DB	00H, 'c', 00H, 'h', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'e', 00H
	DB	'l', 00H, 'f', 00H, 'i', 00H, 'n', 00H, 'd', 00H, ')', 00H, 00H
	DB	00H
$SG88380 DB	'Extremely large packet length from server suggests data '
	DB	'stream corruption', 00H
	ORG $+2
$SG88401 DB	'Network attack (CRC compensation) detected!', 00H
$SG88416 DB	'Incorrect CRC received on packet', 00H
	ORG $+3
$SG88425 DB	'Zlib decompression encountered invalid data', 00H
$SG88466 DB	'password', 00H
	ORG $+3
$SG88478 DB	'x11-req', 00H
$SG88541 DB	'No valid incoming packet found', 00H
	ORG $+1
$SG88574 DB	'Incoming packet was garbled on decryption', 00H
	ORG $+2
$SG88595 DB	'Incorrect MAC received on packet', 00H
	ORG $+3
$SG88602 DB	'Invalid padding length on received packet', 00H
	ORG $+2
$SG88608 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG88609 DB	's', 00H, 't', 00H, '-', 00H, '>', 00H, 'p', 00H, 'k', 00H
	DB	't', 00H, 'i', 00H, 'n', 00H, '-', 00H, '>', 00H, 'l', 00H, 'e'
	DB	00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, ' ', 00H, '>', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG88618 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG88619 DB	's', 00H, 't', 00H, '-', 00H, '>', 00H, 'p', 00H, 'k', 00H
	DB	't', 00H, 'i', 00H, 'n', 00H, '-', 00H, '>', 00H, 'l', 00H, 'e'
	DB	00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, ' ', 00H, '>', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG88657 DB	'Invalid packet length received', 00H
	ORG $+1
$SG89020 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG89021 DB	'p', 00H, 'a', 00H, 'd', 00H, 'd', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '2', 00H, '5'
	DB	00H, '5', 00H, 00H, 00H
	ORG $+2
$SG89049 DB	'too much data sent', 00H
	ORG $+1
$SG89072 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG89073 DB	's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'q', 00H
	DB	'u', 00H, 'e', 00H, 'u', 00H, 'e', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 00H, 00H
$SG89101 DB	'too much data sent', 00H
	ORG $+1
$SG89125 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG89126 DB	'!', 00H, 's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H
	DB	'q', 00H, 'u', 00H, 'e', 00H, 'u', 00H, 'e', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG89198 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG89199 DB	'p', 00H, 'k', 00H, 't', 00H, '-', 00H, '>', 00H, 's', 00H
	DB	'a', 00H, 'v', 00H, 'e', 00H, 'd', 00H, 'p', 00H, 'o', 00H, 's'
	DB	00H, ' ', 00H, '<', 00H, ' ', 00H, 'p', 00H, 'k', 00H, 't', 00H
	DB	'-', 00H, '>', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't'
	DB	00H, 'h', 00H, 00H, 00H
$SG89247 DB	'ssh-rsa', 00H
$SG89307 DB	'-', 00H
	ORG $+2
$SG89309 DB	'-', 00H
	ORG $+2
$SG89314 DB	'1.2.18', 00H
	ORG $+1
$SG89315 DB	'1.2.19', 00H
	ORG $+1
$SG89316 DB	'1.2.20', 00H
	ORG $+1
$SG89317 DB	'1.2.21', 00H
	ORG $+1
$SG89318 DB	'1.2.22', 00H
	ORG $+1
$SG89319 DB	'Cisco-1.25', 00H
	ORG $+1
$SG89320 DB	'OSU_1.4alpha3', 00H
	ORG $+2
$SG89321 DB	'OSU_1.5alpha4', 00H
	ORG $+2
$SG89322 DB	'We believe remote version has SSH-1 ignore bug', 00H
	ORG $+1
$SG89326 DB	'Cisco-1.25', 00H
	ORG $+1
$SG89327 DB	'OSU_1.4alpha3', 00H
	ORG $+2
$SG89328 DB	'We believe remote version needs a plain SSH-1 password', 00H
	ORG $+1
$SG89331 DB	'Cisco-1.25', 00H
	ORG $+1
$SG89332 DB	'We believe remote version can''t handle SSH-1 RSA authen'
	DB	'tication', 00H
$SG89335 DB	'* VShell', 00H
	ORG $+3
$SG89337 DB	'2.1.0*', 00H
	ORG $+1
$SG89338 DB	'2.0.*', 00H
	ORG $+2
$SG89339 DB	'2.2.0*', 00H
	ORG $+1
$SG89340 DB	'2.3.0*', 00H
	ORG $+1
$SG89341 DB	'2.1 *', 00H
	ORG $+2
$SG89342 DB	'We believe remote version has SSH-2 HMAC bug', 00H
	ORG $+3
$SG89345 DB	'* VShell', 00H
	ORG $+3
$SG89347 DB	'2.0.0*', 00H
	ORG $+1
$SG89348 DB	'2.0.10*', 00H
$SG89349 DB	'We believe remote version has SSH-2 key-derivation bug', 00H
	ORG $+1
$SG89353 DB	'OpenSSH_2.[5-9]*', 00H
	ORG $+3
$SG89354 DB	'OpenSSH_3.[0-2]*', 00H
	ORG $+3
$SG89355 DB	'mod_sftp/0.[0-8]*', 00H
	ORG $+2
$SG89356 DB	'mod_sftp/0.9.[0-8]', 00H
	ORG $+1
$SG89357 DB	'We believe remote version has SSH-2 RSA padding bug', 00H
$SG89360 DB	'OpenSSH_2.[0-2]*', 00H
	ORG $+3
$SG89361 DB	'We believe remote version has SSH-2 public-key-session-I'
	DB	'D bug', 00H
	ORG $+2
$SG89365 DB	'DigiSSH_2.0', 00H
$SG89366 DB	'OpenSSH_2.[0-4]*', 00H
	ORG $+3
$SG89367 DB	'OpenSSH_2.5.[0-3]*', 00H
	ORG $+1
$SG89368 DB	'Sun_SSH_1.0', 00H
$SG89369 DB	'Sun_SSH_1.0.1', 00H
	ORG $+2
$SG89370 DB	'WeOnlyDo-*', 00H
	ORG $+1
$SG89371 DB	'We believe remote version has SSH-2 rekey bug', 00H
	ORG $+2
$SG89375 DB	'1.36_sshlib GlobalSCAPE', 00H
$SG89376 DB	'1.36 sshlib: GlobalScape', 00H
	ORG $+3
$SG89377 DB	'We believe remote version ignores SSH-2 maximum packet s'
	DB	'ize', 00H
$SG89379 DB	'We believe remote version has SSH-2 ignore bug', 00H
	ORG $+1
$SG89381 DB	'We believe remote version has winadj bug', 00H
	ORG $+3
$SG89385 DB	'OpenSSH_[2-5].*', 00H
$SG89386 DB	'OpenSSH_6.[0-6]*', 00H
	ORG $+3
$SG89387 DB	'We believe remote version has SSH-2 channel request bug', 00H
$SG89396 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG89397 DB	'*', 00H, 's', 00H, 't', 00H, 'r', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, '''', 00H, '-', 00H, '''', 00H, 00H, 00H
$SG89413 DB	'%s2.0-%s', 0dH, 0aH, 00H
	ORG $+1
$SG89416 DB	'SSH-', 00H
	ORG $+3
$SG89417 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG89418 DB	'!', 00H, 's', 00H, 't', 00H, 'r', 00H, 'c', 00H, 'm', 00H
	DB	'p', 00H, '(', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 't', 00H, 'o'
	DB	00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ',', 00H, ' ', 00H
	DB	'"', 00H, 'S', 00H, 'S', 00H, 'H', 00H, '-', 00H, '"', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+2
$SG89419 DB	'1.5', 00H
$SG89420 DB	'1.5', 00H
$SG89421 DB	'SSH-%s-%s', 0aH, 00H
	ORG $+1
$SG89424 DB	0dH, 0aH, 00H
	ORG $+1
$SG89427 DB	0dH, 0aH, 00H
	ORG $+1
$SG89428 DB	'We claim version: %.*s', 00H
	ORG $+1
$SG89499 DB	0dH, 0aH, 00H
	ORG $+1
$SG89500 DB	'Server version: %s', 00H
	ORG $+1
$SG89501 DB	'2.0', 00H
$SG89502 DB	'1.99', 00H
	ORG $+3
$SG89504 DB	'SSH protocol version 1 required by configuration but not'
	DB	' provided by server', 00H
$SG89520 DB	0dH, 0aH, 00H
	ORG $+1
$SG89509 DB	'SSH protocol version 2 required by configuration but not'
	DB	' provided by server', 00H
$SG89516 DB	'Using SSH protocol version %d', 00H
	ORG $+2
$SG89595 DB	0dH, 0aH, 00H
	ORG $+1
$SG89596 DB	'Server version: %s', 00H
	ORG $+1
$SG89598 DB	'2.0', 00H
$SG89599 DB	'Server announces compatibility with SSH-1 in bare ssh-co'
	DB	'nnection protocol', 00H
	ORG $+2
$SG89604 DB	'Bare ssh-connection protocol cannot be run in SSH-1-only'
	DB	' mode', 00H
	ORG $+2
$SG89608 DB	'Using bare ssh-connection protocol', 00H
	ORG $+1
$SG89753 DB	'Connecting to %s port %d', 00H
	ORG $+3
$SG89755 DB	'Connecting to %s', 00H
	ORG $+3
$SG89757 DB	'Failed to connect to %s: %s', 00H
$SG89771 DB	'Could not set up connection sharing: %s', 00H
$SG89774 DB	'Could not set up connection sharing as downstream: %s', 00H
	ORG $+2
$SG89776 DB	'Could not set up connection sharing as upstream: %s', 00H
$SG89779 DB	'Using existing shared connection at %s', 00H
	ORG $+1
$SG89782 DB	'Reusing a shared connection to this server.', 0dH, 0aH, 00H
	ORG $+2
$SG89785 DB	'Sharing this connection at %s', 00H
	ORG $+2
$SG89801 DB	'Server unexpectedly closed network connection', 00H
	ORG $+2
$SG89803 DB	'Server closed network connection', 00H
	ORG $+3
$SG89809 DB	'%s', 00H
	ORG $+1
$SG89867 DB	' (IPv4)', 00H
$SG89868 DB	' (IPv6)', 00H
$SG89870 DB	'Looking up host "%s"%s', 00H
	ORG $+1
$SG89880 DB	'SSH-', 00H
	ORG $+3
$SG89891 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG89892 DB	's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 'n', 00H, '_', 00H, 't', 00H, 'h', 00H, 'r'
	DB	00H, 'o', 00H, 't', 00H, 't', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	'c', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, ' ', 00H, '>'
	DB	00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG89962 DB	00H, 00H, 00H, 01H, 05H, 00H
	ORG $+2
$SG89982 DB	'Disconnected: %s', 00H
	ORG $+3
$SG89984 DB	'Disconnected', 00H
	ORG $+3
$SG89990 DB	'en', 00H
	ORG $+1
$SG90006 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG90010 DB	'f', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 'r', 00H
	DB	'p', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 't', 00H, '[', 00H, '2'
	DB	00H, ']', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '''', 00H
	DB	':', 00H, '''', 00H, 00H, 00H
$SG90007 DB	's', 00H, 't', 00H, 'r', 00H, 'l', 00H, 'e', 00H, 'n', 00H
	DB	'(', 00H, 'f', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 'r'
	DB	00H, 'p', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 't', 00H, ')', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '1', 00H, '6', 00H, '*'
	DB	00H, '3', 00H, ' ', 00H, '-', 00H, ' ', 00H, '1', 00H, 00H, 00H
$SG90009 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG90012 DB	'0123456789abcdef:', 00H
	ORG $+2
$SG90013 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG90098 DB	'Public key packet not received', 00H
	ORG $+1
$SG90110 DB	'Failed to read SSH-1 public keys from public key packet', 00H
$SG90115 DB	'Host key fingerprint is:', 00H
	ORG $+3
$SG90014 DB	'f', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 'r', 00H
	DB	'p', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 't', 00H, '[', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 's', 00H, 'p', 00H, 'n', 00H, '(', 00H
	DB	'f', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 'r', 00H, 'p'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 't', 00H, ',', 00H, ' ', 00H
	DB	'"', 00H, '0', 00H, '1', 00H, '2', 00H, '3', 00H, '4', 00H, '5'
	DB	00H, '6', 00H, '7', 00H, '8', 00H, '9', 00H, 'a', 00H, 'b', 00H
	DB	'c', 00H, 'd', 00H, 'e', 00H, 'f', 00H, ':', 00H, '"', 00H, ')'
	DB	00H, ']', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H
	ORG $+2
$SG90102 DB	'Received public keys', 00H
	ORG $+3
$SG90104 DB	'SSH-1 public key packet stopped before random cookie', 00H
	ORG $+3
$SG90116 DB	'      ', 00H
	ORG $+1
$SG90124 DB	'SSH-1 public keys were badly formatted', 00H
	ORG $+1
$SG90138 DB	'Host key did not appear in manually configured list', 00H
$SG90144 DB	'rsa', 00H
$SG90154 DB	'Unexpected data from server while waiting for user host '
	DB	'key response', 00H
	ORG $+3
$SG90160 DB	'User aborted at host key verification', 00H
	ORG $+2
$SG90174 DB	'SSH-1 public key encryptions failed due to bad formattin'
	DB	'g', 00H
	ORG $+2
$SG90178 DB	'Encrypted session key', 00H
	ORG $+2
$SG90191 DB	'AES not supported in SSH-1, skipping', 00H
	ORG $+3
$SG90198 DB	'3DES', 00H
	ORG $+3
$SG90200 DB	'Blowfish', 00H
	ORG $+3
$SG90202 DB	'single-DES', 00H
	ORG $+1
$SG90208 DB	'No supported ciphers found', 00H
	ORG $+1
$SG90206 DB	'Server violates SSH-1 protocol by not supporting 3DES en'
	DB	'cryption', 00H
	ORG $+3
$SG90213 DB	'cipher', 00H
	ORG $+1
$SG90223 DB	'Unexpected data from server while waiting for user respo'
	DB	'nse', 00H
$SG90229 DB	'User aborted at cipher warning', 00H
	ORG $+1
$SG90238 DB	'Using 3DES encryption', 00H
	ORG $+2
$SG90240 DB	'Using single-DES encryption', 00H
$SG90242 DB	'Using Blowfish encryption', 00H
	ORG $+2
$SG90243 DB	'Trying to enable encryption...', 00H
	ORG $+1
$SG90244 DB	'Initialised %s encryption', 00H
	ORG $+2
$SG90245 DB	'Installing CRC compensation attack detector', 00H
$SG90262 DB	'Encryption not successfully enabled', 00H
$SG90266 DB	'Successfully started encryption', 00H
$SG90270 DB	'SSH login name', 00H
	ORG $+1
$SG90271 DB	'login as: ', 00H
	ORG $+1
$SG90285 DB	'No username provided', 00H
	ORG $+3
$SG90290 DB	'Sent username "%s"', 00H
	ORG $+1
$SG90293 DB	0dH, 0aH, 00H
	ORG $+1
$SG90305 DB	'Reading private key file "%.150s"', 00H
	ORG $+2
$SG90312 DB	'Unable to load private key (%s)', 00H
$SG90313 DB	'Unable to load private key file "%.150s" (%s)', 0dH, 0aH
	DB	00H
$SG90317 DB	'Unable to use this key file (%s)', 00H
	ORG $+3
$SG90318 DB	'Unable to use key file "%.150s" (%s)', 0dH, 0aH, 00H
	ORG $+1
$SG90327 DB	'Pageant is running. Requesting keys.', 00H
	ORG $+3
$SG90341 DB	'Unexpected data from server while waiting for agent resp'
	DB	'onse', 00H
	ORG $+3
$SG90356 DB	'Pageant reported negative key count %d', 00H
	ORG $+1
$SG90357 DB	'Pageant has %d SSH-1 keys', 00H
	ORG $+2
$SG90382 DB	'Pageant key list packet was truncated', 00H
	ORG $+2
$SG90385 DB	'Pageant key #%d matches configured key file', 00H
$SG90387 DB	'Trying Pageant key #%d', 00H
	ORG $+1
$SG90396 DB	'Key refused', 00H
$SG90397 DB	'Received RSA challenge', 00H
	ORG $+1
$SG90400 DB	'Server''s RSA challenge was badly formatted', 00H
	ORG $+1
$SG90433 DB	'Unexpected data from server while waiting for agent resp'
	DB	'onse', 00H
	ORG $+3
$SG90440 DB	'Sending Pageant''s response', 00H
	ORG $+1
$SG90449 DB	'Pageant''s response accepted', 00H
$SG90451 DB	'Authenticated using RSA key "', 00H
	ORG $+2
$SG90452 DB	'" from agent', 0dH, 0aH, 00H
	ORG $+1
$SG90454 DB	'Pageant''s response not accepted', 00H
$SG90456 DB	'Pageant failed to answer challenge', 00H
	ORG $+1
$SG90458 DB	'No reply received from Pageant', 00H
	ORG $+1
$SG90461 DB	'Configured key file not in Pageant', 00H
	ORG $+1
$SG90463 DB	'Failed to get reply from Pageant', 00H
	ORG $+3
$SG90468 DB	'Trying public key authentication.', 0dH, 0aH, 00H
$SG90469 DB	'Trying public key "%s"', 00H
	ORG $+1
$SG90478 DB	'No passphrase required.', 0dH, 0aH, 00H
	ORG $+2
$SG90482 DB	'SSH key passphrase', 00H
	ORG $+1
$SG90483 DB	'Passphrase for key "%.100s": ', 00H
	ORG $+2
$SG90497 DB	'Unable to authenticate', 00H
	ORG $+1
$SG90505 DB	'Couldn''t load private key from ', 00H
$SG90506 DB	' (', 00H
	ORG $+1
$SG90507 DB	').', 0dH, 0aH, 00H
	ORG $+3
$SG90510 DB	'Wrong passphrase.', 0dH, 0aH, 00H
$SG90513 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG90514 DB	'0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H
	DB	'u', 00H, 'n', 00H, 'e', 00H, 'x', 00H, 'p', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H
	DB	't', 00H, 'u', 00H, 'r', 00H, 'n', 00H, ' ', 00H, 'f', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'a', 00H
	DB	'd', 00H, 'r', 00H, 's', 00H, 'a', 00H, 'k', 00H, 'e', 00H, 'y'
	DB	00H, '(', 00H, ')', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG90524 DB	'Server refused our public key.', 0dH, 0aH, 00H
	ORG $+3
$SG90526 DB	'Bizarre response to offer of public key', 00H
$SG90536 DB	'Server''s RSA challenge was badly formatted', 00H
	ORG $+1
$SG90552 DB	'Failed to authenticate with our public key.', 0dH, 0aH, 00H
	ORG $+2
$SG90555 DB	'Bizarre response to RSA authentication response', 00H
$SG90560 DB	'Requested TIS authentication', 00H
	ORG $+3
$SG90569 DB	'TIS authentication declined', 00H
$SG90571 DB	'TIS authentication refused.', 0dH, 0aH, 00H
	ORG $+2
$SG90578 DB	'TIS challenge packet was badly formed', 00H
	ORG $+2
$SG90582 DB	'Received TIS challenge', 00H
	ORG $+1
$SG90583 DB	'SSH TIS authentication', 00H
	ORG $+1
$SG90586 DB	'%.*s', 00H
	ORG $+3
$SG90588 DB	'%.*s', 00H
	ORG $+3
$SG90589 DB	'Response: ', 00H
	ORG $+1
$SG90590 DB	0aH, 00H
	ORG $+2
$SG90592 DB	'Using TIS authentication.%s%s', 00H
	ORG $+2
$SG90594 DB	'Requested CryptoCard authentication', 00H
$SG90603 DB	'CryptoCard authentication declined', 00H
	ORG $+1
$SG90604 DB	'CryptoCard authentication refused.', 0dH, 0aH, 00H
	ORG $+3
$SG90611 DB	'CryptoCard challenge packet was badly formed', 00H
	ORG $+3
$SG90615 DB	'Received CryptoCard challenge', 00H
	ORG $+2
$SG90616 DB	'SSH CryptoCard authentication', 00H
	ORG $+2
$SG90619 DB	'%.*s', 00H
	ORG $+3
$SG90621 DB	'%.*s', 00H
	ORG $+3
$SG90622 DB	'Response: ', 00H
	ORG $+1
$SG90623 DB	0aH, 00H
	ORG $+2
$SG90625 DB	'Using CryptoCard authentication.%s%s', 00H
	ORG $+3
$SG90628 DB	'No supported authentication methods available', 00H
	ORG $+2
$SG90632 DB	'SSH password', 00H
	ORG $+3
$SG90633 DB	'%s@%s''s password: ', 00H
	ORG $+1
$SG90648 DB	'Unable to authenticate', 00H
	ORG $+1
$SG90662 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG90663 DB	'p', 00H, 'w', 00H, 'l', 00H, 'e', 00H, 'n', 00H, ' ', 00H
	DB	'>', 00H, '=', 00H, ' ', 00H, 'b', 00H, 'o', 00H, 't', 00H, 't'
	DB	00H, 'o', 00H, 'm', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H
	DB	'p', 00H, 'w', 00H, 'l', 00H, 'e', 00H, 'n', 00H, ' ', 00H, '<'
	DB	00H, '=', 00H, ' ', 00H, 't', 00H, 'o', 00H, 'p', 00H, 00H, 00H
$SG90677 DB	'Sending password with camouflage packets', 00H
	ORG $+3
$SG90689 DB	'Sending length-padded password', 00H
	ORG $+1
$SG90692 DB	'Sending unpadded password', 00H
	ORG $+2
$SG90694 DB	'Sent password', 00H
	ORG $+2
$SG90704 DB	'Access denied', 0dH, 0aH, 00H
$SG90705 DB	'Authentication refused', 00H
	ORG $+1
$SG90708 DB	'Strange packet received, type %d', 00H
	ORG $+3
$SG90713 DB	'Authentication successful', 00H
	ORG $+2
$SG90720 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG90721 DB	'c', 00H, '-', 00H, '>', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'd', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '_', 00H, 'e', 00H, 'o'
	DB	00H, 'f', 00H, 00H, 00H
	ORG $+2
$SG90749 DB	'Forwarded X11 connection terminated due to local error: '
	DB	'%s', 00H
	ORG $+1
$SG90751 DB	'Forwarded port closed due to local error: %s', 00H
	ORG $+3
$SG90783 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG90784 DB	'q', 00H, 'h', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG90786 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG90834 DB	'Remote port forwarding from %s enabled', 00H
	ORG $+1
$SG90839 DB	'r', 00H, 'p', 00H, 'f', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	' ', 00H, 'p', 00H, 'f', 00H, 00H, 00H
$SG90787 DB	'p', 00H, 'k', 00H, 't', 00H, 'i', 00H, 'n', 00H, '-', 00H
	DB	'>', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, ' ', 00H, '='
	DB	00H, '=', 00H, ' ', 00H, 'q', 00H, 'h', 00H, '-', 00H, '>', 00H
	DB	'm', 00H, 's', 00H, 'g', 00H, '1', 00H, ' ', 00H, '|', 00H, '|'
	DB	00H, ' ', 00H, 'p', 00H, 'k', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'-', 00H, '>', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'q', 00H, 'h', 00H, '-', 00H
	DB	'>', 00H, 'm', 00H, 's', 00H, 'g', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG90790 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG90791 DB	's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'p', 00H
	DB	'a', 00H, 'c', 00H, 'k', 00H, 'e', 00H, 't', 00H, '_', 00H, 'd'
	DB	00H, 'i', 00H, 's', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'c', 00H
	DB	'h', 00H, '[', 00H, 'q', 00H, 'h', 00H, '-', 00H, '>', 00H, 'm'
	DB	00H, 's', 00H, 'g', 00H, '1', 00H, ']', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, 's', 00H, 's', 00H, 'h', 00H, '_', 00H, 'q'
	DB	00H, 'u', 00H, 'e', 00H, 'u', 00H, 'e', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, '_', 00H, 'h', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'l'
	DB	00H, 'e', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG90794 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG90795 DB	's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'p', 00H
	DB	'a', 00H, 'c', 00H, 'k', 00H, 'e', 00H, 't', 00H, '_', 00H, 'd'
	DB	00H, 'i', 00H, 's', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'c', 00H
	DB	'h', 00H, '[', 00H, 'q', 00H, 'h', 00H, '-', 00H, '>', 00H, 'm'
	DB	00H, 's', 00H, 'g', 00H, '2', 00H, ']', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, 's', 00H, 's', 00H, 'h', 00H, '_', 00H, 'q'
	DB	00H, 'u', 00H, 'e', 00H, 'u', 00H, 'e', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, '_', 00H, 'h', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'l'
	DB	00H, 'e', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG90836 DB	'Remote port forwarding from %s refused', 00H
	ORG $+1
$SG90838 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG90857 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG90858 DB	's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'v', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, '2', 00H, 00H, 00H
$SG90918 DB	'%.*s', 00H
	ORG $+3
$SG90923 DB	'Service lookup failed for source port "%s"', 00H
	ORG $+1
$SG90925 DB	'D', 00H
	ORG $+2
$SG90929 DB	':', 00H
	ORG $+2
$SG90931 DB	'%.*s', 00H
	ORG $+3
$SG90935 DB	'Service lookup failed for destination port "%s"', 00H
$SG90956 DB	':', 00H
	ORG $+2
$SG90959 DB	'local', 00H
	ORG $+2
$SG90960 DB	'remote', 00H
	ORG $+1
$SG90961 DB	'dynamic', 00H
$SG90962 DB	'%s port forwarding from %s%s%d', 00H
	ORG $+1
$SG90965 DB	'%s to %s:%d', 00H
$SG90966 DB	'Cancelling %s', 00H
	ORG $+2
$SG90972 DB	'cancel-tcpip-forward', 00H
	ORG $+3
$SG90978 DB	'localhost', 00H
	ORG $+2
$SG90989 DB	')', 00H
	ORG $+2
$SG90991 DB	'(', 00H
	ORG $+2
$SG90994 DB	':', 00H
	ORG $+2
$SG90997 DB	'%s%s%s%s%d%s', 00H
	ORG $+3
$SG91001 DB	')', 00H
	ORG $+2
$SG91003 DB	'(', 00H
	ORG $+2
$SG91006 DB	'%s:%s%s%d%s', 00H
$SG91010 DB	' failed: ', 00H
	ORG $+2
$SG91012 DB	'IPv4 ', 00H
	ORG $+2
$SG91013 DB	'IPv6 ', 00H
	ORG $+2
$SG91015 DB	'Local %sport %s forwarding to %s%s%s', 00H
	ORG $+3
$SG91022 DB	' failed: ', 00H
	ORG $+2
$SG91024 DB	'IPv4 ', 00H
	ORG $+2
$SG91025 DB	'IPv6 ', 00H
	ORG $+2
$SG91027 DB	'Local %sport %s SOCKS dynamic forwarding%s%s', 00H
	ORG $+3
$SG91042 DB	'localhost', 00H
	ORG $+2
$SG91044 DB	'Duplicate remote port forwarding to %s:%d', 00H
	ORG $+2
$SG91046 DB	'Requesting remote port %s forward to %s', 00H
$SG91051 DB	'tcpip-forward', 00H
	ORG $+2
$SG91063 DB	'Incoming terminal data packet was badly formed', 00H
	ORG $+1
$SG91073 DB	'Received X11 connect request', 00H
	ORG $+3
$SG91075 DB	'Rejected X11 connect request', 00H
	ORG $+3
$SG91080 DB	'Opened X11 forward channel', 00H
	ORG $+1
$SG91107 DB	'%.*s', 00H
	ORG $+3
$SG91111 DB	'Rejected remote port open request for %s:%d', 00H
$SG91116 DB	'Received remote port open request for %s:%d', 00H
$SG91119 DB	'Port open failed: %s', 00H
	ORG $+3
$SG91121 DB	'Forwarded port opened successfully', 00H
	ORG $+1
$SG91142 DB	'Forwarded connection refused by server', 00H
	ORG $+1
$SG91172 DB	'half-open', 00H
	ORG $+2
$SG91168 DB	'Received CHANNEL_CLOSE_CONFIRMATION for channel %d for w'
	DB	'hich we never sent CHANNEL_CLOSE', 0aH, 00H
	ORG $+2
$SG91173 DB	'nonexistent', 00H
$SG91175 DB	'_CONFIRMATION', 00H
	ORG $+2
$SG91176 DB	'Received CHANNEL_CLOSE%s for %s channel %d', 0aH, 00H
$SG91229 DB	'Server sent command exit status %d', 00H
	ORG $+1
$SG91274 DB	'Requesting agent forwarding', 00H
$SG91283 DB	'Protocol confusion', 00H
	ORG $+1
$SG91289 DB	'Agent forwarding refused', 00H
	ORG $+3
$SG91291 DB	'Agent forwarding enabled', 00H
	ORG $+3
$SG91294 DB	'X11 forwarding not enabled: unable to initialise X displ'
	DB	'ay', 00H
	ORG $+1
$SG91296 DB	'Requesting X11 forwarding', 00H
	ORG $+2
$SG91307 DB	'Protocol confusion', 00H
	ORG $+1
$SG91313 DB	'X11 forwarding refused', 00H
	ORG $+1
$SG91315 DB	'X11 forwarding enabled', 00H
	ORG $+1
$SG91318 DB	'%d,%d', 00H
	ORG $+2
$SG91328 DB	'Protocol confusion', 00H
	ORG $+1
$SG91334 DB	'Server refused to allocate pty', 0dH, 0aH, 00H
	ORG $+3
$SG91336 DB	'Allocated pty (ospeed %dbps, ispeed %dbps)', 00H
	ORG $+1
$SG91347 DB	'Protocol confusion', 00H
	ORG $+1
$SG91353 DB	'Server refused to compress', 0dH, 0aH, 00H
	ORG $+3
$SG91354 DB	'Started compression', 00H
$SG91355 DB	'Initialised zlib (RFC1950) compression', 00H
	ORG $+1
$SG91356 DB	'Initialised zlib (RFC1950) decompression', 00H
	ORG $+3
$SG91361 DB	'Started session', 00H
$SG91378 DB	'Strange packet received: type %d', 00H
	ORG $+3
$SG91395 DB	'Remote debug message: %.*s', 00H
	ORG $+1
$SG91404 DB	'Server sent disconnect message:', 0aH, '"%.*s"', 00H
	ORG $+1
$SG91548 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG91549 DB	'!', 00H, 's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H
	DB	'b', 00H, 'a', 00H, 'r', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o'
	DB	00H, 'n', 00H, 'n', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, 00H, 00H
$SG91611 DB	',', 00H
	ORG $+2
$SG91617 DB	',', 00H
	ORG $+2
$SG91620 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG91621 DB	's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'k', 00H
	DB	'e', 00H, 'x', 00H, 00H, 00H
	ORG $+2
$SG91634 DB	',', 00H
	ORG $+2
$SG91642 DB	',', 00H
	ORG $+2
$SG91648 DB	',', 00H
	ORG $+2
$SG91654 DB	',', 00H
	ORG $+2
$SG91656 DB	',', 00H
	ORG $+2
$SG91673 DB	'expected key exchange packet from server', 00H
	ORG $+3
$SG91686 DB	'KEXINIT packet was incomplete', 00H
	ORG $+2
$SG91704 DB	'Couldn''t agree a key exchange algorithm (available: %.*'
	DB	's)', 00H
	ORG $+2
$SG91709 DB	'KEXINIT packet was incomplete', 00H
	ORG $+2
$SG91718 DB	'Couldn''t agree a host key algorithm (available: %.*s)', 00H
	ORG $+2
$SG91723 DB	'KEXINIT packet was incomplete', 00H
	ORG $+2
$SG91739 DB	'Couldn''t agree a client-to-server cipher (available: %.'
	DB	'*s)', 00H
	ORG $+1
$SG91744 DB	'KEXINIT packet was incomplete', 00H
	ORG $+2
$SG91760 DB	'Couldn''t agree a server-to-client cipher (available: %.'
	DB	'*s)', 00H
	ORG $+1
$SG91765 DB	'KEXINIT packet was incomplete', 00H
	ORG $+2
$SG91774 DB	'KEXINIT packet was incomplete', 00H
	ORG $+2
$SG91783 DB	'KEXINIT packet was incomplete', 00H
	ORG $+2
$SG91797 DB	'KEXINIT packet was incomplete', 00H
	ORG $+2
$SG91811 DB	'Server supports delayed compression; will try this later'
	DB	00H
	ORG $+3
$SG91813 DB	'key-exchange algorithm', 00H
	ORG $+1
$SG91823 DB	'Unexpected data from server while waiting for user respo'
	DB	'nse', 00H
$SG91829 DB	'User aborted at kex warning', 00H
$SG91834 DB	'client-to-server cipher', 00H
$SG91844 DB	'Unexpected data from server while waiting for user respo'
	DB	'nse', 00H
$SG91850 DB	'User aborted at cipher warning', 00H
	ORG $+1
$SG91855 DB	'server-to-client cipher', 00H
$SG91865 DB	'Unexpected data from server while waiting for user respo'
	DB	'nse', 00H
$SG91871 DB	'User aborted at cipher warning', 00H
	ORG $+1
$SG91888 DB	'Doing Diffie-Hellman group exchange', 00H
$SG91897 DB	'expected key exchange group packet from server', 00H
	ORG $+1
$SG91903 DB	'unable to read mp-ints from incoming group packet', 00H
	ORG $+2
$SG91908 DB	'Using Diffie-Hellman with standard group "%s"', 00H
	ORG $+2
$SG91909 DB	'Doing Diffie-Hellman key exchange with hash %s', 00H
	ORG $+1
$SG91918 DB	'expected key exchange reply packet from server', 00H
	ORG $+1
$SG91923 DB	'unable to parse key exchange reply packet', 00H
	ORG $+2
$SG91929 DB	'key exchange reply failed validation: %s', 00H
	ORG $+3
$SG91936 DB	'Doing RSA key exchange with hash %s', 00H
$SG91945 DB	'expected RSA public key packet from server', 00H
	ORG $+1
$SG91953 DB	'unable to parse RSA public key from server', 00H
	ORG $+1
$SG91988 DB	'expected signature packet from server', 00H
	ORG $+2
$SG91993 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG91994 DB	's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'k', 00H
	DB	'e', 00H, 'x', 00H, '-', 00H, '>', 00H, 'h', 00H, 'a', 00H, 's'
	DB	00H, 'h', 00H, '-', 00H, '>', 00H, 'h', 00H, 'l', 00H, 'e', 00H
	DB	'n', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 's', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, 's', 00H
	DB	'-', 00H, '>', 00H, 'e', 00H, 'x', 00H, 'c', 00H, 'h', 00H, 'a'
	DB	00H, 'n', 00H, 'g', 00H, 'e', 00H, '_', 00H, 'h', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG91999 DB	'Server''s host key did not match the signature supplied', 00H
	ORG $+1
$SG92004 DB	'Host key fingerprint is:', 00H
	ORG $+3
$SG92006 DB	'Host key did not appear in manually configured list', 00H
$SG92027 DB	'Aborted at host key verification', 00H
	ORG $+3
$SG92021 DB	'Unexpected data from server while waiting for user host '
	DB	'key response', 00H
	ORG $+3
$SG92033 DB	'Host key was different in repeat key exchange', 00H
	ORG $+2
$SG92040 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG92041 DB	's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'v', 00H
	DB	'2', 00H, '_', 00H, 's', 00H, 'e', 00H, 's', 00H, 's', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, '_', 00H, 'i', 00H, 'd', 00H, '_', 00H
	DB	'l', 00H, 'e', 00H, 'n', 00H, ' ', 00H, '<', 00H, '=', 00H, ' '
	DB	00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'o', 00H, 'f', 00H
	DB	'(', 00H, 's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'v'
	DB	00H, '2', 00H, '_', 00H, 's', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, '_', 00H, 'i', 00H, 'd', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+2
$SG92047 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG92059 DB	'Initialised %.200s client->server MAC algorithm', 00H
$SG92061 DB	'Initialised %s compression', 00H
	ORG $+1
$SG92048 DB	's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'o', 00H, 'f', 00H
	DB	'(', 00H, 'k', 00H, 'e', 00H, 'y', 00H, 's', 00H, 'p', 00H, 'a'
	DB	00H, 'c', 00H, 'e', 00H, ')', 00H, ' ', 00H, '>', 00H, '=', 00H
	DB	' ', 00H, 's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'k'
	DB	00H, 'e', 00H, 'x', 00H, '-', 00H, '>', 00H, 'h', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'h', 00H, 'l', 00H, 'e'
	DB	00H, 'n', 00H, ' ', 00H, '*', 00H, ' ', 00H, 'S', 00H, 'S', 00H
	DB	'H', 00H, '2', 00H, '_', 00H, 'M', 00H, 'K', 00H, 'K', 00H, 'E'
	DB	00H, 'Y', 00H, '_', 00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H
	DB	'S', 00H, 00H, 00H
$SG92050 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG92051 DB	'(', 00H, 's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H
	DB	'c', 00H, 's', 00H, 'c', 00H, 'i', 00H, 'p', 00H, 'h', 00H, 'e'
	DB	00H, 'r', 00H, '-', 00H, '>', 00H, 'k', 00H, 'e', 00H, 'y', 00H
	DB	'l', 00H, 'e', 00H, 'n', 00H, '+', 00H, '7', 00H, ')', 00H, ' '
	DB	00H, '/', 00H, ' ', 00H, '8', 00H, ' ', 00H, '<', 00H, '=', 00H
	DB	' ', 00H, 's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'k'
	DB	00H, 'e', 00H, 'x', 00H, '-', 00H, '>', 00H, 'h', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'h', 00H, 'l', 00H, 'e'
	DB	00H, 'n', 00H, ' ', 00H, '*', 00H, ' ', 00H, 'S', 00H, 'S', 00H
	DB	'H', 00H, '2', 00H, '_', 00H, 'M', 00H, 'K', 00H, 'K', 00H, 'E'
	DB	00H, 'Y', 00H, '_', 00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H
	DB	'S', 00H, 00H, 00H
	ORG $+2
$SG92053 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG92091 DB	'Initialised %.200s server->client MAC algorithm', 00H
$SG92112 DB	'Server initiated key re-exchange', 00H
	ORG $+3
$SG92054 DB	's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'c', 00H
	DB	's', 00H, 'c', 00H, 'i', 00H, 'p', 00H, 'h', 00H, 'e', 00H, 'r'
	DB	00H, '-', 00H, '>', 00H, 'b', 00H, 'l', 00H, 'k', 00H, 's', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '<', 00H, '=', 00H, ' '
	DB	00H, 's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'k', 00H
	DB	'e', 00H, 'x', 00H, '-', 00H, '>', 00H, 'h', 00H, 'a', 00H, 's'
	DB	00H, 'h', 00H, '-', 00H, '>', 00H, 'h', 00H, 'l', 00H, 'e', 00H
	DB	'n', 00H, ' ', 00H, '*', 00H, ' ', 00H, 'S', 00H, 'S', 00H, 'H'
	DB	00H, '2', 00H, '_', 00H, 'M', 00H, 'K', 00H, 'K', 00H, 'E', 00H
	DB	'Y', 00H, '_', 00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 'S'
	DB	00H, 00H, 00H
$SG92056 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG92121 DB	'Server bug prevents key re-exchange (%s)', 00H
	ORG $+3
$SG92057 DB	's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'c', 00H
	DB	's', 00H, 'm', 00H, 'a', 00H, 'c', 00H, '-', 00H, '>', 00H, 'l'
	DB	00H, 'e', 00H, 'n', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H
	DB	's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'k', 00H, 'e'
	DB	00H, 'x', 00H, '-', 00H, '>', 00H, 'h', 00H, 'a', 00H, 's', 00H
	DB	'h', 00H, '-', 00H, '>', 00H, 'h', 00H, 'l', 00H, 'e', 00H, 'n'
	DB	00H, ' ', 00H, '*', 00H, ' ', 00H, 'S', 00H, 'S', 00H, 'H', 00H
	DB	'2', 00H, '_', 00H, 'M', 00H, 'K', 00H, 'K', 00H, 'E', 00H, 'Y'
	DB	00H, '_', 00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 'S', 00H
	DB	00H, 00H
	ORG $+2
$SG92058 DB	'Initialised %.200s client->server encryption', 00H
	ORG $+3
$SG92070 DB	'expected new-keys packet from server', 00H
	ORG $+3
$SG92079 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG92080 DB	's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'o', 00H, 'f', 00H
	DB	'(', 00H, 'k', 00H, 'e', 00H, 'y', 00H, 's', 00H, 'p', 00H, 'a'
	DB	00H, 'c', 00H, 'e', 00H, ')', 00H, ' ', 00H, '>', 00H, '=', 00H
	DB	' ', 00H, 's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'k'
	DB	00H, 'e', 00H, 'x', 00H, '-', 00H, '>', 00H, 'h', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'h', 00H, 'l', 00H, 'e'
	DB	00H, 'n', 00H, ' ', 00H, '*', 00H, ' ', 00H, 'S', 00H, 'S', 00H
	DB	'H', 00H, '2', 00H, '_', 00H, 'M', 00H, 'K', 00H, 'K', 00H, 'E'
	DB	00H, 'Y', 00H, '_', 00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H
	DB	'S', 00H, 00H, 00H
$SG92082 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG92083 DB	'(', 00H, 's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H
	DB	's', 00H, 'c', 00H, 'c', 00H, 'i', 00H, 'p', 00H, 'h', 00H, 'e'
	DB	00H, 'r', 00H, '-', 00H, '>', 00H, 'k', 00H, 'e', 00H, 'y', 00H
	DB	'l', 00H, 'e', 00H, 'n', 00H, '+', 00H, '7', 00H, ')', 00H, ' '
	DB	00H, '/', 00H, ' ', 00H, '8', 00H, ' ', 00H, '<', 00H, '=', 00H
	DB	' ', 00H, 's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'k'
	DB	00H, 'e', 00H, 'x', 00H, '-', 00H, '>', 00H, 'h', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'h', 00H, 'l', 00H, 'e'
	DB	00H, 'n', 00H, ' ', 00H, '*', 00H, ' ', 00H, 'S', 00H, 'S', 00H
	DB	'H', 00H, '2', 00H, '_', 00H, 'M', 00H, 'K', 00H, 'K', 00H, 'E'
	DB	00H, 'Y', 00H, '_', 00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H
	DB	'S', 00H, 00H, 00H
	ORG $+2
$SG92085 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG92125 DB	'Initiating key re-exchange (%s)', 00H
$SG92236 DB	'winadj@putty.projects.tartarus.org', 00H
	ORG $+1
$SG92086 DB	's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H, 's', 00H
	DB	'c', 00H, 'c', 00H, 'i', 00H, 'p', 00H, 'h', 00H, 'e', 00H, 'r'
	DB	00H, '-', 00H, '>', 00H, 'b', 00H, 'l', 00H, 'k', 00H, 's', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '<', 00H, '=', 00H, ' '
	DB	00H, 's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'k', 00H
	DB	'e', 00H, 'x', 00H, '-', 00H, '>', 00H, 'h', 00H, 'a', 00H, 's'
	DB	00H, 'h', 00H, '-', 00H, '>', 00H, 'h', 00H, 'l', 00H, 'e', 00H
	DB	'n', 00H, ' ', 00H, '*', 00H, ' ', 00H, 'S', 00H, 'S', 00H, 'H'
	DB	00H, '2', 00H, '_', 00H, 'M', 00H, 'K', 00H, 'K', 00H, 'E', 00H
	DB	'Y', 00H, '_', 00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 'S'
	DB	00H, 00H, 00H
$SG92088 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG92250 DB	'half-open', 00H
	ORG $+2
$SG92089 DB	's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H, 's', 00H
	DB	'c', 00H, 'm', 00H, 'a', 00H, 'c', 00H, '-', 00H, '>', 00H, 'l'
	DB	00H, 'e', 00H, 'n', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H
	DB	's', 00H, 's', 00H, 'h', 00H, '-', 00H, '>', 00H, 'k', 00H, 'e'
	DB	00H, 'x', 00H, '-', 00H, '>', 00H, 'h', 00H, 'a', 00H, 's', 00H
	DB	'h', 00H, '-', 00H, '>', 00H, 'h', 00H, 'l', 00H, 'e', 00H, 'n'
	DB	00H, ' ', 00H, '*', 00H, ' ', 00H, 'S', 00H, 'S', 00H, 'H', 00H
	DB	'2', 00H, '_', 00H, 'M', 00H, 'K', 00H, 'K', 00H, 'E', 00H, 'Y'
	DB	00H, '_', 00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 'S', 00H
	DB	00H, 00H
	ORG $+2
$SG92090 DB	'Initialised %.200s server->client encryption', 00H
	ORG $+3
$SG92093 DB	'Initialised %s decompression', 00H
	ORG $+3
$SG92116 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG92117 DB	'!', 00H, 's', 00H, '-', 00H, '>', 00H, 'u', 00H, 's', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 'u', 00H, 't', 00H, 'h', 00H, '_'
	DB	00H, 's', 00H, 'u', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 'e', 00H
	DB	'd', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG92195 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG92196 DB	'!', 00H, '(', 00H, 'c', 00H, '-', 00H, '>', 00H, 'c', 00H
	DB	'l', 00H, 'o', 00H, 's', 00H, 'e', 00H, 's', 00H, ' ', 00H, '&'
	DB	00H, ' ', 00H, '(', 00H, 'C', 00H, 'L', 00H, 'O', 00H, 'S', 00H
	DB	'E', 00H, 'S', 00H, '_', 00H, 'S', 00H, 'E', 00H, 'N', 00H, 'T'
	DB	00H, '_', 00H, 'C', 00H, 'L', 00H, 'O', 00H, 'S', 00H, 'E', 00H
	DB	' ', 00H, '|', 00H, ' ', 00H, 'C', 00H, 'L', 00H, 'O', 00H, 'S'
	DB	00H, 'E', 00H, 'S', 00H, '_', 00H, 'R', 00H, 'C', 00H, 'V', 00H
	DB	'D', 00H, '_', 00H, 'C', 00H, 'L', 00H, 'O', 00H, 'S', 00H, 'E'
	DB	00H, ')', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG92212 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG92213 DB	'!', 00H, '(', 00H, 'c', 00H, '-', 00H, '>', 00H, 'c', 00H
	DB	'l', 00H, 'o', 00H, 's', 00H, 'e', 00H, 's', 00H, ' ', 00H, '&'
	DB	00H, ' ', 00H, '(', 00H, 'C', 00H, 'L', 00H, 'O', 00H, 'S', 00H
	DB	'E', 00H, 'S', 00H, '_', 00H, 'S', 00H, 'E', 00H, 'N', 00H, 'T'
	DB	00H, '_', 00H, 'C', 00H, 'L', 00H, 'O', 00H, 'S', 00H, 'E', 00H
	DB	' ', 00H, '|', 00H, ' ', 00H, 'C', 00H, 'L', 00H, 'O', 00H, 'S'
	DB	00H, 'E', 00H, 'S', 00H, '_', 00H, 'R', 00H, 'C', 00H, 'V', 00H
	DB	'D', 00H, '_', 00H, 'C', 00H, 'L', 00H, 'O', 00H, 'S', 00H, 'E'
	DB	00H, ')', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG92251 DB	'nonexistent', 00H
$SG92252 DB	'Received %s for %s channel %u', 00H
	ORG $+2
$SG92344 DB	'All channels closed', 00H
$SG92350 DB	'Connection sharing downstream #%u connected', 00H
$SG92356 DB	'Connection sharing downstream #%u disconnected', 00H
	ORG $+1
$SG92371 DB	'Connection sharing downstream #%u: %s', 00H
	ORG $+2
$SG92373 DB	'Connection sharing: %s', 00H
	ORG $+1
$SG92387 DB	'Forwarded X11 connection terminated', 00H
$SG92392 DB	'Forwarded port closed', 00H
	ORG $+2
$SG92396 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG92397 DB	'c', 00H, '-', 00H, '>', 00H, 'v', 00H, '.', 00H, 'v', 00H
	DB	'2', 00H, '.', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'n', 00H, 'r'
	DB	00H, 'e', 00H, 'q', 00H, '_', 00H, 'h', 00H, 'e', 00H, 'a', 00H
	DB	'd', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U'
	DB	00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG92409 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG92410 DB	'c', 00H, '-', 00H, '>', 00H, 'v', 00H, '.', 00H, 'v', 00H
	DB	'2', 00H, '.', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'n', 00H, 'r'
	DB	00H, 'e', 00H, 'q', 00H, '_', 00H, 'h', 00H, 'e', 00H, 'a', 00H
	DB	'd', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U'
	DB	00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG92470 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG92471 DB	'c', 00H, '-', 00H, '>', 00H, 'h', 00H, 'a', 00H, 'l', 00H
	DB	'f', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 00H, 00H
$SG92478 DB	'Funny channel type in ssh2_msg_channel_open_confirmation'
	DB	00H
	ORG $+3
$SG92479 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG92491 DB	'Administratively prohibited', 00H
$SG92480 DB	'!', 00H, '"', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'n', 00H
	DB	'y', 00H, ' ', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'n', 00H, 'n'
	DB	00H, 'e', 00H, 'l', 00H, ' ', 00H, 't', 00H, 'y', 00H, 'p', 00H
	DB	'e', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 's', 00H, 's'
	DB	00H, 'h', 00H, '2', 00H, '_', 00H, 'm', 00H, 's', 00H, 'g', 00H
	DB	'_', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'e'
	DB	00H, 'l', 00H, '_', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'_', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f', 00H, 'i', 00H, 'r'
	DB	00H, 'm', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H
	DB	'"', 00H, 00H, 00H
$SG92490 DB	'<unknown reason code>', 00H
	ORG $+2
$SG92492 DB	'Connect failed', 00H
	ORG $+1
$SG92493 DB	'Unknown channel type', 00H
	ORG $+3
$SG92494 DB	'Resource shortage', 00H
	ORG $+2
$SG92502 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG92503 DB	'c', 00H, '-', 00H, '>', 00H, 'h', 00H, 'a', 00H, 'l', 00H
	DB	'f', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 00H, 00H
$SG92506 DB	'Forwarded connection refused by server: %s [%.*s]', 00H
	ORG $+2
$SG92511 DB	'Funny channel type in ssh2_msg_channel_open_failure', 00H
$SG92512 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG92531 DB	'exit-status', 00H
$SG92513 DB	'!', 00H, '"', 00H, 'F', 00H, 'u', 00H, 'n', 00H, 'n', 00H
	DB	'y', 00H, ' ', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'n', 00H, 'n'
	DB	00H, 'e', 00H, 'l', 00H, ' ', 00H, 't', 00H, 'y', 00H, 'p', 00H
	DB	'e', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 's', 00H, 's'
	DB	00H, 'h', 00H, '2', 00H, '_', 00H, 'm', 00H, 's', 00H, 'g', 00H
	DB	'_', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'e'
	DB	00H, 'l', 00H, '_', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'n', 00H
	DB	'_', 00H, 'f', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'u', 00H, 'r'
	DB	00H, 'e', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG92532 DB	'Server sent command exit status %d', 00H
	ORG $+1
$SG92535 DB	'exit-signal', 00H
$SG92611 DB	' %d', 00H
$SG92616 DB	' "%.*s"', 00H
$SG92620 DB	'ABRT', 00H
	ORG $+3
$SG92623 DB	'FPE', 00H
$SG92626 DB	'ILL', 00H
$SG92629 DB	'INT', 00H
$SG92632 DB	'SEGV', 00H
	ORG $+3
$SG92635 DB	'TERM', 00H
	ORG $+3
$SG92638 DB	' ("%.*s")', 00H
	ORG $+2
$SG92639 DB	' (core dumped)', 00H
	ORG $+1
$SG92641 DB	'Server exited on signal%s%s%s', 00H
	ORG $+2
$SG92694 DB	'x11', 00H
$SG92698 DB	'Received X11 connect request from %s:%d', 00H
$SG92700 DB	'X11 forwarding is not enabled', 00H
	ORG $+2
$SG92703 DB	'Opened X11 forward channel', 00H
	ORG $+1
$SG92706 DB	'forwarded-tcpip', 00H
$SG92711 DB	'%.*s', 00H
	ORG $+3
$SG92713 DB	'Received remote port %s:%d open request from %s:%d', 00H
	ORG $+1
$SG92716 DB	'Remote port is not recognised', 00H
	ORG $+2
$SG92720 DB	'Attempting to forward remote port to %s:%d', 00H
	ORG $+1
$SG92723 DB	'Port open failed: %s', 00H
	ORG $+3
$SG92724 DB	'Port open failed', 00H
	ORG $+3
$SG92726 DB	'Forwarded port opened successfully', 00H
	ORG $+1
$SG92729 DB	'auth-agent@openssh.com', 00H
	ORG $+1
$SG92731 DB	'Agent forwarding is not enabled', 00H
$SG92735 DB	'Unsupported channel type requested', 00H
	ORG $+1
$SG92737 DB	'en', 00H
	ORG $+1
$SG92738 DB	'Rejected channel open: %s', 00H
	ORG $+2
$SG92820 DB	'Requesting X11 forwarding', 00H
	ORG $+2
$SG92821 DB	'x11-req', 00H
$SG92828 DB	'X11 forwarding enabled', 00H
	ORG $+1
$SG92830 DB	'X11 forwarding refused', 00H
	ORG $+1
$SG92853 DB	'Requesting OpenSSH-style agent forwarding', 00H
	ORG $+2
$SG92854 DB	'auth-agent-req@openssh.com', 00H
	ORG $+1
$SG92861 DB	'Agent forwarding enabled', 00H
	ORG $+3
$SG92863 DB	'Agent forwarding refused', 00H
	ORG $+3
$SG92886 DB	'%d,%d', 00H
	ORG $+2
$SG92887 DB	'pty-req', 00H
$SG92896 DB	'Allocated pty (ospeed %dbps, ispeed %dbps)', 00H
	ORG $+1
$SG92898 DB	'Server refused to allocate pty', 0dH, 0aH, 00H
	ORG $+3
$SG92931 DB	'env', 00H
$SG92933 DB	'Sent %d environment variables', 00H
	ORG $+2
$SG92946 DB	'All environment variables successfully set', 00H
	ORG $+1
$SG92949 DB	'All environment variables refused', 00H
	ORG $+2
$SG92950 DB	'Server refused to set environment variables', 0dH, 0aH, 00H
	ORG $+2
$SG92952 DB	'%d environment variables refused', 00H
	ORG $+3
$SG92953 DB	'Server refused to set all environment variables', 0dH, 0aH
	DB	00H
	ORG $+2
$SG93057 DB	'ssh-userauth', 00H
	ORG $+3
$SG93067 DB	'ssh-connection', 00H
	ORG $+1
$SG93077 DB	'Server refused service request', 00H
	ORG $+1
$SG93086 DB	'Reading private key file "%.150s"', 00H
	ORG $+2
$SG93093 DB	'Unable to load private key (%s)', 00H
$SG93094 DB	'Unable to load private key file "%.150s" (%s)', 0dH, 0aH
	DB	00H
$SG93097 DB	'Unable to use this key file (%s)', 00H
	ORG $+3
$SG93098 DB	'Unable to use key file "%.150s" (%s)', 0dH, 0aH, 00H
	ORG $+1
$SG93104 DB	'Pageant is running. Requesting keys.', 00H
	ORG $+3
$SG93118 DB	'Unexpected data from server while waiting for agent resp'
	DB	'onse', 00H
	ORG $+3
$SG93135 DB	'Pageant response contained a negative key count %d', 00H
	ORG $+1
$SG93146 DB	'Pageant response was truncated', 00H
	ORG $+1
$SG93157 DB	'Pageant response was truncated', 00H
	ORG $+1
$SG93168 DB	'Pageant response was truncated', 00H
	ORG $+1
$SG93169 DB	'Pageant has %d SSH-2 keys', 00H
	ORG $+2
$SG93183 DB	'Pageant key #%d matches configured key file', 00H
$SG93193 DB	'Configured key file not in Pageant', 00H
	ORG $+1
$SG93195 DB	'Failed to get reply from Pageant', 00H
	ORG $+3
$SG93204 DB	'SSH login name', 00H
	ORG $+1
$SG93205 DB	'login as: ', 00H
	ORG $+1
$SG93219 DB	'No username provided', 00H
	ORG $+3
$SG93227 DB	'Using username "%s".', 0dH, 0aH, 00H
	ORG $+1
$SG93228 DB	'ssh-connection', 00H
	ORG $+1
$SG93229 DB	'none', 00H
	ORG $+3
$SG93253 DB	'Access granted', 00H
	ORG $+1
$SG93255 DB	'Strange packet received during authentication: type %d', 00H
	ORG $+1
$SG93266 DB	'Server refused our key', 0dH, 0aH, 00H
	ORG $+3
$SG93267 DB	'Server refused our key', 00H
	ORG $+1
$SG93270 DB	'Server refused public-key signature despite accepting ke'
	DB	'y!', 0dH, 0aH, 00H
	ORG $+3
$SG93271 DB	'Server refused public-key signature despite accepting ke'
	DB	'y!', 00H
	ORG $+1
$SG93274 DB	'Server refused keyboard-interactive authentication', 00H
	ORG $+1
$SG93279 DB	'Keyboard-interactive authentication failed', 00H
	ORG $+1
$SG93280 DB	'Access denied', 0dH, 0aH, 00H
$SG93283 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG93284 DB	's', 00H, '-', 00H, '>', 00H, 't', 00H, 'y', 00H, 'p', 00H
	DB	'e', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'A', 00H, 'U'
	DB	00H, 'T', 00H, 'H', 00H, '_', 00H, 'T', 00H, 'Y', 00H, 'P', 00H
	DB	'E', 00H, '_', 00H, 'P', 00H, 'A', 00H, 'S', 00H, 'S', 00H, 'W'
	DB	00H, 'O', 00H, 'R', 00H, 'D', 00H, 00H, 00H
$SG93285 DB	'Password authentication failed', 00H
	ORG $+1
$SG93286 DB	'Access denied', 0dH, 0aH, 00H
$SG93289 DB	'Further authentication required', 0dH, 0aH, 00H
	ORG $+2
$SG93290 DB	'Further authentication required', 00H
$SG93291 DB	'publickey', 00H
	ORG $+2
$SG93292 DB	'password', 00H
	ORG $+3
$SG93293 DB	'keyboard-interactive', 00H
	ORG $+3
$SG93295 DB	'gssapi-with-mic', 00H
$SG93297 DB	'Trying Pageant key #%d', 00H
	ORG $+1
$SG93324 DB	'ssh-connection', 00H
	ORG $+1
$SG93325 DB	'publickey', 00H
	ORG $+2
$SG93337 DB	'Authenticating with public key "', 00H
	ORG $+3
$SG93338 DB	'" from agent', 0dH, 0aH, 00H
	ORG $+1
$SG93339 DB	'ssh-connection', 00H
	ORG $+1
$SG93340 DB	'publickey', 00H
	ORG $+2
$SG93374 DB	'Unexpected data from server while waiting for agent resp'
	DB	'onse', 00H
	ORG $+3
$SG93389 DB	'Sending Pageant''s response', 00H
	ORG $+1
$SG93399 DB	'Pageant failed to answer challenge', 00H
	ORG $+1
$SG93410 DB	'ssh-connection', 00H
	ORG $+1
$SG93411 DB	'publickey', 00H
	ORG $+2
$SG93413 DB	'Offered public key', 00H
	ORG $+1
$SG93422 DB	'Offer of public key accepted', 00H
	ORG $+3
$SG93424 DB	'Authenticating with public key "', 00H
	ORG $+3
$SG93425 DB	'"', 0dH, 0aH, 00H
$SG93433 DB	'SSH key passphrase', 00H
	ORG $+1
$SG93434 DB	'Passphrase for key "%.100s": ', 00H
	ORG $+2
$SG93448 DB	'Unable to authenticate', 00H
	ORG $+1
$SG93459 DB	'Wrong passphrase', 0dH, 0aH, 00H
	ORG $+1
$SG93462 DB	'Unable to load private key (', 00H
	ORG $+3
$SG93463 DB	')', 0dH, 0aH, 00H
$SG93473 DB	'ssh-connection', 00H
	ORG $+1
$SG93474 DB	'publickey', 00H
	ORG $+2
$SG93485 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG93486 DB	'p', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 's', 00H
	DB	'i', 00H, 'g', 00H, 'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, '_'
	DB	00H, 'l', 00H, 'e', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG93488 DB	'Sent public key signature', 00H
	ORG $+2
$SG93508 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG93509 DB	's', 00H, '-', 00H, '>', 00H, 'g', 00H, 's', 00H, 's', 00H
	DB	'l', 00H, 'i', 00H, 'b', 00H, 00H, 00H
$SG93511 DB	'ssh-connection', 00H
	ORG $+1
$SG93512 DB	'gssapi-with-mic', 00H
$SG93513 DB	'Attempting GSSAPI authentication', 00H
	ORG $+3
$SG93523 DB	'GSSAPI authentication request refused', 00H
	ORG $+2
$SG93529 DB	'GSSAPI authentication - wrong response from server', 00H
	ORG $+1
$SG93532 DB	'GSSAPI import name failed - Bad service name', 00H
	ORG $+3
$SG93534 DB	'GSSAPI import name failed', 00H
	ORG $+2
$SG93536 DB	'GSSAPI authentication failed to get credentials', 00H
$SG93549 DB	'GSSAPI authentication initialisation failed', 00H
$SG93551 DB	'GSSAPI authentication initialised', 00H
	ORG $+2
$SG93562 DB	'GSSAPI authentication - bad server response', 00H
$SG93564 DB	'GSSAPI authentication loop finished OK', 00H
	ORG $+1
$SG93566 DB	'ssh-connection', 00H
	ORG $+1
$SG93567 DB	'gssapi-with-mic', 00H
$SG93571 DB	'ssh-connection', 00H
	ORG $+1
$SG93572 DB	'keyboard-interactive', 00H
	ORG $+3
$SG93575 DB	'Attempting keyboard-interactive authentication', 00H
	ORG $+1
?noprompt@?II@??do_ssh2_authconn@@9@9 DB '<server failed to send prompt>:'
	DB	' ', 00H					; `do_ssh2_authconn'[::I]::noprompt
	ORG $+3
$SG93603 DB	'%.*s', 00H
	ORG $+3
$SG93605 DB	'SSH server: %.*s', 00H
	ORG $+3
$SG93607 DB	'SSH server authentication', 00H
	ORG $+2
$SG93610 DB	0aH, 00H
	ORG $+2
$SG93612 DB	'Using keyboard-interactive authentication.%s%.*s', 00H
	ORG $+3
$SG93628 DB	'Unable to authenticate', 00H
	ORG $+1
$SG93646 DB	'SSH password', 00H
	ORG $+3
$SG93647 DB	'%s@%s''s password: ', 00H
	ORG $+1
$SG93661 DB	'Unable to authenticate', 00H
	ORG $+1
$SG93665 DB	'ssh-connection', 00H
	ORG $+1
$SG93666 DB	'password', 00H
	ORG $+3
$SG93667 DB	'Sent password', 00H
	ORG $+2
$SG93683 DB	'Server requested password change', 00H
	ORG $+3
$SG93685 DB	'Server rejected new password', 00H
	ORG $+3
$SG93686 DB	0dH, 0aH, 00H
	ORG $+1
$SG93687 DB	'New SSH password', 00H
	ORG $+3
$SG93688 DB	'%.*s', 00H
	ORG $+3
$SG93689 DB	'Current password (blank for previously entered password)'
	DB	': ', 00H
	ORG $+1
$SG93690 DB	'Enter new password: ', 00H
	ORG $+3
$SG93691 DB	'Confirm new password: ', 00H
	ORG $+1
$SG93708 DB	'Unable to authenticate', 00H
	ORG $+1
$SG93714 DB	'Passwords do not match', 0dH, 0aH, 00H
	ORG $+3
$SG93715 DB	'ssh-connection', 00H
	ORG $+1
$SG93716 DB	'password', 00H
	ORG $+3
$SG93717 DB	'Sent new password', 00H
	ORG $+2
$SG93727 DB	'No supported authentication methods available (server se'
	DB	'nt: %.*s)', 00H
	ORG $+2
$SG93728 DB	'No supported authentication methods available', 00H
	ORG $+2
$SG93737 DB	'enabling delayed compression', 00H
	ORG $+3
$SG93744 DB	'main channel', 00H
	ORG $+3
$SG93746 DB	'session', 00H
$SG93747 DB	'Opening session as main channel', 00H
$SG93756 DB	'Server refused to open channel', 00H
	ORG $+1
$SG93761 DB	'Server''s channel confirmation cited wrong channel', 00H
	ORG $+2
$SG93765 DB	'Opened main channel', 00H
$SG93770 DB	'simple@putty.projects.tartarus.org', 00H
	ORG $+1
$SG93774 DB	'X11 forwarding not enabled: unable to initialise X displ'
	DB	'ay', 00H
	ORG $+1
$SG93795 DB	'subsystem', 00H
	ORG $+2
$SG93799 DB	'exec', 00H
	ORG $+3
$SG93802 DB	'shell', 00H
	ORG $+2
$SG93812 DB	'Unexpected response to shell/command request: packet typ'
	DB	'e %d', 00H
	ORG $+3
$SG93817 DB	'Primary command failed; attempting fallback', 00H
$SG93818 DB	'Server refused to start a shell/command', 00H
$SG93823 DB	'Started a shell/command', 00H
$SG93838 DB	'Strange packet received: type %d', 00H
	ORG $+3
$SG93863 DB	'Received disconnect message (%s)', 00H
	ORG $+3
$SG93865 DB	'Received disconnect message (unknown type %d)', 00H
	ORG $+2
$SG93866 DB	'Disconnection message text: %.*s', 00H
	ORG $+3
$SG93867 DB	'unknown', 00H
$SG93868 DB	'Server sent disconnect message', 0aH, 'type %d (%s):', 0aH
	DB	'"%.*s"', 00H
$SG93877 DB	'Remote debug message: %.*s', 00H
	ORG $+1
$SG93891 DB	'Server protocol violation: unexpected %s packet', 00H
$SG93924 DB	'timeout', 00H
$SG93940 DB	'too much data received', 00H
	ORG $+1
$SG94120 DB	'timeout shortened', 00H
	ORG $+2
$SG94125 DB	'data limit lowered', 00H
	ORG $+1
$SG94127 DB	'compression setting changed', 00H
$SG94132 DB	'cipher settings changed', 00H
$SG94134 DB	'cipher settings changed', 00H
$SG94196 DB	'window-change', 00H
	ORG $+2
$SG94203 DB	'IGNORE message', 00H
	ORG $+1
$SG94206 DB	'IGNORE message', 00H
	ORG $+1
$SG94209 DB	'Repeat key exchange', 00H
$SG94213 DB	'Break', 00H
	ORG $+2
$SG94214 DB	'SIGINT (Interrupt)', 00H
	ORG $+1
$SG94215 DB	'SIGTERM (Terminate)', 00H
$SG94216 DB	'SIGKILL (Kill)', 00H
	ORG $+1
$SG94217 DB	'SIGQUIT (Quit)', 00H
	ORG $+1
$SG94218 DB	'SIGHUP (Hangup)', 00H
$SG94219 DB	'More signals', 00H
	ORG $+3
$SG94220 DB	'SIGABRT', 00H
$SG94221 DB	'SIGALRM', 00H
$SG94222 DB	'SIGFPE', 00H
	ORG $+1
$SG94223 DB	'SIGILL', 00H
	ORG $+1
$SG94224 DB	'SIGPIPE', 00H
$SG94225 DB	'SIGSEGV', 00H
$SG94226 DB	'SIGUSR1', 00H
$SG94227 DB	'SIGUSR2', 00H
$SG94243 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG94244 DB	'(', 00H, 'i', 00H, ' ', 00H, '+', 00H, ' ', 00H, 'l', 00H
	DB	'e', 00H, 'n', 00H, 'o', 00H, 'f', 00H, '(', 00H, 's', 00H, 's'
	DB	00H, 'h', 00H, '1', 00H, '_', 00H, 'i', 00H, 'g', 00H, 'n', 00H
	DB	'o', 00H, 'r', 00H, 'e', 00H, '_', 00H, 's', 00H, 'p', 00H, 'e'
	DB	00H, 'c', 00H, 'i', 00H, 'a', 00H, 'l', 00H, ')', 00H, ')', 00H
	DB	' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'l', 00H, 'e', 00H, 'n'
	DB	00H, 'o', 00H, 'f', 00H, '(', 00H, 's', 00H, 's', 00H, 'h', 00H
	DB	'_', 00H, 's', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a'
	DB	00H, 'l', 00H, 's', 00H, ')', 00H, 00H, 00H
$SG94252 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG94253 DB	'(', 00H, 'i', 00H, ' ', 00H, '+', 00H, ' ', 00H, 'l', 00H
	DB	'e', 00H, 'n', 00H, 'o', 00H, 'f', 00H, '(', 00H, 's', 00H, 's'
	DB	00H, 'h', 00H, '2', 00H, '_', 00H, 'i', 00H, 'g', 00H, 'n', 00H
	DB	'o', 00H, 'r', 00H, 'e', 00H, '_', 00H, 's', 00H, 'p', 00H, 'e'
	DB	00H, 'c', 00H, 'i', 00H, 'a', 00H, 'l', 00H, ')', 00H, ')', 00H
	DB	' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'l', 00H, 'e', 00H, 'n'
	DB	00H, 'o', 00H, 'f', 00H, '(', 00H, 's', 00H, 's', 00H, 'h', 00H
	DB	'_', 00H, 's', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a'
	DB	00H, 'l', 00H, 's', 00H, ')', 00H, 00H, 00H
$SG94259 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG94260 DB	'(', 00H, 'i', 00H, ' ', 00H, '+', 00H, ' ', 00H, 'l', 00H
	DB	'e', 00H, 'n', 00H, 'o', 00H, 'f', 00H, '(', 00H, 's', 00H, 's'
	DB	00H, 'h', 00H, '2', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'k', 00H
	DB	'e', 00H, 'y', 00H, '_', 00H, 's', 00H, 'p', 00H, 'e', 00H, 'c'
	DB	00H, 'i', 00H, 'a', 00H, 'l', 00H, ')', 00H, ')', 00H, ' ', 00H
	DB	'<', 00H, '=', 00H, ' ', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'o'
	DB	00H, 'f', 00H, '(', 00H, 's', 00H, 's', 00H, 'h', 00H, '_', 00H
	DB	's', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H, 'l'
	DB	00H, 's', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG94266 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG94267 DB	'(', 00H, 'i', 00H, ' ', 00H, '+', 00H, ' ', 00H, 'l', 00H
	DB	'e', 00H, 'n', 00H, 'o', 00H, 'f', 00H, '(', 00H, 's', 00H, 's'
	DB	00H, 'h', 00H, '2', 00H, '_', 00H, 's', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '_', 00H, 's', 00H, 'p'
	DB	00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 's', 00H
	DB	')', 00H, ')', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'l'
	DB	00H, 'e', 00H, 'n', 00H, 'o', 00H, 'f', 00H, '(', 00H, 's', 00H
	DB	's', 00H, 'h', 00H, '_', 00H, 's', 00H, 'p', 00H, 'e', 00H, 'c'
	DB	00H, 'i', 00H, 'a', 00H, 'l', 00H, 's', 00H, ')', 00H, 00H, 00H
$SG94273 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 's', 00H, 'h', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG94291 DB	'Sent EOF message', 00H
	ORG $+3
$SG94274 DB	'(', 00H, 'i', 00H, ' ', 00H, '+', 00H, ' ', 00H, 'l', 00H
	DB	'e', 00H, 'n', 00H, 'o', 00H, 'f', 00H, '(', 00H, 's', 00H, 'p'
	DB	00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 's', 00H
	DB	'_', 00H, 'e', 00H, 'n', 00H, 'd', 00H, ')', 00H, ')', 00H, ' '
	DB	00H, '<', 00H, '=', 00H, ' ', 00H, 'l', 00H, 'e', 00H, 'n', 00H
	DB	'o', 00H, 'f', 00H, '(', 00H, 's', 00H, 's', 00H, 'h', 00H, '_'
	DB	00H, 's', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, 's', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG94306 DB	'at user request', 00H
$SG94312 DB	'Unable to send BREAK signal in SSH-1', 00H
	ORG $+3
$SG94317 DB	'break', 00H
	ORG $+2
$SG94322 DB	'ABRT', 00H
	ORG $+3
$SG94324 DB	'ALRM', 00H
	ORG $+3
$SG94326 DB	'FPE', 00H
$SG94328 DB	'HUP', 00H
$SG94330 DB	'ILL', 00H
$SG94332 DB	'INT', 00H
$SG94334 DB	'KILL', 00H
	ORG $+3
$SG94336 DB	'PIPE', 00H
	ORG $+3
$SG94338 DB	'QUIT', 00H
	ORG $+3
$SG94340 DB	'SEGV', 00H
	ORG $+3
$SG94342 DB	'TERM', 00H
	ORG $+3
$SG94344 DB	'USR1', 00H
	ORG $+3
$SG94346 DB	'USR2', 00H
	ORG $+3
$SG94351 DB	'signal', 00H
	ORG $+1
$SG94352 DB	'Sent signal SIG%s', 00H
	ORG $+2
$SG94422 DB	'Opening connection to %s:%d for %s', 00H
	ORG $+1
$SG94425 DB	'direct-tcpip', 00H
	ORG $+3
$SG94427 DB	'0.0.0.0', 00H
$SG94491 DB	'ssh', 00H
_ssh_backend DD	FLAT:_ssh_init
	DD	FLAT:_ssh_free
	DD	FLAT:_ssh_reconfig
	DD	FLAT:_ssh_send
	DD	FLAT:_ssh_sendbuffer
	DD	FLAT:_ssh_size
	DD	FLAT:_ssh_special
	DD	FLAT:_ssh_get_specials
	DD	FLAT:_ssh_connected
	DD	FLAT:_ssh_return_exitcode
	DD	FLAT:_ssh_sendok
	DD	FLAT:_ssh_ldisc
	DD	FLAT:_ssh_provide_ldisc
	DD	FLAT:_ssh_provide_logctx
	DD	FLAT:_ssh_unthrottle
	DD	FLAT:_ssh_cfg_info
	DD	FLAT:$SG94491
	DD	03H
	DD	016H
_DATA	ENDS
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\putty\ssh.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_ssh_comp_none_init PROC
; Line 410
	push	ebp
	mov	ebp, esp
; Line 411
	xor	eax, eax
; Line 412
	pop	ebp
	ret	0
_ssh_comp_none_init ENDP
; Function compile flags: /Odtp /RTCsu
_handle$ = 8						; size = 4
_ssh_comp_none_cleanup PROC
; Line 414
	push	ebp
	mov	ebp, esp
; Line 415
	pop	ebp
	ret	0
_ssh_comp_none_cleanup ENDP
; Function compile flags: /Odtp /RTCsu
_handle$ = 8						; size = 4
_block$ = 12						; size = 4
_len$ = 16						; size = 4
_outblock$ = 20						; size = 4
_outlen$ = 24						; size = 4
_ssh_comp_none_block PROC
; Line 418
	push	ebp
	mov	ebp, esp
; Line 419
	xor	eax, eax
; Line 420
	pop	ebp
	ret	0
_ssh_comp_none_block ENDP
; Function compile flags: /Odtp /RTCsu
_handle$ = 8						; size = 4
_ssh_comp_none_disable PROC
; Line 422
	push	ebp
	mov	ebp, esp
; Line 423
	xor	eax, eax
; Line 424
	pop	ebp
	ret	0
_ssh_comp_none_disable ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_safefree:PROC
EXTRN	_logevent:PROC
EXTRN	_dupprintf:PROC
EXTRN	_sk_addr_needs_port:PROC
EXTRN	_sk_getaddr:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_msg$ = -276						; size = 4
_addrbuf$ = -268					; size = 256
_ssh$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_plug$ = 8						; size = 4
_type$ = 12						; size = 4
_addr$ = 16						; size = 4
_port$ = 20						; size = 4
_error_msg$ = 24					; size = 4
_error_code$ = 28					; size = 4
_ssh_socket_log PROC
; Line 3303
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 3304
	mov	eax, DWORD PTR _plug$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 3307
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+200], 0
	je	SHORT $LN6@ssh_socket
; Line 3317
	jmp	$LN7@ssh_socket
$LN6@ssh_socket:
; Line 3318
	push	256					; 00000100H
	lea	edx, DWORD PTR _addrbuf$[ebp]
	push	edx
	mov	eax, DWORD PTR _addr$[ebp]
	push	eax
	call	_sk_getaddr
	add	esp, 12					; 0000000cH
; Line 3320
	cmp	DWORD PTR _type$[ebp], 0
	jne	SHORT $LN4@ssh_socket
; Line 3321
	mov	ecx, DWORD PTR _addr$[ebp]
	push	ecx
	call	_sk_addr_needs_port
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@ssh_socket
; Line 3322
	mov	edx, DWORD PTR _port$[ebp]
	push	edx
	lea	eax, DWORD PTR _addrbuf$[ebp]
	push	eax
	push	OFFSET $SG89753
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _msg$[ebp], eax
; Line 3323
	jmp	SHORT $LN2@ssh_socket
$LN3@ssh_socket:
; Line 3324
	lea	ecx, DWORD PTR _addrbuf$[ebp]
	push	ecx
	push	OFFSET $SG89755
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _msg$[ebp], eax
$LN2@ssh_socket:
; Line 3326
	jmp	SHORT $LN1@ssh_socket
$LN4@ssh_socket:
; Line 3327
	mov	edx, DWORD PTR _error_msg$[ebp]
	push	edx
	lea	eax, DWORD PTR _addrbuf$[ebp]
	push	eax
	push	OFFSET $SG89757
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _msg$[ebp], eax
$LN1@ssh_socket:
; Line 3330
	mov	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 3331
	mov	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN7@ssh_socket:
; Line 3333
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@ssh_socket
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN11@ssh_socket:
	DD	1
	DD	$LN10@ssh_socket
$LN10@ssh_socket:
	DD	-268					; fffffef4H
	DD	256					; 00000100H
	DD	$LN9@ssh_socket
$LN9@ssh_socket:
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	114					; 00000072H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_ssh_socket_log ENDP
_TEXT	ENDS
PUBLIC	_ssh_connshare_log
EXTRN	_flags:DWORD
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ssh$ = 8						; size = 4
_event$ = 12						; size = 4
_logtext$ = 16						; size = 4
_ds_err$ = 20						; size = 4
_us_err$ = 24						; size = 4
_ssh_connshare_log PROC
; Line 3337
	push	ebp
	mov	ebp, esp
; Line 3338
	cmp	DWORD PTR _event$[ebp], 0
	jne	SHORT $LN11@ssh_connsh
; Line 3343
	cmp	DWORD PTR _logtext$[ebp], 0
	je	SHORT $LN10@ssh_connsh
; Line 3344
	mov	eax, DWORD PTR _logtext$[ebp]
	push	eax
	push	OFFSET $SG89771
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 3345
	jmp	SHORT $LN9@ssh_connsh
$LN10@ssh_connsh:
; Line 3346
	cmp	DWORD PTR _ds_err$[ebp], 0
	je	SHORT $LN8@ssh_connsh
; Line 3348
	mov	edx, DWORD PTR _ds_err$[ebp]
	push	edx
	push	OFFSET $SG89774
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 12					; 0000000cH
$LN8@ssh_connsh:
; Line 3349
	cmp	DWORD PTR _us_err$[ebp], 0
	je	SHORT $LN9@ssh_connsh
; Line 3351
	mov	ecx, DWORD PTR _us_err$[ebp]
	push	ecx
	push	OFFSET $SG89776
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 12					; 0000000cH
$LN9@ssh_connsh:
; Line 3352
	jmp	SHORT $LN12@ssh_connsh
$LN11@ssh_connsh:
; Line 3353
	cmp	DWORD PTR _event$[ebp], 1
	jne	SHORT $LN5@ssh_connsh
; Line 3355
	mov	eax, DWORD PTR _logtext$[ebp]
	push	eax
	push	OFFSET $SG89779
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 3359
	mov	edx, DWORD PTR _flags
	and	edx, 1
	jne	SHORT $LN3@ssh_connsh
	mov	eax, DWORD PTR _flags
	and	eax, 4
	je	SHORT $LN4@ssh_connsh
$LN3@ssh_connsh:
; Line 3360
	push	OFFSET $SG89782
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_c_write_str
	add	esp, 8
$LN4@ssh_connsh:
; Line 3361
	jmp	SHORT $LN12@ssh_connsh
$LN5@ssh_connsh:
; Line 3362
	cmp	DWORD PTR _event$[ebp], 2
	jne	SHORT $LN12@ssh_connsh
; Line 3364
	mov	edx, DWORD PTR _logtext$[ebp]
	push	edx
	push	OFFSET $SG89785
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 12					; 0000000cH
$LN12@ssh_connsh:
; Line 3366
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh_connshare_log ENDP
_TEXT	ENDS
EXTRN	_dupvprintf:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_buf$ = -8						; size = 4
_ap$ = -4						; size = 4
_ssh$ = 8						; size = 4
_fmt$ = 12						; size = 4
_logeventf PROC
; Line 945
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 949
	lea	eax, DWORD PTR _fmt$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 950
	mov	ecx, DWORD PTR _ap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fmt$[ebp]
	push	edx
	call	_dupvprintf
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax
; Line 951
	mov	DWORD PTR _ap$[ebp], 0
; Line 952
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 953
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 954
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_logeventf ENDP
_TEXT	ENDS
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ssh$ = 8						; size = 4
_buf$ = 12						; size = 4
_c_write_str PROC
; Line 1149
	push	ebp
	mov	ebp, esp
; Line 1150
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_c_write
	add	esp, 12					; 0000000cH
; Line 1151
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_c_write_str ENDP
_TEXT	ENDS
EXTRN	_from_backend:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ssh$ = 8						; size = 4
_buf$ = 12						; size = 4
_len$ = 16						; size = 4
_c_write PROC
; Line 1133
	push	ebp
	mov	ebp, esp
; Line 1134
	mov	eax, DWORD PTR _flags
	and	eax, 2
	je	SHORT $LN2@c_write
; Line 1135
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	push	1
	call	_c_write_stderr
	add	esp, 12					; 0000000cH
; Line 1136
	jmp	SHORT $LN3@c_write
$LN2@c_write:
; Line 1137
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_from_backend
	add	esp, 16					; 00000010H
$LN3@c_write:
; Line 1138
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_c_write ENDP
_TEXT	ENDS
EXTRN	_fputc:PROC
EXTRN	___iob_func:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$ = -4						; size = 4
_trusted$ = 8						; size = 4
_buf$ = 12						; size = 4
_len$ = 16						; size = 4
_c_write_stderr PROC
; Line 1125
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1127
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@c_write_st
$LN4@c_write_st:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@c_write_st:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _len$[ebp]
	jge	SHORT $LN6@c_write_st
; Line 1128
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 13					; 0000000dH
	je	SHORT $LN2@c_write_st
	cmp	DWORD PTR _trusted$[ebp], 0
	jne	SHORT $LN1@c_write_st
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN1@c_write_st
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movsx	ecx, BYTE PTR [eax]
	and	ecx, 96					; 00000060H
	je	SHORT $LN2@c_write_st
$LN1@c_write_st:
; Line 1129
	call	___iob_func
	add	eax, 64					; 00000040H
	push	eax
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	movsx	eax, BYTE PTR [edx]
	push	eax
	call	_fputc
	add	esp, 8
$LN2@c_write_st:
; Line 1130
	jmp	SHORT $LN4@c_write_st
$LN6@c_write_st:
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_c_write_stderr ENDP
_TEXT	ENDS
EXTRN	_connection_fatal:PROC
EXTRN	_notify_remote_exit:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_need_notify$ = -8					; size = 4
_ssh$ = -4						; size = 4
_plug$ = 8						; size = 4
_error_msg$ = 12					; size = 4
_error_code$ = 16					; size = 4
_calling_back$ = 20					; size = 4
_ssh_closing PROC
; Line 3370
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 3371
	mov	eax, DWORD PTR _plug$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 3372
	push	0
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_do_close
	add	esp, 8
	mov	DWORD PTR _need_notify$[ebp], eax
; Line 3374
	cmp	DWORD PTR _error_msg$[ebp], 0
	jne	SHORT $LN8@ssh_closin
; Line 3375
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+264], 0
	jne	SHORT $LN7@ssh_closin
; Line 3376
	mov	DWORD PTR _error_msg$[ebp], OFFSET $SG89801
; Line 3377
	jmp	SHORT $LN8@ssh_closin
$LN7@ssh_closin:
; Line 3378
	mov	DWORD PTR _error_msg$[ebp], OFFSET $SG89803
$LN8@ssh_closin:
; Line 3381
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+264], 0
	je	SHORT $LN5@ssh_closin
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+268], 0
	je	SHORT $LN5@ssh_closin
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+260], 0
	jge	SHORT $LN5@ssh_closin
; Line 3382
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+260], 0
$LN5@ssh_closin:
; Line 3384
	cmp	DWORD PTR _need_notify$[ebp], 0
	je	SHORT $LN4@ssh_closin
; Line 3385
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_notify_remote_exit
	add	esp, 4
$LN4@ssh_closin:
; Line 3387
	cmp	DWORD PTR _error_msg$[ebp], 0
	je	SHORT $LN3@ssh_closin
; Line 3388
	mov	eax, DWORD PTR _error_msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
$LN3@ssh_closin:
; Line 3389
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+264], 0
	je	SHORT $LN1@ssh_closin
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+268], 0
	jne	SHORT $LN2@ssh_closin
$LN1@ssh_closin:
; Line 3390
	mov	edx, DWORD PTR _error_msg$[ebp]
	push	edx
	push	OFFSET $SG89809
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_connection_fatal
	add	esp, 12					; 0000000cH
$LN2@ssh_closin:
; Line 3391
	xor	eax, eax
; Line 3392
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_closing ENDP
_TEXT	ENDS
EXTRN	_sharestate_free:PROC
EXTRN	_freetree234:PROC
EXTRN	_pfl_terminate:PROC
EXTRN	_bufchain_clear:PROC
EXTRN	_del234:PROC
EXTRN	_pfd_close:PROC
EXTRN	_x11_close:PROC
EXTRN	_index234:PROC
EXTRN	_expire_timer_context:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv85 = -16						; size = 4
_pf$89721 = -12						; size = 4
_c$ = -8						; size = 4
_ret$ = -4						; size = 4
_ssh$ = 8						; size = 4
_notify_exit$ = 12					; size = 4
_ssh_do_close PROC
; Line 3238
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 3239
	mov	DWORD PTR _ret$[ebp], 0
; Line 3242
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+280], 4
; Line 3243
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_expire_timer_context
	add	esp, 4
; Line 3244
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN16@ssh_do_clo
; Line 3245
	mov	esi, esp
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3246
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 3247
	cmp	DWORD PTR _notify_exit$[ebp], 0
	je	SHORT $LN15@ssh_do_clo
; Line 3248
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_notify_remote_exit
	add	esp, 4
; Line 3249
	jmp	SHORT $LN16@ssh_do_clo
$LN15@ssh_do_clo:
; Line 3250
	mov	DWORD PTR _ret$[ebp], 1
$LN16@ssh_do_clo:
; Line 3256
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+248], 0
	je	$LN13@ssh_do_clo
$LN12@ssh_do_clo:
; Line 3257
	push	0
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+248]
	push	edx
	call	_index234
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
	cmp	DWORD PTR _c$[ebp], 0
	je	SHORT $LN13@ssh_do_clo
; Line 3258
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR tv85[ebp], ecx
	cmp	DWORD PTR tv85[ebp], 1
	je	SHORT $LN8@ssh_do_clo
	cmp	DWORD PTR tv85[ebp], 2
	jle	SHORT $LN9@ssh_do_clo
	cmp	DWORD PTR tv85[ebp], 4
	jle	SHORT $LN7@ssh_do_clo
	jmp	SHORT $LN9@ssh_do_clo
$LN8@ssh_do_clo:
; Line 3260
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	call	_x11_close
	add	esp, 4
; Line 3261
	jmp	SHORT $LN9@ssh_do_clo
$LN7@ssh_do_clo:
; Line 3264
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	_pfd_close
	add	esp, 4
$LN9@ssh_do_clo:
; Line 3267
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+248]
	push	edx
	call	_del234
	add	esp, 8
; Line 3268
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+364], 2
	jne	SHORT $LN6@ssh_do_clo
; Line 3269
	mov	ecx, DWORD PTR _c$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	call	_bufchain_clear
	add	esp, 4
$LN6@ssh_do_clo:
; Line 3270
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 3271
	jmp	$LN12@ssh_do_clo
$LN13@ssh_do_clo:
; Line 3277
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+276], 0
	je	$LN5@ssh_do_clo
$LN4@ssh_do_clo:
; Line 3279
	push	0
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+276]
	push	edx
	call	_index234
	add	esp, 8
	mov	DWORD PTR _pf$89721[ebp], eax
	cmp	DWORD PTR _pf$89721[ebp], 0
	je	$LN3@ssh_do_clo
; Line 3281
	mov	eax, DWORD PTR _pf$89721[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN2@ssh_do_clo
; Line 3282
	mov	ecx, DWORD PTR _pf$89721[ebp]
	mov	edx, DWORD PTR [ecx+40]
	push	edx
	call	_pfl_terminate
	add	esp, 4
$LN2@ssh_do_clo:
; Line 3283
	mov	eax, DWORD PTR _pf$89721[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+276]
	push	edx
	call	_del234
	add	esp, 8
; Line 3284
	cmp	DWORD PTR _pf$89721[ebp], 0
	je	SHORT $LN20@ssh_do_clo
	mov	eax, DWORD PTR _pf$89721[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_safefree
	add	esp, 4
	mov	edx, DWORD PTR _pf$89721[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	_safefree
	add	esp, 4
	mov	ecx, DWORD PTR _pf$89721[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	_safefree
	add	esp, 4
	mov	eax, DWORD PTR _pf$89721[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_safefree
	add	esp, 4
$LN20@ssh_do_clo:
	mov	edx, DWORD PTR _pf$89721[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 3285
	jmp	$LN4@ssh_do_clo
$LN3@ssh_do_clo:
; Line 3286
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+276]
	push	ecx
	call	_freetree234
	add	esp, 4
; Line 3287
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+276], 0
$LN5@ssh_do_clo:
; Line 3293
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+204], 0
	je	SHORT $LN1@ssh_do_clo
; Line 3294
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+204]
	push	edx
	call	_sharestate_free
	add	esp, 4
; Line 3295
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+204], 0
$LN1@ssh_do_clo:
; Line 3298
	mov	eax, DWORD PTR _ret$[ebp]
; Line 3299
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_do_close ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = -4						; size = 4
_plug$ = 8						; size = 4
_urgent$ = 12						; size = 4
_data$ = 16						; size = 4
_len$ = 20						; size = 4
_ssh_receive PROC
; Line 3395
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 3396
	mov	eax, DWORD PTR _plug$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 3397
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh_gotdata
	add	esp, 12					; 0000000cH
; Line 3398
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+280], 4
	jne	SHORT $LN1@ssh_receiv
; Line 3399
	push	1
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_do_close
	add	esp, 8
; Line 3400
	xor	eax, eax
	jmp	SHORT $LN2@ssh_receiv
$LN1@ssh_receiv:
; Line 3402
	mov	eax, 1
$LN2@ssh_receiv:
; Line 3403
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_receive ENDP
_TEXT	ENDS
EXTRN	_bufchain_size:PROC
EXTRN	_log_packet:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv80 = -12						; size = 4
_ret$89674 = -8						; size = 4
_crLine$89665 = -4					; size = 4
_ssh$ = 8						; size = 4
_data$ = 12						; size = 4
_datalen$ = 16						; size = 4
_ssh_gotdata PROC
; Line 3178
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 3180
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN26@ssh_gotdat
; Line 3182
	push	0
	push	0
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _datalen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	push	0
	push	-1
	push	0
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_log_packet
	add	esp, 44					; 0000002cH
$LN26@ssh_gotdat:
; Line 3184
	mov	edx, DWORD PTR _ssh$[ebp]
	add	edx, 400				; 00000190H
	mov	DWORD PTR _crLine$89665[ebp], edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+400]
	mov	DWORD PTR tv80[ebp], ecx
	cmp	DWORD PTR tv80[ebp], 0
	je	SHORT $LN22@ssh_gotdat
	cmp	DWORD PTR tv80[ebp], 3195		; 00000c7bH
	je	SHORT $LN18@ssh_gotdat
	cmp	DWORD PTR tv80[ebp], 3232		; 00000ca0H
	je	$LN3@ssh_gotdat
	jmp	$LN24@ssh_gotdat
$LN22@ssh_gotdat:
; Line 3192
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN14@ssh_gotdat
; Line 3194
	cmp	DWORD PTR _datalen$[ebp], 0
	jne	SHORT $LN20@ssh_gotdat
$LN19@ssh_gotdat:
; Line 3195
	mov	eax, DWORD PTR _crLine$89665[ebp]
	mov	DWORD PTR [eax], 3195			; 00000c7bH
	jmp	$LN27@ssh_gotdat
$LN18@ssh_gotdat:
	xor	ecx, ecx
	jne	SHORT $LN19@ssh_gotdat
$LN20@ssh_gotdat:
; Line 3196
	mov	esi, esp
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+536]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ret$89674[ebp], eax
; Line 3197
	mov	ecx, DWORD PTR _data$[ebp]
	add	ecx, 1
	mov	DWORD PTR _data$[ebp], ecx
; Line 3198
	mov	edx, DWORD PTR _datalen$[ebp]
	sub	edx, 1
	mov	DWORD PTR _datalen$[ebp], edx
; Line 3199
	cmp	DWORD PTR _ret$89674[ebp], 0
	jne	SHORT $LN15@ssh_gotdat
; Line 3200
	jmp	SHORT $LN14@ssh_gotdat
$LN15@ssh_gotdat:
; Line 3201
	jmp	SHORT $LN22@ssh_gotdat
$LN14@ssh_gotdat:
; Line 3210
	mov	eax, 1
	test	eax, eax
	je	$LN24@ssh_gotdat
$LN12@ssh_gotdat:
; Line 3211
	mov	ecx, DWORD PTR _ssh$[ebp]
	add	ecx, 568				; 00000238H
	push	ecx
	call	_bufchain_size
	add	esp, 4
	test	eax, eax
	jg	SHORT $LN10@ssh_gotdat
	cmp	DWORD PTR _datalen$[ebp], 0
	jle	SHORT $LN4@ssh_gotdat
$LN10@ssh_gotdat:
; Line 3212
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+564], 0
	je	SHORT $LN9@ssh_gotdat
; Line 3213
	lea	eax, DWORD PTR _datalen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_queue_incoming_data
	add	esp, 12					; 0000000cH
; Line 3217
	jmp	SHORT $LN4@ssh_gotdat
	jmp	SHORT $LN8@ssh_gotdat
$LN9@ssh_gotdat:
; Line 3218
	mov	eax, DWORD PTR _ssh$[ebp]
	add	eax, 568				; 00000238H
	push	eax
	call	_bufchain_size
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN7@ssh_gotdat
; Line 3221
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_process_queued_incoming_data
	add	esp, 4
; Line 3222
	jmp	SHORT $LN8@ssh_gotdat
$LN7@ssh_gotdat:
; Line 3225
	lea	edx, DWORD PTR _datalen$[ebp]
	push	edx
	lea	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_process_incoming_data
	add	esp, 12					; 0000000cH
$LN8@ssh_gotdat:
; Line 3228
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+280], 4
	jne	SHORT $LN5@ssh_gotdat
; Line 3229
	jmp	SHORT $LN27@ssh_gotdat
$LN5@ssh_gotdat:
; Line 3230
	jmp	$LN12@ssh_gotdat
$LN4@ssh_gotdat:
; Line 3232
	mov	eax, DWORD PTR _crLine$89665[ebp]
	mov	DWORD PTR [eax], 3232			; 00000ca0H
	jmp	SHORT $LN27@ssh_gotdat
$LN3@ssh_gotdat:
	xor	ecx, ecx
	jne	SHORT $LN4@ssh_gotdat
; Line 3233
	jmp	$LN14@ssh_gotdat
$LN24@ssh_gotdat:
; Line 3234
	mov	edx, DWORD PTR _crLine$89665[ebp]
	mov	DWORD PTR [edx], 0
$LN27@ssh_gotdat:
; Line 3235
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_gotdata ENDP
; Function compile flags: /Odtp /RTCsu
_pktin$ = -4						; size = 4
_ssh$ = 8						; size = 4
_data$ = 12						; size = 4
_datalen$ = 16						; size = 4
_ssh_process_incoming_data PROC
; Line 3133
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 3136
	mov	esi, esp
	mov	eax, DWORD PTR _datalen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+532]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pktin$[ebp], eax
; Line 3137
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN2@ssh_proces
; Line 3138
	mov	esi, esp
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	push	0
	push	0
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+528]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3139
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_free_packet
	add	esp, 4
$LN2@ssh_proces:
; Line 3141
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_process_incoming_data ENDP
; Function compile flags: /Odtp /RTCsu
_pkt$ = 8						; size = 4
_ssh_free_packet PROC
; Line 1154
	push	ebp
	mov	ebp, esp
; Line 1155
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 1156
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 1157
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh_free_packet ENDP
_TEXT	ENDS
EXTRN	_bufchain_add:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ssh$ = 8						; size = 4
_data$ = 12						; size = 4
_datalen$ = 16						; size = 4
_ssh_queue_incoming_data PROC
; Line 3145
	push	ebp
	mov	ebp, esp
; Line 3146
	mov	eax, DWORD PTR _datalen$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	add	ecx, 568				; 00000238H
	push	ecx
	call	_bufchain_add
	add	esp, 12					; 0000000cH
; Line 3147
	mov	edx, DWORD PTR _data$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _datalen$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [edx], eax
; Line 3148
	mov	eax, DWORD PTR _datalen$[ebp]
	mov	DWORD PTR [eax], 0
; Line 3149
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh_queue_incoming_data ENDP
_TEXT	ENDS
EXTRN	_bufchain_consume:PROC
EXTRN	_bufchain_prefix:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_origlen$ = -40						; size = 4
_len$ = -32						; size = 4
_data$ = -20						; size = 4
_vdata$ = -8						; size = 4
_ssh$ = 8						; size = 4
_ssh_process_queued_incoming_data PROC
; Line 3152
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	edi
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN5@ssh_proces@2:
; Line 3157
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+564], 0
	jne	$LN6@ssh_proces@2
	mov	ecx, DWORD PTR _ssh$[ebp]
	add	ecx, 568				; 00000238H
	push	ecx
	call	_bufchain_size
	add	esp, 4
	test	eax, eax
	je	SHORT $LN6@ssh_proces@2
; Line 3158
	lea	edx, DWORD PTR _len$[ebp]
	push	edx
	lea	eax, DWORD PTR _vdata$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	add	ecx, 568				; 00000238H
	push	ecx
	call	_bufchain_prefix
	add	esp, 12					; 0000000cH
; Line 3159
	mov	edx, DWORD PTR _vdata$[ebp]
	mov	DWORD PTR _data$[ebp], edx
; Line 3160
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR _origlen$[ebp], eax
$LN3@ssh_proces@2:
; Line 3162
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+564], 0
	jne	SHORT $LN2@ssh_proces@2
	cmp	DWORD PTR _len$[ebp], 0
	jle	SHORT $LN2@ssh_proces@2
; Line 3163
	lea	edx, DWORD PTR _len$[ebp]
	push	edx
	lea	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_process_incoming_data
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN3@ssh_proces@2
$LN2@ssh_proces@2:
; Line 3165
	mov	edx, DWORD PTR _origlen$[ebp]
	cmp	edx, DWORD PTR _len$[ebp]
	jle	SHORT $LN1@ssh_proces@2
; Line 3166
	mov	eax, DWORD PTR _origlen$[ebp]
	sub	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	add	ecx, 568				; 00000238H
	push	ecx
	call	_bufchain_consume
	add	esp, 8
$LN1@ssh_proces@2:
; Line 3167
	jmp	$LN5@ssh_proces@2
$LN6@ssh_proces@2:
; Line 3168
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@ssh_proces@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@ssh_proces@2:
	DD	3
	DD	$LN11@ssh_proces@2
$LN11@ssh_proces@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN8@ssh_proces@2
	DD	-20					; ffffffecH
	DD	4
	DD	$LN9@ssh_proces@2
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN10@ssh_proces@2
$LN10@ssh_proces@2:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN9@ssh_proces@2:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN8@ssh_proces@2:
	DB	118					; 00000076H
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_ssh_process_queued_incoming_data ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = -4						; size = 4
_plug$ = 8						; size = 4
_bufsize$ = 12						; size = 4
_ssh_sent PROC
; Line 3406
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 3407
	mov	eax, DWORD PTR _plug$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 3412
	cmp	DWORD PTR _bufsize$[ebp], 32768		; 00008000H
	jge	SHORT $LN2@ssh_sent
; Line 3413
	mov	ecx, DWORD PTR _bufsize$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_throttle_all
	add	esp, 12					; 0000000cH
$LN2@ssh_sent:
; Line 3414
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_sent ENDP
_TEXT	ENDS
EXTRN	_pfd_override_throttle:PROC
EXTRN	_x11_override_throttle:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv77 = -12						; size = 4
_c$ = -8						; size = 4
_i$ = -4						; size = 4
_ssh$ = 8						; size = 4
_enable$ = 12						; size = 4
_bufsize$ = 16						; size = 4
_ssh_throttle_all PROC
; Line 3564
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 3568
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR _enable$[ebp]
	cmp	ecx, DWORD PTR [eax+376]
	jne	SHORT $LN11@ssh_thrott
; Line 3569
	jmp	$LN12@ssh_thrott
$LN11@ssh_thrott:
; Line 3570
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR _enable$[ebp]
	mov	DWORD PTR [edx+376], eax
; Line 3571
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR _bufsize$[ebp]
	mov	DWORD PTR [ecx+372], edx
; Line 3572
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+248], 0
	jne	SHORT $LN10@ssh_thrott
; Line 3573
	jmp	SHORT $LN12@ssh_thrott
$LN10@ssh_thrott:
; Line 3574
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@ssh_thrott
$LN8@ssh_thrott:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN9@ssh_thrott:
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+248]
	push	ecx
	call	_index234
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
	cmp	DWORD PTR _c$[ebp], 0
	je	SHORT $LN12@ssh_thrott
; Line 3575
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR tv77[ebp], eax
	cmp	DWORD PTR tv77[ebp], 1
	je	SHORT $LN3@ssh_thrott
	cmp	DWORD PTR tv77[ebp], 3
	je	SHORT $LN1@ssh_thrott
	jmp	SHORT $LN5@ssh_thrott
; Line 3580
	jmp	SHORT $LN5@ssh_thrott
$LN3@ssh_thrott:
; Line 3582
	mov	ecx, DWORD PTR _enable$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	call	_x11_override_throttle
	add	esp, 8
; Line 3583
	jmp	SHORT $LN5@ssh_thrott
; Line 3586
	jmp	SHORT $LN5@ssh_thrott
$LN1@ssh_thrott:
; Line 3588
	mov	ecx, DWORD PTR _enable$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	call	_pfd_override_throttle
	add	esp, 8
$LN5@ssh_thrott:
; Line 3591
	jmp	SHORT $LN8@ssh_thrott
$LN12@ssh_thrott:
; Line 3592
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_throttle_all ENDP
_TEXT	ENDS
PUBLIC	_verify_ssh_manual_host_key
EXTRN	_base64_encode_atom:PROC
EXTRN	_safemalloc:PROC
EXTRN	_conf_get_str_str_opt:PROC
EXTRN	_strspn:PROC
EXTRN	__wassert:PROC
EXTRN	_strrchr:PROC
EXTRN	_conf_get_str_nthstrkey:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv76 = -36						; size = 4
_i$90021 = -32						; size = 4
_atoms$90020 = -28					; size = 4
_binlen$90019 = -20					; size = 4
_base64blob$90018 = -12					; size = 4
_binblob$90017 = -8					; size = 4
_p$90004 = -4						; size = 4
_ssh$ = 8						; size = 4
_fingerprint$ = 12					; size = 4
_ssh2keytype$ = 16					; size = 4
_ssh2keydata$ = 20					; size = 4
_verify_ssh_manual_host_key PROC
; Line 3693
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 3694
	push	0
	push	167					; 000000a7H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_str_nthstrkey
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN8@verify_ssh
; Line 3695
	or	eax, -1
	jmp	$LN9@verify_ssh
$LN8@verify_ssh:
; Line 3698
	cmp	DWORD PTR _fingerprint$[ebp], 0
	je	$LN7@verify_ssh
; Line 3705
	push	32					; 00000020H
	mov	edx, DWORD PTR _fingerprint$[ebp]
	push	edx
	call	_strrchr
	add	esp, 8
	mov	DWORD PTR _p$90004[ebp], eax
; Line 3706
	cmp	DWORD PTR _p$90004[ebp], 0
	je	SHORT $LN11@verify_ssh
	mov	eax, DWORD PTR _p$90004[ebp]
	add	eax, 1
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN12@verify_ssh
$LN11@verify_ssh:
	mov	ecx, DWORD PTR _fingerprint$[ebp]
	mov	DWORD PTR tv76[ebp], ecx
$LN12@verify_ssh:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR _fingerprint$[ebp], edx
; Line 3708
	mov	eax, DWORD PTR _fingerprint$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 47					; 0000002fH
	je	SHORT $LN13@verify_ssh
	push	3708					; 00000e7cH
	push	OFFSET $SG90006
	push	OFFSET $SG90007
	call	__wassert
	add	esp, 12					; 0000000cH
$LN13@verify_ssh:
; Line 3709
	mov	edx, DWORD PTR _fingerprint$[ebp]
	movsx	eax, BYTE PTR [edx+2]
	cmp	eax, 58					; 0000003aH
	je	SHORT $LN14@verify_ssh
	push	3709					; 00000e7dH
	push	OFFSET $SG90009
	push	OFFSET $SG90010
	call	__wassert
	add	esp, 12					; 0000000cH
$LN14@verify_ssh:
; Line 3710
	push	OFFSET $SG90012
	mov	edx, DWORD PTR _fingerprint$[ebp]
	push	edx
	call	_strspn
	add	esp, 8
	mov	ecx, DWORD PTR _fingerprint$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN15@verify_ssh
	push	3710					; 00000e7eH
	push	OFFSET $SG90013
	push	OFFSET $SG90014
	call	__wassert
	add	esp, 12					; 0000000cH
$LN15@verify_ssh:
; Line 3713
	mov	ecx, DWORD PTR _fingerprint$[ebp]
	push	ecx
	push	167					; 000000a7H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_str_str_opt
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN7@verify_ssh
; Line 3714
	mov	eax, 1
	jmp	$LN9@verify_ssh
$LN7@verify_ssh:
; Line 3717
	cmp	DWORD PTR _ssh2keydata$[ebp], 0
	je	$LN5@verify_ssh
; Line 3725
	mov	esi, esp
	lea	ecx, DWORD PTR _binlen$90019[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh2keydata$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh2keytype$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _binblob$90017[ebp], eax
; Line 3726
	mov	eax, DWORD PTR _binlen$90019[ebp]
	add	eax, 2
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR _atoms$90020[ebp], eax
; Line 3727
	push	1
	mov	edx, DWORD PTR _atoms$90020[ebp]
	lea	eax, DWORD PTR [edx*4+1]
	push	eax
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _base64blob$90018[ebp], eax
; Line 3728
	mov	DWORD PTR _i$90021[ebp], 0
	jmp	SHORT $LN4@verify_ssh
$LN3@verify_ssh:
	mov	ecx, DWORD PTR _i$90021[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$90021[ebp], ecx
$LN4@verify_ssh:
	mov	edx, DWORD PTR _i$90021[ebp]
	cmp	edx, DWORD PTR _atoms$90020[ebp]
	jge	SHORT $LN2@verify_ssh
; Line 3729
	mov	eax, DWORD PTR _i$90021[ebp]
	mov	ecx, DWORD PTR _base64blob$90018[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	eax, DWORD PTR _i$90021[ebp]
	imul	eax, 3
	mov	ecx, DWORD PTR _binlen$90019[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _i$90021[ebp]
	imul	edx, 3
	add	edx, DWORD PTR _binblob$90017[ebp]
	push	edx
	call	_base64_encode_atom
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN3@verify_ssh
$LN2@verify_ssh:
; Line 3730
	mov	eax, DWORD PTR _atoms$90020[ebp]
	mov	ecx, DWORD PTR _base64blob$90018[ebp]
	mov	BYTE PTR [ecx+eax*4], 0
; Line 3731
	mov	edx, DWORD PTR _binblob$90017[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 3733
	mov	eax, DWORD PTR _base64blob$90018[ebp]
	push	eax
	push	167					; 000000a7H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_str_str_opt
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN1@verify_ssh
; Line 3734
	mov	eax, DWORD PTR _base64blob$90018[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 3735
	mov	eax, 1
	jmp	SHORT $LN9@verify_ssh
$LN1@verify_ssh:
; Line 3737
	mov	ecx, DWORD PTR _base64blob$90018[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN5@verify_ssh:
; Line 3740
	xor	eax, eax
$LN9@verify_ssh:
; Line 3741
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@verify_ssh
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN18@verify_ssh:
	DD	1
	DD	$LN17@verify_ssh
$LN17@verify_ssh:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN16@verify_ssh
$LN16@verify_ssh:
	DB	98					; 00000062H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
_verify_ssh_manual_host_key ENDP
_TEXT	ENDS
PUBLIC	_sshfwd_get_conf
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ssh$ = -4						; size = 4
_c$ = 8							; size = 4
_sshfwd_get_conf PROC
; Line 4761
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 4762
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ssh$[ebp], ecx
; Line 4763
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
; Line 4764
	mov	esp, ebp
	pop	ebp
	ret	0
_sshfwd_get_conf ENDP
_TEXT	ENDS
PUBLIC	_sshfwd_write_eof
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ssh$ = -4						; size = 4
_c$ = 8							; size = 4
_sshfwd_write_eof PROC
; Line 4767
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 4768
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ssh$[ebp], ecx
; Line 4770
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+280], 4
	jne	SHORT $LN2@sshfwd_wri
; Line 4771
	jmp	SHORT $LN3@sshfwd_wri
$LN2@sshfwd_wri:
; Line 4773
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	and	ecx, 1
	je	SHORT $LN1@sshfwd_wri
; Line 4774
	jmp	SHORT $LN3@sshfwd_wri
$LN1@sshfwd_wri:
; Line 4776
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+24], 1
; Line 4777
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_ssh_channel_try_eof
	add	esp, 4
$LN3@sshfwd_wri:
; Line 4778
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sshfwd_write_eof ENDP
; Function compile flags: /Odtp /RTCsu
_pktout$90726 = -8					; size = 4
_ssh$ = -4						; size = 4
_c$ = 8							; size = 4
_ssh_channel_try_eof PROC
; Line 4737
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 4738
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ssh$[ebp], ecx
; Line 4739
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+24], 0
	jne	SHORT $LN7@ssh_channe
	push	4739					; 00001283H
	push	OFFSET $SG90720
	push	OFFSET $SG90721
	call	__wassert
	add	esp, 12					; 0000000cH
$LN7@ssh_channe:
; Line 4740
	mov	ecx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN4@ssh_channe
; Line 4741
	jmp	$LN5@ssh_channe
$LN4@ssh_channe:
; Line 4742
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+364], 2
	jne	SHORT $LN3@ssh_channe
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	call	_bufchain_size
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@ssh_channe
; Line 4743
	jmp	$LN5@ssh_channe
$LN3@ssh_channe:
; Line 4745
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+24], 0
; Line 4746
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+364], 1
	jne	SHORT $LN2@ssh_channe
; Line 4748
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	1
	push	24					; 00000018H
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_send_packet
	add	esp, 20					; 00000014H
; Line 4749
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	or	ecx, 1
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+20], ecx
; Line 4750
	jmp	SHORT $LN5@ssh_channe
$LN2@ssh_channe:
; Line 4752
	push	96					; 00000060H
	call	_ssh2_pkt_init
	add	esp, 4
	mov	DWORD PTR _pktout$90726[ebp], eax
; Line 4753
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pktout$90726[ebp]
	push	edx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 4754
	mov	eax, DWORD PTR _pktout$90726[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_pkt_send
	add	esp, 8
; Line 4755
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+20]
	or	eax, 1
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 4756
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	call	_ssh2_channel_check_close
	add	esp, 4
$LN5@ssh_channe:
; Line 4758
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_channel_try_eof ENDP
; Function compile flags: /Odtp /RTCsu
_ap$ = -8						; size = 4
_pkt$ = -4						; size = 4
_ssh$ = 8						; size = 4
_pkttype$ = 12						; size = 4
_send_packet PROC
; Line 1951
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1954
	lea	eax, DWORD PTR _pkttype$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 1955
	mov	ecx, DWORD PTR _ap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkttype$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_construct_packet
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkt$[ebp], eax
; Line 1956
	mov	DWORD PTR _ap$[ebp], 0
; Line 1957
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_s_wrpkt
	add	esp, 8
; Line 1958
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_send_packet ENDP
; Function compile flags: /Odtp /RTCsu
_offset$ = -16						; size = 4
_backlog$ = -8						; size = 4
_len$ = -4						; size = 4
_ssh$ = 8						; size = 4
_pkt$ = 12						; size = 4
_s_wrpkt PROC
; Line 1878
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1880
	lea	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_s_wrpkt_prepare
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _len$[ebp], eax
; Line 1881
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, DWORD PTR _offset$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_s_write
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _backlog$[ebp], eax
; Line 1882
	cmp	DWORD PTR _backlog$[ebp], 32768		; 00008000H
	jle	SHORT $LN1@s_wrpkt
; Line 1883
	mov	ecx, DWORD PTR _backlog$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_throttle_all
	add	esp, 12					; 0000000cH
$LN1@s_wrpkt:
; Line 1884
	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	call	_ssh_free_packet
	add	esp, 4
; Line 1885
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@s_wrpkt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@s_wrpkt:
	DD	1
	DD	$LN5@s_wrpkt
$LN5@s_wrpkt:
	DD	-16					; fffffff0H
	DD	4
	DD	$LN4@s_wrpkt
$LN4@s_wrpkt:
	DB	111					; 0000006fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_s_wrpkt ENDP
_TEXT	ENDS
EXTRN	_crc32_compute:PROC
EXTRN	_random_byte:PROC
EXTRN	_memcpy:PROC
EXTRN	_zlib_compress_block:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_complen$88693 = -44					; size = 4
_compblk$88692 = -32					; size = 4
_len$ = -24						; size = 4
_crc$ = -20						; size = 4
_pktoffs$ = -16						; size = 4
_i$ = -12						; size = 4
_biglen$ = -8						; size = 4
_pad$ = -4						; size = 4
_ssh$ = 8						; size = 4
_pkt$ = 12						; size = 4
_offset_p$ = 16						; size = 4
_s_wrpkt_prepare PROC
; Line 1817
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-48]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1831
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN7@s_wrpkt_pr
; Line 1832
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh1_log_outgoing_packet
	add	esp, 8
$LN7@s_wrpkt_pr:
; Line 1834
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+60], 0
	je	SHORT $LN6@s_wrpkt_pr
; Line 1839
	lea	ecx, DWORD PTR _complen$88693[ebp]
	push	ecx
	lea	edx, DWORD PTR _compblk$88692[ebp]
	push	edx
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 12					; 0000000cH
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	push	edx
	call	_zlib_compress_block
	add	esp, 20					; 00000014H
; Line 1840
	mov	eax, DWORD PTR _complen$88693[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	call	_ssh_pkt_ensure
	add	esp, 8
; Line 1841
	mov	edx, DWORD PTR _complen$88693[ebp]
	push	edx
	mov	eax, DWORD PTR _compblk$88692[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 12					; 0000000cH
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1842
	mov	eax, DWORD PTR _compblk$88692[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 1843
	mov	ecx, DWORD PTR _complen$88693[ebp]
	add	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [edx], ecx
$LN6@s_wrpkt_pr:
; Line 1846
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_ensure
	add	esp, 8
; Line 1847
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1848
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 12					; 0000000cH
	mov	DWORD PTR _len$[ebp], ecx
; Line 1849
	mov	edx, DWORD PTR _len$[ebp]
	and	edx, -2147483641			; 80000007H
	jns	SHORT $LN14@s_wrpkt_pr
	dec	edx
	or	edx, -8					; fffffff8H
	inc	edx
$LN14@s_wrpkt_pr:
	mov	eax, 8
	sub	eax, edx
	mov	DWORD PTR _pad$[ebp], eax
; Line 1850
	mov	ecx, 8
	sub	ecx, DWORD PTR _pad$[ebp]
	mov	DWORD PTR _pktoffs$[ebp], ecx
; Line 1851
	mov	edx, DWORD PTR _len$[ebp]
	add	edx, DWORD PTR _pad$[ebp]
	mov	DWORD PTR _biglen$[ebp], edx
; Line 1853
	mov	eax, DWORD PTR _pktoffs$[ebp]
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN5@s_wrpkt_pr
$LN4@s_wrpkt_pr:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN5@s_wrpkt_pr:
	cmp	DWORD PTR _i$[ebp], 12			; 0000000cH
	jge	SHORT $LN3@s_wrpkt_pr
; Line 1854
	call	_random_byte
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	mov	edx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [ecx+edx], al
	jmp	SHORT $LN4@s_wrpkt_pr
$LN3@s_wrpkt_pr:
; Line 1855
	mov	eax, DWORD PTR _biglen$[ebp]
	sub	eax, 4
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _pktoffs$[ebp]
	lea	ecx, DWORD PTR [edx+eax+4]
	push	ecx
	call	_crc32_compute
	add	esp, 8
	mov	DWORD PTR _crc$[ebp], eax
; Line 1856
	mov	edx, DWORD PTR _crc$[ebp]
	shr	edx, 24					; 00000018H
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, DWORD PTR _pktoffs$[ebp]
	mov	eax, DWORD PTR _biglen$[ebp]
	mov	BYTE PTR [ecx+eax], dl
	mov	ecx, DWORD PTR _crc$[ebp]
	shr	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, DWORD PTR _pktoffs$[ebp]
	mov	edx, DWORD PTR _biglen$[ebp]
	mov	BYTE PTR [eax+edx+1], cl
	mov	eax, DWORD PTR _crc$[ebp]
	shr	eax, 8
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, DWORD PTR _pktoffs$[ebp]
	mov	ecx, DWORD PTR _biglen$[ebp]
	mov	BYTE PTR [edx+ecx+2], al
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, DWORD PTR _pktoffs$[ebp]
	mov	ecx, DWORD PTR _biglen$[ebp]
	mov	dl, BYTE PTR _crc$[ebp]
	mov	BYTE PTR [eax+ecx+3], dl
; Line 1857
	mov	eax, DWORD PTR _len$[ebp]
	sar	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	ecx, DWORD PTR _pktoffs$[ebp]
	mov	BYTE PTR [edx+ecx], al
	mov	edx, DWORD PTR _len$[ebp]
	sar	edx, 16					; 00000010H
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR _pktoffs$[ebp]
	mov	BYTE PTR [ecx+eax+1], dl
	mov	ecx, DWORD PTR _len$[ebp]
	sar	ecx, 8
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	edx, DWORD PTR _pktoffs$[ebp]
	mov	BYTE PTR [eax+edx+2], cl
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _pktoffs$[ebp]
	mov	al, BYTE PTR _len$[ebp]
	mov	BYTE PTR [ecx+edx+3], al
; Line 1859
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+84], 0
	je	SHORT $LN2@s_wrpkt_pr
; Line 1861
	mov	esi, esp
	mov	edx, DWORD PTR _biglen$[ebp]
	push	edx
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _pktoffs$[ebp]
	lea	eax, DWORD PTR [ecx+edx+4]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@s_wrpkt_pr:
; Line 1863
	cmp	DWORD PTR _offset_p$[ebp], 0
	je	SHORT $LN1@s_wrpkt_pr
	mov	eax, DWORD PTR _offset_p$[ebp]
	mov	ecx, DWORD PTR _pktoffs$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@s_wrpkt_pr:
; Line 1864
	mov	eax, DWORD PTR _biglen$[ebp]
	add	eax, 4
; Line 1865
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@s_wrpkt_pr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN13@s_wrpkt_pr:
	DD	2
	DD	$LN12@s_wrpkt_pr
$LN12@s_wrpkt_pr:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN10@s_wrpkt_pr
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN11@s_wrpkt_pr
$LN11@s_wrpkt_pr:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN10@s_wrpkt_pr:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	107					; 0000006bH
	DB	0
_s_wrpkt_prepare ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_conf_get_int:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_slen$ = -84						; size = 4
_str$ = -72						; size = 4
_blanks$ = -60						; size = 48
_nblanks$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_ssh$ = 8						; size = 4
_pkt$ = 12						; size = 4
_ssh1_log_outgoing_packet PROC
; Line 1199
	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	edi
	lea	edi, DWORD PTR [ebp-88]
	mov	ecx, 22					; 00000016H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1200
	mov	DWORD PTR _nblanks$[ebp], 0
; Line 1215
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [eax+20]
	sub	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, edx
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1216
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 1220
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+544], 0
	je	SHORT $LN9@ssh1_log_o
	mov	edx, DWORD PTR _pkt$[ebp]
	cmp	DWORD PTR [edx+8], 16			; 00000010H
	je	SHORT $LN8@ssh1_log_o
	mov	eax, DWORD PTR _pkt$[ebp]
	cmp	DWORD PTR [eax+8], 23			; 00000017H
	jne	SHORT $LN9@ssh1_log_o
$LN8@ssh1_log_o:
; Line 1222
	mov	ecx, DWORD PTR _pkt$[ebp]
	cmp	DWORD PTR [ecx+8], 23			; 00000017H
	jne	SHORT $LN7@ssh1_log_o
; Line 1223
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_getuint32
	add	esp, 4
$LN7@ssh1_log_o:
; Line 1224
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 4
	mov	edx, DWORD PTR _nblanks$[ebp]
	imul	edx, 12					; 0000000cH
	mov	DWORD PTR _blanks$[ebp+edx], ecx
; Line 1225
	mov	eax, DWORD PTR _nblanks$[ebp]
	imul	eax, 12					; 0000000cH
	mov	DWORD PTR _blanks$[ebp+eax+8], 2
; Line 1226
	lea	ecx, DWORD PTR _slen$[ebp]
	push	ecx
	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 1227
	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN9@ssh1_log_o
; Line 1228
	mov	ecx, DWORD PTR _nblanks$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _slen$[ebp]
	mov	DWORD PTR _blanks$[ebp+ecx+4], edx
; Line 1229
	mov	eax, DWORD PTR _nblanks$[ebp]
	add	eax, 1
	mov	DWORD PTR _nblanks$[ebp], eax
$LN9@ssh1_log_o:
; Line 1236
	mov	ecx, DWORD PTR _pkt$[ebp]
	cmp	DWORD PTR [ecx+8], 9
	je	SHORT $LN4@ssh1_log_o
	mov	edx, DWORD PTR _pkt$[ebp]
	cmp	DWORD PTR [edx+8], 41			; 00000029H
	je	SHORT $LN4@ssh1_log_o
	mov	eax, DWORD PTR _pkt$[ebp]
	cmp	DWORD PTR [eax+8], 72			; 00000048H
	jne	SHORT $LN5@ssh1_log_o
$LN4@ssh1_log_o:
	push	118					; 00000076H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@ssh1_log_o
; Line 1238
	mov	eax, DWORD PTR _nblanks$[ebp]
	imul	eax, 12					; 0000000cH
	mov	DWORD PTR _blanks$[ebp+eax], 0
; Line 1239
	mov	ecx, DWORD PTR _nblanks$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _blanks$[ebp+ecx+4], eax
; Line 1240
	mov	ecx, DWORD PTR _nblanks$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	DWORD PTR _blanks$[ebp+ecx+8], 1
; Line 1241
	mov	edx, DWORD PTR _nblanks$[ebp]
	add	edx, 1
	mov	DWORD PTR _nblanks$[ebp], edx
; Line 1242
	jmp	$LN3@ssh1_log_o
$LN5@ssh1_log_o:
; Line 1243
	mov	eax, DWORD PTR _pkt$[ebp]
	cmp	DWORD PTR [eax+8], 34			; 00000022H
	jne	$LN3@ssh1_log_o
	push	118					; 00000076H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@ssh1_log_o
; Line 1254
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 1255
	lea	ecx, DWORD PTR _slen$[ebp]
	push	ecx
	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 1256
	mov	ecx, DWORD PTR _nblanks$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR _blanks$[ebp+ecx], eax
; Line 1257
	mov	ecx, DWORD PTR _nblanks$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	DWORD PTR _blanks$[ebp+ecx+8], 1
; Line 1258
	lea	edx, DWORD PTR _slen$[ebp]
	push	edx
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 1259
	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN3@ssh1_log_o
; Line 1260
	mov	edx, DWORD PTR _nblanks$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR _blanks$[ebp+edx]
	mov	edx, DWORD PTR _nblanks$[ebp]
	imul	edx, 12					; 0000000cH
	mov	DWORD PTR _blanks$[ebp+edx+4], ecx
; Line 1261
	mov	eax, DWORD PTR _nblanks$[ebp]
	add	eax, 1
	mov	DWORD PTR _nblanks$[ebp], eax
$LN3@ssh1_log_o:
; Line 1268
	push	0
	push	0
	push	0
	lea	ecx, DWORD PTR _blanks$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nblanks$[ebp]
	push	edx
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	movzx	eax, BYTE PTR [edx+12]
	push	eax
	call	_ssh1_pkt_type
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	movzx	eax, BYTE PTR [edx+12]
	push	eax
	push	1
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	_log_packet
	add	esp, 44					; 0000002cH
; Line 1274
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [eax+20]
	sub	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _pkt$[ebp]
	add	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 1275
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@ssh1_log_o
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 88					; 00000058H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN16@ssh1_log_o:
	DD	3
	DD	$LN15@ssh1_log_o
$LN15@ssh1_log_o:
	DD	-60					; ffffffc4H
	DD	48					; 00000030H
	DD	$LN12@ssh1_log_o
	DD	-72					; ffffffb8H
	DD	4
	DD	$LN13@ssh1_log_o
	DD	-84					; ffffffacH
	DD	4
	DD	$LN14@ssh1_log_o
$LN14@ssh1_log_o:
	DB	115					; 00000073H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN13@ssh1_log_o:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN12@ssh1_log_o:
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	115					; 00000073H
	DB	0
_ssh1_log_outgoing_packet ENDP
; Function compile flags: /Odtp /RTCsu
_type$ = 8						; size = 4
_ssh1_pkt_type PROC
; Line 188
	push	ebp
	mov	ebp, esp
; Line 189
	cmp	DWORD PTR _type$[ebp], 1
	jne	SHORT $LN41@ssh1_pkt_t
	mov	eax, OFFSET $SG87403
	jmp	$LN42@ssh1_pkt_t
$LN41@ssh1_pkt_t:
; Line 190
	cmp	DWORD PTR _type$[ebp], 2
	jne	SHORT $LN40@ssh1_pkt_t
	mov	eax, OFFSET $SG87405
	jmp	$LN42@ssh1_pkt_t
$LN40@ssh1_pkt_t:
; Line 191
	cmp	DWORD PTR _type$[ebp], 3
	jne	SHORT $LN39@ssh1_pkt_t
	mov	eax, OFFSET $SG87407
	jmp	$LN42@ssh1_pkt_t
$LN39@ssh1_pkt_t:
; Line 192
	cmp	DWORD PTR _type$[ebp], 4
	jne	SHORT $LN38@ssh1_pkt_t
	mov	eax, OFFSET $SG87409
	jmp	$LN42@ssh1_pkt_t
$LN38@ssh1_pkt_t:
; Line 193
	cmp	DWORD PTR _type$[ebp], 6
	jne	SHORT $LN37@ssh1_pkt_t
	mov	eax, OFFSET $SG87411
	jmp	$LN42@ssh1_pkt_t
$LN37@ssh1_pkt_t:
; Line 194
	cmp	DWORD PTR _type$[ebp], 7
	jne	SHORT $LN36@ssh1_pkt_t
	mov	eax, OFFSET $SG87413
	jmp	$LN42@ssh1_pkt_t
$LN36@ssh1_pkt_t:
; Line 195
	cmp	DWORD PTR _type$[ebp], 8
	jne	SHORT $LN35@ssh1_pkt_t
	mov	eax, OFFSET $SG87415
	jmp	$LN42@ssh1_pkt_t
$LN35@ssh1_pkt_t:
; Line 196
	cmp	DWORD PTR _type$[ebp], 9
	jne	SHORT $LN34@ssh1_pkt_t
	mov	eax, OFFSET $SG87417
	jmp	$LN42@ssh1_pkt_t
$LN34@ssh1_pkt_t:
; Line 197
	cmp	DWORD PTR _type$[ebp], 10		; 0000000aH
	jne	SHORT $LN33@ssh1_pkt_t
	mov	eax, OFFSET $SG87419
	jmp	$LN42@ssh1_pkt_t
$LN33@ssh1_pkt_t:
; Line 198
	cmp	DWORD PTR _type$[ebp], 11		; 0000000bH
	jne	SHORT $LN32@ssh1_pkt_t
	mov	eax, OFFSET $SG87421
	jmp	$LN42@ssh1_pkt_t
$LN32@ssh1_pkt_t:
; Line 199
	cmp	DWORD PTR _type$[ebp], 12		; 0000000cH
	jne	SHORT $LN31@ssh1_pkt_t
	mov	eax, OFFSET $SG87423
	jmp	$LN42@ssh1_pkt_t
$LN31@ssh1_pkt_t:
; Line 200
	cmp	DWORD PTR _type$[ebp], 13		; 0000000dH
	jne	SHORT $LN30@ssh1_pkt_t
	mov	eax, OFFSET $SG87425
	jmp	$LN42@ssh1_pkt_t
$LN30@ssh1_pkt_t:
; Line 201
	cmp	DWORD PTR _type$[ebp], 14		; 0000000eH
	jne	SHORT $LN29@ssh1_pkt_t
	mov	eax, OFFSET $SG87427
	jmp	$LN42@ssh1_pkt_t
$LN29@ssh1_pkt_t:
; Line 202
	cmp	DWORD PTR _type$[ebp], 15		; 0000000fH
	jne	SHORT $LN28@ssh1_pkt_t
	mov	eax, OFFSET $SG87429
	jmp	$LN42@ssh1_pkt_t
$LN28@ssh1_pkt_t:
; Line 203
	cmp	DWORD PTR _type$[ebp], 16		; 00000010H
	jne	SHORT $LN27@ssh1_pkt_t
	mov	eax, OFFSET $SG87431
	jmp	$LN42@ssh1_pkt_t
$LN27@ssh1_pkt_t:
; Line 204
	cmp	DWORD PTR _type$[ebp], 17		; 00000011H
	jne	SHORT $LN26@ssh1_pkt_t
	mov	eax, OFFSET $SG87433
	jmp	$LN42@ssh1_pkt_t
$LN26@ssh1_pkt_t:
; Line 205
	cmp	DWORD PTR _type$[ebp], 18		; 00000012H
	jne	SHORT $LN25@ssh1_pkt_t
	mov	eax, OFFSET $SG87435
	jmp	$LN42@ssh1_pkt_t
$LN25@ssh1_pkt_t:
; Line 206
	cmp	DWORD PTR _type$[ebp], 19		; 00000013H
	jne	SHORT $LN24@ssh1_pkt_t
	mov	eax, OFFSET $SG87437
	jmp	$LN42@ssh1_pkt_t
$LN24@ssh1_pkt_t:
; Line 207
	cmp	DWORD PTR _type$[ebp], 20		; 00000014H
	jne	SHORT $LN23@ssh1_pkt_t
	mov	eax, OFFSET $SG87439
	jmp	$LN42@ssh1_pkt_t
$LN23@ssh1_pkt_t:
; Line 208
	cmp	DWORD PTR _type$[ebp], 21		; 00000015H
	jne	SHORT $LN22@ssh1_pkt_t
	mov	eax, OFFSET $SG87441
	jmp	$LN42@ssh1_pkt_t
$LN22@ssh1_pkt_t:
; Line 209
	cmp	DWORD PTR _type$[ebp], 22		; 00000016H
	jne	SHORT $LN21@ssh1_pkt_t
	mov	eax, OFFSET $SG87443
	jmp	$LN42@ssh1_pkt_t
$LN21@ssh1_pkt_t:
; Line 210
	cmp	DWORD PTR _type$[ebp], 23		; 00000017H
	jne	SHORT $LN20@ssh1_pkt_t
	mov	eax, OFFSET $SG87445
	jmp	$LN42@ssh1_pkt_t
$LN20@ssh1_pkt_t:
; Line 211
	cmp	DWORD PTR _type$[ebp], 24		; 00000018H
	jne	SHORT $LN19@ssh1_pkt_t
	mov	eax, OFFSET $SG87447
	jmp	$LN42@ssh1_pkt_t
$LN19@ssh1_pkt_t:
; Line 212
	cmp	DWORD PTR _type$[ebp], 25		; 00000019H
	jne	SHORT $LN18@ssh1_pkt_t
	mov	eax, OFFSET $SG87449
	jmp	$LN42@ssh1_pkt_t
$LN18@ssh1_pkt_t:
; Line 213
	cmp	DWORD PTR _type$[ebp], 27		; 0000001bH
	jne	SHORT $LN17@ssh1_pkt_t
	mov	eax, OFFSET $SG87451
	jmp	$LN42@ssh1_pkt_t
$LN17@ssh1_pkt_t:
; Line 214
	cmp	DWORD PTR _type$[ebp], 28		; 0000001cH
	jne	SHORT $LN16@ssh1_pkt_t
	mov	eax, OFFSET $SG87453
	jmp	$LN42@ssh1_pkt_t
$LN16@ssh1_pkt_t:
; Line 215
	cmp	DWORD PTR _type$[ebp], 29		; 0000001dH
	jne	SHORT $LN15@ssh1_pkt_t
	mov	eax, OFFSET $SG87455
	jmp	$LN42@ssh1_pkt_t
$LN15@ssh1_pkt_t:
; Line 216
	cmp	DWORD PTR _type$[ebp], 30		; 0000001eH
	jne	SHORT $LN14@ssh1_pkt_t
	mov	eax, OFFSET $SG87457
	jmp	$LN42@ssh1_pkt_t
$LN14@ssh1_pkt_t:
; Line 217
	cmp	DWORD PTR _type$[ebp], 31		; 0000001fH
	jne	SHORT $LN13@ssh1_pkt_t
	mov	eax, OFFSET $SG87459
	jmp	$LN42@ssh1_pkt_t
$LN13@ssh1_pkt_t:
; Line 218
	cmp	DWORD PTR _type$[ebp], 32		; 00000020H
	jne	SHORT $LN12@ssh1_pkt_t
	mov	eax, OFFSET $SG87461
	jmp	$LN42@ssh1_pkt_t
$LN12@ssh1_pkt_t:
; Line 219
	cmp	DWORD PTR _type$[ebp], 33		; 00000021H
	jne	SHORT $LN11@ssh1_pkt_t
	mov	eax, OFFSET $SG87463
	jmp	$LN42@ssh1_pkt_t
$LN11@ssh1_pkt_t:
; Line 220
	cmp	DWORD PTR _type$[ebp], 34		; 00000022H
	jne	SHORT $LN10@ssh1_pkt_t
	mov	eax, OFFSET $SG87465
	jmp	SHORT $LN42@ssh1_pkt_t
$LN10@ssh1_pkt_t:
; Line 221
	cmp	DWORD PTR _type$[ebp], 35		; 00000023H
	jne	SHORT $LN9@ssh1_pkt_t
	mov	eax, OFFSET $SG87467
	jmp	SHORT $LN42@ssh1_pkt_t
$LN9@ssh1_pkt_t:
; Line 222
	cmp	DWORD PTR _type$[ebp], 36		; 00000024H
	jne	SHORT $LN8@ssh1_pkt_t
	mov	eax, OFFSET $SG87469
	jmp	SHORT $LN42@ssh1_pkt_t
$LN8@ssh1_pkt_t:
; Line 223
	cmp	DWORD PTR _type$[ebp], 37		; 00000025H
	jne	SHORT $LN7@ssh1_pkt_t
	mov	eax, OFFSET $SG87471
	jmp	SHORT $LN42@ssh1_pkt_t
$LN7@ssh1_pkt_t:
; Line 224
	cmp	DWORD PTR _type$[ebp], 39		; 00000027H
	jne	SHORT $LN6@ssh1_pkt_t
	mov	eax, OFFSET $SG87473
	jmp	SHORT $LN42@ssh1_pkt_t
$LN6@ssh1_pkt_t:
; Line 225
	cmp	DWORD PTR _type$[ebp], 40		; 00000028H
	jne	SHORT $LN5@ssh1_pkt_t
	mov	eax, OFFSET $SG87475
	jmp	SHORT $LN42@ssh1_pkt_t
$LN5@ssh1_pkt_t:
; Line 226
	cmp	DWORD PTR _type$[ebp], 41		; 00000029H
	jne	SHORT $LN4@ssh1_pkt_t
	mov	eax, OFFSET $SG87477
	jmp	SHORT $LN42@ssh1_pkt_t
$LN4@ssh1_pkt_t:
; Line 227
	cmp	DWORD PTR _type$[ebp], 70		; 00000046H
	jne	SHORT $LN3@ssh1_pkt_t
	mov	eax, OFFSET $SG87479
	jmp	SHORT $LN42@ssh1_pkt_t
$LN3@ssh1_pkt_t:
; Line 228
	cmp	DWORD PTR _type$[ebp], 71		; 00000047H
	jne	SHORT $LN2@ssh1_pkt_t
	mov	eax, OFFSET $SG87481
	jmp	SHORT $LN42@ssh1_pkt_t
$LN2@ssh1_pkt_t:
; Line 229
	cmp	DWORD PTR _type$[ebp], 72		; 00000048H
	jne	SHORT $LN1@ssh1_pkt_t
	mov	eax, OFFSET $SG87483
	jmp	SHORT $LN42@ssh1_pkt_t
$LN1@ssh1_pkt_t:
; Line 230
	mov	eax, OFFSET $SG87484
$LN42@ssh1_pkt_t:
; Line 231
	pop	ebp
	ret	0
_ssh1_pkt_type ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = 8						; size = 4
_data$ = 12						; size = 4
_len$ = 16						; size = 4
_s_write PROC
; Line 1868
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1869
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN2@s_write
; Line 1871
	push	0
	push	0
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	push	0
	push	-1
	push	1
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_log_packet
	add	esp, 44					; 0000002cH
$LN2@s_write:
; Line 1872
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+16], 0
	jne	SHORT $LN1@s_write
; Line 1873
	xor	eax, eax
	jmp	SHORT $LN3@s_write
$LN1@s_write:
; Line 1874
	mov	esi, esp
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@s_write:
; Line 1875
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_s_write ENDP
; Function compile flags: /Odtp /RTCsu
tv69 = -36						; size = 4
_arglen$88769 = -32					; size = 4
_argint$88768 = -28					; size = 4
_sargp$88767 = -24					; size = 4
_argchar$88766 = -17					; size = 1
_argp$88765 = -16					; size = 4
_pkt$ = -12						; size = 4
_bn$ = -8						; size = 4
_argtype$ = -4						; size = 4
_ssh$ = 8						; size = 4
_pkttype$ = 12						; size = 4
_ap$ = 16						; size = 4
_construct_packet PROC
; Line 1909
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1914
	mov	eax, DWORD PTR _pkttype$[ebp]
	push	eax
	call	_ssh1_pkt_init
	add	esp, 4
	mov	DWORD PTR _pkt$[ebp], eax
$LN9@construct_:
; Line 1916
	mov	ecx, DWORD PTR _ap$[ebp]
	add	ecx, 4
	mov	DWORD PTR _ap$[ebp], ecx
	mov	edx, DWORD PTR _ap$[ebp]
	mov	eax, DWORD PTR [edx-4]
	mov	DWORD PTR _argtype$[ebp], eax
	cmp	DWORD PTR _argtype$[ebp], 0
	je	$LN8@construct_
; Line 1921
	mov	ecx, DWORD PTR _argtype$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	mov	edx, DWORD PTR tv69[ebp]
	sub	edx, 1
	mov	DWORD PTR tv69[ebp], edx
	cmp	DWORD PTR tv69[ebp], 4
	ja	$LN6@construct_
	mov	eax, DWORD PTR tv69[ebp]
	jmp	DWORD PTR $LN12@construct_[eax*4]
$LN5@construct_:
; Line 1924
	mov	ecx, DWORD PTR _ap$[ebp]
	add	ecx, 4
	mov	DWORD PTR _ap$[ebp], ecx
	mov	edx, DWORD PTR _ap$[ebp]
	mov	eax, DWORD PTR [edx-4]
	mov	DWORD PTR _argint$88768[ebp], eax
; Line 1925
	mov	ecx, DWORD PTR _argint$88768[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 1926
	jmp	$LN6@construct_
$LN4@construct_:
; Line 1928
	mov	eax, DWORD PTR _ap$[ebp]
	add	eax, 4
	mov	DWORD PTR _ap$[ebp], eax
	mov	ecx, DWORD PTR _ap$[ebp]
	mov	dl, BYTE PTR [ecx-4]
	mov	BYTE PTR _argchar$88766[ebp], dl
; Line 1929
	movzx	eax, BYTE PTR _argchar$88766[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	call	_ssh_pkt_addbyte
	add	esp, 8
; Line 1930
	jmp	$LN6@construct_
$LN3@construct_:
; Line 1932
	mov	edx, DWORD PTR _ap$[ebp]
	add	edx, 4
	mov	DWORD PTR _ap$[ebp], edx
	mov	eax, DWORD PTR _ap$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	mov	DWORD PTR _argp$88765[ebp], ecx
; Line 1933
	mov	edx, DWORD PTR _ap$[ebp]
	add	edx, 4
	mov	DWORD PTR _ap$[ebp], edx
	mov	eax, DWORD PTR _ap$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	mov	DWORD PTR _arglen$88769[ebp], ecx
; Line 1934
	mov	edx, DWORD PTR _arglen$88769[ebp]
	push	edx
	mov	eax, DWORD PTR _argp$88765[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	call	_ssh_pkt_adddata
	add	esp, 12					; 0000000cH
; Line 1935
	jmp	SHORT $LN6@construct_
$LN2@construct_:
; Line 1937
	mov	edx, DWORD PTR _ap$[ebp]
	add	edx, 4
	mov	DWORD PTR _ap$[ebp], edx
	mov	eax, DWORD PTR _ap$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	mov	DWORD PTR _sargp$88767[ebp], ecx
; Line 1938
	mov	edx, DWORD PTR _sargp$88767[ebp]
	push	edx
	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 1939
	jmp	SHORT $LN6@construct_
$LN1@construct_:
; Line 1941
	mov	ecx, DWORD PTR _ap$[ebp]
	add	ecx, 4
	mov	DWORD PTR _ap$[ebp], ecx
	mov	edx, DWORD PTR _ap$[ebp]
	mov	eax, DWORD PTR [edx-4]
	mov	DWORD PTR _bn$[ebp], eax
; Line 1942
	mov	ecx, DWORD PTR _bn$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh1_pkt_addmp
	add	esp, 8
$LN6@construct_:
; Line 1945
	jmp	$LN9@construct_
$LN8@construct_:
; Line 1947
	mov	eax, DWORD PTR _pkt$[ebp]
; Line 1948
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN12@construct_:
	DD	$LN5@construct_
	DD	$LN4@construct_
	DD	$LN3@construct_
	DD	$LN2@construct_
	DD	$LN1@construct_
_construct_packet ENDP
_TEXT	ENDS
EXTRN	_saferealloc:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv70 = -12						; size = 4
_offset$88895 = -8					; size = 4
_body$88894 = -4					; size = 4
_pkt$ = 8						; size = 4
_length$ = 12						; size = 4
_ssh_pkt_ensure PROC
; Line 2013
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2014
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR _length$[ebp]
	jge	SHORT $LN3@ssh_pkt_en
; Line 2015
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _body$88894[ebp], eax
; Line 2016
	cmp	DWORD PTR _body$88894[ebp], 0
	je	SHORT $LN5@ssh_pkt_en
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR _body$88894[ebp]
	sub	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR tv70[ebp], edx
	jmp	SHORT $LN6@ssh_pkt_en
$LN5@ssh_pkt_en:
	mov	DWORD PTR tv70[ebp], 0
$LN6@ssh_pkt_en:
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR _offset$88895[ebp], eax
; Line 2017
	mov	ecx, DWORD PTR _length$[ebp]
	add	ecx, 256				; 00000100H
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [edx+28], ecx
; Line 2018
	push	1
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 2019
	cmp	DWORD PTR _body$88894[ebp], 0
	je	SHORT $LN3@ssh_pkt_en
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, DWORD PTR _offset$88895[ebp]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [ecx+20], eax
$LN3@ssh_pkt_en:
; Line 2021
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_pkt_ensure ENDP
; Function compile flags: /Odtp /RTCsu
_pkt$ = 8						; size = 4
_data$ = 12						; size = 4
_len$ = 16						; size = 4
_ssh_pkt_adddata PROC
; Line 2023
	push	ebp
	mov	ebp, esp
; Line 2024
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 2025
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_ensure
	add	esp, 8
; Line 2026
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR _pkt$[ebp]
	add	eax, DWORD PTR [ecx]
	sub	eax, DWORD PTR _len$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2027
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh_pkt_adddata ENDP
; Function compile flags: /Odtp /RTCsu
_pkt$ = 8						; size = 4
_byte$ = 12						; size = 1
_ssh_pkt_addbyte PROC
; Line 2029
	push	ebp
	mov	ebp, esp
; Line 2030
	push	1
	lea	eax, DWORD PTR _byte$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	call	_ssh_pkt_adddata
	add	esp, 12					; 0000000cH
; Line 2031
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh_pkt_addbyte ENDP
; Function compile flags: /Odtp /RTCsu
_x$ = -8						; size = 4
_pkt$ = 8						; size = 4
_value$ = 12						; size = 4
_ssh_pkt_adduint32 PROC
; Line 2037
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2039
	mov	eax, DWORD PTR _value$[ebp]
	shr	eax, 24					; 00000018H
	mov	BYTE PTR _x$[ebp], al
	mov	ecx, DWORD PTR _value$[ebp]
	shr	ecx, 16					; 00000010H
	mov	BYTE PTR _x$[ebp+1], cl
	mov	edx, DWORD PTR _value$[ebp]
	shr	edx, 8
	mov	BYTE PTR _x$[ebp+2], dl
	mov	al, BYTE PTR _value$[ebp]
	mov	BYTE PTR _x$[ebp+3], al
; Line 2040
	push	4
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_adddata
	add	esp, 12					; 0000000cH
; Line 2041
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@ssh_pkt_ad
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@ssh_pkt_ad:
	DD	1
	DD	$LN4@ssh_pkt_ad
$LN4@ssh_pkt_ad:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@ssh_pkt_ad
$LN3@ssh_pkt_ad:
	DB	120					; 00000078H
	DB	0
_ssh_pkt_adduint32 ENDP
; Function compile flags: /Odtp /RTCsu
_pkt$ = 8						; size = 4
_data$ = 12						; size = 4
_ssh_pkt_addstring PROC
; Line 2059
	push	ebp
	mov	ebp, esp
; Line 2060
	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 2061
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_addstring_str
	add	esp, 8
; Line 2062
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh_pkt_addstring ENDP
; Function compile flags: /Odtp /RTCsu
_pkt$ = 8						; size = 4
_ssh_pkt_addstring_start PROC
; Line 2043
	push	ebp
	mov	ebp, esp
; Line 2044
	push	0
	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 2045
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+24], eax
; Line 2046
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh_pkt_addstring_start ENDP
; Function compile flags: /Odtp /RTCsu
_pkt$ = 8						; size = 4
_data$ = 12						; size = 4
_ssh_pkt_addstring_str PROC
; Line 2048
	push	ebp
	mov	ebp, esp
; Line 2049
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_adddata
	add	esp, 12					; 0000000cH
; Line 2050
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx+24]
	sar	edx, 24					; 00000018H
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [eax+24]
	mov	BYTE PTR [ecx+eax-4], dl
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [ecx]
	sub	eax, DWORD PTR [edx+24]
	sar	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [ecx+24]
	mov	BYTE PTR [edx+ecx-3], al
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [edx]
	sub	ecx, DWORD PTR [eax+24]
	sar	ecx, 8
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [edx+24]
	mov	BYTE PTR [eax+edx-2], cl
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [eax+24]
	mov	BYTE PTR [ecx+eax-1], dl
; Line 2051
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh_pkt_addstring_str ENDP
_TEXT	ENDS
EXTRN	_ssh1_write_bignum:PROC
EXTRN	_ssh1_bignum_length:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_data$ = -8						; size = 4
_len$ = -4						; size = 4
_pkt$ = 8						; size = 4
_b$ = 12						; size = 4
_ssh1_pkt_addmp PROC
; Line 2064
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2065
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ssh1_bignum_length
	add	esp, 4
	mov	DWORD PTR _len$[ebp], eax
; Line 2066
	push	1
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _data$[ebp], eax
; Line 2067
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	call	_ssh1_write_bignum
	add	esp, 8
; Line 2068
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	call	_ssh_pkt_adddata
	add	esp, 12					; 0000000cH
; Line 2069
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 2070
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh1_pkt_addmp ENDP
; Function compile flags: /Odtp /RTCsu
_pkt$ = -4						; size = 4
_pkt_type$ = 8						; size = 4
_ssh1_pkt_init PROC
; Line 2097
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2098
	call	_ssh_new_packet
	mov	DWORD PTR _pkt$[ebp], eax
; Line 2099
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
; Line 2100
	movzx	ecx, BYTE PTR _pkt_type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_addbyte
	add	esp, 8
; Line 2101
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _pkt$[ebp]
	add	ecx, DWORD PTR [edx]
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 2102
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR _pkt_type$[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 2103
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [eax+36], 0
; Line 2104
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [ecx+40], 0
; Line 2105
	mov	eax, DWORD PTR _pkt$[ebp]
; Line 2106
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh1_pkt_init ENDP
; Function compile flags: /Odtp /RTCsu
_pkt$ = -4						; size = 4
_ssh_new_packet PROC
; Line 1159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1160
	push	44					; 0000002cH
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _pkt$[ebp], eax
; Line 1162
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [ecx+20], 0
; Line 1163
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [edx+28], 0
; Line 1165
	mov	eax, DWORD PTR _pkt$[ebp]
; Line 1166
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_new_packet ENDP
; Function compile flags: /Odtp /RTCsu
_pkt$ = -4						; size = 4
_pkt_type$ = 8						; size = 4
_ssh2_pkt_init PROC
; Line 2119
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2120
	call	_ssh_new_packet
	mov	DWORD PTR _pkt$[ebp], eax
; Line 2121
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [eax], 5
; Line 2122
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 2123
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR _pkt_type$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 2124
	movzx	ecx, BYTE PTR _pkt_type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_addbyte
	add	esp, 8
; Line 2125
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _pkt$[ebp]
	add	ecx, DWORD PTR [edx]
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 2126
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [ecx+36], 0
; Line 2127
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [edx+40], 0
; Line 2128
	mov	eax, DWORD PTR _pkt$[ebp]
; Line 2129
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_pkt_init ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = 8						; size = 4
_pkt$ = 12						; size = 4
_ssh2_pkt_send PROC
; Line 2325
	push	ebp
	mov	ebp, esp
; Line 2326
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+312], 0
	je	SHORT $LN2@ssh2_pkt_s
; Line 2327
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_pkt_queue
	add	esp, 8
; Line 2328
	jmp	SHORT $LN3@ssh2_pkt_s
$LN2@ssh2_pkt_s:
; Line 2329
	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_pkt_send_noqueue
	add	esp, 8
$LN3@ssh2_pkt_s:
; Line 2330
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh2_pkt_send ENDP
; Function compile flags: /Odtp /RTCsu
_backlog$ = -8						; size = 4
_len$ = -4						; size = 4
_ssh$ = 8						; size = 4
_pkt$ = 12						; size = 4
_ssh2_pkt_send_noqueue PROC
; Line 2251
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2254
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+96], 0
	je	SHORT $LN3@ssh2_pkt_s@2
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	eax, DWORD PTR [edx+36]
	and	eax, 1
	je	SHORT $LN3@ssh2_pkt_s@2
; Line 2256
	push	0
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_pkt_defer_noqueue
	add	esp, 12					; 0000000cH
; Line 2257
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh_pkt_defersend
	add	esp, 4
; Line 2258
	jmp	$LN4@ssh2_pkt_s@2
$LN3@ssh2_pkt_s@2:
; Line 2260
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_pkt_construct
	add	esp, 8
	mov	DWORD PTR _len$[ebp], eax
; Line 2261
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_s_write
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _backlog$[ebp], eax
; Line 2262
	cmp	DWORD PTR _backlog$[ebp], 32768		; 00008000H
	jle	SHORT $LN2@ssh2_pkt_s@2
; Line 2263
	mov	ecx, DWORD PTR _backlog$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_throttle_all
	add	esp, 12					; 0000000cH
$LN2@ssh2_pkt_s@2:
; Line 2265
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+1628]
	mov	edx, DWORD PTR _pkt$[ebp]
	add	ecx, DWORD PTR [edx+32]
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+1628], ecx
; Line 2269
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+1640], 0
	jne	SHORT $LN1@ssh2_pkt_s@2
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+196], 0
	jne	SHORT $LN1@ssh2_pkt_s@2
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+1636], 0
	je	SHORT $LN1@ssh2_pkt_s@2
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [ecx+1628]
	cmp	eax, DWORD PTR [edx+1636]
	jbe	SHORT $LN1@ssh2_pkt_s@2
; Line 2270
	push	0
	push	-1
	push	OFFSET $SG89049
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_do_ssh2_transport
	add	esp, 16					; 00000010H
$LN1@ssh2_pkt_s@2:
; Line 2272
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_free_packet
	add	esp, 4
$LN4@ssh2_pkt_s@2:
; Line 2273
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_pkt_send_noqueue ENDP
; Function compile flags: /Odtp /RTCsu
tv178 = -52						; size = 4
tv158 = -48						; size = 4
tv156 = -44						; size = 4
_newlen$89016 = -36					; size = 4
_newpayload$89015 = -24					; size = 4
_i$ = -16						; size = 4
_padding$ = -12						; size = 4
_maclen$ = -8						; size = 4
_cipherblk$ = -4					; size = 4
_ssh$ = 8						; size = 4
_pkt$ = 12						; size = 4
_ssh2_pkt_construct PROC
; Line 2137
	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2140
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN9@ssh2_pkt_c
; Line 2141
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_log_outgoing_packet
	add	esp, 8
$LN9@ssh2_pkt_c:
; Line 2143
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+196], 0
	je	SHORT $LN8@ssh2_pkt_c
; Line 2148
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, 5
	sar	edx, 24					; 00000018H
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	BYTE PTR [ecx+1], dl
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 5
	sar	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	BYTE PTR [edx+2], al
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 5
	sar	ecx, 8
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	BYTE PTR [eax+3], cl
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, 5
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	BYTE PTR [ecx+4], dl
; Line 2149
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, 1
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 2150
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+384]
	add	eax, 1
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+384], eax
; Line 2151
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	jmp	$LN10@ssh2_pkt_c
$LN8@ssh2_pkt_c:
; Line 2163
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+128], 0
	je	SHORT $LN7@ssh2_pkt_c
	mov	esi, esp
	lea	ecx, DWORD PTR _newlen$89016[ebp]
	push	ecx
	lea	edx, DWORD PTR _newpayload$89015[ebp]
	push	edx
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 5
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, 5
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN7@ssh2_pkt_c
; Line 2164
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [eax], 5
; Line 2165
	mov	ecx, DWORD PTR _newlen$89016[ebp]
	push	ecx
	mov	edx, DWORD PTR _newpayload$89015[ebp]
	push	edx
	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	call	_ssh_pkt_adddata
	add	esp, 12					; 0000000cH
; Line 2166
	mov	ecx, DWORD PTR _newpayload$89015[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN7@ssh2_pkt_c:
; Line 2176
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+96], 0
	je	SHORT $LN12@ssh2_pkt_c
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR tv156[ebp], edx
	jmp	SHORT $LN13@ssh2_pkt_c
$LN12@ssh2_pkt_c:
	mov	DWORD PTR tv156[ebp], 8
$LN13@ssh2_pkt_c:
	mov	eax, DWORD PTR tv156[ebp]
	mov	DWORD PTR _cipherblk$[ebp], eax
; Line 2177
	cmp	DWORD PTR _cipherblk$[ebp], 8
	jge	SHORT $LN14@ssh2_pkt_c
	mov	DWORD PTR tv158[ebp], 8
	jmp	SHORT $LN15@ssh2_pkt_c
$LN14@ssh2_pkt_c:
	mov	ecx, DWORD PTR _cipherblk$[ebp]
	mov	DWORD PTR tv158[ebp], ecx
$LN15@ssh2_pkt_c:
	mov	edx, DWORD PTR tv158[ebp]
	mov	DWORD PTR _cipherblk$[ebp], edx
; Line 2178
	mov	DWORD PTR _padding$[ebp], 4
; Line 2179
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _padding$[ebp]
	mov	edx, DWORD PTR _pkt$[ebp]
	cmp	ecx, DWORD PTR [edx+4]
	jge	SHORT $LN6@ssh2_pkt_c
; Line 2180
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [eax+4]
	sub	edx, DWORD PTR [ecx]
	mov	DWORD PTR _padding$[ebp], edx
$LN6@ssh2_pkt_c:
; Line 2182
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR _padding$[ebp]
	cdq
	idiv	DWORD PTR _cipherblk$[ebp]
	mov	eax, DWORD PTR _cipherblk$[ebp]
	sub	eax, edx
	cdq
	idiv	DWORD PTR _cipherblk$[ebp]
	add	edx, DWORD PTR _padding$[ebp]
	mov	DWORD PTR _padding$[ebp], edx
; Line 2183
	cmp	DWORD PTR _padding$[ebp], 255		; 000000ffH
	jle	SHORT $LN16@ssh2_pkt_c
	push	2183					; 00000887H
	push	OFFSET $SG89020
	push	OFFSET $SG89021
	call	__wassert
	add	esp, 12					; 0000000cH
$LN16@ssh2_pkt_c:
; Line 2184
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+112], 0
	je	SHORT $LN17@ssh2_pkt_c
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR tv178[ebp], edx
	jmp	SHORT $LN18@ssh2_pkt_c
$LN17@ssh2_pkt_c:
	mov	DWORD PTR tv178[ebp], 0
$LN18@ssh2_pkt_c:
	mov	eax, DWORD PTR tv178[ebp]
	mov	DWORD PTR _maclen$[ebp], eax
; Line 2185
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, DWORD PTR _padding$[ebp]
	add	edx, DWORD PTR _maclen$[ebp]
	push	edx
	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	call	_ssh_pkt_ensure
	add	esp, 8
; Line 2186
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	al, BYTE PTR _padding$[ebp]
	mov	BYTE PTR [edx+4], al
; Line 2187
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@ssh2_pkt_c
$LN4@ssh2_pkt_c:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN5@ssh2_pkt_c:
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR _padding$[ebp]
	jge	SHORT $LN3@ssh2_pkt_c
; Line 2188
	call	_random_byte
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [ecx+16]
	mov	BYTE PTR [edx+ecx], al
	jmp	SHORT $LN4@ssh2_pkt_c
$LN3@ssh2_pkt_c:
; Line 2189
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _padding$[ebp]
	lea	edx, DWORD PTR [eax+ecx-4]
	sar	edx, 24					; 00000018H
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	BYTE PTR [ecx], dl
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _padding$[ebp]
	lea	edx, DWORD PTR [eax+ecx-4]
	sar	edx, 16					; 00000010H
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	BYTE PTR [ecx+1], dl
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _padding$[ebp]
	lea	edx, DWORD PTR [eax+ecx-4]
	sar	edx, 8
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	BYTE PTR [ecx+2], dl
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _padding$[ebp]
	lea	edx, DWORD PTR [eax+ecx-4]
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	BYTE PTR [ecx+3], dl
; Line 2190
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+112], 0
	je	SHORT $LN2@ssh2_pkt_c
; Line 2193
	mov	esi, esp
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+384]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR _padding$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+112]
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@ssh2_pkt_c:
; Line 2194
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+384]
	add	eax, 1
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+384], eax
; Line 2196
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+96], 0
	je	SHORT $LN1@ssh2_pkt_c
; Line 2198
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _padding$[ebp]
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@ssh2_pkt_c:
; Line 2200
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _padding$[ebp]
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [edx+32], ecx
; Line 2203
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+20], edx
; Line 2204
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR _padding$[ebp]
	add	eax, DWORD PTR _maclen$[ebp]
$LN10@ssh2_pkt_c:
; Line 2205
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@ssh2_pkt_c
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN22@ssh2_pkt_c:
	DD	2
	DD	$LN21@ssh2_pkt_c
$LN21@ssh2_pkt_c:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN19@ssh2_pkt_c
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN20@ssh2_pkt_c
$LN20@ssh2_pkt_c:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN19@ssh2_pkt_c:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
_ssh2_pkt_construct ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_slen$ = -84						; size = 4
_str$ = -72						; size = 4
_blanks$ = -60						; size = 48
_nblanks$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_ssh$ = 8						; size = 4
_pkt$ = 12						; size = 4
_ssh2_log_outgoing_packet PROC
; Line 1422
	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	edi
	lea	edi, DWORD PTR [ebp-88]
	mov	ecx, 22					; 00000016H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1423
	mov	DWORD PTR _nblanks$[ebp], 0
; Line 1438
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [eax+20]
	sub	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, edx
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1439
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 1443
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+544], 0
	je	$LN17@ssh2_log_o
	mov	edx, DWORD PTR _pkt$[ebp]
	cmp	DWORD PTR [edx+8], 94			; 0000005eH
	je	SHORT $LN16@ssh2_log_o
	mov	eax, DWORD PTR _pkt$[ebp]
	cmp	DWORD PTR [eax+8], 95			; 0000005fH
	jne	SHORT $LN17@ssh2_log_o
$LN16@ssh2_log_o:
; Line 1445
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	call	_ssh_pkt_getuint32
	add	esp, 4
; Line 1446
	mov	edx, DWORD PTR _pkt$[ebp]
	cmp	DWORD PTR [edx+8], 95			; 0000005fH
	jne	SHORT $LN15@ssh2_log_o
; Line 1447
	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	call	_ssh_pkt_getuint32
	add	esp, 4
$LN15@ssh2_log_o:
; Line 1448
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	add	edx, 4
	mov	eax, DWORD PTR _nblanks$[ebp]
	imul	eax, 12					; 0000000cH
	mov	DWORD PTR _blanks$[ebp+eax], edx
; Line 1449
	mov	ecx, DWORD PTR _nblanks$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	DWORD PTR _blanks$[ebp+ecx+8], 2
; Line 1450
	lea	edx, DWORD PTR _slen$[ebp]
	push	edx
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 1451
	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN17@ssh2_log_o
; Line 1452
	mov	edx, DWORD PTR _nblanks$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _slen$[ebp]
	mov	DWORD PTR _blanks$[ebp+edx+4], eax
; Line 1453
	mov	ecx, DWORD PTR _nblanks$[ebp]
	add	ecx, 1
	mov	DWORD PTR _nblanks$[ebp], ecx
$LN17@ssh2_log_o:
; Line 1458
	mov	edx, DWORD PTR _pkt$[ebp]
	cmp	DWORD PTR [edx+8], 50			; 00000032H
	jne	$LN13@ssh2_log_o
	push	118					; 00000076H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	$LN13@ssh2_log_o
; Line 1460
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [edx+24], 0
; Line 1461
	lea	eax, DWORD PTR _slen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 1462
	lea	eax, DWORD PTR _slen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 1463
	lea	eax, DWORD PTR _slen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 1464
	cmp	DWORD PTR _slen$[ebp], 8
	jne	$LN12@ssh2_log_o
	push	8
	push	OFFSET $SG88466
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN12@ssh2_log_o
; Line 1465
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	call	_ssh2_pkt_getbool
	add	esp, 4
; Line 1467
	mov	edx, DWORD PTR _nblanks$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _blanks$[ebp+edx], ecx
; Line 1468
	mov	edx, DWORD PTR _nblanks$[ebp]
	imul	edx, 12					; 0000000cH
	mov	DWORD PTR _blanks$[ebp+edx+8], 1
; Line 1469
	lea	eax, DWORD PTR _slen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 1470
	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN12@ssh2_log_o
; Line 1471
	mov	eax, DWORD PTR _nblanks$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	sub	edx, DWORD PTR _blanks$[ebp+eax]
	mov	eax, DWORD PTR _nblanks$[ebp]
	imul	eax, 12					; 0000000cH
	mov	DWORD PTR _blanks$[ebp+eax+4], edx
; Line 1472
	mov	ecx, DWORD PTR _nblanks$[ebp]
	add	ecx, 1
	mov	DWORD PTR _nblanks$[ebp], ecx
; Line 1475
	lea	edx, DWORD PTR _slen$[ebp]
	push	edx
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 1476
	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN12@ssh2_log_o
; Line 1478
	mov	edx, DWORD PTR _nblanks$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR _blanks$[ebp+edx]
	mov	edx, DWORD PTR _nblanks$[ebp]
	sub	edx, 1
	imul	edx, 12					; 0000000cH
	mov	DWORD PTR _blanks$[ebp+edx+4], ecx
$LN12@ssh2_log_o:
; Line 1481
	jmp	$LN9@ssh2_log_o
$LN13@ssh2_log_o:
; Line 1483
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+348], 4
	jne	$LN8@ssh2_log_o
	mov	ecx, DWORD PTR _pkt$[ebp]
	cmp	DWORD PTR [ecx+8], 61			; 0000003dH
	jne	$LN8@ssh2_log_o
	push	118					; 00000076H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	$LN8@ssh2_log_o
; Line 1486
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [ecx+24], 0
; Line 1487
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_getuint32
	add	esp, 4
; Line 1488
	mov	eax, DWORD PTR _nblanks$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR _blanks$[ebp+eax], edx
; Line 1489
	mov	eax, DWORD PTR _nblanks$[ebp]
	imul	eax, 12					; 0000000cH
	mov	DWORD PTR _blanks$[ebp+eax+8], 1
$LN7@ssh2_log_o:
; Line 1490
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN6@ssh2_log_o
; Line 1491
	lea	edx, DWORD PTR _slen$[ebp]
	push	edx
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 1492
	cmp	DWORD PTR _str$[ebp], 0
	jne	SHORT $LN5@ssh2_log_o
; Line 1493
	jmp	SHORT $LN6@ssh2_log_o
$LN5@ssh2_log_o:
; Line 1494
	jmp	SHORT $LN7@ssh2_log_o
$LN6@ssh2_log_o:
; Line 1495
	mov	edx, DWORD PTR _nblanks$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR _blanks$[ebp+edx]
	mov	edx, DWORD PTR _nblanks$[ebp]
	imul	edx, 12					; 0000000cH
	mov	DWORD PTR _blanks$[ebp+edx+4], ecx
; Line 1496
	mov	eax, DWORD PTR _nblanks$[ebp]
	add	eax, 1
	mov	DWORD PTR _nblanks$[ebp], eax
; Line 1497
	jmp	$LN9@ssh2_log_o
$LN8@ssh2_log_o:
; Line 1498
	mov	ecx, DWORD PTR _pkt$[ebp]
	cmp	DWORD PTR [ecx+8], 98			; 00000062H
	jne	$LN9@ssh2_log_o
	push	118					; 00000076H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	$LN9@ssh2_log_o
; Line 1509
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [ecx+24], 0
; Line 1510
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_getuint32
	add	esp, 4
; Line 1511
	lea	eax, DWORD PTR _slen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 1512
	cmp	DWORD PTR _slen$[ebp], 7
	jne	$LN9@ssh2_log_o
	push	0
	push	OFFSET $SG88478
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN9@ssh2_log_o
; Line 1513
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	call	_ssh2_pkt_getbool
	add	esp, 4
; Line 1514
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh2_pkt_getbool
	add	esp, 4
; Line 1515
	lea	eax, DWORD PTR _slen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 1516
	mov	eax, DWORD PTR _nblanks$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR _blanks$[ebp+eax], edx
; Line 1517
	mov	eax, DWORD PTR _nblanks$[ebp]
	imul	eax, 12					; 0000000cH
	mov	DWORD PTR _blanks$[ebp+eax+8], 1
; Line 1518
	lea	ecx, DWORD PTR _slen$[ebp]
	push	ecx
	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 1519
	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN9@ssh2_log_o
; Line 1520
	mov	ecx, DWORD PTR _nblanks$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+24]
	sub	eax, DWORD PTR _blanks$[ebp+ecx]
	mov	ecx, DWORD PTR _nblanks$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	DWORD PTR _blanks$[ebp+ecx+4], eax
; Line 1521
	mov	edx, DWORD PTR _nblanks$[ebp]
	add	edx, 1
	mov	DWORD PTR _nblanks$[ebp], edx
$LN9@ssh2_log_o:
; Line 1530
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	add	ecx, 384				; 00000180H
	push	ecx
	lea	edx, DWORD PTR _blanks$[ebp]
	push	edx
	mov	eax, DWORD PTR _nblanks$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movzx	ecx, BYTE PTR [eax+5]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+348]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+344]
	push	edx
	call	_ssh2_pkt_type
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movzx	edx, BYTE PTR [ecx+5]
	push	edx
	push	1
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_log_packet
	add	esp, 44					; 0000002cH
; Line 1536
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	sub	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _pkt$[ebp]
	add	ecx, DWORD PTR [edx]
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1537
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@ssh2_log_o
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 88					; 00000058H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN24@ssh2_log_o:
	DD	3
	DD	$LN23@ssh2_log_o
$LN23@ssh2_log_o:
	DD	-60					; ffffffc4H
	DD	48					; 00000030H
	DD	$LN20@ssh2_log_o
	DD	-72					; ffffffb8H
	DD	4
	DD	$LN21@ssh2_log_o
	DD	-84					; ffffffacH
	DD	4
	DD	$LN22@ssh2_log_o
$LN22@ssh2_log_o:
	DB	115					; 00000073H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN21@ssh2_log_o:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN20@ssh2_log_o:
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	115					; 00000073H
	DB	0
_ssh2_log_outgoing_packet ENDP
; Function compile flags: /Odtp /RTCsu
_pkt_kctx$ = 8						; size = 4
_pkt_actx$ = 12						; size = 4
_type$ = 16						; size = 4
_ssh2_pkt_type PROC
; Line 233
	push	ebp
	mov	ebp, esp
; Line 234
	cmp	DWORD PTR _type$[ebp], 60		; 0000003cH
	jne	SHORT $LN45@ssh2_pkt_t
	cmp	DWORD PTR _pkt_actx$[ebp], 3
	jne	SHORT $LN45@ssh2_pkt_t
	mov	eax, OFFSET $SG87494
	jmp	$LN46@ssh2_pkt_t
$LN45@ssh2_pkt_t:
; Line 235
	cmp	DWORD PTR _type$[ebp], 61		; 0000003dH
	jne	SHORT $LN44@ssh2_pkt_t
	cmp	DWORD PTR _pkt_actx$[ebp], 3
	jne	SHORT $LN44@ssh2_pkt_t
	mov	eax, OFFSET $SG87496
	jmp	$LN46@ssh2_pkt_t
$LN44@ssh2_pkt_t:
; Line 236
	cmp	DWORD PTR _type$[ebp], 63		; 0000003fH
	jne	SHORT $LN43@ssh2_pkt_t
	cmp	DWORD PTR _pkt_actx$[ebp], 3
	jne	SHORT $LN43@ssh2_pkt_t
	mov	eax, OFFSET $SG87498
	jmp	$LN46@ssh2_pkt_t
$LN43@ssh2_pkt_t:
; Line 237
	cmp	DWORD PTR _type$[ebp], 64		; 00000040H
	jne	SHORT $LN42@ssh2_pkt_t
	cmp	DWORD PTR _pkt_actx$[ebp], 3
	jne	SHORT $LN42@ssh2_pkt_t
	mov	eax, OFFSET $SG87500
	jmp	$LN46@ssh2_pkt_t
$LN42@ssh2_pkt_t:
; Line 238
	cmp	DWORD PTR _type$[ebp], 65		; 00000041H
	jne	SHORT $LN41@ssh2_pkt_t
	cmp	DWORD PTR _pkt_actx$[ebp], 3
	jne	SHORT $LN41@ssh2_pkt_t
	mov	eax, OFFSET $SG87502
	jmp	$LN46@ssh2_pkt_t
$LN41@ssh2_pkt_t:
; Line 239
	cmp	DWORD PTR _type$[ebp], 66		; 00000042H
	jne	SHORT $LN40@ssh2_pkt_t
	cmp	DWORD PTR _pkt_actx$[ebp], 3
	jne	SHORT $LN40@ssh2_pkt_t
	mov	eax, OFFSET $SG87504
	jmp	$LN46@ssh2_pkt_t
$LN40@ssh2_pkt_t:
; Line 240
	cmp	DWORD PTR _type$[ebp], 1
	jne	SHORT $LN39@ssh2_pkt_t
	mov	eax, OFFSET $SG87506
	jmp	$LN46@ssh2_pkt_t
$LN39@ssh2_pkt_t:
; Line 241
	cmp	DWORD PTR _type$[ebp], 2
	jne	SHORT $LN38@ssh2_pkt_t
	mov	eax, OFFSET $SG87508
	jmp	$LN46@ssh2_pkt_t
$LN38@ssh2_pkt_t:
; Line 242
	cmp	DWORD PTR _type$[ebp], 3
	jne	SHORT $LN37@ssh2_pkt_t
	mov	eax, OFFSET $SG87510
	jmp	$LN46@ssh2_pkt_t
$LN37@ssh2_pkt_t:
; Line 243
	cmp	DWORD PTR _type$[ebp], 4
	jne	SHORT $LN36@ssh2_pkt_t
	mov	eax, OFFSET $SG87512
	jmp	$LN46@ssh2_pkt_t
$LN36@ssh2_pkt_t:
; Line 244
	cmp	DWORD PTR _type$[ebp], 5
	jne	SHORT $LN35@ssh2_pkt_t
	mov	eax, OFFSET $SG87514
	jmp	$LN46@ssh2_pkt_t
$LN35@ssh2_pkt_t:
; Line 245
	cmp	DWORD PTR _type$[ebp], 6
	jne	SHORT $LN34@ssh2_pkt_t
	mov	eax, OFFSET $SG87516
	jmp	$LN46@ssh2_pkt_t
$LN34@ssh2_pkt_t:
; Line 246
	cmp	DWORD PTR _type$[ebp], 20		; 00000014H
	jne	SHORT $LN33@ssh2_pkt_t
	mov	eax, OFFSET $SG87518
	jmp	$LN46@ssh2_pkt_t
$LN33@ssh2_pkt_t:
; Line 247
	cmp	DWORD PTR _type$[ebp], 21		; 00000015H
	jne	SHORT $LN32@ssh2_pkt_t
	mov	eax, OFFSET $SG87520
	jmp	$LN46@ssh2_pkt_t
$LN32@ssh2_pkt_t:
; Line 248
	cmp	DWORD PTR _type$[ebp], 30		; 0000001eH
	jne	SHORT $LN31@ssh2_pkt_t
	cmp	DWORD PTR _pkt_kctx$[ebp], 1
	jne	SHORT $LN31@ssh2_pkt_t
	mov	eax, OFFSET $SG87522
	jmp	$LN46@ssh2_pkt_t
$LN31@ssh2_pkt_t:
; Line 249
	cmp	DWORD PTR _type$[ebp], 31		; 0000001fH
	jne	SHORT $LN30@ssh2_pkt_t
	cmp	DWORD PTR _pkt_kctx$[ebp], 1
	jne	SHORT $LN30@ssh2_pkt_t
	mov	eax, OFFSET $SG87524
	jmp	$LN46@ssh2_pkt_t
$LN30@ssh2_pkt_t:
; Line 250
	cmp	DWORD PTR _type$[ebp], 30		; 0000001eH
	jne	SHORT $LN29@ssh2_pkt_t
	cmp	DWORD PTR _pkt_kctx$[ebp], 2
	jne	SHORT $LN29@ssh2_pkt_t
	mov	eax, OFFSET $SG87526
	jmp	$LN46@ssh2_pkt_t
$LN29@ssh2_pkt_t:
; Line 251
	cmp	DWORD PTR _type$[ebp], 31		; 0000001fH
	jne	SHORT $LN28@ssh2_pkt_t
	cmp	DWORD PTR _pkt_kctx$[ebp], 2
	jne	SHORT $LN28@ssh2_pkt_t
	mov	eax, OFFSET $SG87528
	jmp	$LN46@ssh2_pkt_t
$LN28@ssh2_pkt_t:
; Line 252
	cmp	DWORD PTR _type$[ebp], 32		; 00000020H
	jne	SHORT $LN27@ssh2_pkt_t
	cmp	DWORD PTR _pkt_kctx$[ebp], 2
	jne	SHORT $LN27@ssh2_pkt_t
	mov	eax, OFFSET $SG87530
	jmp	$LN46@ssh2_pkt_t
$LN27@ssh2_pkt_t:
; Line 253
	cmp	DWORD PTR _type$[ebp], 33		; 00000021H
	jne	SHORT $LN26@ssh2_pkt_t
	cmp	DWORD PTR _pkt_kctx$[ebp], 2
	jne	SHORT $LN26@ssh2_pkt_t
	mov	eax, OFFSET $SG87532
	jmp	$LN46@ssh2_pkt_t
$LN26@ssh2_pkt_t:
; Line 254
	cmp	DWORD PTR _type$[ebp], 30		; 0000001eH
	jne	SHORT $LN25@ssh2_pkt_t
	cmp	DWORD PTR _pkt_kctx$[ebp], 3
	jne	SHORT $LN25@ssh2_pkt_t
	mov	eax, OFFSET $SG87534
	jmp	$LN46@ssh2_pkt_t
$LN25@ssh2_pkt_t:
; Line 255
	cmp	DWORD PTR _type$[ebp], 31		; 0000001fH
	jne	SHORT $LN24@ssh2_pkt_t
	cmp	DWORD PTR _pkt_kctx$[ebp], 3
	jne	SHORT $LN24@ssh2_pkt_t
	mov	eax, OFFSET $SG87536
	jmp	$LN46@ssh2_pkt_t
$LN24@ssh2_pkt_t:
; Line 256
	cmp	DWORD PTR _type$[ebp], 32		; 00000020H
	jne	SHORT $LN23@ssh2_pkt_t
	cmp	DWORD PTR _pkt_kctx$[ebp], 3
	jne	SHORT $LN23@ssh2_pkt_t
	mov	eax, OFFSET $SG87538
	jmp	$LN46@ssh2_pkt_t
$LN23@ssh2_pkt_t:
; Line 257
	cmp	DWORD PTR _type$[ebp], 50		; 00000032H
	jne	SHORT $LN22@ssh2_pkt_t
	mov	eax, OFFSET $SG87540
	jmp	$LN46@ssh2_pkt_t
$LN22@ssh2_pkt_t:
; Line 258
	cmp	DWORD PTR _type$[ebp], 51		; 00000033H
	jne	SHORT $LN21@ssh2_pkt_t
	mov	eax, OFFSET $SG87542
	jmp	$LN46@ssh2_pkt_t
$LN21@ssh2_pkt_t:
; Line 259
	cmp	DWORD PTR _type$[ebp], 52		; 00000034H
	jne	SHORT $LN20@ssh2_pkt_t
	mov	eax, OFFSET $SG87544
	jmp	$LN46@ssh2_pkt_t
$LN20@ssh2_pkt_t:
; Line 260
	cmp	DWORD PTR _type$[ebp], 53		; 00000035H
	jne	SHORT $LN19@ssh2_pkt_t
	mov	eax, OFFSET $SG87546
	jmp	$LN46@ssh2_pkt_t
$LN19@ssh2_pkt_t:
; Line 261
	cmp	DWORD PTR _type$[ebp], 60		; 0000003cH
	jne	SHORT $LN18@ssh2_pkt_t
	cmp	DWORD PTR _pkt_actx$[ebp], 1
	jne	SHORT $LN18@ssh2_pkt_t
	mov	eax, OFFSET $SG87548
	jmp	$LN46@ssh2_pkt_t
$LN18@ssh2_pkt_t:
; Line 262
	cmp	DWORD PTR _type$[ebp], 60		; 0000003cH
	jne	SHORT $LN17@ssh2_pkt_t
	cmp	DWORD PTR _pkt_actx$[ebp], 2
	jne	SHORT $LN17@ssh2_pkt_t
	mov	eax, OFFSET $SG87550
	jmp	$LN46@ssh2_pkt_t
$LN17@ssh2_pkt_t:
; Line 263
	cmp	DWORD PTR _type$[ebp], 60		; 0000003cH
	jne	SHORT $LN16@ssh2_pkt_t
	cmp	DWORD PTR _pkt_actx$[ebp], 4
	jne	SHORT $LN16@ssh2_pkt_t
	mov	eax, OFFSET $SG87552
	jmp	$LN46@ssh2_pkt_t
$LN16@ssh2_pkt_t:
; Line 264
	cmp	DWORD PTR _type$[ebp], 61		; 0000003dH
	jne	SHORT $LN15@ssh2_pkt_t
	cmp	DWORD PTR _pkt_actx$[ebp], 4
	jne	SHORT $LN15@ssh2_pkt_t
	mov	eax, OFFSET $SG87554
	jmp	$LN46@ssh2_pkt_t
$LN15@ssh2_pkt_t:
; Line 265
	cmp	DWORD PTR _type$[ebp], 80		; 00000050H
	jne	SHORT $LN14@ssh2_pkt_t
	mov	eax, OFFSET $SG87556
	jmp	$LN46@ssh2_pkt_t
$LN14@ssh2_pkt_t:
; Line 266
	cmp	DWORD PTR _type$[ebp], 81		; 00000051H
	jne	SHORT $LN13@ssh2_pkt_t
	mov	eax, OFFSET $SG87558
	jmp	$LN46@ssh2_pkt_t
$LN13@ssh2_pkt_t:
; Line 267
	cmp	DWORD PTR _type$[ebp], 82		; 00000052H
	jne	SHORT $LN12@ssh2_pkt_t
	mov	eax, OFFSET $SG87560
	jmp	$LN46@ssh2_pkt_t
$LN12@ssh2_pkt_t:
; Line 268
	cmp	DWORD PTR _type$[ebp], 90		; 0000005aH
	jne	SHORT $LN11@ssh2_pkt_t
	mov	eax, OFFSET $SG87562
	jmp	$LN46@ssh2_pkt_t
$LN11@ssh2_pkt_t:
; Line 269
	cmp	DWORD PTR _type$[ebp], 91		; 0000005bH
	jne	SHORT $LN10@ssh2_pkt_t
	mov	eax, OFFSET $SG87564
	jmp	SHORT $LN46@ssh2_pkt_t
$LN10@ssh2_pkt_t:
; Line 270
	cmp	DWORD PTR _type$[ebp], 92		; 0000005cH
	jne	SHORT $LN9@ssh2_pkt_t
	mov	eax, OFFSET $SG87566
	jmp	SHORT $LN46@ssh2_pkt_t
$LN9@ssh2_pkt_t:
; Line 271
	cmp	DWORD PTR _type$[ebp], 93		; 0000005dH
	jne	SHORT $LN8@ssh2_pkt_t
	mov	eax, OFFSET $SG87568
	jmp	SHORT $LN46@ssh2_pkt_t
$LN8@ssh2_pkt_t:
; Line 272
	cmp	DWORD PTR _type$[ebp], 94		; 0000005eH
	jne	SHORT $LN7@ssh2_pkt_t
	mov	eax, OFFSET $SG87570
	jmp	SHORT $LN46@ssh2_pkt_t
$LN7@ssh2_pkt_t:
; Line 273
	cmp	DWORD PTR _type$[ebp], 95		; 0000005fH
	jne	SHORT $LN6@ssh2_pkt_t
	mov	eax, OFFSET $SG87572
	jmp	SHORT $LN46@ssh2_pkt_t
$LN6@ssh2_pkt_t:
; Line 274
	cmp	DWORD PTR _type$[ebp], 96		; 00000060H
	jne	SHORT $LN5@ssh2_pkt_t
	mov	eax, OFFSET $SG87574
	jmp	SHORT $LN46@ssh2_pkt_t
$LN5@ssh2_pkt_t:
; Line 275
	cmp	DWORD PTR _type$[ebp], 97		; 00000061H
	jne	SHORT $LN4@ssh2_pkt_t
	mov	eax, OFFSET $SG87576
	jmp	SHORT $LN46@ssh2_pkt_t
$LN4@ssh2_pkt_t:
; Line 276
	cmp	DWORD PTR _type$[ebp], 98		; 00000062H
	jne	SHORT $LN3@ssh2_pkt_t
	mov	eax, OFFSET $SG87578
	jmp	SHORT $LN46@ssh2_pkt_t
$LN3@ssh2_pkt_t:
; Line 277
	cmp	DWORD PTR _type$[ebp], 99		; 00000063H
	jne	SHORT $LN2@ssh2_pkt_t
	mov	eax, OFFSET $SG87580
	jmp	SHORT $LN46@ssh2_pkt_t
$LN2@ssh2_pkt_t:
; Line 278
	cmp	DWORD PTR _type$[ebp], 100		; 00000064H
	jne	SHORT $LN1@ssh2_pkt_t
	mov	eax, OFFSET $SG87582
	jmp	SHORT $LN46@ssh2_pkt_t
$LN1@ssh2_pkt_t:
; Line 279
	mov	eax, OFFSET $SG87583
$LN46@ssh2_pkt_t:
; Line 280
	pop	ebp
	ret	0
_ssh2_pkt_type ENDP
; Function compile flags: /Odtp /RTCsu
_ipkt$89060 = -8					; size = 4
_len$ = -4						; size = 4
_ssh$ = 8						; size = 4
_pkt$ = 12						; size = 4
_noignore$ = 16						; size = 4
_ssh2_pkt_defer_noqueue PROC
; Line 2279
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2283
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+96], 0
	je	SHORT $LN2@ssh2_pkt_d
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	eax, DWORD PTR [edx+36]
	and	eax, 1
	je	SHORT $LN2@ssh2_pkt_d
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+320], 0
	jne	SHORT $LN2@ssh2_pkt_d
	cmp	DWORD PTR _noignore$[ebp], 0
	jne	SHORT $LN2@ssh2_pkt_d
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+80]
	and	eax, 512				; 00000200H
	jne	SHORT $LN2@ssh2_pkt_d
; Line 2288
	push	2
	call	_ssh2_pkt_init
	add	esp, 4
	mov	DWORD PTR _ipkt$89060[ebp], eax
; Line 2289
	mov	ecx, DWORD PTR _ipkt$89060[ebp]
	push	ecx
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 2290
	push	1
	mov	edx, DWORD PTR _ipkt$89060[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_pkt_defer_noqueue
	add	esp, 12					; 0000000cH
$LN2@ssh2_pkt_d:
; Line 2292
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_pkt_construct
	add	esp, 8
	mov	DWORD PTR _len$[ebp], eax
; Line 2293
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	add	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	ecx, DWORD PTR [edx+324]
	jle	SHORT $LN1@ssh2_pkt_d
; Line 2294
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _len$[ebp]
	lea	eax, DWORD PTR [ecx+edx+128]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+324], eax
; Line 2297
	push	1
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+324]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+316]
	push	edx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+316], eax
$LN1@ssh2_pkt_d:
; Line 2299
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+316]
	mov	ecx, DWORD PTR _ssh$[ebp]
	add	eax, DWORD PTR [ecx+320]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2300
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+320]
	add	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+320], eax
; Line 2301
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+1632]
	mov	ecx, DWORD PTR _pkt$[ebp]
	add	eax, DWORD PTR [ecx+32]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+1632], eax
; Line 2302
	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	call	_ssh_free_packet
	add	esp, 4
; Line 2303
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_pkt_defer_noqueue ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = 8						; size = 4
_pkt$ = 12						; size = 4
_ssh2_pkt_queue PROC
; Line 2309
	push	ebp
	mov	ebp, esp
; Line 2310
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+312], 0
	jne	SHORT $LN4@ssh2_pkt_q
	push	2310					; 00000906H
	push	OFFSET $SG89072
	push	OFFSET $SG89073
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@ssh2_pkt_q:
; Line 2312
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [edx+304]
	cmp	ecx, DWORD PTR [eax+308]
	jl	SHORT $LN1@ssh2_pkt_q
; Line 2313
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+304]
	add	eax, 32					; 00000020H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+308], eax
; Line 2314
	push	4
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+308]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+300]
	push	edx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+300], eax
$LN1@ssh2_pkt_q:
; Line 2317
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+304]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+300]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [edx+eax*4], ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+304]
	add	eax, 1
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+304], eax
; Line 2318
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh2_pkt_queue ENDP
; Function compile flags: /Odtp /RTCsu
_backlog$ = -4						; size = 4
_ssh$ = 8						; size = 4
_ssh_pkt_defersend PROC
; Line 2358
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2360
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+316]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_s_write
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _backlog$[ebp], eax
; Line 2361
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+324], 0
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+320], 0
; Line 2362
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+316]
	push	edx
	call	_safefree
	add	esp, 4
; Line 2363
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+316], 0
; Line 2364
	cmp	DWORD PTR _backlog$[ebp], 32768		; 00008000H
	jle	SHORT $LN2@ssh_pkt_de
; Line 2365
	mov	ecx, DWORD PTR _backlog$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_throttle_all
	add	esp, 12					; 0000000cH
$LN2@ssh_pkt_de:
; Line 2367
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+1628]
	mov	edx, DWORD PTR _ssh$[ebp]
	add	ecx, DWORD PTR [edx+1632]
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+1628], ecx
; Line 2371
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+1640], 0
	jne	SHORT $LN1@ssh_pkt_de
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+196], 0
	jne	SHORT $LN1@ssh_pkt_de
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+1636], 0
	je	SHORT $LN1@ssh_pkt_de
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [ecx+1628]
	cmp	eax, DWORD PTR [edx+1636]
	jbe	SHORT $LN1@ssh_pkt_de
; Line 2372
	push	0
	push	-1
	push	OFFSET $SG89101
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_do_ssh2_transport
	add	esp, 16					; 00000010H
$LN1@ssh_pkt_de:
; Line 2373
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+1632], 0
; Line 2374
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_pkt_defersend ENDP
; Function compile flags: /Odtp /RTCsu
_value$ = -4						; size = 4
_pkt$ = 8						; size = 4
_ssh_pkt_getuint32 PROC
; Line 2490
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2492
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx+24]
	cmp	edx, 4
	jge	SHORT $LN1@ssh_pkt_ge
; Line 2493
	xor	eax, eax
	jmp	SHORT $LN2@ssh_pkt_ge
$LN1@ssh_pkt_ge:
; Line 2494
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+24]
	movzx	ecx, BYTE PTR [ecx+eax]
	shl	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [edx+24]
	movzx	eax, BYTE PTR [eax+edx+1]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [edx+24]
	movzx	eax, BYTE PTR [eax+edx+2]
	shl	eax, 8
	or	ecx, eax
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [edx+24]
	movzx	eax, BYTE PTR [eax+edx+3]
	or	ecx, eax
	mov	DWORD PTR _value$[ebp], ecx
; Line 2495
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	add	edx, 4
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [eax+24], edx
; Line 2496
	mov	eax, DWORD PTR _value$[ebp]
$LN2@ssh_pkt_ge:
; Line 2497
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_pkt_getuint32 ENDP
; Function compile flags: /Odtp /RTCsu
_value$ = -4						; size = 4
_pkt$ = 8						; size = 4
_ssh2_pkt_getbool PROC
; Line 2499
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2501
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx+24]
	cmp	edx, 1
	jge	SHORT $LN1@ssh2_pkt_g
; Line 2502
	xor	eax, eax
	jmp	SHORT $LN2@ssh2_pkt_g
$LN1@ssh2_pkt_g:
; Line 2503
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+24]
	movzx	ecx, BYTE PTR [ecx+eax]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	DWORD PTR _value$[ebp], ecx
; Line 2504
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+24]
	add	eax, 1
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 2505
	mov	eax, DWORD PTR _value$[ebp]
$LN2@ssh2_pkt_g:
; Line 2506
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_pkt_getbool ENDP
_TEXT	ENDS
EXTRN	_toint:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_len$ = -4						; size = 4
_pkt$ = 8						; size = 4
_p$ = 12						; size = 4
_length$ = 16						; size = 4
_ssh_pkt_getstring PROC
; Line 2508
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2510
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], 0
; Line 2511
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 2512
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [edx]
	sub	ecx, DWORD PTR [eax+24]
	cmp	ecx, 4
	jge	SHORT $LN3@ssh_pkt_ge@2
; Line 2513
	jmp	$LN4@ssh_pkt_ge@2
$LN3@ssh_pkt_ge@2:
; Line 2514
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	movzx	eax, BYTE PTR [eax+edx]
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [ecx+24]
	movzx	edx, BYTE PTR [edx+ecx+1]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [ecx+24]
	movzx	edx, BYTE PTR [edx+ecx+2]
	shl	edx, 8
	or	eax, edx
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [ecx+24]
	movzx	edx, BYTE PTR [edx+ecx+3]
	or	eax, edx
	push	eax
	call	_toint
	add	esp, 4
	mov	DWORD PTR _len$[ebp], eax
; Line 2515
	cmp	DWORD PTR _len$[ebp], 0
	jge	SHORT $LN2@ssh_pkt_ge@2
; Line 2516
	jmp	SHORT $LN4@ssh_pkt_ge@2
$LN2@ssh_pkt_ge@2:
; Line 2517
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 2518
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+24]
	add	eax, 4
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 2519
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [edx]
	sub	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [edx]
	jge	SHORT $LN1@ssh_pkt_ge@2
; Line 2520
	jmp	SHORT $LN4@ssh_pkt_ge@2
$LN1@ssh_pkt_ge@2:
; Line 2521
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _pkt$[ebp]
	add	ecx, DWORD PTR [edx+24]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 2522
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _length$[ebp]
	add	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [ecx+24], edx
$LN4@ssh_pkt_ge@2:
; Line 2523
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_pkt_getstring ENDP
_TEXT	ENDS
PUBLIC	_sshfwd_unclean_close
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv67 = -8						; size = 4
_ssh$ = -4						; size = 4
_c$ = 8							; size = 4
_err$ = 12						; size = 4
_sshfwd_unclean_close PROC
; Line 4781
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 4782
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ssh$[ebp], ecx
; Line 4784
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+280], 4
	jne	SHORT $LN5@sshfwd_unc
; Line 4785
	jmp	$LN6@sshfwd_unc
$LN5@sshfwd_unc:
; Line 4787
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR tv67[ebp], ecx
	cmp	DWORD PTR tv67[ebp], 1
	je	SHORT $LN2@sshfwd_unc
	cmp	DWORD PTR tv67[ebp], 2
	jle	SHORT $LN3@sshfwd_unc
	cmp	DWORD PTR tv67[ebp], 4
	jle	SHORT $LN1@sshfwd_unc
	jmp	SHORT $LN3@sshfwd_unc
$LN2@sshfwd_unc:
; Line 4789
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	call	_x11_close
	add	esp, 4
; Line 4791
	mov	ecx, DWORD PTR _err$[ebp]
	push	ecx
	push	OFFSET $SG90749
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 4792
	jmp	SHORT $LN3@sshfwd_unc
$LN1@sshfwd_unc:
; Line 4795
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_pfd_close
	add	esp, 4
; Line 4796
	mov	edx, DWORD PTR _err$[ebp]
	push	edx
	push	OFFSET $SG90751
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 12					; 0000000cH
$LN3@sshfwd_unc:
; Line 4799
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+12], 6
; Line 4800
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+24], 0
; Line 4802
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_ssh2_channel_check_close
	add	esp, 4
$LN6@sshfwd_unc:
; Line 4803
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sshfwd_unclean_close ENDP
_TEXT	ENDS
PUBLIC	_sshfwd_write
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ssh$ = -4						; size = 4
_c$ = 8							; size = 4
_buf$ = 12						; size = 4
_len$ = 16						; size = 4
_sshfwd_write PROC
; Line 4806
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 4807
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ssh$[ebp], ecx
; Line 4809
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+280], 4
	jne	SHORT $LN3@sshfwd_wri@2
; Line 4810
	xor	eax, eax
	jmp	SHORT $LN4@sshfwd_wri@2
$LN3@sshfwd_wri@2:
; Line 4812
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+364], 1
	jne	SHORT $LN2@sshfwd_wri@2
; Line 4816
	push	0
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	push	3
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	1
	push	23					; 00000017H
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_send_packet
	add	esp, 40					; 00000028H
; Line 4824
	xor	eax, eax
	jmp	SHORT $LN4@sshfwd_wri@2
; Line 4825
	jmp	SHORT $LN4@sshfwd_wri@2
$LN2@sshfwd_wri@2:
; Line 4826
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_ssh2_add_channel_data
	add	esp, 12					; 0000000cH
; Line 4827
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	call	_ssh2_try_send
	add	esp, 4
$LN4@sshfwd_wri@2:
; Line 4829
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sshfwd_write ENDP
_TEXT	ENDS
PUBLIC	_sshfwd_unthrottle
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv71 = -12						; size = 4
_buflimit$ = -8						; size = 4
_ssh$ = -4						; size = 4
_c$ = 8							; size = 4
_bufsize$ = 12						; size = 4
_sshfwd_unthrottle PROC
; Line 4832
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 4833
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ssh$[ebp], ecx
; Line 4836
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+280], 4
	jne	SHORT $LN4@sshfwd_unt
; Line 4837
	jmp	SHORT $LN5@sshfwd_unt
$LN4@sshfwd_unt:
; Line 4839
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+364], 1
	jne	SHORT $LN3@sshfwd_unt
; Line 4840
	mov	DWORD PTR _buflimit$[ebp], 32768	; 00008000H
; Line 4841
	jmp	SHORT $LN2@sshfwd_unt
$LN3@sshfwd_unt:
; Line 4842
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	DWORD PTR _buflimit$[ebp], edx
; Line 4843
	mov	eax, DWORD PTR _bufsize$[ebp]
	cmp	eax, DWORD PTR _buflimit$[ebp]
	jge	SHORT $LN7@sshfwd_unt
	mov	ecx, DWORD PTR _buflimit$[ebp]
	sub	ecx, DWORD PTR _bufsize$[ebp]
	mov	DWORD PTR tv71[ebp], ecx
	jmp	SHORT $LN8@sshfwd_unt
$LN7@sshfwd_unt:
	mov	DWORD PTR tv71[ebp], 0
$LN8@sshfwd_unt:
	mov	edx, DWORD PTR tv71[ebp]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_ssh2_set_window
	add	esp, 8
$LN2@sshfwd_unt:
; Line 4845
	mov	ecx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [ecx+28], 0
	je	SHORT $LN5@sshfwd_unt
	mov	edx, DWORD PTR _bufsize$[ebp]
	cmp	edx, DWORD PTR _buflimit$[ebp]
	jg	SHORT $LN5@sshfwd_unt
; Line 4846
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 4847
	push	-1
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_throttle_conn
	add	esp, 8
$LN5@sshfwd_unt:
; Line 4849
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sshfwd_unthrottle ENDP
; Function compile flags: /Odtp /RTCsu
_old_count$ = -4					; size = 4
_ssh$ = 8						; size = 4
_adjust$ = 12						; size = 4
_ssh_throttle_conn PROC
; Line 3548
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 3549
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+368]
	mov	DWORD PTR _old_count$[ebp], ecx
; Line 3550
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+368]
	add	eax, DWORD PTR _adjust$[ebp]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+368], eax
; Line 3551
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+368], 0
	jge	SHORT $LN6@ssh_thrott@2
	push	3551					; 00000ddfH
	push	OFFSET $SG89891
	push	OFFSET $SG89892
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@ssh_thrott@2:
; Line 3552
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+368], 0
	je	SHORT $LN3@ssh_thrott@2
	cmp	DWORD PTR _old_count$[ebp], 0
	jne	SHORT $LN3@ssh_thrott@2
; Line 3553
	push	1
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_set_frozen
	add	esp, 8
	jmp	SHORT $LN4@ssh_thrott@2
$LN3@ssh_thrott@2:
; Line 3554
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+368], 0
	jne	SHORT $LN4@ssh_thrott@2
	cmp	DWORD PTR _old_count$[ebp], 0
	je	SHORT $LN4@ssh_thrott@2
; Line 3555
	push	0
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_set_frozen
	add	esp, 8
$LN4@ssh_thrott@2:
; Line 3557
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_throttle_conn ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = 8						; size = 4
_frozen$ = 12						; size = 4
_ssh_set_frozen PROC
; Line 3171
	push	ebp
	mov	ebp, esp
	push	esi
; Line 3172
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN1@ssh_set_fr
; Line 3173
	mov	esi, esp
	mov	ecx, DWORD PTR _frozen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@ssh_set_fr:
; Line 3174
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR _frozen$[ebp]
	mov	DWORD PTR [edx+564], eax
; Line 3175
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh_set_frozen ENDP
_TEXT	ENDS
PUBLIC	_ssh_alloc_sharing_rportfwd
EXTRN	_add234:PROC
EXTRN	_newtree234:PROC
EXTRN	_dupstr:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pf$ = -4						; size = 4
_ssh$ = 8						; size = 4
_shost$ = 12						; size = 4
_sport$ = 16						; size = 4
_share_ctx$ = 20					; size = 4
_ssh_alloc_sharing_rportfwd PROC
; Line 4938
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 4939
	push	28					; 0000001cH
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _pf$[ebp], eax
; Line 4940
	mov	eax, DWORD PTR _pf$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 4941
	mov	ecx, DWORD PTR _pf$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 4942
	mov	edx, DWORD PTR _pf$[ebp]
	mov	eax, DWORD PTR _share_ctx$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 4943
	mov	ecx, DWORD PTR _shost$[ebp]
	push	ecx
	call	_dupstr
	add	esp, 4
	mov	edx, DWORD PTR _pf$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 4944
	mov	eax, DWORD PTR _pf$[ebp]
	mov	ecx, DWORD PTR _sport$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 4945
	mov	edx, DWORD PTR _pf$[ebp]
	mov	DWORD PTR [edx+16], 0
; Line 4946
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+272], 0
	jne	SHORT $LN2@ssh_alloc_
; Line 4947
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+364], 2
	je	SHORT $LN5@ssh_alloc_
	push	4947					; 00001353H
	push	OFFSET $SG90857
	push	OFFSET $SG90858
	call	__wassert
	add	esp, 12					; 0000000cH
$LN5@ssh_alloc_:
; Line 4948
	push	OFFSET _ssh_rportcmp_ssh2
	call	_newtree234
	add	esp, 4
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+272], eax
$LN2@ssh_alloc_:
; Line 4950
	mov	edx, DWORD PTR _pf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+272]
	push	ecx
	call	_add234
	add	esp, 8
	cmp	eax, DWORD PTR _pf$[ebp]
	je	SHORT $LN1@ssh_alloc_
; Line 4951
	mov	edx, DWORD PTR _pf$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_safefree
	add	esp, 4
; Line 4952
	mov	ecx, DWORD PTR _pf$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 4953
	xor	eax, eax
	jmp	SHORT $LN3@ssh_alloc_
$LN1@ssh_alloc_:
; Line 4955
	mov	eax, 1
$LN3@ssh_alloc_:
; Line 4956
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_alloc_sharing_rportfwd ENDP
_TEXT	ENDS
EXTRN	_strcmp:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$ = -12						; size = 4
_b$ = -8						; size = 4
_a$ = -4						; size = 4
_av$ = 8						; size = 4
_bv$ = 12						; size = 4
_ssh_rportcmp_ssh2 PROC
; Line 1028
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1029
	mov	eax, DWORD PTR _av$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 1030
	mov	ecx, DWORD PTR _bv$[ebp]
	mov	DWORD PTR _b$[ebp], ecx
; Line 1032
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_strcmp
	add	esp, 8
	mov	DWORD PTR _i$[ebp], eax
	cmp	DWORD PTR _i$[ebp], 0
	je	SHORT $LN3@ssh_rportc
; Line 1033
	xor	eax, eax
	cmp	DWORD PTR _i$[ebp], 0
	setge	al
	lea	eax, DWORD PTR [eax+eax-1]
	jmp	SHORT $LN4@ssh_rportc
$LN3@ssh_rportc:
; Line 1034
	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jbe	SHORT $LN2@ssh_rportc
; Line 1035
	mov	eax, 1
	jmp	SHORT $LN4@ssh_rportc
$LN2@ssh_rportc:
; Line 1036
	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN1@ssh_rportc
; Line 1037
	or	eax, -1
	jmp	SHORT $LN4@ssh_rportc
$LN1@ssh_rportc:
; Line 1038
	xor	eax, eax
$LN4@ssh_rportc:
; Line 1039
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_rportcmp_ssh2 ENDP
_TEXT	ENDS
PUBLIC	_ssh_sharing_queue_global_request
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ssh$ = 8						; size = 4
_share_ctx$ = 12					; size = 4
_ssh_sharing_queue_global_request PROC
; Line 4966
	push	ebp
	mov	ebp, esp
; Line 4968
	mov	eax, DWORD PTR _share_ctx$[ebp]
	push	eax
	push	OFFSET _ssh_sharing_global_request_response
	push	82					; 00000052H
	push	81					; 00000051H
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_queue_handler
	add	esp, 20					; 00000014H
; Line 4969
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh_sharing_queue_global_request ENDP
; Function compile flags: /Odtp /RTCsu
_qh$ = -4						; size = 4
_ssh$ = 8						; size = 4
_msg1$ = 12						; size = 4
_msg2$ = 16						; size = 4
_handler$ = 20						; size = 4
_ctx$ = 24						; size = 4
_ssh_queue_handler PROC
; Line 4890
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 4893
	push	20					; 00000014H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _qh$[ebp], eax
; Line 4894
	mov	eax, DWORD PTR _qh$[ebp]
	mov	ecx, DWORD PTR _msg1$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 4895
	mov	edx, DWORD PTR _qh$[ebp]
	mov	eax, DWORD PTR _msg2$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 4896
	mov	ecx, DWORD PTR _qh$[ebp]
	mov	edx, DWORD PTR _handler$[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 4897
	mov	eax, DWORD PTR _qh$[ebp]
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 4898
	mov	edx, DWORD PTR _qh$[ebp]
	mov	DWORD PTR [edx+16], 0
; Line 4900
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+1608], 0
	jne	$LN4@ssh_queue_
; Line 4901
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR _qh$[ebp]
	mov	DWORD PTR [ecx+1604], edx
; Line 4903
	mov	eax, DWORD PTR _qh$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN3@ssh_queue_
; Line 4904
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+1604]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+eax*4+580]
	mov	DWORD PTR [ecx+1612], eax
; Line 4905
	mov	ecx, DWORD PTR _qh$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+edx*4+580], OFFSET _ssh_queueing_handler
$LN3@ssh_queue_:
; Line 4907
	mov	ecx, DWORD PTR _qh$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	jle	SHORT $LN2@ssh_queue_
; Line 4908
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+1604]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+ecx*4+580]
	mov	DWORD PTR [edx+1616], ecx
; Line 4909
	mov	edx, DWORD PTR _qh$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+eax*4+580], OFFSET _ssh_queueing_handler
$LN2@ssh_queue_:
; Line 4911
	jmp	SHORT $LN1@ssh_queue_
$LN4@ssh_queue_:
; Line 4912
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+1608]
	mov	ecx, DWORD PTR _qh$[ebp]
	mov	DWORD PTR [eax+16], ecx
$LN1@ssh_queue_:
; Line 4914
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR _qh$[ebp]
	mov	DWORD PTR [edx+1608], eax
; Line 4915
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_queue_handler ENDP
; Function compile flags: /Odtp /RTCsu
_qh$ = -4						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh_queueing_handler PROC
; Line 4852
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 4853
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+1604]
	mov	DWORD PTR _qh$[ebp], ecx
; Line 4855
	cmp	DWORD PTR _qh$[ebp], 0
	jne	SHORT $LN9@ssh_queuei
	push	4855					; 000012f7H
	push	OFFSET $SG90783
	push	OFFSET $SG90784
	call	__wassert
	add	esp, 12					; 0000000cH
$LN9@ssh_queuei:
; Line 4857
	mov	eax, DWORD PTR _pktin$[ebp]
	mov	ecx, DWORD PTR _qh$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $LN10@ssh_queuei
	mov	eax, DWORD PTR _pktin$[ebp]
	mov	ecx, DWORD PTR _qh$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN10@ssh_queuei
	push	4857					; 000012f9H
	push	OFFSET $SG90786
	push	OFFSET $SG90787
	call	__wassert
	add	esp, 12					; 0000000cH
$LN10@ssh_queuei:
; Line 4859
	mov	ecx, DWORD PTR _qh$[ebp]
	cmp	DWORD PTR [ecx], 0
	jle	SHORT $LN6@ssh_queuei
; Line 4860
	mov	edx, DWORD PTR _qh$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+eax*4+580], OFFSET _ssh_queueing_handler
	je	SHORT $LN11@ssh_queuei
	push	4860					; 000012fcH
	push	OFFSET $SG90790
	push	OFFSET $SG90791
	call	__wassert
	add	esp, 12					; 0000000cH
$LN11@ssh_queuei:
; Line 4861
	mov	eax, DWORD PTR _qh$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [eax+1612]
	mov	DWORD PTR [edx+ecx*4+580], eax
$LN6@ssh_queuei:
; Line 4863
	mov	ecx, DWORD PTR _qh$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	jle	SHORT $LN5@ssh_queuei
; Line 4864
	mov	edx, DWORD PTR _qh$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+eax*4+580], OFFSET _ssh_queueing_handler
	je	SHORT $LN12@ssh_queuei
	push	4864					; 00001300H
	push	OFFSET $SG90794
	push	OFFSET $SG90795
	call	__wassert
	add	esp, 12					; 0000000cH
$LN12@ssh_queuei:
; Line 4865
	mov	eax, DWORD PTR _qh$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [eax+1616]
	mov	DWORD PTR [edx+ecx*4+580], eax
$LN5@ssh_queuei:
; Line 4868
	mov	ecx, DWORD PTR _qh$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	$LN4@ssh_queuei
; Line 4869
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR _qh$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [edx+1604], ecx
; Line 4871
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+1604]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN3@ssh_queuei
; Line 4872
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+1604]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+eax*4+580]
	mov	DWORD PTR [ecx+1612], eax
; Line 4873
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+1604]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+eax*4+580], OFFSET _ssh_queueing_handler
$LN3@ssh_queuei:
; Line 4875
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+1604]
	cmp	DWORD PTR [eax+4], 0
	jle	SHORT $LN2@ssh_queuei
; Line 4876
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+1604]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+eax*4+580]
	mov	DWORD PTR [ecx+1616], eax
; Line 4877
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+1604]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+eax*4+580], OFFSET _ssh_queueing_handler
$LN2@ssh_queuei:
; Line 4879
	jmp	SHORT $LN1@ssh_queuei
$LN4@ssh_queuei:
; Line 4880
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+1608], 0
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+1604], 0
$LN1@ssh_queuei:
; Line 4883
	mov	esi, esp
	mov	ecx, DWORD PTR _qh$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	mov	edx, DWORD PTR _qh$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4885
	mov	ecx, DWORD PTR _qh$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 4886
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_queueing_handler ENDP
_TEXT	ENDS
EXTRN	_share_got_pkt_from_server:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ctx$ = 16						; size = 4
_ssh_sharing_global_request_response PROC
; Line 4960
	push	ebp
	mov	ebp, esp
; Line 4962
	mov	eax, DWORD PTR _pktin$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	_share_got_pkt_from_server
	add	esp, 16					; 00000010H
; Line 4963
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh_sharing_global_request_response ENDP
_TEXT	ENDS
PUBLIC	_ssh_agent_forwarding_permitted
EXTRN	_agent_exists:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv71 = -4						; size = 4
_ssh$ = 8						; size = 4
_ssh_agent_forwarding_permitted PROC
; Line 5652
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 5653
	push	27					; 0000001bH
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@ssh_agent_
	call	_agent_exists
	test	eax, eax
	je	SHORT $LN3@ssh_agent_
	mov	DWORD PTR tv71[ebp], 1
	jmp	SHORT $LN4@ssh_agent_
$LN3@ssh_agent_:
	mov	DWORD PTR tv71[ebp], 0
$LN4@ssh_agent_:
	mov	eax, DWORD PTR tv71[ebp]
; Line 5654
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_agent_forwarding_permitted ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_schedule_timer:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	_smemclr:PROC
EXTRN	_verify_ssh_host_key:PROC
EXTRN	_ssh_rsakex_freekey:PROC
EXTRN	_ssh_rsakex_encrypt:PROC
EXTRN	_bignum_set_bit:PROC
EXTRN	_bn_power_2:PROC
EXTRN	_ssh_rsakex_klen:PROC
EXTRN	_ssh_rsakex_newkey:PROC
EXTRN	_freebn:PROC
EXTRN	_dh_cleanup:PROC
EXTRN	_dh_find_K:PROC
EXTRN	_dh_validate_f:PROC
EXTRN	_dh_create_e:PROC
EXTRN	_set_busy_status:PROC
EXTRN	_dh_setup_group:PROC
EXTRN	_dh_setup_gex:PROC
EXTRN	_askalg:PROC
EXTRN	_ssh2_arcfour:QWORD
EXTRN	_ssh2_aes:QWORD
EXTRN	_ssh2_3des:QWORD
EXTRN	_ssh2_des:QWORD
EXTRN	_ssh2_blowfish:QWORD
EXTRN	_ssh_rsa_kex:QWORD
EXTRN	_ssh_diffiehellman_group1:QWORD
EXTRN	_ssh_diffiehellman_group14:QWORD
EXTRN	_ssh_diffiehellman_gex:QWORD
EXTRN	_conf_get_int_int:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv961 = -352						; size = 4
tv788 = -348						; size = 4
tv754 = -344						; size = 4
tv721 = -340						; size = 4
tv536 = -336						; size = 4
tv182 = -332						; size = 4
tv136 = -328						; size = 4
tv77 = -324						; size = 4
tv67 = -320						; size = 4
_keyspace$92077 = -312					; size = 64
_keyspace$92045 = -240					; size = 64
_outstrlen$91966 = -172					; size = 4
_kstr2len$91965 = -168					; size = 4
_kstr1len$91964 = -160					; size = 4
_outstr$91963 = -152					; size = 4
_kstr2$91962 = -148					; size = 4
_kstr1$91961 = -144					; size = 4
_byte$91960 = -140					; size = 4
_i$91959 = -136						; size = 4
_nbits$91958 = -132					; size = 4
_klen$91957 = -128					; size = 4
_keydata$91949 = -120					; size = 4
_err$91927 = -112					; size = 4
_scbits$91885 = -108					; size = 4
_csbits$91884 = -104					; size = 4
_c$91804 = -100						; size = 4
_c$91790 = -96						; size = 4
_c$91751 = -92						; size = 4
_c$91730 = -88						; size = 4
_k$91694 = -84						; size = 4
_len$91671 = -76					; size = 4
_j$91670 = -68						; size = 4
_i$91669 = -64						; size = 4
_preferred$91668 = -60					; size = 4
_str$91667 = -52					; size = 4
_c$91652 = -44						; size = 4
_c$91628 = -40						; size = 4
_k$91605 = -36						; size = 4
_commalist_started$91565 = -32				; size = 4
_k$91564 = -28						; size = 4
_j$91563 = -24						; size = 4
_i$91562 = -20						; size = 4
_crLine$91550 = -16					; size = 4
_s$ = -12						; size = 4
_in$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_ssh$ = 8						; size = 4
_vin$ = 12						; size = 4
_inlen$ = 16						; size = 4
_pktin$ = 20						; size = 4
_do_ssh2_transport PROC
; Line 6019
	push	ebp
	mov	ebp, esp
	sub	esp, 352				; 00000160H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 88					; 00000058H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 6020
	mov	eax, DWORD PTR _vin$[ebp]
	mov	DWORD PTR _in$[ebp], eax
; Line 6054
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+416], 0
	jne	SHORT $LN398@do_ssh2_tr
	push	252					; 000000fcH
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR tv67[ebp], eax
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR tv67[ebp]
	mov	DWORD PTR [edx+416], eax
	mov	ecx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _s$[ebp], ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx], 0
$LN398@do_ssh2_tr:
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+416]
	mov	DWORD PTR _s$[ebp], ecx
; Line 6056
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+196], 0
	je	SHORT $LN401@do_ssh2_tr
	push	6056					; 000017a8H
	push	OFFSET $SG91548
	push	OFFSET $SG91549
	call	__wassert
	add	esp, 12					; 0000000cH
$LN401@do_ssh2_tr:
; Line 6058
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR _crLine$91550[ebp], ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv77[ebp], eax
	cmp	DWORD PTR tv77[ebp], 6598		; 000019c6H
	jg	$LN424@do_ssh2_tr
	cmp	DWORD PTR tv77[ebp], 6598		; 000019c6H
	je	$LN136@do_ssh2_tr
	cmp	DWORD PTR tv77[ebp], 6518		; 00001976H
	jg	SHORT $LN425@do_ssh2_tr
	cmp	DWORD PTR tv77[ebp], 6518		; 00001976H
	je	$LN179@do_ssh2_tr
	cmp	DWORD PTR tv77[ebp], 0
	je	$LN395@do_ssh2_tr
	cmp	DWORD PTR tv77[ebp], 6276		; 00001884H
	je	$LN317@do_ssh2_tr
	cmp	DWORD PTR tv77[ebp], 6493		; 0000195dH
	je	$LN196@do_ssh2_tr
	jmp	$LN396@do_ssh2_tr
$LN425@do_ssh2_tr:
	cmp	DWORD PTR tv77[ebp], 6543		; 0000198fH
	je	$LN162@do_ssh2_tr
	cmp	DWORD PTR tv77[ebp], 6561		; 000019a1H
	je	$LN146@do_ssh2_tr
	jmp	$LN396@do_ssh2_tr
$LN424@do_ssh2_tr:
	cmp	DWORD PTR tv77[ebp], 6821		; 00001aa5H
	jg	SHORT $LN426@do_ssh2_tr
	cmp	DWORD PTR tv77[ebp], 6821		; 00001aa5H
	je	$LN54@do_ssh2_tr
	cmp	DWORD PTR tv77[ebp], 6633		; 000019e9H
	je	$LN119@do_ssh2_tr
	cmp	DWORD PTR tv77[ebp], 6684		; 00001a1cH
	je	$LN97@do_ssh2_tr
	cmp	DWORD PTR tv77[ebp], 6766		; 00001a6eH
	je	$LN78@do_ssh2_tr
	jmp	$LN396@do_ssh2_tr
$LN426@do_ssh2_tr:
	cmp	DWORD PTR tv77[ebp], 6938		; 00001b1aH
	je	$LN29@do_ssh2_tr
	cmp	DWORD PTR tv77[ebp], 7043		; 00001b83H
	je	$LN10@do_ssh2_tr
	jmp	$LN396@do_ssh2_tr
$LN395@do_ssh2_tr:
; Line 6060
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+72], 0
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+68], 0
; Line 6061
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+80], 0
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+76], 0
; Line 6062
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+88], 0
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+84], 0
; Line 6064
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+232], 0
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+228], 0
; Line 6065
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+220], 0
; Line 6066
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+224], 0
; Line 6071
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+80]
	and	eax, 2
	je	SHORT $LN394@do_ssh2_tr
; Line 6072
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+60], OFFSET _buggymacs
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+64], 3
; Line 6073
	jmp	SHORT $begin_key_exchange$91561
$LN394@do_ssh2_tr:
; Line 6074
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+60], OFFSET _macs
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+64], 4
$begin_key_exchange$91561:
; Line 6077
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+344], 0
; Line 6084
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+164], 0
; Line 6085
	mov	DWORD PTR _i$91562[ebp], 0
	jmp	SHORT $LN392@do_ssh2_tr
$LN391@do_ssh2_tr:
	mov	ecx, DWORD PTR _i$91562[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$91562[ebp], ecx
$LN392@do_ssh2_tr:
	cmp	DWORD PTR _i$91562[ebp], 5
	jge	$LN390@do_ssh2_tr
; Line 6086
	mov	edx, DWORD PTR _i$91562[ebp]
	push	edx
	push	23					; 00000017H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv136[ebp], eax
	cmp	DWORD PTR tv136[ebp], 4
	ja	$LN388@do_ssh2_tr
	mov	edx, DWORD PTR tv136[ebp]
	jmp	DWORD PTR $LN435@do_ssh2_tr[edx*4]
$LN387@do_ssh2_tr:
; Line 6089
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+ecx*4+168], OFFSET _ssh_diffiehellman_gex
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	add	ecx, 1
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+164], ecx
; Line 6090
	jmp	$LN388@do_ssh2_tr
$LN386@do_ssh2_tr:
; Line 6093
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+ecx*4+168], OFFSET _ssh_diffiehellman_group14
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	add	ecx, 1
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+164], ecx
; Line 6094
	jmp	$LN388@do_ssh2_tr
$LN385@do_ssh2_tr:
; Line 6097
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+ecx*4+168], OFFSET _ssh_diffiehellman_group1
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	add	ecx, 1
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+164], ecx
; Line 6098
	jmp	SHORT $LN388@do_ssh2_tr
$LN384@do_ssh2_tr:
; Line 6101
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+ecx*4+168], OFFSET _ssh_rsa_kex
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	add	ecx, 1
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+164], ecx
; Line 6102
	jmp	SHORT $LN388@do_ssh2_tr
$LN383@do_ssh2_tr:
; Line 6106
	cmp	DWORD PTR _i$91562[ebp], 4
	jge	SHORT $LN388@do_ssh2_tr
; Line 6107
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+ecx*4+168], 0
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	add	ecx, 1
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+164], ecx
$LN388@do_ssh2_tr:
; Line 6111
	jmp	$LN391@do_ssh2_tr
$LN390@do_ssh2_tr:
; Line 6116
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+188], 0
; Line 6117
	mov	DWORD PTR _i$91562[ebp], 0
	jmp	SHORT $LN381@do_ssh2_tr
$LN380@do_ssh2_tr:
	mov	ecx, DWORD PTR _i$91562[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$91562[ebp], ecx
$LN381@do_ssh2_tr:
	cmp	DWORD PTR _i$91562[ebp], 6
	jge	$LN379@do_ssh2_tr
; Line 6118
	mov	edx, DWORD PTR _i$91562[ebp]
	push	edx
	push	29					; 0000001dH
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv182[ebp], eax
	cmp	DWORD PTR tv182[ebp], 5
	ja	$LN377@do_ssh2_tr
	mov	edx, DWORD PTR tv182[ebp]
	jmp	DWORD PTR $LN436@do_ssh2_tr[edx*4]
$LN376@do_ssh2_tr:
; Line 6120
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+188]
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+ecx*4+192], OFFSET _ssh2_blowfish
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+188]
	add	ecx, 1
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+188], ecx
; Line 6121
	jmp	$LN377@do_ssh2_tr
$LN375@do_ssh2_tr:
; Line 6123
	push	32					; 00000020H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN374@do_ssh2_tr
; Line 6124
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+188]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+eax*4+192], OFFSET _ssh2_des
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+188]
	add	eax, 1
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+188], eax
$LN374@do_ssh2_tr:
; Line 6126
	jmp	$LN377@do_ssh2_tr
$LN373@do_ssh2_tr:
; Line 6128
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+188]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+eax*4+192], OFFSET _ssh2_3des
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+188]
	add	eax, 1
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+188], eax
; Line 6129
	jmp	$LN377@do_ssh2_tr
$LN372@do_ssh2_tr:
; Line 6131
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+188]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+eax*4+192], OFFSET _ssh2_aes
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+188]
	add	eax, 1
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+188], eax
; Line 6132
	jmp	SHORT $LN377@do_ssh2_tr
$LN371@do_ssh2_tr:
; Line 6134
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+188]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+eax*4+192], OFFSET _ssh2_arcfour
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+188]
	add	eax, 1
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+188], eax
; Line 6135
	jmp	SHORT $LN377@do_ssh2_tr
$LN370@do_ssh2_tr:
; Line 6139
	cmp	DWORD PTR _i$91562[ebp], 5
	jge	SHORT $LN377@do_ssh2_tr
; Line 6140
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+188]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+eax*4+192], 0
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+188]
	add	eax, 1
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+188], eax
$LN377@do_ssh2_tr:
; Line 6144
	jmp	$LN380@do_ssh2_tr
$LN379@do_ssh2_tr:
; Line 6149
	push	22					; 00000016H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN368@do_ssh2_tr
; Line 6150
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+216], OFFSET _ssh_zlib
; Line 6151
	jmp	SHORT $LN367@do_ssh2_tr
$LN368@do_ssh2_tr:
; Line 6152
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+216], OFFSET _ssh_comp_none
$LN367@do_ssh2_tr:
; Line 6158
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+312], 1
; Line 6163
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+1640], 1
; Line 6168
	push	20					; 00000014H
	call	_ssh2_pkt_init
	add	esp, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+236], eax
; Line 6169
	mov	DWORD PTR _i$91562[ebp], 0
	jmp	SHORT $LN366@do_ssh2_tr
$LN365@do_ssh2_tr:
	mov	eax, DWORD PTR _i$91562[ebp]
	add	eax, 1
	mov	DWORD PTR _i$91562[ebp], eax
$LN366@do_ssh2_tr:
	cmp	DWORD PTR _i$91562[ebp], 16		; 00000010H
	jge	SHORT $LN364@do_ssh2_tr
; Line 6170
	call	_random_byte
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+236]
	push	edx
	call	_ssh_pkt_addbyte
	add	esp, 8
	jmp	SHORT $LN365@do_ssh2_tr
$LN364@do_ssh2_tr:
; Line 6172
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+236]
	push	ecx
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 6173
	mov	DWORD PTR _commalist_started$91565[ebp], 0
; Line 6174
	mov	DWORD PTR _i$91562[ebp], 0
	jmp	SHORT $LN363@do_ssh2_tr
$LN362@do_ssh2_tr:
	mov	edx, DWORD PTR _i$91562[ebp]
	add	edx, 1
	mov	DWORD PTR _i$91562[ebp], edx
$LN363@do_ssh2_tr:
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR _i$91562[ebp]
	cmp	ecx, DWORD PTR [eax+164]
	jge	$LN361@do_ssh2_tr
; Line 6175
	mov	edx, DWORD PTR _i$91562[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+168]
	mov	DWORD PTR _k$91605[ebp], ecx
; Line 6176
	cmp	DWORD PTR _k$91605[ebp], 0
	jne	SHORT $LN360@do_ssh2_tr
	jmp	SHORT $LN362@do_ssh2_tr
$LN360@do_ssh2_tr:
; Line 6177
	mov	DWORD PTR _j$91563[ebp], 0
	jmp	SHORT $LN359@do_ssh2_tr
$LN358@do_ssh2_tr:
	mov	edx, DWORD PTR _j$91563[ebp]
	add	edx, 1
	mov	DWORD PTR _j$91563[ebp], edx
$LN359@do_ssh2_tr:
	mov	eax, DWORD PTR _k$91605[ebp]
	mov	ecx, DWORD PTR _j$91563[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN357@do_ssh2_tr
; Line 6178
	cmp	DWORD PTR _commalist_started$91565[ebp], 0
	je	SHORT $LN356@do_ssh2_tr
; Line 6179
	push	OFFSET $SG91611
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+236]
	push	eax
	call	_ssh_pkt_addstring_str
	add	esp, 8
$LN356@do_ssh2_tr:
; Line 6180
	mov	ecx, DWORD PTR _k$91605[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _j$91563[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+236]
	push	ecx
	call	_ssh_pkt_addstring_str
	add	esp, 8
; Line 6181
	mov	DWORD PTR _commalist_started$91565[ebp], 1
; Line 6182
	jmp	SHORT $LN358@do_ssh2_tr
$LN357@do_ssh2_tr:
; Line 6183
	jmp	$LN362@do_ssh2_tr
$LN361@do_ssh2_tr:
; Line 6185
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+228], 0
	jne	SHORT $LN355@do_ssh2_tr
; Line 6190
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+236]
	push	ecx
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 6191
	mov	DWORD PTR _i$91562[ebp], 0
	jmp	SHORT $LN354@do_ssh2_tr
$LN353@do_ssh2_tr:
	mov	edx, DWORD PTR _i$91562[ebp]
	add	edx, 1
	mov	DWORD PTR _i$91562[ebp], edx
$LN354@do_ssh2_tr:
	cmp	DWORD PTR _i$91562[ebp], 2
	jae	SHORT $LN352@do_ssh2_tr
; Line 6192
	mov	eax, DWORD PTR _i$91562[ebp]
	mov	ecx, DWORD PTR _hostkey_algs[eax*4]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+236]
	push	ecx
	call	_ssh_pkt_addstring_str
	add	esp, 8
; Line 6193
	cmp	DWORD PTR _i$91562[ebp], 1
	jae	SHORT $LN351@do_ssh2_tr
; Line 6194
	push	OFFSET $SG91617
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+236]
	push	eax
	call	_ssh_pkt_addstring_str
	add	esp, 8
$LN351@do_ssh2_tr:
; Line 6195
	jmp	SHORT $LN353@do_ssh2_tr
$LN352@do_ssh2_tr:
; Line 6196
	jmp	SHORT $LN350@do_ssh2_tr
$LN355@do_ssh2_tr:
; Line 6204
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+144], 0
	jne	SHORT $LN402@do_ssh2_tr
	push	6204					; 0000183cH
	push	OFFSET $SG91620
	push	OFFSET $SG91621
	call	__wassert
	add	esp, 12					; 0000000cH
$LN402@do_ssh2_tr:
; Line 6205
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+236]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
$LN350@do_ssh2_tr:
; Line 6208
	mov	DWORD PTR _k$91564[ebp], 0
	jmp	SHORT $LN349@do_ssh2_tr
$LN348@do_ssh2_tr:
	mov	edx, DWORD PTR _k$91564[ebp]
	add	edx, 1
	mov	DWORD PTR _k$91564[ebp], edx
$LN349@do_ssh2_tr:
	cmp	DWORD PTR _k$91564[ebp], 2
	jge	$LN347@do_ssh2_tr
; Line 6209
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+236]
	push	ecx
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 6210
	mov	DWORD PTR _commalist_started$91565[ebp], 0
; Line 6211
	mov	DWORD PTR _i$91562[ebp], 0
	jmp	SHORT $LN346@do_ssh2_tr
$LN345@do_ssh2_tr:
	mov	edx, DWORD PTR _i$91562[ebp]
	add	edx, 1
	mov	DWORD PTR _i$91562[ebp], edx
$LN346@do_ssh2_tr:
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR _i$91562[ebp]
	cmp	ecx, DWORD PTR [eax+188]
	jge	$LN344@do_ssh2_tr
; Line 6212
	mov	edx, DWORD PTR _i$91562[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+192]
	mov	DWORD PTR _c$91628[ebp], ecx
; Line 6213
	cmp	DWORD PTR _c$91628[ebp], 0
	jne	SHORT $LN343@do_ssh2_tr
	jmp	SHORT $LN345@do_ssh2_tr
$LN343@do_ssh2_tr:
; Line 6214
	mov	DWORD PTR _j$91563[ebp], 0
	jmp	SHORT $LN342@do_ssh2_tr
$LN341@do_ssh2_tr:
	mov	edx, DWORD PTR _j$91563[ebp]
	add	edx, 1
	mov	DWORD PTR _j$91563[ebp], edx
$LN342@do_ssh2_tr:
	mov	eax, DWORD PTR _c$91628[ebp]
	mov	ecx, DWORD PTR _j$91563[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN340@do_ssh2_tr
; Line 6215
	cmp	DWORD PTR _commalist_started$91565[ebp], 0
	je	SHORT $LN339@do_ssh2_tr
; Line 6216
	push	OFFSET $SG91634
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+236]
	push	eax
	call	_ssh_pkt_addstring_str
	add	esp, 8
$LN339@do_ssh2_tr:
; Line 6217
	mov	ecx, DWORD PTR _c$91628[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _j$91563[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+236]
	push	ecx
	call	_ssh_pkt_addstring_str
	add	esp, 8
; Line 6218
	mov	DWORD PTR _commalist_started$91565[ebp], 1
; Line 6219
	jmp	SHORT $LN341@do_ssh2_tr
$LN340@do_ssh2_tr:
; Line 6220
	jmp	$LN345@do_ssh2_tr
$LN344@do_ssh2_tr:
; Line 6221
	jmp	$LN348@do_ssh2_tr
$LN347@do_ssh2_tr:
; Line 6223
	mov	DWORD PTR _j$91563[ebp], 0
	jmp	SHORT $LN338@do_ssh2_tr
$LN337@do_ssh2_tr:
	mov	edx, DWORD PTR _j$91563[ebp]
	add	edx, 1
	mov	DWORD PTR _j$91563[ebp], edx
$LN338@do_ssh2_tr:
	cmp	DWORD PTR _j$91563[ebp], 2
	jge	SHORT $LN336@do_ssh2_tr
; Line 6224
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+236]
	push	ecx
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 6225
	mov	DWORD PTR _i$91562[ebp], 0
	jmp	SHORT $LN335@do_ssh2_tr
$LN334@do_ssh2_tr:
	mov	edx, DWORD PTR _i$91562[ebp]
	add	edx, 1
	mov	DWORD PTR _i$91562[ebp], edx
$LN335@do_ssh2_tr:
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR _i$91562[ebp]
	cmp	ecx, DWORD PTR [eax+64]
	jge	SHORT $LN333@do_ssh2_tr
; Line 6226
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	mov	ecx, DWORD PTR _i$91562[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+236]
	push	edx
	call	_ssh_pkt_addstring_str
	add	esp, 8
; Line 6227
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	sub	ecx, 1
	cmp	DWORD PTR _i$91562[ebp], ecx
	jge	SHORT $LN332@do_ssh2_tr
; Line 6228
	push	OFFSET $SG91642
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+236]
	push	eax
	call	_ssh_pkt_addstring_str
	add	esp, 8
$LN332@do_ssh2_tr:
; Line 6229
	jmp	SHORT $LN334@do_ssh2_tr
$LN333@do_ssh2_tr:
; Line 6230
	jmp	$LN337@do_ssh2_tr
$LN336@do_ssh2_tr:
; Line 6234
	mov	DWORD PTR _j$91563[ebp], 0
	jmp	SHORT $LN331@do_ssh2_tr
$LN330@do_ssh2_tr:
	mov	ecx, DWORD PTR _j$91563[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$91563[ebp], ecx
$LN331@do_ssh2_tr:
	cmp	DWORD PTR _j$91563[ebp], 2
	jge	$LN329@do_ssh2_tr
; Line 6235
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+236]
	push	eax
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 6238
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+216]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+236]
	push	edx
	call	_ssh_pkt_addstring_str
	add	esp, 8
; Line 6242
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+220], 0
	je	SHORT $LN328@do_ssh2_tr
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+216]
	cmp	DWORD PTR [edx+4], 0
	je	SHORT $LN328@do_ssh2_tr
; Line 6243
	push	OFFSET $SG91648
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+236]
	push	ecx
	call	_ssh_pkt_addstring_str
	add	esp, 8
; Line 6245
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+216]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+236]
	push	eax
	call	_ssh_pkt_addstring_str
	add	esp, 8
$LN328@do_ssh2_tr:
; Line 6247
	mov	DWORD PTR _i$91562[ebp], 0
	jmp	SHORT $LN327@do_ssh2_tr
$LN326@do_ssh2_tr:
	mov	ecx, DWORD PTR _i$91562[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$91562[ebp], ecx
$LN327@do_ssh2_tr:
	cmp	DWORD PTR _i$91562[ebp], 2
	jae	$LN325@do_ssh2_tr
; Line 6248
	mov	edx, DWORD PTR _i$91562[ebp]
	mov	eax, DWORD PTR _compressions[edx*4]
	mov	DWORD PTR _c$91652[ebp], eax
; Line 6249
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR _c$91652[ebp]
	cmp	edx, DWORD PTR [ecx+216]
	je	SHORT $LN324@do_ssh2_tr
; Line 6250
	push	OFFSET $SG91654
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+236]
	push	ecx
	call	_ssh_pkt_addstring_str
	add	esp, 8
; Line 6251
	mov	edx, DWORD PTR _c$91652[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+236]
	push	edx
	call	_ssh_pkt_addstring_str
	add	esp, 8
; Line 6252
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+220], 0
	je	SHORT $LN324@do_ssh2_tr
	mov	ecx, DWORD PTR _c$91652[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN324@do_ssh2_tr
; Line 6253
	push	OFFSET $SG91656
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+236]
	push	eax
	call	_ssh_pkt_addstring_str
	add	esp, 8
; Line 6254
	mov	ecx, DWORD PTR _c$91652[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+236]
	push	ecx
	call	_ssh_pkt_addstring_str
	add	esp, 8
$LN324@do_ssh2_tr:
; Line 6257
	jmp	$LN326@do_ssh2_tr
$LN325@do_ssh2_tr:
; Line 6258
	jmp	$LN330@do_ssh2_tr
$LN329@do_ssh2_tr:
; Line 6260
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+236]
	push	eax
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 6262
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+236]
	push	edx
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 6264
	push	0
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+236]
	push	ecx
	call	_ssh2_pkt_addbool
	add	esp, 8
; Line 6266
	push	0
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+236]
	push	eax
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 6269
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+236]
	mov	eax, DWORD PTR [edx]
	sub	eax, 5
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+48], eax
; Line 6270
	push	1
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	call	_safemalloc
	add	esp, 8
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+44], eax
; Line 6271
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+236]
	mov	eax, DWORD PTR [edx+16]
	add	eax, 5
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 6273
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+236]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_pkt_send_noqueue
	add	esp, 8
; Line 6275
	cmp	DWORD PTR _pktin$[ebp], 0
	jne	SHORT $LN322@do_ssh2_tr
$LN318@do_ssh2_tr:
; Line 6276
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 6276			; 00001884H
	jmp	$LN399@do_ssh2_tr
$LN317@do_ssh2_tr:
	xor	ecx, ecx
	jne	SHORT $LN318@do_ssh2_tr
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN318@do_ssh2_tr
$LN322@do_ssh2_tr:
; Line 6286
	mov	edx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [edx+8], 20			; 00000014H
	je	SHORT $LN314@do_ssh2_tr
; Line 6287
	push	OFFSET $SG91673
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN313@do_ssh2_tr:
; Line 6288
	mov	ecx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [ecx], 0
	jmp	$LN399@do_ssh2_tr
	xor	edx, edx
	jne	SHORT $LN313@do_ssh2_tr
$LN314@do_ssh2_tr:
; Line 6290
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+144], 0
; Line 6291
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+148], 0
; Line 6292
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+68], 0
; Line 6293
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+72], 0
; Line 6294
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+76], 0
; Line 6295
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+80], 0
; Line 6296
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+84], 0
; Line 6297
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+88], 0
; Line 6298
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+20], 0
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+12], 0
; Line 6300
	mov	edx, DWORD PTR _pktin$[ebp]
	mov	eax, DWORD PTR [edx+24]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pktin$[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 6301
	lea	edx, DWORD PTR _len$91671[ebp]
	push	edx
	lea	eax, DWORD PTR _str$91667[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 6302
	cmp	DWORD PTR _str$91667[ebp], 0
	jne	SHORT $LN310@do_ssh2_tr
; Line 6303
	push	OFFSET $SG91686
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN309@do_ssh2_tr:
; Line 6304
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 0
	jmp	$LN399@do_ssh2_tr
	xor	ecx, ecx
	jne	SHORT $LN309@do_ssh2_tr
$LN310@do_ssh2_tr:
; Line 6307
	mov	DWORD PTR _preferred$91668[ebp], 0
; Line 6308
	mov	DWORD PTR _i$91669[ebp], 0
	jmp	SHORT $LN306@do_ssh2_tr
$LN305@do_ssh2_tr:
	mov	edx, DWORD PTR _i$91669[ebp]
	add	edx, 1
	mov	DWORD PTR _i$91669[ebp], edx
$LN306@do_ssh2_tr:
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR _i$91669[ebp]
	cmp	ecx, DWORD PTR [eax+164]
	jge	$LN304@do_ssh2_tr
; Line 6309
	mov	edx, DWORD PTR _i$91669[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+168]
	mov	DWORD PTR _k$91694[ebp], ecx
; Line 6310
	cmp	DWORD PTR _k$91694[ebp], 0
	jne	SHORT $LN303@do_ssh2_tr
; Line 6311
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+12], 1
; Line 6312
	jmp	SHORT $LN302@do_ssh2_tr
$LN303@do_ssh2_tr:
; Line 6313
	mov	DWORD PTR _j$91670[ebp], 0
	jmp	SHORT $LN301@do_ssh2_tr
$LN300@do_ssh2_tr:
	mov	eax, DWORD PTR _j$91670[ebp]
	add	eax, 1
	mov	DWORD PTR _j$91670[ebp], eax
$LN301@do_ssh2_tr:
	mov	ecx, DWORD PTR _k$91694[ebp]
	mov	edx, DWORD PTR _j$91670[ebp]
	cmp	edx, DWORD PTR [ecx]
	jge	SHORT $LN302@do_ssh2_tr
; Line 6314
	cmp	DWORD PTR _preferred$91668[ebp], 0
	jne	SHORT $LN298@do_ssh2_tr
	mov	eax, DWORD PTR _k$91694[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _j$91670[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _preferred$91668[ebp], ecx
$LN298@do_ssh2_tr:
; Line 6315
	mov	edx, DWORD PTR _len$91671[ebp]
	push	edx
	mov	eax, DWORD PTR _str$91667[ebp]
	push	eax
	mov	ecx, DWORD PTR _k$91694[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _j$91670[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_in_commasep_string
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN297@do_ssh2_tr
; Line 6316
	mov	eax, DWORD PTR _k$91694[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR _j$91670[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR [edx+144], ecx
; Line 6317
	jmp	SHORT $LN302@do_ssh2_tr
$LN297@do_ssh2_tr:
; Line 6319
	jmp	SHORT $LN300@do_ssh2_tr
$LN302@do_ssh2_tr:
; Line 6321
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+144], 0
	je	SHORT $LN296@do_ssh2_tr
; Line 6322
	jmp	SHORT $LN304@do_ssh2_tr
$LN296@do_ssh2_tr:
; Line 6323
	jmp	$LN305@do_ssh2_tr
$LN304@do_ssh2_tr:
; Line 6324
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+144], 0
	jne	SHORT $LN295@do_ssh2_tr
; Line 6326
	mov	ecx, DWORD PTR _str$91667[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$91671[ebp]
	push	edx
	push	OFFSET $SG91704
	call	_dupprintf
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN294@do_ssh2_tr:
; Line 6327
	mov	ecx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [ecx], 0
	jmp	$LN399@do_ssh2_tr
	xor	edx, edx
	jne	SHORT $LN294@do_ssh2_tr
$LN295@do_ssh2_tr:
; Line 6334
	mov	eax, DWORD PTR _len$91671[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$91667[ebp]
	push	ecx
	mov	edx, DWORD PTR _preferred$91668[ebp]
	push	edx
	call	_first_in_commasep_string
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+244], eax
; Line 6335
	lea	edx, DWORD PTR _len$91671[ebp]
	push	edx
	lea	eax, DWORD PTR _str$91667[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 6336
	cmp	DWORD PTR _str$91667[ebp], 0
	jne	SHORT $LN291@do_ssh2_tr
; Line 6337
	push	OFFSET $SG91709
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN290@do_ssh2_tr:
; Line 6338
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 0
	jmp	$LN399@do_ssh2_tr
	xor	ecx, ecx
	jne	SHORT $LN290@do_ssh2_tr
$LN291@do_ssh2_tr:
; Line 6340
	mov	DWORD PTR _i$91669[ebp], 0
	jmp	SHORT $LN287@do_ssh2_tr
$LN286@do_ssh2_tr:
	mov	edx, DWORD PTR _i$91669[ebp]
	add	edx, 1
	mov	DWORD PTR _i$91669[ebp], edx
$LN287@do_ssh2_tr:
	cmp	DWORD PTR _i$91669[ebp], 2
	jae	SHORT $LN285@do_ssh2_tr
; Line 6341
	mov	eax, DWORD PTR _len$91671[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$91667[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$91669[ebp]
	mov	eax, DWORD PTR _hostkey_algs[edx*4]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	_in_commasep_string
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN284@do_ssh2_tr
; Line 6342
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR _i$91669[ebp]
	mov	ecx, DWORD PTR _hostkey_algs[eax*4]
	mov	DWORD PTR [edx+148], ecx
; Line 6343
	jmp	SHORT $LN285@do_ssh2_tr
$LN284@do_ssh2_tr:
; Line 6345
	jmp	SHORT $LN286@do_ssh2_tr
$LN285@do_ssh2_tr:
; Line 6346
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+148], 0
	jne	SHORT $LN283@do_ssh2_tr
; Line 6348
	mov	eax, DWORD PTR _str$91667[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$91671[ebp]
	push	ecx
	push	OFFSET $SG91718
	call	_dupprintf
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN282@do_ssh2_tr:
; Line 6349
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 0
	jmp	$LN399@do_ssh2_tr
	xor	ecx, ecx
	jne	SHORT $LN282@do_ssh2_tr
$LN283@do_ssh2_tr:
; Line 6353
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+244], 0
	je	SHORT $LN403@do_ssh2_tr
	mov	eax, DWORD PTR _len$91671[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$91667[ebp]
	push	ecx
	mov	edx, DWORD PTR _hostkey_algs
	mov	eax, DWORD PTR [edx+48]
	push	eax
	call	_first_in_commasep_string
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN403@do_ssh2_tr
	mov	DWORD PTR tv536[ebp], 1
	jmp	SHORT $LN404@do_ssh2_tr
$LN403@do_ssh2_tr:
	mov	DWORD PTR tv536[ebp], 0
$LN404@do_ssh2_tr:
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR tv536[ebp]
	mov	DWORD PTR [ecx+244], edx
; Line 6354
	lea	eax, DWORD PTR _len$91671[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$91667[ebp]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 6355
	cmp	DWORD PTR _str$91667[ebp], 0
	jne	SHORT $LN279@do_ssh2_tr
; Line 6356
	push	OFFSET $SG91723
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN278@do_ssh2_tr:
; Line 6357
	mov	ecx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [ecx], 0
	jmp	$LN399@do_ssh2_tr
	xor	edx, edx
	jne	SHORT $LN278@do_ssh2_tr
$LN279@do_ssh2_tr:
; Line 6359
	mov	DWORD PTR _i$91669[ebp], 0
	jmp	SHORT $LN275@do_ssh2_tr
$LN274@do_ssh2_tr:
	mov	eax, DWORD PTR _i$91669[ebp]
	add	eax, 1
	mov	DWORD PTR _i$91669[ebp], eax
$LN275@do_ssh2_tr:
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR _i$91669[ebp]
	cmp	edx, DWORD PTR [ecx+188]
	jge	$LN273@do_ssh2_tr
; Line 6360
	mov	eax, DWORD PTR _i$91669[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+192]
	mov	DWORD PTR _c$91730[ebp], edx
; Line 6361
	cmp	DWORD PTR _c$91730[ebp], 0
	jne	SHORT $LN272@do_ssh2_tr
; Line 6362
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+16], 1
; Line 6363
	jmp	SHORT $LN271@do_ssh2_tr
$LN272@do_ssh2_tr:
; Line 6364
	mov	DWORD PTR _j$91670[ebp], 0
	jmp	SHORT $LN270@do_ssh2_tr
$LN269@do_ssh2_tr:
	mov	ecx, DWORD PTR _j$91670[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$91670[ebp], ecx
$LN270@do_ssh2_tr:
	mov	edx, DWORD PTR _c$91730[ebp]
	mov	eax, DWORD PTR _j$91670[ebp]
	cmp	eax, DWORD PTR [edx]
	jge	SHORT $LN271@do_ssh2_tr
; Line 6365
	mov	ecx, DWORD PTR _len$91671[ebp]
	push	ecx
	mov	edx, DWORD PTR _str$91667[ebp]
	push	edx
	mov	eax, DWORD PTR _c$91730[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _j$91670[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_in_commasep_string
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN267@do_ssh2_tr
; Line 6366
	mov	edx, DWORD PTR _c$91730[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR _j$91670[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR [ecx+68], eax
; Line 6367
	jmp	SHORT $LN271@do_ssh2_tr
$LN267@do_ssh2_tr:
; Line 6369
	jmp	SHORT $LN269@do_ssh2_tr
$LN271@do_ssh2_tr:
; Line 6371
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+68], 0
	je	SHORT $LN266@do_ssh2_tr
; Line 6372
	jmp	SHORT $LN273@do_ssh2_tr
$LN266@do_ssh2_tr:
; Line 6373
	jmp	$LN274@do_ssh2_tr
$LN273@do_ssh2_tr:
; Line 6374
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+68], 0
	jne	SHORT $LN265@do_ssh2_tr
; Line 6376
	mov	eax, DWORD PTR _str$91667[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$91671[ebp]
	push	ecx
	push	OFFSET $SG91739
	call	_dupprintf
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN264@do_ssh2_tr:
; Line 6377
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 0
	jmp	$LN399@do_ssh2_tr
	xor	ecx, ecx
	jne	SHORT $LN264@do_ssh2_tr
$LN265@do_ssh2_tr:
; Line 6380
	lea	edx, DWORD PTR _len$91671[ebp]
	push	edx
	lea	eax, DWORD PTR _str$91667[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 6381
	cmp	DWORD PTR _str$91667[ebp], 0
	jne	SHORT $LN261@do_ssh2_tr
; Line 6382
	push	OFFSET $SG91744
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN260@do_ssh2_tr:
; Line 6383
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 0
	jmp	$LN399@do_ssh2_tr
	xor	ecx, ecx
	jne	SHORT $LN260@do_ssh2_tr
$LN261@do_ssh2_tr:
; Line 6385
	mov	DWORD PTR _i$91669[ebp], 0
	jmp	SHORT $LN257@do_ssh2_tr
$LN256@do_ssh2_tr:
	mov	edx, DWORD PTR _i$91669[ebp]
	add	edx, 1
	mov	DWORD PTR _i$91669[ebp], edx
$LN257@do_ssh2_tr:
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR _i$91669[ebp]
	cmp	ecx, DWORD PTR [eax+188]
	jge	$LN255@do_ssh2_tr
; Line 6386
	mov	edx, DWORD PTR _i$91669[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+192]
	mov	DWORD PTR _c$91751[ebp], ecx
; Line 6387
	cmp	DWORD PTR _c$91751[ebp], 0
	jne	SHORT $LN254@do_ssh2_tr
; Line 6388
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+20], 1
; Line 6389
	jmp	SHORT $LN253@do_ssh2_tr
$LN254@do_ssh2_tr:
; Line 6390
	mov	DWORD PTR _j$91670[ebp], 0
	jmp	SHORT $LN252@do_ssh2_tr
$LN251@do_ssh2_tr:
	mov	eax, DWORD PTR _j$91670[ebp]
	add	eax, 1
	mov	DWORD PTR _j$91670[ebp], eax
$LN252@do_ssh2_tr:
	mov	ecx, DWORD PTR _c$91751[ebp]
	mov	edx, DWORD PTR _j$91670[ebp]
	cmp	edx, DWORD PTR [ecx]
	jge	SHORT $LN253@do_ssh2_tr
; Line 6391
	mov	eax, DWORD PTR _len$91671[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$91667[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$91751[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _j$91670[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	_in_commasep_string
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN249@do_ssh2_tr
; Line 6392
	mov	ecx, DWORD PTR _c$91751[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR _j$91670[ebp]
	mov	edx, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR [eax+72], edx
; Line 6393
	jmp	SHORT $LN253@do_ssh2_tr
$LN249@do_ssh2_tr:
; Line 6395
	jmp	SHORT $LN251@do_ssh2_tr
$LN253@do_ssh2_tr:
; Line 6397
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+72], 0
	je	SHORT $LN248@do_ssh2_tr
; Line 6398
	jmp	SHORT $LN255@do_ssh2_tr
$LN248@do_ssh2_tr:
; Line 6399
	jmp	$LN256@do_ssh2_tr
$LN255@do_ssh2_tr:
; Line 6400
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+72], 0
	jne	SHORT $LN247@do_ssh2_tr
; Line 6402
	mov	edx, DWORD PTR _str$91667[ebp]
	push	edx
	mov	eax, DWORD PTR _len$91671[ebp]
	push	eax
	push	OFFSET $SG91760
	call	_dupprintf
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_bomb_out
	add	esp, 8
$LN246@do_ssh2_tr:
; Line 6403
	mov	edx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [edx], 0
	jmp	$LN399@do_ssh2_tr
	xor	eax, eax
	jne	SHORT $LN246@do_ssh2_tr
$LN247@do_ssh2_tr:
; Line 6406
	lea	ecx, DWORD PTR _len$91671[ebp]
	push	ecx
	lea	edx, DWORD PTR _str$91667[ebp]
	push	edx
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 6407
	cmp	DWORD PTR _str$91667[ebp], 0
	jne	SHORT $LN243@do_ssh2_tr
; Line 6408
	push	OFFSET $SG91765
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_bomb_out
	add	esp, 8
$LN242@do_ssh2_tr:
; Line 6409
	mov	edx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [edx], 0
	jmp	$LN399@do_ssh2_tr
	xor	eax, eax
	jne	SHORT $LN242@do_ssh2_tr
$LN243@do_ssh2_tr:
; Line 6411
	mov	DWORD PTR _i$91669[ebp], 0
	jmp	SHORT $LN239@do_ssh2_tr
$LN238@do_ssh2_tr:
	mov	ecx, DWORD PTR _i$91669[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$91669[ebp], ecx
$LN239@do_ssh2_tr:
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _i$91669[ebp]
	cmp	eax, DWORD PTR [edx+64]
	jge	SHORT $LN237@do_ssh2_tr
; Line 6412
	mov	ecx, DWORD PTR _len$91671[ebp]
	push	ecx
	mov	edx, DWORD PTR _str$91667[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	edx, DWORD PTR _i$91669[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	call	_in_commasep_string
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN236@do_ssh2_tr
; Line 6413
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR _i$91669[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR [ecx+76], eax
; Line 6414
	jmp	SHORT $LN237@do_ssh2_tr
$LN236@do_ssh2_tr:
; Line 6416
	jmp	SHORT $LN238@do_ssh2_tr
$LN237@do_ssh2_tr:
; Line 6417
	lea	ecx, DWORD PTR _len$91671[ebp]
	push	ecx
	lea	edx, DWORD PTR _str$91667[ebp]
	push	edx
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 6418
	cmp	DWORD PTR _str$91667[ebp], 0
	jne	SHORT $LN235@do_ssh2_tr
; Line 6419
	push	OFFSET $SG91774
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_bomb_out
	add	esp, 8
$LN234@do_ssh2_tr:
; Line 6420
	mov	edx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [edx], 0
	jmp	$LN399@do_ssh2_tr
	xor	eax, eax
	jne	SHORT $LN234@do_ssh2_tr
$LN235@do_ssh2_tr:
; Line 6422
	mov	DWORD PTR _i$91669[ebp], 0
	jmp	SHORT $LN231@do_ssh2_tr
$LN230@do_ssh2_tr:
	mov	ecx, DWORD PTR _i$91669[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$91669[ebp], ecx
$LN231@do_ssh2_tr:
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _i$91669[ebp]
	cmp	eax, DWORD PTR [edx+64]
	jge	SHORT $LN229@do_ssh2_tr
; Line 6423
	mov	ecx, DWORD PTR _len$91671[ebp]
	push	ecx
	mov	edx, DWORD PTR _str$91667[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	edx, DWORD PTR _i$91669[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	call	_in_commasep_string
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN228@do_ssh2_tr
; Line 6424
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR _i$91669[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR [ecx+80], eax
; Line 6425
	jmp	SHORT $LN229@do_ssh2_tr
$LN228@do_ssh2_tr:
; Line 6427
	jmp	SHORT $LN230@do_ssh2_tr
$LN229@do_ssh2_tr:
; Line 6428
	lea	ecx, DWORD PTR _len$91671[ebp]
	push	ecx
	lea	edx, DWORD PTR _str$91667[ebp]
	push	edx
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 6429
	cmp	DWORD PTR _str$91667[ebp], 0
	jne	SHORT $LN227@do_ssh2_tr
; Line 6430
	push	OFFSET $SG91783
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_bomb_out
	add	esp, 8
$LN226@do_ssh2_tr:
; Line 6431
	mov	edx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [edx], 0
	jmp	$LN399@do_ssh2_tr
	xor	eax, eax
	jne	SHORT $LN226@do_ssh2_tr
$LN227@do_ssh2_tr:
; Line 6433
	mov	DWORD PTR _i$91669[ebp], 0
	jmp	SHORT $LN223@do_ssh2_tr
$LN222@do_ssh2_tr:
	mov	ecx, DWORD PTR _i$91669[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$91669[ebp], ecx
$LN223@do_ssh2_tr:
	cmp	DWORD PTR _i$91669[ebp], 3
	jae	$LN221@do_ssh2_tr
; Line 6435
	cmp	DWORD PTR _i$91669[ebp], 0
	jne	SHORT $LN405@do_ssh2_tr
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+216]
	mov	DWORD PTR tv721[ebp], eax
	jmp	SHORT $LN406@do_ssh2_tr
$LN405@do_ssh2_tr:
	mov	ecx, DWORD PTR _i$91669[ebp]
	mov	edx, DWORD PTR _compressions[ecx*4-4]
	mov	DWORD PTR tv721[ebp], edx
$LN406@do_ssh2_tr:
	mov	eax, DWORD PTR tv721[ebp]
	mov	DWORD PTR _c$91790[ebp], eax
; Line 6436
	mov	ecx, DWORD PTR _len$91671[ebp]
	push	ecx
	mov	edx, DWORD PTR _str$91667[ebp]
	push	edx
	mov	eax, DWORD PTR _c$91790[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_in_commasep_string
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN220@do_ssh2_tr
; Line 6437
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _c$91790[ebp]
	mov	DWORD PTR [edx+84], eax
; Line 6438
	jmp	SHORT $LN221@do_ssh2_tr
	jmp	SHORT $LN219@do_ssh2_tr
$LN220@do_ssh2_tr:
; Line 6439
	mov	ecx, DWORD PTR _len$91671[ebp]
	push	ecx
	mov	edx, DWORD PTR _str$91667[ebp]
	push	edx
	mov	eax, DWORD PTR _c$91790[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_in_commasep_string
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN219@do_ssh2_tr
; Line 6440
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+220], 0
	je	SHORT $LN217@do_ssh2_tr
; Line 6441
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR _c$91790[ebp]
	mov	DWORD PTR [eax+84], ecx
; Line 6442
	jmp	SHORT $LN221@do_ssh2_tr
; Line 6443
	jmp	SHORT $LN219@do_ssh2_tr
$LN217@do_ssh2_tr:
; Line 6444
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+224], 1
$LN219@do_ssh2_tr:
; Line 6447
	jmp	$LN222@do_ssh2_tr
$LN221@do_ssh2_tr:
; Line 6448
	lea	eax, DWORD PTR _len$91671[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$91667[ebp]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 6449
	cmp	DWORD PTR _str$91667[ebp], 0
	jne	SHORT $LN215@do_ssh2_tr
; Line 6450
	push	OFFSET $SG91797
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN214@do_ssh2_tr:
; Line 6451
	mov	ecx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [ecx], 0
	jmp	$LN399@do_ssh2_tr
	xor	edx, edx
	jne	SHORT $LN214@do_ssh2_tr
$LN215@do_ssh2_tr:
; Line 6453
	mov	DWORD PTR _i$91669[ebp], 0
	jmp	SHORT $LN211@do_ssh2_tr
$LN210@do_ssh2_tr:
	mov	eax, DWORD PTR _i$91669[ebp]
	add	eax, 1
	mov	DWORD PTR _i$91669[ebp], eax
$LN211@do_ssh2_tr:
	cmp	DWORD PTR _i$91669[ebp], 3
	jae	$LN209@do_ssh2_tr
; Line 6455
	cmp	DWORD PTR _i$91669[ebp], 0
	jne	SHORT $LN407@do_ssh2_tr
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+216]
	mov	DWORD PTR tv754[ebp], edx
	jmp	SHORT $LN408@do_ssh2_tr
$LN407@do_ssh2_tr:
	mov	eax, DWORD PTR _i$91669[ebp]
	mov	ecx, DWORD PTR _compressions[eax*4-4]
	mov	DWORD PTR tv754[ebp], ecx
$LN408@do_ssh2_tr:
	mov	edx, DWORD PTR tv754[ebp]
	mov	DWORD PTR _c$91804[ebp], edx
; Line 6456
	mov	eax, DWORD PTR _len$91671[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$91667[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$91804[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_in_commasep_string
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN208@do_ssh2_tr
; Line 6457
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR _c$91804[ebp]
	mov	DWORD PTR [ecx+88], edx
; Line 6458
	jmp	SHORT $LN209@do_ssh2_tr
	jmp	SHORT $LN207@do_ssh2_tr
$LN208@do_ssh2_tr:
; Line 6459
	mov	eax, DWORD PTR _len$91671[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$91667[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$91804[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_in_commasep_string
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN207@do_ssh2_tr
; Line 6460
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+220], 0
	je	SHORT $LN205@do_ssh2_tr
; Line 6461
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _c$91804[ebp]
	mov	DWORD PTR [edx+88], eax
; Line 6462
	jmp	SHORT $LN209@do_ssh2_tr
; Line 6463
	jmp	SHORT $LN207@do_ssh2_tr
$LN205@do_ssh2_tr:
; Line 6464
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+224], 1
$LN207@do_ssh2_tr:
; Line 6467
	jmp	$LN210@do_ssh2_tr
$LN209@do_ssh2_tr:
; Line 6468
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+224], 0
	je	SHORT $LN203@do_ssh2_tr
; Line 6470
	push	OFFSET $SG91811
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
$LN203@do_ssh2_tr:
; Line 6472
	lea	edx, DWORD PTR _len$91671[ebp]
	push	edx
	lea	eax, DWORD PTR _str$91667[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 6473
	lea	edx, DWORD PTR _len$91671[ebp]
	push	edx
	lea	eax, DWORD PTR _str$91667[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 6474
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh2_pkt_getbool
	add	esp, 4
	test	eax, eax
	je	SHORT $LN409@do_ssh2_tr
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+244], 0
	jne	SHORT $LN409@do_ssh2_tr
	mov	DWORD PTR tv788[ebp], 1
	jmp	SHORT $LN410@do_ssh2_tr
$LN409@do_ssh2_tr:
	mov	DWORD PTR tv788[ebp], 0
$LN410@do_ssh2_tr:
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR tv788[ebp]
	mov	DWORD PTR [ecx+248], edx
; Line 6476
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	edx, DWORD PTR [ecx+28]
	mov	esi, esp
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 6477
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+144]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_hash_string
	add	esp, 16					; 00000010H
; Line 6478
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+144]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_hash_string
	add	esp, 16					; 00000010H
; Line 6480
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+144]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_hash_string
	add	esp, 16					; 00000010H
; Line 6481
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	_safefree
	add	esp, 4
; Line 6484
	mov	ecx, DWORD PTR _pktin$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _pktin$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	call	_hash_string
	add	esp, 16					; 00000010H
; Line 6486
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	je	$LN202@do_ssh2_tr
; Line 6487
	push	1
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_set_frozen
	add	esp, 8
; Line 6490
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	push	OFFSET _ssh_dialog_callback
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	OFFSET $SG91813
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_askalg
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+240], eax
; Line 6491
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+240], 0
	jge	SHORT $LN201@do_ssh2_tr
$LN197@do_ssh2_tr:
; Line 6493
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 6493			; 0000195dH
	jmp	$LN399@do_ssh2_tr
$LN196@do_ssh2_tr:
	xor	ecx, ecx
	jne	SHORT $LN197@do_ssh2_tr
; Line 6494
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN199@do_ssh2_tr
; Line 6496
	push	OFFSET $SG91823
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN192@do_ssh2_tr:
; Line 6497
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 0
	jmp	$LN399@do_ssh2_tr
	xor	ecx, ecx
	jne	SHORT $LN192@do_ssh2_tr
$LN199@do_ssh2_tr:
; Line 6499
	cmp	DWORD PTR _pktin$[ebp], 0
	jne	SHORT $LN197@do_ssh2_tr
	cmp	DWORD PTR _inlen$[ebp], 0
	jg	SHORT $LN197@do_ssh2_tr
; Line 6500
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+560]
	mov	DWORD PTR [edx+240], ecx
$LN201@do_ssh2_tr:
; Line 6502
	push	0
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_set_frozen
	add	esp, 8
; Line 6503
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+240], 0
	jne	SHORT $LN202@do_ssh2_tr
; Line 6505
	push	1
	push	0
	push	0
	push	OFFSET $SG91829
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_disconnect
	add	esp, 20					; 00000014H
$LN188@do_ssh2_tr:
; Line 6506
	mov	edx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [edx], 0
	jmp	$LN399@do_ssh2_tr
	xor	eax, eax
	jne	SHORT $LN188@do_ssh2_tr
$LN202@do_ssh2_tr:
; Line 6510
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	$LN185@do_ssh2_tr
; Line 6511
	push	1
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_set_frozen
	add	esp, 8
; Line 6515
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	push	OFFSET _ssh_dialog_callback
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	push	OFFSET $SG91834
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_askalg
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+240], eax
; Line 6516
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+240], 0
	jge	SHORT $LN184@do_ssh2_tr
$LN180@do_ssh2_tr:
; Line 6518
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 6518			; 00001976H
	jmp	$LN399@do_ssh2_tr
$LN179@do_ssh2_tr:
	xor	ecx, ecx
	jne	SHORT $LN180@do_ssh2_tr
; Line 6519
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN182@do_ssh2_tr
; Line 6521
	push	OFFSET $SG91844
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN175@do_ssh2_tr:
; Line 6522
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 0
	jmp	$LN399@do_ssh2_tr
	xor	ecx, ecx
	jne	SHORT $LN175@do_ssh2_tr
$LN182@do_ssh2_tr:
; Line 6524
	cmp	DWORD PTR _pktin$[ebp], 0
	jne	SHORT $LN180@do_ssh2_tr
	cmp	DWORD PTR _inlen$[ebp], 0
	jg	SHORT $LN180@do_ssh2_tr
; Line 6525
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+560]
	mov	DWORD PTR [edx+240], ecx
$LN184@do_ssh2_tr:
; Line 6527
	push	0
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_set_frozen
	add	esp, 8
; Line 6528
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+240], 0
	jne	SHORT $LN185@do_ssh2_tr
; Line 6530
	push	1
	push	0
	push	0
	push	OFFSET $SG91850
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_disconnect
	add	esp, 20					; 00000014H
$LN171@do_ssh2_tr:
; Line 6531
	mov	edx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [edx], 0
	jmp	$LN399@do_ssh2_tr
	xor	eax, eax
	jne	SHORT $LN171@do_ssh2_tr
$LN185@do_ssh2_tr:
; Line 6535
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+20], 0
	je	$LN168@do_ssh2_tr
; Line 6536
	push	1
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_set_frozen
	add	esp, 8
; Line 6540
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	push	OFFSET _ssh_dialog_callback
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	push	OFFSET $SG91855
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_askalg
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+240], eax
; Line 6541
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+240], 0
	jge	SHORT $LN167@do_ssh2_tr
$LN163@do_ssh2_tr:
; Line 6543
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 6543			; 0000198fH
	jmp	$LN399@do_ssh2_tr
$LN162@do_ssh2_tr:
	xor	ecx, ecx
	jne	SHORT $LN163@do_ssh2_tr
; Line 6544
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN165@do_ssh2_tr
; Line 6546
	push	OFFSET $SG91865
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN158@do_ssh2_tr:
; Line 6547
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 0
	jmp	$LN399@do_ssh2_tr
	xor	ecx, ecx
	jne	SHORT $LN158@do_ssh2_tr
$LN165@do_ssh2_tr:
; Line 6549
	cmp	DWORD PTR _pktin$[ebp], 0
	jne	SHORT $LN163@do_ssh2_tr
	cmp	DWORD PTR _inlen$[ebp], 0
	jg	SHORT $LN163@do_ssh2_tr
; Line 6550
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+560]
	mov	DWORD PTR [edx+240], ecx
$LN167@do_ssh2_tr:
; Line 6552
	push	0
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_set_frozen
	add	esp, 8
; Line 6553
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+240], 0
	jne	SHORT $LN168@do_ssh2_tr
; Line 6555
	push	1
	push	0
	push	0
	push	OFFSET $SG91871
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_disconnect
	add	esp, 20					; 00000014H
$LN154@do_ssh2_tr:
; Line 6556
	mov	edx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [edx], 0
	jmp	$LN399@do_ssh2_tr
	xor	eax, eax
	jne	SHORT $LN154@do_ssh2_tr
$LN168@do_ssh2_tr:
; Line 6560
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+248], 0
	je	SHORT $LN151@do_ssh2_tr
$LN147@do_ssh2_tr:
; Line 6561
	mov	edx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [edx], 6561			; 000019a1H
	jmp	$LN399@do_ssh2_tr
$LN146@do_ssh2_tr:
	xor	eax, eax
	jne	SHORT $LN147@do_ssh2_tr
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN147@do_ssh2_tr
$LN151@do_ssh2_tr:
; Line 6564
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	cmp	DWORD PTR [edx+8], 0
	jne	$LN143@do_ssh2_tr
; Line 6573
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR _csbits$91884[ebp], edx
; Line 6574
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR _scbits$91885[ebp], edx
; Line 6575
	mov	eax, DWORD PTR _csbits$91884[ebp]
	cmp	eax, DWORD PTR _scbits$91885[ebp]
	jle	SHORT $LN411@do_ssh2_tr
	mov	ecx, DWORD PTR _csbits$91884[ebp]
	mov	DWORD PTR tv961[ebp], ecx
	jmp	SHORT $LN412@do_ssh2_tr
$LN411@do_ssh2_tr:
	mov	edx, DWORD PTR _scbits$91885[ebp]
	mov	DWORD PTR tv961[ebp], edx
$LN412@do_ssh2_tr:
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR tv961[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 6579
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+144]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [ecx+12]
	shl	edx, 3
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+4], edx
	jle	SHORT $LN142@do_ssh2_tr
; Line 6580
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	mov	eax, DWORD PTR [edx+28]
	mov	ecx, DWORD PTR [eax+12]
	shl	ecx, 3
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN142@do_ssh2_tr:
; Line 6586
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	cmp	DWORD PTR [ecx+12], 0
	jne	$LN141@do_ssh2_tr
; Line 6587
	push	OFFSET $SG91888
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 6588
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+344], 2
; Line 6593
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 1
	cdq
	and	edx, 63					; 0000003fH
	add	eax, edx
	sar	eax, 6
	mov	edx, 512				; 00000200H
	mov	ecx, eax
	shl	edx, cl
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 6594
	push	30					; 0000001eH
	call	_ssh2_pkt_init
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+236], eax
; Line 6595
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+236]
	push	edx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 6596
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+236]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_pkt_send_noqueue
	add	esp, 8
$LN137@do_ssh2_tr:
; Line 6598
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 6598			; 000019c6H
	jmp	$LN399@do_ssh2_tr
$LN136@do_ssh2_tr:
	xor	ecx, ecx
	jne	SHORT $LN137@do_ssh2_tr
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN137@do_ssh2_tr
; Line 6599
	mov	edx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [edx+8], 31			; 0000001fH
	je	SHORT $LN133@do_ssh2_tr
; Line 6600
	push	OFFSET $SG91897
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN132@do_ssh2_tr:
; Line 6601
	mov	ecx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [ecx], 0
	jmp	$LN399@do_ssh2_tr
	xor	edx, edx
	jne	SHORT $LN132@do_ssh2_tr
$LN133@do_ssh2_tr:
; Line 6603
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh2_pkt_getmp
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 6604
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh2_pkt_getmp
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+28], eax
; Line 6605
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+24], 0
	je	SHORT $LN128@do_ssh2_tr
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	SHORT $LN129@do_ssh2_tr
$LN128@do_ssh2_tr:
; Line 6606
	push	OFFSET $SG91903
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_bomb_out
	add	esp, 8
$LN127@do_ssh2_tr:
; Line 6607
	mov	edx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [edx], 0
	jmp	$LN399@do_ssh2_tr
	xor	eax, eax
	jne	SHORT $LN127@do_ssh2_tr
$LN129@do_ssh2_tr:
; Line 6609
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_dh_setup_gex
	add	esp, 8
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+192], eax
; Line 6610
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+52], 32			; 00000020H
; Line 6611
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+56], 33			; 00000021H
; Line 6612
	jmp	SHORT $LN124@do_ssh2_tr
$LN141@do_ssh2_tr:
; Line 6613
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+344], 1
; Line 6614
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	push	ecx
	call	_dh_setup_group
	add	esp, 4
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+192], eax
; Line 6615
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+52], 30			; 0000001eH
; Line 6616
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+56], 31			; 0000001fH
; Line 6618
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+144]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	OFFSET $SG91908
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 12					; 0000000cH
$LN124@do_ssh2_tr:
; Line 6622
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	push	OFFSET $SG91909
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 6626
	push	2
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_set_busy_status
	add	esp, 8
; Line 6627
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	shl	edx, 1
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+192]
	push	ecx
	call	_dh_create_e
	add	esp, 8
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+32], eax
; Line 6628
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	call	_ssh2_pkt_init
	add	esp, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+236], eax
; Line 6629
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+236]
	push	eax
	call	_ssh2_pkt_addmp
	add	esp, 8
; Line 6630
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+236]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_pkt_send_noqueue
	add	esp, 8
; Line 6632
	push	1
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_set_busy_status
	add	esp, 8
$LN120@do_ssh2_tr:
; Line 6633
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 6633			; 000019e9H
	jmp	$LN399@do_ssh2_tr
$LN119@do_ssh2_tr:
	xor	ecx, ecx
	jne	SHORT $LN120@do_ssh2_tr
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN120@do_ssh2_tr
; Line 6634
	mov	edx, DWORD PTR _pktin$[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+56]
	je	SHORT $LN116@do_ssh2_tr
; Line 6635
	push	OFFSET $SG91918
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN115@do_ssh2_tr:
; Line 6636
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 0
	jmp	$LN399@do_ssh2_tr
	xor	ecx, ecx
	jne	SHORT $LN115@do_ssh2_tr
$LN116@do_ssh2_tr:
; Line 6638
	push	2
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_set_busy_status
	add	esp, 8
; Line 6639
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 112				; 00000070H
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 92					; 0000005cH
	push	edx
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 6640
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+148]
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+124], eax
; Line 6641
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh2_pkt_getmp
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+36], eax
; Line 6642
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+36], 0
	jne	SHORT $LN112@do_ssh2_tr
; Line 6643
	push	OFFSET $SG91923
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN111@do_ssh2_tr:
; Line 6644
	mov	ecx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [ecx], 0
	jmp	$LN399@do_ssh2_tr
	xor	edx, edx
	jne	SHORT $LN111@do_ssh2_tr
$LN112@do_ssh2_tr:
; Line 6646
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 116				; 00000074H
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 96					; 00000060H
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 6649
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+192]
	push	eax
	call	_dh_validate_f
	add	esp, 8
	mov	DWORD PTR _err$91927[ebp], eax
; Line 6650
	cmp	DWORD PTR _err$91927[ebp], 0
	je	SHORT $LN108@do_ssh2_tr
; Line 6651
	mov	ecx, DWORD PTR _err$91927[ebp]
	push	ecx
	push	OFFSET $SG91929
	call	_dupprintf
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN107@do_ssh2_tr:
; Line 6652
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 0
	jmp	$LN399@do_ssh2_tr
	xor	ecx, ecx
	jne	SHORT $LN107@do_ssh2_tr
$LN108@do_ssh2_tr:
; Line 6655
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+192]
	push	edx
	call	_dh_find_K
	add	esp, 8
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+40], eax
; Line 6659
	push	0
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_set_busy_status
	add	esp, 8
; Line 6661
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	call	_hash_string
	add	esp, 16					; 00000010H
; Line 6662
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	cmp	DWORD PTR [edx+12], 0
	jne	SHORT $LN104@do_ssh2_tr
; Line 6663
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	call	_hash_uint32
	add	esp, 12					; 0000000cH
; Line 6664
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+144]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_hash_mpint
	add	esp, 12					; 0000000cH
; Line 6665
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	call	_hash_mpint
	add	esp, 12					; 0000000cH
$LN104@do_ssh2_tr:
; Line 6667
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	call	_hash_mpint
	add	esp, 12					; 0000000cH
; Line 6668
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+144]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_hash_mpint
	add	esp, 12					; 0000000cH
; Line 6670
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+192]
	push	eax
	call	_dh_cleanup
	add	esp, 4
; Line 6671
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	push	edx
	call	_freebn
	add	esp, 4
; Line 6672
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	cmp	DWORD PTR [ecx+12], 0
	jne	SHORT $LN103@do_ssh2_tr
; Line 6673
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	call	_freebn
	add	esp, 4
; Line 6674
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	_freebn
	add	esp, 4
$LN103@do_ssh2_tr:
; Line 6676
	jmp	$LN102@do_ssh2_tr
$LN143@do_ssh2_tr:
; Line 6678
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	push	OFFSET $SG91936
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 6679
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+344], 3
$LN98@do_ssh2_tr:
; Line 6684
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 6684			; 00001a1cH
	jmp	$LN399@do_ssh2_tr
$LN97@do_ssh2_tr:
	xor	ecx, ecx
	jne	SHORT $LN98@do_ssh2_tr
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN98@do_ssh2_tr
; Line 6685
	mov	edx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [edx+8], 30			; 0000001eH
	je	SHORT $LN94@do_ssh2_tr
; Line 6686
	push	OFFSET $SG91945
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN93@do_ssh2_tr:
; Line 6687
	mov	ecx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [ecx], 0
	jmp	$LN399@do_ssh2_tr
	xor	edx, edx
	jne	SHORT $LN93@do_ssh2_tr
$LN94@do_ssh2_tr:
; Line 6690
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 112				; 00000070H
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 92					; 0000005cH
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 6692
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+92]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	call	_hash_string
	add	esp, 16					; 00000010H
; Line 6693
	mov	esi, esp
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+92]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+148]
	mov	eax, DWORD PTR [edx]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+124], eax
; Line 6697
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 120				; 00000078H
	push	edx
	lea	eax, DWORD PTR _keydata$91949[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 6698
	push	1
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+120]
	push	eax
	call	_safemalloc
	add	esp, 8
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+100], eax
; Line 6699
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+120]
	push	eax
	mov	ecx, DWORD PTR _keydata$91949[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+100]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 6702
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	push	ecx
	call	_ssh_rsakex_newkey
	add	esp, 8
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+128], eax
; Line 6703
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+128], 0
	jne	SHORT $LN90@do_ssh2_tr
; Line 6704
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	push	edx
	call	_safefree
	add	esp, 4
; Line 6705
	push	OFFSET $SG91953
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN89@do_ssh2_tr:
; Line 6706
	mov	ecx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [ecx], 0
	jmp	$LN399@do_ssh2_tr
	xor	edx, edx
	jne	SHORT $LN89@do_ssh2_tr
$LN90@do_ssh2_tr:
; Line 6709
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+100]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	call	_hash_string
	add	esp, 16					; 00000010H
; Line 6718
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	call	_ssh_rsakex_klen
	add	esp, 4
	mov	DWORD PTR _klen$91957[ebp], eax
; Line 6719
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+144]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [ecx+12]
	shl	edx, 1
	lea	eax, DWORD PTR [edx*8+49]
	mov	ecx, DWORD PTR _klen$91957[ebp]
	sub	ecx, eax
	mov	DWORD PTR _nbits$91958[ebp], ecx
; Line 6720
	mov	DWORD PTR _byte$91960[ebp], 0
; Line 6724
	mov	edx, DWORD PTR _nbits$91958[ebp]
	sub	edx, 1
	push	edx
	call	_bn_power_2
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+40], eax
; Line 6726
	mov	DWORD PTR _i$91959[ebp], 0
	jmp	SHORT $LN86@do_ssh2_tr
$LN85@do_ssh2_tr:
	mov	edx, DWORD PTR _i$91959[ebp]
	add	edx, 1
	mov	DWORD PTR _i$91959[ebp], edx
$LN86@do_ssh2_tr:
	mov	eax, DWORD PTR _i$91959[ebp]
	cmp	eax, DWORD PTR _nbits$91958[ebp]
	jge	SHORT $LN84@do_ssh2_tr
; Line 6727
	mov	ecx, DWORD PTR _i$91959[ebp]
	and	ecx, 7
	jne	SHORT $LN83@do_ssh2_tr
; Line 6728
	call	_random_byte
	mov	DWORD PTR _byte$91960[ebp], eax
$LN83@do_ssh2_tr:
; Line 6730
	mov	ecx, DWORD PTR _i$91959[ebp]
	and	ecx, 7
	mov	edx, DWORD PTR _byte$91960[ebp]
	sar	edx, cl
	and	edx, 1
	push	edx
	mov	eax, DWORD PTR _i$91959[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	push	edx
	call	_bignum_set_bit
	add	esp, 12					; 0000000cH
; Line 6731
	jmp	SHORT $LN85@do_ssh2_tr
$LN84@do_ssh2_tr:
; Line 6736
	lea	eax, DWORD PTR _kstr1len$91964[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	push	edx
	call	_ssh2_mpint_fmt
	add	esp, 8
	mov	DWORD PTR _kstr1$91961[ebp], eax
; Line 6737
	mov	eax, DWORD PTR _kstr1len$91964[ebp]
	add	eax, 4
	mov	DWORD PTR _kstr2len$91965[ebp], eax
	push	1
	mov	ecx, DWORD PTR _kstr2len$91965[ebp]
	push	ecx
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _kstr2$91962[ebp], eax
; Line 6738
	mov	edx, DWORD PTR _kstr1len$91964[ebp]
	sar	edx, 24					; 00000018H
	mov	eax, DWORD PTR _kstr2$91962[ebp]
	mov	BYTE PTR [eax], dl
	mov	ecx, DWORD PTR _kstr1len$91964[ebp]
	sar	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _kstr2$91962[ebp]
	mov	BYTE PTR [edx+1], cl
	mov	eax, DWORD PTR _kstr1len$91964[ebp]
	sar	eax, 8
	mov	ecx, DWORD PTR _kstr2$91962[ebp]
	mov	BYTE PTR [ecx+2], al
	mov	edx, DWORD PTR _kstr2$91962[ebp]
	mov	al, BYTE PTR _kstr1len$91964[ebp]
	mov	BYTE PTR [edx+3], al
; Line 6739
	mov	ecx, DWORD PTR _kstr1len$91964[ebp]
	push	ecx
	mov	edx, DWORD PTR _kstr1$91961[ebp]
	push	edx
	mov	eax, DWORD PTR _kstr2$91962[ebp]
	add	eax, 4
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 6744
	mov	eax, DWORD PTR _klen$91957[ebp]
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR _outstrlen$91966[ebp], eax
; Line 6745
	push	1
	mov	ecx, DWORD PTR _outstrlen$91966[ebp]
	push	ecx
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _outstr$91963[ebp], eax
; Line 6747
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+128]
	push	eax
	mov	ecx, DWORD PTR _outstrlen$91966[ebp]
	push	ecx
	mov	edx, DWORD PTR _outstr$91963[ebp]
	push	edx
	mov	eax, DWORD PTR _kstr2len$91965[ebp]
	push	eax
	mov	ecx, DWORD PTR _kstr2$91962[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+144]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_ssh_rsakex_encrypt
	add	esp, 24					; 00000018H
; Line 6752
	push	31					; 0000001fH
	call	_ssh2_pkt_init
	add	esp, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+236], eax
; Line 6753
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+236]
	push	ecx
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 6754
	mov	edx, DWORD PTR _outstrlen$91966[ebp]
	push	edx
	mov	eax, DWORD PTR _outstr$91963[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+236]
	push	edx
	call	_ssh_pkt_addstring_data
	add	esp, 12					; 0000000cH
; Line 6755
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+236]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_pkt_send_noqueue
	add	esp, 8
; Line 6757
	mov	eax, DWORD PTR _outstrlen$91966[ebp]
	push	eax
	mov	ecx, DWORD PTR _outstr$91963[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	call	_hash_string
	add	esp, 16					; 00000010H
; Line 6759
	mov	ecx, DWORD PTR _kstr2$91962[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 6760
	mov	edx, DWORD PTR _kstr1$91961[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 6761
	mov	eax, DWORD PTR _outstr$91963[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 6764
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	call	_ssh_rsakex_freekey
	add	esp, 4
$LN79@do_ssh2_tr:
; Line 6766
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 6766			; 00001a6eH
	jmp	$LN399@do_ssh2_tr
$LN78@do_ssh2_tr:
	xor	ecx, ecx
	jne	SHORT $LN79@do_ssh2_tr
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN79@do_ssh2_tr
; Line 6767
	mov	edx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [edx+8], 32			; 00000020H
	je	SHORT $LN75@do_ssh2_tr
; Line 6768
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 6769
	push	OFFSET $SG91988
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN74@do_ssh2_tr:
; Line 6770
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 0
	jmp	$LN399@do_ssh2_tr
	xor	ecx, ecx
	jne	SHORT $LN74@do_ssh2_tr
$LN75@do_ssh2_tr:
; Line 6773
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 116				; 00000074H
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 96					; 00000060H
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 6775
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+100]
	push	eax
	call	_safefree
	add	esp, 4
$LN102@do_ssh2_tr:
; Line 6778
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+144]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_hash_mpint
	add	esp, 12					; 0000000cH
; Line 6779
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+144]
	mov	ecx, DWORD PTR [eax+28]
	cmp	DWORD PTR [ecx+12], 32			; 00000020H
	jbe	SHORT $LN413@do_ssh2_tr
	push	6779					; 00001a7bH
	push	OFFSET $SG91993
	push	OFFSET $SG91994
	call	__wassert
	add	esp, 12					; 0000000cH
$LN413@do_ssh2_tr:
; Line 6780
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 132				; 00000084H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 6782
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+192], 0
; Line 6792
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+124], 0
	je	SHORT $LN70@do_ssh2_tr
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	edx, DWORD PTR [ecx+28]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 132				; 00000084H
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+116]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+148]
	mov	ecx, DWORD PTR [eax+40]
	call	ecx
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN71@do_ssh2_tr
$LN70@do_ssh2_tr:
; Line 6793
	push	OFFSET $SG91999
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN69@do_ssh2_tr:
; Line 6794
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 0
	jmp	$LN399@do_ssh2_tr
	xor	ecx, ecx
	jne	SHORT $LN69@do_ssh2_tr
$LN71@do_ssh2_tr:
; Line 6797
	mov	esi, esp
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+124]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+148]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+104], eax
; Line 6798
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+228], 0
	jne	$LN66@do_ssh2_tr
; Line 6803
	mov	esi, esp
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+148]
	mov	ecx, DWORD PTR [eax+36]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+108], eax
; Line 6804
	push	OFFSET $SG92004
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 6805
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 6808
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+148]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_verify_ssh_manual_host_key
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+240], eax
; Line 6809
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+240], 0
	jne	SHORT $LN65@do_ssh2_tr
; Line 6810
	push	OFFSET $SG92006
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN64@do_ssh2_tr:
; Line 6811
	mov	ecx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [ecx], 0
	jmp	$LN399@do_ssh2_tr
	xor	edx, edx
	jne	SHORT $LN64@do_ssh2_tr
; Line 6812
	jmp	$LN61@do_ssh2_tr
$LN65@do_ssh2_tr:
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+240], 0
	jge	$LN61@do_ssh2_tr
; Line 6813
	push	1
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_set_frozen
	add	esp, 8
; Line 6818
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	push	OFFSET _ssh_dialog_callback
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+104]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+148]
	mov	eax, DWORD PTR [edx+52]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+212]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+208]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_verify_ssh_host_key
	add	esp, 32					; 00000020H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+240], eax
; Line 6819
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+240], 0
	jge	SHORT $LN59@do_ssh2_tr
$LN55@do_ssh2_tr:
; Line 6821
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 6821			; 00001aa5H
	jmp	$LN399@do_ssh2_tr
$LN54@do_ssh2_tr:
	xor	ecx, ecx
	jne	SHORT $LN55@do_ssh2_tr
; Line 6822
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN57@do_ssh2_tr
; Line 6824
	push	OFFSET $SG92021
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN50@do_ssh2_tr:
; Line 6825
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 0
	jmp	$LN399@do_ssh2_tr
	xor	ecx, ecx
	jne	SHORT $LN50@do_ssh2_tr
$LN57@do_ssh2_tr:
; Line 6827
	cmp	DWORD PTR _pktin$[ebp], 0
	jne	SHORT $LN55@do_ssh2_tr
	cmp	DWORD PTR _inlen$[ebp], 0
	jg	SHORT $LN55@do_ssh2_tr
; Line 6828
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+560]
	mov	DWORD PTR [edx+240], ecx
$LN59@do_ssh2_tr:
; Line 6830
	push	0
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_set_frozen
	add	esp, 8
; Line 6831
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+240], 0
	jne	SHORT $LN61@do_ssh2_tr
; Line 6833
	push	1
	push	0
	push	0
	push	OFFSET $SG92027
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_disconnect
	add	esp, 20					; 00000014H
$LN46@do_ssh2_tr:
; Line 6834
	mov	edx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [edx], 0
	jmp	$LN399@do_ssh2_tr
	xor	eax, eax
	jne	SHORT $LN46@do_ssh2_tr
$LN61@do_ssh2_tr:
; Line 6837
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	call	_safefree
	add	esp, 4
; Line 6842
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	mov	DWORD PTR [eax+152], edx
; Line 6843
	jmp	SHORT $LN43@do_ssh2_tr
$LN66@do_ssh2_tr:
; Line 6850
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+152]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN42@do_ssh2_tr
; Line 6851
	push	OFFSET $SG92033
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_bomb_out
	add	esp, 8
$LN41@do_ssh2_tr:
; Line 6852
	mov	edx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [edx], 0
	jmp	$LN399@do_ssh2_tr
	xor	eax, eax
	jne	SHORT $LN41@do_ssh2_tr
$LN42@do_ssh2_tr:
; Line 6854
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	push	edx
	call	_safefree
	add	esp, 4
$LN43@do_ssh2_tr:
; Line 6856
	mov	esi, esp
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+148]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 6863
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+228], 0
	jne	SHORT $LN38@do_ssh2_tr
; Line 6866
	push	32					; 00000020H
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 132				; 00000084H
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	add	ecx, 156				; 0000009cH
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 6867
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+144]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR [edx+188], eax
; Line 6868
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+188], 32			; 00000020H
	jbe	SHORT $LN414@do_ssh2_tr
	push	6868					; 00001ad4H
	push	OFFSET $SG92040
	push	OFFSET $SG92041
	call	__wassert
	add	esp, 12					; 0000000cH
$LN414@do_ssh2_tr:
; Line 6869
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+228], 1
$LN38@do_ssh2_tr:
; Line 6875
	push	21					; 00000015H
	call	_ssh2_pkt_init
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+236], eax
; Line 6876
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+236]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_pkt_send_noqueue
	add	esp, 8
; Line 6877
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+1628], 0
; Line 6883
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+104], 0
	je	SHORT $LN37@do_ssh2_tr
; Line 6884
	mov	esi, esp
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN37@do_ssh2_tr:
; Line 6885
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	DWORD PTR [eax+96], edx
; Line 6886
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	esi, esp
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+104], eax
; Line 6888
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+120], 0
	je	SHORT $LN36@do_ssh2_tr
; Line 6889
	mov	esi, esp
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+112]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN36@do_ssh2_tr:
; Line 6890
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR [edx+112], ecx
; Line 6891
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+112]
	mov	esi, esp
	mov	ecx, DWORD PTR [eax]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+120], eax
; Line 6893
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+136], 0
	je	SHORT $LN35@do_ssh2_tr
; Line 6894
	mov	esi, esp
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN35@do_ssh2_tr:
; Line 6895
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR [eax+128], edx
; Line 6896
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	esi, esp
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+136], eax
; Line 6904
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+144]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [ecx+12]
	shl	edx, 1
	cmp	edx, 64					; 00000040H
	jbe	SHORT $LN415@do_ssh2_tr
	push	6904					; 00001af8H
	push	OFFSET $SG92047
	push	OFFSET $SG92048
	call	__wassert
	add	esp, 12					; 0000000cH
$LN415@do_ssh2_tr:
; Line 6905
	lea	ecx, DWORD PTR _keyspace$92045[ebp]
	push	ecx
	push	67					; 00000043H
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 132				; 00000084H
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_mkkey
	add	esp, 20					; 00000014H
; Line 6907
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	eax, DWORD PTR [ecx+32]
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [edx+144]
	mov	edx, DWORD PTR [ecx+28]
	mov	ecx, DWORD PTR [edx+12]
	shl	ecx, 1
	cmp	eax, ecx
	jle	SHORT $LN416@do_ssh2_tr
	push	6907					; 00001afbH
	push	OFFSET $SG92050
	push	OFFSET $SG92051
	call	__wassert
	add	esp, 12					; 0000000cH
$LN416@do_ssh2_tr:
; Line 6908
	mov	esi, esp
	lea	eax, DWORD PTR _keyspace$92045[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 6909
	lea	eax, DWORD PTR _keyspace$92045[ebp]
	push	eax
	push	65					; 00000041H
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 132				; 00000084H
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+40]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_mkkey
	add	esp, 20					; 00000014H
; Line 6911
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	mov	ecx, DWORD PTR [edx+28]
	mov	edx, DWORD PTR [ecx+12]
	shl	edx, 1
	cmp	DWORD PTR [eax+28], edx
	jle	SHORT $LN417@do_ssh2_tr
	push	6911					; 00001affH
	push	OFFSET $SG92053
	push	OFFSET $SG92054
	call	__wassert
	add	esp, 12					; 0000000cH
$LN417@do_ssh2_tr:
; Line 6912
	mov	esi, esp
	lea	ecx, DWORD PTR _keyspace$92045[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+104]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 6913
	lea	ecx, DWORD PTR _keyspace$92045[ebp]
	push	ecx
	push	69					; 00000045H
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 132				; 00000084H
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_mkkey
	add	esp, 20					; 00000014H
; Line 6915
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+144]
	mov	edx, DWORD PTR [eax+28]
	mov	eax, DWORD PTR [edx+12]
	shl	eax, 1
	cmp	DWORD PTR [ecx+40], eax
	jle	SHORT $LN418@do_ssh2_tr
	push	6915					; 00001b03H
	push	OFFSET $SG92056
	push	OFFSET $SG92057
	call	__wassert
	add	esp, 12					; 0000000cH
$LN418@do_ssh2_tr:
; Line 6916
	mov	esi, esp
	lea	edx, DWORD PTR _keyspace$92045[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+112]
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 6917
	push	64					; 00000040H
	lea	edx, DWORD PTR _keyspace$92045[ebp]
	push	edx
	call	_smemclr
	add	esp, 8
; Line 6921
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	edx, DWORD PTR [ecx+40]
	push	edx
	push	OFFSET $SG92058
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 6923
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	push	OFFSET $SG92059
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 6924
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+128]
	cmp	DWORD PTR [eax+36], 0
	je	SHORT $LN34@do_ssh2_tr
; Line 6926
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	push	OFFSET $SG92061
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 12					; 0000000cH
$LN34@do_ssh2_tr:
; Line 6932
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+312], 0
; Line 6933
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_pkt_queuesend
	add	esp, 4
$LN30@do_ssh2_tr:
; Line 6938
	mov	ecx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [ecx], 6938			; 00001b1aH
	jmp	$LN399@do_ssh2_tr
$LN29@do_ssh2_tr:
	xor	edx, edx
	jne	SHORT $LN30@do_ssh2_tr
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN30@do_ssh2_tr
; Line 6939
	mov	eax, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [eax+8], 21			; 00000015H
	je	SHORT $LN26@do_ssh2_tr
; Line 6940
	push	OFFSET $SG92070
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_bomb_out
	add	esp, 8
$LN25@do_ssh2_tr:
; Line 6941
	mov	edx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [edx], 0
	jmp	$LN399@do_ssh2_tr
	xor	eax, eax
	jne	SHORT $LN25@do_ssh2_tr
$LN26@do_ssh2_tr:
; Line 6943
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+1624], 0
; Line 6949
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+108], 0
	je	SHORT $LN22@do_ssh2_tr
; Line 6950
	mov	esi, esp
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+100]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN22@do_ssh2_tr:
; Line 6951
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	DWORD PTR [edx+100], ecx
; Line 6952
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+100]
	mov	esi, esp
	mov	ecx, DWORD PTR [eax]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+108], eax
; Line 6954
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+124], 0
	je	SHORT $LN21@do_ssh2_tr
; Line 6955
	mov	esi, esp
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN21@do_ssh2_tr:
; Line 6956
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+116], edx
; Line 6957
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	esi, esp
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+124], eax
; Line 6959
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+140], 0
	je	SHORT $LN20@do_ssh2_tr
; Line 6960
	mov	esi, esp
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+132]
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN20@do_ssh2_tr:
; Line 6961
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	DWORD PTR [edx+132], ecx
; Line 6962
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+132]
	mov	esi, esp
	mov	ecx, DWORD PTR [eax+20]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+140], eax
; Line 6970
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR [edx+12]
	shl	eax, 1
	cmp	eax, 64					; 00000040H
	jbe	SHORT $LN419@do_ssh2_tr
	push	6970					; 00001b3aH
	push	OFFSET $SG92079
	push	OFFSET $SG92080
	call	__wassert
	add	esp, 12					; 0000000cH
$LN419@do_ssh2_tr:
; Line 6971
	lea	edx, DWORD PTR _keyspace$92077[ebp]
	push	edx
	push	68					; 00000044H
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 132				; 00000084H
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_mkkey
	add	esp, 20					; 00000014H
; Line 6973
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	eax, DWORD PTR [edx+32]
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	mov	ecx, DWORD PTR [edx+28]
	mov	edx, DWORD PTR [ecx+12]
	shl	edx, 1
	cmp	eax, edx
	jle	SHORT $LN420@do_ssh2_tr
	push	6973					; 00001b3dH
	push	OFFSET $SG92082
	push	OFFSET $SG92083
	call	__wassert
	add	esp, 12					; 0000000cH
$LN420@do_ssh2_tr:
; Line 6974
	mov	esi, esp
	lea	ecx, DWORD PTR _keyspace$92077[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 6975
	lea	ecx, DWORD PTR _keyspace$92077[ebp]
	push	ecx
	push	66					; 00000042H
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 132				; 00000084H
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_mkkey
	add	esp, 20					; 00000014H
; Line 6977
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+144]
	mov	edx, DWORD PTR [eax+28]
	mov	eax, DWORD PTR [edx+12]
	shl	eax, 1
	cmp	DWORD PTR [ecx+28], eax
	jle	SHORT $LN421@do_ssh2_tr
	push	6977					; 00001b41H
	push	OFFSET $SG92085
	push	OFFSET $SG92086
	call	__wassert
	add	esp, 12					; 0000000cH
$LN421@do_ssh2_tr:
; Line 6978
	mov	esi, esp
	lea	edx, DWORD PTR _keyspace$92077[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+100]
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 6979
	lea	edx, DWORD PTR _keyspace$92077[ebp]
	push	edx
	push	70					; 00000046H
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 132				; 00000084H
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_mkkey
	add	esp, 20					; 00000014H
; Line 6981
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	eax, DWORD PTR [ecx+28]
	mov	ecx, DWORD PTR [eax+12]
	shl	ecx, 1
	cmp	DWORD PTR [edx+40], ecx
	jle	SHORT $LN422@do_ssh2_tr
	push	6981					; 00001b45H
	push	OFFSET $SG92088
	push	OFFSET $SG92089
	call	__wassert
	add	esp, 12					; 0000000cH
$LN422@do_ssh2_tr:
; Line 6982
	mov	esi, esp
	lea	eax, DWORD PTR _keyspace$92077[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 6983
	push	64					; 00000040H
	lea	eax, DWORD PTR _keyspace$92077[ebp]
	push	eax
	call	_smemclr
	add	esp, 8
; Line 6986
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	eax, DWORD PTR [edx+40]
	push	eax
	push	OFFSET $SG92090
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 6988
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+116]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	push	OFFSET $SG92091
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 6989
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	cmp	DWORD PTR [ecx+36], 0
	je	SHORT $LN19@do_ssh2_tr
; Line 6991
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+132]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	push	OFFSET $SG92093
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 12					; 0000000cH
$LN19@do_ssh2_tr:
; Line 6996
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	call	_freebn
	add	esp, 4
; Line 7002
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+1652], 0
	je	SHORT $LN18@do_ssh2_tr
; Line 7003
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+1652]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 7004
	mov	DWORD PTR _pktin$[ebp], 0
; Line 7005
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+1652], 0
; Line 7006
	jmp	$begin_key_exchange$91561
$LN18@do_ssh2_tr:
; Line 7012
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+1640], 0
; Line 7013
	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+1648], eax
; Line 7014
	push	24					; 00000018H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN16@do_ssh2_tr
; Line 7016
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	push	OFFSET _ssh2_timer
	push	24					; 00000018H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	imul	eax, 60					; 0000003cH
	imul	eax, 1000				; 000003e8H
	push	eax
	call	_schedule_timer
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+1644], eax
$LN16@do_ssh2_tr:
; Line 7034
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN14@do_ssh2_tr
	mov	edx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [edx+8], 20			; 00000014H
	je	SHORT $LN15@do_ssh2_tr
$LN14@do_ssh2_tr:
	cmp	DWORD PTR _pktin$[ebp], 0
	jne	SHORT $wait_for_rekey$92103
	cmp	DWORD PTR _inlen$[ebp], 0
	jl	SHORT $LN15@do_ssh2_tr
$wait_for_rekey$92103:
; Line 7036
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+524], 0
	jne	SHORT $LN11@do_ssh2_tr
; Line 7037
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+524], 1
; Line 7041
	push	0
	push	0
	push	0
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_do_ssh2_authconn
	add	esp, 16					; 00000010H
$LN11@do_ssh2_tr:
; Line 7043
	mov	eax, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [eax], 7043			; 00001b83H
	jmp	$LN399@do_ssh2_tr
$LN10@do_ssh2_tr:
	xor	ecx, ecx
	jne	SHORT $LN11@do_ssh2_tr
; Line 7044
	jmp	SHORT $LN16@do_ssh2_tr
$LN15@do_ssh2_tr:
; Line 7045
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN7@do_ssh2_tr
; Line 7046
	push	OFFSET $SG92112
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 7047
	jmp	$LN6@do_ssh2_tr
$LN7@do_ssh2_tr:
; Line 7048
	cmp	DWORD PTR _inlen$[ebp], -2		; fffffffeH
	jne	SHORT $LN5@do_ssh2_tr
; Line 7067
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+220], 0
	je	SHORT $LN423@do_ssh2_tr
	push	7067					; 00001b9bH
	push	OFFSET $SG92116
	push	OFFSET $SG92117
	call	__wassert
	add	esp, 12					; 0000000cH
$LN423@do_ssh2_tr:
; Line 7068
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+220], 1
; Line 7069
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+224], 0
	jne	SHORT $LN4@do_ssh2_tr
; Line 7071
	jmp	$wait_for_rekey$92103
$LN4@do_ssh2_tr:
; Line 7073
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+224], 0
$LN5@do_ssh2_tr:
; Line 7083
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	and	ecx, 64					; 00000040H
	je	$LN3@do_ssh2_tr
; Line 7085
	mov	edx, DWORD PTR _in$[ebp]
	push	edx
	push	OFFSET $SG92121
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 7088
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+1628], 0
; Line 7089
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+1624], 0
; Line 7090
	push	24					; 00000018H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@do_ssh2_tr
; Line 7093
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	push	OFFSET _ssh2_timer
	push	24					; 00000018H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	imul	eax, 60					; 0000003cH
	imul	eax, 1000				; 000003e8H
	push	eax
	call	_schedule_timer
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+1644], eax
$LN2@do_ssh2_tr:
; Line 7095
	jmp	$wait_for_rekey$92103
; Line 7096
	jmp	SHORT $LN6@do_ssh2_tr
$LN3@do_ssh2_tr:
; Line 7097
	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	push	OFFSET $SG92125
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 12					; 0000000cH
$LN6@do_ssh2_tr:
; Line 7100
	jmp	$begin_key_exchange$91561
$LN396@do_ssh2_tr:
; Line 7102
	mov	edx, DWORD PTR _crLine$91550[ebp]
	mov	DWORD PTR [edx], 0
$LN399@do_ssh2_tr:
; Line 7103
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN434@do_ssh2_tr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN434@do_ssh2_tr:
	DD	6
	DD	$LN433@do_ssh2_tr
$LN433@do_ssh2_tr:
	DD	-52					; ffffffccH
	DD	4
	DD	$LN427@do_ssh2_tr
	DD	-76					; ffffffb4H
	DD	4
	DD	$LN428@do_ssh2_tr
	DD	-120					; ffffff88H
	DD	4
	DD	$LN429@do_ssh2_tr
	DD	-160					; ffffff60H
	DD	4
	DD	$LN430@do_ssh2_tr
	DD	-240					; ffffff10H
	DD	64					; 00000040H
	DD	$LN431@do_ssh2_tr
	DD	-312					; fffffec8H
	DD	64					; 00000040H
	DD	$LN432@do_ssh2_tr
$LN432@do_ssh2_tr:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
$LN431@do_ssh2_tr:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
$LN430@do_ssh2_tr:
	DB	107					; 0000006bH
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	49					; 00000031H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN429@do_ssh2_tr:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN428@do_ssh2_tr:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN427@do_ssh2_tr:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
	npad	1
$LN435@do_ssh2_tr:
	DD	$LN383@do_ssh2_tr
	DD	$LN385@do_ssh2_tr
	DD	$LN386@do_ssh2_tr
	DD	$LN387@do_ssh2_tr
	DD	$LN384@do_ssh2_tr
$LN436@do_ssh2_tr:
	DD	$LN370@do_ssh2_tr
	DD	$LN373@do_ssh2_tr
	DD	$LN376@do_ssh2_tr
	DD	$LN372@do_ssh2_tr
	DD	$LN375@do_ssh2_tr
	DD	$LN371@do_ssh2_tr
_do_ssh2_transport ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = 8						; size = 4
_text$ = 12						; size = 4
_bomb_out PROC
; Line 957
	push	ebp
	mov	ebp, esp
; Line 958
	push	0
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh_do_close
	add	esp, 8
; Line 959
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 960
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	push	OFFSET $SG88133
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_connection_fatal
	add	esp, 12					; 0000000cH
; Line 961
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 962
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_bomb_out ENDP
; Function compile flags: /Odtp /RTCsu
_lenblk$ = -8						; size = 4
_h$ = 8							; size = 4
_s$ = 12						; size = 4
_str$ = 16						; size = 4
_len$ = 20						; size = 4
_hash_string PROC
; Line 1995
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1997
	mov	eax, DWORD PTR _len$[ebp]
	sar	eax, 24					; 00000018H
	mov	BYTE PTR _lenblk$[ebp], al
	mov	ecx, DWORD PTR _len$[ebp]
	sar	ecx, 16					; 00000010H
	mov	BYTE PTR _lenblk$[ebp+1], cl
	mov	edx, DWORD PTR _len$[ebp]
	sar	edx, 8
	mov	BYTE PTR _lenblk$[ebp+2], dl
	mov	al, BYTE PTR _len$[ebp]
	mov	BYTE PTR _lenblk$[ebp+3], al
; Line 1998
	mov	esi, esp
	push	4
	lea	ecx, DWORD PTR _lenblk$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	eax, DWORD PTR _h$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1999
	mov	esi, esp
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _h$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2000
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@hash_strin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@hash_strin:
	DD	1
	DD	$LN4@hash_strin
$LN4@hash_strin:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@hash_strin
$LN3@hash_strin:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	107					; 0000006bH
	DB	0
_hash_string ENDP
; Function compile flags: /Odtp /RTCsu
_intblk$ = -8						; size = 4
_h$ = 8							; size = 4
_s$ = 12						; size = 4
_i$ = 16						; size = 4
_hash_uint32 PROC
; Line 2003
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2005
	mov	eax, DWORD PTR _i$[ebp]
	shr	eax, 24					; 00000018H
	mov	BYTE PTR _intblk$[ebp], al
	mov	ecx, DWORD PTR _i$[ebp]
	shr	ecx, 16					; 00000010H
	mov	BYTE PTR _intblk$[ebp+1], cl
	mov	edx, DWORD PTR _i$[ebp]
	shr	edx, 8
	mov	BYTE PTR _intblk$[ebp+2], dl
	mov	al, BYTE PTR _i$[ebp]
	mov	BYTE PTR _intblk$[ebp+3], al
; Line 2006
	mov	esi, esp
	push	4
	lea	ecx, DWORD PTR _intblk$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	eax, DWORD PTR _h$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2007
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@hash_uint3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@hash_uint3:
	DD	1
	DD	$LN4@hash_uint3
$LN4@hash_uint3:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@hash_uint3
$LN3@hash_uint3:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	107					; 0000006bH
	DB	0
_hash_uint32 ENDP
; Function compile flags: /Odtp /RTCsu
_pkt$ = 8						; size = 4
_value$ = 12						; size = 1
_ssh2_pkt_addbool PROC
; Line 2033
	push	ebp
	mov	ebp, esp
; Line 2034
	push	1
	lea	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	call	_ssh_pkt_adddata
	add	esp, 12					; 0000000cH
; Line 2035
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh2_pkt_addbool ENDP
; Function compile flags: /Odtp /RTCsu
_pkt$ = 8						; size = 4
_data$ = 12						; size = 4
_len$ = 16						; size = 4
_ssh_pkt_addstring_data PROC
; Line 2054
	push	ebp
	mov	ebp, esp
; Line 2055
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_adddata
	add	esp, 12					; 0000000cH
; Line 2056
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx+24]
	sar	edx, 24					; 00000018H
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [eax+24]
	mov	BYTE PTR [ecx+eax-4], dl
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [ecx]
	sub	eax, DWORD PTR [edx+24]
	sar	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [ecx+24]
	mov	BYTE PTR [edx+ecx-3], al
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [edx]
	sub	ecx, DWORD PTR [eax+24]
	sar	ecx, 8
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [edx+24]
	mov	BYTE PTR [eax+edx-2], cl
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [eax+24]
	mov	BYTE PTR [ecx+eax-1], dl
; Line 2057
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh_pkt_addstring_data ENDP
_TEXT	ENDS
EXTRN	_memmove:PROC
EXTRN	_bignum_byte:PROC
EXTRN	_bignum_bitcount:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_n$ = -12						; size = 4
_i$ = -8						; size = 4
_p$ = -4						; size = 4
_b$ = 8							; size = 4
_len$ = 12						; size = 4
_ssh2_mpint_fmt PROC
; Line 2072
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2074
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_bignum_bitcount
	add	esp, 4
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR _n$[ebp], eax
; Line 2075
	push	1
	mov	ecx, DWORD PTR _n$[ebp]
	add	ecx, 1
	push	ecx
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _p$[ebp], eax
; Line 2076
	mov	edx, DWORD PTR _p$[ebp]
	mov	BYTE PTR [edx], 0
; Line 2077
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN5@ssh2_mpint
$LN4@ssh2_mpint:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@ssh2_mpint:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _n$[ebp]
	jg	SHORT $LN3@ssh2_mpint
; Line 2078
	mov	edx, DWORD PTR _n$[ebp]
	sub	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_bignum_byte
	add	esp, 8
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [ecx], al
	jmp	SHORT $LN4@ssh2_mpint
$LN3@ssh2_mpint:
; Line 2079
	mov	DWORD PTR _i$[ebp], 0
$LN2@ssh2_mpint:
; Line 2080
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR _n$[ebp]
	jg	SHORT $LN1@ssh2_mpint
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN1@ssh2_mpint
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	and	eax, 128				; 00000080H
	jne	SHORT $LN1@ssh2_mpint
; Line 2081
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	jmp	SHORT $LN2@ssh2_mpint
$LN1@ssh2_mpint:
; Line 2082
	mov	edx, DWORD PTR _n$[ebp]
	add	edx, 1
	sub	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_memmove
	add	esp, 12					; 0000000cH
; Line 2083
	mov	edx, DWORD PTR _n$[ebp]
	add	edx, 1
	sub	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax], edx
; Line 2084
	mov	eax, DWORD PTR _p$[ebp]
; Line 2085
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_mpint_fmt ENDP
; Function compile flags: /Odtp /RTCsu
_len$ = -12						; size = 4
_p$ = -4						; size = 4
_pkt$ = 8						; size = 4
_b$ = 12						; size = 4
_ssh2_pkt_addmp PROC
; Line 2087
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 2090
	lea	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ssh2_mpint_fmt
	add	esp, 8
	mov	DWORD PTR _p$[ebp], eax
; Line 2091
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 2092
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_addstring_data
	add	esp, 12					; 0000000cH
; Line 2093
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 2094
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@ssh2_pkt_a
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@ssh2_pkt_a:
	DD	1
	DD	$LN4@ssh2_pkt_a
$LN4@ssh2_pkt_a:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@ssh2_pkt_a
$LN3@ssh2_pkt_a:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
_ssh2_pkt_addmp ENDP
; Function compile flags: /Odtp /RTCsu
_i$ = -4						; size = 4
_ssh$ = 8						; size = 4
_ssh2_pkt_queuesend PROC
; Line 2451
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2454
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+312], 0
	je	SHORT $LN6@ssh2_pkt_q@2
	push	2454					; 00000996H
	push	OFFSET $SG89125
	push	OFFSET $SG89126
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@ssh2_pkt_q@2:
; Line 2456
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@ssh2_pkt_q@2
$LN2@ssh2_pkt_q@2:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN3@ssh2_pkt_q@2:
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+304]
	jge	SHORT $LN1@ssh2_pkt_q@2
; Line 2457
	push	0
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+300]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_pkt_defer_noqueue
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN2@ssh2_pkt_q@2
$LN1@ssh2_pkt_q@2:
; Line 2458
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+304], 0
; Line 2460
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_pkt_defersend
	add	esp, 4
; Line 2461
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_pkt_queuesend ENDP
; Function compile flags: /Odtp /RTCsu
_len$ = -12						; size = 4
_p$ = -4						; size = 4
_h$ = 8							; size = 4
_s$ = 12						; size = 4
_b$ = 16						; size = 4
_hash_mpint PROC
; Line 2478
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 2481
	lea	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ssh2_mpint_fmt
	add	esp, 8
	mov	DWORD PTR _p$[ebp], eax
; Line 2482
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _h$[ebp]
	push	edx
	call	_hash_string
	add	esp, 16					; 00000010H
; Line 2483
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 2484
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@hash_mpint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@hash_mpint:
	DD	1
	DD	$LN4@hash_mpint
$LN4@hash_mpint:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@hash_mpint
$LN3@hash_mpint:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
_hash_mpint ENDP
_TEXT	ENDS
EXTRN	_bignum_from_bytes:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_b$ = -28						; size = 4
_length$ = -20						; size = 4
_p$ = -8						; size = 4
_pkt$ = 8						; size = 4
_ssh2_pkt_getmp PROC
; Line 2563
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 2568
	lea	eax, DWORD PTR _length$[ebp]
	push	eax
	lea	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 2569
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN2@ssh2_pkt_g@2
; Line 2570
	xor	eax, eax
	jmp	SHORT $LN3@ssh2_pkt_g@2
$LN2@ssh2_pkt_g@2:
; Line 2571
	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, BYTE PTR [eax]
	and	ecx, 128				; 00000080H
	je	SHORT $LN1@ssh2_pkt_g@2
; Line 2572
	xor	eax, eax
	jmp	SHORT $LN3@ssh2_pkt_g@2
$LN1@ssh2_pkt_g@2:
; Line 2573
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_bignum_from_bytes
	add	esp, 8
	mov	DWORD PTR _b$[ebp], eax
; Line 2574
	mov	eax, DWORD PTR _b$[ebp]
$LN3@ssh2_pkt_g@2:
; Line 2575
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@ssh2_pkt_g@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@ssh2_pkt_g@2:
	DD	2
	DD	$LN7@ssh2_pkt_g@2
$LN7@ssh2_pkt_g@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@ssh2_pkt_g@2
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@ssh2_pkt_g@2
$LN6@ssh2_pkt_g@2:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN5@ssh2_pkt_g@2:
	DB	112					; 00000070H
	DB	0
_ssh2_pkt_getmp ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = -4						; size = 4
_sshv$ = 8						; size = 4
_ret$ = 12						; size = 4
_ssh_dialog_callback PROC
; Line 3608
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 3609
	mov	eax, DWORD PTR _sshv$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 3611
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [ecx+560], edx
; Line 3613
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+364], 1
	jne	SHORT $LN2@ssh_dialog
; Line 3614
	push	0
	push	-1
	push	0
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_do_ssh1_login
	add	esp, 16					; 00000010H
; Line 3615
	jmp	SHORT $LN1@ssh_dialog
$LN2@ssh_dialog:
; Line 3616
	push	0
	push	-1
	push	0
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_do_ssh2_transport
	add	esp, 16					; 00000010H
$LN1@ssh_dialog:
; Line 3622
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh_process_queued_incoming_data
	add	esp, 4
; Line 3623
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_dialog_callback ENDP
; Function compile flags: /Odtp /RTCsu
_pktout$89989 = -8					; size = 4
_error$ = -4						; size = 4
_ssh$ = 8						; size = 4
_client_reason$ = 12					; size = 4
_wire_reason$ = 16					; size = 4
_code$ = 20						; size = 4
_clean_exit$ = 24					; size = 4
_ssh_disconnect PROC
; Line 3664
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 3666
	cmp	DWORD PTR _client_reason$[ebp], 0
	jne	SHORT $LN7@ssh_discon
; Line 3667
	mov	eax, DWORD PTR _wire_reason$[ebp]
	mov	DWORD PTR _client_reason$[ebp], eax
$LN7@ssh_discon:
; Line 3668
	cmp	DWORD PTR _client_reason$[ebp], 0
	je	SHORT $LN6@ssh_discon
; Line 3669
	mov	ecx, DWORD PTR _client_reason$[ebp]
	push	ecx
	push	OFFSET $SG89982
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _error$[ebp], eax
; Line 3670
	jmp	SHORT $LN5@ssh_discon
$LN6@ssh_discon:
; Line 3671
	push	OFFSET $SG89984
	call	_dupstr
	add	esp, 4
	mov	DWORD PTR _error$[ebp], eax
$LN5@ssh_discon:
; Line 3672
	cmp	DWORD PTR _wire_reason$[ebp], 0
	je	SHORT $LN4@ssh_discon
; Line 3673
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+364], 1
	jne	SHORT $LN3@ssh_discon
; Line 3675
	push	0
	mov	eax, DWORD PTR _wire_reason$[ebp]
	push	eax
	push	4
	push	1
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_send_packet
	add	esp, 20					; 00000014H
	jmp	SHORT $LN4@ssh_discon
$LN3@ssh_discon:
; Line 3676
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+364], 2
	jne	SHORT $LN4@ssh_discon
; Line 3677
	push	1
	call	_ssh2_pkt_init
	add	esp, 4
	mov	DWORD PTR _pktout$89989[ebp], eax
; Line 3678
	mov	eax, DWORD PTR _code$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktout$89989[ebp]
	push	ecx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 3679
	mov	edx, DWORD PTR _wire_reason$[ebp]
	push	edx
	mov	eax, DWORD PTR _pktout$89989[ebp]
	push	eax
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 3680
	push	OFFSET $SG89990
	mov	ecx, DWORD PTR _pktout$89989[ebp]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 3681
	mov	edx, DWORD PTR _pktout$89989[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_pkt_send_noqueue
	add	esp, 8
$LN4@ssh_discon:
; Line 3684
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+264], 1
; Line 3685
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR _clean_exit$[ebp]
	mov	DWORD PTR [edx+268], eax
; Line 3686
	push	0
	push	0
	mov	ecx, DWORD PTR _error$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_closing
	add	esp, 16					; 00000010H
; Line 3687
	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 3688
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_disconnect ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_memchr:PROC
EXTRN	_rsadecrypt:PROC
EXTRN	_loadrsakey:PROC
EXTRN	_ssh1_read_bignum:PROC
EXTRN	_agent_query:PROC
EXTRN	_key_type_to_str:PROC
EXTRN	_rsakey_encrypted:PROC
EXTRN	_rsakey_pubblob:PROC
EXTRN	_key_type:PROC
EXTRN	_filename_to_str:PROC
EXTRN	_filename_is_null:PROC
EXTRN	_conf_get_filename:PROC
EXTRN	_free_prompts:PROC
EXTRN	_get_userpass_input:PROC
EXTRN	_add_prompt:PROC
EXTRN	_new_prompts:PROC
EXTRN	_get_remote_username:PROC
EXTRN	_fflush:PROC
EXTRN	_crcda_make_context:PROC
EXTRN	_ssh_3des:BYTE
EXTRN	_ssh_des:BYTE
EXTRN	_ssh_blowfish_ssh1:BYTE
EXTRN	_rsaencrypt:PROC
EXTRN	_rsastr_fmt:PROC
EXTRN	_rsastr_len:PROC
EXTRN	_MD5Final:PROC
EXTRN	_MD5Update:PROC
EXTRN	_MD5Init:PROC
EXTRN	_rsa_fingerprint:PROC
EXTRN	_strcpy:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv1574 = -756						; size = 4
tv1462 = -752						; size = 4
tv960 = -748						; size = 4
tv543 = -744						; size = 4
tv485 = -740						; size = 4
tv486 = -736						; size = 4
tv435 = -732						; size = 4
tv375 = -728						; size = 4
tv230 = -724						; size = 4
tv71 = -720						; size = 4
tv67 = -716						; size = 4
_len$90691 = -712					; size = 4
_len$90682 = -708					; size = 4
_ss$90681 = -704					; size = 4
_string$90680 = -696					; size = 64
_randomstr$90658 = -628					; size = 4
_i$90657 = -624						; size = 4
_pwlen$90656 = -620					; size = 4
_top$90655 = -616					; size = 4
_bottom$90654 = -612					; size = 4
_ret$90634 = -608					; size = 4
_prompt$90609 = -604					; size = 4
_instr_suf$90608 = -600					; size = 4
_challengelen$90607 = -592				; size = 4
_challenge$90606 = -580					; size = 4
_prompt$90576 = -572					; size = 4
_instr_suf$90575 = -568					; size = 4
_challengelen$90574 = -560				; size = 4
_challenge$90573 = -548					; size = 4
_response$90533 = -540					; size = 4
_challenge$90532 = -536					; size = 4
_buffer$90531 = -528					; size = 32
_i$90530 = -492						; size = 4
_ret$90481 = -488					; size = 4
_error$90475 = -480					; size = 4
_passphrase$90473 = -472				; size = 4
_got_passphrase$90466 = -468				; size = 4
_retlen$90409 = -460					; size = 4
_len$90408 = -452					; size = 4
_vret$90407 = -444					; size = 4
_ret$90406 = -436					; size = 4
_q$90405 = -432						; size = 4
_agentreq$90404 = -428					; size = 4
_ok$90363 = -424					; size = 4
_n$90362 = -420						; size = 4
_pkblob$90361 = -416					; size = 4
_r$90326 = -408						; size = 4
_msgbuf$90316 = -400					; size = 4
_msgbuf$90311 = -396					; size = 4
_error$90307 = -388					; size = 4
_keytype$90304 = -380					; size = 4
_userlog$90289 = -376					; size = 4
_ret$90269 = -372					; size = 4
_next_cipher$90187 = -368				; size = 4
_i$90183 = -364						; size = 4
_cipher_string$90181 = -360				; size = 4
_warn$90180 = -356					; size = 4
_cipher_chosen$90179 = -352				; size = 4
_keystr$90132 = -348					; size = 4
_fingerprint$90131 = -340				; size = 100
_len$90130 = -236					; size = 4
_logmsg$90114 = -228					; size = 80
_crLine$90083 = -144					; size = 4
_s$ = -140						; size = 4
_md5c$ = -132						; size = 92
_ptr$ = -36						; size = 4
_cookie$ = -28						; size = 8
_ret$ = -16						; size = 4
_j$ = -12						; size = 4
_i$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_ssh$ = 8						; size = 4
_in$ = 12						; size = 4
_inlen$ = 16						; size = 4
_pktin$ = 20						; size = 4
_do_ssh1_login PROC
; Line 3748
	push	ebp
	mov	ebp, esp
	sub	esp, 756				; 000002f4H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-756]
	mov	ecx, 189				; 000000bdH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 3780
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+412], 0
	jne	SHORT $LN381@do_ssh1_lo
	push	252					; 000000fcH
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR tv67[ebp], eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR tv67[ebp]
	mov	DWORD PTR [ecx+412], edx
	mov	eax, DWORD PTR tv67[ebp]
	mov	DWORD PTR _s$[ebp], eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx], 0
$LN381@do_ssh1_lo:
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+412]
	mov	DWORD PTR _s$[ebp], eax
; Line 3782
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR _crLine$90083[ebp], ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv71[ebp], eax
	cmp	DWORD PTR tv71[ebp], 4260		; 000010a4H
	jg	$LN397@do_ssh1_lo
	cmp	DWORD PTR tv71[ebp], 4260		; 000010a4H
	je	$LN176@do_ssh1_lo
	cmp	DWORD PTR tv71[ebp], 4034		; 00000fc2H
	jg	SHORT $LN398@do_ssh1_lo
	cmp	DWORD PTR tv71[ebp], 4034		; 00000fc2H
	je	$LN263@do_ssh1_lo
	cmp	DWORD PTR tv71[ebp], 3881		; 00000f29H
	jg	SHORT $LN399@do_ssh1_lo
	cmp	DWORD PTR tv71[ebp], 3881		; 00000f29H
	je	$LN336@do_ssh1_lo
	cmp	DWORD PTR tv71[ebp], 0
	je	$LN378@do_ssh1_lo
	cmp	DWORD PTR tv71[ebp], 3785		; 00000ec9H
	je	$LN372@do_ssh1_lo
	jmp	$LN379@do_ssh1_lo
$LN399@do_ssh1_lo:
	cmp	DWORD PTR tv71[ebp], 3967		; 00000f7fH
	je	$LN287@do_ssh1_lo
	jmp	$LN379@do_ssh1_lo
$LN398@do_ssh1_lo:
	mov	ecx, DWORD PTR tv71[ebp]
	sub	ecx, 4054				; 00000fd6H
	mov	DWORD PTR tv71[ebp], ecx
	cmp	DWORD PTR tv71[ebp], 169		; 000000a9H
	ja	$LN379@do_ssh1_lo
	mov	edx, DWORD PTR tv71[ebp]
	movzx	eax, BYTE PTR $LN401@do_ssh1_lo[edx]
	jmp	DWORD PTR $LN420@do_ssh1_lo[eax*4]
$LN397@do_ssh1_lo:
	cmp	DWORD PTR tv71[ebp], 4471		; 00001177H
	jg	SHORT $LN400@do_ssh1_lo
	cmp	DWORD PTR tv71[ebp], 4471		; 00001177H
	je	$LN84@do_ssh1_lo
	mov	ecx, DWORD PTR tv71[ebp]
	sub	ecx, 4280				; 000010b8H
	mov	DWORD PTR tv71[ebp], ecx
	cmp	DWORD PTR tv71[ebp], 164		; 000000a4H
	ja	$LN379@do_ssh1_lo
	mov	edx, DWORD PTR tv71[ebp]
	movzx	eax, BYTE PTR $LN402@do_ssh1_lo[edx]
	jmp	DWORD PTR $LN421@do_ssh1_lo[eax*4]
$LN400@do_ssh1_lo:
	cmp	DWORD PTR tv71[ebp], 4514		; 000011a2H
	je	$LN67@do_ssh1_lo
	cmp	DWORD PTR tv71[ebp], 4573		; 000011ddH
	je	$LN45@do_ssh1_lo
	cmp	DWORD PTR tv71[ebp], 4714		; 0000126aH
	je	$LN11@do_ssh1_lo
	jmp	$LN379@do_ssh1_lo
$LN378@do_ssh1_lo:
; Line 3784
	cmp	DWORD PTR _pktin$[ebp], 0
	jne	SHORT $LN377@do_ssh1_lo
$LN373@do_ssh1_lo:
; Line 3785
	mov	ecx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [ecx], 3785			; 00000ec9H
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
$LN372@do_ssh1_lo:
	xor	edx, edx
	jne	SHORT $LN373@do_ssh1_lo
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN373@do_ssh1_lo
$LN377@do_ssh1_lo:
; Line 3787
	mov	eax, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [eax+8], 2
	je	SHORT $LN369@do_ssh1_lo
; Line 3788
	push	OFFSET $SG90098
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_bomb_out
	add	esp, 8
$LN368@do_ssh1_lo:
; Line 3789
	mov	edx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [edx], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	eax, eax
	jne	SHORT $LN368@do_ssh1_lo
$LN369@do_ssh1_lo:
; Line 3792
	push	OFFSET $SG90102
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 3794
	push	8
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getdata
	add	esp, 8
	mov	DWORD PTR _ptr$[ebp], eax
; Line 3795
	cmp	DWORD PTR _ptr$[ebp], 0
	jne	SHORT $LN365@do_ssh1_lo
; Line 3796
	push	OFFSET $SG90104
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_bomb_out
	add	esp, 8
$LN364@do_ssh1_lo:
; Line 3797
	mov	edx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [edx], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	eax, eax
	jne	SHORT $LN364@do_ssh1_lo
$LN365@do_ssh1_lo:
; Line 3799
	push	8
	mov	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	lea	edx, DWORD PTR _cookie$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 3802
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 180				; 000000b4H
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh1_pkt_getrsakey
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN360@do_ssh1_lo
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 216				; 000000d8H
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh1_pkt_getrsakey
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN361@do_ssh1_lo
$LN360@do_ssh1_lo:
; Line 3803
	push	OFFSET $SG90110
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN359@do_ssh1_lo:
; Line 3804
	mov	ecx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [ecx], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	edx, edx
	jne	SHORT $LN359@do_ssh1_lo
$LN361@do_ssh1_lo:
; Line 3812
	push	OFFSET $SG90115
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 3813
	push	OFFSET $SG90116
	lea	edx, DWORD PTR _logmsg$90114[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
; Line 3814
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+248], 0
; Line 3816
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 216				; 000000d8H
	push	ecx
	lea	edx, DWORD PTR _logmsg$90114[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	ecx, 80					; 00000050H
	sub	ecx, eax
	push	ecx
	lea	edx, DWORD PTR _logmsg$90114[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	lea	eax, DWORD PTR _logmsg$90114[ebp+eax]
	push	eax
	call	_rsa_fingerprint
	add	esp, 12					; 0000000cH
; Line 3817
	lea	ecx, DWORD PTR _logmsg$90114[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 3820
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+64], eax
; Line 3821
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 3822
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 3823
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+80]
	and	eax, 8
	je	SHORT $LN356@do_ssh1_lo
; Line 3824
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	and	edx, -5					; fffffffbH
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+24], edx
$LN356@do_ssh1_lo:
; Line 3827
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	and	edx, 0
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+68], edx
; Line 3828
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	or	edx, 1
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+68], edx
; Line 3830
	lea	ecx, DWORD PTR _md5c$[ebp]
	push	ecx
	call	_MD5Init
	add	esp, 4
; Line 3831
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+220]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	lea	eax, DWORD PTR _md5c$[ebp]
	push	eax
	call	_MD5Update
	add	esp, 12					; 0000000cH
; Line 3832
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	lea	edx, DWORD PTR _md5c$[ebp]
	push	edx
	call	_MD5Update
	add	esp, 12					; 0000000cH
; Line 3833
	push	8
	lea	eax, DWORD PTR _cookie$[ebp]
	push	eax
	lea	ecx, DWORD PTR _md5c$[ebp]
	push	ecx
	call	_MD5Update
	add	esp, 12					; 0000000cH
; Line 3834
	lea	edx, DWORD PTR _md5c$[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	call	_MD5Final
	add	esp, 8
; Line 3836
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN355@do_ssh1_lo
$LN354@do_ssh1_lo:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN355@do_ssh1_lo:
	cmp	DWORD PTR _i$[ebp], 32			; 00000020H
	jge	SHORT $LN353@do_ssh1_lo
; Line 3837
	call	_random_byte
	mov	edx, DWORD PTR _ssh$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [edx+28], al
	jmp	SHORT $LN354@do_ssh1_lo
$LN353@do_ssh1_lo:
; Line 3843
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+220]
	shl	ecx, 3
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+216], ecx
	jg	SHORT $LN351@do_ssh1_lo
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	shl	ecx, 3
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+180], ecx
	jle	SHORT $LN352@do_ssh1_lo
$LN351@do_ssh1_lo:
; Line 3844
	push	OFFSET $SG90124
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN350@do_ssh1_lo:
; Line 3845
	mov	ecx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [ecx], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	edx, edx
	jne	SHORT $LN350@do_ssh1_lo
$LN352@do_ssh1_lo:
; Line 3849
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [eax+220]
	cmp	edx, DWORD PTR [ecx+184]
	jle	SHORT $LN384@do_ssh1_lo
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+220]
	mov	DWORD PTR tv230[ebp], ecx
	jmp	SHORT $LN385@do_ssh1_lo
$LN384@do_ssh1_lo:
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	mov	DWORD PTR tv230[ebp], eax
$LN385@do_ssh1_lo:
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR tv230[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 3851
	push	1
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_safemalloc
	add	esp, 8
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 3860
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 216				; 000000d8H
	push	eax
	call	_rsastr_len
	add	esp, 4
	mov	DWORD PTR _len$90130[ebp], eax
; Line 3862
	push	1
	mov	ecx, DWORD PTR _len$90130[ebp]
	push	ecx
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _keystr$90132[ebp], eax
; Line 3863
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 216				; 000000d8H
	push	edx
	mov	eax, DWORD PTR _keystr$90132[ebp]
	push	eax
	call	_rsastr_fmt
	add	esp, 8
; Line 3864
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 216				; 000000d8H
	push	ecx
	push	100					; 00000064H
	lea	edx, DWORD PTR _fingerprint$90131[ebp]
	push	edx
	call	_rsa_fingerprint
	add	esp, 12					; 0000000cH
; Line 3867
	push	0
	push	0
	lea	eax, DWORD PTR _fingerprint$90131[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_verify_ssh_manual_host_key
	add	esp, 16					; 00000010H
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+172], eax
; Line 3868
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+172], 0
	jne	SHORT $LN347@do_ssh1_lo
; Line 3869
	push	OFFSET $SG90138
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_bomb_out
	add	esp, 8
; Line 3870
	mov	edx, DWORD PTR _keystr$90132[ebp]
	push	edx
	call	_safefree
	add	esp, 4
$LN346@do_ssh1_lo:
; Line 3871
	mov	eax, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [eax], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	ecx, ecx
	jne	SHORT $LN346@do_ssh1_lo
; Line 3872
	jmp	$LN343@do_ssh1_lo
$LN347@do_ssh1_lo:
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+172], 0
	jge	$LN342@do_ssh1_lo
; Line 3873
	push	1
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh_set_frozen
	add	esp, 8
; Line 3877
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	push	OFFSET _ssh_dialog_callback
	lea	edx, DWORD PTR _fingerprint$90131[ebp]
	push	edx
	mov	eax, DWORD PTR _keystr$90132[ebp]
	push	eax
	push	OFFSET $SG90144
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+212]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+208]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_verify_ssh_host_key
	add	esp, 32					; 00000020H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+172], eax
; Line 3878
	mov	edx, DWORD PTR _keystr$90132[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 3879
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+172], 0
	jge	SHORT $LN341@do_ssh1_lo
$LN337@do_ssh1_lo:
; Line 3881
	mov	ecx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [ecx], 3881			; 00000f29H
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
$LN336@do_ssh1_lo:
	xor	edx, edx
	jne	SHORT $LN337@do_ssh1_lo
; Line 3882
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN339@do_ssh1_lo
; Line 3884
	push	OFFSET $SG90154
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN332@do_ssh1_lo:
; Line 3885
	mov	ecx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [ecx], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	edx, edx
	jne	SHORT $LN332@do_ssh1_lo
$LN339@do_ssh1_lo:
; Line 3887
	cmp	DWORD PTR _pktin$[ebp], 0
	jne	SHORT $LN337@do_ssh1_lo
	cmp	DWORD PTR _inlen$[ebp], 0
	jg	SHORT $LN337@do_ssh1_lo
; Line 3888
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+560]
	mov	DWORD PTR [eax+172], edx
$LN341@do_ssh1_lo:
; Line 3890
	push	0
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh_set_frozen
	add	esp, 8
; Line 3892
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+172], 0
	jne	SHORT $LN329@do_ssh1_lo
; Line 3894
	push	1
	push	0
	push	0
	push	OFFSET $SG90160
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_disconnect
	add	esp, 20					; 00000014H
$LN328@do_ssh1_lo:
; Line 3895
	mov	eax, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [eax], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	ecx, ecx
	jne	SHORT $LN328@do_ssh1_lo
$LN329@do_ssh1_lo:
; Line 3897
	jmp	SHORT $LN343@do_ssh1_lo
$LN342@do_ssh1_lo:
; Line 3898
	mov	edx, DWORD PTR _keystr$90132[ebp]
	push	edx
	call	_safefree
	add	esp, 4
$LN343@do_ssh1_lo:
; Line 3902
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN324@do_ssh1_lo
$LN323@do_ssh1_lo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN324@do_ssh1_lo:
	cmp	DWORD PTR _i$[ebp], 32			; 00000020H
	jge	SHORT $LN322@do_ssh1_lo
; Line 3903
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _ssh$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	al, BYTE PTR [eax+28]
	mov	BYTE PTR [edx+ecx], al
; Line 3904
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	jge	SHORT $LN321@do_ssh1_lo
; Line 3905
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [eax+44]
	mov	eax, DWORD PTR _i$[ebp]
	movzx	edx, BYTE PTR [edx+eax]
	xor	edx, ecx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR [ecx+eax], dl
$LN321@do_ssh1_lo:
; Line 3906
	jmp	SHORT $LN323@do_ssh1_lo
$LN322@do_ssh1_lo:
; Line 3908
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [ecx+220]
	cmp	eax, DWORD PTR [edx+184]
	jle	SHORT $LN320@do_ssh1_lo
; Line 3909
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 180				; 000000b4H
	push	ecx
	push	32					; 00000020H
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_rsaencrypt
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$[ebp], eax
; Line 3910
	cmp	DWORD PTR _ret$[ebp], 0
	je	SHORT $LN319@do_ssh1_lo
; Line 3911
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 216				; 000000d8H
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_rsaencrypt
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$[ebp], eax
$LN319@do_ssh1_lo:
; Line 3912
	jmp	SHORT $LN318@do_ssh1_lo
$LN320@do_ssh1_lo:
; Line 3913
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 216				; 000000d8H
	push	eax
	push	32					; 00000020H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_rsaencrypt
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$[ebp], eax
; Line 3914
	cmp	DWORD PTR _ret$[ebp], 0
	je	SHORT $LN318@do_ssh1_lo
; Line 3915
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 180				; 000000b4H
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+220]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_rsaencrypt
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$[ebp], eax
$LN318@do_ssh1_lo:
; Line 3917
	cmp	DWORD PTR _ret$[ebp], 0
	jne	SHORT $LN316@do_ssh1_lo
; Line 3918
	push	OFFSET $SG90174
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN315@do_ssh1_lo:
; Line 3919
	mov	eax, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [eax], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	ecx, ecx
	jne	SHORT $LN315@do_ssh1_lo
$LN316@do_ssh1_lo:
; Line 3922
	push	OFFSET $SG90178
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 3925
	mov	DWORD PTR _cipher_chosen$90179[ebp], 0
	mov	DWORD PTR _warn$90180[ebp], 0
; Line 3926
	mov	DWORD PTR _cipher_string$90181[ebp], 0
; Line 3928
	mov	DWORD PTR _i$90183[ebp], 0
	jmp	SHORT $LN312@do_ssh1_lo
$LN311@do_ssh1_lo:
	mov	ecx, DWORD PTR _i$90183[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$90183[ebp], ecx
$LN312@do_ssh1_lo:
	cmp	DWORD PTR _cipher_chosen$90179[ebp], 0
	jne	$LN310@do_ssh1_lo
	cmp	DWORD PTR _i$90183[ebp], 6
	jge	$LN310@do_ssh1_lo
; Line 3930
	mov	edx, DWORD PTR _i$90183[ebp]
	push	edx
	push	29					; 0000001dH
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _next_cipher$90187[ebp], eax
; Line 3931
	cmp	DWORD PTR _next_cipher$90187[ebp], 0
	jne	SHORT $LN309@do_ssh1_lo
; Line 3933
	mov	DWORD PTR _warn$90180[ebp], 1
	jmp	$LN308@do_ssh1_lo
$LN309@do_ssh1_lo:
; Line 3934
	cmp	DWORD PTR _next_cipher$90187[ebp], 3
	jne	SHORT $LN307@do_ssh1_lo
; Line 3936
	push	OFFSET $SG90191
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 3937
	jmp	$LN308@do_ssh1_lo
$LN307@do_ssh1_lo:
; Line 3938
	mov	ecx, DWORD PTR _next_cipher$90187[ebp]
	mov	DWORD PTR tv375[ebp], ecx
	cmp	DWORD PTR tv375[ebp], 1
	je	SHORT $LN303@do_ssh1_lo
	cmp	DWORD PTR tv375[ebp], 2
	je	SHORT $LN302@do_ssh1_lo
	cmp	DWORD PTR tv375[ebp], 4
	je	SHORT $LN301@do_ssh1_lo
	jmp	SHORT $LN304@do_ssh1_lo
$LN303@do_ssh1_lo:
; Line 3939
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+60], 3
; Line 3940
	mov	DWORD PTR _cipher_string$90181[ebp], OFFSET $SG90198
	jmp	SHORT $LN304@do_ssh1_lo
$LN302@do_ssh1_lo:
; Line 3941
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+60], 6
; Line 3942
	mov	DWORD PTR _cipher_string$90181[ebp], OFFSET $SG90200
	jmp	SHORT $LN304@do_ssh1_lo
$LN301@do_ssh1_lo:
; Line 3943
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+60], 2
; Line 3944
	mov	DWORD PTR _cipher_string$90181[ebp], OFFSET $SG90202
$LN304@do_ssh1_lo:
; Line 3946
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, 1
	mov	ecx, DWORD PTR [edx+60]
	shl	eax, cl
	mov	ecx, DWORD PTR _s$[ebp]
	and	eax, DWORD PTR [ecx+20]
	je	SHORT $LN308@do_ssh1_lo
; Line 3947
	mov	DWORD PTR _cipher_chosen$90179[ebp], 1
$LN308@do_ssh1_lo:
; Line 3949
	jmp	$LN311@do_ssh1_lo
$LN310@do_ssh1_lo:
; Line 3950
	cmp	DWORD PTR _cipher_chosen$90179[ebp], 0
	jne	SHORT $LN299@do_ssh1_lo
; Line 3951
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+20]
	and	eax, 8
	jne	SHORT $LN298@do_ssh1_lo
; Line 3953
	push	OFFSET $SG90206
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_bomb_out
	add	esp, 8
; Line 3954
	jmp	SHORT $LN296@do_ssh1_lo
$LN298@do_ssh1_lo:
; Line 3956
	push	OFFSET $SG90208
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN296@do_ssh1_lo:
; Line 3957
	mov	eax, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [eax], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	ecx, ecx
	jne	SHORT $LN296@do_ssh1_lo
$LN299@do_ssh1_lo:
; Line 3961
	cmp	DWORD PTR _warn$90180[ebp], 0
	je	$LN293@do_ssh1_lo
; Line 3962
	push	1
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_set_frozen
	add	esp, 8
; Line 3964
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	push	OFFSET _ssh_dialog_callback
	mov	ecx, DWORD PTR _cipher_string$90181[ebp]
	push	ecx
	push	OFFSET $SG90213
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_askalg
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+172], eax
; Line 3965
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+172], 0
	jge	SHORT $LN292@do_ssh1_lo
$LN288@do_ssh1_lo:
; Line 3967
	mov	eax, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [eax], 3967			; 00000f7fH
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
$LN287@do_ssh1_lo:
	xor	ecx, ecx
	jne	SHORT $LN288@do_ssh1_lo
; Line 3968
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN290@do_ssh1_lo
; Line 3970
	push	OFFSET $SG90223
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN283@do_ssh1_lo:
; Line 3971
	mov	eax, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [eax], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	ecx, ecx
	jne	SHORT $LN283@do_ssh1_lo
$LN290@do_ssh1_lo:
; Line 3973
	cmp	DWORD PTR _pktin$[ebp], 0
	jne	SHORT $LN288@do_ssh1_lo
	cmp	DWORD PTR _inlen$[ebp], 0
	jg	SHORT $LN288@do_ssh1_lo
; Line 3974
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+560]
	mov	DWORD PTR [edx+172], ecx
$LN292@do_ssh1_lo:
; Line 3976
	push	0
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_set_frozen
	add	esp, 8
; Line 3977
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+172], 0
	jne	SHORT $LN293@do_ssh1_lo
; Line 3979
	push	1
	push	0
	push	0
	push	OFFSET $SG90229
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_disconnect
	add	esp, 20					; 00000014H
$LN279@do_ssh1_lo:
; Line 3980
	mov	edx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [edx], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	eax, eax
	jne	SHORT $LN279@do_ssh1_lo
$LN293@do_ssh1_lo:
; Line 3985
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	mov	DWORD PTR tv435[ebp], edx
	cmp	DWORD PTR tv435[ebp], 2
	je	SHORT $LN273@do_ssh1_lo
	cmp	DWORD PTR tv435[ebp], 3
	je	SHORT $LN274@do_ssh1_lo
	cmp	DWORD PTR tv435[ebp], 6
	je	SHORT $LN272@do_ssh1_lo
	jmp	SHORT $LN275@do_ssh1_lo
$LN274@do_ssh1_lo:
; Line 3987
	push	OFFSET $SG90238
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 3988
	jmp	SHORT $LN275@do_ssh1_lo
$LN273@do_ssh1_lo:
; Line 3990
	push	OFFSET $SG90240
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 3991
	jmp	SHORT $LN275@do_ssh1_lo
$LN272@do_ssh1_lo:
; Line 3993
	push	OFFSET $SG90242
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
$LN275@do_ssh1_lo:
; Line 4002
	push	0
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	push	1
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	3
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 3
	and	ecx, 255				; 000000ffH
	push	ecx
	push	2
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shl	eax, 3
	sar	eax, 8
	push	eax
	push	2
	push	8
	lea	ecx, DWORD PTR _cookie$[ebp]
	push	ecx
	push	3
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	push	2
	push	3
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_send_packet
	add	esp, 68					; 00000044H
; Line 4004
	push	OFFSET $SG90243
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 4006
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_safefree
	add	esp, 4
; Line 4010
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+60], 6
	jne	SHORT $LN388@do_ssh1_lo
	mov	DWORD PTR tv486[ebp], OFFSET _ssh_blowfish_ssh1
	jmp	SHORT $LN389@do_ssh1_lo
$LN388@do_ssh1_lo:
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+60], 2
	jne	SHORT $LN386@do_ssh1_lo
	mov	DWORD PTR tv485[ebp], OFFSET _ssh_des
	jmp	SHORT $LN387@do_ssh1_lo
$LN386@do_ssh1_lo:
	mov	DWORD PTR tv485[ebp], OFFSET _ssh_3des
$LN387@do_ssh1_lo:
	mov	edx, DWORD PTR tv485[ebp]
	mov	DWORD PTR tv486[ebp], edx
$LN389@do_ssh1_lo:
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR tv486[ebp]
	mov	DWORD PTR [eax+84], ecx
; Line 4011
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	esi, esp
	mov	ecx, DWORD PTR [eax]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+88], eax
; Line 4012
	mov	eax, DWORD PTR _ssh$[ebp]
	add	eax, 28					; 0000001cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4013
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	push	OFFSET $SG90244
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 4015
	call	_crcda_make_context
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+92], eax
; Line 4016
	push	OFFSET $SG90245
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 4018
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+188], 0
	je	SHORT $LN271@do_ssh1_lo
; Line 4019
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+188]
	push	eax
	call	_safefree
	add	esp, 4
; Line 4020
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+188], 0
$LN271@do_ssh1_lo:
; Line 4022
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+192], 0
	je	SHORT $LN270@do_ssh1_lo
; Line 4023
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+192]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 4024
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+192], 0
$LN270@do_ssh1_lo:
; Line 4026
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+224], 0
	je	SHORT $LN269@do_ssh1_lo
; Line 4027
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+224]
	push	edx
	call	_safefree
	add	esp, 4
; Line 4028
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+224], 0
$LN269@do_ssh1_lo:
; Line 4030
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+228], 0
	je	SHORT $LN264@do_ssh1_lo
; Line 4031
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_safefree
	add	esp, 4
; Line 4032
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+228], 0
$LN264@do_ssh1_lo:
; Line 4034
	mov	edx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [edx], 4034			; 00000fc2H
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
$LN263@do_ssh1_lo:
	xor	eax, eax
	jne	SHORT $LN264@do_ssh1_lo
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN264@do_ssh1_lo
; Line 4036
	mov	ecx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [ecx+8], 14			; 0000000eH
	je	SHORT $LN260@do_ssh1_lo
; Line 4037
	push	OFFSET $SG90262
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN259@do_ssh1_lo:
; Line 4038
	mov	eax, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [eax], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	ecx, ecx
	jne	SHORT $LN259@do_ssh1_lo
$LN260@do_ssh1_lo:
; Line 4041
	push	OFFSET $SG90266
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 4043
	call	___iob_func
	add	eax, 32					; 00000020H
	push	eax
	call	_fflush
	add	esp, 4
; Line 4045
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_get_remote_username
	add	esp, 4
	mov	DWORD PTR tv543[ebp], eax
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR tv543[ebp]
	mov	DWORD PTR [eax+548], ecx
	cmp	DWORD PTR tv543[ebp], 0
	jne	$LN256@do_ssh1_lo
; Line 4047
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_new_prompts
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 4048
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	DWORD PTR [eax], 1
; Line 4049
	push	OFFSET $SG90270
	call	_dupstr
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [edx+4], eax
; Line 4050
	push	1
	push	OFFSET $SG90271
	call	_dupstr
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	call	_add_prompt
	add	esp, 12					; 0000000cH
; Line 4051
	push	0
	push	0
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+80]
	push	eax
	call	_get_userpass_input
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$90269[ebp], eax
$LN255@do_ssh1_lo:
; Line 4052
	cmp	DWORD PTR _ret$90269[ebp], 0
	jge	SHORT $LN254@do_ssh1_lo
; Line 4053
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+216], 1
$LN250@do_ssh1_lo:
; Line 4054
	mov	edx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [edx], 4054			; 00000fd6H
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
$LN249@do_ssh1_lo:
	xor	eax, eax
	jne	SHORT $LN250@do_ssh1_lo
	cmp	DWORD PTR _pktin$[ebp], 0
	jne	SHORT $LN250@do_ssh1_lo
; Line 4055
	mov	ecx, DWORD PTR _inlen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _in$[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	call	_get_userpass_input
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$90269[ebp], eax
; Line 4056
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+216], 0
; Line 4057
	jmp	SHORT $LN255@do_ssh1_lo
$LN254@do_ssh1_lo:
; Line 4058
	cmp	DWORD PTR _ret$90269[ebp], 0
	jne	SHORT $LN246@do_ssh1_lo
; Line 4062
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	call	_free_prompts
	add	esp, 4
; Line 4063
	push	1
	push	0
	push	0
	push	OFFSET $SG90285
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_disconnect
	add	esp, 20					; 00000014H
$LN245@do_ssh1_lo:
; Line 4064
	mov	eax, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [eax], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	ecx, ecx
	jne	SHORT $LN245@do_ssh1_lo
$LN246@do_ssh1_lo:
; Line 4066
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_dupstr
	add	esp, 4
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+548], eax
; Line 4067
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+80]
	push	eax
	call	_free_prompts
	add	esp, 4
$LN256@do_ssh1_lo:
; Line 4070
	push	0
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+548]
	push	edx
	push	4
	push	4
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_send_packet
	add	esp, 20					; 00000014H
; Line 4072
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+548]
	push	edx
	push	OFFSET $SG90290
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _userlog$90289[ebp], eax
; Line 4073
	mov	eax, DWORD PTR _userlog$90289[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 4075
	mov	eax, DWORD PTR _flags
	and	eax, 4
	je	SHORT $LN242@do_ssh1_lo
	mov	ecx, DWORD PTR _flags
	and	ecx, 2
	je	SHORT $LN241@do_ssh1_lo
	mov	edx, DWORD PTR _flags
	and	edx, 1
	jne	SHORT $LN242@do_ssh1_lo
$LN241@do_ssh1_lo:
; Line 4076
	mov	eax, DWORD PTR _userlog$90289[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_c_write_str
	add	esp, 8
; Line 4077
	push	OFFSET $SG90293
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_c_write_str
	add	esp, 8
$LN242@do_ssh1_lo:
; Line 4079
	mov	eax, DWORD PTR _userlog$90289[ebp]
	push	eax
	call	_safefree
	add	esp, 4
$LN237@do_ssh1_lo:
; Line 4083
	mov	ecx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [ecx], 4083			; 00000ff3H
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
$LN236@do_ssh1_lo:
	xor	edx, edx
	jne	SHORT $LN237@do_ssh1_lo
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN237@do_ssh1_lo
; Line 4085
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	and	ecx, 4
	jne	SHORT $LN233@do_ssh1_lo
; Line 4087
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+32], 1
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+28], 1
; Line 4088
	jmp	SHORT $LN232@do_ssh1_lo
$LN233@do_ssh1_lo:
; Line 4089
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+32], 0
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+28], 0
$LN232@do_ssh1_lo:
; Line 4091
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+40], 0
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+36], 0
; Line 4095
	push	30					; 0000001eH
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_filename
	add	esp, 8
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+176], eax
; Line 4096
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+176]
	push	eax
	call	_filename_is_null
	add	esp, 4
	test	eax, eax
	jne	$LN231@do_ssh1_lo
; Line 4099
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+176]
	push	edx
	call	_filename_to_str
	add	esp, 4
	push	eax
	push	OFFSET $SG90305
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 4100
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+176]
	push	edx
	call	_key_type
	add	esp, 4
	mov	DWORD PTR _keytype$90304[ebp], eax
; Line 4101
	cmp	DWORD PTR _keytype$90304[ebp], 2
	jne	$LN230@do_ssh1_lo
; Line 4105
	lea	eax, DWORD PTR _error$90307[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 72					; 00000048H
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 68					; 00000044H
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+176]
	push	edx
	call	_rsakey_pubblob
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN229@do_ssh1_lo
; Line 4107
	push	0
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	push	ecx
	call	_rsakey_encrypted
	add	esp, 8
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+76], eax
; Line 4108
	jmp	SHORT $LN228@do_ssh1_lo
$LN229@do_ssh1_lo:
; Line 4110
	mov	eax, DWORD PTR _error$90307[ebp]
	push	eax
	push	OFFSET $SG90312
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 4114
	mov	edx, DWORD PTR _error$90307[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	push	ecx
	call	_filename_to_str
	add	esp, 4
	push	eax
	push	OFFSET $SG90313
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _msgbuf$90311[ebp], eax
; Line 4115
	mov	edx, DWORD PTR _msgbuf$90311[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_c_write_str
	add	esp, 8
; Line 4116
	mov	ecx, DWORD PTR _msgbuf$90311[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 4117
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+64], 0
$LN228@do_ssh1_lo:
; Line 4119
	jmp	$LN227@do_ssh1_lo
$LN230@do_ssh1_lo:
; Line 4122
	mov	eax, DWORD PTR _keytype$90304[ebp]
	push	eax
	call	_key_type_to_str
	add	esp, 4
	push	eax
	push	OFFSET $SG90317
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 4126
	mov	edx, DWORD PTR _keytype$90304[ebp]
	push	edx
	call	_key_type_to_str
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	push	ecx
	call	_filename_to_str
	add	esp, 4
	push	eax
	push	OFFSET $SG90318
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _msgbuf$90316[ebp], eax
; Line 4127
	mov	edx, DWORD PTR _msgbuf$90316[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_c_write_str
	add	esp, 8
; Line 4128
	mov	ecx, DWORD PTR _msgbuf$90316[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 4129
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+64], 0
$LN227@do_ssh1_lo:
; Line 4131
	jmp	SHORT $LN225@do_ssh1_lo
$LN231@do_ssh1_lo:
; Line 4132
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+64], 0
$LN225@do_ssh1_lo:
; Line 4134
	mov	ecx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [ecx+8], 15			; 0000000fH
	jne	$LN224@do_ssh1_lo
; Line 4135
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+88], 9
; Line 4137
	push	26					; 0000001aH
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	$LN223@do_ssh1_lo
	call	_agent_exists
	test	eax, eax
	je	$LN223@do_ssh1_lo
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+32], 0
	jne	$LN223@do_ssh1_lo
; Line 4143
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+120], 0
; Line 4144
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+32], 1
; Line 4145
	push	OFFSET $SG90327
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 4148
	mov	ecx, DWORD PTR _s$[ebp]
	mov	BYTE PTR [ecx+92], 0
	mov	edx, DWORD PTR _s$[ebp]
	mov	BYTE PTR [edx+93], 0
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax+94], 0
	mov	ecx, DWORD PTR _s$[ebp]
	mov	BYTE PTR [ecx+95], 1
; Line 4149
	mov	edx, DWORD PTR _s$[ebp]
	mov	BYTE PTR [edx+96], 1
; Line 4151
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	push	OFFSET _ssh_agent_callback
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 108				; 0000006cH
	push	ecx
	lea	edx, DWORD PTR _r$90326[ebp]
	push	edx
	push	5
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 92					; 0000005cH
	push	eax
	call	_agent_query
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LN222@do_ssh1_lo
$LN218@do_ssh1_lo:
; Line 4153
	mov	ecx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [ecx], 4153			; 00001039H
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
$LN217@do_ssh1_lo:
	xor	edx, edx
	jne	SHORT $LN218@do_ssh1_lo
; Line 4154
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN220@do_ssh1_lo
; Line 4156
	push	OFFSET $SG90341
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN213@do_ssh1_lo:
; Line 4157
	mov	ecx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [ecx], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	edx, edx
	jne	SHORT $LN213@do_ssh1_lo
$LN220@do_ssh1_lo:
; Line 4159
	cmp	DWORD PTR _pktin$[ebp], 0
	jne	SHORT $LN218@do_ssh1_lo
	cmp	DWORD PTR _inlen$[ebp], 0
	jg	SHORT $LN218@do_ssh1_lo
; Line 4160
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+552]
	mov	DWORD PTR _r$90326[ebp], ecx
; Line 4161
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+556]
	mov	DWORD PTR [edx+108], ecx
$LN222@do_ssh1_lo:
; Line 4163
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _r$90326[ebp]
	mov	DWORD PTR [edx+100], eax
; Line 4165
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+100], 0
	je	$LN210@do_ssh1_lo
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+108], 5
	jl	$LN210@do_ssh1_lo
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	movzx	edx, BYTE PTR [ecx+4]
	cmp	edx, 2
	jne	$LN210@do_ssh1_lo
; Line 4166
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	add	ecx, 5
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+104], ecx
; Line 4167
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	movzx	edx, BYTE PTR [ecx]
	shl	edx, 24					; 00000018H
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	movzx	eax, BYTE PTR [ecx+1]
	shl	eax, 16					; 00000010H
	or	edx, eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [ecx+104]
	movzx	ecx, BYTE PTR [eax+2]
	shl	ecx, 8
	or	edx, ecx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	movzx	eax, BYTE PTR [ecx+3]
	or	edx, eax
	push	edx
	call	_toint
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+116], eax
; Line 4168
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+116], 0
	jge	SHORT $LN209@do_ssh1_lo
; Line 4170
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	push	ecx
	push	OFFSET $SG90356
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 4171
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+116], 0
$LN209@do_ssh1_lo:
; Line 4173
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	add	edx, 4
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+104], edx
; Line 4174
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	push	edx
	push	OFFSET $SG90357
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 4175
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+112], 0
	jmp	SHORT $LN208@do_ssh1_lo
$LN207@do_ssh1_lo:
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+112]
	add	eax, 1
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+112], eax
$LN208@do_ssh1_lo:
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [edx+112]
	cmp	ecx, DWORD PTR [eax+116]
	jge	$LN206@do_ssh1_lo
; Line 4176
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+104]
	mov	DWORD PTR _pkblob$90361[ebp], eax
; Line 4177
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	add	edx, 4
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+104], edx
; Line 4179
	mov	DWORD PTR _ok$90363[ebp], 0
$LN205@do_ssh1_lo:
; Line 4183
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 136				; 00000088H
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [edx+104]
	sub	ecx, DWORD PTR [eax+100]
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+108]
	sub	eax, ecx
	push	eax
	call	_toint
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	push	edx
	call	_ssh1_read_bignum
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _n$90362[ebp], eax
; Line 4184
	cmp	DWORD PTR _n$90362[ebp], 0
	jge	SHORT $LN202@do_ssh1_lo
; Line 4185
	jmp	$LN203@do_ssh1_lo
$LN202@do_ssh1_lo:
; Line 4186
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	add	ecx, DWORD PTR _n$90362[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+104], ecx
; Line 4189
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 132				; 00000084H
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [ecx+104]
	sub	eax, DWORD PTR [edx+100]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	sub	edx, eax
	push	edx
	call	_toint
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	push	ecx
	call	_ssh1_read_bignum
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _n$90362[ebp], eax
; Line 4190
	cmp	DWORD PTR _n$90362[ebp], 0
	jge	SHORT $LN201@do_ssh1_lo
; Line 4191
	jmp	$LN203@do_ssh1_lo
$LN201@do_ssh1_lo:
; Line 4192
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+104]
	add	eax, DWORD PTR _n$90362[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+104], eax
; Line 4193
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [edx+104]
	sub	ecx, DWORD PTR [eax+100]
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+108]
	sub	eax, ecx
	cmp	eax, 4
	jge	SHORT $LN200@do_ssh1_lo
; Line 4194
	jmp	$LN203@do_ssh1_lo
$LN200@do_ssh1_lo:
; Line 4195
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	movzx	eax, BYTE PTR [edx]
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	movzx	ecx, BYTE PTR [edx+1]
	shl	ecx, 16					; 00000010H
	or	eax, ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [edx+104]
	movzx	edx, BYTE PTR [ecx+2]
	shl	edx, 8
	or	eax, edx
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	movzx	ecx, BYTE PTR [edx+3]
	or	eax, ecx
	push	eax
	call	_toint
	add	esp, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+168], eax
; Line 4196
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	add	ecx, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+104], ecx
; Line 4199
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+168], 0
	jl	SHORT $LN198@do_ssh1_lo
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [ecx+104]
	sub	eax, DWORD PTR [edx+100]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	sub	edx, eax
	push	edx
	call	_toint
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	eax, DWORD PTR [ecx+168]
	jge	SHORT $LN199@do_ssh1_lo
$LN198@do_ssh1_lo:
; Line 4200
	jmp	SHORT $LN203@do_ssh1_lo
$LN199@do_ssh1_lo:
; Line 4201
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	DWORD PTR [edx+164], ecx
; Line 4202
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+104]
	mov	ecx, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR [ecx+168]
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+104], eax
; Line 4203
	mov	DWORD PTR _ok$90363[ebp], 1
; Line 4204
	xor	eax, eax
	jne	$LN205@do_ssh1_lo
$LN203@do_ssh1_lo:
; Line 4205
	cmp	DWORD PTR _ok$90363[ebp], 0
	jne	SHORT $LN197@do_ssh1_lo
; Line 4206
	push	OFFSET $SG90382
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 4207
	jmp	$LN206@do_ssh1_lo
$LN197@do_ssh1_lo:
; Line 4210
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+64], 0
	je	SHORT $LN196@do_ssh1_lo
; Line 4212
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	mov	edx, DWORD PTR _pkblob$90361[ebp]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN195@do_ssh1_lo
; Line 4214
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	push	OFFSET $SG90385
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 4215
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+28], 1
; Line 4216
	jmp	SHORT $LN196@do_ssh1_lo
$LN195@do_ssh1_lo:
; Line 4218
	jmp	$LN207@do_ssh1_lo
$LN196@do_ssh1_lo:
; Line 4220
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	push	edx
	push	OFFSET $SG90387
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 4222
	push	0
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	push	edx
	push	5
	push	6
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_send_packet
	add	esp, 20					; 00000014H
$LN190@do_ssh1_lo:
; Line 4223
	mov	ecx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [ecx], 4223			; 0000107fH
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
$LN189@do_ssh1_lo:
	xor	edx, edx
	jne	SHORT $LN190@do_ssh1_lo
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN190@do_ssh1_lo
; Line 4224
	mov	eax, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [eax+8], 7
	je	SHORT $LN186@do_ssh1_lo
; Line 4225
	push	OFFSET $SG90396
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 4226
	jmp	$LN207@do_ssh1_lo
$LN186@do_ssh1_lo:
; Line 4228
	push	OFFSET $SG90397
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 4229
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh1_pkt_getmp
	add	esp, 4
	mov	DWORD PTR tv960[ebp], eax
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR tv960[ebp]
	mov	DWORD PTR [eax+160], ecx
	cmp	DWORD PTR tv960[ebp], 0
	jne	SHORT $LN185@do_ssh1_lo
; Line 4230
	push	OFFSET $SG90400
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN184@do_ssh1_lo:
; Line 4231
	mov	eax, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [eax], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	ecx, ecx
	jne	SHORT $LN184@do_ssh1_lo
$LN185@do_ssh1_lo:
; Line 4238
	mov	DWORD PTR _len$90408[ebp], 5
; Line 4239
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+136]
	push	eax
	call	_ssh1_bignum_length
	add	esp, 4
	add	eax, DWORD PTR _len$90408[ebp]
	mov	DWORD PTR _len$90408[ebp], eax
; Line 4240
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	push	edx
	call	_ssh1_bignum_length
	add	esp, 4
	add	eax, DWORD PTR _len$90408[ebp]
	mov	DWORD PTR _len$90408[ebp], eax
; Line 4241
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	push	ecx
	call	_ssh1_bignum_length
	add	esp, 4
	add	eax, DWORD PTR _len$90408[ebp]
	mov	DWORD PTR _len$90408[ebp], eax
; Line 4242
	mov	edx, DWORD PTR _len$90408[ebp]
	add	edx, 16					; 00000010H
	mov	DWORD PTR _len$90408[ebp], edx
; Line 4243
	mov	eax, DWORD PTR _len$90408[ebp]
	add	eax, 4
	mov	DWORD PTR _len$90408[ebp], eax
; Line 4244
	push	1
	mov	ecx, DWORD PTR _len$90408[ebp]
	add	ecx, 4
	push	ecx
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _agentreq$90404[ebp], eax
; Line 4245
	mov	edx, DWORD PTR _len$90408[ebp]
	sar	edx, 24					; 00000018H
	mov	eax, DWORD PTR _agentreq$90404[ebp]
	mov	BYTE PTR [eax], dl
	mov	ecx, DWORD PTR _len$90408[ebp]
	sar	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _agentreq$90404[ebp]
	mov	BYTE PTR [edx+1], cl
	mov	eax, DWORD PTR _len$90408[ebp]
	sar	eax, 8
	mov	ecx, DWORD PTR _agentreq$90404[ebp]
	mov	BYTE PTR [ecx+2], al
	mov	edx, DWORD PTR _agentreq$90404[ebp]
	mov	al, BYTE PTR _len$90408[ebp]
	mov	BYTE PTR [edx+3], al
; Line 4246
	mov	ecx, DWORD PTR _agentreq$90404[ebp]
	add	ecx, 4
	mov	DWORD PTR _q$90405[ebp], ecx
; Line 4247
	mov	edx, DWORD PTR _q$90405[ebp]
	mov	BYTE PTR [edx], 3
	mov	eax, DWORD PTR _q$90405[ebp]
	add	eax, 1
	mov	DWORD PTR _q$90405[ebp], eax
; Line 4248
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	push	edx
	call	_bignum_bitcount
	add	esp, 4
	sar	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _q$90405[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+132]
	push	eax
	call	_bignum_bitcount
	add	esp, 4
	sar	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _q$90405[ebp]
	mov	BYTE PTR [ecx+1], al
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+132]
	push	eax
	call	_bignum_bitcount
	add	esp, 4
	sar	eax, 8
	mov	ecx, DWORD PTR _q$90405[ebp]
	mov	BYTE PTR [ecx+2], al
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+132]
	push	eax
	call	_bignum_bitcount
	add	esp, 4
	mov	ecx, DWORD PTR _q$90405[ebp]
	mov	BYTE PTR [ecx+3], al
; Line 4249
	mov	edx, DWORD PTR _q$90405[ebp]
	add	edx, 4
	mov	DWORD PTR _q$90405[ebp], edx
; Line 4250
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	push	ecx
	mov	edx, DWORD PTR _q$90405[ebp]
	push	edx
	call	_ssh1_write_bignum
	add	esp, 8
	add	eax, DWORD PTR _q$90405[ebp]
	mov	DWORD PTR _q$90405[ebp], eax
; Line 4251
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	push	ecx
	mov	edx, DWORD PTR _q$90405[ebp]
	push	edx
	call	_ssh1_write_bignum
	add	esp, 8
	add	eax, DWORD PTR _q$90405[ebp]
	mov	DWORD PTR _q$90405[ebp], eax
; Line 4252
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	push	ecx
	mov	edx, DWORD PTR _q$90405[ebp]
	push	edx
	call	_ssh1_write_bignum
	add	esp, 8
	add	eax, DWORD PTR _q$90405[ebp]
	mov	DWORD PTR _q$90405[ebp], eax
; Line 4253
	push	16					; 00000010H
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	mov	ecx, DWORD PTR _q$90405[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 4254
	mov	edx, DWORD PTR _q$90405[ebp]
	add	edx, 16					; 00000010H
	mov	DWORD PTR _q$90405[ebp], edx
; Line 4255
	mov	eax, DWORD PTR _q$90405[ebp]
	mov	BYTE PTR [eax], 0
	mov	ecx, DWORD PTR _q$90405[ebp]
	mov	BYTE PTR [ecx+1], 0
	mov	edx, DWORD PTR _q$90405[ebp]
	mov	BYTE PTR [edx+2], 0
	mov	eax, DWORD PTR _q$90405[ebp]
	mov	BYTE PTR [eax+3], 1
; Line 4257
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	push	OFFSET _ssh_agent_callback
	lea	edx, DWORD PTR _retlen$90409[ebp]
	push	edx
	lea	eax, DWORD PTR _vret$90407[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$90408[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _agentreq$90404[ebp]
	push	edx
	call	_agent_query
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	$LN181@do_ssh1_lo
; Line 4258
	mov	eax, DWORD PTR _agentreq$90404[ebp]
	push	eax
	call	_safefree
	add	esp, 4
$LN177@do_ssh1_lo:
; Line 4260
	mov	ecx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [ecx], 4260			; 000010a4H
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
$LN176@do_ssh1_lo:
	xor	edx, edx
	jne	SHORT $LN177@do_ssh1_lo
; Line 4261
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN179@do_ssh1_lo
; Line 4264
	push	OFFSET $SG90433
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN172@do_ssh1_lo:
; Line 4265
	mov	ecx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [ecx], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	edx, edx
	jne	SHORT $LN172@do_ssh1_lo
$LN179@do_ssh1_lo:
; Line 4267
	cmp	DWORD PTR _pktin$[ebp], 0
	jne	SHORT $LN177@do_ssh1_lo
	cmp	DWORD PTR _inlen$[ebp], 0
	jg	SHORT $LN177@do_ssh1_lo
; Line 4268
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+552]
	mov	DWORD PTR _vret$90407[ebp], ecx
; Line 4269
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+556]
	mov	DWORD PTR _retlen$90409[ebp], eax
; Line 4270
	jmp	SHORT $LN169@do_ssh1_lo
$LN181@do_ssh1_lo:
; Line 4271
	mov	ecx, DWORD PTR _agentreq$90404[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN169@do_ssh1_lo:
; Line 4272
	mov	edx, DWORD PTR _vret$90407[ebp]
	mov	DWORD PTR _ret$90406[ebp], edx
; Line 4273
	cmp	DWORD PTR _ret$90406[ebp], 0
	je	$LN168@do_ssh1_lo
; Line 4274
	mov	eax, DWORD PTR _ret$90406[ebp]
	movsx	ecx, BYTE PTR [eax+4]
	cmp	ecx, 4
	jne	$LN167@do_ssh1_lo
; Line 4275
	push	OFFSET $SG90440
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 4278
	push	0
	push	16					; 00000010H
	mov	ecx, DWORD PTR _ret$90406[ebp]
	add	ecx, 5
	push	ecx
	push	3
	push	8
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_send_packet
	add	esp, 24					; 00000018H
; Line 4279
	mov	eax, DWORD PTR _ret$90406[ebp]
	push	eax
	call	_safefree
	add	esp, 4
$LN163@do_ssh1_lo:
; Line 4280
	mov	ecx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [ecx], 4280			; 000010b8H
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
$LN162@do_ssh1_lo:
	xor	edx, edx
	jne	SHORT $LN163@do_ssh1_lo
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN163@do_ssh1_lo
; Line 4281
	mov	eax, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [eax+8], 14			; 0000000eH
	jne	SHORT $LN159@do_ssh1_lo
; Line 4283
	push	OFFSET $SG90449
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 4284
	mov	eax, DWORD PTR _flags
	and	eax, 1
	je	SHORT $LN158@do_ssh1_lo
; Line 4286
	push	OFFSET $SG90451
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_c_write_str
	add	esp, 8
; Line 4288
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+168]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+164]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_c_write
	add	esp, 12					; 0000000cH
; Line 4289
	push	OFFSET $SG90452
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_c_write_str
	add	esp, 8
$LN158@do_ssh1_lo:
; Line 4291
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+120], 1
; Line 4292
	jmp	SHORT $LN157@do_ssh1_lo
$LN159@do_ssh1_lo:
; Line 4294
	push	OFFSET $SG90454
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
$LN157@do_ssh1_lo:
; Line 4295
	jmp	SHORT $LN156@do_ssh1_lo
$LN167@do_ssh1_lo:
; Line 4297
	push	OFFSET $SG90456
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 4298
	mov	ecx, DWORD PTR _ret$90406[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN156@do_ssh1_lo:
; Line 4300
	jmp	SHORT $LN155@do_ssh1_lo
$LN168@do_ssh1_lo:
; Line 4301
	push	OFFSET $SG90458
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
$LN155@do_ssh1_lo:
; Line 4304
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	push	edx
	call	_freebn
	add	esp, 4
; Line 4305
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	push	ecx
	call	_freebn
	add	esp, 4
; Line 4306
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+160]
	push	eax
	call	_freebn
	add	esp, 4
; Line 4307
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+120], 0
	je	SHORT $LN154@do_ssh1_lo
; Line 4308
	jmp	SHORT $LN206@do_ssh1_lo
$LN154@do_ssh1_lo:
; Line 4309
	jmp	$LN207@do_ssh1_lo
$LN206@do_ssh1_lo:
; Line 4310
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+100]
	push	eax
	call	_safefree
	add	esp, 4
; Line 4311
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+64], 0
	je	SHORT $LN153@do_ssh1_lo
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+28], 0
	jne	SHORT $LN153@do_ssh1_lo
; Line 4312
	push	OFFSET $SG90461
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
$LN153@do_ssh1_lo:
; Line 4313
	jmp	SHORT $LN152@do_ssh1_lo
$LN210@do_ssh1_lo:
; Line 4314
	push	OFFSET $SG90463
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
$LN152@do_ssh1_lo:
; Line 4316
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+120], 0
	je	SHORT $LN223@do_ssh1_lo
; Line 4317
	jmp	$LN224@do_ssh1_lo
$LN223@do_ssh1_lo:
; Line 4319
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+64], 0
	je	$LN150@do_ssh1_lo
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	$LN150@do_ssh1_lo
; Line 4325
	mov	ecx, DWORD PTR _flags
	and	ecx, 1
	je	SHORT $LN149@do_ssh1_lo
; Line 4326
	push	OFFSET $SG90468
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_c_write_str
	add	esp, 8
$LN149@do_ssh1_lo:
; Line 4327
	push	30					; 0000001eH
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_filename
	add	esp, 8
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+176], eax
; Line 4329
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	push	ecx
	call	_filename_to_str
	add	esp, 4
	push	eax
	push	OFFSET $SG90469
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 4330
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+28], 1
; Line 4331
	mov	DWORD PTR _got_passphrase$90466[ebp], 0
$LN148@do_ssh1_lo:
; Line 4332
	cmp	DWORD PTR _got_passphrase$90466[ebp], 0
	jne	$LN147@do_ssh1_lo
; Line 4336
	mov	DWORD PTR _passphrase$90473[ebp], 0
; Line 4338
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+76], 0
	jne	SHORT $LN146@do_ssh1_lo
; Line 4339
	mov	edx, DWORD PTR _flags
	and	edx, 1
	je	SHORT $LN145@do_ssh1_lo
; Line 4340
	push	OFFSET $SG90478
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_c_write_str
	add	esp, 8
$LN145@do_ssh1_lo:
; Line 4341
	mov	DWORD PTR _passphrase$90473[ebp], 0
; Line 4342
	jmp	$LN144@do_ssh1_lo
$LN146@do_ssh1_lo:
; Line 4344
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_new_prompts
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 4345
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	DWORD PTR [eax], 0
; Line 4346
	push	OFFSET $SG90482
	call	_dupstr
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [edx+4], eax
; Line 4349
	push	0
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	push	ecx
	push	OFFSET $SG90483
	call	_dupprintf
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+80]
	push	eax
	call	_add_prompt
	add	esp, 12					; 0000000cH
; Line 4350
	push	0
	push	0
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	call	_get_userpass_input
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$90481[ebp], eax
$LN143@do_ssh1_lo:
; Line 4351
	cmp	DWORD PTR _ret$90481[ebp], 0
	jge	SHORT $LN142@do_ssh1_lo
; Line 4352
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+216], 1
$LN138@do_ssh1_lo:
; Line 4353
	mov	ecx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [ecx], 4353			; 00001101H
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
$LN137@do_ssh1_lo:
	xor	edx, edx
	jne	SHORT $LN138@do_ssh1_lo
	cmp	DWORD PTR _pktin$[ebp], 0
	jne	SHORT $LN138@do_ssh1_lo
; Line 4354
	mov	eax, DWORD PTR _inlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _in$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+80]
	push	eax
	call	_get_userpass_input
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$90481[ebp], eax
; Line 4355
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+216], 0
; Line 4356
	jmp	SHORT $LN143@do_ssh1_lo
$LN142@do_ssh1_lo:
; Line 4357
	cmp	DWORD PTR _ret$90481[ebp], 0
	jne	SHORT $LN134@do_ssh1_lo
; Line 4359
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+80]
	push	eax
	call	_free_prompts
	add	esp, 4
; Line 4361
	push	1
	push	0
	push	OFFSET $SG90497
	push	0
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_disconnect
	add	esp, 20					; 00000014H
$LN133@do_ssh1_lo:
; Line 4362
	mov	edx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [edx], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	eax, eax
	jne	SHORT $LN133@do_ssh1_lo
$LN134@do_ssh1_lo:
; Line 4364
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_dupstr
	add	esp, 4
	mov	DWORD PTR _passphrase$90473[ebp], eax
; Line 4365
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	call	_free_prompts
	add	esp, 4
$LN144@do_ssh1_lo:
; Line 4370
	push	30					; 0000001eH
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_filename
	add	esp, 8
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+176], eax
; Line 4372
	lea	edx, DWORD PTR _error$90475[ebp]
	push	edx
	mov	eax, DWORD PTR _passphrase$90473[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 124				; 0000007cH
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+176]
	push	eax
	call	_loadrsakey
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ret$[ebp], eax
; Line 4373
	cmp	DWORD PTR _passphrase$90473[ebp], 0
	je	SHORT $LN130@do_ssh1_lo
; Line 4374
	mov	ecx, DWORD PTR _passphrase$90473[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _passphrase$90473[ebp]
	push	edx
	call	_smemclr
	add	esp, 8
; Line 4375
	mov	eax, DWORD PTR _passphrase$90473[ebp]
	push	eax
	call	_safefree
	add	esp, 4
$LN130@do_ssh1_lo:
; Line 4377
	cmp	DWORD PTR _ret$[ebp], 1
	jne	SHORT $LN129@do_ssh1_lo
; Line 4379
	mov	DWORD PTR _got_passphrase$90466[ebp], 1
	jmp	$LN128@do_ssh1_lo
$LN129@do_ssh1_lo:
; Line 4380
	cmp	DWORD PTR _ret$[ebp], 0
	jne	SHORT $LN127@do_ssh1_lo
; Line 4381
	push	OFFSET $SG90505
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_c_write_str
	add	esp, 8
; Line 4382
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+176]
	push	eax
	call	_filename_to_str
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_c_write_str
	add	esp, 8
; Line 4383
	push	OFFSET $SG90506
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_c_write_str
	add	esp, 8
; Line 4384
	mov	eax, DWORD PTR _error$90475[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_c_write_str
	add	esp, 8
; Line 4385
	push	OFFSET $SG90507
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_c_write_str
	add	esp, 8
; Line 4386
	mov	DWORD PTR _got_passphrase$90466[ebp], 0
; Line 4387
	jmp	SHORT $LN147@do_ssh1_lo
	jmp	SHORT $LN128@do_ssh1_lo
$LN127@do_ssh1_lo:
; Line 4388
	cmp	DWORD PTR _ret$[ebp], -1
	jne	SHORT $LN125@do_ssh1_lo
; Line 4389
	push	OFFSET $SG90510
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_c_write_str
	add	esp, 8
; Line 4390
	mov	DWORD PTR _got_passphrase$90466[ebp], 0
; Line 4392
	jmp	SHORT $LN128@do_ssh1_lo
$LN125@do_ssh1_lo:
; Line 4393
	xor	ecx, ecx
	jne	SHORT $LN390@do_ssh1_lo
	push	4393					; 00001129H
	push	OFFSET $SG90513
	push	OFFSET $SG90514
	call	__wassert
	add	esp, 12					; 0000000cH
$LN390@do_ssh1_lo:
; Line 4394
	mov	DWORD PTR _got_passphrase$90466[ebp], 0
$LN128@do_ssh1_lo:
; Line 4396
	jmp	$LN148@do_ssh1_lo
$LN147@do_ssh1_lo:
; Line 4398
	cmp	DWORD PTR _got_passphrase$90466[ebp], 0
	je	$LN150@do_ssh1_lo
; Line 4404
	push	0
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	push	ecx
	push	5
	push	6
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_send_packet
	add	esp, 20					; 00000014H
$LN119@do_ssh1_lo:
; Line 4406
	mov	eax, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [eax], 4406			; 00001136H
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
$LN118@do_ssh1_lo:
	xor	ecx, ecx
	jne	SHORT $LN119@do_ssh1_lo
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN119@do_ssh1_lo
; Line 4407
	mov	edx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [edx+8], 15			; 0000000fH
	jne	SHORT $LN115@do_ssh1_lo
; Line 4408
	push	OFFSET $SG90524
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_c_write_str
	add	esp, 8
; Line 4409
	jmp	$LN225@do_ssh1_lo
$LN115@do_ssh1_lo:
; Line 4411
	mov	ecx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [ecx+8], 7
	je	SHORT $LN114@do_ssh1_lo
; Line 4412
	push	OFFSET $SG90526
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN113@do_ssh1_lo:
; Line 4413
	mov	eax, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [eax], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	ecx, ecx
	jne	SHORT $LN113@do_ssh1_lo
$LN114@do_ssh1_lo:
; Line 4421
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh1_pkt_getmp
	add	esp, 4
	mov	DWORD PTR _challenge$90532[ebp], eax
	cmp	DWORD PTR _challenge$90532[ebp], 0
	jne	SHORT $LN110@do_ssh1_lo
; Line 4422
	push	OFFSET $SG90536
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN109@do_ssh1_lo:
; Line 4423
	mov	ecx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [ecx], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	edx, edx
	jne	SHORT $LN109@do_ssh1_lo
$LN110@do_ssh1_lo:
; Line 4425
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 124				; 0000007cH
	push	eax
	mov	ecx, DWORD PTR _challenge$90532[ebp]
	push	ecx
	call	_rsadecrypt
	add	esp, 8
	mov	DWORD PTR _response$90533[ebp], eax
; Line 4426
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+140]
	push	eax
	call	_freebn
	add	esp, 4
; Line 4428
	mov	DWORD PTR _i$90530[ebp], 0
	jmp	SHORT $LN106@do_ssh1_lo
$LN105@do_ssh1_lo:
	mov	ecx, DWORD PTR _i$90530[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$90530[ebp], ecx
$LN106@do_ssh1_lo:
	cmp	DWORD PTR _i$90530[ebp], 32		; 00000020H
	jge	SHORT $LN104@do_ssh1_lo
; Line 4429
	mov	edx, 31					; 0000001fH
	sub	edx, DWORD PTR _i$90530[ebp]
	push	edx
	mov	eax, DWORD PTR _response$90533[ebp]
	push	eax
	call	_bignum_byte
	add	esp, 8
	mov	ecx, DWORD PTR _i$90530[ebp]
	mov	BYTE PTR _buffer$90531[ebp+ecx], al
; Line 4430
	jmp	SHORT $LN105@do_ssh1_lo
$LN104@do_ssh1_lo:
; Line 4432
	lea	edx, DWORD PTR _md5c$[ebp]
	push	edx
	call	_MD5Init
	add	esp, 4
; Line 4433
	push	32					; 00000020H
	lea	eax, DWORD PTR _buffer$90531[ebp]
	push	eax
	lea	ecx, DWORD PTR _md5c$[ebp]
	push	ecx
	call	_MD5Update
	add	esp, 12					; 0000000cH
; Line 4434
	push	16					; 00000010H
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 44					; 0000002cH
	push	edx
	lea	eax, DWORD PTR _md5c$[ebp]
	push	eax
	call	_MD5Update
	add	esp, 12					; 0000000cH
; Line 4435
	lea	ecx, DWORD PTR _md5c$[ebp]
	push	ecx
	lea	edx, DWORD PTR _buffer$90531[ebp]
	push	edx
	call	_MD5Final
	add	esp, 8
; Line 4438
	push	0
	push	16					; 00000010H
	lea	eax, DWORD PTR _buffer$90531[ebp]
	push	eax
	push	3
	push	8
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_send_packet
	add	esp, 24					; 00000018H
; Line 4440
	mov	edx, DWORD PTR _challenge$90532[ebp]
	push	edx
	call	_freebn
	add	esp, 4
; Line 4441
	mov	eax, DWORD PTR _response$90533[ebp]
	push	eax
	call	_freebn
	add	esp, 4
$LN100@do_ssh1_lo:
; Line 4444
	mov	ecx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [ecx], 4444			; 0000115cH
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
$LN99@do_ssh1_lo:
	xor	edx, edx
	jne	SHORT $LN100@do_ssh1_lo
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN100@do_ssh1_lo
; Line 4445
	mov	eax, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [eax+8], 15			; 0000000fH
	jne	SHORT $LN96@do_ssh1_lo
; Line 4446
	mov	ecx, DWORD PTR _flags
	and	ecx, 1
	je	SHORT $LN95@do_ssh1_lo
; Line 4448
	push	OFFSET $SG90552
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_c_write_str
	add	esp, 8
$LN95@do_ssh1_lo:
; Line 4449
	jmp	$LN225@do_ssh1_lo
	jmp	SHORT $LN94@do_ssh1_lo
$LN96@do_ssh1_lo:
; Line 4450
	mov	eax, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [eax+8], 14			; 0000000eH
	je	SHORT $LN94@do_ssh1_lo
; Line 4451
	push	OFFSET $SG90555
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_bomb_out
	add	esp, 8
$LN92@do_ssh1_lo:
; Line 4452
	mov	edx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [edx], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	eax, eax
	jne	SHORT $LN92@do_ssh1_lo
$LN94@do_ssh1_lo:
; Line 4455
	jmp	$LN224@do_ssh1_lo
$LN150@do_ssh1_lo:
; Line 4463
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_new_prompts
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 4467
	push	35					; 00000023H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	$LN89@do_ssh1_lo
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	and	edx, 32					; 00000020H
	je	$LN89@do_ssh1_lo
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+36], 0
	jne	$LN89@do_ssh1_lo
; Line 4468
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+88], 41			; 00000029H
; Line 4469
	push	OFFSET $SG90560
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 4470
	push	0
	push	39					; 00000027H
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_send_packet
	add	esp, 12					; 0000000cH
$LN85@do_ssh1_lo:
; Line 4471
	mov	edx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [edx], 4471			; 00001177H
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
$LN84@do_ssh1_lo:
	xor	eax, eax
	jne	SHORT $LN85@do_ssh1_lo
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN85@do_ssh1_lo
; Line 4472
	mov	ecx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [ecx+8], 40			; 00000028H
	je	SHORT $LN81@do_ssh1_lo
; Line 4473
	push	OFFSET $SG90569
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 4474
	mov	ecx, DWORD PTR _flags
	and	ecx, 4
	je	SHORT $LN80@do_ssh1_lo
; Line 4475
	push	OFFSET $SG90571
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_c_write_str
	add	esp, 8
$LN80@do_ssh1_lo:
; Line 4476
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+36], 1
; Line 4477
	jmp	$LN225@do_ssh1_lo
; Line 4478
	jmp	$LN89@do_ssh1_lo
$LN81@do_ssh1_lo:
; Line 4483
	lea	ecx, DWORD PTR _challengelen$90574[ebp]
	push	ecx
	lea	edx, DWORD PTR _challenge$90573[ebp]
	push	edx
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 4484
	cmp	DWORD PTR _challenge$90573[ebp], 0
	jne	SHORT $LN78@do_ssh1_lo
; Line 4485
	push	OFFSET $SG90578
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_bomb_out
	add	esp, 8
$LN77@do_ssh1_lo:
; Line 4486
	mov	edx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [edx], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	eax, eax
	jne	SHORT $LN77@do_ssh1_lo
$LN78@do_ssh1_lo:
; Line 4488
	push	OFFSET $SG90582
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 4489
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR [ecx], 1
; Line 4490
	push	OFFSET $SG90583
	call	_dupstr
	add	esp, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [edx+80]
	mov	DWORD PTR [ecx+4], eax
; Line 4492
	mov	edx, DWORD PTR _challengelen$90574[ebp]
	push	edx
	push	10					; 0000000aH
	mov	eax, DWORD PTR _challenge$90573[ebp]
	push	eax
	call	_memchr
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN74@do_ssh1_lo
; Line 4493
	push	OFFSET $SG90585
	call	_dupstr
	add	esp, 4
	mov	DWORD PTR _instr_suf$90575[ebp], eax
; Line 4494
	mov	ecx, DWORD PTR _challenge$90573[ebp]
	push	ecx
	mov	edx, DWORD PTR _challengelen$90574[ebp]
	push	edx
	push	OFFSET $SG90586
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _prompt$90576[ebp], eax
; Line 4495
	jmp	SHORT $LN73@do_ssh1_lo
$LN74@do_ssh1_lo:
; Line 4496
	mov	eax, DWORD PTR _challenge$90573[ebp]
	push	eax
	mov	ecx, DWORD PTR _challengelen$90574[ebp]
	push	ecx
	push	OFFSET $SG90588
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _instr_suf$90575[ebp], eax
; Line 4497
	push	OFFSET $SG90589
	call	_dupstr
	add	esp, 4
	mov	DWORD PTR _prompt$90576[ebp], eax
$LN73@do_ssh1_lo:
; Line 4502
	mov	edx, DWORD PTR _instr_suf$90575[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN391@do_ssh1_lo
	mov	DWORD PTR tv1462[ebp], OFFSET $SG90590
	jmp	SHORT $LN392@do_ssh1_lo
$LN391@do_ssh1_lo:
	mov	DWORD PTR tv1462[ebp], OFFSET $SG90591
$LN392@do_ssh1_lo:
	mov	ecx, DWORD PTR _instr_suf$90575[ebp]
	push	ecx
	mov	edx, DWORD PTR tv1462[ebp]
	push	edx
	push	OFFSET $SG90592
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [edx+12], eax
; Line 4503
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR [ecx+16], 1
; Line 4504
	push	0
	mov	edx, DWORD PTR _prompt$90576[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	call	_add_prompt
	add	esp, 12					; 0000000cH
; Line 4505
	mov	edx, DWORD PTR _instr_suf$90575[ebp]
	push	edx
	call	_safefree
	add	esp, 4
$LN89@do_ssh1_lo:
; Line 4510
	push	35					; 00000023H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	$LN72@do_ssh1_lo
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+24]
	and	eax, 65536				; 00010000H
	je	$LN72@do_ssh1_lo
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+40], 0
	jne	$LN72@do_ssh1_lo
; Line 4511
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+88], 72			; 00000048H
; Line 4512
	push	OFFSET $SG90594
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 4513
	push	0
	push	70					; 00000046H
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_send_packet
	add	esp, 12					; 0000000cH
$LN68@do_ssh1_lo:
; Line 4514
	mov	eax, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [eax], 4514			; 000011a2H
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
$LN67@do_ssh1_lo:
	xor	ecx, ecx
	jne	SHORT $LN68@do_ssh1_lo
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN68@do_ssh1_lo
; Line 4515
	mov	edx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [edx+8], 71			; 00000047H
	je	SHORT $LN64@do_ssh1_lo
; Line 4516
	push	OFFSET $SG90603
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 4517
	push	OFFSET $SG90604
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_c_write_str
	add	esp, 8
; Line 4518
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+40], 1
; Line 4519
	jmp	$LN225@do_ssh1_lo
; Line 4520
	jmp	$LN72@do_ssh1_lo
$LN64@do_ssh1_lo:
; Line 4525
	lea	ecx, DWORD PTR _challengelen$90607[ebp]
	push	ecx
	lea	edx, DWORD PTR _challenge$90606[ebp]
	push	edx
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 4526
	cmp	DWORD PTR _challenge$90606[ebp], 0
	jne	SHORT $LN62@do_ssh1_lo
; Line 4527
	push	OFFSET $SG90611
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_bomb_out
	add	esp, 8
$LN61@do_ssh1_lo:
; Line 4528
	mov	edx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [edx], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	eax, eax
	jne	SHORT $LN61@do_ssh1_lo
$LN62@do_ssh1_lo:
; Line 4530
	push	OFFSET $SG90615
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 4531
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR [ecx], 1
; Line 4532
	push	OFFSET $SG90616
	call	_dupstr
	add	esp, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [edx+80]
	mov	DWORD PTR [ecx+4], eax
; Line 4533
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	DWORD PTR [eax+8], 0
; Line 4535
	mov	ecx, DWORD PTR _challengelen$90607[ebp]
	push	ecx
	push	10					; 0000000aH
	mov	edx, DWORD PTR _challenge$90606[ebp]
	push	edx
	call	_memchr
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN58@do_ssh1_lo
; Line 4536
	push	OFFSET $SG90618
	call	_dupstr
	add	esp, 4
	mov	DWORD PTR _instr_suf$90608[ebp], eax
; Line 4537
	mov	eax, DWORD PTR _challenge$90606[ebp]
	push	eax
	mov	ecx, DWORD PTR _challengelen$90607[ebp]
	push	ecx
	push	OFFSET $SG90619
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _prompt$90609[ebp], eax
; Line 4538
	jmp	SHORT $LN57@do_ssh1_lo
$LN58@do_ssh1_lo:
; Line 4539
	mov	edx, DWORD PTR _challenge$90606[ebp]
	push	edx
	mov	eax, DWORD PTR _challengelen$90607[ebp]
	push	eax
	push	OFFSET $SG90621
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _instr_suf$90608[ebp], eax
; Line 4540
	push	OFFSET $SG90622
	call	_dupstr
	add	esp, 4
	mov	DWORD PTR _prompt$90609[ebp], eax
$LN57@do_ssh1_lo:
; Line 4545
	mov	ecx, DWORD PTR _instr_suf$90608[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN393@do_ssh1_lo
	mov	DWORD PTR tv1574[ebp], OFFSET $SG90623
	jmp	SHORT $LN394@do_ssh1_lo
$LN393@do_ssh1_lo:
	mov	DWORD PTR tv1574[ebp], OFFSET $SG90624
$LN394@do_ssh1_lo:
	mov	eax, DWORD PTR _instr_suf$90608[ebp]
	push	eax
	mov	ecx, DWORD PTR tv1574[ebp]
	push	ecx
	push	OFFSET $SG90625
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [edx+80]
	mov	DWORD PTR [ecx+12], eax
; Line 4546
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	DWORD PTR [eax+16], 1
; Line 4547
	push	0
	mov	ecx, DWORD PTR _prompt$90609[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+80]
	push	eax
	call	_add_prompt
	add	esp, 12					; 0000000cH
; Line 4548
	mov	ecx, DWORD PTR _instr_suf$90608[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN72@do_ssh1_lo:
; Line 4551
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+88], 9
	jne	$LN56@do_ssh1_lo
; Line 4552
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	and	ecx, 8
	jne	SHORT $LN55@do_ssh1_lo
; Line 4553
	push	OFFSET $SG90628
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN54@do_ssh1_lo:
; Line 4554
	mov	eax, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [eax], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	ecx, ecx
	jne	SHORT $LN54@do_ssh1_lo
$LN55@do_ssh1_lo:
; Line 4556
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	DWORD PTR [eax], 1
; Line 4557
	push	OFFSET $SG90632
	call	_dupstr
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [edx+4], eax
; Line 4560
	push	0
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+208]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+548]
	push	eax
	push	OFFSET $SG90633
	call	_dupprintf
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	call	_add_prompt
	add	esp, 12					; 0000000cH
$LN56@do_ssh1_lo:
; Line 4570
	push	0
	push	0
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	call	_get_userpass_input
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$90634[ebp], eax
$LN51@do_ssh1_lo:
; Line 4571
	cmp	DWORD PTR _ret$90634[ebp], 0
	jge	SHORT $LN50@do_ssh1_lo
; Line 4572
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+216], 1
$LN46@do_ssh1_lo:
; Line 4573
	mov	eax, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [eax], 4573			; 000011ddH
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
$LN45@do_ssh1_lo:
	xor	ecx, ecx
	jne	SHORT $LN46@do_ssh1_lo
	cmp	DWORD PTR _pktin$[ebp], 0
	jne	SHORT $LN46@do_ssh1_lo
; Line 4574
	mov	edx, DWORD PTR _inlen$[ebp]
	push	edx
	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	call	_get_userpass_input
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$90634[ebp], eax
; Line 4575
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+216], 0
; Line 4576
	jmp	SHORT $LN51@do_ssh1_lo
$LN50@do_ssh1_lo:
; Line 4577
	cmp	DWORD PTR _ret$90634[ebp], 0
	jne	SHORT $LN42@do_ssh1_lo
; Line 4583
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	call	_free_prompts
	add	esp, 4
; Line 4584
	push	1
	push	0
	push	OFFSET $SG90648
	push	0
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh_disconnect
	add	esp, 20					; 00000014H
$LN41@do_ssh1_lo:
; Line 4585
	mov	ecx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [ecx], 0
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
	xor	edx, edx
	jne	SHORT $LN41@do_ssh1_lo
$LN42@do_ssh1_lo:
; Line 4589
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+88], 9
	jne	$LN38@do_ssh1_lo
; Line 4628
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	and	edx, 1
	jne	$LN37@do_ssh1_lo
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	and	ecx, 4
	jne	$LN37@do_ssh1_lo
; Line 4636
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _pwlen$90656[ebp], eax
; Line 4637
	cmp	DWORD PTR _pwlen$90656[ebp], 16		; 00000010H
	jge	SHORT $LN36@do_ssh1_lo
; Line 4638
	mov	DWORD PTR _bottom$90654[ebp], 0
; Line 4639
	mov	DWORD PTR _top$90655[ebp], 15		; 0000000fH
; Line 4640
	jmp	SHORT $LN35@do_ssh1_lo
$LN36@do_ssh1_lo:
; Line 4641
	mov	ecx, DWORD PTR _pwlen$90656[ebp]
	and	ecx, -8					; fffffff8H
	mov	DWORD PTR _bottom$90654[ebp], ecx
; Line 4642
	mov	edx, DWORD PTR _bottom$90654[ebp]
	add	edx, 7
	mov	DWORD PTR _top$90655[ebp], edx
$LN35@do_ssh1_lo:
; Line 4645
	mov	eax, DWORD PTR _pwlen$90656[ebp]
	cmp	eax, DWORD PTR _bottom$90654[ebp]
	jl	SHORT $LN395@do_ssh1_lo
	mov	ecx, DWORD PTR _pwlen$90656[ebp]
	cmp	ecx, DWORD PTR _top$90655[ebp]
	jle	SHORT $LN396@do_ssh1_lo
$LN395@do_ssh1_lo:
	push	4645					; 00001225H
	push	OFFSET $SG90662
	push	OFFSET $SG90663
	call	__wassert
	add	esp, 12					; 0000000cH
$LN396@do_ssh1_lo:
; Line 4647
	push	1
	mov	eax, DWORD PTR _top$90655[ebp]
	add	eax, 1
	push	eax
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _randomstr$90658[ebp], eax
; Line 4649
	mov	ecx, DWORD PTR _bottom$90654[ebp]
	mov	DWORD PTR _i$90657[ebp], ecx
	jmp	SHORT $LN34@do_ssh1_lo
$LN33@do_ssh1_lo:
	mov	edx, DWORD PTR _i$90657[ebp]
	add	edx, 1
	mov	DWORD PTR _i$90657[ebp], edx
$LN34@do_ssh1_lo:
	mov	eax, DWORD PTR _i$90657[ebp]
	cmp	eax, DWORD PTR _top$90655[ebp]
	jg	$LN32@do_ssh1_lo
; Line 4650
	mov	ecx, DWORD PTR _i$90657[ebp]
	cmp	ecx, DWORD PTR _pwlen$90656[ebp]
	jne	SHORT $LN31@do_ssh1_lo
; Line 4653
	push	0
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_defer_packet
	add	esp, 20					; 00000014H
; Line 4654
	jmp	SHORT $LN30@do_ssh1_lo
$LN31@do_ssh1_lo:
; Line 4655
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN29@do_ssh1_lo
$LN28@do_ssh1_lo:
	mov	ecx, DWORD PTR _j$[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$[ebp], ecx
$LN29@do_ssh1_lo:
	mov	edx, DWORD PTR _j$[ebp]
	cmp	edx, DWORD PTR _i$90657[ebp]
	jge	SHORT $LN27@do_ssh1_lo
$LN26@do_ssh1_lo:
; Line 4657
	call	_random_byte
	mov	ecx, DWORD PTR _randomstr$90658[ebp]
	add	ecx, DWORD PTR _j$[ebp]
	mov	BYTE PTR [ecx], al
; Line 4658
	mov	edx, DWORD PTR _randomstr$90658[ebp]
	add	edx, DWORD PTR _j$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN26@do_ssh1_lo
; Line 4659
	jmp	SHORT $LN28@do_ssh1_lo
$LN27@do_ssh1_lo:
; Line 4660
	mov	ecx, DWORD PTR _randomstr$90658[ebp]
	add	ecx, DWORD PTR _i$90657[ebp]
	mov	BYTE PTR [ecx], 0
; Line 4662
	push	0
	mov	edx, DWORD PTR _randomstr$90658[ebp]
	push	edx
	push	4
	push	32					; 00000020H
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_defer_packet
	add	esp, 20					; 00000014H
$LN30@do_ssh1_lo:
; Line 4664
	jmp	$LN33@do_ssh1_lo
$LN32@do_ssh1_lo:
; Line 4665
	push	OFFSET $SG90677
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 4666
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh_pkt_defersend
	add	esp, 4
; Line 4667
	mov	ecx, DWORD PTR _randomstr$90658[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
	jmp	$LN23@do_ssh1_lo
$LN37@do_ssh1_lo:
; Line 4669
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+80]
	and	eax, 4
	jne	$LN22@do_ssh1_lo
; Line 4679
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _len$90682[ebp], eax
; Line 4680
	cmp	DWORD PTR _len$90682[ebp], 64		; 00000040H
	jae	SHORT $LN21@do_ssh1_lo
; Line 4681
	lea	eax, DWORD PTR _string$90680[ebp]
	mov	DWORD PTR _ss$90681[ebp], eax
; Line 4682
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	lea	eax, DWORD PTR _string$90680[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 4683
	mov	ecx, DWORD PTR _len$90682[ebp]
	add	ecx, 1
	mov	DWORD PTR _len$90682[ebp], ecx
$LN20@do_ssh1_lo:
; Line 4684
	cmp	DWORD PTR _len$90682[ebp], 64		; 00000040H
	jae	SHORT $LN19@do_ssh1_lo
; Line 4685
	call	_random_byte
	mov	edx, DWORD PTR _len$90682[ebp]
	mov	BYTE PTR _string$90680[ebp+edx], al
	mov	eax, DWORD PTR _len$90682[ebp]
	add	eax, 1
	mov	DWORD PTR _len$90682[ebp], eax
; Line 4686
	jmp	SHORT $LN20@do_ssh1_lo
$LN19@do_ssh1_lo:
; Line 4687
	jmp	SHORT $LN18@do_ssh1_lo
$LN21@do_ssh1_lo:
; Line 4688
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _ss$90681[ebp], edx
$LN18@do_ssh1_lo:
; Line 4690
	push	OFFSET $SG90689
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 4693
	push	0
	mov	edx, DWORD PTR _len$90682[ebp]
	push	edx
	mov	eax, DWORD PTR _ss$90681[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _len$90682[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+88]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_send_packet
	add	esp, 32					; 00000020H
; Line 4694
	jmp	SHORT $LN23@do_ssh1_lo
$LN22@do_ssh1_lo:
; Line 4700
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _len$90691[ebp], eax
; Line 4701
	push	OFFSET $SG90692
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 4705
	push	0
	mov	eax, DWORD PTR _len$90691[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	3
	mov	eax, DWORD PTR _len$90691[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_send_packet
	add	esp, 32					; 00000020H
$LN23@do_ssh1_lo:
; Line 4707
	jmp	SHORT $LN16@do_ssh1_lo
$LN38@do_ssh1_lo:
; Line 4710
	push	0
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	4
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_send_packet
	add	esp, 20					; 00000014H
$LN16@do_ssh1_lo:
; Line 4712
	push	OFFSET $SG90694
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 4713
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+80]
	push	eax
	call	_free_prompts
	add	esp, 4
$LN12@do_ssh1_lo:
; Line 4714
	mov	ecx, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [ecx], 4714			; 0000126aH
	xor	eax, eax
	jmp	$LN382@do_ssh1_lo
$LN11@do_ssh1_lo:
	xor	edx, edx
	jne	SHORT $LN12@do_ssh1_lo
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN12@do_ssh1_lo
; Line 4715
	mov	eax, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [eax+8], 15			; 0000000fH
	jne	SHORT $LN8@do_ssh1_lo
; Line 4716
	mov	ecx, DWORD PTR _flags
	and	ecx, 1
	je	SHORT $LN7@do_ssh1_lo
; Line 4717
	push	OFFSET $SG90704
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_c_write_str
	add	esp, 8
$LN7@do_ssh1_lo:
; Line 4718
	push	OFFSET $SG90705
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
	jmp	SHORT $LN6@do_ssh1_lo
$LN8@do_ssh1_lo:
; Line 4719
	mov	edx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [edx+8], 14			; 0000000eH
	je	SHORT $LN6@do_ssh1_lo
; Line 4720
	mov	eax, DWORD PTR _pktin$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET $SG90708
	call	_dupprintf
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN4@do_ssh1_lo:
; Line 4721
	mov	eax, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [eax], 0
	xor	eax, eax
	jmp	SHORT $LN382@do_ssh1_lo
	xor	ecx, ecx
	jne	SHORT $LN4@do_ssh1_lo
$LN6@do_ssh1_lo:
; Line 4723
	jmp	$LN225@do_ssh1_lo
$LN224@do_ssh1_lo:
; Line 4726
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+64], 0
	je	SHORT $LN1@do_ssh1_lo
; Line 4727
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 4728
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+72]
	push	eax
	call	_safefree
	add	esp, 4
$LN1@do_ssh1_lo:
; Line 4731
	push	OFFSET $SG90713
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
$LN379@do_ssh1_lo:
; Line 4733
	mov	eax, DWORD PTR _crLine$90083[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, 1
$LN382@do_ssh1_lo:
; Line 4734
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN419@do_ssh1_lo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 756				; 000002f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN419@do_ssh1_lo:
	DD	15					; 0000000fH
	DD	$LN418@do_ssh1_lo
$LN418@do_ssh1_lo:
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN403@do_ssh1_lo
	DD	-132					; ffffff7cH
	DD	92					; 0000005cH
	DD	$LN404@do_ssh1_lo
	DD	-228					; ffffff1cH
	DD	80					; 00000050H
	DD	$LN405@do_ssh1_lo
	DD	-340					; fffffeacH
	DD	100					; 00000064H
	DD	$LN406@do_ssh1_lo
	DD	-388					; fffffe7cH
	DD	4
	DD	$LN407@do_ssh1_lo
	DD	-408					; fffffe68H
	DD	4
	DD	$LN408@do_ssh1_lo
	DD	-444					; fffffe44H
	DD	4
	DD	$LN409@do_ssh1_lo
	DD	-460					; fffffe34H
	DD	4
	DD	$LN410@do_ssh1_lo
	DD	-480					; fffffe20H
	DD	4
	DD	$LN411@do_ssh1_lo
	DD	-528					; fffffdf0H
	DD	32					; 00000020H
	DD	$LN412@do_ssh1_lo
	DD	-548					; fffffddcH
	DD	4
	DD	$LN413@do_ssh1_lo
	DD	-560					; fffffdd0H
	DD	4
	DD	$LN414@do_ssh1_lo
	DD	-580					; fffffdbcH
	DD	4
	DD	$LN415@do_ssh1_lo
	DD	-592					; fffffdb0H
	DD	4
	DD	$LN416@do_ssh1_lo
	DD	-696					; fffffd48H
	DD	64					; 00000040H
	DD	$LN417@do_ssh1_lo
$LN417@do_ssh1_lo:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN416@do_ssh1_lo:
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN415@do_ssh1_lo:
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	0
$LN414@do_ssh1_lo:
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN413@do_ssh1_lo:
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	0
$LN412@do_ssh1_lo:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN411@do_ssh1_lo:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN410@do_ssh1_lo:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN409@do_ssh1_lo:
	DB	118					; 00000076H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN408@do_ssh1_lo:
	DB	114					; 00000072H
	DB	0
$LN407@do_ssh1_lo:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN406@do_ssh1_lo:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN405@do_ssh1_lo:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
$LN404@do_ssh1_lo:
	DB	109					; 0000006dH
	DB	100					; 00000064H
	DB	53					; 00000035H
	DB	99					; 00000063H
	DB	0
$LN403@do_ssh1_lo:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	0
	npad	3
$LN420@do_ssh1_lo:
	DD	$LN249@do_ssh1_lo
	DD	$LN236@do_ssh1_lo
	DD	$LN217@do_ssh1_lo
	DD	$LN189@do_ssh1_lo
	DD	$LN379@do_ssh1_lo
$LN401@do_ssh1_lo:
	DB	0
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	2
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	3
	npad	2
$LN421@do_ssh1_lo:
	DD	$LN162@do_ssh1_lo
	DD	$LN137@do_ssh1_lo
	DD	$LN118@do_ssh1_lo
	DD	$LN99@do_ssh1_lo
	DD	$LN379@do_ssh1_lo
$LN402@do_ssh1_lo:
	DB	0
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	2
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	3
_do_ssh1_login ENDP
; Function compile flags: /Odtp /RTCsu
_ap$ = -8						; size = 4
_pkt$ = -4						; size = 4
_ssh$ = 8						; size = 4
_pkttype$ = 12						; size = 4
_defer_packet PROC
; Line 1961
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1964
	lea	eax, DWORD PTR _pkttype$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 1965
	mov	ecx, DWORD PTR _ap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkttype$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_construct_packet
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkt$[ebp], eax
; Line 1966
	mov	DWORD PTR _ap$[ebp], 0
; Line 1967
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_s_wrpkt_defer
	add	esp, 8
; Line 1968
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_defer_packet ENDP
; Function compile flags: /Odtp /RTCsu
_offset$ = -12						; size = 4
_len$ = -4						; size = 4
_ssh$ = 8						; size = 4
_pkt$ = 12						; size = 4
_s_wrpkt_defer PROC
; Line 1888
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1890
	lea	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_s_wrpkt_prepare
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _len$[ebp], eax
; Line 1891
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	add	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	ecx, DWORD PTR [edx+324]
	jle	SHORT $LN1@s_wrpkt_de
; Line 1892
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _len$[ebp]
	lea	eax, DWORD PTR [ecx+edx+128]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+324], eax
; Line 1895
	push	1
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+324]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+316]
	push	edx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+316], eax
$LN1@s_wrpkt_de:
; Line 1898
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+316]
	mov	ecx, DWORD PTR _ssh$[ebp]
	add	eax, DWORD PTR [ecx+320]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1899
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+320]
	add	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+320], eax
; Line 1900
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_free_packet
	add	esp, 4
; Line 1901
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@s_wrpkt_de
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@s_wrpkt_de:
	DD	1
	DD	$LN5@s_wrpkt_de
$LN5@s_wrpkt_de:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN4@s_wrpkt_de
$LN4@s_wrpkt_de:
	DB	111					; 0000006fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_s_wrpkt_defer ENDP
; Function compile flags: /Odtp /RTCsu
_pkt$ = 8						; size = 4
_length$ = 12						; size = 4
_ssh_pkt_getdata PROC
; Line 2525
	push	ebp
	mov	ebp, esp
; Line 2526
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx+24]
	cmp	edx, DWORD PTR _length$[ebp]
	jge	SHORT $LN1@ssh_pkt_ge@3
; Line 2527
	xor	eax, eax
	jmp	SHORT $LN2@ssh_pkt_ge@3
$LN1@ssh_pkt_ge@3:
; Line 2528
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, DWORD PTR _length$[ebp]
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [edx+24], ecx
; Line 2529
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [eax+24]
	sub	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR _pkt$[ebp]
	add	eax, DWORD PTR [ecx+20]
$LN2@ssh_pkt_ge@3:
; Line 2530
	pop	ebp
	ret	0
_ssh_pkt_getdata ENDP
_TEXT	ENDS
EXTRN	_makekey:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_j$ = -4						; size = 4
_pkt$ = 8						; size = 4
_key$ = 12						; size = 4
_keystr$ = 16						; size = 4
_ssh1_pkt_getrsakey PROC
; Line 2533
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2538
	push	0
	mov	eax, DWORD PTR _keystr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [edx]
	sub	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _pkt$[ebp]
	add	eax, DWORD PTR [ecx+24]
	push	eax
	call	_makekey
	add	esp, 20					; 00000014H
	mov	DWORD PTR _j$[ebp], eax
; Line 2540
	cmp	DWORD PTR _j$[ebp], 0
	jge	SHORT $LN1@ssh1_pkt_g
; Line 2541
	xor	eax, eax
	jmp	SHORT $LN2@ssh1_pkt_g
$LN1@ssh1_pkt_g:
; Line 2543
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+24]
	add	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 2544
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	cmp	ecx, DWORD PTR [eax]
	jl	SHORT $LN4@ssh1_pkt_g
	push	2544					; 000009f0H
	push	OFFSET $SG89198
	push	OFFSET $SG89199
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@ssh1_pkt_g:
; Line 2546
	mov	eax, 1
$LN2@ssh1_pkt_g:
; Line 2547
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh1_pkt_getrsakey ENDP
; Function compile flags: /Odtp /RTCsu
_b$ = -12						; size = 4
_j$ = -4						; size = 4
_pkt$ = 8						; size = 4
_ssh1_pkt_getmp PROC
; Line 2549
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 2554
	lea	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [ecx]
	sub	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _pkt$[ebp]
	add	edx, DWORD PTR [eax+24]
	push	edx
	call	_ssh1_read_bignum
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _j$[ebp], eax
; Line 2556
	cmp	DWORD PTR _j$[ebp], 0
	jge	SHORT $LN1@ssh1_pkt_g@2
; Line 2557
	xor	eax, eax
	jmp	SHORT $LN2@ssh1_pkt_g@2
$LN1@ssh1_pkt_g@2:
; Line 2559
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	add	edx, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [eax+24], edx
; Line 2560
	mov	eax, DWORD PTR _b$[ebp]
$LN2@ssh1_pkt_g@2:
; Line 2561
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@ssh1_pkt_g@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@ssh1_pkt_g@2:
	DD	1
	DD	$LN5@ssh1_pkt_g@2
$LN5@ssh1_pkt_g@2:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN4@ssh1_pkt_g@2
$LN4@ssh1_pkt_g@2:
	DB	98					; 00000062H
	DB	0
_ssh1_pkt_getmp ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = -4						; size = 4
_sshv$ = 8						; size = 4
_reply$ = 12						; size = 4
_replylen$ = 16						; size = 4
_ssh_agent_callback PROC
; Line 3595
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 3596
	mov	eax, DWORD PTR _sshv$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 3598
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR _reply$[ebp]
	mov	DWORD PTR [ecx+552], edx
; Line 3599
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR _replylen$[ebp]
	mov	DWORD PTR [eax+556], ecx
; Line 3601
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+364], 1
	jne	SHORT $LN2@ssh_agent_@2
; Line 3602
	push	0
	push	-1
	push	0
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_do_ssh1_login
	add	esp, 16					; 00000010H
; Line 3603
	jmp	SHORT $LN3@ssh_agent_@2
$LN2@ssh_agent_@2:
; Line 3604
	push	0
	push	-1
	push	0
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_do_ssh2_authconn
	add	esp, 16					; 00000010H
$LN3@ssh_agent_@2:
; Line 3605
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_agent_callback ENDP
; Function compile flags: /Odtp /RTCsu
_needlen$ = -4						; size = 4
_needle$ = 8						; size = 4
_haystack$ = 12						; size = 4
_haylen$ = 16						; size = 4
_in_commasep_string PROC
; Line 5937
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 5939
	cmp	DWORD PTR _needle$[ebp], 0
	je	SHORT $LN8@in_commase
	cmp	DWORD PTR _haystack$[ebp], 0
	jne	SHORT $LN9@in_commase
$LN8@in_commase:
; Line 5940
	xor	eax, eax
	jmp	$LN10@in_commase
$LN9@in_commase:
; Line 5941
	mov	eax, DWORD PTR _needle$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _needlen$[ebp], eax
$LN7@in_commase:
; Line 5942
	mov	ecx, 1
	test	ecx, ecx
	je	$LN10@in_commase
; Line 5950
	mov	edx, DWORD PTR _haylen$[ebp]
	cmp	edx, DWORD PTR _needlen$[ebp]
	jl	SHORT $LN3@in_commase
	mov	eax, DWORD PTR _needlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _haystack$[ebp]
	push	ecx
	mov	edx, DWORD PTR _needle$[ebp]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN3@in_commase
	mov	eax, DWORD PTR _haylen$[ebp]
	cmp	eax, DWORD PTR _needlen$[ebp]
	je	SHORT $LN4@in_commase
	mov	ecx, DWORD PTR _haystack$[ebp]
	add	ecx, DWORD PTR _needlen$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 44					; 0000002cH
	jne	SHORT $LN3@in_commase
$LN4@in_commase:
; Line 5951
	mov	eax, 1
	jmp	SHORT $LN10@in_commase
$LN3@in_commase:
; Line 5956
	cmp	DWORD PTR _haylen$[ebp], 0
	jle	SHORT $LN2@in_commase
	mov	eax, DWORD PTR _haystack$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 44					; 0000002cH
	je	SHORT $LN2@in_commase
; Line 5957
	mov	edx, DWORD PTR _haylen$[ebp]
	sub	edx, 1
	mov	DWORD PTR _haylen$[ebp], edx
	mov	eax, DWORD PTR _haystack$[ebp]
	add	eax, 1
	mov	DWORD PTR _haystack$[ebp], eax
	jmp	SHORT $LN3@in_commase
$LN2@in_commase:
; Line 5958
	cmp	DWORD PTR _haylen$[ebp], 0
	jne	SHORT $LN1@in_commase
; Line 5959
	xor	eax, eax
	jmp	SHORT $LN10@in_commase
$LN1@in_commase:
; Line 5960
	mov	ecx, DWORD PTR _haylen$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _haylen$[ebp], ecx
	mov	edx, DWORD PTR _haystack$[ebp]
	add	edx, 1
	mov	DWORD PTR _haystack$[ebp], edx
; Line 5961
	jmp	$LN7@in_commase
$LN10@in_commase:
; Line 5962
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_in_commasep_string ENDP
; Function compile flags: /Odtp /RTCsu
_needlen$ = -4						; size = 4
_needle$ = 8						; size = 4
_haystack$ = 12						; size = 4
_haylen$ = 16						; size = 4
_first_in_commasep_string PROC
; Line 5968
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 5970
	cmp	DWORD PTR _needle$[ebp], 0
	je	SHORT $LN3@first_in_c
	cmp	DWORD PTR _haystack$[ebp], 0
	jne	SHORT $LN4@first_in_c
$LN3@first_in_c:
; Line 5971
	xor	eax, eax
	jmp	SHORT $LN5@first_in_c
$LN4@first_in_c:
; Line 5972
	mov	eax, DWORD PTR _needle$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _needlen$[ebp], eax
; Line 5980
	mov	ecx, DWORD PTR _haylen$[ebp]
	cmp	ecx, DWORD PTR _needlen$[ebp]
	jl	SHORT $LN2@first_in_c
	mov	edx, DWORD PTR _needlen$[ebp]
	push	edx
	mov	eax, DWORD PTR _haystack$[ebp]
	push	eax
	mov	ecx, DWORD PTR _needle$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@first_in_c
	mov	edx, DWORD PTR _haylen$[ebp]
	cmp	edx, DWORD PTR _needlen$[ebp]
	je	SHORT $LN1@first_in_c
	mov	eax, DWORD PTR _haystack$[ebp]
	add	eax, DWORD PTR _needlen$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 44					; 0000002cH
	jne	SHORT $LN2@first_in_c
$LN1@first_in_c:
; Line 5981
	mov	eax, 1
	jmp	SHORT $LN5@first_in_c
$LN2@first_in_c:
; Line 5982
	xor	eax, eax
$LN5@first_in_c:
; Line 5983
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_first_in_commasep_string ENDP
; Function compile flags: /Odtp /RTCsu
_s$ = -8						; size = 4
_h$ = -4						; size = 4
_ssh$ = 8						; size = 4
_K$ = 12						; size = 4
_H$ = 16						; size = 4
_chr$ = 20						; size = 1
_keyspace$ = 24						; size = 4
_ssh2_mkkey PROC
; Line 5994
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 5995
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR _h$[ebp], edx
; Line 5998
	mov	eax, DWORD PTR _h$[ebp]
	mov	esi, esp
	mov	ecx, DWORD PTR [eax]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _s$[ebp], eax
; Line 5999
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+80]
	and	eax, 32					; 00000020H
	jne	SHORT $LN2@ssh2_mkkey
; Line 6000
	mov	ecx, DWORD PTR _K$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	_hash_mpint
	add	esp, 12					; 0000000cH
$LN2@ssh2_mkkey:
; Line 6001
	mov	esi, esp
	mov	ecx, DWORD PTR _h$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _H$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _h$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 6002
	mov	esi, esp
	push	1
	lea	ecx, DWORD PTR _chr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	eax, DWORD PTR _h$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 6003
	mov	esi, esp
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+188]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	add	ecx, 156				; 0000009cH
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	eax, DWORD PTR _h$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 6004
	mov	esi, esp
	mov	edx, DWORD PTR _keyspace$[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _h$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 6006
	mov	eax, DWORD PTR _h$[ebp]
	mov	esi, esp
	mov	ecx, DWORD PTR [eax]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _s$[ebp], eax
; Line 6007
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+80]
	and	eax, 32					; 00000020H
	jne	SHORT $LN1@ssh2_mkkey
; Line 6008
	mov	ecx, DWORD PTR _K$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	_hash_mpint
	add	esp, 12					; 0000000cH
$LN1@ssh2_mkkey:
; Line 6009
	mov	esi, esp
	mov	ecx, DWORD PTR _h$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _H$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _h$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 6010
	mov	esi, esp
	mov	ecx, DWORD PTR _h$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _keyspace$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _h$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 6011
	mov	ecx, DWORD PTR _h$[ebp]
	mov	edx, DWORD PTR _keyspace$[ebp]
	add	edx, DWORD PTR [ecx+12]
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _h$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 6012
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_mkkey ENDP
; Function compile flags: /Odtp /RTCsu
_c$ = 8						; size = 4
_buf$ = 12						; size = 4
_len$ = 16						; size = 4
_ssh2_add_channel_data PROC
; Line 7110
	push	ebp
	mov	ebp, esp
; Line 7111
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	add	edx, 32					; 00000020H
	push	edx
	call	_bufchain_add
	add	esp, 12					; 0000000cH
; Line 7112
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh2_add_channel_data ENDP
; Function compile flags: /Odtp /RTCsu
_data$92143 = -32					; size = 4
_len$92142 = -20					; size = 4
_ret$ = -12						; size = 4
_pktout$ = -8						; size = 4
_ssh$ = -4						; size = 4
_c$ = 8							; size = 4
_ssh2_try_send PROC
; Line 7118
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 7119
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ssh$[ebp], ecx
$LN5@ssh2_try_s:
; Line 7123
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+44], 0
	jbe	$LN4@ssh2_try_s
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	call	_bufchain_size
	add	esp, 4
	test	eax, eax
	jle	$LN4@ssh2_try_s
; Line 7126
	lea	ecx, DWORD PTR _len$92142[ebp]
	push	ecx
	lea	edx, DWORD PTR _data$92143[ebp]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	call	_bufchain_prefix
	add	esp, 12					; 0000000cH
; Line 7127
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR _len$92142[ebp]
	cmp	edx, DWORD PTR [ecx+44]
	jbe	SHORT $LN3@ssh2_try_s
; Line 7128
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _len$92142[ebp], ecx
$LN3@ssh2_try_s:
; Line 7129
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR _len$92142[ebp]
	cmp	eax, DWORD PTR [edx+48]
	jbe	SHORT $LN2@ssh2_try_s
; Line 7130
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR _len$92142[ebp], edx
$LN2@ssh2_try_s:
; Line 7131
	push	94					; 0000005eH
	call	_ssh2_pkt_init
	add	esp, 4
	mov	DWORD PTR _pktout$[ebp], eax
; Line 7132
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pktout$[ebp]
	push	edx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 7133
	mov	eax, DWORD PTR _pktout$[ebp]
	push	eax
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 7134
	mov	ecx, DWORD PTR _len$92142[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$92143[ebp]
	push	edx
	mov	eax, DWORD PTR _pktout$[ebp]
	push	eax
	call	_ssh_pkt_addstring_data
	add	esp, 12					; 0000000cH
; Line 7135
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_pkt_send
	add	esp, 8
; Line 7136
	mov	eax, DWORD PTR _len$92142[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	call	_bufchain_consume
	add	esp, 8
; Line 7137
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+44]
	sub	eax, DWORD PTR _len$92142[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+44], eax
; Line 7138
	jmp	$LN5@ssh2_try_s
$LN4@ssh2_try_s:
; Line 7144
	mov	edx, DWORD PTR _c$[ebp]
	add	edx, 32					; 00000020H
	push	edx
	call	_bufchain_size
	add	esp, 4
	mov	DWORD PTR _ret$[ebp], eax
; Line 7150
	cmp	DWORD PTR _ret$[ebp], 0
	jne	SHORT $LN1@ssh2_try_s
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN1@ssh2_try_s
; Line 7151
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	call	_ssh_channel_try_eof
	add	esp, 4
$LN1@ssh2_try_s:
; Line 7153
	mov	eax, DWORD PTR _ret$[ebp]
; Line 7154
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@ssh2_try_s
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@ssh2_try_s:
	DD	2
	DD	$LN10@ssh2_try_s
$LN10@ssh2_try_s:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@ssh2_try_s
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN9@ssh2_try_s
$LN9@ssh2_try_s:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN8@ssh2_try_s:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
_ssh2_try_send ENDP
; Function compile flags: /Odtp /RTCsu
_up$92232 = -12					; size = 4
_pktout$92231 = -8					; size = 4
_ssh$ = -4						; size = 4
_c$ = 8							; size = 4
_newwin$ = 12						; size = 4
_ssh2_set_window PROC
; Line 7283
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 7284
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ssh$[ebp], ecx
; Line 7292
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+20]
	and	eax, 6
	je	SHORT $LN7@ssh2_set_w
; Line 7293
	jmp	$LN8@ssh2_set_w
$LN7@ssh2_set_w:
; Line 7300
	mov	ecx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [ecx+12], 1
	jne	SHORT $LN6@ssh2_set_w
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+80], 0
	je	SHORT $LN6@ssh2_set_w
; Line 7301
	jmp	$LN8@ssh2_set_w
$LN6@ssh2_set_w:
; Line 7308
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	and	ecx, 256				; 00000100H
	je	SHORT $LN5@ssh2_set_w
	cmp	DWORD PTR _newwin$[ebp], 16384		; 00004000H
	jbe	SHORT $LN5@ssh2_set_w
; Line 7309
	mov	DWORD PTR _newwin$[ebp], 16384		; 00004000H
$LN5@ssh2_set_w:
; Line 7318
	mov	eax, DWORD PTR _newwin$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	edx, DWORD PTR _c$[ebp]
	cmp	eax, DWORD PTR [edx+52]
	jl	$LN8@ssh2_set_w
; Line 7333
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _newwin$[ebp]
	cmp	ecx, DWORD PTR [eax+56]
	jne	SHORT $LN3@ssh2_set_w
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+80]
	and	eax, 1024				; 00000400H
	jne	SHORT $LN3@ssh2_set_w
; Line 7334
	push	4
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _up$92232[ebp], eax
; Line 7335
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR _newwin$[ebp]
	sub	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR _up$92232[ebp]
	mov	DWORD PTR [eax], edx
; Line 7337
	mov	ecx, DWORD PTR _up$92232[ebp]
	push	ecx
	push	OFFSET _ssh2_handle_winadj_response
	push	OFFSET $SG92236
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	call	_ssh2_chanreq_init
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pktout$92231[ebp], eax
; Line 7338
	mov	eax, DWORD PTR _pktout$92231[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_pkt_send
	add	esp, 8
; Line 7340
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+72], 2
	je	SHORT $LN2@ssh2_set_w
; Line 7341
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+72], 1
$LN2@ssh2_set_w:
; Line 7342
	jmp	SHORT $LN1@ssh2_set_w
$LN3@ssh2_set_w:
; Line 7344
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR _newwin$[ebp]
	mov	DWORD PTR [ecx+60], edx
; Line 7345
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+72], 0
$LN1@ssh2_set_w:
; Line 7347
	push	93					; 0000005dH
	call	_ssh2_pkt_init
	add	esp, 4
	mov	DWORD PTR _pktout$92231[ebp], eax
; Line 7348
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _pktout$92231[ebp]
	push	eax
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 7349
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR _newwin$[ebp]
	sub	edx, DWORD PTR [ecx+52]
	push	edx
	mov	eax, DWORD PTR _pktout$92231[ebp]
	push	eax
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 7350
	mov	ecx, DWORD PTR _pktout$92231[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_pkt_send
	add	esp, 8
; Line 7351
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _newwin$[ebp]
	mov	DWORD PTR [eax+52], ecx
$LN8@ssh2_set_w:
; Line 7353
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_set_window ENDP
; Function compile flags: /Odtp /RTCsu
_pktout$ = -4						; size = 4
_c$ = 8							; size = 4
_type$ = 12						; size = 4
_handler$ = 16						; size = 4
_ctx$ = 20						; size = 4
_ssh2_chanreq_init PROC
; Line 7264
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 7267
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	and	ecx, 10					; 0000000aH
	je	SHORT $LN4@ssh2_chanr
	push	7267					; 00001c63H
	push	OFFSET $SG92212
	push	OFFSET $SG92213
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@ssh2_chanr:
; Line 7268
	push	98					; 00000062H
	call	_ssh2_pkt_init
	add	esp, 4
	mov	DWORD PTR _pktout$[ebp], eax
; Line 7269
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pktout$[ebp]
	push	edx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 7270
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 7271
	xor	edx, edx
	cmp	DWORD PTR _handler$[ebp], 0
	setne	dl
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh2_pkt_addbool
	add	esp, 8
; Line 7272
	cmp	DWORD PTR _handler$[ebp], 0
	je	SHORT $LN1@ssh2_chanr
; Line 7273
	mov	edx, DWORD PTR _ctx$[ebp]
	push	edx
	mov	eax, DWORD PTR _handler$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	call	_ssh2_queue_chanreq_handler
	add	esp, 12					; 0000000cH
$LN1@ssh2_chanr:
; Line 7274
	mov	eax, DWORD PTR _pktout$[ebp]
; Line 7275
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_chanreq_init ENDP
; Function compile flags: /Odtp /RTCsu
_ocr$ = -4						; size = 4
_c$ = 8							; size = 4
_handler$ = 12						; size = 4
_ctx$ = 16						; size = 4
_ssh2_queue_chanreq_handler PROC
; Line 7234
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 7236
	push	12					; 0000000cH
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _ocr$[ebp], eax
; Line 7238
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	and	ecx, 10					; 0000000aH
	je	SHORT $LN5@ssh2_queue
	push	7238					; 00001c46H
	push	OFFSET $SG92195
	push	OFFSET $SG92196
	call	__wassert
	add	esp, 12					; 0000000cH
$LN5@ssh2_queue:
; Line 7239
	mov	eax, DWORD PTR _ocr$[ebp]
	mov	ecx, DWORD PTR _handler$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 7240
	mov	edx, DWORD PTR _ocr$[ebp]
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 7241
	mov	ecx, DWORD PTR _ocr$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 7242
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+64], 0
	jne	SHORT $LN2@ssh2_queue
; Line 7243
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _ocr$[ebp]
	mov	DWORD PTR [eax+64], ecx
; Line 7244
	jmp	SHORT $LN1@ssh2_queue
$LN2@ssh2_queue:
; Line 7245
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+68]
	mov	ecx, DWORD PTR _ocr$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN1@ssh2_queue:
; Line 7246
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR _ocr$[ebp]
	mov	DWORD PTR [edx+68], eax
; Line 7247
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_queue_chanreq_handler ENDP
; Function compile flags: /Odtp /RTCsu
_sizep$ = -4						; size = 4
_c$ = 8							; size = 4
_pktin$ = 12						; size = 4
_ctx$ = 16						; size = 4
_ssh2_handle_winadj_response PROC
; Line 7382
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 7383
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _sizep$[ebp], eax
; Line 7393
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	mov	eax, DWORD PTR _sizep$[ebp]
	add	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+60], edx
; Line 7394
	mov	edx, DWORD PTR _sizep$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 7400
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax+72], 1
	jne	SHORT $LN2@ssh2_handl
; Line 7401
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+72], 2
$LN2@ssh2_handl:
; Line 7402
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_handle_winadj_response ENDP
_TEXT	ENDS
PUBLIC	_ssh_sharing_downstream_connected
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ssh$ = 8						; size = 4
_id$ = 12						; size = 4
_ssh_sharing_downstream_connected PROC
; Line 7577
	push	ebp
	mov	ebp, esp
; Line 7578
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	push	OFFSET $SG92350
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 7579
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh_sharing_downstream_connected ENDP
_TEXT	ENDS
PUBLIC	_ssh_sharing_downstream_disconnected
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ssh$ = 8						; size = 4
_id$ = 12						; size = 4
_ssh_sharing_downstream_disconnected PROC
; Line 7582
	push	ebp
	mov	ebp, esp
; Line 7583
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	push	OFFSET $SG92356
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 7584
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_check_termination
	add	esp, 4
; Line 7585
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh_sharing_downstream_disconnected ENDP
_TEXT	ENDS
EXTRN	_share_ndownstreams:PROC
EXTRN	_count234:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ssh$ = 8						; size = 4
_ssh_check_termination PROC
; Line 7558
	push	ebp
	mov	ebp, esp
; Line 7562
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+364], 2
	jne	SHORT $LN3@ssh_check_
	push	43					; 0000002bH
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@ssh_check_
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+248]
	push	ecx
	call	_count234
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@ssh_check_
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+204], 0
	je	SHORT $LN1@ssh_check_
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	push	ecx
	call	_share_ndownstreams
	add	esp, 4
	test	eax, eax
	jg	SHORT $LN3@ssh_check_
$LN1@ssh_check_:
; Line 7572
	push	1
	push	0
	push	0
	push	OFFSET $SG92344
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_disconnect
	add	esp, 20					; 00000014H
$LN3@ssh_check_:
; Line 7574
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh_check_termination ENDP
_TEXT	ENDS
PUBLIC	_ssh_sharing_logf
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_buf$ = -8						; size = 4
_ap$ = -4						; size = 4
_ssh$ = 8						; size = 4
_id$ = 12						; size = 4
_logfmt$ = 16						; size = 4
_ssh_sharing_logf PROC
; Line 7588
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 7592
	lea	eax, DWORD PTR _logfmt$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 7593
	mov	ecx, DWORD PTR _ap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _logfmt$[ebp]
	push	edx
	call	_dupvprintf
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax
; Line 7594
	mov	DWORD PTR _ap$[ebp], 0
; Line 7595
	cmp	DWORD PTR _id$[ebp], 0
	je	SHORT $LN2@ssh_sharin
; Line 7596
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	push	OFFSET $SG92371
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 16					; 00000010H
; Line 7597
	jmp	SHORT $LN1@ssh_sharin
$LN2@ssh_sharin:
; Line 7598
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	push	OFFSET $SG92373
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 12					; 0000000cH
$LN1@ssh_sharin:
; Line 7599
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 7600
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_sharing_logf ENDP
; Function compile flags: /Odtp /RTCsu
_pktout$ = -8						; size = 4
_ssh$ = -4						; size = 4
_c$ = 8							; size = 4
_ssh2_channel_check_close PROC
; Line 7641
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 7642
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ssh$[ebp], ecx
; Line 7645
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN4@ssh2_chann
; Line 7651
	jmp	$LN5@ssh2_chann
$LN4@ssh2_chann:
; Line 7657
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	not	ecx
	and	ecx, 5
	je	SHORT $LN2@ssh2_chann
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+12], 6
	jne	SHORT $LN3@ssh2_chann
$LN2@ssh2_chann:
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax+64], 0
	jne	SHORT $LN3@ssh2_chann
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	and	edx, 2
	jne	SHORT $LN3@ssh2_chann
; Line 7664
	push	97					; 00000061H
	call	_ssh2_pkt_init
	add	esp, 4
	mov	DWORD PTR _pktout$[ebp], eax
; Line 7665
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pktout$[ebp]
	push	edx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 7666
	mov	eax, DWORD PTR _pktout$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_pkt_send
	add	esp, 8
; Line 7667
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+20]
	or	eax, 3
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+20], eax
$LN3@ssh2_chann:
; Line 7670
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+20]
	not	eax
	and	eax, 10					; 0000000aH
	jne	SHORT $LN5@ssh2_chann
; Line 7671
	mov	ecx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [ecx+64], 0
	je	SHORT $LN7@ssh2_chann
	push	7671					; 00001df7H
	push	OFFSET $SG92409
	push	OFFSET $SG92410
	call	__wassert
	add	esp, 12					; 0000000cH
$LN7@ssh2_chann:
; Line 7676
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_ssh_channel_destroy
	add	esp, 4
$LN5@ssh2_chann:
; Line 7678
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_channel_check_close ENDP
_TEXT	ENDS
EXTRN	_update_specials_menu:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv65 = -8						; size = 4
_ssh$ = -4						; size = 4
_c$ = 8							; size = 4
_ssh_channel_destroy PROC
; Line 7603
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 7604
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ssh$[ebp], ecx
; Line 7606
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR tv65[ebp], eax
	cmp	DWORD PTR tv65[ebp], 3
	ja	$LN8@ssh_channe@2
	mov	ecx, DWORD PTR tv65[ebp]
	jmp	DWORD PTR $LN13@ssh_channe@2[ecx*4]
$LN7@ssh_channe@2:
; Line 7608
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+252], 0
; Line 7609
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_update_specials_menu
	add	esp, 4
; Line 7610
	jmp	SHORT $LN8@ssh_channe@2
$LN6@ssh_channe@2:
; Line 7612
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+76], 0
	je	SHORT $LN5@ssh_channe@2
; Line 7613
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_x11_close
	add	esp, 4
$LN5@ssh_channe@2:
; Line 7614
	push	OFFSET $SG92387
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 7615
	jmp	SHORT $LN8@ssh_channe@2
$LN4@ssh_channe@2:
; Line 7617
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	_safefree
	add	esp, 4
; Line 7618
	jmp	SHORT $LN8@ssh_channe@2
$LN3@ssh_channe@2:
; Line 7620
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN2@ssh_channe@2
; Line 7621
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	_pfd_close
	add	esp, 4
$LN2@ssh_channe@2:
; Line 7622
	push	OFFSET $SG92392
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
$LN8@ssh_channe@2:
; Line 7626
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+248]
	push	ecx
	call	_del234
	add	esp, 8
; Line 7627
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+364], 2
	jne	SHORT $LN1@ssh_channe@2
; Line 7628
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	call	_bufchain_clear
	add	esp, 4
; Line 7629
	mov	ecx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [ecx+64], 0
	je	SHORT $LN1@ssh_channe@2
	push	7629					; 00001dcdH
	push	OFFSET $SG92396
	push	OFFSET $SG92397
	call	__wassert
	add	esp, 12					; 0000000cH
$LN1@ssh_channe@2:
; Line 7631
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 7637
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_check_termination
	add	esp, 4
; Line 7638
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN13@ssh_channe@2:
	DD	$LN7@ssh_channe@2
	DD	$LN6@ssh_channe@2
	DD	$LN4@ssh_channe@2
	DD	$LN3@ssh_channe@2
_ssh_channel_destroy ENDP
_TEXT	ENDS
PUBLIC	_ssh_sharing_add_x11_display
EXTRN	_x11_invent_fake_auth:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_auth$ = -4						; size = 4
_ssh$ = 8						; size = 4
_authtype$ = 12						; size = 4
_share_cs$ = 16						; size = 4
_share_chan$ = 20					; size = 4
_ssh_sharing_add_x11_display PROC
; Line 8142
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 8150
	mov	eax, DWORD PTR _authtype$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+360]
	push	edx
	call	_x11_invent_fake_auth
	add	esp, 8
	mov	DWORD PTR _auth$[ebp], eax
; Line 8151
	mov	eax, DWORD PTR _auth$[ebp]
	mov	ecx, DWORD PTR _share_cs$[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 8152
	mov	edx, DWORD PTR _auth$[ebp]
	mov	eax, DWORD PTR _share_chan$[ebp]
	mov	DWORD PTR [edx+36], eax
; Line 8154
	mov	eax, DWORD PTR _auth$[ebp]
; Line 8155
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_sharing_add_x11_display ENDP
_TEXT	ENDS
PUBLIC	_ssh_sharing_remove_x11_display
EXTRN	_x11_free_fake_auth:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ssh$ = 8						; size = 4
_auth$ = 12						; size = 4
_ssh_sharing_remove_x11_display PROC
; Line 8158
	push	ebp
	mov	ebp, esp
; Line 8159
	mov	eax, DWORD PTR _auth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+360]
	push	edx
	call	_del234
	add	esp, 8
; Line 8160
	mov	eax, DWORD PTR _auth$[ebp]
	push	eax
	call	_x11_free_fake_auth
	add	esp, 4
; Line 8161
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh_sharing_remove_x11_display ENDP
_TEXT	ENDS
PUBLIC	_sshfwd_x11_sharing_handover
EXTRN	_share_setup_x11_channel:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_c$ = 8							; size = 4
_share_cs$ = 12						; size = 4
_share_chan$ = 16					; size = 4
_peer_addr$ = 20					; size = 4
_peer_port$ = 24					; size = 4
_endian$ = 28						; size = 4
_protomajor$ = 32					; size = 4
_protominor$ = 36					; size = 4
_initial_data$ = 40					; size = 4
_initial_len$ = 44					; size = 4
_sshfwd_x11_sharing_handover PROC
; Line 8313
	push	ebp
	mov	ebp, esp
; Line 8322
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+12], 5
; Line 8323
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR _share_cs$[ebp]
	mov	DWORD PTR [ecx+76], edx
; Line 8329
	mov	eax, DWORD PTR _initial_len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _initial_data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _protominor$[ebp]
	push	edx
	mov	eax, DWORD PTR _protomajor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _endian$[ebp]
	push	ecx
	mov	edx, DWORD PTR _peer_port$[ebp]
	push	edx
	mov	eax, DWORD PTR _peer_addr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _share_chan$[ebp]
	push	edx
	mov	eax, DWORD PTR _share_cs$[ebp]
	push	eax
	call	_share_setup_x11_channel
	add	esp, 56					; 00000038H
; Line 8330
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_sshfwd_x11_sharing_handover ENDP
_TEXT	ENDS
PUBLIC	_sshfwd_x11_is_local
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_c$ = 8							; size = 4
_sshfwd_x11_is_local PROC
; Line 8333
	push	ebp
	mov	ebp, esp
; Line 8341
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+80], 0
; Line 8342
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_ssh_is_simple
	add	esp, 4
	neg	eax
	sbb	eax, eax
	and	eax, 2147467263				; 7fffbfffH
	add	eax, 16384				; 00004000H
	push	eax
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_ssh2_set_window
	add	esp, 8
; Line 8343
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_sshfwd_x11_is_local ENDP
; Function compile flags: /Odtp /RTCsu
tv73 = -4						; size = 4
_ssh$ = 8						; size = 4
_ssh_is_simple PROC
; Line 7183
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 7192
	push	163					; 000000a3H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@ssh_is_sim
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+196], 0
	jne	SHORT $LN3@ssh_is_sim
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+204], 0
	jne	SHORT $LN3@ssh_is_sim
	mov	DWORD PTR tv73[ebp], 1
	jmp	SHORT $LN4@ssh_is_sim
$LN3@ssh_is_sim:
	mov	DWORD PTR tv73[ebp], 0
$LN4@ssh_is_sim:
	mov	eax, DWORD PTR tv73[ebp]
; Line 7193
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_is_simple ENDP
_TEXT	ENDS
PUBLIC	_ssh_send_port_open
EXTRN	_ldisc_send:PROC
EXTRN	_x11_setup_display:PROC
EXTRN	_share_activate:PROC
EXTRN	_conf_get_str:PROC
EXTRN	_ngsslibs:DWORD
EXTRN	_ssh2_wrong_passphrase:BYTE
EXTRN	_ssh2_load_userkey:PROC
EXTRN	_ssh_gss_setup:PROC
EXTRN	_bufchain_fetch:PROC
EXTRN	_ssh2_userkey_encrypted:PROC
EXTRN	_ssh2_userkey_loadpub:PROC
EXTRN	_bufchain_init:PROC
EXTRN	__RTC_UninitUse:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv2033 = -440						; size = 4
tv763 = -436						; size = 4
tv742 = -432						; size = 4
tv483 = -428						; size = 4
tv71 = -424						; size = 4
tv67 = -420						; size = 4
$T94818 = -414						; size = 1
$T94817 = -413						; size = 1
_c$93847 = -412						; size = 4
_i$93846 = -408						; size = 4
_cmd$93790 = -404					; size = 4
_subsys$93789 = -400					; size = 4
_str$93726 = -396					; size = 4
_msg$93681 = -392					; size = 4
_prompt_len$93680 = -384				; size = 4
_prompt$93679 = -372					; size = 4
_got_new$93678 = -364					; size = 4
_changereq_first_time$93645 = -360			; size = 4
_ret$93644 = -356					; size = 4
_ret$93614 = -352					; size = 4
_echo$93599 = -348					; size = 4
_prompt_len$93598 = -340				; size = 4
_prompt$93597 = -328					; size = 4
_i$93593 = -320						; size = 4
_lang_len$93592 = -312					; size = 4
_inst_len$93591 = -300					; size = 4
_name_len$93590 = -288					; size = 4
_lang$93589 = -276					; size = 4
_inst$93588 = -264					; size = 4
_name$93587 = -252					; size = 4
_want_id$93501 = -244					; size = 4
_j$93496 = -240						; size = 4
_i$93495 = -236						; size = 4
_mic$93494 = -228					; size = 8
_data$93493 = -212					; size = 4
_len$93492 = -200					; size = 4
_micoffset$93491 = -192					; size = 4
_p$93472 = -188						; size = 4
_sigdata_len$93471 = -184				; size = 4
_sigblob_len$93470 = -176				; size = 4
_pkblob_len$93469 = -164				; size = 4
_sigdata$93468 = -156					; size = 4
_sigblob$93467 = -152					; size = 4
_pkblob$93466 = -148					; size = 4
_ret$93432 = -144					; size = 4
_error$93430 = -136					; size = 4
_passphrase$93409 = -128				; size = 4
_key$93408 = -124					; size = 4
_vret$93335 = -116					; size = 4
_banner$93249 = -108					; size = 4
_size$93247 = -104					; size = 4
_methlen$93238 = -96					; size = 4
_methods$93236 = -84					; size = 4
_stuff$93224 = -76					; size = 4
_ret$93203 = -72					; size = 4
_commentlen$93144 = -68					; size = 4
_bloblen$93143 = -64					; size = 4
_lenleft$93139 = -60					; size = 4
_q$93138 = -56						; size = 4
_p$93125 = -52						; size = 4
_keyi$93124 = -48					; size = 4
_r$93103 = -40						; size = 4
_msgbuf$93096 = -32					; size = 4
_msgbuf$93092 = -28					; size = 4
_error$93088 = -20					; size = 4
_keytype$93085 = -12					; size = 4
_crLine$93048 = -8					; size = 4
_s$ = -4						; size = 4
_ssh$ = 8						; size = 4
_in$ = 12						; size = 4
_inlen$ = 16						; size = 4
_pktin$ = 20						; size = 4
_do_ssh2_authconn PROC
; Line 8585
	push	ebp
	mov	ebp, esp
	sub	esp, 440				; 000001b8H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-440]
	mov	ecx, 110				; 0000006eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 8637
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+420], 0
	jne	SHORT $LN414@do_ssh2_au
	push	232					; 000000e8H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR tv67[ebp], eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR tv67[ebp]
	mov	DWORD PTR [ecx+420], edx
	mov	eax, DWORD PTR tv67[ebp]
	mov	DWORD PTR _s$[ebp], eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx], 0
$LN414@do_ssh2_au:
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+420]
	mov	DWORD PTR _s$[ebp], eax
; Line 8639
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR _crLine$93048[ebp], ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv71[ebp], eax
	cmp	DWORD PTR tv71[ebp], 9575		; 00002567H
	jg	$LN426@do_ssh2_au
	cmp	DWORD PTR tv71[ebp], 9575		; 00002567H
	je	$LN179@do_ssh2_au
	cmp	DWORD PTR tv71[ebp], 8972		; 0000230cH
	jg	SHORT $LN427@do_ssh2_au
	cmp	DWORD PTR tv71[ebp], 8972		; 0000230cH
	je	$LN318@do_ssh2_au
	cmp	DWORD PTR tv71[ebp], 8689		; 000021f1H
	jg	SHORT $LN428@do_ssh2_au
	cmp	DWORD PTR tv71[ebp], 8689		; 000021f1H
	je	$LN395@do_ssh2_au
	cmp	DWORD PTR tv71[ebp], 0
	je	$LN411@do_ssh2_au
	cmp	DWORD PTR tv71[ebp], 8678		; 000021e6H
	je	$LN404@do_ssh2_au
	jmp	$LN412@do_ssh2_au
$LN428@do_ssh2_au:
	cmp	DWORD PTR tv71[ebp], 8777		; 00002249H
	je	$LN374@do_ssh2_au
	cmp	DWORD PTR tv71[ebp], 8909		; 000022cdH
	je	$LN338@do_ssh2_au
	jmp	$LN412@do_ssh2_au
$LN427@do_ssh2_au:
	cmp	DWORD PTR tv71[ebp], 9281		; 00002441H
	jg	SHORT $LN429@do_ssh2_au
	cmp	DWORD PTR tv71[ebp], 9281		; 00002441H
	je	$LN250@do_ssh2_au
	cmp	DWORD PTR tv71[ebp], 9139		; 000023b3H
	je	$LN285@do_ssh2_au
	cmp	DWORD PTR tv71[ebp], 9208		; 000023f8H
	je	$LN272@do_ssh2_au
	jmp	$LN412@do_ssh2_au
$LN429@do_ssh2_au:
	cmp	DWORD PTR tv71[ebp], 9317		; 00002465H
	je	$LN236@do_ssh2_au
	cmp	DWORD PTR tv71[ebp], 9494		; 00002516H
	je	$LN206@do_ssh2_au
	jmp	$LN412@do_ssh2_au
$LN426@do_ssh2_au:
	cmp	DWORD PTR tv71[ebp], 9910		; 000026b6H
	jg	SHORT $LN430@do_ssh2_au
	cmp	DWORD PTR tv71[ebp], 9910		; 000026b6H
	je	$LN96@do_ssh2_au
	mov	ecx, DWORD PTR tv71[ebp]
	sub	ecx, 9643				; 000025abH
	mov	DWORD PTR tv71[ebp], ecx
	cmp	DWORD PTR tv71[ebp], 204		; 000000ccH
	ja	$LN412@do_ssh2_au
	mov	edx, DWORD PTR tv71[ebp]
	movzx	eax, BYTE PTR $LN444@do_ssh2_au[edx]
	jmp	DWORD PTR $LN466@do_ssh2_au[eax*4]
$LN430@do_ssh2_au:
	cmp	DWORD PTR tv71[ebp], 10215		; 000027e7H
	jg	SHORT $LN431@do_ssh2_au
	cmp	DWORD PTR tv71[ebp], 10215		; 000027e7H
	je	$LN34@do_ssh2_au
	cmp	DWORD PTR tv71[ebp], 9977		; 000026f9H
	je	$LN83@do_ssh2_au
	cmp	DWORD PTR tv71[ebp], 10082		; 00002762H
	je	$LN65@do_ssh2_au
	jmp	$LN412@do_ssh2_au
$LN431@do_ssh2_au:
	cmp	DWORD PTR tv71[ebp], 10260		; 00002814H
	je	$LN13@do_ssh2_au
	jmp	$LN412@do_ssh2_au
$LN411@do_ssh2_au:
; Line 8642
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+604], OFFSET _ssh2_msg_authconn
; Line 8643
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+780], OFFSET _ssh2_msg_authconn
; Line 8644
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+784], OFFSET _ssh2_msg_authconn
; Line 8645
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+788], OFFSET _ssh2_msg_authconn
; Line 8646
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+792], OFFSET _ssh2_msg_authconn
; Line 8647
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+820], OFFSET _ssh2_msg_authconn
; Line 8650
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+824], OFFSET _ssh2_msg_authconn
; Line 8651
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+900], OFFSET _ssh2_msg_authconn
; Line 8652
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+904], OFFSET _ssh2_msg_authconn
; Line 8653
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+908], OFFSET _ssh2_msg_authconn
; Line 8654
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+940], OFFSET _ssh2_msg_authconn
; Line 8655
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+944], OFFSET _ssh2_msg_authconn
; Line 8656
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+948], OFFSET _ssh2_msg_authconn
; Line 8657
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+952], OFFSET _ssh2_msg_authconn
; Line 8658
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+956], OFFSET _ssh2_msg_authconn
; Line 8659
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+960], OFFSET _ssh2_msg_authconn
; Line 8660
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+964], OFFSET _ssh2_msg_authconn
; Line 8661
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+968], OFFSET _ssh2_msg_authconn
; Line 8663
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 8664
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+56], 0
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+52], 0
; Line 8665
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+108], 0
; Line 8667
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+44], 0
; Line 8670
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+196], 0
	jne	$LN410@do_ssh2_au
; Line 8671
	push	33					; 00000021H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN409@do_ssh2_au
; Line 8675
	push	5
	call	_ssh2_pkt_init
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+184], eax
; Line 8676
	push	OFFSET $SG93057
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 8677
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_pkt_send
	add	esp, 8
$LN405@do_ssh2_au:
; Line 8678
	mov	ecx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [ecx], 8678			; 000021e6H
	jmp	$LN415@do_ssh2_au
$LN404@do_ssh2_au:
	xor	edx, edx
	jne	SHORT $LN405@do_ssh2_au
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN405@do_ssh2_au
; Line 8679
	mov	eax, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [eax+8], 6
	jne	SHORT $LN409@do_ssh2_au
; Line 8680
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+8], 1
$LN409@do_ssh2_au:
; Line 8682
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jne	$LN400@do_ssh2_au
; Line 8686
	push	5
	call	_ssh2_pkt_init
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+184], eax
; Line 8687
	push	OFFSET $SG93067
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 8688
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_pkt_send
	add	esp, 8
$LN396@do_ssh2_au:
; Line 8689
	mov	ecx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [ecx], 8689			; 000021f1H
	jmp	$LN415@do_ssh2_au
$LN395@do_ssh2_au:
	xor	edx, edx
	jne	SHORT $LN396@do_ssh2_au
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN396@do_ssh2_au
; Line 8690
	mov	eax, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [eax+8], 6
	jne	SHORT $LN392@do_ssh2_au
; Line 8691
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+52], 1
; Line 8692
	jmp	SHORT $LN400@do_ssh2_au
$LN392@do_ssh2_au:
; Line 8693
	push	OFFSET $SG93077
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN390@do_ssh2_au:
; Line 8694
	mov	eax, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [eax], 0
	jmp	$LN415@do_ssh2_au
	xor	ecx, ecx
	jne	SHORT $LN390@do_ssh2_au
$LN400@do_ssh2_au:
; Line 8697
	jmp	SHORT $LN387@do_ssh2_au
$LN410@do_ssh2_au:
; Line 8698
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+52], 1
$LN387@do_ssh2_au:
; Line 8703
	mov	eax, DWORD PTR _ssh$[ebp]
	add	eax, 332				; 0000014cH
	push	eax
	call	_bufchain_init
	add	esp, 4
; Line 8705
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+792], OFFSET _ssh2_msg_userauth_banner
; Line 8710
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+80], 0
; Line 8711
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+52], 0
	jne	$done_agent_query$93136
; Line 8717
	push	30					; 0000001eH
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_filename
	add	esp, 8
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+188], eax
; Line 8718
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+188]
	push	eax
	call	_filename_is_null
	add	esp, 4
	test	eax, eax
	jne	$LN385@do_ssh2_au
; Line 8721
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+188]
	push	edx
	call	_filename_to_str
	add	esp, 4
	push	eax
	push	OFFSET $SG93086
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 8722
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+188]
	push	edx
	call	_key_type
	add	esp, 4
	mov	DWORD PTR _keytype$93085[ebp], eax
; Line 8723
	cmp	DWORD PTR _keytype$93085[ebp], 3
	jne	$LN384@do_ssh2_au
; Line 8729
	lea	eax, DWORD PTR _error$93088[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 96					; 00000060H
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 84					; 00000054H
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 92					; 0000005cH
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+188]
	push	edx
	call	_ssh2_userkey_loadpub
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 8730
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+80], 0
	je	SHORT $LN383@do_ssh2_au
; Line 8732
	push	0
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+188]
	push	ecx
	call	_ssh2_userkey_encrypted
	add	esp, 8
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+88], eax
; Line 8733
	jmp	SHORT $LN382@do_ssh2_au
$LN383@do_ssh2_au:
; Line 8736
	mov	eax, DWORD PTR _error$93088[ebp]
	push	eax
	push	OFFSET $SG93093
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 8740
	mov	edx, DWORD PTR _error$93088[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+188]
	push	ecx
	call	_filename_to_str
	add	esp, 4
	push	eax
	push	OFFSET $SG93094
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _msgbuf$93092[ebp], eax
; Line 8741
	mov	edx, DWORD PTR _msgbuf$93092[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_c_write_str
	add	esp, 8
; Line 8742
	mov	ecx, DWORD PTR _msgbuf$93092[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN382@do_ssh2_au:
; Line 8744
	jmp	SHORT $LN385@do_ssh2_au
$LN384@do_ssh2_au:
; Line 8747
	mov	edx, DWORD PTR _keytype$93085[ebp]
	push	edx
	call	_key_type_to_str
	add	esp, 4
	push	eax
	push	OFFSET $SG93097
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 8751
	mov	ecx, DWORD PTR _keytype$93085[ebp]
	push	ecx
	call	_key_type_to_str
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+188]
	push	eax
	call	_filename_to_str
	add	esp, 4
	push	eax
	push	OFFSET $SG93098
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _msgbuf$93096[ebp], eax
; Line 8752
	mov	ecx, DWORD PTR _msgbuf$93096[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_c_write_str
	add	esp, 8
; Line 8753
	mov	eax, DWORD PTR _msgbuf$93096[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 8754
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+80], 0
$LN385@do_ssh2_au:
; Line 8762
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+128], 0
; Line 8763
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+108], 0
; Line 8764
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+120], 0
; Line 8765
	push	26					; 0000001aH
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	$done_agent_query$93136
	call	_agent_exists
	test	eax, eax
	je	$done_agent_query$93136
; Line 8769
	push	OFFSET $SG93104
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 8772
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax+100], 0
	mov	ecx, DWORD PTR _s$[ebp]
	mov	BYTE PTR [ecx+101], 0
	mov	edx, DWORD PTR _s$[ebp]
	mov	BYTE PTR [edx+102], 0
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax+103], 1
; Line 8773
	mov	ecx, DWORD PTR _s$[ebp]
	mov	BYTE PTR [ecx+104], 11			; 0000000bH
; Line 8775
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	push	OFFSET _ssh_agent_callback
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 116				; 00000074H
	push	eax
	lea	ecx, DWORD PTR _r$93103[ebp]
	push	ecx
	push	5
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 100				; 00000064H
	push	edx
	call	_agent_query
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LN379@do_ssh2_au
$LN375@do_ssh2_au:
; Line 8777
	mov	eax, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [eax], 8777			; 00002249H
	jmp	$LN415@do_ssh2_au
$LN374@do_ssh2_au:
	xor	ecx, ecx
	jne	SHORT $LN375@do_ssh2_au
; Line 8778
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN377@do_ssh2_au
; Line 8780
	push	OFFSET $SG93118
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN370@do_ssh2_au:
; Line 8781
	mov	eax, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [eax], 0
	jmp	$LN415@do_ssh2_au
	xor	ecx, ecx
	jne	SHORT $LN370@do_ssh2_au
$LN377@do_ssh2_au:
; Line 8783
	cmp	DWORD PTR _pktin$[ebp], 0
	jne	SHORT $LN375@do_ssh2_au
	cmp	DWORD PTR _inlen$[ebp], 0
	jg	SHORT $LN375@do_ssh2_au
; Line 8784
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+552]
	mov	DWORD PTR _r$93103[ebp], eax
; Line 8785
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+556]
	mov	DWORD PTR [ecx+116], eax
$LN379@do_ssh2_au:
; Line 8787
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR _r$93103[ebp]
	mov	DWORD PTR [ecx+108], edx
; Line 8789
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+108], 0
	je	$LN367@do_ssh2_au
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+116], 5
	jl	$LN367@do_ssh2_au
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+108]
	movzx	ecx, BYTE PTR [eax+4]
	cmp	ecx, 12					; 0000000cH
	jne	$LN367@do_ssh2_au
; Line 8792
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+108]
	add	eax, 5
	mov	DWORD PTR _p$93125[ebp], eax
; Line 8793
	mov	ecx, DWORD PTR _p$93125[ebp]
	movzx	edx, BYTE PTR [ecx]
	shl	edx, 24					; 00000018H
	mov	eax, DWORD PTR _p$93125[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	mov	eax, DWORD PTR _p$93125[ebp]
	movzx	ecx, BYTE PTR [eax+2]
	shl	ecx, 8
	or	edx, ecx
	mov	eax, DWORD PTR _p$93125[ebp]
	movzx	ecx, BYTE PTR [eax+3]
	or	edx, ecx
	push	edx
	call	_toint
	add	esp, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+128], eax
; Line 8799
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+128], 0
	jge	SHORT $LN366@do_ssh2_au
; Line 8801
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	push	OFFSET $SG93135
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 8802
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+128], 0
; Line 8803
	jmp	$done_agent_query$93136
; Line 8804
	jmp	$LN365@do_ssh2_au
$LN366@do_ssh2_au:
; Line 8805
	mov	edx, DWORD PTR _p$93125[ebp]
	add	edx, 4
	mov	DWORD PTR _q$93138[ebp], edx
; Line 8806
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	sub	ecx, 9
	mov	DWORD PTR _lenleft$93139[ebp], ecx
; Line 8808
	mov	DWORD PTR _keyi$93124[ebp], 0
	jmp	SHORT $LN364@do_ssh2_au
$LN363@do_ssh2_au:
	mov	edx, DWORD PTR _keyi$93124[ebp]
	add	edx, 1
	mov	DWORD PTR _keyi$93124[ebp], edx
$LN364@do_ssh2_au:
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR _keyi$93124[ebp]
	cmp	ecx, DWORD PTR [eax+128]
	jge	$LN365@do_ssh2_au
; Line 8810
	cmp	DWORD PTR _lenleft$93139[ebp], 4
	jge	SHORT $LN361@do_ssh2_au
; Line 8811
	push	OFFSET $SG93146
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 8
; Line 8812
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+128], 0
; Line 8813
	jmp	$done_agent_query$93136
$LN361@do_ssh2_au:
; Line 8815
	mov	ecx, DWORD PTR _q$93138[ebp]
	movzx	edx, BYTE PTR [ecx]
	shl	edx, 24					; 00000018H
	mov	eax, DWORD PTR _q$93138[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	mov	eax, DWORD PTR _q$93138[ebp]
	movzx	ecx, BYTE PTR [eax+2]
	shl	ecx, 8
	or	edx, ecx
	mov	eax, DWORD PTR _q$93138[ebp]
	movzx	ecx, BYTE PTR [eax+3]
	or	edx, ecx
	push	edx
	call	_toint
	add	esp, 4
	mov	DWORD PTR _bloblen$93143[ebp], eax
; Line 8816
	cmp	DWORD PTR _bloblen$93143[ebp], 0
	jl	SHORT $LN359@do_ssh2_au
	mov	edx, DWORD PTR _bloblen$93143[ebp]
	cmp	edx, DWORD PTR _lenleft$93139[ebp]
	jle	SHORT $LN360@do_ssh2_au
$LN359@do_ssh2_au:
; Line 8817
	push	OFFSET $SG93157
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 8
; Line 8818
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+128], 0
; Line 8819
	jmp	$done_agent_query$93136
$LN360@do_ssh2_au:
; Line 8821
	mov	edx, DWORD PTR _bloblen$93143[ebp]
	add	edx, 4
	mov	eax, DWORD PTR _lenleft$93139[ebp]
	sub	eax, edx
	mov	DWORD PTR _lenleft$93139[ebp], eax
; Line 8822
	mov	ecx, DWORD PTR _bloblen$93143[ebp]
	mov	edx, DWORD PTR _q$93138[ebp]
	lea	eax, DWORD PTR [edx+ecx+4]
	mov	DWORD PTR _q$93138[ebp], eax
; Line 8823
	mov	ecx, DWORD PTR _q$93138[ebp]
	movzx	edx, BYTE PTR [ecx]
	shl	edx, 24					; 00000018H
	mov	eax, DWORD PTR _q$93138[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	mov	eax, DWORD PTR _q$93138[ebp]
	movzx	ecx, BYTE PTR [eax+2]
	shl	ecx, 8
	or	edx, ecx
	mov	eax, DWORD PTR _q$93138[ebp]
	movzx	ecx, BYTE PTR [eax+3]
	or	edx, ecx
	push	edx
	call	_toint
	add	esp, 4
	mov	DWORD PTR _commentlen$93144[ebp], eax
; Line 8824
	cmp	DWORD PTR _commentlen$93144[ebp], 0
	jl	SHORT $LN357@do_ssh2_au
	mov	edx, DWORD PTR _commentlen$93144[ebp]
	cmp	edx, DWORD PTR _lenleft$93139[ebp]
	jle	SHORT $LN358@do_ssh2_au
$LN357@do_ssh2_au:
; Line 8825
	push	OFFSET $SG93168
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 8
; Line 8826
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+128], 0
; Line 8827
	jmp	$done_agent_query$93136
$LN358@do_ssh2_au:
; Line 8829
	mov	edx, DWORD PTR _commentlen$93144[ebp]
	add	edx, 4
	mov	eax, DWORD PTR _lenleft$93139[ebp]
	sub	eax, edx
	mov	DWORD PTR _lenleft$93139[ebp], eax
; Line 8830
	mov	ecx, DWORD PTR _commentlen$93144[ebp]
	mov	edx, DWORD PTR _q$93138[ebp]
	lea	eax, DWORD PTR [edx+ecx+4]
	mov	DWORD PTR _q$93138[ebp], eax
; Line 8831
	jmp	$LN363@do_ssh2_au
$LN365@do_ssh2_au:
; Line 8834
	mov	ecx, DWORD PTR _p$93125[ebp]
	add	ecx, 4
	mov	DWORD PTR _p$93125[ebp], ecx
; Line 8835
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+128]
	push	eax
	push	OFFSET $SG93169
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 8836
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+80], 0
	je	$LN356@do_ssh2_au
; Line 8838
	mov	DWORD PTR _keyi$93124[ebp], 0
	jmp	SHORT $LN355@do_ssh2_au
$LN354@do_ssh2_au:
	mov	eax, DWORD PTR _keyi$93124[ebp]
	add	eax, 1
	mov	DWORD PTR _keyi$93124[ebp], eax
$LN355@do_ssh2_au:
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR _keyi$93124[ebp]
	cmp	edx, DWORD PTR [ecx+128]
	jge	$LN353@do_ssh2_au
; Line 8839
	mov	eax, DWORD PTR _p$93125[ebp]
	movzx	ecx, BYTE PTR [eax]
	shl	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _p$93125[ebp]
	movzx	eax, BYTE PTR [edx+1]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	edx, DWORD PTR _p$93125[ebp]
	movzx	eax, BYTE PTR [edx+2]
	shl	eax, 8
	or	ecx, eax
	mov	edx, DWORD PTR _p$93125[ebp]
	movzx	eax, BYTE PTR [edx+3]
	or	ecx, eax
	push	ecx
	call	_toint
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+144], eax
; Line 8842
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [edx+144]
	cmp	ecx, DWORD PTR [eax+84]
	jne	SHORT $LN352@do_ssh2_au
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+84]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	mov	eax, DWORD PTR _p$93125[ebp]
	add	eax, 4
	push	eax
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN352@do_ssh2_au
; Line 8844
	mov	ecx, DWORD PTR _keyi$93124[ebp]
	push	ecx
	push	OFFSET $SG93183
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 8845
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR _keyi$93124[ebp]
	mov	DWORD PTR [eax+124], ecx
; Line 8846
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _p$93125[ebp]
	mov	DWORD PTR [edx+120], eax
; Line 8847
	jmp	SHORT $LN353@do_ssh2_au
$LN352@do_ssh2_au:
; Line 8849
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	mov	eax, DWORD PTR _p$93125[ebp]
	lea	ecx, DWORD PTR [eax+edx+4]
	mov	DWORD PTR _p$93125[ebp], ecx
; Line 8850
	mov	edx, DWORD PTR _p$93125[ebp]
	movzx	eax, BYTE PTR [edx]
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _p$93125[ebp]
	movzx	edx, BYTE PTR [ecx+1]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, DWORD PTR _p$93125[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	shl	edx, 8
	or	eax, edx
	mov	ecx, DWORD PTR _p$93125[ebp]
	movzx	edx, BYTE PTR [ecx+3]
	or	eax, edx
	push	eax
	call	_toint
	add	esp, 4
	mov	ecx, DWORD PTR _p$93125[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR _p$93125[ebp], edx
; Line 8851
	jmp	$LN354@do_ssh2_au
$LN353@do_ssh2_au:
; Line 8852
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+120], 0
	jne	SHORT $LN356@do_ssh2_au
; Line 8853
	push	OFFSET $SG93193
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 8854
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+128], 0
$LN356@do_ssh2_au:
; Line 8857
	jmp	SHORT $done_agent_query$93136
$LN367@do_ssh2_au:
; Line 8858
	push	OFFSET $SG93195
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
$done_agent_query$93136:
; Line 8889
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+76], 0
$LN349@do_ssh2_au:
; Line 8890
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+52], 0
	jne	$LN348@do_ssh2_au
; Line 8894
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+76], 0
	je	SHORT $LN347@do_ssh2_au
	push	28					; 0000001cH
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN347@do_ssh2_au
	jmp	$LN346@do_ssh2_au
$LN347@do_ssh2_au:
; Line 8900
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_get_remote_username
	add	esp, 4
	mov	DWORD PTR tv483[ebp], eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR tv483[ebp]
	mov	DWORD PTR [ecx+548], edx
	cmp	DWORD PTR tv483[ebp], 0
	jne	$LN345@do_ssh2_au
; Line 8902
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_new_prompts
	add	esp, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+60], eax
; Line 8903
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR [ecx], 1
; Line 8904
	push	OFFSET $SG93204
	call	_dupstr
	add	esp, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [edx+60]
	mov	DWORD PTR [ecx+4], eax
; Line 8905
	push	1
	push	OFFSET $SG93205
	call	_dupstr
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	call	_add_prompt
	add	esp, 12					; 0000000cH
; Line 8906
	push	0
	push	0
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	_get_userpass_input
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$93203[ebp], eax
$LN344@do_ssh2_au:
; Line 8907
	cmp	DWORD PTR _ret$93203[ebp], 0
	jge	SHORT $LN343@do_ssh2_au
; Line 8908
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+216], 1
$LN339@do_ssh2_au:
; Line 8909
	mov	ecx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [ecx], 8909			; 000022cdH
	jmp	$LN415@do_ssh2_au
$LN338@do_ssh2_au:
	xor	edx, edx
	jne	SHORT $LN339@do_ssh2_au
	cmp	DWORD PTR _pktin$[ebp], 0
	jne	SHORT $LN339@do_ssh2_au
; Line 8910
	mov	eax, DWORD PTR _inlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _in$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	call	_get_userpass_input
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$93203[ebp], eax
; Line 8911
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+216], 0
; Line 8912
	jmp	SHORT $LN344@do_ssh2_au
$LN343@do_ssh2_au:
; Line 8913
	cmp	DWORD PTR _ret$93203[ebp], 0
	jne	SHORT $LN335@do_ssh2_au
; Line 8918
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	call	_free_prompts
	add	esp, 4
; Line 8919
	push	1
	push	0
	push	0
	push	OFFSET $SG93219
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_disconnect
	add	esp, 20					; 00000014H
$LN334@do_ssh2_au:
; Line 8920
	mov	edx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [edx], 0
	jmp	$LN415@do_ssh2_au
	xor	eax, eax
	jne	SHORT $LN334@do_ssh2_au
$LN335@do_ssh2_au:
; Line 8922
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_dupstr
	add	esp, 4
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+548], eax
; Line 8923
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	call	_free_prompts
	add	esp, 4
; Line 8924
	jmp	SHORT $LN346@do_ssh2_au
$LN345@do_ssh2_au:
; Line 8926
	mov	ecx, DWORD PTR _flags
	and	ecx, 1
	jne	SHORT $LN329@do_ssh2_au
	mov	edx, DWORD PTR _flags
	and	edx, 4
	je	SHORT $LN346@do_ssh2_au
$LN329@do_ssh2_au:
; Line 8927
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+548]
	push	ecx
	push	OFFSET $SG93227
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _stuff$93224[ebp], eax
; Line 8928
	mov	edx, DWORD PTR _stuff$93224[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_c_write_str
	add	esp, 8
; Line 8929
	mov	ecx, DWORD PTR _stuff$93224[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN346@do_ssh2_au:
; Line 8932
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+76], 1
; Line 8939
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+348], 0
; Line 8941
	push	50					; 00000032H
	call	_ssh2_pkt_init
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+184], eax
; Line 8942
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+548]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 8943
	push	OFFSET $SG93228
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 8944
	push	OFFSET $SG93229
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 8945
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_pkt_send
	add	esp, 8
; Line 8946
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 8947
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 8948
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+52], 0
; Line 8950
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+32], 0
; Line 8951
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+48], 0
; Line 8954
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+36], 0
; Line 8955
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+108], 0
	je	SHORT $LN325@do_ssh2_au
; Line 8956
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+120], 0
	je	SHORT $LN327@do_ssh2_au
; Line 8957
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	DWORD PTR [eax+112], edx
; Line 8958
	jmp	SHORT $LN325@do_ssh2_au
$LN327@do_ssh2_au:
; Line 8959
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	add	ecx, 9
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+112], ecx
; Line 8960
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+124], 0
$LN325@do_ssh2_au:
; Line 8964
	mov	ecx, 1
	test	ecx, ecx
	je	$LN324@do_ssh2_au
	mov	BYTE PTR $T94818[ebp], 0
	mov	BYTE PTR $T94817[ebp], 0
; Line 8965
	mov	BYTE PTR $T94817[ebp], 1
	mov	DWORD PTR _methods$93236[ebp], 0
; Line 8966
	mov	BYTE PTR $T94818[ebp], 1
	mov	DWORD PTR _methlen$93238[ebp], 0
; Line 8971
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+12], 0
	jne	SHORT $LN323@do_ssh2_au
$LN319@do_ssh2_au:
; Line 8972
	mov	eax, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [eax], 8972			; 0000230cH
	jmp	$LN415@do_ssh2_au
$LN318@do_ssh2_au:
	xor	ecx, ecx
	jne	SHORT $LN319@do_ssh2_au
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN319@do_ssh2_au
$LN323@do_ssh2_au:
; Line 8980
	mov	edx, DWORD PTR _ssh$[ebp]
	add	edx, 332				; 0000014cH
	push	edx
	call	_bufchain_size
	add	esp, 4
	mov	DWORD PTR _size$93247[ebp], eax
; Line 8989
	cmp	DWORD PTR _size$93247[ebp], 0
	je	SHORT $LN315@do_ssh2_au
	mov	eax, DWORD PTR _flags
	and	eax, 5
	je	SHORT $LN315@do_ssh2_au
; Line 8990
	push	1
	mov	ecx, DWORD PTR _size$93247[ebp]
	push	ecx
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _banner$93249[ebp], eax
; Line 8991
	mov	edx, DWORD PTR _size$93247[ebp]
	push	edx
	mov	eax, DWORD PTR _banner$93249[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	add	ecx, 332				; 0000014cH
	push	ecx
	call	_bufchain_fetch
	add	esp, 12					; 0000000cH
; Line 8992
	mov	edx, DWORD PTR _size$93247[ebp]
	push	edx
	mov	eax, DWORD PTR _banner$93249[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_c_write_untrusted
	add	esp, 12					; 0000000cH
; Line 8993
	mov	edx, DWORD PTR _banner$93249[ebp]
	push	edx
	call	_safefree
	add	esp, 4
$LN315@do_ssh2_au:
; Line 8995
	mov	eax, DWORD PTR _ssh$[ebp]
	add	eax, 332				; 0000014cH
	push	eax
	call	_bufchain_clear
	add	esp, 4
; Line 8997
	mov	ecx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [ecx+8], 52			; 00000034H
	jne	SHORT $LN314@do_ssh2_au
; Line 8998
	push	OFFSET $SG93253
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 8999
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+56], 1
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+52], 1
; Line 9000
	jmp	$LN324@do_ssh2_au
$LN314@do_ssh2_au:
; Line 9003
	mov	eax, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [eax+8], 51			; 00000033H
	je	SHORT $LN313@do_ssh2_au
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+4], 5
	je	SHORT $LN313@do_ssh2_au
; Line 9005
	mov	edx, DWORD PTR _pktin$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	OFFSET $SG93255
	call	_dupprintf
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_bomb_out
	add	esp, 8
$LN312@do_ssh2_au:
; Line 9006
	mov	edx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [edx], 0
	jmp	$LN415@do_ssh2_au
	xor	eax, eax
	jne	SHORT $LN312@do_ssh2_au
$LN313@do_ssh2_au:
; Line 9009
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+12], 0
; Line 9016
	mov	edx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [edx+8], 51			; 00000033H
	jne	$LN309@do_ssh2_au
; Line 9017
	mov	BYTE PTR $T94818[ebp], 1
	lea	eax, DWORD PTR _methlen$93238[ebp]
	push	eax
	mov	BYTE PTR $T94817[ebp], 1
	lea	ecx, DWORD PTR _methods$93236[ebp]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 9018
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh2_pkt_getbool
	add	esp, 4
	test	eax, eax
	jne	$LN308@do_ssh2_au
; Line 9042
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	jne	SHORT $LN307@do_ssh2_au
; Line 9044
	jmp	$LN306@do_ssh2_au
$LN307@do_ssh2_au:
; Line 9045
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+4], 2
	je	SHORT $LN304@do_ssh2_au
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+4], 3
	jne	SHORT $LN305@do_ssh2_au
$LN304@do_ssh2_au:
; Line 9046
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+4], 2
	jne	SHORT $LN303@do_ssh2_au
; Line 9047
	push	OFFSET $SG93266
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_c_write_str
	add	esp, 8
$LN303@do_ssh2_au:
; Line 9048
	push	OFFSET $SG93267
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
	jmp	$LN306@do_ssh2_au
$LN305@do_ssh2_au:
; Line 9049
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+4], 1
	jne	SHORT $LN301@do_ssh2_au
; Line 9054
	push	OFFSET $SG93270
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_c_write_str
	add	esp, 8
; Line 9056
	push	OFFSET $SG93271
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
	jmp	$LN306@do_ssh2_au
$LN301@do_ssh2_au:
; Line 9057
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+4], 7
	jne	SHORT $LN299@do_ssh2_au
; Line 9059
	push	OFFSET $SG93274
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
	jmp	$LN306@do_ssh2_au
$LN299@do_ssh2_au:
; Line 9060
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+4], 5
	jne	SHORT $LN297@do_ssh2_au
	jmp	$LN306@do_ssh2_au
$LN297@do_ssh2_au:
; Line 9064
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+4], 6
	jne	SHORT $LN295@do_ssh2_au
; Line 9065
	push	OFFSET $SG93279
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 9066
	push	OFFSET $SG93280
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_c_write_str
	add	esp, 8
; Line 9067
	jmp	SHORT $LN306@do_ssh2_au
$LN295@do_ssh2_au:
; Line 9068
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+4], 4
	je	SHORT $LN417@do_ssh2_au
	push	9068					; 0000236cH
	push	OFFSET $SG93283
	push	OFFSET $SG93284
	call	__wassert
	add	esp, 12					; 0000000cH
$LN417@do_ssh2_au:
; Line 9069
	push	OFFSET $SG93285
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 9070
	push	OFFSET $SG93286
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_c_write_str
	add	esp, 8
; Line 9072
	push	28					; 0000001cH
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN306@do_ssh2_au
; Line 9075
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+52], 0
; Line 9076
	jmp	$LN324@do_ssh2_au
$LN306@do_ssh2_au:
; Line 9079
	jmp	SHORT $LN292@do_ssh2_au
$LN308@do_ssh2_au:
; Line 9080
	push	OFFSET $SG93289
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_c_write_str
	add	esp, 8
; Line 9081
	push	OFFSET $SG93290
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
$LN292@do_ssh2_au:
; Line 9085
	cmp	BYTE PTR $T94818[ebp], 0
	jne	SHORT $LN432@do_ssh2_au
	push	OFFSET $LN433@do_ssh2_au
	call	__RTC_UninitUse
	add	esp, 4
$LN432@do_ssh2_au:
	cmp	BYTE PTR $T94817[ebp], 0
	jne	SHORT $LN434@do_ssh2_au
	push	OFFSET $LN435@do_ssh2_au
	call	__RTC_UninitUse
	add	esp, 4
$LN434@do_ssh2_au:
	mov	ecx, DWORD PTR _methlen$93238[ebp]
	push	ecx
	mov	edx, DWORD PTR _methods$93236[ebp]
	push	edx
	push	OFFSET $SG93291
	call	_in_commasep_string
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 9087
	cmp	BYTE PTR $T94818[ebp], 0
	jne	SHORT $LN436@do_ssh2_au
	push	OFFSET $LN433@do_ssh2_au
	call	__RTC_UninitUse
	add	esp, 4
$LN436@do_ssh2_au:
	cmp	BYTE PTR $T94817[ebp], 0
	jne	SHORT $LN437@do_ssh2_au
	push	OFFSET $LN435@do_ssh2_au
	call	__RTC_UninitUse
	add	esp, 4
$LN437@do_ssh2_au:
	mov	edx, DWORD PTR _methlen$93238[ebp]
	push	edx
	mov	eax, DWORD PTR _methods$93236[ebp]
	push	eax
	push	OFFSET $SG93292
	call	_in_commasep_string
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 9089
	push	36					; 00000024H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN418@do_ssh2_au
	cmp	BYTE PTR $T94818[ebp], 0
	jne	SHORT $LN438@do_ssh2_au
	push	OFFSET $LN433@do_ssh2_au
	call	__RTC_UninitUse
	add	esp, 4
$LN438@do_ssh2_au:
	cmp	BYTE PTR $T94817[ebp], 0
	jne	SHORT $LN439@do_ssh2_au
	push	OFFSET $LN435@do_ssh2_au
	call	__RTC_UninitUse
	add	esp, 4
$LN439@do_ssh2_au:
	mov	ecx, DWORD PTR _methlen$93238[ebp]
	push	ecx
	mov	edx, DWORD PTR _methods$93236[ebp]
	push	edx
	push	OFFSET $SG93293
	call	_in_commasep_string
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN418@do_ssh2_au
	mov	DWORD PTR tv742[ebp], 1
	jmp	SHORT $LN419@do_ssh2_au
$LN418@do_ssh2_au:
	mov	DWORD PTR tv742[ebp], 0
$LN419@do_ssh2_au:
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR tv742[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 9091
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+1660], 0
	jne	SHORT $LN291@do_ssh2_au
; Line 9092
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_ssh_gss_setup
	add	esp, 4
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+1660], eax
$LN291@do_ssh2_au:
; Line 9095
	push	37					; 00000025H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN420@do_ssh2_au
	cmp	BYTE PTR $T94818[ebp], 0
	jne	SHORT $LN440@do_ssh2_au
	push	OFFSET $LN433@do_ssh2_au
	call	__RTC_UninitUse
	add	esp, 4
$LN440@do_ssh2_au:
	cmp	BYTE PTR $T94817[ebp], 0
	jne	SHORT $LN441@do_ssh2_au
	push	OFFSET $LN435@do_ssh2_au
	call	__RTC_UninitUse
	add	esp, 4
$LN441@do_ssh2_au:
	mov	edx, DWORD PTR _methlen$93238[ebp]
	push	edx
	mov	eax, DWORD PTR _methods$93236[ebp]
	push	eax
	push	OFFSET $SG93295
	call	_in_commasep_string
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN420@do_ssh2_au
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+1660]
	cmp	DWORD PTR [edx+4], 0
	jle	SHORT $LN420@do_ssh2_au
	mov	DWORD PTR tv763[ebp], 1
	jmp	SHORT $LN421@do_ssh2_au
$LN420@do_ssh2_au:
	mov	DWORD PTR tv763[ebp], 0
$LN421@do_ssh2_au:
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR tv763[ebp]
	mov	DWORD PTR [eax+40], ecx
$LN309@do_ssh2_au:
; Line 9099
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+348], 0
; Line 9101
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	$LN290@do_ssh2_au
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+36], 0
	jne	$LN290@do_ssh2_au
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+128], 0
	je	$LN290@do_ssh2_au
; Line 9107
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+348], 1
; Line 9109
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	push	edx
	push	OFFSET $SG93297
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 9112
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	movzx	eax, BYTE PTR [edx]
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	movzx	ecx, BYTE PTR [edx+1]
	shl	ecx, 16					; 00000010H
	or	eax, ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [edx+112]
	movzx	edx, BYTE PTR [ecx+2]
	shl	edx, 8
	or	eax, edx
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	movzx	ecx, BYTE PTR [edx+3]
	or	eax, ecx
	push	eax
	call	_toint
	add	esp, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+144], eax
; Line 9113
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	add	ecx, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+112], ecx
; Line 9114
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	mov	DWORD PTR [eax+132], edx
; Line 9115
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	mov	edx, DWORD PTR _s$[ebp]
	add	ecx, DWORD PTR [edx+144]
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+112], ecx
; Line 9116
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	movzx	eax, BYTE PTR [edx]
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	movzx	ecx, BYTE PTR [edx+1]
	shl	ecx, 16					; 00000010H
	or	eax, ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [edx+132]
	movzx	edx, BYTE PTR [ecx+2]
	shl	edx, 8
	or	eax, edx
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	movzx	ecx, BYTE PTR [edx+3]
	or	eax, ecx
	push	eax
	call	_toint
	add	esp, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+148], eax
; Line 9117
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	add	ecx, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+136], ecx
; Line 9118
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	movzx	edx, BYTE PTR [ecx]
	shl	edx, 24					; 00000018H
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	movzx	eax, BYTE PTR [ecx+1]
	shl	eax, 16					; 00000010H
	or	edx, eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [ecx+112]
	movzx	ecx, BYTE PTR [eax+2]
	shl	ecx, 8
	or	edx, ecx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	movzx	eax, BYTE PTR [ecx+3]
	or	edx, eax
	push	edx
	call	_toint
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+152], eax
; Line 9119
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+112]
	add	eax, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+112], eax
; Line 9120
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	mov	DWORD PTR [edx+140], ecx
; Line 9121
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+112]
	mov	ecx, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR [ecx+152]
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+112], eax
; Line 9125
	push	50					; 00000032H
	call	_ssh2_pkt_init
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+184], eax
; Line 9126
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+548]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9127
	push	OFFSET $SG93324
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9129
	push	OFFSET $SG93325
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9131
	push	0
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh2_pkt_addbool
	add	esp, 8
; Line 9132
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 9133
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+148]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_addstring_data
	add	esp, 12					; 0000000cH
; Line 9134
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 9135
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh_pkt_addstring_data
	add	esp, 12					; 0000000cH
; Line 9136
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_pkt_send
	add	esp, 8
; Line 9137
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+4], 3
$LN286@do_ssh2_au:
; Line 9139
	mov	edx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [edx], 9139			; 000023b3H
	jmp	$LN415@do_ssh2_au
$LN285@do_ssh2_au:
	xor	eax, eax
	jne	SHORT $LN286@do_ssh2_au
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN286@do_ssh2_au
; Line 9140
	mov	ecx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [ecx+8], 60			; 0000003cH
	je	SHORT $LN282@do_ssh2_au
; Line 9143
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+12], 1
; Line 9145
	jmp	$LN281@do_ssh2_au
$LN282@do_ssh2_au:
; Line 9149
	mov	eax, DWORD PTR _flags
	and	eax, 1
	je	SHORT $LN280@do_ssh2_au
; Line 9151
	push	OFFSET $SG93337
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_c_write_str
	add	esp, 8
; Line 9152
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+152]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+140]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_c_write
	add	esp, 12					; 0000000cH
; Line 9153
	push	OFFSET $SG93338
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_c_write_str
	add	esp, 8
$LN280@do_ssh2_au:
; Line 9160
	push	50					; 00000032H
	call	_ssh2_pkt_init
	add	esp, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+184], eax
; Line 9161
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+548]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9162
	push	OFFSET $SG93339
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9164
	push	OFFSET $SG93340
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9166
	push	1
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh2_pkt_addbool
	add	esp, 8
; Line 9167
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 9168
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+136]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_addstring_data
	add	esp, 12					; 0000000cH
; Line 9169
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 9170
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+144]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_addstring_data
	add	esp, 12					; 0000000cH
; Line 9174
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+188]
	lea	ecx, DWORD PTR [ecx+eax-1]
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+156], ecx
; Line 9175
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	and	ecx, 128				; 00000080H
	je	SHORT $LN279@do_ssh2_au
; Line 9176
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+156]
	sub	eax, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+156], eax
$LN279@do_ssh2_au:
; Line 9177
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+164], 1
; Line 9178
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+164]
	lea	ecx, DWORD PTR [ecx+eax+4]
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+164], ecx
; Line 9179
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+156]
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+164]
	lea	ecx, DWORD PTR [ecx+eax+4]
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+164], ecx
; Line 9180
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	add	ecx, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+164], ecx
; Line 9181
	push	1
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	add	ecx, 4
	push	ecx
	call	_safemalloc
	add	esp, 8
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+172], eax
; Line 9182
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	sar	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+172]
	mov	BYTE PTR [eax], cl
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+164]
	sar	edx, 16					; 00000010H
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	mov	BYTE PTR [ecx+1], dl
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+164]
	sar	eax, 8
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+172]
	mov	BYTE PTR [edx+2], al
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	mov	edx, DWORD PTR _s$[ebp]
	mov	al, BYTE PTR [edx+164]
	mov	BYTE PTR [ecx+3], al
; Line 9183
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+172]
	add	edx, 4
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+168], edx
; Line 9184
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+168]
	mov	BYTE PTR [edx], 13			; 0000000dH
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	add	ecx, 1
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+168], ecx
; Line 9185
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	sar	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+168]
	mov	BYTE PTR [eax], cl
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	sar	edx, 16					; 00000010H
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	BYTE PTR [ecx+1], dl
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+144]
	sar	eax, 8
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+168]
	mov	BYTE PTR [edx+2], al
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	edx, DWORD PTR _s$[ebp]
	mov	al, BYTE PTR [edx+144]
	mov	BYTE PTR [ecx+3], al
; Line 9186
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+168]
	add	edx, 4
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+168], edx
; Line 9187
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+168]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 9188
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+168]
	mov	eax, DWORD PTR _s$[ebp]
	add	edx, DWORD PTR [eax+144]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+168], edx
; Line 9189
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+156]
	sar	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+168]
	mov	BYTE PTR [edx], al
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+156]
	sar	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+168]
	mov	BYTE PTR [eax+1], cl
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+156]
	sar	edx, 8
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	BYTE PTR [ecx+2], dl
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+168]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	dl, BYTE PTR [ecx+156]
	mov	BYTE PTR [eax+3], dl
; Line 9190
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	add	ecx, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+168], ecx
; Line 9192
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	and	ecx, 128				; 00000080H
	jne	SHORT $LN278@do_ssh2_au
; Line 9193
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+188]
	sar	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+168]
	mov	BYTE PTR [edx], al
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+188]
	sar	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+168]
	mov	BYTE PTR [eax+1], cl
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+188]
	sar	edx, 8
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	BYTE PTR [ecx+2], dl
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+168]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	dl, BYTE PTR [ecx+188]
	mov	BYTE PTR [eax+3], dl
; Line 9194
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	add	ecx, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+168], ecx
$LN278@do_ssh2_au:
; Line 9197
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+188]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	add	edx, 156				; 0000009cH
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 9198
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+168]
	mov	ecx, DWORD PTR _ssh$[ebp]
	add	eax, DWORD PTR [ecx+188]
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+168], eax
; Line 9200
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	mov	edx, DWORD PTR [ecx]
	sub	edx, 5
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 5
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 9201
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+168]
	lea	ecx, DWORD PTR [ecx+eax-5]
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+168], ecx
; Line 9203
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	BYTE PTR [ecx], 0
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+168]
	mov	BYTE PTR [eax+1], 0
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+168]
	mov	BYTE PTR [edx+2], 0
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	BYTE PTR [ecx+3], 0
; Line 9206
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	push	OFFSET _ssh_agent_callback
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 160				; 000000a0H
	push	eax
	lea	ecx, DWORD PTR _vret$93335[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+164]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+172]
	push	edx
	call	_agent_query
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LN277@do_ssh2_au
$LN273@do_ssh2_au:
; Line 9208
	mov	eax, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [eax], 9208			; 000023f8H
	jmp	$LN415@do_ssh2_au
$LN272@do_ssh2_au:
	xor	ecx, ecx
	jne	SHORT $LN273@do_ssh2_au
; Line 9209
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN275@do_ssh2_au
; Line 9212
	push	OFFSET $SG93374
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN268@do_ssh2_au:
; Line 9213
	mov	eax, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [eax], 0
	jmp	$LN415@do_ssh2_au
	xor	ecx, ecx
	jne	SHORT $LN268@do_ssh2_au
$LN275@do_ssh2_au:
; Line 9215
	cmp	DWORD PTR _pktin$[ebp], 0
	jne	SHORT $LN273@do_ssh2_au
	cmp	DWORD PTR _inlen$[ebp], 0
	jg	SHORT $LN273@do_ssh2_au
; Line 9216
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+552]
	mov	DWORD PTR _vret$93335[ebp], eax
; Line 9217
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+556]
	mov	DWORD PTR [ecx+160], eax
$LN277@do_ssh2_au:
; Line 9219
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR _vret$93335[ebp]
	mov	DWORD PTR [ecx+176], edx
; Line 9220
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 9221
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+176], 0
	je	$LN281@do_ssh2_au
; Line 9224
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+160], 9
	jl	$LN264@do_ssh2_au
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+176]
	movsx	eax, BYTE PTR [edx+4]
	cmp	eax, 14					; 0000000eH
	jne	$LN264@do_ssh2_au
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+176]
	movzx	eax, BYTE PTR [edx+5]
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+176]
	movzx	ecx, BYTE PTR [edx+6]
	shl	ecx, 16					; 00000010H
	or	eax, ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [edx+176]
	movzx	edx, BYTE PTR [ecx+7]
	shl	edx, 8
	or	eax, edx
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+176]
	movzx	ecx, BYTE PTR [edx+8]
	or	eax, ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [edx+160]
	sub	ecx, 9
	cmp	eax, ecx
	ja	$LN264@do_ssh2_au
; Line 9225
	push	OFFSET $SG93389
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 9229
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+176]
	movzx	eax, BYTE PTR [edx+5]
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+176]
	movzx	ecx, BYTE PTR [edx+6]
	shl	ecx, 16					; 00000010H
	or	eax, ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [edx+176]
	movzx	edx, BYTE PTR [ecx+7]
	shl	edx, 8
	or	eax, edx
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+176]
	movzx	ecx, BYTE PTR [edx+8]
	or	eax, ecx
	push	eax
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+176]
	add	eax, 9
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_add_sigblob
	add	esp, 24					; 00000018H
; Line 9230
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_pkt_send
	add	esp, 8
; Line 9231
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+4], 1
; Line 9232
	jmp	SHORT $LN281@do_ssh2_au
$LN264@do_ssh2_au:
; Line 9234
	push	OFFSET $SG93399
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN262@do_ssh2_au:
; Line 9235
	mov	ecx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [ecx], 0
	jmp	$LN415@do_ssh2_au
	xor	edx, edx
	jne	SHORT $LN262@do_ssh2_au
$LN281@do_ssh2_au:
; Line 9241
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+120], 0
	je	SHORT $LN259@do_ssh2_au
; Line 9242
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+36], 1
; Line 9243
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+32], 1
; Line 9244
	jmp	SHORT $LN258@do_ssh2_au
$LN259@do_ssh2_au:
; Line 9245
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	add	ecx, 1
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+124], ecx
; Line 9246
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [eax+124]
	cmp	edx, DWORD PTR [ecx+128]
	jl	SHORT $LN258@do_ssh2_au
; Line 9247
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+36], 1
$LN258@do_ssh2_au:
; Line 9250
	jmp	$LN256@do_ssh2_au
$LN290@do_ssh2_au:
; Line 9251
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+20], 0
	je	$LN255@do_ssh2_au
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+80], 0
	je	$LN255@do_ssh2_au
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+32], 0
	jne	$LN255@do_ssh2_au
; Line 9256
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+348], 1
; Line 9258
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+32], 1
; Line 9266
	push	50					; 00000032H
	call	_ssh2_pkt_init
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+184], eax
; Line 9267
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+548]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9268
	push	OFFSET $SG93410
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9270
	push	OFFSET $SG93411
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9271
	push	0
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh2_pkt_addbool
	add	esp, 8
; Line 9273
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9274
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 9277
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+80]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_addstring_data
	add	esp, 12					; 0000000cH
; Line 9278
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_pkt_send
	add	esp, 8
; Line 9279
	push	OFFSET $SG93413
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
$LN251@do_ssh2_au:
; Line 9281
	mov	edx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [edx], 9281			; 00002441H
	jmp	$LN415@do_ssh2_au
$LN250@do_ssh2_au:
	xor	eax, eax
	jne	SHORT $LN251@do_ssh2_au
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN251@do_ssh2_au
; Line 9282
	mov	ecx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [ecx+8], 60			; 0000003cH
	je	SHORT $LN247@do_ssh2_au
; Line 9284
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+12], 1
; Line 9285
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+4], 2
; Line 9286
	jmp	$LN325@do_ssh2_au
$LN247@do_ssh2_au:
; Line 9288
	push	OFFSET $SG93422
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 9294
	mov	eax, DWORD PTR _flags
	and	eax, 1
	je	SHORT $LN246@do_ssh2_au
; Line 9295
	push	OFFSET $SG93424
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_c_write_str
	add	esp, 8
; Line 9296
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+96]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_c_write_str
	add	esp, 8
; Line 9297
	push	OFFSET $SG93425
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_c_write_str
	add	esp, 8
$LN246@do_ssh2_au:
; Line 9299
	mov	DWORD PTR _key$93408[ebp], 0
$LN245@do_ssh2_au:
; Line 9300
	cmp	DWORD PTR _key$93408[ebp], 0
	jne	$LN244@do_ssh2_au
; Line 9302
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+88], 0
	je	$LN243@do_ssh2_au
; Line 9307
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_new_prompts
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+60], eax
; Line 9308
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	mov	DWORD PTR [eax], 0
; Line 9309
	push	OFFSET $SG93433
	call	_dupstr
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	mov	DWORD PTR [edx+4], eax
; Line 9313
	push	0
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	push	ecx
	push	OFFSET $SG93434
	call	_dupprintf
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	call	_add_prompt
	add	esp, 12					; 0000000cH
; Line 9314
	push	0
	push	0
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	_get_userpass_input
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$93432[ebp], eax
$LN242@do_ssh2_au:
; Line 9315
	cmp	DWORD PTR _ret$93432[ebp], 0
	jge	SHORT $LN241@do_ssh2_au
; Line 9316
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+216], 1
$LN237@do_ssh2_au:
; Line 9317
	mov	ecx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [ecx], 9317			; 00002465H
	jmp	$LN415@do_ssh2_au
$LN236@do_ssh2_au:
	xor	edx, edx
	jne	SHORT $LN237@do_ssh2_au
	cmp	DWORD PTR _pktin$[ebp], 0
	jne	SHORT $LN237@do_ssh2_au
; Line 9319
	mov	eax, DWORD PTR _inlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _in$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	call	_get_userpass_input
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$93432[ebp], eax
; Line 9320
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+216], 0
; Line 9321
	jmp	SHORT $LN242@do_ssh2_au
$LN241@do_ssh2_au:
; Line 9322
	cmp	DWORD PTR _ret$93432[ebp], 0
	jne	SHORT $LN233@do_ssh2_au
; Line 9324
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	call	_free_prompts
	add	esp, 4
; Line 9328
	push	1
	push	13					; 0000000dH
	push	OFFSET $SG93448
	push	0
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_disconnect
	add	esp, 20					; 00000014H
$LN232@do_ssh2_au:
; Line 9329
	mov	edx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [edx], 0
	jmp	$LN415@do_ssh2_au
	xor	eax, eax
	jne	SHORT $LN232@do_ssh2_au
$LN233@do_ssh2_au:
; Line 9332
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_dupstr
	add	esp, 4
	mov	DWORD PTR _passphrase$93409[ebp], eax
; Line 9333
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_free_prompts
	add	esp, 4
; Line 9334
	jmp	SHORT $LN229@do_ssh2_au
$LN243@do_ssh2_au:
; Line 9335
	mov	DWORD PTR _passphrase$93409[ebp], 0
$LN229@do_ssh2_au:
; Line 9341
	push	30					; 0000001eH
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_filename
	add	esp, 8
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+188], eax
; Line 9342
	lea	edx, DWORD PTR _error$93430[ebp]
	push	edx
	mov	eax, DWORD PTR _passphrase$93409[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+188]
	push	edx
	call	_ssh2_load_userkey
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _key$93408[ebp], eax
; Line 9343
	cmp	DWORD PTR _passphrase$93409[ebp], 0
	je	SHORT $LN228@do_ssh2_au
; Line 9345
	mov	eax, DWORD PTR _passphrase$93409[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _passphrase$93409[ebp]
	push	ecx
	call	_smemclr
	add	esp, 8
; Line 9346
	mov	edx, DWORD PTR _passphrase$93409[ebp]
	push	edx
	call	_safefree
	add	esp, 4
$LN228@do_ssh2_au:
; Line 9348
	cmp	DWORD PTR _key$93408[ebp], OFFSET _ssh2_wrong_passphrase
	je	SHORT $LN226@do_ssh2_au
	cmp	DWORD PTR _key$93408[ebp], 0
	jne	SHORT $LN227@do_ssh2_au
$LN226@do_ssh2_au:
; Line 9350
	cmp	DWORD PTR _passphrase$93409[ebp], 0
	je	SHORT $LN225@do_ssh2_au
	cmp	DWORD PTR _key$93408[ebp], OFFSET _ssh2_wrong_passphrase
	jne	SHORT $LN225@do_ssh2_au
; Line 9351
	push	OFFSET $SG93459
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_c_write_str
	add	esp, 8
; Line 9352
	mov	DWORD PTR _key$93408[ebp], 0
; Line 9354
	jmp	SHORT $LN227@do_ssh2_au
$LN225@do_ssh2_au:
; Line 9355
	push	OFFSET $SG93462
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_c_write_str
	add	esp, 8
; Line 9356
	mov	edx, DWORD PTR _error$93430[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_c_write_str
	add	esp, 8
; Line 9357
	push	OFFSET $SG93463
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_c_write_str
	add	esp, 8
; Line 9358
	mov	DWORD PTR _key$93408[ebp], 0
; Line 9359
	jmp	SHORT $LN244@do_ssh2_au
$LN227@do_ssh2_au:
; Line 9362
	jmp	$LN245@do_ssh2_au
$LN244@do_ssh2_au:
; Line 9364
	cmp	DWORD PTR _key$93408[ebp], 0
	je	$LN223@do_ssh2_au
; Line 9374
	push	50					; 00000032H
	call	_ssh2_pkt_init
	add	esp, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+184], eax
; Line 9375
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+548]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9376
	push	OFFSET $SG93473
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9378
	push	OFFSET $SG93474
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9380
	push	1
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh2_pkt_addbool
	add	esp, 8
; Line 9382
	mov	ecx, DWORD PTR _key$93408[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9384
	mov	esi, esp
	lea	eax, DWORD PTR _pkblob_len$93469[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$93408[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _key$93408[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pkblob$93466[ebp], eax
; Line 9385
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 9387
	mov	edx, DWORD PTR _pkblob_len$93469[ebp]
	push	edx
	mov	eax, DWORD PTR _pkblob$93466[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_addstring_data
	add	esp, 12					; 0000000cH
; Line 9398
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+188]
	lea	edx, DWORD PTR [edx+ecx-1]
	mov	DWORD PTR _sigdata_len$93471[ebp], edx
; Line 9399
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	and	ecx, 128				; 00000080H
	je	SHORT $LN222@do_ssh2_au
; Line 9400
	mov	edx, DWORD PTR _sigdata_len$93471[ebp]
	sub	edx, 4
	mov	DWORD PTR _sigdata_len$93471[ebp], edx
$LN222@do_ssh2_au:
; Line 9401
	push	1
	mov	eax, DWORD PTR _sigdata_len$93471[ebp]
	push	eax
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _sigdata$93468[ebp], eax
; Line 9402
	mov	DWORD PTR _p$93472[ebp], 0
; Line 9403
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	and	edx, 128				; 00000080H
	jne	SHORT $LN221@do_ssh2_au
; Line 9404
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+188]
	sar	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _sigdata$93468[ebp]
	add	edx, DWORD PTR _p$93472[ebp]
	mov	BYTE PTR [edx], cl
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+188]
	sar	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _sigdata$93468[ebp]
	add	edx, DWORD PTR _p$93472[ebp]
	mov	BYTE PTR [edx+1], cl
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+188]
	sar	ecx, 8
	mov	edx, DWORD PTR _sigdata$93468[ebp]
	add	edx, DWORD PTR _p$93472[ebp]
	mov	BYTE PTR [edx+2], cl
	mov	eax, DWORD PTR _sigdata$93468[ebp]
	add	eax, DWORD PTR _p$93472[ebp]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	dl, BYTE PTR [ecx+188]
	mov	BYTE PTR [eax+3], dl
; Line 9405
	mov	eax, DWORD PTR _p$93472[ebp]
	add	eax, 4
	mov	DWORD PTR _p$93472[ebp], eax
$LN221@do_ssh2_au:
; Line 9408
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+188]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	add	eax, 156				; 0000009cH
	push	eax
	mov	ecx, DWORD PTR _sigdata$93468[ebp]
	add	ecx, DWORD PTR _p$93472[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 9409
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR _p$93472[ebp]
	add	eax, DWORD PTR [edx+188]
	mov	DWORD PTR _p$93472[ebp], eax
; Line 9411
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	mov	eax, DWORD PTR [edx]
	sub	eax, 5
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	mov	eax, DWORD PTR [edx+16]
	add	eax, 5
	push	eax
	mov	ecx, DWORD PTR _sigdata$93468[ebp]
	add	ecx, DWORD PTR _p$93472[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 9412
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _p$93472[ebp]
	lea	eax, DWORD PTR [edx+ecx-5]
	mov	DWORD PTR _p$93472[ebp], eax
; Line 9413
	mov	ecx, DWORD PTR _p$93472[ebp]
	cmp	ecx, DWORD PTR _sigdata_len$93471[ebp]
	je	SHORT $LN422@do_ssh2_au
	push	9413					; 000024c5H
	push	OFFSET $SG93485
	push	OFFSET $SG93486
	call	__wassert
	add	esp, 12					; 0000000cH
$LN422@do_ssh2_au:
; Line 9415
	mov	esi, esp
	lea	eax, DWORD PTR _sigblob_len$93470[ebp]
	push	eax
	mov	ecx, DWORD PTR _sigdata_len$93471[ebp]
	push	ecx
	mov	edx, DWORD PTR _sigdata$93468[ebp]
	push	edx
	mov	eax, DWORD PTR _key$93408[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _key$93408[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+44]
	call	ecx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sigblob$93467[ebp], eax
; Line 9417
	mov	edx, DWORD PTR _sigblob_len$93470[ebp]
	push	edx
	mov	eax, DWORD PTR _sigblob$93467[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkblob_len$93469[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkblob$93466[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_add_sigblob
	add	esp, 24					; 00000018H
; Line 9418
	mov	eax, DWORD PTR _pkblob$93466[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 9419
	mov	ecx, DWORD PTR _sigblob$93467[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 9420
	mov	edx, DWORD PTR _sigdata$93468[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 9422
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_pkt_send
	add	esp, 8
; Line 9423
	push	OFFSET $SG93488
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 9424
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+4], 1
; Line 9425
	mov	esi, esp
	mov	eax, DWORD PTR _key$93408[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _key$93408[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN223@do_ssh2_au:
; Line 9426
	jmp	$LN256@do_ssh2_au
$LN255@do_ssh2_au:
; Line 9429
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+40], 0
	je	$LN219@do_ssh2_au
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+44], 0
	jne	$LN219@do_ssh2_au
; Line 9436
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+4], 5
; Line 9437
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+44], 1
; Line 9438
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+12], 1
; Line 9439
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+348], 3
; Line 9447
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+192], 0
; Line 9448
	mov	DWORD PTR _i$93495[ebp], 0
	jmp	SHORT $LN218@do_ssh2_au
$LN217@do_ssh2_au:
	mov	eax, DWORD PTR _i$93495[ebp]
	add	eax, 1
	mov	DWORD PTR _i$93495[ebp], eax
$LN218@do_ssh2_au:
	mov	ecx, DWORD PTR _i$93495[ebp]
	cmp	ecx, DWORD PTR _ngsslibs
	jge	$got_gsslib$93506
; Line 9450
	mov	edx, DWORD PTR _i$93495[ebp]
	push	edx
	push	39					; 00000027H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _want_id$93501[ebp], eax
; Line 9451
	mov	DWORD PTR _j$93496[ebp], 0
	jmp	SHORT $LN215@do_ssh2_au
$LN214@do_ssh2_au:
	mov	edx, DWORD PTR _j$93496[ebp]
	add	edx, 1
	mov	DWORD PTR _j$93496[ebp], edx
$LN215@do_ssh2_au:
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+1660]
	mov	edx, DWORD PTR _j$93496[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jge	SHORT $LN213@do_ssh2_au
; Line 9452
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+1660]
	mov	edx, DWORD PTR _j$93496[ebp]
	imul	edx, 84					; 00000054H
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+eax]
	cmp	ecx, DWORD PTR _want_id$93501[ebp]
	jne	SHORT $LN212@do_ssh2_au
; Line 9453
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+1660]
	mov	ecx, DWORD PTR _j$93496[ebp]
	imul	ecx, 84					; 00000054H
	add	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+192], ecx
; Line 9454
	jmp	SHORT $got_gsslib$93506
$LN212@do_ssh2_au:
; Line 9456
	jmp	SHORT $LN214@do_ssh2_au
$LN213@do_ssh2_au:
	jmp	$LN217@do_ssh2_au
$got_gsslib$93506:
; Line 9465
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+192], 0
	jne	SHORT $LN423@do_ssh2_au
	push	9465					; 000024f9H
	push	OFFSET $SG93508
	push	OFFSET $SG93509
	call	__wassert
	add	esp, 12					; 0000000cH
$LN423@do_ssh2_au:
; Line 9468
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+192]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN211@do_ssh2_au
; Line 9469
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+192]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
$LN211@do_ssh2_au:
; Line 9472
	push	50					; 00000032H
	call	_ssh2_pkt_init
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+184], eax
; Line 9473
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+548]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9474
	push	OFFSET $SG93511
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9475
	push	OFFSET $SG93512
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9476
	push	OFFSET $SG93513
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 9479
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 200				; 000000c8H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+192]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+192]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 9482
	push	1
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 9485
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+200]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 9486
	push	6
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_addbyte
	add	esp, 8
; Line 9489
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, BYTE PTR [edx+200]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_addbyte
	add	esp, 8
; Line 9492
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+204]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_adddata
	add	esp, 12					; 0000000cH
; Line 9493
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_pkt_send
	add	esp, 8
$LN207@do_ssh2_au:
; Line 9494
	mov	eax, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [eax], 9494			; 00002516H
	jmp	$LN415@do_ssh2_au
$LN206@do_ssh2_au:
	xor	ecx, ecx
	jne	SHORT $LN207@do_ssh2_au
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN207@do_ssh2_au
; Line 9495
	mov	edx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [edx+8], 60			; 0000003cH
	je	SHORT $LN203@do_ssh2_au
; Line 9496
	push	OFFSET $SG93523
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 9497
	jmp	$LN325@do_ssh2_au
$LN203@do_ssh2_au:
; Line 9502
	lea	edx, DWORD PTR _len$93492[ebp]
	push	edx
	lea	eax, DWORD PTR _data$93493[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 9503
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _data$93493[ebp]
	mov	DWORD PTR [edx+212], eax
; Line 9504
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR _len$93492[ebp]
	mov	DWORD PTR [ecx+208], edx
; Line 9509
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	add	ecx, 2
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+208], ecx
	jne	SHORT $LN201@do_ssh2_au
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+212]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 6
	jne	SHORT $LN201@do_ssh2_au
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+212]
	movsx	edx, BYTE PTR [ecx+1]
	mov	eax, DWORD PTR _s$[ebp]
	cmp	edx, DWORD PTR [eax+200]
	jne	SHORT $LN201@do_ssh2_au
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+200]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+212]
	add	eax, 2
	push	eax
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN202@do_ssh2_au
$LN201@do_ssh2_au:
; Line 9510
	push	OFFSET $SG93529
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 9511
	jmp	$LN325@do_ssh2_au
$LN202@do_ssh2_au:
; Line 9517
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 224				; 000000e0H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+1656]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+192]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+192]
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+228], eax
; Line 9518
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+228], 0
	je	SHORT $LN200@do_ssh2_au
; Line 9519
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+228], 3
	jne	SHORT $LN199@do_ssh2_au
; Line 9520
	push	OFFSET $SG93532
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 9521
	jmp	SHORT $LN198@do_ssh2_au
$LN199@do_ssh2_au:
; Line 9522
	push	OFFSET $SG93534
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
$LN198@do_ssh2_au:
; Line 9523
	jmp	$LN325@do_ssh2_au
$LN200@do_ssh2_au:
; Line 9527
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 196				; 000000c4H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+192]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+192]
	mov	edx, DWORD PTR [ecx+28]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+228], eax
; Line 9529
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+228], 0
	je	SHORT $LN196@do_ssh2_au
; Line 9530
	push	OFFSET $SG93536
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 9531
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 224				; 000000e0H
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+192]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+192]
	mov	ecx, DWORD PTR [eax+16]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 9532
	jmp	$LN325@do_ssh2_au
$LN196@do_ssh2_au:
; Line 9536
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+208], 0
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+212], 0
	xor	ecx, ecx
	jne	SHORT $LN196@do_ssh2_au
$LN193@do_ssh2_au:
; Line 9537
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+216], 0
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+220], 0
	xor	ecx, ecx
	jne	SHORT $LN193@do_ssh2_au
$LN190@do_ssh2_au:
; Line 9547
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 216				; 000000d8H
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 208				; 000000d0H
	push	eax
	push	38					; 00000026H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+224]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 196				; 000000c4H
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+192]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+192]
	mov	ecx, DWORD PTR [eax+20]
	call	ecx
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+228], eax
; Line 9550
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+228], 0
	je	$LN187@do_ssh2_au
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+228], 1
	je	$LN187@do_ssh2_au
; Line 9551
	push	OFFSET $SG93549
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 9554
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 200				; 000000c8H
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+196]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+192]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+192]
	mov	edx, DWORD PTR [ecx+44]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN186@do_ssh2_au
; Line 9555
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 9556
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+204]
	push	edx
	call	_safefree
	add	esp, 4
$LN186@do_ssh2_au:
; Line 9559
	jmp	$LN188@do_ssh2_au
$LN187@do_ssh2_au:
; Line 9561
	push	OFFSET $SG93551
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 9566
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+216], 0
	je	$LN185@do_ssh2_au
; Line 9567
	push	61					; 0000003dH
	call	_ssh2_pkt_init
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+184], eax
; Line 9568
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 9569
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+216]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+220]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh_pkt_addstring_data
	add	esp, 12					; 0000000cH
; Line 9570
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_pkt_send
	add	esp, 8
; Line 9571
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 216				; 000000d8H
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+192]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+192]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN185@do_ssh2_au:
; Line 9574
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+228], 1
	jne	SHORT $LN189@do_ssh2_au
$LN180@do_ssh2_au:
; Line 9575
	mov	edx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [edx], 9575			; 00002567H
	jmp	$LN415@do_ssh2_au
$LN179@do_ssh2_au:
	xor	eax, eax
	jne	SHORT $LN180@do_ssh2_au
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN180@do_ssh2_au
; Line 9576
	mov	ecx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [ecx+8], 61			; 0000003dH
	je	SHORT $LN176@do_ssh2_au
; Line 9577
	push	OFFSET $SG93562
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 9578
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+228], 4
; Line 9579
	jmp	SHORT $LN188@do_ssh2_au
$LN176@do_ssh2_au:
; Line 9581
	lea	edx, DWORD PTR _len$93492[ebp]
	push	edx
	lea	eax, DWORD PTR _data$93493[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 9582
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _data$93493[ebp]
	mov	DWORD PTR [edx+212], eax
; Line 9583
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR _len$93492[ebp]
	mov	DWORD PTR [ecx+208], edx
$LN189@do_ssh2_au:
; Line 9585
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+228], 1
	je	$LN190@do_ssh2_au
$LN188@do_ssh2_au:
; Line 9587
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+228], 0
	je	SHORT $LN175@do_ssh2_au
; Line 9588
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 224				; 000000e0H
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+192]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+192]
	mov	ecx, DWORD PTR [eax+16]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 9589
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 196				; 000000c4H
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+192]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+192]
	mov	ecx, DWORD PTR [eax+32]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 9590
	jmp	$LN325@do_ssh2_au
$LN175@do_ssh2_au:
; Line 9592
	push	OFFSET $SG93564
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 9596
	push	0
	call	_ssh2_pkt_init
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+184], eax
; Line 9597
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _micoffset$93491[ebp], ecx
; Line 9598
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 9599
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+188]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	add	eax, 156				; 0000009cH
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_addstring_data
	add	esp, 12					; 0000000cH
; Line 9600
	push	50					; 00000032H
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_addbyte
	add	esp, 8
; Line 9601
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+548]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9602
	push	OFFSET $SG93566
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9603
	push	OFFSET $SG93567
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9605
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	mov	eax, DWORD PTR [edx+16]
	add	eax, DWORD PTR _micoffset$93491[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+204], eax
; Line 9606
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, DWORD PTR _micoffset$93491[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+200], ecx
; Line 9608
	mov	esi, esp
	lea	eax, DWORD PTR _mic$93494[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 200				; 000000c8H
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+196]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+192]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+192]
	mov	edx, DWORD PTR [ecx+36]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 9609
	push	66					; 00000042H
	call	_ssh2_pkt_init
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+184], eax
; Line 9610
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 9611
	mov	ecx, DWORD PTR _mic$93494[ebp]
	push	ecx
	mov	edx, DWORD PTR _mic$93494[ebp+4]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_addstring_data
	add	esp, 12					; 0000000cH
; Line 9612
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_pkt_send
	add	esp, 8
; Line 9613
	mov	esi, esp
	lea	edx, DWORD PTR _mic$93494[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+192]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+192]
	mov	ecx, DWORD PTR [eax+40]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 9615
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 9617
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 224				; 000000e0H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+192]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+192]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 9618
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 196				; 000000c4H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+192]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+192]
	mov	edx, DWORD PTR [ecx+32]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 9619
	jmp	$LN325@do_ssh2_au
	jmp	$LN256@do_ssh2_au
$LN219@do_ssh2_au:
; Line 9621
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	$LN173@do_ssh2_au
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	jne	$LN173@do_ssh2_au
; Line 9627
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+4], 6
; Line 9629
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+348], 4
; Line 9631
	push	50					; 00000032H
	call	_ssh2_pkt_init
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+184], eax
; Line 9632
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+548]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9633
	push	OFFSET $SG93571
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9635
	push	OFFSET $SG93572
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9637
	push	OFFSET $SG93573
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9638
	push	OFFSET $SG93574
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9639
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_pkt_send
	add	esp, 8
; Line 9641
	push	OFFSET $SG93575
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
$LN169@do_ssh2_au:
; Line 9643
	mov	ecx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [ecx], 9643			; 000025abH
	jmp	$LN415@do_ssh2_au
$LN168@do_ssh2_au:
	xor	edx, edx
	jne	SHORT $LN169@do_ssh2_au
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN169@do_ssh2_au
; Line 9644
	mov	eax, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [eax+8], 60			; 0000003cH
	je	SHORT $LN164@do_ssh2_au
; Line 9649
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+12], 1
; Line 9650
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+4], 7
; Line 9651
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+48], 1
; Line 9652
	jmp	$LN325@do_ssh2_au
$LN164@do_ssh2_au:
; Line 9658
	mov	ecx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [ecx+8], 60			; 0000003cH
	jne	$LN163@do_ssh2_au
; Line 9668
	lea	edx, DWORD PTR _name_len$93590[ebp]
	push	edx
	lea	eax, DWORD PTR _name$93587[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 9669
	lea	edx, DWORD PTR _inst_len$93591[ebp]
	push	edx
	lea	eax, DWORD PTR _inst$93588[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 9670
	lea	edx, DWORD PTR _lang_len$93592[ebp]
	push	edx
	lea	eax, DWORD PTR _lang$93589[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 9671
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_new_prompts
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+60], eax
; Line 9672
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	mov	DWORD PTR [eax], 1
; Line 9677
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+64], eax
; Line 9678
	mov	DWORD PTR _i$93593[ebp], 0
	jmp	SHORT $LN162@do_ssh2_au
$LN161@do_ssh2_au:
	mov	eax, DWORD PTR _i$93593[ebp]
	add	eax, 1
	mov	DWORD PTR _i$93593[ebp], eax
$LN162@do_ssh2_au:
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR _i$93593[ebp]
	cmp	edx, DWORD PTR [ecx+64]
	jge	$LN160@do_ssh2_au
; Line 9685
	lea	eax, DWORD PTR _prompt_len$93598[ebp]
	push	eax
	lea	ecx, DWORD PTR _prompt$93597[ebp]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 9686
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh2_pkt_getbool
	add	esp, 4
	mov	DWORD PTR _echo$93599[ebp], eax
; Line 9687
	cmp	DWORD PTR _prompt_len$93598[ebp], 0
	jne	SHORT $LN159@do_ssh2_au
; Line 9688
	mov	DWORD PTR _prompt$93597[ebp], OFFSET ?noprompt@?II@??do_ssh2_authconn@@9@9
; Line 9689
	mov	DWORD PTR _prompt_len$93598[ebp], 32	; 00000020H
$LN159@do_ssh2_au:
; Line 9693
	mov	ecx, DWORD PTR _echo$93599[ebp]
	push	ecx
	mov	edx, DWORD PTR _prompt$93597[ebp]
	push	edx
	mov	eax, DWORD PTR _prompt_len$93598[ebp]
	push	eax
	push	OFFSET $SG93603
	call	_dupprintf
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	_add_prompt
	add	esp, 12					; 0000000cH
; Line 9694
	jmp	$LN161@do_ssh2_au
$LN160@do_ssh2_au:
; Line 9696
	cmp	DWORD PTR _name_len$93590[ebp], 0
	je	SHORT $LN158@do_ssh2_au
; Line 9700
	mov	eax, DWORD PTR _name$93587[ebp]
	push	eax
	mov	ecx, DWORD PTR _name_len$93590[ebp]
	push	ecx
	push	OFFSET $SG93605
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [edx+60]
	mov	DWORD PTR [ecx+4], eax
; Line 9701
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	mov	DWORD PTR [eax+8], 1
; Line 9702
	jmp	SHORT $LN157@do_ssh2_au
$LN158@do_ssh2_au:
; Line 9704
	push	OFFSET $SG93607
	call	_dupstr
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	mov	DWORD PTR [edx+4], eax
; Line 9705
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR [ecx+8], 0
$LN157@do_ssh2_au:
; Line 9714
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+64], 0
	jne	SHORT $LN155@do_ssh2_au
	cmp	DWORD PTR _name_len$93590[ebp], 0
	jne	SHORT $LN155@do_ssh2_au
	cmp	DWORD PTR _inst_len$93591[ebp], 0
	je	SHORT $LN156@do_ssh2_au
$LN155@do_ssh2_au:
; Line 9717
	cmp	DWORD PTR _inst_len$93591[ebp], 0
	je	SHORT $LN424@do_ssh2_au
	mov	DWORD PTR tv2033[ebp], OFFSET $SG93610
	jmp	SHORT $LN425@do_ssh2_au
$LN424@do_ssh2_au:
	mov	DWORD PTR tv2033[ebp], OFFSET $SG93611
$LN425@do_ssh2_au:
	mov	eax, DWORD PTR _inst$93588[ebp]
	push	eax
	mov	ecx, DWORD PTR _inst_len$93591[ebp]
	push	ecx
	mov	edx, DWORD PTR tv2033[ebp]
	push	edx
	push	OFFSET $SG93612
	call	_dupprintf
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	mov	DWORD PTR [edx+12], eax
; Line 9718
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR [ecx+16], 1
; Line 9719
	jmp	SHORT $LN154@do_ssh2_au
$LN156@do_ssh2_au:
; Line 9720
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	mov	DWORD PTR [eax+16], 0
$LN154@do_ssh2_au:
; Line 9729
	push	0
	push	0
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	_get_userpass_input
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$93614[ebp], eax
$LN153@do_ssh2_au:
; Line 9730
	cmp	DWORD PTR _ret$93614[ebp], 0
	jge	SHORT $LN152@do_ssh2_au
; Line 9731
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+216], 1
$LN148@do_ssh2_au:
; Line 9732
	mov	ecx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [ecx], 9732			; 00002604H
	jmp	$LN415@do_ssh2_au
$LN147@do_ssh2_au:
	xor	edx, edx
	jne	SHORT $LN148@do_ssh2_au
	cmp	DWORD PTR _pktin$[ebp], 0
	jne	SHORT $LN148@do_ssh2_au
; Line 9733
	mov	eax, DWORD PTR _inlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _in$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	call	_get_userpass_input
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$93614[ebp], eax
; Line 9734
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+216], 0
; Line 9735
	jmp	SHORT $LN153@do_ssh2_au
$LN152@do_ssh2_au:
; Line 9736
	cmp	DWORD PTR _ret$93614[ebp], 0
	jne	SHORT $LN144@do_ssh2_au
; Line 9740
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	call	_free_prompts
	add	esp, 4
; Line 9743
	push	1
	push	13					; 0000000dH
	push	OFFSET $SG93628
	push	0
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_disconnect
	add	esp, 20					; 00000014H
$LN143@do_ssh2_au:
; Line 9744
	mov	edx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [edx], 0
	jmp	$LN415@do_ssh2_au
	xor	eax, eax
	jne	SHORT $LN143@do_ssh2_au
$LN144@do_ssh2_au:
; Line 9751
	push	61					; 0000003dH
	call	_ssh2_pkt_init
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+184], eax
; Line 9752
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+64]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 9753
	mov	DWORD PTR _i$93593[ebp], 0
	jmp	SHORT $LN140@do_ssh2_au
$LN139@do_ssh2_au:
	mov	eax, DWORD PTR _i$93593[ebp]
	add	eax, 1
	mov	DWORD PTR _i$93593[ebp], eax
$LN140@do_ssh2_au:
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR _i$93593[ebp]
	cmp	edx, DWORD PTR [ecx+64]
	jge	SHORT $LN138@do_ssh2_au
; Line 9755
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _i$93593[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9756
	jmp	SHORT $LN139@do_ssh2_au
$LN138@do_ssh2_au:
; Line 9757
	push	256					; 00000100H
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_pkt_send_with_padding
	add	esp, 12					; 0000000cH
; Line 9764
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	call	_free_prompts
	add	esp, 4
$LN134@do_ssh2_au:
; Line 9770
	mov	ecx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [ecx], 9770			; 0000262aH
	jmp	$LN415@do_ssh2_au
$LN133@do_ssh2_au:
	xor	edx, edx
	jne	SHORT $LN134@do_ssh2_au
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN134@do_ssh2_au
; Line 9772
	jmp	$LN164@do_ssh2_au
$LN163@do_ssh2_au:
; Line 9777
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+12], 1
	jmp	$LN256@do_ssh2_au
$LN173@do_ssh2_au:
; Line 9779
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+24], 0
	je	$LN129@do_ssh2_au
; Line 9787
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+348], 2
; Line 9789
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_new_prompts
	add	esp, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+60], eax
; Line 9790
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR [ecx], 1
; Line 9791
	push	OFFSET $SG93646
	call	_dupstr
	add	esp, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [edx+60]
	mov	DWORD PTR [ecx+4], eax
; Line 9795
	push	0
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+208]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+548]
	push	edx
	push	OFFSET $SG93647
	call	_dupprintf
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_add_prompt
	add	esp, 12					; 0000000cH
; Line 9797
	push	0
	push	0
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	call	_get_userpass_input
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$93644[ebp], eax
$LN128@do_ssh2_au:
; Line 9798
	cmp	DWORD PTR _ret$93644[ebp], 0
	jge	SHORT $LN127@do_ssh2_au
; Line 9799
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+216], 1
$LN123@do_ssh2_au:
; Line 9800
	mov	edx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [edx], 9800			; 00002648H
	jmp	$LN415@do_ssh2_au
$LN122@do_ssh2_au:
	xor	eax, eax
	jne	SHORT $LN123@do_ssh2_au
	cmp	DWORD PTR _pktin$[ebp], 0
	jne	SHORT $LN123@do_ssh2_au
; Line 9801
	mov	ecx, DWORD PTR _inlen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _in$[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_get_userpass_input
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$93644[ebp], eax
; Line 9802
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+216], 0
; Line 9803
	jmp	SHORT $LN128@do_ssh2_au
$LN127@do_ssh2_au:
; Line 9804
	cmp	DWORD PTR _ret$93644[ebp], 0
	jne	SHORT $LN119@do_ssh2_au
; Line 9808
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_free_prompts
	add	esp, 4
; Line 9811
	push	1
	push	13					; 0000000dH
	push	OFFSET $SG93661
	push	0
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_disconnect
	add	esp, 20					; 00000014H
$LN118@do_ssh2_au:
; Line 9812
	mov	eax, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [eax], 0
	jmp	$LN415@do_ssh2_au
	xor	ecx, ecx
	jne	SHORT $LN118@do_ssh2_au
$LN119@do_ssh2_au:
; Line 9818
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_dupstr
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+72], eax
; Line 9819
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	call	_free_prompts
	add	esp, 4
; Line 9832
	push	50					; 00000032H
	call	_ssh2_pkt_init
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+184], eax
; Line 9833
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+548]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9834
	push	OFFSET $SG93665
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9836
	push	OFFSET $SG93666
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9837
	push	0
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh2_pkt_addbool
	add	esp, 8
; Line 9838
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9839
	push	256					; 00000100H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_pkt_send_with_padding
	add	esp, 12					; 0000000cH
; Line 9840
	push	OFFSET $SG93667
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 9841
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+4], 4
$LN112@do_ssh2_au:
; Line 9847
	mov	ecx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [ecx], 9847			; 00002677H
	jmp	$LN415@do_ssh2_au
$LN111@do_ssh2_au:
	xor	edx, edx
	jne	SHORT $LN112@do_ssh2_au
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN112@do_ssh2_au
; Line 9848
	mov	DWORD PTR _changereq_first_time$93645[ebp], 1
$LN108@do_ssh2_au:
; Line 9850
	mov	eax, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [eax+8], 60			; 0000003cH
	jne	$LN107@do_ssh2_au
; Line 9858
	mov	DWORD PTR _got_new$93678[ebp], 0
; Line 9864
	cmp	DWORD PTR _changereq_first_time$93645[ebp], 0
	je	SHORT $LN106@do_ssh2_au
; Line 9865
	mov	DWORD PTR _msg$93681[ebp], OFFSET $SG93683
; Line 9866
	jmp	SHORT $LN105@do_ssh2_au
$LN106@do_ssh2_au:
; Line 9867
	mov	DWORD PTR _msg$93681[ebp], OFFSET $SG93685
$LN105@do_ssh2_au:
; Line 9868
	mov	ecx, DWORD PTR _msg$93681[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 9869
	mov	ecx, DWORD PTR _msg$93681[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_c_write_str
	add	esp, 8
; Line 9870
	push	OFFSET $SG93686
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_c_write_str
	add	esp, 8
; Line 9873
	lea	ecx, DWORD PTR _prompt_len$93680[ebp]
	push	ecx
	lea	edx, DWORD PTR _prompt$93679[ebp]
	push	edx
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 9875
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_new_prompts
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+60], eax
; Line 9876
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	mov	DWORD PTR [eax], 1
; Line 9877
	push	OFFSET $SG93687
	call	_dupstr
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	mov	DWORD PTR [edx+4], eax
; Line 9879
	mov	eax, DWORD PTR _prompt$93679[ebp]
	push	eax
	mov	ecx, DWORD PTR _prompt_len$93680[ebp]
	push	ecx
	push	OFFSET $SG93688
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [edx+60]
	mov	DWORD PTR [ecx+12], eax
; Line 9880
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	mov	DWORD PTR [eax+16], 1
; Line 9895
	push	0
	push	OFFSET $SG93689
	call	_dupstr
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	_add_prompt
	add	esp, 12					; 0000000cH
; Line 9897
	push	0
	push	OFFSET $SG93690
	call	_dupstr
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_add_prompt
	add	esp, 12					; 0000000cH
; Line 9899
	push	0
	push	OFFSET $SG93691
	call	_dupstr
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	call	_add_prompt
	add	esp, 12					; 0000000cH
$LN104@do_ssh2_au:
; Line 9905
	cmp	DWORD PTR _got_new$93678[ebp], 0
	jne	$LN103@do_ssh2_au
; Line 9907
	push	0
	push	0
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	_get_userpass_input
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$93644[ebp], eax
$LN102@do_ssh2_au:
; Line 9908
	cmp	DWORD PTR _ret$93644[ebp], 0
	jge	SHORT $LN101@do_ssh2_au
; Line 9909
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+216], 1
$LN97@do_ssh2_au:
; Line 9910
	mov	ecx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [ecx], 9910			; 000026b6H
	jmp	$LN415@do_ssh2_au
$LN96@do_ssh2_au:
	xor	edx, edx
	jne	SHORT $LN97@do_ssh2_au
	cmp	DWORD PTR _pktin$[ebp], 0
	jne	SHORT $LN97@do_ssh2_au
; Line 9911
	mov	eax, DWORD PTR _inlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _in$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	call	_get_userpass_input
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$93644[ebp], eax
; Line 9912
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+216], 0
; Line 9913
	jmp	SHORT $LN102@do_ssh2_au
$LN101@do_ssh2_au:
; Line 9914
	cmp	DWORD PTR _ret$93644[ebp], 0
	jne	SHORT $LN93@do_ssh2_au
; Line 9919
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	call	_free_prompts
	add	esp, 4
; Line 9920
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	push	edx
	call	_strlen
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	push	ecx
	call	_smemclr
	add	esp, 8
; Line 9921
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+72]
	push	eax
	call	_safefree
	add	esp, 4
; Line 9924
	push	1
	push	13					; 0000000dH
	push	OFFSET $SG93708
	push	0
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_disconnect
	add	esp, 20					; 00000014H
$LN92@do_ssh2_au:
; Line 9925
	mov	edx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [edx], 0
	jmp	$LN415@do_ssh2_au
	xor	eax, eax
	jne	SHORT $LN92@do_ssh2_au
$LN93@do_ssh2_au:
; Line 9935
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN89@do_ssh2_au
; Line 9936
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	push	edx
	call	_strlen
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	push	ecx
	call	_smemclr
	add	esp, 8
; Line 9938
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+72]
	push	eax
	call	_safefree
	add	esp, 4
; Line 9940
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_dupstr
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+72], eax
$LN89@do_ssh2_au:
; Line 9948
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_strcmp
	add	esp, 8
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	DWORD PTR _got_new$93678[ebp], eax
; Line 9949
	jne	SHORT $LN88@do_ssh2_au
; Line 9951
	push	OFFSET $SG93714
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_c_write_str
	add	esp, 8
$LN88@do_ssh2_au:
; Line 9953
	jmp	$LN104@do_ssh2_au
$LN103@do_ssh2_au:
; Line 9959
	push	50					; 00000032H
	call	_ssh2_pkt_init
	add	esp, 4
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+184], eax
; Line 9960
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+548]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9961
	push	OFFSET $SG93715
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9963
	push	OFFSET $SG93716
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9964
	push	1
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh2_pkt_addbool
	add	esp, 8
; Line 9965
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9967
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 9968
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	call	_free_prompts
	add	esp, 4
; Line 9969
	push	256					; 00000100H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_pkt_send_with_padding
	add	esp, 12					; 0000000cH
; Line 9970
	push	OFFSET $SG93717
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
$LN84@do_ssh2_au:
; Line 9977
	mov	eax, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [eax], 9977			; 000026f9H
	jmp	$LN415@do_ssh2_au
$LN83@do_ssh2_au:
	xor	ecx, ecx
	jne	SHORT $LN84@do_ssh2_au
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN84@do_ssh2_au
; Line 9978
	mov	DWORD PTR _changereq_first_time$93645[ebp], 0
; Line 9980
	jmp	$LN108@do_ssh2_au
$LN107@do_ssh2_au:
; Line 9995
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+12], 1
; Line 10001
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	push	ecx
	call	_strlen
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+72]
	push	eax
	call	_smemclr
	add	esp, 8
; Line 10002
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	push	edx
	call	_safefree
	add	esp, 4
; Line 10004
	jmp	$LN256@do_ssh2_au
$LN129@do_ssh2_au:
; Line 10007
	cmp	BYTE PTR $T94817[ebp], 0
	jne	SHORT $LN442@do_ssh2_au
	push	OFFSET $LN435@do_ssh2_au
	call	__RTC_UninitUse
	add	esp, 4
$LN442@do_ssh2_au:
	cmp	BYTE PTR $T94818[ebp], 0
	jne	SHORT $LN443@do_ssh2_au
	push	OFFSET $LN433@do_ssh2_au
	call	__RTC_UninitUse
	add	esp, 4
$LN443@do_ssh2_au:
	mov	eax, DWORD PTR _methods$93236[ebp]
	push	eax
	mov	ecx, DWORD PTR _methlen$93238[ebp]
	push	ecx
	push	OFFSET $SG93727
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _str$93726[ebp], eax
; Line 10012
	push	0
	push	14					; 0000000eH
	push	OFFSET $SG93728
	mov	edx, DWORD PTR _str$93726[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh_disconnect
	add	esp, 20					; 00000014H
; Line 10013
	mov	ecx, DWORD PTR _str$93726[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN79@do_ssh2_au:
; Line 10015
	mov	edx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [edx], 0
	jmp	$LN415@do_ssh2_au
	xor	eax, eax
	jne	SHORT $LN79@do_ssh2_au
$LN256@do_ssh2_au:
; Line 10019
	jmp	$LN325@do_ssh2_au
$LN324@do_ssh2_au:
; Line 10020
	jmp	$LN349@do_ssh2_au
$LN348@do_ssh2_au:
; Line 10021
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+792], 0
; Line 10024
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+80], 0
	je	SHORT $LN76@do_ssh2_au
; Line 10025
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 10026
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+96]
	push	eax
	call	_safefree
	add	esp, 4
$LN76@do_ssh2_au:
; Line 10028
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+108], 0
	je	SHORT $LN75@do_ssh2_au
; Line 10029
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	call	_safefree
	add	esp, 4
$LN75@do_ssh2_au:
; Line 10031
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+56], 0
	je	SHORT $LN74@do_ssh2_au
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+196], 0
	jne	SHORT $LN74@do_ssh2_au
; Line 10042
	push	0
	push	-2					; fffffffeH
	push	OFFSET $SG93737
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_do_ssh2_transport
	add	esp, 16					; 00000010H
$LN74@do_ssh2_au:
; Line 10045
	push	OFFSET _ssh_channelcmp
	call	_newtree234
	add	esp, 4
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+248], eax
; Line 10052
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+952], OFFSET _ssh2_msg_channel_window_adjust
; Line 10054
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+900], OFFSET _ssh2_msg_global_request
; Line 10059
	push	43					; 0000002bH
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN73@do_ssh2_au
; Line 10060
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+252], 0
; Line 10061
	jmp	$LN72@do_ssh2_au
$LN73@do_ssh2_au:
; Line 10062
	push	96					; 00000060H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+252], eax
; Line 10063
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+252]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 10064
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+252]
	push	eax
	call	_ssh2_channel_init
	add	esp, 4
; Line 10066
	push	44					; 0000002cH
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_str
	add	esp, 8
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN71@do_ssh2_au
; Line 10074
	push	OFFSET $SG93744
	push	45					; 0000002dH
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_int
	add	esp, 8
	push	eax
	push	44					; 0000002cH
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+252]
	push	eax
	call	_ssh_send_port_open
	add	esp, 16					; 00000010H
; Line 10075
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+256], 1
; Line 10076
	jmp	SHORT $LN66@do_ssh2_au
$LN71@do_ssh2_au:
; Line 10077
	push	OFFSET $SG93746
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+252]
	push	eax
	call	_ssh2_chanopen_init
	add	esp, 8
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+184], eax
; Line 10078
	push	OFFSET $SG93747
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 10079
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_pkt_send
	add	esp, 8
; Line 10080
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+256], 0
$LN66@do_ssh2_au:
; Line 10082
	mov	edx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [edx], 10082			; 00002762H
	jmp	$LN415@do_ssh2_au
$LN65@do_ssh2_au:
	xor	eax, eax
	jne	SHORT $LN66@do_ssh2_au
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN66@do_ssh2_au
; Line 10083
	mov	ecx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [ecx+8], 91			; 0000005bH
	je	SHORT $LN62@do_ssh2_au
; Line 10084
	push	OFFSET $SG93756
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN61@do_ssh2_au:
; Line 10085
	mov	eax, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [eax], 0
	jmp	$LN415@do_ssh2_au
	xor	ecx, ecx
	jne	SHORT $LN61@do_ssh2_au
$LN62@do_ssh2_au:
; Line 10088
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+252]
	cmp	eax, DWORD PTR [edx+8]
	je	SHORT $LN58@do_ssh2_au
; Line 10089
	push	OFFSET $SG93761
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN57@do_ssh2_au:
; Line 10090
	mov	ecx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [ecx], 0
	jmp	$LN415@do_ssh2_au
	xor	edx, edx
	jne	SHORT $LN57@do_ssh2_au
$LN58@do_ssh2_au:
; Line 10092
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+252]
	mov	DWORD PTR [edx+4], eax
; Line 10093
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+252]
	mov	DWORD PTR [ecx+16], 0
; Line 10094
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+252]
	mov	DWORD PTR [eax+12], 0
; Line 10095
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [edx+252]
	mov	DWORD PTR [ecx+44], eax
; Line 10096
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+252]
	mov	DWORD PTR [edx+48], eax
; Line 10097
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+252]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+248]
	push	eax
	call	_add234
	add	esp, 8
; Line 10098
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_update_specials_menu
	add	esp, 4
; Line 10099
	push	OFFSET $SG93765
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
$LN72@do_ssh2_au:
; Line 10108
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+960], OFFSET _ssh2_msg_channel_data
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+960]
	mov	DWORD PTR [eax+956], edx
; Line 10109
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+964], OFFSET _ssh2_msg_channel_eof
; Line 10110
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+968], OFFSET _ssh2_msg_channel_close
; Line 10112
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+944], OFFSET _ssh2_msg_channel_open_confirmation
; Line 10114
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+948], OFFSET _ssh2_msg_channel_open_failure
; Line 10116
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+972], OFFSET _ssh2_msg_channel_request
; Line 10118
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+940], OFFSET _ssh2_msg_channel_open
; Line 10119
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+976], OFFSET _ssh2_msg_channel_response
; Line 10120
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+980], OFFSET _ssh2_msg_channel_response
; Line 10127
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+204], 0
	je	SHORT $LN54@do_ssh2_au
; Line 10128
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+204]
	push	eax
	call	_share_activate
	add	esp, 8
$LN54@do_ssh2_au:
; Line 10130
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+252], 0
	je	SHORT $LN53@do_ssh2_au
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_is_simple
	add	esp, 4
	test	eax, eax
	je	SHORT $LN53@do_ssh2_au
; Line 10139
	push	0
	push	0
	push	OFFSET $SG93770
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+252]
	push	ecx
	call	_ssh2_chanreq_init
	add	esp, 16					; 00000010H
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+184], eax
; Line 10140
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_pkt_send
	add	esp, 8
$LN53@do_ssh2_au:
; Line 10146
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_setup_portfwd
	add	esp, 8
; Line 10148
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+252], 0
	je	$LN52@do_ssh2_au
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+256], 0
	jne	$LN52@do_ssh2_au
; Line 10156
	push	144					; 00000090H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	$LN51@do_ssh2_au
; Line 10159
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	push	145					; 00000091H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	push	eax
	call	_x11_setup_display
	add	esp, 8
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+352], eax
; Line 10160
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+352], 0
	jne	SHORT $LN50@do_ssh2_au
; Line 10163
	push	OFFSET $SG93774
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 10164
	jmp	SHORT $LN51@do_ssh2_au
$LN50@do_ssh2_au:
; Line 10166
	push	146					; 00000092H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+360]
	push	eax
	call	_x11_invent_fake_auth
	add	esp, 8
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+356], eax
; Line 10167
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+356]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+352]
	mov	DWORD PTR [eax+28], edx
; Line 10169
	push	0
	push	0
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+252]
	push	ecx
	call	_ssh2_setup_x11
	add	esp, 12					; 0000000cH
$LN51@do_ssh2_au:
; Line 10174
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_agent_forwarding_permitted
	add	esp, 4
	test	eax, eax
	je	SHORT $LN48@do_ssh2_au
; Line 10175
	push	0
	push	0
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+252]
	push	ecx
	call	_ssh2_setup_agent
	add	esp, 12					; 0000000cH
$LN48@do_ssh2_au:
; Line 10178
	push	21					; 00000015H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN47@do_ssh2_au
; Line 10179
	push	0
	push	0
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+252]
	push	edx
	call	_ssh2_setup_pty
	add	esp, 12					; 0000000cH
$LN47@do_ssh2_au:
; Line 10182
	push	0
	push	0
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+252]
	push	ecx
	call	_ssh2_setup_env
	add	esp, 12					; 0000000cH
$LN46@do_ssh2_au:
; Line 10189
	mov	edx, 1
	test	edx, edx
	je	$LN45@do_ssh2_au
; Line 10193
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+328], 0
	je	SHORT $LN44@do_ssh2_au
; Line 10194
	push	42					; 0000002aH
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_int
	add	esp, 8
	mov	DWORD PTR _subsys$93789[ebp], eax
; Line 10195
	push	20					; 00000014H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	mov	DWORD PTR _cmd$93790[ebp], eax
; Line 10196
	jmp	SHORT $LN43@do_ssh2_au
$LN44@do_ssh2_au:
; Line 10197
	push	41					; 00000029H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	DWORD PTR _subsys$93789[ebp], eax
; Line 10198
	push	19					; 00000013H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_str
	add	esp, 8
	mov	DWORD PTR _cmd$93790[ebp], eax
$LN43@do_ssh2_au:
; Line 10201
	cmp	DWORD PTR _subsys$93789[ebp], 0
	je	SHORT $LN42@do_ssh2_au
; Line 10203
	push	0
	push	OFFSET _ssh2_response_authconn
	push	OFFSET $SG93795
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+252]
	push	ecx
	call	_ssh2_chanreq_init
	add	esp, 16					; 00000010H
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+184], eax
; Line 10204
	mov	eax, DWORD PTR _cmd$93790[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	_ssh_pkt_addstring
	add	esp, 8
	jmp	SHORT $LN41@do_ssh2_au
$LN42@do_ssh2_au:
; Line 10205
	mov	eax, DWORD PTR _cmd$93790[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN40@do_ssh2_au
; Line 10207
	push	0
	push	OFFSET _ssh2_response_authconn
	push	OFFSET $SG93799
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+252]
	push	eax
	call	_ssh2_chanreq_init
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+184], eax
; Line 10208
	mov	edx, DWORD PTR _cmd$93790[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 10209
	jmp	SHORT $LN41@do_ssh2_au
$LN40@do_ssh2_au:
; Line 10211
	push	0
	push	OFFSET _ssh2_response_authconn
	push	OFFSET $SG93802
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+252]
	push	eax
	call	_ssh2_chanreq_init
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+184], eax
$LN41@do_ssh2_au:
; Line 10213
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_pkt_send
	add	esp, 8
$LN35@do_ssh2_au:
; Line 10215
	mov	edx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [edx], 10215			; 000027e7H
	jmp	$LN415@do_ssh2_au
$LN34@do_ssh2_au:
	xor	eax, eax
	jne	SHORT $LN35@do_ssh2_au
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN35@do_ssh2_au
; Line 10217
	mov	ecx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [ecx+8], 99			; 00000063H
	je	$LN31@do_ssh2_au
; Line 10218
	mov	edx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [edx+8], 100			; 00000064H
	je	SHORT $LN30@do_ssh2_au
; Line 10220
	mov	eax, DWORD PTR _pktin$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET $SG93812
	call	_dupprintf
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN29@do_ssh2_au:
; Line 10221
	mov	eax, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [eax], 0
	jmp	$LN415@do_ssh2_au
	xor	ecx, ecx
	jne	SHORT $LN29@do_ssh2_au
$LN30@do_ssh2_au:
; Line 10230
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+328], 0
	jne	SHORT $LN26@do_ssh2_au
	push	20					; 00000014H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN26@do_ssh2_au
; Line 10231
	push	OFFSET $SG93817
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 10232
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+328], 1
; Line 10233
	jmp	$LN46@do_ssh2_au
$LN26@do_ssh2_au:
; Line 10235
	push	OFFSET $SG93818
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN25@do_ssh2_au:
; Line 10236
	mov	ecx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [ecx], 0
	jmp	$LN415@do_ssh2_au
	xor	edx, edx
	jne	SHORT $LN25@do_ssh2_au
; Line 10237
	jmp	SHORT $LN22@do_ssh2_au
$LN31@do_ssh2_au:
; Line 10238
	push	OFFSET $SG93823
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
$LN22@do_ssh2_au:
; Line 10240
	jmp	SHORT $LN45@do_ssh2_au
; Line 10241
	jmp	$LN46@do_ssh2_au
$LN45@do_ssh2_au:
; Line 10242
	jmp	SHORT $LN21@do_ssh2_au
$LN52@do_ssh2_au:
; Line 10243
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+220], 1
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+224], 1
$LN21@do_ssh2_au:
; Line 10246
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+280], 3
; Line 10247
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+284], 0
	je	SHORT $LN20@do_ssh2_au
; Line 10248
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+244]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+240]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_size
	add	esp, 12					; 0000000cH
$LN20@do_ssh2_au:
; Line 10249
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+288], 0
	je	SHORT $LN19@do_ssh2_au
; Line 10250
	push	12					; 0000000cH
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh_special
	add	esp, 8
$LN19@do_ssh2_au:
; Line 10255
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+20], 0
	je	SHORT $LN18@do_ssh2_au
; Line 10256
	push	0
	push	0
	push	0
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	_ldisc_send
	add	esp, 16					; 00000010H
$LN18@do_ssh2_au:
; Line 10257
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+252], 0
	je	SHORT $LN16@do_ssh2_au
; Line 10258
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+216], 1
$LN16@do_ssh2_au:
; Line 10259
	mov	eax, 1
	test	eax, eax
	je	$LN412@do_ssh2_au
$LN14@do_ssh2_au:
; Line 10260
	mov	ecx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [ecx], 10260			; 00002814H
	jmp	$LN415@do_ssh2_au
$LN13@do_ssh2_au:
	xor	edx, edx
	jne	SHORT $LN14@do_ssh2_au
; Line 10261
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+180], 0
; Line 10262
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN10@do_ssh2_au
; Line 10270
	mov	ecx, DWORD PTR _pktin$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG93838
	call	_dupprintf
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN9@do_ssh2_au:
; Line 10271
	mov	ecx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [ecx], 0
	jmp	$LN415@do_ssh2_au
	xor	edx, edx
	jne	SHORT $LN9@do_ssh2_au
; Line 10272
	jmp	SHORT $LN6@do_ssh2_au
$LN10@do_ssh2_au:
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+252], 0
	je	SHORT $LN6@do_ssh2_au
; Line 10276
	mov	ecx, DWORD PTR _inlen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _in$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+252]
	push	ecx
	call	_ssh2_add_channel_data
	add	esp, 12					; 0000000cH
; Line 10277
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+180], 1
$LN6@do_ssh2_au:
; Line 10279
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+180], 0
	je	SHORT $LN4@do_ssh2_au
; Line 10285
	mov	DWORD PTR _i$93846[ebp], 0
	jmp	SHORT $LN3@do_ssh2_au
$LN2@do_ssh2_au:
	mov	ecx, DWORD PTR _i$93846[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$93846[ebp], ecx
$LN3@do_ssh2_au:
	mov	edx, DWORD PTR _i$93846[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+248]
	push	ecx
	call	_index234
	add	esp, 8
	mov	DWORD PTR _c$93847[ebp], eax
	cmp	DWORD PTR _c$93847[ebp], 0
	je	SHORT $LN4@do_ssh2_au
; Line 10286
	mov	edx, DWORD PTR _c$93847[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_try_send_and_unthrottle
	add	esp, 8
	jmp	SHORT $LN2@do_ssh2_au
$LN4@do_ssh2_au:
; Line 10288
	jmp	$LN16@do_ssh2_au
$LN412@do_ssh2_au:
; Line 10290
	mov	ecx, DWORD PTR _crLine$93048[ebp]
	mov	DWORD PTR [ecx], 0
$LN415@do_ssh2_au:
; Line 10291
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN465@do_ssh2_au
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 440				; 000001b8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN465@do_ssh2_au:
	DD	21					; 00000015H
	DD	$LN464@do_ssh2_au
$LN464@do_ssh2_au:
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN433@do_ssh2_au
	DD	-84					; ffffffacH
	DD	4
	DD	$LN435@do_ssh2_au
	DD	-20					; ffffffecH
	DD	4
	DD	$LN445@do_ssh2_au
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN446@do_ssh2_au
	DD	-116					; ffffff8cH
	DD	4
	DD	$LN447@do_ssh2_au
	DD	-136					; ffffff78H
	DD	4
	DD	$LN448@do_ssh2_au
	DD	-164					; ffffff5cH
	DD	4
	DD	$LN449@do_ssh2_au
	DD	-176					; ffffff50H
	DD	4
	DD	$LN450@do_ssh2_au
	DD	-200					; ffffff38H
	DD	4
	DD	$LN451@do_ssh2_au
	DD	-212					; ffffff2cH
	DD	4
	DD	$LN452@do_ssh2_au
	DD	-228					; ffffff1cH
	DD	8
	DD	$LN453@do_ssh2_au
	DD	-252					; ffffff04H
	DD	4
	DD	$LN454@do_ssh2_au
	DD	-264					; fffffef8H
	DD	4
	DD	$LN455@do_ssh2_au
	DD	-276					; fffffeecH
	DD	4
	DD	$LN456@do_ssh2_au
	DD	-288					; fffffee0H
	DD	4
	DD	$LN457@do_ssh2_au
	DD	-300					; fffffed4H
	DD	4
	DD	$LN458@do_ssh2_au
	DD	-312					; fffffec8H
	DD	4
	DD	$LN459@do_ssh2_au
	DD	-328					; fffffeb8H
	DD	4
	DD	$LN460@do_ssh2_au
	DD	-340					; fffffeacH
	DD	4
	DD	$LN461@do_ssh2_au
	DD	-372					; fffffe8cH
	DD	4
	DD	$LN462@do_ssh2_au
	DD	-384					; fffffe80H
	DD	4
	DD	$LN463@do_ssh2_au
$LN463@do_ssh2_au:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN462@do_ssh2_au:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	0
$LN461@do_ssh2_au:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN460@do_ssh2_au:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	0
$LN459@do_ssh2_au:
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	95					; 0000005fH
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN458@do_ssh2_au:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN457@do_ssh2_au:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	95					; 0000005fH
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN456@do_ssh2_au:
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN455@do_ssh2_au:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN454@do_ssh2_au:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN453@do_ssh2_au:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	0
$LN452@do_ssh2_au:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN451@do_ssh2_au:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN450@do_ssh2_au:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	95					; 0000005fH
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN449@do_ssh2_au:
	DB	112					; 00000070H
	DB	107					; 0000006bH
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	95					; 0000005fH
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN448@do_ssh2_au:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN447@do_ssh2_au:
	DB	118					; 00000076H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN446@do_ssh2_au:
	DB	114					; 00000072H
	DB	0
$LN445@do_ssh2_au:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN435@do_ssh2_au:
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	0
$LN433@do_ssh2_au:
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
	npad	3
$LN466@do_ssh2_au:
	DD	$LN168@do_ssh2_au
	DD	$LN147@do_ssh2_au
	DD	$LN133@do_ssh2_au
	DD	$LN122@do_ssh2_au
	DD	$LN111@do_ssh2_au
	DD	$LN412@do_ssh2_au
$LN444@do_ssh2_au:
	DB	0
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	1
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	2
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	3
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	4
_do_ssh2_authconn ENDP
; Function compile flags: /Odtp /RTCsu
_b$ = -8						; size = 4
_a$ = -4						; size = 4
_av$ = 8						; size = 4
_bv$ = 12						; size = 4
_ssh_channelcmp PROC
; Line 993
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 994
	mov	eax, DWORD PTR _av$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 995
	mov	ecx, DWORD PTR _bv$[ebp]
	mov	DWORD PTR _b$[ebp], ecx
; Line 996
	mov	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN2@ssh_channe@3
; Line 997
	or	eax, -1
	jmp	SHORT $LN3@ssh_channe@3
$LN2@ssh_channe@3:
; Line 998
	mov	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+8]
	jbe	SHORT $LN1@ssh_channe@3
; Line 999
	mov	eax, 1
	jmp	SHORT $LN3@ssh_channe@3
$LN1@ssh_channe@3:
; Line 1000
	xor	eax, eax
$LN3@ssh_channe@3:
; Line 1001
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_channelcmp ENDP
_TEXT	ENDS
EXTRN	_from_backend_untrusted:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ssh$ = 8						; size = 4
_buf$ = 12						; size = 4
_len$ = 16						; size = 4
_c_write_untrusted PROC
; Line 1141
	push	ebp
	mov	ebp, esp
; Line 1142
	mov	eax, DWORD PTR _flags
	and	eax, 2
	je	SHORT $LN2@c_write_un
; Line 1143
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	push	0
	call	_c_write_stderr
	add	esp, 12					; 0000000cH
; Line 1144
	jmp	SHORT $LN3@c_write_un
$LN2@c_write_un:
; Line 1145
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_from_backend_untrusted
	add	esp, 12					; 0000000cH
$LN3@c_write_un:
; Line 1146
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_c_write_untrusted ENDP
; Function compile flags: /Odtp /RTCsu
_c$89117 = -13						; size = 1
_i$89112 = -8						; size = 4
_stringlen$89111 = -4					; size = 4
_ssh$ = 8						; size = 4
_pkt$ = 12						; size = 4
_padsize$ = 16						; size = 4
_ssh2_pkt_send_with_padding PROC
; Line 2382
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 2405
	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_pkt_defer
	add	esp, 8
; Line 2415
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+96], 0
	je	$LN5@ssh2_pkt_s@3
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	and	ecx, 512				; 00000200H
	jne	$LN5@ssh2_pkt_s@3
; Line 2418
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, 256				; 00000100H
	sub	eax, DWORD PTR [edx+320]
	mov	DWORD PTR _stringlen$89111[ebp], eax
; Line 2419
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	eax, DWORD PTR [edx+28]
	mov	ecx, DWORD PTR _stringlen$89111[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _stringlen$89111[ebp], edx
; Line 2420
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	eax, DWORD PTR _stringlen$89111[ebp]
	cdq
	idiv	DWORD PTR [ecx+28]
	mov	eax, DWORD PTR _stringlen$89111[ebp]
	sub	eax, edx
	mov	DWORD PTR _stringlen$89111[ebp], eax
; Line 2421
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+128], 0
	je	SHORT $LN4@ssh2_pkt_s@3
; Line 2431
	mov	esi, esp
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+136]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _stringlen$89111[ebp]
	sub	ecx, eax
	mov	DWORD PTR _stringlen$89111[ebp], ecx
$LN4@ssh2_pkt_s@3:
; Line 2433
	push	2
	call	_ssh2_pkt_init
	add	esp, 4
	mov	DWORD PTR _pkt$[ebp], eax
; Line 2434
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 2435
	mov	DWORD PTR _i$89112[ebp], 0
	jmp	SHORT $LN3@ssh2_pkt_s@3
$LN2@ssh2_pkt_s@3:
	mov	eax, DWORD PTR _i$89112[ebp]
	add	eax, 1
	mov	DWORD PTR _i$89112[ebp], eax
$LN3@ssh2_pkt_s@3:
	mov	ecx, DWORD PTR _i$89112[ebp]
	cmp	ecx, DWORD PTR _stringlen$89111[ebp]
	jge	SHORT $LN1@ssh2_pkt_s@3
; Line 2436
	call	_random_byte
	mov	BYTE PTR _c$89117[ebp], al
; Line 2437
	push	1
	lea	edx, DWORD PTR _c$89117[ebp]
	push	edx
	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	call	_ssh_pkt_addstring_data
	add	esp, 12					; 0000000cH
; Line 2438
	jmp	SHORT $LN2@ssh2_pkt_s@3
$LN1@ssh2_pkt_s@3:
; Line 2439
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_pkt_defer
	add	esp, 8
$LN5@ssh2_pkt_s@3:
; Line 2441
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh_pkt_defersend
	add	esp, 4
; Line 2443
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@ssh2_pkt_s@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@ssh2_pkt_s@3:
	DD	1
	DD	$LN9@ssh2_pkt_s@3
$LN9@ssh2_pkt_s@3:
	DD	-13					; fffffff3H
	DD	1
	DD	$LN8@ssh2_pkt_s@3
$LN8@ssh2_pkt_s@3:
	DB	99					; 00000063H
	DB	0
_ssh2_pkt_send_with_padding ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = 8						; size = 4
_pkt$ = 12						; size = 4
_ssh2_pkt_defer PROC
; Line 2337
	push	ebp
	mov	ebp, esp
; Line 2338
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+312], 0
	je	SHORT $LN2@ssh2_pkt_d@2
; Line 2339
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_pkt_queue
	add	esp, 8
; Line 2340
	jmp	SHORT $LN3@ssh2_pkt_d@2
$LN2@ssh2_pkt_d@2:
; Line 2341
	push	0
	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_pkt_defer_noqueue
	add	esp, 12					; 0000000cH
$LN3@ssh2_pkt_d@2:
; Line 2342
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh2_pkt_defer ENDP
; Function compile flags: /Odtp /RTCsu
tv221 = -36						; size = 4
_newlen$89287 = -28					; size = 4
_siglen$89250 = -20					; size = 4
_len$89249 = -16					; size = 4
_pos$89248 = -12					; size = 4
_sigblob$ = -8						; size = 4
_pkblob$ = -4						; size = 4
_ssh$ = 8						; size = 4
_pkt$ = 12						; size = 4
_pkblob_v$ = 16						; size = 4
_pkblob_len$ = 20					; size = 4
_sigblob_v$ = 24					; size = 4
_sigblob_len$ = 28					; size = 4
_ssh2_add_sigblob PROC
; Line 2587
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 2588
	mov	eax, DWORD PTR _pkblob_v$[ebp]
	mov	DWORD PTR _pkblob$[ebp], eax
; Line 2589
	mov	ecx, DWORD PTR _sigblob_v$[ebp]
	mov	DWORD PTR _sigblob$[ebp], ecx
; Line 2599
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+80]
	and	eax, 16					; 00000010H
	je	$give_up$89261
	cmp	DWORD PTR _pkblob_len$[ebp], 15		; 0000000fH
	jle	$give_up$89261
	mov	ecx, DWORD PTR _pkblob$[ebp]
	movzx	edx, BYTE PTR [ecx]
	shl	edx, 24					; 00000018H
	mov	eax, DWORD PTR _pkblob$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	mov	eax, DWORD PTR _pkblob$[ebp]
	movzx	ecx, BYTE PTR [eax+2]
	shl	ecx, 8
	or	edx, ecx
	mov	eax, DWORD PTR _pkblob$[ebp]
	movzx	ecx, BYTE PTR [eax+3]
	or	edx, ecx
	cmp	edx, 7
	jne	$give_up$89261
	push	7
	push	OFFSET $SG89247
	mov	edx, DWORD PTR _pkblob$[ebp]
	add	edx, 4
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$give_up$89261
; Line 2606
	mov	DWORD PTR _pos$89248[ebp], 11		; 0000000bH
; Line 2607
	mov	eax, DWORD PTR _pkblob$[ebp]
	add	eax, DWORD PTR _pos$89248[ebp]
	movzx	ecx, BYTE PTR [eax]
	shl	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _pkblob$[ebp]
	add	edx, DWORD PTR _pos$89248[ebp]
	movzx	eax, BYTE PTR [edx+1]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	edx, DWORD PTR _pkblob$[ebp]
	add	edx, DWORD PTR _pos$89248[ebp]
	movzx	eax, BYTE PTR [edx+2]
	shl	eax, 8
	or	ecx, eax
	mov	edx, DWORD PTR _pkblob$[ebp]
	add	edx, DWORD PTR _pos$89248[ebp]
	movzx	eax, BYTE PTR [edx+3]
	or	ecx, eax
	push	ecx
	call	_toint
	add	esp, 4
	mov	DWORD PTR _len$89249[ebp], eax
; Line 2608
	cmp	DWORD PTR _len$89249[ebp], 0
	jl	SHORT $LN11@ssh2_add_s
	mov	ecx, DWORD PTR _pkblob_len$[ebp]
	sub	ecx, DWORD PTR _pos$89248[ebp]
	sub	ecx, 4
	cmp	DWORD PTR _len$89249[ebp], ecx
	jle	SHORT $LN12@ssh2_add_s
$LN11@ssh2_add_s:
; Line 2609
	jmp	$give_up$89261
$LN12@ssh2_add_s:
; Line 2610
	mov	edx, DWORD PTR _len$89249[ebp]
	mov	eax, DWORD PTR _pos$89248[ebp]
	lea	ecx, DWORD PTR [eax+edx+4]
	mov	DWORD PTR _pos$89248[ebp], ecx
; Line 2611
	mov	edx, DWORD PTR _pkblob_len$[ebp]
	sub	edx, DWORD PTR _pos$89248[ebp]
	cmp	edx, 4
	jge	SHORT $LN10@ssh2_add_s
; Line 2612
	jmp	$give_up$89261
$LN10@ssh2_add_s:
; Line 2613
	mov	eax, DWORD PTR _pkblob$[ebp]
	add	eax, DWORD PTR _pos$89248[ebp]
	movzx	ecx, BYTE PTR [eax]
	shl	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _pkblob$[ebp]
	add	edx, DWORD PTR _pos$89248[ebp]
	movzx	eax, BYTE PTR [edx+1]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	edx, DWORD PTR _pkblob$[ebp]
	add	edx, DWORD PTR _pos$89248[ebp]
	movzx	eax, BYTE PTR [edx+2]
	shl	eax, 8
	or	ecx, eax
	mov	edx, DWORD PTR _pkblob$[ebp]
	add	edx, DWORD PTR _pos$89248[ebp]
	movzx	eax, BYTE PTR [edx+3]
	or	ecx, eax
	push	ecx
	call	_toint
	add	esp, 4
	mov	DWORD PTR _len$89249[ebp], eax
; Line 2614
	cmp	DWORD PTR _len$89249[ebp], 0
	jl	SHORT $LN8@ssh2_add_s
	mov	ecx, DWORD PTR _pkblob_len$[ebp]
	sub	ecx, DWORD PTR _pos$89248[ebp]
	sub	ecx, 4
	cmp	DWORD PTR _len$89249[ebp], ecx
	jle	SHORT $LN9@ssh2_add_s
$LN8@ssh2_add_s:
; Line 2615
	jmp	$give_up$89261
$LN9@ssh2_add_s:
; Line 2616
	mov	edx, DWORD PTR _pos$89248[ebp]
	add	edx, 4
	mov	DWORD PTR _pos$89248[ebp], edx
$LN7@ssh2_add_s:
; Line 2617
	cmp	DWORD PTR _len$89249[ebp], 0
	jle	SHORT $LN6@ssh2_add_s
	mov	eax, DWORD PTR _pkblob$[ebp]
	add	eax, DWORD PTR _pos$89248[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN6@ssh2_add_s
; Line 2618
	mov	edx, DWORD PTR _len$89249[ebp]
	sub	edx, 1
	mov	DWORD PTR _len$89249[ebp], edx
	mov	eax, DWORD PTR _pos$89248[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$89248[ebp], eax
	jmp	SHORT $LN7@ssh2_add_s
$LN6@ssh2_add_s:
; Line 2624
	mov	DWORD PTR _pos$89248[ebp], 11		; 0000000bH
; Line 2625
	mov	ecx, DWORD PTR _pos$89248[ebp]
	add	ecx, 4
	cmp	DWORD PTR _sigblob_len$[ebp], ecx
	jge	SHORT $LN5@ssh2_add_s
; Line 2626
	jmp	$give_up$89261
$LN5@ssh2_add_s:
; Line 2627
	mov	edx, DWORD PTR _sigblob$[ebp]
	add	edx, DWORD PTR _pos$89248[ebp]
	movzx	eax, BYTE PTR [edx]
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _sigblob$[ebp]
	add	ecx, DWORD PTR _pos$89248[ebp]
	movzx	edx, BYTE PTR [ecx+1]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, DWORD PTR _sigblob$[ebp]
	add	ecx, DWORD PTR _pos$89248[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	shl	edx, 8
	or	eax, edx
	mov	ecx, DWORD PTR _sigblob$[ebp]
	add	ecx, DWORD PTR _pos$89248[ebp]
	movzx	edx, BYTE PTR [ecx+3]
	or	eax, edx
	push	eax
	call	_toint
	add	esp, 4
	mov	DWORD PTR _siglen$89250[ebp], eax
; Line 2628
	mov	eax, DWORD PTR _sigblob_len$[ebp]
	sub	eax, DWORD PTR _pos$89248[ebp]
	sub	eax, 4
	cmp	DWORD PTR _siglen$89250[ebp], eax
	je	SHORT $LN4@ssh2_add_s
; Line 2629
	jmp	$give_up$89261
$LN4@ssh2_add_s:
; Line 2632
	mov	ecx, DWORD PTR _len$89249[ebp]
	cmp	ecx, DWORD PTR _siglen$89250[ebp]
	je	$give_up$89261
; Line 2634
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 2635
	mov	eax, DWORD PTR _pos$89248[ebp]
	push	eax
	mov	ecx, DWORD PTR _sigblob$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_addstring_data
	add	esp, 12					; 0000000cH
; Line 2637
	mov	eax, DWORD PTR _pos$89248[ebp]
	add	eax, 4
	mov	DWORD PTR _pos$89248[ebp], eax
; Line 2638
	mov	ecx, DWORD PTR _len$89249[ebp]
	sar	ecx, 24					; 00000018H
	mov	BYTE PTR _newlen$89287[ebp], cl
	mov	edx, DWORD PTR _len$89249[ebp]
	sar	edx, 16					; 00000010H
	mov	BYTE PTR _newlen$89287[ebp+1], dl
	mov	eax, DWORD PTR _len$89249[ebp]
	sar	eax, 8
	mov	BYTE PTR _newlen$89287[ebp+2], al
	mov	cl, BYTE PTR _len$89249[ebp]
	mov	BYTE PTR _newlen$89287[ebp+3], cl
; Line 2639
	push	4
	lea	edx, DWORD PTR _newlen$89287[ebp]
	push	edx
	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	call	_ssh_pkt_addstring_data
	add	esp, 12					; 0000000cH
; Line 2641
	mov	BYTE PTR _newlen$89287[ebp], 0
$LN2@ssh2_add_s:
; Line 2642
	mov	ecx, DWORD PTR _len$89249[ebp]
	mov	edx, DWORD PTR _siglen$89250[ebp]
	mov	eax, DWORD PTR _len$89249[ebp]
	sub	eax, 1
	mov	DWORD PTR _len$89249[ebp], eax
	cmp	ecx, edx
	jle	SHORT $LN16@ssh2_add_s
	mov	DWORD PTR tv221[ebp], 1
	jmp	SHORT $LN17@ssh2_add_s
$LN16@ssh2_add_s:
	mov	DWORD PTR tv221[ebp], 0
$LN17@ssh2_add_s:
	cmp	DWORD PTR tv221[ebp], 0
	je	SHORT $LN1@ssh2_add_s
; Line 2643
	push	1
	lea	ecx, DWORD PTR _newlen$89287[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_addstring_data
	add	esp, 12					; 0000000cH
; Line 2645
	jmp	SHORT $LN2@ssh2_add_s
$LN1@ssh2_add_s:
; Line 2646
	mov	eax, DWORD PTR _siglen$89250[ebp]
	push	eax
	mov	ecx, DWORD PTR _sigblob$[ebp]
	add	ecx, DWORD PTR _pos$89248[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	call	_ssh_pkt_addstring_data
	add	esp, 12					; 0000000cH
; Line 2648
	jmp	SHORT $LN14@ssh2_add_s
$give_up$89261:
; Line 2657
	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 2658
	mov	ecx, DWORD PTR _sigblob_len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sigblob$[ebp]
	push	edx
	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	call	_ssh_pkt_addstring_data
	add	esp, 12					; 0000000cH
$LN14@ssh2_add_s:
; Line 2659
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@ssh2_add_s
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN20@ssh2_add_s:
	DD	1
	DD	$LN19@ssh2_add_s
$LN19@ssh2_add_s:
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN18@ssh2_add_s
$LN18@ssh2_add_s:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
_ssh2_add_sigblob ENDP
_TEXT	ENDS
EXTRN	_pfl_listen:PROC
EXTRN	_delpos234:PROC
EXTRN	_host_strcspn:PROC
EXTRN	_net_service_lookup:PROC
EXTRN	_atoi:PROC
EXTRN	_host_strduptrim:PROC
EXTRN	_host_strchr:PROC
EXTRN	_conf_get_str_strs:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv499 = -228						; size = 4
tv500 = -224						; size = 4
tv492 = -220						; size = 4
tv489 = -216						; size = 4
tv466 = -212						; size = 4
tv467 = -208						; size = 4
tv458 = -204						; size = 4
tv455 = -200						; size = 4
tv368 = -196						; size = 4
tv363 = -192						; size = 4
tv357 = -188						; size = 4
tv349 = -184						; size = 4
tv344 = -180						; size = 4
tv340 = -176						; size = 4
tv335 = -172						; size = 4
tv329 = -168						; size = 4
tv250 = -164						; size = 4
tv251 = -160						; size = 4
tv244 = -156						; size = 4
tv239 = -152						; size = 4
tv208 = -148						; size = 4
tv198 = -144						; size = 4
tv191 = -140						; size = 4
_pktout$91050 = -136					; size = 4
_pf$91030 = -132					; size = 4
_err$91019 = -128					; size = 4
_err$91008 = -124					; size = 4
_dportdesc$90988 = -120					; size = 4
_sportdesc$90987 = -116					; size = 4
_pktout$90969 = -112					; size = 4
_rpf$90968 = -108					; size = 4
_msg2$90964 = -104					; size = 4
_message$90955 = -100					; size = 4
_epfrec$90938 = -96					; size = 4
_pfrec$90937 = -92					; size = 4
_saddr_tmp$90916 = -88					; size = 4
_host$90909 = -84					; size = 4
_saddr$90908 = -80					; size = 4
_dports$90907 = -76					; size = 4
_sports$90906 = -72					; size = 4
_dserv$90905 = -68					; size = 4
_sserv$90904 = -64					; size = 4
_dport$90903 = -60					; size = 4
_sport$90902 = -56					; size = 4
_type$90901 = -50					; size = 1
_address_family$90900 = -49				; size = 1
_vp2$90899 = -48					; size = 4
_vp$90898 = -44						; size = 4
_kp2$90897 = -40					; size = 4
_kp$90896 = -36						; size = 4
_i$90886 = -32						; size = 4
_epf$90885 = -28					; size = 4
_val$ = -24						; size = 4
_key$ = -16						; size = 4
_i$ = -8						; size = 4
_epf$ = -4						; size = 4
_ssh$ = 8						; size = 4
_conf$ = 12						; size = 4
_ssh_setup_portfwd PROC
; Line 4972
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 4977
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+276], 0
	jne	SHORT $LN63@ssh_setup_
; Line 4978
	push	OFFSET _ssh_portcmp
	call	_newtree234
	add	esp, 4
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+276], eax
; Line 4979
	jmp	SHORT $LN62@ssh_setup_
$LN63@ssh_setup_:
; Line 4989
	mov	DWORD PTR _i$90886[ebp], 0
	jmp	SHORT $LN61@ssh_setup_
$LN60@ssh_setup_:
	mov	edx, DWORD PTR _i$90886[ebp]
	add	edx, 1
	mov	DWORD PTR _i$90886[ebp], edx
$LN61@ssh_setup_:
	mov	eax, DWORD PTR _i$90886[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+276]
	push	edx
	call	_index234
	add	esp, 8
	mov	DWORD PTR _epf$90885[ebp], eax
	cmp	DWORD PTR _epf$90885[ebp], 0
	je	SHORT $LN62@ssh_setup_
; Line 4990
	mov	eax, DWORD PTR _epf$90885[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN60@ssh_setup_
$LN62@ssh_setup_:
; Line 4995
	lea	ecx, DWORD PTR _key$[ebp]
	push	ecx
	push	0
	push	150					; 00000096H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _val$[ebp], eax
	jmp	SHORT $LN58@ssh_setup_
$LN57@ssh_setup_:
	lea	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	push	150					; 00000096H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _val$[ebp], eax
$LN58@ssh_setup_:
	cmp	DWORD PTR _val$[ebp], 0
	je	$LN56@ssh_setup_
; Line 5001
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _kp$90896[ebp], eax
; Line 5003
	mov	BYTE PTR _address_family$90900[ebp], 65	; 00000041H
; Line 5004
	mov	BYTE PTR _type$90901[ebp], 76		; 0000004cH
; Line 5005
	mov	ecx, DWORD PTR _kp$90896[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 65					; 00000041H
	je	SHORT $LN54@ssh_setup_
	mov	eax, DWORD PTR _kp$90896[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN54@ssh_setup_
	mov	edx, DWORD PTR _kp$90896[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 54					; 00000036H
	jne	SHORT $LN55@ssh_setup_
$LN54@ssh_setup_:
; Line 5006
	mov	ecx, DWORD PTR _kp$90896[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR _address_family$90900[ebp], dl
	mov	eax, DWORD PTR _kp$90896[ebp]
	add	eax, 1
	mov	DWORD PTR _kp$90896[ebp], eax
$LN55@ssh_setup_:
; Line 5007
	mov	ecx, DWORD PTR _kp$90896[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 76					; 0000004cH
	je	SHORT $LN52@ssh_setup_
	mov	eax, DWORD PTR _kp$90896[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 82					; 00000052H
	jne	SHORT $LN53@ssh_setup_
$LN52@ssh_setup_:
; Line 5008
	mov	edx, DWORD PTR _kp$90896[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR _type$90901[ebp], al
	mov	ecx, DWORD PTR _kp$90896[ebp]
	add	ecx, 1
	mov	DWORD PTR _kp$90896[ebp], ecx
$LN53@ssh_setup_:
; Line 5010
	push	58					; 0000003aH
	mov	edx, DWORD PTR _kp$90896[ebp]
	push	edx
	call	_host_strchr
	add	esp, 8
	mov	DWORD PTR _kp2$90897[ebp], eax
	cmp	DWORD PTR _kp2$90897[ebp], 0
	je	SHORT $LN51@ssh_setup_
; Line 5016
	mov	eax, DWORD PTR _kp$90896[ebp]
	push	eax
	mov	ecx, DWORD PTR _kp2$90897[ebp]
	sub	ecx, DWORD PTR _kp$90896[ebp]
	push	ecx
	push	OFFSET $SG90918
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _saddr_tmp$90916[ebp], eax
; Line 5017
	mov	edx, DWORD PTR _saddr_tmp$90916[ebp]
	push	edx
	call	_host_strduptrim
	add	esp, 4
	mov	DWORD PTR _saddr$90908[ebp], eax
; Line 5018
	mov	eax, DWORD PTR _saddr_tmp$90916[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 5019
	mov	ecx, DWORD PTR _kp2$90897[ebp]
	add	ecx, 1
	mov	DWORD PTR _sports$90906[ebp], ecx
; Line 5020
	jmp	SHORT $LN50@ssh_setup_
$LN51@ssh_setup_:
; Line 5021
	mov	DWORD PTR _saddr$90908[ebp], 0
; Line 5022
	mov	edx, DWORD PTR _kp$90896[ebp]
	mov	DWORD PTR _sports$90906[ebp], edx
$LN50@ssh_setup_:
; Line 5024
	mov	eax, DWORD PTR _sports$90906[ebp]
	push	eax
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _sport$90902[ebp], eax
; Line 5025
	mov	DWORD PTR _sserv$90904[ebp], 0
; Line 5026
	cmp	DWORD PTR _sport$90902[ebp], 0
	jne	SHORT $LN49@ssh_setup_
; Line 5027
	mov	DWORD PTR _sserv$90904[ebp], 1
; Line 5028
	mov	ecx, DWORD PTR _sports$90906[ebp]
	push	ecx
	call	_net_service_lookup
	add	esp, 4
	mov	DWORD PTR _sport$90902[ebp], eax
; Line 5029
	cmp	DWORD PTR _sport$90902[ebp], 0
	jne	SHORT $LN49@ssh_setup_
; Line 5031
	mov	edx, DWORD PTR _sports$90906[ebp]
	push	edx
	push	OFFSET $SG90923
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 12					; 0000000cH
$LN49@ssh_setup_:
; Line 5035
	movsx	ecx, BYTE PTR _type$90901[ebp]
	cmp	ecx, 76					; 0000004cH
	jne	SHORT $LN47@ssh_setup_
	push	OFFSET $SG90925
	mov	edx, DWORD PTR _val$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN47@ssh_setup_
; Line 5037
	mov	DWORD PTR _host$90909[ebp], 0
; Line 5038
	mov	DWORD PTR _dports$90907[ebp], 0
; Line 5039
	mov	DWORD PTR _dport$90903[ebp], -1
; Line 5040
	mov	DWORD PTR _dserv$90905[ebp], 0
; Line 5041
	mov	BYTE PTR _type$90901[ebp], 68		; 00000044H
; Line 5042
	jmp	$LN46@ssh_setup_
$LN47@ssh_setup_:
; Line 5044
	mov	eax, DWORD PTR _val$[ebp]
	mov	DWORD PTR _vp$90898[ebp], eax
; Line 5045
	push	OFFSET $SG90929
	mov	ecx, DWORD PTR _vp$90898[ebp]
	push	ecx
	call	_host_strcspn
	add	esp, 8
	add	eax, DWORD PTR _vp$90898[ebp]
	mov	DWORD PTR _vp2$90899[ebp], eax
; Line 5046
	mov	edx, DWORD PTR _vp$90898[ebp]
	push	edx
	mov	eax, DWORD PTR _vp2$90899[ebp]
	sub	eax, DWORD PTR _vp$90898[ebp]
	push	eax
	push	OFFSET $SG90931
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _host$90909[ebp], eax
; Line 5047
	mov	ecx, DWORD PTR _vp2$90899[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN45@ssh_setup_
; Line 5048
	mov	eax, DWORD PTR _vp2$90899[ebp]
	add	eax, 1
	mov	DWORD PTR _vp2$90899[ebp], eax
$LN45@ssh_setup_:
; Line 5049
	mov	ecx, DWORD PTR _vp2$90899[ebp]
	mov	DWORD PTR _dports$90907[ebp], ecx
; Line 5050
	mov	edx, DWORD PTR _dports$90907[ebp]
	push	edx
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _dport$90903[ebp], eax
; Line 5051
	mov	DWORD PTR _dserv$90905[ebp], 0
; Line 5052
	cmp	DWORD PTR _dport$90903[ebp], 0
	jne	SHORT $LN46@ssh_setup_
; Line 5053
	mov	DWORD PTR _dserv$90905[ebp], 1
; Line 5054
	mov	eax, DWORD PTR _dports$90907[ebp]
	push	eax
	call	_net_service_lookup
	add	esp, 4
	mov	DWORD PTR _dport$90903[ebp], eax
; Line 5055
	cmp	DWORD PTR _dport$90903[ebp], 0
	jne	SHORT $LN46@ssh_setup_
; Line 5057
	mov	ecx, DWORD PTR _dports$90907[ebp]
	push	ecx
	push	OFFSET $SG90935
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 12					; 0000000cH
$LN46@ssh_setup_:
; Line 5062
	cmp	DWORD PTR _sport$90902[ebp], 0
	je	$LN42@ssh_setup_
	cmp	DWORD PTR _dport$90903[ebp], 0
	je	$LN42@ssh_setup_
; Line 5066
	push	44					; 0000002cH
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _pfrec$90937[ebp], eax
; Line 5067
	movsx	eax, BYTE PTR _type$90901[ebp]
	mov	ecx, DWORD PTR _pfrec$90937[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 5068
	mov	edx, DWORD PTR _pfrec$90937[ebp]
	mov	eax, DWORD PTR _saddr$90908[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 5069
	cmp	DWORD PTR _sserv$90904[ebp], 0
	je	SHORT $LN66@ssh_setup_
	mov	ecx, DWORD PTR _sports$90906[ebp]
	push	ecx
	call	_dupstr
	add	esp, 4
	mov	DWORD PTR tv191[ebp], eax
	jmp	SHORT $LN67@ssh_setup_
$LN66@ssh_setup_:
	mov	DWORD PTR tv191[ebp], 0
$LN67@ssh_setup_:
	mov	edx, DWORD PTR _pfrec$90937[ebp]
	mov	eax, DWORD PTR tv191[ebp]
	mov	DWORD PTR [edx+24], eax
; Line 5070
	mov	ecx, DWORD PTR _pfrec$90937[ebp]
	mov	edx, DWORD PTR _sport$90902[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 5071
	mov	eax, DWORD PTR _pfrec$90937[ebp]
	mov	ecx, DWORD PTR _host$90909[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 5072
	cmp	DWORD PTR _dserv$90905[ebp], 0
	je	SHORT $LN68@ssh_setup_
	mov	edx, DWORD PTR _dports$90907[ebp]
	push	edx
	call	_dupstr
	add	esp, 4
	mov	DWORD PTR tv198[ebp], eax
	jmp	SHORT $LN69@ssh_setup_
$LN68@ssh_setup_:
	mov	DWORD PTR tv198[ebp], 0
$LN69@ssh_setup_:
	mov	eax, DWORD PTR _pfrec$90937[ebp]
	mov	ecx, DWORD PTR tv198[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 5073
	mov	edx, DWORD PTR _pfrec$90937[ebp]
	mov	eax, DWORD PTR _dport$90903[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 5074
	mov	ecx, DWORD PTR _pfrec$90937[ebp]
	mov	DWORD PTR [ecx+40], 0
; Line 5075
	mov	edx, DWORD PTR _pfrec$90937[ebp]
	mov	DWORD PTR [edx+32], 0
; Line 5078
	movsx	eax, BYTE PTR _address_family$90900[ebp]
	cmp	eax, 52					; 00000034H
	jne	SHORT $LN70@ssh_setup_
	mov	DWORD PTR tv208[ebp], 1
	jmp	SHORT $LN71@ssh_setup_
$LN70@ssh_setup_:
	movsx	ecx, BYTE PTR _address_family$90900[ebp]
	sub	ecx, 54					; 00000036H
	neg	ecx
	sbb	ecx, ecx
	and	ecx, -2					; fffffffeH
	add	ecx, 2
	mov	DWORD PTR tv208[ebp], ecx
$LN71@ssh_setup_:
	mov	edx, DWORD PTR _pfrec$90937[ebp]
	mov	eax, DWORD PTR tv208[ebp]
	mov	DWORD PTR [edx+36], eax
; Line 5080
	mov	ecx, DWORD PTR _pfrec$90937[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+276]
	push	eax
	call	_add234
	add	esp, 8
	mov	DWORD PTR _epfrec$90938[ebp], eax
; Line 5081
	mov	ecx, DWORD PTR _epfrec$90938[ebp]
	cmp	ecx, DWORD PTR _pfrec$90937[ebp]
	je	SHORT $LN41@ssh_setup_
; Line 5082
	mov	edx, DWORD PTR _epfrec$90938[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN40@ssh_setup_
; Line 5089
	mov	eax, DWORD PTR _epfrec$90938[ebp]
	mov	DWORD PTR [eax], 1
$LN40@ssh_setup_:
; Line 5095
	cmp	DWORD PTR _pfrec$90937[ebp], 0
	je	SHORT $LN73@ssh_setup_
	mov	ecx, DWORD PTR _pfrec$90937[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	_safefree
	add	esp, 4
	mov	eax, DWORD PTR _pfrec$90937[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_safefree
	add	esp, 4
	mov	edx, DWORD PTR _pfrec$90937[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	_safefree
	add	esp, 4
	mov	ecx, DWORD PTR _pfrec$90937[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	call	_safefree
	add	esp, 4
$LN73@ssh_setup_:
	mov	eax, DWORD PTR _pfrec$90937[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 5096
	jmp	SHORT $LN39@ssh_setup_
$LN41@ssh_setup_:
; Line 5097
	mov	ecx, DWORD PTR _pfrec$90937[ebp]
	mov	DWORD PTR [ecx], 2
$LN39@ssh_setup_:
; Line 5099
	jmp	SHORT $LN38@ssh_setup_
$LN42@ssh_setup_:
; Line 5100
	mov	edx, DWORD PTR _saddr$90908[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 5101
	mov	eax, DWORD PTR _host$90909[ebp]
	push	eax
	call	_safefree
	add	esp, 4
$LN38@ssh_setup_:
; Line 5103
	jmp	$LN57@ssh_setup_
$LN56@ssh_setup_:
; Line 5109
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN37@ssh_setup_
$LN36@ssh_setup_:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN37@ssh_setup_:
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+276]
	push	ecx
	call	_index234
	add	esp, 8
	mov	DWORD PTR _epf$[ebp], eax
	cmp	DWORD PTR _epf$[ebp], 0
	je	$LN35@ssh_setup_
; Line 5110
	mov	edx, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	$LN34@ssh_setup_
; Line 5118
	mov	eax, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN74@ssh_setup_
	mov	DWORD PTR tv239[ebp], OFFSET $SG90956
	jmp	SHORT $LN75@ssh_setup_
$LN74@ssh_setup_:
	mov	DWORD PTR tv239[ebp], OFFSET $SG90957
$LN75@ssh_setup_:
	mov	ecx, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN76@ssh_setup_
	mov	edx, DWORD PTR _epf$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR tv244[ebp], eax
	jmp	SHORT $LN77@ssh_setup_
$LN76@ssh_setup_:
	mov	DWORD PTR tv244[ebp], OFFSET $SG90958
$LN77@ssh_setup_:
	mov	ecx, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [ecx+4], 76			; 0000004cH
	jne	SHORT $LN80@ssh_setup_
	mov	DWORD PTR tv251[ebp], OFFSET $SG90959
	jmp	SHORT $LN81@ssh_setup_
$LN80@ssh_setup_:
	mov	edx, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [edx+4], 82			; 00000052H
	jne	SHORT $LN78@ssh_setup_
	mov	DWORD PTR tv250[ebp], OFFSET $SG90960
	jmp	SHORT $LN79@ssh_setup_
$LN78@ssh_setup_:
	mov	DWORD PTR tv250[ebp], OFFSET $SG90961
$LN79@ssh_setup_:
	mov	eax, DWORD PTR tv250[ebp]
	mov	DWORD PTR tv251[ebp], eax
$LN81@ssh_setup_:
	mov	ecx, DWORD PTR _epf$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR tv239[ebp]
	push	eax
	mov	ecx, DWORD PTR tv244[ebp]
	push	ecx
	mov	edx, DWORD PTR tv251[ebp]
	push	edx
	push	OFFSET $SG90962
	call	_dupprintf
	add	esp, 20					; 00000014H
	mov	DWORD PTR _message$90955[ebp], eax
; Line 5120
	mov	eax, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [eax+4], 68			; 00000044H
	je	SHORT $LN33@ssh_setup_
; Line 5122
	mov	ecx, DWORD PTR _epf$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _epf$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _message$90955[ebp]
	push	edx
	push	OFFSET $SG90965
	call	_dupprintf
	add	esp, 16					; 00000010H
	mov	DWORD PTR _msg2$90964[ebp], eax
; Line 5123
	mov	eax, DWORD PTR _message$90955[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 5124
	mov	ecx, DWORD PTR _msg2$90964[ebp]
	mov	DWORD PTR _message$90955[ebp], ecx
$LN33@ssh_setup_:
; Line 5127
	mov	edx, DWORD PTR _message$90955[ebp]
	push	edx
	push	OFFSET $SG90966
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 5128
	mov	ecx, DWORD PTR _message$90955[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 5132
	mov	edx, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [edx+32], 0
	je	$LN32@ssh_setup_
; Line 5133
	mov	eax, DWORD PTR _epf$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _rpf$90968[ebp], ecx
; Line 5140
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+364], 1
	jne	SHORT $LN31@ssh_setup_
; Line 5149
	jmp	$LN30@ssh_setup_
$LN31@ssh_setup_:
; Line 5150
	push	80					; 00000050H
	call	_ssh2_pkt_init
	add	esp, 4
	mov	DWORD PTR _pktout$90969[ebp], eax
; Line 5151
	push	OFFSET $SG90972
	mov	eax, DWORD PTR _pktout$90969[ebp]
	push	eax
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 5152
	push	0
	mov	ecx, DWORD PTR _pktout$90969[ebp]
	push	ecx
	call	_ssh2_pkt_addbool
	add	esp, 8
; Line 5153
	mov	edx, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN29@ssh_setup_
; Line 5154
	mov	eax, DWORD PTR _epf$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _pktout$90969[ebp]
	push	edx
	call	_ssh_pkt_addstring
	add	esp, 8
	jmp	SHORT $LN28@ssh_setup_
$LN29@ssh_setup_:
; Line 5155
	push	149					; 00000095H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN27@ssh_setup_
; Line 5159
	push	OFFSET $SG90976
	mov	ecx, DWORD PTR _pktout$90969[ebp]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 5160
	jmp	SHORT $LN28@ssh_setup_
$LN27@ssh_setup_:
; Line 5161
	push	OFFSET $SG90978
	mov	edx, DWORD PTR _pktout$90969[ebp]
	push	edx
	call	_ssh_pkt_addstring
	add	esp, 8
$LN28@ssh_setup_:
; Line 5163
	mov	eax, DWORD PTR _epf$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _pktout$90969[ebp]
	push	edx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 5164
	mov	eax, DWORD PTR _pktout$90969[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_pkt_send
	add	esp, 8
$LN30@ssh_setup_:
; Line 5167
	mov	edx, DWORD PTR _rpf$90968[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+272]
	push	ecx
	call	_del234
	add	esp, 8
; Line 5168
	mov	edx, DWORD PTR _rpf$90968[ebp]
	push	edx
	call	_free_rportfwd
	add	esp, 4
	jmp	SHORT $LN25@ssh_setup_
$LN32@ssh_setup_:
; Line 5169
	mov	eax, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN25@ssh_setup_
; Line 5170
	mov	ecx, DWORD PTR _epf$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	push	edx
	call	_pfl_terminate
	add	esp, 4
$LN25@ssh_setup_:
; Line 5173
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+276]
	push	edx
	call	_delpos234
	add	esp, 8
; Line 5174
	cmp	DWORD PTR _epf$[ebp], 0
	je	SHORT $LN83@ssh_setup_
	mov	eax, DWORD PTR _epf$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_safefree
	add	esp, 4
	mov	edx, DWORD PTR _epf$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	_safefree
	add	esp, 4
	mov	ecx, DWORD PTR _epf$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	_safefree
	add	esp, 4
	mov	eax, DWORD PTR _epf$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_safefree
	add	esp, 4
$LN83@ssh_setup_:
	mov	edx, DWORD PTR _epf$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 5175
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN34@ssh_setup_:
; Line 5176
	jmp	$LN36@ssh_setup_
$LN35@ssh_setup_:
; Line 5181
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN23@ssh_setup_
$LN22@ssh_setup_:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN23@ssh_setup_:
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+276]
	push	ecx
	call	_index234
	add	esp, 8
	mov	DWORD PTR _epf$[ebp], eax
	cmp	DWORD PTR _epf$[ebp], 0
	je	$LN64@ssh_setup_
; Line 5182
	mov	edx, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [edx], 2
	jne	$LN20@ssh_setup_
; Line 5190
	mov	eax, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN84@ssh_setup_
	mov	DWORD PTR tv329[ebp], OFFSET $SG90989
	jmp	SHORT $LN85@ssh_setup_
$LN84@ssh_setup_:
	mov	DWORD PTR tv329[ebp], OFFSET $SG90990
$LN85@ssh_setup_:
	mov	ecx, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [ecx+24], 0
	je	SHORT $LN86@ssh_setup_
	mov	DWORD PTR tv335[ebp], OFFSET $SG90991
	jmp	SHORT $LN87@ssh_setup_
$LN86@ssh_setup_:
	mov	DWORD PTR tv335[ebp], OFFSET $SG90992
$LN87@ssh_setup_:
	mov	edx, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [edx+24], 0
	je	SHORT $LN88@ssh_setup_
	mov	eax, DWORD PTR _epf$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR tv340[ebp], ecx
	jmp	SHORT $LN89@ssh_setup_
$LN88@ssh_setup_:
	mov	DWORD PTR tv340[ebp], OFFSET $SG90993
$LN89@ssh_setup_:
	mov	edx, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN90@ssh_setup_
	mov	DWORD PTR tv344[ebp], OFFSET $SG90994
	jmp	SHORT $LN91@ssh_setup_
$LN90@ssh_setup_:
	mov	DWORD PTR tv344[ebp], OFFSET $SG90995
$LN91@ssh_setup_:
	mov	eax, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN92@ssh_setup_
	mov	ecx, DWORD PTR _epf$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR tv349[ebp], edx
	jmp	SHORT $LN93@ssh_setup_
$LN92@ssh_setup_:
	mov	DWORD PTR tv349[ebp], OFFSET $SG90996
$LN93@ssh_setup_:
	mov	eax, DWORD PTR tv329[ebp]
	push	eax
	mov	ecx, DWORD PTR _epf$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR tv335[ebp]
	push	eax
	mov	ecx, DWORD PTR tv340[ebp]
	push	ecx
	mov	edx, DWORD PTR tv344[ebp]
	push	edx
	mov	eax, DWORD PTR tv349[ebp]
	push	eax
	push	OFFSET $SG90997
	call	_dupprintf
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _sportdesc$90987[ebp], eax
; Line 5191
	mov	ecx, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [ecx+4], 68			; 00000044H
	jne	SHORT $LN19@ssh_setup_
; Line 5192
	mov	DWORD PTR _dportdesc$90988[ebp], 0
; Line 5193
	jmp	$LN18@ssh_setup_
$LN19@ssh_setup_:
; Line 5199
	mov	edx, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [edx+28], 0
	je	SHORT $LN94@ssh_setup_
	mov	DWORD PTR tv357[ebp], OFFSET $SG91001
	jmp	SHORT $LN95@ssh_setup_
$LN94@ssh_setup_:
	mov	DWORD PTR tv357[ebp], OFFSET $SG91002
$LN95@ssh_setup_:
	mov	eax, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN96@ssh_setup_
	mov	DWORD PTR tv363[ebp], OFFSET $SG91003
	jmp	SHORT $LN97@ssh_setup_
$LN96@ssh_setup_:
	mov	DWORD PTR tv363[ebp], OFFSET $SG91004
$LN97@ssh_setup_:
	mov	ecx, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [ecx+28], 0
	je	SHORT $LN98@ssh_setup_
	mov	edx, DWORD PTR _epf$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR tv368[ebp], eax
	jmp	SHORT $LN99@ssh_setup_
$LN98@ssh_setup_:
	mov	DWORD PTR tv368[ebp], OFFSET $SG91005
$LN99@ssh_setup_:
	mov	ecx, DWORD PTR tv357[ebp]
	push	ecx
	mov	edx, DWORD PTR _epf$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR tv363[ebp]
	push	ecx
	mov	edx, DWORD PTR tv368[ebp]
	push	edx
	mov	eax, DWORD PTR _epf$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	OFFSET $SG91006
	call	_dupprintf
	add	esp, 24					; 00000018H
	mov	DWORD PTR _dportdesc$90988[ebp], eax
$LN18@ssh_setup_:
; Line 5202
	mov	edx, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [edx+4], 76			; 0000004cH
	jne	$LN17@ssh_setup_
; Line 5206
	mov	eax, DWORD PTR _epf$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR _epf$[ebp]
	add	edx, 40					; 00000028H
	push	edx
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	mov	edx, DWORD PTR _epf$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _epf$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _epf$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _epf$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	_pfl_listen
	add	esp, 32					; 00000020H
	mov	DWORD PTR _err$91008[ebp], eax
; Line 5212
	cmp	DWORD PTR _err$91008[ebp], 0
	je	SHORT $LN100@ssh_setup_
	mov	ecx, DWORD PTR _err$91008[ebp]
	mov	DWORD PTR tv455[ebp], ecx
	jmp	SHORT $LN101@ssh_setup_
$LN100@ssh_setup_:
	mov	DWORD PTR tv455[ebp], OFFSET $SG91009
$LN101@ssh_setup_:
	cmp	DWORD PTR _err$91008[ebp], 0
	je	SHORT $LN102@ssh_setup_
	mov	DWORD PTR tv458[ebp], OFFSET $SG91010
	jmp	SHORT $LN103@ssh_setup_
$LN102@ssh_setup_:
	mov	DWORD PTR tv458[ebp], OFFSET $SG91011
$LN103@ssh_setup_:
	mov	edx, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [edx+36], 1
	jne	SHORT $LN106@ssh_setup_
	mov	DWORD PTR tv467[ebp], OFFSET $SG91012
	jmp	SHORT $LN107@ssh_setup_
$LN106@ssh_setup_:
	mov	eax, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [eax+36], 2
	jne	SHORT $LN104@ssh_setup_
	mov	DWORD PTR tv466[ebp], OFFSET $SG91013
	jmp	SHORT $LN105@ssh_setup_
$LN104@ssh_setup_:
	mov	DWORD PTR tv466[ebp], OFFSET $SG91014
$LN105@ssh_setup_:
	mov	ecx, DWORD PTR tv466[ebp]
	mov	DWORD PTR tv467[ebp], ecx
$LN107@ssh_setup_:
	mov	edx, DWORD PTR tv455[ebp]
	push	edx
	mov	eax, DWORD PTR tv458[ebp]
	push	eax
	mov	ecx, DWORD PTR _dportdesc$90988[ebp]
	push	ecx
	mov	edx, DWORD PTR _sportdesc$90987[ebp]
	push	edx
	mov	eax, DWORD PTR tv467[ebp]
	push	eax
	push	OFFSET $SG91015
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 28					; 0000001cH
; Line 5213
	cmp	DWORD PTR _err$91008[ebp], 0
	je	SHORT $LN16@ssh_setup_
; Line 5214
	mov	edx, DWORD PTR _err$91008[ebp]
	push	edx
	call	_safefree
	add	esp, 4
$LN16@ssh_setup_:
; Line 5215
	jmp	$LN15@ssh_setup_
$LN17@ssh_setup_:
	mov	eax, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [eax+4], 68			; 00000044H
	jne	$LN14@ssh_setup_
; Line 5218
	mov	ecx, DWORD PTR _epf$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	push	edx
	mov	eax, DWORD PTR _epf$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	mov	eax, DWORD PTR _epf$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _epf$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	push	-1
	push	0
	call	_pfl_listen
	add	esp, 32					; 00000020H
	mov	DWORD PTR _err$91019[ebp], eax
; Line 5224
	cmp	DWORD PTR _err$91019[ebp], 0
	je	SHORT $LN108@ssh_setup_
	mov	ecx, DWORD PTR _err$91019[ebp]
	mov	DWORD PTR tv489[ebp], ecx
	jmp	SHORT $LN109@ssh_setup_
$LN108@ssh_setup_:
	mov	DWORD PTR tv489[ebp], OFFSET $SG91021
$LN109@ssh_setup_:
	cmp	DWORD PTR _err$91019[ebp], 0
	je	SHORT $LN110@ssh_setup_
	mov	DWORD PTR tv492[ebp], OFFSET $SG91022
	jmp	SHORT $LN111@ssh_setup_
$LN110@ssh_setup_:
	mov	DWORD PTR tv492[ebp], OFFSET $SG91023
$LN111@ssh_setup_:
	mov	edx, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [edx+36], 1
	jne	SHORT $LN114@ssh_setup_
	mov	DWORD PTR tv500[ebp], OFFSET $SG91024
	jmp	SHORT $LN115@ssh_setup_
$LN114@ssh_setup_:
	mov	eax, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [eax+36], 2
	jne	SHORT $LN112@ssh_setup_
	mov	DWORD PTR tv499[ebp], OFFSET $SG91025
	jmp	SHORT $LN113@ssh_setup_
$LN112@ssh_setup_:
	mov	DWORD PTR tv499[ebp], OFFSET $SG91026
$LN113@ssh_setup_:
	mov	ecx, DWORD PTR tv499[ebp]
	mov	DWORD PTR tv500[ebp], ecx
$LN115@ssh_setup_:
	mov	edx, DWORD PTR tv489[ebp]
	push	edx
	mov	eax, DWORD PTR tv492[ebp]
	push	eax
	mov	ecx, DWORD PTR _sportdesc$90987[ebp]
	push	ecx
	mov	edx, DWORD PTR tv500[ebp]
	push	edx
	push	OFFSET $SG91027
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 24					; 00000018H
; Line 5226
	cmp	DWORD PTR _err$91019[ebp], 0
	je	SHORT $LN13@ssh_setup_
; Line 5227
	mov	ecx, DWORD PTR _err$91019[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN13@ssh_setup_:
; Line 5228
	jmp	$LN15@ssh_setup_
$LN14@ssh_setup_:
; Line 5234
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+272], 0
	jne	SHORT $LN11@ssh_setup_
; Line 5235
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+364], 1
	jne	SHORT $LN10@ssh_setup_
; Line 5236
	push	OFFSET _ssh_rportcmp_ssh1
	call	_newtree234
	add	esp, 4
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+272], eax
; Line 5237
	jmp	SHORT $LN11@ssh_setup_
$LN10@ssh_setup_:
; Line 5238
	push	OFFSET _ssh_rportcmp_ssh2
	call	_newtree234
	add	esp, 4
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+272], eax
$LN11@ssh_setup_:
; Line 5241
	push	28					; 0000001cH
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _pf$91030[ebp], eax
; Line 5242
	mov	eax, DWORD PTR _pf$91030[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 5243
	mov	ecx, DWORD PTR _epf$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	_dupstr
	add	esp, 4
	mov	ecx, DWORD PTR _pf$91030[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 5244
	mov	edx, DWORD PTR _pf$91030[ebp]
	mov	eax, DWORD PTR _epf$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+4], ecx
; Line 5245
	mov	edx, DWORD PTR _epf$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN8@ssh_setup_
; Line 5246
	mov	eax, DWORD PTR _epf$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_dupstr
	add	esp, 4
	mov	edx, DWORD PTR _pf$91030[ebp]
	mov	DWORD PTR [edx+8], eax
	jmp	SHORT $LN7@ssh_setup_
$LN8@ssh_setup_:
; Line 5247
	push	149					; 00000095H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@ssh_setup_
; Line 5248
	push	OFFSET $SG91040
	call	_dupstr
	add	esp, 4
	mov	ecx, DWORD PTR _pf$91030[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 5249
	jmp	SHORT $LN7@ssh_setup_
$LN6@ssh_setup_:
; Line 5250
	push	OFFSET $SG91042
	call	_dupstr
	add	esp, 4
	mov	edx, DWORD PTR _pf$91030[ebp]
	mov	DWORD PTR [edx+8], eax
$LN7@ssh_setup_:
; Line 5252
	mov	eax, DWORD PTR _pf$91030[ebp]
	mov	ecx, DWORD PTR _epf$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], edx
; Line 5253
	mov	eax, DWORD PTR _pf$91030[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+272]
	push	edx
	call	_add234
	add	esp, 8
	cmp	eax, DWORD PTR _pf$91030[ebp]
	je	SHORT $LN4@ssh_setup_
; Line 5255
	mov	eax, DWORD PTR _epf$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _epf$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	push	OFFSET $SG91044
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 16					; 00000010H
; Line 5256
	mov	edx, DWORD PTR _pf$91030[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 5257
	jmp	$LN15@ssh_setup_
$LN4@ssh_setup_:
; Line 5259
	mov	eax, DWORD PTR _dportdesc$90988[ebp]
	push	eax
	mov	ecx, DWORD PTR _sportdesc$90987[ebp]
	push	ecx
	push	OFFSET $SG91046
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 16					; 00000010H
; Line 5261
	mov	eax, DWORD PTR _pf$91030[ebp]
	mov	ecx, DWORD PTR _sportdesc$90987[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 5262
	mov	DWORD PTR _sportdesc$90987[ebp], 0
; Line 5263
	mov	edx, DWORD PTR _epf$[ebp]
	mov	eax, DWORD PTR _pf$91030[ebp]
	mov	DWORD PTR [edx+32], eax
; Line 5264
	mov	ecx, DWORD PTR _pf$91030[ebp]
	mov	edx, DWORD PTR _epf$[ebp]
	mov	DWORD PTR [ecx+24], edx
; Line 5266
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+364], 1
	jne	SHORT $LN2@ssh_setup_
; Line 5271
	push	0
	mov	ecx, DWORD PTR _epf$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	push	1
	mov	eax, DWORD PTR _epf$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	4
	mov	edx, DWORD PTR _epf$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	1
	push	28					; 0000001cH
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_send_packet
	add	esp, 36					; 00000024H
; Line 5274
	mov	edx, DWORD PTR _pf$91030[ebp]
	push	edx
	push	OFFSET _ssh_rportfwd_succfail
	push	15					; 0000000fH
	push	14					; 0000000eH
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh_queue_handler
	add	esp, 20					; 00000014H
; Line 5275
	jmp	$LN15@ssh_setup_
$LN2@ssh_setup_:
; Line 5277
	push	80					; 00000050H
	call	_ssh2_pkt_init
	add	esp, 4
	mov	DWORD PTR _pktout$91050[ebp], eax
; Line 5278
	push	OFFSET $SG91051
	mov	ecx, DWORD PTR _pktout$91050[ebp]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 5279
	push	1
	mov	edx, DWORD PTR _pktout$91050[ebp]
	push	edx
	call	_ssh2_pkt_addbool
	add	esp, 8
; Line 5280
	mov	eax, DWORD PTR _pf$91030[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _pktout$91050[ebp]
	push	edx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 5281
	mov	eax, DWORD PTR _pf$91030[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pktout$91050[ebp]
	push	edx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 5282
	mov	eax, DWORD PTR _pktout$91050[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_pkt_send
	add	esp, 8
; Line 5286
	mov	edx, DWORD PTR _pf$91030[ebp]
	push	edx
	push	OFFSET _ssh_rportfwd_succfail
	push	82					; 00000052H
	push	81					; 00000051H
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh_queue_handler
	add	esp, 20					; 00000014H
$LN15@ssh_setup_:
; Line 5290
	mov	ecx, DWORD PTR _sportdesc$90987[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 5291
	mov	edx, DWORD PTR _dportdesc$90988[ebp]
	push	edx
	call	_safefree
	add	esp, 4
$LN20@ssh_setup_:
; Line 5293
	jmp	$LN22@ssh_setup_
$LN64@ssh_setup_:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN118@ssh_setup_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN118@ssh_setup_:
	DD	1
	DD	$LN117@ssh_setup_
$LN117@ssh_setup_:
	DD	-16					; fffffff0H
	DD	4
	DD	$LN116@ssh_setup_
$LN116@ssh_setup_:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
_ssh_setup_portfwd ENDP
; Function compile flags: /Odtp /RTCsu
_pf$ = 8						; size = 4
_free_rportfwd PROC
; Line 605
	push	ebp
	mov	ebp, esp
; Line 606
	cmp	DWORD PTR _pf$[ebp], 0
	je	SHORT $LN2@free_rport
; Line 607
	mov	eax, DWORD PTR _pf$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 608
	mov	edx, DWORD PTR _pf$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_safefree
	add	esp, 4
; Line 609
	mov	ecx, DWORD PTR _pf$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_safefree
	add	esp, 4
; Line 610
	mov	eax, DWORD PTR _pf$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
$LN2@free_rport:
; Line 612
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_free_rportfwd ENDP
; Function compile flags: /Odtp /RTCsu
_i$ = -12						; size = 4
_b$ = -8						; size = 4
_a$ = -4						; size = 4
_av$ = 8						; size = 4
_bv$ = 12						; size = 4
_ssh_rportcmp_ssh1 PROC
; Line 1014
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1015
	mov	eax, DWORD PTR _av$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 1016
	mov	ecx, DWORD PTR _bv$[ebp]
	mov	DWORD PTR _b$[ebp], ecx
; Line 1018
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_strcmp
	add	esp, 8
	mov	DWORD PTR _i$[ebp], eax
	cmp	DWORD PTR _i$[ebp], 0
	je	SHORT $LN3@ssh_rportc@2
; Line 1019
	xor	eax, eax
	cmp	DWORD PTR _i$[ebp], 0
	setge	al
	lea	eax, DWORD PTR [eax+eax-1]
	jmp	SHORT $LN4@ssh_rportc@2
$LN3@ssh_rportc@2:
; Line 1020
	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jbe	SHORT $LN2@ssh_rportc@2
; Line 1021
	mov	eax, 1
	jmp	SHORT $LN4@ssh_rportc@2
$LN2@ssh_rportc@2:
; Line 1022
	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jae	SHORT $LN1@ssh_rportc@2
; Line 1023
	or	eax, -1
	jmp	SHORT $LN4@ssh_rportc@2
$LN1@ssh_rportc@2:
; Line 1024
	xor	eax, eax
$LN4@ssh_rportc@2:
; Line 1025
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_rportcmp_ssh1 ENDP
; Function compile flags: /Odtp /RTCsu
_i$ = -12						; size = 4
_b$ = -8						; size = 4
_a$ = -4						; size = 4
_av$ = 8						; size = 4
_bv$ = 12						; size = 4
_ssh_portcmp PROC
; Line 1057
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1058
	mov	eax, DWORD PTR _av$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 1059
	mov	ecx, DWORD PTR _bv$[ebp]
	mov	DWORD PTR _b$[ebp], ecx
; Line 1061
	mov	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN11@ssh_portcm
; Line 1062
	mov	eax, 1
	jmp	$LN12@ssh_portcm
$LN11@ssh_portcm:
; Line 1063
	mov	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN10@ssh_portcm
; Line 1064
	or	eax, -1
	jmp	$LN12@ssh_portcm
$LN10@ssh_portcm:
; Line 1065
	mov	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [edx+36]
	cmp	ecx, DWORD PTR [eax+36]
	jle	SHORT $LN9@ssh_portcm
; Line 1066
	mov	eax, 1
	jmp	$LN12@ssh_portcm
$LN9@ssh_portcm:
; Line 1067
	mov	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [edx+36]
	cmp	ecx, DWORD PTR [eax+36]
	jge	SHORT $LN8@ssh_portcm
; Line 1068
	or	eax, -1
	jmp	$LN12@ssh_portcm
$LN8@ssh_portcm:
; Line 1069
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	_nullstrcmp
	add	esp, 8
	mov	DWORD PTR _i$[ebp], eax
	cmp	DWORD PTR _i$[ebp], 0
	je	SHORT $LN7@ssh_portcm
; Line 1070
	xor	eax, eax
	cmp	DWORD PTR _i$[ebp], 0
	setge	al
	lea	eax, DWORD PTR [eax+eax-1]
	jmp	$LN12@ssh_portcm
$LN7@ssh_portcm:
; Line 1071
	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jbe	SHORT $LN6@ssh_portcm
; Line 1072
	mov	eax, 1
	jmp	SHORT $LN12@ssh_portcm
$LN6@ssh_portcm:
; Line 1073
	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jae	SHORT $LN5@ssh_portcm
; Line 1074
	or	eax, -1
	jmp	SHORT $LN12@ssh_portcm
$LN5@ssh_portcm:
; Line 1075
	mov	eax, DWORD PTR _a$[ebp]
	cmp	DWORD PTR [eax+4], 68			; 00000044H
	je	SHORT $LN4@ssh_portcm
; Line 1076
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_nullstrcmp
	add	esp, 8
	mov	DWORD PTR _i$[ebp], eax
	cmp	DWORD PTR _i$[ebp], 0
	je	SHORT $LN3@ssh_portcm
; Line 1077
	xor	eax, eax
	cmp	DWORD PTR _i$[ebp], 0
	setge	al
	lea	eax, DWORD PTR [eax+eax-1]
	jmp	SHORT $LN12@ssh_portcm
$LN3@ssh_portcm:
; Line 1078
	mov	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	cmp	ecx, DWORD PTR [eax+12]
	jbe	SHORT $LN2@ssh_portcm
; Line 1079
	mov	eax, 1
	jmp	SHORT $LN12@ssh_portcm
$LN2@ssh_portcm:
; Line 1080
	mov	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	cmp	ecx, DWORD PTR [eax+12]
	jae	SHORT $LN4@ssh_portcm
; Line 1081
	or	eax, -1
	jmp	SHORT $LN12@ssh_portcm
$LN4@ssh_portcm:
; Line 1083
	xor	eax, eax
$LN12@ssh_portcm:
; Line 1084
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_portcmp ENDP
; Function compile flags: /Odtp /RTCsu
_a$ = 8						; size = 4
_b$ = 12						; size = 4
_nullstrcmp PROC
; Line 1046
	push	ebp
	mov	ebp, esp
; Line 1047
	cmp	DWORD PTR _a$[ebp], 0
	jne	SHORT $LN3@nullstrcmp
	cmp	DWORD PTR _b$[ebp], 0
	jne	SHORT $LN3@nullstrcmp
; Line 1048
	xor	eax, eax
	jmp	SHORT $LN4@nullstrcmp
$LN3@nullstrcmp:
; Line 1049
	cmp	DWORD PTR _a$[ebp], 0
	jne	SHORT $LN2@nullstrcmp
; Line 1050
	or	eax, -1
	jmp	SHORT $LN4@nullstrcmp
$LN2@nullstrcmp:
; Line 1051
	cmp	DWORD PTR _b$[ebp], 0
	jne	SHORT $LN1@nullstrcmp
; Line 1052
	mov	eax, 1
	jmp	SHORT $LN4@nullstrcmp
$LN1@nullstrcmp:
; Line 1053
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
$LN4@nullstrcmp:
; Line 1054
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_nullstrcmp ENDP
; Function compile flags: /Odtp /RTCsu
_pf$ = -8						; size = 4
_rpf$ = -4						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ctx$ = 16						; size = 4
_ssh_rportfwd_succfail PROC
; Line 4918
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 4919
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _pf$[ebp], eax
; Line 4922
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+364]
	sub	edx, 1
	neg	edx
	sbb	edx, edx
	and	edx, 67					; 00000043H
	add	edx, 14					; 0000000eH
	mov	eax, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [eax+8], edx
	jne	SHORT $LN2@ssh_rportf
; Line 4924
	mov	ecx, DWORD PTR _pf$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	push	OFFSET $SG90834
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 4925
	jmp	SHORT $LN3@ssh_rportf
$LN2@ssh_rportf:
; Line 4927
	mov	ecx, DWORD PTR _pf$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	push	OFFSET $SG90836
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 4929
	mov	ecx, DWORD PTR _pf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+272]
	push	eax
	call	_del234
	add	esp, 8
	mov	DWORD PTR _rpf$[ebp], eax
; Line 4930
	mov	ecx, DWORD PTR _rpf$[ebp]
	cmp	ecx, DWORD PTR _pf$[ebp]
	je	SHORT $LN5@ssh_rportf
	push	4930					; 00001342H
	push	OFFSET $SG90838
	push	OFFSET $SG90839
	call	__wassert
	add	esp, 12					; 0000000cH
$LN5@ssh_rportf:
; Line 4931
	mov	eax, DWORD PTR _pf$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [ecx+32], 0
; Line 4932
	mov	edx, DWORD PTR _pf$[ebp]
	push	edx
	call	_free_rportfwd
	add	esp, 4
$LN3@ssh_rportf:
; Line 4934
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_rportfwd_succfail ENDP
_TEXT	ENDS
EXTRN	_pfd_unthrottle:PROC
EXTRN	_x11_unthrottle:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv71 = -8						; size = 4
_bufsize$ = -4						; size = 4
_ssh$ = 8						; size = 4
_c$ = 12						; size = 4
_ssh2_try_send_and_unthrottle PROC
; Line 7157
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 7159
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	and	ecx, 1
	je	SHORT $LN8@ssh2_try_s@2
; Line 7160
	jmp	SHORT $LN9@ssh2_try_s@2
$LN8@ssh2_try_s@2:
; Line 7161
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	call	_ssh2_try_send
	add	esp, 4
	mov	DWORD PTR _bufsize$[ebp], eax
; Line 7162
	cmp	DWORD PTR _bufsize$[ebp], 0
	jne	SHORT $LN9@ssh2_try_s@2
; Line 7163
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR tv71[ebp], ecx
	cmp	DWORD PTR tv71[ebp], 1
	je	SHORT $LN3@ssh2_try_s@2
	cmp	DWORD PTR tv71[ebp], 3
	je	SHORT $LN1@ssh2_try_s@2
	jmp	SHORT $LN9@ssh2_try_s@2
; Line 7167
	jmp	SHORT $LN9@ssh2_try_s@2
$LN3@ssh2_try_s@2:
; Line 7169
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	call	_x11_unthrottle
	add	esp, 4
; Line 7170
	jmp	SHORT $LN9@ssh2_try_s@2
; Line 7174
	jmp	SHORT $LN9@ssh2_try_s@2
$LN1@ssh2_try_s@2:
; Line 7176
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	_pfd_unthrottle
	add	esp, 4
$LN9@ssh2_try_s@2:
; Line 7180
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_try_send_and_unthrottle ENDP
; Function compile flags: /Odtp /RTCsu
tv76 = -8						; size = 4
_ssh$ = -4						; size = 4
_c$ = 8							; size = 4
_ssh2_channel_init PROC
; Line 7199
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 7200
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ssh$[ebp], ecx
; Line 7201
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_alloc_channel_id
	add	esp, 4
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 7202
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+20], 0
; Line 7203
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 7204
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+28], 0
; Line 7206
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_is_simple
	add	esp, 4
	neg	eax
	sbb	eax, eax
	and	eax, 2147467263				; 7fffbfffH
	add	eax, 16384				; 00004000H
	mov	DWORD PTR tv76[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR tv76[ebp]
	mov	DWORD PTR [eax+60], ecx
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR [edx+56], eax
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR [ecx+52], edx
; Line 7207
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+64], 0
; Line 7208
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+72], 2
; Line 7209
	mov	edx, DWORD PTR _c$[ebp]
	add	edx, 32					; 00000020H
	push	edx
	call	_bufchain_init
	add	esp, 4
; Line 7210
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_channel_init ENDP
_TEXT	ENDS
EXTRN	_find234:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$88260 = -32						; size = 4
_c$ = -24						; size = 4
_tsize$ = -20						; size = 4
_mid$ = -16						; size = 4
_high$ = -12						; size = 4
_low$ = -8						; size = 4
_CHANNEL_NUMBER_OFFSET$ = -4				; size = 4
_ssh$ = 8						; size = 4
_alloc_channel_id PROC
; Line 1087
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1088
	mov	DWORD PTR _CHANNEL_NUMBER_OFFSET$[ebp], 256 ; 00000100H
; Line 1101
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+248]
	push	ecx
	call	_count234
	add	esp, 4
	mov	DWORD PTR _tsize$[ebp], eax
; Line 1103
	mov	DWORD PTR _low$[ebp], -1
; Line 1104
	mov	edx, DWORD PTR _tsize$[ebp]
	mov	DWORD PTR _high$[ebp], edx
$LN4@alloc_chan:
; Line 1105
	mov	eax, DWORD PTR _high$[ebp]
	sub	eax, DWORD PTR _low$[ebp]
	cmp	eax, 1
	jbe	SHORT $LN3@alloc_chan
; Line 1106
	mov	ecx, DWORD PTR _high$[ebp]
	add	ecx, DWORD PTR _low$[ebp]
	shr	ecx, 1
	mov	DWORD PTR _mid$[ebp], ecx
; Line 1107
	mov	edx, DWORD PTR _mid$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+248]
	push	ecx
	call	_index234
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
; Line 1108
	mov	edx, DWORD PTR _mid$[ebp]
	add	edx, DWORD PTR _CHANNEL_NUMBER_OFFSET$[ebp]
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax+8], edx
	jne	SHORT $LN2@alloc_chan
; Line 1109
	mov	ecx, DWORD PTR _mid$[ebp]
	mov	DWORD PTR _low$[ebp], ecx
; Line 1110
	jmp	SHORT $LN1@alloc_chan
$LN2@alloc_chan:
; Line 1111
	mov	edx, DWORD PTR _mid$[ebp]
	mov	DWORD PTR _high$[ebp], edx
$LN1@alloc_chan:
; Line 1112
	jmp	SHORT $LN4@alloc_chan
$LN3@alloc_chan:
; Line 1118
	mov	eax, DWORD PTR _CHANNEL_NUMBER_OFFSET$[ebp]
	mov	ecx, DWORD PTR _low$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _i$88260[ebp], edx
; Line 1119
	push	OFFSET _ssh_channelfind
	lea	eax, DWORD PTR _i$88260[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+248]
	push	edx
	call	_find234
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN7@alloc_chan
	push	1119					; 0000045fH
	push	OFFSET $SG88263
	push	OFFSET $SG88264
	call	__wassert
	add	esp, 12					; 0000000cH
$LN7@alloc_chan:
; Line 1121
	mov	ecx, DWORD PTR _CHANNEL_NUMBER_OFFSET$[ebp]
	mov	edx, DWORD PTR _low$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1]
; Line 1122
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@alloc_chan
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@alloc_chan:
	DD	1
	DD	$LN9@alloc_chan
$LN9@alloc_chan:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN8@alloc_chan
$LN8@alloc_chan:
	DB	105					; 00000069H
	DB	0
_alloc_channel_id ENDP
; Function compile flags: /Odtp /RTCsu
_b$ = -8						; size = 4
_a$ = -4						; size = 4
_av$ = 8						; size = 4
_bv$ = 12						; size = 4
_ssh_channelfind PROC
; Line 1003
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1004
	mov	eax, DWORD PTR _av$[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 1005
	mov	ecx, DWORD PTR _bv$[ebp]
	mov	DWORD PTR _b$[ebp], ecx
; Line 1006
	mov	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN2@ssh_channe@4
; Line 1007
	or	eax, -1
	jmp	SHORT $LN3@ssh_channe@4
$LN2@ssh_channe@4:
; Line 1008
	mov	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax+8]
	jbe	SHORT $LN1@ssh_channe@4
; Line 1009
	mov	eax, 1
	jmp	SHORT $LN3@ssh_channe@4
$LN1@ssh_channe@4:
; Line 1010
	xor	eax, eax
$LN3@ssh_channe@4:
; Line 1011
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_channelfind ENDP
; Function compile flags: /Odtp /RTCsu
_pktout$ = -4						; size = 4
_c$ = 8							; size = 4
_type$ = 12						; size = 4
_ssh2_chanopen_init PROC
; Line 7216
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 7219
	push	90					; 0000005aH
	call	_ssh2_pkt_init
	add	esp, 4
	mov	DWORD PTR _pktout$[ebp], eax
; Line 7220
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 7221
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 7222
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+52]
	push	eax
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 7223
	push	16384					; 00004000H
	mov	edx, DWORD PTR _pktout$[ebp]
	push	edx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 7224
	mov	eax, DWORD PTR _pktout$[ebp]
; Line 7225
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_chanopen_init ENDP
; Function compile flags: /Odtp /RTCsu
_ocr$ = -8						; size = 4
_c$ = -4						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh2_msg_channel_response PROC
; Line 7405
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 7406
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_channel_msg
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
; Line 7409
	cmp	DWORD PTR _c$[ebp], 0
	jne	SHORT $LN3@ssh2_msg_c
	jmp	$LN4@ssh2_msg_c
$LN3@ssh2_msg_c:
; Line 7410
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+12], 5
	jne	SHORT $LN2@ssh2_msg_c
; Line 7412
	mov	eax, DWORD PTR _pktin$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_share_got_pkt_from_server
	add	esp, 16					; 00000010H
; Line 7413
	jmp	SHORT $LN4@ssh2_msg_c
$LN2@ssh2_msg_c:
; Line 7415
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+64]
	mov	DWORD PTR _ocr$[ebp], eax
; Line 7416
	cmp	DWORD PTR _ocr$[ebp], 0
	jne	SHORT $LN1@ssh2_msg_c
; Line 7417
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_msg_unexpected
	add	esp, 8
; Line 7418
	jmp	SHORT $LN4@ssh2_msg_c
$LN1@ssh2_msg_c:
; Line 7420
	mov	esi, esp
	mov	eax, DWORD PTR _ocr$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ocr$[ebp]
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 7421
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _ocr$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+64], edx
; Line 7422
	mov	eax, DWORD PTR _ocr$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 7428
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	call	_ssh2_channel_check_close
	add	esp, 4
$LN4@ssh2_msg_c:
; Line 7429
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_msg_channel_response ENDP
; Function compile flags: /Odtp /RTCsu
tv83 = -24						; size = 4
_buf$92249 = -20					; size = 4
_c$ = -16						; size = 4
_localid$ = -8						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh2_channel_msg PROC
; Line 7360
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 7361
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	DWORD PTR _localid$[ebp], eax
; Line 7364
	push	OFFSET _ssh_channelfind
	lea	ecx, DWORD PTR _localid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+248]
	push	eax
	call	_find234
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _c$[ebp], eax
; Line 7368
	cmp	DWORD PTR _c$[ebp], 0
	je	SHORT $LN1@ssh2_chann@2
	mov	ecx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [ecx+12], 5
	je	$LN2@ssh2_chann@2
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	$LN2@ssh2_chann@2
	mov	eax, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [eax+8], 91			; 0000005bH
	je	$LN2@ssh2_chann@2
	mov	ecx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [ecx+8], 92			; 0000005cH
	je	SHORT $LN2@ssh2_chann@2
$LN1@ssh2_chann@2:
; Line 7372
	cmp	DWORD PTR _c$[ebp], 0
	je	SHORT $LN5@ssh2_chann@2
	mov	DWORD PTR tv83[ebp], OFFSET $SG92250
	jmp	SHORT $LN6@ssh2_chann@2
$LN5@ssh2_chann@2:
	mov	DWORD PTR tv83[ebp], OFFSET $SG92251
$LN6@ssh2_chann@2:
	mov	edx, DWORD PTR _localid$[ebp]
	push	edx
	mov	eax, DWORD PTR tv83[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+348]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+344]
	push	eax
	call	_ssh2_pkt_type
	add	esp, 12					; 0000000cH
	push	eax
	push	OFFSET $SG92252
	call	_dupprintf
	add	esp, 16					; 00000010H
	mov	DWORD PTR _buf$92249[ebp], eax
; Line 7373
	push	0
	push	2
	mov	ecx, DWORD PTR _buf$92249[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_disconnect
	add	esp, 20					; 00000014H
; Line 7374
	mov	eax, DWORD PTR _buf$92249[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 7375
	xor	eax, eax
	jmp	SHORT $LN3@ssh2_chann@2
$LN2@ssh2_chann@2:
; Line 7377
	mov	eax, DWORD PTR _c$[ebp]
$LN3@ssh2_chann@2:
; Line 7378
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@ssh2_chann@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@ssh2_chann@2:
	DD	1
	DD	$LN8@ssh2_chann@2
$LN8@ssh2_chann@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN7@ssh2_chann@2
$LN7@ssh2_chann@2:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
_ssh2_channel_msg ENDP
; Function compile flags: /Odtp /RTCsu
_c$ = -4						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh2_msg_channel_window_adjust PROC
; Line 7432
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 7434
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_channel_msg
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
; Line 7435
	cmp	DWORD PTR _c$[ebp], 0
	jne	SHORT $LN3@ssh2_msg_c@2
; Line 7436
	jmp	SHORT $LN4@ssh2_msg_c@2
$LN3@ssh2_msg_c@2:
; Line 7437
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+12], 5
	jne	SHORT $LN2@ssh2_msg_c@2
; Line 7439
	mov	eax, DWORD PTR _pktin$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_share_got_pkt_from_server
	add	esp, 16					; 00000010H
; Line 7440
	jmp	SHORT $LN4@ssh2_msg_c@2
$LN2@ssh2_msg_c@2:
; Line 7442
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+20]
	and	eax, 1
	jne	SHORT $LN4@ssh2_msg_c@2
; Line 7443
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	edx, DWORD PTR _c$[ebp]
	add	eax, DWORD PTR [edx+44]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+44], eax
; Line 7444
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_try_send_and_unthrottle
	add	esp, 8
$LN4@ssh2_msg_c@2:
; Line 7446
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_msg_channel_window_adjust ENDP
_TEXT	ENDS
EXTRN	_pfd_send:PROC
EXTRN	_x11_send:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv257 = -80						; size = 4
tv207 = -76						; size = 4
tv153 = -72						; size = 4
tv93 = -68						; size = 4
_replylen$92331 = -60					; size = 4
_reply$92330 = -48					; size = 4
_l$92326 = -40						; size = 4
_l$92311 = -36						; size = 4
_bufsize$92298 = -32					; size = 4
_c$ = -28						; size = 4
_length$ = -20						; size = 4
_data$ = -8						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh2_msg_channel_data PROC
; Line 7449
	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	edi
	lea	edi, DWORD PTR [ebp-80]
	mov	ecx, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 7453
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_channel_msg
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
; Line 7454
	cmp	DWORD PTR _c$[ebp], 0
	jne	SHORT $LN20@ssh2_msg_c@3
; Line 7455
	jmp	$LN21@ssh2_msg_c@3
$LN20@ssh2_msg_c@3:
; Line 7456
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+12], 5
	jne	SHORT $LN19@ssh2_msg_c@3
; Line 7458
	mov	eax, DWORD PTR _pktin$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_share_got_pkt_from_server
	add	esp, 16					; 00000010H
; Line 7459
	jmp	$LN21@ssh2_msg_c@3
$LN19@ssh2_msg_c@3:
; Line 7462
	mov	edx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [edx+8], 95			; 0000005fH
	jne	SHORT $LN18@ssh2_msg_c@3
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getuint32
	add	esp, 4
	cmp	eax, 1
	je	SHORT $LN18@ssh2_msg_c@3
; Line 7463
	jmp	$LN21@ssh2_msg_c@3
$LN18@ssh2_msg_c@3:
; Line 7464
	lea	ecx, DWORD PTR _length$[ebp]
	push	ecx
	lea	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 7465
	cmp	DWORD PTR _data$[ebp], 0
	je	$LN21@ssh2_msg_c@3
; Line 7466
	mov	DWORD PTR _bufsize$92298[ebp], 0
; Line 7467
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	sub	edx, DWORD PTR _length$[ebp]
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+52], edx
; Line 7468
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	sub	edx, DWORD PTR _length$[ebp]
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+60], edx
; Line 7469
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR tv93[ebp], edx
	cmp	DWORD PTR tv93[ebp], 3
	ja	$LN15@ssh2_msg_c@3
	mov	eax, DWORD PTR tv93[ebp]
	jmp	DWORD PTR $LN35@ssh2_msg_c@3[eax*4]
$LN14@ssh2_msg_c@3:
; Line 7474
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	eax, DWORD PTR _pktin$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+8], 95			; 0000005fH
	sete	cl
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_from_backend
	add	esp, 16					; 00000010H
	mov	DWORD PTR _bufsize$92298[ebp], eax
; Line 7475
	jmp	$LN15@ssh2_msg_c@3
$LN13@ssh2_msg_c@3:
; Line 7477
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_x11_send
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bufsize$92298[ebp], eax
; Line 7478
	jmp	$LN15@ssh2_msg_c@3
$LN12@ssh2_msg_c@3:
; Line 7480
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	_pfd_send
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bufsize$92298[ebp], eax
; Line 7481
	jmp	$LN15@ssh2_msg_c@3
$LN10@ssh2_msg_c@3:
; Line 7483
	cmp	DWORD PTR _length$[ebp], 0
	jle	$LN9@ssh2_msg_c@3
; Line 7484
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax+84], 4
	jae	SHORT $LN8@ssh2_msg_c@3
; Line 7486
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, 4
	sub	edx, DWORD PTR [ecx+84]
	cmp	edx, DWORD PTR _length$[ebp]
	jae	SHORT $LN23@ssh2_msg_c@3
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, 4
	sub	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR tv153[ebp], ecx
	jmp	SHORT $LN24@ssh2_msg_c@3
$LN23@ssh2_msg_c@3:
	mov	edx, DWORD PTR _length$[ebp]
	mov	DWORD PTR tv153[ebp], edx
$LN24@ssh2_msg_c@3:
	mov	eax, DWORD PTR tv153[ebp]
	mov	DWORD PTR _l$92311[ebp], eax
; Line 7488
	mov	ecx, DWORD PTR _l$92311[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	edx, DWORD PTR _c$[ebp]
	lea	eax, DWORD PTR [edx+ecx+80]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 7489
	mov	ecx, DWORD PTR _data$[ebp]
	add	ecx, DWORD PTR _l$92311[ebp]
	mov	DWORD PTR _data$[ebp], ecx
; Line 7490
	mov	edx, DWORD PTR _length$[ebp]
	sub	edx, DWORD PTR _l$92311[ebp]
	mov	DWORD PTR _length$[ebp], edx
; Line 7491
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	add	ecx, DWORD PTR _l$92311[ebp]
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+84], ecx
$LN8@ssh2_msg_c@3:
; Line 7493
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax+84], 4
	jne	SHORT $LN7@ssh2_msg_c@3
; Line 7495
	mov	ecx, DWORD PTR _c$[ebp]
	movzx	edx, BYTE PTR [ecx+80]
	shl	edx, 24					; 00000018H
	mov	eax, DWORD PTR _c$[ebp]
	movzx	ecx, BYTE PTR [eax+81]
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	mov	eax, DWORD PTR _c$[ebp]
	movzx	ecx, BYTE PTR [eax+82]
	shl	ecx, 8
	or	edx, ecx
	mov	eax, DWORD PTR _c$[ebp]
	movzx	ecx, BYTE PTR [eax+83]
	or	edx, ecx
	add	edx, 4
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+88], edx
; Line 7497
	push	1
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	push	edx
	call	_safemalloc
	add	esp, 8
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+76], eax
; Line 7498
	push	4
	mov	edx, DWORD PTR _c$[ebp]
	add	edx, 80					; 00000050H
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN7@ssh2_msg_c@3:
; Line 7500
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+84], 4
	jb	SHORT $LN6@ssh2_msg_c@3
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN6@ssh2_msg_c@3
; Line 7503
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [eax+88]
	sub	edx, DWORD PTR [ecx+84]
	cmp	edx, DWORD PTR _length$[ebp]
	jae	SHORT $LN25@ssh2_msg_c@3
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [eax+88]
	sub	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR tv207[ebp], edx
	jmp	SHORT $LN26@ssh2_msg_c@3
$LN25@ssh2_msg_c@3:
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR tv207[ebp], eax
$LN26@ssh2_msg_c@3:
	mov	ecx, DWORD PTR tv207[ebp]
	mov	DWORD PTR _l$92326[ebp], ecx
; Line 7505
	mov	edx, DWORD PTR _l$92326[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	eax, DWORD PTR _c$[ebp]
	add	edx, DWORD PTR [eax+84]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 7506
	mov	ecx, DWORD PTR _data$[ebp]
	add	ecx, DWORD PTR _l$92326[ebp]
	mov	DWORD PTR _data$[ebp], ecx
; Line 7507
	mov	edx, DWORD PTR _length$[ebp]
	sub	edx, DWORD PTR _l$92326[ebp]
	mov	DWORD PTR _length$[ebp], edx
; Line 7508
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	add	ecx, DWORD PTR _l$92326[ebp]
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+84], ecx
$LN6@ssh2_msg_c@3:
; Line 7510
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [eax+84]
	cmp	edx, DWORD PTR [ecx+88]
	jne	SHORT $LN5@ssh2_msg_c@3
; Line 7513
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	add	ecx, 1
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+92], ecx
; Line 7517
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	push	OFFSET _ssh_agentf_callback
	lea	ecx, DWORD PTR _replylen$92331[ebp]
	push	ecx
	lea	edx, DWORD PTR _reply$92330[ebp]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	call	_agent_query
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN4@ssh2_msg_c@3
; Line 7518
	mov	ecx, DWORD PTR _replylen$92331[ebp]
	push	ecx
	mov	edx, DWORD PTR _reply$92330[ebp]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_ssh_agentf_callback
	add	esp, 12					; 0000000cH
$LN4@ssh2_msg_c@3:
; Line 7519
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	_safefree
	add	esp, 4
; Line 7520
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+76], 0
; Line 7521
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+84], 0
$LN5@ssh2_msg_c@3:
; Line 7523
	jmp	$LN10@ssh2_msg_c@3
$LN9@ssh2_msg_c@3:
; Line 7524
	mov	DWORD PTR _bufsize$92298[ebp], 0
$LN15@ssh2_msg_c@3:
; Line 7533
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+60], 0
	jg	SHORT $LN3@ssh2_msg_c@3
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax+72], 2
	jne	SHORT $LN3@ssh2_msg_c@3
	mov	ecx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [ecx+56], 1073741824		; 40000000H
	jge	SHORT $LN3@ssh2_msg_c@3
; Line 7534
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+56]
	add	eax, 16384				; 00004000H
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+56], eax
$LN3@ssh2_msg_c@3:
; Line 7543
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR _bufsize$92298[ebp]
	cmp	eax, DWORD PTR [edx+56]
	jge	SHORT $LN27@ssh2_msg_c@3
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	sub	edx, DWORD PTR _bufsize$92298[ebp]
	mov	DWORD PTR tv257[ebp], edx
	jmp	SHORT $LN28@ssh2_msg_c@3
$LN27@ssh2_msg_c@3:
	mov	DWORD PTR tv257[ebp], 0
$LN28@ssh2_msg_c@3:
	mov	eax, DWORD PTR tv257[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	call	_ssh2_set_window
	add	esp, 8
; Line 7550
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR _bufsize$92298[ebp]
	cmp	eax, DWORD PTR [edx+56]
	jg	SHORT $LN1@ssh2_msg_c@3
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_is_simple
	add	esp, 4
	test	eax, eax
	je	SHORT $LN21@ssh2_msg_c@3
	cmp	DWORD PTR _bufsize$92298[ebp], 0
	jle	SHORT $LN21@ssh2_msg_c@3
$LN1@ssh2_msg_c@3:
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+28], 0
	jne	SHORT $LN21@ssh2_msg_c@3
; Line 7551
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+28], 1
; Line 7552
	push	1
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_throttle_conn
	add	esp, 8
$LN21@ssh2_msg_c@3:
; Line 7555
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN34@ssh2_msg_c@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 80					; 00000050H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN34@ssh2_msg_c@3:
	DD	4
	DD	$LN33@ssh2_msg_c@3
$LN33@ssh2_msg_c@3:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN29@ssh2_msg_c@3
	DD	-20					; ffffffecH
	DD	4
	DD	$LN30@ssh2_msg_c@3
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN31@ssh2_msg_c@3
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN32@ssh2_msg_c@3
$LN32@ssh2_msg_c@3:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	121					; 00000079H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN31@ssh2_msg_c@3:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	121					; 00000079H
	DB	0
$LN30@ssh2_msg_c@3:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN29@ssh2_msg_c@3:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
	npad	1
$LN35@ssh2_msg_c@3:
	DD	$LN14@ssh2_msg_c@3
	DD	$LN13@ssh2_msg_c@3
	DD	$LN10@ssh2_msg_c@3
	DD	$LN12@ssh2_msg_c@3
_ssh2_msg_channel_data ENDP
; Function compile flags: /Odtp /RTCsu
_sentreply$ = -12					; size = 4
_ssh$ = -8						; size = 4
_c$ = -4						; size = 4
_cv$ = 8						; size = 4
_reply$ = 12						; size = 4
_replylen$ = 16						; size = 4
_ssh_agentf_callback PROC
; Line 3626
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 3627
	mov	eax, DWORD PTR _cv$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 3628
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _ssh$[ebp], edx
; Line 3629
	mov	eax, DWORD PTR _reply$[ebp]
	mov	DWORD PTR _sentreply$[ebp], eax
; Line 3631
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	sub	edx, 1
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+92], edx
; Line 3632
	cmp	DWORD PTR _sentreply$[ebp], 0
	jne	SHORT $LN5@ssh_agentf
; Line 3634
	mov	DWORD PTR _sentreply$[ebp], OFFSET $SG89962
; Line 3635
	mov	DWORD PTR _replylen$[ebp], 5
$LN5@ssh_agentf:
; Line 3637
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+364], 2
	jne	SHORT $LN4@ssh_agentf
; Line 3638
	mov	edx, DWORD PTR _replylen$[ebp]
	push	edx
	mov	eax, DWORD PTR _sentreply$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	call	_ssh2_add_channel_data
	add	esp, 12					; 0000000cH
; Line 3639
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	call	_ssh2_try_send
	add	esp, 4
; Line 3640
	jmp	SHORT $LN3@ssh_agentf
$LN4@ssh_agentf:
; Line 3645
	push	0
	mov	eax, DWORD PTR _replylen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sentreply$[ebp]
	push	ecx
	push	3
	mov	edx, DWORD PTR _replylen$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	1
	push	23					; 00000017H
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_send_packet
	add	esp, 40					; 00000028H
$LN3@ssh_agentf:
; Line 3647
	cmp	DWORD PTR _reply$[ebp], 0
	je	SHORT $LN2@ssh_agentf
; Line 3648
	mov	eax, DWORD PTR _reply$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
$LN2@ssh_agentf:
; Line 3653
	mov	ecx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [ecx+92], 0
	jne	SHORT $LN6@ssh_agentf
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+20]
	and	eax, 4
	je	SHORT $LN6@ssh_agentf
; Line 3654
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	call	_sshfwd_write_eof
	add	esp, 4
$LN6@ssh_agentf:
; Line 3655
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_agentf_callback ENDP
; Function compile flags: /Odtp /RTCsu
_c$ = -4						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh2_msg_channel_eof PROC
; Line 7717
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 7720
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_channel_msg
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
; Line 7721
	cmp	DWORD PTR _c$[ebp], 0
	jne	SHORT $LN2@ssh2_msg_c@4
; Line 7722
	jmp	SHORT $LN3@ssh2_msg_c@4
$LN2@ssh2_msg_c@4:
; Line 7723
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+12], 5
	jne	SHORT $LN1@ssh2_msg_c@4
; Line 7725
	mov	eax, DWORD PTR _pktin$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_share_got_pkt_from_server
	add	esp, 16					; 00000010H
; Line 7726
	jmp	SHORT $LN3@ssh2_msg_c@4
$LN1@ssh2_msg_c@4:
; Line 7728
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	call	_ssh2_channel_got_eof
	add	esp, 4
$LN3@ssh2_msg_c@4:
; Line 7729
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_msg_channel_eof ENDP
_TEXT	ENDS
EXTRN	_from_backend_eof:PROC
EXTRN	_pfd_send_eof:PROC
EXTRN	_x11_send_eof:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ssh$92424 = -4						; size = 4
_c$ = 8							; size = 4
_ssh2_channel_got_eof PROC
; Line 7681
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 7682
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	and	ecx, 4
	je	SHORT $LN11@ssh2_chann@3
; Line 7683
	jmp	$LN12@ssh2_chann@3
$LN11@ssh2_chann@3:
; Line 7684
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+20]
	or	eax, 4
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 7686
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+12], 1
	jne	SHORT $LN10@ssh2_chann@3
; Line 7687
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_x11_send_eof
	add	esp, 4
	jmp	$LN9@ssh2_chann@3
$LN10@ssh2_chann@3:
; Line 7688
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+12], 2
	jne	SHORT $LN8@ssh2_chann@3
; Line 7689
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax+92], 0
	jne	SHORT $LN7@ssh2_chann@3
; Line 7691
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	call	_sshfwd_write_eof
	add	esp, 4
$LN7@ssh2_chann@3:
; Line 7692
	jmp	SHORT $LN9@ssh2_chann@3
$LN8@ssh2_chann@3:
; Line 7693
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+12], 3
	jne	SHORT $LN5@ssh2_chann@3
; Line 7694
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_pfd_send_eof
	add	esp, 4
	jmp	SHORT $LN9@ssh2_chann@3
$LN5@ssh2_chann@3:
; Line 7695
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+12], 0
	jne	SHORT $LN9@ssh2_chann@3
; Line 7696
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ssh$92424[ebp], ecx
; Line 7699
	mov	edx, DWORD PTR _ssh$92424[ebp]
	cmp	DWORD PTR [edx+292], 0
	jne	SHORT $LN2@ssh2_chann@3
	mov	eax, DWORD PTR _ssh$92424[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_from_backend_eof
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@ssh2_chann@3
	mov	edx, DWORD PTR _ssh$92424[ebp]
	cmp	DWORD PTR [edx+296], 0
	je	SHORT $LN2@ssh2_chann@3
$LN1@ssh2_chann@3:
; Line 7708
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_sshfwd_write_eof
	add	esp, 4
$LN2@ssh2_chann@3:
; Line 7710
	mov	ecx, DWORD PTR _ssh$92424[ebp]
	mov	DWORD PTR [ecx+292], 1
$LN9@ssh2_chann@3:
; Line 7713
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	call	_ssh2_channel_check_close
	add	esp, 4
$LN12@ssh2_chann@3:
; Line 7714
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_channel_got_eof ENDP
; Function compile flags: /Odtp /RTCsu
tv95 = -12						; size = 4
_ocr$92449 = -8						; size = 4
_c$ = -4						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh2_msg_channel_close PROC
; Line 7732
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 7735
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_channel_msg
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
; Line 7736
	cmp	DWORD PTR _c$[ebp], 0
	jne	SHORT $LN12@ssh2_msg_c@5
; Line 7737
	jmp	$LN13@ssh2_msg_c@5
$LN12@ssh2_msg_c@5:
; Line 7738
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+12], 5
	jne	SHORT $LN11@ssh2_msg_c@5
; Line 7740
	mov	eax, DWORD PTR _pktin$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_share_got_pkt_from_server
	add	esp, 16					; 00000010H
; Line 7741
	jmp	$LN13@ssh2_msg_c@5
$LN11@ssh2_msg_c@5:
; Line 7748
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	call	_ssh2_channel_got_eof
	add	esp, 4
; Line 7750
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	and	ecx, 2048				; 00000800H
	jne	SHORT $LN10@ssh2_msg_c@5
$LN9@ssh2_msg_c@5:
; Line 7757
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+64], 0
	je	SHORT $LN10@ssh2_msg_c@5
; Line 7758
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR _ocr$92449[ebp], ecx
; Line 7759
	mov	esi, esp
	mov	edx, DWORD PTR _ocr$92449[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	push	0
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ocr$92449[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 7760
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR _ocr$92449[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+64], eax
; Line 7761
	mov	ecx, DWORD PTR _ocr$92449[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 7762
	jmp	SHORT $LN9@ssh2_msg_c@5
$LN10@ssh2_msg_c@5:
; Line 7772
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+20]
	and	eax, 1
	jne	SHORT $LN7@ssh2_msg_c@5
; Line 7777
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR tv95[ebp], edx
	cmp	DWORD PTR tv95[ebp], 0
	je	SHORT $LN4@ssh2_msg_c@5
	cmp	DWORD PTR tv95[ebp], 1
	je	SHORT $LN3@ssh2_msg_c@5
	cmp	DWORD PTR tv95[ebp], 3
	je	SHORT $LN2@ssh2_msg_c@5
	jmp	SHORT $LN5@ssh2_msg_c@5
$LN4@ssh2_msg_c@5:
; Line 7779
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+216], 0
; Line 7780
	jmp	SHORT $LN5@ssh2_msg_c@5
$LN3@ssh2_msg_c@5:
; Line 7782
	push	1
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	_x11_override_throttle
	add	esp, 8
; Line 7783
	jmp	SHORT $LN5@ssh2_msg_c@5
$LN2@ssh2_msg_c@5:
; Line 7785
	push	1
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_pfd_override_throttle
	add	esp, 8
$LN5@ssh2_msg_c@5:
; Line 7796
	mov	edx, DWORD PTR _c$[ebp]
	add	edx, 32					; 00000020H
	push	edx
	call	_bufchain_clear
	add	esp, 4
; Line 7801
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_sshfwd_write_eof
	add	esp, 4
$LN7@ssh2_msg_c@5:
; Line 7807
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	and	edx, 8
	jne	SHORT $LN13@ssh2_msg_c@5
; Line 7808
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	or	ecx, 8
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+20], ecx
; Line 7809
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_ssh2_channel_check_close
	add	esp, 4
$LN13@ssh2_msg_c@5:
; Line 7811
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_msg_channel_close ENDP
_TEXT	ENDS
EXTRN	_pfd_confirm:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_c$ = -4						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh2_msg_channel_open_confirmation PROC
; Line 7814
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 7817
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_channel_msg
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
; Line 7818
	cmp	DWORD PTR _c$[ebp], 0
	jne	SHORT $LN8@ssh2_msg_c@6
; Line 7819
	jmp	$LN9@ssh2_msg_c@6
$LN8@ssh2_msg_c@6:
; Line 7820
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+12], 5
	jne	SHORT $LN7@ssh2_msg_c@6
; Line 7822
	mov	eax, DWORD PTR _pktin$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_share_got_pkt_from_server
	add	esp, 16					; 00000010H
; Line 7823
	jmp	$LN9@ssh2_msg_c@6
$LN7@ssh2_msg_c@6:
; Line 7825
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+16], 0
	jne	SHORT $LN11@ssh2_msg_c@6
	push	7825					; 00001e91H
	push	OFFSET $SG92470
	push	OFFSET $SG92471
	call	__wassert
	add	esp, 12					; 0000000cH
$LN11@ssh2_msg_c@6:
; Line 7826
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 7827
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 7828
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+44], eax
; Line 7829
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+48], eax
; Line 7831
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+12], 4
	jne	SHORT $LN6@ssh2_msg_c@6
; Line 7832
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+12], 3
; Line 7833
	mov	ecx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [ecx+76], 0
	je	SHORT $LN5@ssh2_msg_c@6
; Line 7834
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	call	_pfd_confirm
	add	esp, 4
$LN5@ssh2_msg_c@6:
; Line 7835
	jmp	SHORT $LN4@ssh2_msg_c@6
$LN6@ssh2_msg_c@6:
	mov	ecx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [ecx+12], 6
	jne	SHORT $LN3@ssh2_msg_c@6
; Line 7843
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	call	_ssh2_channel_check_close
	add	esp, 4
; Line 7844
	jmp	SHORT $LN4@ssh2_msg_c@6
$LN3@ssh2_msg_c@6:
; Line 7856
	mov	eax, OFFSET $SG92478
	test	eax, eax
	je	SHORT $LN4@ssh2_msg_c@6
	push	7856					; 00001eb0H
	push	OFFSET $SG92479
	push	OFFSET $SG92480
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@ssh2_msg_c@6:
; Line 7859
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+24], 0
	je	SHORT $LN9@ssh2_msg_c@6
; Line 7860
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_ssh_channel_try_eof
	add	esp, 4
$LN9@ssh2_msg_c@6:
; Line 7861
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_msg_channel_open_confirmation ENDP
; Function compile flags: /Odtp /RTCsu
_c$ = -32						; size = 4
_reason_length$ = -24					; size = 4
_reason_string$ = -12					; size = 4
_reason_code$ = -4					; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh2_msg_channel_open_failure PROC
; Line 7864
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 7877
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_channel_msg
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
; Line 7878
	cmp	DWORD PTR _c$[ebp], 0
	jne	SHORT $LN7@ssh2_msg_c@7
; Line 7879
	jmp	$LN8@ssh2_msg_c@7
$LN7@ssh2_msg_c@7:
; Line 7880
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+12], 5
	jne	SHORT $LN6@ssh2_msg_c@7
; Line 7882
	mov	eax, DWORD PTR _pktin$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_share_got_pkt_from_server
	add	esp, 16					; 00000010H
; Line 7883
	jmp	$LN8@ssh2_msg_c@7
$LN6@ssh2_msg_c@7:
; Line 7885
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+16], 0
	jne	SHORT $LN10@ssh2_msg_c@7
	push	7885					; 00001ecdH
	push	OFFSET $SG92502
	push	OFFSET $SG92503
	call	__wassert
	add	esp, 12					; 0000000cH
$LN10@ssh2_msg_c@7:
; Line 7887
	mov	ecx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [ecx+12], 4
	jne	SHORT $LN5@ssh2_msg_c@7
; Line 7888
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	DWORD PTR _reason_code$[ebp], eax
; Line 7889
	cmp	DWORD PTR _reason_code$[ebp], 5
	jb	SHORT $LN4@ssh2_msg_c@7
; Line 7890
	mov	DWORD PTR _reason_code$[ebp], 0
$LN4@ssh2_msg_c@7:
; Line 7891
	lea	eax, DWORD PTR _reason_length$[ebp]
	push	eax
	lea	ecx, DWORD PTR _reason_string$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 7893
	mov	eax, DWORD PTR _reason_string$[ebp]
	push	eax
	mov	ecx, DWORD PTR _reason_length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _reason_code$[ebp]
	mov	eax, DWORD PTR ?reasons@?1??ssh2_msg_channel_open_failure@@9@9[edx*4]
	push	eax
	push	OFFSET $SG92506
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 20					; 00000014H
; Line 7895
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	call	_pfd_close
	add	esp, 4
	jmp	SHORT $LN3@ssh2_msg_c@7
$LN5@ssh2_msg_c@7:
; Line 7896
	mov	ecx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [ecx+12], 6
	jne	SHORT $LN2@ssh2_msg_c@7
; Line 7903
	jmp	SHORT $LN3@ssh2_msg_c@7
$LN2@ssh2_msg_c@7:
; Line 7914
	mov	edx, OFFSET $SG92511
	test	edx, edx
	je	SHORT $LN3@ssh2_msg_c@7
	push	7914					; 00001eeaH
	push	OFFSET $SG92512
	push	OFFSET $SG92513
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@ssh2_msg_c@7:
; Line 7917
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+248]
	push	eax
	call	_del234
	add	esp, 8
; Line 7918
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN8@ssh2_msg_c@7:
; Line 7919
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@ssh2_msg_c@7
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN15@ssh2_msg_c@7:
	DD	2
	DD	$LN14@ssh2_msg_c@7
$LN14@ssh2_msg_c@7:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN12@ssh2_msg_c@7
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN13@ssh2_msg_c@7
$LN13@ssh2_msg_c@7:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN12@ssh2_msg_c@7:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
_ssh2_msg_channel_open_failure ENDP
; Function compile flags: /Odtp /RTCsu
tv343 = -144						; size = 4
_siglen$92614 = -136					; size = 4
_sig$92613 = -124					; size = 4
_signum$92610 = -116					; size = 4
_q$92585 = -112						; size = 4
_q$92563 = -108						; size = 4
_maybe_str$92559 = -104					; size = 4
_maybe_int$92558 = -100					; size = 4
_num$92547 = -96					; size = 4
_len$92546 = -92					; size = 4
_p$92545 = -88						; size = 4
_core$92544 = -84					; size = 4
_msglen$92543 = -76					; size = 4
_msg$92542 = -64					; size = 4
_fmt_msg$92540 = -56					; size = 4
_fmt_sig$92538 = -52					; size = 4
_is_int$92537 = -48					; size = 4
_is_plausible$92536 = -44				; size = 4
_pktout$ = -40						; size = 4
_c$ = -36						; size = 4
_reply$ = -32						; size = 4
_want_reply$ = -28					; size = 4
_typelen$ = -20						; size = 4
_type$ = -8						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh2_msg_channel_request PROC
; Line 7922
	push	ebp
	mov	ebp, esp
	sub	esp, 144				; 00000090H
	push	edi
	lea	edi, DWORD PTR [ebp-144]
	mov	ecx, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 7925
	mov	DWORD PTR _reply$[ebp], 100		; 00000064H
; Line 7929
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_channel_msg
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
; Line 7930
	cmp	DWORD PTR _c$[ebp], 0
	jne	SHORT $LN46@ssh2_msg_c@8
; Line 7931
	jmp	$LN47@ssh2_msg_c@8
$LN46@ssh2_msg_c@8:
; Line 7932
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+12], 5
	jne	SHORT $LN45@ssh2_msg_c@8
; Line 7934
	mov	eax, DWORD PTR _pktin$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_share_got_pkt_from_server
	add	esp, 16					; 00000010H
; Line 7935
	jmp	$LN47@ssh2_msg_c@8
$LN45@ssh2_msg_c@8:
; Line 7937
	lea	edx, DWORD PTR _typelen$[ebp]
	push	edx
	lea	eax, DWORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 7938
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh2_pkt_getbool
	add	esp, 4
	mov	DWORD PTR _want_reply$[ebp], eax
; Line 7940
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	and	ecx, 2
	je	SHORT $LN44@ssh2_msg_c@8
; Line 7947
	mov	DWORD PTR _want_reply$[ebp], 0
$LN44@ssh2_msg_c@8:
; Line 7955
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR _c$[ebp]
	cmp	eax, DWORD PTR [edx+252]
	jne	$LN43@ssh2_msg_c@8
; Line 7961
	cmp	DWORD PTR _typelen$[ebp], 11		; 0000000bH
	jne	SHORT $LN42@ssh2_msg_c@8
	push	11					; 0000000bH
	push	OFFSET $SG92531
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN42@ssh2_msg_c@8
; Line 7963
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+260], eax
; Line 7965
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+260]
	push	eax
	push	OFFSET $SG92532
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 7966
	mov	DWORD PTR _reply$[ebp], 99		; 00000063H
; Line 7968
	jmp	$LN41@ssh2_msg_c@8
$LN42@ssh2_msg_c@8:
; Line 7969
	cmp	DWORD PTR _typelen$[ebp], 11		; 0000000bH
	jne	$LN41@ssh2_msg_c@8
	push	11					; 0000000bH
	push	OFFSET $SG92535
	mov	edx, DWORD PTR _type$[ebp]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN41@ssh2_msg_c@8
; Line 7971
	mov	DWORD PTR _is_plausible$92536[ebp], 1
	mov	DWORD PTR _is_int$92537[ebp], 0
; Line 7972
	mov	DWORD PTR _fmt_sig$92538[ebp], OFFSET $SG92539
	mov	DWORD PTR _fmt_msg$92540[ebp], OFFSET $SG92541
; Line 7974
	mov	DWORD PTR _msglen$92543[ebp], 0
	mov	DWORD PTR _core$92544[ebp], 0
; Line 7982
	mov	eax, DWORD PTR _pktin$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _pktin$[ebp]
	add	ecx, DWORD PTR [edx+24]
	mov	DWORD PTR _p$92545[ebp], ecx
; Line 7983
	mov	eax, DWORD PTR _pktin$[ebp]
	mov	ecx, DWORD PTR _pktin$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR _len$92546[ebp], edx
; Line 7984
	mov	eax, DWORD PTR _p$92545[ebp]
	movzx	ecx, BYTE PTR [eax]
	shl	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _p$92545[ebp]
	movzx	eax, BYTE PTR [edx+1]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	edx, DWORD PTR _p$92545[ebp]
	movzx	eax, BYTE PTR [edx+2]
	shl	eax, 8
	or	ecx, eax
	mov	edx, DWORD PTR _p$92545[ebp]
	movzx	eax, BYTE PTR [edx+3]
	or	ecx, eax
	mov	DWORD PTR _num$92547[ebp], ecx
; Line 7986
	jne	SHORT $LN39@ssh2_msg_c@8
; Line 7987
	mov	DWORD PTR _is_int$92537[ebp], 0
; Line 7988
	jmp	$LN38@ssh2_msg_c@8
$LN39@ssh2_msg_c@8:
; Line 7989
	mov	DWORD PTR _maybe_int$92558[ebp], 0
	mov	DWORD PTR _maybe_str$92559[ebp], 0
$LN37@ssh2_msg_c@8:
; Line 8002
	push	5
	call	_toint
	add	esp, 4
	mov	DWORD PTR _q$92563[ebp], eax
	cmp	DWORD PTR _q$92563[ebp], 0
	jl	$LN36@ssh2_msg_c@8
	mov	ecx, DWORD PTR _q$92563[ebp]
	add	ecx, 4
	cmp	ecx, DWORD PTR _len$92546[ebp]
	jg	$LN36@ssh2_msg_c@8
	mov	edx, DWORD PTR _p$92545[ebp]
	add	edx, DWORD PTR _q$92563[ebp]
	movzx	eax, BYTE PTR [edx]
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _p$92545[ebp]
	add	ecx, DWORD PTR _q$92563[ebp]
	movzx	edx, BYTE PTR [ecx+1]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, DWORD PTR _p$92545[ebp]
	add	ecx, DWORD PTR _q$92563[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	shl	edx, 8
	or	eax, edx
	mov	ecx, DWORD PTR _p$92545[ebp]
	add	ecx, DWORD PTR _q$92563[ebp]
	movzx	edx, BYTE PTR [ecx+3]
	or	eax, edx
	mov	ecx, DWORD PTR _q$92563[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	push	edx
	call	_toint
	add	esp, 4
	mov	DWORD PTR _q$92563[ebp], eax
	cmp	DWORD PTR _q$92563[ebp], 0
	jl	SHORT $LN36@ssh2_msg_c@8
	mov	eax, DWORD PTR _q$92563[ebp]
	add	eax, 4
	cmp	eax, DWORD PTR _len$92546[ebp]
	jg	SHORT $LN36@ssh2_msg_c@8
	mov	ecx, DWORD PTR _p$92545[ebp]
	add	ecx, DWORD PTR _q$92563[ebp]
	movzx	edx, BYTE PTR [ecx]
	shl	edx, 24					; 00000018H
	mov	eax, DWORD PTR _p$92545[ebp]
	add	eax, DWORD PTR _q$92563[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	mov	eax, DWORD PTR _p$92545[ebp]
	add	eax, DWORD PTR _q$92563[ebp]
	movzx	ecx, BYTE PTR [eax+2]
	shl	ecx, 8
	or	edx, ecx
	mov	eax, DWORD PTR _p$92545[ebp]
	add	eax, DWORD PTR _q$92563[ebp]
	movzx	ecx, BYTE PTR [eax+3]
	or	edx, ecx
	mov	eax, DWORD PTR _q$92563[ebp]
	lea	ecx, DWORD PTR [eax+edx+4]
	push	ecx
	call	_toint
	add	esp, 4
	mov	DWORD PTR _q$92563[ebp], eax
	cmp	DWORD PTR _q$92563[ebp], 0
	je	SHORT $LN36@ssh2_msg_c@8
	mov	edx, DWORD PTR _q$92563[ebp]
	cmp	edx, DWORD PTR _len$92546[ebp]
	jne	SHORT $LN36@ssh2_msg_c@8
	mov	DWORD PTR _maybe_int$92558[ebp], 1
$LN36@ssh2_msg_c@8:
	xor	eax, eax
	jne	$LN37@ssh2_msg_c@8
$LN32@ssh2_msg_c@8:
; Line 8003
	mov	ecx, DWORD PTR _num$92547[ebp]
	add	ecx, 5
	push	ecx
	call	_toint
	add	esp, 4
	mov	DWORD PTR _q$92585[ebp], eax
	cmp	DWORD PTR _q$92585[ebp], 0
	jl	$LN31@ssh2_msg_c@8
	mov	edx, DWORD PTR _q$92585[ebp]
	add	edx, 4
	cmp	edx, DWORD PTR _len$92546[ebp]
	jg	$LN31@ssh2_msg_c@8
	mov	eax, DWORD PTR _p$92545[ebp]
	add	eax, DWORD PTR _q$92585[ebp]
	movzx	ecx, BYTE PTR [eax]
	shl	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _p$92545[ebp]
	add	edx, DWORD PTR _q$92585[ebp]
	movzx	eax, BYTE PTR [edx+1]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	edx, DWORD PTR _p$92545[ebp]
	add	edx, DWORD PTR _q$92585[ebp]
	movzx	eax, BYTE PTR [edx+2]
	shl	eax, 8
	or	ecx, eax
	mov	edx, DWORD PTR _p$92545[ebp]
	add	edx, DWORD PTR _q$92585[ebp]
	movzx	eax, BYTE PTR [edx+3]
	or	ecx, eax
	mov	edx, DWORD PTR _q$92585[ebp]
	lea	eax, DWORD PTR [edx+ecx+4]
	push	eax
	call	_toint
	add	esp, 4
	mov	DWORD PTR _q$92585[ebp], eax
	cmp	DWORD PTR _q$92585[ebp], 0
	jl	SHORT $LN31@ssh2_msg_c@8
	mov	ecx, DWORD PTR _q$92585[ebp]
	add	ecx, 4
	cmp	ecx, DWORD PTR _len$92546[ebp]
	jg	SHORT $LN31@ssh2_msg_c@8
	mov	edx, DWORD PTR _p$92545[ebp]
	add	edx, DWORD PTR _q$92585[ebp]
	movzx	eax, BYTE PTR [edx]
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _p$92545[ebp]
	add	ecx, DWORD PTR _q$92585[ebp]
	movzx	edx, BYTE PTR [ecx+1]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, DWORD PTR _p$92545[ebp]
	add	ecx, DWORD PTR _q$92585[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	shl	edx, 8
	or	eax, edx
	mov	ecx, DWORD PTR _p$92545[ebp]
	add	ecx, DWORD PTR _q$92585[ebp]
	movzx	edx, BYTE PTR [ecx+3]
	or	eax, edx
	mov	ecx, DWORD PTR _q$92585[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	push	edx
	call	_toint
	add	esp, 4
	mov	DWORD PTR _q$92585[ebp], eax
	cmp	DWORD PTR _q$92585[ebp], 0
	je	SHORT $LN31@ssh2_msg_c@8
	mov	eax, DWORD PTR _q$92585[ebp]
	cmp	eax, DWORD PTR _len$92546[ebp]
	jne	SHORT $LN31@ssh2_msg_c@8
	mov	DWORD PTR _maybe_str$92559[ebp], 1
$LN31@ssh2_msg_c@8:
	xor	ecx, ecx
	jne	$LN32@ssh2_msg_c@8
; Line 8005
	cmp	DWORD PTR _maybe_int$92558[ebp], 0
	je	SHORT $LN27@ssh2_msg_c@8
	cmp	DWORD PTR _maybe_str$92559[ebp], 0
	jne	SHORT $LN27@ssh2_msg_c@8
; Line 8006
	mov	DWORD PTR _is_int$92537[ebp], 1
	jmp	SHORT $LN38@ssh2_msg_c@8
$LN27@ssh2_msg_c@8:
; Line 8007
	cmp	DWORD PTR _maybe_int$92558[ebp], 0
	jne	SHORT $LN25@ssh2_msg_c@8
	cmp	DWORD PTR _maybe_str$92559[ebp], 0
	je	SHORT $LN25@ssh2_msg_c@8
; Line 8008
	mov	DWORD PTR _is_int$92537[ebp], 0
; Line 8009
	jmp	SHORT $LN38@ssh2_msg_c@8
$LN25@ssh2_msg_c@8:
; Line 8011
	mov	DWORD PTR _is_plausible$92536[ebp], 0
$LN38@ssh2_msg_c@8:
; Line 8014
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+260], 128		; 00000080H
; Line 8015
	cmp	DWORD PTR _is_plausible$92536[ebp], 0
	je	$LN23@ssh2_msg_c@8
; Line 8016
	cmp	DWORD PTR _is_int$92537[ebp], 0
	je	SHORT $LN22@ssh2_msg_c@8
; Line 8018
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	DWORD PTR _signum$92610[ebp], eax
; Line 8019
	mov	ecx, DWORD PTR _signum$92610[ebp]
	push	ecx
	push	OFFSET $SG92611
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _fmt_sig$92538[ebp], eax
; Line 8020
	mov	edx, DWORD PTR _signum$92610[ebp]
	add	edx, 128				; 00000080H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+260], edx
; Line 8021
	jmp	$LN21@ssh2_msg_c@8
$LN22@ssh2_msg_c@8:
; Line 8025
	lea	ecx, DWORD PTR _siglen$92614[ebp]
	push	ecx
	lea	edx, DWORD PTR _sig$92613[ebp]
	push	edx
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 8028
	cmp	DWORD PTR _siglen$92614[ebp], 0
	je	SHORT $LN20@ssh2_msg_c@8
; Line 8030
	mov	ecx, DWORD PTR _sig$92613[ebp]
	push	ecx
	mov	edx, DWORD PTR _siglen$92614[ebp]
	push	edx
	push	OFFSET $SG92616
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _fmt_sig$92538[ebp], eax
$LN20@ssh2_msg_c@8:
; Line 8039
	xor	eax, eax
	je	SHORT $LN19@ssh2_msg_c@8
	jmp	$LN21@ssh2_msg_c@8
$LN19@ssh2_msg_c@8:
; Line 8045
	cmp	DWORD PTR _siglen$92614[ebp], 4
	jne	SHORT $LN17@ssh2_msg_c@8
	mov	ecx, DWORD PTR _siglen$92614[ebp]
	push	ecx
	push	OFFSET $SG92620
	mov	edx, DWORD PTR _sig$92613[ebp]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN17@ssh2_msg_c@8
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+260], 150		; 00000096H
	jmp	$LN21@ssh2_msg_c@8
$LN17@ssh2_msg_c@8:
; Line 8051
	cmp	DWORD PTR _siglen$92614[ebp], 3
	jne	SHORT $LN15@ssh2_msg_c@8
	mov	ecx, DWORD PTR _siglen$92614[ebp]
	push	ecx
	push	OFFSET $SG92623
	mov	edx, DWORD PTR _sig$92613[ebp]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN15@ssh2_msg_c@8
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+260], 136		; 00000088H
	jmp	$LN21@ssh2_msg_c@8
$LN15@ssh2_msg_c@8:
; Line 8057
	cmp	DWORD PTR _siglen$92614[ebp], 3
	jne	SHORT $LN13@ssh2_msg_c@8
	mov	ecx, DWORD PTR _siglen$92614[ebp]
	push	ecx
	push	OFFSET $SG92626
	mov	edx, DWORD PTR _sig$92613[ebp]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN13@ssh2_msg_c@8
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+260], 132		; 00000084H
	jmp	$LN21@ssh2_msg_c@8
$LN13@ssh2_msg_c@8:
; Line 8060
	cmp	DWORD PTR _siglen$92614[ebp], 3
	jne	SHORT $LN11@ssh2_msg_c@8
	mov	ecx, DWORD PTR _siglen$92614[ebp]
	push	ecx
	push	OFFSET $SG92629
	mov	edx, DWORD PTR _sig$92613[ebp]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN11@ssh2_msg_c@8
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+260], 130		; 00000082H
	jmp	SHORT $LN21@ssh2_msg_c@8
$LN11@ssh2_msg_c@8:
; Line 8072
	cmp	DWORD PTR _siglen$92614[ebp], 4
	jne	SHORT $LN9@ssh2_msg_c@8
	mov	ecx, DWORD PTR _siglen$92614[ebp]
	push	ecx
	push	OFFSET $SG92632
	mov	edx, DWORD PTR _sig$92613[ebp]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN9@ssh2_msg_c@8
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+260], 139		; 0000008bH
	jmp	SHORT $LN21@ssh2_msg_c@8
$LN9@ssh2_msg_c@8:
; Line 8075
	cmp	DWORD PTR _siglen$92614[ebp], 4
	jne	SHORT $LN7@ssh2_msg_c@8
	mov	ecx, DWORD PTR _siglen$92614[ebp]
	push	ecx
	push	OFFSET $SG92635
	mov	edx, DWORD PTR _sig$92613[ebp]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN7@ssh2_msg_c@8
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+260], 143		; 0000008fH
; Line 8084
	jmp	SHORT $LN21@ssh2_msg_c@8
$LN7@ssh2_msg_c@8:
; Line 8085
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+260], 128		; 00000080H
$LN21@ssh2_msg_c@8:
; Line 8087
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh2_pkt_getbool
	add	esp, 4
	mov	DWORD PTR _core$92544[ebp], eax
; Line 8088
	lea	eax, DWORD PTR _msglen$92543[ebp]
	push	eax
	lea	ecx, DWORD PTR _msg$92542[ebp]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 8089
	cmp	DWORD PTR _msglen$92543[ebp], 0
	je	SHORT $LN23@ssh2_msg_c@8
; Line 8090
	mov	eax, DWORD PTR _msg$92542[ebp]
	push	eax
	mov	ecx, DWORD PTR _msglen$92543[ebp]
	push	ecx
	push	OFFSET $SG92638
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _fmt_msg$92540[ebp], eax
$LN23@ssh2_msg_c@8:
; Line 8096
	cmp	DWORD PTR _core$92544[ebp], 0
	je	SHORT $LN49@ssh2_msg_c@8
	mov	DWORD PTR tv343[ebp], OFFSET $SG92639
	jmp	SHORT $LN50@ssh2_msg_c@8
$LN49@ssh2_msg_c@8:
	mov	DWORD PTR tv343[ebp], OFFSET $SG92640
$LN50@ssh2_msg_c@8:
	mov	edx, DWORD PTR _fmt_msg$92540[ebp]
	push	edx
	mov	eax, DWORD PTR tv343[ebp]
	push	eax
	mov	ecx, DWORD PTR _fmt_sig$92538[ebp]
	push	ecx
	push	OFFSET $SG92641
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 20					; 00000014H
; Line 8097
	mov	eax, DWORD PTR _fmt_sig$92538[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN4@ssh2_msg_c@8
	mov	edx, DWORD PTR _fmt_sig$92538[ebp]
	push	edx
	call	_safefree
	add	esp, 4
$LN4@ssh2_msg_c@8:
; Line 8098
	mov	eax, DWORD PTR _fmt_msg$92540[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@ssh2_msg_c@8
	mov	edx, DWORD PTR _fmt_msg$92540[ebp]
	push	edx
	call	_safefree
	add	esp, 4
$LN3@ssh2_msg_c@8:
; Line 8099
	mov	DWORD PTR _reply$[ebp], 99		; 00000063H
$LN41@ssh2_msg_c@8:
; Line 8102
	jmp	SHORT $LN2@ssh2_msg_c@8
$LN43@ssh2_msg_c@8:
; Line 8109
	mov	DWORD PTR _reply$[ebp], 100		; 00000064H
$LN2@ssh2_msg_c@8:
; Line 8111
	cmp	DWORD PTR _want_reply$[ebp], 0
	je	SHORT $LN47@ssh2_msg_c@8
; Line 8112
	mov	eax, DWORD PTR _reply$[ebp]
	push	eax
	call	_ssh2_pkt_init
	add	esp, 4
	mov	DWORD PTR _pktout$[ebp], eax
; Line 8113
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _pktout$[ebp]
	push	eax
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 8114
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_pkt_send
	add	esp, 8
$LN47@ssh2_msg_c@8:
; Line 8116
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN58@ssh2_msg_c@8
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 144				; 00000090H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN58@ssh2_msg_c@8:
	DD	6
	DD	$LN57@ssh2_msg_c@8
$LN57@ssh2_msg_c@8:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN51@ssh2_msg_c@8
	DD	-20					; ffffffecH
	DD	4
	DD	$LN52@ssh2_msg_c@8
	DD	-64					; ffffffc0H
	DD	4
	DD	$LN53@ssh2_msg_c@8
	DD	-76					; ffffffb4H
	DD	4
	DD	$LN54@ssh2_msg_c@8
	DD	-124					; ffffff84H
	DD	4
	DD	$LN55@ssh2_msg_c@8
	DD	-136					; ffffff78H
	DD	4
	DD	$LN56@ssh2_msg_c@8
$LN56@ssh2_msg_c@8:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN55@ssh2_msg_c@8:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	0
$LN54@ssh2_msg_c@8:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN53@ssh2_msg_c@8:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
$LN52@ssh2_msg_c@8:
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN51@ssh2_msg_c@8:
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
_ssh2_msg_channel_request ENDP
; Function compile flags: /Odtp /RTCsu
_pktout$ = -32						; size = 4
_want_reply$ = -28					; size = 4
_typelen$ = -20						; size = 4
_type$ = -8						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh2_msg_global_request PROC
; Line 8119
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 8124
	lea	eax, DWORD PTR _typelen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 8125
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh2_pkt_getbool
	add	esp, 4
	mov	DWORD PTR _want_reply$[ebp], eax
; Line 8133
	cmp	DWORD PTR _want_reply$[ebp], 0
	je	SHORT $LN2@ssh2_msg_g
; Line 8134
	push	82					; 00000052H
	call	_ssh2_pkt_init
	add	esp, 4
	mov	DWORD PTR _pktout$[ebp], eax
; Line 8135
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_pkt_send
	add	esp, 8
$LN2@ssh2_msg_g:
; Line 8137
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@ssh2_msg_g
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@ssh2_msg_g:
	DD	2
	DD	$LN6@ssh2_msg_g
$LN6@ssh2_msg_g:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@ssh2_msg_g
	DD	-20					; ffffffecH
	DD	4
	DD	$LN5@ssh2_msg_g
$LN5@ssh2_msg_g:
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN4@ssh2_msg_g:
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
_ssh2_msg_global_request ENDP
_TEXT	ENDS
EXTRN	_pfd_connect:PROC
EXTRN	_x11_init:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_err$92718 = -152					; size = 4
_shostlen$92710 = -144					; size = 4
_shost$92709 = -132					; size = 4
_realpf$92708 = -124					; size = 4
_pf$92707 = -116					; size = 28
_addrstr$92695 = -84					; size = 4
_pktout$ = -80						; size = 4
_our_winsize_override$ = -76				; size = 4
_pktsize$ = -72						; size = 4
_winsize$ = -68						; size = 4
_remid$ = -64						; size = 4
_c$ = -60						; size = 4
_error$ = -56						; size = 4
_peerport$ = -52					; size = 4
_peeraddrlen$ = -44					; size = 4
_peeraddr$ = -32					; size = 4
_typelen$ = -20						; size = 4
_type$ = -8						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh2_msg_channel_open PROC
; Line 8164
	push	ebp
	mov	ebp, esp
	sub	esp, 152				; 00000098H
	push	edi
	lea	edi, DWORD PTR [ebp-152]
	mov	ecx, 38					; 00000026H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 8170
	mov	DWORD PTR _error$[ebp], 0
; Line 8173
	mov	DWORD PTR _our_winsize_override$[ebp], 0
; Line 8176
	lea	eax, DWORD PTR _typelen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 8177
	push	96					; 00000060H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
; Line 8178
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 8180
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	DWORD PTR _remid$[ebp], eax
; Line 8181
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	DWORD PTR _winsize$[ebp], eax
; Line 8182
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	DWORD PTR _pktsize$[ebp], eax
; Line 8184
	cmp	DWORD PTR _typelen$[ebp], 3
	jne	$LN19@ssh2_msg_c@9
	push	3
	push	OFFSET $SG92694
	mov	edx, DWORD PTR _type$[ebp]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN19@ssh2_msg_c@9
; Line 8187
	lea	eax, DWORD PTR _peeraddrlen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _peeraddr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 8188
	push	1
	mov	eax, DWORD PTR _peeraddrlen$[ebp]
	add	eax, 1
	push	eax
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _addrstr$92695[ebp], eax
; Line 8189
	mov	ecx, DWORD PTR _peeraddrlen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _peeraddr$[ebp]
	push	edx
	mov	eax, DWORD PTR _addrstr$92695[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 8190
	mov	ecx, DWORD PTR _addrstr$92695[ebp]
	add	ecx, DWORD PTR _peeraddrlen$[ebp]
	mov	BYTE PTR [ecx], 0
; Line 8191
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	DWORD PTR _peerport$[ebp], eax
; Line 8194
	mov	eax, DWORD PTR _peerport$[ebp]
	push	eax
	mov	ecx, DWORD PTR _addrstr$92695[ebp]
	push	ecx
	push	OFFSET $SG92698
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 16					; 00000010H
; Line 8196
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+76], 0
	jne	SHORT $LN18@ssh2_msg_c@9
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+204], 0
	jne	SHORT $LN18@ssh2_msg_c@9
; Line 8197
	mov	DWORD PTR _error$[ebp], OFFSET $SG92700
; Line 8198
	jmp	SHORT $LN17@ssh2_msg_c@9
$LN18@ssh2_msg_c@9:
; Line 8200
	mov	edx, DWORD PTR _peerport$[ebp]
	push	edx
	mov	eax, DWORD PTR _addrstr$92695[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+360]
	push	eax
	call	_x11_init
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+76], eax
; Line 8201
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+12], 1
; Line 8202
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+80], 1
; Line 8212
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+204], 0
	je	SHORT $LN16@ssh2_msg_c@9
; Line 8213
	mov	DWORD PTR _our_winsize_override$[ebp], 128 ; 00000080H
$LN16@ssh2_msg_c@9:
; Line 8215
	push	OFFSET $SG92703
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
$LN17@ssh2_msg_c@9:
; Line 8218
	mov	ecx, DWORD PTR _addrstr$92695[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 8219
	jmp	$LN15@ssh2_msg_c@9
$LN19@ssh2_msg_c@9:
; Line 8220
	cmp	DWORD PTR _typelen$[ebp], 15		; 0000000fH
	jne	$LN14@ssh2_msg_c@9
	push	15					; 0000000fH
	push	OFFSET $SG92706
	mov	edx, DWORD PTR _type$[ebp]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN14@ssh2_msg_c@9
; Line 8224
	lea	eax, DWORD PTR _shostlen$92710[ebp]
	push	eax
	lea	ecx, DWORD PTR _shost$92709[ebp]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 8225
	mov	eax, DWORD PTR _shost$92709[ebp]
	push	eax
	mov	ecx, DWORD PTR _shostlen$92710[ebp]
	push	ecx
	push	OFFSET $SG92711
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pf$92707[ebp+8], eax
; Line 8226
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	DWORD PTR _pf$92707[ebp], eax
; Line 8227
	lea	eax, DWORD PTR _peeraddrlen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _peeraddr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 8228
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	DWORD PTR _peerport$[ebp], eax
; Line 8229
	push	0
	lea	ecx, DWORD PTR _pf$92707[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+272]
	push	eax
	call	_find234
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _realpf$92708[ebp], eax
; Line 8231
	mov	ecx, DWORD PTR _peerport$[ebp]
	push	ecx
	mov	edx, DWORD PTR _peeraddr$[ebp]
	push	edx
	mov	eax, DWORD PTR _pf$92707[ebp]
	push	eax
	mov	ecx, DWORD PTR _pf$92707[ebp+8]
	push	ecx
	push	OFFSET $SG92713
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 24					; 00000018H
; Line 8232
	mov	eax, DWORD PTR _pf$92707[ebp+8]
	push	eax
	call	_safefree
	add	esp, 4
; Line 8234
	cmp	DWORD PTR _realpf$92708[ebp], 0
	jne	SHORT $LN13@ssh2_msg_c@9
; Line 8235
	mov	DWORD PTR _error$[ebp], OFFSET $SG92716
; Line 8236
	jmp	$LN12@ssh2_msg_c@9
$LN13@ssh2_msg_c@9:
; Line 8239
	mov	ecx, DWORD PTR _realpf$92708[ebp]
	cmp	DWORD PTR [ecx+20], 0
	je	SHORT $LN11@ssh2_msg_c@9
; Line 8247
	mov	edx, DWORD PTR _pktin$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR _pktin$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _realpf$92708[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	_share_got_pkt_from_server
	add	esp, 16					; 00000010H
; Line 8248
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 8249
	jmp	$LN20@ssh2_msg_c@9
$LN11@ssh2_msg_c@9:
; Line 8253
	mov	edx, DWORD PTR _realpf$92708[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _realpf$92708[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _realpf$92708[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, 76					; 0000004cH
	push	eax
	call	_pfd_connect
	add	esp, 24					; 00000018H
	mov	DWORD PTR _err$92718[ebp], eax
; Line 8255
	mov	ecx, DWORD PTR _realpf$92708[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _realpf$92708[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	push	OFFSET $SG92720
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 16					; 00000010H
; Line 8256
	cmp	DWORD PTR _err$92718[ebp], 0
	je	SHORT $LN10@ssh2_msg_c@9
; Line 8257
	mov	eax, DWORD PTR _err$92718[ebp]
	push	eax
	push	OFFSET $SG92723
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 8258
	mov	edx, DWORD PTR _err$92718[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 8259
	mov	DWORD PTR _error$[ebp], OFFSET $SG92724
; Line 8260
	jmp	SHORT $LN12@ssh2_msg_c@9
$LN10@ssh2_msg_c@9:
; Line 8261
	push	OFFSET $SG92726
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 8262
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+12], 3
$LN12@ssh2_msg_c@9:
; Line 8265
	jmp	SHORT $LN15@ssh2_msg_c@9
$LN14@ssh2_msg_c@9:
; Line 8266
	cmp	DWORD PTR _typelen$[ebp], 22		; 00000016H
	jne	SHORT $LN7@ssh2_msg_c@9
	push	22					; 00000016H
	push	OFFSET $SG92729
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN7@ssh2_msg_c@9
; Line 8267
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+72], 0
	jne	SHORT $LN6@ssh2_msg_c@9
; Line 8268
	mov	DWORD PTR _error$[ebp], OFFSET $SG92731
; Line 8269
	jmp	SHORT $LN5@ssh2_msg_c@9
$LN6@ssh2_msg_c@9:
; Line 8270
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+12], 2
; Line 8271
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+84], 0
; Line 8272
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+76], 0
; Line 8273
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+92], 0
$LN5@ssh2_msg_c@9:
; Line 8275
	jmp	SHORT $LN15@ssh2_msg_c@9
$LN7@ssh2_msg_c@9:
; Line 8276
	mov	DWORD PTR _error$[ebp], OFFSET $SG92735
$LN15@ssh2_msg_c@9:
; Line 8279
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _remid$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 8280
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+16], 0
; Line 8281
	cmp	DWORD PTR _error$[ebp], 0
	je	$LN3@ssh2_msg_c@9
; Line 8282
	push	92					; 0000005cH
	call	_ssh2_pkt_init
	add	esp, 4
	mov	DWORD PTR _pktout$[ebp], eax
; Line 8283
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pktout$[ebp]
	push	edx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 8284
	push	2
	mov	eax, DWORD PTR _pktout$[ebp]
	push	eax
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 8285
	mov	ecx, DWORD PTR _error$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pktout$[ebp]
	push	edx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 8286
	push	OFFSET $SG92737
	mov	eax, DWORD PTR _pktout$[ebp]
	push	eax
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 8287
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_pkt_send
	add	esp, 8
; Line 8288
	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	push	OFFSET $SG92738
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 8289
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 8290
	jmp	$LN20@ssh2_msg_c@9
$LN3@ssh2_msg_c@9:
; Line 8291
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_ssh2_channel_init
	add	esp, 4
; Line 8292
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR _winsize$[ebp]
	mov	DWORD PTR [ecx+44], edx
; Line 8293
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _pktsize$[ebp]
	mov	DWORD PTR [eax+48], ecx
; Line 8294
	cmp	DWORD PTR _our_winsize_override$[ebp], 0
	je	SHORT $LN1@ssh2_msg_c@9
; Line 8296
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR _our_winsize_override$[ebp]
	mov	DWORD PTR [edx+60], eax
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR _our_winsize_override$[ebp]
	mov	DWORD PTR [ecx+56], edx
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _our_winsize_override$[ebp]
	mov	DWORD PTR [eax+52], ecx
$LN1@ssh2_msg_c@9:
; Line 8298
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+248]
	push	ecx
	call	_add234
	add	esp, 8
; Line 8299
	push	91					; 0000005bH
	call	_ssh2_pkt_init
	add	esp, 4
	mov	DWORD PTR _pktout$[ebp], eax
; Line 8300
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 8301
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 8302
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+52]
	push	eax
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 8303
	push	16384					; 00004000H
	mov	edx, DWORD PTR _pktout$[ebp]
	push	edx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 8304
	mov	eax, DWORD PTR _pktout$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_pkt_send
	add	esp, 8
$LN20@ssh2_msg_c@9:
; Line 8306
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN30@ssh2_msg_c@9
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 152				; 00000098H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN30@ssh2_msg_c@9:
	DD	7
	DD	$LN29@ssh2_msg_c@9
$LN29@ssh2_msg_c@9:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN22@ssh2_msg_c@9
	DD	-20					; ffffffecH
	DD	4
	DD	$LN23@ssh2_msg_c@9
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN24@ssh2_msg_c@9
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN25@ssh2_msg_c@9
	DD	-116					; ffffff8cH
	DD	28					; 0000001cH
	DD	$LN26@ssh2_msg_c@9
	DD	-132					; ffffff7cH
	DD	4
	DD	$LN27@ssh2_msg_c@9
	DD	-144					; ffffff70H
	DD	4
	DD	$LN28@ssh2_msg_c@9
$LN28@ssh2_msg_c@9:
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN27@ssh2_msg_c@9:
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN26@ssh2_msg_c@9:
	DB	112					; 00000070H
	DB	102					; 00000066H
	DB	0
$LN25@ssh2_msg_c@9:
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	114					; 00000072H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN24@ssh2_msg_c@9:
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	114					; 00000072H
	DB	0
$LN23@ssh2_msg_c@9:
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN22@ssh2_msg_c@9:
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
_ssh2_msg_channel_open ENDP
; Function compile flags: /Odtp /RTCsu
_size$92774 = -20					; size = 4
_banner$92772 = -8					; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh2_msg_userauth_banner PROC
; Line 8350
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 8353
	push	34					; 00000022H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@ssh2_msg_u
	mov	edx, DWORD PTR _ssh$[ebp]
	add	edx, 332				; 0000014cH
	push	edx
	call	_bufchain_size
	add	esp, 4
	cmp	eax, 131072				; 00020000H
	jg	SHORT $LN3@ssh2_msg_u
; Line 8354
	mov	DWORD PTR _banner$92772[ebp], 0
; Line 8355
	mov	DWORD PTR _size$92774[ebp], 0
; Line 8356
	lea	eax, DWORD PTR _size$92774[ebp]
	push	eax
	lea	ecx, DWORD PTR _banner$92772[ebp]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 8357
	cmp	DWORD PTR _banner$92772[ebp], 0
	je	SHORT $LN3@ssh2_msg_u
; Line 8358
	mov	eax, DWORD PTR _size$92774[ebp]
	push	eax
	mov	ecx, DWORD PTR _banner$92772[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	add	edx, 332				; 0000014cH
	push	edx
	call	_bufchain_add
	add	esp, 12					; 0000000cH
$LN3@ssh2_msg_u:
; Line 8360
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@ssh2_msg_u
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN8@ssh2_msg_u:
	DD	2
	DD	$LN7@ssh2_msg_u
$LN7@ssh2_msg_u:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@ssh2_msg_u
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@ssh2_msg_u
$LN6@ssh2_msg_u:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN5@ssh2_msg_u:
	DB	98					; 00000062H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_ssh2_msg_userauth_banner ENDP
; Function compile flags: /Odtp /RTCsu
tv68 = -20						; size = 4
_crLine$92814 = -16					; size = 4
_s$ = -12						; size = 4
_pktout$ = -8						; size = 4
_ssh$ = -4						; size = 4
_c$ = 8							; size = 4
_pktin$ = 12						; size = 4
_ctx$ = 16						; size = 4
_ssh2_setup_x11 PROC
; Line 8384
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 8388
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ssh$[ebp], ecx
; Line 8390
	cmp	DWORD PTR _ctx$[ebp], 0
	jne	SHORT $LN11@ssh2_setup
	push	4
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _ctx$[ebp], eax
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _s$[ebp], edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax], 0
$LN11@ssh2_setup:
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _s$[ebp], ecx
; Line 8392
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR _crLine$92814[ebp], edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv68[ebp], ecx
	cmp	DWORD PTR tv68[ebp], 0
	je	SHORT $LN8@ssh2_setup
	cmp	DWORD PTR tv68[ebp], 8405		; 000020d5H
	je	$LN6@ssh2_setup
	jmp	$LN9@ssh2_setup
$LN8@ssh2_setup:
; Line 8394
	push	OFFSET $SG92820
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 8396
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	push	OFFSET _ssh2_setup_x11
	push	OFFSET $SG92821
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+252]
	push	eax
	call	_ssh2_chanreq_init
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pktout$[ebp], eax
; Line 8397
	push	0
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh2_pkt_addbool
	add	esp, 8
; Line 8398
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+356]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _pktout$[ebp]
	push	edx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 8399
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _pktout$[ebp]
	push	eax
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 8400
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+352]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 8401
	mov	edx, DWORD PTR _pktout$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_pkt_send
	add	esp, 8
$LN7@ssh2_setup:
; Line 8405
	mov	ecx, DWORD PTR _crLine$92814[ebp]
	mov	DWORD PTR [ecx], 8405			; 000020d5H
	jmp	SHORT $LN12@ssh2_setup
$LN6@ssh2_setup:
	xor	edx, edx
	jne	SHORT $LN7@ssh2_setup
; Line 8407
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN9@ssh2_setup
; Line 8408
	mov	eax, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [eax+8], 99			; 00000063H
	jne	SHORT $LN2@ssh2_setup
; Line 8409
	push	OFFSET $SG92828
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 8410
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+76], 1
; Line 8411
	jmp	SHORT $LN9@ssh2_setup
$LN2@ssh2_setup:
; Line 8412
	push	OFFSET $SG92830
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
$LN9@ssh2_setup:
; Line 8415
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
$LN12@ssh2_setup:
; Line 8416
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_setup_x11 ENDP
; Function compile flags: /Odtp /RTCsu
tv68 = -20						; size = 4
_crLine$92847 = -16					; size = 4
_s$ = -12						; size = 4
_pktout$ = -8						; size = 4
_ssh$ = -4						; size = 4
_c$ = 8							; size = 4
_pktin$ = 12						; size = 4
_ctx$ = 16						; size = 4
_ssh2_setup_agent PROC
; Line 8420
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 8424
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ssh$[ebp], ecx
; Line 8426
	cmp	DWORD PTR _ctx$[ebp], 0
	jne	SHORT $LN11@ssh2_setup@2
	push	4
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _ctx$[ebp], eax
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _s$[ebp], edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax], 0
$LN11@ssh2_setup@2:
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _s$[ebp], ecx
; Line 8428
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR _crLine$92847[ebp], edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv68[ebp], ecx
	cmp	DWORD PTR tv68[ebp], 0
	je	SHORT $LN8@ssh2_setup@2
	cmp	DWORD PTR tv68[ebp], 8437		; 000020f5H
	je	SHORT $LN6@ssh2_setup@2
	jmp	$LN9@ssh2_setup@2
$LN8@ssh2_setup@2:
; Line 8430
	push	OFFSET $SG92853
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 8432
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	push	OFFSET _ssh2_setup_agent
	push	OFFSET $SG92854
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+252]
	push	eax
	call	_ssh2_chanreq_init
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pktout$[ebp], eax
; Line 8433
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_pkt_send
	add	esp, 8
$LN7@ssh2_setup@2:
; Line 8437
	mov	eax, DWORD PTR _crLine$92847[ebp]
	mov	DWORD PTR [eax], 8437			; 000020f5H
	jmp	SHORT $LN12@ssh2_setup@2
$LN6@ssh2_setup@2:
	xor	ecx, ecx
	jne	SHORT $LN7@ssh2_setup@2
; Line 8439
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN9@ssh2_setup@2
; Line 8440
	mov	edx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [edx+8], 99			; 00000063H
	jne	SHORT $LN2@ssh2_setup@2
; Line 8441
	push	OFFSET $SG92861
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 8442
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+72], 1
; Line 8443
	jmp	SHORT $LN9@ssh2_setup@2
$LN2@ssh2_setup@2:
; Line 8444
	push	OFFSET $SG92863
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
$LN9@ssh2_setup@2:
; Line 8447
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
$LN12@ssh2_setup@2:
; Line 8448
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_setup_agent ENDP
_TEXT	ENDS
EXTRN	_sscanf:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv68 = -20						; size = 4
_crLine$92880 = -16					; size = 4
_s$ = -12						; size = 4
_pktout$ = -8						; size = 4
_ssh$ = -4						; size = 4
_c$ = 8							; size = 4
_pktin$ = 12						; size = 4
_ctx$ = 16						; size = 4
_ssh2_setup_pty PROC
; Line 8452
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 8456
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ssh$[ebp], ecx
; Line 8458
	cmp	DWORD PTR _ctx$[ebp], 0
	jne	SHORT $LN11@ssh2_setup@3
	push	4
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _ctx$[ebp], eax
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _s$[ebp], edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax], 0
$LN11@ssh2_setup@3:
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _s$[ebp], ecx
; Line 8460
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR _crLine$92880[ebp], edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv68[ebp], ecx
	cmp	DWORD PTR tv68[ebp], 0
	je	SHORT $LN8@ssh2_setup@3
	cmp	DWORD PTR tv68[ebp], 8486		; 00002126H
	je	$LN6@ssh2_setup@3
	jmp	$LN9@ssh2_setup@3
$LN8@ssh2_setup@3:
; Line 8464
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+232], 38400		; 00009600H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+236], 38400		; 00009600H
; Line 8465
	mov	ecx, DWORD PTR _ssh$[ebp]
	add	ecx, 236				; 000000ecH
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	add	edx, 232				; 000000e8H
	push	edx
	push	OFFSET $SG92886
	push	47					; 0000002fH
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	push	eax
	call	_sscanf
	add	esp, 16					; 00000010H
; Line 8468
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	push	OFFSET _ssh2_setup_pty
	push	OFFSET $SG92887
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+252]
	push	ecx
	call	_ssh2_chanreq_init
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pktout$[ebp], eax
; Line 8469
	push	46					; 0000002eH
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_str
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 8470
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+240]
	push	eax
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 8471
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+244]
	push	eax
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 8472
	push	0
	mov	edx, DWORD PTR _pktout$[ebp]
	push	edx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 8473
	push	0
	mov	eax, DWORD PTR _pktout$[ebp]
	push	eax
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 8474
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 8475
	mov	edx, DWORD PTR _pktout$[ebp]
	push	edx
	push	OFFSET _ssh2_send_ttymode
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_parse_ttymodes
	add	esp, 12					; 0000000cH
; Line 8476
	push	128					; 00000080H
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh_pkt_addbyte
	add	esp, 8
; Line 8477
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+236]
	push	eax
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 8478
	push	129					; 00000081H
	mov	edx, DWORD PTR _pktout$[ebp]
	push	edx
	call	_ssh_pkt_addbyte
	add	esp, 8
; Line 8479
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+232]
	push	ecx
	mov	edx, DWORD PTR _pktout$[ebp]
	push	edx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 8480
	push	1
	push	OFFSET $SG92889
	mov	eax, DWORD PTR _pktout$[ebp]
	push	eax
	call	_ssh_pkt_addstring_data
	add	esp, 12					; 0000000cH
; Line 8481
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_pkt_send
	add	esp, 8
; Line 8482
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+280], 2
$LN7@ssh2_setup@3:
; Line 8486
	mov	ecx, DWORD PTR _crLine$92880[ebp]
	mov	DWORD PTR [ecx], 8486			; 00002126H
	jmp	SHORT $LN12@ssh2_setup@3
$LN6@ssh2_setup@3:
	xor	edx, edx
	jne	SHORT $LN7@ssh2_setup@3
; Line 8488
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN9@ssh2_setup@3
; Line 8489
	mov	eax, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [eax+8], 99			; 00000063H
	jne	SHORT $LN2@ssh2_setup@3
; Line 8491
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+236]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+232]
	push	ecx
	push	OFFSET $SG92896
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 16					; 00000010H
; Line 8492
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+296], 1
; Line 8493
	jmp	SHORT $LN9@ssh2_setup@3
$LN2@ssh2_setup@3:
; Line 8494
	push	OFFSET $SG92898
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_c_write_str
	add	esp, 8
; Line 8495
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+220], 1
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+224], 1
$LN9@ssh2_setup@3:
; Line 8499
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN12@ssh2_setup@3:
; Line 8500
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_setup_pty ENDP
_TEXT	ENDS
EXTRN	_get_ttymode:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_val$ = -16						; size = 4
_key$ = -8						; size = 4
_ssh$ = 8						; size = 4
_do_mode$ = 12						; size = 4
_data$ = 16						; size = 4
_parse_ttymodes PROC
; Line 970
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 975
	lea	eax, DWORD PTR _key$[ebp]
	push	eax
	push	0
	push	48					; 00000030H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _val$[ebp], eax
	jmp	SHORT $LN6@parse_ttym
$LN5@parse_ttym:
	lea	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	push	48					; 00000030H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _val$[ebp], eax
$LN6@parse_ttym:
	cmp	DWORD PTR _val$[ebp], 0
	je	SHORT $LN7@parse_ttym
; Line 981
	mov	ecx, DWORD PTR _val$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 65					; 00000041H
	jne	SHORT $LN3@parse_ttym
; Line 982
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_get_ttymode
	add	esp, 8
	mov	DWORD PTR _val$[ebp], eax
; Line 983
	cmp	DWORD PTR _val$[ebp], 0
	je	SHORT $LN2@parse_ttym
; Line 984
	mov	esi, esp
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	call	DWORD PTR _do_mode$[ebp]
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 985
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
$LN2@parse_ttym:
; Line 987
	jmp	SHORT $LN1@parse_ttym
$LN3@parse_ttym:
; Line 988
	mov	ecx, DWORD PTR _val$[ebp]
	add	ecx, 1
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	call	DWORD PTR _do_mode$[ebp]
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@parse_ttym:
; Line 989
	jmp	$LN5@parse_ttym
$LN7@parse_ttym:
; Line 990
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@parse_ttym
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN11@parse_ttym:
	DD	1
	DD	$LN10@parse_ttym
$LN10@parse_ttym:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN9@parse_ttym
$LN9@parse_ttym:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
_parse_ttymodes ENDP
; Function compile flags: /Odtp /RTCsu
tv75 = -16						; size = 4
_arg$ = -12						; size = 4
_i$ = -8						; size = 4
_pktout$ = -4						; size = 4
_data$ = 8						; size = 4
_mode$ = 12						; size = 4
_val$ = 16						; size = 4
_ssh2_send_ttymode PROC
; Line 8364
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 8365
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _pktout$[ebp], eax
; Line 8366
	mov	DWORD PTR _i$[ebp], 0
; Line 8367
	mov	DWORD PTR _arg$[ebp], 0
$LN7@ssh2_send_:
; Line 8368
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _ssh_ttymodes[ecx]
	push	edx
	mov	eax, DWORD PTR _mode$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@ssh2_send_
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	jmp	SHORT $LN7@ssh2_send_
$LN6@ssh2_send_:
; Line 8369
	cmp	DWORD PTR _i$[ebp], 53			; 00000035H
	jne	SHORT $LN5@ssh2_send_
	jmp	SHORT $LN8@ssh2_send_
$LN5@ssh2_send_:
; Line 8370
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _ssh_ttymodes[edx+8]
	mov	DWORD PTR tv75[ebp], eax
	cmp	DWORD PTR tv75[ebp], 0
	je	SHORT $LN2@ssh2_send_
	cmp	DWORD PTR tv75[ebp], 1
	je	SHORT $LN1@ssh2_send_
	jmp	SHORT $LN3@ssh2_send_
$LN2@ssh2_send_:
; Line 8372
	mov	ecx, DWORD PTR _val$[ebp]
	push	ecx
	call	_ssh_tty_parse_specchar
	add	esp, 4
	mov	DWORD PTR _arg$[ebp], eax
; Line 8373
	jmp	SHORT $LN3@ssh2_send_
$LN1@ssh2_send_:
; Line 8375
	mov	edx, DWORD PTR _val$[ebp]
	push	edx
	call	_ssh_tty_parse_boolean
	add	esp, 4
	mov	DWORD PTR _arg$[ebp], eax
$LN3@ssh2_send_:
; Line 8378
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	movzx	ecx, BYTE PTR _ssh_ttymodes[eax+4]
	push	ecx
	mov	edx, DWORD PTR _pktout$[ebp]
	push	edx
	call	_ssh_pkt_addbyte
	add	esp, 8
; Line 8379
	mov	eax, DWORD PTR _arg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh_pkt_adduint32
	add	esp, 8
$LN8@ssh2_send_:
; Line 8380
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_send_ttymode ENDP
_TEXT	ENDS
EXTRN	_ctrlparse:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_next$87376 = -12					; size = 4
_ret$ = -4						; size = 4
_s$ = 8							; size = 4
_ssh_tty_parse_specchar PROC
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 159
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@ssh_tty_pa
; Line 160
	mov	DWORD PTR _next$87376[ebp], 0
; Line 161
	lea	edx, DWORD PTR _next$87376[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrlparse
	add	esp, 8
	movsx	ecx, al
	mov	DWORD PTR _ret$[ebp], ecx
; Line 162
	cmp	DWORD PTR _next$87376[ebp], 0
	jne	SHORT $LN2@ssh_tty_pa
	mov	edx, DWORD PTR _s$[ebp]
	movsx	eax, BYTE PTR [edx]
	mov	DWORD PTR _ret$[ebp], eax
$LN2@ssh_tty_pa:
; Line 163
	jmp	SHORT $LN1@ssh_tty_pa
$LN3@ssh_tty_pa:
; Line 164
	mov	DWORD PTR _ret$[ebp], 255		; 000000ffH
$LN1@ssh_tty_pa:
; Line 166
	mov	eax, DWORD PTR _ret$[ebp]
; Line 167
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@ssh_tty_pa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@ssh_tty_pa:
	DD	1
	DD	$LN7@ssh_tty_pa
$LN7@ssh_tty_pa:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN6@ssh_tty_pa
$LN6@ssh_tty_pa:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
_ssh_tty_parse_specchar ENDP
_TEXT	ENDS
EXTRN	_stricmp:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ssh_tty_parse_boolean PROC
; Line 169
	push	ebp
	mov	ebp, esp
; Line 173
	push	OFFSET $SG87386
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@ssh_tty_pa@2
	push	OFFSET $SG87387
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@ssh_tty_pa@2
	push	OFFSET $SG87388
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@ssh_tty_pa@2
	push	OFFSET $SG87389
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@ssh_tty_pa@2
$LN5@ssh_tty_pa@2:
; Line 174
	mov	eax, 1
	jmp	SHORT $LN7@ssh_tty_pa@2
; Line 175
	jmp	SHORT $LN7@ssh_tty_pa@2
$LN6@ssh_tty_pa@2:
; Line 178
	push	OFFSET $SG87393
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@ssh_tty_pa@2
	push	OFFSET $SG87394
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@ssh_tty_pa@2
	push	OFFSET $SG87395
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@ssh_tty_pa@2
	push	OFFSET $SG87396
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@ssh_tty_pa@2
$LN2@ssh_tty_pa@2:
; Line 179
	xor	eax, eax
	jmp	SHORT $LN7@ssh_tty_pa@2
; Line 180
	jmp	SHORT $LN7@ssh_tty_pa@2
$LN3@ssh_tty_pa@2:
; Line 181
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_atoi
	add	esp, 4
	neg	eax
	sbb	eax, eax
	neg	eax
$LN7@ssh_tty_pa@2:
; Line 182
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh_tty_parse_boolean ENDP
; Function compile flags: /Odtp /RTCsu
tv68 = -36						; size = 4
_val$92925 = -32					; size = 4
_key$92924 = -24					; size = 4
_crLine$92918 = -16					; size = 4
_s$ = -12						; size = 4
_pktout$ = -8						; size = 4
_ssh$ = -4						; size = 4
_c$ = 8							; size = 4
_pktin$ = 12						; size = 4
_ctx$ = 16						; size = 4
_ssh2_setup_env PROC
; Line 8504
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 8509
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ssh$[ebp], ecx
; Line 8511
	cmp	DWORD PTR _ctx$[ebp], 0
	jne	SHORT $LN21@ssh2_setup@4
	push	16					; 00000010H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _ctx$[ebp], eax
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _s$[ebp], edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax], 0
$LN21@ssh2_setup@4:
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _s$[ebp], ecx
; Line 8513
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR _crLine$92918[ebp], edx
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv68[ebp], ecx
	cmp	DWORD PTR tv68[ebp], 0
	je	SHORT $LN18@ssh2_setup@4
	cmp	DWORD PTR tv68[ebp], 8546		; 00002162H
	je	$LN9@ssh2_setup@4
	jmp	$out$92943
$LN18@ssh2_setup@4:
; Line 8521
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 8527
	lea	eax, DWORD PTR _key$92924[ebp]
	push	eax
	push	0
	push	49					; 00000031H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _val$92925[ebp], eax
	jmp	SHORT $LN17@ssh2_setup@4
$LN16@ssh2_setup@4:
	lea	eax, DWORD PTR _key$92924[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$92924[ebp]
	push	ecx
	push	49					; 00000031H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_str_strs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _val$92925[ebp], eax
$LN17@ssh2_setup@4:
	cmp	DWORD PTR _val$92925[ebp], 0
	je	SHORT $LN15@ssh2_setup@4
; Line 8528
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	push	OFFSET _ssh2_setup_env
	push	OFFSET $SG92931
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+252]
	push	eax
	call	_ssh2_chanreq_init
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pktout$[ebp], eax
; Line 8529
	mov	ecx, DWORD PTR _key$92924[ebp]
	push	ecx
	mov	edx, DWORD PTR _pktout$[ebp]
	push	edx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 8530
	mov	eax, DWORD PTR _val$92925[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 8531
	mov	edx, DWORD PTR _pktout$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_pkt_send
	add	esp, 8
; Line 8533
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 8534
	jmp	$LN16@ssh2_setup@4
$LN15@ssh2_setup@4:
; Line 8535
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN14@ssh2_setup@4
; Line 8536
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	push	OFFSET $SG92933
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 12					; 0000000cH
$LN14@ssh2_setup@4:
; Line 8539
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	$out$92943
; Line 8540
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 8541
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+8], eax
$LN12@ssh2_setup@4:
; Line 8543
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jle	SHORT $LN11@ssh2_setup@4
$LN10@ssh2_setup@4:
; Line 8546
	mov	edx, DWORD PTR _crLine$92918[ebp]
	mov	DWORD PTR [edx], 8546			; 00002162H
	jmp	$LN22@ssh2_setup@4
$LN9@ssh2_setup@4:
	xor	eax, eax
	jne	SHORT $LN10@ssh2_setup@4
; Line 8547
	cmp	DWORD PTR _pktin$[ebp], 0
	jne	SHORT $LN6@ssh2_setup@4
	jmp	$out$92943
$LN6@ssh2_setup@4:
; Line 8548
	mov	ecx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [ecx+8], 99			; 00000063H
	jne	SHORT $LN5@ssh2_setup@4
; Line 8549
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+12]
	add	eax, 1
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+12], eax
$LN5@ssh2_setup@4:
; Line 8550
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, 1
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 8551
	jmp	SHORT $LN12@ssh2_setup@4
$LN11@ssh2_setup@4:
; Line 8553
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN4@ssh2_setup@4
; Line 8554
	push	OFFSET $SG92946
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
	jmp	SHORT $out$92943
$LN4@ssh2_setup@4:
; Line 8555
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jne	SHORT $LN2@ssh2_setup@4
; Line 8556
	push	OFFSET $SG92949
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 8557
	push	OFFSET $SG92950
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_c_write_str
	add	esp, 8
; Line 8558
	jmp	SHORT $out$92943
$LN2@ssh2_setup@4:
; Line 8560
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	sub	ecx, DWORD PTR [eax+12]
	push	ecx
	push	OFFSET $SG92952
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 8561
	push	OFFSET $SG92953
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_c_write_str
	add	esp, 8
$out$92943:
; Line 8565
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN22@ssh2_setup@4:
; Line 8566
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@ssh2_setup@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN26@ssh2_setup@4:
	DD	1
	DD	$LN25@ssh2_setup@4
$LN25@ssh2_setup@4:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN24@ssh2_setup@4
$LN24@ssh2_setup@4:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
_ssh2_setup_env ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh2_msg_authconn PROC
; Line 8572
	push	ebp
	mov	ebp, esp
; Line 8573
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_do_ssh2_authconn
	add	esp, 16					; 00000010H
; Line 8574
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh2_msg_authconn ENDP
; Function compile flags: /Odtp /RTCsu
_c$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ctx$ = 16						; size = 4
_ssh2_response_authconn PROC
; Line 8578
	push	ebp
	mov	ebp, esp
; Line 8579
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN2@ssh2_respo
; Line 8580
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_do_ssh2_authconn
	add	esp, 16					; 00000010H
$LN2@ssh2_respo:
; Line 8581
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh2_response_authconn ENDP
; Function compile flags: /Odtp /RTCsu
_buf$ = -4						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh2_msg_unexpected PROC
; Line 10349
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 10352
	mov	eax, DWORD PTR _pktin$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+348]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+344]
	push	edx
	call	_ssh2_pkt_type
	add	esp, 12					; 0000000cH
	push	eax
	push	OFFSET $SG93891
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax
; Line 10353
	push	0
	push	2
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_disconnect
	add	esp, 20					; 00000014H
; Line 10354
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 10355
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_msg_unexpected ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = -4						; size = 4
_ctx$ = 8						; size = 4
_now$ = 12						; size = 4
_ssh2_timer PROC
; Line 10473
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 10474
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 10476
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+280], 4
	jne	SHORT $LN2@ssh2_timer
; Line 10477
	jmp	SHORT $LN3@ssh2_timer
$LN2@ssh2_timer:
; Line 10481
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+1640], 0
	jne	SHORT $LN3@ssh2_timer
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+196], 0
	jne	SHORT $LN3@ssh2_timer
	push	24					; 00000018H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@ssh2_timer
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR _now$[ebp]
	cmp	ecx, DWORD PTR [eax+1644]
	jne	SHORT $LN3@ssh2_timer
; Line 10482
	push	0
	push	-1
	push	OFFSET $SG93924
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_do_ssh2_transport
	add	esp, 16					; 00000010H
$LN3@ssh2_timer:
; Line 10484
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_timer ENDP
_TEXT	ENDS
EXTRN	_random_unref:PROC
EXTRN	_random_ref:PROC
EXTRN	_parse_blocksize:PROC
EXTRN	_x11_authcmp:PROC
EXTRN	_conf_copy:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ssh$ = -8						; size = 4
_p$ = -4						; size = 4
_frontend_handle$ = 8					; size = 4
_backend_handle$ = 12					; size = 4
_conf$ = 16						; size = 4
_host$ = 20						; size = 4
_port$ = 24						; size = 4
_realhost$ = 28						; size = 4
_nodelay$ = 32						; size = 4
_keepalive$ = 36					; size = 4
_ssh_init PROC
; Line 10535
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 10539
	push	1664					; 00000680H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _ssh$[ebp], eax
; Line 10540
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_copy
	add	esp, 4
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+540], eax
; Line 10541
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_cache_conf_values
	add	esp, 4
; Line 10542
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+364], 0
; Line 10543
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+16], 0
; Line 10544
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+84], 0
; Line 10545
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+88], 0
; Line 10546
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+92], 0
; Line 10547
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+96], 0
; Line 10548
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+104], 0
; Line 10549
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+100], 0
; Line 10550
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+108], 0
; Line 10551
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+112], 0
; Line 10552
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+120], 0
; Line 10553
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+116], 0
; Line 10554
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+124], 0
; Line 10555
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+128], 0
; Line 10556
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+136], 0
; Line 10557
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+132], 0
; Line 10558
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+140], 0
; Line 10559
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+144], 0
; Line 10560
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+192], 0
; Line 10561
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+148], 0
; Line 10562
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+152], 0
; Line 10563
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+260], -1
; Line 10564
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+264], 0
; Line 10565
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+268], 0
; Line 10566
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+280], 0
; Line 10567
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+284], 0
; Line 10568
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+288], 0
; Line 10569
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 10570
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+24], 0
; Line 10571
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+316], 0
; Line 10572
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+320], 0
; Line 10573
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+324], 0
; Line 10574
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+328], 0
; Line 10575
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+344], 0
; Line 10576
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+348], 0
; Line 10577
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+352], 0
; Line 10578
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+356], 0
; Line 10579
	push	OFFSET _x11_authcmp
	call	_newtree234
	add	esp, 4
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+360], eax
; Line 10580
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+60], 0
; Line 10581
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+384], 0
; Line 10582
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+388], 0
; Line 10583
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+392], 0
; Line 10584
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+396], 0
; Line 10585
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+400], 0
; Line 10586
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+404], 0
; Line 10587
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+408], 0
; Line 10588
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+424], 0
; Line 10589
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+412], 0
; Line 10590
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+416], 0
; Line 10591
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+420], 0
; Line 10592
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 10593
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 10594
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+252], 0
; Line 10595
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+376], 0
; Line 10596
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+380], 0
; Line 10597
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+300], 0
; Line 10598
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+308], 0
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+304], 0
; Line 10599
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+312], 0
; Line 10600
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+1608], 0
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+1604], 0
; Line 10601
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+1652], 0
; Line 10602
	mov	edx, DWORD PTR _ssh$[ebp]
	add	edx, 568				; 00000238H
	push	edx
	call	_bufchain_init
	add	esp, 4
; Line 10603
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+564], 0
; Line 10604
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+548], 0
; Line 10605
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+292], 0
; Line 10606
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+296], 0
; Line 10607
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+196], 0
; Line 10608
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+76], 0
; Line 10609
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+204], 0
; Line 10610
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+200], 0
; Line 10612
	mov	edx, DWORD PTR _backend_handle$[ebp]
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx], eax
; Line 10619
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR _frontend_handle$[ebp]
	mov	DWORD PTR [ecx+228], edx
; Line 10620
	push	110					; 0000006eH
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+240], eax
; Line 10621
	push	111					; 0000006fH
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+244], eax
; Line 10623
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+248], 0
; Line 10624
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+272], 0
; Line 10625
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+276], 0
; Line 10627
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+216], 0
; Line 10628
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+224], 0
; Line 10629
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+220], 0
; Line 10630
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+368], 0
; Line 10631
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+372], 0
; Line 10632
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+328], 0
; Line 10634
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+528], 0
; Line 10636
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+524], 0
; Line 10638
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+1620], 0
; Line 10641
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+1632], 0
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+1628], 0
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+1624], 0
; Line 10643
	push	25					; 00000019H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	push	eax
	call	_parse_blocksize
	add	esp, 4
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+1636], eax
; Line 10644
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+1640], 0
; Line 10647
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+1660], 0
; Line 10650
	call	_random_ref
; Line 10652
	mov	edx, DWORD PTR _keepalive$[ebp]
	push	edx
	mov	eax, DWORD PTR _nodelay$[ebp]
	push	eax
	mov	ecx, DWORD PTR _realhost$[ebp]
	push	ecx
	mov	edx, DWORD PTR _port$[ebp]
	push	edx
	mov	eax, DWORD PTR _host$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_connect_to_host
	add	esp, 24					; 00000018H
	mov	DWORD PTR _p$[ebp], eax
; Line 10653
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN1@ssh_init
; Line 10654
	call	_random_unref
; Line 10655
	mov	eax, DWORD PTR _p$[ebp]
	jmp	SHORT $LN2@ssh_init
$LN1@ssh_init:
; Line 10658
	xor	eax, eax
$LN2@ssh_init:
; Line 10659
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_init ENDP
_TEXT	ENDS
EXTRN	_new_connection:PROC
EXTRN	_sk_addr_free:PROC
EXTRN	_sk_addr_error:PROC
EXTRN	_name_lookup:PROC
EXTRN	_ssh_connection_sharing_init:PROC
EXTRN	_host_strrchr:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv156 = -36						; size = 4
tv157 = -32						; size = 4
_colon$89857 = -28					; size = 4
_tmphost$89856 = -24					; size = 4
_sshprot$ = -20						; size = 4
_addressfamily$ = -16					; size = 4
_loghost$ = -12						; size = 4
_err$ = -8						; size = 4
_addr$ = -4						; size = 4
_ssh$ = 8						; size = 4
_host$ = 12						; size = 4
_port$ = 16						; size = 4
_realhost$ = 20						; size = 4
_nodelay$ = 24						; size = 4
_keepalive$ = 28					; size = 4
_connect_to_host PROC
; Line 3424
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 3438
	push	9
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	mov	DWORD PTR _loghost$[ebp], eax
; Line 3439
	mov	edx, DWORD PTR _loghost$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	$LN12@connect_to
; Line 3443
	mov	ecx, DWORD PTR _loghost$[ebp]
	push	ecx
	call	_dupstr
	add	esp, 4
	mov	DWORD PTR _tmphost$89856[ebp], eax
; Line 3444
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+212], 22			; 00000016H
; Line 3451
	push	58					; 0000003aH
	mov	eax, DWORD PTR _tmphost$89856[ebp]
	push	eax
	call	_host_strrchr
	add	esp, 8
	mov	DWORD PTR _colon$89857[ebp], eax
; Line 3452
	cmp	DWORD PTR _colon$89857[ebp], 0
	je	SHORT $LN11@connect_to
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _tmphost$89856[ebp]
	push	ecx
	call	_host_strchr
	add	esp, 8
	cmp	DWORD PTR _colon$89857[ebp], eax
	jne	SHORT $LN11@connect_to
; Line 3453
	mov	edx, DWORD PTR _colon$89857[ebp]
	mov	BYTE PTR [edx], 0
	mov	eax, DWORD PTR _colon$89857[ebp]
	add	eax, 1
	mov	DWORD PTR _colon$89857[ebp], eax
; Line 3454
	mov	ecx, DWORD PTR _colon$89857[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN11@connect_to
; Line 3455
	mov	eax, DWORD PTR _colon$89857[ebp]
	push	eax
	call	_atoi
	add	esp, 4
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+212], eax
$LN11@connect_to:
; Line 3458
	mov	edx, DWORD PTR _tmphost$89856[ebp]
	push	edx
	call	_host_strduptrim
	add	esp, 4
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+208], eax
; Line 3459
	mov	edx, DWORD PTR _tmphost$89856[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 3460
	jmp	SHORT $LN9@connect_to
$LN12@connect_to:
; Line 3461
	mov	eax, DWORD PTR _host$[ebp]
	push	eax
	call	_host_strduptrim
	add	esp, 4
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+208], eax
; Line 3462
	cmp	DWORD PTR _port$[ebp], 0
	jge	SHORT $LN8@connect_to
; Line 3463
	mov	DWORD PTR _port$[ebp], 22		; 00000016H
$LN8@connect_to:
; Line 3464
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR _port$[ebp]
	mov	DWORD PTR [edx+212], eax
$LN9@connect_to:
; Line 3467
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx], OFFSET ?fn_table@?1??connect_to_host@@9@9
; Line 3478
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+204], 0
; Line 3479
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+200], 1
; Line 3481
	mov	ecx, DWORD PTR _ssh$[ebp]
	add	ecx, 204				; 000000ccH
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+212]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+208]
	push	edx
	call	_ssh_connection_sharing_init
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 3482
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+200], 0
; Line 3483
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN7@connect_to
; Line 3487
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+196], 1
; Line 3488
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+536], OFFSET _do_ssh_connection_init
; Line 3489
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+1656], 0
; Line 3490
	mov	ecx, DWORD PTR _host$[ebp]
	push	ecx
	call	_dupstr
	add	esp, 4
	mov	edx, DWORD PTR _realhost$[ebp]
	mov	DWORD PTR [edx], eax
; Line 3491
	jmp	$LN6@connect_to
$LN7@connect_to:
; Line 3495
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+536], OFFSET _do_ssh_init
; Line 3500
	push	3
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_int
	add	esp, 8
	mov	DWORD PTR _addressfamily$[ebp], eax
; Line 3503
	cmp	DWORD PTR _addressfamily$[ebp], 1
	jne	SHORT $LN17@connect_to
	mov	DWORD PTR tv157[ebp], OFFSET $SG89867
	jmp	SHORT $LN18@connect_to
$LN17@connect_to:
	cmp	DWORD PTR _addressfamily$[ebp], 2
	jne	SHORT $LN15@connect_to
	mov	DWORD PTR tv156[ebp], OFFSET $SG89868
	jmp	SHORT $LN16@connect_to
$LN15@connect_to:
	mov	DWORD PTR tv156[ebp], OFFSET $SG89869
$LN16@connect_to:
	mov	eax, DWORD PTR tv156[ebp]
	mov	DWORD PTR tv157[ebp], eax
$LN18@connect_to:
	mov	ecx, DWORD PTR tv157[ebp]
	push	ecx
	mov	edx, DWORD PTR _host$[ebp]
	push	edx
	push	OFFSET $SG89870
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 16					; 00000010H
; Line 3504
	mov	ecx, DWORD PTR _addressfamily$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	mov	ecx, DWORD PTR _realhost$[ebp]
	push	ecx
	mov	edx, DWORD PTR _port$[ebp]
	push	edx
	mov	eax, DWORD PTR _host$[ebp]
	push	eax
	call	_name_lookup
	add	esp, 20					; 00000014H
	mov	DWORD PTR _addr$[ebp], eax
; Line 3505
	mov	ecx, DWORD PTR _addr$[ebp]
	push	ecx
	call	_sk_addr_error
	add	esp, 4
	mov	DWORD PTR _err$[ebp], eax
	cmp	DWORD PTR _err$[ebp], 0
	je	SHORT $LN5@connect_to
; Line 3506
	mov	edx, DWORD PTR _addr$[ebp]
	push	edx
	call	_sk_addr_free
	add	esp, 4
; Line 3507
	mov	eax, DWORD PTR _err$[ebp]
	jmp	$LN13@connect_to
$LN5@connect_to:
; Line 3509
	mov	eax, DWORD PTR _realhost$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_dupstr
	add	esp, 4
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+1656], eax
; Line 3513
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	mov	eax, DWORD PTR _keepalive$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nodelay$[ebp]
	push	ecx
	push	1
	push	0
	mov	edx, DWORD PTR _port$[ebp]
	push	edx
	mov	eax, DWORD PTR _realhost$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _addr$[ebp]
	push	edx
	call	_new_connection
	add	esp, 36					; 00000024H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 3514
	mov	esi, esp
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+28]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _err$[ebp], eax
	cmp	DWORD PTR _err$[ebp], 0
	je	SHORT $LN6@connect_to
; Line 3515
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+16], 0
; Line 3516
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_notify_remote_exit
	add	esp, 4
; Line 3517
	mov	eax, DWORD PTR _err$[ebp]
	jmp	$LN13@connect_to
$LN6@connect_to:
; Line 3525
	push	31					; 0000001fH
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	DWORD PTR _sshprot$[ebp], eax
; Line 3526
	cmp	DWORD PTR _sshprot$[ebp], 0
	jne	SHORT $LN3@connect_to
; Line 3527
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+364], 1
$LN3@connect_to:
; Line 3528
	cmp	DWORD PTR _sshprot$[ebp], 3
	jne	SHORT $LN2@connect_to
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+196], 0
	jne	SHORT $LN2@connect_to
; Line 3529
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+364], 2
; Line 3530
	push	0
	push	OFFSET $SG89880
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_send_verstring
	add	esp, 12					; 0000000cH
$LN2@connect_to:
; Line 3536
	mov	edx, DWORD PTR _loghost$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN1@connect_to
; Line 3537
	mov	ecx, DWORD PTR _realhost$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_safefree
	add	esp, 4
; Line 3538
	mov	eax, DWORD PTR _loghost$[ebp]
	push	eax
	call	_dupstr
	add	esp, 4
	mov	ecx, DWORD PTR _realhost$[ebp]
	mov	DWORD PTR [ecx], eax
$LN1@connect_to:
; Line 3541
	xor	eax, eax
$LN13@connect_to:
; Line 3542
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_connect_to_host ENDP
_TEXT	ENDS
EXTRN	_strcspn:PROC
EXTRN	_sshver:BYTE
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv84 = -12						; size = 4
_len$89423 = -8						; size = 4
_verstring$ = -4					; size = 4
_ssh$ = 8						; size = 4
_protoname$ = 12					; size = 4
_svers$ = 16						; size = 4
_ssh_send_verstring PROC
; Line 2854
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2857
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+364], 2
	jne	SHORT $LN3@ssh_send_v
; Line 2861
	push	OFFSET _sshver
	mov	ecx, DWORD PTR _protoname$[ebp]
	push	ecx
	push	OFFSET $SG89413
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _verstring$[ebp], eax
; Line 2862
	jmp	SHORT $LN2@ssh_send_v
$LN3@ssh_send_v:
; Line 2866
	push	OFFSET $SG89416
	mov	edx, DWORD PTR _protoname$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@ssh_send_v
	push	2866					; 00000b32H
	push	OFFSET $SG89417
	push	OFFSET $SG89418
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@ssh_send_v:
; Line 2870
	push	OFFSET $SG89419
	mov	ecx, DWORD PTR _svers$[ebp]
	push	ecx
	call	_ssh_versioncmp
	add	esp, 8
	test	eax, eax
	jg	SHORT $LN7@ssh_send_v
	mov	edx, DWORD PTR _svers$[ebp]
	mov	DWORD PTR tv84[ebp], edx
	jmp	SHORT $LN8@ssh_send_v
$LN7@ssh_send_v:
	mov	DWORD PTR tv84[ebp], OFFSET $SG89420
$LN8@ssh_send_v:
	push	OFFSET _sshver
	mov	eax, DWORD PTR tv84[ebp]
	push	eax
	push	OFFSET $SG89421
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _verstring$[ebp], eax
$LN2@ssh_send_v:
; Line 2873
	mov	ecx, DWORD PTR _protoname$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _verstring$[ebp]
	push	eax
	call	_ssh_fix_verstring
	add	esp, 4
; Line 2875
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+364], 2
	jne	SHORT $LN1@ssh_send_v
; Line 2880
	push	OFFSET $SG89424
	mov	eax, DWORD PTR _verstring$[ebp]
	push	eax
	call	_strcspn
	add	esp, 8
	mov	DWORD PTR _len$89423[ebp], eax
; Line 2881
	push	1
	mov	ecx, DWORD PTR _len$89423[ebp]
	add	ecx, 1
	push	ecx
	call	_safemalloc
	add	esp, 8
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 2882
	mov	eax, DWORD PTR _len$89423[ebp]
	push	eax
	mov	ecx, DWORD PTR _verstring$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2883
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _len$89423[ebp]
	mov	BYTE PTR [edx+eax], 0
$LN1@ssh_send_v:
; Line 2887
	mov	ecx, DWORD PTR _verstring$[ebp]
	push	ecx
	push	OFFSET $SG89427
	mov	edx, DWORD PTR _verstring$[ebp]
	push	edx
	call	_strcspn
	add	esp, 8
	push	eax
	push	OFFSET $SG89428
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 16					; 00000010H
; Line 2888
	mov	ecx, DWORD PTR _verstring$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _verstring$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_s_write
	add	esp, 12					; 0000000cH
; Line 2889
	mov	ecx, DWORD PTR _verstring$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 2890
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_send_verstring ENDP
_TEXT	ENDS
EXTRN	_strtoul:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bv$ = -32						; size = 4
_av$ = -28						; size = 4
_be$ = -20						; size = 4
_ae$ = -8						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_ssh_versioncmp PROC
; Line 1971
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1975
	push	10					; 0000000aH
	lea	eax, DWORD PTR _ae$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	push	ecx
	call	_strtoul
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _av$[ebp], eax
; Line 1976
	push	10					; 0000000aH
	lea	edx, DWORD PTR _be$[ebp]
	push	edx
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_strtoul
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bv$[ebp], eax
; Line 1977
	mov	ecx, DWORD PTR _av$[ebp]
	cmp	ecx, DWORD PTR _bv$[ebp]
	je	SHORT $LN4@ssh_versio
; Line 1978
	mov	edx, DWORD PTR _av$[ebp]
	cmp	edx, DWORD PTR _bv$[ebp]
	sbb	eax, eax
	and	eax, -2					; fffffffeH
	add	eax, 1
	jmp	SHORT $LN5@ssh_versio
$LN4@ssh_versio:
; Line 1979
	mov	eax, DWORD PTR _ae$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 46					; 0000002eH
	jne	SHORT $LN3@ssh_versio
; Line 1980
	mov	edx, DWORD PTR _ae$[ebp]
	add	edx, 1
	mov	DWORD PTR _ae$[ebp], edx
$LN3@ssh_versio:
; Line 1981
	mov	eax, DWORD PTR _be$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 46					; 0000002eH
	jne	SHORT $LN2@ssh_versio
; Line 1982
	mov	edx, DWORD PTR _be$[ebp]
	add	edx, 1
	mov	DWORD PTR _be$[ebp], edx
$LN2@ssh_versio:
; Line 1983
	push	10					; 0000000aH
	lea	eax, DWORD PTR _ae$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ae$[ebp]
	push	ecx
	call	_strtoul
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _av$[ebp], eax
; Line 1984
	push	10					; 0000000aH
	lea	edx, DWORD PTR _be$[ebp]
	push	edx
	mov	eax, DWORD PTR _be$[ebp]
	push	eax
	call	_strtoul
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bv$[ebp], eax
; Line 1985
	mov	ecx, DWORD PTR _av$[ebp]
	cmp	ecx, DWORD PTR _bv$[ebp]
	je	SHORT $LN1@ssh_versio
; Line 1986
	mov	edx, DWORD PTR _av$[ebp]
	cmp	edx, DWORD PTR _bv$[ebp]
	sbb	eax, eax
	and	eax, -2					; fffffffeH
	add	eax, 1
	jmp	SHORT $LN5@ssh_versio
$LN1@ssh_versio:
; Line 1987
	xor	eax, eax
$LN5@ssh_versio:
; Line 1988
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@ssh_versio
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@ssh_versio:
	DD	2
	DD	$LN9@ssh_versio
$LN9@ssh_versio:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN7@ssh_versio
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@ssh_versio
$LN8@ssh_versio:
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	0
$LN7@ssh_versio:
	DB	97					; 00000061H
	DB	101					; 00000065H
	DB	0
_ssh_versioncmp ENDP
; Function compile flags: /Odtp /RTCsu
_str$ = 8						; size = 4
_ssh_fix_verstring PROC
; Line 2836
	push	ebp
	mov	ebp, esp
$LN6@ssh_fix_ve:
; Line 2838
	mov	eax, DWORD PTR _str$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN5@ssh_fix_ve
	mov	edx, DWORD PTR _str$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 45					; 0000002dH
	je	SHORT $LN5@ssh_fix_ve
	mov	ecx, DWORD PTR _str$[ebp]
	add	ecx, 1
	mov	DWORD PTR _str$[ebp], ecx
	jmp	SHORT $LN6@ssh_fix_ve
$LN5@ssh_fix_ve:
; Line 2839
	mov	edx, DWORD PTR _str$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 45					; 0000002dH
	je	SHORT $LN9@ssh_fix_ve
	push	2839					; 00000b17H
	push	OFFSET $SG89396
	push	OFFSET $SG89397
	call	__wassert
	add	esp, 12					; 0000000cH
$LN9@ssh_fix_ve:
	mov	edx, DWORD PTR _str$[ebp]
	add	edx, 1
	mov	DWORD PTR _str$[ebp], edx
$LN4@ssh_fix_ve:
; Line 2843
	mov	eax, DWORD PTR _str$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN7@ssh_fix_ve
; Line 2844
	mov	edx, DWORD PTR _str$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 45					; 0000002dH
	je	SHORT $LN1@ssh_fix_ve
	mov	ecx, DWORD PTR _str$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 32					; 00000020H
	jne	SHORT $LN2@ssh_fix_ve
$LN1@ssh_fix_ve:
; Line 2845
	mov	eax, DWORD PTR _str$[ebp]
	mov	BYTE PTR [eax], 95			; 0000005fH
$LN2@ssh_fix_ve:
; Line 2846
	mov	ecx, DWORD PTR _str$[ebp]
	add	ecx, 1
	mov	DWORD PTR _str$[ebp], ecx
; Line 2847
	jmp	SHORT $LN4@ssh_fix_ve
$LN7@ssh_fix_ve:
; Line 2848
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh_fix_verstring ENDP
_TEXT	ENDS
EXTRN	_pinger_new:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv71 = -20						; size = 4
tv67 = -16						; size = 4
_len$89519 = -12					; size = 4
_crLine$89450 = -8					; size = 4
_s$ = -4						; size = 4
_ssh$ = 8						; size = 4
_c$ = 12						; size = 1
_do_ssh_init PROC
; Line 2893
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 2905
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+408], 0
	jne	SHORT $LN52@do_ssh_ini
	push	40					; 00000028H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR tv67[ebp], eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR tv67[ebp]
	mov	DWORD PTR [ecx+408], edx
	mov	eax, DWORD PTR tv67[ebp]
	mov	DWORD PTR _s$[ebp], eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx], 0
$LN52@do_ssh_ini:
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+408]
	mov	DWORD PTR _s$[ebp], eax
; Line 2907
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR _crLine$89450[ebp], ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv71[ebp], eax
	cmp	DWORD PTR tv71[ebp], 2919		; 00000b67H
	jg	SHORT $LN55@do_ssh_ini
	cmp	DWORD PTR tv71[ebp], 2919		; 00000b67H
	je	$LN35@do_ssh_ini
	cmp	DWORD PTR tv71[ebp], 0
	je	SHORT $LN48@do_ssh_ini
	cmp	DWORD PTR tv71[ebp], 2914		; 00000b62H
	je	SHORT $LN41@do_ssh_ini
	jmp	$LN50@do_ssh_ini
$LN55@do_ssh_ini:
	cmp	DWORD PTR tv71[ebp], 2920		; 00000b68H
	je	$LN31@do_ssh_ini
	cmp	DWORD PTR tv71[ebp], 2942		; 00000b7eH
	je	$LN18@do_ssh_ini
	jmp	$LN50@do_ssh_ini
$LN48@do_ssh_ini:
; Line 2912
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+28], 0
	jmp	SHORT $LN46@do_ssh_ini
$LN45@do_ssh_ini:
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+28]
	add	eax, 1
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+28], eax
$LN46@do_ssh_ini:
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+28]
	movsx	ecx, BYTE PTR ?protoname@?1??do_ssh_init@@9@9[eax]
	test	ecx, ecx
	je	SHORT $LN44@do_ssh_ini
; Line 2913
	movsx	edx, BYTE PTR _c$[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movsx	eax, BYTE PTR ?protoname@?1??do_ssh_init@@9@9[ecx]
	cmp	edx, eax
	je	SHORT $LN42@do_ssh_ini
	jmp	SHORT $no$89464
$LN42@do_ssh_ini:
; Line 2914
	mov	ecx, DWORD PTR _crLine$89450[ebp]
	mov	DWORD PTR [ecx], 2914			; 00000b62H
	mov	eax, 1
	jmp	$LN53@do_ssh_ini
$LN41@do_ssh_ini:
	xor	edx, edx
	jne	SHORT $LN42@do_ssh_ini
; Line 2915
	jmp	SHORT $LN45@do_ssh_ini
$LN44@do_ssh_ini:
; Line 2916
	jmp	SHORT $LN47@do_ssh_ini
$no$89464:
; Line 2918
	movzx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN32@do_ssh_ini
$LN36@do_ssh_ini:
; Line 2919
	mov	ecx, DWORD PTR _crLine$89450[ebp]
	mov	DWORD PTR [ecx], 2919			; 00000b67H
	mov	eax, 1
	jmp	$LN53@do_ssh_ini
$LN35@do_ssh_ini:
	xor	edx, edx
	jne	SHORT $LN36@do_ssh_ini
	jmp	SHORT $no$89464
$LN32@do_ssh_ini:
; Line 2920
	mov	eax, DWORD PTR _crLine$89450[ebp]
	mov	DWORD PTR [eax], 2920			; 00000b68H
	mov	eax, 1
	jmp	$LN53@do_ssh_ini
$LN31@do_ssh_ini:
	xor	ecx, ecx
	jne	SHORT $LN32@do_ssh_ini
; Line 2921
	jmp	$LN48@do_ssh_ini
$LN47@do_ssh_ini:
; Line 2923
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+24], 21			; 00000015H
; Line 2924
	push	1
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_safemalloc
	add	esp, 8
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 2925
	push	OFFSET ?protoname@?1??do_ssh_init@@9@9
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 2926
	push	OFFSET ?protoname@?1??do_ssh_init@@9@9
	call	_strlen
	add	esp, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 2927
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+28], 0
$LN28@do_ssh_ini:
; Line 2928
	mov	ecx, 1
	test	ecx, ecx
	je	$LN27@do_ssh_ini
; Line 2929
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+24]
	sub	eax, 1
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+4], eax
	jl	SHORT $LN26@do_ssh_ini
; Line 2930
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+24]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 2931
	push	1
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+20], eax
$LN26@do_ssh_ini:
; Line 2933
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	cl, BYTE PTR _c$[ebp]
	mov	BYTE PTR [eax+edx], cl
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 2934
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+28], 0
	jl	SHORT $LN25@do_ssh_ini
; Line 2935
	movzx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 45					; 0000002dH
	jne	SHORT $LN24@do_ssh_ini
; Line 2936
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax+edx+8], 0
; Line 2937
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+28], -1
	jmp	SHORT $LN23@do_ssh_ini
$LN24@do_ssh_ini:
; Line 2938
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+28], 9
	jae	SHORT $LN23@do_ssh_ini
; Line 2939
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _s$[ebp]
	mov	al, BYTE PTR _c$[ebp]
	mov	BYTE PTR [edx+ecx+8], al
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	add	edx, 1
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+28], edx
$LN23@do_ssh_ini:
; Line 2940
	jmp	SHORT $LN19@do_ssh_ini
$LN25@do_ssh_ini:
	movzx	ecx, BYTE PTR _c$[ebp]
	cmp	ecx, 10					; 0000000aH
	jne	SHORT $LN19@do_ssh_ini
; Line 2941
	jmp	SHORT $LN27@do_ssh_ini
$LN19@do_ssh_ini:
; Line 2942
	mov	edx, DWORD PTR _crLine$89450[ebp]
	mov	DWORD PTR [edx], 2942			; 00000b7eH
	mov	eax, 1
	jmp	$LN53@do_ssh_ini
$LN18@do_ssh_ini:
	xor	eax, eax
	jne	SHORT $LN19@do_ssh_ini
; Line 2943
	jmp	$LN28@do_ssh_ini
$LN27@do_ssh_ini:
; Line 2945
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+72], 0
; Line 2946
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+496], 0
; Line 2948
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	BYTE PTR [ecx+eax], 0
; Line 2949
	push	OFFSET $SG89499
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	_strcspn
	add	esp, 8
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	BYTE PTR [eax+edx], 0
; Line 2950
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	OFFSET $SG89500
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 2951
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_detect_bugs
	add	esp, 8
; Line 2958
	push	OFFSET $SG89501
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 8
	push	eax
	call	_ssh_versioncmp
	add	esp, 8
	xor	ecx, ecx
	test	eax, eax
	setl	cl
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+32], ecx
; Line 2960
	push	OFFSET $SG89502
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 8
	push	eax
	call	_ssh_versioncmp
	add	esp, 8
	xor	ecx, ecx
	test	eax, eax
	setge	cl
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+36], ecx
; Line 2962
	push	31					; 0000001fH
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN15@do_ssh_ini
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+32], 0
	jne	SHORT $LN15@do_ssh_ini
; Line 2964
	push	OFFSET $SG89504
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN14@do_ssh_ini:
; Line 2965
	mov	ecx, DWORD PTR _crLine$89450[ebp]
	mov	DWORD PTR [ecx], 0
	xor	eax, eax
	jmp	$LN53@do_ssh_ini
	xor	edx, edx
	jne	SHORT $LN14@do_ssh_ini
$LN15@do_ssh_ini:
; Line 2967
	push	31					; 0000001fH
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	cmp	eax, 3
	jne	SHORT $LN11@do_ssh_ini
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+36], 0
	jne	SHORT $LN11@do_ssh_ini
; Line 2969
	push	OFFSET $SG89509
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN10@do_ssh_ini:
; Line 2970
	mov	ecx, DWORD PTR _crLine$89450[ebp]
	mov	DWORD PTR [ecx], 0
	xor	eax, eax
	jmp	$LN53@do_ssh_ini
	xor	edx, edx
	jne	SHORT $LN10@do_ssh_ini
$LN11@do_ssh_ini:
; Line 2973
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+36], 0
	je	SHORT $LN7@do_ssh_ini
	push	31					; 0000001fH
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_int
	add	esp, 8
	cmp	eax, 2
	jge	SHORT $LN6@do_ssh_ini
	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+32], 0
	jne	SHORT $LN7@do_ssh_ini
$LN6@do_ssh_ini:
; Line 2974
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+364], 2
; Line 2975
	jmp	SHORT $LN5@do_ssh_ini
$LN7@do_ssh_ini:
; Line 2976
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+364], 1
$LN5@do_ssh_ini:
; Line 2978
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	push	ecx
	push	OFFSET $SG89516
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 2981
	push	31					; 0000001fH
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	cmp	eax, 3
	je	SHORT $LN4@do_ssh_ini
; Line 2982
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 8
	push	edx
	push	OFFSET ?protoname@?1??do_ssh_init@@9@9
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh_send_verstring
	add	esp, 12					; 0000000cH
$LN4@do_ssh_ini:
; Line 2984
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+364], 2
	jne	SHORT $LN3@do_ssh_ini
; Line 2989
	push	OFFSET $SG89520
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	_strcspn
	add	esp, 8
	mov	DWORD PTR _len$89519[ebp], eax
; Line 2990
	push	1
	mov	ecx, DWORD PTR _len$89519[ebp]
	add	ecx, 1
	push	ecx
	call	_safemalloc
	add	esp, 8
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 2991
	mov	eax, DWORD PTR _len$89519[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2992
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _len$89519[ebp]
	mov	BYTE PTR [eax+ecx], 0
; Line 2997
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+528], OFFSET _ssh2_protocol
; Line 2998
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_protocol_setup
	add	esp, 4
; Line 2999
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+532], OFFSET _ssh2_rdpkt
; Line 3000
	jmp	SHORT $LN2@do_ssh_ini
$LN3@do_ssh_ini:
; Line 3004
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+528], OFFSET _ssh1_protocol
; Line 3005
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh1_protocol_setup
	add	esp, 4
; Line 3006
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+532], OFFSET _ssh1_rdpkt
$LN2@do_ssh_ini:
; Line 3008
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+364], 2
	jne	SHORT $LN1@do_ssh_ini
; Line 3009
	push	0
	push	-1
	push	0
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_do_ssh2_transport
	add	esp, 16					; 00000010H
$LN1@do_ssh_ini:
; Line 3011
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_update_specials_menu
	add	esp, 4
; Line 3012
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+280], 1
; Line 3013
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	push	OFFSET _ssh_backend
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_pinger_new
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+1620], eax
; Line 3015
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	_safefree
	add	esp, 4
$LN50@do_ssh_ini:
; Line 3017
	mov	ecx, DWORD PTR _crLine$89450[ebp]
	mov	DWORD PTR [ecx], 0
	xor	eax, eax
$LN53@do_ssh_ini:
; Line 3018
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_do_ssh_init ENDP
_TEXT	ENDS
EXTRN	_zlib_decompress_block:PROC
EXTRN	_detect_attack:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv67 = -36						; size = 4
_decomplen$88423 = -28					; size = 4
_decompblk$88422 = -16					; size = 4
_crLine$88362 = -8					; size = 4
_st$ = -4						; size = 4
_ssh$ = 8						; size = 4
_data$ = 12						; size = 4
_datalen$ = 16						; size = 4
_ssh1_rdpkt PROC
; Line 1285
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1286
	mov	eax, DWORD PTR _ssh$[ebp]
	add	eax, 428				; 000001acH
	mov	DWORD PTR _st$[ebp], eax
; Line 1288
	mov	ecx, DWORD PTR _ssh$[ebp]
	add	ecx, 388				; 00000184H
	mov	DWORD PTR _crLine$88362[ebp], ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+388]
	mov	DWORD PTR tv67[ebp], eax
	cmp	DWORD PTR tv67[ebp], 0
	je	SHORT $LN39@ssh1_rdpkt
	cmp	DWORD PTR tv67[ebp], 1297		; 00000511H
	je	SHORT $LN32@ssh1_rdpkt
	cmp	DWORD PTR tv67[ebp], 1321		; 00000529H
	je	$LN20@ssh1_rdpkt
	jmp	$LN40@ssh1_rdpkt
$LN39@ssh1_rdpkt:
; Line 1290
	call	_ssh_new_packet
	mov	ecx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [ecx+36], eax
; Line 1292
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	DWORD PTR [eax+8], 0
; Line 1293
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [edx], 0
; Line 1295
	mov	eax, DWORD PTR _st$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [ecx+28], 0
	jmp	SHORT $LN38@ssh1_rdpkt
$LN37@ssh1_rdpkt:
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+28]
	add	eax, 1
	mov	ecx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [ecx+28], eax
$LN38@ssh1_rdpkt:
	mov	edx, DWORD PTR _st$[ebp]
	cmp	DWORD PTR [edx+28], 4
	jge	SHORT $LN36@ssh1_rdpkt
$LN35@ssh1_rdpkt:
; Line 1296
	mov	eax, DWORD PTR _datalen$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN34@ssh1_rdpkt
$LN33@ssh1_rdpkt:
; Line 1297
	mov	ecx, DWORD PTR _crLine$88362[ebp]
	mov	DWORD PTR [ecx], 1297			; 00000511H
	xor	eax, eax
	jmp	$LN42@ssh1_rdpkt
$LN32@ssh1_rdpkt:
	xor	edx, edx
	jne	SHORT $LN33@ssh1_rdpkt
	jmp	SHORT $LN35@ssh1_rdpkt
$LN34@ssh1_rdpkt:
; Line 1298
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 8
	mov	edx, DWORD PTR _data$[ebp]
	mov	eax, DWORD PTR [edx]
	movzx	edx, BYTE PTR [eax]
	add	ecx, edx
	mov	eax, DWORD PTR _st$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1299
	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR _datalen$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, 1
	mov	eax, DWORD PTR _datalen$[ebp]
	mov	DWORD PTR [eax], edx
; Line 1300
	jmp	SHORT $LN37@ssh1_rdpkt
$LN36@ssh1_rdpkt:
; Line 1302
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, -2147483641			; 80000007H
	jns	SHORT $LN48@ssh1_rdpkt
	dec	edx
	or	edx, -8					; fffffff8H
	inc	edx
$LN48@ssh1_rdpkt:
	mov	eax, 8
	sub	eax, edx
	mov	ecx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 1303
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _st$[ebp]
	add	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 1304
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 5
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	DWORD PTR [eax], ecx
; Line 1306
	mov	ecx, DWORD PTR _st$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jge	SHORT $LN29@ssh1_rdpkt
; Line 1308
	push	OFFSET $SG88380
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
; Line 1309
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	call	_ssh_free_packet
	add	esp, 4
$LN28@ssh1_rdpkt:
; Line 1310
	mov	edx, DWORD PTR _crLine$88362[ebp]
	mov	DWORD PTR [edx], 0
	xor	eax, eax
	jmp	$LN42@ssh1_rdpkt
	xor	eax, eax
	jne	SHORT $LN28@ssh1_rdpkt
$LN29@ssh1_rdpkt:
; Line 1313
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+28], ecx
; Line 1314
	push	1
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_safemalloc
	add	esp, 8
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [edx+16], eax
; Line 1316
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+12], edx
; Line 1317
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	mov	DWORD PTR [edx+24], eax
$LN25@ssh1_rdpkt:
; Line 1318
	mov	ecx, DWORD PTR _st$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jle	$LN24@ssh1_rdpkt
; Line 1319
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+32], ecx
$LN23@ssh1_rdpkt:
; Line 1320
	mov	edx, DWORD PTR _datalen$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN22@ssh1_rdpkt
$LN21@ssh1_rdpkt:
; Line 1321
	mov	eax, DWORD PTR _crLine$88362[ebp]
	mov	DWORD PTR [eax], 1321			; 00000529H
	xor	eax, eax
	jmp	$LN42@ssh1_rdpkt
$LN20@ssh1_rdpkt:
	xor	ecx, ecx
	jne	SHORT $LN21@ssh1_rdpkt
	jmp	SHORT $LN23@ssh1_rdpkt
$LN22@ssh1_rdpkt:
; Line 1322
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR _datalen$[ebp]
	mov	ecx, DWORD PTR [edx+32]
	cmp	ecx, DWORD PTR [eax]
	jle	SHORT $LN17@ssh1_rdpkt
; Line 1323
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR _datalen$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+32], ecx
$LN17@ssh1_rdpkt:
; Line 1324
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+32]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1325
	mov	edx, DWORD PTR _data$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _st$[ebp]
	add	eax, DWORD PTR [ecx+32]
	mov	edx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [edx], eax
; Line 1326
	mov	eax, DWORD PTR _datalen$[ebp]
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR _datalen$[ebp]
	mov	DWORD PTR [eax], edx
; Line 1327
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _st$[ebp]
	add	edx, DWORD PTR [eax+32]
	mov	ecx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [ecx+24], edx
; Line 1328
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 1329
	jmp	$LN25@ssh1_rdpkt
$LN24@ssh1_rdpkt:
; Line 1332
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+84], 0
	je	SHORT $LN16@ssh1_rdpkt
	push	0
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	call	_detect_attack
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN16@ssh1_rdpkt
; Line 1333
	push	OFFSET $SG88401
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
; Line 1334
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	call	_ssh_free_packet
	add	esp, 4
$LN15@ssh1_rdpkt:
; Line 1335
	mov	edx, DWORD PTR _crLine$88362[ebp]
	mov	DWORD PTR [edx], 0
	xor	eax, eax
	jmp	$LN42@ssh1_rdpkt
	xor	eax, eax
	jne	SHORT $LN15@ssh1_rdpkt
$LN16@ssh1_rdpkt:
; Line 1338
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+84], 0
	je	SHORT $LN12@ssh1_rdpkt
; Line 1339
	mov	esi, esp
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@ssh1_rdpkt:
; Line 1341
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_crc32_compute
	add	esp, 8
	mov	edx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 1342
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	movzx	edx, BYTE PTR [edx+ecx-4]
	shl	edx, 24					; 00000018H
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	eax, DWORD PTR [ecx+16]
	mov	ecx, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	movzx	eax, BYTE PTR [eax+ecx-3]
	shl	eax, 16					; 00000010H
	or	edx, eax
	mov	ecx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [ecx+36]
	mov	ecx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [eax+8]
	movzx	ecx, BYTE PTR [ecx+eax-2]
	shl	ecx, 8
	or	edx, ecx
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	eax, DWORD PTR [ecx+16]
	mov	ecx, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	movzx	eax, BYTE PTR [eax+ecx-1]
	or	edx, eax
	mov	ecx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [ecx+20], edx
; Line 1343
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	cmp	ecx, DWORD PTR [eax+16]
	je	SHORT $LN11@ssh1_rdpkt
; Line 1344
	push	OFFSET $SG88416
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
; Line 1345
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	call	_ssh_free_packet
	add	esp, 4
$LN10@ssh1_rdpkt:
; Line 1346
	mov	edx, DWORD PTR _crLine$88362[ebp]
	mov	DWORD PTR [edx], 0
	xor	eax, eax
	jmp	$LN42@ssh1_rdpkt
	xor	eax, eax
	jne	SHORT $LN10@ssh1_rdpkt
$LN11@ssh1_rdpkt:
; Line 1349
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [eax+edx+1]
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [edx+20], eax
; Line 1351
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+60], 0
	je	$LN7@ssh1_rdpkt
; Line 1356
	lea	ecx, DWORD PTR _decomplen$88423[ebp]
	push	ecx
	lea	edx, DWORD PTR _decompblk$88422[ebp]
	push	edx
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR [ecx+20]
	sub	edx, 1
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	push	ecx
	call	_zlib_decompress_block
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN6@ssh1_rdpkt
; Line 1357
	push	OFFSET $SG88425
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
; Line 1358
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	call	_ssh_free_packet
	add	esp, 4
$LN5@ssh1_rdpkt:
; Line 1359
	mov	edx, DWORD PTR _crLine$88362[ebp]
	mov	DWORD PTR [edx], 0
	xor	eax, eax
	jmp	$LN42@ssh1_rdpkt
	xor	eax, eax
	jne	SHORT $LN5@ssh1_rdpkt
$LN6@ssh1_rdpkt:
; Line 1362
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, DWORD PTR _decomplen$88423[ebp]
	cmp	DWORD PTR [edx+28], ecx
	jge	SHORT $LN2@ssh1_rdpkt
; Line 1363
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, DWORD PTR _decomplen$88423[ebp]
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [edx+28], eax
; Line 1366
	push	1
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [edx+16], eax
; Line 1367
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	lea	edx, DWORD PTR [edx+ecx+1]
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR [ecx+20], edx
$LN2@ssh1_rdpkt:
; Line 1370
	mov	edx, DWORD PTR _decomplen$88423[ebp]
	push	edx
	mov	eax, DWORD PTR _decompblk$88422[ebp]
	push	eax
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, 1
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1371
	mov	ecx, DWORD PTR _decompblk$88422[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 1372
	mov	edx, DWORD PTR _decomplen$88423[ebp]
	sub	edx, 1
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR [ecx], edx
$LN7@ssh1_rdpkt:
; Line 1375
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+36]
	movzx	ecx, BYTE PTR [ecx-1]
	mov	DWORD PTR [eax+8], ecx
; Line 1382
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+24], 0
	je	SHORT $LN1@ssh1_rdpkt
; Line 1383
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh1_log_incoming_packet
	add	esp, 8
$LN1@ssh1_rdpkt:
; Line 1385
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR [ecx+24], 0
$LN40@ssh1_rdpkt:
; Line 1387
	mov	edx, DWORD PTR _crLine$88362[ebp]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [eax+36]
$LN42@ssh1_rdpkt:
; Line 1388
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN47@ssh1_rdpkt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN47@ssh1_rdpkt:
	DD	2
	DD	$LN46@ssh1_rdpkt
$LN46@ssh1_rdpkt:
	DD	-16					; fffffff0H
	DD	4
	DD	$LN44@ssh1_rdpkt
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN45@ssh1_rdpkt
$LN45@ssh1_rdpkt:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN44@ssh1_rdpkt:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	107					; 0000006bH
	DB	0
_ssh1_rdpkt ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_slen$ = -84						; size = 4
_str$ = -72						; size = 4
_blanks$ = -60						; size = 48
_nblanks$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_ssh$ = 8						; size = 4
_pkt$ = 12						; size = 4
_ssh1_log_incoming_packet PROC
; Line 1169
	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	edi
	lea	edi, DWORD PTR [ebp-88]
	mov	ecx, 22					; 00000016H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1170
	mov	DWORD PTR _nblanks$[ebp], 0
; Line 1175
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 1180
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+544], 0
	je	$LN4@ssh1_log_i
	mov	edx, DWORD PTR _pkt$[ebp]
	cmp	DWORD PTR [edx+8], 17			; 00000011H
	je	SHORT $LN3@ssh1_log_i
	mov	eax, DWORD PTR _pkt$[ebp]
	cmp	DWORD PTR [eax+8], 18			; 00000012H
	je	SHORT $LN3@ssh1_log_i
	mov	ecx, DWORD PTR _pkt$[ebp]
	cmp	DWORD PTR [ecx+8], 23			; 00000017H
	jne	SHORT $LN4@ssh1_log_i
$LN3@ssh1_log_i:
; Line 1182
	mov	edx, DWORD PTR _pkt$[ebp]
	cmp	DWORD PTR [edx+8], 23			; 00000017H
	jne	SHORT $LN2@ssh1_log_i
; Line 1183
	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	call	_ssh_pkt_getuint32
	add	esp, 4
$LN2@ssh1_log_i:
; Line 1184
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	add	edx, 4
	mov	eax, DWORD PTR _nblanks$[ebp]
	imul	eax, 12					; 0000000cH
	mov	DWORD PTR _blanks$[ebp+eax], edx
; Line 1185
	mov	ecx, DWORD PTR _nblanks$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	DWORD PTR _blanks$[ebp+ecx+8], 2
; Line 1186
	lea	edx, DWORD PTR _slen$[ebp]
	push	edx
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 1187
	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN4@ssh1_log_i
; Line 1188
	mov	edx, DWORD PTR _nblanks$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _slen$[ebp]
	mov	DWORD PTR _blanks$[ebp+edx+4], eax
; Line 1189
	mov	ecx, DWORD PTR _nblanks$[ebp]
	add	ecx, 1
	mov	DWORD PTR _nblanks$[ebp], ecx
$LN4@ssh1_log_i:
; Line 1195
	push	0
	push	0
	push	0
	lea	edx, DWORD PTR _blanks$[ebp]
	push	edx
	mov	eax, DWORD PTR _nblanks$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_ssh1_pkt_type
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	0
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_log_packet
	add	esp, 44					; 0000002cH
; Line 1196
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@ssh1_log_i
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 88					; 00000058H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@ssh1_log_i:
	DD	3
	DD	$LN10@ssh1_log_i
$LN10@ssh1_log_i:
	DD	-60					; ffffffc4H
	DD	48					; 00000030H
	DD	$LN7@ssh1_log_i
	DD	-72					; ffffffb8H
	DD	4
	DD	$LN8@ssh1_log_i
	DD	-84					; ffffffacH
	DD	4
	DD	$LN9@ssh1_log_i
$LN9@ssh1_log_i:
	DB	115					; 00000073H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN8@ssh1_log_i:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN7@ssh1_log_i:
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	115					; 00000073H
	DB	0
_ssh1_log_incoming_packet ENDP
; Function compile flags: /Odtp /RTCsu
tv88 = -52						; size = 4
tv67 = -48						; size = 4
_newlen$88611 = -40					; size = 4
_newpayload$88610 = -28					; size = 4
_seq$88512 = -16					; size = 4
_crLine$88489 = -8					; size = 4
_st$ = -4						; size = 4
_ssh$ = 8						; size = 4
_data$ = 12						; size = 4
_datalen$ = 16						; size = 4
_ssh2_rdpkt PROC
; Line 1540
	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1541
	mov	eax, DWORD PTR _ssh$[ebp]
	add	eax, 468				; 000001d4H
	mov	DWORD PTR _st$[ebp], eax
; Line 1543
	mov	ecx, DWORD PTR _ssh$[ebp]
	add	ecx, 392				; 00000188H
	mov	DWORD PTR _crLine$88489[ebp], ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+392]
	mov	DWORD PTR tv67[ebp], eax
	cmp	DWORD PTR tv67[ebp], 1596		; 0000063cH
	jg	SHORT $LN77@ssh2_rdpkt
	cmp	DWORD PTR tv67[ebp], 1596		; 0000063cH
	je	$LN46@ssh2_rdpkt
	cmp	DWORD PTR tv67[ebp], 0
	je	SHORT $LN68@ssh2_rdpkt
	cmp	DWORD PTR tv67[ebp], 1579		; 0000062bH
	je	$LN57@ssh2_rdpkt
	jmp	$LN69@ssh2_rdpkt
$LN77@ssh2_rdpkt:
	cmp	DWORD PTR tv67[ebp], 1633		; 00000661H
	je	$LN31@ssh2_rdpkt
	cmp	DWORD PTR tv67[ebp], 1677		; 0000068dH
	je	$LN16@ssh2_rdpkt
	jmp	$LN69@ssh2_rdpkt
$LN68@ssh2_rdpkt:
; Line 1545
	call	_ssh_new_packet
	mov	ecx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [ecx+32], eax
; Line 1547
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR [eax+8], 0
; Line 1548
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx], 0
; Line 1549
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	SHORT $LN67@ssh2_rdpkt
; Line 1550
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [edx+28]
	mov	DWORD PTR [eax+24], ecx
; Line 1551
	jmp	SHORT $LN66@ssh2_rdpkt
$LN67@ssh2_rdpkt:
; Line 1552
	mov	edx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [edx+24], 8
$LN66@ssh2_rdpkt:
; Line 1553
	mov	eax, DWORD PTR _st$[ebp]
	cmp	DWORD PTR [eax+24], 8
	jge	SHORT $LN65@ssh2_rdpkt
; Line 1554
	mov	ecx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [ecx+24], 8
$LN65@ssh2_rdpkt:
; Line 1555
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+116], 0
	je	SHORT $LN73@ssh2_rdpkt
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR tv88[ebp], edx
	jmp	SHORT $LN74@ssh2_rdpkt
$LN73@ssh2_rdpkt:
	mov	DWORD PTR tv88[ebp], 0
$LN74@ssh2_rdpkt:
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR tv88[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 1558
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+100], 0
	je	$LN64@ssh2_rdpkt
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	edx, DWORD PTR [ecx+36]
	and	edx, 1
	je	$LN64@ssh2_rdpkt
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+116], 0
	je	$LN64@ssh2_rdpkt
; Line 1574
	push	1
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 36864				; 00009000H
	push	edx
	call	_safemalloc
	add	esp, 8
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx+16], eax
; Line 1577
	mov	eax, DWORD PTR _st$[ebp]
	mov	DWORD PTR [eax+20], 0
	jmp	SHORT $LN63@ssh2_rdpkt
$LN62@ssh2_rdpkt:
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	add	edx, 1
	mov	eax, DWORD PTR _st$[ebp]
	mov	DWORD PTR [eax+20], edx
$LN63@ssh2_rdpkt:
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [ecx+20]
	cmp	eax, DWORD PTR [edx+16]
	jge	SHORT $LN61@ssh2_rdpkt
$LN60@ssh2_rdpkt:
; Line 1578
	mov	ecx, DWORD PTR _datalen$[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN59@ssh2_rdpkt
$LN58@ssh2_rdpkt:
; Line 1579
	mov	edx, DWORD PTR _crLine$88489[ebp]
	mov	DWORD PTR [edx], 1579			; 0000062bH
	xor	eax, eax
	jmp	$LN71@ssh2_rdpkt
$LN57@ssh2_rdpkt:
	xor	eax, eax
	jne	SHORT $LN58@ssh2_rdpkt
	jmp	SHORT $LN60@ssh2_rdpkt
$LN59@ssh2_rdpkt:
; Line 1580
	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	eax, DWORD PTR [ecx+16]
	mov	ecx, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	mov	dl, BYTE PTR [edx]
	mov	BYTE PTR [eax+ecx], dl
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1581
	mov	eax, DWORD PTR _datalen$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	mov	edx, DWORD PTR _datalen$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1582
	jmp	SHORT $LN62@ssh2_rdpkt
$LN61@ssh2_rdpkt:
; Line 1584
	mov	eax, DWORD PTR _st$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 1587
	mov	esi, esp
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	edx, DWORD PTR [ecx+20]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1588
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	shr	ecx, 24					; 00000018H
	mov	BYTE PTR _seq$88512[ebp], cl
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+28]
	shr	eax, 16					; 00000010H
	mov	BYTE PTR _seq$88512[ebp+1], al
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	shr	edx, 8
	mov	BYTE PTR _seq$88512[ebp+2], dl
	mov	eax, DWORD PTR _st$[ebp]
	mov	cl, BYTE PTR [eax+28]
	mov	BYTE PTR _seq$88512[ebp+3], cl
; Line 1589
	mov	esi, esp
	push	4
	lea	edx, DWORD PTR _seq$88512[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+116]
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN54@ssh2_rdpkt:
; Line 1594
	mov	edx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [edx+20], 0
	jmp	SHORT $LN52@ssh2_rdpkt
$LN51@ssh2_rdpkt:
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	mov	edx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [edx+20], ecx
$LN52@ssh2_rdpkt:
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [eax+20]
	cmp	edx, DWORD PTR [ecx+24]
	jge	SHORT $LN50@ssh2_rdpkt
$LN49@ssh2_rdpkt:
; Line 1595
	mov	eax, DWORD PTR _datalen$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN48@ssh2_rdpkt
$LN47@ssh2_rdpkt:
; Line 1596
	mov	ecx, DWORD PTR _crLine$88489[ebp]
	mov	DWORD PTR [ecx], 1596			; 0000063cH
	xor	eax, eax
	jmp	$LN71@ssh2_rdpkt
$LN46@ssh2_rdpkt:
	xor	edx, edx
	jne	SHORT $LN47@ssh2_rdpkt
	jmp	SHORT $LN49@ssh2_rdpkt
$LN48@ssh2_rdpkt:
; Line 1597
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	edx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [edx+12]
	mov	esi, DWORD PTR _st$[ebp]
	add	edx, DWORD PTR [esi+16]
	mov	esi, DWORD PTR _st$[ebp]
	add	edx, DWORD PTR [esi+20]
	mov	eax, DWORD PTR [eax+16]
	mov	cl, BYTE PTR [ecx]
	mov	BYTE PTR [edx+eax], cl
	mov	edx, DWORD PTR _data$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1598
	mov	edx, DWORD PTR _datalen$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR _datalen$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1599
	jmp	SHORT $LN51@ssh2_rdpkt
$LN50@ssh2_rdpkt:
; Line 1603
	mov	esi, esp
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR _st$[ebp]
	add	eax, DWORD PTR [ecx+12]
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1606
	mov	esi, esp
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _st$[ebp]
	add	edx, DWORD PTR [eax+12]
	push	edx
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	edx, DWORD PTR [ecx+24]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1607
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _st$[ebp]
	add	ecx, DWORD PTR [edx+24]
	mov	eax, DWORD PTR _st$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 1612
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR _st$[ebp]
	add	eax, DWORD PTR [ecx+12]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+124]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN43@ssh2_rdpkt
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [edx+16]
	movzx	ecx, BYTE PTR [eax]
	shl	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	edx, DWORD PTR [eax+16]
	movzx	eax, BYTE PTR [edx+1]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	edx, DWORD PTR [eax+16]
	movzx	eax, BYTE PTR [edx+2]
	shl	eax, 8
	or	ecx, eax
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	edx, DWORD PTR [eax+16]
	movzx	eax, BYTE PTR [edx+3]
	or	ecx, eax
	push	ecx
	call	_toint
	add	esp, 4
	mov	ecx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+12]
	sub	eax, 4
	mov	ecx, DWORD PTR _st$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN43@ssh2_rdpkt
; Line 1613
	jmp	SHORT $LN53@ssh2_rdpkt
$LN43@ssh2_rdpkt:
; Line 1614
	mov	edx, DWORD PTR _st$[ebp]
	cmp	DWORD PTR [edx+12], 36864		; 00009000H
	jb	SHORT $LN42@ssh2_rdpkt
; Line 1615
	push	OFFSET $SG88541
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
; Line 1616
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	call	_ssh_free_packet
	add	esp, 4
$LN41@ssh2_rdpkt:
; Line 1617
	mov	eax, DWORD PTR _crLine$88489[ebp]
	mov	DWORD PTR [eax], 0
	xor	eax, eax
	jmp	$LN71@ssh2_rdpkt
	xor	ecx, ecx
	jne	SHORT $LN41@ssh2_rdpkt
$LN42@ssh2_rdpkt:
; Line 1619
	jmp	$LN54@ssh2_rdpkt
$LN53@ssh2_rdpkt:
; Line 1620
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR _st$[ebp]
	add	eax, DWORD PTR [ecx+16]
	mov	edx, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [edx+32]
	mov	DWORD PTR [ecx+28], eax
; Line 1623
	push	1
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [edx+32]
	mov	DWORD PTR [ecx+16], eax
; Line 1624
	jmp	$LN38@ssh2_rdpkt
$LN64@ssh2_rdpkt:
; Line 1625
	push	1
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	_safemalloc
	add	esp, 8
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx+16], eax
; Line 1631
	mov	eax, DWORD PTR _st$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [ecx+20], 0
	jmp	SHORT $LN37@ssh2_rdpkt
$LN36@ssh2_rdpkt:
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+20]
	add	eax, 1
	mov	ecx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [ecx+20], eax
$LN37@ssh2_rdpkt:
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	cmp	ecx, DWORD PTR [eax+24]
	jge	SHORT $LN35@ssh2_rdpkt
$LN34@ssh2_rdpkt:
; Line 1632
	mov	edx, DWORD PTR _datalen$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN33@ssh2_rdpkt
$LN32@ssh2_rdpkt:
; Line 1633
	mov	eax, DWORD PTR _crLine$88489[ebp]
	mov	DWORD PTR [eax], 1633			; 00000661H
	xor	eax, eax
	jmp	$LN71@ssh2_rdpkt
$LN31@ssh2_rdpkt:
	xor	ecx, ecx
	jne	SHORT $LN32@ssh2_rdpkt
	jmp	SHORT $LN34@ssh2_rdpkt
$LN33@ssh2_rdpkt:
; Line 1634
	mov	edx, DWORD PTR _data$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	ecx, DWORD PTR [edx+16]
	mov	edx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [edx+20]
	mov	al, BYTE PTR [eax]
	mov	BYTE PTR [ecx+edx], al
	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR [eax], edx
; Line 1635
	mov	ecx, DWORD PTR _datalen$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, 1
	mov	eax, DWORD PTR _datalen$[ebp]
	mov	DWORD PTR [eax], edx
; Line 1636
	jmp	SHORT $LN36@ssh2_rdpkt
$LN35@ssh2_rdpkt:
; Line 1638
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+100], 0
	je	SHORT $LN28@ssh2_rdpkt
; Line 1640
	mov	esi, esp
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	edx, DWORD PTR [ecx+20]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN28@ssh2_rdpkt:
; Line 1645
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR [ecx+16]
	movzx	eax, BYTE PTR [edx]
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	ecx, DWORD PTR [edx+16]
	movzx	edx, BYTE PTR [ecx+1]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	ecx, DWORD PTR [edx+16]
	movzx	edx, BYTE PTR [ecx+2]
	shl	edx, 8
	or	eax, edx
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	ecx, DWORD PTR [edx+16]
	movzx	edx, BYTE PTR [ecx+3]
	or	eax, edx
	push	eax
	call	_toint
	add	esp, 4
	mov	ecx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1652
	mov	edx, DWORD PTR _st$[ebp]
	cmp	DWORD PTR [edx], 0
	jl	SHORT $LN26@ssh2_rdpkt
	mov	eax, DWORD PTR _st$[ebp]
	cmp	DWORD PTR [eax], 36864			; 00009000H
	ja	SHORT $LN26@ssh2_rdpkt
	mov	ecx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [ecx]
	add	eax, 4
	mov	ecx, DWORD PTR _st$[ebp]
	cdq
	idiv	DWORD PTR [ecx+24]
	test	edx, edx
	je	SHORT $LN27@ssh2_rdpkt
$LN26@ssh2_rdpkt:
; Line 1653
	push	OFFSET $SG88574
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
; Line 1654
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	_ssh_free_packet
	add	esp, 4
$LN25@ssh2_rdpkt:
; Line 1655
	mov	edx, DWORD PTR _crLine$88489[ebp]
	mov	DWORD PTR [edx], 0
	xor	eax, eax
	jmp	$LN71@ssh2_rdpkt
	xor	eax, eax
	jne	SHORT $LN25@ssh2_rdpkt
$LN27@ssh2_rdpkt:
; Line 1661
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	eax, DWORD PTR _st$[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 1666
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _st$[ebp]
	add	edx, DWORD PTR [eax+16]
	mov	ecx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+28], edx
; Line 1669
	push	1
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx+16], eax
; Line 1675
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+20], edx
	jmp	SHORT $LN22@ssh2_rdpkt
$LN21@ssh2_rdpkt:
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	mov	edx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [edx+20], ecx
$LN22@ssh2_rdpkt:
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _st$[ebp]
	add	ecx, DWORD PTR [edx+16]
	mov	eax, DWORD PTR _st$[ebp]
	cmp	DWORD PTR [eax+20], ecx
	jge	SHORT $LN20@ssh2_rdpkt
$LN19@ssh2_rdpkt:
; Line 1676
	mov	ecx, DWORD PTR _datalen$[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN18@ssh2_rdpkt
$LN17@ssh2_rdpkt:
; Line 1677
	mov	edx, DWORD PTR _crLine$88489[ebp]
	mov	DWORD PTR [edx], 1677			; 0000068dH
	xor	eax, eax
	jmp	$LN71@ssh2_rdpkt
$LN16@ssh2_rdpkt:
	xor	eax, eax
	jne	SHORT $LN17@ssh2_rdpkt
	jmp	SHORT $LN19@ssh2_rdpkt
$LN18@ssh2_rdpkt:
; Line 1678
	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	eax, DWORD PTR [ecx+16]
	mov	ecx, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	mov	dl, BYTE PTR [edx]
	mov	BYTE PTR [eax+ecx], dl
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1679
	mov	eax, DWORD PTR _datalen$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	mov	edx, DWORD PTR _datalen$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1680
	jmp	SHORT $LN21@ssh2_rdpkt
$LN20@ssh2_rdpkt:
; Line 1682
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	SHORT $LN13@ssh2_rdpkt
; Line 1685
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+24]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR _st$[ebp]
	add	eax, DWORD PTR [ecx+24]
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@ssh2_rdpkt:
; Line 1692
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+116], 0
	je	SHORT $LN38@ssh2_rdpkt
	mov	esi, esp
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+116]
	mov	ecx, DWORD PTR [eax+16]
	call	ecx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN38@ssh2_rdpkt
; Line 1693
	push	OFFSET $SG88595
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
; Line 1694
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	_ssh_free_packet
	add	esp, 4
$LN11@ssh2_rdpkt:
; Line 1695
	mov	edx, DWORD PTR _crLine$88489[ebp]
	mov	DWORD PTR [edx], 0
	xor	eax, eax
	jmp	$LN71@ssh2_rdpkt
	xor	eax, eax
	jne	SHORT $LN11@ssh2_rdpkt
$LN38@ssh2_rdpkt:
; Line 1699
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [edx+16]
	movzx	ecx, BYTE PTR [eax+4]
	mov	edx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 1700
	mov	eax, DWORD PTR _st$[ebp]
	cmp	DWORD PTR [eax+4], 4
	jl	SHORT $LN7@ssh2_rdpkt
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [ecx]
	sub	eax, DWORD PTR [edx+4]
	cmp	eax, 1
	jge	SHORT $LN8@ssh2_rdpkt
$LN7@ssh2_rdpkt:
; Line 1701
	push	OFFSET $SG88602
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_bomb_out
	add	esp, 8
; Line 1702
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+32]
	push	eax
	call	_ssh_free_packet
	add	esp, 4
$LN6@ssh2_rdpkt:
; Line 1703
	mov	ecx, DWORD PTR _crLine$88489[ebp]
	mov	DWORD PTR [ecx], 0
	xor	eax, eax
	jmp	$LN71@ssh2_rdpkt
	xor	edx, edx
	jne	SHORT $LN6@ssh2_rdpkt
$LN8@ssh2_rdpkt:
; Line 1708
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx+4]
	sub	edx, 1
	mov	eax, DWORD PTR _st$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 1710
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 5
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR [ecx], edx
; Line 1711
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+32], edx
; Line 1713
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	add	edx, 1
	mov	eax, DWORD PTR _st$[ebp]
	mov	DWORD PTR [eax+28], edx
; Line 1715
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx], eax
; Line 1716
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	cmp	DWORD PTR [ecx], 0
	jge	SHORT $LN75@ssh2_rdpkt
	push	1716					; 000006b4H
	push	OFFSET $SG88608
	push	OFFSET $SG88609
	call	__wassert
	add	esp, 12					; 0000000cH
$LN75@ssh2_rdpkt:
; Line 1727
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+132], 0
	je	$LN3@ssh2_rdpkt
	mov	esi, esp
	lea	ecx, DWORD PTR _newlen$88611[ebp]
	push	ecx
	lea	edx, DWORD PTR _newpayload$88610[ebp]
	push	edx
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR [ecx]
	sub	edx, 5
	push	edx
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 5
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+132]
	mov	ecx, DWORD PTR [eax+28]
	call	ecx
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@ssh2_rdpkt
; Line 1728
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR _newlen$88611[ebp]
	add	ecx, 5
	cmp	DWORD PTR [eax+28], ecx
	jge	SHORT $LN2@ssh2_rdpkt
; Line 1729
	mov	edx, DWORD PTR _newlen$88611[ebp]
	add	edx, 5
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR [ecx+28], edx
; Line 1732
	push	1
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [edx+32]
	mov	DWORD PTR [ecx+16], eax
$LN2@ssh2_rdpkt:
; Line 1734
	mov	edx, DWORD PTR _newlen$88611[ebp]
	add	edx, 5
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR [ecx], edx
; Line 1735
	mov	edx, DWORD PTR _newlen$88611[ebp]
	push	edx
	mov	eax, DWORD PTR _newpayload$88610[ebp]
	push	eax
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [edx+16]
	add	eax, 5
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1736
	mov	ecx, DWORD PTR _newpayload$88610[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN3@ssh2_rdpkt:
; Line 1744
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+32]
	movzx	ecx, BYTE PTR [ecx+5]
	mov	DWORD PTR [eax+8], ecx
; Line 1745
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, 6
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR [eax+20], ecx
; Line 1746
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [edx]
	sub	eax, 6
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx], eax
; Line 1747
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	cmp	DWORD PTR [ecx], 0
	jge	SHORT $LN76@ssh2_rdpkt
	push	1747					; 000006d3H
	push	OFFSET $SG88618
	push	OFFSET $SG88619
	call	__wassert
	add	esp, 12					; 0000000cH
$LN76@ssh2_rdpkt:
; Line 1749
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN1@ssh2_rdpkt
; Line 1750
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_log_incoming_packet
	add	esp, 8
$LN1@ssh2_rdpkt:
; Line 1752
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx+24], 0
$LN69@ssh2_rdpkt:
; Line 1754
	mov	eax, DWORD PTR _crLine$88489[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [ecx+32]
$LN71@ssh2_rdpkt:
; Line 1755
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN82@ssh2_rdpkt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN82@ssh2_rdpkt:
	DD	3
	DD	$LN81@ssh2_rdpkt
$LN81@ssh2_rdpkt:
	DD	-16					; fffffff0H
	DD	4
	DD	$LN78@ssh2_rdpkt
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN79@ssh2_rdpkt
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN80@ssh2_rdpkt
$LN80@ssh2_rdpkt:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN79@ssh2_rdpkt:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
$LN78@ssh2_rdpkt:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	113					; 00000071H
	DB	0
_ssh2_rdpkt ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_slen$ = -84						; size = 4
_str$ = -72						; size = 4
_blanks$ = -60						; size = 48
_nblanks$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_ssh$ = 8						; size = 4
_pkt$ = 12						; size = 4
_ssh2_log_incoming_packet PROC
; Line 1391
	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	edi
	lea	edi, DWORD PTR [ebp-88]
	mov	ecx, 22					; 00000016H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1392
	mov	DWORD PTR _nblanks$[ebp], 0
; Line 1397
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 1401
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+544], 0
	je	$LN4@ssh2_log_i
	mov	edx, DWORD PTR _pkt$[ebp]
	cmp	DWORD PTR [edx+8], 94			; 0000005eH
	je	SHORT $LN3@ssh2_log_i
	mov	eax, DWORD PTR _pkt$[ebp]
	cmp	DWORD PTR [eax+8], 95			; 0000005fH
	jne	SHORT $LN4@ssh2_log_i
$LN3@ssh2_log_i:
; Line 1403
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	call	_ssh_pkt_getuint32
	add	esp, 4
; Line 1404
	mov	edx, DWORD PTR _pkt$[ebp]
	cmp	DWORD PTR [edx+8], 95			; 0000005fH
	jne	SHORT $LN2@ssh2_log_i
; Line 1405
	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	call	_ssh_pkt_getuint32
	add	esp, 4
$LN2@ssh2_log_i:
; Line 1406
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	add	edx, 4
	mov	eax, DWORD PTR _nblanks$[ebp]
	imul	eax, 12					; 0000000cH
	mov	DWORD PTR _blanks$[ebp+eax], edx
; Line 1407
	mov	ecx, DWORD PTR _nblanks$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	DWORD PTR _blanks$[ebp+ecx+8], 2
; Line 1408
	lea	edx, DWORD PTR _slen$[ebp]
	push	edx
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 1409
	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN4@ssh2_log_i
; Line 1410
	mov	edx, DWORD PTR _nblanks$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _slen$[ebp]
	mov	DWORD PTR _blanks$[ebp+edx+4], eax
; Line 1411
	mov	ecx, DWORD PTR _nblanks$[ebp]
	add	ecx, 1
	mov	DWORD PTR _nblanks$[ebp], ecx
$LN4@ssh2_log_i:
; Line 1418
	push	0
	push	0
	mov	edx, DWORD PTR _pkt$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	lea	eax, DWORD PTR _blanks$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nblanks$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkt$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+348]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+344]
	push	edx
	call	_ssh2_pkt_type
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	0
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	_log_packet
	add	esp, 44					; 0000002cH
; Line 1419
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@ssh2_log_i
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 88					; 00000058H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@ssh2_log_i:
	DD	3
	DD	$LN10@ssh2_log_i
$LN10@ssh2_log_i:
	DD	-60					; ffffffc4H
	DD	48					; 00000030H
	DD	$LN7@ssh2_log_i
	DD	-72					; ffffffb8H
	DD	4
	DD	$LN8@ssh2_log_i
	DD	-84					; ffffffacH
	DD	4
	DD	$LN9@ssh2_log_i
$LN9@ssh2_log_i:
	DB	115					; 00000073H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN8@ssh2_log_i:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN7@ssh2_log_i:
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	115					; 00000073H
	DB	0
_ssh2_log_incoming_packet ENDP
_TEXT	ENDS
EXTRN	_wc_match:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_imp$ = -4						; size = 4
_ssh$ = 8						; size = 4
_vstring$ = 12						; size = 4
_ssh_detect_bugs PROC
; Line 2666
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2668
	mov	eax, DWORD PTR _vstring$[ebp]
	mov	DWORD PTR _imp$[ebp], eax
; Line 2669
	push	OFFSET $SG89307
	mov	ecx, DWORD PTR _imp$[ebp]
	push	ecx
	call	_strcspn
	add	esp, 8
	add	eax, DWORD PTR _imp$[ebp]
	mov	DWORD PTR _imp$[ebp], eax
; Line 2670
	mov	edx, DWORD PTR _imp$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN32@ssh_detect
	mov	ecx, DWORD PTR _imp$[ebp]
	add	ecx, 1
	mov	DWORD PTR _imp$[ebp], ecx
$LN32@ssh_detect:
; Line 2671
	push	OFFSET $SG89309
	mov	edx, DWORD PTR _imp$[ebp]
	push	edx
	call	_strcspn
	add	esp, 8
	add	eax, DWORD PTR _imp$[ebp]
	mov	DWORD PTR _imp$[ebp], eax
; Line 2672
	mov	eax, DWORD PTR _imp$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN31@ssh_detect
	mov	edx, DWORD PTR _imp$[ebp]
	add	edx, 1
	mov	DWORD PTR _imp$[ebp], edx
$LN31@ssh_detect:
; Line 2674
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+80], 0
; Line 2688
	push	151					; 00000097H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	$LN29@ssh_detect
	push	151					; 00000097H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	cmp	eax, 2
	jne	$LN30@ssh_detect
	push	OFFSET $SG89314
	mov	edx, DWORD PTR _imp$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	$LN29@ssh_detect
	push	OFFSET $SG89315
	mov	eax, DWORD PTR _imp$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN29@ssh_detect
	push	OFFSET $SG89316
	mov	ecx, DWORD PTR _imp$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN29@ssh_detect
	push	OFFSET $SG89317
	mov	edx, DWORD PTR _imp$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN29@ssh_detect
	push	OFFSET $SG89318
	mov	eax, DWORD PTR _imp$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN29@ssh_detect
	push	OFFSET $SG89319
	mov	ecx, DWORD PTR _imp$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN29@ssh_detect
	push	OFFSET $SG89320
	mov	edx, DWORD PTR _imp$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN29@ssh_detect
	push	OFFSET $SG89321
	mov	eax, DWORD PTR _imp$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN30@ssh_detect
$LN29@ssh_detect:
; Line 2694
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	or	edx, 1
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+80], edx
; Line 2695
	push	OFFSET $SG89322
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
$LN30@ssh_detect:
; Line 2700
	push	152					; 00000098H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN26@ssh_detect
	push	152					; 00000098H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN27@ssh_detect
	push	OFFSET $SG89326
	mov	ecx, DWORD PTR _imp$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN26@ssh_detect
	push	OFFSET $SG89327
	mov	edx, DWORD PTR _imp$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN27@ssh_detect
$LN26@ssh_detect:
; Line 2706
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	or	ecx, 4
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+80], ecx
; Line 2707
	push	OFFSET $SG89328
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
$LN27@ssh_detect:
; Line 2712
	push	153					; 00000099H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN23@ssh_detect
	push	153					; 00000099H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_int
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN24@ssh_detect
	push	OFFSET $SG89331
	mov	eax, DWORD PTR _imp$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN24@ssh_detect
$LN23@ssh_detect:
; Line 2718
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	or	edx, 8
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+80], edx
; Line 2719
	push	OFFSET $SG89332
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
$LN24@ssh_detect:
; Line 2727
	push	154					; 0000009aH
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	$LN21@ssh_detect
	push	154					; 0000009aH
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	cmp	eax, 2
	jne	$LN22@ssh_detect
	mov	ecx, DWORD PTR _imp$[ebp]
	push	ecx
	push	OFFSET $SG89335
	call	_wc_match
	add	esp, 8
	test	eax, eax
	jne	$LN22@ssh_detect
	mov	edx, DWORD PTR _imp$[ebp]
	push	edx
	push	OFFSET $SG89337
	call	_wc_match
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN21@ssh_detect
	mov	eax, DWORD PTR _imp$[ebp]
	push	eax
	push	OFFSET $SG89338
	call	_wc_match
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN21@ssh_detect
	mov	ecx, DWORD PTR _imp$[ebp]
	push	ecx
	push	OFFSET $SG89339
	call	_wc_match
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN21@ssh_detect
	mov	edx, DWORD PTR _imp$[ebp]
	push	edx
	push	OFFSET $SG89340
	call	_wc_match
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN21@ssh_detect
	mov	eax, DWORD PTR _imp$[ebp]
	push	eax
	push	OFFSET $SG89341
	call	_wc_match
	add	esp, 8
	test	eax, eax
	je	SHORT $LN22@ssh_detect
$LN21@ssh_detect:
; Line 2731
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	or	edx, 2
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+80], edx
; Line 2732
	push	OFFSET $SG89342
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
$LN22@ssh_detect:
; Line 2738
	push	155					; 0000009bH
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN18@ssh_detect
	push	155					; 0000009bH
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN19@ssh_detect
	mov	ecx, DWORD PTR _imp$[ebp]
	push	ecx
	push	OFFSET $SG89345
	call	_wc_match
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN19@ssh_detect
	mov	edx, DWORD PTR _imp$[ebp]
	push	edx
	push	OFFSET $SG89347
	call	_wc_match
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN18@ssh_detect
	mov	eax, DWORD PTR _imp$[ebp]
	push	eax
	push	OFFSET $SG89348
	call	_wc_match
	add	esp, 8
	test	eax, eax
	je	SHORT $LN19@ssh_detect
$LN18@ssh_detect:
; Line 2744
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	or	edx, 32					; 00000020H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+80], edx
; Line 2745
	push	OFFSET $SG89349
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
$LN19@ssh_detect:
; Line 2753
	push	156					; 0000009cH
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN15@ssh_detect
	push	156					; 0000009cH
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN16@ssh_detect
	mov	ecx, DWORD PTR _imp$[ebp]
	push	ecx
	push	OFFSET $SG89353
	call	_wc_match
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN15@ssh_detect
	mov	edx, DWORD PTR _imp$[ebp]
	push	edx
	push	OFFSET $SG89354
	call	_wc_match
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN15@ssh_detect
	mov	eax, DWORD PTR _imp$[ebp]
	push	eax
	push	OFFSET $SG89355
	call	_wc_match
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN15@ssh_detect
	mov	ecx, DWORD PTR _imp$[ebp]
	push	ecx
	push	OFFSET $SG89356
	call	_wc_match
	add	esp, 8
	test	eax, eax
	je	SHORT $LN16@ssh_detect
$LN15@ssh_detect:
; Line 2757
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+80]
	or	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 2758
	push	OFFSET $SG89357
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
$LN16@ssh_detect:
; Line 2763
	push	157					; 0000009dH
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN12@ssh_detect
	push	157					; 0000009dH
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN13@ssh_detect
	mov	edx, DWORD PTR _imp$[ebp]
	push	edx
	push	OFFSET $SG89360
	call	_wc_match
	add	esp, 8
	test	eax, eax
	je	SHORT $LN13@ssh_detect
$LN12@ssh_detect:
; Line 2768
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	or	ecx, 128				; 00000080H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+80], ecx
; Line 2769
	push	OFFSET $SG89361
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
$LN13@ssh_detect:
; Line 2780
	push	158					; 0000009eH
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	$LN10@ssh_detect
	push	158					; 0000009eH
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_int
	add	esp, 8
	cmp	eax, 2
	jne	$LN11@ssh_detect
	mov	eax, DWORD PTR _imp$[ebp]
	push	eax
	push	OFFSET $SG89365
	call	_wc_match
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@ssh_detect
	mov	ecx, DWORD PTR _imp$[ebp]
	push	ecx
	push	OFFSET $SG89366
	call	_wc_match
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@ssh_detect
	mov	edx, DWORD PTR _imp$[ebp]
	push	edx
	push	OFFSET $SG89367
	call	_wc_match
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@ssh_detect
	mov	eax, DWORD PTR _imp$[ebp]
	push	eax
	push	OFFSET $SG89368
	call	_wc_match
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@ssh_detect
	mov	ecx, DWORD PTR _imp$[ebp]
	push	ecx
	push	OFFSET $SG89369
	call	_wc_match
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@ssh_detect
	mov	edx, DWORD PTR _imp$[ebp]
	push	edx
	push	OFFSET $SG89370
	call	_wc_match
	add	esp, 8
	test	eax, eax
	je	SHORT $LN11@ssh_detect
$LN10@ssh_detect:
; Line 2784
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	or	ecx, 64					; 00000040H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+80], ecx
; Line 2785
	push	OFFSET $SG89371
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
$LN11@ssh_detect:
; Line 2791
	push	159					; 0000009fH
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN7@ssh_detect
	push	159					; 0000009fH
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_int
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN8@ssh_detect
	mov	eax, DWORD PTR _imp$[ebp]
	push	eax
	push	OFFSET $SG89375
	call	_wc_match
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@ssh_detect
	mov	ecx, DWORD PTR _imp$[ebp]
	push	ecx
	push	OFFSET $SG89376
	call	_wc_match
	add	esp, 8
	test	eax, eax
	je	SHORT $LN8@ssh_detect
$LN7@ssh_detect:
; Line 2795
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+80]
	or	eax, 256				; 00000100H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 2796
	push	OFFSET $SG89377
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
$LN8@ssh_detect:
; Line 2799
	push	160					; 000000a0H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@ssh_detect
; Line 2804
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	or	ecx, 512				; 00000200H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+80], ecx
; Line 2805
	push	OFFSET $SG89379
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
$LN5@ssh_detect:
; Line 2808
	push	161					; 000000a1H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@ssh_detect
; Line 2813
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	or	edx, 1024				; 00000400H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+80], edx
; Line 2814
	push	OFFSET $SG89381
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
$LN4@ssh_detect:
; Line 2820
	push	162					; 000000a2H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@ssh_detect
	push	162					; 000000a2H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN33@ssh_detect
	mov	ecx, DWORD PTR _imp$[ebp]
	push	ecx
	push	OFFSET $SG89385
	call	_wc_match
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@ssh_detect
	mov	edx, DWORD PTR _imp$[ebp]
	push	edx
	push	OFFSET $SG89386
	call	_wc_match
	add	esp, 8
	test	eax, eax
	je	SHORT $LN33@ssh_detect
$LN2@ssh_detect:
; Line 2826
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	or	ecx, 2048				; 00000800H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+80], ecx
; Line 2827
	push	OFFSET $SG89387
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
$LN33@ssh_detect:
; Line 2829
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_detect_bugs ENDP
; Function compile flags: /Odtp /RTCsu
tv71 = -16						; size = 4
tv67 = -12						; size = 4
_crLine$89546 = -8					; size = 4
_s$ = -4						; size = 4
_ssh$ = 8						; size = 4
_c$ = 12						; size = 1
_do_ssh_connection_init PROC
; Line 3021
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 3042
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+424], 0
	jne	SHORT $LN45@do_ssh_con
	push	32					; 00000020H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR tv67[ebp], eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR tv67[ebp]
	mov	DWORD PTR [ecx+424], edx
	mov	eax, DWORD PTR tv67[ebp]
	mov	DWORD PTR _s$[ebp], eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx], 0
$LN45@do_ssh_con:
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+424]
	mov	DWORD PTR _s$[ebp], eax
; Line 3044
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR _crLine$89546[ebp], ecx
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv71[ebp], eax
	cmp	DWORD PTR tv71[ebp], 3056		; 00000bf0H
	jg	SHORT $LN48@do_ssh_con
	cmp	DWORD PTR tv71[ebp], 3056		; 00000bf0H
	je	$LN28@do_ssh_con
	cmp	DWORD PTR tv71[ebp], 0
	je	SHORT $LN41@do_ssh_con
	cmp	DWORD PTR tv71[ebp], 3051		; 00000bebH
	je	SHORT $LN34@do_ssh_con
	jmp	$LN43@do_ssh_con
$LN48@do_ssh_con:
	cmp	DWORD PTR tv71[ebp], 3057		; 00000bf1H
	je	$LN24@do_ssh_con
	cmp	DWORD PTR tv71[ebp], 3079		; 00000c07H
	je	$LN11@do_ssh_con
	jmp	$LN43@do_ssh_con
$LN41@do_ssh_con:
; Line 3049
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+28], 0
	jmp	SHORT $LN39@do_ssh_con
$LN38@do_ssh_con:
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+28]
	add	eax, 1
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+28], eax
$LN39@do_ssh_con:
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+28]
	movsx	ecx, BYTE PTR ?protoname@?1??do_ssh_connection_init@@9@9[eax]
	test	ecx, ecx
	je	SHORT $LN37@do_ssh_con
; Line 3050
	movsx	edx, BYTE PTR _c$[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movsx	eax, BYTE PTR ?protoname@?1??do_ssh_connection_init@@9@9[ecx]
	cmp	edx, eax
	je	SHORT $LN35@do_ssh_con
	jmp	SHORT $no$89560
$LN35@do_ssh_con:
; Line 3051
	mov	ecx, DWORD PTR _crLine$89546[ebp]
	mov	DWORD PTR [ecx], 3051			; 00000bebH
	mov	eax, 1
	jmp	$LN46@do_ssh_con
$LN34@do_ssh_con:
	xor	edx, edx
	jne	SHORT $LN35@do_ssh_con
; Line 3052
	jmp	SHORT $LN38@do_ssh_con
$LN37@do_ssh_con:
; Line 3053
	jmp	SHORT $LN40@do_ssh_con
$no$89560:
; Line 3055
	movzx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN25@do_ssh_con
$LN29@do_ssh_con:
; Line 3056
	mov	ecx, DWORD PTR _crLine$89546[ebp]
	mov	DWORD PTR [ecx], 3056			; 00000bf0H
	mov	eax, 1
	jmp	$LN46@do_ssh_con
$LN28@do_ssh_con:
	xor	edx, edx
	jne	SHORT $LN29@do_ssh_con
	jmp	SHORT $no$89560
$LN25@do_ssh_con:
; Line 3057
	mov	eax, DWORD PTR _crLine$89546[ebp]
	mov	DWORD PTR [eax], 3057			; 00000bf1H
	mov	eax, 1
	jmp	$LN46@do_ssh_con
$LN24@do_ssh_con:
	xor	ecx, ecx
	jne	SHORT $LN25@do_ssh_con
; Line 3058
	jmp	$LN41@do_ssh_con
$LN40@do_ssh_con:
; Line 3060
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+24], 59			; 0000003bH
; Line 3061
	push	1
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_safemalloc
	add	esp, 8
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 3062
	push	OFFSET ?protoname@?1??do_ssh_connection_init@@9@9
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 3063
	push	OFFSET ?protoname@?1??do_ssh_connection_init@@9@9
	call	_strlen
	add	esp, 4
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 3064
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+28], 0
$LN21@do_ssh_con:
; Line 3065
	mov	ecx, 1
	test	ecx, ecx
	je	$LN20@do_ssh_con
; Line 3066
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+24]
	sub	eax, 1
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+4], eax
	jl	SHORT $LN19@do_ssh_con
; Line 3067
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+24]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 3068
	push	1
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+20], eax
$LN19@do_ssh_con:
; Line 3070
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	cl, BYTE PTR _c$[ebp]
	mov	BYTE PTR [eax+edx], cl
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 3071
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+28], 0
	jl	SHORT $LN18@do_ssh_con
; Line 3072
	movzx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 45					; 0000002dH
	jne	SHORT $LN17@do_ssh_con
; Line 3073
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax+edx+8], 0
; Line 3074
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+28], -1
	jmp	SHORT $LN16@do_ssh_con
$LN17@do_ssh_con:
; Line 3075
	mov	edx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [edx+28], 9
	jae	SHORT $LN16@do_ssh_con
; Line 3076
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _s$[ebp]
	mov	al, BYTE PTR _c$[ebp]
	mov	BYTE PTR [edx+ecx+8], al
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	add	edx, 1
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+28], edx
$LN16@do_ssh_con:
; Line 3077
	jmp	SHORT $LN12@do_ssh_con
$LN18@do_ssh_con:
	movzx	ecx, BYTE PTR _c$[ebp]
	cmp	ecx, 10					; 0000000aH
	jne	SHORT $LN12@do_ssh_con
; Line 3078
	jmp	SHORT $LN20@do_ssh_con
$LN12@do_ssh_con:
; Line 3079
	mov	edx, DWORD PTR _crLine$89546[ebp]
	mov	DWORD PTR [edx], 3079			; 00000c07H
	mov	eax, 1
	jmp	$LN46@do_ssh_con
$LN11@do_ssh_con:
	xor	eax, eax
	jne	SHORT $LN12@do_ssh_con
; Line 3080
	jmp	$LN21@do_ssh_con
$LN20@do_ssh_con:
; Line 3082
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+72], 0
; Line 3083
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+516], 0
; Line 3085
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	BYTE PTR [ecx+eax], 0
; Line 3086
	push	OFFSET $SG89595
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	_strcspn
	add	esp, 8
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	BYTE PTR [eax+edx], 0
; Line 3087
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	OFFSET $SG89596
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 3088
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_detect_bugs
	add	esp, 8
; Line 3094
	push	OFFSET $SG89598
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 8
	push	eax
	call	_ssh_versioncmp
	add	esp, 8
	test	eax, eax
	jge	SHORT $LN8@do_ssh_con
; Line 3095
	push	OFFSET $SG89599
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_bomb_out
	add	esp, 8
$LN7@do_ssh_con:
; Line 3096
	mov	edx, DWORD PTR _crLine$89546[ebp]
	mov	DWORD PTR [edx], 0
	xor	eax, eax
	jmp	$LN46@do_ssh_con
	xor	eax, eax
	jne	SHORT $LN7@do_ssh_con
$LN8@do_ssh_con:
; Line 3098
	push	31					; 0000001fH
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@do_ssh_con
; Line 3099
	push	OFFSET $SG89604
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN3@do_ssh_con:
; Line 3100
	mov	ecx, DWORD PTR _crLine$89546[ebp]
	mov	DWORD PTR [ecx], 0
	xor	eax, eax
	jmp	$LN46@do_ssh_con
	xor	edx, edx
	jne	SHORT $LN3@do_ssh_con
$LN4@do_ssh_con:
; Line 3103
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+364], 2
; Line 3105
	push	OFFSET $SG89608
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 8
; Line 3108
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 8
	push	edx
	push	OFFSET ?protoname@?1??do_ssh_connection_init@@9@9
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh_send_verstring
	add	esp, 12					; 0000000cH
; Line 3113
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+528], OFFSET _ssh2_bare_connection_protocol
; Line 3114
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_bare_connection_protocol_setup
	add	esp, 4
; Line 3115
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+532], OFFSET _ssh2_bare_connection_rdpkt
; Line 3117
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_update_specials_menu
	add	esp, 4
; Line 3118
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+280], 1
; Line 3119
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	push	OFFSET _ssh_backend
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_pinger_new
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+1620], eax
; Line 3124
	push	0
	push	0
	push	0
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_do_ssh2_authconn
	add	esp, 16					; 00000010H
; Line 3126
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_safefree
	add	esp, 4
$LN43@do_ssh_con:
; Line 3128
	mov	edx, DWORD PTR _crLine$89546[ebp]
	mov	DWORD PTR [edx], 0
	xor	eax, eax
$LN46@do_ssh_con:
; Line 3129
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_do_ssh_connection_init ENDP
; Function compile flags: /Odtp /RTCsu
tv67 = -12						; size = 4
_crLine$88630 = -8					; size = 4
_st$ = -4						; size = 4
_ssh$ = 8						; size = 4
_data$ = 12						; size = 4
_datalen$ = 16						; size = 4
_ssh2_bare_connection_rdpkt PROC
; Line 1759
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1760
	mov	eax, DWORD PTR _ssh$[ebp]
	add	eax, 504				; 000001f8H
	mov	DWORD PTR _st$[ebp], eax
; Line 1762
	mov	ecx, DWORD PTR _ssh$[ebp]
	add	ecx, 396				; 0000018cH
	mov	DWORD PTR _crLine$88630[ebp], ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+396]
	mov	DWORD PTR tv67[ebp], eax
	cmp	DWORD PTR tv67[ebp], 0
	je	SHORT $LN25@ssh2_bare_
	cmp	DWORD PTR tv67[ebp], 1769		; 000006e9H
	je	SHORT $LN18@ssh2_bare_
	cmp	DWORD PTR tv67[ebp], 1792		; 00000700H
	je	$LN4@ssh2_bare_
	jmp	$LN26@ssh2_bare_
$LN25@ssh2_bare_:
; Line 1767
	mov	ecx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [ecx+8], 0
	jmp	SHORT $LN24@ssh2_bare_
$LN23@ssh2_bare_:
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 1
	mov	ecx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN24@ssh2_bare_:
	mov	edx, DWORD PTR _st$[ebp]
	cmp	DWORD PTR [edx+8], 4
	jge	SHORT $LN22@ssh2_bare_
$LN21@ssh2_bare_:
; Line 1768
	mov	eax, DWORD PTR _datalen$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN20@ssh2_bare_
$LN19@ssh2_bare_:
; Line 1769
	mov	ecx, DWORD PTR _crLine$88630[ebp]
	mov	DWORD PTR [ecx], 1769			; 000006e9H
	xor	eax, eax
	jmp	$LN28@ssh2_bare_
$LN18@ssh2_bare_:
	xor	edx, edx
	jne	SHORT $LN19@ssh2_bare_
	jmp	SHORT $LN21@ssh2_bare_
$LN20@ssh2_bare_:
; Line 1770
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR _st$[ebp]
	mov	cl, BYTE PTR [ecx]
	mov	BYTE PTR [edx+eax], cl
	mov	edx, DWORD PTR _data$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1771
	mov	edx, DWORD PTR _datalen$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR _datalen$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1772
	jmp	SHORT $LN23@ssh2_bare_
$LN22@ssh2_bare_:
; Line 1774
	mov	edx, DWORD PTR _st$[ebp]
	movzx	eax, BYTE PTR [edx]
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _st$[ebp]
	movzx	edx, BYTE PTR [ecx+1]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, DWORD PTR _st$[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	shl	edx, 8
	or	eax, edx
	mov	ecx, DWORD PTR _st$[ebp]
	movzx	edx, BYTE PTR [ecx+3]
	or	eax, edx
	push	eax
	call	_toint
	add	esp, 4
	mov	ecx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 1775
	mov	edx, DWORD PTR _st$[ebp]
	cmp	DWORD PTR [edx+4], 0
	jle	SHORT $LN14@ssh2_bare_
	mov	eax, DWORD PTR _st$[ebp]
	cmp	DWORD PTR [eax+4], 36864		; 00009000H
	jb	SHORT $LN15@ssh2_bare_
$LN14@ssh2_bare_:
; Line 1776
	push	OFFSET $SG88657
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_bomb_out
	add	esp, 8
$LN13@ssh2_bare_:
; Line 1777
	mov	edx, DWORD PTR _crLine$88630[ebp]
	mov	DWORD PTR [edx], 0
	xor	eax, eax
	jmp	$LN28@ssh2_bare_
	xor	eax, eax
	jne	SHORT $LN13@ssh2_bare_
$LN15@ssh2_bare_:
; Line 1780
	call	_ssh_new_packet
	mov	ecx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 1781
	push	1
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_safemalloc
	add	esp, 8
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [edx+16], eax
; Line 1783
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+32], eax
; Line 1785
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+12], ecx
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+12]
	add	eax, 1
	mov	ecx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 1790
	mov	edx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [edx+8], 0
	jmp	SHORT $LN10@ssh2_bare_
$LN9@ssh2_bare_:
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN10@ssh2_bare_:
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jge	SHORT $LN8@ssh2_bare_
$LN7@ssh2_bare_:
; Line 1791
	mov	eax, DWORD PTR _datalen$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN6@ssh2_bare_
$LN5@ssh2_bare_:
; Line 1792
	mov	ecx, DWORD PTR _crLine$88630[ebp]
	mov	DWORD PTR [ecx], 1792			; 00000700H
	xor	eax, eax
	jmp	$LN28@ssh2_bare_
$LN4@ssh2_bare_:
	xor	edx, edx
	jne	SHORT $LN5@ssh2_bare_
	jmp	SHORT $LN7@ssh2_bare_
$LN6@ssh2_bare_:
; Line 1793
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	cl, BYTE PTR [ecx]
	mov	BYTE PTR [edx+eax], cl
	mov	edx, DWORD PTR _data$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1794
	mov	edx, DWORD PTR _datalen$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR _datalen$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1795
	jmp	SHORT $LN9@ssh2_bare_
$LN8@ssh2_bare_:
; Line 1801
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movzx	ecx, BYTE PTR [ecx]
	mov	DWORD PTR [eax+8], ecx
; Line 1802
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, 1
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [eax+20], ecx
; Line 1803
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 1
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx], edx
; Line 1808
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+24], 0
	je	SHORT $LN1@ssh2_bare_
; Line 1809
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_log_incoming_packet
	add	esp, 8
$LN1@ssh2_bare_:
; Line 1811
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+24], 0
$LN26@ssh2_bare_:
; Line 1813
	mov	edx, DWORD PTR _crLine$88630[ebp]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [eax+16]
$LN28@ssh2_bare_:
; Line 1814
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_bare_connection_rdpkt ENDP
; Function compile flags: /Odtp /RTCsu
_i$ = -4						; size = 4
_ssh$ = 8						; size = 4
_ssh1_protocol_setup PROC
; Line 5894
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 5900
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@ssh1_proto
$LN2@ssh1_proto:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@ssh1_proto:
	cmp	DWORD PTR _i$[ebp], 256			; 00000100H
	jge	SHORT $LN1@ssh1_proto
; Line 5901
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+ecx*4+580], 0
	jmp	SHORT $LN2@ssh1_proto
$LN1@ssh1_proto:
; Line 5906
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+584], OFFSET _ssh1_msg_disconnect
; Line 5907
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+708], OFFSET _ssh_msg_ignore
; Line 5908
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+724], OFFSET _ssh1_msg_debug
; Line 5909
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh1_protocol_setup ENDP
; Function compile flags: /Odtp /RTCsu
_msglen$ = -20						; size = 4
_msg$ = -8						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh1_msg_debug PROC
; Line 5870
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 5874
	lea	eax, DWORD PTR _msglen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 5875
	mov	eax, DWORD PTR _msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _msglen$[ebp]
	push	ecx
	push	OFFSET $SG91395
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 16					; 00000010H
; Line 5876
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@ssh1_msg_d
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@ssh1_msg_d:
	DD	2
	DD	$LN5@ssh1_msg_d
$LN5@ssh1_msg_d:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@ssh1_msg_d
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@ssh1_msg_d
$LN4@ssh1_msg_d:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN3@ssh1_msg_d:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
_ssh1_msg_debug ENDP
; Function compile flags: /Odtp /RTCsu
_msglen$ = -20						; size = 4
_msg$ = -8						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh1_msg_disconnect PROC
; Line 5879
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 5884
	lea	eax, DWORD PTR _msglen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 5885
	mov	eax, DWORD PTR _msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _msglen$[ebp]
	push	ecx
	push	OFFSET $SG91404
	call	_dupprintf
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
; Line 5886
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@ssh1_msg_d@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@ssh1_msg_d@2:
	DD	2
	DD	$LN5@ssh1_msg_d@2
$LN5@ssh1_msg_d@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@ssh1_msg_d@2
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@ssh1_msg_d@2
$LN4@ssh1_msg_d@2:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN3@ssh1_msg_d@2:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
_ssh1_msg_disconnect ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh_msg_ignore PROC
; Line 5889
	push	ebp
	mov	ebp, esp
; Line 5891
	pop	ebp
	ret	0
_ssh_msg_ignore ENDP
; Function compile flags: /Odtp /RTCsu
_in$ = -4						; size = 4
_ssh$ = 8						; size = 4
_vin$ = 12						; size = 4
_inlen$ = 16						; size = 4
_pktin$ = 20						; size = 4
_ssh1_protocol PROC
; Line 5913
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 5914
	mov	eax, DWORD PTR _vin$[ebp]
	mov	DWORD PTR _in$[ebp], eax
; Line 5915
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+280], 4
	jne	SHORT $LN5@ssh1_proto@2
; Line 5916
	jmp	$LN6@ssh1_proto@2
$LN5@ssh1_proto@2:
; Line 5918
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN4@ssh1_proto@2
	mov	edx, DWORD PTR _pktin$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+eax*4+580], 0
	je	SHORT $LN4@ssh1_proto@2
; Line 5919
	mov	esi, esp
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+580]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 5920
	jmp	SHORT $LN6@ssh1_proto@2
$LN4@ssh1_proto@2:
; Line 5923
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+524], 0
	jne	SHORT $LN3@ssh1_proto@2
; Line 5924
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inlen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _in$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_do_ssh1_login
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN2@ssh1_proto@2
; Line 5925
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+524], 1
; Line 5926
	jmp	SHORT $LN3@ssh1_proto@2
$LN2@ssh1_proto@2:
; Line 5927
	jmp	SHORT $LN6@ssh1_proto@2
$LN3@ssh1_proto@2:
; Line 5930
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	mov	eax, DWORD PTR _inlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _in$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_do_ssh1_connection
	add	esp, 16					; 00000010H
$LN6@ssh1_proto@2:
; Line 5931
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh1_protocol ENDP
_TEXT	ENDS
EXTRN	_zlib_decompress_init:PROC
EXTRN	_zlib_compress_init:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv427 = -24						; size = 4
tv66 = -20						; size = 4
_len$91386 = -16					; size = 4
_cmd$91357 = -12					; size = 4
_pkt$91317 = -8						; size = 4
_crLine$91267 = -4					; size = 4
_ssh$ = 8						; size = 4
_in$ = 12						; size = 4
_inlen$ = 16						; size = 4
_pktin$ = 20						; size = 4
_do_ssh1_connection PROC
; Line 5658
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 5659
	mov	eax, DWORD PTR _ssh$[ebp]
	add	eax, 404				; 00000194H
	mov	DWORD PTR _crLine$91267[ebp], eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+404]
	mov	DWORD PTR tv66[ebp], edx
	cmp	DWORD PTR tv66[ebp], 5762		; 00001682H
	jg	SHORT $LN95@do_ssh1_co
	cmp	DWORD PTR tv66[ebp], 5762		; 00001682H
	je	$LN48@do_ssh1_co
	cmp	DWORD PTR tv66[ebp], 0
	je	SHORT $LN88@do_ssh1_co
	cmp	DWORD PTR tv66[ebp], 5679		; 0000162fH
	je	$LN82@do_ssh1_co
	cmp	DWORD PTR tv66[ebp], 5721		; 00001659H
	je	$LN63@do_ssh1_co
	jmp	$LN89@do_ssh1_co
$LN95@do_ssh1_co:
	cmp	DWORD PTR tv66[ebp], 5783		; 00001697H
	je	$LN32@do_ssh1_co
	cmp	DWORD PTR tv66[ebp], 5840		; 000016d0H
	je	$LN14@do_ssh1_co
	jmp	$LN89@do_ssh1_co
$LN88@do_ssh1_co:
; Line 5663
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+652], OFFSET _ssh1_smsg_stdout_stderr_data
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+652]
	mov	DWORD PTR [ecx+648], eax
; Line 5666
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+664], OFFSET _ssh1_msg_channel_open_confirmation
; Line 5668
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+668], OFFSET _ssh1_msg_channel_open_failure
; Line 5671
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+680], OFFSET _ssh1_msg_channel_close
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+680]
	mov	DWORD PTR [ecx+676], eax
; Line 5672
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+672], OFFSET _ssh1_msg_channel_data
; Line 5673
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+660], OFFSET _ssh1_smsg_exit_status
; Line 5675
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh_agent_forwarding_permitted
	add	esp, 4
	test	eax, eax
	je	$LN87@do_ssh1_co
; Line 5676
	push	OFFSET $SG91274
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 5677
	push	0
	push	30					; 0000001eH
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_send_packet
	add	esp, 12					; 0000000cH
$LN83@do_ssh1_co:
; Line 5679
	mov	ecx, DWORD PTR _crLine$91267[ebp]
	mov	DWORD PTR [ecx], 5679			; 0000162fH
	jmp	$LN91@do_ssh1_co
$LN82@do_ssh1_co:
	xor	edx, edx
	jne	SHORT $LN83@do_ssh1_co
; Line 5680
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN83@do_ssh1_co
; Line 5682
	mov	eax, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [eax+8], 14			; 0000000eH
	je	SHORT $LN79@do_ssh1_co
	mov	ecx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [ecx+8], 15			; 0000000fH
	je	SHORT $LN79@do_ssh1_co
; Line 5683
	push	OFFSET $SG91283
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN78@do_ssh1_co:
; Line 5684
	mov	eax, DWORD PTR _crLine$91267[ebp]
	mov	DWORD PTR [eax], 0
	jmp	$LN91@do_ssh1_co
	xor	ecx, ecx
	jne	SHORT $LN78@do_ssh1_co
; Line 5685
	jmp	SHORT $LN87@do_ssh1_co
$LN79@do_ssh1_co:
	mov	edx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [edx+8], 15			; 0000000fH
	jne	SHORT $LN74@do_ssh1_co
; Line 5686
	push	OFFSET $SG91289
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 5687
	jmp	SHORT $LN87@do_ssh1_co
$LN74@do_ssh1_co:
; Line 5688
	push	OFFSET $SG91291
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 5689
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+72], 1
; Line 5690
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+704], OFFSET _ssh1_smsg_agent_open
$LN87@do_ssh1_co:
; Line 5694
	push	144					; 00000090H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	$LN72@do_ssh1_co
; Line 5697
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	push	145					; 00000091H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_str
	add	esp, 8
	push	eax
	call	_x11_setup_display
	add	esp, 8
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+352], eax
; Line 5698
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+352], 0
	jne	SHORT $LN71@do_ssh1_co
; Line 5701
	push	OFFSET $SG91294
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 5702
	jmp	$LN72@do_ssh1_co
$LN71@do_ssh1_co:
; Line 5704
	push	146					; 00000092H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+360]
	push	edx
	call	_x11_invent_fake_auth
	add	esp, 8
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+356], eax
; Line 5705
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+356]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+352]
	mov	DWORD PTR [eax+28], edx
; Line 5707
	push	OFFSET $SG91296
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 5708
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+68]
	and	eax, 1
	je	SHORT $LN69@do_ssh1_co
; Line 5713
	push	0
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+352]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	push	1
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+356]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	push	4
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+356]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	push	4
	push	34					; 00000022H
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_send_packet
	add	esp, 36					; 00000024H
; Line 5714
	jmp	SHORT $LN64@do_ssh1_co
$LN69@do_ssh1_co:
; Line 5718
	push	0
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+356]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	push	4
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+356]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	push	4
	push	34					; 00000022H
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_send_packet
	add	esp, 28					; 0000001cH
$LN64@do_ssh1_co:
; Line 5721
	mov	eax, DWORD PTR _crLine$91267[ebp]
	mov	DWORD PTR [eax], 5721			; 00001659H
	jmp	$LN91@do_ssh1_co
$LN63@do_ssh1_co:
	xor	ecx, ecx
	jne	SHORT $LN64@do_ssh1_co
; Line 5722
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN64@do_ssh1_co
; Line 5724
	mov	edx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [edx+8], 14			; 0000000eH
	je	SHORT $LN60@do_ssh1_co
	mov	eax, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [eax+8], 15			; 0000000fH
	je	SHORT $LN60@do_ssh1_co
; Line 5725
	push	OFFSET $SG91307
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_bomb_out
	add	esp, 8
$LN59@do_ssh1_co:
; Line 5726
	mov	edx, DWORD PTR _crLine$91267[ebp]
	mov	DWORD PTR [edx], 0
	jmp	$LN91@do_ssh1_co
	xor	eax, eax
	jne	SHORT $LN59@do_ssh1_co
; Line 5727
	jmp	SHORT $LN72@do_ssh1_co
$LN60@do_ssh1_co:
	mov	ecx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [ecx+8], 15			; 0000000fH
	jne	SHORT $LN55@do_ssh1_co
; Line 5728
	push	OFFSET $SG91313
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 5729
	jmp	SHORT $LN72@do_ssh1_co
$LN55@do_ssh1_co:
; Line 5730
	push	OFFSET $SG91315
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 5731
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+76], 1
; Line 5732
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+688], OFFSET _ssh1_smsg_x11_open
$LN72@do_ssh1_co:
; Line 5737
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_setup_portfwd
	add	esp, 8
; Line 5738
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+696], OFFSET _ssh1_msg_port_open
; Line 5740
	push	21					; 00000015H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	jne	$LN53@do_ssh1_co
; Line 5744
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+232], 38400		; 00009600H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+236], 38400		; 00009600H
; Line 5745
	mov	ecx, DWORD PTR _ssh$[ebp]
	add	ecx, 236				; 000000ecH
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	add	edx, 232				; 000000e8H
	push	edx
	push	OFFSET $SG91318
	push	47					; 0000002fH
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	push	eax
	call	_sscanf
	add	esp, 16					; 00000010H
; Line 5747
	push	10					; 0000000aH
	call	_ssh1_pkt_init
	add	esp, 4
	mov	DWORD PTR _pkt$91317[ebp], eax
; Line 5748
	push	46					; 0000002eH
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_str
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkt$91317[ebp]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 5749
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+244]
	push	eax
	mov	ecx, DWORD PTR _pkt$91317[ebp]
	push	ecx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 5750
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+240]
	push	eax
	mov	ecx, DWORD PTR _pkt$91317[ebp]
	push	ecx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 5751
	push	0
	mov	edx, DWORD PTR _pkt$91317[ebp]
	push	edx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 5752
	push	0
	mov	eax, DWORD PTR _pkt$91317[ebp]
	push	eax
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 5753
	mov	ecx, DWORD PTR _pkt$91317[ebp]
	push	ecx
	push	OFFSET _ssh1_send_ttymode
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_parse_ttymodes
	add	esp, 12					; 0000000cH
; Line 5754
	push	192					; 000000c0H
	mov	eax, DWORD PTR _pkt$91317[ebp]
	push	eax
	call	_ssh_pkt_addbyte
	add	esp, 8
; Line 5755
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+236]
	push	edx
	mov	eax, DWORD PTR _pkt$91317[ebp]
	push	eax
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 5756
	push	193					; 000000c1H
	mov	ecx, DWORD PTR _pkt$91317[ebp]
	push	ecx
	call	_ssh_pkt_addbyte
	add	esp, 8
; Line 5757
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+232]
	push	eax
	mov	ecx, DWORD PTR _pkt$91317[ebp]
	push	ecx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 5758
	push	0
	mov	edx, DWORD PTR _pkt$91317[ebp]
	push	edx
	call	_ssh_pkt_addbyte
	add	esp, 8
; Line 5759
	mov	eax, DWORD PTR _pkt$91317[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_s_wrpkt
	add	esp, 8
; Line 5760
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+280], 2
$LN49@do_ssh1_co:
; Line 5762
	mov	eax, DWORD PTR _crLine$91267[ebp]
	mov	DWORD PTR [eax], 5762			; 00001682H
	jmp	$LN91@do_ssh1_co
$LN48@do_ssh1_co:
	xor	ecx, ecx
	jne	SHORT $LN49@do_ssh1_co
; Line 5763
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN49@do_ssh1_co
; Line 5765
	mov	edx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [edx+8], 14			; 0000000eH
	je	SHORT $LN45@do_ssh1_co
	mov	eax, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [eax+8], 15			; 0000000fH
	je	SHORT $LN45@do_ssh1_co
; Line 5766
	push	OFFSET $SG91328
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_bomb_out
	add	esp, 8
$LN44@do_ssh1_co:
; Line 5767
	mov	edx, DWORD PTR _crLine$91267[ebp]
	mov	DWORD PTR [edx], 0
	jmp	$LN91@do_ssh1_co
	xor	eax, eax
	jne	SHORT $LN44@do_ssh1_co
; Line 5768
	jmp	SHORT $LN41@do_ssh1_co
$LN45@do_ssh1_co:
	mov	ecx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [ecx+8], 15			; 0000000fH
	jne	SHORT $LN40@do_ssh1_co
; Line 5769
	push	OFFSET $SG91334
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_c_write_str
	add	esp, 8
; Line 5770
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+220], 1
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+224], 1
; Line 5771
	jmp	SHORT $LN41@do_ssh1_co
$LN40@do_ssh1_co:
; Line 5773
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+236]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+232]
	push	edx
	push	OFFSET $SG91336
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 16					; 00000010H
; Line 5774
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+296], 1
$LN41@do_ssh1_co:
; Line 5776
	jmp	SHORT $LN38@do_ssh1_co
$LN53@do_ssh1_co:
; Line 5777
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+220], 1
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+224], 1
$LN38@do_ssh1_co:
; Line 5780
	push	22					; 00000016H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	$LN37@do_ssh1_co
; Line 5781
	push	0
	push	6
	push	1
	push	37					; 00000025H
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_send_packet
	add	esp, 20					; 00000014H
$LN33@do_ssh1_co:
; Line 5783
	mov	ecx, DWORD PTR _crLine$91267[ebp]
	mov	DWORD PTR [ecx], 5783			; 00001697H
	jmp	$LN91@do_ssh1_co
$LN32@do_ssh1_co:
	xor	edx, edx
	jne	SHORT $LN33@do_ssh1_co
; Line 5784
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN33@do_ssh1_co
; Line 5786
	mov	eax, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [eax+8], 14			; 0000000eH
	je	SHORT $LN29@do_ssh1_co
	mov	ecx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [ecx+8], 15			; 0000000fH
	je	SHORT $LN29@do_ssh1_co
; Line 5787
	push	OFFSET $SG91347
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_bomb_out
	add	esp, 8
$LN28@do_ssh1_co:
; Line 5788
	mov	eax, DWORD PTR _crLine$91267[ebp]
	mov	DWORD PTR [eax], 0
	jmp	$LN91@do_ssh1_co
	xor	ecx, ecx
	jne	SHORT $LN28@do_ssh1_co
; Line 5789
	jmp	SHORT $LN25@do_ssh1_co
$LN29@do_ssh1_co:
	mov	edx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [edx+8], 15			; 0000000fH
	jne	SHORT $LN25@do_ssh1_co
; Line 5790
	push	OFFSET $SG91353
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_c_write_str
	add	esp, 8
$LN25@do_ssh1_co:
; Line 5792
	push	OFFSET $SG91354
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 5793
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+60], 1
; Line 5794
	call	_zlib_compress_init
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+136], eax
; Line 5795
	push	OFFSET $SG91355
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 5796
	call	_zlib_decompress_init
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+140], eax
; Line 5797
	push	OFFSET $SG91356
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
$LN37@do_ssh1_co:
; Line 5808
	push	19					; 00000013H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_str
	add	esp, 8
	mov	DWORD PTR _cmd$91357[ebp], eax
; Line 5811
	push	41					; 00000029H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	je	SHORT $LN23@do_ssh1_co
	push	20					; 00000014H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_str
	add	esp, 8
	test	eax, eax
	je	SHORT $LN23@do_ssh1_co
; Line 5812
	push	20					; 00000014H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_str
	add	esp, 8
	mov	DWORD PTR _cmd$91357[ebp], eax
; Line 5813
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+328], 1
$LN23@do_ssh1_co:
; Line 5815
	mov	ecx, DWORD PTR _cmd$91357[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN22@do_ssh1_co
; Line 5816
	push	0
	mov	eax, DWORD PTR _cmd$91357[ebp]
	push	eax
	push	4
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_send_packet
	add	esp, 20					; 00000014H
; Line 5817
	jmp	SHORT $LN21@do_ssh1_co
$LN22@do_ssh1_co:
; Line 5818
	push	0
	push	12					; 0000000cH
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_send_packet
	add	esp, 12					; 0000000cH
$LN21@do_ssh1_co:
; Line 5819
	push	OFFSET $SG91361
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 5822
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+280], 3
; Line 5823
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+284], 0
	je	SHORT $LN20@do_ssh1_co
; Line 5824
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+244]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+240]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_size
	add	esp, 12					; 0000000cH
$LN20@do_ssh1_co:
; Line 5825
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+288], 0
	je	SHORT $LN19@do_ssh1_co
; Line 5826
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_special
	add	esp, 8
$LN19@do_ssh1_co:
; Line 5828
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+20], 0
	je	SHORT $LN18@do_ssh1_co
; Line 5829
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_ldisc_send
	add	esp, 16					; 00000010H
$LN18@do_ssh1_co:
; Line 5830
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+216], 1
; Line 5831
	push	OFFSET _ssh_channelcmp
	call	_newtree234
	add	esp, 4
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+248], eax
$LN17@do_ssh1_co:
; Line 5832
	mov	edx, 1
	test	edx, edx
	je	$LN89@do_ssh1_co
$LN15@do_ssh1_co:
; Line 5840
	mov	eax, DWORD PTR _crLine$91267[ebp]
	mov	DWORD PTR [eax], 5840			; 000016d0H
	jmp	$LN91@do_ssh1_co
$LN14@do_ssh1_co:
	xor	ecx, ecx
	jne	SHORT $LN15@do_ssh1_co
; Line 5841
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN2@do_ssh1_co
; Line 5842
	mov	edx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [edx+8], 14			; 0000000eH
	jne	SHORT $LN10@do_ssh1_co
	jmp	SHORT $LN9@do_ssh1_co
$LN10@do_ssh1_co:
; Line 5844
	mov	eax, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [eax+8], 15			; 0000000fH
	jne	SHORT $LN8@do_ssh1_co
; Line 5847
	jmp	SHORT $LN9@do_ssh1_co
$LN8@do_ssh1_co:
; Line 5848
	mov	ecx, DWORD PTR _pktin$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG91378
	call	_dupprintf
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN6@do_ssh1_co:
; Line 5849
	mov	ecx, DWORD PTR _crLine$91267[ebp]
	mov	DWORD PTR [ecx], 0
	jmp	SHORT $LN91@do_ssh1_co
	xor	edx, edx
	jne	SHORT $LN6@do_ssh1_co
$LN9@do_ssh1_co:
; Line 5851
	jmp	SHORT $LN3@do_ssh1_co
$LN2@do_ssh1_co:
; Line 5852
	cmp	DWORD PTR _inlen$[ebp], 0
	jle	SHORT $LN3@do_ssh1_co
; Line 5853
	cmp	DWORD PTR _inlen$[ebp], 512		; 00000200H
	jge	SHORT $LN93@do_ssh1_co
	mov	eax, DWORD PTR _inlen$[ebp]
	mov	DWORD PTR tv427[ebp], eax
	jmp	SHORT $LN94@do_ssh1_co
$LN93@do_ssh1_co:
	mov	DWORD PTR tv427[ebp], 512		; 00000200H
$LN94@do_ssh1_co:
	mov	ecx, DWORD PTR tv427[ebp]
	mov	DWORD PTR _len$91386[ebp], ecx
; Line 5856
	push	0
	mov	edx, DWORD PTR _len$91386[ebp]
	push	edx
	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _len$91386[ebp]
	push	ecx
	push	1
	push	16					; 00000010H
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_send_packet
	add	esp, 32					; 00000020H
; Line 5857
	mov	eax, DWORD PTR _in$[ebp]
	add	eax, DWORD PTR _len$91386[ebp]
	mov	DWORD PTR _in$[ebp], eax
; Line 5858
	mov	ecx, DWORD PTR _inlen$[ebp]
	sub	ecx, DWORD PTR _len$91386[ebp]
	mov	DWORD PTR _inlen$[ebp], ecx
; Line 5859
	jmp	SHORT $LN2@do_ssh1_co
$LN3@do_ssh1_co:
; Line 5861
	jmp	$LN17@do_ssh1_co
$LN89@do_ssh1_co:
; Line 5863
	mov	edx, DWORD PTR _crLine$91267[ebp]
	mov	DWORD PTR [edx], 0
$LN91@do_ssh1_co:
; Line 5864
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_do_ssh1_connection ENDP
; Function compile flags: /Odtp /RTCsu
_bufsize$ = -28					; size = 4
_stringlen$ = -20					; size = 4
_string$ = -8						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh1_smsg_stdout_stderr_data PROC
; Line 5296
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 5300
	lea	eax, DWORD PTR _stringlen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _string$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 5301
	cmp	DWORD PTR _string$[ebp], 0
	jne	SHORT $LN2@ssh1_smsg_
; Line 5302
	push	OFFSET $SG91063
	call	_dupprintf
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
; Line 5303
	jmp	SHORT $LN3@ssh1_smsg_
$LN2@ssh1_smsg_:
; Line 5307
	mov	ecx, DWORD PTR _stringlen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _string$[ebp]
	push	edx
	mov	eax, DWORD PTR _pktin$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+8], 18			; 00000012H
	sete	cl
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_from_backend
	add	esp, 16					; 00000010H
	mov	DWORD PTR _bufsize$[ebp], eax
; Line 5308
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+380], 0
	jne	SHORT $LN3@ssh1_smsg_
	cmp	DWORD PTR _bufsize$[ebp], 32768		; 00008000H
	jle	SHORT $LN3@ssh1_smsg_
; Line 5309
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+380], 1
; Line 5310
	push	1
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh_throttle_conn
	add	esp, 8
$LN3@ssh1_smsg_:
; Line 5312
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@ssh1_smsg_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN8@ssh1_smsg_:
	DD	2
	DD	$LN7@ssh1_smsg_
$LN7@ssh1_smsg_:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@ssh1_smsg_
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@ssh1_smsg_
$LN6@ssh1_smsg_:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN5@ssh1_smsg_:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
_ssh1_smsg_stdout_stderr_data ENDP
; Function compile flags: /Odtp /RTCsu
_remoteid$ = -8					; size = 4
_c$ = -4						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh1_smsg_x11_open PROC
; Line 5315
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 5319
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	DWORD PTR _remoteid$[ebp], eax
; Line 5321
	push	OFFSET $SG91073
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+228]
	push	edx
	call	_logevent
	add	esp, 8
; Line 5323
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+76], 0
	jne	SHORT $LN2@ssh1_smsg_@2
; Line 5325
	push	0
	mov	ecx, DWORD PTR _remoteid$[ebp]
	push	ecx
	push	1
	push	22					; 00000016H
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_send_packet
	add	esp, 20					; 00000014H
; Line 5326
	push	OFFSET $SG91075
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
; Line 5327
	jmp	$LN3@ssh1_smsg_@2
$LN2@ssh1_smsg_@2:
; Line 5328
	push	96					; 00000060H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
; Line 5329
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx], eax
; Line 5331
	push	-1
	push	0
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+360]
	push	eax
	call	_x11_init
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+76], eax
; Line 5332
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR _remoteid$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 5333
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+16], 0
; Line 5334
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_alloc_channel_id
	add	esp, 4
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 5335
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+20], 0
; Line 5336
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 5337
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+28], 0
; Line 5338
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+12], 1
; Line 5339
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+248]
	push	edx
	call	_add234
	add	esp, 8
; Line 5342
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	1
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	push	1
	push	21					; 00000015H
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_send_packet
	add	esp, 28					; 0000001cH
; Line 5343
	push	OFFSET $SG91080
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
$LN3@ssh1_smsg_@2:
; Line 5345
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh1_smsg_x11_open ENDP
; Function compile flags: /Odtp /RTCsu
_remoteid$ = -8					; size = 4
_c$ = -4						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh1_smsg_agent_open PROC
; Line 5348
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 5352
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	DWORD PTR _remoteid$[ebp], eax
; Line 5355
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+72], 0
	jne	SHORT $LN2@ssh1_smsg_@3
; Line 5357
	push	0
	mov	edx, DWORD PTR _remoteid$[ebp]
	push	edx
	push	1
	push	22					; 00000016H
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_send_packet
	add	esp, 20					; 00000014H
; Line 5358
	jmp	$LN3@ssh1_smsg_@3
$LN2@ssh1_smsg_@3:
; Line 5359
	push	96					; 00000060H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
; Line 5360
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 5361
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _remoteid$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 5362
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+16], 0
; Line 5363
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_alloc_channel_id
	add	esp, 4
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 5364
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+20], 0
; Line 5365
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 5366
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+28], 0
; Line 5367
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+12], 2
; Line 5368
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+84], 0
; Line 5369
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+76], 0
; Line 5370
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+92], 0
; Line 5371
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+248]
	push	edx
	call	_add234
	add	esp, 8
; Line 5374
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	1
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	push	1
	push	21					; 00000015H
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_send_packet
	add	esp, 28					; 0000001cH
$LN3@ssh1_smsg_@3:
; Line 5376
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh1_smsg_agent_open ENDP
; Function compile flags: /Odtp /RTCsu
_c$91113 = -80						; size = 4
_err$ = -76						; size = 4
_host$ = -68						; size = 4
_port$ = -60						; size = 4
_hostsize$ = -52					; size = 4
_remoteid$ = -44					; size = 4
_pfp$ = -40						; size = 4
_pf$ = -32						; size = 28
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh1_msg_port_open PROC
; Line 5379
	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	edi
	lea	edi, DWORD PTR [ebp-80]
	mov	ecx, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 5388
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	DWORD PTR _remoteid$[ebp], eax
; Line 5389
	lea	ecx, DWORD PTR _hostsize$[ebp]
	push	ecx
	lea	edx, DWORD PTR _host$[ebp]
	push	edx
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 5390
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	DWORD PTR _port$[ebp], eax
; Line 5392
	mov	edx, DWORD PTR _host$[ebp]
	push	edx
	mov	eax, DWORD PTR _hostsize$[ebp]
	push	eax
	push	OFFSET $SG91107
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pf$[ebp+12], eax
; Line 5393
	mov	ecx, DWORD PTR _port$[ebp]
	mov	DWORD PTR _pf$[ebp+4], ecx
; Line 5394
	push	0
	lea	edx, DWORD PTR _pf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+272]
	push	ecx
	call	_find234
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pfp$[ebp], eax
; Line 5396
	cmp	DWORD PTR _pfp$[ebp], 0
	jne	SHORT $LN4@ssh1_msg_p
; Line 5398
	mov	edx, DWORD PTR _port$[ebp]
	push	edx
	mov	eax, DWORD PTR _pf$[ebp+12]
	push	eax
	push	OFFSET $SG91111
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 16					; 00000010H
; Line 5400
	push	0
	mov	edx, DWORD PTR _remoteid$[ebp]
	push	edx
	push	1
	push	22					; 00000016H
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_send_packet
	add	esp, 20					; 00000014H
; Line 5401
	jmp	$LN3@ssh1_msg_p
$LN4@ssh1_msg_p:
; Line 5402
	push	96					; 00000060H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _c$91113[ebp], eax
; Line 5403
	mov	ecx, DWORD PTR _c$91113[ebp]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 5406
	mov	eax, DWORD PTR _port$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pf$[ebp+12]
	push	ecx
	push	OFFSET $SG91116
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_logeventf
	add	esp, 16					; 00000010H
; Line 5408
	mov	eax, DWORD PTR _pfp$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [ecx+36]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	mov	edx, DWORD PTR _c$91113[ebp]
	push	edx
	mov	eax, DWORD PTR _port$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pf$[ebp+12]
	push	ecx
	mov	edx, DWORD PTR _c$91113[ebp]
	add	edx, 76					; 0000004cH
	push	edx
	call	_pfd_connect
	add	esp, 24					; 00000018H
	mov	DWORD PTR _err$[ebp], eax
; Line 5409
	cmp	DWORD PTR _err$[ebp], 0
	je	SHORT $LN2@ssh1_msg_p
; Line 5410
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	push	OFFSET $SG91119
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 5411
	mov	edx, DWORD PTR _err$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 5412
	mov	eax, DWORD PTR _c$91113[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 5414
	push	0
	mov	ecx, DWORD PTR _remoteid$[ebp]
	push	ecx
	push	1
	push	22					; 00000016H
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_send_packet
	add	esp, 20					; 00000014H
; Line 5415
	jmp	$LN3@ssh1_msg_p
$LN2@ssh1_msg_p:
; Line 5416
	mov	eax, DWORD PTR _c$91113[ebp]
	mov	ecx, DWORD PTR _remoteid$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 5417
	mov	edx, DWORD PTR _c$91113[ebp]
	mov	DWORD PTR [edx+16], 0
; Line 5418
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_alloc_channel_id
	add	esp, 4
	mov	ecx, DWORD PTR _c$91113[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 5419
	mov	edx, DWORD PTR _c$91113[ebp]
	mov	DWORD PTR [edx+20], 0
; Line 5420
	mov	eax, DWORD PTR _c$91113[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 5421
	mov	ecx, DWORD PTR _c$91113[ebp]
	mov	DWORD PTR [ecx+28], 0
; Line 5422
	mov	edx, DWORD PTR _c$91113[ebp]
	mov	DWORD PTR [edx+12], 3
; Line 5423
	mov	eax, DWORD PTR _c$91113[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+248]
	push	edx
	call	_add234
	add	esp, 8
; Line 5426
	push	0
	mov	eax, DWORD PTR _c$91113[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	1
	mov	edx, DWORD PTR _c$91113[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	push	1
	push	21					; 00000015H
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_send_packet
	add	esp, 28					; 0000001cH
; Line 5427
	push	OFFSET $SG91121
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
$LN3@ssh1_msg_p:
; Line 5431
	mov	ecx, DWORD PTR _pf$[ebp+12]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 5432
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@ssh1_msg_p
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 80					; 00000050H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@ssh1_msg_p:
	DD	3
	DD	$LN10@ssh1_msg_p
$LN10@ssh1_msg_p:
	DD	-32					; ffffffe0H
	DD	28					; 0000001cH
	DD	$LN7@ssh1_msg_p
	DD	-52					; ffffffccH
	DD	4
	DD	$LN8@ssh1_msg_p
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN9@ssh1_msg_p
$LN9@ssh1_msg_p:
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN8@ssh1_msg_p:
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN7@ssh1_msg_p:
	DB	112					; 00000070H
	DB	102					; 00000066H
	DB	0
_ssh1_msg_port_open ENDP
; Function compile flags: /Odtp /RTCsu
_c$ = -20						; size = 4
_localid$ = -16						; size = 4
_remoteid$ = -8						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh1_msg_channel_open_confirmation PROC
; Line 5435
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 5436
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	DWORD PTR _remoteid$[ebp], eax
; Line 5437
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	DWORD PTR _localid$[ebp], eax
; Line 5440
	push	OFFSET _ssh_channelfind
	lea	edx, DWORD PTR _remoteid$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+248]
	push	ecx
	call	_find234
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _c$[ebp], eax
; Line 5441
	cmp	DWORD PTR _c$[ebp], 0
	je	SHORT $LN2@ssh1_msg_c
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+12], 4
	jne	SHORT $LN2@ssh1_msg_c
; Line 5442
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _localid$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 5443
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+16], 0
; Line 5444
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+12], 3
; Line 5445
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+28], 0
; Line 5446
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	call	_pfd_confirm
	add	esp, 4
$LN2@ssh1_msg_c:
; Line 5449
	cmp	DWORD PTR _c$[ebp], 0
	je	SHORT $LN3@ssh1_msg_c
	mov	ecx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [ecx+24], 0
	je	SHORT $LN3@ssh1_msg_c
; Line 5456
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	call	_ssh_channel_try_eof
	add	esp, 4
$LN3@ssh1_msg_c:
; Line 5458
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@ssh1_msg_c
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@ssh1_msg_c:
	DD	1
	DD	$LN6@ssh1_msg_c
$LN6@ssh1_msg_c:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@ssh1_msg_c
$LN5@ssh1_msg_c:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
_ssh1_msg_channel_open_confirmation ENDP
; Function compile flags: /Odtp /RTCsu
_c$ = -16						; size = 4
_remoteid$ = -8						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh1_msg_channel_open_failure PROC
; Line 5461
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 5462
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	DWORD PTR _remoteid$[ebp], eax
; Line 5465
	push	OFFSET _ssh_channelfind
	lea	ecx, DWORD PTR _remoteid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+248]
	push	eax
	call	_find234
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _c$[ebp], eax
; Line 5466
	cmp	DWORD PTR _c$[ebp], 0
	je	SHORT $LN2@ssh1_msg_c@2
	mov	ecx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [ecx+12], 4
	jne	SHORT $LN2@ssh1_msg_c@2
; Line 5467
	push	OFFSET $SG91142
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 5468
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	_pfd_close
	add	esp, 4
; Line 5469
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+248]
	push	edx
	call	_del234
	add	esp, 8
; Line 5470
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
$LN2@ssh1_msg_c@2:
; Line 5472
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@ssh1_msg_c@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@ssh1_msg_c@2:
	DD	1
	DD	$LN5@ssh1_msg_c@2
$LN5@ssh1_msg_c@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@ssh1_msg_c@2
$LN4@ssh1_msg_c@2:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
_ssh1_msg_channel_open_failure ENDP
; Function compile flags: /Odtp /RTCsu
tv184 = -32						; size = 4
tv180 = -28						; size = 4
tv83 = -24						; size = 4
_send_close$91153 = -20					; size = 4
_c$ = -16						; size = 4
_i$ = -8						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh1_msg_channel_close PROC
; Line 5475
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 5477
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	DWORD PTR _i$[ebp], eax
; Line 5479
	push	OFFSET _ssh_channelfind
	lea	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+248]
	push	eax
	call	_find234
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _c$[ebp], eax
; Line 5480
	cmp	DWORD PTR _c$[ebp], 0
	je	$LN17@ssh1_msg_c@3
	mov	ecx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	jne	$LN17@ssh1_msg_c@3
; Line 5483
	mov	edx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [edx+8], 24			; 00000018H
	jne	$LN16@ssh1_msg_c@3
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	and	ecx, 4
	jne	$LN16@ssh1_msg_c@3
; Line 5488
	mov	DWORD PTR _send_close$91153[ebp], 0
; Line 5490
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+20]
	or	eax, 4
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 5492
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR tv83[ebp], eax
	cmp	DWORD PTR tv83[ebp], 1
	je	SHORT $LN13@ssh1_msg_c@3
	cmp	DWORD PTR tv83[ebp], 2
	je	SHORT $LN7@ssh1_msg_c@3
	cmp	DWORD PTR tv83[ebp], 3
	je	SHORT $LN10@ssh1_msg_c@3
	jmp	SHORT $LN14@ssh1_msg_c@3
$LN13@ssh1_msg_c@3:
; Line 5494
	mov	ecx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [ecx+76], 0
	je	SHORT $LN12@ssh1_msg_c@3
; Line 5495
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	call	_x11_send_eof
	add	esp, 4
; Line 5496
	jmp	SHORT $LN11@ssh1_msg_c@3
$LN12@ssh1_msg_c@3:
; Line 5497
	mov	DWORD PTR _send_close$91153[ebp], 1
$LN11@ssh1_msg_c@3:
; Line 5498
	jmp	SHORT $LN14@ssh1_msg_c@3
$LN10@ssh1_msg_c@3:
; Line 5500
	mov	ecx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [ecx+76], 0
	je	SHORT $LN9@ssh1_msg_c@3
; Line 5501
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	call	_pfd_send_eof
	add	esp, 4
; Line 5502
	jmp	SHORT $LN8@ssh1_msg_c@3
$LN9@ssh1_msg_c@3:
; Line 5503
	mov	DWORD PTR _send_close$91153[ebp], 1
$LN8@ssh1_msg_c@3:
; Line 5504
	jmp	SHORT $LN14@ssh1_msg_c@3
$LN7@ssh1_msg_c@3:
; Line 5506
	mov	DWORD PTR _send_close$91153[ebp], 1
$LN14@ssh1_msg_c@3:
; Line 5510
	cmp	DWORD PTR _send_close$91153[ebp], 0
	je	SHORT $LN16@ssh1_msg_c@3
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	and	edx, 1
	jne	SHORT $LN16@ssh1_msg_c@3
; Line 5512
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	1
	push	24					; 00000018H
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_send_packet
	add	esp, 20					; 00000014H
; Line 5513
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	or	ecx, 1
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+20], ecx
$LN16@ssh1_msg_c@3:
; Line 5518
	mov	eax, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [eax+8], 25			; 00000019H
	jne	SHORT $LN5@ssh1_msg_c@3
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	and	edx, 8
	jne	SHORT $LN5@ssh1_msg_c@3
; Line 5520
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	and	ecx, 1
	jne	SHORT $LN4@ssh1_msg_c@3
; Line 5522
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	push	OFFSET $SG91168
	call	_dupprintf
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN4@ssh1_msg_c@3:
; Line 5525
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	or	edx, 8
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+20], edx
$LN5@ssh1_msg_c@3:
; Line 5529
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	not	edx
	and	edx, 5
	jne	SHORT $LN3@ssh1_msg_c@3
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	and	ecx, 2
	jne	SHORT $LN3@ssh1_msg_c@3
; Line 5531
	push	0
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	push	1
	push	25					; 00000019H
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_send_packet
	add	esp, 20					; 00000014H
; Line 5532
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+20]
	or	eax, 2
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+20], eax
$LN3@ssh1_msg_c@3:
; Line 5535
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+20]
	not	eax
	and	eax, 10					; 0000000aH
	jne	SHORT $LN2@ssh1_msg_c@3
; Line 5536
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	call	_ssh_channel_destroy
	add	esp, 4
$LN2@ssh1_msg_c@3:
; Line 5537
	jmp	SHORT $LN18@ssh1_msg_c@3
$LN17@ssh1_msg_c@3:
; Line 5541
	cmp	DWORD PTR _c$[ebp], 0
	je	SHORT $LN20@ssh1_msg_c@3
	mov	DWORD PTR tv180[ebp], OFFSET $SG91172
	jmp	SHORT $LN21@ssh1_msg_c@3
$LN20@ssh1_msg_c@3:
	mov	DWORD PTR tv180[ebp], OFFSET $SG91173
$LN21@ssh1_msg_c@3:
	mov	edx, DWORD PTR _pktin$[ebp]
	cmp	DWORD PTR [edx+8], 24			; 00000018H
	jne	SHORT $LN22@ssh1_msg_c@3
	mov	DWORD PTR tv184[ebp], OFFSET $SG91174
	jmp	SHORT $LN23@ssh1_msg_c@3
$LN22@ssh1_msg_c@3:
	mov	DWORD PTR tv184[ebp], OFFSET $SG91175
$LN23@ssh1_msg_c@3:
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv180[ebp]
	push	ecx
	mov	edx, DWORD PTR tv184[ebp]
	push	edx
	push	OFFSET $SG91176
	call	_dupprintf
	add	esp, 16					; 00000010H
	push	eax
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_bomb_out
	add	esp, 8
$LN18@ssh1_msg_c@3:
; Line 5543
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@ssh1_msg_c@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN26@ssh1_msg_c@3:
	DD	1
	DD	$LN25@ssh1_msg_c@3
$LN25@ssh1_msg_c@3:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN24@ssh1_msg_c@3
$LN24@ssh1_msg_c@3:
	DB	105					; 00000069H
	DB	0
_ssh1_msg_channel_close ENDP
; Function compile flags: /Odtp /RTCsu
tv181 = -88						; size = 4
tv95 = -84						; size = 4
tv76 = -80						; size = 4
_replylen$91220 = -72					; size = 4
_reply$91219 = -60					; size = 4
_l$91215 = -52						; size = 4
_l$91200 = -48						; size = 4
_bufsize$91188 = -44					; size = 4
_c$ = -40						; size = 4
_len$ = -32						; size = 4
_p$ = -20						; size = 4
_i$ = -8						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh1_msg_channel_data PROC
; Line 5546
	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	edi
	lea	edi, DWORD PTR [ebp-88]
	mov	ecx, 22					; 00000016H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 5548
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	DWORD PTR _i$[ebp], eax
; Line 5553
	lea	ecx, DWORD PTR _len$[ebp]
	push	ecx
	lea	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 5555
	push	OFFSET _ssh_channelfind
	lea	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+248]
	push	eax
	call	_find234
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _c$[ebp], eax
; Line 5556
	cmp	DWORD PTR _c$[ebp], 0
	je	$LN15@ssh1_msg_c@4
; Line 5557
	mov	DWORD PTR _bufsize$91188[ebp], 0
; Line 5558
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR tv76[ebp], edx
	cmp	DWORD PTR tv76[ebp], 1
	je	SHORT $LN11@ssh1_msg_c@4
	cmp	DWORD PTR tv76[ebp], 2
	je	SHORT $LN8@ssh1_msg_c@4
	cmp	DWORD PTR tv76[ebp], 3
	je	SHORT $LN10@ssh1_msg_c@4
	jmp	$LN12@ssh1_msg_c@4
$LN11@ssh1_msg_c@4:
; Line 5560
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	call	_x11_send
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bufsize$91188[ebp], eax
; Line 5561
	jmp	$LN12@ssh1_msg_c@4
$LN10@ssh1_msg_c@4:
; Line 5563
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_pfd_send
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bufsize$91188[ebp], eax
; Line 5564
	jmp	$LN12@ssh1_msg_c@4
$LN8@ssh1_msg_c@4:
; Line 5567
	cmp	DWORD PTR _len$[ebp], 0
	jle	$LN7@ssh1_msg_c@4
; Line 5568
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+84], 4
	jae	SHORT $LN6@ssh1_msg_c@4
; Line 5569
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, 4
	sub	ecx, DWORD PTR [eax+84]
	cmp	ecx, DWORD PTR _len$[ebp]
	jae	SHORT $LN17@ssh1_msg_c@4
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, 4
	sub	eax, DWORD PTR [edx+84]
	mov	DWORD PTR tv95[ebp], eax
	jmp	SHORT $LN18@ssh1_msg_c@4
$LN17@ssh1_msg_c@4:
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR tv95[ebp], ecx
$LN18@ssh1_msg_c@4:
	mov	edx, DWORD PTR tv95[ebp]
	mov	DWORD PTR _l$91200[ebp], edx
; Line 5571
	mov	eax, DWORD PTR _l$91200[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	ecx, DWORD PTR _c$[ebp]
	lea	edx, DWORD PTR [ecx+eax+80]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 5572
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, DWORD PTR _l$91200[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 5573
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, DWORD PTR _l$91200[ebp]
	mov	DWORD PTR _len$[ebp], ecx
; Line 5574
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+84]
	add	eax, DWORD PTR _l$91200[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+84], eax
$LN6@ssh1_msg_c@4:
; Line 5576
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+84], 4
	jne	SHORT $LN5@ssh1_msg_c@4
; Line 5578
	mov	eax, DWORD PTR _c$[ebp]
	movzx	ecx, BYTE PTR [eax+80]
	shl	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _c$[ebp]
	movzx	eax, BYTE PTR [edx+81]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	edx, DWORD PTR _c$[ebp]
	movzx	eax, BYTE PTR [edx+82]
	shl	eax, 8
	or	ecx, eax
	mov	edx, DWORD PTR _c$[ebp]
	movzx	eax, BYTE PTR [edx+83]
	or	ecx, eax
	add	ecx, 4
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+88], ecx
; Line 5580
	push	1
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	push	ecx
	call	_safemalloc
	add	esp, 8
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+76], eax
; Line 5581
	push	4
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, 80					; 00000050H
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN5@ssh1_msg_c@4:
; Line 5583
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax+84], 4
	jb	SHORT $LN4@ssh1_msg_c@4
	cmp	DWORD PTR _len$[ebp], 0
	jle	SHORT $LN4@ssh1_msg_c@4
; Line 5586
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [ecx+88]
	sub	eax, DWORD PTR [edx+84]
	cmp	eax, DWORD PTR _len$[ebp]
	jae	SHORT $LN19@ssh1_msg_c@4
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [ecx+88]
	sub	eax, DWORD PTR [edx+84]
	mov	DWORD PTR tv181[ebp], eax
	jmp	SHORT $LN20@ssh1_msg_c@4
$LN19@ssh1_msg_c@4:
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR tv181[ebp], ecx
$LN20@ssh1_msg_c@4:
	mov	edx, DWORD PTR tv181[ebp]
	mov	DWORD PTR _l$91215[ebp], edx
; Line 5588
	mov	eax, DWORD PTR _l$91215[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+76]
	mov	ecx, DWORD PTR _c$[ebp]
	add	eax, DWORD PTR [ecx+84]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 5589
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, DWORD PTR _l$91215[ebp]
	mov	DWORD PTR _p$[ebp], edx
; Line 5590
	mov	eax, DWORD PTR _len$[ebp]
	sub	eax, DWORD PTR _l$91215[ebp]
	mov	DWORD PTR _len$[ebp], eax
; Line 5591
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	add	edx, DWORD PTR _l$91215[ebp]
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+84], edx
$LN4@ssh1_msg_c@4:
; Line 5593
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [ecx+84]
	cmp	eax, DWORD PTR [edx+88]
	jne	SHORT $LN3@ssh1_msg_c@4
; Line 5596
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	add	edx, 1
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+92], edx
; Line 5600
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	push	OFFSET _ssh_agentf_callback
	lea	edx, DWORD PTR _replylen$91220[ebp]
	push	edx
	lea	eax, DWORD PTR _reply$91219[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_agent_query
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN2@ssh1_msg_c@4
; Line 5601
	mov	edx, DWORD PTR _replylen$91220[ebp]
	push	edx
	mov	eax, DWORD PTR _reply$91219[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	call	_ssh_agentf_callback
	add	esp, 12					; 0000000cH
$LN2@ssh1_msg_c@4:
; Line 5602
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	call	_safefree
	add	esp, 4
; Line 5603
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+84], 0
$LN3@ssh1_msg_c@4:
; Line 5605
	jmp	$LN8@ssh1_msg_c@4
$LN7@ssh1_msg_c@4:
; Line 5606
	mov	DWORD PTR _bufsize$91188[ebp], 0
$LN12@ssh1_msg_c@4:
; Line 5609
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx+28], 0
	jne	SHORT $LN15@ssh1_msg_c@4
	cmp	DWORD PTR _bufsize$91188[ebp], 32768	; 00008000H
	jle	SHORT $LN15@ssh1_msg_c@4
; Line 5610
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+28], 1
; Line 5611
	push	1
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_throttle_conn
	add	esp, 8
$LN15@ssh1_msg_c@4:
; Line 5614
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@ssh1_msg_c@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 88					; 00000058H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN27@ssh1_msg_c@4:
	DD	5
	DD	$LN26@ssh1_msg_c@4
$LN26@ssh1_msg_c@4:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN21@ssh1_msg_c@4
	DD	-20					; ffffffecH
	DD	4
	DD	$LN22@ssh1_msg_c@4
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN23@ssh1_msg_c@4
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN24@ssh1_msg_c@4
	DD	-72					; ffffffb8H
	DD	4
	DD	$LN25@ssh1_msg_c@4
$LN25@ssh1_msg_c@4:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	121					; 00000079H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN24@ssh1_msg_c@4:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	121					; 00000079H
	DB	0
$LN23@ssh1_msg_c@4:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN22@ssh1_msg_c@4:
	DB	112					; 00000070H
	DB	0
$LN21@ssh1_msg_c@4:
	DB	105					; 00000069H
	DB	0
_ssh1_msg_channel_data ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh1_smsg_exit_status PROC
; Line 5617
	push	ebp
	mov	ebp, esp
; Line 5618
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+260], eax
; Line 5619
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+260]
	push	eax
	push	OFFSET $SG91229
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 12					; 0000000cH
; Line 5620
	push	0
	push	33					; 00000021H
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_send_packet
	add	esp, 12					; 0000000cH
; Line 5628
	push	1
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh_disconnect
	add	esp, 20					; 00000014H
; Line 5629
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh1_smsg_exit_status ENDP
; Function compile flags: /Odtp /RTCsu
tv75 = -16						; size = 4
_arg$ = -12						; size = 4
_i$ = -8						; size = 4
_pktout$ = -4						; size = 4
_data$ = 8						; size = 4
_mode$ = 12						; size = 4
_val$ = 16						; size = 4
_ssh1_send_ttymode PROC
; Line 5633
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 5634
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _pktout$[ebp], eax
; Line 5635
	mov	DWORD PTR _i$[ebp], 0
; Line 5636
	mov	DWORD PTR _arg$[ebp], 0
$LN7@ssh1_send_:
; Line 5637
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _ssh_ttymodes[ecx]
	push	edx
	mov	eax, DWORD PTR _mode$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@ssh1_send_
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	jmp	SHORT $LN7@ssh1_send_
$LN6@ssh1_send_:
; Line 5638
	cmp	DWORD PTR _i$[ebp], 53			; 00000035H
	jne	SHORT $LN5@ssh1_send_
	jmp	SHORT $LN8@ssh1_send_
$LN5@ssh1_send_:
; Line 5639
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _ssh_ttymodes[edx+8]
	mov	DWORD PTR tv75[ebp], eax
	cmp	DWORD PTR tv75[ebp], 0
	je	SHORT $LN2@ssh1_send_
	cmp	DWORD PTR tv75[ebp], 1
	je	SHORT $LN1@ssh1_send_
	jmp	SHORT $LN3@ssh1_send_
$LN2@ssh1_send_:
; Line 5641
	mov	ecx, DWORD PTR _val$[ebp]
	push	ecx
	call	_ssh_tty_parse_specchar
	add	esp, 4
	mov	DWORD PTR _arg$[ebp], eax
; Line 5642
	jmp	SHORT $LN3@ssh1_send_
$LN1@ssh1_send_:
; Line 5644
	mov	edx, DWORD PTR _val$[ebp]
	push	edx
	call	_ssh_tty_parse_boolean
	add	esp, 4
	mov	DWORD PTR _arg$[ebp], eax
$LN3@ssh1_send_:
; Line 5647
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	movzx	ecx, BYTE PTR _ssh_ttymodes[eax+4]
	push	ecx
	mov	edx, DWORD PTR _pktout$[ebp]
	push	edx
	call	_ssh_pkt_addbyte
	add	esp, 8
; Line 5648
	movzx	eax, BYTE PTR _arg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh_pkt_addbyte
	add	esp, 8
$LN8@ssh1_send_:
; Line 5649
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh1_send_ttymode ENDP
; Function compile flags: /Odtp /RTCsu
_i$ = -4						; size = 4
_ssh$ = 8						; size = 4
_ssh2_protocol_setup PROC
; Line 10373
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 10379
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@ssh2_proto
$LN2@ssh2_proto:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@ssh2_proto:
	cmp	DWORD PTR _i$[ebp], 256			; 00000100H
	jge	SHORT $LN1@ssh2_proto
; Line 10380
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+ecx*4+580], OFFSET _ssh2_msg_something_unimplemented
	jmp	SHORT $LN2@ssh2_proto
$LN1@ssh2_proto:
; Line 10388
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+592], OFFSET _ssh2_msg_unexpected
; Line 10389
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+600], OFFSET _ssh2_msg_unexpected
; Line 10390
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+604], OFFSET _ssh2_msg_unexpected
; Line 10391
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+660], OFFSET _ssh2_msg_transport
; Line 10392
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+664], OFFSET _ssh2_msg_transport
; Line 10393
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+700], OFFSET _ssh2_msg_transport
; Line 10394
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+704], OFFSET _ssh2_msg_transport
; Line 10397
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+708], OFFSET _ssh2_msg_transport
; Line 10398
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+712], OFFSET _ssh2_msg_transport
; Line 10399
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+780], OFFSET _ssh2_msg_unexpected
; Line 10400
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+784], OFFSET _ssh2_msg_unexpected
; Line 10401
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+788], OFFSET _ssh2_msg_unexpected
; Line 10402
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+792], OFFSET _ssh2_msg_unexpected
; Line 10403
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+820], OFFSET _ssh2_msg_unexpected
; Line 10406
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+824], OFFSET _ssh2_msg_unexpected
; Line 10407
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+900], OFFSET _ssh2_msg_unexpected
; Line 10408
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+904], OFFSET _ssh2_msg_unexpected
; Line 10409
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+908], OFFSET _ssh2_msg_unexpected
; Line 10410
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+940], OFFSET _ssh2_msg_unexpected
; Line 10411
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+944], OFFSET _ssh2_msg_unexpected
; Line 10412
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+948], OFFSET _ssh2_msg_unexpected
; Line 10413
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+952], OFFSET _ssh2_msg_unexpected
; Line 10414
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+956], OFFSET _ssh2_msg_unexpected
; Line 10415
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+960], OFFSET _ssh2_msg_unexpected
; Line 10416
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+964], OFFSET _ssh2_msg_unexpected
; Line 10417
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+968], OFFSET _ssh2_msg_unexpected
; Line 10418
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+972], OFFSET _ssh2_msg_unexpected
; Line 10419
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+976], OFFSET _ssh2_msg_unexpected
; Line 10420
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+980], OFFSET _ssh2_msg_unexpected
; Line 10425
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+584], OFFSET _ssh2_msg_disconnect
; Line 10426
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+588], OFFSET _ssh_msg_ignore
; Line 10427
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+596], OFFSET _ssh2_msg_debug
; Line 10428
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_protocol_setup ENDP
; Function compile flags: /Odtp /RTCsu
tv129 = -36						; size = 4
_msglen$ = -28						; size = 4
_reason$ = -20						; size = 4
_msg$ = -12						; size = 4
_buf$ = -4						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh2_msg_disconnect PROC
; Line 10297
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 10302
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getuint32
	add	esp, 4
	mov	DWORD PTR _reason$[ebp], eax
; Line 10303
	lea	ecx, DWORD PTR _msglen$[ebp]
	push	ecx
	lea	edx, DWORD PTR _msg$[ebp]
	push	edx
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 10305
	cmp	DWORD PTR _reason$[ebp], 0
	jle	SHORT $LN2@ssh2_msg_d
	cmp	DWORD PTR _reason$[ebp], 16		; 00000010H
	jae	SHORT $LN2@ssh2_msg_d
; Line 10307
	mov	ecx, DWORD PTR _reason$[ebp]
	mov	edx, DWORD PTR _ssh2_disconnect_reasons[ecx*4]
	push	edx
	push	OFFSET $SG93863
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax
; Line 10308
	jmp	SHORT $LN1@ssh2_msg_d
$LN2@ssh2_msg_d:
; Line 10310
	mov	eax, DWORD PTR _reason$[ebp]
	push	eax
	push	OFFSET $SG93865
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax
$LN1@ssh2_msg_d:
; Line 10312
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 10313
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 10315
	mov	edx, DWORD PTR _msg$[ebp]
	push	edx
	mov	eax, DWORD PTR _msglen$[ebp]
	push	eax
	push	OFFSET $SG93866
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _buf$[ebp], eax
; Line 10316
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
; Line 10321
	cmp	DWORD PTR _reason$[ebp], 0
	jle	SHORT $LN5@ssh2_msg_d
	cmp	DWORD PTR _reason$[ebp], 16		; 00000010H
	jae	SHORT $LN5@ssh2_msg_d
	mov	ecx, DWORD PTR _reason$[ebp]
	mov	edx, DWORD PTR _ssh2_disconnect_reasons[ecx*4]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN6@ssh2_msg_d
$LN5@ssh2_msg_d:
	mov	DWORD PTR tv129[ebp], OFFSET $SG93867
$LN6@ssh2_msg_d:
	mov	eax, DWORD PTR _msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _msglen$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	mov	eax, DWORD PTR _reason$[ebp]
	push	eax
	push	OFFSET $SG93868
	call	_dupprintf
	add	esp, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_bomb_out
	add	esp, 8
; Line 10322
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 10323
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@ssh2_msg_d
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@ssh2_msg_d:
	DD	2
	DD	$LN9@ssh2_msg_d
$LN9@ssh2_msg_d:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN7@ssh2_msg_d
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN8@ssh2_msg_d
$LN8@ssh2_msg_d:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN7@ssh2_msg_d:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
_ssh2_msg_disconnect ENDP
; Function compile flags: /Odtp /RTCsu
_msglen$ = -20						; size = 4
_msg$ = -8						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh2_msg_debug PROC
; Line 10326
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 10332
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh2_pkt_getbool
	add	esp, 4
; Line 10333
	lea	ecx, DWORD PTR _msglen$[ebp]
	push	ecx
	lea	edx, DWORD PTR _msg$[ebp]
	push	edx
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	call	_ssh_pkt_getstring
	add	esp, 12					; 0000000cH
; Line 10335
	mov	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _msglen$[ebp]
	push	edx
	push	OFFSET $SG93877
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 16					; 00000010H
; Line 10336
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@ssh2_msg_d@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@ssh2_msg_d@2:
	DD	2
	DD	$LN5@ssh2_msg_d@2
$LN5@ssh2_msg_d@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@ssh2_msg_d@2
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@ssh2_msg_d@2
$LN4@ssh2_msg_d@2:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN3@ssh2_msg_d@2:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
_ssh2_msg_debug ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh2_msg_transport PROC
; Line 10339
	push	ebp
	mov	ebp, esp
; Line 10340
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_do_ssh2_transport
	add	esp, 16					; 00000010H
; Line 10341
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh2_msg_transport ENDP
; Function compile flags: /Odtp /RTCsu
_pktout$ = -4						; size = 4
_ssh$ = 8						; size = 4
_pktin$ = 12						; size = 4
_ssh2_msg_something_unimplemented PROC
; Line 10358
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 10360
	push	3
	call	_ssh2_pkt_init
	add	esp, 4
	mov	DWORD PTR _pktout$[ebp], eax
; Line 10361
	mov	eax, DWORD PTR _pktin$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _pktout$[ebp]
	push	edx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 10366
	mov	eax, DWORD PTR _pktout$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_pkt_send_noqueue
	add	esp, 8
; Line 10367
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_msg_something_unimplemented ENDP
; Function compile flags: /Odtp /RTCsu
_i$ = -4						; size = 4
_ssh$ = 8						; size = 4
_ssh2_bare_connection_protocol_setup PROC
; Line 10431
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 10437
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@ssh2_bare_@2
$LN2@ssh2_bare_@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@ssh2_bare_@2:
	cmp	DWORD PTR _i$[ebp], 256			; 00000100H
	jge	SHORT $LN1@ssh2_bare_@2
; Line 10438
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+ecx*4+580], OFFSET _ssh2_msg_something_unimplemented
	jmp	SHORT $LN2@ssh2_bare_@2
$LN1@ssh2_bare_@2:
; Line 10447
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+900], OFFSET _ssh2_msg_unexpected
; Line 10448
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+904], OFFSET _ssh2_msg_unexpected
; Line 10449
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+908], OFFSET _ssh2_msg_unexpected
; Line 10450
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+940], OFFSET _ssh2_msg_unexpected
; Line 10451
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+944], OFFSET _ssh2_msg_unexpected
; Line 10452
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+948], OFFSET _ssh2_msg_unexpected
; Line 10453
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+952], OFFSET _ssh2_msg_unexpected
; Line 10454
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+956], OFFSET _ssh2_msg_unexpected
; Line 10455
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+960], OFFSET _ssh2_msg_unexpected
; Line 10456
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+964], OFFSET _ssh2_msg_unexpected
; Line 10457
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+968], OFFSET _ssh2_msg_unexpected
; Line 10458
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+972], OFFSET _ssh2_msg_unexpected
; Line 10459
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+976], OFFSET _ssh2_msg_unexpected
; Line 10460
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+980], OFFSET _ssh2_msg_unexpected
; Line 10462
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+592], OFFSET _ssh2_msg_unexpected
; Line 10467
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+584], OFFSET _ssh2_msg_disconnect
; Line 10468
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+588], OFFSET _ssh_msg_ignore
; Line 10469
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+596], OFFSET _ssh2_msg_debug
; Line 10470
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_bare_connection_protocol_setup ENDP
; Function compile flags: /Odtp /RTCsu
_in$ = -4						; size = 4
_ssh$ = 8						; size = 4
_vin$ = 12						; size = 4
_inlen$ = 16						; size = 4
_pktin$ = 20						; size = 4
_ssh2_protocol PROC
; Line 10488
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 10489
	mov	eax, DWORD PTR _vin$[ebp]
	mov	DWORD PTR _in$[ebp], eax
; Line 10490
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+280], 4
	jne	SHORT $LN7@ssh2_proto@2
; Line 10491
	jmp	$LN8@ssh2_proto@2
$LN7@ssh2_proto@2:
; Line 10493
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN6@ssh2_proto@2
; Line 10494
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+1624]
	mov	ecx, DWORD PTR _pktin$[ebp]
	add	eax, DWORD PTR [ecx+32]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+1624], eax
; Line 10497
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+1640], 0
	jne	SHORT $LN6@ssh2_proto@2
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+1636], 0
	je	SHORT $LN6@ssh2_proto@2
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [edx+1624]
	cmp	ecx, DWORD PTR [eax+1636]
	jbe	SHORT $LN6@ssh2_proto@2
; Line 10498
	push	0
	push	-1
	push	OFFSET $SG93940
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_do_ssh2_transport
	add	esp, 16					; 00000010H
$LN6@ssh2_proto@2:
; Line 10501
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN4@ssh2_proto@2
; Line 10502
	mov	esi, esp
	mov	eax, DWORD PTR _pktin$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pktin$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+580]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN8@ssh2_proto@2
$LN4@ssh2_proto@2:
; Line 10503
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+524], 0
	jne	SHORT $LN2@ssh2_proto@2
; Line 10504
	mov	ecx, DWORD PTR _pktin$[ebp]
	push	ecx
	mov	edx, DWORD PTR _inlen$[ebp]
	push	edx
	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_do_ssh2_transport
	add	esp, 16					; 00000010H
; Line 10505
	jmp	SHORT $LN8@ssh2_proto@2
$LN2@ssh2_proto@2:
; Line 10506
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	mov	eax, DWORD PTR _inlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _in$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_do_ssh2_authconn
	add	esp, 16					; 00000010H
$LN8@ssh2_proto@2:
; Line 10507
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_protocol ENDP
; Function compile flags: /Odtp /RTCsu
_in$ = -4						; size = 4
_ssh$ = 8						; size = 4
_vin$ = 12						; size = 4
_inlen$ = 16						; size = 4
_pktin$ = 20						; size = 4
_ssh2_bare_connection_protocol PROC
; Line 10511
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 10512
	mov	eax, DWORD PTR _vin$[ebp]
	mov	DWORD PTR _in$[ebp], eax
; Line 10513
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+280], 4
	jne	SHORT $LN3@ssh2_bare_@3
; Line 10514
	jmp	SHORT $LN4@ssh2_bare_@3
$LN3@ssh2_bare_@3:
; Line 10516
	cmp	DWORD PTR _pktin$[ebp], 0
	je	SHORT $LN2@ssh2_bare_@3
; Line 10517
	mov	esi, esp
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktin$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+580]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 10518
	jmp	SHORT $LN4@ssh2_bare_@3
$LN2@ssh2_bare_@3:
; Line 10519
	mov	edx, DWORD PTR _pktin$[ebp]
	push	edx
	mov	eax, DWORD PTR _inlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _in$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_do_ssh2_authconn
	add	esp, 16					; 00000010H
$LN4@ssh2_bare_@3:
; Line 10520
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh2_bare_connection_protocol ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = 8						; size = 4
_ssh_cache_conf_values PROC
; Line 10523
	push	ebp
	mov	ebp, esp
; Line 10524
	push	119					; 00000077H
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+544], eax
; Line 10525
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ssh_cache_conf_values ENDP
_TEXT	ENDS
EXTRN	_ssh_gss_cleanup:PROC
EXTRN	_conf_free:PROC
EXTRN	_pinger_free:PROC
EXTRN	_crcda_free_context:PROC
EXTRN	_x11_free_display:PROC
EXTRN	_zlib_decompress_cleanup:PROC
EXTRN	_zlib_compress_cleanup:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv182 = -36						; size = 4
tv157 = -32						; size = 4
_nocr$94078 = -28					; size = 4
_ocr$94077 = -24					; size = 4
_qh$94059 = -20						; size = 4
_auth$ = -16						; size = 4
_pf$ = -12						; size = 4
_c$ = -8						; size = 4
_ssh$ = -4						; size = 4
_handle$ = 8						; size = 4
_ssh_free PROC
; Line 10662
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 10663
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 10668
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+88], 0
	je	SHORT $LN39@ssh_free
; Line 10669
	mov	esi, esp
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+88]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN39@ssh_free:
; Line 10670
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+104], 0
	je	SHORT $LN38@ssh_free
; Line 10671
	mov	esi, esp
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+104]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN38@ssh_free:
; Line 10672
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+108], 0
	je	SHORT $LN37@ssh_free
; Line 10673
	mov	esi, esp
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN37@ssh_free:
; Line 10674
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+120], 0
	je	SHORT $LN36@ssh_free
; Line 10675
	mov	esi, esp
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+120]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN36@ssh_free:
; Line 10676
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+124], 0
	je	SHORT $LN35@ssh_free
; Line 10677
	mov	esi, esp
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+124]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN35@ssh_free:
; Line 10678
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+136], 0
	je	SHORT $LN34@ssh_free
; Line 10679
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+128], 0
	je	SHORT $LN33@ssh_free
; Line 10680
	mov	esi, esp
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+128]
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 10681
	jmp	SHORT $LN34@ssh_free
$LN33@ssh_free:
; Line 10682
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+136]
	push	eax
	call	_zlib_compress_cleanup
	add	esp, 4
$LN34@ssh_free:
; Line 10684
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+140], 0
	je	SHORT $LN31@ssh_free
; Line 10685
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+132], 0
	je	SHORT $LN30@ssh_free
; Line 10686
	mov	esi, esp
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+132]
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 10687
	jmp	SHORT $LN31@ssh_free
$LN30@ssh_free:
; Line 10688
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+140]
	push	eax
	call	_zlib_decompress_cleanup
	add	esp, 4
$LN31@ssh_free:
; Line 10690
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+192], 0
	je	SHORT $LN28@ssh_free
; Line 10691
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+192]
	push	eax
	call	_dh_cleanup
	add	esp, 4
$LN28@ssh_free:
; Line 10692
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+208]
	push	edx
	call	_safefree
	add	esp, 4
$LN27@ssh_free:
; Line 10694
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+304]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+304]
	sub	eax, 1
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+304], eax
	test	ecx, ecx
	jle	SHORT $LN42@ssh_free
	mov	DWORD PTR tv157[ebp], 1
	jmp	SHORT $LN43@ssh_free
$LN42@ssh_free:
	mov	DWORD PTR tv157[ebp], 0
$LN43@ssh_free:
	cmp	DWORD PTR tv157[ebp], 0
	je	SHORT $LN26@ssh_free
; Line 10695
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+304]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+300]
	mov	ecx, DWORD PTR [eax+ecx*4]
	push	ecx
	call	_ssh_free_packet
	add	esp, 4
	jmp	SHORT $LN27@ssh_free
$LN26@ssh_free:
; Line 10696
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+300]
	push	eax
	call	_safefree
	add	esp, 4
$LN25@ssh_free:
; Line 10698
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+1604], 0
	je	SHORT $LN24@ssh_free
; Line 10699
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+1604]
	mov	DWORD PTR _qh$94059[ebp], eax
; Line 10700
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR _qh$94059[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+1604], eax
; Line 10701
	mov	ecx, DWORD PTR _qh$94059[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 10702
	jmp	SHORT $LN25@ssh_free
$LN24@ssh_free:
; Line 10703
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+1608], 0
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+1604], 0
; Line 10705
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+248], 0
	je	$LN23@ssh_free
$LN22@ssh_free:
; Line 10706
	push	0
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+248]
	push	eax
	call	_delpos234
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
	cmp	DWORD PTR _c$[ebp], 0
	je	$LN21@ssh_free
; Line 10707
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR tv182[ebp], edx
	cmp	DWORD PTR tv182[ebp], 1
	je	SHORT $LN18@ssh_free
	cmp	DWORD PTR tv182[ebp], 2
	jle	SHORT $LN19@ssh_free
	cmp	DWORD PTR tv182[ebp], 4
	jle	SHORT $LN16@ssh_free
	jmp	SHORT $LN19@ssh_free
$LN18@ssh_free:
; Line 10709
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN17@ssh_free
; Line 10710
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	_x11_close
	add	esp, 4
$LN17@ssh_free:
; Line 10711
	jmp	SHORT $LN19@ssh_free
$LN16@ssh_free:
; Line 10714
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN19@ssh_free
; Line 10715
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	_pfd_close
	add	esp, 4
$LN19@ssh_free:
; Line 10718
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+364], 2
	jne	SHORT $LN14@ssh_free
; Line 10720
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	mov	DWORD PTR _ocr$94077[ebp], edx
$LN13@ssh_free:
; Line 10721
	cmp	DWORD PTR _ocr$94077[ebp], 0
	je	SHORT $LN12@ssh_free
; Line 10722
	mov	esi, esp
	mov	eax, DWORD PTR _ocr$94077[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	0
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _ocr$94077[ebp]
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 10723
	mov	edx, DWORD PTR _ocr$94077[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _nocr$94078[ebp], eax
; Line 10724
	mov	ecx, DWORD PTR _ocr$94077[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 10725
	mov	edx, DWORD PTR _nocr$94078[ebp]
	mov	DWORD PTR _ocr$94077[ebp], edx
; Line 10726
	jmp	SHORT $LN13@ssh_free
$LN12@ssh_free:
; Line 10727
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	call	_bufchain_clear
	add	esp, 4
$LN14@ssh_free:
; Line 10729
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 10730
	jmp	$LN22@ssh_free
$LN21@ssh_free:
; Line 10731
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+248]
	push	eax
	call	_freetree234
	add	esp, 4
; Line 10732
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+248], 0
$LN23@ssh_free:
; Line 10735
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+204], 0
	je	SHORT $LN11@ssh_free
; Line 10736
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	push	ecx
	call	_sharestate_free
	add	esp, 4
$LN11@ssh_free:
; Line 10738
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+272], 0
	je	SHORT $LN10@ssh_free
$LN9@ssh_free:
; Line 10739
	push	0
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+272]
	push	ecx
	call	_delpos234
	add	esp, 8
	mov	DWORD PTR _pf$[ebp], eax
	cmp	DWORD PTR _pf$[ebp], 0
	je	SHORT $LN8@ssh_free
; Line 10740
	mov	edx, DWORD PTR _pf$[ebp]
	push	edx
	call	_free_rportfwd
	add	esp, 4
	jmp	SHORT $LN9@ssh_free
$LN8@ssh_free:
; Line 10741
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+272]
	push	ecx
	call	_freetree234
	add	esp, 4
; Line 10742
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+272], 0
$LN10@ssh_free:
; Line 10744
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+316]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 10745
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+352], 0
	je	SHORT $LN6@ssh_free
; Line 10746
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+352]
	push	ecx
	call	_x11_free_display
	add	esp, 4
$LN6@ssh_free:
; Line 10747
	push	0
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+360]
	push	eax
	call	_delpos234
	add	esp, 8
	mov	DWORD PTR _auth$[ebp], eax
	cmp	DWORD PTR _auth$[ebp], 0
	je	SHORT $LN5@ssh_free
; Line 10748
	mov	ecx, DWORD PTR _auth$[ebp]
	push	ecx
	call	_x11_free_fake_auth
	add	esp, 4
	jmp	SHORT $LN6@ssh_free
$LN5@ssh_free:
; Line 10749
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+360]
	push	eax
	call	_freetree234
	add	esp, 4
; Line 10750
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+408]
	push	edx
	call	_safefree
	add	esp, 4
; Line 10751
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+412]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 10752
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+416]
	push	eax
	call	_safefree
	add	esp, 4
; Line 10753
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+420]
	push	edx
	call	_safefree
	add	esp, 4
; Line 10754
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 10755
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_safefree
	add	esp, 4
; Line 10756
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+1656]
	push	edx
	call	_safefree
	add	esp, 4
; Line 10757
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 10758
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+92], 0
	je	SHORT $LN4@ssh_free
; Line 10759
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	call	_crcda_free_context
	add	esp, 4
; Line 10760
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+92], 0
$LN4@ssh_free:
; Line 10762
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN3@ssh_free
; Line 10763
	push	1
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_do_close
	add	esp, 8
$LN3@ssh_free:
; Line 10764
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_expire_timer_context
	add	esp, 4
; Line 10765
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+1620], 0
	je	SHORT $LN2@ssh_free
; Line 10766
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+1620]
	push	edx
	call	_pinger_free
	add	esp, 4
$LN2@ssh_free:
; Line 10767
	mov	eax, DWORD PTR _ssh$[ebp]
	add	eax, 568				; 00000238H
	push	eax
	call	_bufchain_clear
	add	esp, 4
; Line 10768
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+548]
	push	edx
	call	_safefree
	add	esp, 4
; Line 10769
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+540]
	push	ecx
	call	_conf_free
	add	esp, 4
; Line 10771
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+1660], 0
	je	SHORT $LN1@ssh_free
; Line 10772
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+1660]
	push	ecx
	call	_ssh_gss_cleanup
	add	esp, 4
$LN1@ssh_free:
; Line 10774
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 10776
	call	_random_unref
; Line 10777
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_free ENDP
_TEXT	ENDS
EXTRN	_pinger_reconfig:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_now$94118 = -32					; size = 4
_new_next$94117 = -28					; size = 4
_rekey_time$ = -24					; size = 4
_i$ = -20						; size = 4
_old_max_data_size$ = -16				; size = 4
_rekey_mandatory$ = -9					; size = 1
_rekeying$ = -8						; size = 4
_ssh$ = -4						; size = 4
_handle$ = 8						; size = 4
_conf$ = 12						; size = 4
_ssh_reconfig PROC
; Line 10783
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 10784
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 10785
	mov	DWORD PTR _rekeying$[ebp], 0
	mov	BYTE PTR _rekey_mandatory$[ebp], 0
; Line 10789
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+1620]
	push	edx
	call	_pinger_reconfig
	add	esp, 12					; 0000000cH
; Line 10790
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+276], 0
	je	SHORT $LN17@ssh_reconf
; Line 10791
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_setup_portfwd
	add	esp, 8
$LN17@ssh_reconf:
; Line 10793
	push	24					; 00000018H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	DWORD PTR _rekey_time$[ebp], eax
; Line 10795
	push	24					; 00000018H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_int
	add	esp, 8
	cmp	eax, DWORD PTR _rekey_time$[ebp]
	je	SHORT $LN16@ssh_reconf
	cmp	DWORD PTR _rekey_time$[ebp], 0
	je	SHORT $LN16@ssh_reconf
; Line 10796
	mov	eax, DWORD PTR _rekey_time$[ebp]
	imul	eax, 60					; 0000003cH
	imul	eax, 1000				; 000003e8H
	mov	ecx, DWORD PTR _ssh$[ebp]
	add	eax, DWORD PTR [ecx+1648]
	mov	DWORD PTR _new_next$94117[ebp], eax
; Line 10797
	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _now$94118[ebp], eax
; Line 10799
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR _now$94118[ebp]
	sub	eax, DWORD PTR [edx+1648]
	mov	ecx, DWORD PTR _rekey_time$[ebp]
	imul	ecx, 60					; 0000003cH
	imul	ecx, 1000				; 000003e8H
	cmp	eax, ecx
	jbe	SHORT $LN15@ssh_reconf
; Line 10800
	mov	DWORD PTR _rekeying$[ebp], OFFSET $SG94120
; Line 10801
	jmp	SHORT $LN16@ssh_reconf
$LN15@ssh_reconf:
; Line 10802
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	push	OFFSET _ssh2_timer
	mov	eax, DWORD PTR _new_next$94117[ebp]
	sub	eax, DWORD PTR _now$94118[ebp]
	push	eax
	call	_schedule_timer
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+1644], eax
$LN16@ssh_reconf:
; Line 10806
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+1636]
	mov	DWORD PTR _old_max_data_size$[ebp], eax
; Line 10808
	push	25					; 00000019H
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_str
	add	esp, 8
	push	eax
	call	_parse_blocksize
	add	esp, 4
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+1636], eax
; Line 10810
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR _old_max_data_size$[ebp]
	cmp	eax, DWORD PTR [edx+1636]
	je	SHORT $LN13@ssh_reconf
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+1636], 0
	je	SHORT $LN13@ssh_reconf
; Line 10812
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [edx+1628]
	cmp	ecx, DWORD PTR [eax+1636]
	ja	SHORT $LN11@ssh_reconf
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [edx+1624]
	cmp	ecx, DWORD PTR [eax+1636]
	jbe	SHORT $LN13@ssh_reconf
$LN11@ssh_reconf:
; Line 10813
	mov	DWORD PTR _rekeying$[ebp], OFFSET $SG94125
$LN13@ssh_reconf:
; Line 10817
	push	22					; 00000016H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	esi, eax
	push	22					; 00000016H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	cmp	esi, eax
	je	SHORT $LN10@ssh_reconf
; Line 10818
	mov	DWORD PTR _rekeying$[ebp], OFFSET $SG94127
; Line 10819
	mov	BYTE PTR _rekey_mandatory$[ebp], 1
$LN10@ssh_reconf:
; Line 10822
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@ssh_reconf
$LN8@ssh_reconf:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN9@ssh_reconf:
	cmp	DWORD PTR _i$[ebp], 6
	jge	SHORT $LN7@ssh_reconf
; Line 10824
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	push	29					; 0000001dH
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+540]
	push	edx
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	mov	esi, eax
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	push	29					; 0000001dH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int_int
	add	esp, 12					; 0000000cH
	cmp	esi, eax
	je	SHORT $LN6@ssh_reconf
; Line 10825
	mov	DWORD PTR _rekeying$[ebp], OFFSET $SG94132
; Line 10826
	mov	BYTE PTR _rekey_mandatory$[ebp], 1
$LN6@ssh_reconf:
; Line 10828
	jmp	SHORT $LN8@ssh_reconf
$LN7@ssh_reconf:
; Line 10829
	push	32					; 00000020H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	esi, eax
	push	32					; 00000020H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	cmp	esi, eax
	je	SHORT $LN5@ssh_reconf
; Line 10830
	mov	DWORD PTR _rekeying$[ebp], OFFSET $SG94134
; Line 10831
	mov	BYTE PTR _rekey_mandatory$[ebp], 1
$LN5@ssh_reconf:
; Line 10834
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_free
	add	esp, 4
; Line 10835
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_copy
	add	esp, 4
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+540], eax
; Line 10836
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh_cache_conf_values
	add	esp, 4
; Line 10838
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+196], 0
	jne	SHORT $LN18@ssh_reconf
	cmp	DWORD PTR _rekeying$[ebp], 0
	je	SHORT $LN18@ssh_reconf
; Line 10839
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+1640], 0
	jne	SHORT $LN3@ssh_reconf
; Line 10840
	push	0
	push	-1
	mov	eax, DWORD PTR _rekeying$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_do_ssh2_transport
	add	esp, 16					; 00000010H
	jmp	SHORT $LN18@ssh_reconf
$LN3@ssh_reconf:
; Line 10841
	movsx	edx, BYTE PTR _rekey_mandatory$[ebp]
	test	edx, edx
	je	SHORT $LN18@ssh_reconf
; Line 10842
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR _rekeying$[ebp]
	mov	DWORD PTR [eax+1652], ecx
$LN18@ssh_reconf:
; Line 10845
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_reconfig ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = -4						; size = 4
_handle$ = 8						; size = 4
_buf$ = 12						; size = 4
_len$ = 16						; size = 4
_ssh_send PROC
; Line 10851
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 10852
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 10854
	cmp	DWORD PTR _ssh$[ebp], 0
	je	SHORT $LN1@ssh_send
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN1@ssh_send
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+528], 0
	jne	SHORT $LN2@ssh_send
$LN1@ssh_send:
; Line 10855
	xor	eax, eax
	jmp	SHORT $LN3@ssh_send
$LN2@ssh_send:
; Line 10857
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+528]
	call	ecx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 10859
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh_sendbuffer
	add	esp, 4
$LN3@ssh_send:
; Line 10860
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_send ENDP
; Function compile flags: /Odtp /RTCsu
_override_value$ = -8					; size = 4
_ssh$ = -4						; size = 4
_handle$ = 8						; size = 4
_ssh_sendbuffer PROC
; Line 10866
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 10867
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 10870
	cmp	DWORD PTR _ssh$[ebp], 0
	je	SHORT $LN7@ssh_sendbu
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN7@ssh_sendbu
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+528], 0
	jne	SHORT $LN8@ssh_sendbu
$LN7@ssh_sendbu:
; Line 10871
	xor	eax, eax
	jmp	SHORT $LN9@ssh_sendbu
$LN8@ssh_sendbu:
; Line 10877
	mov	DWORD PTR _override_value$[ebp], 0
; Line 10878
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+376], 0
	je	SHORT $LN6@ssh_sendbu
; Line 10879
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+372]
	mov	DWORD PTR _override_value$[ebp], edx
$LN6@ssh_sendbu:
; Line 10881
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+364], 1
	jne	SHORT $LN5@ssh_sendbu
; Line 10882
	mov	eax, DWORD PTR _override_value$[ebp]
	jmp	SHORT $LN9@ssh_sendbu
	jmp	SHORT $LN4@ssh_sendbu
$LN5@ssh_sendbu:
; Line 10883
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+364], 2
	jne	SHORT $LN4@ssh_sendbu
; Line 10884
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+252], 0
	jne	SHORT $LN2@ssh_sendbu
; Line 10885
	mov	eax, DWORD PTR _override_value$[ebp]
	jmp	SHORT $LN9@ssh_sendbu
; Line 10886
	jmp	SHORT $LN4@ssh_sendbu
$LN2@ssh_sendbu:
; Line 10888
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+252]
	add	ecx, 32					; 00000020H
	push	ecx
	call	_bufchain_size
	add	esp, 4
	add	eax, DWORD PTR _override_value$[ebp]
	jmp	SHORT $LN9@ssh_sendbu
$LN4@ssh_sendbu:
; Line 10891
	xor	eax, eax
$LN9@ssh_sendbu:
; Line 10892
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_sendbuffer ENDP
; Function compile flags: /Odtp /RTCsu
tv67 = -12						; size = 4
_pktout$ = -8						; size = 4
_ssh$ = -4						; size = 4
_handle$ = 8						; size = 4
_width$ = 12						; size = 4
_height$ = 16						; size = 4
_ssh_size PROC
; Line 10898
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 10899
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 10902
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR _width$[ebp]
	mov	DWORD PTR [ecx+240], edx
; Line 10903
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR _height$[ebp]
	mov	DWORD PTR [eax+244], ecx
; Line 10905
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+280]
	mov	DWORD PTR tv67[ebp], eax
	cmp	DWORD PTR tv67[ebp], 2
	je	SHORT $LN6@ssh_size
	cmp	DWORD PTR tv67[ebp], 3
	je	SHORT $LN5@ssh_size
	jmp	$LN10@ssh_size
; Line 10909
	jmp	$LN10@ssh_size
$LN6@ssh_size:
; Line 10911
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx+284], 1
; Line 10912
	jmp	$LN10@ssh_size
$LN5@ssh_size:
; Line 10914
	push	21					; 00000015H
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+540]
	push	eax
	call	_conf_get_int
	add	esp, 8
	test	eax, eax
	jne	$LN10@ssh_size
; Line 10915
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+364], 1
	jne	SHORT $LN3@ssh_size
; Line 10919
	push	0
	push	0
	push	1
	push	0
	push	1
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+240]
	push	eax
	push	1
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+244]
	push	edx
	push	1
	push	11					; 0000000bH
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_send_packet
	add	esp, 44					; 0000002cH
	jmp	$LN10@ssh_size
$LN3@ssh_size:
; Line 10920
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+252], 0
	je	SHORT $LN10@ssh_size
; Line 10922
	push	0
	push	0
	push	OFFSET $SG94196
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+252]
	push	eax
	call	_ssh2_chanreq_init
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pktout$[ebp], eax
; Line 10923
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+240]
	push	edx
	mov	eax, DWORD PTR _pktout$[ebp]
	push	eax
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 10924
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+244]
	push	edx
	mov	eax, DWORD PTR _pktout$[ebp]
	push	eax
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 10925
	push	0
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 10926
	push	0
	mov	edx, DWORD PTR _pktout$[ebp]
	push	edx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 10927
	mov	eax, DWORD PTR _pktout$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh2_pkt_send
	add	esp, 8
$LN10@ssh_size:
; Line 10932
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_size ENDP
_TEXT	ENDS
_BSS	SEGMENT
	ALIGN	8

?ssh_specials@?1??ssh_get_specials@@9@9 DQ 014H DUP (?)	; `ssh_get_specials'::`2'::ssh_specials
; Function compile flags: /Odtp /RTCsu
_BSS	ENDS
_TEXT	SEGMENT
_i$ = -8						; size = 4
_ssh$ = -4						; size = 4
_handle$ = 8						; size = 4
_ssh_get_specials PROC
; Line 10939
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 10975
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 10976
	mov	DWORD PTR _i$[ebp], 0
; Line 10984
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+364], 1
	jne	SHORT $LN24@ssh_get_sp
; Line 10988
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+80]
	and	eax, 1
	jne	SHORT $LN23@ssh_get_sp
$LN22@ssh_get_sp:
; Line 10989
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	cmp	ecx, 20					; 00000014H
	jbe	SHORT $LN27@ssh_get_sp
	push	10989					; 00002aedH
	push	OFFSET $SG94243
	push	OFFSET $SG94244
	call	__wassert
	add	esp, 12					; 0000000cH
$LN27@ssh_get_sp:
	push	8
	push	OFFSET ?ssh1_ignore_special@?1??ssh_get_specials@@9@9
	mov	eax, DWORD PTR _i$[ebp]
	lea	ecx, DWORD PTR ?ssh_specials@?1??ssh_get_specials@@9@9[eax*8]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
	xor	eax, eax
	jne	SHORT $LN22@ssh_get_sp
$LN23@ssh_get_sp:
; Line 10990
	jmp	$LN19@ssh_get_sp
$LN24@ssh_get_sp:
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+364], 2
	jne	$LN19@ssh_get_sp
; Line 10991
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+80]
	and	eax, 512				; 00000200H
	jne	SHORT $LN17@ssh_get_sp
$LN16@ssh_get_sp:
; Line 10992
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	cmp	ecx, 20					; 00000014H
	jbe	SHORT $LN28@ssh_get_sp
	push	10992					; 00002af0H
	push	OFFSET $SG94252
	push	OFFSET $SG94253
	call	__wassert
	add	esp, 12					; 0000000cH
$LN28@ssh_get_sp:
	push	8
	push	OFFSET ?ssh2_ignore_special@?1??ssh_get_specials@@9@9
	mov	eax, DWORD PTR _i$[ebp]
	lea	ecx, DWORD PTR ?ssh_specials@?1??ssh_get_specials@@9@9[eax*8]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
	xor	eax, eax
	jne	SHORT $LN16@ssh_get_sp
$LN17@ssh_get_sp:
; Line 10993
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	and	edx, 64					; 00000040H
	jne	SHORT $LN13@ssh_get_sp
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+196], 0
	jne	SHORT $LN13@ssh_get_sp
$LN12@ssh_get_sp:
; Line 10994
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	cmp	ecx, 20					; 00000014H
	jbe	SHORT $LN29@ssh_get_sp
	push	10994					; 00002af2H
	push	OFFSET $SG94259
	push	OFFSET $SG94260
	call	__wassert
	add	esp, 12					; 0000000cH
$LN29@ssh_get_sp:
	push	8
	push	OFFSET ?ssh2_rekey_special@?1??ssh_get_specials@@9@9
	mov	eax, DWORD PTR _i$[ebp]
	lea	ecx, DWORD PTR ?ssh_specials@?1??ssh_get_specials@@9@9[eax*8]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
	xor	eax, eax
	jne	SHORT $LN12@ssh_get_sp
$LN13@ssh_get_sp:
; Line 10995
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+252], 0
	je	SHORT $LN19@ssh_get_sp
$LN8@ssh_get_sp:
; Line 10996
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 17					; 00000011H
	cmp	edx, 20					; 00000014H
	jbe	SHORT $LN30@ssh_get_sp
	push	10996					; 00002af4H
	push	OFFSET $SG94266
	push	OFFSET $SG94267
	call	__wassert
	add	esp, 12					; 0000000cH
$LN30@ssh_get_sp:
	push	136					; 00000088H
	push	OFFSET ?ssh2_session_specials@?1??ssh_get_specials@@9@9
	mov	ecx, DWORD PTR _i$[ebp]
	lea	edx, DWORD PTR ?ssh_specials@?1??ssh_get_specials@@9@9[ecx*8]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 17					; 00000011H
	mov	DWORD PTR _i$[ebp], eax
	xor	ecx, ecx
	jne	SHORT $LN8@ssh_get_sp
$LN19@ssh_get_sp:
; Line 10999
	cmp	DWORD PTR _i$[ebp], 0
	je	SHORT $LN5@ssh_get_sp
$LN4@ssh_get_sp:
; Line 11000
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	cmp	edx, 20					; 00000014H
	jbe	SHORT $LN31@ssh_get_sp
	push	11000					; 00002af8H
	push	OFFSET $SG94273
	push	OFFSET $SG94274
	call	__wassert
	add	esp, 12					; 0000000cH
$LN31@ssh_get_sp:
	push	8
	push	OFFSET ?specials_end@?1??ssh_get_specials@@9@9
	mov	ecx, DWORD PTR _i$[ebp]
	lea	edx, DWORD PTR ?ssh_specials@?1??ssh_get_specials@@9@9[ecx*8]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	xor	ecx, ecx
	jne	SHORT $LN4@ssh_get_sp
; Line 11001
	mov	eax, OFFSET ?ssh_specials@?1??ssh_get_specials@@9@9
	jmp	SHORT $LN25@ssh_get_sp
; Line 11002
	jmp	SHORT $LN25@ssh_get_sp
$LN5@ssh_get_sp:
; Line 11003
	xor	eax, eax
$LN25@ssh_get_sp:
; Line 11006
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_get_specials ENDP
; Function compile flags: /Odtp /RTCsu
_signame$94319 = -12					; size = 4
_pktout$ = -8						; size = 4
_ssh$ = -4						; size = 4
_handle$ = 8						; size = 4
_code$ = 12						; size = 4
_ssh_special PROC
; Line 11014
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 11015
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 11018
	cmp	DWORD PTR _code$[ebp], 12		; 0000000cH
	jne	$LN42@ssh_specia
; Line 11019
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+280], 3
	je	SHORT $LN41@ssh_specia
; Line 11024
	cmp	DWORD PTR _code$[ebp], 12		; 0000000cH
	jne	SHORT $LN40@ssh_specia
; Line 11025
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+288], 1
$LN40@ssh_specia:
; Line 11026
	jmp	$LN43@ssh_specia
$LN41@ssh_specia:
; Line 11028
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+364], 1
	jne	SHORT $LN39@ssh_specia
; Line 11029
	push	0
	push	19					; 00000013H
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_send_packet
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN38@ssh_specia
$LN39@ssh_specia:
; Line 11030
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+252], 0
	je	SHORT $LN38@ssh_specia
; Line 11031
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+252]
	push	ecx
	call	_sshfwd_write_eof
	add	esp, 4
; Line 11032
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [edx+216], 0
$LN38@ssh_specia:
; Line 11034
	push	OFFSET $SG94291
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	call	_logevent
	add	esp, 8
	jmp	$LN43@ssh_specia
$LN42@ssh_specia:
; Line 11035
	cmp	DWORD PTR _code$[ebp], 15		; 0000000fH
	je	SHORT $LN34@ssh_specia
	cmp	DWORD PTR _code$[ebp], 6
	jne	$LN35@ssh_specia
$LN34@ssh_specia:
; Line 11037
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+280], 4
	je	SHORT $LN32@ssh_specia
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+280], 0
	jne	SHORT $LN33@ssh_specia
$LN32@ssh_specia:
	jmp	$LN43@ssh_specia
$LN33@ssh_specia:
; Line 11038
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+364], 1
	jne	SHORT $LN31@ssh_specia
; Line 11039
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+80]
	and	eax, 1
	jne	SHORT $LN30@ssh_specia
; Line 11040
	push	0
	push	OFFSET $SG94299
	push	4
	push	32					; 00000020H
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_send_packet
	add	esp, 20					; 00000014H
$LN30@ssh_specia:
; Line 11041
	jmp	SHORT $LN29@ssh_specia
$LN31@ssh_specia:
; Line 11042
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+80]
	and	eax, 512				; 00000200H
	jne	SHORT $LN29@ssh_specia
; Line 11043
	push	2
	call	_ssh2_pkt_init
	add	esp, 4
	mov	DWORD PTR _pktout$[ebp], eax
; Line 11044
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh_pkt_addstring_start
	add	esp, 4
; Line 11045
	mov	edx, DWORD PTR _pktout$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_pkt_send_noqueue
	add	esp, 8
$LN29@ssh_specia:
; Line 11047
	jmp	$LN43@ssh_specia
$LN35@ssh_specia:
; Line 11048
	cmp	DWORD PTR _code$[ebp], 17		; 00000011H
	jne	SHORT $LN26@ssh_specia
; Line 11050
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+1640], 0
	jne	SHORT $LN25@ssh_specia
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+196], 0
	jne	SHORT $LN25@ssh_specia
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+364], 2
	jne	SHORT $LN25@ssh_specia
; Line 11051
	push	0
	push	-1
	push	OFFSET $SG94306
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_do_ssh2_transport
	add	esp, 16					; 00000010H
$LN25@ssh_specia:
; Line 11052
	jmp	$LN43@ssh_specia
$LN26@ssh_specia:
; Line 11053
	cmp	DWORD PTR _code$[ebp], 1
	jne	$LN23@ssh_specia
; Line 11055
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+280], 4
	je	SHORT $LN21@ssh_specia
	mov	eax, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [eax+280], 0
	jne	SHORT $LN22@ssh_specia
$LN21@ssh_specia:
	jmp	$LN43@ssh_specia
$LN22@ssh_specia:
; Line 11056
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+364], 1
	jne	SHORT $LN20@ssh_specia
; Line 11057
	push	OFFSET $SG94312
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+228]
	push	eax
	call	_logevent
	add	esp, 8
	jmp	SHORT $LN19@ssh_specia
$LN20@ssh_specia:
; Line 11058
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+252], 0
	je	SHORT $LN19@ssh_specia
; Line 11059
	push	0
	push	0
	push	OFFSET $SG94317
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+252]
	push	eax
	call	_ssh2_chanreq_init
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pktout$[ebp], eax
; Line 11060
	push	0
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 11061
	mov	edx, DWORD PTR _pktout$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_pkt_send
	add	esp, 8
$LN19@ssh_specia:
; Line 11063
	jmp	$LN43@ssh_specia
$LN23@ssh_specia:
; Line 11065
	mov	DWORD PTR _signame$94319[ebp], 0
; Line 11066
	cmp	DWORD PTR _code$[ebp], 18		; 00000012H
	jne	SHORT $LN16@ssh_specia
	mov	DWORD PTR _signame$94319[ebp], OFFSET $SG94322
$LN16@ssh_specia:
; Line 11067
	cmp	DWORD PTR _code$[ebp], 19		; 00000013H
	jne	SHORT $LN15@ssh_specia
	mov	DWORD PTR _signame$94319[ebp], OFFSET $SG94324
$LN15@ssh_specia:
; Line 11068
	cmp	DWORD PTR _code$[ebp], 20		; 00000014H
	jne	SHORT $LN14@ssh_specia
	mov	DWORD PTR _signame$94319[ebp], OFFSET $SG94326
$LN14@ssh_specia:
; Line 11069
	cmp	DWORD PTR _code$[ebp], 21		; 00000015H
	jne	SHORT $LN13@ssh_specia
	mov	DWORD PTR _signame$94319[ebp], OFFSET $SG94328
$LN13@ssh_specia:
; Line 11070
	cmp	DWORD PTR _code$[ebp], 22		; 00000016H
	jne	SHORT $LN12@ssh_specia
	mov	DWORD PTR _signame$94319[ebp], OFFSET $SG94330
$LN12@ssh_specia:
; Line 11071
	cmp	DWORD PTR _code$[ebp], 23		; 00000017H
	jne	SHORT $LN11@ssh_specia
	mov	DWORD PTR _signame$94319[ebp], OFFSET $SG94332
$LN11@ssh_specia:
; Line 11072
	cmp	DWORD PTR _code$[ebp], 24		; 00000018H
	jne	SHORT $LN10@ssh_specia
	mov	DWORD PTR _signame$94319[ebp], OFFSET $SG94334
$LN10@ssh_specia:
; Line 11073
	cmp	DWORD PTR _code$[ebp], 25		; 00000019H
	jne	SHORT $LN9@ssh_specia
	mov	DWORD PTR _signame$94319[ebp], OFFSET $SG94336
$LN9@ssh_specia:
; Line 11074
	cmp	DWORD PTR _code$[ebp], 26		; 0000001aH
	jne	SHORT $LN8@ssh_specia
	mov	DWORD PTR _signame$94319[ebp], OFFSET $SG94338
$LN8@ssh_specia:
; Line 11075
	cmp	DWORD PTR _code$[ebp], 27		; 0000001bH
	jne	SHORT $LN7@ssh_specia
	mov	DWORD PTR _signame$94319[ebp], OFFSET $SG94340
$LN7@ssh_specia:
; Line 11076
	cmp	DWORD PTR _code$[ebp], 28		; 0000001cH
	jne	SHORT $LN6@ssh_specia
	mov	DWORD PTR _signame$94319[ebp], OFFSET $SG94342
$LN6@ssh_specia:
; Line 11077
	cmp	DWORD PTR _code$[ebp], 29		; 0000001dH
	jne	SHORT $LN5@ssh_specia
	mov	DWORD PTR _signame$94319[ebp], OFFSET $SG94344
$LN5@ssh_specia:
; Line 11078
	cmp	DWORD PTR _code$[ebp], 30		; 0000001eH
	jne	SHORT $LN4@ssh_specia
	mov	DWORD PTR _signame$94319[ebp], OFFSET $SG94346
$LN4@ssh_specia:
; Line 11081
	cmp	DWORD PTR _signame$94319[ebp], 0
	je	SHORT $LN43@ssh_specia
; Line 11083
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+364], 2
	jne	SHORT $LN43@ssh_specia
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+252], 0
	je	SHORT $LN43@ssh_specia
; Line 11084
	push	0
	push	0
	push	OFFSET $SG94351
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+252]
	push	ecx
	call	_ssh2_chanreq_init
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pktout$[ebp], eax
; Line 11085
	mov	edx, DWORD PTR _signame$94319[ebp]
	push	edx
	mov	eax, DWORD PTR _pktout$[ebp]
	push	eax
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 11086
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_pkt_send
	add	esp, 8
; Line 11087
	mov	eax, DWORD PTR _signame$94319[ebp]
	push	eax
	push	OFFSET $SG94352
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_logeventf
	add	esp, 12					; 0000000cH
$LN43@ssh_specia:
; Line 11093
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_special ENDP
_TEXT	ENDS
PUBLIC	_new_sock_channel
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_c$ = -8						; size = 4
_ssh$ = -4						; size = 4
_handle$ = 8						; size = 4
_pf$ = 12						; size = 4
_new_sock_channel PROC
; Line 11096
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 11097
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 11099
	push	96					; 00000060H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
; Line 11101
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 11102
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_ssh2_channel_init
	add	esp, 4
; Line 11103
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+16], 1
; Line 11104
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+12], 4
; Line 11105
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _pf$[ebp]
	mov	DWORD PTR [eax+76], ecx
; Line 11106
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+248]
	push	ecx
	call	_add234
	add	esp, 8
; Line 11107
	mov	eax, DWORD PTR _c$[ebp]
; Line 11108
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_new_sock_channel ENDP
_TEXT	ENDS
PUBLIC	_ssh_alloc_sharing_channel
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_c$ = -4						; size = 4
_ssh$ = 8						; size = 4
_sharing_ctx$ = 12					; size = 4
_ssh_alloc_sharing_channel PROC
; Line 11111
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 11113
	push	96					; 00000060H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
; Line 11115
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 11116
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	call	_ssh2_channel_init
	add	esp, 4
; Line 11117
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+12], 5
; Line 11118
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR _sharing_ctx$[ebp]
	mov	DWORD PTR [ecx+76], edx
; Line 11119
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+248]
	push	edx
	call	_add234
	add	esp, 8
; Line 11120
	mov	eax, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 11121
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_alloc_sharing_channel ENDP
_TEXT	ENDS
PUBLIC	_ssh_delete_sharing_channel
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_c$ = -4						; size = 4
_ssh$ = 8						; size = 4
_localid$ = 12						; size = 4
_ssh_delete_sharing_channel PROC
; Line 11124
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 11127
	push	OFFSET _ssh_channelfind
	lea	eax, DWORD PTR _localid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+248]
	push	edx
	call	_find234
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _c$[ebp], eax
; Line 11128
	cmp	DWORD PTR _c$[ebp], 0
	je	SHORT $LN2@ssh_delete
; Line 11129
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_ssh_channel_destroy
	add	esp, 4
$LN2@ssh_delete:
; Line 11130
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_delete_sharing_channel ENDP
_TEXT	ENDS
PUBLIC	_ssh_send_packet_from_downstream
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pkt$ = -4						; size = 4
_ssh$ = 8						; size = 4
_id$ = 12						; size = 4
_type$ = 16						; size = 4
_data$ = 20						; size = 4
_datalen$ = 24						; size = 4
_additional_log_text$ = 28				; size = 4
_ssh_send_packet_from_downstream PROC
; Line 11135
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 11138
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	call	_ssh2_pkt_init
	add	esp, 4
	mov	DWORD PTR _pkt$[ebp], eax
; Line 11139
	mov	ecx, DWORD PTR _pkt$[ebp]
	mov	edx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [ecx+36], edx
; Line 11140
	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR _additional_log_text$[ebp]
	mov	DWORD PTR [eax+40], ecx
; Line 11141
	mov	edx, DWORD PTR _datalen$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkt$[ebp]
	push	ecx
	call	_ssh_pkt_adddata
	add	esp, 12					; 0000000cH
; Line 11142
	mov	edx, DWORD PTR _pkt$[ebp]
	push	edx
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh2_pkt_send
	add	esp, 8
; Line 11143
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_send_packet_from_downstream ENDP
; Function compile flags: /Odtp /RTCsu
tv80 = -12						; size = 4
_buflimit$ = -8						; size = 4
_ssh$ = -4						; size = 4
_handle$ = 8						; size = 4
_bufsize$ = 12						; size = 4
_ssh_unthrottle PROC
; Line 11150
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 11151
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 11154
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+364], 1
	jne	SHORT $LN7@ssh_unthro
; Line 11155
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+380], 0
	je	SHORT $LN6@ssh_unthro
	cmp	DWORD PTR _bufsize$[ebp], 32768		; 00008000H
	jge	SHORT $LN6@ssh_unthro
; Line 11156
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	DWORD PTR [eax+380], 0
; Line 11157
	push	-1
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_throttle_conn
	add	esp, 8
$LN6@ssh_unthro:
; Line 11159
	jmp	$LN5@ssh_unthro
$LN7@ssh_unthro:
; Line 11160
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+252], 0
	je	$LN5@ssh_unthro
; Line 11163
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+252]
	mov	edx, DWORD PTR _bufsize$[ebp]
	cmp	edx, DWORD PTR [ecx+56]
	jge	SHORT $LN10@ssh_unthro
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+252]
	mov	edx, DWORD PTR [ecx+56]
	sub	edx, DWORD PTR _bufsize$[ebp]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN11@ssh_unthro
$LN10@ssh_unthro:
	mov	DWORD PTR tv80[ebp], 0
$LN11@ssh_unthro:
	mov	eax, DWORD PTR tv80[ebp]
	push	eax
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+252]
	push	edx
	call	_ssh2_set_window
	add	esp, 8
; Line 11164
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh_is_simple
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@ssh_unthro
; Line 11165
	mov	DWORD PTR _buflimit$[ebp], 0
; Line 11166
	jmp	SHORT $LN2@ssh_unthro
$LN3@ssh_unthro:
; Line 11167
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+252]
	mov	eax, DWORD PTR [edx+56]
	mov	DWORD PTR _buflimit$[ebp], eax
$LN2@ssh_unthro:
; Line 11168
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+252]
	cmp	DWORD PTR [edx+28], 0
	je	SHORT $LN5@ssh_unthro
	mov	eax, DWORD PTR _bufsize$[ebp]
	cmp	eax, DWORD PTR _buflimit$[ebp]
	jg	SHORT $LN5@ssh_unthro
; Line 11169
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR [ecx+252]
	mov	DWORD PTR [edx+28], 0
; Line 11170
	push	-1
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_ssh_throttle_conn
	add	esp, 8
$LN5@ssh_unthro:
; Line 11179
	mov	ecx, DWORD PTR _ssh$[ebp]
	push	ecx
	call	_ssh_process_queued_incoming_data
	add	esp, 4
; Line 11180
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_unthrottle ENDP
; Function compile flags: /Odtp /RTCsu
_trimmed_host$94426 = -16				; size = 4
_pktout$ = -12						; size = 4
_ssh$ = -8						; size = 4
_c$ = -4						; size = 4
_channel$ = 8						; size = 4
_hostname$ = 12						; size = 4
_port$ = 16						; size = 4
_org$ = 20						; size = 4
_ssh_send_port_open PROC
; Line 11183
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 11184
	mov	eax, DWORD PTR _channel$[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 11185
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _ssh$[ebp], edx
; Line 11188
	mov	eax, DWORD PTR _org$[ebp]
	push	eax
	mov	ecx, DWORD PTR _port$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hostname$[ebp]
	push	edx
	push	OFFSET $SG94422
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_logeventf
	add	esp, 20					; 00000014H
; Line 11190
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+364], 1
	jne	SHORT $LN2@ssh_send_p
; Line 11196
	push	0
	mov	edx, DWORD PTR _port$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _hostname$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	1
	push	29					; 0000001dH
	mov	eax, DWORD PTR _ssh$[ebp]
	push	eax
	call	_send_packet
	add	esp, 36					; 00000024H
; Line 11197
	jmp	SHORT $LN3@ssh_send_p
$LN2@ssh_send_p:
; Line 11198
	push	OFFSET $SG94425
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	call	_ssh2_chanopen_init
	add	esp, 8
	mov	DWORD PTR _pktout$[ebp], eax
; Line 11200
	mov	edx, DWORD PTR _hostname$[ebp]
	push	edx
	call	_host_strduptrim
	add	esp, 4
	mov	DWORD PTR _trimmed_host$94426[ebp], eax
; Line 11201
	mov	eax, DWORD PTR _trimmed_host$94426[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 11202
	mov	edx, DWORD PTR _trimmed_host$94426[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 11204
	mov	eax, DWORD PTR _port$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 11214
	push	OFFSET $SG94427
	mov	edx, DWORD PTR _pktout$[ebp]
	push	edx
	call	_ssh_pkt_addstring
	add	esp, 8
; Line 11215
	push	0
	mov	eax, DWORD PTR _pktout$[ebp]
	push	eax
	call	_ssh_pkt_adduint32
	add	esp, 8
; Line 11216
	mov	ecx, DWORD PTR _pktout$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ssh$[ebp]
	push	edx
	call	_ssh2_pkt_send
	add	esp, 8
$LN3@ssh_send_p:
; Line 11218
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_send_port_open ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = -4						; size = 4
_handle$ = 8						; size = 4
_ssh_connected PROC
; Line 11221
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 11222
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 11223
	mov	ecx, DWORD PTR _ssh$[ebp]
	xor	eax, eax
	cmp	DWORD PTR [ecx+16], 0
	setne	al
; Line 11224
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_connected ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = -4						; size = 4
_handle$ = 8						; size = 4
_ssh_sendok PROC
; Line 11227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 11228
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 11229
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [ecx+216]
; Line 11230
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_sendok ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = -4						; size = 4
_handle$ = 8						; size = 4
_option$ = 12						; size = 4
_ssh_ldisc PROC
; Line 11233
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 11234
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 11235
	cmp	DWORD PTR _option$[ebp], 1
	jne	SHORT $LN2@ssh_ldisc
; Line 11236
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [ecx+220]
	jmp	SHORT $LN3@ssh_ldisc
$LN2@ssh_ldisc:
; Line 11237
	cmp	DWORD PTR _option$[ebp], 0
	jne	SHORT $LN1@ssh_ldisc
; Line 11238
	mov	edx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [edx+224]
	jmp	SHORT $LN3@ssh_ldisc
$LN1@ssh_ldisc:
; Line 11239
	xor	eax, eax
$LN3@ssh_ldisc:
; Line 11240
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_ldisc ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = -4						; size = 4
_handle$ = 8						; size = 4
_ldisc$ = 12						; size = 4
_ssh_provide_ldisc PROC
; Line 11243
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 11244
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 11245
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR _ldisc$[ebp]
	mov	DWORD PTR [ecx+20], edx
; Line 11246
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_provide_ldisc ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = -4						; size = 4
_handle$ = 8						; size = 4
_logctx$ = 12						; size = 4
_ssh_provide_logctx PROC
; Line 11249
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 11250
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 11251
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	edx, DWORD PTR _logctx$[ebp]
	mov	DWORD PTR [ecx+24], edx
; Line 11252
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_provide_logctx ENDP
; Function compile flags: /Odtp /RTCsu
tv69 = -8						; size = 4
_ssh$ = -4						; size = 4
_handle$ = 8						; size = 4
_ssh_return_exitcode PROC
; Line 11255
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 11256
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 11257
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN2@ssh_return
; Line 11258
	or	eax, -1
	jmp	SHORT $LN3@ssh_return
; Line 11259
	jmp	SHORT $LN3@ssh_return
$LN2@ssh_return:
; Line 11260
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+260], 0
	jl	SHORT $LN5@ssh_return
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	ecx, DWORD PTR [eax+260]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN6@ssh_return
$LN5@ssh_return:
	mov	DWORD PTR tv69[ebp], 2147483647		; 7fffffffH
$LN6@ssh_return:
	mov	eax, DWORD PTR tv69[ebp]
$LN3@ssh_return:
; Line 11261
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_return_exitcode ENDP
; Function compile flags: /Odtp /RTCsu
_ssh$ = -4						; size = 4
_handle$ = 8						; size = 4
_ssh_cfg_info PROC
; Line 11269
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 11270
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 11271
	mov	ecx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [ecx+364], 0
	jne	SHORT $LN4@ssh_cfg_in
; Line 11272
	xor	eax, eax
	jmp	SHORT $LN5@ssh_cfg_in
	jmp	SHORT $LN5@ssh_cfg_in
$LN4@ssh_cfg_in:
; Line 11273
	mov	edx, DWORD PTR _ssh$[ebp]
	cmp	DWORD PTR [edx+196], 0
	je	SHORT $LN2@ssh_cfg_in
; Line 11274
	or	eax, -1
	jmp	SHORT $LN5@ssh_cfg_in
; Line 11275
	jmp	SHORT $LN5@ssh_cfg_in
$LN2@ssh_cfg_in:
; Line 11276
	mov	eax, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [eax+364]
$LN5@ssh_cfg_in:
; Line 11277
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_cfg_info ENDP
_TEXT	ENDS
PUBLIC	_ssh_fallback_cmd
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ssh$ = -4						; size = 4
_handle$ = 8						; size = 4
_ssh_fallback_cmd PROC
; Line 11285
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 11286
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ssh$[ebp], eax
; Line 11287
	mov	ecx, DWORD PTR _ssh$[ebp]
	mov	eax, DWORD PTR [ecx+328]
; Line 11288
	mov	esp, ebp
	pop	ebp
	ret	0
_ssh_fallback_cmd ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\Putty\sercfg.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
?parities@?1??serial_parity_handler@@9@9 DD FLAT:$SG86263 ; `serial_parity_handler'::`2'::parities
	DD	00H
	DD	FLAT:$SG86264
	DD	01H
	DD	FLAT:$SG86265
	DD	02H
	DD	FLAT:$SG86266
	DD	03H
	DD	FLAT:$SG86267
	DD	04H
?flows@?1??serial_flow_handler@@9@9 DD FLAT:$SG86305	; `serial_flow_handler'::`2'::flows
	DD	00H
	DD	FLAT:$SG86306
	DD	01H
	DD	FLAT:$SG86307
	DD	02H
	DD	FLAT:$SG86308
	DD	03H
CONST	ENDS
_DATA	SEGMENT
$SG86263 DB	'None', 00H
	ORG $+3
$SG86264 DB	'Odd', 00H
$SG86265 DB	'Even', 00H
	ORG $+3
$SG86266 DB	'Mark', 00H
	ORG $+3
$SG86267 DB	'Space', 00H
	ORG $+2
$SG86305 DB	'None', 00H
	ORG $+3
$SG86306 DB	'XON/XOFF', 00H
	ORG $+3
$SG86307 DB	'RTS/CTS', 00H
$SG86308 DB	'DSR/DTR', 00H
$SG86349 DB	'Specify the destination you want to connect to', 00H
	ORG $+1
$SG86350 DB	'hostport', 00H
	ORG $+3
$SG86351 DB	'Session', 00H
$SG86359 DB	'Serial', 00H
	ORG $+1
$SG86367 DB	'Options controlling local serial lines', 00H
	ORG $+1
$SG86368 DB	'Connection/Serial', 00H
	ORG $+2
$SG86370 DB	'Select a serial line', 00H
	ORG $+3
$SG86371 DB	'serline', 00H
$SG86372 DB	'Connection/Serial', 00H
	ORG $+2
$SG86373 DB	'serial.line:config-serial-line', 00H
	ORG $+1
$SG86374 DB	'Serial line to connect to', 00H
	ORG $+2
$SG86375 DB	'Configure the serial line', 00H
	ORG $+2
$SG86376 DB	'sercfg', 00H
	ORG $+1
$SG86377 DB	'Connection/Serial', 00H
	ORG $+2
$SG86378 DB	'serial.speed:config-serial-speed', 00H
	ORG $+3
$SG86379 DB	'Speed (baud)', 00H
	ORG $+3
$SG86380 DB	'serial.databits:config-serial-databits', 00H
	ORG $+1
$SG86381 DB	'Data bits', 00H
	ORG $+2
$SG86382 DB	'serial.stopbits:config-serial-stopbits', 00H
	ORG $+1
$SG86383 DB	'Stop bits', 00H
	ORG $+2
$SG86384 DB	'serial.parity:config-serial-parity', 00H
	ORG $+1
$SG86385 DB	'Parity', 00H
	ORG $+1
$SG86386 DB	'serial.flow:config-serial-flow', 00H
	ORG $+1
$SG86387 DB	'Flow control', 00H
_DATA	ENDS
PUBLIC	_ser_setup_config_box
EXTRN	_ctrl_droplist:PROC
EXTRN	_ctrl_editbox:PROC
EXTRN	_P:PROC
EXTRN	_conf_editbox_handler:PROC
EXTRN	_ctrl_settitle:PROC
EXTRN	_I:PROC
EXTRN	_dupstr:PROC
EXTRN	_saferealloc:PROC
EXTRN	_config_protocolbuttons_handler:PROC
EXTRN	_ctrl_getset:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\putty\sercfg.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_i$86343 = -12						; size = 4
_c$ = -8						; size = 4
_s$ = -4						; size = 4
_b$ = 8							; size = 4
_midsession$ = 12					; size = 4
_parity_mask$ = 16					; size = 4
_flow_mask$ = 20					; size = 4
_ser_setup_config_box PROC
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 133
	cmp	DWORD PTR _midsession$[ebp], 0
	jne	$LN7@ser_setup_
; Line 143
	push	OFFSET $SG86349
	push	OFFSET $SG86350
	push	OFFSET $SG86351
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 145
	mov	DWORD PTR _i$86343[ebp], 0
	jmp	SHORT $LN6@ser_setup_
$LN5@ser_setup_:
	mov	ecx, DWORD PTR _i$86343[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$86343[ebp], ecx
$LN6@ser_setup_:
	mov	edx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR _i$86343[ebp]
	cmp	eax, DWORD PTR [edx+16]
	jge	$LN7@ser_setup_
; Line 146
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _i$86343[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _c$[ebp], ecx
; Line 148
	mov	edx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [edx], 2
	jne	$LN3@ser_setup_
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax+16], OFFSET _config_protocolbuttons_handler
	jne	$LN3@ser_setup_
; Line 149
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	add	edx, 1
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+36], edx
; Line 150
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	add	edx, 1
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+32], edx
; Line 152
	push	4
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+40], eax
; Line 154
	push	OFFSET $SG86359
	call	_dupstr
	add	esp, 4
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	mov	DWORD PTR [ecx+edx*4-4], eax
; Line 156
	push	4
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx+48], eax
; Line 157
	push	4
	call	_I
	add	esp, 4
	mov	edx, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [edx+36]
	mov	edx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [edx+48]
	mov	DWORD PTR [edx+ecx*4-4], eax
; Line 158
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax+44], 0
	je	SHORT $LN3@ser_setup_
; Line 160
	push	1
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	push	edx
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+44], eax
; Line 161
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	BYTE PTR [ecx+eax-1], 114		; 00000072H
$LN3@ser_setup_:
; Line 164
	jmp	$LN5@ser_setup_
$LN7@ser_setup_:
; Line 172
	push	OFFSET $SG86367
	push	OFFSET $SG86368
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_settitle
	add	esp, 12					; 0000000cH
; Line 174
	cmp	DWORD PTR _midsession$[ebp], 0
	jne	SHORT $LN1@ser_setup_
; Line 181
	push	OFFSET $SG86370
	push	OFFSET $SG86371
	push	OFFSET $SG86372
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 184
	push	1
	call	_I
	add	esp, 4
	push	eax
	push	55					; 00000037H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG86373
	call	_P
	add	esp, 4
	push	eax
	push	40					; 00000028H
	push	108					; 0000006cH
	push	OFFSET $SG86374
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
$LN1@ser_setup_:
; Line 187
	push	OFFSET $SG86375
	push	OFFSET $SG86376
	push	OFFSET $SG86377
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ctrl_getset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 190
	push	-1
	call	_I
	add	esp, 4
	push	eax
	push	56					; 00000038H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG86378
	call	_P
	add	esp, 4
	push	eax
	push	40					; 00000028H
	push	115					; 00000073H
	push	OFFSET $SG86379
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
; Line 193
	push	-1
	call	_I
	add	esp, 4
	push	eax
	push	57					; 00000039H
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG86380
	call	_P
	add	esp, 4
	push	eax
	push	40					; 00000028H
	push	98					; 00000062H
	push	OFFSET $SG86381
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
; Line 199
	push	-2					; fffffffeH
	call	_I
	add	esp, 4
	push	eax
	push	58					; 0000003aH
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _conf_editbox_handler
	push	OFFSET $SG86382
	call	_P
	add	esp, 4
	push	eax
	push	40					; 00000028H
	push	116					; 00000074H
	push	OFFSET $SG86383
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ctrl_editbox
	add	esp, 32					; 00000020H
; Line 202
	mov	edx, DWORD PTR _parity_mask$[ebp]
	push	edx
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _serial_parity_handler
	push	OFFSET $SG86384
	call	_P
	add	esp, 4
	push	eax
	push	40					; 00000028H
	push	112					; 00000070H
	push	OFFSET $SG86385
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_ctrl_droplist
	add	esp, 28					; 0000001cH
; Line 205
	mov	ecx, DWORD PTR _flow_mask$[ebp]
	push	ecx
	call	_I
	add	esp, 4
	push	eax
	push	OFFSET _serial_flow_handler
	push	OFFSET $SG86386
	call	_P
	add	esp, 4
	push	eax
	push	40					; 00000028H
	push	102					; 00000066H
	push	OFFSET $SG86387
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_ctrl_droplist
	add	esp, 28					; 0000001cH
; Line 206
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ser_setup_config_box ENDP
_TEXT	ENDS
EXTRN	_dlg_listbox_getid:PROC
EXTRN	_dlg_listbox_index:PROC
EXTRN	_conf_set_int:PROC
EXTRN	_dlg_update_done:PROC
EXTRN	_dlg_listbox_select:PROC
EXTRN	_dlg_listbox_addwithid:PROC
EXTRN	_dlg_listbox_clear:PROC
EXTRN	_dlg_update_start:PROC
EXTRN	_conf_get_int:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$86287 = -24						; size = 4
_oldparity$86274 = -20					; size = 4
_conf$ = -16						; size = 4
_j$ = -12						; size = 4
_i$ = -8						; size = 4
_mask$ = -4						; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_serial_parity_handler PROC
; Line 21
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 32
	mov	eax, DWORD PTR _ctrl$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _mask$[ebp], ecx
; Line 34
	mov	edx, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], edx
; Line 36
	cmp	DWORD PTR _event$[ebp], 0
	jne	$LN15@serial_par
; Line 40
	push	59					; 0000003bH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	DWORD PTR _oldparity$86274[ebp], eax
; Line 42
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_update_start
	add	esp, 8
; Line 43
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_listbox_clear
	add	esp, 8
; Line 44
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN14@serial_par
$LN13@serial_par:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN14@serial_par:
	cmp	DWORD PTR _i$[ebp], 5
	jae	SHORT $LN12@serial_par
; Line 45
	mov	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	shl	eax, cl
	and	eax, DWORD PTR _mask$[ebp]
	je	SHORT $LN11@serial_par
; Line 47
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR ?parities@?1??serial_parity_handler@@9@9[ecx*8+4]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?parities@?1??serial_parity_handler@@9@9[eax*8]
	push	ecx
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_listbox_addwithid
	add	esp, 16					; 00000010H
$LN11@serial_par:
; Line 48
	jmp	SHORT $LN13@serial_par
$LN12@serial_par:
; Line 49
	mov	DWORD PTR _j$[ebp], 0
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR _i$[ebp], ecx
	jmp	SHORT $LN10@serial_par
$LN9@serial_par:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN10@serial_par:
	cmp	DWORD PTR _i$[ebp], 5
	jae	SHORT $LN8@serial_par
; Line 50
	mov	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	shl	eax, cl
	and	eax, DWORD PTR _mask$[ebp]
	je	SHORT $LN7@serial_par
; Line 51
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _oldparity$86274[ebp]
	cmp	edx, DWORD PTR ?parities@?1??serial_parity_handler@@9@9[ecx*8+4]
	jne	SHORT $LN6@serial_par
; Line 52
	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_listbox_select
	add	esp, 12					; 0000000cH
; Line 53
	jmp	SHORT $LN8@serial_par
$LN6@serial_par:
; Line 55
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN7@serial_par:
; Line 57
	jmp	SHORT $LN9@serial_par
$LN8@serial_par:
; Line 58
	cmp	DWORD PTR _i$[ebp], 5
	jne	SHORT $LN5@serial_par
; Line 59
	push	0
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_listbox_select
	add	esp, 12					; 0000000cH
; Line 60
	mov	DWORD PTR _oldparity$86274[ebp], 0
$LN5@serial_par:
; Line 62
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_update_done
	add	esp, 8
; Line 63
	mov	edx, DWORD PTR _oldparity$86274[ebp]
	push	edx
	push	59					; 0000003bH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN16@serial_par
$LN15@serial_par:
; Line 64
	cmp	DWORD PTR _event$[ebp], 3
	jne	SHORT $LN16@serial_par
; Line 65
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_listbox_index
	add	esp, 8
	mov	DWORD PTR _i$86287[ebp], eax
; Line 66
	cmp	DWORD PTR _i$86287[ebp], 0
	jge	SHORT $LN2@serial_par
; Line 67
	mov	DWORD PTR _i$86287[ebp], 0
; Line 68
	jmp	SHORT $LN1@serial_par
$LN2@serial_par:
; Line 69
	mov	eax, DWORD PTR _i$86287[ebp]
	push	eax
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_listbox_getid
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$86287[ebp], eax
$LN1@serial_par:
; Line 70
	mov	eax, DWORD PTR _i$86287[ebp]
	push	eax
	push	59					; 0000003bH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN16@serial_par:
; Line 72
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_serial_parity_handler ENDP
; Function compile flags: /Odtp /RTCsu
_i$86328 = -24						; size = 4
_oldflow$86315 = -20					; size = 4
_conf$ = -16						; size = 4
_j$ = -12						; size = 4
_i$ = -8						; size = 4
_mask$ = -4						; size = 4
_ctrl$ = 8						; size = 4
_dlg$ = 12						; size = 4
_data$ = 16						; size = 4
_event$ = 20						; size = 4
_serial_flow_handler PROC
; Line 76
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 86
	mov	eax, DWORD PTR _ctrl$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _mask$[ebp], ecx
; Line 88
	mov	edx, DWORD PTR _data$[ebp]
	mov	DWORD PTR _conf$[ebp], edx
; Line 90
	cmp	DWORD PTR _event$[ebp], 0
	jne	$LN15@serial_flo
; Line 94
	push	60					; 0000003cH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	mov	DWORD PTR _oldflow$86315[ebp], eax
; Line 96
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_update_start
	add	esp, 8
; Line 97
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_listbox_clear
	add	esp, 8
; Line 98
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN14@serial_flo
$LN13@serial_flo:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN14@serial_flo:
	cmp	DWORD PTR _i$[ebp], 4
	jae	SHORT $LN12@serial_flo
; Line 99
	mov	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	shl	eax, cl
	and	eax, DWORD PTR _mask$[ebp]
	je	SHORT $LN11@serial_flo
; Line 100
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR ?flows@?1??serial_flow_handler@@9@9[ecx*8+4]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?flows@?1??serial_flow_handler@@9@9[eax*8]
	push	ecx
	mov	edx, DWORD PTR _dlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctrl$[ebp]
	push	eax
	call	_dlg_listbox_addwithid
	add	esp, 16					; 00000010H
$LN11@serial_flo:
; Line 101
	jmp	SHORT $LN13@serial_flo
$LN12@serial_flo:
; Line 102
	mov	DWORD PTR _j$[ebp], 0
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR _i$[ebp], ecx
	jmp	SHORT $LN10@serial_flo
$LN9@serial_flo:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN10@serial_flo:
	cmp	DWORD PTR _i$[ebp], 4
	jae	SHORT $LN8@serial_flo
; Line 103
	mov	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	shl	eax, cl
	and	eax, DWORD PTR _mask$[ebp]
	je	SHORT $LN7@serial_flo
; Line 104
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _oldflow$86315[ebp]
	cmp	edx, DWORD PTR ?flows@?1??serial_flow_handler@@9@9[ecx*8+4]
	jne	SHORT $LN6@serial_flo
; Line 105
	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_listbox_select
	add	esp, 12					; 0000000cH
; Line 106
	jmp	SHORT $LN8@serial_flo
$LN6@serial_flo:
; Line 108
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN7@serial_flo:
; Line 110
	jmp	SHORT $LN9@serial_flo
$LN8@serial_flo:
; Line 111
	cmp	DWORD PTR _i$[ebp], 4
	jne	SHORT $LN5@serial_flo
; Line 112
	push	0
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_listbox_select
	add	esp, 12					; 0000000cH
; Line 113
	mov	DWORD PTR _oldflow$86315[ebp], 0
$LN5@serial_flo:
; Line 115
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctrl$[ebp]
	push	ecx
	call	_dlg_update_done
	add	esp, 8
; Line 116
	mov	edx, DWORD PTR _oldflow$86315[ebp]
	push	edx
	push	60					; 0000003cH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN16@serial_flo
$LN15@serial_flo:
; Line 117
	cmp	DWORD PTR _event$[ebp], 3
	jne	SHORT $LN16@serial_flo
; Line 118
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_listbox_index
	add	esp, 8
	mov	DWORD PTR _i$86328[ebp], eax
; Line 119
	cmp	DWORD PTR _i$86328[ebp], 0
	jge	SHORT $LN2@serial_flo
; Line 120
	mov	DWORD PTR _i$86328[ebp], 0
; Line 121
	jmp	SHORT $LN1@serial_flo
$LN2@serial_flo:
; Line 122
	mov	eax, DWORD PTR _i$86328[ebp]
	push	eax
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrl$[ebp]
	push	edx
	call	_dlg_listbox_getid
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$86328[ebp], eax
$LN1@serial_flo:
; Line 123
	mov	eax, DWORD PTR _i$86328[ebp]
	push	eax
	push	60					; 0000003cH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN16@serial_flo:
; Line 125
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_serial_flow_handler ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\Putty\cmdline.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_cmdline_tooltype
_BSS	SEGMENT
_cmdline_password DD 01H DUP (?)
?tried_once@?1??cmdline_get_passwd_input@@9@9 DD 01H DUP (?) ; `cmdline_get_passwd_input'::`2'::tried_once
_cmdline_tooltype DD 01H DUP (?)
$SG85744 DB	01H DUP (?)
	ALIGN	4

$SG85837 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
$SG85596 DB	'option "%s" not available in this tool', 00H
	ORG $+1
$SG85608 DB	'-load', 00H
	ORG $+2
$SG85615 DB	'-ssh', 00H
	ORG $+3
$SG85630 DB	'-telnet', 00H
$SG85645 DB	'-rlogin', 00H
$SG85660 DB	'-raw', 00H
	ORG $+3
$SG85675 DB	'-serial', 00H
$SG85690 DB	'-v', 00H
	ORG $+1
$SG85697 DB	'-l', 00H
	ORG $+1
$SG85712 DB	'-loghost', 00H
	ORG $+3
$SG85727 DB	'-hostkey', 00H
	ORG $+3
$SG85743 DB	'''%s'' is not a valid format for a manual host key speci'
	DB	'fication', 00H
	ORG $+1
$SG85747 DB	'-L', 00H
	ORG $+1
$SG85748 DB	'-R', 00H
	ORG $+1
$SG85749 DB	'-D', 00H
	ORG $+1
$SG85769 DB	'-D', 00H
	ORG $+1
$SG85776 DB	'-%c expects at least two colons in its argument', 00H
$SG85778 DB	'%c%.*s', 00H
	ORG $+1
$SG85780 DB	'L%s', 00H
$SG85781 DB	'D', 00H
	ORG $+2
$SG85783 DB	'-nc', 00H
$SG85800 DB	'-nc expects argument of form ''host:port''', 00H
	ORG $+3
$SG85802 DB	'%.*s', 00H
	ORG $+3
$SG85804 DB	'-m', 00H
	ORG $+1
$SG85826 DB	'r', 00H
	ORG $+2
$SG85828 DB	'unable to open command file "%s"', 00H
	ORG $+3
$SG85839 DB	'-P', 00H
	ORG $+1
$SG85854 DB	'-pw', 00H
$SG85869 DB	'the -pw option can only be used with the SSH protocol', 00H
	ORG $+2
$SG85873 DB	'-agent', 00H
	ORG $+1
$SG85874 DB	'-pagent', 00H
$SG85875 DB	'-pageant', 00H
	ORG $+3
$SG85891 DB	'-noagent', 00H
	ORG $+3
$SG85892 DB	'-nopagent', 00H
	ORG $+2
$SG85893 DB	'-nopageant', 00H
	ORG $+1
$SG85908 DB	'-A', 00H
	ORG $+1
$SG85923 DB	'-a', 00H
	ORG $+1
$SG85938 DB	'-X', 00H
	ORG $+1
$SG85953 DB	'-x', 00H
	ORG $+1
$SG85968 DB	'-t', 00H
	ORG $+1
$SG85983 DB	'-T', 00H
	ORG $+1
$SG85998 DB	'-N', 00H
	ORG $+1
$SG86013 DB	'-C', 00H
	ORG $+1
$SG86028 DB	'-1', 00H
	ORG $+1
$SG86043 DB	'-2', 00H
	ORG $+1
$SG86058 DB	'-i', 00H
	ORG $+1
$SG86075 DB	'-4', 00H
	ORG $+1
$SG86076 DB	'-ipv4', 00H
	ORG $+2
$SG86088 DB	'-6', 00H
	ORG $+1
$SG86089 DB	'-ipv6', 00H
	ORG $+2
$SG86100 DB	'-sercfg', 00H
$SG86116 DB	'the -sercfg option can only be used with the serial prot'
	DB	'ocol', 00H
	ORG $+3
$SG86142 DB	'Unrecognised suboption "-sercfg %c"', 00H
$SG86145 DB	'1.5', 00H
$SG86150 DB	'Unrecognised suboption "-sercfg %s"', 00H
_DATA	ENDS
PUBLIC	_cmdline_cleanup
EXTRN	_safefree:PROC
EXTRN	_smemclr:PROC
EXTRN	_strlen:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
_BSS	SEGMENT
	ALIGN	4

_saves	DB	018H DUP (?)
_BSS	ENDS
;	COMDAT rtc$TMZ
; File c:\workspace\putty\cmdline.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_pri$ = -4						; size = 4
_cmdline_cleanup PROC
; Line 62
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 65
	cmp	DWORD PTR _cmdline_password, 0
	je	SHORT $LN4@cmdline_cl
; Line 66
	mov	eax, DWORD PTR _cmdline_password
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _cmdline_password
	push	ecx
	call	_smemclr
	add	esp, 8
; Line 67
	mov	edx, DWORD PTR _cmdline_password
	push	edx
	call	_safefree
	add	esp, 4
; Line 68
	mov	DWORD PTR _cmdline_password, 0
$LN4@cmdline_cl:
; Line 71
	mov	DWORD PTR _pri$[ebp], 0
	jmp	SHORT $LN3@cmdline_cl
$LN2@cmdline_cl:
	mov	eax, DWORD PTR _pri$[ebp]
	add	eax, 1
	mov	DWORD PTR _pri$[ebp], eax
$LN3@cmdline_cl:
	cmp	DWORD PTR _pri$[ebp], 2
	jge	SHORT $LN5@cmdline_cl
; Line 72
	mov	ecx, DWORD PTR _pri$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _saves[ecx]
	push	edx
	call	_safefree
	add	esp, 4
; Line 73
	mov	eax, DWORD PTR _pri$[ebp]
	imul	eax, 12					; 0000000cH
	mov	DWORD PTR _saves[eax], 0
; Line 74
	mov	ecx, DWORD PTR _pri$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	DWORD PTR _saves[ecx+8], 0
; Line 75
	mov	edx, DWORD PTR _pri$[ebp]
	imul	edx, 12					; 0000000cH
	mov	DWORD PTR _saves[edx+4], 0
; Line 76
	jmp	SHORT $LN2@cmdline_cl
$LN5@cmdline_cl:
; Line 77
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_cmdline_cleanup ENDP
_TEXT	ENDS
PUBLIC	_cmdline_get_passwd_input
EXTRN	_prompt_set_result:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_p$ = 8							; size = 4
_in$ = 12						; size = 4
_inlen$ = 16						; size = 4
_cmdline_get_passwd_input PROC
; Line 88
	push	ebp
	mov	ebp, esp
; Line 97
	cmp	DWORD PTR _cmdline_password, 0
	je	SHORT $LN2@cmdline_ge
	cmp	DWORD PTR _in$[ebp], 0
	jne	SHORT $LN2@cmdline_ge
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+20], 1
	jne	SHORT $LN2@cmdline_ge
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR [edx]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@cmdline_ge
$LN2@cmdline_ge:
; Line 98
	or	eax, -1
	jmp	SHORT $LN4@cmdline_ge
$LN3@cmdline_ge:
; Line 105
	cmp	DWORD PTR ?tried_once@?1??cmdline_get_passwd_input@@9@9, 0
	je	SHORT $LN1@cmdline_ge
; Line 106
	xor	eax, eax
	jmp	SHORT $LN4@cmdline_ge
$LN1@cmdline_ge:
; Line 108
	mov	ecx, DWORD PTR _cmdline_password
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_prompt_set_result
	add	esp, 8
; Line 109
	mov	edx, DWORD PTR _cmdline_password
	push	edx
	call	_strlen
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _cmdline_password
	push	eax
	call	_smemclr
	add	esp, 8
; Line 110
	mov	ecx, DWORD PTR _cmdline_password
	push	ecx
	call	_safefree
	add	esp, 4
; Line 111
	mov	DWORD PTR _cmdline_password, 0
; Line 112
	mov	DWORD PTR ?tried_once@?1??cmdline_get_passwd_input@@9@9, 1
; Line 113
	mov	eax, 1
$LN4@cmdline_ge:
; Line 114
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_cmdline_get_passwd_input ENDP
_TEXT	ENDS
PUBLIC	_cmdline_process_param
EXTRN	_strncmp:PROC
EXTRN	_strchr:PROC
EXTRN	_filename_free:PROC
EXTRN	_conf_set_filename:PROC
EXTRN	_filename_from_str:PROC
EXTRN	_conf_get_int:PROC
EXTRN	_fclose:PROC
EXTRN	_saferealloc:PROC
EXTRN	_fgetc:PROC
EXTRN	_fopen:PROC
EXTRN	_atoi:PROC
EXTRN	_dupprintf:PROC
EXTRN	_host_strchr:PROC
EXTRN	_conf_set_str_str:PROC
EXTRN	_cmdline_error:PROC
EXTRN	_validate_manual_hostkey:PROC
EXTRN	_flags:DWORD
EXTRN	_conf_set_str:PROC
EXTRN	_conf_get_str:PROC
EXTRN	_conf_set_int:PROC
EXTRN	_default_port:DWORD
EXTRN	_default_protocol:DWORD
EXTRN	_cmdline_session_name:DWORD
EXTRN	_dupstr:PROC
EXTRN	_loaded_session:DWORD
EXTRN	_do_defaults:PROC
EXTRN	_strcmp:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv891 = -96						; size = 4
_serspeed$86147 = -92					; size = 4
_end$86122 = -88					; size = 4
_skip$86121 = -84					; size = 4
_length$86120 = -80					; size = 4
_nextitem$86101 = -76					; size = 4
_fn$86059 = -72						; size = 4
_d$85811 = -68						; size = 4
_c$85810 = -64						; size = 4
_fp$85809 = -60						; size = 4
_cmdsize$85808 = -56					; size = 4
_cmdlen$85807 = -52					; size = 4
_command$85806 = -48					; size = 4
_filename$85805 = -44					; size = 4
_portp$85785 = -40					; size = 4
_host$85784 = -36					; size = 4
_qqq$85773 = -32					; size = 4
_val$85754 = -28					; size = 4
_key$85753 = -24					; size = 4
_qq$85752 = -20						; size = 4
_q$85751 = -16						; size = 4
_type$85750 = -9					; size = 1
_dup$85728 = -8						; size = 4
_ret$ = -4						; size = 4
_p$ = 8							; size = 4
_value$ = 12						; size = 4
_need_save$ = 16					; size = 4
_conf$ = 20						; size = 4
_cmdline_process_param PROC
; Line 163
	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	edi
	lea	edi, DWORD PTR [ebp-96]
	mov	ecx, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 164
	mov	DWORD PTR _ret$[ebp], 0
; Line 166
	push	OFFSET $SG85608
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN456@cmdline_pr
$LN455@cmdline_pr:
; Line 167
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN452@cmdline_pr
	cmp	DWORD PTR _value$[ebp], 0
	jne	SHORT $LN452@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN452@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 2
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN454@cmdline_pr
	mov	eax, 2
	jmp	$LN457@cmdline_pr
$LN454@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN455@cmdline_pr
; Line 170
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	_do_defaults
	add	esp, 8
; Line 171
	mov	DWORD PTR _loaded_session, 1
; Line 172
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	call	_dupstr
	add	esp, 4
	mov	DWORD PTR _cmdline_session_name, eax
; Line 173
	mov	eax, 2
	jmp	$LN457@cmdline_pr
$LN456@cmdline_pr:
; Line 175
	push	OFFSET $SG85615
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN450@cmdline_pr
$LN449@cmdline_pr:
; Line 176
	xor	ecx, ecx
	je	SHORT $LN446@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN446@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 1
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN448@cmdline_pr
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN448@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN449@cmdline_pr
$LN444@cmdline_pr:
; Line 177
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	3
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN443@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN443@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN444@cmdline_pr
$LN440@cmdline_pr:
; Line 178
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN439@cmdline_pr
	push	0
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN439@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN440@cmdline_pr
; Line 179
	mov	DWORD PTR _default_protocol, 3
; Line 180
	mov	DWORD PTR _default_port, 22		; 00000016H
; Line 181
	mov	edx, DWORD PTR _default_protocol
	push	edx
	push	2
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 182
	mov	ecx, DWORD PTR _default_port
	push	ecx
	push	1
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 183
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN450@cmdline_pr:
; Line 185
	push	OFFSET $SG85630
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN436@cmdline_pr
$LN435@cmdline_pr:
; Line 186
	xor	ecx, ecx
	je	SHORT $LN432@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN432@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 1
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN434@cmdline_pr
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN434@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN435@cmdline_pr
$LN430@cmdline_pr:
; Line 187
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	3
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN429@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN429@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN430@cmdline_pr
$LN426@cmdline_pr:
; Line 188
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN425@cmdline_pr
	push	0
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN425@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN426@cmdline_pr
; Line 189
	mov	DWORD PTR _default_protocol, 1
; Line 190
	mov	DWORD PTR _default_port, 23		; 00000017H
; Line 191
	mov	edx, DWORD PTR _default_protocol
	push	edx
	push	2
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 192
	mov	ecx, DWORD PTR _default_port
	push	ecx
	push	1
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 193
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN436@cmdline_pr:
; Line 195
	push	OFFSET $SG85645
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN422@cmdline_pr
$LN421@cmdline_pr:
; Line 196
	xor	ecx, ecx
	je	SHORT $LN418@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN418@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 1
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN420@cmdline_pr
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN420@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN421@cmdline_pr
$LN416@cmdline_pr:
; Line 197
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	3
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN415@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN415@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN416@cmdline_pr
$LN412@cmdline_pr:
; Line 198
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN411@cmdline_pr
	push	0
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN411@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN412@cmdline_pr
; Line 199
	mov	DWORD PTR _default_protocol, 2
; Line 200
	mov	DWORD PTR _default_port, 513		; 00000201H
; Line 201
	mov	edx, DWORD PTR _default_protocol
	push	edx
	push	2
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 202
	mov	ecx, DWORD PTR _default_port
	push	ecx
	push	1
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 203
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN422@cmdline_pr:
; Line 205
	push	OFFSET $SG85660
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN408@cmdline_pr
$LN407@cmdline_pr:
; Line 206
	xor	ecx, ecx
	je	SHORT $LN404@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN404@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 1
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN406@cmdline_pr
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN406@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN407@cmdline_pr
$LN402@cmdline_pr:
; Line 207
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	3
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN401@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN401@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN402@cmdline_pr
$LN398@cmdline_pr:
; Line 208
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN397@cmdline_pr
	push	0
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN397@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN398@cmdline_pr
; Line 209
	mov	DWORD PTR _default_protocol, 0
; Line 210
	mov	edx, DWORD PTR _default_protocol
	push	edx
	push	2
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN408@cmdline_pr:
; Line 212
	push	OFFSET $SG85675
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN394@cmdline_pr
$LN393@cmdline_pr:
; Line 213
	xor	edx, edx
	je	SHORT $LN390@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN390@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 1
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN392@cmdline_pr
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN392@cmdline_pr:
	xor	eax, eax
	jne	SHORT $LN393@cmdline_pr
$LN388@cmdline_pr:
; Line 215
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	push	3
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN387@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN387@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN388@cmdline_pr
$LN384@cmdline_pr:
; Line 216
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN383@cmdline_pr
	push	0
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN383@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN384@cmdline_pr
; Line 217
	mov	DWORD PTR _default_protocol, 4
; Line 218
	mov	eax, DWORD PTR _default_protocol
	push	eax
	push	2
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 221
	push	0
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_get_str
	add	esp, 8
	push	eax
	push	55					; 00000037H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_str
	add	esp, 12					; 0000000cH
$LN394@cmdline_pr:
; Line 223
	push	OFFSET $SG85690
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN380@cmdline_pr
$LN379@cmdline_pr:
; Line 224
	xor	edx, edx
	je	SHORT $LN376@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN376@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 1
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN378@cmdline_pr
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN378@cmdline_pr:
	xor	eax, eax
	jne	SHORT $LN379@cmdline_pr
; Line 225
	mov	ecx, DWORD PTR _flags
	or	ecx, 1
	mov	DWORD PTR _flags, ecx
$LN380@cmdline_pr:
; Line 227
	push	OFFSET $SG85697
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN374@cmdline_pr
$LN373@cmdline_pr:
; Line 228
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN370@cmdline_pr
	cmp	DWORD PTR _value$[ebp], 0
	jne	SHORT $LN370@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN370@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 2
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN372@cmdline_pr
	mov	eax, 2
	jmp	$LN457@cmdline_pr
$LN372@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN373@cmdline_pr
$LN368@cmdline_pr:
; Line 229
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	push	2
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN367@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN367@cmdline_pr:
	xor	eax, eax
	jne	SHORT $LN368@cmdline_pr
$LN364@cmdline_pr:
; Line 230
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN363@cmdline_pr
	push	0
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN363@cmdline_pr:
	xor	eax, eax
	jne	SHORT $LN364@cmdline_pr
; Line 231
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	push	50					; 00000032H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_str
	add	esp, 12					; 0000000cH
$LN374@cmdline_pr:
; Line 233
	push	OFFSET $SG85712
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN360@cmdline_pr
$LN359@cmdline_pr:
; Line 234
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN356@cmdline_pr
	cmp	DWORD PTR _value$[ebp], 0
	jne	SHORT $LN356@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN356@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 2
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN358@cmdline_pr
	mov	eax, 2
	jmp	$LN457@cmdline_pr
$LN358@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN359@cmdline_pr
$LN354@cmdline_pr:
; Line 235
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	2
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN353@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN353@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN354@cmdline_pr
$LN350@cmdline_pr:
; Line 236
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN349@cmdline_pr
	push	0
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN349@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN350@cmdline_pr
; Line 237
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	push	9
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_str
	add	esp, 12					; 0000000cH
$LN360@cmdline_pr:
; Line 239
	push	OFFSET $SG85727
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN346@cmdline_pr
$LN345@cmdline_pr:
; Line 241
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN342@cmdline_pr
	cmp	DWORD PTR _value$[ebp], 0
	jne	SHORT $LN342@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN342@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 2
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN344@cmdline_pr
	mov	eax, 2
	jmp	$LN457@cmdline_pr
$LN344@cmdline_pr:
	xor	eax, eax
	jne	SHORT $LN345@cmdline_pr
$LN340@cmdline_pr:
; Line 242
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	push	2
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN339@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN339@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN340@cmdline_pr
$LN336@cmdline_pr:
; Line 243
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN335@cmdline_pr
	push	0
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN335@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN336@cmdline_pr
; Line 244
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	_dupstr
	add	esp, 4
	mov	DWORD PTR _dup$85728[ebp], eax
; Line 245
	mov	ecx, DWORD PTR _dup$85728[ebp]
	push	ecx
	call	_validate_manual_hostkey
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN332@cmdline_pr
; Line 247
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	push	OFFSET $SG85743
	call	_cmdline_error
	add	esp, 8
; Line 248
	mov	eax, DWORD PTR _dup$85728[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 249
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN332@cmdline_pr:
; Line 251
	push	OFFSET $SG85744
	mov	ecx, DWORD PTR _dup$85728[ebp]
	push	ecx
	push	167					; 000000a7H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_str_str
	add	esp, 16					; 00000010H
; Line 252
	mov	eax, DWORD PTR _dup$85728[ebp]
	push	eax
	call	_safefree
	add	esp, 4
$LN346@cmdline_pr:
; Line 254
	push	OFFSET $SG85747
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN329@cmdline_pr
	push	OFFSET $SG85748
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN329@cmdline_pr
	push	OFFSET $SG85749
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN331@cmdline_pr
$LN329@cmdline_pr:
; Line 256
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN326@cmdline_pr
	cmp	DWORD PTR _value$[ebp], 0
	jne	SHORT $LN326@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN326@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 2
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN328@cmdline_pr
	mov	eax, 2
	jmp	$LN457@cmdline_pr
$LN328@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN329@cmdline_pr
$LN324@cmdline_pr:
; Line 257
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	3
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN323@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN323@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN324@cmdline_pr
$LN320@cmdline_pr:
; Line 258
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN319@cmdline_pr
	push	0
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN319@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN320@cmdline_pr
; Line 259
	push	OFFSET $SG85769
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	$LN316@cmdline_pr
; Line 277
	mov	eax, DWORD PTR _p$[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR _type$85750[ebp], cl
; Line 279
	push	58					; 0000003aH
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	call	_host_strchr
	add	esp, 8
	mov	DWORD PTR _qq$85752[ebp], eax
	mov	eax, DWORD PTR _qq$85752[ebp]
	mov	DWORD PTR _q$85751[ebp], eax
$LN315@cmdline_pr:
; Line 280
	cmp	DWORD PTR _qq$85752[ebp], 0
	je	SHORT $LN314@cmdline_pr
; Line 281
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _qq$85752[ebp]
	add	ecx, 1
	push	ecx
	call	_host_strchr
	add	esp, 8
	mov	DWORD PTR _qqq$85773[ebp], eax
; Line 282
	cmp	DWORD PTR _qqq$85773[ebp], 0
	je	SHORT $LN313@cmdline_pr
; Line 283
	mov	edx, DWORD PTR _qq$85752[ebp]
	mov	DWORD PTR _q$85751[ebp], edx
$LN313@cmdline_pr:
; Line 284
	mov	eax, DWORD PTR _qqq$85773[ebp]
	mov	DWORD PTR _qq$85752[ebp], eax
; Line 285
	jmp	SHORT $LN315@cmdline_pr
$LN314@cmdline_pr:
; Line 287
	cmp	DWORD PTR _q$85751[ebp], 0
	jne	SHORT $LN312@cmdline_pr
; Line 289
	movsx	ecx, BYTE PTR _type$85750[ebp]
	push	ecx
	push	OFFSET $SG85776
	call	_cmdline_error
	add	esp, 8
; Line 290
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN312@cmdline_pr:
; Line 293
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _q$85751[ebp]
	sub	eax, DWORD PTR _value$[ebp]
	push	eax
	movsx	ecx, BYTE PTR _type$85750[ebp]
	push	ecx
	push	OFFSET $SG85778
	call	_dupprintf
	add	esp, 16					; 00000010H
	mov	DWORD PTR _key$85753[ebp], eax
; Line 294
	mov	edx, DWORD PTR _q$85751[ebp]
	add	edx, 1
	push	edx
	call	_dupstr
	add	esp, 4
	mov	DWORD PTR _val$85754[ebp], eax
; Line 295
	jmp	SHORT $LN311@cmdline_pr
$LN316@cmdline_pr:
; Line 305
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	push	OFFSET $SG85780
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _key$85753[ebp], eax
; Line 306
	push	OFFSET $SG85781
	call	_dupstr
	add	esp, 4
	mov	DWORD PTR _val$85754[ebp], eax
$LN311@cmdline_pr:
; Line 308
	mov	ecx, DWORD PTR _val$85754[ebp]
	push	ecx
	mov	edx, DWORD PTR _key$85753[ebp]
	push	edx
	push	150					; 00000096H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_str_str
	add	esp, 16					; 00000010H
; Line 309
	mov	ecx, DWORD PTR _key$85753[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 310
	mov	edx, DWORD PTR _val$85754[ebp]
	push	edx
	call	_safefree
	add	esp, 4
$LN331@cmdline_pr:
; Line 312
	push	OFFSET $SG85783
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN310@cmdline_pr
$LN309@cmdline_pr:
; Line 315
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN306@cmdline_pr
	cmp	DWORD PTR _value$[ebp], 0
	jne	SHORT $LN306@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN306@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 2
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN308@cmdline_pr
	mov	eax, 2
	jmp	$LN457@cmdline_pr
$LN308@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN309@cmdline_pr
$LN304@cmdline_pr:
; Line 316
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	3
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN303@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN303@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN304@cmdline_pr
$LN300@cmdline_pr:
; Line 317
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN299@cmdline_pr
	push	0
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN299@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN300@cmdline_pr
; Line 319
	push	58					; 0000003aH
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	call	_host_strchr
	add	esp, 8
	mov	DWORD PTR _portp$85785[ebp], eax
; Line 320
	cmp	DWORD PTR _portp$85785[ebp], 0
	jne	SHORT $LN296@cmdline_pr
; Line 321
	push	OFFSET $SG85800
	call	_cmdline_error
	add	esp, 4
; Line 322
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN296@cmdline_pr:
; Line 325
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _portp$85785[ebp]
	sub	ecx, DWORD PTR _value$[ebp]
	push	ecx
	push	OFFSET $SG85802
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _host$85784[ebp], eax
; Line 326
	mov	edx, DWORD PTR _host$85784[ebp]
	push	edx
	push	44					; 0000002cH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_str
	add	esp, 12					; 0000000cH
; Line 327
	mov	ecx, DWORD PTR _portp$85785[ebp]
	add	ecx, 1
	push	ecx
	call	_atoi
	add	esp, 4
	push	eax
	push	45					; 0000002dH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 328
	mov	eax, DWORD PTR _host$85784[ebp]
	push	eax
	call	_safefree
	add	esp, 4
$LN310@cmdline_pr:
; Line 330
	push	OFFSET $SG85804
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN295@cmdline_pr
$LN294@cmdline_pr:
; Line 336
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN291@cmdline_pr
	cmp	DWORD PTR _value$[ebp], 0
	jne	SHORT $LN291@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN291@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 2
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN293@cmdline_pr
	mov	eax, 2
	jmp	$LN457@cmdline_pr
$LN293@cmdline_pr:
	xor	eax, eax
	jne	SHORT $LN294@cmdline_pr
$LN289@cmdline_pr:
; Line 337
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	push	3
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN288@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN288@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN289@cmdline_pr
$LN285@cmdline_pr:
; Line 338
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN284@cmdline_pr
	push	0
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN284@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN285@cmdline_pr
; Line 340
	mov	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _filename$85805[ebp], eax
; Line 342
	mov	DWORD PTR _cmdsize$85808[ebp], 0
	mov	ecx, DWORD PTR _cmdsize$85808[ebp]
	mov	DWORD PTR _cmdlen$85807[ebp], ecx
; Line 343
	mov	DWORD PTR _command$85806[ebp], 0
; Line 344
	push	OFFSET $SG85826
	mov	edx, DWORD PTR _filename$85805[ebp]
	push	edx
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _fp$85809[ebp], eax
; Line 345
	cmp	DWORD PTR _fp$85809[ebp], 0
	jne	SHORT $LN280@cmdline_pr
; Line 346
	mov	eax, DWORD PTR _filename$85805[ebp]
	push	eax
	push	OFFSET $SG85828
	call	_cmdline_error
	add	esp, 8
; Line 347
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN280@cmdline_pr:
; Line 350
	mov	ecx, DWORD PTR _fp$85809[ebp]
	push	ecx
	call	_fgetc
	add	esp, 4
	mov	DWORD PTR _c$85810[ebp], eax
; Line 351
	mov	edx, DWORD PTR _c$85810[ebp]
	mov	DWORD PTR _d$85811[ebp], edx
; Line 352
	cmp	DWORD PTR _c$85810[ebp], -1
	jne	SHORT $LN277@cmdline_pr
; Line 353
	mov	DWORD PTR _d$85811[ebp], 0
$LN277@cmdline_pr:
; Line 354
	mov	eax, DWORD PTR _cmdlen$85807[ebp]
	cmp	eax, DWORD PTR _cmdsize$85808[ebp]
	jl	SHORT $LN276@cmdline_pr
; Line 355
	mov	ecx, DWORD PTR _cmdlen$85807[ebp]
	add	ecx, 512				; 00000200H
	mov	DWORD PTR _cmdsize$85808[ebp], ecx
; Line 356
	push	1
	mov	edx, DWORD PTR _cmdsize$85808[ebp]
	push	edx
	mov	eax, DWORD PTR _command$85806[ebp]
	push	eax
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _command$85806[ebp], eax
$LN276@cmdline_pr:
; Line 358
	mov	ecx, DWORD PTR _command$85806[ebp]
	add	ecx, DWORD PTR _cmdlen$85807[ebp]
	mov	dl, BYTE PTR _d$85811[ebp]
	mov	BYTE PTR [ecx], dl
	mov	eax, DWORD PTR _cmdlen$85807[ebp]
	add	eax, 1
	mov	DWORD PTR _cmdlen$85807[ebp], eax
; Line 359
	cmp	DWORD PTR _c$85810[ebp], -1
	jne	SHORT $LN280@cmdline_pr
; Line 360
	mov	ecx, DWORD PTR _fp$85809[ebp]
	push	ecx
	call	_fclose
	add	esp, 4
; Line 361
	mov	edx, DWORD PTR _command$85806[ebp]
	push	edx
	push	19					; 00000013H
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_str
	add	esp, 12					; 0000000cH
; Line 362
	push	OFFSET $SG85837
	push	20					; 00000014H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_str
	add	esp, 12					; 0000000cH
; Line 363
	push	1
	push	21					; 00000015H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 364
	mov	eax, DWORD PTR _command$85806[ebp]
	push	eax
	call	_safefree
	add	esp, 4
$LN295@cmdline_pr:
; Line 366
	push	OFFSET $SG85839
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN275@cmdline_pr
$LN274@cmdline_pr:
; Line 367
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN271@cmdline_pr
	cmp	DWORD PTR _value$[ebp], 0
	jne	SHORT $LN271@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN271@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 2
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN273@cmdline_pr
	mov	eax, 2
	jmp	$LN457@cmdline_pr
$LN273@cmdline_pr:
	xor	eax, eax
	jne	SHORT $LN274@cmdline_pr
$LN269@cmdline_pr:
; Line 368
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	push	2
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN268@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN268@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN269@cmdline_pr
$LN265@cmdline_pr:
; Line 369
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN264@cmdline_pr
	push	1
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN264@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN265@cmdline_pr
; Line 370
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	_atoi
	add	esp, 4
	push	eax
	push	1
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN275@cmdline_pr:
; Line 372
	push	OFFSET $SG85854
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN261@cmdline_pr
$LN260@cmdline_pr:
; Line 373
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN257@cmdline_pr
	cmp	DWORD PTR _value$[ebp], 0
	jne	SHORT $LN257@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN257@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 2
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN259@cmdline_pr
	mov	eax, 2
	jmp	$LN457@cmdline_pr
$LN259@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN260@cmdline_pr
$LN255@cmdline_pr:
; Line 374
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	push	2
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN254@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN254@cmdline_pr:
	xor	eax, eax
	jne	SHORT $LN255@cmdline_pr
$LN251@cmdline_pr:
; Line 375
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN250@cmdline_pr
	push	1
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN250@cmdline_pr:
	xor	eax, eax
	jne	SHORT $LN251@cmdline_pr
; Line 378
	push	2
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_get_int
	add	esp, 8
	cmp	eax, 3
	je	SHORT $LN247@cmdline_pr
; Line 380
	push	OFFSET $SG85869
	call	_cmdline_error
	add	esp, 4
; Line 381
	jmp	SHORT $LN261@cmdline_pr
$LN247@cmdline_pr:
; Line 382
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	call	_dupstr
	add	esp, 4
	mov	DWORD PTR _cmdline_password, eax
; Line 386
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	_smemclr
	add	esp, 8
$LN261@cmdline_pr:
; Line 391
	push	OFFSET $SG85873
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN243@cmdline_pr
	push	OFFSET $SG85874
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN243@cmdline_pr
	push	OFFSET $SG85875
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN245@cmdline_pr
$LN243@cmdline_pr:
; Line 392
	xor	edx, edx
	je	SHORT $LN240@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN240@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 1
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN242@cmdline_pr
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN242@cmdline_pr:
	xor	eax, eax
	jne	SHORT $LN243@cmdline_pr
$LN238@cmdline_pr:
; Line 393
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	push	2
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN237@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN237@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN238@cmdline_pr
$LN234@cmdline_pr:
; Line 394
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN233@cmdline_pr
	push	0
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN233@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN234@cmdline_pr
; Line 395
	push	1
	push	26					; 0000001aH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN245@cmdline_pr:
; Line 398
	push	OFFSET $SG85891
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN228@cmdline_pr
	push	OFFSET $SG85892
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN228@cmdline_pr
	push	OFFSET $SG85893
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN230@cmdline_pr
$LN228@cmdline_pr:
; Line 399
	xor	ecx, ecx
	je	SHORT $LN225@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN225@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 1
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN227@cmdline_pr
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN227@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN228@cmdline_pr
$LN223@cmdline_pr:
; Line 400
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	2
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN222@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN222@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN223@cmdline_pr
$LN219@cmdline_pr:
; Line 401
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN218@cmdline_pr
	push	0
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN218@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN219@cmdline_pr
; Line 402
	push	0
	push	26					; 0000001aH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN230@cmdline_pr:
; Line 405
	push	OFFSET $SG85908
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN215@cmdline_pr
$LN214@cmdline_pr:
; Line 406
	xor	ecx, ecx
	je	SHORT $LN211@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN211@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 1
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN213@cmdline_pr
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN213@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN214@cmdline_pr
$LN209@cmdline_pr:
; Line 407
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	3
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN208@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN208@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN209@cmdline_pr
$LN205@cmdline_pr:
; Line 408
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN204@cmdline_pr
	push	0
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN204@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN205@cmdline_pr
; Line 409
	push	1
	push	27					; 0000001bH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN215@cmdline_pr:
; Line 411
	push	OFFSET $SG85923
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN201@cmdline_pr
$LN200@cmdline_pr:
; Line 412
	xor	ecx, ecx
	je	SHORT $LN197@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN197@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 1
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN199@cmdline_pr
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN199@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN200@cmdline_pr
$LN195@cmdline_pr:
; Line 413
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	3
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN194@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN194@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN195@cmdline_pr
$LN191@cmdline_pr:
; Line 414
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN190@cmdline_pr
	push	0
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN190@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN191@cmdline_pr
; Line 415
	push	0
	push	27					; 0000001bH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN201@cmdline_pr:
; Line 418
	push	OFFSET $SG85938
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN187@cmdline_pr
$LN186@cmdline_pr:
; Line 419
	xor	ecx, ecx
	je	SHORT $LN183@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN183@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 1
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN185@cmdline_pr
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN185@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN186@cmdline_pr
$LN181@cmdline_pr:
; Line 420
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	3
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN180@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN180@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN181@cmdline_pr
$LN177@cmdline_pr:
; Line 421
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN176@cmdline_pr
	push	0
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN176@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN177@cmdline_pr
; Line 422
	push	1
	push	144					; 00000090H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN187@cmdline_pr:
; Line 424
	push	OFFSET $SG85953
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN173@cmdline_pr
$LN172@cmdline_pr:
; Line 425
	xor	ecx, ecx
	je	SHORT $LN169@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN169@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 1
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN171@cmdline_pr
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN171@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN172@cmdline_pr
$LN167@cmdline_pr:
; Line 426
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	3
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN166@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN166@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN167@cmdline_pr
$LN163@cmdline_pr:
; Line 427
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN162@cmdline_pr
	push	0
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN162@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN163@cmdline_pr
; Line 428
	push	0
	push	144					; 00000090H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN173@cmdline_pr:
; Line 431
	push	OFFSET $SG85968
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN159@cmdline_pr
$LN158@cmdline_pr:
; Line 432
	xor	ecx, ecx
	je	SHORT $LN155@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN155@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 1
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN157@cmdline_pr
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN157@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN158@cmdline_pr
$LN153@cmdline_pr:
; Line 433
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	3
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN152@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN152@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN153@cmdline_pr
$LN149@cmdline_pr:
; Line 434
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN148@cmdline_pr
	push	1
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN148@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN149@cmdline_pr
; Line 435
	push	0
	push	21					; 00000015H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN159@cmdline_pr:
; Line 437
	push	OFFSET $SG85983
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN145@cmdline_pr
$LN144@cmdline_pr:
; Line 438
	xor	ecx, ecx
	je	SHORT $LN141@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN141@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 1
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN143@cmdline_pr
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN143@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN144@cmdline_pr
$LN139@cmdline_pr:
; Line 439
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	3
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN138@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN138@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN139@cmdline_pr
$LN135@cmdline_pr:
; Line 440
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN134@cmdline_pr
	push	1
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN134@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN135@cmdline_pr
; Line 441
	push	1
	push	21					; 00000015H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN145@cmdline_pr:
; Line 444
	push	OFFSET $SG85998
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN131@cmdline_pr
$LN130@cmdline_pr:
; Line 445
	xor	ecx, ecx
	je	SHORT $LN127@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN127@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 1
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN129@cmdline_pr
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN129@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN130@cmdline_pr
$LN125@cmdline_pr:
; Line 446
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	3
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN124@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN124@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN125@cmdline_pr
$LN121@cmdline_pr:
; Line 447
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN120@cmdline_pr
	push	0
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN120@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN121@cmdline_pr
; Line 448
	push	1
	push	43					; 0000002bH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN131@cmdline_pr:
; Line 451
	push	OFFSET $SG86013
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN117@cmdline_pr
$LN116@cmdline_pr:
; Line 452
	xor	ecx, ecx
	je	SHORT $LN113@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN113@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 1
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN115@cmdline_pr
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN115@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN116@cmdline_pr
$LN111@cmdline_pr:
; Line 453
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	2
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN110@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN110@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN111@cmdline_pr
$LN107@cmdline_pr:
; Line 454
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN106@cmdline_pr
	push	0
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN106@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN107@cmdline_pr
; Line 455
	push	1
	push	22					; 00000016H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN117@cmdline_pr:
; Line 458
	push	OFFSET $SG86028
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN103@cmdline_pr
$LN102@cmdline_pr:
; Line 459
	xor	ecx, ecx
	je	SHORT $LN99@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN99@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 1
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN101@cmdline_pr
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN101@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN102@cmdline_pr
$LN97@cmdline_pr:
; Line 460
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	2
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN96@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN96@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN97@cmdline_pr
$LN93@cmdline_pr:
; Line 461
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN92@cmdline_pr
	push	0
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN92@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN93@cmdline_pr
; Line 462
	push	0
	push	31					; 0000001fH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN103@cmdline_pr:
; Line 464
	push	OFFSET $SG86043
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN89@cmdline_pr
$LN88@cmdline_pr:
; Line 465
	xor	ecx, ecx
	je	SHORT $LN85@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN85@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 1
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN87@cmdline_pr
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN87@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN88@cmdline_pr
$LN83@cmdline_pr:
; Line 466
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	2
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN82@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN82@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN83@cmdline_pr
$LN79@cmdline_pr:
; Line 467
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN78@cmdline_pr
	push	0
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN78@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN79@cmdline_pr
; Line 468
	push	3
	push	31					; 0000001fH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN89@cmdline_pr:
; Line 471
	push	OFFSET $SG86058
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN75@cmdline_pr
$LN74@cmdline_pr:
; Line 473
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN71@cmdline_pr
	cmp	DWORD PTR _value$[ebp], 0
	jne	SHORT $LN71@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN71@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 2
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN73@cmdline_pr
	mov	eax, 2
	jmp	$LN457@cmdline_pr
$LN73@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN74@cmdline_pr
$LN69@cmdline_pr:
; Line 474
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	2
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN68@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN68@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN69@cmdline_pr
$LN65@cmdline_pr:
; Line 475
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN64@cmdline_pr
	push	0
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN64@cmdline_pr:
	xor	ecx, ecx
	jne	SHORT $LN65@cmdline_pr
; Line 476
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	call	_filename_from_str
	add	esp, 4
	mov	DWORD PTR _fn$86059[ebp], eax
; Line 477
	mov	eax, DWORD PTR _fn$86059[ebp]
	push	eax
	push	30					; 0000001eH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_filename
	add	esp, 12					; 0000000cH
; Line 478
	mov	edx, DWORD PTR _fn$86059[ebp]
	push	edx
	call	_filename_free
	add	esp, 4
$LN75@cmdline_pr:
; Line 481
	push	OFFSET $SG86075
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN59@cmdline_pr
	push	OFFSET $SG86076
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN61@cmdline_pr
$LN59@cmdline_pr:
; Line 482
	xor	edx, edx
	je	SHORT $LN56@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN56@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 1
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN58@cmdline_pr
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN58@cmdline_pr:
	xor	eax, eax
	jne	SHORT $LN59@cmdline_pr
$LN54@cmdline_pr:
; Line 483
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN53@cmdline_pr
	push	1
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN53@cmdline_pr:
	xor	eax, eax
	jne	SHORT $LN54@cmdline_pr
; Line 484
	push	1
	push	3
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN61@cmdline_pr:
; Line 486
	push	OFFSET $SG86088
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN48@cmdline_pr
	push	OFFSET $SG86089
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN50@cmdline_pr
$LN48@cmdline_pr:
; Line 487
	xor	ecx, ecx
	je	SHORT $LN45@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN45@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 1
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN47@cmdline_pr
	mov	eax, 1
	jmp	$LN457@cmdline_pr
$LN47@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN48@cmdline_pr
$LN43@cmdline_pr:
; Line 488
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN42@cmdline_pr
	push	1
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN42@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN43@cmdline_pr
; Line 489
	push	2
	push	3
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
$LN50@cmdline_pr:
; Line 491
	push	OFFSET $SG86100
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN39@cmdline_pr
$LN38@cmdline_pr:
; Line 493
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN35@cmdline_pr
	cmp	DWORD PTR _value$[ebp], 0
	jne	SHORT $LN35@cmdline_pr
	mov	eax, -2					; fffffffeH
	jmp	$LN457@cmdline_pr
$LN35@cmdline_pr:
	mov	DWORD PTR _ret$[ebp], 2
	cmp	DWORD PTR _need_save$[ebp], 0
	jge	SHORT $LN37@cmdline_pr
	mov	eax, 2
	jmp	$LN457@cmdline_pr
$LN37@cmdline_pr:
	xor	eax, eax
	jne	SHORT $LN38@cmdline_pr
$LN33@cmdline_pr:
; Line 494
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	push	3
	call	_cmdline_check_unavailable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN32@cmdline_pr
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN32@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN33@cmdline_pr
$LN29@cmdline_pr:
; Line 495
	cmp	DWORD PTR _need_save$[ebp], 0
	je	SHORT $LN28@cmdline_pr
	push	1
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_cmdline_save_param
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$LN457@cmdline_pr
$LN28@cmdline_pr:
	xor	edx, edx
	jne	SHORT $LN29@cmdline_pr
; Line 496
	push	2
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_get_int
	add	esp, 8
	cmp	eax, 4
	je	SHORT $LN25@cmdline_pr
; Line 498
	push	OFFSET $SG86116
	call	_cmdline_error
	add	esp, 4
$LN25@cmdline_pr:
; Line 500
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR _nextitem$86101[ebp], ecx
$LN24@cmdline_pr:
; Line 501
	mov	edx, DWORD PTR _nextitem$86101[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	$LN39@cmdline_pr
; Line 503
	push	44					; 0000002cH
	mov	ecx, DWORD PTR _nextitem$86101[ebp]
	push	ecx
	call	_strchr
	add	esp, 8
	mov	DWORD PTR _end$86122[ebp], eax
; Line 504
	cmp	DWORD PTR _end$86122[ebp], 0
	jne	SHORT $LN22@cmdline_pr
; Line 505
	mov	edx, DWORD PTR _nextitem$86101[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _length$86120[ebp], eax
; Line 506
	mov	DWORD PTR _skip$86121[ebp], 0
; Line 507
	jmp	SHORT $LN21@cmdline_pr
$LN22@cmdline_pr:
; Line 508
	mov	eax, DWORD PTR _end$86122[ebp]
	sub	eax, DWORD PTR _nextitem$86101[ebp]
	mov	DWORD PTR _length$86120[ebp], eax
; Line 509
	mov	ecx, DWORD PTR _nextitem$86101[ebp]
	add	ecx, DWORD PTR _length$86120[ebp]
	mov	BYTE PTR [ecx], 0
; Line 510
	mov	DWORD PTR _skip$86121[ebp], 1
$LN21@cmdline_pr:
; Line 512
	cmp	DWORD PTR _length$86120[ebp], 1
	jne	$LN20@cmdline_pr
; Line 513
	mov	edx, DWORD PTR _nextitem$86101[ebp]
	movsx	eax, BYTE PTR [edx]
	mov	DWORD PTR tv891[ebp], eax
	mov	ecx, DWORD PTR tv891[ebp]
	sub	ecx, 49					; 00000031H
	mov	DWORD PTR tv891[ebp], ecx
	cmp	DWORD PTR tv891[ebp], 66		; 00000042H
	ja	$LN6@cmdline_pr
	mov	edx, DWORD PTR tv891[ebp]
	movzx	eax, BYTE PTR $LN459@cmdline_pr[edx]
	jmp	DWORD PTR $LN460@cmdline_pr[eax*4]
$LN17@cmdline_pr:
; Line 516
	mov	ecx, DWORD PTR _nextitem$86101[ebp]
	movsx	edx, BYTE PTR [ecx]
	lea	eax, DWORD PTR [edx+edx-96]
	push	eax
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 517
	jmp	$LN18@cmdline_pr
$LN16@cmdline_pr:
; Line 524
	mov	edx, DWORD PTR _nextitem$86101[ebp]
	movsx	eax, BYTE PTR [edx]
	sub	eax, 48					; 00000030H
	push	eax
	push	57					; 00000039H
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 525
	jmp	$LN18@cmdline_pr
$LN15@cmdline_pr:
; Line 528
	push	0
	push	59					; 0000003bH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 529
	jmp	$LN18@cmdline_pr
$LN14@cmdline_pr:
; Line 531
	push	1
	push	59					; 0000003bH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 532
	jmp	$LN18@cmdline_pr
$LN13@cmdline_pr:
; Line 534
	push	2
	push	59					; 0000003bH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 535
	jmp	$LN18@cmdline_pr
$LN12@cmdline_pr:
; Line 537
	push	3
	push	59					; 0000003bH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 538
	jmp	SHORT $LN18@cmdline_pr
$LN11@cmdline_pr:
; Line 540
	push	4
	push	59					; 0000003bH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 541
	jmp	SHORT $LN18@cmdline_pr
$LN10@cmdline_pr:
; Line 544
	push	0
	push	60					; 0000003cH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 545
	jmp	SHORT $LN18@cmdline_pr
$LN9@cmdline_pr:
; Line 547
	push	1
	push	60					; 0000003cH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 548
	jmp	SHORT $LN18@cmdline_pr
$LN8@cmdline_pr:
; Line 550
	push	2
	push	60					; 0000003cH
	mov	eax, DWORD PTR _conf$[ebp]
	push	eax
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 551
	jmp	SHORT $LN18@cmdline_pr
$LN7@cmdline_pr:
; Line 553
	push	3
	push	60					; 0000003cH
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 554
	jmp	SHORT $LN18@cmdline_pr
$LN6@cmdline_pr:
; Line 558
	mov	edx, DWORD PTR _nextitem$86101[ebp]
	movsx	eax, BYTE PTR [edx]
	push	eax
	push	OFFSET $SG86142
	call	_cmdline_error
	add	esp, 8
$LN18@cmdline_pr:
; Line 560
	jmp	SHORT $LN5@cmdline_pr
$LN20@cmdline_pr:
	cmp	DWORD PTR _length$86120[ebp], 3
	jne	SHORT $LN4@cmdline_pr
	push	3
	push	OFFSET $SG86145
	mov	ecx, DWORD PTR _nextitem$86101[ebp]
	push	ecx
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN4@cmdline_pr
; Line 562
	push	3
	push	58					; 0000003aH
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 563
	jmp	SHORT $LN5@cmdline_pr
$LN4@cmdline_pr:
; Line 564
	mov	eax, DWORD PTR _nextitem$86101[ebp]
	push	eax
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _serspeed$86147[ebp], eax
; Line 565
	cmp	DWORD PTR _serspeed$86147[ebp], 0
	je	SHORT $LN2@cmdline_pr
; Line 566
	mov	ecx, DWORD PTR _serspeed$86147[ebp]
	push	ecx
	push	56					; 00000038H
	mov	edx, DWORD PTR _conf$[ebp]
	push	edx
	call	_conf_set_int
	add	esp, 12					; 0000000cH
; Line 567
	jmp	SHORT $LN5@cmdline_pr
$LN2@cmdline_pr:
; Line 569
	mov	eax, DWORD PTR _nextitem$86101[ebp]
	push	eax
	push	OFFSET $SG86150
	call	_cmdline_error
	add	esp, 8
$LN5@cmdline_pr:
; Line 572
	mov	ecx, DWORD PTR _length$86120[ebp]
	add	ecx, DWORD PTR _skip$86121[ebp]
	add	ecx, DWORD PTR _nextitem$86101[ebp]
	mov	DWORD PTR _nextitem$86101[ebp], ecx
; Line 573
	jmp	$LN24@cmdline_pr
$LN39@cmdline_pr:
; Line 575
	mov	eax, DWORD PTR _ret$[ebp]
$LN457@cmdline_pr:
; Line 576
	pop	edi
	add	esp, 96					; 00000060H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN460@cmdline_pr:
	DD	$LN17@cmdline_pr
	DD	$LN16@cmdline_pr
	DD	$LN7@cmdline_pr
	DD	$LN10@cmdline_pr
	DD	$LN8@cmdline_pr
	DD	$LN9@cmdline_pr
	DD	$LN13@cmdline_pr
	DD	$LN12@cmdline_pr
	DD	$LN15@cmdline_pr
	DD	$LN14@cmdline_pr
	DD	$LN11@cmdline_pr
	DD	$LN6@cmdline_pr
$LN459@cmdline_pr:
	DB	0
	DB	0
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	2
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	3
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	4
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	5
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	6
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	7
	DB	8
	DB	9
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	10					; 0000000aH
_cmdline_process_param ENDP
; Function compile flags: /Odtp /RTCsu
_p$ = 8						; size = 4
_value$ = 12						; size = 4
_pri$ = 16						; size = 4
_cmdline_save_param PROC
; Line 48
	push	ebp
	mov	ebp, esp
; Line 49
	mov	eax, DWORD PTR _pri$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _pri$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _saves[eax+4]
	cmp	edx, DWORD PTR _saves[ecx+8]
	jl	SHORT $LN1@cmdline_sa
; Line 50
	mov	eax, DWORD PTR _pri$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _saves[eax+4]
	add	ecx, 32					; 00000020H
	mov	edx, DWORD PTR _pri$[ebp]
	imul	edx, 12					; 0000000cH
	mov	DWORD PTR _saves[edx+8], ecx
; Line 52
	push	8
	mov	eax, DWORD PTR _pri$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _saves[eax+8]
	push	ecx
	mov	edx, DWORD PTR _pri$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _saves[edx]
	push	eax
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _pri$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	DWORD PTR _saves[ecx], eax
$LN1@cmdline_sa:
; Line 54
	mov	edx, DWORD PTR _pri$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _pri$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _saves[eax+4]
	mov	edx, DWORD PTR _saves[edx]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+ecx*8], eax
; Line 55
	mov	ecx, DWORD PTR _pri$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _pri$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _saves[edx+4]
	mov	ecx, DWORD PTR _saves[ecx]
	mov	edx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [ecx+eax*8+4], edx
; Line 56
	mov	eax, DWORD PTR _pri$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _saves[eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _pri$[ebp]
	imul	edx, 12					; 0000000cH
	mov	DWORD PTR _saves[edx+4], ecx
; Line 57
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_cmdline_save_param ENDP
; Function compile flags: /Odtp /RTCsu
_flag$ = 8						; size = 4
_p$ = 12						; size = 4
_cmdline_check_unavailable PROC
; Line 129
	push	ebp
	mov	ebp, esp
; Line 130
	mov	eax, DWORD PTR _cmdline_tooltype
	and	eax, DWORD PTR _flag$[ebp]
	je	SHORT $LN1@cmdline_ch
; Line 131
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	push	OFFSET $SG85596
	call	_cmdline_error
	add	esp, 8
; Line 132
	mov	eax, 1
	jmp	SHORT $LN2@cmdline_ch
$LN1@cmdline_ch:
; Line 134
	xor	eax, eax
$LN2@cmdline_ch:
; Line 135
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_cmdline_check_unavailable ENDP
_TEXT	ENDS
PUBLIC	_cmdline_run_saved
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$ = -8						; size = 4
_pri$ = -4						; size = 4
_conf$ = 8						; size = 4
_cmdline_run_saved PROC
; Line 579
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 581
	mov	DWORD PTR _pri$[ebp], 0
	jmp	SHORT $LN6@cmdline_ru
$LN5@cmdline_ru:
	mov	eax, DWORD PTR _pri$[ebp]
	add	eax, 1
	mov	DWORD PTR _pri$[ebp], eax
$LN6@cmdline_ru:
	cmp	DWORD PTR _pri$[ebp], 2
	jge	SHORT $LN7@cmdline_ru
; Line 582
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@cmdline_ru
$LN2@cmdline_ru:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN3@cmdline_ru:
	mov	edx, DWORD PTR _pri$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _saves[edx+4]
	jge	SHORT $LN1@cmdline_ru
; Line 584
	mov	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _pri$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _saves[edx]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [eax+ecx*8+4]
	push	edx
	mov	eax, DWORD PTR _pri$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _saves[eax]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*8]
	push	eax
	call	_cmdline_process_param
	add	esp, 16					; 00000010H
	jmp	SHORT $LN2@cmdline_ru
$LN1@cmdline_ru:
	jmp	SHORT $LN5@cmdline_ru
$LN7@cmdline_ru:
; Line 585
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_cmdline_run_saved ENDP
_TEXT	ENDS
END

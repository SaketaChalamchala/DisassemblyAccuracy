; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\Putty\errsock.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
?socket_fn_table@?1??new_error_socket@@9@9 DD FLAT:_sk_error_plug ; `new_error_socket'::`2'::socket_fn_table
	DD	FLAT:_sk_error_close
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_sk_error_socket_error
CONST	ENDS
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\putty\errsock.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_ret$ = -8						; size = 4
_ps$ = -4						; size = 4
_s$ = 8							; size = 4
_p$ = 12						; size = 4
_sk_error_plug PROC
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 25
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _ps$[ebp], eax
; Line 26
	mov	ecx, DWORD PTR _ps$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _ret$[ebp], edx
; Line 27
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN1@sk_error_p
; Line 28
	mov	eax, DWORD PTR _ps$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN1@sk_error_p:
; Line 29
	mov	eax, DWORD PTR _ret$[ebp]
; Line 30
	mov	esp, ebp
	pop	ebp
	ret	0
_sk_error_plug ENDP
_TEXT	ENDS
EXTRN	_safefree:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ps$ = -4						; size = 4
_s$ = 8							; size = 4
_sk_error_close PROC
; Line 33
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 34
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _ps$[ebp], eax
; Line 36
	mov	ecx, DWORD PTR _ps$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_safefree
	add	esp, 4
; Line 37
	mov	eax, DWORD PTR _ps$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 38
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sk_error_close ENDP
; Function compile flags: /Odtp /RTCsu
_ps$ = -4						; size = 4
_s$ = 8							; size = 4
_sk_error_socket_error PROC
; Line 41
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 42
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _ps$[ebp], eax
; Line 43
	mov	ecx, DWORD PTR _ps$[ebp]
	mov	eax, DWORD PTR [ecx+4]
; Line 44
	mov	esp, ebp
	pop	ebp
	ret	0
_sk_error_socket_error ENDP
_TEXT	ENDS
PUBLIC	_new_error_socket
EXTRN	_dupstr:PROC
EXTRN	_safemalloc:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ret$ = -4						; size = 4
_errmsg$ = 8						; size = 4
_plug$ = 12						; size = 4
_new_error_socket PROC
; Line 47
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 61
	push	12					; 0000000cH
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _ret$[ebp], eax
; Line 62
	mov	eax, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [eax], OFFSET ?socket_fn_table@?1??new_error_socket@@9@9
; Line 63
	mov	ecx, DWORD PTR _ret$[ebp]
	mov	edx, DWORD PTR _plug$[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 64
	mov	eax, DWORD PTR _errmsg$[ebp]
	push	eax
	call	_dupstr
	add	esp, 4
	mov	ecx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 66
	mov	eax, DWORD PTR _ret$[ebp]
; Line 67
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_new_error_socket ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\Putty\windows\windlg.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_events	DD	01H DUP (?)
_nevents DD	01H DUP (?)
_negsize DD	01H DUP (?)
?recurse@?1??force_normal@@9@9 DD 01H DUP (?)		; `force_normal'::`2'::recurse
$SG90447 DB	01H DUP (?)
	ALIGN	4

$SG90477 DB	01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
?absentmsg@?1??verify_ssh_host_key@@9@9 DB 'The server''s host key is not'
	DB	' cached in the registry. You', 0aH, 'have no guarantee that t'
	DB	'he server is the computer you', 0aH, 'think it is.', 0aH, 'Th'
	DB	'e server''s %s key fingerprint is:', 0aH, '%s', 0aH, 'If you '
	DB	'trust this host, hit Yes to add the key to', 0aH, '%s''s cach'
	DB	'e and carry on connecting.', 0aH, 'If you want to carry on co'
	DB	'nnecting just once, without', 0aH, 'adding the key to the cac'
	DB	'he, hit No.', 0aH, 'If you do not trust this host, hit Cancel'
	DB	' to abandon the', 0aH, 'connection.', 0aH, 00H ; `verify_ssh_host_key'::`2'::absentmsg
	ORG $+6
?wrongmsg@?1??verify_ssh_host_key@@9@9 DB 'WARNING - POTENTIAL SECURITY B'
	DB	'REACH!', 0aH, 0aH, 'The server''s host key does not match the'
	DB	' one %s has', 0aH, 'cached in the registry. This means that e'
	DB	'ither the', 0aH, 'server administrator has changed the host k'
	DB	'ey, or you', 0aH, 'have actually connected to another compute'
	DB	'r pretending', 0aH, 'to be the server.', 0aH, 'The new %s key'
	DB	' fingerprint is:', 0aH, '%s', 0aH, 'If you were expecting thi'
	DB	's change and trust the new key,', 0aH, 'hit Yes to update %s'''
	DB	's cache and continue connecting.', 0aH, 'If you want to carry'
	DB	' on connecting but without updating', 0aH, 'the cache, hit No'
	DB	'.', 0aH, 'If you want to abandon the connection completely, h'
	DB	'it', 0aH, 'Cancel. Hitting Cancel is the ONLY guaranteed safe'
	DB	0aH, 'choice.', 0aH, 00H			; `verify_ssh_host_key'::`2'::wrongmsg
	ORG $+2
?mbtitle@?1??verify_ssh_host_key@@9@9 DB '%s Security Alert', 00H ; `verify_ssh_host_key'::`2'::mbtitle
	ORG $+2
?mbtitle@?1??askalg@@9@9 DB '%s Security Alert', 00H	; `askalg'::`2'::mbtitle
	ORG $+6
?msg@?1??askalg@@9@9 DB 'The first %s supported by the server', 0aH, 'is '
	DB	'%.64s, which is below the configured', 0aH, 'warning threshol'
	DB	'd.', 0aH, 'Do you want to continue with this connection?', 0aH
	DB	00H						; `askalg'::`2'::msg
	ORG $+1
?msgtemplate@?1??askappend@@9@9 DB 'The session log file "%.*s" already e'
	DB	'xists.', 0aH, 'You can overwrite it with a new session log,', 0aH
	DB	'append your session log to the end of it,', 0aH, 'or disable '
	DB	'session logging for this session.', 0aH, 'Hit Yes to wipe the'
	DB	' file, No to append to it,', 0aH, 'or Cancel to disable loggi'
	DB	'ng.', 00H					; `askappend'::`2'::msgtemplate
?mbtitle@?1??old_keyfile_warning@@9@9 DB '%s Key File Warning', 00H ; `old_keyfile_warning'::`2'::mbtitle
?message@?1??old_keyfile_warning@@9@9 DB 'You are loading an SSH-2 privat'
	DB	'e key which has an', 0aH, 'old version of the file format. Th'
	DB	'is means your key', 0aH, 'file is not fully tamperproof. Futu'
	DB	're versions of', 0aH, '%s may stop supporting this private ke'
	DB	'y format,', 0aH, 'so we recommend you convert your key to the'
	DB	' new', 0aH, 'format.', 0aH, 0aH, 'You can perform this conver'
	DB	'sion by loading the key', 0aH, 'into PuTTYgen and then saving'
	DB	' it again.', 00H				; `old_keyfile_warning'::`2'::message
CONST	ENDS
_DATA	SEGMENT
$SG90209 DB	'%s Event Log', 00H
	ORG $+3
?tabs@?4??LogProc@@9@9 DD 04eH				; `LogProc'::`5'::tabs
	DD	06cH
	ORG $+8
?sel_nl@?8??LogProc@@9@9 DB 0dH				; `LogProc'::`9'::sel_nl
	DB	0aH
	ORG $+2
$SG90281 DB	'%s Licence', 00H
	ORG $+1
$SG90307 DB	'About %s', 00H
	ORG $+3
$SG90321 DB	'http://www.chiark.greenend.org.uk/~sgtatham/putty/', 00H
	ORG $+1
$SG90322 DB	'open', 00H
	ORG $+3
$SG90348 DB	'PuTTYConfigBox', 00H
	ORG $+1
$SG90465 DB	'Cate&gory:', 00H
	ORG $+1
$SG90466 DB	'STATIC', 00H
	ORG $+1
$SG90478 DB	'SysTreeView32', 00H
	ORG $+2
$SG90502 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'w', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'g', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG90583 DB	'%s Configuration', 00H
	ORG $+3
$SG90503 DB	'j', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'c', 00H
	DB	't', 00H, 'r', 00H, 'l', 00H, '_', 00H, 'p', 00H, 'a', 00H, 't'
	DB	00H, 'h', 00H, '_', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'm', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '(', 00H, 's', 00H, '-'
	DB	00H, '>', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'h', 00H, 'n', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, ')', 00H, ' ', 00H, '-', 00H, ' '
	DB	00H, '1', 00H, 00H, 00H
	ORG $+2
$SG90584 DB	'%s Error', 00H
	ORG $+3
$SG90597 DB	'%s Reconfiguration', 00H
	ORG $+1
$SG90598 DB	'%s Error', 00H
	ORG $+3
$SG90615 DB	'%Y-%m-%d %H:%M:%S', 09H, 00H
	ORG $+1
$SG90669 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'w', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'g', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG90728 DB	'%s Log to File', 00H
	ORG $+5
$SG90670 DB	'm', 00H, 'b', 00H, 'r', 00H, 'e', 00H, 't', 00H, '=', 00H
	DB	'=', 00H, 'I', 00H, 'D', 00H, 'Y', 00H, 'E', 00H, 'S', 00H, ' '
	DB	00H, '|', 00H, '|', 00H, ' ', 00H, 'm', 00H, 'b', 00H, 'r', 00H
	DB	'e', 00H, 't', 00H, '=', 00H, '=', 00H, 'I', 00H, 'D', 00H, 'N'
	DB	00H, 'O', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 'm', 00H
	DB	'b', 00H, 'r', 00H, 'e', 00H, 't', 00H, '=', 00H, '=', 00H, 'I'
	DB	00H, 'D', 00H, 'C', 00H, 'A', 00H, 'N', 00H, 'C', 00H, 'E', 00H
	DB	'L', 00H, 00H, 00H
	ORG $+2
$SG90680 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'w', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'g', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG90681 DB	'm', 00H, 'b', 00H, 'r', 00H, 'e', 00H, 't', 00H, '=', 00H
	DB	'=', 00H, 'I', 00H, 'D', 00H, 'Y', 00H, 'E', 00H, 'S', 00H, ' '
	DB	00H, '|', 00H, '|', 00H, ' ', 00H, 'm', 00H, 'b', 00H, 'r', 00H
	DB	'e', 00H, 't', 00H, '=', 00H, '=', 00H, 'I', 00H, 'D', 00H, 'N'
	DB	00H, 'O', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 'm', 00H
	DB	'b', 00H, 'r', 00H, 'e', 00H, 't', 00H, '=', 00H, '=', 00H, 'I'
	DB	00H, 'D', 00H, 'C', 00H, 'A', 00H, 'N', 00H, 'C', 00H, 'E', 00H
	DB	'L', 00H, 00H, 00H
_DATA	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_force_normal
EXTRN	__imp__SetWindowPlacement@8:PROC
EXTRN	__imp__GetWindowPlacement@8:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\putty\windows\windlg.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_wp$ = -52						; size = 44
__$ArrayPad$ = -4					; size = 4
_hwnd$ = 8						; size = 4
_force_normal PROC
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 14					; 0000000eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 57
	cmp	DWORD PTR ?recurse@?1??force_normal@@9@9, 0
	je	SHORT $LN2@force_norm
; Line 58
	jmp	SHORT $LN3@force_norm
$LN2@force_norm:
; Line 59
	mov	DWORD PTR ?recurse@?1??force_normal@@9@9, 1
; Line 61
	mov	DWORD PTR _wp$[ebp], 44			; 0000002cH
; Line 62
	mov	esi, esp
	lea	eax, DWORD PTR _wp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowPlacement@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@force_norm
	cmp	DWORD PTR _wp$[ebp+8], 3
	jne	SHORT $LN1@force_norm
; Line 63
	mov	DWORD PTR _wp$[ebp+8], 1
; Line 64
	mov	esi, esp
	lea	edx, DWORD PTR _wp$[ebp]
	push	edx
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SetWindowPlacement@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@force_norm:
; Line 66
	mov	DWORD PTR ?recurse@?1??force_normal@@9@9, 0
$LN3@force_norm:
; Line 67
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@force_norm
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@force_norm:
	DD	1
	DD	$LN6@force_norm
$LN6@force_norm:
	DD	-52					; ffffffccH
	DD	44					; 0000002cH
	DD	$LN5@force_norm
$LN5@force_norm:
	DB	119					; 00000077H
	DB	112					; 00000070H
	DB	0
_force_normal ENDP
_TEXT	ENDS
PUBLIC	_modal_about_box
EXTRN	__imp__SetActiveWindow@4:PROC
EXTRN	__imp__DialogBoxParamA@20:PROC
EXTRN	_hinst:DWORD
EXTRN	__imp__EnableWindow@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_modal_about_box PROC
; Line 608
	push	ebp
	mov	ebp, esp
	push	esi
; Line 609
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 610
	mov	esi, esp
	push	0
	push	OFFSET _AboutProc@16
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	push	111					; 0000006fH
	mov	edx, DWORD PTR _hinst
	push	edx
	call	DWORD PTR __imp__DialogBoxParamA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 611
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 612
	mov	esi, esp
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetActiveWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 613
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_modal_about_box ENDP
_TEXT	ENDS
EXTRN	__imp__ShellExecuteA@24:PROC
EXTRN	__imp__EndDialog@8:PROC
EXTRN	_ver:BYTE
EXTRN	__imp__SetDlgItemTextA@12:PROC
EXTRN	_safefree:PROC
EXTRN	__imp__SetWindowTextA@8:PROC
EXTRN	_dupprintf:PROC
EXTRN	_appname:DWORD
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv80 = -12						; size = 4
tv64 = -8						; size = 4
_str$ = -4						; size = 4
_hwnd$ = 8						; size = 4
_msg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
_AboutProc@16 PROC
; Line 192
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 195
	mov	eax, DWORD PTR _msg$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 16			; 00000010H
	je	$LN1@AboutProc
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN8@AboutProc
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	$LN7@AboutProc
	jmp	$LN9@AboutProc
$LN8@AboutProc:
; Line 197
	mov	ecx, DWORD PTR _appname
	push	ecx
	push	OFFSET $SG90307
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _str$[ebp], eax
; Line 198
	mov	esi, esp
	mov	edx, DWORD PTR _str$[ebp]
	push	edx
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SetWindowTextA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 199
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 200
	mov	esi, esp
	mov	edx, DWORD PTR _appname
	push	edx
	push	1002					; 000003eaH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SetDlgItemTextA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 201
	mov	esi, esp
	push	OFFSET _ver
	push	1003					; 000003ebH
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetDlgItemTextA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 202
	mov	eax, 1
	jmp	$LN11@AboutProc
$LN7@AboutProc:
; Line 204
	mov	edx, DWORD PTR _wParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	mov	DWORD PTR tv80[ebp], eax
	cmp	DWORD PTR tv80[ebp], 1005		; 000003edH
	jg	SHORT $LN13@AboutProc
	cmp	DWORD PTR tv80[ebp], 1005		; 000003edH
	je	SHORT $LN3@AboutProc
	cmp	DWORD PTR tv80[ebp], 0
	jle	$LN5@AboutProc
	cmp	DWORD PTR tv80[ebp], 2
	jle	SHORT $LN4@AboutProc
	jmp	$LN5@AboutProc
$LN13@AboutProc:
	cmp	DWORD PTR tv80[ebp], 1006		; 000003eeH
	je	$LN2@AboutProc
	jmp	$LN5@AboutProc
$LN4@AboutProc:
; Line 207
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__EndDialog@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 208
	xor	eax, eax
	jmp	$LN11@AboutProc
$LN3@AboutProc:
; Line 210
	mov	esi, esp
	push	0
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__EnableWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 212
	mov	esi, esp
	push	0
	push	OFFSET _LicenceProc@16
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	push	113					; 00000071H
	mov	ecx, DWORD PTR _hinst
	push	ecx
	call	DWORD PTR __imp__DialogBoxParamA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 213
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__EnableWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 214
	mov	esi, esp
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SetActiveWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 215
	xor	eax, eax
	jmp	SHORT $LN11@AboutProc
$LN2@AboutProc:
; Line 221
	mov	esi, esp
	push	10					; 0000000aH
	push	0
	push	0
	push	OFFSET $SG90321
	push	OFFSET $SG90322
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__ShellExecuteA@24
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 222
	xor	eax, eax
	jmp	SHORT $LN11@AboutProc
$LN5@AboutProc:
; Line 224
	xor	eax, eax
	jmp	SHORT $LN11@AboutProc
$LN1@AboutProc:
; Line 226
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__EndDialog@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 227
	xor	eax, eax
	jmp	SHORT $LN11@AboutProc
$LN9@AboutProc:
; Line 229
	xor	eax, eax
$LN11@AboutProc:
; Line 230
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_AboutProc@16 ENDP
; Function compile flags: /Odtp /RTCsu
tv74 = -12						; size = 4
tv64 = -8						; size = 4
_str$90280 = -4						; size = 4
_hwnd$ = 8						; size = 4
_msg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
_LicenceProc@16 PROC
; Line 166
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 167
	mov	eax, DWORD PTR _msg$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 16			; 00000010H
	je	$LN1@LicencePro
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN6@LicencePro
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	SHORT $LN5@LicencePro
	jmp	$LN7@LicencePro
$LN6@LicencePro:
; Line 170
	mov	ecx, DWORD PTR _appname
	push	ecx
	push	OFFSET $SG90281
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _str$90280[ebp], eax
; Line 171
	mov	esi, esp
	mov	edx, DWORD PTR _str$90280[ebp]
	push	edx
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SetWindowTextA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 172
	mov	ecx, DWORD PTR _str$90280[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 174
	mov	eax, 1
	jmp	SHORT $LN9@LicencePro
$LN5@LicencePro:
; Line 176
	mov	edx, DWORD PTR _wParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	mov	DWORD PTR tv74[ebp], eax
	cmp	DWORD PTR tv74[ebp], 0
	jle	SHORT $LN3@LicencePro
	cmp	DWORD PTR tv74[ebp], 2
	jle	SHORT $LN2@LicencePro
	jmp	SHORT $LN3@LicencePro
$LN2@LicencePro:
; Line 179
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__EndDialog@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 180
	xor	eax, eax
	jmp	SHORT $LN9@LicencePro
$LN3@LicencePro:
; Line 182
	xor	eax, eax
	jmp	SHORT $LN9@LicencePro
$LN1@LicencePro:
; Line 184
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__EndDialog@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 185
	xor	eax, eax
	jmp	SHORT $LN9@LicencePro
$LN7@LicencePro:
; Line 187
	xor	eax, eax
$LN9@LicencePro:
; Line 188
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_LicenceProc@16 ENDP
_TEXT	ENDS
PUBLIC	_show_help
EXTRN	_launch_help:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_show_help PROC
; Line 616
	push	ebp
	mov	ebp, esp
; Line 617
	push	0
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	_launch_help
	add	esp, 8
; Line 618
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_show_help ENDP
_TEXT	ENDS
PUBLIC	_defuse_showwindow
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__CreateDialogParamA@20:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hwnd$90575 = -4					; size = 4
_defuse_showwindow PROC
; Line 621
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 630
	mov	esi, esp
	push	0
	push	OFFSET _NullDlgProc@16
	push	0
	push	111					; 0000006fH
	mov	eax, DWORD PTR _hinst
	push	eax
	call	DWORD PTR __imp__CreateDialogParamA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hwnd$90575[ebp], eax
; Line 631
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _hwnd$90575[ebp]
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 632
	mov	esi, esp
	mov	edx, DWORD PTR _hwnd$90575[ebp]
	push	edx
	call	DWORD PTR __imp__SetActiveWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 633
	mov	esi, esp
	mov	eax, DWORD PTR _hwnd$90575[ebp]
	push	eax
	call	DWORD PTR __imp__DestroyWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 635
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_defuse_showwindow ENDP
; Function compile flags: /Odtp /RTCsu
_hwnd$ = 8						; size = 4
_msg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
_NullDlgProc@16 PROC
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	xor	eax, eax
; Line 290
	pop	ebp
	ret	16					; 00000010H
_NullDlgProc@16 ENDP
_TEXT	ENDS
PUBLIC	_do_config
EXTRN	_dp_cleanup:PROC
EXTRN	_winctrl_cleanup:PROC
EXTRN	_ctrl_free_box:PROC
EXTRN	_dlg_auto_set_fixed_pitch_flag:PROC
EXTRN	_conf:DWORD
EXTRN	_dp_add_tree:PROC
EXTRN	_winctrl_init:PROC
EXTRN	_dp_init:PROC
EXTRN	_win_setup_config_box:PROC
EXTRN	_has_help:PROC
EXTRN	_setup_config_box:PROC
EXTRN	_ctrl_new_box:PROC
_BSS	SEGMENT
	ALIGN	8

_ctrls_panel DQ	01H DUP (?)
_ctrls_base DQ	01H DUP (?)
_dp	DB	0d4H DUP (?)
_ctrlbox DD	01H DUP (?)
; Function compile flags: /Odtp /RTCsu
_BSS	ENDS
_TEXT	SEGMENT
_ret$ = -4						; size = 4
_do_config PROC
; Line 638
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 641
	call	_ctrl_new_box
	mov	DWORD PTR _ctrlbox, eax
; Line 642
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _ctrlbox
	push	eax
	call	_setup_config_box
	add	esp, 16					; 00000010H
; Line 643
	push	0
	push	0
	call	_has_help
	push	eax
	push	OFFSET _dp
	mov	ecx, DWORD PTR _ctrlbox
	push	ecx
	call	_win_setup_config_box
	add	esp, 20					; 00000014H
; Line 644
	push	OFFSET _dp
	call	_dp_init
	add	esp, 4
; Line 645
	push	OFFSET _ctrls_base
	call	_winctrl_init
	add	esp, 4
; Line 646
	push	OFFSET _ctrls_panel
	call	_winctrl_init
	add	esp, 4
; Line 647
	push	OFFSET _ctrls_base
	push	OFFSET _dp
	call	_dp_add_tree
	add	esp, 8
; Line 648
	push	OFFSET _ctrls_panel
	push	OFFSET _dp
	call	_dp_add_tree
	add	esp, 8
; Line 649
	mov	edx, DWORD PTR _appname
	push	edx
	push	OFFSET $SG90583
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _dp+40, eax
; Line 650
	mov	eax, DWORD PTR _appname
	push	eax
	push	OFFSET $SG90584
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _dp+44, eax
; Line 651
	mov	ecx, DWORD PTR _conf
	mov	DWORD PTR _dp+48, ecx
; Line 652
	push	OFFSET _dp
	call	_dlg_auto_set_fixed_pitch_flag
	add	esp, 4
; Line 653
	mov	BYTE PTR _dp+163, 1
; Line 657
	push	OFFSET _GenericMainDlgProc@16
	push	0
	push	102					; 00000066H
	mov	edx, DWORD PTR _hinst
	push	edx
	call	_SaneDialogBox
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ret$[ebp], eax
; Line 659
	mov	eax, DWORD PTR _ctrlbox
	push	eax
	call	_ctrl_free_box
	add	esp, 4
; Line 660
	push	OFFSET _ctrls_panel
	call	_winctrl_cleanup
	add	esp, 4
; Line 661
	push	OFFSET _ctrls_base
	call	_winctrl_cleanup
	add	esp, 4
; Line 662
	push	OFFSET _dp
	call	_dp_cleanup
	add	esp, 4
; Line 664
	mov	eax, DWORD PTR _ret$[ebp]
; Line 665
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_do_config ENDP
_TEXT	ENDS
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__DispatchMessageA@4:PROC
EXTRN	__imp__IsDialogMessageA@8:PROC
EXTRN	__imp__GetWindowLongA@8:PROC
EXTRN	__imp__GetMessageA@16:PROC
EXTRN	__imp__SetWindowLongA@12:PROC
EXTRN	__imp__RegisterClassA@4:PROC
EXTRN	__imp__LoadCursorA@8:PROC
EXTRN	__imp__DefDlgProcA@16:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_gm$ = -100						; size = 4
_ret$ = -96						; size = 4
_flags$ = -92						; size = 4
_msg$ = -84						; size = 28
_hwnd$ = -52						; size = 4
_wc$ = -44						; size = 40
_hinst$ = 8						; size = 4
_tmpl$ = 12						; size = 4
_hwndparent$ = 16					; size = 4
_lpDialogFunc$ = 20					; size = 4
_SaneDialogBox PROC
; Line 236
	push	ebp
	mov	ebp, esp
	sub	esp, 100				; 00000064H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-100]
	mov	ecx, 25					; 00000019H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 244
	mov	DWORD PTR _wc$[ebp], 10248		; 00002808H
; Line 245
	mov	eax, DWORD PTR __imp__DefDlgProcA@16
	mov	DWORD PTR _wc$[ebp+4], eax
; Line 246
	mov	DWORD PTR _wc$[ebp+8], 0
; Line 247
	mov	DWORD PTR _wc$[ebp+12], 38		; 00000026H
; Line 248
	mov	ecx, DWORD PTR _hinst$[ebp]
	mov	DWORD PTR _wc$[ebp+16], ecx
; Line 249
	mov	DWORD PTR _wc$[ebp+20], 0
; Line 250
	mov	esi, esp
	push	32512					; 00007f00H
	push	0
	call	DWORD PTR __imp__LoadCursorA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _wc$[ebp+24], eax
; Line 251
	mov	DWORD PTR _wc$[ebp+28], 2
; Line 252
	mov	DWORD PTR _wc$[ebp+32], 0
; Line 253
	mov	DWORD PTR _wc$[ebp+36], OFFSET $SG90348
; Line 254
	mov	esi, esp
	lea	edx, DWORD PTR _wc$[ebp]
	push	edx
	call	DWORD PTR __imp__RegisterClassA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 256
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _lpDialogFunc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwndparent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tmpl$[ebp]
	push	edx
	mov	eax, DWORD PTR _hinst$[ebp]
	push	eax
	call	DWORD PTR __imp__CreateDialogParamA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hwnd$[ebp], eax
; Line 258
	mov	esi, esp
	push	0
	push	30					; 0000001eH
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetWindowLongA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 259
	mov	esi, esp
	push	0
	push	34					; 00000022H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SetWindowLongA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@SaneDialog:
; Line 261
	mov	esi, esp
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__GetMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _gm$[ebp], eax
	cmp	DWORD PTR _gm$[ebp], 0
	jle	SHORT $LN4@SaneDialog
; Line 262
	mov	esi, esp
	push	30					; 0000001eH
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowLongA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _flags$[ebp], eax
; Line 263
	mov	edx, DWORD PTR _flags$[ebp]
	and	edx, 1
	jne	SHORT $LN3@SaneDialog
	mov	esi, esp
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsDialogMessageA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN3@SaneDialog
; Line 264
	mov	esi, esp
	lea	edx, DWORD PTR _msg$[ebp]
	push	edx
	call	DWORD PTR __imp__DispatchMessageA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@SaneDialog:
; Line 265
	mov	eax, DWORD PTR _flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@SaneDialog
; Line 266
	jmp	SHORT $LN4@SaneDialog
$LN2@SaneDialog:
; Line 267
	jmp	SHORT $LN5@SaneDialog
$LN4@SaneDialog:
; Line 269
	cmp	DWORD PTR _gm$[ebp], 0
	jne	SHORT $LN1@SaneDialog
; Line 270
	mov	esi, esp
	mov	ecx, DWORD PTR _msg$[ebp+8]
	push	ecx
	call	DWORD PTR __imp__PostQuitMessage@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@SaneDialog:
; Line 272
	mov	esi, esp
	push	34					; 00000022H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetWindowLongA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ret$[ebp], eax
; Line 273
	mov	esi, esp
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__DestroyWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 274
	mov	eax, DWORD PTR _ret$[ebp]
; Line 275
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@SaneDialog
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 100				; 00000064H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@SaneDialog:
	DD	2
	DD	$LN10@SaneDialog
$LN10@SaneDialog:
	DD	-44					; ffffffd4H
	DD	40					; 00000028H
	DD	$LN8@SaneDialog
	DD	-84					; ffffffacH
	DD	28					; 0000001cH
	DD	$LN9@SaneDialog
$LN9@SaneDialog:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
$LN8@SaneDialog:
	DB	119					; 00000077H
	DB	99					; 00000063H
	DB	0
_SaneDialogBox ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_quit_help:PROC
EXTRN	__imp__MessageBeep@4:PROC
EXTRN	_winctrl_context_help:PROC
EXTRN	__imp__GetCapture@0:PROC
EXTRN	_winctrl_handle_command:PROC
EXTRN	__imp__SetFocus@4:PROC
EXTRN	__imp__InvalidateRect@12:PROC
EXTRN	_dlg_refresh:PROC
EXTRN	_winctrl_remove:PROC
EXTRN	_winctrl_rem_shortcuts:PROC
EXTRN	__imp__ReleaseCapture@0:PROC
EXTRN	_dlg_set_focus:PROC
EXTRN	_winctrl_findbyindex:PROC
EXTRN	_strrchr:PROC
EXTRN	__wassert:PROC
EXTRN	_ctrl_path_elements:PROC
EXTRN	_ctrl_path_compare:PROC
EXTRN	_memset:PROC
EXTRN	__imp__CreateWindowExA@48:PROC
EXTRN	__imp__MapDialogRect@8:PROC
EXTRN	__imp__MoveWindow@24:PROC
EXTRN	__imp__GetWindowRect@8:PROC
EXTRN	__imp__GetDesktopWindow@0:PROC
EXTRN	__imp__SendMessageA@16:PROC
EXTRN	__imp__LoadIconA@8:PROC
EXTRN	__imp__GetDlgItem@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv253 = -308						; size = 4
tv64 = -304						; size = 4
_c$90540 = -300						; size = 4
_item$90539 = -296					; size = 4
_k$90538 = -292						; size = 4
_buffer$90533 = -284					; size = 64
_item$90532 = -212					; size = 40
_i$90525 = -168						; size = 4
_c$90512 = -164						; size = 4
_i$90511 = -160						; size = 4
_c$90498 = -156						; size = 4
_j$90497 = -152						; size = 4
_item$90496 = -148					; size = 4
_s$90495 = -144						; size = 4
_path$90490 = -140					; size = 4
_i$90489 = -136						; size = 4
_hfirst$90487 = -132					; size = 4
_tvstatic$90462 = -128					; size = 4
_font$90461 = -124					; size = 4
_r$90460 = -116						; size = 16
_rd$90458 = -92						; size = 16
_rs$90457 = -68						; size = 16
_item$90450 = -48					; size = 4
_ret$ = -44						; size = 4
_tvfaff$ = -36						; size = 20
_treeview$ = -12					; size = 4
_hw$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_hwnd$ = 8						; size = 4
_msg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
_GenericMainDlgProc@16 PROC
; Line 372
	push	ebp
	mov	ebp, esp
	sub	esp, 308				; 00000134H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-308]
	mov	ecx, 77					; 0000004dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 377
	mov	eax, DWORD PTR _msg$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 83			; 00000053H
	ja	SHORT $LN44@GenericMai
	cmp	DWORD PTR tv64[ebp], 83			; 00000053H
	je	$LN5@GenericMai
	cmp	DWORD PTR tv64[ebp], 5
	je	$LN2@GenericMai
	cmp	DWORD PTR tv64[ebp], 16			; 00000010H
	je	$LN3@GenericMai
	cmp	DWORD PTR tv64[ebp], 78			; 0000004eH
	je	$LN17@GenericMai
	jmp	$LN9@GenericMai
$LN44@GenericMai:
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN36@GenericMai
	cmp	DWORD PTR tv64[ebp], 514		; 00000202H
	je	$LN19@GenericMai
	jmp	$LN9@GenericMai
$LN36@GenericMai:
; Line 379
	mov	ecx, DWORD PTR _hwnd$[ebp]
	mov	DWORD PTR _dp, ecx
; Line 380
	push	OFFSET $SG90447
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	_create_controls
	add	esp, 8
; Line 381
	mov	esi, esp
	mov	eax, DWORD PTR _dp+40
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetWindowTextA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 382
	mov	esi, esp
	push	0
	push	-21					; ffffffebH
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SetWindowLongA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 383
	call	_has_help
	test	eax, eax
	je	SHORT $LN35@GenericMai
; Line 386
	mov	esi, esp
	push	-20					; ffffffecH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowLongA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	or	eax, 1024				; 00000400H
	mov	esi, esp
	push	eax
	push	-20					; ffffffecH
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetWindowLongA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 387
	jmp	SHORT $LN34@GenericMai
$LN35@GenericMai:
; Line 388
	mov	esi, esp
	push	1005					; 000003edH
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _item$90450[ebp], eax
; Line 389
	cmp	DWORD PTR _item$90450[ebp], 0
	je	SHORT $LN34@GenericMai
; Line 390
	mov	esi, esp
	mov	eax, DWORD PTR _item$90450[ebp]
	push	eax
	call	DWORD PTR __imp__DestroyWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN34@GenericMai:
; Line 393
	mov	esi, esp
	push	201					; 000000c9H
	mov	ecx, DWORD PTR _hinst
	push	ecx
	call	DWORD PTR __imp__LoadIconA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	push	1
	push	128					; 00000080H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 400
	mov	esi, esp
	call	DWORD PTR __imp__GetDesktopWindow@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hw$[ebp], eax
; Line 401
	mov	esi, esp
	lea	eax, DWORD PTR _rs$90457[ebp]
	push	eax
	mov	ecx, DWORD PTR _hw$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN32@GenericMai
	mov	esi, esp
	lea	edx, DWORD PTR _rd$90458[ebp]
	push	edx
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN32@GenericMai
; Line 405
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR _rd$90458[ebp+12]
	sub	ecx, DWORD PTR _rd$90458[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _rd$90458[ebp+8]
	sub	edx, DWORD PTR _rd$90458[ebp]
	push	edx
	mov	eax, DWORD PTR _rs$90457[ebp+12]
	add	eax, DWORD PTR _rs$90457[ebp+4]
	add	eax, DWORD PTR _rd$90458[ebp+4]
	sub	eax, DWORD PTR _rd$90458[ebp+12]
	cdq
	sub	eax, edx
	sar	eax, 1
	push	eax
	mov	eax, DWORD PTR _rs$90457[ebp+8]
	add	eax, DWORD PTR _rs$90457[ebp]
	add	eax, DWORD PTR _rd$90458[ebp]
	sub	eax, DWORD PTR _rd$90458[ebp+8]
	cdq
	sub	eax, edx
	sar	eax, 1
	push	eax
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__MoveWindow@24
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN32@GenericMai:
; Line 416
	mov	DWORD PTR _r$90460[ebp], 3
; Line 417
	mov	ecx, DWORD PTR _r$90460[ebp]
	add	ecx, 95					; 0000005fH
	mov	DWORD PTR _r$90460[ebp+8], ecx
; Line 418
	mov	DWORD PTR _r$90460[ebp+4], 3
; Line 419
	mov	edx, DWORD PTR _r$90460[ebp+4]
	add	edx, 10					; 0000000aH
	mov	DWORD PTR _r$90460[ebp+12], edx
; Line 420
	mov	esi, esp
	lea	eax, DWORD PTR _r$90460[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__MapDialogRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 426
	mov	esi, esp
	push	0
	mov	edx, DWORD PTR _hinst
	push	edx
	push	1007					; 000003efH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$90460[ebp+12]
	sub	ecx, DWORD PTR _r$90460[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _r$90460[ebp+8]
	sub	edx, DWORD PTR _r$90460[ebp]
	push	edx
	mov	eax, DWORD PTR _r$90460[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _r$90460[ebp]
	push	ecx
	push	1342177280				; 50000000H
	push	OFFSET $SG90465
	push	OFFSET $SG90466
	push	0
	call	DWORD PTR __imp__CreateWindowExA@48
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tvstatic$90462[ebp], eax
; Line 427
	mov	esi, esp
	push	0
	push	0
	push	49					; 00000031H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _font$90461[ebp], eax
; Line 428
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _font$90461[ebp]
	push	eax
	push	48					; 00000030H
	mov	ecx, DWORD PTR _tvstatic$90462[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 430
	mov	DWORD PTR _r$90460[ebp], 3
; Line 431
	mov	edx, DWORD PTR _r$90460[ebp]
	add	edx, 95					; 0000005fH
	mov	DWORD PTR _r$90460[ebp+8], edx
; Line 432
	mov	DWORD PTR _r$90460[ebp+4], 13		; 0000000dH
; Line 433
	mov	eax, DWORD PTR _r$90460[ebp+4]
	add	eax, 219				; 000000dbH
	mov	DWORD PTR _r$90460[ebp+12], eax
; Line 434
	mov	esi, esp
	lea	ecx, DWORD PTR _r$90460[ebp]
	push	ecx
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__MapDialogRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 443
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _hinst
	push	eax
	push	1008					; 000003f0H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$90460[ebp+12]
	sub	edx, DWORD PTR _r$90460[ebp+4]
	push	edx
	mov	eax, DWORD PTR _r$90460[ebp+8]
	sub	eax, DWORD PTR _r$90460[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$90460[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _r$90460[ebp]
	push	edx
	push	1342242871				; 50010037H
	push	OFFSET $SG90477
	push	OFFSET $SG90478
	push	512					; 00000200H
	call	DWORD PTR __imp__CreateWindowExA@48
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _treeview$[ebp], eax
; Line 444
	mov	esi, esp
	push	0
	push	0
	push	49					; 00000031H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _font$90461[ebp], eax
; Line 445
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR _font$90461[ebp]
	push	ecx
	push	48					; 00000030H
	mov	edx, DWORD PTR _treeview$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 446
	mov	eax, DWORD PTR _treeview$[ebp]
	mov	DWORD PTR _tvfaff$[ebp], eax
; Line 447
	push	16					; 00000010H
	push	0
	lea	ecx, DWORD PTR _tvfaff$[ebp+4]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 454
	mov	DWORD PTR _hfirst$90487[ebp], 0
; Line 456
	mov	DWORD PTR _path$90490[ebp], 0
; Line 458
	mov	DWORD PTR _i$90489[ebp], 0
	jmp	SHORT $LN31@GenericMai
$LN30@GenericMai:
	mov	edx, DWORD PTR _i$90489[ebp]
	add	edx, 1
	mov	DWORD PTR _i$90489[ebp], edx
$LN31@GenericMai:
	mov	eax, DWORD PTR _ctrlbox
	mov	ecx, DWORD PTR _i$90489[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	$LN29@GenericMai
; Line 459
	mov	edx, DWORD PTR _ctrlbox
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _i$90489[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _s$90495[ebp], edx
; Line 464
	mov	eax, DWORD PTR _s$90495[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	jne	SHORT $LN28@GenericMai
; Line 465
	jmp	SHORT $LN30@GenericMai
$LN28@GenericMai:
; Line 466
	cmp	DWORD PTR _path$90490[ebp], 0
	je	SHORT $LN41@GenericMai
	mov	eax, DWORD PTR _path$90490[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$90495[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_ctrl_path_compare
	add	esp, 8
	mov	DWORD PTR tv253[ebp], eax
	jmp	SHORT $LN42@GenericMai
$LN41@GenericMai:
	mov	DWORD PTR tv253[ebp], 0
$LN42@GenericMai:
	mov	eax, DWORD PTR tv253[ebp]
	mov	DWORD PTR _j$90497[ebp], eax
; Line 467
	cmp	DWORD PTR _j$90497[ebp], 2147483647	; 7fffffffH
	jne	SHORT $LN27@GenericMai
; Line 468
	jmp	$LN30@GenericMai
$LN27@GenericMai:
; Line 480
	mov	ecx, DWORD PTR _s$90495[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_ctrl_path_elements
	add	esp, 4
	sub	eax, 1
	cmp	DWORD PTR _j$90497[ebp], eax
	je	SHORT $LN43@GenericMai
	push	480					; 000001e0H
	push	OFFSET $SG90502
	push	OFFSET $SG90503
	call	__wassert
	add	esp, 12					; 0000000cH
$LN43@GenericMai:
; Line 482
	push	47					; 0000002fH
	mov	ecx, DWORD PTR _s$90495[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_strrchr
	add	esp, 8
	mov	DWORD PTR _c$90498[ebp], eax
; Line 483
	cmp	DWORD PTR _c$90498[ebp], 0
	jne	SHORT $LN26@GenericMai
; Line 484
	mov	eax, DWORD PTR _s$90495[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _c$90498[ebp], ecx
; Line 485
	jmp	SHORT $LN25@GenericMai
$LN26@GenericMai:
; Line 486
	mov	edx, DWORD PTR _c$90498[ebp]
	add	edx, 1
	mov	DWORD PTR _c$90498[ebp], edx
$LN25@GenericMai:
; Line 488
	mov	eax, DWORD PTR _s$90495[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _c$90498[ebp]
	push	edx
	mov	eax, DWORD PTR _j$90497[ebp]
	push	eax
	lea	ecx, DWORD PTR _tvfaff$[ebp]
	push	ecx
	call	_treeview_insert
	add	esp, 16					; 00000010H
	mov	DWORD PTR _item$90496[ebp], eax
; Line 489
	cmp	DWORD PTR _hfirst$90487[ebp], 0
	jne	SHORT $LN24@GenericMai
; Line 490
	mov	edx, DWORD PTR _item$90496[ebp]
	mov	DWORD PTR _hfirst$90487[ebp], edx
$LN24@GenericMai:
; Line 492
	mov	eax, DWORD PTR _s$90495[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _path$90490[ebp], ecx
; Line 493
	jmp	$LN30@GenericMai
$LN29@GenericMai:
; Line 500
	mov	esi, esp
	mov	edx, DWORD PTR _hfirst$90487[ebp]
	push	edx
	push	9
	push	4363					; 0000110bH
	mov	eax, DWORD PTR _treeview$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 511
	mov	DWORD PTR _i$90511[ebp], 0
	jmp	SHORT $LN23@GenericMai
$LN22@GenericMai:
	mov	ecx, DWORD PTR _i$90511[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$90511[ebp], ecx
$LN23@GenericMai:
	mov	edx, DWORD PTR _i$90511[ebp]
	push	edx
	push	OFFSET _ctrls_panel
	call	_winctrl_findbyindex
	add	esp, 8
	mov	DWORD PTR _c$90512[ebp], eax
	cmp	DWORD PTR _c$90512[ebp], 0
	je	SHORT $LN21@GenericMai
; Line 512
	mov	eax, DWORD PTR _c$90512[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN20@GenericMai
; Line 513
	push	OFFSET _dp
	mov	ecx, DWORD PTR _c$90512[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_dlg_set_focus
	add	esp, 8
; Line 514
	jmp	SHORT $LN21@GenericMai
$LN20@GenericMai:
; Line 516
	jmp	SHORT $LN22@GenericMai
$LN21@GenericMai:
; Line 519
	mov	esi, esp
	push	1
	push	-21					; ffffffebH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SetWindowLongA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 520
	xor	eax, eax
	jmp	$LN39@GenericMai
$LN19@GenericMai:
; Line 526
	mov	esi, esp
	call	DWORD PTR __imp__ReleaseCapture@0
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 527
	cmp	DWORD PTR _dp+200, 0
	je	SHORT $LN18@GenericMai
; Line 528
	xor	ecx, ecx
	cmp	DWORD PTR _dp+204, 0
	setne	cl
	push	ecx
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	_SaneEndDialog
	add	esp, 8
$LN18@GenericMai:
; Line 529
	jmp	$LN37@GenericMai
$LN17@GenericMai:
; Line 532
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 1008				; 000003f0H
	jne	$LN16@GenericMai
	mov	edx, DWORD PTR _lParam$[ebp]
	cmp	DWORD PTR [edx+8], -402			; fffffe6eH
	jne	$LN16@GenericMai
; Line 534
	mov	esi, esp
	push	0
	push	9
	push	4362					; 0000110aH
	mov	eax, DWORD PTR _lParam$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _i$90525[ebp], eax
; Line 538
	mov	esi, esp
	push	0
	push	0
	push	11					; 0000000bH
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 540
	mov	eax, DWORD PTR _i$90525[ebp]
	mov	DWORD PTR _item$90532[ebp+4], eax
; Line 541
	lea	ecx, DWORD PTR _buffer$90533[ebp]
	mov	DWORD PTR _item$90532[ebp+16], ecx
; Line 542
	mov	DWORD PTR _item$90532[ebp+20], 64	; 00000040H
; Line 543
	mov	DWORD PTR _item$90532[ebp], 5
; Line 544
	mov	esi, esp
	lea	edx, DWORD PTR _item$90532[ebp]
	push	edx
	push	0
	push	4364					; 0000110cH
	mov	eax, DWORD PTR _lParam$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN15@GenericMai:
; Line 551
	push	0
	push	OFFSET _ctrls_panel
	call	_winctrl_findbyindex
	add	esp, 8
	mov	DWORD PTR _c$90540[ebp], eax
	cmp	DWORD PTR _c$90540[ebp], 0
	je	$LN14@GenericMai
; Line 552
	mov	DWORD PTR _k$90538[ebp], 0
	jmp	SHORT $LN13@GenericMai
$LN12@GenericMai:
	mov	edx, DWORD PTR _k$90538[ebp]
	add	edx, 1
	mov	DWORD PTR _k$90538[ebp], edx
$LN13@GenericMai:
	mov	eax, DWORD PTR _c$90540[ebp]
	mov	ecx, DWORD PTR _k$90538[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jge	SHORT $LN11@GenericMai
; Line 553
	mov	edx, DWORD PTR _c$90540[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, DWORD PTR _k$90538[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _item$90539[ebp], eax
; Line 554
	cmp	DWORD PTR _item$90539[ebp], 0
	je	SHORT $LN10@GenericMai
; Line 555
	mov	esi, esp
	mov	edx, DWORD PTR _item$90539[ebp]
	push	edx
	call	DWORD PTR __imp__DestroyWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@GenericMai:
; Line 556
	jmp	SHORT $LN12@GenericMai
$LN11@GenericMai:
; Line 557
	mov	eax, DWORD PTR _c$90540[ebp]
	push	eax
	push	OFFSET _dp
	call	_winctrl_rem_shortcuts
	add	esp, 8
; Line 558
	mov	ecx, DWORD PTR _c$90540[ebp]
	push	ecx
	push	OFFSET _ctrls_panel
	call	_winctrl_remove
	add	esp, 8
; Line 559
	mov	edx, DWORD PTR _c$90540[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	call	_safefree
	add	esp, 4
; Line 560
	mov	ecx, DWORD PTR _c$90540[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 561
	jmp	$LN15@GenericMai
$LN14@GenericMai:
; Line 563
	mov	edx, DWORD PTR _item$90532[ebp+36]
	push	edx
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	_create_controls
	add	esp, 8
; Line 565
	push	OFFSET _dp
	push	0
	call	_dlg_refresh
	add	esp, 8
; Line 567
	mov	esi, esp
	push	0
	push	1
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 568
	mov	esi, esp
	push	1
	push	0
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__InvalidateRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 570
	mov	esi, esp
	mov	eax, DWORD PTR _lParam$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SetFocus@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 571
	xor	eax, eax
	jmp	$LN39@GenericMai
$LN16@GenericMai:
; Line 573
	jmp	$LN37@GenericMai
$LN9@GenericMai:
; Line 580
	mov	esi, esp
	push	-21					; ffffffebH
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetWindowLongA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN8@GenericMai
; Line 581
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _msg$[ebp]
	push	edx
	push	OFFSET _dp
	call	_winctrl_handle_command
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ret$[ebp], eax
; Line 582
	cmp	DWORD PTR _dp+200, 0
	je	SHORT $LN7@GenericMai
	mov	esi, esp
	call	DWORD PTR __imp__GetCapture@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _hwnd$[ebp]
	je	SHORT $LN7@GenericMai
; Line 583
	xor	eax, eax
	cmp	DWORD PTR _dp+204, 0
	setne	al
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	_SaneEndDialog
	add	esp, 8
$LN7@GenericMai:
; Line 584
	jmp	SHORT $LN6@GenericMai
$LN8@GenericMai:
; Line 585
	mov	DWORD PTR _ret$[ebp], 0
$LN6@GenericMai:
; Line 586
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	SHORT $LN39@GenericMai
$LN5@GenericMai:
; Line 589
	mov	edx, DWORD PTR _lParam$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	push	OFFSET _dp
	call	_winctrl_context_help
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN4@GenericMai
; Line 590
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__MessageBeep@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@GenericMai:
; Line 591
	jmp	SHORT $LN37@GenericMai
$LN3@GenericMai:
; Line 593
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	_quit_help
	add	esp, 4
; Line 594
	push	0
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	_SaneEndDialog
	add	esp, 8
; Line 595
	xor	eax, eax
	jmp	SHORT $LN39@GenericMai
$LN2@GenericMai:
; Line 599
	cmp	DWORD PTR _wParam$[ebp], 2
	jne	SHORT $LN1@GenericMai
; Line 600
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	_force_normal
	add	esp, 4
$LN1@GenericMai:
; Line 601
	xor	eax, eax
	jmp	SHORT $LN39@GenericMai
$LN37@GenericMai:
; Line 604
	xor	eax, eax
$LN39@GenericMai:
; Line 605
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN52@GenericMai
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 308				; 00000134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN52@GenericMai:
	DD	6
	DD	$LN51@GenericMai
$LN51@GenericMai:
	DD	-36					; ffffffdcH
	DD	20					; 00000014H
	DD	$LN45@GenericMai
	DD	-68					; ffffffbcH
	DD	16					; 00000010H
	DD	$LN46@GenericMai
	DD	-92					; ffffffa4H
	DD	16					; 00000010H
	DD	$LN47@GenericMai
	DD	-116					; ffffff8cH
	DD	16					; 00000010H
	DD	$LN48@GenericMai
	DD	-212					; ffffff2cH
	DD	40					; 00000028H
	DD	$LN49@GenericMai
	DD	-284					; fffffee4H
	DD	64					; 00000040H
	DD	$LN50@GenericMai
$LN50@GenericMai:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN49@GenericMai:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	0
$LN48@GenericMai:
	DB	114					; 00000072H
	DB	0
$LN47@GenericMai:
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	0
$LN46@GenericMai:
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	0
$LN45@GenericMai:
	DB	116					; 00000074H
	DB	118					; 00000076H
	DB	102					; 00000066H
	DB	97					; 00000061H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
_GenericMainDlgProc@16 ENDP
; Function compile flags: /Odtp /RTCsu
_hwnd$ = 8						; size = 4
_ret$ = 12						; size = 4
_SaneEndDialog PROC
; Line 278
	push	ebp
	mov	ebp, esp
	push	esi
; Line 279
	mov	esi, esp
	mov	eax, DWORD PTR _ret$[ebp]
	push	eax
	push	34					; 00000022H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetWindowLongA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 280
	mov	esi, esp
	push	1
	push	30					; 0000001eH
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SetWindowLongA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 281
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_SaneEndDialog ENDP
_TEXT	ENDS
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv69 = -88						; size = 4
_newitem$ = -84						; size = 4
_i$ = -80						; size = 4
_ins$ = -72						; size = 68
_faff$ = 8						; size = 4
_level$ = 12						; size = 4
_text$ = 16						; size = 4
_path$ = 20						; size = 4
_treeview_insert PROC
; Line 307
	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-88]
	mov	ecx, 22					; 00000016H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 311
	cmp	DWORD PTR _level$[ebp], 0
	jle	SHORT $LN7@treeview_i
	mov	eax, DWORD PTR _level$[ebp]
	mov	ecx, DWORD PTR _faff$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv69[ebp], edx
	jmp	SHORT $LN8@treeview_i
$LN7@treeview_i:
	mov	DWORD PTR tv69[ebp], -65536		; ffff0000H
$LN8@treeview_i:
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR _ins$[ebp], eax
; Line 312
	mov	ecx, DWORD PTR _level$[ebp]
	mov	edx, DWORD PTR _faff$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+4]
	mov	DWORD PTR _ins$[ebp+4], eax
; Line 318
	mov	DWORD PTR _ins$[ebp+8], 5
; Line 319
	mov	ecx, DWORD PTR _text$[ebp]
	mov	DWORD PTR _ins$[ebp+24], ecx
; Line 320
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _ins$[ebp+28], eax
; Line 321
	mov	eax, DWORD PTR _path$[ebp]
	mov	DWORD PTR _ins$[ebp+44], eax
; Line 322
	mov	esi, esp
	lea	ecx, DWORD PTR _ins$[ebp]
	push	ecx
	push	0
	push	4352					; 00001100H
	mov	edx, DWORD PTR _faff$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _newitem$[ebp], eax
; Line 323
	cmp	DWORD PTR _level$[ebp], 0
	jle	SHORT $LN4@treeview_i
; Line 325
	mov	esi, esp
	mov	ecx, DWORD PTR _level$[ebp]
	mov	edx, DWORD PTR _faff$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	push	eax
	xor	ecx, ecx
	cmp	DWORD PTR _level$[ebp], 1
	setle	cl
	add	ecx, 1
	push	ecx
	push	4354					; 00001102H
	mov	edx, DWORD PTR _faff$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@treeview_i:
; Line 326
	mov	ecx, DWORD PTR _level$[ebp]
	mov	edx, DWORD PTR _faff$[ebp]
	mov	eax, DWORD PTR _newitem$[ebp]
	mov	DWORD PTR [edx+ecx*4+4], eax
; Line 327
	mov	ecx, DWORD PTR _level$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	jmp	SHORT $LN3@treeview_i
$LN2@treeview_i:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN3@treeview_i:
	cmp	DWORD PTR _i$[ebp], 4
	jge	SHORT $LN1@treeview_i
; Line 328
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _faff$[ebp]
	mov	DWORD PTR [ecx+eax*4+4], 0
	jmp	SHORT $LN2@treeview_i
$LN1@treeview_i:
; Line 329
	mov	eax, DWORD PTR _newitem$[ebp]
; Line 330
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@treeview_i
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 88					; 00000058H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@treeview_i:
	DD	1
	DD	$LN10@treeview_i
$LN10@treeview_i:
	DD	-72					; ffffffb8H
	DD	68					; 00000044H
	DD	$LN9@treeview_i
$LN9@treeview_i:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
_treeview_insert ENDP
_TEXT	ENDS
EXTRN	_winctrl_layout:PROC
EXTRN	_ctrl_find_path:PROC
EXTRN	_ctlposinit:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_s$90427 = -68						; size = 4
_wc$ = -64						; size = 4
_base_id$ = -56						; size = 4
_index$ = -48						; size = 4
_cp$ = -40						; size = 36
_hwnd$ = 8						; size = 4
_path$ = 12						; size = 4
_create_controls PROC
; Line 336
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	edi
	lea	edi, DWORD PTR [ebp-68]
	mov	ecx, 17					; 00000011H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 342
	mov	eax, DWORD PTR _path$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN4@create_con
; Line 346
	push	235					; 000000ebH
	push	3
	push	3
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	lea	eax, DWORD PTR _cp$[ebp]
	push	eax
	call	_ctlposinit
	add	esp, 20					; 00000014H
; Line 347
	mov	DWORD PTR _wc$[ebp], OFFSET _ctrls_base
; Line 348
	mov	DWORD PTR _base_id$[ebp], 1009		; 000003f1H
; Line 349
	jmp	SHORT $LN3@create_con
$LN4@create_con:
; Line 354
	push	13					; 0000000dH
	push	3
	push	100					; 00000064H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	lea	edx, DWORD PTR _cp$[ebp]
	push	edx
	call	_ctlposinit
	add	esp, 20					; 00000014H
; Line 355
	mov	DWORD PTR _wc$[ebp], OFFSET _ctrls_panel
; Line 356
	mov	DWORD PTR _base_id$[ebp], 1041		; 00000411H
$LN3@create_con:
; Line 359
	mov	DWORD PTR _index$[ebp], -1
$LN2@create_con:
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctrlbox
	push	edx
	call	_ctrl_find_path
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _index$[ebp], eax
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN5@create_con
; Line 360
	mov	eax, DWORD PTR _ctrlbox
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _s$90427[ebp], eax
; Line 361
	lea	ecx, DWORD PTR _base_id$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$90427[ebp]
	push	edx
	lea	eax, DWORD PTR _cp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wc$[ebp]
	push	ecx
	push	OFFSET _dp
	call	_winctrl_layout
	add	esp, 20					; 00000014H
; Line 362
	jmp	SHORT $LN2@create_con
$LN5@create_con:
; Line 363
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@create_con
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 68					; 00000044H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@create_con:
	DD	2
	DD	$LN9@create_con
$LN9@create_con:
	DD	-40					; ffffffd8H
	DD	36					; 00000024H
	DD	$LN7@create_con
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN8@create_con
$LN8@create_con:
	DB	98					; 00000062H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	95					; 0000005fH
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN7@create_con:
	DB	99					; 00000063H
	DB	112					; 00000070H
	DB	0
_create_controls ENDP
_TEXT	ENDS
PUBLIC	_do_reconfig
EXTRN	_conf_free:PROC
EXTRN	_conf_copy_into:PROC
EXTRN	_conf_get_int:PROC
EXTRN	_conf_copy:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_protocol$ = -12					; size = 4
_ret$ = -8						; size = 4
_backup_conf$ = -4					; size = 4
_hwnd$ = 8						; size = 4
_protcfginfo$ = 12					; size = 4
_do_reconfig PROC
; Line 668
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 672
	mov	eax, DWORD PTR _conf
	push	eax
	call	_conf_copy
	add	esp, 4
	mov	DWORD PTR _backup_conf$[ebp], eax
; Line 674
	call	_ctrl_new_box
	mov	DWORD PTR _ctrlbox, eax
; Line 675
	push	2
	mov	ecx, DWORD PTR _conf
	push	ecx
	call	_conf_get_int
	add	esp, 8
	mov	DWORD PTR _protocol$[ebp], eax
; Line 676
	mov	edx, DWORD PTR _protcfginfo$[ebp]
	push	edx
	mov	eax, DWORD PTR _protocol$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _ctrlbox
	push	ecx
	call	_setup_config_box
	add	esp, 16					; 00000010H
; Line 677
	mov	edx, DWORD PTR _protocol$[ebp]
	push	edx
	push	1
	call	_has_help
	push	eax
	push	OFFSET _dp
	mov	eax, DWORD PTR _ctrlbox
	push	eax
	call	_win_setup_config_box
	add	esp, 20					; 00000014H
; Line 678
	push	OFFSET _dp
	call	_dp_init
	add	esp, 4
; Line 679
	push	OFFSET _ctrls_base
	call	_winctrl_init
	add	esp, 4
; Line 680
	push	OFFSET _ctrls_panel
	call	_winctrl_init
	add	esp, 4
; Line 681
	push	OFFSET _ctrls_base
	push	OFFSET _dp
	call	_dp_add_tree
	add	esp, 8
; Line 682
	push	OFFSET _ctrls_panel
	push	OFFSET _dp
	call	_dp_add_tree
	add	esp, 8
; Line 683
	mov	ecx, DWORD PTR _appname
	push	ecx
	push	OFFSET $SG90597
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _dp+40, eax
; Line 684
	mov	edx, DWORD PTR _appname
	push	edx
	push	OFFSET $SG90598
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _dp+44, eax
; Line 685
	mov	eax, DWORD PTR _conf
	mov	DWORD PTR _dp+48, eax
; Line 686
	push	OFFSET _dp
	call	_dlg_auto_set_fixed_pitch_flag
	add	esp, 4
; Line 687
	mov	BYTE PTR _dp+163, 1
; Line 690
	push	OFFSET _GenericMainDlgProc@16
	push	0
	push	102					; 00000066H
	mov	ecx, DWORD PTR _hinst
	push	ecx
	call	_SaneDialogBox
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ret$[ebp], eax
; Line 692
	mov	edx, DWORD PTR _ctrlbox
	push	edx
	call	_ctrl_free_box
	add	esp, 4
; Line 693
	push	OFFSET _ctrls_base
	call	_winctrl_cleanup
	add	esp, 4
; Line 694
	push	OFFSET _ctrls_panel
	call	_winctrl_cleanup
	add	esp, 4
; Line 695
	push	OFFSET _dp
	call	_dp_cleanup
	add	esp, 4
; Line 697
	cmp	DWORD PTR _ret$[ebp], 0
	jne	SHORT $LN1@do_reconfi
; Line 698
	mov	eax, DWORD PTR _backup_conf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _conf
	push	ecx
	call	_conf_copy_into
	add	esp, 8
$LN1@do_reconfi:
; Line 700
	mov	edx, DWORD PTR _backup_conf$[ebp]
	push	edx
	call	_conf_free
	add	esp, 4
; Line 702
	mov	eax, DWORD PTR _ret$[ebp]
; Line 703
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_do_reconfig ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_logevent
EXTRN	__imp__SendDlgItemMessageA@20:PROC
EXTRN	_logbox:DWORD
EXTRN	_strcat:PROC
EXTRN	_strcpy:PROC
EXTRN	_safemalloc:PROC
EXTRN	_strftime:PROC
EXTRN	_ltime:PROC
EXTRN	_saferealloc:PROC
EXTRN	_log_eventlog:PROC
EXTRN	_logctx:DWORD
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T90851 = -136						; size = 36
_count$90619 = -100					; size = 4
_tm$ = -92						; size = 36
_timebuf$ = -48						; size = 40
__$ArrayPad$ = -4					; size = 4
_frontend$ = 8						; size = 4
_string$ = 12						; size = 4
_logevent PROC
; Line 706
	push	ebp
	mov	ebp, esp
	sub	esp, 136				; 00000088H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-136]
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 710
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	mov	ecx, DWORD PTR _logctx
	push	ecx
	call	_log_eventlog
	add	esp, 8
; Line 712
	mov	edx, DWORD PTR _nevents
	cmp	edx, DWORD PTR _negsize
	jl	SHORT $LN2@logevent
; Line 713
	mov	eax, DWORD PTR _negsize
	add	eax, 64					; 00000040H
	mov	DWORD PTR _negsize, eax
; Line 714
	push	4
	mov	ecx, DWORD PTR _negsize
	push	ecx
	mov	edx, DWORD PTR _events
	push	edx
	call	_saferealloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _events, eax
$LN2@logevent:
; Line 717
	lea	eax, DWORD PTR $T90851[ebp]
	push	eax
	call	_ltime
	add	esp, 4
	mov	ecx, 9
	mov	esi, eax
	lea	edi, DWORD PTR _tm$[ebp]
	rep movsd
; Line 718
	lea	ecx, DWORD PTR _tm$[ebp]
	push	ecx
	push	OFFSET $SG90615
	push	40					; 00000028H
	lea	edx, DWORD PTR _timebuf$[ebp]
	push	edx
	call	_strftime
	add	esp, 16					; 00000010H
; Line 720
	push	1
	lea	eax, DWORD PTR _timebuf$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _string$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	lea	edx, DWORD PTR [esi+eax+1]
	push	edx
	call	_safemalloc
	add	esp, 8
	mov	ecx, DWORD PTR _nevents
	mov	edx, DWORD PTR _events
	mov	DWORD PTR [edx+ecx*4], eax
; Line 721
	lea	eax, DWORD PTR _timebuf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nevents
	mov	edx, DWORD PTR _events
	mov	eax, DWORD PTR [edx+ecx*4]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 722
	mov	ecx, DWORD PTR _string$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nevents
	mov	eax, DWORD PTR _events
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 723
	cmp	DWORD PTR _logbox, 0
	je	$LN1@logevent
; Line 726
	mov	esi, esp
	mov	edx, DWORD PTR _nevents
	mov	eax, DWORD PTR _events
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	push	0
	push	384					; 00000180H
	push	1001					; 000003e9H
	mov	edx, DWORD PTR _logbox
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 727
	mov	esi, esp
	push	0
	push	0
	push	395					; 0000018bH
	push	1001					; 000003e9H
	mov	eax, DWORD PTR _logbox
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _count$90619[ebp], eax
; Line 728
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _count$90619[ebp]
	sub	ecx, 1
	push	ecx
	push	407					; 00000197H
	push	1001					; 000003e9H
	mov	edx, DWORD PTR _logbox
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@logevent:
; Line 730
	mov	eax, DWORD PTR _nevents
	add	eax, 1
	mov	DWORD PTR _nevents, eax
; Line 731
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@logevent
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 136				; 00000088H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN8@logevent:
	DD	2
	DD	$LN7@logevent
$LN7@logevent:
	DD	-48					; ffffffd0H
	DD	40					; 00000028H
	DD	$LN5@logevent
	DD	-92					; ffffffa4H
	DD	36					; 00000024H
	DD	$LN6@logevent
$LN6@logevent:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	0
$LN5@logevent:
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_logevent ENDP
_TEXT	ENDS
PUBLIC	_showeventlog
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_showeventlog PROC
; Line 734
	push	ebp
	mov	ebp, esp
	push	esi
; Line 735
	cmp	DWORD PTR _logbox, 0
	jne	SHORT $LN1@showeventl
; Line 737
	mov	esi, esp
	push	0
	push	OFFSET _LogProc@16
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	push	110					; 0000006eH
	mov	ecx, DWORD PTR _hinst
	push	ecx
	call	DWORD PTR __imp__CreateDialogParamA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _logbox, eax
; Line 738
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR _logbox
	push	edx
	call	DWORD PTR __imp__ShowWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@showeventl:
; Line 740
	mov	esi, esp
	mov	eax, DWORD PTR _logbox
	push	eax
	call	DWORD PTR __imp__SetActiveWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 741
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_showeventlog ENDP
_TEXT	ENDS
EXTRN	_write_aclip:PROC
EXTRN	_memcpy:PROC
EXTRN	__imp__GetParent@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv88 = -52						; size = 4
tv64 = -48						; size = 4
_qlen$90258 = -44					; size = 4
_q$90257 = -40						; size = 4
_p$90253 = -36						; size = 4
_clipdata$90243 = -32					; size = 4
_size$90242 = -28					; size = 4
_i$90241 = -24						; size = 4
_count$90239 = -20					; size = 4
_selitems$90234 = -16					; size = 4
_selcount$90233 = -12					; size = 4
_str$90208 = -8						; size = 4
_i$ = -4						; size = 4
_hwnd$ = 8						; size = 4
_msg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
_LogProc@16 PROC
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 74
	mov	eax, DWORD PTR _msg$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 16			; 00000010H
	je	$LN1@LogProc
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN25@LogProc
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	$LN21@LogProc
	jmp	$LN26@LogProc
$LN25@LogProc:
; Line 77
	mov	ecx, DWORD PTR _appname
	push	ecx
	push	OFFSET $SG90209
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _str$90208[ebp], eax
; Line 78
	mov	esi, esp
	mov	edx, DWORD PTR _str$90208[ebp]
	push	edx
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SetWindowTextA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 79
	mov	ecx, DWORD PTR _str$90208[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 84
	mov	esi, esp
	push	OFFSET ?tabs@?4??LogProc@@9@9
	push	2
	push	402					; 00000192H
	push	1001					; 000003e9H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 86
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN24@LogProc
$LN23@LogProc:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN24@LogProc:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _nevents
	jge	SHORT $LN22@LogProc
; Line 88
	mov	esi, esp
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _events
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	push	0
	push	384					; 00000180H
	push	1001					; 000003e9H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN23@LogProc
$LN22@LogProc:
; Line 89
	mov	eax, 1
	jmp	$LN28@LogProc
$LN21@LogProc:
; Line 91
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	mov	DWORD PTR tv88[ebp], ecx
	cmp	DWORD PTR tv88[ebp], 0
	jle	$LN19@LogProc
	cmp	DWORD PTR tv88[ebp], 2
	jle	SHORT $LN18@LogProc
	cmp	DWORD PTR tv88[ebp], 1002		; 000003eaH
	je	SHORT $LN17@LogProc
	jmp	$LN19@LogProc
$LN18@LogProc:
; Line 94
	mov	DWORD PTR _logbox, 0
; Line 95
	mov	esi, esp
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetParent@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__SetActiveWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 96
	mov	esi, esp
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__DestroyWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 97
	xor	eax, eax
	jmp	$LN28@LogProc
$LN17@LogProc:
; Line 100
	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	test	edx, edx
	je	SHORT $LN15@LogProc
	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 5
	jne	$LN16@LogProc
$LN15@LogProc:
; Line 104
	mov	esi, esp
	push	0
	push	0
	push	400					; 00000190H
	push	1001					; 000003e9H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _selcount$90233[ebp], eax
; Line 105
	cmp	DWORD PTR _selcount$90233[ebp], 0
	jne	SHORT $LN14@LogProc
; Line 106
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__MessageBeep@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 107
	jmp	$LN19@LogProc
$LN14@LogProc:
; Line 110
	push	4
	mov	eax, DWORD PTR _selcount$90233[ebp]
	push	eax
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _selitems$90234[ebp], eax
; Line 111
	cmp	DWORD PTR _selitems$90234[ebp], 0
	je	$LN16@LogProc
; Line 115
	mov	esi, esp
	mov	ecx, DWORD PTR _selitems$90234[ebp]
	push	ecx
	mov	edx, DWORD PTR _selcount$90233[ebp]
	push	edx
	push	401					; 00000191H
	push	1001					; 000003e9H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _count$90239[ebp], eax
; Line 121
	cmp	DWORD PTR _count$90239[ebp], 0
	jne	SHORT $LN12@LogProc
; Line 122
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__MessageBeep@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 123
	jmp	$LN19@LogProc
$LN12@LogProc:
; Line 126
	mov	DWORD PTR _size$90242[ebp], 0
; Line 127
	mov	DWORD PTR _i$90241[ebp], 0
	jmp	SHORT $LN11@LogProc
$LN10@LogProc:
	mov	ecx, DWORD PTR _i$90241[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$90241[ebp], ecx
$LN11@LogProc:
	mov	edx, DWORD PTR _i$90241[ebp]
	cmp	edx, DWORD PTR _count$90239[ebp]
	jge	SHORT $LN9@LogProc
; Line 129
	mov	eax, DWORD PTR _i$90241[ebp]
	mov	ecx, DWORD PTR _selitems$90234[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _events
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	edx, DWORD PTR _size$90242[ebp]
	lea	eax, DWORD PTR [edx+eax+2]
	mov	DWORD PTR _size$90242[ebp], eax
	jmp	SHORT $LN10@LogProc
$LN9@LogProc:
; Line 131
	push	1
	mov	ecx, DWORD PTR _size$90242[ebp]
	push	ecx
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _clipdata$90243[ebp], eax
; Line 132
	cmp	DWORD PTR _clipdata$90243[ebp], 0
	je	$LN8@LogProc
; Line 133
	mov	edx, DWORD PTR _clipdata$90243[ebp]
	mov	DWORD PTR _p$90253[ebp], edx
; Line 134
	mov	DWORD PTR _i$90241[ebp], 0
	jmp	SHORT $LN7@LogProc
$LN6@LogProc:
	mov	eax, DWORD PTR _i$90241[ebp]
	add	eax, 1
	mov	DWORD PTR _i$90241[ebp], eax
$LN7@LogProc:
	mov	ecx, DWORD PTR _i$90241[ebp]
	cmp	ecx, DWORD PTR _count$90239[ebp]
	jge	SHORT $LN5@LogProc
; Line 135
	mov	edx, DWORD PTR _i$90241[ebp]
	mov	eax, DWORD PTR _selitems$90234[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR _events
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _q$90257[ebp], eax
; Line 136
	mov	ecx, DWORD PTR _q$90257[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _qlen$90258[ebp], eax
; Line 137
	mov	edx, DWORD PTR _qlen$90258[ebp]
	push	edx
	mov	eax, DWORD PTR _q$90257[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$90253[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 138
	mov	edx, DWORD PTR _p$90253[ebp]
	add	edx, DWORD PTR _qlen$90258[ebp]
	mov	DWORD PTR _p$90253[ebp], edx
; Line 139
	push	2
	push	OFFSET ?sel_nl@?8??LogProc@@9@9
	mov	eax, DWORD PTR _p$90253[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 140
	mov	ecx, DWORD PTR _p$90253[ebp]
	add	ecx, 2
	mov	DWORD PTR _p$90253[ebp], ecx
; Line 141
	jmp	SHORT $LN6@LogProc
$LN5@LogProc:
; Line 142
	push	1
	mov	edx, DWORD PTR _size$90242[ebp]
	push	edx
	mov	eax, DWORD PTR _clipdata$90243[ebp]
	push	eax
	push	0
	call	_write_aclip
	add	esp, 16					; 00000010H
; Line 143
	mov	ecx, DWORD PTR _clipdata$90243[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
$LN8@LogProc:
; Line 145
	mov	edx, DWORD PTR _selitems$90234[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 147
	mov	DWORD PTR _i$90241[ebp], 0
	jmp	SHORT $LN4@LogProc
$LN3@LogProc:
	mov	eax, DWORD PTR _i$90241[ebp]
	add	eax, 1
	mov	DWORD PTR _i$90241[ebp], eax
$LN4@LogProc:
	mov	ecx, DWORD PTR _i$90241[ebp]
	cmp	ecx, DWORD PTR _nevents
	jge	SHORT $LN16@LogProc
; Line 149
	mov	esi, esp
	mov	edx, DWORD PTR _i$90241[ebp]
	push	edx
	push	0
	push	389					; 00000185H
	push	1001					; 000003e9H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN3@LogProc
$LN16@LogProc:
; Line 152
	xor	eax, eax
	jmp	SHORT $LN28@LogProc
$LN19@LogProc:
; Line 154
	xor	eax, eax
	jmp	SHORT $LN28@LogProc
$LN1@LogProc:
; Line 156
	mov	DWORD PTR _logbox, 0
; Line 157
	mov	esi, esp
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetParent@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__SetActiveWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 158
	mov	esi, esp
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__DestroyWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 159
	xor	eax, eax
	jmp	SHORT $LN28@LogProc
$LN26@LogProc:
; Line 161
	xor	eax, eax
$LN28@LogProc:
; Line 162
	pop	edi
	pop	esi
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_LogProc@16 ENDP
_TEXT	ENDS
PUBLIC	_showabout
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_showabout PROC
; Line 744
	push	ebp
	mov	ebp, esp
	push	esi
; Line 745
	mov	esi, esp
	push	0
	push	OFFSET _AboutProc@16
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	push	111					; 0000006fH
	mov	ecx, DWORD PTR _hinst
	push	ecx
	call	DWORD PTR __imp__DialogBoxParamA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 746
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_showabout ENDP
_TEXT	ENDS
PUBLIC	_verify_ssh_host_key
EXTRN	_store_host_key:PROC
EXTRN	_message_box:PROC
EXTRN	_verify_host_key:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_caption$90678 = -28					; size = 4
_text$90677 = -24					; size = 4
_mbret$90676 = -20					; size = 4
_caption$90667 = -16					; size = 4
_text$90666 = -12					; size = 4
_mbret$90665 = -8					; size = 4
_ret$ = -4						; size = 4
_frontend$ = 8						; size = 4
_host$ = 12						; size = 4
_port$ = 16						; size = 4
_keytype$ = 20						; size = 4
_keystr$ = 24						; size = 4
_fingerprint$ = 28					; size = 4
_callback$ = 32						; size = 4
_ctx$ = 36						; size = 4
_verify_ssh_host_key PROC
; Line 751
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 789
	mov	eax, DWORD PTR _keystr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _keytype$[ebp]
	push	ecx
	mov	edx, DWORD PTR _port$[ebp]
	push	edx
	mov	eax, DWORD PTR _host$[ebp]
	push	eax
	call	_verify_host_key
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ret$[ebp], eax
; Line 791
	cmp	DWORD PTR _ret$[ebp], 0
	jne	SHORT $LN11@verify_ssh
; Line 792
	mov	eax, 1
	jmp	$LN12@verify_ssh
	jmp	$LN10@verify_ssh
$LN11@verify_ssh:
; Line 793
	cmp	DWORD PTR _ret$[ebp], 2
	jne	$LN9@verify_ssh
; Line 796
	mov	ecx, DWORD PTR _appname
	push	ecx
	mov	edx, DWORD PTR _fingerprint$[ebp]
	push	edx
	mov	eax, DWORD PTR _keytype$[ebp]
	push	eax
	mov	ecx, DWORD PTR _appname
	push	ecx
	push	OFFSET ?wrongmsg@?1??verify_ssh_host_key@@9@9
	call	_dupprintf
	add	esp, 20					; 00000014H
	mov	DWORD PTR _text$90666[ebp], eax
; Line 797
	mov	edx, DWORD PTR _appname
	push	edx
	push	OFFSET ?mbtitle@?1??verify_ssh_host_key@@9@9
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _caption$90667[ebp], eax
; Line 800
	push	2
	push	563					; 00000233H
	mov	eax, DWORD PTR _caption$90667[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$90666[ebp]
	push	ecx
	call	_message_box
	add	esp, 16					; 00000010H
	mov	DWORD PTR _mbret$90665[ebp], eax
; Line 801
	cmp	DWORD PTR _mbret$90665[ebp], 6
	je	SHORT $LN14@verify_ssh
	cmp	DWORD PTR _mbret$90665[ebp], 7
	je	SHORT $LN14@verify_ssh
	cmp	DWORD PTR _mbret$90665[ebp], 2
	je	SHORT $LN14@verify_ssh
	push	801					; 00000321H
	push	OFFSET $SG90669
	push	OFFSET $SG90670
	call	__wassert
	add	esp, 12					; 0000000cH
$LN14@verify_ssh:
; Line 802
	mov	eax, DWORD PTR _text$90666[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 803
	mov	ecx, DWORD PTR _caption$90667[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 804
	cmp	DWORD PTR _mbret$90665[ebp], 6
	jne	SHORT $LN8@verify_ssh
; Line 805
	mov	edx, DWORD PTR _keystr$[ebp]
	push	edx
	mov	eax, DWORD PTR _keytype$[ebp]
	push	eax
	mov	ecx, DWORD PTR _port$[ebp]
	push	ecx
	mov	edx, DWORD PTR _host$[ebp]
	push	edx
	call	_store_host_key
	add	esp, 16					; 00000010H
; Line 806
	mov	eax, 1
	jmp	$LN12@verify_ssh
	jmp	SHORT $LN7@verify_ssh
$LN8@verify_ssh:
; Line 807
	cmp	DWORD PTR _mbret$90665[ebp], 7
	jne	SHORT $LN7@verify_ssh
; Line 808
	mov	eax, 1
	jmp	$LN12@verify_ssh
$LN7@verify_ssh:
; Line 809
	jmp	$LN10@verify_ssh
$LN9@verify_ssh:
	cmp	DWORD PTR _ret$[ebp], 1
	jne	$LN10@verify_ssh
; Line 811
	mov	eax, DWORD PTR _appname
	push	eax
	mov	ecx, DWORD PTR _fingerprint$[ebp]
	push	ecx
	mov	edx, DWORD PTR _keytype$[ebp]
	push	edx
	push	OFFSET ?absentmsg@?1??verify_ssh_host_key@@9@9
	call	_dupprintf
	add	esp, 16					; 00000010H
	mov	DWORD PTR _text$90677[ebp], eax
; Line 812
	mov	eax, DWORD PTR _appname
	push	eax
	push	OFFSET ?mbtitle@?1??verify_ssh_host_key@@9@9
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _caption$90678[ebp], eax
; Line 815
	push	1
	push	563					; 00000233H
	mov	ecx, DWORD PTR _caption$90678[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$90677[ebp]
	push	edx
	call	_message_box
	add	esp, 16					; 00000010H
	mov	DWORD PTR _mbret$90676[ebp], eax
; Line 816
	cmp	DWORD PTR _mbret$90676[ebp], 6
	je	SHORT $LN15@verify_ssh
	cmp	DWORD PTR _mbret$90676[ebp], 7
	je	SHORT $LN15@verify_ssh
	cmp	DWORD PTR _mbret$90676[ebp], 2
	je	SHORT $LN15@verify_ssh
	push	816					; 00000330H
	push	OFFSET $SG90680
	push	OFFSET $SG90681
	call	__wassert
	add	esp, 12					; 0000000cH
$LN15@verify_ssh:
; Line 817
	mov	ecx, DWORD PTR _text$90677[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 818
	mov	edx, DWORD PTR _caption$90678[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 819
	cmp	DWORD PTR _mbret$90676[ebp], 6
	jne	SHORT $LN3@verify_ssh
; Line 820
	mov	eax, DWORD PTR _keystr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _keytype$[ebp]
	push	ecx
	mov	edx, DWORD PTR _port$[ebp]
	push	edx
	mov	eax, DWORD PTR _host$[ebp]
	push	eax
	call	_store_host_key
	add	esp, 16					; 00000010H
; Line 821
	mov	eax, 1
	jmp	SHORT $LN12@verify_ssh
	jmp	SHORT $LN10@verify_ssh
$LN3@verify_ssh:
; Line 822
	cmp	DWORD PTR _mbret$90676[ebp], 7
	jne	SHORT $LN10@verify_ssh
; Line 823
	mov	eax, 1
	jmp	SHORT $LN12@verify_ssh
$LN10@verify_ssh:
; Line 825
	xor	eax, eax
$LN12@verify_ssh:
; Line 826
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_verify_ssh_host_key ENDP
_TEXT	ENDS
PUBLIC	_askalg
EXTRN	_socket_reselect_all:PROC
EXTRN	__imp__MessageBoxA@16:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_mbret$ = -12						; size = 4
_title$ = -8						; size = 4
_message$ = -4						; size = 4
_frontend$ = 8						; size = 4
_algtype$ = 12						; size = 4
_algname$ = 16						; size = 4
_callback$ = 20						; size = 4
_ctx$ = 24						; size = 4
_askalg	PROC
; Line 834
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 844
	mov	eax, DWORD PTR _algname$[ebp]
	push	eax
	mov	ecx, DWORD PTR _algtype$[ebp]
	push	ecx
	push	OFFSET ?msg@?1??askalg@@9@9
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _message$[ebp], eax
; Line 845
	mov	edx, DWORD PTR _appname
	push	edx
	push	OFFSET ?mbtitle@?1??askalg@@9@9
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _title$[ebp], eax
; Line 847
	mov	esi, esp
	push	308					; 00000134H
	mov	eax, DWORD PTR _title$[ebp]
	push	eax
	mov	ecx, DWORD PTR _message$[ebp]
	push	ecx
	push	0
	call	DWORD PTR __imp__MessageBoxA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _mbret$[ebp], eax
; Line 848
	call	_socket_reselect_all
; Line 849
	mov	edx, DWORD PTR _message$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 850
	mov	eax, DWORD PTR _title$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 851
	cmp	DWORD PTR _mbret$[ebp], 6
	jne	SHORT $LN2@askalg
; Line 852
	mov	eax, 1
	jmp	SHORT $LN3@askalg
; Line 853
	jmp	SHORT $LN3@askalg
$LN2@askalg:
; Line 854
	xor	eax, eax
$LN3@askalg:
; Line 855
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_askalg	ENDP
_TEXT	ENDS
PUBLIC	_askappend
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_mbret$ = -12						; size = 4
_mbtitle$ = -8						; size = 4
_message$ = -4						; size = 4
_frontend$ = 8						; size = 4
_filename$ = 12						; size = 4
_callback$ = 16						; size = 4
_ctx$ = 20						; size = 4
_askappend PROC
; Line 863
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 875
	mov	eax, DWORD PTR _filename$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	260					; 00000104H
	push	OFFSET ?msgtemplate@?1??askappend@@9@9
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _message$[ebp], eax
; Line 876
	mov	edx, DWORD PTR _appname
	push	edx
	push	OFFSET $SG90728
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _mbtitle$[ebp], eax
; Line 879
	mov	esi, esp
	push	547					; 00000223H
	mov	eax, DWORD PTR _mbtitle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _message$[ebp]
	push	ecx
	push	0
	call	DWORD PTR __imp__MessageBoxA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _mbret$[ebp], eax
; Line 881
	call	_socket_reselect_all
; Line 883
	mov	edx, DWORD PTR _message$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 884
	mov	eax, DWORD PTR _mbtitle$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 886
	cmp	DWORD PTR _mbret$[ebp], 6
	jne	SHORT $LN4@askappend
; Line 887
	mov	eax, 2
	jmp	SHORT $LN5@askappend
	jmp	SHORT $LN5@askappend
$LN4@askappend:
; Line 888
	cmp	DWORD PTR _mbret$[ebp], 7
	jne	SHORT $LN2@askappend
; Line 889
	mov	eax, 1
	jmp	SHORT $LN5@askappend
; Line 890
	jmp	SHORT $LN5@askappend
$LN2@askappend:
; Line 891
	xor	eax, eax
$LN5@askappend:
; Line 892
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_askappend ENDP
_TEXT	ENDS
PUBLIC	_old_keyfile_warning
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_title$ = -8						; size = 4
_msg$ = -4						; size = 4
_old_keyfile_warning PROC
; Line 905
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 919
	mov	eax, DWORD PTR _appname
	push	eax
	push	OFFSET ?message@?1??old_keyfile_warning@@9@9
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _msg$[ebp], eax
; Line 920
	mov	ecx, DWORD PTR _appname
	push	ecx
	push	OFFSET ?mbtitle@?1??old_keyfile_warning@@9@9
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _title$[ebp], eax
; Line 922
	mov	esi, esp
	push	0
	mov	edx, DWORD PTR _title$[ebp]
	push	edx
	mov	eax, DWORD PTR _msg$[ebp]
	push	eax
	push	0
	call	DWORD PTR __imp__MessageBoxA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 924
	call	_socket_reselect_all
; Line 926
	mov	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 927
	mov	edx, DWORD PTR _title$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
; Line 928
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_old_keyfile_warning ENDP
_TEXT	ENDS
END

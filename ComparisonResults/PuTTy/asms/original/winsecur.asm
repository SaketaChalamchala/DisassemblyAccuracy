; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\Putty\windows\winsecur.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_p_CryptProtectMemory:DWORD
COMM	_p_InitializeSecurityDescriptor:DWORD
COMM	_p_GetTokenInformation:DWORD
COMM	_p_OpenProcessToken:DWORD
COMM	_p_GetSecurityInfo:DWORD
COMM	_p_SetSecurityDescriptorOwner:DWORD
COMM	_p_SetEntriesInAclA:DWORD
_DATA	ENDS
_BSS	SEGMENT
?attempted@?1??got_advapi@@9@9 DD 01H DUP (?)		; `got_advapi'::`2'::attempted
?attempted@?1??got_crypt@@9@9 DD 01H DUP (?)		; `got_crypt'::`2'::attempted
_BSS	ENDS
_DATA	SEGMENT
$SG86400 DB	'advapi32.dll', 00H
	ORG $+3
$SG86413 DB	'GetSecurityInfo', 00H
$SG86414 DB	'OpenProcessToken', 00H
	ORG $+3
$SG86415 DB	'GetTokenInformation', 00H
$SG86416 DB	'InitializeSecurityDescriptor', 00H
	ORG $+3
$SG86417 DB	'SetSecurityDescriptorOwner', 00H
	ORG $+1
$SG86418 DB	'SetEntriesInAclA', 00H
	ORG $+3
$SG86428 DB	'crypt32.dll', 00H
$SG86431 DB	'CryptProtectMemory', 00H
	ORG $+1
$SG86492 DB	'unable to load advapi32.dll', 00H
$SG86497 DB	'unable to construct SID for current user: %s', 00H
	ORG $+3
$SG86500 DB	'unable to construct SID for world: %s', 00H
	ORG $+2
$SG86503 DB	'unable to construct SID for local same-user access only:'
	DB	' %s', 00H
$SG86511 DB	'unable to construct ACL: %s', 00H
$SG86515 DB	'unable to allocate security descriptor: %s', 00H
	ORG $+1
$SG86517 DB	'unable to initialise security descriptor: %s', 00H
	ORG $+3
$SG86519 DB	'unable to set owner in security descriptor: %s', 00H
	ORG $+1
$SG86521 DB	'unable to set DACL in security descriptor: %s', 00H
_DATA	ENDS
PUBLIC	_got_advapi
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	_load_system32_dll:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
_BSS	SEGMENT
?successful@?1??got_advapi@@9@9 DD 01H DUP (?)		; `got_advapi'::`2'::successful
?advapi@?1??got_advapi@@9@9 DD 01H DUP (?)		; `got_advapi'::`2'::advapi
_BSS	ENDS
;	COMDAT rtc$TMZ
; File c:\workspace\putty\windows\winsecur.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv136 = -28						; size = 4
tv134 = -24						; size = 4
tv128 = -20						; size = 4
tv90 = -16						; size = 4
tv84 = -12						; size = 4
tv78 = -8						; size = 4
tv71 = -4						; size = 4
_got_advapi PROC
; Line 16
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 21
	cmp	DWORD PTR ?attempted@?1??got_advapi@@9@9, 0
	jne	$LN1@got_advapi
; Line 22
	mov	DWORD PTR ?attempted@?1??got_advapi@@9@9, 1
; Line 23
	push	OFFSET $SG86400
	call	_load_system32_dll
	add	esp, 4
	mov	DWORD PTR ?advapi@?1??got_advapi@@9@9, eax
; Line 30
	cmp	DWORD PTR ?advapi@?1??got_advapi@@9@9, 0
	je	$LN6@got_advapi
	cmp	DWORD PTR ?advapi@?1??got_advapi@@9@9, 0
	je	SHORT $LN4@got_advapi
	mov	esi, esp
	push	OFFSET $SG86413
	mov	eax, DWORD PTR ?advapi@?1??got_advapi@@9@9
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN5@got_advapi
$LN4@got_advapi:
	mov	DWORD PTR tv71[ebp], 0
$LN5@got_advapi:
	mov	ecx, DWORD PTR tv71[ebp]
	mov	DWORD PTR _p_GetSecurityInfo, ecx
	cmp	DWORD PTR _p_GetSecurityInfo, 0
	je	$LN6@got_advapi
	cmp	DWORD PTR ?advapi@?1??got_advapi@@9@9, 0
	je	SHORT $LN7@got_advapi
	mov	esi, esp
	push	OFFSET $SG86414
	mov	edx, DWORD PTR ?advapi@?1??got_advapi@@9@9
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN8@got_advapi
$LN7@got_advapi:
	mov	DWORD PTR tv78[ebp], 0
$LN8@got_advapi:
	mov	eax, DWORD PTR tv78[ebp]
	mov	DWORD PTR _p_OpenProcessToken, eax
	cmp	DWORD PTR _p_OpenProcessToken, 0
	je	$LN6@got_advapi
	cmp	DWORD PTR ?advapi@?1??got_advapi@@9@9, 0
	je	SHORT $LN9@got_advapi
	mov	esi, esp
	push	OFFSET $SG86415
	mov	ecx, DWORD PTR ?advapi@?1??got_advapi@@9@9
	push	ecx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN10@got_advapi
$LN9@got_advapi:
	mov	DWORD PTR tv84[ebp], 0
$LN10@got_advapi:
	mov	edx, DWORD PTR tv84[ebp]
	mov	DWORD PTR _p_GetTokenInformation, edx
	cmp	DWORD PTR _p_GetTokenInformation, 0
	je	$LN6@got_advapi
	cmp	DWORD PTR ?advapi@?1??got_advapi@@9@9, 0
	je	SHORT $LN11@got_advapi
	mov	esi, esp
	push	OFFSET $SG86416
	mov	eax, DWORD PTR ?advapi@?1??got_advapi@@9@9
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN12@got_advapi
$LN11@got_advapi:
	mov	DWORD PTR tv90[ebp], 0
$LN12@got_advapi:
	mov	ecx, DWORD PTR tv90[ebp]
	mov	DWORD PTR _p_InitializeSecurityDescriptor, ecx
	cmp	DWORD PTR _p_InitializeSecurityDescriptor, 0
	je	$LN6@got_advapi
	cmp	DWORD PTR ?advapi@?1??got_advapi@@9@9, 0
	je	SHORT $LN13@got_advapi
	mov	esi, esp
	push	OFFSET $SG86417
	mov	edx, DWORD PTR ?advapi@?1??got_advapi@@9@9
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN14@got_advapi
$LN13@got_advapi:
	mov	DWORD PTR tv128[ebp], 0
$LN14@got_advapi:
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR _p_SetSecurityDescriptorOwner, eax
	cmp	DWORD PTR _p_SetSecurityDescriptorOwner, 0
	je	SHORT $LN6@got_advapi
	cmp	DWORD PTR ?advapi@?1??got_advapi@@9@9, 0
	je	SHORT $LN15@got_advapi
	mov	esi, esp
	push	OFFSET $SG86418
	mov	ecx, DWORD PTR ?advapi@?1??got_advapi@@9@9
	push	ecx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN16@got_advapi
$LN15@got_advapi:
	mov	DWORD PTR tv134[ebp], 0
$LN16@got_advapi:
	mov	edx, DWORD PTR tv134[ebp]
	mov	DWORD PTR _p_SetEntriesInAclA, edx
	cmp	DWORD PTR _p_SetEntriesInAclA, 0
	je	SHORT $LN6@got_advapi
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN17@got_advapi
$LN6@got_advapi:
	mov	DWORD PTR tv136[ebp], 0
$LN17@got_advapi:
	mov	eax, DWORD PTR tv136[ebp]
	mov	DWORD PTR ?successful@?1??got_advapi@@9@9, eax
$LN1@got_advapi:
; Line 32
	mov	eax, DWORD PTR ?successful@?1??got_advapi@@9@9
; Line 33
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_got_advapi ENDP
_TEXT	ENDS
PUBLIC	_got_crypt
_BSS	SEGMENT
?successful@?1??got_crypt@@9@9 DD 01H DUP (?)		; `got_crypt'::`2'::successful
?crypt@?1??got_crypt@@9@9 DD 01H DUP (?)		; `got_crypt'::`2'::crypt
; Function compile flags: /Odtp /RTCsu
_BSS	ENDS
_TEXT	SEGMENT
tv74 = -8						; size = 4
tv71 = -4						; size = 4
_got_crypt PROC
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 41
	cmp	DWORD PTR ?attempted@?1??got_crypt@@9@9, 0
	jne	SHORT $LN1@got_crypt
; Line 42
	mov	DWORD PTR ?attempted@?1??got_crypt@@9@9, 1
; Line 43
	push	OFFSET $SG86428
	call	_load_system32_dll
	add	esp, 4
	mov	DWORD PTR ?crypt@?1??got_crypt@@9@9, eax
; Line 45
	cmp	DWORD PTR ?crypt@?1??got_crypt@@9@9, 0
	je	SHORT $LN6@got_crypt
	cmp	DWORD PTR ?crypt@?1??got_crypt@@9@9, 0
	je	SHORT $LN4@got_crypt
	mov	esi, esp
	push	OFFSET $SG86431
	mov	eax, DWORD PTR ?crypt@?1??got_crypt@@9@9
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN5@got_crypt
$LN4@got_crypt:
	mov	DWORD PTR tv71[ebp], 0
$LN5@got_crypt:
	mov	ecx, DWORD PTR tv71[ebp]
	mov	DWORD PTR _p_CryptProtectMemory, ecx
	cmp	DWORD PTR _p_CryptProtectMemory, 0
	je	SHORT $LN6@got_crypt
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN7@got_crypt
$LN6@got_crypt:
	mov	DWORD PTR tv74[ebp], 0
$LN7@got_crypt:
	mov	edx, DWORD PTR tv74[ebp]
	mov	DWORD PTR ?successful@?1??got_crypt@@9@9, edx
$LN1@got_crypt:
; Line 47
	mov	eax, DWORD PTR ?successful@?1??got_crypt@@9@9
; Line 48
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_got_crypt ENDP
_TEXT	ENDS
PUBLIC	_get_user_sid
EXTRN	_safefree:PROC
EXTRN	__imp__LocalFree@4:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__CopySid@12:PROC
EXTRN	_safemalloc:PROC
EXTRN	__imp__GetLengthSid@4:PROC
EXTRN	__imp__LocalAlloc@8:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__OpenProcess@12:PROC
EXTRN	__imp__GetCurrentProcessId@0:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ret$ = -44						; size = 4
_sid$ = -40						; size = 4
_sidlen$ = -36						; size = 4
_toklen$ = -28						; size = 4
_user$ = -20						; size = 4
_tok$ = -12						; size = 4
_proc$ = -4						; size = 4
_get_user_sid PROC
; Line 51
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-44]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 52
	mov	DWORD PTR _proc$[ebp], 0
	mov	DWORD PTR _tok$[ebp], 0
; Line 53
	mov	DWORD PTR _user$[ebp], 0
; Line 55
	mov	DWORD PTR _sid$[ebp], 0
	mov	DWORD PTR _ret$[ebp], 0
; Line 57
	call	_got_advapi
	test	eax, eax
	jne	SHORT $LN11@get_user_s
; Line 58
	jmp	$cleanup$86447
$LN11@get_user_s:
; Line 61
	mov	esi, esp
	call	DWORD PTR __imp__GetCurrentProcessId@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	push	0
	push	33554432				; 02000000H
	call	DWORD PTR __imp__OpenProcess@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _proc$[ebp], eax
	cmp	DWORD PTR _proc$[ebp], 0
	jne	SHORT $LN10@get_user_s
; Line 62
	jmp	$cleanup$86447
$LN10@get_user_s:
; Line 64
	mov	esi, esp
	lea	eax, DWORD PTR _tok$[ebp]
	push	eax
	push	8
	mov	ecx, DWORD PTR _proc$[ebp]
	push	ecx
	call	DWORD PTR _p_OpenProcessToken
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN9@get_user_s
; Line 65
	jmp	$cleanup$86447
$LN9@get_user_s:
; Line 68
	mov	esi, esp
	lea	edx, DWORD PTR _toklen$[ebp]
	push	edx
	push	0
	push	0
	push	1
	mov	eax, DWORD PTR _tok$[ebp]
	push	eax
	call	DWORD PTR _p_GetTokenInformation
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN8@get_user_s
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 122				; 0000007aH
	je	SHORT $LN8@get_user_s
; Line 69
	jmp	$cleanup$86447
$LN8@get_user_s:
; Line 71
	mov	esi, esp
	mov	ecx, DWORD PTR _toklen$[ebp]
	push	ecx
	push	64					; 00000040H
	call	DWORD PTR __imp__LocalAlloc@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _user$[ebp], eax
	cmp	DWORD PTR _user$[ebp], 0
	jne	SHORT $LN7@get_user_s
; Line 72
	jmp	$cleanup$86447
$LN7@get_user_s:
; Line 74
	mov	esi, esp
	lea	edx, DWORD PTR _toklen$[ebp]
	push	edx
	mov	eax, DWORD PTR _toklen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _user$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _tok$[ebp]
	push	edx
	call	DWORD PTR _p_GetTokenInformation
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN6@get_user_s
; Line 75
	jmp	SHORT $cleanup$86447
$LN6@get_user_s:
; Line 77
	mov	esi, esp
	mov	eax, DWORD PTR _user$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__GetLengthSid@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sidlen$[ebp], eax
; Line 79
	push	1
	mov	edx, DWORD PTR _sidlen$[ebp]
	push	edx
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _sid$[ebp], eax
; Line 81
	mov	esi, esp
	mov	eax, DWORD PTR _user$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _sid$[ebp]
	push	edx
	mov	eax, DWORD PTR _sidlen$[ebp]
	push	eax
	call	DWORD PTR __imp__CopySid@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN5@get_user_s
; Line 82
	jmp	SHORT $cleanup$86447
$LN5@get_user_s:
; Line 86
	mov	ecx, DWORD PTR _sid$[ebp]
	mov	DWORD PTR _ret$[ebp], ecx
; Line 87
	mov	DWORD PTR _sid$[ebp], 0
$cleanup$86447:
; Line 90
	cmp	DWORD PTR _proc$[ebp], 0
	je	SHORT $LN4@get_user_s
; Line 91
	mov	esi, esp
	mov	edx, DWORD PTR _proc$[ebp]
	push	edx
	call	DWORD PTR __imp__CloseHandle@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@get_user_s:
; Line 92
	cmp	DWORD PTR _tok$[ebp], 0
	je	SHORT $LN3@get_user_s
; Line 93
	mov	esi, esp
	mov	eax, DWORD PTR _tok$[ebp]
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@get_user_s:
; Line 94
	cmp	DWORD PTR _user$[ebp], 0
	je	SHORT $LN2@get_user_s
; Line 95
	mov	esi, esp
	mov	ecx, DWORD PTR _user$[ebp]
	push	ecx
	call	DWORD PTR __imp__LocalFree@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@get_user_s:
; Line 96
	cmp	DWORD PTR _sid$[ebp], 0
	je	SHORT $LN1@get_user_s
; Line 97
	mov	edx, DWORD PTR _sid$[ebp]
	push	edx
	call	_safefree
	add	esp, 4
$LN1@get_user_s:
; Line 99
	mov	eax, DWORD PTR _ret$[ebp]
; Line 100
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@get_user_s
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN17@get_user_s:
	DD	2
	DD	$LN16@get_user_s
$LN16@get_user_s:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN14@get_user_s
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN15@get_user_s
$LN15@get_user_s:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN14@get_user_s:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	0
_get_user_sid ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_make_private_security_descriptor
EXTRN	__imp__SetSecurityDescriptorDacl@16:PROC
EXTRN	__imp__SetSecurityDescriptorOwner@12:PROC
EXTRN	__imp__InitializeSecurityDescriptor@8:PROC
EXTRN	_memset:PROC
EXTRN	__imp__AllocateAndInitializeSid@44:PROC
EXTRN	_win_strerror:PROC
EXTRN	_dupprintf:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
_BSS	SEGMENT
?networksid@?1??make_private_security_descriptor@@9@9 DD 01H DUP (?) ; `make_private_security_descriptor'::`2'::networksid
?worldsid@?1??make_private_security_descriptor@@9@9 DD 01H DUP (?) ; `make_private_security_descriptor'::`2'::worldsid
?usersid@?1??make_private_security_descriptor@@9@9 DD 01H DUP (?) ; `make_private_security_descriptor'::`2'::usersid
; Function compile flags: /Odtp /RTCsu
_BSS	ENDS
_TEXT	SEGMENT
_ret$ = -148						; size = 4
_acl_err$ = -144					; size = 4
_ea$ = -136						; size = 96
_nt_auth$ = -32						; size = 6
_world_auth$ = -16					; size = 6
__$ArrayPad$ = -4					; size = 4
_permissions$ = 8					; size = 4
_psd$ = 12						; size = 4
_acl$ = 16						; size = 4
_error$ = 20						; size = 4
_make_private_security_descriptor PROC
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 148				; 00000094H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-148]
	mov	ecx, 37					; 00000025H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 107
	mov	BYTE PTR _world_auth$[ebp], 0
	mov	BYTE PTR _world_auth$[ebp+1], 0
	mov	BYTE PTR _world_auth$[ebp+2], 0
	mov	BYTE PTR _world_auth$[ebp+3], 0
	mov	BYTE PTR _world_auth$[ebp+4], 0
	mov	BYTE PTR _world_auth$[ebp+5], 1
; Line 108
	mov	BYTE PTR _nt_auth$[ebp], 0
	mov	BYTE PTR _nt_auth$[ebp+1], 0
	mov	BYTE PTR _nt_auth$[ebp+2], 0
	mov	BYTE PTR _nt_auth$[ebp+3], 0
	mov	BYTE PTR _nt_auth$[ebp+4], 0
	mov	BYTE PTR _nt_auth$[ebp+5], 5
; Line 111
	mov	DWORD PTR _ret$[ebp], 0
; Line 116
	mov	eax, DWORD PTR _psd$[ebp]
	mov	DWORD PTR [eax], 0
; Line 117
	mov	ecx, DWORD PTR _acl$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 118
	mov	edx, DWORD PTR _error$[ebp]
	mov	DWORD PTR [edx], 0
; Line 120
	call	_got_advapi
	test	eax, eax
	jne	SHORT $LN17@make_priva
; Line 121
	push	OFFSET $SG86492
	call	_dupprintf
	add	esp, 4
	mov	ecx, DWORD PTR _error$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 122
	jmp	$cleanup$86493
$LN17@make_priva:
; Line 125
	cmp	DWORD PTR ?usersid@?1??make_private_security_descriptor@@9@9, 0
	jne	SHORT $LN16@make_priva
; Line 126
	call	_get_user_sid
	mov	DWORD PTR ?usersid@?1??make_private_security_descriptor@@9@9, eax
	cmp	DWORD PTR ?usersid@?1??make_private_security_descriptor@@9@9, 0
	jne	SHORT $LN16@make_priva
; Line 128
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_win_strerror
	add	esp, 4
	push	eax
	push	OFFSET $SG86497
	call	_dupprintf
	add	esp, 8
	mov	edx, DWORD PTR _error$[ebp]
	mov	DWORD PTR [edx], eax
; Line 129
	jmp	$cleanup$86493
$LN16@make_priva:
; Line 133
	cmp	DWORD PTR ?worldsid@?1??make_private_security_descriptor@@9@9, 0
	jne	SHORT $LN14@make_priva
; Line 135
	mov	esi, esp
	push	OFFSET ?worldsid@?1??make_private_security_descriptor@@9@9
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	push	1
	lea	eax, DWORD PTR _world_auth$[ebp]
	push	eax
	call	DWORD PTR __imp__AllocateAndInitializeSid@44
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN14@make_priva
; Line 137
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_win_strerror
	add	esp, 4
	push	eax
	push	OFFSET $SG86500
	call	_dupprintf
	add	esp, 8
	mov	ecx, DWORD PTR _error$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 138
	jmp	$cleanup$86493
$LN14@make_priva:
; Line 142
	cmp	DWORD PTR ?networksid@?1??make_private_security_descriptor@@9@9, 0
	jne	SHORT $LN12@make_priva
; Line 144
	mov	esi, esp
	push	OFFSET ?networksid@?1??make_private_security_descriptor@@9@9
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	push	2
	push	1
	lea	edx, DWORD PTR _nt_auth$[ebp]
	push	edx
	call	DWORD PTR __imp__AllocateAndInitializeSid@44
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN12@make_priva
; Line 147
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_win_strerror
	add	esp, 4
	push	eax
	push	OFFSET $SG86503
	call	_dupprintf
	add	esp, 8
	mov	ecx, DWORD PTR _error$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 148
	jmp	$cleanup$86493
$LN12@make_priva:
; Line 152
	push	96					; 00000060H
	push	0
	lea	edx, DWORD PTR _ea$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 153
	mov	eax, DWORD PTR _permissions$[ebp]
	mov	DWORD PTR _ea$[ebp], eax
; Line 154
	mov	DWORD PTR _ea$[ebp+4], 4
; Line 155
	mov	DWORD PTR _ea$[ebp+8], 0
; Line 156
	mov	DWORD PTR _ea$[ebp+20], 0
; Line 157
	mov	ecx, DWORD PTR ?worldsid@?1??make_private_security_descriptor@@9@9
	mov	DWORD PTR _ea$[ebp+28], ecx
; Line 158
	mov	edx, DWORD PTR _permissions$[ebp]
	mov	DWORD PTR _ea$[ebp+32], edx
; Line 159
	mov	DWORD PTR _ea$[ebp+36], 1
; Line 160
	mov	DWORD PTR _ea$[ebp+40], 0
; Line 161
	mov	DWORD PTR _ea$[ebp+52], 0
; Line 162
	mov	eax, DWORD PTR ?usersid@?1??make_private_security_descriptor@@9@9
	mov	DWORD PTR _ea$[ebp+60], eax
; Line 163
	mov	ecx, DWORD PTR _permissions$[ebp]
	mov	DWORD PTR _ea$[ebp+64], ecx
; Line 164
	mov	DWORD PTR _ea$[ebp+68], 4
; Line 165
	mov	DWORD PTR _ea$[ebp+72], 0
; Line 166
	mov	DWORD PTR _ea$[ebp+84], 0
; Line 167
	mov	edx, DWORD PTR ?networksid@?1??make_private_security_descriptor@@9@9
	mov	DWORD PTR _ea$[ebp+92], edx
; Line 169
	mov	esi, esp
	mov	eax, DWORD PTR _acl$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _ea$[ebp]
	push	ecx
	push	3
	call	DWORD PTR _p_SetEntriesInAclA
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _acl_err$[ebp], eax
; Line 170
	cmp	DWORD PTR _acl_err$[ebp], 0
	jne	SHORT $LN9@make_priva
	mov	edx, DWORD PTR _acl$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN10@make_priva
$LN9@make_priva:
; Line 172
	mov	eax, DWORD PTR _acl_err$[ebp]
	push	eax
	call	_win_strerror
	add	esp, 4
	push	eax
	push	OFFSET $SG86511
	call	_dupprintf
	add	esp, 8
	mov	ecx, DWORD PTR _error$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 173
	jmp	$cleanup$86493
$LN10@make_priva:
; Line 177
	mov	esi, esp
	push	20					; 00000014H
	push	64					; 00000040H
	call	DWORD PTR __imp__LocalAlloc@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _psd$[ebp]
	mov	DWORD PTR [edx], eax
; Line 178
	mov	eax, DWORD PTR _psd$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN8@make_priva
; Line 180
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_win_strerror
	add	esp, 4
	push	eax
	push	OFFSET $SG86515
	call	_dupprintf
	add	esp, 8
	mov	ecx, DWORD PTR _error$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 181
	jmp	$cleanup$86493
$LN8@make_priva:
; Line 184
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR _psd$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__InitializeSecurityDescriptor@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN7@make_priva
; Line 186
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_win_strerror
	add	esp, 4
	push	eax
	push	OFFSET $SG86517
	call	_dupprintf
	add	esp, 8
	mov	ecx, DWORD PTR _error$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 187
	jmp	$cleanup$86493
$LN7@make_priva:
; Line 190
	mov	esi, esp
	push	0
	mov	edx, DWORD PTR ?usersid@?1??make_private_security_descriptor@@9@9
	push	edx
	mov	eax, DWORD PTR _psd$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SetSecurityDescriptorOwner@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN6@make_priva
; Line 192
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_win_strerror
	add	esp, 4
	push	eax
	push	OFFSET $SG86519
	call	_dupprintf
	add	esp, 8
	mov	edx, DWORD PTR _error$[ebp]
	mov	DWORD PTR [edx], eax
; Line 193
	jmp	SHORT $cleanup$86493
$LN6@make_priva:
; Line 196
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _acl$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	1
	mov	edx, DWORD PTR _psd$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__SetSecurityDescriptorDacl@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN5@make_priva
; Line 198
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_win_strerror
	add	esp, 4
	push	eax
	push	OFFSET $SG86521
	call	_dupprintf
	add	esp, 8
	mov	ecx, DWORD PTR _error$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 199
	jmp	SHORT $cleanup$86493
$LN5@make_priva:
; Line 202
	mov	DWORD PTR _ret$[ebp], 1
$cleanup$86493:
; Line 205
	cmp	DWORD PTR _ret$[ebp], 0
	jne	SHORT $LN4@make_priva
; Line 206
	mov	edx, DWORD PTR _psd$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN3@make_priva
; Line 207
	mov	esi, esp
	mov	eax, DWORD PTR _psd$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__LocalFree@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 208
	mov	edx, DWORD PTR _psd$[ebp]
	mov	DWORD PTR [edx], 0
$LN3@make_priva:
; Line 210
	mov	eax, DWORD PTR _acl$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@make_priva
; Line 211
	mov	esi, esp
	mov	ecx, DWORD PTR _acl$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__LocalFree@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 212
	mov	eax, DWORD PTR _acl$[ebp]
	mov	DWORD PTR [eax], 0
$LN2@make_priva:
; Line 214
	jmp	SHORT $LN1@make_priva
$LN4@make_priva:
; Line 215
	mov	ecx, DWORD PTR _error$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_safefree
	add	esp, 4
; Line 216
	mov	eax, DWORD PTR _error$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@make_priva:
; Line 218
	mov	eax, DWORD PTR _ret$[ebp]
; Line 219
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@make_priva
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 148				; 00000094H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN24@make_priva:
	DD	3
	DD	$LN23@make_priva
$LN23@make_priva:
	DD	-16					; fffffff0H
	DD	6
	DD	$LN20@make_priva
	DD	-32					; ffffffe0H
	DD	6
	DD	$LN21@make_priva
	DD	-136					; ffffff78H
	DD	96					; 00000060H
	DD	$LN22@make_priva
$LN22@make_priva:
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	0
$LN21@make_priva:
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN20@make_priva:
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
_make_private_security_descriptor ENDP
_TEXT	ENDS
END

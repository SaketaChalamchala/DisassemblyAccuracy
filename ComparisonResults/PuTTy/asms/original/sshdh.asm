; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\Putty\sshdh.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_ssh_diffiehellman_group1
PUBLIC	_ssh_diffiehellman_group14
PUBLIC	_ssh_diffiehellman_gex
EXTRN	_ssh_sha256:BYTE
EXTRN	_ssh_sha1:BYTE
_DATA	SEGMENT
$SG5911	DB	'diffie-hellman-group1-sha1', 00H
	ORG $+1
$SG5912	DB	'group1', 00H
	ORG $+1
$SG5915	DB	'diffie-hellman-group14-sha1', 00H
$SG5916	DB	'group14', 00H
$SG5919	DB	'diffie-hellman-group-exchange-sha256', 00H
	ORG $+3
$SG5924	DB	'diffie-hellman-group-exchange-sha1', 00H
	ORG $+1
$SG5996	DB	'f value received is too small', 00H
	ORG $+2
$SG6001	DB	'f value received is too large', 00H
_DATA	ENDS
CONST	SEGMENT
_P1	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0c9H
	DB	0fH
	DB	0daH
	DB	0a2H
	DB	021H
	DB	068H
	DB	0c2H
	DB	034H
	DB	0c4H
	DB	0c6H
	DB	062H
	DB	08bH
	DB	080H
	DB	0dcH
	DB	01cH
	DB	0d1H
	DB	029H
	DB	02H
	DB	04eH
	DB	08H
	DB	08aH
	DB	067H
	DB	0ccH
	DB	074H
	DB	02H
	DB	0bH
	DB	0beH
	DB	0a6H
	DB	03bH
	DB	013H
	DB	09bH
	DB	022H
	DB	051H
	DB	04aH
	DB	08H
	DB	079H
	DB	08eH
	DB	034H
	DB	04H
	DB	0ddH
	DB	0efH
	DB	095H
	DB	019H
	DB	0b3H
	DB	0cdH
	DB	03aH
	DB	043H
	DB	01bH
	DB	030H
	DB	02bH
	DB	0aH
	DB	06dH
	DB	0f2H
	DB	05fH
	DB	014H
	DB	037H
	DB	04fH
	DB	0e1H
	DB	035H
	DB	06dH
	DB	06dH
	DB	051H
	DB	0c2H
	DB	045H
	DB	0e4H
	DB	085H
	DB	0b5H
	DB	076H
	DB	062H
	DB	05eH
	DB	07eH
	DB	0c6H
	DB	0f4H
	DB	04cH
	DB	042H
	DB	0e9H
	DB	0a6H
	DB	037H
	DB	0edH
	DB	06bH
	DB	0bH
	DB	0ffH
	DB	05cH
	DB	0b6H
	DB	0f4H
	DB	06H
	DB	0b7H
	DB	0edH
	DB	0eeH
	DB	038H
	DB	06bH
	DB	0fbH
	DB	05aH
	DB	089H
	DB	09fH
	DB	0a5H
	DB	0aeH
	DB	09fH
	DB	024H
	DB	011H
	DB	07cH
	DB	04bH
	DB	01fH
	DB	0e6H
	DB	049H
	DB	028H
	DB	066H
	DB	051H
	DB	0ecH
	DB	0e6H
	DB	053H
	DB	081H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
_P14	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0c9H
	DB	0fH
	DB	0daH
	DB	0a2H
	DB	021H
	DB	068H
	DB	0c2H
	DB	034H
	DB	0c4H
	DB	0c6H
	DB	062H
	DB	08bH
	DB	080H
	DB	0dcH
	DB	01cH
	DB	0d1H
	DB	029H
	DB	02H
	DB	04eH
	DB	08H
	DB	08aH
	DB	067H
	DB	0ccH
	DB	074H
	DB	02H
	DB	0bH
	DB	0beH
	DB	0a6H
	DB	03bH
	DB	013H
	DB	09bH
	DB	022H
	DB	051H
	DB	04aH
	DB	08H
	DB	079H
	DB	08eH
	DB	034H
	DB	04H
	DB	0ddH
	DB	0efH
	DB	095H
	DB	019H
	DB	0b3H
	DB	0cdH
	DB	03aH
	DB	043H
	DB	01bH
	DB	030H
	DB	02bH
	DB	0aH
	DB	06dH
	DB	0f2H
	DB	05fH
	DB	014H
	DB	037H
	DB	04fH
	DB	0e1H
	DB	035H
	DB	06dH
	DB	06dH
	DB	051H
	DB	0c2H
	DB	045H
	DB	0e4H
	DB	085H
	DB	0b5H
	DB	076H
	DB	062H
	DB	05eH
	DB	07eH
	DB	0c6H
	DB	0f4H
	DB	04cH
	DB	042H
	DB	0e9H
	DB	0a6H
	DB	037H
	DB	0edH
	DB	06bH
	DB	0bH
	DB	0ffH
	DB	05cH
	DB	0b6H
	DB	0f4H
	DB	06H
	DB	0b7H
	DB	0edH
	DB	0eeH
	DB	038H
	DB	06bH
	DB	0fbH
	DB	05aH
	DB	089H
	DB	09fH
	DB	0a5H
	DB	0aeH
	DB	09fH
	DB	024H
	DB	011H
	DB	07cH
	DB	04bH
	DB	01fH
	DB	0e6H
	DB	049H
	DB	028H
	DB	066H
	DB	051H
	DB	0ecH
	DB	0e4H
	DB	05bH
	DB	03dH
	DB	0c2H
	DB	00H
	DB	07cH
	DB	0b8H
	DB	0a1H
	DB	063H
	DB	0bfH
	DB	05H
	DB	098H
	DB	0daH
	DB	048H
	DB	036H
	DB	01cH
	DB	055H
	DB	0d3H
	DB	09aH
	DB	069H
	DB	016H
	DB	03fH
	DB	0a8H
	DB	0fdH
	DB	024H
	DB	0cfH
	DB	05fH
	DB	083H
	DB	065H
	DB	05dH
	DB	023H
	DB	0dcH
	DB	0a3H
	DB	0adH
	DB	096H
	DB	01cH
	DB	062H
	DB	0f3H
	DB	056H
	DB	020H
	DB	085H
	DB	052H
	DB	0bbH
	DB	09eH
	DB	0d5H
	DB	029H
	DB	07H
	DB	070H
	DB	096H
	DB	096H
	DB	06dH
	DB	067H
	DB	0cH
	DB	035H
	DB	04eH
	DB	04aH
	DB	0bcH
	DB	098H
	DB	04H
	DB	0f1H
	DB	074H
	DB	06cH
	DB	08H
	DB	0caH
	DB	018H
	DB	021H
	DB	07cH
	DB	032H
	DB	090H
	DB	05eH
	DB	046H
	DB	02eH
	DB	036H
	DB	0ceH
	DB	03bH
	DB	0e3H
	DB	09eH
	DB	077H
	DB	02cH
	DB	018H
	DB	0eH
	DB	086H
	DB	03H
	DB	09bH
	DB	027H
	DB	083H
	DB	0a2H
	DB	0ecH
	DB	07H
	DB	0a2H
	DB	08fH
	DB	0b5H
	DB	0c5H
	DB	05dH
	DB	0f0H
	DB	06fH
	DB	04cH
	DB	052H
	DB	0c9H
	DB	0deH
	DB	02bH
	DB	0cbH
	DB	0f6H
	DB	095H
	DB	058H
	DB	017H
	DB	018H
	DB	039H
	DB	095H
	DB	049H
	DB	07cH
	DB	0eaH
	DB	095H
	DB	06aH
	DB	0e5H
	DB	015H
	DB	0d2H
	DB	026H
	DB	018H
	DB	098H
	DB	0faH
	DB	05H
	DB	010H
	DB	015H
	DB	072H
	DB	08eH
	DB	05aH
	DB	08aH
	DB	0acH
	DB	0aaH
	DB	068H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
_G	DB	02H
	ORG $+3
_ssh_diffiehellman_group1_sha1 DD FLAT:$SG5911
	DD	FLAT:$SG5912
	DD	00H
	DD	FLAT:_P1
	DD	FLAT:_G
	DD	080H
	DD	01H
	DD	FLAT:_ssh_sha1
_group1_list DD	FLAT:_ssh_diffiehellman_group1_sha1
_ssh_diffiehellman_group1 DD 01H
	DD	FLAT:_group1_list
_ssh_diffiehellman_group14_sha1 DD FLAT:$SG5915
	DD	FLAT:$SG5916
	DD	00H
	DD	FLAT:_P14
	DD	FLAT:_G
	DD	0100H
	DD	01H
	DD	FLAT:_ssh_sha1
_group14_list DD FLAT:_ssh_diffiehellman_group14_sha1
_ssh_diffiehellman_group14 DD 01H
	DD	FLAT:_group14_list
_ssh_diffiehellman_gex_sha256 DD FLAT:$SG5919
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_ssh_sha256
_ssh_diffiehellman_gex_sha1 DD FLAT:$SG5924
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_ssh_sha1
_gex_list DD	FLAT:_ssh_diffiehellman_gex_sha256
	DD	FLAT:_ssh_diffiehellman_gex_sha1
_ssh_diffiehellman_gex DD 02H
	DD	FLAT:_gex_list
CONST	ENDS
PUBLIC	_dh_setup_group
EXTRN	_bignum_from_bytes:PROC
EXTRN	_safemalloc:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\putty\sshdh.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_ctx$ = -4						; size = 4
_kex$ = 8						; size = 4
_dh_setup_group PROC
; Line 122
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 123
	push	24					; 00000018H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _ctx$[ebp], eax
; Line 124
	mov	eax, DWORD PTR _kex$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _kex$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	_bignum_from_bytes
	add	esp, 8
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 125
	mov	edx, DWORD PTR _kex$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _kex$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	_bignum_from_bytes
	add	esp, 8
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 126
	mov	edx, DWORD PTR _ctx$[ebp]
	push	edx
	call	_dh_init
	add	esp, 4
; Line 127
	mov	eax, DWORD PTR _ctx$[ebp]
; Line 128
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_dh_setup_group ENDP
_TEXT	ENDS
EXTRN	_bignum_bitmask:PROC
EXTRN	_bignum_rshift:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_dh_init PROC
; Line 112
	push	ebp
	mov	ebp, esp
; Line 113
	push	1
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_bignum_rshift
	add	esp, 8
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 114
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_bignum_bitmask
	add	esp, 4
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 115
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 116
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_dh_init ENDP
_TEXT	ENDS
PUBLIC	_dh_setup_gex
EXTRN	_copybn:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ctx$ = -4						; size = 4
_pval$ = 8						; size = 4
_gval$ = 12						; size = 4
_dh_setup_gex PROC
; Line 134
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 135
	push	24					; 00000018H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _ctx$[ebp], eax
; Line 136
	mov	eax, DWORD PTR _pval$[ebp]
	push	eax
	call	_copybn
	add	esp, 4
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 137
	mov	edx, DWORD PTR _gval$[ebp]
	push	edx
	call	_copybn
	add	esp, 4
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 138
	mov	edx, DWORD PTR _ctx$[ebp]
	push	edx
	call	_dh_init
	add	esp, 4
; Line 139
	mov	eax, DWORD PTR _ctx$[ebp]
; Line 140
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_dh_setup_gex ENDP
_TEXT	ENDS
PUBLIC	_dh_cleanup
EXTRN	_safefree:PROC
EXTRN	_freebn:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ctx$ = -4						; size = 4
_handle$ = 8						; size = 4
_dh_cleanup PROC
; Line 146
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 147
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ctx$[ebp], eax
; Line 148
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_freebn
	add	esp, 4
; Line 149
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_freebn
	add	esp, 4
; Line 150
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_freebn
	add	esp, 4
; Line 151
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	_freebn
	add	esp, 4
; Line 152
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_freebn
	add	esp, 4
; Line 153
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	call	_freebn
	add	esp, 4
; Line 154
	mov	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	call	_safefree
	add	esp, 4
; Line 155
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_dh_cleanup ENDP
_TEXT	ENDS
PUBLIC	_dh_create_e
EXTRN	_modpow:PROC
EXTRN	_bignum_cmp:PROC
EXTRN	_One:DWORD
EXTRN	_bignum_set_bit:PROC
EXTRN	_bn_power_2:PROC
EXTRN	_ssh1_read_bignum:PROC
EXTRN	_random_byte:PROC
EXTRN	_ssh1_write_bignum:PROC
EXTRN	_bignum_bitcount:PROC
EXTRN	_ssh1_bignum_length:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_nb$5983 = -24						; size = 4
_b$5982 = -20						; size = 4
_buf$ = -16						; size = 4
_nbytes$ = -12						; size = 4
_i$ = -8						; size = 4
_ctx$ = -4						; size = 4
_handle$ = 8						; size = 4
_nbits$ = 12						; size = 4
_dh_create_e PROC
; Line 173
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 174
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ctx$[ebp], eax
; Line 180
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	_ssh1_bignum_length
	add	esp, 4
	mov	DWORD PTR _nbytes$[ebp], eax
; Line 181
	push	1
	mov	eax, DWORD PTR _nbytes$[ebp]
	push	eax
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax
$LN14@dh_create_:
; Line 188
	mov	ecx, DWORD PTR _ctx$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN11@dh_create_
; Line 189
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_freebn
	add	esp, 4
$LN11@dh_create_:
; Line 190
	cmp	DWORD PTR _nbits$[ebp], 0
	je	SHORT $LN9@dh_create_
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	_bignum_bitcount
	add	esp, 4
	cmp	DWORD PTR _nbits$[ebp], eax
	jle	SHORT $LN10@dh_create_
$LN9@dh_create_:
; Line 191
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_ssh1_write_bignum
	add	esp, 8
; Line 192
	mov	DWORD PTR _i$[ebp], 2
	jmp	SHORT $LN8@dh_create_
$LN7@dh_create_:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN8@dh_create_:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _nbytes$[ebp]
	jge	SHORT $LN6@dh_create_
; Line 193
	call	_random_byte
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [edx]
	and	ecx, eax
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [edx], cl
	jmp	SHORT $LN7@dh_create_
$LN6@dh_create_:
; Line 194
	mov	eax, DWORD PTR _ctx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nbytes$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_ssh1_read_bignum
	add	esp, 12					; 0000000cH
; Line 195
	jmp	SHORT $LN13@dh_create_
$LN10@dh_create_:
; Line 197
	mov	eax, DWORD PTR _nbits$[ebp]
	push	eax
	call	_bn_power_2
	add	esp, 4
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 198
	mov	DWORD PTR _nb$5983[ebp], 0
	mov	edx, DWORD PTR _nb$5983[ebp]
	mov	DWORD PTR _b$5982[ebp], edx
; Line 199
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@dh_create_
$LN3@dh_create_:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@dh_create_:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _nbits$[ebp]
	jge	SHORT $LN13@dh_create_
; Line 200
	cmp	DWORD PTR _nb$5983[ebp], 0
	jne	SHORT $LN1@dh_create_
; Line 201
	mov	DWORD PTR _nb$5983[ebp], 8
; Line 202
	call	_random_byte
	mov	DWORD PTR _b$5982[ebp], eax
$LN1@dh_create_:
; Line 204
	mov	edx, DWORD PTR _b$5982[ebp]
	and	edx, 1
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_bignum_set_bit
	add	esp, 12					; 0000000cH
; Line 205
	mov	eax, DWORD PTR _b$5982[ebp]
	sar	eax, 1
	mov	DWORD PTR _b$5982[ebp], eax
; Line 206
	mov	ecx, DWORD PTR _nb$5983[ebp]
	sub	ecx, 1
	mov	DWORD PTR _nb$5983[ebp], ecx
; Line 207
	jmp	SHORT $LN3@dh_create_
$LN13@dh_create_:
; Line 209
	mov	edx, DWORD PTR _One
	push	edx
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_bignum_cmp
	add	esp, 8
	test	eax, eax
	jle	$LN14@dh_create_
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_bignum_cmp
	add	esp, 8
	test	eax, eax
	jge	$LN14@dh_create_
; Line 211
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 216
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	_modpow
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 218
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+4]
; Line 219
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_dh_create_e ENDP
_TEXT	ENDS
PUBLIC	_dh_validate_f
EXTRN	_bigsub:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_cmp$5999 = -12						; size = 4
_pm1$5998 = -8						; size = 4
_ctx$ = -4						; size = 4
_handle$ = 8						; size = 4
_f$ = 12						; size = 4
_dh_validate_f PROC
; Line 230
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 231
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ctx$[ebp], eax
; Line 232
	mov	ecx, DWORD PTR _One
	push	ecx
	mov	edx, DWORD PTR _f$[ebp]
	push	edx
	call	_bignum_cmp
	add	esp, 8
	test	eax, eax
	jg	SHORT $LN3@dh_validat
; Line 233
	mov	eax, OFFSET $SG5996
	jmp	SHORT $LN4@dh_validat
; Line 234
	jmp	SHORT $LN2@dh_validat
$LN3@dh_validat:
; Line 235
	mov	eax, DWORD PTR _One
	push	eax
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_bigsub
	add	esp, 8
	mov	DWORD PTR _pm1$5998[ebp], eax
; Line 236
	mov	eax, DWORD PTR _pm1$5998[ebp]
	push	eax
	mov	ecx, DWORD PTR _f$[ebp]
	push	ecx
	call	_bignum_cmp
	add	esp, 8
	mov	DWORD PTR _cmp$5999[ebp], eax
; Line 237
	mov	edx, DWORD PTR _pm1$5998[ebp]
	push	edx
	call	_freebn
	add	esp, 4
; Line 238
	cmp	DWORD PTR _cmp$5999[ebp], 0
	jl	SHORT $LN2@dh_validat
; Line 239
	mov	eax, OFFSET $SG6001
	jmp	SHORT $LN4@dh_validat
$LN2@dh_validat:
; Line 241
	xor	eax, eax
$LN4@dh_validat:
; Line 242
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_dh_validate_f ENDP
_TEXT	ENDS
PUBLIC	_dh_find_K
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ret$ = -8						; size = 4
_ctx$ = -4						; size = 4
_handle$ = 8						; size = 4
_f$ = 12						; size = 4
_dh_find_K PROC
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 249
	mov	eax, DWORD PTR _handle$[ebp]
	mov	DWORD PTR _ctx$[ebp], eax
; Line 251
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _f$[ebp]
	push	edx
	call	_modpow
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$[ebp], eax
; Line 252
	mov	eax, DWORD PTR _ret$[ebp]
; Line 253
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_dh_find_K ENDP
_TEXT	ENDS
END

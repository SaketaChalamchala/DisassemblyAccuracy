; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\Putty\windows\winnps.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
?socket_fn_table@?1??new_named_pipe_listener@@9@9 DD FLAT:_sk_namedpipeserver_plug ; `new_named_pipe_listener'::`2'::socket_fn_table
	DD	FLAT:_sk_namedpipeserver_close
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_sk_namedpipeserver_socket_error
CONST	ENDS
_DATA	SEGMENT
$SG88076 DB	'Error while listening to named pipe: %s', 00H
$SG88103 DB	'\\.\pipe\', 00H
	ORG $+2
$SG88104 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'w', 00H, 'i', 00H, 'n', 00H, 'n', 00H, 'p', 00H, 's', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+6
$SG88105 DB	's', 00H, 't', 00H, 'r', 00H, 'n', 00H, 'c', 00H, 'm', 00H
	DB	'p', 00H, '(', 00H, 'p', 00H, 'i', 00H, 'p', 00H, 'e', 00H, 'n'
	DB	00H, 'a', 00H, 'm', 00H, 'e', 00H, ',', 00H, ' ', 00H, '"', 00H
	DB	'\', 00H, '\', 00H, '\', 00H, '\', 00H, '.', 00H, '\', 00H, '\'
	DB	00H, 'p', 00H, 'i', 00H, 'p', 00H, 'e', 00H, '\', 00H, '\', 00H
	DB	'"', 00H, ',', 00H, ' ', 00H, '9', 00H, ')', 00H, ' ', 00H, '='
	DB	00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG88108 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	'w', 00H, 'i', 00H, 'n', 00H, 'n', 00H, 'p', 00H, 's', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG88109 DB	's', 00H, 't', 00H, 'r', 00H, 'c', 00H, 'h', 00H, 'r', 00H
	DB	'(', 00H, 'p', 00H, 'i', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 'a'
	DB	00H, 'm', 00H, 'e', 00H, ' ', 00H, '+', 00H, ' ', 00H, '9', 00H
	DB	',', 00H, ' ', 00H, '''', 00H, '\', 00H, '\', 00H, '''', 00H, ')'
	DB	00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U', 00H
	DB	'L', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG88113 DB	'unable to create named pipe ''%s'': %s', 00H
_DATA	ENDS
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\putty\windows\winnps.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_ret$ = -8						; size = 4
_ps$ = -4						; size = 4
_s$ = 8							; size = 4
_p$ = 12						; size = 4
_sk_namedpipeserver_plug PROC
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 43
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _ps$[ebp], eax
; Line 44
	mov	ecx, DWORD PTR _ps$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR _ret$[ebp], edx
; Line 45
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN1@sk_namedpi
; Line 46
	mov	eax, DWORD PTR _ps$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+40], ecx
$LN1@sk_namedpi:
; Line 47
	mov	eax, DWORD PTR _ret$[ebp]
; Line 48
	mov	esp, ebp
	pop	ebp
	ret	0
_sk_namedpipeserver_plug ENDP
_TEXT	ENDS
EXTRN	__imp__LocalFree@4:PROC
EXTRN	_safefree:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ps$ = -4						; size = 4
_s$ = 8							; size = 4
_sk_namedpipeserver_close PROC
; Line 51
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 52
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _ps$[ebp], eax
; Line 54
	mov	esi, esp
	mov	ecx, DWORD PTR _ps$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	DWORD PTR __imp__CloseHandle@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 55
	mov	esi, esp
	mov	eax, DWORD PTR _ps$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	call	DWORD PTR __imp__CloseHandle@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 56
	mov	edx, DWORD PTR _ps$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	_safefree
	add	esp, 4
; Line 57
	mov	ecx, DWORD PTR _ps$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_safefree
	add	esp, 4
; Line 58
	mov	eax, DWORD PTR _ps$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN2@sk_namedpi@2
; Line 59
	mov	esi, esp
	mov	ecx, DWORD PTR _ps$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__LocalFree@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@sk_namedpi@2:
; Line 60
	mov	eax, DWORD PTR _ps$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@sk_namedpi@2
; Line 61
	mov	esi, esp
	mov	ecx, DWORD PTR _ps$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__LocalFree@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@sk_namedpi@2:
; Line 62
	mov	eax, DWORD PTR _ps$[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 63
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sk_namedpipeserver_close ENDP
; Function compile flags: /Odtp /RTCsu
_ps$ = -4						; size = 4
_s$ = 8							; size = 4
_sk_namedpipeserver_socket_error PROC
; Line 66
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 67
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _ps$[ebp], eax
; Line 68
	mov	ecx, DWORD PTR _ps$[ebp]
	mov	eax, DWORD PTR [ecx+44]
; Line 69
	mov	esp, ebp
	pop	ebp
	ret	0
_sk_namedpipeserver_socket_error ENDP
_TEXT	ENDS
PUBLIC	_new_named_pipe_listener
EXTRN	_handle_add_foreign_event:PROC
EXTRN	__imp__CreateEventA@16:PROC
EXTRN	_memset:PROC
EXTRN	_dupprintf:PROC
EXTRN	_win_strerror:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	_make_private_security_descriptor:PROC
EXTRN	_strchr:PROC
EXTRN	__wassert:PROC
EXTRN	_strncmp:PROC
EXTRN	_dupstr:PROC
EXTRN	_safemalloc:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ret$ = -4						; size = 4
_pipename$ = 8						; size = 4
_plug$ = 12						; size = 4
_new_named_pipe_listener PROC
; Line 198
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 216
	push	48					; 00000030H
	push	1
	call	_safemalloc
	add	esp, 8
	mov	DWORD PTR _ret$[ebp], eax
; Line 217
	mov	eax, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [eax], OFFSET ?socket_fn_table@?1??new_named_pipe_listener@@9@9
; Line 218
	mov	ecx, DWORD PTR _ret$[ebp]
	mov	edx, DWORD PTR _plug$[ebp]
	mov	DWORD PTR [ecx+40], edx
; Line 219
	mov	eax, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [eax+44], 0
; Line 220
	mov	ecx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 221
	mov	edx, DWORD PTR _pipename$[ebp]
	push	edx
	call	_dupstr
	add	esp, 4
	mov	ecx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 222
	mov	edx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [edx+8], 0
; Line 224
	push	9
	push	OFFSET $SG88103
	mov	eax, DWORD PTR _pipename$[ebp]
	push	eax
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN5@new_named_
	push	224					; 000000e0H
	push	OFFSET $SG88104
	push	OFFSET $SG88105
	call	__wassert
	add	esp, 12					; 0000000cH
$LN5@new_named_:
; Line 225
	push	92					; 0000005cH
	mov	edx, DWORD PTR _pipename$[ebp]
	add	edx, 9
	push	edx
	call	_strchr
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@new_named_
	push	225					; 000000e1H
	push	OFFSET $SG88108
	push	OFFSET $SG88109
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@new_named_:
; Line 228
	mov	ecx, DWORD PTR _ret$[ebp]
	add	ecx, 44					; 0000002cH
	push	ecx
	mov	edx, DWORD PTR _ret$[ebp]
	add	edx, 8
	push	edx
	mov	eax, DWORD PTR _ret$[ebp]
	add	eax, 4
	push	eax
	push	-1073741824				; c0000000H
	call	_make_private_security_descriptor
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN2@new_named_
; Line 229
	jmp	$cleanup$88111
$LN2@new_named_:
; Line 232
	push	1
	mov	ecx, DWORD PTR _ret$[ebp]
	push	ecx
	call	_create_named_pipe
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@new_named_
; Line 234
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_win_strerror
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _pipename$[ebp]
	push	edx
	push	OFFSET $SG88113
	call	_dupprintf
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [ecx+44], eax
; Line 235
	jmp	SHORT $cleanup$88111
$LN1@new_named_:
; Line 238
	push	20					; 00000014H
	push	0
	mov	edx, DWORD PTR _ret$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 239
	mov	esi, esp
	push	0
	push	0
	push	1
	push	0
	call	DWORD PTR __imp__CreateEventA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [ecx+36], eax
; Line 241
	mov	edx, DWORD PTR _ret$[ebp]
	push	edx
	push	OFFSET _named_pipe_connect_callback
	mov	eax, DWORD PTR _ret$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	call	_handle_add_foreign_event
	add	esp, 12					; 0000000cH
; Line 242
	push	0
	mov	edx, DWORD PTR _ret$[ebp]
	push	edx
	call	_named_pipe_accept_loop
	add	esp, 8
$cleanup$88111:
; Line 245
	mov	eax, DWORD PTR _ret$[ebp]
; Line 246
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_new_named_pipe_listener ENDP
_TEXT	ENDS
EXTRN	__imp__CreateNamedPipeA@32:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_sa$ = -16						; size = 12
_ps$ = 8						; size = 4
_first_instance$ = 12					; size = 4
_create_named_pipe PROC
; Line 72
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 75
	push	12					; 0000000cH
	push	0
	lea	eax, DWORD PTR _sa$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 76
	mov	DWORD PTR _sa$[ebp], 12			; 0000000cH
; Line 77
	mov	ecx, DWORD PTR _ps$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _sa$[ebp+4], edx
; Line 78
	mov	DWORD PTR _sa$[ebp+8], 0
; Line 106
	mov	esi, esp
	lea	eax, DWORD PTR _sa$[ebp]
	push	eax
	push	0
	push	4096					; 00001000H
	push	4096					; 00001000H
	push	255					; 000000ffH
	push	8
	mov	ecx, DWORD PTR _first_instance$[ebp]
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 524288				; 00080000H
	or	ecx, 1073741827				; 40000003H
	push	ecx
	mov	edx, DWORD PTR _ps$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__CreateNamedPipeA@32
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ps$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 108
	mov	edx, DWORD PTR _ps$[ebp]
	xor	eax, eax
	cmp	DWORD PTR [edx+16], -1
	setne	al
; Line 109
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@create_nam
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@create_nam:
	DD	1
	DD	$LN4@create_nam
$LN4@create_nam:
	DD	-16					; fffffff0H
	DD	12					; 0000000cH
	DD	$LN3@create_nam
$LN3@create_nam:
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	0
_create_named_pipe ENDP
_TEXT	ENDS
EXTRN	_sk_namedpipe_addr:PROC
EXTRN	__imp__ConnectNamedPipe@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_actx$88071 = -20					; size = 4
_conn$88070 = -12					; size = 4
_errmsg$88062 = -8					; size = 4
_error$88061 = -4					; size = 4
_ps$ = 8						; size = 4
_got_one_already$ = 12					; size = 4
_named_pipe_accept_loop PROC
; Line 126
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
$LN12@named_pipe:
; Line 127
	mov	eax, 1
	test	eax, eax
	je	$LN13@named_pipe
; Line 131
	cmp	DWORD PTR _got_one_already$[ebp], 0
	je	SHORT $LN10@named_pipe
; Line 134
	mov	DWORD PTR _got_one_already$[ebp], 0
; Line 135
	mov	DWORD PTR _error$88061[ebp], 0
; Line 136
	jmp	SHORT $LN9@named_pipe
$LN10@named_pipe:
; Line 142
	mov	ecx, DWORD PTR _ps$[ebp]
	add	ecx, 20					; 00000014H
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _ps$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	call	DWORD PTR __imp__ConnectNamedPipe@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN8@named_pipe
; Line 143
	mov	DWORD PTR _error$88061[ebp], 0
; Line 144
	jmp	SHORT $LN7@named_pipe
$LN8@named_pipe:
; Line 145
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _error$88061[ebp], eax
$LN7@named_pipe:
; Line 147
	cmp	DWORD PTR _error$88061[ebp], 997	; 000003e5H
	jne	SHORT $LN9@named_pipe
; Line 148
	jmp	$LN13@named_pipe
$LN9@named_pipe:
; Line 151
	cmp	DWORD PTR _error$88061[ebp], 0
	je	SHORT $LN4@named_pipe
	cmp	DWORD PTR _error$88061[ebp], 535	; 00000217H
	jne	SHORT $LN5@named_pipe
$LN4@named_pipe:
; Line 159
	mov	ecx, DWORD PTR _ps$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _conn$88070[ebp], edx
; Line 162
	mov	eax, DWORD PTR _conn$88070[ebp]
	mov	DWORD PTR _actx$88071[ebp], eax
; Line 163
	mov	esi, esp
	mov	ecx, DWORD PTR _actx$88071[ebp]
	push	ecx
	push	OFFSET _named_pipe_accept
	mov	edx, DWORD PTR _ps$[ebp]
	mov	eax, DWORD PTR [edx+40]
	push	eax
	mov	ecx, DWORD PTR _ps$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+16]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@named_pipe
; Line 168
	mov	esi, esp
	mov	edx, DWORD PTR _conn$88070[ebp]
	push	edx
	call	DWORD PTR __imp__CloseHandle@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@named_pipe:
; Line 171
	push	0
	mov	eax, DWORD PTR _ps$[ebp]
	push	eax
	call	_create_named_pipe
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@named_pipe
; Line 172
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _error$88061[ebp], eax
; Line 173
	jmp	SHORT $LN5@named_pipe
$LN2@named_pipe:
; Line 178
	jmp	$LN12@named_pipe
$LN5@named_pipe:
; Line 183
	mov	ecx, DWORD PTR _error$88061[ebp]
	push	ecx
	call	_win_strerror
	add	esp, 4
	push	eax
	push	OFFSET $SG88076
	call	_dupprintf
	add	esp, 8
	mov	DWORD PTR _errmsg$88062[ebp], eax
; Line 185
	mov	esi, esp
	mov	edx, DWORD PTR _error$88061[ebp]
	push	edx
	mov	eax, DWORD PTR _errmsg$88062[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _ps$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_sk_namedpipe_addr
	add	esp, 4
	push	eax
	push	1
	mov	eax, DWORD PTR _ps$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _ps$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 186
	mov	eax, DWORD PTR _errmsg$88062[ebp]
	push	eax
	call	_safefree
	add	esp, 4
; Line 187
	jmp	SHORT $LN13@named_pipe
; Line 188
	jmp	$LN12@named_pipe
$LN13@named_pipe:
; Line 189
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@named_pipe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN17@named_pipe:
	DD	1
	DD	$LN16@named_pipe
$LN16@named_pipe:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN15@named_pipe
$LN15@named_pipe:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	120					; 00000078H
	DB	0
_named_pipe_accept_loop ENDP
_TEXT	ENDS
EXTRN	_make_handle_socket:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_conn$ = -4						; size = 4
_ctx$ = 8						; size = 4
_plug$ = 12						; size = 4
_named_pipe_accept PROC
; Line 112
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 113
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _conn$[ebp], eax
; Line 115
	push	1
	mov	ecx, DWORD PTR _plug$[ebp]
	push	ecx
	mov	edx, DWORD PTR _conn$[ebp]
	push	edx
	mov	eax, DWORD PTR _conn$[ebp]
	push	eax
	call	_make_handle_socket
	add	esp, 16					; 00000010H
; Line 116
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_named_pipe_accept ENDP
; Function compile flags: /Odtp /RTCsu
_ps$ = -4						; size = 4
_vps$ = 8						; size = 4
_named_pipe_connect_callback PROC
; Line 192
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 193
	mov	eax, DWORD PTR _vps$[ebp]
	mov	DWORD PTR _ps$[ebp], eax
; Line 194
	push	1
	mov	ecx, DWORD PTR _ps$[ebp]
	push	ecx
	call	_named_pipe_accept_loop
	add	esp, 8
; Line 195
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_named_pipe_connect_callback ENDP
_TEXT	ENDS
END

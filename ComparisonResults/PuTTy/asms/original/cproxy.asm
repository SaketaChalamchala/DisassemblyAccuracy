; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\Putty\cproxy.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG87169 DB	'Proxy error: SOCKS proxy wants a different CHAP version', 00H
$SG87171 DB	'Proxy error: SOCKS proxy won''t negotiate CHAP with us', 00H
	ORG $+2
$SG87182 DB	'Proxy error: SOCKS proxy refused CHAP authentication', 00H
	ORG $+3
$SG87187 DB	'Proxy error: Server chose CHAP of other than HMAC-MD5 bu'
	DB	't we didn''t offer it!', 00H
	ORG $+2
$SG87201 DB	'Proxy error: Server chose CHAP authentication but we did'
	DB	'n''t offer it!', 00H
_DATA	ENDS
PUBLIC	_proxy_socks5_offerencryptedauth
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\putty\cproxy.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_command$ = 8						; size = 4
_len$ = 12						; size = 4
_proxy_socks5_offerencryptedauth PROC
; Line 40
	push	ebp
	mov	ebp, esp
; Line 41
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _command$[ebp]
	mov	BYTE PTR [edx+ecx], 3
; Line 42
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 43
	pop	ebp
	ret	0
_proxy_socks5_offerencryptedauth ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_proxy_socks5_handlechap
EXTRN	_conf_get_str:PROC
EXTRN	_bufchain_consume:PROC
EXTRN	_bufchain_fetch:PROC
EXTRN	_bufchain_size:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv164 = -304						; size = 4
_outbuf$ = -296						; size = 20
_data$ = -268						; size = 260
__$ArrayPad$ = -4					; size = 4
_p$ = 8							; size = 4
_proxy_socks5_handlechap PROC
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
$LN21@proxy_sock:
; Line 60
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+120], 0
	je	SHORT $LN19@proxy_sock
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [ecx+124]
	cmp	eax, DWORD PTR [edx+120]
	jge	$LN20@proxy_sock
$LN19@proxy_sock:
; Line 62
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+120], 0
	je	SHORT $LN17@proxy_sock
	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx+128], -1
	jne	SHORT $LN18@proxy_sock
$LN17@proxy_sock:
; Line 69
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	call	_bufchain_size
	add	esp, 4
	cmp	eax, 2
	jge	SHORT $LN16@proxy_sock
; Line 70
	mov	eax, 1
	jmp	$LN22@proxy_sock
$LN16@proxy_sock:
; Line 73
	push	2
	lea	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 52					; 00000034H
	push	edx
	call	_bufchain_fetch
	add	esp, 12					; 0000000cH
; Line 74
	push	2
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	call	_bufchain_consume
	add	esp, 8
$LN18@proxy_sock:
; Line 77
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+120], 0
	jne	$LN15@proxy_sock
; Line 82
	movzx	edx, BYTE PTR _data$[ebp]
	cmp	edx, 1
	je	SHORT $LN14@proxy_sock
; Line 85
	mov	esi, esp
	push	0
	push	8000					; 00001f40H
	push	OFFSET $SG87169
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 86
	mov	eax, 1
	jmp	$LN22@proxy_sock
$LN14@proxy_sock:
; Line 88
	movzx	eax, BYTE PTR _data$[ebp+1]
	test	eax, eax
	jne	SHORT $LN13@proxy_sock
; Line 91
	mov	esi, esp
	push	0
	push	8000					; 00001f40H
	push	OFFSET $SG87171
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 92
	mov	eax, 1
	jmp	$LN22@proxy_sock
$LN13@proxy_sock:
; Line 94
	movzx	ecx, BYTE PTR _data$[ebp+1]
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+120], ecx
; Line 95
	jmp	$LN12@proxy_sock
$LN15@proxy_sock:
; Line 96
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+128], -1
	jne	SHORT $LN11@proxy_sock
; Line 101
	movzx	ecx, BYTE PTR _data$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+128], ecx
; Line 102
	movzx	eax, BYTE PTR _data$[ebp+1]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+132], eax
$LN11@proxy_sock:
; Line 105
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 52					; 00000034H
	push	edx
	call	_bufchain_size
	add	esp, 4
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	eax, DWORD PTR [ecx+132]
	jge	SHORT $LN10@proxy_sock
; Line 106
	mov	eax, 1
	jmp	$LN22@proxy_sock
$LN10@proxy_sock:
; Line 110
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+132]
	push	eax
	lea	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 52					; 00000034H
	push	edx
	call	_bufchain_fetch
	add	esp, 12					; 0000000cH
; Line 113
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 52					; 00000034H
	push	edx
	call	_bufchain_consume
	add	esp, 8
; Line 115
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	DWORD PTR tv164[ebp], ecx
	cmp	DWORD PTR tv164[ebp], 0
	je	SHORT $LN7@proxy_sock
	cmp	DWORD PTR tv164[ebp], 3
	je	SHORT $LN4@proxy_sock
	cmp	DWORD PTR tv164[ebp], 17		; 00000011H
	je	$LN3@proxy_sock
	jmp	$LN8@proxy_sock
$LN7@proxy_sock:
; Line 118
	movzx	edx, BYTE PTR _data$[ebp]
	test	edx, edx
	jne	SHORT $LN6@proxy_sock
; Line 119
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+68], 2
; Line 120
	jmp	SHORT $LN5@proxy_sock
$LN6@proxy_sock:
; Line 123
	mov	esi, esp
	push	0
	push	8000					; 00001f40H
	push	OFFSET $SG87182
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 124
	mov	eax, 1
	jmp	$LN22@proxy_sock
$LN5@proxy_sock:
; Line 126
	jmp	$LN8@proxy_sock
$LN4@proxy_sock:
; Line 128
	mov	BYTE PTR _outbuf$[ebp], 1
; Line 129
	mov	BYTE PTR _outbuf$[ebp+1], 1
; Line 130
	mov	BYTE PTR _outbuf$[ebp+2], 4
; Line 131
	mov	BYTE PTR _outbuf$[ebp+3], 16		; 00000010H
; Line 134
	lea	ecx, DWORD PTR _outbuf$[ebp+4]
	push	ecx
	push	17					; 00000011H
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+116]
	push	eax
	call	_conf_get_str
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	push	edx
	lea	eax, DWORD PTR _data$[ebp]
	push	eax
	call	_hmacmd5_chap
	add	esp, 16					; 00000010H
; Line 135
	mov	esi, esp
	push	20					; 00000014H
	lea	ecx, DWORD PTR _outbuf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 136
	jmp	SHORT $LN8@proxy_sock
$LN3@proxy_sock:
; Line 139
	movzx	edx, BYTE PTR _data$[ebp]
	cmp	edx, 133				; 00000085H
	je	SHORT $LN8@proxy_sock
; Line 143
	mov	esi, esp
	push	0
	push	8000					; 00001f40H
	push	OFFSET $SG87187
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 144
	mov	eax, 1
	jmp	SHORT $LN22@proxy_sock
$LN8@proxy_sock:
; Line 148
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+128], -1
; Line 149
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	add	edx, 1
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+124], edx
$LN12@proxy_sock:
; Line 152
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+68], 8
	jne	SHORT $LN1@proxy_sock
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [edx+124]
	cmp	ecx, DWORD PTR [eax+120]
	jl	SHORT $LN1@proxy_sock
; Line 153
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+120], 0
; Line 154
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+124], 0
; Line 155
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+132], 0
$LN1@proxy_sock:
; Line 157
	jmp	$LN21@proxy_sock
$LN20@proxy_sock:
; Line 158
	xor	eax, eax
$LN22@proxy_sock:
; Line 159
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@proxy_sock
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN27@proxy_sock:
	DD	2
	DD	$LN26@proxy_sock
$LN26@proxy_sock:
	DD	-268					; fffffef4H
	DD	260					; 00000104H
	DD	$LN24@proxy_sock
	DD	-296					; fffffed8H
	DD	20					; 00000014H
	DD	$LN25@proxy_sock
$LN25@proxy_sock:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN24@proxy_sock:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_proxy_socks5_handlechap ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_hmacmd5_free_context:PROC
EXTRN	_hmacmd5_do_hmac:PROC
EXTRN	_hmacmd5_key:PROC
EXTRN	_MD5Simple:PROC
EXTRN	_strlen:PROC
EXTRN	_hmacmd5_make_context:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_md5buf$87148 = -32					; size = 16
_pwlen$ = -12						; size = 4
_hmacmd5_ctx$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
_challenge$ = 8						; size = 4
_challen$ = 12						; size = 4
_passwd$ = 16						; size = 4
_response$ = 20						; size = 4
_hmacmd5_chap PROC
; Line 20
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 24
	call	_hmacmd5_make_context
	mov	DWORD PTR _hmacmd5_ctx$[ebp], eax
; Line 26
	mov	eax, DWORD PTR _passwd$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _pwlen$[ebp], eax
; Line 27
	cmp	DWORD PTR _pwlen$[ebp], 64		; 00000040H
	jle	SHORT $LN2@hmacmd5_ch
; Line 29
	lea	ecx, DWORD PTR _md5buf$87148[ebp]
	push	ecx
	mov	edx, DWORD PTR _pwlen$[ebp]
	push	edx
	mov	eax, DWORD PTR _passwd$[ebp]
	push	eax
	call	_MD5Simple
	add	esp, 12					; 0000000cH
; Line 30
	push	16					; 00000010H
	lea	ecx, DWORD PTR _md5buf$87148[ebp]
	push	ecx
	mov	edx, DWORD PTR _hmacmd5_ctx$[ebp]
	push	edx
	call	_hmacmd5_key
	add	esp, 12					; 0000000cH
; Line 31
	jmp	SHORT $LN1@hmacmd5_ch
$LN2@hmacmd5_ch:
; Line 32
	mov	eax, DWORD PTR _pwlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _passwd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hmacmd5_ctx$[ebp]
	push	edx
	call	_hmacmd5_key
	add	esp, 12					; 0000000cH
$LN1@hmacmd5_ch:
; Line 35
	mov	eax, DWORD PTR _response$[ebp]
	push	eax
	mov	ecx, DWORD PTR _challen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _challenge$[ebp]
	push	edx
	mov	eax, DWORD PTR _hmacmd5_ctx$[ebp]
	push	eax
	call	_hmacmd5_do_hmac
	add	esp, 16					; 00000010H
; Line 36
	mov	ecx, DWORD PTR _hmacmd5_ctx$[ebp]
	push	ecx
	call	_hmacmd5_free_context
	add	esp, 4
; Line 37
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@hmacmd5_ch
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@hmacmd5_ch:
	DD	1
	DD	$LN6@hmacmd5_ch
$LN6@hmacmd5_ch:
	DD	-32					; ffffffe0H
	DD	16					; 00000010H
	DD	$LN5@hmacmd5_ch
$LN5@hmacmd5_ch:
	DB	109					; 0000006dH
	DB	100					; 00000064H
	DB	53					; 00000035H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_hmacmd5_chap ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_proxy_socks5_selectchap
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ulen$87197 = -540					; size = 4
_chapbuf$87196 = -532					; size = 514
_password$ = -12					; size = 4
_username$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_p$ = 8							; size = 4
_proxy_socks5_selectchap PROC
; Line 162
	push	ebp
	mov	ebp, esp
	sub	esp, 540				; 0000021cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-540]
	mov	ecx, 135				; 00000087H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 163
	push	16					; 00000010H
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	push	ecx
	call	_conf_get_str
	add	esp, 8
	mov	DWORD PTR _username$[ebp], eax
; Line 164
	push	17					; 00000011H
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+116]
	push	eax
	call	_conf_get_str
	add	esp, 8
	mov	DWORD PTR _password$[ebp], eax
; Line 165
	mov	ecx, DWORD PTR _username$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	jne	SHORT $LN4@proxy_sock@2
	mov	eax, DWORD PTR _password$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	$LN5@proxy_sock@2
$LN4@proxy_sock@2:
; Line 168
	mov	BYTE PTR _chapbuf$87196[ebp], 1
; Line 169
	mov	BYTE PTR _chapbuf$87196[ebp+1], 2
; Line 170
	mov	BYTE PTR _chapbuf$87196[ebp+2], 17	; 00000011H
; Line 171
	mov	BYTE PTR _chapbuf$87196[ebp+3], 1
; Line 172
	mov	BYTE PTR _chapbuf$87196[ebp+4], -123	; ffffff85H
; Line 173
	mov	BYTE PTR _chapbuf$87196[ebp+5], 2
; Line 175
	mov	edx, DWORD PTR _username$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _ulen$87197[ebp], eax
; Line 176
	cmp	DWORD PTR _ulen$87197[ebp], 255		; 000000ffH
	jle	SHORT $LN3@proxy_sock@2
	mov	DWORD PTR _ulen$87197[ebp], 255		; 000000ffH
$LN3@proxy_sock@2:
	cmp	DWORD PTR _ulen$87197[ebp], 1
	jge	SHORT $LN2@proxy_sock@2
	mov	DWORD PTR _ulen$87197[ebp], 1
$LN2@proxy_sock@2:
; Line 178
	mov	al, BYTE PTR _ulen$87197[ebp]
	mov	BYTE PTR _chapbuf$87196[ebp+6], al
; Line 179
	mov	ecx, DWORD PTR _ulen$87197[ebp]
	push	ecx
	mov	edx, DWORD PTR _username$[ebp]
	push	edx
	lea	eax, DWORD PTR _chapbuf$87196[ebp+7]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 181
	mov	ecx, DWORD PTR _ulen$87197[ebp]
	add	ecx, 7
	mov	esi, esp
	push	ecx
	lea	edx, DWORD PTR _chapbuf$87196[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 182
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+120], 0
; Line 183
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+124], 0
; Line 184
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+128], -1
; Line 185
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+132], 0
; Line 187
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+68], 8
; Line 188
	jmp	SHORT $LN1@proxy_sock@2
$LN5@proxy_sock@2:
; Line 191
	mov	esi, esp
	push	0
	push	8000					; 00001f40H
	push	OFFSET $SG87201
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@proxy_sock@2:
; Line 192
	mov	eax, 1
; Line 193
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@proxy_sock@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 540				; 0000021cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@proxy_sock@2:
	DD	1
	DD	$LN9@proxy_sock@2
$LN9@proxy_sock@2:
	DD	-532					; fffffdecH
	DD	514					; 00000202H
	DD	$LN8@proxy_sock@2
$LN8@proxy_sock@2:
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_proxy_socks5_selectchap ENDP
_TEXT	ENDS
END

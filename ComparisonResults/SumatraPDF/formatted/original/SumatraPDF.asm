??$?0ABV?$allocator@H@std@@ABV_lambda_8ad1c185be25e490e788bf92305592c9_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_8ad1c185be25e490e788bf92305592c9_@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV_lambda_8ad1c185be25e490e788bf92305592c9_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@ABV<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YAABV<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _this$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV?$allocator@H@std@@ABV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@ABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YAABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _this$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV?$allocator@H@std@@ABV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@ABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YAABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _this$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV?$allocator@H@std@@ABV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@ABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YAABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [eax+4]
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], ecx
mov	DWORD PTR [eax+4], edx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV?$allocator@H@std@@ABV_lambda_344027958ff46b907d624215e4045c6d_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_344027958ff46b907d624215e4045c6d_@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV_lambda_344027958ff46b907d624215e4045c6d_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@ABV<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YAABV<lambda_344027958ff46b907d624215e4045c6d>@@ABV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _this$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV?$allocator@H@std@@ABV_lambda_9bd99f01148b93d640266ff787e7a365_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_9bd99f01148b93d640266ff787e7a365_@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV_lambda_9bd99f01148b93d640266ff787e7a365_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@ABV<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YAABV<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [eax+4]
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], ecx
mov	DWORD PTR [eax+4], edx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV?$allocator@H@std@@ABV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@ABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YAABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _this$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV?$allocator@H@std@@ABV_lambda_6285d5a3719bb8faf2336baccac06139_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_6285d5a3719bb8faf2336baccac06139_@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV_lambda_6285d5a3719bb8faf2336baccac06139_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@ABV<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YAABV<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [eax]
mov	DWORD PTR [ecx], edx
mov	edx, DWORD PTR [eax+4]
mov	DWORD PTR [ecx+4], edx
mov	eax, DWORD PTR [eax+8]
mov	DWORD PTR [ecx+8], eax
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV?$allocator@H@std@@ABV_lambda_1a01023b43b3e313893bd9ee262479f6_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV_lambda_1a01023b43b3e313893bd9ee262479f6_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@ABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YAABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [eax+4]
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], ecx
mov	DWORD PTR [eax+4], edx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV?$allocator@H@std@@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YA$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@AAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [eax+4]
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], ecx
mov	DWORD PTR [eax+4], edx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV?$allocator@H@std@@V_lambda_6285d5a3719bb8faf2336baccac06139_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_6285d5a3719bb8faf2336baccac06139_@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV_lambda_6285d5a3719bb8faf2336baccac06139_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@V<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YA$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@AAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [eax]
mov	DWORD PTR [ecx], edx
mov	edx, DWORD PTR [eax+4]
mov	DWORD PTR [ecx+4], edx
mov	eax, DWORD PTR [eax+8]
mov	DWORD PTR [ecx+8], eax
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV?$allocator@H@std@@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YA$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@AAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _this$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV?$allocator@H@std@@V_lambda_9bd99f01148b93d640266ff787e7a365_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_9bd99f01148b93d640266ff787e7a365_@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV_lambda_9bd99f01148b93d640266ff787e7a365_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@V<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YA$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@AAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [eax+4]
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], ecx
mov	DWORD PTR [eax+4], edx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV?$allocator@H@std@@V_lambda_344027958ff46b907d624215e4045c6d_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_344027958ff46b907d624215e4045c6d_@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV_lambda_344027958ff46b907d624215e4045c6d_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@V<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YA$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@AAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _this$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV?$allocator@H@std@@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YA$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@AAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [eax+4]
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], ecx
mov	DWORD PTR [eax+4], edx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV?$allocator@H@std@@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YA$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _this$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV?$allocator@H@std@@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YA$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _this$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV?$allocator@H@std@@V_lambda_8ad1c185be25e490e788bf92305592c9_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_8ad1c185be25e490e788bf92305592c9_@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV_lambda_8ad1c185be25e490e788bf92305592c9_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@V<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YA$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _this$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV_lambda_8ad1c185be25e490e788bf92305592c9_@@ABV?$allocator@H@std@@@?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@QAE@ABV_lambda_8ad1c185be25e490e788bf92305592c9_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@_NAAPAVWindowInfo@@@std@@QAE@XZ 
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@ABV<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YAABV<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0ABV?$allocator@H@std@@ABV<lambda_8ad1c185be25e490e788bf92305592c9>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_8ad1c185be25e490e788bf92305592c9>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV<lambda_8ad1c185be25e490e788bf92305592c9>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$?0V?$allocator@H@std@@V_lambda_8ad1c185be25e490e788bf92305592c9_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_8ad1c185be25e490e788bf92305592c9_@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV_lambda_8ad1c185be25e490e788bf92305592c9_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@V<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YA$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _this$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@ABV?$allocator@H@std@@@?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@QAE@ABV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@_NAAPAVTabInfo@@@std@@QAE@XZ 
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@ABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YAABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0ABV?$allocator@H@std@@ABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$?0V?$allocator@H@std@@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YA$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _this$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@ABV?$allocator@H@std@@@?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@QAE@ABV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@_NAAPAVWindowInfo@@@std@@QAE@XZ 
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@ABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YAABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0ABV?$allocator@H@std@@ABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$?0V?$allocator@H@std@@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YA$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _this$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@ABV?$allocator@H@std@@@?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@QAE@ABV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@X$$V@std@@QAE@XZ	
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@ABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YAABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0ABV?$allocator@H@std@@ABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$?0V?$allocator@H@std@@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YA$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@AAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [eax+4]
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], ecx
mov	DWORD PTR [eax+4], edx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV_lambda_344027958ff46b907d624215e4045c6d_@@ABV?$allocator@H@std@@@?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@QAE@ABV_lambda_344027958ff46b907d624215e4045c6d_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@XPAVRenderedBitmap@@@std@@QAE@XZ 
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@ABV<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YAABV<lambda_344027958ff46b907d624215e4045c6d>@@ABV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0ABV?$allocator@H@std@@ABV<lambda_344027958ff46b907d624215e4045c6d>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_344027958ff46b907d624215e4045c6d>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV<lambda_344027958ff46b907d624215e4045c6d>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$?0V?$allocator@H@std@@V_lambda_344027958ff46b907d624215e4045c6d_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_344027958ff46b907d624215e4045c6d_@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV_lambda_344027958ff46b907d624215e4045c6d_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@V<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YA$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@AAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _this$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV_lambda_9bd99f01148b93d640266ff787e7a365_@@ABV?$allocator@H@std@@@?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@QAE@ABV_lambda_9bd99f01148b93d640266ff787e7a365_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@X$$V@std@@QAE@XZ	
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@ABV<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YAABV<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0ABV?$allocator@H@std@@ABV<lambda_9bd99f01148b93d640266ff787e7a365>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_9bd99f01148b93d640266ff787e7a365>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV<lambda_9bd99f01148b93d640266ff787e7a365>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$?0V?$allocator@H@std@@V_lambda_9bd99f01148b93d640266ff787e7a365_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_9bd99f01148b93d640266ff787e7a365_@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV_lambda_9bd99f01148b93d640266ff787e7a365_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@V<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YA$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@AAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [eax+4]
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], ecx
mov	DWORD PTR [eax+4], edx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@ABV?$allocator@H@std@@@?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@QAE@ABV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@X$$V@std@@QAE@XZ	
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@ABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YAABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0ABV?$allocator@H@std@@ABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$?0V?$allocator@H@std@@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YA$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@AAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _this$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV_lambda_6285d5a3719bb8faf2336baccac06139_@@ABV?$allocator@H@std@@@?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@QAE@ABV_lambda_6285d5a3719bb8faf2336baccac06139_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@X$$V@std@@QAE@XZ	
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@ABV<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YAABV<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0ABV?$allocator@H@std@@ABV<lambda_6285d5a3719bb8faf2336baccac06139>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_6285d5a3719bb8faf2336baccac06139>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV<lambda_6285d5a3719bb8faf2336baccac06139>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$?0V?$allocator@H@std@@V_lambda_6285d5a3719bb8faf2336baccac06139_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_6285d5a3719bb8faf2336baccac06139_@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV_lambda_6285d5a3719bb8faf2336baccac06139_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@V<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YA$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@AAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [eax]
mov	DWORD PTR [ecx], edx
mov	edx, DWORD PTR [eax+4]
mov	DWORD PTR [ecx+4], edx
mov	eax, DWORD PTR [eax+8]
mov	DWORD PTR [ecx+8], eax
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0ABV_lambda_1a01023b43b3e313893bd9ee262479f6_@@ABV?$allocator@H@std@@@?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@QAE@ABV_lambda_1a01023b43b3e313893bd9ee262479f6_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@XPAVHttpRsp@@@std@@QAE@XZ 
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@ABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YAABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0ABV?$allocator@H@std@@ABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$?0V?$allocator@H@std@@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val1$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$allocator@H@std@@QAE@ABV01@@Z	
mov	eax, DWORD PTR _<_Val2_0>$[ebp]
push	eax
call	??$forward@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YA$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@AAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [eax+4]
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], ecx
mov	DWORD PTR [eax+4], edx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0V_lambda_1a01023b43b3e313893bd9ee262479f6_@@ABV?$allocator@H@std@@@?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@QAE@$$QAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@XPAVHttpRsp@@@std@@QAE@XZ 
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YA$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0ABV?$allocator@H@std@@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$?0V_lambda_6285d5a3719bb8faf2336baccac06139_@@ABV?$allocator@H@std@@@?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV_lambda_6285d5a3719bb8faf2336baccac06139_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@X$$V@std@@QAE@XZ	
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YA$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0ABV?$allocator@H@std@@V<lambda_6285d5a3719bb8faf2336baccac06139>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_6285d5a3719bb8faf2336baccac06139>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$?0V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@ABV?$allocator@H@std@@@?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@X$$V@std@@QAE@XZ	
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YA$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0ABV?$allocator@H@std@@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$?0V_lambda_9bd99f01148b93d640266ff787e7a365_@@ABV?$allocator@H@std@@@?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV_lambda_9bd99f01148b93d640266ff787e7a365_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@X$$V@std@@QAE@XZ	
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YA$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0ABV?$allocator@H@std@@V<lambda_9bd99f01148b93d640266ff787e7a365>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_9bd99f01148b93d640266ff787e7a365>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$?0V_lambda_344027958ff46b907d624215e4045c6d_@@ABV?$allocator@H@std@@@?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@QAE@$$QAV_lambda_344027958ff46b907d624215e4045c6d_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@XPAVRenderedBitmap@@@std@@QAE@XZ 
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YA$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0ABV?$allocator@H@std@@V<lambda_344027958ff46b907d624215e4045c6d>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_344027958ff46b907d624215e4045c6d>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$?0V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@ABV?$allocator@H@std@@@?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@X$$V@std@@QAE@XZ	
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YA$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0ABV?$allocator@H@std@@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$?0V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@ABV?$allocator@H@std@@@?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@QAE@$$QAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@_NAAPAVWindowInfo@@@std@@QAE@XZ 
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YA$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0ABV?$allocator@H@std@@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$?0V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@ABV?$allocator@H@std@@@?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@QAE@$$QAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@_NAAPAVTabInfo@@@std@@QAE@XZ 
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YA$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0ABV?$allocator@H@std@@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$?0V_lambda_8ad1c185be25e490e788bf92305592c9_@@ABV?$allocator@H@std@@@?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@QAE@$$QAV_lambda_8ad1c185be25e490e788bf92305592c9_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@_NAAPAVWindowInfo@@@std@@QAE@XZ 
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YA$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0ABV?$allocator@H@std@@V<lambda_8ad1c185be25e490e788bf92305592c9>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_8ad1c185be25e490e788bf92305592c9>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$construct@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABV_lambda_8ad1c185be25e490e788bf92305592c9_@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@ABV_lambda_8ad1c185be25e490e788bf92305592c9_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	8
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@ABV<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YAABV<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0ABV<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@QAE@ABV<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@@?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@QAE@$$QAV_lambda_8ad1c185be25e490e788bf92305592c9_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@_NAAPAVWindowInfo@@@std@@QAE@XZ 
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YA$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0V?$allocator@H@std@@V<lambda_8ad1c185be25e490e788bf92305592c9>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_8ad1c185be25e490e788bf92305592c9>@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$construct@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@ABV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@ABV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	8
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@ABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YAABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0ABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@QAE@ABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@@?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@QAE@$$QAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@_NAAPAVTabInfo@@@std@@QAE@XZ 
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YA$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0V?$allocator@H@std@@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$construct@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@ABV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	8
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@ABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YAABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0ABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@QAE@ABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@@?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@QAE@$$QAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@_NAAPAVWindowInfo@@@std@@QAE@XZ 
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YA$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0V?$allocator@H@std@@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$construct@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@ABV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@1@ABV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	12					
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@ABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YAABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0ABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@QAE@ABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@@?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@X$$V@std@@QAE@XZ	
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YA$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0V?$allocator@H@std@@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$construct@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@ABV_lambda_344027958ff46b907d624215e4045c6d_@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@ABV_lambda_344027958ff46b907d624215e4045c6d_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	8
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@ABV<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YAABV<lambda_344027958ff46b907d624215e4045c6d>@@ABV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0ABV<lambda_344027958ff46b907d624215e4045c6d>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@QAE@ABV<lambda_344027958ff46b907d624215e4045c6d>@@ABV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@@?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@QAE@$$QAV_lambda_344027958ff46b907d624215e4045c6d_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@XPAVRenderedBitmap@@@std@@QAE@XZ 
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YA$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0V?$allocator@H@std@@V<lambda_344027958ff46b907d624215e4045c6d>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_344027958ff46b907d624215e4045c6d>@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$construct@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@ABV_lambda_9bd99f01148b93d640266ff787e7a365_@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@1@ABV_lambda_9bd99f01148b93d640266ff787e7a365_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	12					
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@ABV<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YAABV<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0ABV<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@QAE@ABV<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@@?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV_lambda_9bd99f01148b93d640266ff787e7a365_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@X$$V@std@@QAE@XZ	
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YA$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0V?$allocator@H@std@@V<lambda_9bd99f01148b93d640266ff787e7a365>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_9bd99f01148b93d640266ff787e7a365>@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$construct@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@ABV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@1@ABV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	8
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@ABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YAABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0ABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@QAE@ABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@@?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@X$$V@std@@QAE@XZ	
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YA$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0V?$allocator@H@std@@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$construct@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@ABV_lambda_6285d5a3719bb8faf2336baccac06139_@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@1@ABV_lambda_6285d5a3719bb8faf2336baccac06139_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	16					
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@ABV<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YAABV<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0ABV<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@QAE@ABV<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@@?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV_lambda_6285d5a3719bb8faf2336baccac06139_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@X$$V@std@@QAE@XZ	
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YA$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0V?$allocator@H@std@@V<lambda_6285d5a3719bb8faf2336baccac06139>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_6285d5a3719bb8faf2336baccac06139>@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$construct@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@ABV_lambda_1a01023b43b3e313893bd9ee262479f6_@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@1@ABV_lambda_1a01023b43b3e313893bd9ee262479f6_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	12					
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@ABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YAABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0ABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@QAE@ABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$?0V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@@?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@QAE@$$QAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_base@XPAVHttpRsp@@@std@@QAE@XZ 
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@6B@
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YA$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Ax$[ebp]
push	ecx
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
movzx	edx, BYTE PTR $T1[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??$?0V?$allocator@H@std@@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$construct@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@1@$$QAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	12					
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YA$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0V<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@QAE@$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$construct@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@V_lambda_6285d5a3719bb8faf2336baccac06139_@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_6285d5a3719bb8faf2336baccac06139_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	16					
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@V<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YA$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0V<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$construct@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	8
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YA$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$construct@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@V_lambda_9bd99f01148b93d640266ff787e7a365_@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_9bd99f01148b93d640266ff787e7a365_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	12					
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@V<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YA$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0V<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$construct@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@V_lambda_344027958ff46b907d624215e4045c6d_@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@$$QAV_lambda_344027958ff46b907d624215e4045c6d_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	8
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@V<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YA$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0V<lambda_344027958ff46b907d624215e4045c6d>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@QAE@$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@ABV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$construct@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	12					
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YA$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$construct@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	8
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YA$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@QAE@$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$construct@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@$$QAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	8
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YA$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@QAE@$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$construct@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V_lambda_8ad1c185be25e490e788bf92305592c9_@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV_lambda_8ad1c185be25e490e788bf92305592c9_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	8
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@V<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YA$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0V<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@QAE@$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$construct@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABV_lambda_8ad1c185be25e490e788bf92305592c9_@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@1@PAV?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@ABV_lambda_8ad1c185be25e490e788bf92305592c9_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@ABV<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YAABV<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABV<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@ABV<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@ABV_lambda_8ad1c185be25e490e788bf92305592c9_@@@std@@YAABV_lambda_8ad1c185be25e490e788bf92305592c9_@@ABV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV_lambda_8ad1c185be25e490e788bf92305592c9_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	8
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@V<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YA$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@@?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@QAE@$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@$$QAV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$destroy@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	ecx, DWORD PTR __Ptr$[ebp]
call	??_G?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@QAEPAXI@Z
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$construct@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@ABV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@1@PAV?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@ABV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@ABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YAABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@ABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@ABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@ABV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@@std@@YAABV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@ABV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@$$QAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	8
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YA$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@@?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@QAE@$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@$$QAV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$destroy@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	ecx, DWORD PTR __Ptr$[ebp]
call	??_G?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@QAEPAXI@Z
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$construct@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@1@PAV?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@ABV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@ABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YAABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@ABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@ABV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@@std@@YAABV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@ABV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	8
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YA$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@@?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@QAE@$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@$$QAV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$destroy@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	ecx, DWORD PTR __Ptr$[ebp]
call	??_G?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@QAEPAXI@Z
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$construct@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@ABV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@1@ABV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@ABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YAABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@ABV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@std@@YAABV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@ABV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	12					
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YA$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@@?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@$$QAV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$destroy@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	ecx, DWORD PTR __Ptr$[ebp]
call	??_G?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@QAEPAXI@Z
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$construct@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@ABV_lambda_344027958ff46b907d624215e4045c6d_@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@1@PAV?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@ABV_lambda_344027958ff46b907d624215e4045c6d_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@ABV<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YAABV<lambda_344027958ff46b907d624215e4045c6d>@@ABV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@ABV<lambda_344027958ff46b907d624215e4045c6d>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@ABV<lambda_344027958ff46b907d624215e4045c6d>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@ABV_lambda_344027958ff46b907d624215e4045c6d_@@@std@@YAABV_lambda_344027958ff46b907d624215e4045c6d_@@ABV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@$$QAV_lambda_344027958ff46b907d624215e4045c6d_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	8
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@V<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YA$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@@?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@QAE@$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@$$QAV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$destroy@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	ecx, DWORD PTR __Ptr$[ebp]
call	??_G?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@QAEPAXI@Z
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$construct@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@ABV_lambda_9bd99f01148b93d640266ff787e7a365_@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@1@ABV_lambda_9bd99f01148b93d640266ff787e7a365_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@ABV<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YAABV<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@ABV_lambda_9bd99f01148b93d640266ff787e7a365_@@@std@@YAABV_lambda_9bd99f01148b93d640266ff787e7a365_@@ABV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_9bd99f01148b93d640266ff787e7a365_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	12					
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@V<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YA$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@@?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@$$QAV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$destroy@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	ecx, DWORD PTR __Ptr$[ebp]
call	??_G?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@QAEPAXI@Z
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$construct@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@ABV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@1@ABV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@ABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YAABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@ABV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@std@@YAABV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@ABV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	8
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YA$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@@?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@$$QAV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$destroy@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	ecx, DWORD PTR __Ptr$[ebp]
call	??_G?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@QAEPAXI@Z
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$construct@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@ABV_lambda_6285d5a3719bb8faf2336baccac06139_@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@1@ABV_lambda_6285d5a3719bb8faf2336baccac06139_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@ABV<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YAABV<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@ABV_lambda_6285d5a3719bb8faf2336baccac06139_@@@std@@YAABV_lambda_6285d5a3719bb8faf2336baccac06139_@@ABV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_6285d5a3719bb8faf2336baccac06139_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	16					
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@V<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YA$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@@?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@$$QAV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$destroy@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	ecx, DWORD PTR __Ptr$[ebp]
call	??_G?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@QAEPAXI@Z
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$construct@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@ABV_lambda_1a01023b43b3e313893bd9ee262479f6_@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@1@PAV?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@1@ABV_lambda_1a01023b43b3e313893bd9ee262479f6_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@ABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YAABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@ABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@1@ABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@ABV_lambda_1a01023b43b3e313893bd9ee262479f6_@@@std@@YAABV_lambda_1a01023b43b3e313893bd9ee262479f6_@@ABV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@1@$$QAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
push	12					
call	??2@YAPAXIPAX@Z				
add	esp, 8
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN3@construct
mov	ecx, DWORD PTR _<_Args_1>$[ebp]
push	ecx
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR _<_Args_0>$[ebp]
push	edx
call	??$forward@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YA$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR $T1[ebp]
call	??$?0V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@@?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@QAE@$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@$$QAV?$allocator@H@1@@Z 
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN1@construct
mov	DWORD PTR tv79[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$destroy@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	ecx, DWORD PTR __Ptr$[ebp]
call	??_G?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@QAEPAXI@Z
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$construct@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@1@PAV?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@1@$$QAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YA$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@1@$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@V_lambda_6285d5a3719bb8faf2336baccac06139_@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_6285d5a3719bb8faf2336baccac06139_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YA$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@V<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YA$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@V_lambda_9bd99f01148b93d640266ff787e7a365_@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_9bd99f01148b93d640266ff787e7a365_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YA$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@V<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@V_lambda_344027958ff46b907d624215e4045c6d_@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@1@PAV?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@$$QAV_lambda_344027958ff46b907d624215e4045c6d_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YA$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@V<lambda_344027958ff46b907d624215e4045c6d>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YA$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@1@PAV?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YA$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@1@PAV?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@$$QAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YA$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V_lambda_8ad1c185be25e490e788bf92305592c9_@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@1@PAV?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV_lambda_8ad1c185be25e490e788bf92305592c9_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YA$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABV_lambda_8ad1c185be25e490e788bf92305592c9_@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@ABV_lambda_8ad1c185be25e490e788bf92305592c9_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@ABV<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YAABV<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABV<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@1@PAV?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@ABV<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$construct@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@1@PAV?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV_lambda_8ad1c185be25e490e788bf92305592c9_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YA$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@$$QAV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Addressof@$$CBV_lambda_8ad1c185be25e490e788bf92305592c9_@@@std@@YAPBV_lambda_8ad1c185be25e490e788bf92305592c9_@@ABV1@U?$integral_constant@_N$0A@@0@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Val$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$destroy@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@1@PAV?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR __Al$[ebp]
call	??$destroy@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@ABV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@ABV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@ABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YAABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@ABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@1@PAV?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@ABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$construct@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@1@PAV?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@$$QAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YA$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@$$QAV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Addressof@$$CBV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@@std@@YAPBV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@ABV1@U?$integral_constant@_N$0A@@0@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Val$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$destroy@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@1@PAV?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR __Al$[ebp]
call	??$destroy@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@ABV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@ABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YAABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@1@PAV?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@ABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$construct@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@1@PAV?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YA$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@$$QAV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Addressof@$$CBV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@@std@@YAPBV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@ABV1@U?$integral_constant@_N$0A@@0@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Val$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$destroy@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@1@PAV?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR __Al$[ebp]
call	??$destroy@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@ABV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@1@ABV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@ABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YAABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$construct@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YA$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@$$QAV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Addressof@$$CBV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@std@@YAPBV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@ABV1@U?$integral_constant@_N$0A@@0@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Val$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$destroy@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR __Al$[ebp]
call	??$destroy@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@ABV_lambda_344027958ff46b907d624215e4045c6d_@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@ABV_lambda_344027958ff46b907d624215e4045c6d_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@ABV<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YAABV<lambda_344027958ff46b907d624215e4045c6d>@@ABV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@ABV<lambda_344027958ff46b907d624215e4045c6d>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@1@PAV?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@ABV<lambda_344027958ff46b907d624215e4045c6d>@@ABV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$construct@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@1@PAV?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@$$QAV_lambda_344027958ff46b907d624215e4045c6d_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YA$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@$$QAV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Addressof@$$CBV_lambda_344027958ff46b907d624215e4045c6d_@@@std@@YAPBV_lambda_344027958ff46b907d624215e4045c6d_@@ABV1@U?$integral_constant@_N$0A@@0@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Val$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$destroy@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@1@PAV?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR __Al$[ebp]
call	??$destroy@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@ABV_lambda_9bd99f01148b93d640266ff787e7a365_@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@1@ABV_lambda_9bd99f01148b93d640266ff787e7a365_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@ABV<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YAABV<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$construct@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_9bd99f01148b93d640266ff787e7a365_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YA$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@$$QAV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Addressof@$$CBV_lambda_9bd99f01148b93d640266ff787e7a365_@@@std@@YAPBV_lambda_9bd99f01148b93d640266ff787e7a365_@@ABV1@U?$integral_constant@_N$0A@@0@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Val$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$destroy@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR __Al$[ebp]
call	??$destroy@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@ABV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@1@ABV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@ABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YAABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$construct@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YA$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@$$QAV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Addressof@$$CBV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@std@@YAPBV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@ABV1@U?$integral_constant@_N$0A@@0@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Val$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$destroy@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR __Al$[ebp]
call	??$destroy@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@ABV_lambda_6285d5a3719bb8faf2336baccac06139_@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@1@ABV_lambda_6285d5a3719bb8faf2336baccac06139_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@ABV<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YAABV<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$construct@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_6285d5a3719bb8faf2336baccac06139_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YA$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@$$QAV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Addressof@$$CBV_lambda_6285d5a3719bb8faf2336baccac06139_@@@std@@YAPBV_lambda_6285d5a3719bb8faf2336baccac06139_@@ABV1@U?$integral_constant@_N$0A@@0@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Val$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$destroy@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR __Al$[ebp]
call	??$destroy@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@ABV_lambda_1a01023b43b3e313893bd9ee262479f6_@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@1@ABV_lambda_1a01023b43b3e313893bd9ee262479f6_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@ABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YAABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@ABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@1@PAV?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@1@ABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$construct@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@1@PAV?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@1@$$QAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YA$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@1@$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@$$QAV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Addressof@$$CBV_lambda_1a01023b43b3e313893bd9ee262479f6_@@@std@@YAPBV_lambda_1a01023b43b3e313893bd9ee262479f6_@@ABV1@U?$integral_constant@_N$0A@@0@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Val$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$destroy@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@1@PAV?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR __Al$[ebp]
call	??$destroy@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@1@$$QAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YA$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@1@PAV?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@1@$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$_Test_callable@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@@std@@YA_NABV_lambda_1a01023b43b3e313893bd9ee262479f6_@@U?$integral_constant@_N$0A@@0@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	al, 1
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@V_lambda_6285d5a3719bb8faf2336baccac06139_@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_6285d5a3719bb8faf2336baccac06139_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YA$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@V<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$_Test_callable@V_lambda_6285d5a3719bb8faf2336baccac06139_@@@std@@YA_NABV_lambda_6285d5a3719bb8faf2336baccac06139_@@U?$integral_constant@_N$0A@@0@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	al, 1
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YA$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$_Test_callable@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@std@@YA_NABV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@U?$integral_constant@_N$0A@@0@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	al, 1
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@V_lambda_9bd99f01148b93d640266ff787e7a365_@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_9bd99f01148b93d640266ff787e7a365_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YA$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@V<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$_Test_callable@V_lambda_9bd99f01148b93d640266ff787e7a365_@@@std@@YA_NABV_lambda_9bd99f01148b93d640266ff787e7a365_@@U?$integral_constant@_N$0A@@0@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	al, 1
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@V_lambda_344027958ff46b907d624215e4045c6d_@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@$$QAV_lambda_344027958ff46b907d624215e4045c6d_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YA$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@V<lambda_344027958ff46b907d624215e4045c6d>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@1@PAV?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@ABV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$_Test_callable@V_lambda_344027958ff46b907d624215e4045c6d_@@@std@@YA_NABV_lambda_344027958ff46b907d624215e4045c6d_@@U?$integral_constant@_N$0A@@0@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	al, 1
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YA$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$_Test_callable@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@std@@YA_NABV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@U?$integral_constant@_N$0A@@0@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	al, 1
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YA$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@1@PAV?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$_Test_callable@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@@std@@YA_NABV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@U?$integral_constant@_N$0A@@0@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	al, 1
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@$$QAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YA$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@1@PAV?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$_Test_callable@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@@std@@YA_NABV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@U?$integral_constant@_N$0A@@0@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	al, 1
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$construct@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V_lambda_8ad1c185be25e490e788bf92305592c9_@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV_lambda_8ad1c185be25e490e788bf92305592c9_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YA$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@1@PAV?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$_Test_callable@V_lambda_8ad1c185be25e490e788bf92305592c9_@@@std@@YA_NABV_lambda_8ad1c185be25e490e788bf92305592c9_@@U?$integral_constant@_N$0A@@0@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	al, 1
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Deallocate@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@YAXPAV?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@0@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 240				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-240]
mov	ecx, 60					
mov	eax, -858993460				
rep stosd
cmp	DWORD PTR __Count$[ebp], 536870911	
jbe	SHORT $LN2@Deallocate
mov	eax, OFFSET ??_C@_0CG@FHBDFCGK@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5sizeof?5@
test	eax, eax
je	SHORT $LN10@Deallocate
xor	ecx, ecx
jne	SHORT $LN11@Deallocate
push	OFFSET ??_C@_1FK@EJGLHMGC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	100					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN11@Deallocate
int	3
push	0
push	100					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Count$[ebp]
shl	eax, 3
mov	DWORD PTR __User_size$[ebp], eax
cmp	DWORD PTR __User_size$[ebp], 4096	
jb	$LN3@Deallocate
mov	eax, DWORD PTR __Ptr$[ebp]
mov	DWORD PTR __Ptr_user$3[ebp], eax
mov	eax, DWORD PTR __Ptr_user$3[ebp]
and	eax, 31					
je	SHORT $LN4@Deallocate
mov	eax, OFFSET ??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
test	eax, eax
je	SHORT $LN12@Deallocate
xor	ecx, ecx
jne	SHORT $LN13@Deallocate
push	OFFSET ??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	106					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN13@Deallocate
int	3
push	0
push	106					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, 4
mov	DWORD PTR __Ptr_ptr$2[ebp], eax
mov	eax, DWORD PTR __Ptr_ptr$2[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR __Ptr_container$1[ebp], ecx
mov	eax, 4
imul	ecx, eax, -1
mov	edx, DWORD PTR __Ptr_ptr$2[ebp]
cmp	DWORD PTR [edx+ecx], -84215046		
je	SHORT $LN5@Deallocate
mov	eax, OFFSET ??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
test	eax, eax
je	SHORT $LN14@Deallocate
xor	ecx, ecx
jne	SHORT $LN15@Deallocate
push	OFFSET ??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	116					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN15@Deallocate
int	3
push	0
push	116					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, DWORD PTR __Ptr_user$3[ebp]
jb	SHORT $LN6@Deallocate
mov	eax, OFFSET ??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
test	eax, eax
je	SHORT $LN16@Deallocate
xor	ecx, ecx
jne	SHORT $LN17@Deallocate
push	OFFSET ??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	120					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN17@Deallocate
int	3
push	0
push	120					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, 8
jae	SHORT $LN7@Deallocate
mov	eax, OFFSET ??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
test	eax, eax
je	SHORT $LN18@Deallocate
xor	ecx, ecx
jne	SHORT $LN19@Deallocate
push	OFFSET ??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	124					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN19@Deallocate
int	3
push	0
push	124					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, 39					
jbe	SHORT $LN8@Deallocate
mov	eax, OFFSET ??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
test	eax, eax
je	SHORT $LN20@Deallocate
xor	ecx, ecx
jne	SHORT $LN21@Deallocate
push	OFFSET ??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	132					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN21@Deallocate
int	3
push	0
push	132					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_container$1[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
call	??3@YAXPAX@Z				
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 240				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Deallocate@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@YAXPAV?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@0@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 240				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-240]
mov	ecx, 60					
mov	eax, -858993460				
rep stosd
cmp	DWORD PTR __Count$[ebp], 536870911	
jbe	SHORT $LN2@Deallocate
mov	eax, OFFSET ??_C@_0CG@FHBDFCGK@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5sizeof?5@
test	eax, eax
je	SHORT $LN10@Deallocate
xor	ecx, ecx
jne	SHORT $LN11@Deallocate
push	OFFSET ??_C@_1FK@EJGLHMGC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	100					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN11@Deallocate
int	3
push	0
push	100					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Count$[ebp]
shl	eax, 3
mov	DWORD PTR __User_size$[ebp], eax
cmp	DWORD PTR __User_size$[ebp], 4096	
jb	$LN3@Deallocate
mov	eax, DWORD PTR __Ptr$[ebp]
mov	DWORD PTR __Ptr_user$3[ebp], eax
mov	eax, DWORD PTR __Ptr_user$3[ebp]
and	eax, 31					
je	SHORT $LN4@Deallocate
mov	eax, OFFSET ??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
test	eax, eax
je	SHORT $LN12@Deallocate
xor	ecx, ecx
jne	SHORT $LN13@Deallocate
push	OFFSET ??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	106					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN13@Deallocate
int	3
push	0
push	106					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, 4
mov	DWORD PTR __Ptr_ptr$2[ebp], eax
mov	eax, DWORD PTR __Ptr_ptr$2[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR __Ptr_container$1[ebp], ecx
mov	eax, 4
imul	ecx, eax, -1
mov	edx, DWORD PTR __Ptr_ptr$2[ebp]
cmp	DWORD PTR [edx+ecx], -84215046		
je	SHORT $LN5@Deallocate
mov	eax, OFFSET ??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
test	eax, eax
je	SHORT $LN14@Deallocate
xor	ecx, ecx
jne	SHORT $LN15@Deallocate
push	OFFSET ??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	116					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN15@Deallocate
int	3
push	0
push	116					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, DWORD PTR __Ptr_user$3[ebp]
jb	SHORT $LN6@Deallocate
mov	eax, OFFSET ??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
test	eax, eax
je	SHORT $LN16@Deallocate
xor	ecx, ecx
jne	SHORT $LN17@Deallocate
push	OFFSET ??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	120					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN17@Deallocate
int	3
push	0
push	120					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, 8
jae	SHORT $LN7@Deallocate
mov	eax, OFFSET ??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
test	eax, eax
je	SHORT $LN18@Deallocate
xor	ecx, ecx
jne	SHORT $LN19@Deallocate
push	OFFSET ??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	124					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN19@Deallocate
int	3
push	0
push	124					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, 39					
jbe	SHORT $LN8@Deallocate
mov	eax, OFFSET ??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
test	eax, eax
je	SHORT $LN20@Deallocate
xor	ecx, ecx
jne	SHORT $LN21@Deallocate
push	OFFSET ??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	132					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN21@Deallocate
int	3
push	0
push	132					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_container$1[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
call	??3@YAXPAX@Z				
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 240				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Deallocate@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@YAXPAV?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@0@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 240				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-240]
mov	ecx, 60					
mov	eax, -858993460				
rep stosd
cmp	DWORD PTR __Count$[ebp], 536870911	
jbe	SHORT $LN2@Deallocate
mov	eax, OFFSET ??_C@_0CG@FHBDFCGK@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5sizeof?5@
test	eax, eax
je	SHORT $LN10@Deallocate
xor	ecx, ecx
jne	SHORT $LN11@Deallocate
push	OFFSET ??_C@_1FK@EJGLHMGC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	100					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN11@Deallocate
int	3
push	0
push	100					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Count$[ebp]
shl	eax, 3
mov	DWORD PTR __User_size$[ebp], eax
cmp	DWORD PTR __User_size$[ebp], 4096	
jb	$LN3@Deallocate
mov	eax, DWORD PTR __Ptr$[ebp]
mov	DWORD PTR __Ptr_user$3[ebp], eax
mov	eax, DWORD PTR __Ptr_user$3[ebp]
and	eax, 31					
je	SHORT $LN4@Deallocate
mov	eax, OFFSET ??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
test	eax, eax
je	SHORT $LN12@Deallocate
xor	ecx, ecx
jne	SHORT $LN13@Deallocate
push	OFFSET ??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	106					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN13@Deallocate
int	3
push	0
push	106					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, 4
mov	DWORD PTR __Ptr_ptr$2[ebp], eax
mov	eax, DWORD PTR __Ptr_ptr$2[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR __Ptr_container$1[ebp], ecx
mov	eax, 4
imul	ecx, eax, -1
mov	edx, DWORD PTR __Ptr_ptr$2[ebp]
cmp	DWORD PTR [edx+ecx], -84215046		
je	SHORT $LN5@Deallocate
mov	eax, OFFSET ??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
test	eax, eax
je	SHORT $LN14@Deallocate
xor	ecx, ecx
jne	SHORT $LN15@Deallocate
push	OFFSET ??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	116					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN15@Deallocate
int	3
push	0
push	116					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, DWORD PTR __Ptr_user$3[ebp]
jb	SHORT $LN6@Deallocate
mov	eax, OFFSET ??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
test	eax, eax
je	SHORT $LN16@Deallocate
xor	ecx, ecx
jne	SHORT $LN17@Deallocate
push	OFFSET ??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	120					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN17@Deallocate
int	3
push	0
push	120					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, 8
jae	SHORT $LN7@Deallocate
mov	eax, OFFSET ??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
test	eax, eax
je	SHORT $LN18@Deallocate
xor	ecx, ecx
jne	SHORT $LN19@Deallocate
push	OFFSET ??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	124					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN19@Deallocate
int	3
push	0
push	124					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, 39					
jbe	SHORT $LN8@Deallocate
mov	eax, OFFSET ??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
test	eax, eax
je	SHORT $LN20@Deallocate
xor	ecx, ecx
jne	SHORT $LN21@Deallocate
push	OFFSET ??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	132					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN21@Deallocate
int	3
push	0
push	132					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_container$1[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
call	??3@YAXPAX@Z				
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 240				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Deallocate@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@std@@YAXPAV?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@0@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 240				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-240]
mov	ecx, 60					
mov	eax, -858993460				
rep stosd
cmp	DWORD PTR __Count$[ebp], 357913941	
jbe	SHORT $LN2@Deallocate
mov	eax, OFFSET ??_C@_0CG@FHBDFCGK@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5sizeof?5@
test	eax, eax
je	SHORT $LN10@Deallocate
xor	ecx, ecx
jne	SHORT $LN11@Deallocate
push	OFFSET ??_C@_1FK@EJGLHMGC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	100					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN11@Deallocate
int	3
push	0
push	100					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
imul	eax, DWORD PTR __Count$[ebp], 12
mov	DWORD PTR __User_size$[ebp], eax
cmp	DWORD PTR __User_size$[ebp], 4096	
jb	$LN3@Deallocate
mov	eax, DWORD PTR __Ptr$[ebp]
mov	DWORD PTR __Ptr_user$3[ebp], eax
mov	eax, DWORD PTR __Ptr_user$3[ebp]
and	eax, 31					
je	SHORT $LN4@Deallocate
mov	eax, OFFSET ??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
test	eax, eax
je	SHORT $LN12@Deallocate
xor	ecx, ecx
jne	SHORT $LN13@Deallocate
push	OFFSET ??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	106					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN13@Deallocate
int	3
push	0
push	106					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, 4
mov	DWORD PTR __Ptr_ptr$2[ebp], eax
mov	eax, DWORD PTR __Ptr_ptr$2[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR __Ptr_container$1[ebp], ecx
mov	eax, 4
imul	ecx, eax, -1
mov	edx, DWORD PTR __Ptr_ptr$2[ebp]
cmp	DWORD PTR [edx+ecx], -84215046		
je	SHORT $LN5@Deallocate
mov	eax, OFFSET ??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
test	eax, eax
je	SHORT $LN14@Deallocate
xor	ecx, ecx
jne	SHORT $LN15@Deallocate
push	OFFSET ??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	116					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN15@Deallocate
int	3
push	0
push	116					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, DWORD PTR __Ptr_user$3[ebp]
jb	SHORT $LN6@Deallocate
mov	eax, OFFSET ??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
test	eax, eax
je	SHORT $LN16@Deallocate
xor	ecx, ecx
jne	SHORT $LN17@Deallocate
push	OFFSET ??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	120					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN17@Deallocate
int	3
push	0
push	120					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, 8
jae	SHORT $LN7@Deallocate
mov	eax, OFFSET ??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
test	eax, eax
je	SHORT $LN18@Deallocate
xor	ecx, ecx
jne	SHORT $LN19@Deallocate
push	OFFSET ??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	124					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN19@Deallocate
int	3
push	0
push	124					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, 39					
jbe	SHORT $LN8@Deallocate
mov	eax, OFFSET ??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
test	eax, eax
je	SHORT $LN20@Deallocate
xor	ecx, ecx
jne	SHORT $LN21@Deallocate
push	OFFSET ??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	132					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN21@Deallocate
int	3
push	0
push	132					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_container$1[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
call	??3@YAXPAX@Z				
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 240				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Deallocate@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@YAXPAV?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@0@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 240				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-240]
mov	ecx, 60					
mov	eax, -858993460				
rep stosd
cmp	DWORD PTR __Count$[ebp], 536870911	
jbe	SHORT $LN2@Deallocate
mov	eax, OFFSET ??_C@_0CG@FHBDFCGK@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5sizeof?5@
test	eax, eax
je	SHORT $LN10@Deallocate
xor	ecx, ecx
jne	SHORT $LN11@Deallocate
push	OFFSET ??_C@_1FK@EJGLHMGC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	100					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN11@Deallocate
int	3
push	0
push	100					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Count$[ebp]
shl	eax, 3
mov	DWORD PTR __User_size$[ebp], eax
cmp	DWORD PTR __User_size$[ebp], 4096	
jb	$LN3@Deallocate
mov	eax, DWORD PTR __Ptr$[ebp]
mov	DWORD PTR __Ptr_user$3[ebp], eax
mov	eax, DWORD PTR __Ptr_user$3[ebp]
and	eax, 31					
je	SHORT $LN4@Deallocate
mov	eax, OFFSET ??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
test	eax, eax
je	SHORT $LN12@Deallocate
xor	ecx, ecx
jne	SHORT $LN13@Deallocate
push	OFFSET ??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	106					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN13@Deallocate
int	3
push	0
push	106					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, 4
mov	DWORD PTR __Ptr_ptr$2[ebp], eax
mov	eax, DWORD PTR __Ptr_ptr$2[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR __Ptr_container$1[ebp], ecx
mov	eax, 4
imul	ecx, eax, -1
mov	edx, DWORD PTR __Ptr_ptr$2[ebp]
cmp	DWORD PTR [edx+ecx], -84215046		
je	SHORT $LN5@Deallocate
mov	eax, OFFSET ??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
test	eax, eax
je	SHORT $LN14@Deallocate
xor	ecx, ecx
jne	SHORT $LN15@Deallocate
push	OFFSET ??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	116					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN15@Deallocate
int	3
push	0
push	116					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, DWORD PTR __Ptr_user$3[ebp]
jb	SHORT $LN6@Deallocate
mov	eax, OFFSET ??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
test	eax, eax
je	SHORT $LN16@Deallocate
xor	ecx, ecx
jne	SHORT $LN17@Deallocate
push	OFFSET ??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	120					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN17@Deallocate
int	3
push	0
push	120					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, 8
jae	SHORT $LN7@Deallocate
mov	eax, OFFSET ??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
test	eax, eax
je	SHORT $LN18@Deallocate
xor	ecx, ecx
jne	SHORT $LN19@Deallocate
push	OFFSET ??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	124					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN19@Deallocate
int	3
push	0
push	124					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, 39					
jbe	SHORT $LN8@Deallocate
mov	eax, OFFSET ??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
test	eax, eax
je	SHORT $LN20@Deallocate
xor	ecx, ecx
jne	SHORT $LN21@Deallocate
push	OFFSET ??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	132					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN21@Deallocate
int	3
push	0
push	132					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_container$1[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
call	??3@YAXPAX@Z				
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 240				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Deallocate@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@std@@YAXPAV?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@0@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 240				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-240]
mov	ecx, 60					
mov	eax, -858993460				
rep stosd
cmp	DWORD PTR __Count$[ebp], 357913941	
jbe	SHORT $LN2@Deallocate
mov	eax, OFFSET ??_C@_0CG@FHBDFCGK@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5sizeof?5@
test	eax, eax
je	SHORT $LN10@Deallocate
xor	ecx, ecx
jne	SHORT $LN11@Deallocate
push	OFFSET ??_C@_1FK@EJGLHMGC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	100					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN11@Deallocate
int	3
push	0
push	100					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
imul	eax, DWORD PTR __Count$[ebp], 12
mov	DWORD PTR __User_size$[ebp], eax
cmp	DWORD PTR __User_size$[ebp], 4096	
jb	$LN3@Deallocate
mov	eax, DWORD PTR __Ptr$[ebp]
mov	DWORD PTR __Ptr_user$3[ebp], eax
mov	eax, DWORD PTR __Ptr_user$3[ebp]
and	eax, 31					
je	SHORT $LN4@Deallocate
mov	eax, OFFSET ??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
test	eax, eax
je	SHORT $LN12@Deallocate
xor	ecx, ecx
jne	SHORT $LN13@Deallocate
push	OFFSET ??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	106					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN13@Deallocate
int	3
push	0
push	106					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, 4
mov	DWORD PTR __Ptr_ptr$2[ebp], eax
mov	eax, DWORD PTR __Ptr_ptr$2[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR __Ptr_container$1[ebp], ecx
mov	eax, 4
imul	ecx, eax, -1
mov	edx, DWORD PTR __Ptr_ptr$2[ebp]
cmp	DWORD PTR [edx+ecx], -84215046		
je	SHORT $LN5@Deallocate
mov	eax, OFFSET ??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
test	eax, eax
je	SHORT $LN14@Deallocate
xor	ecx, ecx
jne	SHORT $LN15@Deallocate
push	OFFSET ??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	116					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN15@Deallocate
int	3
push	0
push	116					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, DWORD PTR __Ptr_user$3[ebp]
jb	SHORT $LN6@Deallocate
mov	eax, OFFSET ??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
test	eax, eax
je	SHORT $LN16@Deallocate
xor	ecx, ecx
jne	SHORT $LN17@Deallocate
push	OFFSET ??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	120					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN17@Deallocate
int	3
push	0
push	120					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, 8
jae	SHORT $LN7@Deallocate
mov	eax, OFFSET ??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
test	eax, eax
je	SHORT $LN18@Deallocate
xor	ecx, ecx
jne	SHORT $LN19@Deallocate
push	OFFSET ??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	124					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN19@Deallocate
int	3
push	0
push	124					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, 39					
jbe	SHORT $LN8@Deallocate
mov	eax, OFFSET ??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
test	eax, eax
je	SHORT $LN20@Deallocate
xor	ecx, ecx
jne	SHORT $LN21@Deallocate
push	OFFSET ??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	132					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN21@Deallocate
int	3
push	0
push	132					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_container$1[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
call	??3@YAXPAX@Z				
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 240				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Deallocate@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@std@@YAXPAV?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@0@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 240				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-240]
mov	ecx, 60					
mov	eax, -858993460				
rep stosd
cmp	DWORD PTR __Count$[ebp], 536870911	
jbe	SHORT $LN2@Deallocate
mov	eax, OFFSET ??_C@_0CG@FHBDFCGK@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5sizeof?5@
test	eax, eax
je	SHORT $LN10@Deallocate
xor	ecx, ecx
jne	SHORT $LN11@Deallocate
push	OFFSET ??_C@_1FK@EJGLHMGC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	100					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN11@Deallocate
int	3
push	0
push	100					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Count$[ebp]
shl	eax, 3
mov	DWORD PTR __User_size$[ebp], eax
cmp	DWORD PTR __User_size$[ebp], 4096	
jb	$LN3@Deallocate
mov	eax, DWORD PTR __Ptr$[ebp]
mov	DWORD PTR __Ptr_user$3[ebp], eax
mov	eax, DWORD PTR __Ptr_user$3[ebp]
and	eax, 31					
je	SHORT $LN4@Deallocate
mov	eax, OFFSET ??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
test	eax, eax
je	SHORT $LN12@Deallocate
xor	ecx, ecx
jne	SHORT $LN13@Deallocate
push	OFFSET ??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	106					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN13@Deallocate
int	3
push	0
push	106					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, 4
mov	DWORD PTR __Ptr_ptr$2[ebp], eax
mov	eax, DWORD PTR __Ptr_ptr$2[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR __Ptr_container$1[ebp], ecx
mov	eax, 4
imul	ecx, eax, -1
mov	edx, DWORD PTR __Ptr_ptr$2[ebp]
cmp	DWORD PTR [edx+ecx], -84215046		
je	SHORT $LN5@Deallocate
mov	eax, OFFSET ??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
test	eax, eax
je	SHORT $LN14@Deallocate
xor	ecx, ecx
jne	SHORT $LN15@Deallocate
push	OFFSET ??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	116					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN15@Deallocate
int	3
push	0
push	116					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, DWORD PTR __Ptr_user$3[ebp]
jb	SHORT $LN6@Deallocate
mov	eax, OFFSET ??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
test	eax, eax
je	SHORT $LN16@Deallocate
xor	ecx, ecx
jne	SHORT $LN17@Deallocate
push	OFFSET ??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	120					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN17@Deallocate
int	3
push	0
push	120					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, 8
jae	SHORT $LN7@Deallocate
mov	eax, OFFSET ??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
test	eax, eax
je	SHORT $LN18@Deallocate
xor	ecx, ecx
jne	SHORT $LN19@Deallocate
push	OFFSET ??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	124					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN19@Deallocate
int	3
push	0
push	124					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, 39					
jbe	SHORT $LN8@Deallocate
mov	eax, OFFSET ??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
test	eax, eax
je	SHORT $LN20@Deallocate
xor	ecx, ecx
jne	SHORT $LN21@Deallocate
push	OFFSET ??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	132					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN21@Deallocate
int	3
push	0
push	132					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_container$1[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
call	??3@YAXPAX@Z				
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 240				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Deallocate@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@std@@YAXPAV?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@0@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 240				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-240]
mov	ecx, 60					
mov	eax, -858993460				
rep stosd
cmp	DWORD PTR __Count$[ebp], 268435455	
jbe	SHORT $LN2@Deallocate
mov	eax, OFFSET ??_C@_0CG@FHBDFCGK@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5sizeof?5@
test	eax, eax
je	SHORT $LN10@Deallocate
xor	ecx, ecx
jne	SHORT $LN11@Deallocate
push	OFFSET ??_C@_1FK@EJGLHMGC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	100					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN11@Deallocate
int	3
push	0
push	100					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Count$[ebp]
shl	eax, 4
mov	DWORD PTR __User_size$[ebp], eax
cmp	DWORD PTR __User_size$[ebp], 4096	
jb	$LN3@Deallocate
mov	eax, DWORD PTR __Ptr$[ebp]
mov	DWORD PTR __Ptr_user$3[ebp], eax
mov	eax, DWORD PTR __Ptr_user$3[ebp]
and	eax, 31					
je	SHORT $LN4@Deallocate
mov	eax, OFFSET ??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
test	eax, eax
je	SHORT $LN12@Deallocate
xor	ecx, ecx
jne	SHORT $LN13@Deallocate
push	OFFSET ??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	106					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN13@Deallocate
int	3
push	0
push	106					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, 4
mov	DWORD PTR __Ptr_ptr$2[ebp], eax
mov	eax, DWORD PTR __Ptr_ptr$2[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR __Ptr_container$1[ebp], ecx
mov	eax, 4
imul	ecx, eax, -1
mov	edx, DWORD PTR __Ptr_ptr$2[ebp]
cmp	DWORD PTR [edx+ecx], -84215046		
je	SHORT $LN5@Deallocate
mov	eax, OFFSET ??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
test	eax, eax
je	SHORT $LN14@Deallocate
xor	ecx, ecx
jne	SHORT $LN15@Deallocate
push	OFFSET ??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	116					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN15@Deallocate
int	3
push	0
push	116					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, DWORD PTR __Ptr_user$3[ebp]
jb	SHORT $LN6@Deallocate
mov	eax, OFFSET ??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
test	eax, eax
je	SHORT $LN16@Deallocate
xor	ecx, ecx
jne	SHORT $LN17@Deallocate
push	OFFSET ??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	120					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN17@Deallocate
int	3
push	0
push	120					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, 8
jae	SHORT $LN7@Deallocate
mov	eax, OFFSET ??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
test	eax, eax
je	SHORT $LN18@Deallocate
xor	ecx, ecx
jne	SHORT $LN19@Deallocate
push	OFFSET ??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	124					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN19@Deallocate
int	3
push	0
push	124					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, 39					
jbe	SHORT $LN8@Deallocate
mov	eax, OFFSET ??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
test	eax, eax
je	SHORT $LN20@Deallocate
xor	ecx, ecx
jne	SHORT $LN21@Deallocate
push	OFFSET ??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	132					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN21@Deallocate
int	3
push	0
push	132					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_container$1[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
call	??3@YAXPAX@Z				
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 240				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Deallocate@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@YAXPAV?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@0@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 240				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-240]
mov	ecx, 60					
mov	eax, -858993460				
rep stosd
cmp	DWORD PTR __Count$[ebp], 357913941	
jbe	SHORT $LN2@Deallocate
mov	eax, OFFSET ??_C@_0CG@FHBDFCGK@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5sizeof?5@
test	eax, eax
je	SHORT $LN10@Deallocate
xor	ecx, ecx
jne	SHORT $LN11@Deallocate
push	OFFSET ??_C@_1FK@EJGLHMGC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	100					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN11@Deallocate
int	3
push	0
push	100					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
imul	eax, DWORD PTR __Count$[ebp], 12
mov	DWORD PTR __User_size$[ebp], eax
cmp	DWORD PTR __User_size$[ebp], 4096	
jb	$LN3@Deallocate
mov	eax, DWORD PTR __Ptr$[ebp]
mov	DWORD PTR __Ptr_user$3[ebp], eax
mov	eax, DWORD PTR __Ptr_user$3[ebp]
and	eax, 31					
je	SHORT $LN4@Deallocate
mov	eax, OFFSET ??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
test	eax, eax
je	SHORT $LN12@Deallocate
xor	ecx, ecx
jne	SHORT $LN13@Deallocate
push	OFFSET ??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	106					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN13@Deallocate
int	3
push	0
push	106					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, 4
mov	DWORD PTR __Ptr_ptr$2[ebp], eax
mov	eax, DWORD PTR __Ptr_ptr$2[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR __Ptr_container$1[ebp], ecx
mov	eax, 4
imul	ecx, eax, -1
mov	edx, DWORD PTR __Ptr_ptr$2[ebp]
cmp	DWORD PTR [edx+ecx], -84215046		
je	SHORT $LN5@Deallocate
mov	eax, OFFSET ??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
test	eax, eax
je	SHORT $LN14@Deallocate
xor	ecx, ecx
jne	SHORT $LN15@Deallocate
push	OFFSET ??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	116					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN15@Deallocate
int	3
push	0
push	116					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, DWORD PTR __Ptr_user$3[ebp]
jb	SHORT $LN6@Deallocate
mov	eax, OFFSET ??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
test	eax, eax
je	SHORT $LN16@Deallocate
xor	ecx, ecx
jne	SHORT $LN17@Deallocate
push	OFFSET ??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	120					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN17@Deallocate
int	3
push	0
push	120					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, 8
jae	SHORT $LN7@Deallocate
mov	eax, OFFSET ??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
test	eax, eax
je	SHORT $LN18@Deallocate
xor	ecx, ecx
jne	SHORT $LN19@Deallocate
push	OFFSET ??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	124					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN19@Deallocate
int	3
push	0
push	124					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_user$3[ebp]
sub	eax, DWORD PTR __Ptr_container$1[ebp]
cmp	eax, 39					
jbe	SHORT $LN8@Deallocate
mov	eax, OFFSET ??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
test	eax, eax
je	SHORT $LN20@Deallocate
xor	ecx, ecx
jne	SHORT $LN21@Deallocate
push	OFFSET ??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
push	0
push	132					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	2
call	__CrtDbgReportW
add	esp, 24					
cmp	eax, 1
jne	SHORT $LN21@Deallocate
int	3
push	0
push	132					
push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
call	__invalid_parameter
add	esp, 20					
mov	eax, DWORD PTR __Ptr_container$1[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
call	??3@YAXPAX@Z				
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 240				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Clone@X@?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABEPAV?$_Func_base@_NAAPAVWindowInfo@@@1@PAXU?$integral_constant@_N$0A@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABEABV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Where$[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABEABV?$allocator@H@2@XZ 
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABEABV<lambda_8ad1c185be25e490e788bf92305592c9>@@XZ 
push	eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABV<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@ABV<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Clone
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
npad	2
DD	1
DD	$LN4@Clone
DD	-17					
DD	1
DD	$LN3@Clone
DB	95					
DB	65					
DB	108					
DB	0
ENDP
??$construct@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV_lambda_8ad1c185be25e490e788bf92305592c9_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YA$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@1@PAV?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@$$QAV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$_Invoke_ret@_NAAV_lambda_8ad1c185be25e490e788bf92305592c9_@@AAPAVWindowInfo@@@std@@YA_NU?$_Forced@_N$0A@@0@AAV_lambda_8ad1c185be25e490e788bf92305592c9_@@AAPAVWindowInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Vals_1>$[ebp]
push	eax
call	??$forward@AAPAVWindowInfo@@@std@@YAAAPAVWindowInfo@@AAPAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Vals_0>$[ebp]
push	ecx
call	??$forward@AAV<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YAAAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAV1@@Z 
add	esp, 4
push	eax
call	??$invoke@AAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAPAVWindowInfo@@@std@@YA_NAAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAPAVWindowInfo@@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$invoke@AAV_lambda_8ad1c185be25e490e788bf92305592c9_@@AAPAVWindowInfo@@@std@@YA_NAAV_lambda_8ad1c185be25e490e788bf92305592c9_@@AAPAVWindowInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_0>$[ebp]
push	eax
call	??$forward@AAPAVWindowInfo@@@std@@YAAAPAVWindowInfo@@AAPAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Obj$[ebp]
push	ecx
call	??$forward@AAV<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YAAAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAV1@@Z 
add	esp, 4
push	eax
call	??$_Call@AAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAPAVWindowInfo@@@_Invoker_functor@std@@SA_NAAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAPAVWindowInfo@@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Call@AAV_lambda_8ad1c185be25e490e788bf92305592c9_@@AAPAVWindowInfo@@@_Invoker_functor@std@@SA_NAAV_lambda_8ad1c185be25e490e788bf92305592c9_@@AAPAVWindowInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_0>$[ebp]
push	eax
call	??$forward@AAPAVWindowInfo@@@std@@YAAAPAVWindowInfo@@AAPAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR __Obj$[ebp]
push	edx
call	??$forward@AAV<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YAAAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAV1@@Z 
add	esp, 4
mov	ecx, eax
call	??R<lambda_8ad1c185be25e490e788bf92305592c9>@@QBE_NPAVWindowInfo@@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@AAV_lambda_8ad1c185be25e490e788bf92305592c9_@@@std@@YAAAV_lambda_8ad1c185be25e490e788bf92305592c9_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$addressof@$$CBV_lambda_8ad1c185be25e490e788bf92305592c9_@@@std@@YAPBV_lambda_8ad1c185be25e490e788bf92305592c9_@@ABV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$_Addressof@$$CBV<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YAPBV<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV1@U?$integral_constant@_N$0A@@0@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$destroy@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
push	ecx
call	??$destroy@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@1@PAV?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$?0H@?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$_Clone@X@?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@ABEPAV?$_Func_base@_NAAPAVTabInfo@@@1@PAXU?$integral_constant@_N$0A@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@ABEABV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Where$[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@ABEABV?$allocator@H@2@XZ 
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@ABEABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@XZ 
push	eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@ABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@ABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Clone
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
npad	2
DD	1
DD	$LN4@Clone
DD	-17					
DD	1
DD	$LN3@Clone
DB	95					
DB	65					
DB	108					
DB	0
ENDP
??$construct@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@$$QAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YA$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@1@PAV?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@$$QAV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$_Invoke_ret@_NAAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@AAPAVTabInfo@@@std@@YA_NU?$_Forced@_N$0A@@0@AAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@AAPAVTabInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Vals_1>$[ebp]
push	eax
call	??$forward@AAPAVTabInfo@@@std@@YAAAPAVTabInfo@@AAPAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Vals_0>$[ebp]
push	ecx
call	??$forward@AAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YAAAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAV1@@Z 
add	esp, 4
push	eax
call	??$invoke@AAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAPAVTabInfo@@@std@@YA_NAAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAPAVTabInfo@@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$invoke@AAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@AAPAVTabInfo@@@std@@YA_NAAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@AAPAVTabInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_0>$[ebp]
push	eax
call	??$forward@AAPAVTabInfo@@@std@@YAAAPAVTabInfo@@AAPAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Obj$[ebp]
push	ecx
call	??$forward@AAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YAAAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAV1@@Z 
add	esp, 4
push	eax
call	??$_Call@AAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAPAVTabInfo@@@_Invoker_functor@std@@SA_NAAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAPAVTabInfo@@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Call@AAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@AAPAVTabInfo@@@_Invoker_functor@std@@SA_NAAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@AAPAVTabInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_0>$[ebp]
push	eax
call	??$forward@AAPAVTabInfo@@@std@@YAAAPAVTabInfo@@AAPAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR __Obj$[ebp]
push	edx
call	??$forward@AAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YAAAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAV1@@Z 
add	esp, 4
mov	ecx, eax
call	??R<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@QBE_NPAVTabInfo@@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@AAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@@std@@YAAAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$addressof@$$CBV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@@std@@YAPBV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@ABV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$_Addressof@$$CBV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YAPBV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV1@U?$integral_constant@_N$0A@@0@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$destroy@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
push	ecx
call	??$destroy@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@1@PAV?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$?0H@?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$_Clone@X@?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABEPAV?$_Func_base@_NAAPAVWindowInfo@@@1@PAXU?$integral_constant@_N$0A@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABEABV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Where$[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABEABV?$allocator@H@2@XZ 
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABEABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@XZ 
push	eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@ABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Clone
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
npad	2
DD	1
DD	$LN4@Clone
DD	-17					
DD	1
DD	$LN3@Clone
DB	95					
DB	65					
DB	108					
DB	0
ENDP
??$construct@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YA$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@1@PAV?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@$$QAV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$_Invoke_ret@_NAAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@AAPAVWindowInfo@@@std@@YA_NU?$_Forced@_N$0A@@0@AAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@AAPAVWindowInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Vals_1>$[ebp]
push	eax
call	??$forward@AAPAVWindowInfo@@@std@@YAAAPAVWindowInfo@@AAPAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Vals_0>$[ebp]
push	ecx
call	??$forward@AAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YAAAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAV1@@Z 
add	esp, 4
push	eax
call	??$invoke@AAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAPAVWindowInfo@@@std@@YA_NAAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAPAVWindowInfo@@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$invoke@AAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@AAPAVWindowInfo@@@std@@YA_NAAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@AAPAVWindowInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_0>$[ebp]
push	eax
call	??$forward@AAPAVWindowInfo@@@std@@YAAAPAVWindowInfo@@AAPAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Obj$[ebp]
push	ecx
call	??$forward@AAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YAAAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAV1@@Z 
add	esp, 4
push	eax
call	??$_Call@AAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAPAVWindowInfo@@@_Invoker_functor@std@@SA_NAAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAPAVWindowInfo@@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Call@AAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@AAPAVWindowInfo@@@_Invoker_functor@std@@SA_NAAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@AAPAVWindowInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_0>$[ebp]
push	eax
call	??$forward@AAPAVWindowInfo@@@std@@YAAAPAVWindowInfo@@AAPAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR __Obj$[ebp]
push	edx
call	??$forward@AAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YAAAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAV1@@Z 
add	esp, 4
mov	ecx, eax
call	??R<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@QBE@PAVWindowInfo@@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@AAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@@std@@YAAAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$addressof@$$CBV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@@std@@YAPBV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@ABV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$_Addressof@$$CBV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YAPBV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV1@U?$integral_constant@_N$0A@@0@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$destroy@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
push	ecx
call	??$destroy@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@1@PAV?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$?0H@?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$_Clone@X@?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@ABEPAV?$_Func_base@X$$V@1@PAXU?$integral_constant@_N$0A@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@ABEABV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Where$[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@ABEABV?$allocator@H@2@XZ 
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@ABEABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@XZ 
push	eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Clone
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
npad	2
DD	1
DD	$LN4@Clone
DD	-17					
DD	1
DD	$LN3@Clone
DB	95					
DB	65					
DB	108					
DB	0
ENDP
??$construct@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YA$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@$$QAV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$_Invoke_ret@XAAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@std@@YAXU?$_Forced@X$00@0@AAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Vals_0>$[ebp]
push	eax
call	??$forward@AAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YAAAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@AAV1@@Z 
add	esp, 4
push	eax
call	??$invoke@AAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@$$V@std@@YAXAAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@Z 
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$invoke@AAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@$$V@std@@YAXAAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Obj$[ebp]
push	eax
call	??$forward@AAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YAAAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@AAV1@@Z 
add	esp, 4
push	eax
call	??$_Call@AAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@$$V@_Invoker_functor@std@@SAXAAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@Z 
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Call@AAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@$$V@_Invoker_functor@std@@SAXAAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Obj$[ebp]
push	eax
call	??$forward@AAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YAAAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@AAV1@@Z 
add	esp, 4
mov	ecx, eax
call	??R<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@QBEXXZ 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@AAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@std@@YAAAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$addressof@$$CBV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@std@@YAPBV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@ABV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$_Addressof@$$CBV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YAPBV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV1@U?$integral_constant@_N$0A@@0@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$destroy@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
push	ecx
call	??$destroy@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@1@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$?0H@?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$_Clone@X@?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@ABEPAV?$_Func_base@XPAVRenderedBitmap@@@1@PAXU?$integral_constant@_N$0A@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@ABEABV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Where$[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@ABEABV?$allocator@H@2@XZ 
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@ABEABV<lambda_344027958ff46b907d624215e4045c6d>@@XZ 
push	eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@ABV<lambda_344027958ff46b907d624215e4045c6d>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@ABV<lambda_344027958ff46b907d624215e4045c6d>@@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Clone
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
npad	2
DD	1
DD	$LN4@Clone
DD	-17					
DD	1
DD	$LN3@Clone
DB	95					
DB	65					
DB	108					
DB	0
ENDP
??$construct@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@$$QAV_lambda_344027958ff46b907d624215e4045c6d_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YA$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@1@PAV?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@$$QAV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$_Invoke_ret@XAAV_lambda_344027958ff46b907d624215e4045c6d_@@PAVRenderedBitmap@@@std@@YAXU?$_Forced@X$00@0@AAV_lambda_344027958ff46b907d624215e4045c6d_@@$$QAPAVRenderedBitmap@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Vals_1>$[ebp]
push	eax
call	??$forward@PAVRenderedBitmap@@@std@@YA$$QAPAVRenderedBitmap@@AAPAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Vals_0>$[ebp]
push	ecx
call	??$forward@AAV<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YAAAV<lambda_344027958ff46b907d624215e4045c6d>@@AAV1@@Z 
add	esp, 4
push	eax
call	??$invoke@AAV<lambda_344027958ff46b907d624215e4045c6d>@@PAVRenderedBitmap@@@std@@YAXAAV<lambda_344027958ff46b907d624215e4045c6d>@@$$QAPAVRenderedBitmap@@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$invoke@AAV_lambda_344027958ff46b907d624215e4045c6d_@@PAVRenderedBitmap@@@std@@YAXAAV_lambda_344027958ff46b907d624215e4045c6d_@@$$QAPAVRenderedBitmap@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_0>$[ebp]
push	eax
call	??$forward@PAVRenderedBitmap@@@std@@YA$$QAPAVRenderedBitmap@@AAPAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Obj$[ebp]
push	ecx
call	??$forward@AAV<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YAAAV<lambda_344027958ff46b907d624215e4045c6d>@@AAV1@@Z 
add	esp, 4
push	eax
call	??$_Call@AAV<lambda_344027958ff46b907d624215e4045c6d>@@PAVRenderedBitmap@@@_Invoker_functor@std@@SAXAAV<lambda_344027958ff46b907d624215e4045c6d>@@$$QAPAVRenderedBitmap@@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Call@AAV_lambda_344027958ff46b907d624215e4045c6d_@@PAVRenderedBitmap@@@_Invoker_functor@std@@SAXAAV_lambda_344027958ff46b907d624215e4045c6d_@@$$QAPAVRenderedBitmap@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_0>$[ebp]
push	eax
call	??$forward@PAVRenderedBitmap@@@std@@YA$$QAPAVRenderedBitmap@@AAPAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR __Obj$[ebp]
push	edx
call	??$forward@AAV<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YAAAV<lambda_344027958ff46b907d624215e4045c6d>@@AAV1@@Z 
add	esp, 4
mov	ecx, eax
call	??R<lambda_344027958ff46b907d624215e4045c6d>@@QBE@PAVRenderedBitmap@@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@AAV_lambda_344027958ff46b907d624215e4045c6d_@@@std@@YAAAV_lambda_344027958ff46b907d624215e4045c6d_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$addressof@$$CBV_lambda_344027958ff46b907d624215e4045c6d_@@@std@@YAPBV_lambda_344027958ff46b907d624215e4045c6d_@@ABV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$_Addressof@$$CBV<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YAPBV<lambda_344027958ff46b907d624215e4045c6d>@@ABV1@U?$integral_constant@_N$0A@@0@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$destroy@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
push	ecx
call	??$destroy@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@1@PAV?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$?0H@?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$_Clone@X@?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@ABEPAV?$_Func_base@X$$V@1@PAXU?$integral_constant@_N$0A@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@ABEABV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Where$[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@ABEABV?$allocator@H@2@XZ 
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@ABEABV<lambda_9bd99f01148b93d640266ff787e7a365>@@XZ 
push	eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Clone
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
npad	2
DD	1
DD	$LN4@Clone
DD	-17					
DD	1
DD	$LN3@Clone
DB	95					
DB	65					
DB	108					
DB	0
ENDP
??$construct@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_9bd99f01148b93d640266ff787e7a365_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YA$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@$$QAV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$_Invoke_ret@XAAV_lambda_9bd99f01148b93d640266ff787e7a365_@@@std@@YAXU?$_Forced@X$00@0@AAV_lambda_9bd99f01148b93d640266ff787e7a365_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Vals_0>$[ebp]
push	eax
call	??$forward@AAV<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YAAAV<lambda_9bd99f01148b93d640266ff787e7a365>@@AAV1@@Z 
add	esp, 4
push	eax
call	??$invoke@AAV<lambda_9bd99f01148b93d640266ff787e7a365>@@$$V@std@@YAXAAV<lambda_9bd99f01148b93d640266ff787e7a365>@@@Z 
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$invoke@AAV_lambda_9bd99f01148b93d640266ff787e7a365_@@$$V@std@@YAXAAV_lambda_9bd99f01148b93d640266ff787e7a365_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Obj$[ebp]
push	eax
call	??$forward@AAV<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YAAAV<lambda_9bd99f01148b93d640266ff787e7a365>@@AAV1@@Z 
add	esp, 4
push	eax
call	??$_Call@AAV<lambda_9bd99f01148b93d640266ff787e7a365>@@$$V@_Invoker_functor@std@@SAXAAV<lambda_9bd99f01148b93d640266ff787e7a365>@@@Z 
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Call@AAV_lambda_9bd99f01148b93d640266ff787e7a365_@@$$V@_Invoker_functor@std@@SAXAAV_lambda_9bd99f01148b93d640266ff787e7a365_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Obj$[ebp]
push	eax
call	??$forward@AAV<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YAAAV<lambda_9bd99f01148b93d640266ff787e7a365>@@AAV1@@Z 
add	esp, 4
mov	ecx, eax
call	??R<lambda_9bd99f01148b93d640266ff787e7a365>@@QBEXXZ 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@AAV_lambda_9bd99f01148b93d640266ff787e7a365_@@@std@@YAAAV_lambda_9bd99f01148b93d640266ff787e7a365_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$addressof@$$CBV_lambda_9bd99f01148b93d640266ff787e7a365_@@@std@@YAPBV_lambda_9bd99f01148b93d640266ff787e7a365_@@ABV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$_Addressof@$$CBV<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YAPBV<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV1@U?$integral_constant@_N$0A@@0@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$destroy@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
push	ecx
call	??$destroy@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@1@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$?0H@?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$_Clone@X@?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@ABEPAV?$_Func_base@X$$V@1@PAXU?$integral_constant@_N$0A@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@ABEABV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Where$[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@ABEABV?$allocator@H@2@XZ 
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@ABEABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@XZ 
push	eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Clone
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
npad	2
DD	1
DD	$LN4@Clone
DD	-17					
DD	1
DD	$LN3@Clone
DB	95					
DB	65					
DB	108					
DB	0
ENDP
??$construct@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YA$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@$$QAV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$_Invoke_ret@XAAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@std@@YAXU?$_Forced@X$00@0@AAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Vals_0>$[ebp]
push	eax
call	??$forward@AAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YAAAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@AAV1@@Z 
add	esp, 4
push	eax
call	??$invoke@AAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@$$V@std@@YAXAAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@Z 
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$invoke@AAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@$$V@std@@YAXAAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Obj$[ebp]
push	eax
call	??$forward@AAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YAAAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@AAV1@@Z 
add	esp, 4
push	eax
call	??$_Call@AAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@$$V@_Invoker_functor@std@@SAXAAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@Z 
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Call@AAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@$$V@_Invoker_functor@std@@SAXAAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Obj$[ebp]
push	eax
call	??$forward@AAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YAAAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@AAV1@@Z 
add	esp, 4
mov	ecx, eax
call	??R<lambda_3e43df60b671223f56f9731f4dfebb0f>@@QBEXXZ 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@AAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@std@@YAAAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$addressof@$$CBV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@std@@YAPBV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@ABV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$_Addressof@$$CBV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YAPBV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV1@U?$integral_constant@_N$0A@@0@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$destroy@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
push	ecx
call	??$destroy@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@1@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$?0H@?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$_Clone@X@?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@ABEPAV?$_Func_base@X$$V@1@PAXU?$integral_constant@_N$0A@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@ABEABV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Where$[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@ABEABV?$allocator@H@2@XZ 
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@ABEABV<lambda_6285d5a3719bb8faf2336baccac06139>@@XZ 
push	eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Clone
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
npad	2
DD	1
DD	$LN4@Clone
DD	-17					
DD	1
DD	$LN3@Clone
DB	95					
DB	65					
DB	108					
DB	0
ENDP
??$construct@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@1@$$QAV_lambda_6285d5a3719bb8faf2336baccac06139_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YA$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@$$QAV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$_Invoke_ret@XAAV_lambda_6285d5a3719bb8faf2336baccac06139_@@@std@@YAXU?$_Forced@X$00@0@AAV_lambda_6285d5a3719bb8faf2336baccac06139_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Vals_0>$[ebp]
push	eax
call	??$forward@AAV<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YAAAV<lambda_6285d5a3719bb8faf2336baccac06139>@@AAV1@@Z 
add	esp, 4
push	eax
call	??$invoke@AAV<lambda_6285d5a3719bb8faf2336baccac06139>@@$$V@std@@YAXAAV<lambda_6285d5a3719bb8faf2336baccac06139>@@@Z 
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$invoke@AAV_lambda_6285d5a3719bb8faf2336baccac06139_@@$$V@std@@YAXAAV_lambda_6285d5a3719bb8faf2336baccac06139_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Obj$[ebp]
push	eax
call	??$forward@AAV<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YAAAV<lambda_6285d5a3719bb8faf2336baccac06139>@@AAV1@@Z 
add	esp, 4
push	eax
call	??$_Call@AAV<lambda_6285d5a3719bb8faf2336baccac06139>@@$$V@_Invoker_functor@std@@SAXAAV<lambda_6285d5a3719bb8faf2336baccac06139>@@@Z 
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Call@AAV_lambda_6285d5a3719bb8faf2336baccac06139_@@$$V@_Invoker_functor@std@@SAXAAV_lambda_6285d5a3719bb8faf2336baccac06139_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Obj$[ebp]
push	eax
call	??$forward@AAV<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YAAAV<lambda_6285d5a3719bb8faf2336baccac06139>@@AAV1@@Z 
add	esp, 4
mov	ecx, eax
call	??R<lambda_6285d5a3719bb8faf2336baccac06139>@@QBEXXZ 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@AAV_lambda_6285d5a3719bb8faf2336baccac06139_@@@std@@YAAAV_lambda_6285d5a3719bb8faf2336baccac06139_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$addressof@$$CBV_lambda_6285d5a3719bb8faf2336baccac06139_@@@std@@YAPBV_lambda_6285d5a3719bb8faf2336baccac06139_@@ABV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$_Addressof@$$CBV<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YAPBV<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV1@U?$integral_constant@_N$0A@@0@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$destroy@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
push	ecx
call	??$destroy@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@1@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$?0H@?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$_Clone@X@?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@ABEPAV?$_Func_base@XPAVHttpRsp@@@1@PAXU?$integral_constant@_N$0A@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@ABEABV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Where$[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@ABEABV?$allocator@H@2@XZ 
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@ABEABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@XZ 
push	eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@ABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@1@ABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Clone
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
npad	2
DD	1
DD	$LN4@Clone
DD	-17					
DD	1
DD	$LN3@Clone
DB	95					
DB	65					
DB	108					
DB	0
ENDP
??$construct@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@1@$$QAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@$$QAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_1>$[ebp]
push	eax
call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Args_0>$[ebp]
push	ecx
call	??$forward@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YA$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??$construct@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@1@PAV?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@1@$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@$$QAV?$allocator@H@1@@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??$move@AAV?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Invoke_ret@XAAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@PAVHttpRsp@@@std@@YAXU?$_Forced@X$00@0@AAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@$$QAPAVHttpRsp@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Vals_1>$[ebp]
push	eax
call	??$forward@PAVHttpRsp@@@std@@YA$$QAPAVHttpRsp@@AAPAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _<_Vals_0>$[ebp]
push	ecx
call	??$forward@AAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YAAAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@AAV1@@Z 
add	esp, 4
push	eax
call	??$invoke@AAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@PAVHttpRsp@@@std@@YAXAAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@$$QAPAVHttpRsp@@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$invoke@AAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@PAVHttpRsp@@@std@@YAXAAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@$$QAPAVHttpRsp@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_0>$[ebp]
push	eax
call	??$forward@PAVHttpRsp@@@std@@YA$$QAPAVHttpRsp@@AAPAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR __Obj$[ebp]
push	ecx
call	??$forward@AAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YAAAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@AAV1@@Z 
add	esp, 4
push	eax
call	??$_Call@AAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@PAVHttpRsp@@@_Invoker_functor@std@@SAXAAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@$$QAPAVHttpRsp@@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Call@AAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@PAVHttpRsp@@@_Invoker_functor@std@@SAXAAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@$$QAPAVHttpRsp@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _<_Args_0>$[ebp]
push	eax
call	??$forward@PAVHttpRsp@@@std@@YA$$QAPAVHttpRsp@@AAPAV1@@Z 
add	esp, 4
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR __Obj$[ebp]
push	edx
call	??$forward@AAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YAAAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@AAV1@@Z 
add	esp, 4
mov	ecx, eax
call	??R<lambda_1a01023b43b3e313893bd9ee262479f6>@@QBE@PAVHttpRsp@@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@AAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@@std@@YAAAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@PAVHttpRsp@@@std@@YA$$QAPAVHttpRsp@@AAPAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$addressof@$$CBV_lambda_1a01023b43b3e313893bd9ee262479f6_@@@std@@YAPBV_lambda_1a01023b43b3e313893bd9ee262479f6_@@ABV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$_Addressof@$$CBV<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YAPBV<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV1@U?$integral_constant@_N$0A@@0@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$destroy@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
push	ecx
call	??$destroy@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@1@PAV?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@1@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$?0H@?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?RABIABI@?$less@X@std@@QBE_NABI0@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Left$[ebp]
mov	ecx, DWORD PTR __Right$[ebp]
mov	edx, DWORD PTR [eax]
cmp	edx, DWORD PTR [ecx]
jae	SHORT $LN3@operator
mov	DWORD PTR tv65[ebp], 1
jmp	SHORT $LN4@operator
mov	DWORD PTR tv65[ebp], 0
mov	al, BYTE PTR tv65[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$?RABHABH@?$less@X@std@@QBE_NABH0@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Left$[ebp]
mov	ecx, DWORD PTR __Right$[ebp]
mov	edx, DWORD PTR [eax]
cmp	edx, DWORD PTR [ecx]
jge	SHORT $LN3@operator
mov	DWORD PTR tv65[ebp], 1
jmp	SHORT $LN4@operator
mov	DWORD PTR tv65[ebp], 0
mov	al, BYTE PTR tv65[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$_Reset_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@3@@?$_Func_class@XPAVHttpRsp@@@std@@IAEX$$QAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@ABV?$allocator@H@1@PAV?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getspace@?$_Func_class@XPAVHttpRsp@@@std@@AAEPAXXZ 
mov	DWORD PTR __Ptr$[ebp], eax
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$forward@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YA$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@1@$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Set@?$_Func_class@XPAVHttpRsp@@@std@@AAEXPAV?$_Func_base@XPAVHttpRsp@@@2@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	20					
ENDP
??_G?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@QAEPAXI@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@QAE@XZ 
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	12					
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?_Callee@?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@ABEABV_lambda_1a01023b43b3e313893bd9ee262479f6_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@$00@std@@QBEABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Callee@?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@AAEAAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@$00@std@@QAEAAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Myax@?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@ABEABV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@$00@std@@QBEABV?$allocator@H@2@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Myax@?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@AAEAAV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@$00@std@@QAEAAV?$allocator@H@2@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@$00@std@@QBEABV_lambda_1a01023b43b3e313893bd9ee262479f6_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@$00@std@@QAEAAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@$00@std@@QBEABV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@$00@std@@QAEAAV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Delete_this@?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@EAEX_N@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$destroy@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@1@@Z 
movzx	eax, BYTE PTR __Deallocate$[ebp]
test	eax, eax
je	SHORT $LN1@Delete_thi
push	1
mov	eax, DWORD PTR _this$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@2@I@Z 
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@Delete_thi
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
npad	3
DD	1
DD	$LN5@Delete_thi
DD	-17					
DD	1
DD	$LN4@Delete_thi
DB	95					
DB	65					
DB	108					
DB	0
ENDP
?_Get@?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@EBEPBXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@ABEABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@XZ 
push	eax
call	??$addressof@$$CBV<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YAPBV<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV1@@Z 
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Target_type@?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@EBEABVtype_info@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, OFFSET ??_R0?AV<lambda_1a01023b43b3e313893bd9ee262479f6>@@@8
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Do_call@?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@EAEX$$QAPAVHttpRsp@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_0>$[ebp]
push	eax
call	??$forward@PAVHttpRsp@@@std@@YA$$QAPAVHttpRsp@@AAPAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@AAEAAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@XZ 
push	eax
movzx	ecx, BYTE PTR $T1[ebp]
push	ecx
call	??$_Invoke_ret@XAAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@PAVHttpRsp@@@std@@YAXU?$_Forced@X$00@0@AAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@$$QAPAVHttpRsp@@@Z 
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?_Move@?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@EAEPAV?$_Func_base@XPAVHttpRsp@@@2@PAX@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Where$[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
call	??$move@AAV?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@AAEAAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@XZ 
push	eax
call	??$move@AAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YA$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@AAV1@@Z 
add	esp, 4
push	eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@1@$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@$$QAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Move
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
DD	1
DD	$LN4@Move
DD	-17					
DD	1
DD	$LN3@Move
DB	95					
DB	65					
DB	108					
DB	0
ENDP
?_Copy@?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@EBEPAV?$_Func_base@XPAVHttpRsp@@@2@PAX@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Where$[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Clone@X@?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@ABEPAV?$_Func_base@XPAVHttpRsp@@@1@PAXU?$integral_constant@_N$0A@@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@QAE@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@6B@
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_base@XPAVHttpRsp@@@std@@QAE@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$?0H@?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$?0H@?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@2@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Count$[ebp]
push	eax
mov	ecx, DWORD PTR __Ptr$[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?deallocate@?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@2@I@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?deallocate@?$allocator@V?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@XPAVHttpRsp@@@2@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Count$[ebp]
push	eax
mov	ecx, DWORD PTR __Ptr$[ebp]
push	ecx
call	??$_Deallocate@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@YAXPAV?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@0@I@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$_Test_callable@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@@std@@YA_NABV_lambda_1a01023b43b3e313893bd9ee262479f6_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Arg$[ebp]
push	ecx
call	??$_Test_callable@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YA_NABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@U?$integral_constant@_N$0A@@0@@Z 
add	esp, 8
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Test_calla
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	1
DD	$LN4@Test_calla
DD	-5					
DD	1
DD	$LN3@Test_calla
DB	95					
DB	84					
DB	101					
DB	115					
DB	116					
DB	97					
DB	98					
DB	108					
DB	101					
DB	0
ENDP
??$_Reset_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@std@@@3@@?$_Func_class@X$$V@std@@IAEX$$QAV_lambda_6285d5a3719bb8faf2336baccac06139_@@ABV?$allocator@H@1@PAV?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getspace@?$_Func_class@X$$V@std@@AAEPAXXZ 
mov	DWORD PTR __Ptr$[ebp], eax
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$forward@V<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YA$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@V<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Set@?$_Func_class@X$$V@std@@AAEXPAV?$_Func_base@X$$V@2@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	20					
ENDP
??_G?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@QAEPAXI@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@QAE@XZ 
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	16					
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?_Callee@?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@ABEABV_lambda_6285d5a3719bb8faf2336baccac06139_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_6285d5a3719bb8faf2336baccac06139>@@$00@std@@QBEABV<lambda_6285d5a3719bb8faf2336baccac06139>@@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Callee@?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@AAEAAV_lambda_6285d5a3719bb8faf2336baccac06139_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_6285d5a3719bb8faf2336baccac06139>@@$00@std@@QAEAAV<lambda_6285d5a3719bb8faf2336baccac06139>@@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Myax@?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@ABEABV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_6285d5a3719bb8faf2336baccac06139>@@$00@std@@QBEABV?$allocator@H@2@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Myax@?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_6285d5a3719bb8faf2336baccac06139>@@$00@std@@QAEAAV?$allocator@H@2@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_6285d5a3719bb8faf2336baccac06139_@@$00@std@@QBEABV_lambda_6285d5a3719bb8faf2336baccac06139_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_6285d5a3719bb8faf2336baccac06139_@@$00@std@@QAEAAV_lambda_6285d5a3719bb8faf2336baccac06139_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_6285d5a3719bb8faf2336baccac06139_@@$00@std@@QBEABV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_6285d5a3719bb8faf2336baccac06139_@@$00@std@@QAEAAV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Delete_this@?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@EAEX_N@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$destroy@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@1@@Z 
movzx	eax, BYTE PTR __Deallocate$[ebp]
test	eax, eax
je	SHORT $LN1@Delete_thi
push	1
mov	eax, DWORD PTR _this$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@2@I@Z 
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@Delete_thi
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
npad	3
DD	1
DD	$LN5@Delete_thi
DD	-17					
DD	1
DD	$LN4@Delete_thi
DB	95					
DB	65					
DB	108					
DB	0
ENDP
?_Get@?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@EBEPBXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@ABEABV<lambda_6285d5a3719bb8faf2336baccac06139>@@XZ 
push	eax
call	??$addressof@$$CBV<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YAPBV<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV1@@Z 
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Target_type@?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@EBEABVtype_info@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, OFFSET ??_R0?AV<lambda_6285d5a3719bb8faf2336baccac06139>@@@8
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Do_call@?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@EAEXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@AAEAAV<lambda_6285d5a3719bb8faf2336baccac06139>@@XZ 
push	eax
movzx	eax, BYTE PTR $T1[ebp]
push	eax
call	??$_Invoke_ret@XAAV<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YAXU?$_Forced@X$00@0@AAV<lambda_6285d5a3719bb8faf2336baccac06139>@@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Move@?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@EAEPAV?$_Func_base@X$$V@2@PAX@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Where$[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
call	??$move@AAV?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@AAEAAV<lambda_6285d5a3719bb8faf2336baccac06139>@@XZ 
push	eax
call	??$move@AAV<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YA$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@AAV1@@Z 
add	esp, 4
push	eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@$$QAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Move
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
DD	1
DD	$LN4@Move
DD	-17					
DD	1
DD	$LN3@Move
DB	95					
DB	65					
DB	108					
DB	0
ENDP
?_Copy@?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@EBEPAV?$_Func_base@X$$V@2@PAX@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Where$[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Clone@X@?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@ABEPAV?$_Func_base@X$$V@1@PAXU?$integral_constant@_N$0A@@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@QAE@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@6B@
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_base@X$$V@std@@QAE@XZ	
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$?0H@?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@std@@QAE@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$?0H@?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@2@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Count$[ebp]
push	eax
mov	ecx, DWORD PTR __Ptr$[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?deallocate@?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@2@I@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?deallocate@?$allocator@V?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@X$$V@2@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Count$[ebp]
push	eax
mov	ecx, DWORD PTR __Ptr$[ebp]
push	ecx
call	??$_Deallocate@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@YAXPAV?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@0@I@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$_Test_callable@V_lambda_6285d5a3719bb8faf2336baccac06139_@@@std@@YA_NABV_lambda_6285d5a3719bb8faf2336baccac06139_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Arg$[ebp]
push	ecx
call	??$_Test_callable@V<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YA_NABV<lambda_6285d5a3719bb8faf2336baccac06139>@@U?$integral_constant@_N$0A@@0@@Z 
add	esp, 8
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Test_calla
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	1
DD	$LN4@Test_calla
DD	-5					
DD	1
DD	$LN3@Test_calla
DB	95					
DB	84					
DB	101					
DB	115					
DB	116					
DB	97					
DB	98					
DB	108					
DB	101					
DB	0
ENDP
??$_Reset_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@std@@@3@@?$_Func_class@X$$V@std@@IAEX$$QAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@ABV?$allocator@H@1@PAV?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getspace@?$_Func_class@X$$V@std@@AAEPAXXZ 
mov	DWORD PTR __Ptr$[ebp], eax
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$forward@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YA$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Set@?$_Func_class@X$$V@std@@AAEXPAV?$_Func_base@X$$V@2@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	20					
ENDP
??_G?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@QAEPAXI@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@QAE@XZ 
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	8
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?_Callee@?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@ABEABV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@$00@std@@QBEABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Callee@?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@AAEAAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@$00@std@@QAEAAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Myax@?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@ABEABV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@$00@std@@QBEABV?$allocator@H@2@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Myax@?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@$00@std@@QAEAAV?$allocator@H@2@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@$00@std@@QBEABV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@$00@std@@QAEAAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@$00@std@@QBEABV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@$00@std@@QAEAAV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Delete_this@?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@EAEX_N@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$destroy@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@1@@Z 
movzx	eax, BYTE PTR __Deallocate$[ebp]
test	eax, eax
je	SHORT $LN1@Delete_thi
push	1
mov	eax, DWORD PTR _this$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@2@I@Z 
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@Delete_thi
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
npad	3
DD	1
DD	$LN5@Delete_thi
DD	-17					
DD	1
DD	$LN4@Delete_thi
DB	95					
DB	65					
DB	108					
DB	0
ENDP
?_Get@?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@EBEPBXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@ABEABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@XZ 
push	eax
call	??$addressof@$$CBV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YAPBV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV1@@Z 
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Target_type@?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@EBEABVtype_info@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, OFFSET ??_R0?AV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@8
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Do_call@?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@EAEXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@AAEAAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@XZ 
push	eax
movzx	eax, BYTE PTR $T1[ebp]
push	eax
call	??$_Invoke_ret@XAAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YAXU?$_Forced@X$00@0@AAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Move@?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@EAEPAV?$_Func_base@X$$V@2@PAX@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Where$[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
call	??$move@AAV?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@AAEAAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@XZ 
push	eax
call	??$move@AAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YA$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@AAV1@@Z 
add	esp, 4
push	eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@$$QAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Move
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
DD	1
DD	$LN4@Move
DD	-17					
DD	1
DD	$LN3@Move
DB	95					
DB	65					
DB	108					
DB	0
ENDP
?_Copy@?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@EBEPAV?$_Func_base@X$$V@2@PAX@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Where$[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Clone@X@?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@ABEPAV?$_Func_base@X$$V@1@PAXU?$integral_constant@_N$0A@@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@QAE@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@6B@
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_base@X$$V@std@@QAE@XZ	
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$?0H@?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@std@@QAE@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$?0H@?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@2@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Count$[ebp]
push	eax
mov	ecx, DWORD PTR __Ptr$[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?deallocate@?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@2@I@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?deallocate@?$allocator@V?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@X$$V@2@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Count$[ebp]
push	eax
mov	ecx, DWORD PTR __Ptr$[ebp]
push	ecx
call	??$_Deallocate@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@YAXPAV?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@0@I@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$_Test_callable@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@std@@YA_NABV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Arg$[ebp]
push	ecx
call	??$_Test_callable@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YA_NABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@U?$integral_constant@_N$0A@@0@@Z 
add	esp, 8
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Test_calla
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	1
DD	$LN4@Test_calla
DD	-5					
DD	1
DD	$LN3@Test_calla
DB	95					
DB	84					
DB	101					
DB	115					
DB	116					
DB	97					
DB	98					
DB	108					
DB	101					
DB	0
ENDP
??$_Reset_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@std@@@3@@?$_Func_class@X$$V@std@@IAEX$$QAV_lambda_9bd99f01148b93d640266ff787e7a365_@@ABV?$allocator@H@1@PAV?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getspace@?$_Func_class@X$$V@std@@AAEPAXXZ 
mov	DWORD PTR __Ptr$[ebp], eax
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$forward@V<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YA$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@V<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Set@?$_Func_class@X$$V@std@@AAEXPAV?$_Func_base@X$$V@2@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	20					
ENDP
??_G?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@QAEPAXI@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@QAE@XZ 
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	12					
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?_Callee@?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@ABEABV_lambda_9bd99f01148b93d640266ff787e7a365_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_9bd99f01148b93d640266ff787e7a365>@@$00@std@@QBEABV<lambda_9bd99f01148b93d640266ff787e7a365>@@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Callee@?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@AAEAAV_lambda_9bd99f01148b93d640266ff787e7a365_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_9bd99f01148b93d640266ff787e7a365>@@$00@std@@QAEAAV<lambda_9bd99f01148b93d640266ff787e7a365>@@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Myax@?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@ABEABV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_9bd99f01148b93d640266ff787e7a365>@@$00@std@@QBEABV?$allocator@H@2@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Myax@?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_9bd99f01148b93d640266ff787e7a365>@@$00@std@@QAEAAV?$allocator@H@2@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_9bd99f01148b93d640266ff787e7a365_@@$00@std@@QBEABV_lambda_9bd99f01148b93d640266ff787e7a365_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_9bd99f01148b93d640266ff787e7a365_@@$00@std@@QAEAAV_lambda_9bd99f01148b93d640266ff787e7a365_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_9bd99f01148b93d640266ff787e7a365_@@$00@std@@QBEABV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_9bd99f01148b93d640266ff787e7a365_@@$00@std@@QAEAAV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Delete_this@?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@EAEX_N@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$destroy@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@1@@Z 
movzx	eax, BYTE PTR __Deallocate$[ebp]
test	eax, eax
je	SHORT $LN1@Delete_thi
push	1
mov	eax, DWORD PTR _this$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@2@I@Z 
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@Delete_thi
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
npad	3
DD	1
DD	$LN5@Delete_thi
DD	-17					
DD	1
DD	$LN4@Delete_thi
DB	95					
DB	65					
DB	108					
DB	0
ENDP
?_Get@?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@EBEPBXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@ABEABV<lambda_9bd99f01148b93d640266ff787e7a365>@@XZ 
push	eax
call	??$addressof@$$CBV<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YAPBV<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV1@@Z 
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Target_type@?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@EBEABVtype_info@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, OFFSET ??_R0?AV<lambda_9bd99f01148b93d640266ff787e7a365>@@@8
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Do_call@?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@EAEXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@AAEAAV<lambda_9bd99f01148b93d640266ff787e7a365>@@XZ 
push	eax
movzx	eax, BYTE PTR $T1[ebp]
push	eax
call	??$_Invoke_ret@XAAV<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YAXU?$_Forced@X$00@0@AAV<lambda_9bd99f01148b93d640266ff787e7a365>@@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Move@?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@EAEPAV?$_Func_base@X$$V@2@PAX@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Where$[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
call	??$move@AAV?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@AAEAAV<lambda_9bd99f01148b93d640266ff787e7a365>@@XZ 
push	eax
call	??$move@AAV<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YA$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@AAV1@@Z 
add	esp, 4
push	eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@$$QAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Move
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
DD	1
DD	$LN4@Move
DD	-17					
DD	1
DD	$LN3@Move
DB	95					
DB	65					
DB	108					
DB	0
ENDP
?_Copy@?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@EBEPAV?$_Func_base@X$$V@2@PAX@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Where$[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Clone@X@?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@ABEPAV?$_Func_base@X$$V@1@PAXU?$integral_constant@_N$0A@@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@QAE@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@6B@
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_base@X$$V@std@@QAE@XZ	
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$?0H@?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@std@@QAE@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$?0H@?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@2@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Count$[ebp]
push	eax
mov	ecx, DWORD PTR __Ptr$[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?deallocate@?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@2@I@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?deallocate@?$allocator@V?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@X$$V@2@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Count$[ebp]
push	eax
mov	ecx, DWORD PTR __Ptr$[ebp]
push	ecx
call	??$_Deallocate@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@YAXPAV?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@0@I@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$_Test_callable@V_lambda_9bd99f01148b93d640266ff787e7a365_@@@std@@YA_NABV_lambda_9bd99f01148b93d640266ff787e7a365_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Arg$[ebp]
push	ecx
call	??$_Test_callable@V<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YA_NABV<lambda_9bd99f01148b93d640266ff787e7a365>@@U?$integral_constant@_N$0A@@0@@Z 
add	esp, 8
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Test_calla
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	1
DD	$LN4@Test_calla
DD	-5					
DD	1
DD	$LN3@Test_calla
DB	95					
DB	84					
DB	101					
DB	115					
DB	116					
DB	97					
DB	98					
DB	108					
DB	101					
DB	0
ENDP
??$_Reset_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@3@@?$_Func_class@XPAVRenderedBitmap@@@std@@IAEX$$QAV_lambda_344027958ff46b907d624215e4045c6d_@@ABV?$allocator@H@1@PAV?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getspace@?$_Func_class@XPAVRenderedBitmap@@@std@@AAEPAXXZ 
mov	DWORD PTR __Ptr$[ebp], eax
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$forward@V<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YA$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@V<lambda_344027958ff46b907d624215e4045c6d>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Set@?$_Func_class@XPAVRenderedBitmap@@@std@@AAEXPAV?$_Func_base@XPAVRenderedBitmap@@@2@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	20					
ENDP
??_G?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@QAEPAXI@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@QAE@XZ 
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	8
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?_Callee@?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@ABEABV_lambda_344027958ff46b907d624215e4045c6d_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_344027958ff46b907d624215e4045c6d>@@$00@std@@QBEABV<lambda_344027958ff46b907d624215e4045c6d>@@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Callee@?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@AAEAAV_lambda_344027958ff46b907d624215e4045c6d_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_344027958ff46b907d624215e4045c6d>@@$00@std@@QAEAAV<lambda_344027958ff46b907d624215e4045c6d>@@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Myax@?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@ABEABV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_344027958ff46b907d624215e4045c6d>@@$00@std@@QBEABV?$allocator@H@2@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Myax@?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@AAEAAV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_344027958ff46b907d624215e4045c6d>@@$00@std@@QAEAAV?$allocator@H@2@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_344027958ff46b907d624215e4045c6d_@@$00@std@@QBEABV_lambda_344027958ff46b907d624215e4045c6d_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_344027958ff46b907d624215e4045c6d_@@$00@std@@QAEAAV_lambda_344027958ff46b907d624215e4045c6d_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_344027958ff46b907d624215e4045c6d_@@$00@std@@QBEABV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_344027958ff46b907d624215e4045c6d_@@$00@std@@QAEAAV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Delete_this@?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@EAEX_N@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$destroy@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@@Z 
movzx	eax, BYTE PTR __Deallocate$[ebp]
test	eax, eax
je	SHORT $LN1@Delete_thi
push	1
mov	eax, DWORD PTR _this$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@2@I@Z 
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@Delete_thi
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
npad	3
DD	1
DD	$LN5@Delete_thi
DD	-17					
DD	1
DD	$LN4@Delete_thi
DB	95					
DB	65					
DB	108					
DB	0
ENDP
?_Get@?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@EBEPBXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@ABEABV<lambda_344027958ff46b907d624215e4045c6d>@@XZ 
push	eax
call	??$addressof@$$CBV<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YAPBV<lambda_344027958ff46b907d624215e4045c6d>@@ABV1@@Z 
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Target_type@?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@EBEABVtype_info@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, OFFSET ??_R0?AV<lambda_344027958ff46b907d624215e4045c6d>@@@8
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Do_call@?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@EAEX$$QAPAVRenderedBitmap@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_0>$[ebp]
push	eax
call	??$forward@PAVRenderedBitmap@@@std@@YA$$QAPAVRenderedBitmap@@AAPAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@AAEAAV<lambda_344027958ff46b907d624215e4045c6d>@@XZ 
push	eax
movzx	ecx, BYTE PTR $T1[ebp]
push	ecx
call	??$_Invoke_ret@XAAV<lambda_344027958ff46b907d624215e4045c6d>@@PAVRenderedBitmap@@@std@@YAXU?$_Forced@X$00@0@AAV<lambda_344027958ff46b907d624215e4045c6d>@@$$QAPAVRenderedBitmap@@@Z 
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?_Move@?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@EAEPAV?$_Func_base@XPAVRenderedBitmap@@@2@PAX@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Where$[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
call	??$move@AAV?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@AAEAAV<lambda_344027958ff46b907d624215e4045c6d>@@XZ 
push	eax
call	??$move@AAV<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YA$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@AAV1@@Z 
add	esp, 4
push	eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@$$QAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Move
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
DD	1
DD	$LN4@Move
DD	-17					
DD	1
DD	$LN3@Move
DB	95					
DB	65					
DB	108					
DB	0
ENDP
?_Copy@?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@EBEPAV?$_Func_base@XPAVRenderedBitmap@@@2@PAX@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Where$[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Clone@X@?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@ABEPAV?$_Func_base@XPAVRenderedBitmap@@@1@PAXU?$integral_constant@_N$0A@@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@QAE@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@6B@
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_base@XPAVRenderedBitmap@@@std@@QAE@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$?0H@?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$?0H@?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@2@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Count$[ebp]
push	eax
mov	ecx, DWORD PTR __Ptr$[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?deallocate@?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@2@I@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?deallocate@?$allocator@V?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@XPAVRenderedBitmap@@@2@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Count$[ebp]
push	eax
mov	ecx, DWORD PTR __Ptr$[ebp]
push	ecx
call	??$_Deallocate@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@YAXPAV?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@0@I@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$_Test_callable@V_lambda_344027958ff46b907d624215e4045c6d_@@@std@@YA_NABV_lambda_344027958ff46b907d624215e4045c6d_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Arg$[ebp]
push	ecx
call	??$_Test_callable@V<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YA_NABV<lambda_344027958ff46b907d624215e4045c6d>@@U?$integral_constant@_N$0A@@0@@Z 
add	esp, 8
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Test_calla
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	1
DD	$LN4@Test_calla
DD	-5					
DD	1
DD	$LN3@Test_calla
DB	95					
DB	84					
DB	101					
DB	115					
DB	116					
DB	97					
DB	98					
DB	108					
DB	101					
DB	0
ENDP
??$_Reset_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@std@@@3@@?$_Func_class@X$$V@std@@IAEX$$QAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@ABV?$allocator@H@1@PAV?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getspace@?$_Func_class@X$$V@std@@AAEPAXXZ 
mov	DWORD PTR __Ptr$[ebp], eax
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$forward@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YA$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Set@?$_Func_class@X$$V@std@@AAEXPAV?$_Func_base@X$$V@2@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	20					
ENDP
??_G?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@QAEPAXI@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@QAE@XZ 
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	12					
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?_Callee@?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@ABEABV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@$00@std@@QBEABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Callee@?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@AAEAAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@$00@std@@QAEAAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Myax@?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@ABEABV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@$00@std@@QBEABV?$allocator@H@2@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Myax@?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@$00@std@@QAEAAV?$allocator@H@2@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@$00@std@@QBEABV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@$00@std@@QAEAAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@$00@std@@QBEABV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@$00@std@@QAEAAV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Delete_this@?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@EAEX_N@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$destroy@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@1@@Z 
movzx	eax, BYTE PTR __Deallocate$[ebp]
test	eax, eax
je	SHORT $LN1@Delete_thi
push	1
mov	eax, DWORD PTR _this$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@2@I@Z 
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@Delete_thi
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
npad	3
DD	1
DD	$LN5@Delete_thi
DD	-17					
DD	1
DD	$LN4@Delete_thi
DB	95					
DB	65					
DB	108					
DB	0
ENDP
?_Get@?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@EBEPBXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@ABEABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@XZ 
push	eax
call	??$addressof@$$CBV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YAPBV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV1@@Z 
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Target_type@?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@EBEABVtype_info@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, OFFSET ??_R0?AV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@8
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Do_call@?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@EAEXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@AAEAAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@XZ 
push	eax
movzx	eax, BYTE PTR $T1[ebp]
push	eax
call	??$_Invoke_ret@XAAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YAXU?$_Forced@X$00@0@AAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Move@?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@EAEPAV?$_Func_base@X$$V@2@PAX@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Where$[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
call	??$move@AAV?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@AAEAAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@XZ 
push	eax
call	??$move@AAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YA$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@AAV1@@Z 
add	esp, 4
push	eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@$$QAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Move
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
DD	1
DD	$LN4@Move
DD	-17					
DD	1
DD	$LN3@Move
DB	95					
DB	65					
DB	108					
DB	0
ENDP
?_Copy@?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@EBEPAV?$_Func_base@X$$V@2@PAX@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Where$[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Clone@X@?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@ABEPAV?$_Func_base@X$$V@1@PAXU?$integral_constant@_N$0A@@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@QAE@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@6B@
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_base@X$$V@std@@QAE@XZ	
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$?0H@?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@std@@QAE@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$?0H@?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@2@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Count$[ebp]
push	eax
mov	ecx, DWORD PTR __Ptr$[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?deallocate@?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@2@I@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?deallocate@?$allocator@V?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@X$$V@2@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Count$[ebp]
push	eax
mov	ecx, DWORD PTR __Ptr$[ebp]
push	ecx
call	??$_Deallocate@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@YAXPAV?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@0@I@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$_Test_callable@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@std@@YA_NABV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Arg$[ebp]
push	ecx
call	??$_Test_callable@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YA_NABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@U?$integral_constant@_N$0A@@0@@Z 
add	esp, 8
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Test_calla
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	1
DD	$LN4@Test_calla
DD	-5					
DD	1
DD	$LN3@Test_calla
DB	95					
DB	84					
DB	101					
DB	115					
DB	116					
DB	97					
DB	98					
DB	108					
DB	101					
DB	0
ENDP
??$_Reset_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@3@@?$_Func_class@_NAAPAVWindowInfo@@@std@@IAEX$$QAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@ABV?$allocator@H@1@PAV?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getspace@?$_Func_class@_NAAPAVWindowInfo@@@std@@AAEPAXXZ 
mov	DWORD PTR __Ptr$[ebp], eax
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$forward@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YA$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Set@?$_Func_class@_NAAPAVWindowInfo@@@std@@AAEXPAV?$_Func_base@_NAAPAVWindowInfo@@@2@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	20					
ENDP
??_G?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@QAEPAXI@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@QAE@XZ 
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	8
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?_Callee@?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABEABV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@$00@std@@QBEABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Callee@?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@AAEAAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@$00@std@@QAEAAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Myax@?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABEABV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@$00@std@@QBEABV?$allocator@H@2@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Myax@?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@AAEAAV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@$00@std@@QAEAAV?$allocator@H@2@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@$00@std@@QBEABV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@$00@std@@QAEAAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@$00@std@@QBEABV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@$00@std@@QAEAAV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Delete_this@?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@EAEX_N@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$destroy@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@@Z 
movzx	eax, BYTE PTR __Deallocate$[ebp]
test	eax, eax
je	SHORT $LN1@Delete_thi
push	1
mov	eax, DWORD PTR _this$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@2@I@Z 
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@Delete_thi
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
npad	3
DD	1
DD	$LN5@Delete_thi
DD	-17					
DD	1
DD	$LN4@Delete_thi
DB	95					
DB	65					
DB	108					
DB	0
ENDP
?_Get@?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@EBEPBXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABEABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@XZ 
push	eax
call	??$addressof@$$CBV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YAPBV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV1@@Z 
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Target_type@?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@EBEABVtype_info@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, OFFSET ??_R0?AV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@8
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Do_call@?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@EAE_NAAPAVWindowInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_0>$[ebp]
push	eax
call	??$forward@AAPAVWindowInfo@@@std@@YAAAPAVWindowInfo@@AAPAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@AAEAAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@XZ 
push	eax
movzx	ecx, BYTE PTR $T1[ebp]
push	ecx
call	??$_Invoke_ret@_NAAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAPAVWindowInfo@@@std@@YA_NU?$_Forced@_N$0A@@0@AAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAPAVWindowInfo@@@Z 
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?_Move@?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@EAEPAV?$_Func_base@_NAAPAVWindowInfo@@@2@PAX@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Where$[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
call	??$move@AAV?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@AAEAAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@XZ 
push	eax
call	??$move@AAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YA$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAV1@@Z 
add	esp, 4
push	eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@$$QAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Move
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
DD	1
DD	$LN4@Move
DD	-17					
DD	1
DD	$LN3@Move
DB	95					
DB	65					
DB	108					
DB	0
ENDP
?_Copy@?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@EBEPAV?$_Func_base@_NAAPAVWindowInfo@@@2@PAX@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Where$[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Clone@X@?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABEPAV?$_Func_base@_NAAPAVWindowInfo@@@1@PAXU?$integral_constant@_N$0A@@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@QAE@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@6B@
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_base@_NAAPAVWindowInfo@@@std@@QAE@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$?0H@?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$?0H@?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@2@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Count$[ebp]
push	eax
mov	ecx, DWORD PTR __Ptr$[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?deallocate@?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@2@I@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?deallocate@?$allocator@V?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@2@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Count$[ebp]
push	eax
mov	ecx, DWORD PTR __Ptr$[ebp]
push	ecx
call	??$_Deallocate@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@YAXPAV?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@0@I@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$_Test_callable@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@@std@@YA_NABV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Arg$[ebp]
push	ecx
call	??$_Test_callable@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YA_NABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@U?$integral_constant@_N$0A@@0@@Z 
add	esp, 8
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Test_calla
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	1
DD	$LN4@Test_calla
DD	-5					
DD	1
DD	$LN3@Test_calla
DB	95					
DB	84					
DB	101					
DB	115					
DB	116					
DB	97					
DB	98					
DB	108					
DB	101					
DB	0
ENDP
??$_Reset_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@3@@?$_Func_class@_NAAPAVTabInfo@@@std@@IAEX$$QAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@ABV?$allocator@H@1@PAV?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getspace@?$_Func_class@_NAAPAVTabInfo@@@std@@AAEPAXXZ 
mov	DWORD PTR __Ptr$[ebp], eax
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$forward@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YA$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Set@?$_Func_class@_NAAPAVTabInfo@@@std@@AAEXPAV?$_Func_base@_NAAPAVTabInfo@@@2@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	20					
ENDP
??_G?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@QAEPAXI@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@QAE@XZ 
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	8
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?_Callee@?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@ABEABV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@$00@std@@QBEABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Callee@?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@AAEAAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@$00@std@@QAEAAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Myax@?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@ABEABV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@$00@std@@QBEABV?$allocator@H@2@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Myax@?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@AAEAAV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@$00@std@@QAEAAV?$allocator@H@2@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@$00@std@@QBEABV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@$00@std@@QAEAAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@$00@std@@QBEABV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@$00@std@@QAEAAV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Delete_this@?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@EAEX_N@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$destroy@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@@Z 
movzx	eax, BYTE PTR __Deallocate$[ebp]
test	eax, eax
je	SHORT $LN1@Delete_thi
push	1
mov	eax, DWORD PTR _this$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@2@I@Z 
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@Delete_thi
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
npad	3
DD	1
DD	$LN5@Delete_thi
DD	-17					
DD	1
DD	$LN4@Delete_thi
DB	95					
DB	65					
DB	108					
DB	0
ENDP
?_Get@?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@EBEPBXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@ABEABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@XZ 
push	eax
call	??$addressof@$$CBV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YAPBV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV1@@Z 
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Target_type@?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@EBEABVtype_info@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, OFFSET ??_R0?AV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@8
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Do_call@?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@EAE_NAAPAVTabInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_0>$[ebp]
push	eax
call	??$forward@AAPAVTabInfo@@@std@@YAAAPAVTabInfo@@AAPAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@AAEAAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@XZ 
push	eax
movzx	ecx, BYTE PTR $T1[ebp]
push	ecx
call	??$_Invoke_ret@_NAAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAPAVTabInfo@@@std@@YA_NU?$_Forced@_N$0A@@0@AAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAPAVTabInfo@@@Z 
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?_Move@?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@EAEPAV?$_Func_base@_NAAPAVTabInfo@@@2@PAX@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Where$[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
call	??$move@AAV?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@AAEAAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@XZ 
push	eax
call	??$move@AAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YA$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAV1@@Z 
add	esp, 4
push	eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@$$QAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Move
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
DD	1
DD	$LN4@Move
DD	-17					
DD	1
DD	$LN3@Move
DB	95					
DB	65					
DB	108					
DB	0
ENDP
?_Copy@?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@EBEPAV?$_Func_base@_NAAPAVTabInfo@@@2@PAX@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Where$[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Clone@X@?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@ABEPAV?$_Func_base@_NAAPAVTabInfo@@@1@PAXU?$integral_constant@_N$0A@@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@QAE@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@6B@
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_base@_NAAPAVTabInfo@@@std@@QAE@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$?0H@?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$?0H@?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@2@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Count$[ebp]
push	eax
mov	ecx, DWORD PTR __Ptr$[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?deallocate@?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@2@I@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?deallocate@?$allocator@V?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@_NAAPAVTabInfo@@@2@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Count$[ebp]
push	eax
mov	ecx, DWORD PTR __Ptr$[ebp]
push	ecx
call	??$_Deallocate@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@YAXPAV?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@0@I@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$_Test_callable@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@@std@@YA_NABV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Arg$[ebp]
push	ecx
call	??$_Test_callable@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YA_NABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@U?$integral_constant@_N$0A@@0@@Z 
add	esp, 8
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Test_calla
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	1
DD	$LN4@Test_calla
DD	-5					
DD	1
DD	$LN3@Test_calla
DB	95					
DB	84					
DB	101					
DB	115					
DB	116					
DB	97					
DB	98					
DB	108					
DB	101					
DB	0
ENDP
??$_Reset_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@3@@?$_Func_class@_NAAPAVWindowInfo@@@std@@IAEX$$QAV_lambda_8ad1c185be25e490e788bf92305592c9_@@ABV?$allocator@H@1@PAV?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getspace@?$_Func_class@_NAAPAVWindowInfo@@@std@@AAEPAXXZ 
mov	DWORD PTR __Ptr$[ebp], eax
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$forward@V<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YA$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAV1@@Z 
add	esp, 4
push	eax
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Set@?$_Func_class@_NAAPAVWindowInfo@@@std@@AAEXPAV?$_Func_base@_NAAPAVWindowInfo@@@2@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	20					
ENDP
??_G?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@QAEPAXI@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@QAE@XZ 
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	8
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?_Callee@?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABEABV_lambda_8ad1c185be25e490e788bf92305592c9_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_8ad1c185be25e490e788bf92305592c9>@@$00@std@@QBEABV<lambda_8ad1c185be25e490e788bf92305592c9>@@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Callee@?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@AAEAAV_lambda_8ad1c185be25e490e788bf92305592c9_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_8ad1c185be25e490e788bf92305592c9>@@$00@std@@QAEAAV<lambda_8ad1c185be25e490e788bf92305592c9>@@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Myax@?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABEABV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_8ad1c185be25e490e788bf92305592c9>@@$00@std@@QBEABV?$allocator@H@2@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Myax@?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@AAEAAV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_8ad1c185be25e490e788bf92305592c9>@@$00@std@@QAEAAV?$allocator@H@2@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_8ad1c185be25e490e788bf92305592c9_@@$00@std@@QBEABV_lambda_8ad1c185be25e490e788bf92305592c9_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_8ad1c185be25e490e788bf92305592c9_@@$00@std@@QAEAAV_lambda_8ad1c185be25e490e788bf92305592c9_@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_8ad1c185be25e490e788bf92305592c9_@@$00@std@@QBEABV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V_lambda_8ad1c185be25e490e788bf92305592c9_@@$00@std@@QAEAAV?$allocator@H@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Delete_this@?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@EAEX_N@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$destroy@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@@Z 
movzx	eax, BYTE PTR __Deallocate$[ebp]
test	eax, eax
je	SHORT $LN1@Delete_thi
push	1
mov	eax, DWORD PTR _this$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@2@I@Z 
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@Delete_thi
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
npad	3
DD	1
DD	$LN5@Delete_thi
DD	-17					
DD	1
DD	$LN4@Delete_thi
DB	95					
DB	65					
DB	108					
DB	0
ENDP
?_Get@?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@EBEPBXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABEABV<lambda_8ad1c185be25e490e788bf92305592c9>@@XZ 
push	eax
call	??$addressof@$$CBV<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YAPBV<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV1@@Z 
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Target_type@?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@EBEABVtype_info@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, OFFSET ??_R0?AV<lambda_8ad1c185be25e490e788bf92305592c9>@@@8
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Do_call@?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@EAE_NAAPAVWindowInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _<_Args_0>$[ebp]
push	eax
call	??$forward@AAPAVWindowInfo@@@std@@YAAAPAVWindowInfo@@AAPAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@AAEAAV<lambda_8ad1c185be25e490e788bf92305592c9>@@XZ 
push	eax
movzx	ecx, BYTE PTR $T1[ebp]
push	ecx
call	??$_Invoke_ret@_NAAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAPAVWindowInfo@@@std@@YA_NU?$_Forced@_N$0A@@0@AAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAPAVWindowInfo@@@Z 
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?_Move@?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@EAEPAV?$_Func_base@_NAAPAVWindowInfo@@@2@PAX@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Where$[ebp]
mov	DWORD PTR __Ptr$[ebp], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Myax@?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@AAEAAV?$allocator@H@2@XZ 
push	eax
call	??$move@AAV?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Callee@?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@AAEAAV<lambda_8ad1c185be25e490e788bf92305592c9>@@XZ 
push	eax
call	??$move@AAV<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YA$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAV1@@Z 
add	esp, 4
push	eax
mov	eax, DWORD PTR __Ptr$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$construct@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@$$QAV?$allocator@H@1@@Z 
mov	eax, DWORD PTR __Ptr$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Move
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
DD	1
DD	$LN4@Move
DD	-17					
DD	1
DD	$LN3@Move
DB	95					
DB	65					
DB	108					
DB	0
ENDP
?_Copy@?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@EBEPAV?$_Func_base@_NAAPAVWindowInfo@@@2@PAX@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Where$[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Clone@X@?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@ABEPAV?$_Func_base@_NAAPAVWindowInfo@@@1@PAXU?$integral_constant@_N$0A@@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@QAE@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@6B@
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_base@_NAAPAVWindowInfo@@@std@@QAE@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$?0H@?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$?0H@?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@2@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Count$[ebp]
push	eax
mov	ecx, DWORD PTR __Ptr$[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?deallocate@?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@2@I@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?deallocate@?$allocator@V?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@QAEXPAV?$_Func_impl@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@2@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Count$[ebp]
push	eax
mov	ecx, DWORD PTR __Ptr$[ebp]
push	ecx
call	??$_Deallocate@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@YAXPAV?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@0@I@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??$_Test_callable@V_lambda_8ad1c185be25e490e788bf92305592c9_@@@std@@YA_NABV_lambda_8ad1c185be25e490e788bf92305592c9_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR __Arg$[ebp]
push	ecx
call	??$_Test_callable@V<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YA_NABV<lambda_8ad1c185be25e490e788bf92305592c9>@@U?$integral_constant@_N$0A@@0@@Z 
add	esp, 8
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@Test_calla
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	1
DD	$LN4@Test_calla
DD	-5					
DD	1
DD	$LN3@Test_calla
DB	95					
DB	84					
DB	101					
DB	115					
DB	116					
DB	97					
DB	98					
DB	108					
DB	101					
DB	0
ENDP
??$_Debug_lt_pred@U?$less@X@std@@ABIABI@std@@YA_NU?$less@X@0@ABI1PB_WI@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 196				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-196]
mov	ecx, 49					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR __Left$[ebp]
push	ecx
lea	ecx, DWORD PTR __Pred$[ebp]
call	??$?RABIABI@?$less@X@std@@QBE_NABI0@Z	
movzx	edx, al
test	edx, edx
jne	SHORT $LN5@Debug_lt_p
mov	BYTE PTR tv80[ebp], 0
jmp	SHORT $LN6@Debug_lt_p
mov	eax, DWORD PTR __Left$[ebp]
push	eax
mov	ecx, DWORD PTR __Right$[ebp]
push	ecx
lea	ecx, DWORD PTR __Pred$[ebp]
call	??$?RABIABI@?$less@X@std@@QBE_NABI0@Z	
movzx	edx, al
test	edx, edx
je	SHORT $LN3@Debug_lt_p
mov	eax, DWORD PTR __Line$[ebp]
push	eax
mov	ecx, DWORD PTR __File$[ebp]
push	ecx
push	OFFSET ??_C@_1CG@LEJCKCBB@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$AA@
call	?_Debug_message@std@@YAXPB_W0I@Z	
add	esp, 12					
mov	BYTE PTR tv79[ebp], 1
jmp	SHORT $LN4@Debug_lt_p
mov	BYTE PTR tv79[ebp], 1
mov	dl, BYTE PTR tv79[ebp]
mov	BYTE PTR tv80[ebp], dl
mov	al, BYTE PTR tv80[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 196				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@ABI@std@@YAABIABI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Debug_lt_pred@U?$less@X@std@@ABHABH@std@@YA_NU?$less@X@0@ABH1PB_WI@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 196				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-196]
mov	ecx, 49					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR __Left$[ebp]
push	ecx
lea	ecx, DWORD PTR __Pred$[ebp]
call	??$?RABHABH@?$less@X@std@@QBE_NABH0@Z	
movzx	edx, al
test	edx, edx
jne	SHORT $LN5@Debug_lt_p
mov	BYTE PTR tv80[ebp], 0
jmp	SHORT $LN6@Debug_lt_p
mov	eax, DWORD PTR __Left$[ebp]
push	eax
mov	ecx, DWORD PTR __Right$[ebp]
push	ecx
lea	ecx, DWORD PTR __Pred$[ebp]
call	??$?RABHABH@?$less@X@std@@QBE_NABH0@Z	
movzx	edx, al
test	edx, edx
je	SHORT $LN3@Debug_lt_p
mov	eax, DWORD PTR __Line$[ebp]
push	eax
mov	ecx, DWORD PTR __File$[ebp]
push	ecx
push	OFFSET ??_C@_1CG@LEJCKCBB@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$AA@
call	?_Debug_message@std@@YAXPB_W0I@Z	
add	esp, 12					
mov	BYTE PTR tv79[ebp], 1
jmp	SHORT $LN4@Debug_lt_p
mov	BYTE PTR tv79[ebp], 1
mov	dl, BYTE PTR tv79[ebp]
mov	BYTE PTR tv80[ebp], dl
mov	al, BYTE PTR tv80[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 196				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@ABH@std@@YAABHABH@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Reset_alloc@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@V?$allocator@H@std@@@?$_Func_class@XPAVHttpRsp@@@std@@IAEX$$QAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 252				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-252]
mov	ecx, 63					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$_Test_callable@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YA_NABV<lambda_1a01023b43b3e313893bd9ee262479f6>@@@Z 
add	esp, 4
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN2@Reset_allo
jmp	SHORT $LN1@Reset_allo
mov	DWORD PTR __Ptr$[ebp], 0
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
movzx	eax, BYTE PTR $T1[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
push	ecx
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$forward@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YA$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@3@@?$_Func_class@XPAVHttpRsp@@@std@@IAEX$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV?$allocator@H@1@PAV?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@XPAVHttpRsp@@@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z 
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@Reset_allo
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 252				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
npad	1
DD	1
DD	$LN5@Reset_allo
DD	-29					
DD	1
DD	$LN4@Reset_allo
DB	95					
DB	65					
DB	108					
DB	0
ENDP
??$forward@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@@std@@YA$$QAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Reset_alloc@V_lambda_6285d5a3719bb8faf2336baccac06139_@@V?$allocator@H@std@@@?$_Func_class@X$$V@std@@IAEX$$QAV_lambda_6285d5a3719bb8faf2336baccac06139_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 252				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-252]
mov	ecx, 63					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$_Test_callable@V<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YA_NABV<lambda_6285d5a3719bb8faf2336baccac06139>@@@Z 
add	esp, 4
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN2@Reset_allo
jmp	SHORT $LN1@Reset_allo
mov	DWORD PTR __Ptr$[ebp], 0
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
movzx	eax, BYTE PTR $T1[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
push	ecx
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$forward@V<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YA$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@@3@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV?$allocator@H@1@PAV?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@X$$V@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z 
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@Reset_allo
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 252				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
npad	1
DD	1
DD	$LN5@Reset_allo
DD	-29					
DD	1
DD	$LN4@Reset_allo
DB	95					
DB	65					
DB	108					
DB	0
ENDP
??$forward@V_lambda_6285d5a3719bb8faf2336baccac06139_@@@std@@YA$$QAV_lambda_6285d5a3719bb8faf2336baccac06139_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Reset_alloc@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@V?$allocator@H@std@@@?$_Func_class@X$$V@std@@IAEX$$QAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 252				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-252]
mov	ecx, 63					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$_Test_callable@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YA_NABV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@Z 
add	esp, 4
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN2@Reset_allo
jmp	SHORT $LN1@Reset_allo
mov	DWORD PTR __Ptr$[ebp], 0
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
movzx	eax, BYTE PTR $T1[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
push	ecx
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$forward@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YA$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@@3@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV?$allocator@H@1@PAV?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@X$$V@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z 
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@Reset_allo
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 252				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
npad	1
DD	1
DD	$LN5@Reset_allo
DD	-29					
DD	1
DD	$LN4@Reset_allo
DB	95					
DB	65					
DB	108					
DB	0
ENDP
??$forward@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@std@@YA$$QAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Reset_alloc@V_lambda_9bd99f01148b93d640266ff787e7a365_@@V?$allocator@H@std@@@?$_Func_class@X$$V@std@@IAEX$$QAV_lambda_9bd99f01148b93d640266ff787e7a365_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 252				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-252]
mov	ecx, 63					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$_Test_callable@V<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YA_NABV<lambda_9bd99f01148b93d640266ff787e7a365>@@@Z 
add	esp, 4
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN2@Reset_allo
jmp	SHORT $LN1@Reset_allo
mov	DWORD PTR __Ptr$[ebp], 0
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
movzx	eax, BYTE PTR $T1[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
push	ecx
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$forward@V<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YA$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@@3@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV?$allocator@H@1@PAV?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@X$$V@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z 
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@Reset_allo
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 252				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
npad	1
DD	1
DD	$LN5@Reset_allo
DD	-29					
DD	1
DD	$LN4@Reset_allo
DB	95					
DB	65					
DB	108					
DB	0
ENDP
??$forward@V_lambda_9bd99f01148b93d640266ff787e7a365_@@@std@@YA$$QAV_lambda_9bd99f01148b93d640266ff787e7a365_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Reset_alloc@V_lambda_344027958ff46b907d624215e4045c6d_@@V?$allocator@H@std@@@?$_Func_class@XPAVRenderedBitmap@@@std@@IAEX$$QAV_lambda_344027958ff46b907d624215e4045c6d_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 252				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-252]
mov	ecx, 63					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$_Test_callable@V<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YA_NABV<lambda_344027958ff46b907d624215e4045c6d>@@@Z 
add	esp, 4
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN2@Reset_allo
jmp	SHORT $LN1@Reset_allo
mov	DWORD PTR __Ptr$[ebp], 0
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
movzx	eax, BYTE PTR $T1[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
push	ecx
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$forward@V<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YA$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@3@@?$_Func_class@XPAVRenderedBitmap@@@std@@IAEX$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@ABV?$allocator@H@1@PAV?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@XPAVRenderedBitmap@@@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z 
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@Reset_allo
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 252				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
npad	1
DD	1
DD	$LN5@Reset_allo
DD	-29					
DD	1
DD	$LN4@Reset_allo
DB	95					
DB	65					
DB	108					
DB	0
ENDP
??$forward@V_lambda_344027958ff46b907d624215e4045c6d_@@@std@@YA$$QAV_lambda_344027958ff46b907d624215e4045c6d_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Reset_alloc@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@V?$allocator@H@std@@@?$_Func_class@X$$V@std@@IAEX$$QAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 252				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-252]
mov	ecx, 63					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$_Test_callable@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YA_NABV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@Z 
add	esp, 4
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN2@Reset_allo
jmp	SHORT $LN1@Reset_allo
mov	DWORD PTR __Ptr$[ebp], 0
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
movzx	eax, BYTE PTR $T1[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
push	ecx
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$forward@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YA$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@@3@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV?$allocator@H@1@PAV?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@X$$V@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z 
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@Reset_allo
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 252				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
npad	1
DD	1
DD	$LN5@Reset_allo
DD	-29					
DD	1
DD	$LN4@Reset_allo
DB	95					
DB	65					
DB	108					
DB	0
ENDP
??$forward@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@std@@YA$$QAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Reset_alloc@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@V?$allocator@H@std@@@?$_Func_class@_NAAPAVWindowInfo@@@std@@IAEX$$QAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 252				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-252]
mov	ecx, 63					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$_Test_callable@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YA_NABV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@Z 
add	esp, 4
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN2@Reset_allo
jmp	SHORT $LN1@Reset_allo
mov	DWORD PTR __Ptr$[ebp], 0
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
movzx	eax, BYTE PTR $T1[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
push	ecx
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$forward@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YA$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@3@@?$_Func_class@_NAAPAVWindowInfo@@@std@@IAEX$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV?$allocator@H@1@PAV?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z 
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@Reset_allo
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 252				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
npad	1
DD	1
DD	$LN5@Reset_allo
DD	-29					
DD	1
DD	$LN4@Reset_allo
DB	95					
DB	65					
DB	108					
DB	0
ENDP
??$forward@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@@std@@YA$$QAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Reset_alloc@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@V?$allocator@H@std@@@?$_Func_class@_NAAPAVTabInfo@@@std@@IAEX$$QAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 252				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-252]
mov	ecx, 63					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$_Test_callable@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YA_NABV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@Z 
add	esp, 4
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN2@Reset_allo
jmp	SHORT $LN1@Reset_allo
mov	DWORD PTR __Ptr$[ebp], 0
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
movzx	eax, BYTE PTR $T1[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
push	ecx
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$forward@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YA$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@3@@?$_Func_class@_NAAPAVTabInfo@@@std@@IAEX$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV?$allocator@H@1@PAV?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@_NAAPAVTabInfo@@@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z 
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@Reset_allo
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 252				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
npad	1
DD	1
DD	$LN5@Reset_allo
DD	-29					
DD	1
DD	$LN4@Reset_allo
DB	95					
DB	65					
DB	108					
DB	0
ENDP
??$forward@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@@std@@YA$$QAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Reset_alloc@V_lambda_8ad1c185be25e490e788bf92305592c9_@@V?$allocator@H@std@@@?$_Func_class@_NAAPAVWindowInfo@@@std@@IAEX$$QAV_lambda_8ad1c185be25e490e788bf92305592c9_@@ABV?$allocator@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 252				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-252]
mov	ecx, 63					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$_Test_callable@V<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YA_NABV<lambda_8ad1c185be25e490e788bf92305592c9>@@@Z 
add	esp, 4
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN2@Reset_allo
jmp	SHORT $LN1@Reset_allo
mov	DWORD PTR __Ptr$[ebp], 0
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z 
movzx	eax, BYTE PTR $T1[ebp]
push	eax
lea	ecx, DWORD PTR __Al$[ebp]
push	ecx
mov	edx, DWORD PTR __Ptr$[ebp]
push	edx
mov	eax, DWORD PTR __Ax$[ebp]
push	eax
mov	ecx, DWORD PTR __Val$[ebp]
push	ecx
call	??$forward@V<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YA$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@3@@?$_Func_class@_NAAPAVWindowInfo@@@std@@IAEX$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV?$allocator@H@1@PAV?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@_NAAPAVWindowInfo@@@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z 
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@Reset_allo
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 252				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
npad	1
DD	1
DD	$LN5@Reset_allo
DD	-29					
DD	1
DD	$LN4@Reset_allo
DB	95					
DB	65					
DB	108					
DB	0
ENDP
??0?$allocator@H@std@@QAE@ABV01@@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
??0?$allocator@H@std@@QAE@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@V_lambda_8ad1c185be25e490e788bf92305592c9_@@@std@@YA$$QAV_lambda_8ad1c185be25e490e788bf92305592c9_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Debug_lt@ABIABI@std@@YA_NABI0PB_WI@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Line$[ebp]
push	eax
mov	ecx, DWORD PTR __File$[ebp]
push	ecx
mov	edx, DWORD PTR __Right$[ebp]
push	edx
call	??$forward@ABI@std@@YAABIABI@Z		
add	esp, 4
push	eax
mov	eax, DWORD PTR __Left$[ebp]
push	eax
call	??$forward@ABI@std@@YAABIABI@Z		
add	esp, 4
push	eax
movzx	ecx, BYTE PTR $T1[ebp]
push	ecx
call	??$_Debug_lt_pred@U?$less@X@std@@ABIABI@std@@YA_NU?$less@X@0@ABI1PB_WI@Z 
add	esp, 20					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Debug_lt@ABHABH@std@@YA_NABH0PB_WI@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Line$[ebp]
push	eax
mov	ecx, DWORD PTR __File$[ebp]
push	ecx
mov	edx, DWORD PTR __Right$[ebp]
push	edx
call	??$forward@ABH@std@@YAABHABH@Z		
add	esp, 4
push	eax
mov	eax, DWORD PTR __Left$[ebp]
push	eax
call	??$forward@ABH@std@@YAABHABH@Z		
add	esp, 4
push	eax
movzx	ecx, BYTE PTR $T1[ebp]
push	ecx
call	??$_Debug_lt_pred@U?$less@X@std@@ABHABH@std@@YA_NU?$less@X@0@ABH1PB_WI@Z 
add	esp, 20					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Move@AAK@std@@YA$$QAKAAK@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Reset@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@@?$_Func_class@XPAVHttpRsp@@@std@@IAEX$$QAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
lea	ecx, DWORD PTR $T1[ebp]
call	??0?$allocator@H@std@@QAE@XZ		
push	eax
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YA$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset_alloc@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@V?$allocator@H@std@@@?$_Func_class@XPAVHttpRsp@@@std@@IAEX$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$move@AAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@@std@@YA$$QAV_lambda_1a01023b43b3e313893bd9ee262479f6_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Reset@V_lambda_6285d5a3719bb8faf2336baccac06139_@@@?$_Func_class@X$$V@std@@IAEX$$QAV_lambda_6285d5a3719bb8faf2336baccac06139_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
lea	ecx, DWORD PTR $T1[ebp]
call	??0?$allocator@H@std@@QAE@XZ		
push	eax
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YA$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset_alloc@V<lambda_6285d5a3719bb8faf2336baccac06139>@@V?$allocator@H@std@@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$move@AAV_lambda_6285d5a3719bb8faf2336baccac06139_@@@std@@YA$$QAV_lambda_6285d5a3719bb8faf2336baccac06139_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Reset@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@?$_Func_class@X$$V@std@@IAEX$$QAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
lea	ecx, DWORD PTR $T1[ebp]
call	??0?$allocator@H@std@@QAE@XZ		
push	eax
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YA$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset_alloc@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@V?$allocator@H@std@@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$move@AAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@std@@YA$$QAV_lambda_3e43df60b671223f56f9731f4dfebb0f_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Reset@V_lambda_9bd99f01148b93d640266ff787e7a365_@@@?$_Func_class@X$$V@std@@IAEX$$QAV_lambda_9bd99f01148b93d640266ff787e7a365_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
lea	ecx, DWORD PTR $T1[ebp]
call	??0?$allocator@H@std@@QAE@XZ		
push	eax
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YA$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset_alloc@V<lambda_9bd99f01148b93d640266ff787e7a365>@@V?$allocator@H@std@@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$move@AAV_lambda_9bd99f01148b93d640266ff787e7a365_@@@std@@YA$$QAV_lambda_9bd99f01148b93d640266ff787e7a365_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Reset@V_lambda_344027958ff46b907d624215e4045c6d_@@@?$_Func_class@XPAVRenderedBitmap@@@std@@IAEX$$QAV_lambda_344027958ff46b907d624215e4045c6d_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
lea	ecx, DWORD PTR $T1[ebp]
call	??0?$allocator@H@std@@QAE@XZ		
push	eax
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YA$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset_alloc@V<lambda_344027958ff46b907d624215e4045c6d>@@V?$allocator@H@std@@@?$_Func_class@XPAVRenderedBitmap@@@std@@IAEX$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$move@AAV_lambda_344027958ff46b907d624215e4045c6d_@@@std@@YA$$QAV_lambda_344027958ff46b907d624215e4045c6d_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Reset@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@?$_Func_class@X$$V@std@@IAEX$$QAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
lea	ecx, DWORD PTR $T1[ebp]
call	??0?$allocator@H@std@@QAE@XZ		
push	eax
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YA$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset_alloc@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@V?$allocator@H@std@@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$move@AAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@std@@YA$$QAV_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Reset@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@@?$_Func_class@_NAAPAVWindowInfo@@@std@@IAEX$$QAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
lea	ecx, DWORD PTR $T1[ebp]
call	??0?$allocator@H@std@@QAE@XZ		
push	eax
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YA$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset_alloc@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@V?$allocator@H@std@@@?$_Func_class@_NAAPAVWindowInfo@@@std@@IAEX$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$move@AAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@@std@@YA$$QAV_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Reset@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@@?$_Func_class@_NAAPAVTabInfo@@@std@@IAEX$$QAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
lea	ecx, DWORD PTR $T1[ebp]
call	??0?$allocator@H@std@@QAE@XZ		
push	eax
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YA$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset_alloc@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@V?$allocator@H@std@@@?$_Func_class@_NAAPAVTabInfo@@@std@@IAEX$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$move@AAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@@std@@YA$$QAV_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$_Reset@V_lambda_8ad1c185be25e490e788bf92305592c9_@@@?$_Func_class@_NAAPAVWindowInfo@@@std@@IAEX$$QAV_lambda_8ad1c185be25e490e788bf92305592c9_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
lea	ecx, DWORD PTR $T1[ebp]
call	??0?$allocator@H@std@@QAE@XZ		
push	eax
mov	eax, DWORD PTR __Val$[ebp]
push	eax
call	??$forward@V<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YA$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset_alloc@V<lambda_8ad1c185be25e490e788bf92305592c9>@@V?$allocator@H@std@@@?$_Func_class@_NAAPAVWindowInfo@@@std@@IAEX$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@ABV?$allocator@H@1@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$move@AAV_lambda_8ad1c185be25e490e788bf92305592c9_@@@std@@YA$$QAV_lambda_8ad1c185be25e490e788bf92305592c9_@@AAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$max@I@std@@YAABIABI0@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
push	4142					
push	OFFSET ??_C@_1JC@ELNBGKIG@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR __Left$[ebp]
push	ecx
call	??$_Debug_lt@ABIABI@std@@YA_NABI0PB_WI@Z 
add	esp, 16					
movzx	edx, al
test	edx, edx
je	SHORT $LN3@max
mov	eax, DWORD PTR __Right$[ebp]
mov	DWORD PTR tv71[ebp], eax
jmp	SHORT $LN4@max
mov	ecx, DWORD PTR __Left$[ebp]
mov	DWORD PTR tv71[ebp], ecx
mov	edx, DWORD PTR tv71[ebp]
mov	DWORD PTR $T1[ebp], edx
mov	eax, DWORD PTR $T1[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1?$_Func_base@X$$V@std@@QAE@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_base@X$$V@std@@6B@
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0?$_Func_base@X$$V@std@@QAE@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_base@X$$V@std@@6B@
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1?$_Func_base@XPAVHttpRsp@@@std@@QAE@XZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_base@XPAVHttpRsp@@@std@@6B@
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0?$_Func_base@XPAVHttpRsp@@@std@@QAE@XZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_base@XPAVHttpRsp@@@std@@6B@
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@AAPAVWindowInfo@@@std@@YAAAPAVWindowInfo@@AAPAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1?$_Func_base@_NAAPAVWindowInfo@@@std@@QAE@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_base@_NAAPAVWindowInfo@@@std@@6B@
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0?$_Func_base@_NAAPAVWindowInfo@@@std@@QAE@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_base@_NAAPAVWindowInfo@@@std@@6B@
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@AAPAVTabInfo@@@std@@YAAAPAVTabInfo@@AAPAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1?$_Func_base@_NAAPAVTabInfo@@@std@@QAE@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_base@_NAAPAVTabInfo@@@std@@6B@
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0?$_Func_base@_NAAPAVTabInfo@@@std@@QAE@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_base@_NAAPAVTabInfo@@@std@@6B@
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$forward@PAVRenderedBitmap@@@std@@YA$$QAPAVRenderedBitmap@@AAPAV1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Arg$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1?$_Func_base@XPAVRenderedBitmap@@@std@@QAE@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_base@XPAVRenderedBitmap@@@std@@6B@
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0?$_Func_base@XPAVRenderedBitmap@@@std@@QAE@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7?$_Func_base@XPAVRenderedBitmap@@@std@@6B@
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?CrashHandlerMessage@@YAXXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
push	2
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	eax, al
test	eax, eax
je	SHORT $LN1@CrashHandl
call	?MbRtlReadingMaybe@@YAIXZ		
or	eax, 17					
mov	esi, esp
push	eax
push	OFFSET ??_C@_0BD@PFKGCMFJ@SumatraPDF?5crashed?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
push	OFFSET ??_C@_0HB@BPNHMEMD@Sorry?0?5that?5shouldn?8t?5have?5happe@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
push	0
call	DWORD PTR __imp__MessageBoxW@16
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _res$1[ebp], eax
cmp	DWORD PTR _res$1[ebp], 2
jne	SHORT $LN1@CrashHandl
push	OFFSET ??_C@_1FK@HBNLMJPI@?$AAh?$AAt?$AAt?$AAp?$AA?3?$AA?1?$AA?1?$AAw?$AAw?$AAw?$AA?4?$AAs?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAp?$AAd?$AAf?$AAr?$AAe?$AAa?$AAd?$AAe?$AAr?$AA?4?$AAo?$AAr?$AAg?$AA?1@
call	?LaunchBrowser@@YA_NPB_W@Z		
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?CrashHandlerCanUseNet@@YA_NXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
push	1
call	?HasPermission@@YA_NH@Z			
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?GetProgramInfo@@YAXAAV?$Str@D@str@@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 196				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-196]
mov	ecx, 49					
mov	eax, -858993460				
rep stosd
push	OFFSET ??_C@_09EMOELGOM@3?41?5?$CIdbg?$CJ?$AA@
push	OFFSET ??_C@_07OHMHLEHI@Ver?3?5?$CFs?$AA@
mov	eax, DWORD PTR _s$[ebp]
push	eax
call	?AppendFmt@?$Str@D@str@@QAAXPBDZZ	
add	esp, 12					
push	OFFSET ??_C@_06LCJCDCAN@?5?$CIdbg?$CJ?$AA@
mov	ecx, DWORD PTR _s$[ebp]
call	?Get@?$Str@D@str@@QBEPADXZ		
push	eax
call	?EndsWith@str@@YA_NPBD0@Z		
add	esp, 8
movzx	eax, al
test	eax, eax
jne	SHORT $LN2@GetProgram
push	-1
push	OFFSET ??_C@_06LCJCDCAN@?5?$CIdbg?$CJ?$AA@
mov	ecx, DWORD PTR _s$[ebp]
call	?Append@?$Str@D@str@@QAEXPBDI@Z		
push	-1
push	OFFSET ??_C@_02PCIJFNDE@?$AN?6?$AA@
mov	ecx, DWORD PTR _s$[ebp]
call	?Append@?$Str@D@str@@QAEXPBDI@Z		
cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	
je	SHORT $LN4@GetProgram
mov	DWORD PTR tv82[ebp], OFFSET ??_C@_03ICICOMAL@yes?$AA@
jmp	SHORT $LN5@GetProgram
mov	DWORD PTR tv82[ebp], OFFSET ??_C@_02KAJCLHKP@no?$AA@
mov	eax, DWORD PTR tv82[ebp]
push	eax
push	OFFSET ??_C@_0BF@CLGPANCH@Browser?5plugin?3?5?$CFs?$AN?6?$AA@
mov	ecx, DWORD PTR _s$[ebp]
push	ecx
call	?AppendFmt@?$Str@D@str@@QAAXPBDZZ	
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 196				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?OnFrameGetMinMaxInfo@@YAJPAUtagMINMAXINFO@@@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _info$[ebp]
mov	DWORD PTR [eax+24], 480			
mov	eax, DWORD PTR _info$[ebp]
mov	DWORD PTR [eax+28], 320			
xor	eax, eax
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?FrameOnCommand@@YAJPAVWindowInfo@@PAUHWND__@@IIJ@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 268				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-268]
mov	ecx, 67					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _wParam$[ebp]
and	eax, 65535				
movzx	ecx, ax
mov	DWORD PTR _wmId$[ebp], ecx
cmp	DWORD PTR _wmId$[ebp], 61440		
jl	SHORT $LN10@FrameOnCom
mov	esi, esp
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
mov	ecx, DWORD PTR _wParam$[ebp]
push	ecx
push	274					
mov	edx, DWORD PTR _hwnd$[ebp]
push	edx
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN1@FrameOnCom
cmp	DWORD PTR _wmId$[ebp], 510		
jl	SHORT $LN11@FrameOnCom
cmp	DWORD PTR _wmId$[ebp], 519		
jg	SHORT $LN11@FrameOnCom
mov	eax, DWORD PTR _wmId$[ebp]
sub	eax, 510				
push	eax
mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A 
call	?Get@FileHistory@@QBEPAUFileState@@I@Z	
mov	DWORD PTR _state$4[ebp], eax
cmp	DWORD PTR _state$4[ebp], 0
je	SHORT $LN12@FrameOnCom
push	2
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	eax, al
test	eax, eax
je	SHORT $LN12@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
push	eax
mov	ecx, DWORD PTR _state$4[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
lea	ecx, DWORD PTR _args$3[ebp]
call	??0LoadArgs@@QAE@PB_WPAVWindowInfo@@@Z	
lea	eax, DWORD PTR _args$3[ebp]
push	eax
call	?LoadDocument@@YAPAVWindowInfo@@AAULoadArgs@@@Z 
add	esp, 4
xor	eax, eax
jmp	$LN1@FrameOnCom
cmp	DWORD PTR _wmId$[ebp], 600		
jl	SHORT $LN13@FrameOnCom
cmp	DWORD PTR _wmId$[ebp], 800		
jg	SHORT $LN13@FrameOnCom
mov	eax, DWORD PTR _wmId$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?GoToFavoriteByMenuId@@YAXPAVWindowInfo@@H@Z 
add	esp, 8
cmp	DWORD PTR _win$[ebp], 0
jne	SHORT $LN14@FrameOnCom
mov	esi, esp
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
mov	ecx, DWORD PTR _wParam$[ebp]
push	ecx
mov	edx, DWORD PTR _msg$[ebp]
push	edx
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	DWORD PTR __imp__DefWindowProcW@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN1@FrameOnCom
mov	ecx, DWORD PTR _win$[ebp]
call	?IsAboutWindow@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN15@FrameOnCom
cmp	DWORD PTR _wmId$[ebp], 500		
jl	SHORT $LN15@FrameOnCom
cmp	DWORD PTR _wmId$[ebp], 509		
jg	SHORT $LN15@FrameOnCom
mov	eax, DWORD PTR _wmId$[ebp]
sub	eax, 500				
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+88]
push	edx
call	?ViewWithExternalViewer@@YA_NPAVTabInfo@@I@Z 
add	esp, 8
xor	eax, eax
jmp	$LN1@FrameOnCom
mov	eax, DWORD PTR _wmId$[ebp]
mov	DWORD PTR tv137[ebp], eax
cmp	DWORD PTR tv137[ebp], 3001		
jg	SHORT $LN122@FrameOnCom
cmp	DWORD PTR tv137[ebp], 3001		
je	SHORT $LN16@FrameOnCom
mov	ecx, DWORD PTR tv137[ebp]
sub	ecx, 400				
mov	DWORD PTR tv137[ebp], ecx
cmp	DWORD PTR tv137[ebp], 197		
ja	$LN110@FrameOnCom
mov	edx, DWORD PTR tv137[ebp]
movzx	eax, BYTE PTR $LN123@FrameOnCom[edx]
jmp	DWORD PTR $LN128@FrameOnCom[eax*4]
mov	ecx, DWORD PTR tv137[ebp]
sub	ecx, 3012				
mov	DWORD PTR tv137[ebp], ecx
cmp	DWORD PTR tv137[ebp], 15		
ja	$LN110@FrameOnCom
mov	edx, DWORD PTR tv137[ebp]
movzx	eax, BYTE PTR $LN124@FrameOnCom[edx]
jmp	DWORD PTR $LN129@FrameOnCom[eax*4]
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuOpen@@YAXAAVWindowInfo@@@Z	
add	esp, 4
jmp	$LN2@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuSaveAs@@YAXAAVWindowInfo@@@Z	
add	esp, 4
jmp	$LN2@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuRenameFile@@YAXAAVWindowInfo@@@Z	
add	esp, 4
jmp	$LN2@FrameOnCom
push	0
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuPrint@@YAXPAVWindowInfo@@_N@Z	
add	esp, 8
jmp	$LN2@FrameOnCom
push	0
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?CloseTab@@YAXPAVWindowInfo@@_N@Z	
add	esp, 8
jmp	$LN2@FrameOnCom
call	?OnMenuExit@@YAXXZ			
jmp	$LN2@FrameOnCom
push	0
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ReloadDocument@@YAXPAVWindowInfo@@_N@Z	
add	esp, 8
jmp	$LN2@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuSaveBookmark@@YAXAAVWindowInfo@@@Z 
add	esp, 4
jmp	$LN2@FrameOnCom
push	1
push	ecx
movss	xmm0, DWORD PTR __real@c0000000
movss	DWORD PTR [esp], xmm0
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ChangeZoomLevel@@YAXPAVWindowInfo@@M_N@Z 
add	esp, 12					
jmp	$LN2@FrameOnCom
push	0
push	ecx
movss	xmm0, DWORD PTR __real@bf800000
movss	DWORD PTR [esp], xmm0
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ChangeZoomLevel@@YAXPAVWindowInfo@@M_N@Z 
add	esp, 12					
jmp	$LN2@FrameOnCom
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN27@FrameOnCom
push	0
push	0
mov	esi, esp
push	ecx
movss	xmm0, DWORD PTR __real@45c80000
movss	DWORD PTR [esp], xmm0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+56]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	ecx
fstp	DWORD PTR [esp]
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ZoomToSelection@@YAXPAVWindowInfo@@M_N1@Z 
add	esp, 16					
jmp	$LN2@FrameOnCom
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN29@FrameOnCom
push	0
push	0
mov	esi, esp
push	ecx
movss	xmm0, DWORD PTR __real@410547ae
movss	DWORD PTR [esp], xmm0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+56]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	ecx
fstp	DWORD PTR [esp]
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ZoomToSelection@@YAXPAVWindowInfo@@M_N1@Z 
add	esp, 16					
jmp	$LN2@FrameOnCom
mov	eax, DWORD PTR _wmId$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?OnMenuZoom@@YAXPAVWindowInfo@@I@Z	
add	esp, 8
jmp	$LN2@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuCustomZoom@@YAXPAVWindowInfo@@@Z	
add	esp, 4
jmp	$LN2@FrameOnCom
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN33@FrameOnCom
push	1
push	1
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?SwitchToDisplayMode@@YAXPAVWindowInfo@@W4DisplayMode@@_N@Z 
add	esp, 12					
jmp	$LN2@FrameOnCom
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN35@FrameOnCom
push	1
push	2
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?SwitchToDisplayMode@@YAXPAVWindowInfo@@W4DisplayMode@@_N@Z 
add	esp, 12					
jmp	$LN2@FrameOnCom
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN37@FrameOnCom
push	1
push	3
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?SwitchToDisplayMode@@YAXPAVWindowInfo@@W4DisplayMode@@_N@Z 
add	esp, 12					
jmp	$LN2@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuViewContinuous@@YAXAAVWindowInfo@@@Z 
add	esp, 4
jmp	$LN2@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuViewMangaMode@@YAXPAVWindowInfo@@@Z 
add	esp, 4
jmp	$LN2@FrameOnCom
call	?OnMenuViewShowHideToolbar@@YAXXZ	
jmp	$LN2@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+261]
test	ecx, ecx
jne	SHORT $LN42@FrameOnCom
push	0
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ShowHideMenuBar@@YAXPAVWindowInfo@@_N@Z 
add	esp, 8
jmp	$LN2@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	?OnMenuChangeLanguage@@YAXPAUHWND__@@@Z	
add	esp, 4
jmp	$LN2@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ToggleTocBox@@YAXPAVWindowInfo@@@Z	
add	esp, 4
jmp	$LN2@FrameOnCom
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN46@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+104]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN2@FrameOnCom
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN48@FrameOnCom
mov	esi, esp
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+108]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN2@FrameOnCom
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN50@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+112]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN2@FrameOnCom
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN52@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+116]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN2@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuGoToPage@@YAXAAVWindowInfo@@@Z	
add	esp, 4
jmp	$LN2@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuViewPresentation@@YAXAAVWindowInfo@@@Z 
add	esp, 4
jmp	$LN2@FrameOnCom
push	0
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuViewFullscreen@@YAXPAVWindowInfo@@_N@Z 
add	esp, 8
jmp	$LN2@FrameOnCom
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
je	SHORT $LN57@FrameOnCom
push	-90					
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	ecx, eax
call	?RotateBy@DisplayModel@@QAEXH@Z		
jmp	$LN2@FrameOnCom
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
je	SHORT $LN59@FrameOnCom
push	90					
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	ecx, eax
call	?RotateBy@DisplayModel@@QAEXH@Z		
jmp	$LN2@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuFind@@YAXPAVWindowInfo@@@Z	
add	esp, 4
jmp	$LN2@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuFindNext@@YAXPAVWindowInfo@@@Z	
add	esp, 4
jmp	$LN2@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuFindPrev@@YAXPAVWindowInfo@@@Z	
add	esp, 4
jmp	$LN2@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuFindMatchCase@@YAXPAVWindowInfo@@@Z 
add	esp, 4
jmp	$LN2@FrameOnCom
push	1
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuFindSel@@YAXPAVWindowInfo@@W4TextSearchDirection@@@Z 
add	esp, 8
jmp	$LN2@FrameOnCom
push	0
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuFindSel@@YAXPAVWindowInfo@@W4TextSearchDirection@@@Z 
add	esp, 8
jmp	$LN2@FrameOnCom
push	OFFSET ??_C@_1EC@BBOJFOJE@?$AAh?$AAt?$AAt?$AAp?$AA?3?$AA?1?$AA?1?$AAw?$AAw?$AAw?$AA?4?$AAs?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAp?$AAd?$AAf?$AAr?$AAe?$AAa?$AAd?$AAe?$AAr?$AA?4?$AAo?$AAr?$AAg?$AA?1@
call	?LaunchBrowser@@YA_NPB_W@Z		
add	esp, 4
jmp	$LN2@FrameOnCom
push	OFFSET ??_C@_1FI@ONJKPAIJ@?$AAh?$AAt?$AAt?$AAp?$AA?3?$AA?1?$AA?1?$AAw?$AAw?$AAw?$AA?4?$AAs?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAp?$AAd?$AAf?$AAr?$AAe?$AAa?$AAd?$AAe?$AAr?$AA?4?$AAo?$AAr?$AAg?$AA?1@
call	?LaunchBrowser@@YA_NPB_W@Z		
add	esp, 4
jmp	$LN2@FrameOnCom
push	OFFSET ??_C@_1JG@LLNGLDIK@?$AAh?$AAt?$AAt?$AAp?$AAs?$AA?3?$AA?1?$AA?1?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?4?$AAc?$AAo?$AAm?$AA?1?$AAs?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAp?$AAd?$AAf?$AAr?$AAe?$AAa@
call	?LaunchBrowser@@YA_NPB_W@Z		
add	esp, 4
jmp	$LN2@FrameOnCom
call	?OnMenuAbout@@YAXXZ			
jmp	$LN2@FrameOnCom
push	0
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?UpdateCheckAsync@@YAXPAVWindowInfo@@_N@Z 
add	esp, 8
jmp	$LN2@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuOptions@@YAXAAVWindowInfo@@@Z	
add	esp, 4
jmp	$LN2@FrameOnCom
call	?OnMenuAdvancedOptions@@YAXXZ		
jmp	$LN2@FrameOnCom
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
push	ecx
call	?ViewWithAcrobat@@YA_NPAVTabInfo@@PB_W@Z 
add	esp, 8
jmp	$LN2@FrameOnCom
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
push	ecx
call	?ViewWithFoxit@@YA_NPAVTabInfo@@PB_W@Z	
add	esp, 8
jmp	$LN2@FrameOnCom
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
push	ecx
call	?ViewWithPDFXChange@@YA_NPAVTabInfo@@PB_W@Z 
add	esp, 8
jmp	$LN2@FrameOnCom
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
push	ecx
call	?ViewWithXPSViewer@@YA_NPAVTabInfo@@PB_W@Z 
add	esp, 8
jmp	$LN2@FrameOnCom
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
push	ecx
call	?ViewWithHtmlHelp@@YA_NPAVTabInfo@@PB_W@Z 
add	esp, 8
jmp	$LN2@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [edx+88]
push	eax
call	?SendAsEmailAttachment@@YA_NPAVTabInfo@@PAUHWND__@@@Z 
add	esp, 8
jmp	$LN2@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuProperties@@YAXPAVWindowInfo@@@Z	
add	esp, 4
jmp	$LN2@FrameOnCom
mov	esi, esp
call	DWORD PTR __imp__GetFocus@0
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, DWORD PTR _win$[ebp]
cmp	DWORD PTR [ecx+92], eax
je	SHORT $LN81@FrameOnCom
mov	esi, esp
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__SetFocus@4
cmp	esi, esp
call	__RTC_CheckEsp
jmp	SHORT $LN83@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+149]
test	ecx, ecx
je	SHORT $LN83@FrameOnCom
mov	esi, esp
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+144]
push	ecx
call	DWORD PTR __imp__SetFocus@4
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN2@FrameOnCom
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN85@FrameOnCom
mov	esi, esp
push	-1
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+32]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN2@FrameOnCom
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN87@FrameOnCom
mov	esi, esp
push	1
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+32]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN2@FrameOnCom
mov	esi, esp
call	DWORD PTR __imp__GetFocus@0
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, DWORD PTR _win$[ebp]
cmp	DWORD PTR [ecx+112], eax
je	SHORT $LN91@FrameOnCom
mov	esi, esp
call	DWORD PTR __imp__GetFocus@0
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, DWORD PTR _win$[ebp]
cmp	DWORD PTR [ecx+124], eax
jne	SHORT $LN89@FrameOnCom
mov	esi, esp
push	0
push	0
push	769					
mov	edi, esp
call	DWORD PTR __imp__GetFocus@0
cmp	edi, esp
call	__RTC_CheckEsp
push	eax
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN98@FrameOnCom
push	32					
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	eax, al
test	eax, eax
jne	SHORT $LN92@FrameOnCom
jmp	$LN2@FrameOnCom
jmp	SHORT $LN98@FrameOnCom
mov	ecx, DWORD PTR _win$[ebp]
call	?AsChm@WindowInfo@@QBEPAVChmModel@@XZ	
test	eax, eax
je	SHORT $LN94@FrameOnCom
mov	ecx, DWORD PTR _win$[ebp]
call	?AsChm@WindowInfo@@QBEPAVChmModel@@XZ	
mov	ecx, eax
call	?CopySelection@ChmModel@@QAEXXZ		
jmp	SHORT $LN98@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+88], 0
je	SHORT $LN96@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
cmp	DWORD PTR [ecx+128], 0
je	SHORT $LN96@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?CopySelectionToClipboard@@YAXPAVWindowInfo@@@Z 
add	esp, 4
jmp	SHORT $LN98@FrameOnCom
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
je	SHORT $LN98@FrameOnCom
push	1
push	0
push	OFFSET ??_C@_0CL@PKDBKEIM@Select?5content?5with?5Ctrl?$CLleft?5mo@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
mov	ecx, DWORD PTR _win$[ebp]
call	?ShowNotification@WindowInfo@@QAEXPB_WHW4NotificationGroup@@@Z 
jmp	$LN2@FrameOnCom
push	0
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnSelectAll@@YAXPAVWindowInfo@@_N@Z	
add	esp, 8
jmp	$LN2@FrameOnCom
movzx	eax, BYTE PTR ?gDebugShowLinks@@3_NA	
test	eax, eax
jne	SHORT $LN112@FrameOnCom
mov	DWORD PTR tv397[ebp], 1
jmp	SHORT $LN113@FrameOnCom
mov	DWORD PTR tv397[ebp], 0
mov	cl, BYTE PTR tv397[ebp]
mov	BYTE PTR ?gDebugShowLinks@@3_NA, cl	
mov	DWORD PTR _i$2[ebp], 0
jmp	SHORT $LN6@FrameOnCom
mov	eax, DWORD PTR _i$2[ebp]
add	eax, 1
mov	DWORD PTR _i$2[ebp], eax
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?Count@?$Vec@PAVWindowInfo@@@@QBEIXZ	
cmp	DWORD PTR _i$2[ebp], eax
jae	SHORT $LN5@FrameOnCom
push	1
mov	eax, DWORD PTR _i$2[ebp]
push	eax
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z 
mov	ecx, DWORD PTR [eax]
call	?RedrawAll@WindowInfo@@QAEX_N@Z		
jmp	SHORT $LN4@FrameOnCom
jmp	$LN2@FrameOnCom
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+72]
test	ecx, ecx
jne	SHORT $LN114@FrameOnCom
mov	DWORD PTR tv414[ebp], 1
jmp	SHORT $LN115@FrameOnCom
mov	DWORD PTR tv414[ebp], 0
mov	edx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	al, BYTE PTR tv414[ebp]
mov	BYTE PTR [edx+72], al
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+104]
test	ecx, ecx
jne	SHORT $LN116@FrameOnCom
mov	DWORD PTR tv422[ebp], 1
jmp	SHORT $LN117@FrameOnCom
mov	DWORD PTR tv422[ebp], 0
mov	edx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	al, BYTE PTR tv422[ebp]
mov	BYTE PTR [edx+104], al
jmp	$LN2@FrameOnCom
call	?IsDebugPaint@mui@@YA_NXZ		
movzx	eax, al
test	eax, eax
jne	SHORT $LN118@FrameOnCom
mov	BYTE PTR tv427[ebp], 1
jmp	SHORT $LN119@FrameOnCom
mov	BYTE PTR tv427[ebp], 0
movzx	ecx, BYTE PTR tv427[ebp]
push	ecx
call	?SetDebugPaint@mui@@YAX_N@Z		
add	esp, 4
call	?IsDebugPaint@mui@@YA_NXZ		
movzx	eax, al
test	eax, eax
jne	SHORT $LN120@FrameOnCom
mov	BYTE PTR tv432[ebp], 1
jmp	SHORT $LN121@FrameOnCom
mov	BYTE PTR tv432[ebp], 0
movzx	ecx, BYTE PTR tv432[ebp]
push	ecx
push	595					
mov	esi, esp
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [edx+92]
push	eax
call	DWORD PTR __imp__GetMenu@4
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
call	?SetChecked@menu@win@@YAXPAUHMENU__@@I_N@Z 
add	esp, 12					
mov	DWORD PTR _i$1[ebp], 0
jmp	SHORT $LN9@FrameOnCom
mov	eax, DWORD PTR _i$1[ebp]
add	eax, 1
mov	DWORD PTR _i$1[ebp], eax
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?Count@?$Vec@PAVWindowInfo@@@@QBEIXZ	
cmp	DWORD PTR _i$1[ebp], eax
jae	SHORT $LN8@FrameOnCom
push	1
mov	eax, DWORD PTR _i$1[ebp]
push	eax
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z 
mov	ecx, DWORD PTR [eax]
call	?RedrawAll@WindowInfo@@QAEX_N@Z		
jmp	SHORT $LN7@FrameOnCom
jmp	$LN2@FrameOnCom
push	0
push	104					
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?FrameOnChar@@YAXAAVWindowInfo@@IJ@Z	
add	esp, 12					
jmp	SHORT $LN2@FrameOnCom
call	?CrashMe@@YAXXZ				
jmp	SHORT $LN2@FrameOnCom
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN106@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?AddFavorite@@YAXPAVWindowInfo@@@Z	
add	esp, 4
jmp	SHORT $LN2@FrameOnCom
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN108@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?DelFavorite@@YAXPAVWindowInfo@@@Z	
add	esp, 4
jmp	SHORT $LN2@FrameOnCom
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ToggleFavorites@@YAXPAVWindowInfo@@@Z	
add	esp, 4
jmp	SHORT $LN2@FrameOnCom
mov	esi, esp
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
mov	ecx, DWORD PTR _wParam$[ebp]
push	ecx
mov	edx, DWORD PTR _msg$[ebp]
push	edx
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	DWORD PTR __imp__DefWindowProcW@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	SHORT $LN1@FrameOnCom
xor	eax, eax
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN127@FrameOnCom
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 268				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	2
DD	1
DD	$LN126@FrameOnCom
DD	-44					
DD	16					
DD	$LN125@FrameOnCom
DB	97					
DB	114					
DB	103					
DB	115					
DB	0
npad	3
DD	$LN16@FrameOnCom
DD	$LN20@FrameOnCom
DD	$LN17@FrameOnCom
DD	$LN19@FrameOnCom
DD	$LN21@FrameOnCom
DD	$LN22@FrameOnCom
DD	$LN23@FrameOnCom
DD	$LN78@FrameOnCom
DD	$LN79@FrameOnCom
DD	$LN32@FrameOnCom
DD	$LN34@FrameOnCom
DD	$LN36@FrameOnCom
DD	$LN38@FrameOnCom
DD	$LN39@FrameOnCom
DD	$LN56@FrameOnCom
DD	$LN58@FrameOnCom
DD	$LN44@FrameOnCom
DD	$LN54@FrameOnCom
DD	$LN40@FrameOnCom
DD	$LN88@FrameOnCom
DD	$LN55@FrameOnCom
DD	$LN99@FrameOnCom
DD	$LN41@FrameOnCom
DD	$LN45@FrameOnCom
DD	$LN47@FrameOnCom
DD	$LN49@FrameOnCom
DD	$LN51@FrameOnCom
DD	$LN53@FrameOnCom
DD	$LN60@FrameOnCom
DD	$LN61@FrameOnCom
DD	$LN62@FrameOnCom
DD	$LN63@FrameOnCom
DD	$LN30@FrameOnCom
DD	$LN31@FrameOnCom
DD	$LN68@FrameOnCom
DD	$LN73@FrameOnCom
DD	$LN74@FrameOnCom
DD	$LN75@FrameOnCom
DD	$LN76@FrameOnCom
DD	$LN77@FrameOnCom
DD	$LN66@FrameOnCom
DD	$LN69@FrameOnCom
DD	$LN71@FrameOnCom
DD	$LN43@FrameOnCom
DD	$LN70@FrameOnCom
DD	$LN67@FrameOnCom
DD	$LN80@FrameOnCom
DD	$LN84@FrameOnCom
DD	$LN86@FrameOnCom
DD	$LN105@FrameOnCom
DD	$LN107@FrameOnCom
DD	$LN109@FrameOnCom
DD	$LN18@FrameOnCom
DD	$LN64@FrameOnCom
DD	$LN65@FrameOnCom
DD	$LN100@FrameOnCom
DD	$LN104@FrameOnCom
DD	$LN101@FrameOnCom
DD	$LN102@FrameOnCom
DD	$LN103@FrameOnCom
DD	$LN72@FrameOnCom
DD	$LN110@FrameOnCom
DB	0
DB	1
DB	2
DB	3
DB	61					
DB	4
DB	5
DB	6
DB	7
DB	8
DB	9
DB	10					
DB	11					
DB	12					
DB	13					
DB	14					
DB	15					
DB	16					
DB	17					
DB	18					
DB	19					
DB	20					
DB	21					
DB	22					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	23					
DB	24					
DB	25					
DB	26					
DB	27					
DB	28					
DB	29					
DB	30					
DB	31					
DB	61					
DB	32					
DB	32					
DB	32					
DB	32					
DB	32					
DB	32					
DB	32					
DB	32					
DB	32					
DB	32					
DB	32					
DB	32					
DB	32					
DB	32					
DB	32					
DB	32					
DB	32					
DB	33					
DB	61					
DB	61					
DB	34					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	35					
DB	36					
DB	37					
DB	38					
DB	39					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	40					
DB	41					
DB	42					
DB	43					
DB	44					
DB	45					
DB	61					
DB	46					
DB	47					
DB	48					
DB	49					
DB	50					
DB	51					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	52					
DB	53					
DB	54					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	61					
DB	55					
DB	61					
DB	56					
DB	61					
DB	57					
DB	58					
DB	59					
DB	60					
npad	2
DD	$LN26@FrameOnCom
DD	$LN28@FrameOnCom
DD	$LN20@FrameOnCom
DD	$LN19@FrameOnCom
DD	$LN24@FrameOnCom
DD	$LN25@FrameOnCom
DD	$LN110@FrameOnCom
DB	0
DB	1
DB	6
DB	6
DB	2
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	3
DB	6
DB	6
DB	4
DB	5
ENDP
??$max@H@std@@YAABHABH0@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
push	4142					
push	OFFSET ??_C@_1JC@ELNBGKIG@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR __Left$[ebp]
push	ecx
call	??$_Debug_lt@ABHABH@std@@YA_NABH0PB_WI@Z 
add	esp, 16					
movzx	edx, al
test	edx, edx
je	SHORT $LN3@max
mov	eax, DWORD PTR __Right$[ebp]
mov	DWORD PTR tv71[ebp], eax
jmp	SHORT $LN4@max
mov	ecx, DWORD PTR __Left$[ebp]
mov	DWORD PTR tv71[ebp], ecx
mov	edx, DWORD PTR tv71[ebp]
mov	DWORD PTR $T1[ebp], edx
mov	eax, DWORD PTR $T1[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$min@H@std@@YAABHABH0@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
push	4178					
push	OFFSET ??_C@_1JC@ELNBGKIG@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
mov	eax, DWORD PTR __Left$[ebp]
push	eax
mov	ecx, DWORD PTR __Right$[ebp]
push	ecx
call	??$_Debug_lt@ABHABH@std@@YA_NABH0PB_WI@Z 
add	esp, 16					
movzx	edx, al
test	edx, edx
je	SHORT $LN3@min
mov	eax, DWORD PTR __Right$[ebp]
mov	DWORD PTR tv71[ebp], eax
jmp	SHORT $LN4@min
mov	ecx, DWORD PTR __Left$[ebp]
mov	DWORD PTR tv71[ebp], ecx
mov	edx, DWORD PTR tv71[ebp]
mov	DWORD PTR $T1[ebp], edx
mov	eax, DWORD PTR $T1[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?FrameOnSysChar@@YA_NAAVWindowInfo@@I@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 196				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-196]
mov	ecx, 49					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+260]
test	ecx, ecx
je	SHORT $LN2@FrameOnSys
cmp	DWORD PTR _key$[ebp], 49		
jb	SHORT $LN2@FrameOnSys
cmp	DWORD PTR _key$[ebp], 57		
ja	SHORT $LN2@FrameOnSys
cmp	DWORD PTR _key$[ebp], 57		
jae	SHORT $LN4@FrameOnSys
mov	eax, DWORD PTR _key$[ebp]
sub	eax, 49					
mov	DWORD PTR tv75[ebp], eax
jmp	SHORT $LN5@FrameOnSys
mov	ecx, DWORD PTR _win$[ebp]
add	ecx, 4
call	?Count@?$Vec@PAVTabInfo@@@@QBEIXZ	
sub	eax, 1
mov	DWORD PTR tv75[ebp], eax
mov	ecx, DWORD PTR tv75[ebp]
push	ecx
mov	edx, DWORD PTR _win$[ebp]
push	edx
call	?TabsSelect@@YAXPAVWindowInfo@@H@Z	
add	esp, 8
mov	al, 1
jmp	SHORT $LN1@FrameOnSys
xor	al, al
pop	edi
pop	esi
pop	ebx
add	esp, 196				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??EIter@?$Vec@USelectionOnPage@@@@QAEAAV01@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
add	ecx, 1
mov	edx, DWORD PTR _this$[ebp]
mov	DWORD PTR [edx+4], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??DIter@?$Vec@USelectionOnPage@@@@QBEAAUSelectionOnPage@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [edx]
call	?At@?$Vec@USelectionOnPage@@@@QBEAAUSelectionOnPage@@I@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??9Iter@?$Vec@USelectionOnPage@@@@QBE_NABV01@@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _other$[ebp]
mov	edx, DWORD PTR [eax+4]
cmp	edx, DWORD PTR [ecx+4]
je	SHORT $LN3@operator
mov	DWORD PTR tv67[ebp], 1
jmp	SHORT $LN4@operator
mov	DWORD PTR tv67[ebp], 0
mov	al, BYTE PTR tv67[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
??0Iter@?$Vec@USelectionOnPage@@@@QAE@PAV1@I@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _vec$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _pos$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	8
ENDP
?end@?$Vec@USelectionOnPage@@@@QAE?AVIter@1@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _this$[ebp]
push	edx
mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
call	??0Iter@?$Vec@USelectionOnPage@@@@QAE@PAV1@I@Z 
mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?begin@?$Vec@USelectionOnPage@@@@QAE?AVIter@1@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	eax, DWORD PTR _this$[ebp]
push	eax
mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
call	??0Iter@?$Vec@USelectionOnPage@@@@QAE@PAV1@I@Z 
mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?At@?$Vec@USelectionOnPage@@@@QBEAAUSelectionOnPage@@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
xor	eax, eax
jne	SHORT $LN5@At
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _idx$[ebp]
cmp	ecx, DWORD PTR [eax]
jb	SHORT $LN9@At
mov	BYTE PTR tv67[ebp], 1
jmp	SHORT $LN10@At
mov	BYTE PTR tv67[ebp], 0
movzx	edx, BYTE PTR tv67[ebp]
push	edx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@At
imul	eax, DWORD PTR _idx$[ebp], 40
mov	ecx, DWORD PTR _this$[ebp]
add	eax, DWORD PTR [ecx+12]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?FrameOnChar@@YAXAAVWindowInfo@@IJ@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 432				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-432]
mov	ecx, 108				
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 2
je	SHORT $LN10@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 3
jne	SHORT $LN9@FrameOnCha
push	1
mov	ecx, DWORD PTR _win$[ebp]
call	?ChangePresentationMode@WindowInfo@@QAEXW4PresentationMode@@@Z 
jmp	$LN1@FrameOnCha
cmp	DWORD PTR _key$[ebp], 256		
jb	SHORT $LN12@FrameOnCha
cmp	DWORD PTR _info$[ebp], 0
je	SHORT $LN12@FrameOnCha
call	?IsCtrlPressed@@YA_NXZ			
movzx	eax, al
test	eax, eax
jne	SHORT $LN12@FrameOnCha
call	?IsAltPressed@@YA_NXZ			
movzx	eax, al
test	eax, eax
jne	SHORT $LN12@FrameOnCha
mov	esi, esp
push	1
mov	eax, DWORD PTR _info$[ebp]
sar	eax, 16					
and	eax, 255				
push	eax
call	DWORD PTR __imp__MapVirtualKeyW@8
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _vk$15[ebp], eax
cmp	DWORD PTR _vk$15[ebp], 65		
jb	SHORT $LN12@FrameOnCha
cmp	DWORD PTR _vk$15[ebp], 90		
ja	SHORT $LN12@FrameOnCha
mov	eax, DWORD PTR _vk$15[ebp]
mov	DWORD PTR _key$[ebp], eax
mov	esi, esp
movzx	eax, WORD PTR _key$[ebp]
push	eax
call	DWORD PTR __imp__IsCharUpperW@4
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	SHORT $LN13@FrameOnCha
movzx	eax, WORD PTR _key$[ebp]
push	eax
call	?SingleCharLowerW@@YA_W_W@Z		
add	esp, 4
movzx	ecx, ax
mov	DWORD PTR _key$[ebp], ecx
mov	eax, DWORD PTR _key$[ebp]
mov	DWORD PTR tv91[ebp], eax
mov	ecx, DWORD PTR tv91[ebp]
sub	ecx, 9
mov	DWORD PTR tv91[ebp], ecx
cmp	DWORD PTR tv91[ebp], 105		
ja	$LN2@FrameOnCha
mov	edx, DWORD PTR tv91[ebp]
movzx	eax, BYTE PTR $LN89@FrameOnCha[edx]
jmp	DWORD PTR $LN96@FrameOnCha[eax*4]
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+844], 0
je	SHORT $LN15@FrameOnCha
push	0
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?AbortFinding@@YAXPAVWindowInfo@@_N@Z	
add	esp, 8
jmp	$LN27@FrameOnCha
push	3
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+832]
call	?GetForGroup@Notifications@@QAEPAVNotificationWnd@@H@Z 
test	eax, eax
je	SHORT $LN17@FrameOnCha
push	3
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+832]
call	?RemoveForGroup@Notifications@@QAEXH@Z	
jmp	$LN27@FrameOnCha
push	4
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+832]
call	?GetForGroup@Notifications@@QAEPAVNotificationWnd@@H@Z 
test	eax, eax
je	SHORT $LN19@FrameOnCha
push	4
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+832]
call	?RemoveForGroup@Notifications@@QAEXH@Z	
jmp	$LN27@FrameOnCha
push	5
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+832]
call	?GetForGroup@Notifications@@QAEPAVNotificationWnd@@H@Z 
test	eax, eax
je	SHORT $LN21@FrameOnCha
push	5
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+832]
call	?RemoveForGroup@Notifications@@QAEXH@Z	
jmp	$LN27@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+332]
test	ecx, ecx
je	SHORT $LN23@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ClearSearchResult@@YAXPAVWindowInfo@@@Z 
add	esp, 4
jmp	SHORT $LN27@FrameOnCha
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+4]
test	ecx, ecx
je	SHORT $LN25@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?MayCloseWindow@@YA_NPAVWindowInfo@@@Z	
add	esp, 4
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN25@FrameOnCha
push	0
push	1
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?CloseWindow@@YAXPAVWindowInfo@@_N1@Z	
add	esp, 12					
jmp	SHORT $LN27@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
jne	SHORT $LN28@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+772]
test	ecx, ecx
je	SHORT $LN27@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
je	SHORT $LN73@FrameOnCha
mov	BYTE PTR tv173[ebp], 1
jmp	SHORT $LN74@FrameOnCha
mov	BYTE PTR tv173[ebp], 0
movzx	ecx, BYTE PTR tv173[ebp]
push	ecx
mov	edx, DWORD PTR _win$[ebp]
push	edx
call	?OnMenuViewFullscreen@@YAXPAVWindowInfo@@_N@Z 
add	esp, 8
jmp	$LN1@FrameOnCha
push	1
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?CloseTab@@YAXPAVWindowInfo@@_N@Z	
add	esp, 8
jmp	$LN1@FrameOnCha
push	0
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ReloadDocument@@YAXPAVWindowInfo@@_N@Z	
add	esp, 8
jmp	$LN1@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?AdvanceFocus@@YAXPAVWindowInfo@@@Z	
add	esp, 4
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN32@FrameOnCha
jmp	$LN1@FrameOnCha
mov	eax, DWORD PTR _key$[ebp]
mov	DWORD PTR tv187[ebp], eax
mov	ecx, DWORD PTR tv187[ebp]
sub	ecx, 8
mov	DWORD PTR tv187[ebp], ecx
cmp	DWORD PTR tv187[ebp], 220		
ja	$LN4@FrameOnCha
mov	edx, DWORD PTR tv187[ebp]
movzx	eax, BYTE PTR $LN90@FrameOnCha[edx]
jmp	DWORD PTR $LN97@FrameOnCha[eax*4]
call	?IsShiftPressed@@YA_NXZ			
movzx	eax, al
test	eax, eax
je	SHORT $LN75@FrameOnCha
mov	DWORD PTR tv194[ebp], 33		
jmp	SHORT $LN76@FrameOnCha
mov	DWORD PTR tv194[ebp], 34		
push	0
push	0
mov	ecx, DWORD PTR tv194[ebp]
push	ecx
mov	edx, DWORD PTR _win$[ebp]
push	edx
call	?FrameOnKeydown@@YA_NPAVWindowInfo@@IJ_N@Z 
add	esp, 16					
jmp	$LN4@FrameOnCha
call	?IsShiftPressed@@YA_NXZ			
mov	BYTE PTR _forward$14[ebp], al
movzx	eax, BYTE PTR _forward$14[ebp]
test	eax, eax
je	SHORT $LN77@FrameOnCha
mov	DWORD PTR tv206[ebp], 1
jmp	SHORT $LN78@FrameOnCha
mov	DWORD PTR tv206[ebp], -1
mov	esi, esp
mov	ecx, DWORD PTR tv206[ebp]
push	ecx
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [eax]
mov	ecx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+32]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN4@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuGoToPage@@YAXAAVWindowInfo@@@Z	
add	esp, 4
jmp	$LN4@FrameOnCha
push	0
push	0
push	40					
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?FrameOnKeydown@@YA_NPAVWindowInfo@@IJ_N@Z 
add	esp, 16					
jmp	$LN4@FrameOnCha
push	0
push	0
push	38					
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?FrameOnKeydown@@YA_NPAVWindowInfo@@IJ_N@Z 
add	esp, 16					
jmp	$LN4@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+104]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN4@FrameOnCha
mov	esi, esp
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+108]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN4@FrameOnCha
mov	ecx, DWORD PTR _win$[ebp]
call	?ToggleZoom@WindowInfo@@QAEXXZ		
jmp	$LN4@FrameOnCha
push	0
push	0
mov	esi, esp
push	ecx
movss	xmm0, DWORD PTR __real@45c80000
movss	DWORD PTR [esp], xmm0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+56]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	ecx
fstp	DWORD PTR [esp]
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ZoomToSelection@@YAXPAVWindowInfo@@M_N1@Z 
add	esp, 16					
jmp	$LN4@FrameOnCha
push	0
push	0
mov	esi, esp
push	ecx
movss	xmm0, DWORD PTR __real@410547ae
movss	DWORD PTR [esp], xmm0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+56]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	ecx
fstp	DWORD PTR [esp]
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ZoomToSelection@@YAXPAVWindowInfo@@M_N1@Z 
add	esp, 16					
jmp	$LN4@FrameOnCha
movzx	eax, BYTE PTR ?gIsDivideKeyDown@@3_NA
test	eax, eax
jne	SHORT $LN44@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuFind@@YAXPAVWindowInfo@@@Z	
add	esp, 4
mov	BYTE PTR ?gIsDivideKeyDown@@3_NA, 0
jmp	$LN4@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuViewContinuous@@YAXAAVWindowInfo@@@Z 
add	esp, 4
jmp	$LN4@FrameOnCha
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
je	$LN47@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+40]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
call	?IsSingle@@YA_NW4DisplayMode@@@Z	
add	esp, 4
movzx	eax, al
test	eax, eax
jne	$LN47@FrameOnCha
call	?IsShiftPressed@@YA_NXZ			
movzx	eax, al
test	eax, eax
jne	SHORT $LN79@FrameOnCha
mov	DWORD PTR tv281[ebp], 1
jmp	SHORT $LN80@FrameOnCha
mov	DWORD PTR tv281[ebp], 0
mov	cl, BYTE PTR tv281[ebp]
mov	BYTE PTR _forward$13[ebp], cl
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+20]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _currPage$12[ebp], eax
movzx	eax, BYTE PTR _forward$13[ebp]
test	eax, eax
je	SHORT $LN81@FrameOnCha
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	ecx, eax
call	?LastBookPageVisible@DisplayModel@@QBE_NXZ 
mov	BYTE PTR tv301[ebp], al
jmp	SHORT $LN82@FrameOnCha
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	ecx, eax
call	?FirstBookPageVisible@DisplayModel@@QBE_NXZ 
mov	BYTE PTR tv301[ebp], al
movzx	ecx, BYTE PTR tv301[ebp]
test	ecx, ecx
je	SHORT $LN49@FrameOnCha
jmp	$LN4@FrameOnCha
mov	DWORD PTR _newMode$11[ebp], 3
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+40]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
call	?IsBookView@@YA_NW4DisplayMode@@@Z	
add	esp, 4
movzx	eax, al
test	eax, eax
je	SHORT $LN50@FrameOnCha
mov	DWORD PTR _newMode$11[ebp], 2
push	1
mov	eax, DWORD PTR _newMode$11[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?SwitchToDisplayMode@@YAXPAVWindowInfo@@W4DisplayMode@@_N@Z 
add	esp, 12					
movzx	eax, BYTE PTR _forward$13[ebp]
test	eax, eax
je	SHORT $LN51@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+20]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
cmp	DWORD PTR _currPage$12[ebp], eax
jl	SHORT $LN51@FrameOnCha
cmp	DWORD PTR _currPage$12[ebp], 1
jg	SHORT $LN53@FrameOnCha
cmp	DWORD PTR _newMode$11[ebp], 3
jne	SHORT $LN51@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+104]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
jmp	SHORT $LN54@FrameOnCha
movzx	eax, BYTE PTR _forward$13[ebp]
test	eax, eax
jne	SHORT $LN54@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+20]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
cmp	DWORD PTR _currPage$12[ebp], eax
jg	SHORT $LN54@FrameOnCha
mov	esi, esp
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+108]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN58@FrameOnCha
mov	ecx, DWORD PTR _win$[ebp]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
test	eax, eax
je	$LN55@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+40]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
call	?IsSingle@@YA_NW4DisplayMode@@@Z	
add	esp, 4
movzx	eax, al
test	eax, eax
jne	$LN55@FrameOnCha
call	?IsShiftPressed@@YA_NXZ			
movzx	eax, al
test	eax, eax
jne	SHORT $LN83@FrameOnCha
mov	DWORD PTR tv376[ebp], 1
jmp	SHORT $LN84@FrameOnCha
mov	DWORD PTR tv376[ebp], 0
mov	cl, BYTE PTR tv376[ebp]
mov	BYTE PTR _forward$10[ebp], cl
movzx	eax, BYTE PTR _forward$10[ebp]
test	eax, eax
je	SHORT $LN85@FrameOnCha
mov	DWORD PTR tv388[ebp], 1
jmp	SHORT $LN86@FrameOnCha
mov	DWORD PTR tv388[ebp], -1
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [edx]
mov	esi, esp
mov	ecx, DWORD PTR [eax]
mov	eax, DWORD PTR [edx+20]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
add	eax, DWORD PTR tv388[ebp]
mov	DWORD PTR _nextPage$9[ebp], eax
mov	esi, esp
mov	eax, DWORD PTR _nextPage$9[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
mov	eax, DWORD PTR [edx+100]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN57@FrameOnCha
mov	esi, esp
push	0
mov	eax, DWORD PTR _nextPage$9[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
mov	eax, DWORD PTR [edx+24]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
jmp	SHORT $LN58@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
je	SHORT $LN58@FrameOnCha
push	2
mov	ecx, DWORD PTR _win$[ebp]
call	?ChangePresentationMode@WindowInfo@@QAEXW4PresentationMode@@@Z 
jmp	$LN4@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
je	SHORT $LN60@FrameOnCha
push	2
mov	ecx, DWORD PTR _win$[ebp]
call	?ChangePresentationMode@WindowInfo@@QAEXW4PresentationMode@@@Z 
jmp	$LN4@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
je	SHORT $LN62@FrameOnCha
push	3
mov	ecx, DWORD PTR _win$[ebp]
call	?ChangePresentationMode@WindowInfo@@QAEXW4PresentationMode@@@Z 
jmp	$LN4@FrameOnCha
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
je	SHORT $LN64@FrameOnCha
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+172]
test	ecx, ecx
je	SHORT $LN65@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+772]
test	ecx, ecx
jne	SHORT $LN65@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 1
jne	SHORT $LN64@FrameOnCha
push	-1
push	0
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?UpdatePageInfoHelper@@YAXPAVWindowInfo@@PAVNotificationWnd@@H@Z 
add	esp, 12					
jmp	$LN4@FrameOnCha
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
je	SHORT $LN68@FrameOnCha
lea	ecx, DWORD PTR _pt$8[ebp]
call	??0?$PointT@H@geomutil@@QAE@XZ		
lea	eax, DWORD PTR _pt$8[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+96]
push	edx
call	?GetCursorPosInHwnd@@YA_NPAUHWND__@@AAV?$PointT@H@geomutil@@@Z 
add	esp, 8
movzx	eax, al
test	eax, eax
je	SHORT $LN68@FrameOnCha
push	0
mov	eax, DWORD PTR _pt$8[ebp+4]
push	eax
mov	ecx, DWORD PTR _pt$8[ebp]
push	ecx
mov	edx, DWORD PTR _win$[ebp]
push	edx
call	?UpdateCursorPositionHelper@@YAXPAVWindowInfo@@V?$PointT@H@geomutil@@PAVNotificationWnd@@@Z 
add	esp, 16					
jmp	$LN4@FrameOnCha
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
je	$LN70@FrameOnCha
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	ecx, eax
call	?GetEngine@DisplayModel@@QBEPAVBaseEngine@@XZ 
mov	DWORD PTR tv457[ebp], eax
mov	esi, esp
push	0
mov	eax, DWORD PTR tv457[ebp]
mov	edx, DWORD PTR [eax]
mov	ecx, DWORD PTR tv457[ebp]
mov	eax, DWORD PTR [edx+68]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
movzx	ecx, al
test	ecx, ecx
je	$LN70@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+332]
test	ecx, ecx
je	$LN70@FrameOnCha
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
cmp	DWORD PTR [ecx+128], 0
je	$LN70@FrameOnCha
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
cmp	DWORD PTR [eax+12], 0
jne	SHORT $LN71@FrameOnCha
mov	eax, DWORD PTR ?__LINE__Var@?0??FrameOnChar@@YAXAAVWindowInfo@@IJ@Z@4JA
add	eax, 154				
push	eax
push	OFFSET ??_C@_0DC@LPCGCECE@c?3?2workspace?2sumatrapdf?9master?2s@
push	1
push	792					
call	??2@YAPAXIHPBDH@Z			
add	esp, 16					
mov	DWORD PTR $T3[ebp], eax
cmp	DWORD PTR $T3[ebp], 0
je	SHORT $LN87@FrameOnCha
push	0
push	0
mov	ecx, DWORD PTR $T3[ebp]
call	??0?$Vec@UPageAnnotation@@@@QAE@IPAVAllocator@@@Z 
mov	DWORD PTR tv491[ebp], eax
jmp	SHORT $LN88@FrameOnCha
mov	DWORD PTR tv491[ebp], 0
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	ecx, DWORD PTR tv491[ebp]
mov	DWORD PTR [eax+12], ecx
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	edx, DWORD PTR [ecx+128]
mov	DWORD PTR _<range>$L0$7[ebp], edx
lea	eax, DWORD PTR _<begin>$L0$6[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L0$7[ebp]
call	?begin@?$Vec@USelectionOnPage@@@@QAE?AVIter@1@XZ 
lea	eax, DWORD PTR _<end>$L0$5[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L0$7[ebp]
call	?end@?$Vec@USelectionOnPage@@@@QAE?AVIter@1@XZ 
jmp	SHORT $LN8@FrameOnCha
lea	ecx, DWORD PTR _<begin>$L0$6[ebp]
call	??EIter@?$Vec@USelectionOnPage@@@@QAEAAV01@XZ 
lea	eax, DWORD PTR _<end>$L0$5[ebp]
push	eax
lea	ecx, DWORD PTR _<begin>$L0$6[ebp]
call	??9Iter@?$Vec@USelectionOnPage@@@@QBE_NABV01@@Z 
movzx	ecx, al
test	ecx, ecx
je	$LN7@FrameOnCha
lea	ecx, DWORD PTR _<begin>$L0$6[ebp]
call	??DIter@?$Vec@USelectionOnPage@@@@QBEAAUSelectionOnPage@@XZ 
mov	DWORD PTR _sel$4[ebp], eax
push	204					
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	ecx, DWORD PTR [eax+148]
push	ecx
lea	ecx, DWORD PTR $T1[ebp]
call	??0Color@PageAnnotation@@QAE@KE@Z	
mov	edx, DWORD PTR [eax]
push	edx
mov	esi, DWORD PTR _sel$4[ebp]
add	esi, 8
sub	esp, 32					
mov	ecx, 8
mov	edi, esp
rep movsd
mov	eax, DWORD PTR _sel$4[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	1
lea	ecx, DWORD PTR $T2[ebp]
call	??0PageAnnotation@@QAE@W4PageAnnotType@@HV?$RectT@N@geomutil@@UColor@0@@Z 
push	eax
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	ecx, DWORD PTR [eax+12]
call	?Append@?$Vec@UPageAnnotation@@@@QAEXABUPageAnnotation@@@Z 
mov	esi, DWORD PTR _sel$4[ebp]
add	esi, 8
sub	esp, 32					
mov	ecx, 8
mov	edi, esp
rep movsd
mov	eax, DWORD PTR _sel$4[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
push	eax
mov	ecx, OFFSET ?gRenderCache@@3VRenderCache@@A 
call	?Invalidate@RenderCache@@QAEXPAVDisplayModel@@HV?$RectT@N@geomutil@@@Z 
jmp	$LN6@FrameOnCha
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	BYTE PTR [eax+16], 1
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	ecx, eax
call	?GetEngine@DisplayModel@@QBEPAVBaseEngine@@XZ 
mov	DWORD PTR tv541[ebp], eax
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	esi, esp
mov	eax, DWORD PTR [eax+12]
push	eax
mov	ecx, DWORD PTR tv541[ebp]
mov	edx, DWORD PTR [ecx]
mov	ecx, DWORD PTR tv541[ebp]
mov	eax, DWORD PTR [edx+72]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ClearSearchResult@@YAXPAVWindowInfo@@@Z 
add	esp, 4
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN95@FrameOnCha
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 432				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
DD	3
DD	$LN94@FrameOnCha
DD	-96					
DD	8
DD	$LN91@FrameOnCha
DD	-124					
DD	8
DD	$LN92@FrameOnCha
DD	-140					
DD	8
DD	$LN93@FrameOnCha
DB	60					
DB	101					
DB	110					
DB	100					
DB	62					
DB	36					
DB	76					
DB	48					
DB	0
DB	60					
DB	98					
DB	101					
DB	103					
DB	105					
DB	110					
DB	62					
DB	36					
DB	76					
DB	48					
DB	0
DB	112					
DB	116					
DB	0
npad	1
DD	$LN31@FrameOnCha
DD	$LN14@FrameOnCha
DD	$LN29@FrameOnCha
DD	$LN30@FrameOnCha
DD	$LN2@FrameOnCha
DB	0
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	1
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	2
DB	3
npad	2
DD	$LN34@FrameOnCha
DD	$LN33@FrameOnCha
DD	$LN41@FrameOnCha
DD	$LN42@FrameOnCha
DD	$LN59@FrameOnCha
DD	$LN43@FrameOnCha
DD	$LN46@FrameOnCha
DD	$LN45@FrameOnCha
DD	$LN35@FrameOnCha
DD	$LN69@FrameOnCha
DD	$LN63@FrameOnCha
DD	$LN36@FrameOnCha
DD	$LN37@FrameOnCha
DD	$LN66@FrameOnCha
DD	$LN38@FrameOnCha
DD	$LN39@FrameOnCha
DD	$LN61@FrameOnCha
DD	$LN40@FrameOnCha
DD	$LN4@FrameOnCha
DB	0
DB	18					
DB	18					
DB	18					
DB	18					
DB	1
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	1
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	2
DB	18					
DB	3
DB	4
DB	5
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	2
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	6
DB	7
DB	18					
DB	18					
DB	18					
DB	8
DB	9
DB	10					
DB	11					
DB	12					
DB	18					
DB	13					
DB	14					
DB	18					
DB	15					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	16					
DB	18					
DB	18					
DB	17					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	18					
DB	2
DB	18					
DB	18					
DB	18					
DB	2
ENDP
?SingleCharLowerW@@YA_W_W@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
mov	ax, WORD PTR _c$[ebp]
mov	WORD PTR _buf$[ebp], ax
xor	eax, eax
mov	WORD PTR _buf$[ebp+2], ax
mov	esi, esp
push	1
lea	eax, DWORD PTR _buf$[ebp]
push	eax
call	DWORD PTR __imp__CharLowerBuffW@8
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, 2
imul	ecx, eax, 0
mov	ax, WORD PTR _buf$[ebp+ecx]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@SingleChar
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	1
DD	$LN4@SingleChar
DD	-8					
DD	4
DD	$LN3@SingleChar
DB	98					
DB	117					
DB	102					
DB	0
ENDP
?ChmForwardKey@@YA_NI@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
cmp	DWORD PTR _key$[ebp], 37		
je	SHORT $LN3@ChmForward
cmp	DWORD PTR _key$[ebp], 39		
jne	SHORT $LN2@ChmForward
mov	al, 1
jmp	SHORT $LN1@ChmForward
cmp	DWORD PTR _key$[ebp], 38		
je	SHORT $LN5@ChmForward
cmp	DWORD PTR _key$[ebp], 40		
jne	SHORT $LN4@ChmForward
mov	al, 1
jmp	SHORT $LN1@ChmForward
cmp	DWORD PTR _key$[ebp], 36		
je	SHORT $LN7@ChmForward
cmp	DWORD PTR _key$[ebp], 35		
jne	SHORT $LN6@ChmForward
mov	al, 1
jmp	SHORT $LN1@ChmForward
cmp	DWORD PTR _key$[ebp], 33		
je	SHORT $LN9@ChmForward
cmp	DWORD PTR _key$[ebp], 34		
jne	SHORT $LN8@ChmForward
mov	al, 1
jmp	SHORT $LN1@ChmForward
cmp	DWORD PTR _key$[ebp], 106		
je	SHORT $LN11@ChmForward
cmp	DWORD PTR _key$[ebp], 111		
jne	SHORT $LN10@ChmForward
mov	al, 1
jmp	SHORT $LN1@ChmForward
xor	al, al
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?OnMenuViewPresentation@@YAXAAVWindowInfo@@@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 196				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-196]
mov	ecx, 49					
mov	eax, -858993460				
rep stosd
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
je	SHORT $LN3@OnMenuView
mov	BYTE PTR tv67[ebp], 1
jmp	SHORT $LN4@OnMenuView
mov	BYTE PTR tv67[ebp], 0
movzx	eax, BYTE PTR tv67[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?OnMenuViewFullscreen@@YAXPAVWindowInfo@@_N@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 196				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?OnMenuGoToPage@@YAXAAVWindowInfo@@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 232				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-232]
mov	ecx, 58					
mov	eax, -858993460				
rep stosd
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN2@OnMenuGoTo
jmp	$LN1@OnMenuGoTo
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+172]
test	ecx, ecx
je	SHORT $LN3@OnMenuGoTo
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+772]
test	ecx, ecx
jne	SHORT $LN3@OnMenuGoTo
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
jne	SHORT $LN3@OnMenuGoTo
mov	ecx, DWORD PTR _win$[ebp]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
test	eax, eax
jne	SHORT $LN3@OnMenuGoTo
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+124]
push	ecx
call	?FocusPageNoEdit@@YAXPAUHWND__@@@Z	
add	esp, 4
jmp	$LN1@OnMenuGoTo
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+20]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
push	eax
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+92]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
lea	ecx, DWORD PTR _label$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+88]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
movzx	eax, al
test	eax, eax
jne	SHORT $LN7@OnMenuGoTo
mov	BYTE PTR tv147[ebp], 1
jmp	SHORT $LN8@OnMenuGoTo
mov	BYTE PTR tv147[ebp], 0
movzx	ecx, BYTE PTR tv147[ebp]
push	ecx
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+12]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
lea	ecx, DWORD PTR _label$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+92]
push	edx
call	?Dialog_GoToPage@@YAPA_WPAUHWND__@@PB_WH_N@Z 
add	esp, 16					
push	eax
lea	ecx, DWORD PTR _newPageLabel$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
lea	ecx, DWORD PTR _newPageLabel$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
test	eax, eax
jne	SHORT $LN4@OnMenuGoTo
lea	ecx, DWORD PTR _newPageLabel$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _label$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
jmp	SHORT $LN1@OnMenuGoTo
lea	ecx, DWORD PTR _newPageLabel$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
mov	esi, esp
push	eax
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+96]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _newPageNo$[ebp], eax
mov	esi, esp
mov	eax, DWORD PTR _newPageNo$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
mov	eax, DWORD PTR [edx+100]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN5@OnMenuGoTo
mov	esi, esp
push	1
mov	eax, DWORD PTR _newPageNo$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
mov	eax, DWORD PTR [edx+24]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
lea	ecx, DWORD PTR _newPageLabel$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _label$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN12@OnMenuGoTo
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 232				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	3
DD	2
DD	$LN11@OnMenuGoTo
DD	-8					
DD	4
DD	$LN9@OnMenuGoTo
DD	-20					
DD	4
DD	$LN10@OnMenuGoTo
DB	110					
DB	101					
DB	119					
DB	80					
DB	97					
DB	103					
DB	101					
DB	76					
DB	97					
DB	98					
DB	101					
DB	108					
DB	0
DB	108					
DB	97					
DB	98					
DB	101					
DB	108					
DB	0
ENDP
?FocusPageNoEdit@@YAXPAUHWND__@@@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	esi, esp
call	DWORD PTR __imp__GetFocus@0
cmp	esi, esp
call	__RTC_CheckEsp
cmp	eax, DWORD PTR _hwndPageBox$[ebp]
jne	SHORT $LN2@FocusPageN
mov	esi, esp
push	0
push	0
push	7
mov	eax, DWORD PTR _hwndPageBox$[ebp]
push	eax
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	SHORT $LN1@FocusPageN
mov	esi, esp
mov	eax, DWORD PTR _hwndPageBox$[ebp]
push	eax
call	DWORD PTR __imp__SetFocus@4
cmp	esi, esp
call	__RTC_CheckEsp
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?ChangeZoomLevel@@YAXPAVWindowInfo@@M_N@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 268				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-268]
mov	ecx, 67					
mov	eax, -858993460				
rep stosd
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN2@ChangeZoom
jmp	$LN1@ChangeZoom
mov	esi, esp
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+52]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
fstp	DWORD PTR _zoom$[ebp]
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+40]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _mode$[ebp], eax
movzx	eax, BYTE PTR _pagesContinuously$[ebp]
test	eax, eax
je	SHORT $LN11@ChangeZoom
mov	DWORD PTR tv87[ebp], 4
jmp	SHORT $LN12@ChangeZoom
mov	DWORD PTR tv87[ebp], 1
mov	ecx, DWORD PTR tv87[ebp]
mov	DWORD PTR _newMode$[ebp], ecx
mov	eax, DWORD PTR _mode$[ebp]
cmp	eax, DWORD PTR _newMode$[ebp]
jne	SHORT $LN5@ChangeZoom
movss	xmm0, DWORD PTR _zoom$[ebp]
ucomiss	xmm0, DWORD PTR _newZoom$[ebp]
lahf
test	ah, 68					
jnp	$LN3@ChangeZoom
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
movss	xmm0, DWORD PTR [ecx+132]
movss	DWORD PTR _prevZoom$3[ebp], xmm0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	edx, DWORD PTR [ecx+136]
mov	DWORD PTR _prevMode$2[ebp], edx
mov	eax, DWORD PTR _mode$[ebp]
cmp	eax, DWORD PTR _newMode$[ebp]
je	SHORT $LN6@ChangeZoom
push	0
mov	eax, DWORD PTR _newMode$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?SwitchToDisplayMode@@YAXPAVWindowInfo@@W4DisplayMode@@_N@Z 
add	esp, 12					
push	ecx
movss	xmm0, DWORD PTR _newZoom$[ebp]
movss	DWORD PTR [esp], xmm0
call	?MenuIdFromVirtualZoom@@YAIM@Z		
add	esp, 4
push	eax
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuZoom@@YAXPAVWindowInfo@@I@Z	
add	esp, 8
movss	xmm0, DWORD PTR __real@c2c60000
ucomiss	xmm0, DWORD PTR _prevZoom$3[ebp]
lahf
test	ah, 68					
jp	SHORT $LN7@ChangeZoom
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
movss	xmm0, DWORD PTR _zoom$[ebp]
movss	DWORD PTR [ecx+132], xmm0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	edx, DWORD PTR _mode$[ebp]
mov	DWORD PTR [ecx+136], edx
jmp	SHORT $LN8@ChangeZoom
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
movss	xmm0, DWORD PTR _prevZoom$3[ebp]
movss	DWORD PTR [ecx+132], xmm0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	edx, DWORD PTR _prevMode$2[ebp]
mov	DWORD PTR [ecx+136], edx
jmp	SHORT $LN9@ChangeZoom
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
movss	xmm0, DWORD PTR [ecx+132]
ucomiss	xmm0, DWORD PTR __real@c2c60000
lahf
test	ah, 68					
jnp	SHORT $LN9@ChangeZoom
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
movss	xmm0, DWORD PTR [ecx+132]
movss	DWORD PTR _prevZoom$1[ebp], xmm0
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	edx, DWORD PTR [ecx+136]
push	edx
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?SwitchToDisplayMode@@YAXPAVWindowInfo@@W4DisplayMode@@_N@Z 
add	esp, 12					
push	0
push	1
push	ecx
movss	xmm0, DWORD PTR _prevZoom$1[ebp]
movss	DWORD PTR [esp], xmm0
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ZoomToSelection@@YAXPAVWindowInfo@@M_N1@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 268				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?OnMenuViewMangaMode@@YAXPAVWindowInfo@@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 240				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-240]
mov	ecx, 60					
mov	eax, -858993460				
rep stosd
xor	eax, eax
jne	SHORT $LN4@OnMenuView
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+88], 0
je	SHORT $LN11@OnMenuView
mov	ecx, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [ecx+88]
call	?GetEngineType@TabInfo@@QBE?AW4EngineType@@XZ 
cmp	eax, 6
jne	SHORT $LN11@OnMenuView
mov	BYTE PTR tv71[ebp], 0
jmp	SHORT $LN12@OnMenuView
mov	BYTE PTR tv71[ebp], 1
movzx	edx, BYTE PTR tv71[ebp]
push	edx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN4@OnMenuView
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+88], 0
je	SHORT $LN9@OnMenuView
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
call	?GetEngineType@TabInfo@@QBE?AW4EngineType@@XZ 
cmp	eax, 6
je	SHORT $LN8@OnMenuView
jmp	$LN1@OnMenuView
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	DWORD PTR _dm$[ebp], eax
mov	ecx, DWORD PTR _dm$[ebp]
call	?GetDisplayR2L@DisplayModel@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN13@OnMenuView
mov	BYTE PTR tv87[ebp], 1
jmp	SHORT $LN14@OnMenuView
mov	BYTE PTR tv87[ebp], 0
movzx	ecx, BYTE PTR tv87[ebp]
push	ecx
mov	ecx, DWORD PTR _dm$[ebp]
call	?SetDisplayR2L@DisplayModel@@QAEX_N@Z	
lea	eax, DWORD PTR _state$[ebp]
push	eax
mov	ecx, DWORD PTR _dm$[ebp]
call	?GetScrollState@DisplayModel@@QAE?AUScrollState@@XZ 
mov	ecx, DWORD PTR _dm$[ebp]
call	?GetRotation@DisplayModel@@QBEHXZ	
push	eax
mov	esi, esp
push	0
mov	eax, DWORD PTR _dm$[ebp]
mov	edx, DWORD PTR [eax]
mov	ecx, DWORD PTR _dm$[ebp]
mov	eax, DWORD PTR [edx+52]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
push	ecx
fstp	DWORD PTR [esp]
mov	ecx, DWORD PTR _dm$[ebp]
call	?Relayout@DisplayModel@@QAEXMH@Z	
sub	esp, 24					
mov	eax, esp
mov	ecx, DWORD PTR _state$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _state$[ebp+4]
mov	DWORD PTR [eax+4], edx
mov	ecx, DWORD PTR _state$[ebp+8]
mov	DWORD PTR [eax+8], ecx
mov	edx, DWORD PTR _state$[ebp+12]
mov	DWORD PTR [eax+12], edx
mov	ecx, DWORD PTR _state$[ebp+16]
mov	DWORD PTR [eax+16], ecx
mov	edx, DWORD PTR _state$[ebp+20]
mov	DWORD PTR [eax+20], edx
mov	ecx, DWORD PTR _dm$[ebp]
call	?SetScrollState@DisplayModel@@QAEXUScrollState@@@Z 
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN17@OnMenuView
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 240				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	3
DD	1
DD	$LN16@OnMenuView
DD	-40					
DD	24					
DD	$LN15@OnMenuView
DB	115					
DB	116					
DB	97					
DB	116					
DB	101					
DB	0
ENDP
?OnMenuViewContinuous@@YAXAAVWindowInfo@@@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN4@OnMenuView
jmp	$LN1@OnMenuView
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+40]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _newMode$[ebp], eax
mov	eax, DWORD PTR _newMode$[ebp]
mov	DWORD PTR tv76[ebp], eax
mov	ecx, DWORD PTR tv76[ebp]
sub	ecx, 1
mov	DWORD PTR tv76[ebp], ecx
cmp	DWORD PTR tv76[ebp], 5
ja	$LN2@OnMenuView
mov	edx, DWORD PTR tv76[ebp]
jmp	DWORD PTR $LN15@OnMenuView[edx*4]
mov	eax, DWORD PTR _newMode$[ebp]
push	eax
call	?IsContinuous@@YA_NW4DisplayMode@@@Z	
add	esp, 4
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN9@OnMenuView
mov	DWORD PTR tv81[ebp], 1
jmp	SHORT $LN10@OnMenuView
mov	DWORD PTR tv81[ebp], 4
mov	edx, DWORD PTR tv81[ebp]
mov	DWORD PTR _newMode$[ebp], edx
jmp	SHORT $LN2@OnMenuView
mov	eax, DWORD PTR _newMode$[ebp]
push	eax
call	?IsContinuous@@YA_NW4DisplayMode@@@Z	
add	esp, 4
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN11@OnMenuView
mov	DWORD PTR tv86[ebp], 2
jmp	SHORT $LN12@OnMenuView
mov	DWORD PTR tv86[ebp], 5
mov	edx, DWORD PTR tv86[ebp]
mov	DWORD PTR _newMode$[ebp], edx
jmp	SHORT $LN2@OnMenuView
mov	eax, DWORD PTR _newMode$[ebp]
push	eax
call	?IsContinuous@@YA_NW4DisplayMode@@@Z	
add	esp, 4
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN13@OnMenuView
mov	DWORD PTR tv91[ebp], 3
jmp	SHORT $LN14@OnMenuView
mov	DWORD PTR tv91[ebp], 6
mov	edx, DWORD PTR tv91[ebp]
mov	DWORD PTR _newMode$[ebp], edx
push	0
mov	eax, DWORD PTR _newMode$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?SwitchToDisplayMode@@YAXPAVWindowInfo@@W4DisplayMode@@_N@Z 
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	3
DD	$LN5@OnMenuView
DD	$LN6@OnMenuView
DD	$LN7@OnMenuView
DD	$LN5@OnMenuView
DD	$LN6@OnMenuView
DD	$LN7@OnMenuView
ENDP
?OnMenuOptions@@YAXAAVWindowInfo@@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	?OnMenuOptions@@YAXPAUHWND__@@@Z	
add	esp, 4
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?Count@?$Vec@PAVWindowInfo@@@@QBEIXZ	
test	eax, eax
jbe	SHORT $LN1@OnMenuOpti
push	0
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z 
mov	ecx, DWORD PTR [eax]
call	?IsAboutWindow@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN1@OnMenuOpti
push	1
push	0
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z 
mov	ecx, DWORD PTR [eax]
call	?RedrawAll@WindowInfo@@QAEX_N@Z		
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?OnMenuOptions@@YAXPAUHWND__@@@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
push	4
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	eax, al
test	eax, eax
jne	SHORT $LN2@OnMenuOpti
jmp	SHORT $LN1@OnMenuOpti
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
push	eax
mov	ecx, DWORD PTR _hwnd$[ebp]
push	ecx
call	?Dialog_Settings@@YAHPAUHWND__@@PAUGlobalPrefs@@@Z 
add	esp, 8
cmp	eax, 1
je	SHORT $LN3@OnMenuOpti
jmp	SHORT $LN1@OnMenuOpti
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+188]
test	ecx, ecx
jne	SHORT $LN4@OnMenuOpti
push	1
mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A 
call	?Clear@FileHistory@@QAEX_N@Z		
push	OFFSET ?gFileHistory@@3VFileHistory@@A	
call	?CleanUpThumbnailCache@@YAXAAVFileHistory@@@Z 
add	esp, 4
call	?UpdateDocumentColors@@YAXXZ		
call	?Save@prefs@@YA_NXZ			
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?OnMenuAdvancedOptions@@YAXXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
push	2
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	eax, al
test	eax, eax
je	SHORT $LN3@OnMenuAdva
push	4
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	eax, al
test	eax, eax
jne	SHORT $LN2@OnMenuAdva
jmp	SHORT $LN1@OnMenuAdva
call	?GetSettingsPath@prefs@@YAPA_WXZ	
push	eax
lea	ecx, DWORD PTR _path$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
push	0
push	OFFSET ??_C@_19BDAJEHDN@?$AAo?$AAp?$AAe?$AAn?$AA?$AA@
push	0
lea	ecx, DWORD PTR _path$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?LaunchFile@@YA_NPB_W00_N@Z		
add	esp, 16					
lea	ecx, DWORD PTR _path$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN7@OnMenuAdva
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	1
DD	$LN6@OnMenuAdva
DD	-8					
DD	4
DD	$LN5@OnMenuAdva
DB	112					
DB	97					
DB	116					
DB	104					
DB	0
ENDP
?OnMenuViewShowHideToolbar@@YAXXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 252				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-252]
mov	ecx, 63					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+172]
test	ecx, ecx
jne	SHORT $LN6@OnMenuView
mov	DWORD PTR tv68[ebp], 1
jmp	SHORT $LN7@OnMenuView
mov	DWORD PTR tv68[ebp], 0
mov	edx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	al, BYTE PTR tv68[ebp]
mov	BYTE PTR [edx+172], al
mov	DWORD PTR _<range>$L0$4[ebp], OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
lea	eax, DWORD PTR _<begin>$L0$3[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L0$4[ebp]
call	?begin@?$Vec@PAVWindowInfo@@@@QAE?AVIter@1@XZ 
lea	eax, DWORD PTR _<end>$L0$2[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L0$4[ebp]
call	?end@?$Vec@PAVWindowInfo@@@@QAE?AVIter@1@XZ 
jmp	SHORT $LN4@OnMenuView
lea	ecx, DWORD PTR _<begin>$L0$3[ebp]
call	??EIter@?$Vec@PAVWindowInfo@@@@QAEAAV01@XZ 
lea	eax, DWORD PTR _<end>$L0$2[ebp]
push	eax
lea	ecx, DWORD PTR _<begin>$L0$3[ebp]
call	??9Iter@?$Vec@PAVWindowInfo@@@@QBE_NABV01@@Z 
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN1@OnMenuView
lea	ecx, DWORD PTR _<begin>$L0$3[ebp]
call	??DIter@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@XZ 
mov	eax, DWORD PTR [eax]
mov	DWORD PTR _win$1[ebp], eax
mov	eax, DWORD PTR _win$1[ebp]
push	eax
call	?ShowOrHideToolbar@@YAXPAVWindowInfo@@@Z 
add	esp, 4
jmp	SHORT $LN2@OnMenuView
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN11@OnMenuView
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 252				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	2
DD	2
DD	$LN10@OnMenuView
DD	-24					
DD	8
DD	$LN8@OnMenuView
DD	-40					
DD	8
DD	$LN9@OnMenuView
DB	60					
DB	101					
DB	110					
DB	100					
DB	62					
DB	36					
DB	76					
DB	48					
DB	0
DB	60					
DB	98					
DB	101					
DB	103					
DB	105					
DB	110					
DB	62					
DB	36					
DB	76					
DB	48					
DB	0
ENDP
?OnMenuChangeLanguage@@YAXPAUHWND__@@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
call	?GetCurrentLangCode@trans@@YAPBDXZ	
push	eax
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	?Dialog_ChangeLanguge@@YAPBDPAUHWND__@@PBD@Z 
add	esp, 8
mov	DWORD PTR _newLangCode$[ebp], eax
mov	eax, DWORD PTR _newLangCode$[ebp]
push	eax
call	?SetCurrentLanguageAndRefreshUI@@YAXPBD@Z 
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?FrameOnSize@@YAXPAVWindowInfo@@HH@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 264				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-264]
mov	ecx, 66					
mov	eax, -858993460				
rep stosd
push	-1
push	1
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?RelayoutFrame@@YAXPAVWindowInfo@@_NH@Z	
add	esp, 12					
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
jne	SHORT $LN3@FrameOnSiz
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+772]
test	ecx, ecx
je	SHORT $LN1@FrameOnSiz
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
lea	edx, DWORD PTR _fullscreen$3[ebp]
push	edx
call	?GetFullscreenRect@@YA?AV?$RectT@H@geomutil@@PAUHWND__@@@Z 
add	esp, 8
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
lea	ecx, DWORD PTR _rect$2[ebp]
call	??0WindowRect@@QAE@PAUHWND__@@@Z	
lea	eax, DWORD PTR _fullscreen$3[ebp]
push	eax
lea	ecx, DWORD PTR _rect$2[ebp]
call	??9?$RectT@H@geomutil@@QBE_NABV01@@Z	
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN1@FrameOnSiz
lea	eax, DWORD PTR $T1[ebp]
push	eax
call	?GetVirtualScreenRect@@YA?AV?$RectT@H@geomutil@@XZ 
add	esp, 4
push	eax
lea	ecx, DWORD PTR _rect$2[ebp]
call	??9?$RectT@H@geomutil@@QBE_NABV01@@Z	
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN1@FrameOnSiz
sub	esp, 16					
mov	eax, esp
mov	ecx, DWORD PTR _fullscreen$3[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _fullscreen$3[ebp+4]
mov	DWORD PTR [eax+4], edx
mov	ecx, DWORD PTR _fullscreen$3[ebp+8]
mov	DWORD PTR [eax+8], ecx
mov	edx, DWORD PTR _fullscreen$3[ebp+12]
mov	DWORD PTR [eax+12], edx
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	?MoveWindow@@YAXPAUHWND__@@V?$RectT@H@geomutil@@@Z 
add	esp, 20					
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN9@FrameOnSiz
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 264				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
DD	2
DD	$LN8@FrameOnSiz
DD	-20					
DD	16					
DD	$LN6@FrameOnSiz
DD	-44					
DD	16					
DD	$LN7@FrameOnSiz
DB	114					
DB	101					
DB	99					
DB	116					
DB	0
DB	102					
DB	117					
DB	108					
DB	108					
DB	115					
DB	99					
DB	114					
DB	101					
DB	101					
DB	110					
DB	0
ENDP
?RelayoutFrame@@YAXPAVWindowInfo@@_NH@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 684				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-684]
mov	ecx, 171				
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
lea	ecx, DWORD PTR _rc$[ebp]
call	??0ClientRect@@QAE@PAUHWND__@@@Z	
lea	ecx, DWORD PTR _rc$[ebp]
call	?IsEmpty@?$RectT@H@geomutil@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN2@RelayoutFr
jmp	$LN1@RelayoutFr
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 2
je	SHORT $LN4@RelayoutFr
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 3
jne	SHORT $LN3@RelayoutFr
mov	eax, DWORD PTR _rc$[ebp]
mov	DWORD PTR $T7[ebp], eax
mov	ecx, DWORD PTR _rc$[ebp+4]
mov	DWORD PTR $T7[ebp+4], ecx
mov	edx, DWORD PTR _rc$[ebp+8]
mov	DWORD PTR $T7[ebp+8], edx
mov	eax, DWORD PTR _rc$[ebp+12]
mov	DWORD PTR $T7[ebp+12], eax
sub	esp, 16					
mov	ecx, esp
mov	edx, DWORD PTR $T7[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR $T7[ebp+4]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR $T7[ebp+8]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR $T7[ebp+12]
mov	DWORD PTR [ecx+12], eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+96]
push	edx
call	?MoveWindow@@YAXPAUHWND__@@V?$RectT@H@geomutil@@@Z 
add	esp, 20					
jmp	$LN1@RelayoutFr
lea	ecx, DWORD PTR _dh$[ebp]
call	??0DeferWinPosHelper@@QAE@XZ		
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
jne	$LN16@RelayoutFr
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+772]
test	ecx, ecx
jne	$LN16@RelayoutFr
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+261]
test	ecx, ecx
je	$LN6@RelayoutFr
call	?IsCompositionEnabled@dwm@@YAHXZ	
test	eax, eax
je	SHORT $LN8@RelayoutFr
mov	esi, esp
push	33					
call	DWORD PTR __imp__GetSystemMetrics@4
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, eax
mov	edi, esp
push	92					
call	DWORD PTR __imp__GetSystemMetrics@4
cmp	edi, esp
call	__RTC_CheckEsp
add	esi, eax
mov	DWORD PTR _frameThickness$22[ebp], esi
mov	eax, DWORD PTR _rc$[ebp+4]
add	eax, DWORD PTR _frameThickness$22[ebp]
mov	DWORD PTR _rc$[ebp+4], eax
mov	eax, DWORD PTR _rc$[ebp+12]
sub	eax, DWORD PTR _frameThickness$22[ebp]
mov	DWORD PTR _rc$[ebp+12], eax
mov	esi, esp
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__IsZoomed@4
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	SHORT $LN30@RelayoutFr
movss	xmm0, DWORD PTR __real@3f800000
movss	DWORD PTR tv154[ebp], xmm0
jmp	SHORT $LN31@RelayoutFr
movss	xmm0, DWORD PTR __real@3fa00000
movss	DWORD PTR tv154[ebp], xmm0
movss	xmm0, DWORD PTR tv154[ebp]
movss	DWORD PTR _scale$21[ebp], xmm0
push	ecx
movss	xmm0, DWORD PTR _scale$21[ebp]
movss	DWORD PTR [esp], xmm0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	?GetTabbarHeight@@YAHPAUHWND__@@M@Z	
add	esp, 8
mov	DWORD PTR _captionHeight$20[ebp], eax
movzx	eax, BYTE PTR _updateToolbars$[ebp]
test	eax, eax
je	$LN9@RelayoutFr
call	?IsCompositionEnabled@dwm@@YAHXZ	
test	eax, eax
je	$LN10@RelayoutFr
push	16					
lea	eax, DWORD PTR _capButtons$18[ebp]
push	eax
push	5
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+92]
push	edx
call	?GetWindowAttribute@dwm@@YAJPAUHWND__@@KPAXK@Z 
add	esp, 16					
test	eax, eax
jl	SHORT $LN10@RelayoutFr
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
lea	ecx, DWORD PTR _wr$17[ebp]
call	??0WindowRect@@QAE@PAUHWND__@@@Z	
mov	eax, DWORD PTR _wr$17[ebp]
add	eax, DWORD PTR _capButtons$18[ebp]
mov	DWORD PTR _pt$16[ebp], eax
mov	eax, DWORD PTR _wr$17[ebp+4]
add	eax, DWORD PTR _capButtons$18[ebp+4]
mov	DWORD PTR _pt$16[ebp+4], eax
mov	esi, esp
lea	eax, DWORD PTR _pt$16[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+92]
push	edx
call	DWORD PTR __imp__ScreenToClient@8
cmp	esi, esp
call	__RTC_CheckEsp
call	?IsUIRightToLeft@@YA_NXZ		
movzx	eax, al
test	eax, eax
je	SHORT $LN12@RelayoutFr
mov	eax, DWORD PTR _rc$[ebp]
add	eax, DWORD PTR _rc$[ebp+8]
sub	eax, DWORD PTR _pt$16[ebp]
mov	DWORD PTR _captionWidth$19[ebp], eax
jmp	SHORT $LN13@RelayoutFr
mov	eax, DWORD PTR _pt$16[ebp]
sub	eax, DWORD PTR _rc$[ebp]
mov	DWORD PTR _captionWidth$19[ebp], eax
jmp	SHORT $LN11@RelayoutFr
mov	eax, DWORD PTR _rc$[ebp+8]
mov	DWORD PTR _captionWidth$19[ebp], eax
push	4
mov	eax, DWORD PTR _captionHeight$20[ebp]
push	eax
mov	ecx, DWORD PTR _captionWidth$19[ebp]
push	ecx
mov	edx, DWORD PTR _rc$[ebp+4]
push	edx
mov	eax, DWORD PTR _rc$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+268]
push	edx
lea	ecx, DWORD PTR _dh$[ebp]
call	?SetWindowPos@DeferWinPosHelper@@QAEXPAUHWND__@@0HHHHI@Z 
mov	eax, DWORD PTR _rc$[ebp+4]
add	eax, DWORD PTR _captionHeight$20[ebp]
mov	DWORD PTR _rc$[ebp+4], eax
mov	eax, DWORD PTR _rc$[ebp+12]
sub	eax, DWORD PTR _captionHeight$20[ebp]
mov	DWORD PTR _rc$[ebp+12], eax
jmp	$LN16@RelayoutFr
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+260]
test	ecx, ecx
je	SHORT $LN16@RelayoutFr
push	ecx
movss	xmm0, DWORD PTR __real@3f800000
movss	DWORD PTR [esp], xmm0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	?GetTabbarHeight@@YAHPAUHWND__@@M@Z	
add	esp, 8
mov	DWORD PTR _tabHeight$15[ebp], eax
movzx	eax, BYTE PTR _updateToolbars$[ebp]
test	eax, eax
je	SHORT $LN15@RelayoutFr
push	4
mov	eax, DWORD PTR _tabHeight$15[ebp]
push	eax
mov	ecx, DWORD PTR _rc$[ebp+8]
push	ecx
mov	edx, DWORD PTR _rc$[ebp+4]
push	edx
mov	eax, DWORD PTR _rc$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+256]
push	edx
lea	ecx, DWORD PTR _dh$[ebp]
call	?SetWindowPos@DeferWinPosHelper@@QAEXPAUHWND__@@0HHHHI@Z 
mov	ecx, DWORD PTR _win$[ebp]
call	?IsAboutWindow@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN16@RelayoutFr
mov	eax, DWORD PTR _rc$[ebp+4]
add	eax, DWORD PTR _tabHeight$15[ebp]
mov	DWORD PTR _rc$[ebp+4], eax
mov	eax, DWORD PTR _rc$[ebp+12]
sub	eax, DWORD PTR _tabHeight$15[ebp]
mov	DWORD PTR _rc$[ebp+12], eax
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+172]
test	ecx, ecx
je	$LN17@RelayoutFr
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
jne	$LN17@RelayoutFr
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+772]
test	ecx, ecx
jne	SHORT $LN17@RelayoutFr
mov	ecx, DWORD PTR _win$[ebp]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
test	eax, eax
jne	SHORT $LN17@RelayoutFr
movzx	eax, BYTE PTR _updateToolbars$[ebp]
test	eax, eax
je	SHORT $LN18@RelayoutFr
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+104]
push	ecx
lea	ecx, DWORD PTR _rcRebar$14[ebp]
call	??0WindowRect@@QAE@PAUHWND__@@@Z	
push	4
mov	eax, DWORD PTR _rcRebar$14[ebp+12]
push	eax
mov	ecx, DWORD PTR _rc$[ebp+8]
push	ecx
mov	edx, DWORD PTR _rc$[ebp+4]
push	edx
mov	eax, DWORD PTR _rc$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+104]
push	edx
lea	ecx, DWORD PTR _dh$[ebp]
call	?SetWindowPos@DeferWinPosHelper@@QAEXPAUHWND__@@0HHHHI@Z 
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+104]
push	ecx
lea	ecx, DWORD PTR _rcRebar$13[ebp]
call	??0WindowRect@@QAE@PAUHWND__@@@Z	
mov	eax, DWORD PTR _rc$[ebp+4]
add	eax, DWORD PTR _rcRebar$13[ebp+12]
mov	DWORD PTR _rc$[ebp+4], eax
mov	eax, DWORD PTR _rc$[ebp+12]
sub	eax, DWORD PTR _rcRebar$13[ebp+12]
mov	DWORD PTR _rc$[ebp+12], eax
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+173]
test	ecx, ecx
je	SHORT $LN32@RelayoutFr
cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	
jne	SHORT $LN32@RelayoutFr
push	2
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	edx, al
test	edx, edx
je	SHORT $LN32@RelayoutFr
mov	DWORD PTR tv378[ebp], 1
jmp	SHORT $LN33@RelayoutFr
mov	DWORD PTR tv378[ebp], 0
mov	al, BYTE PTR tv378[ebp]
mov	BYTE PTR _showFavorites$[ebp], al
mov	eax, DWORD PTR _win$[ebp]
mov	cl, BYTE PTR [eax+149]
mov	BYTE PTR _tocVisible$[ebp], cl
movzx	eax, BYTE PTR _tocVisible$[ebp]
test	eax, eax
jne	SHORT $LN20@RelayoutFr
movzx	eax, BYTE PTR _showFavorites$[ebp]
test	eax, eax
je	$LN19@RelayoutFr
cmp	DWORD PTR _sidebarDx$[ebp], 0
jge	SHORT $LN34@RelayoutFr
lea	eax, DWORD PTR $T4[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+136]
push	edx
lea	ecx, DWORD PTR $T5[ebp]
call	??0ClientRect@@QAE@PAUHWND__@@@Z	
mov	ecx, eax
call	?Size@?$RectT@H@geomutil@@QBE?AV?$SizeT@H@2@XZ 
mov	DWORD PTR tv438[ebp], eax
jmp	SHORT $LN35@RelayoutFr
mov	eax, DWORD PTR _rc$[ebp+4]
push	eax
mov	ecx, DWORD PTR _sidebarDx$[ebp]
push	ecx
lea	ecx, DWORD PTR $T3[ebp]
call	??0?$SizeT@H@geomutil@@QAE@HH@Z		
mov	DWORD PTR tv438[ebp], eax
mov	edx, DWORD PTR tv438[ebp]
mov	DWORD PTR $T6[ebp], edx
mov	eax, DWORD PTR $T6[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [eax+4]
mov	DWORD PTR _toc$12[ebp], ecx
mov	DWORD PTR _toc$12[ebp+4], edx
cmp	DWORD PTR _toc$12[ebp], 0
jne	SHORT $LN21@RelayoutFr
mov	eax, DWORD PTR _rc$[ebp+8]
cdq
and	edx, 3
add	eax, edx
sar	eax, 2
mov	DWORD PTR _toc$12[ebp], eax
mov	eax, DWORD PTR _rc$[ebp+8]
cdq
sub	eax, edx
sar	eax, 1
push	eax
push	150					
mov	eax, DWORD PTR _toc$12[ebp]
push	eax
call	??$limitValue@H@@YAHHHH@Z		
add	esp, 12					
mov	DWORD PTR _toc$12[ebp], eax
movzx	eax, BYTE PTR _tocVisible$[ebp]
test	eax, eax
jne	SHORT $LN40@RelayoutFr
mov	DWORD PTR tv486[ebp], 0
jmp	SHORT $LN41@RelayoutFr
movzx	ecx, BYTE PTR _showFavorites$[ebp]
test	ecx, ecx
jne	SHORT $LN38@RelayoutFr
mov	edx, DWORD PTR _rc$[ebp+12]
mov	DWORD PTR tv485[ebp], edx
jmp	SHORT $LN39@RelayoutFr
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
cmp	DWORD PTR [eax+236], 0
je	SHORT $LN36@RelayoutFr
mov	ecx, DWORD PTR _rc$[ebp+12]
push	ecx
push	0
mov	edx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	eax, DWORD PTR [edx+236]
push	eax
call	??$limitValue@H@@YAHHHH@Z		
add	esp, 12					
mov	DWORD PTR tv484[ebp], eax
jmp	SHORT $LN37@RelayoutFr
mov	eax, DWORD PTR _rc$[ebp+12]
cdq
sub	eax, edx
sar	eax, 1
mov	DWORD PTR tv484[ebp], eax
mov	ecx, DWORD PTR tv484[ebp]
mov	DWORD PTR tv485[ebp], ecx
mov	edx, DWORD PTR tv485[ebp]
mov	DWORD PTR tv486[ebp], edx
mov	eax, DWORD PTR tv486[ebp]
mov	DWORD PTR _toc$12[ebp+4], eax
movzx	eax, BYTE PTR _tocVisible$[ebp]
test	eax, eax
je	SHORT $LN22@RelayoutFr
movzx	eax, BYTE PTR _showFavorites$[ebp]
test	eax, eax
je	SHORT $LN22@RelayoutFr
mov	eax, DWORD PTR _rc$[ebp+12]
sub	eax, 100				
push	eax
push	100					
mov	ecx, DWORD PTR _toc$12[ebp+4]
push	ecx
call	??$limitValue@H@@YAHHHH@Z		
add	esp, 12					
mov	DWORD PTR _toc$12[ebp+4], eax
movzx	eax, BYTE PTR _tocVisible$[ebp]
test	eax, eax
je	$LN24@RelayoutFr
mov	eax, DWORD PTR _toc$12[ebp+4]
push	eax
mov	ecx, DWORD PTR _toc$12[ebp]
push	ecx
lea	edx, DWORD PTR $T2[ebp]
push	edx
lea	ecx, DWORD PTR _rc$[ebp]
call	?TL@?$RectT@H@geomutil@@QBE?AV?$PointT@H@2@XZ 
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR [eax]
push	edx
lea	ecx, DWORD PTR _rToc$11[ebp]
call	??0?$RectT@H@geomutil@@QAE@V?$PointT@H@1@V?$SizeT@H@1@@Z 
sub	esp, 16					
mov	eax, esp
mov	ecx, DWORD PTR _rToc$11[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _rToc$11[ebp+4]
mov	DWORD PTR [eax+4], edx
mov	ecx, DWORD PTR _rToc$11[ebp+8]
mov	DWORD PTR [eax+8], ecx
mov	edx, DWORD PTR _rToc$11[ebp+12]
mov	DWORD PTR [eax+12], edx
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+136]
push	ecx
lea	ecx, DWORD PTR _dh$[ebp]
call	?MoveWindow@DeferWinPosHelper@@QAEXPAUHWND__@@V?$RectT@H@geomutil@@@Z 
movzx	eax, BYTE PTR _showFavorites$[ebp]
test	eax, eax
je	SHORT $LN24@RelayoutFr
push	4
mov	eax, DWORD PTR _toc$12[ebp]
push	eax
mov	ecx, DWORD PTR _rc$[ebp+4]
add	ecx, DWORD PTR _toc$12[ebp+4]
push	ecx
mov	edx, DWORD PTR _rc$[ebp]
push	edx
lea	ecx, DWORD PTR _rSplitV$10[ebp]
call	??0?$RectT@H@geomutil@@QAE@HHHH@Z	
sub	esp, 16					
mov	eax, esp
mov	ecx, DWORD PTR _rSplitV$10[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _rSplitV$10[ebp+4]
mov	DWORD PTR [eax+4], edx
mov	ecx, DWORD PTR _rSplitV$10[ebp+8]
mov	DWORD PTR [eax+8], ecx
mov	edx, DWORD PTR _rSplitV$10[ebp+12]
mov	DWORD PTR [eax+12], edx
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+252]
push	ecx
call	?GetHwnd@@YAPAUHWND__@@PAUSplitterWnd@@@Z 
add	esp, 4
push	eax
lea	ecx, DWORD PTR _dh$[ebp]
call	?MoveWindow@DeferWinPosHelper@@QAEXPAUHWND__@@V?$RectT@H@geomutil@@@Z 
mov	eax, DWORD PTR _toc$12[ebp+4]
add	eax, 4
mov	DWORD PTR _toc$12[ebp+4], eax
movzx	eax, BYTE PTR _showFavorites$[ebp]
test	eax, eax
je	SHORT $LN25@RelayoutFr
mov	eax, DWORD PTR _rc$[ebp+12]
sub	eax, DWORD PTR _toc$12[ebp+4]
push	eax
mov	ecx, DWORD PTR _toc$12[ebp]
push	ecx
mov	edx, DWORD PTR _rc$[ebp+4]
add	edx, DWORD PTR _toc$12[ebp+4]
push	edx
mov	eax, DWORD PTR _rc$[ebp]
push	eax
lea	ecx, DWORD PTR _rFav$9[ebp]
call	??0?$RectT@H@geomutil@@QAE@HHHH@Z	
sub	esp, 16					
mov	eax, esp
mov	ecx, DWORD PTR _rFav$9[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _rFav$9[ebp+4]
mov	DWORD PTR [eax+4], edx
mov	ecx, DWORD PTR _rFav$9[ebp+8]
mov	DWORD PTR [eax+8], ecx
mov	edx, DWORD PTR _rFav$9[ebp+12]
mov	DWORD PTR [eax+12], edx
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+152]
push	ecx
lea	ecx, DWORD PTR _dh$[ebp]
call	?MoveWindow@DeferWinPosHelper@@QAEXPAUHWND__@@V?$RectT@H@geomutil@@@Z 
mov	eax, DWORD PTR _rc$[ebp+12]
push	eax
push	5
mov	ecx, DWORD PTR _rc$[ebp+4]
push	ecx
mov	edx, DWORD PTR _rc$[ebp]
add	edx, DWORD PTR _toc$12[ebp]
push	edx
lea	ecx, DWORD PTR _rSplitH$8[ebp]
call	??0?$RectT@H@geomutil@@QAE@HHHH@Z	
sub	esp, 16					
mov	eax, esp
mov	ecx, DWORD PTR _rSplitH$8[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _rSplitH$8[ebp+4]
mov	DWORD PTR [eax+4], edx
mov	ecx, DWORD PTR _rSplitH$8[ebp+8]
mov	DWORD PTR [eax+8], ecx
mov	edx, DWORD PTR _rSplitH$8[ebp+12]
mov	DWORD PTR [eax+12], edx
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+248]
push	ecx
call	?GetHwnd@@YAPAUHWND__@@PAUSplitterWnd@@@Z 
add	esp, 4
push	eax
lea	ecx, DWORD PTR _dh$[ebp]
call	?MoveWindow@DeferWinPosHelper@@QAEXPAUHWND__@@V?$RectT@H@geomutil@@@Z 
mov	eax, DWORD PTR _toc$12[ebp]
mov	ecx, DWORD PTR _rc$[ebp]
lea	edx, DWORD PTR [ecx+eax+5]
mov	DWORD PTR _rc$[ebp], edx
mov	eax, DWORD PTR _toc$12[ebp]
add	eax, 5
mov	ecx, DWORD PTR _rc$[ebp+8]
sub	ecx, eax
mov	DWORD PTR _rc$[ebp+8], ecx
mov	eax, DWORD PTR _rc$[ebp]
mov	DWORD PTR $T1[ebp], eax
mov	ecx, DWORD PTR _rc$[ebp+4]
mov	DWORD PTR $T1[ebp+4], ecx
mov	edx, DWORD PTR _rc$[ebp+8]
mov	DWORD PTR $T1[ebp+8], edx
mov	eax, DWORD PTR _rc$[ebp+12]
mov	DWORD PTR $T1[ebp+12], eax
sub	esp, 16					
mov	ecx, esp
mov	edx, DWORD PTR $T1[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR $T1[ebp+4]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR $T1[ebp+8]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR $T1[ebp+12]
mov	DWORD PTR [ecx+12], eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+96]
push	edx
lea	ecx, DWORD PTR _dh$[ebp]
call	?MoveWindow@DeferWinPosHelper@@QAEXPAUHWND__@@V?$RectT@H@geomutil@@@Z 
lea	ecx, DWORD PTR _dh$[ebp]
call	?End@DeferWinPosHelper@@QAEXXZ		
movzx	eax, BYTE PTR _tocVisible$[ebp]
test	eax, eax
je	$LN28@RelayoutFr
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN28@RelayoutFr
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+128]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	SHORT $LN27@RelayoutFr
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+128]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, eax
call	?CurrentTocPageNo@EbookController@@QBEHXZ 
push	eax
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?UpdateTocSelection@@YAXPAVWindowInfo@@H@Z 
add	esp, 8
jmp	SHORT $LN28@RelayoutFr
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+20]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?UpdateTocSelection@@YAXPAVWindowInfo@@H@Z 
add	esp, 8
lea	ecx, DWORD PTR _dh$[ebp]
call	??1DeferWinPosHelper@@QAE@XZ		
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN55@RelayoutFr
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
add	esp, 684				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	12					
DD	$LN54@RelayoutFr
DD	-24					
DD	16					
DD	$LN42@RelayoutFr
DD	-36					
DD	4
DD	$LN43@RelayoutFr
DD	-108					
DD	16					
DD	$LN44@RelayoutFr
DD	-132					
DD	16					
DD	$LN45@RelayoutFr
DD	-148					
DD	8
DD	$LN46@RelayoutFr
DD	-184					
DD	16					
DD	$LN47@RelayoutFr
DD	-208					
DD	16					
DD	$LN48@RelayoutFr
DD	-248					
DD	8
DD	$LN49@RelayoutFr
DD	-272					
DD	16					
DD	$LN50@RelayoutFr
DD	-296					
DD	16					
DD	$LN51@RelayoutFr
DD	-320					
DD	16					
DD	$LN52@RelayoutFr
DD	-344					
DD	16					
DD	$LN53@RelayoutFr
DB	114					
DB	83					
DB	112					
DB	108					
DB	105					
DB	116					
DB	72					
DB	0
DB	114					
DB	70					
DB	97					
DB	118					
DB	0
DB	114					
DB	83					
DB	112					
DB	108					
DB	105					
DB	116					
DB	86					
DB	0
DB	114					
DB	84					
DB	111					
DB	99					
DB	0
DB	116					
DB	111					
DB	99					
DB	0
DB	114					
DB	99					
DB	82					
DB	101					
DB	98					
DB	97					
DB	114					
DB	0
DB	114					
DB	99					
DB	82					
DB	101					
DB	98					
DB	97					
DB	114					
DB	0
DB	112					
DB	116					
DB	0
DB	119					
DB	114					
DB	0
DB	99					
DB	97					
DB	112					
DB	66					
DB	117					
DB	116					
DB	116					
DB	111					
DB	110					
DB	115					
DB	0
DB	100					
DB	104					
DB	0
DB	114					
DB	99					
DB	0
ENDP
?BrowseFolder@@YAXAAVWindowInfo@@_N@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 372				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-372]
mov	ecx, 93					
mov	eax, -858993460				
rep stosd
xor	eax, eax
jne	SHORT $LN5@BrowseFold
mov	ecx, DWORD PTR _win$[ebp]
call	?IsAboutWindow@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN20@BrowseFold
mov	BYTE PTR tv69[ebp], 1
jmp	SHORT $LN21@BrowseFold
mov	BYTE PTR tv69[ebp], 0
movzx	ecx, BYTE PTR tv69[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@BrowseFold
mov	ecx, DWORD PTR _win$[ebp]
call	?IsAboutWindow@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN11@BrowseFold
jmp	$LN1@BrowseFold
push	2
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	eax, al
test	eax, eax
je	SHORT $LN13@BrowseFold
cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	
je	SHORT $LN12@BrowseFold
jmp	$LN1@BrowseFold
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	DWORD PTR _tab$[ebp], ecx
lea	ecx, DWORD PTR _files$[ebp]
call	??0WStrVec@@QAE@XZ			
mov	ecx, DWORD PTR _tab$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?GetDir@path@@YAPA_WPB_W@Z		
add	esp, 4
push	eax
lea	ecx, DWORD PTR _pattern$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
push	OFFSET ??_C@_13BBDEGPLJ@?$AA?$CK?$AA?$AA@
lea	ecx, DWORD PTR _pattern$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?Join@path@@YAPA_WPB_W0@Z		
add	esp, 8
push	eax
lea	ecx, DWORD PTR _pattern$[ebp]
call	?Set@?$ScopedMem@_W@@QAEXPA_W@Z		
push	0
lea	eax, DWORD PTR _files$[ebp]
push	eax
lea	ecx, DWORD PTR _pattern$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?CollectPathsFromDirectory@@YA_NPB_WAAVWStrVec@@_N@Z 
add	esp, 12					
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN14@BrowseFold
lea	ecx, DWORD PTR _pattern$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _files$[ebp]
call	??1WStrVec@@QAE@XZ			
jmp	$LN1@BrowseFold
lea	ecx, DWORD PTR _files$[ebp]
call	?Count@?$Vec@PA_W@@QBEIXZ		
mov	DWORD PTR _i$2[ebp], eax
jmp	SHORT $LN10@BrowseFold
mov	eax, DWORD PTR _i$2[ebp]
sub	eax, 1
mov	DWORD PTR _i$2[ebp], eax
cmp	DWORD PTR _i$2[ebp], 0
jbe	$LN9@BrowseFold
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+72]
push	ecx
push	0
mov	edx, DWORD PTR _i$2[ebp]
sub	edx, 1
push	edx
lea	ecx, DWORD PTR _files$[ebp]
call	?At@?$Vec@PA_W@@QBEAAPA_WI@Z		
mov	eax, DWORD PTR [eax]
push	eax
call	?IsSupportedFile@EngineManager@@YA_NPB_W_N1@Z 
add	esp, 12					
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN15@BrowseFold
push	0
mov	eax, DWORD PTR _i$2[ebp]
sub	eax, 1
push	eax
lea	ecx, DWORD PTR _files$[ebp]
call	?At@?$Vec@PA_W@@QBEAAPA_WI@Z		
mov	ecx, DWORD PTR [eax]
push	ecx
call	?IsSupportedFile@Doc@@SA_NPB_W_N@Z	
add	esp, 8
movzx	edx, al
test	edx, edx
jne	SHORT $LN15@BrowseFold
push	0
mov	eax, DWORD PTR _i$2[ebp]
sub	eax, 1
push	eax
lea	ecx, DWORD PTR _files$[ebp]
call	?At@?$Vec@PA_W@@QBEAAPA_WI@Z		
mov	ecx, DWORD PTR [eax]
push	ecx
mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A 
call	?Find@FileHistory@@QBEPAUFileState@@PB_WPAI@Z 
test	eax, eax
jne	SHORT $LN15@BrowseFold
push	1
mov	eax, DWORD PTR _i$2[ebp]
sub	eax, 1
push	eax
lea	ecx, DWORD PTR _files$[ebp]
call	?PopAt@?$Vec@PA_W@@QAEPA_WI@Z		
push	eax
call	__free_dbg
add	esp, 8
jmp	$LN8@BrowseFold
mov	ecx, DWORD PTR _tab$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
lea	ecx, DWORD PTR _files$[ebp]
call	?Contains@WStrVec@@QBE_NPB_W@Z		
movzx	eax, al
test	eax, eax
jne	SHORT $LN16@BrowseFold
mov	ecx, DWORD PTR _tab$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?Dup@str@@YAPA_WPB_W@Z			
add	esp, 4
mov	DWORD PTR $T1[ebp], eax
lea	eax, DWORD PTR $T1[ebp]
push	eax
lea	ecx, DWORD PTR _files$[ebp]
call	?Append@?$Vec@PA_W@@QAEXABQA_W@Z	
lea	ecx, DWORD PTR _files$[ebp]
call	?SortNatural@WStrVec@@QAEXXZ		
push	0
mov	ecx, DWORD PTR _tab$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
lea	ecx, DWORD PTR _files$[ebp]
call	?Find@WStrVec@@QBEHPB_WI@Z		
mov	DWORD PTR _index$[ebp], eax
movzx	eax, BYTE PTR _forward$[ebp]
test	eax, eax
je	SHORT $LN17@BrowseFold
mov	esi, DWORD PTR _index$[ebp]
add	esi, 1
lea	ecx, DWORD PTR _files$[ebp]
call	?Count@?$Vec@PA_W@@QBEIXZ		
mov	ecx, eax
mov	eax, esi
xor	edx, edx
div	ecx
mov	DWORD PTR _index$[ebp], edx
jmp	SHORT $LN18@BrowseFold
lea	ecx, DWORD PTR _files$[ebp]
call	?Count@?$Vec@PA_W@@QBEIXZ		
mov	ecx, DWORD PTR _index$[ebp]
lea	esi, DWORD PTR [ecx+eax-1]
lea	ecx, DWORD PTR _files$[ebp]
call	?Count@?$Vec@PA_W@@QBEIXZ		
mov	ecx, eax
mov	eax, esi
xor	edx, edx
div	ecx
mov	DWORD PTR _index$[ebp], edx
mov	eax, DWORD PTR _tab$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?UpdateTabFileDisplayStateForWin@@YAXPAVWindowInfo@@PAVTabInfo@@@Z 
add	esp, 8
mov	eax, DWORD PTR _win$[ebp]
push	eax
mov	ecx, DWORD PTR _index$[ebp]
push	ecx
lea	ecx, DWORD PTR _files$[ebp]
call	?At@?$Vec@PA_W@@QBEAAPA_WI@Z		
mov	edx, DWORD PTR [eax]
push	edx
lea	ecx, DWORD PTR _args$[ebp]
call	??0LoadArgs@@QAE@PB_WPAVWindowInfo@@@Z	
mov	BYTE PTR _args$[ebp+9], 1
lea	eax, DWORD PTR _args$[ebp]
push	eax
call	?LoadDocument@@YAPAVWindowInfo@@AAULoadArgs@@@Z 
add	esp, 4
lea	ecx, DWORD PTR _pattern$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _files$[ebp]
call	??1WStrVec@@QAE@XZ			
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN26@BrowseFold
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 372				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	2
DD	3
DD	$LN25@BrowseFold
DD	-100					
DD	84					
DD	$LN22@BrowseFold
DD	-112					
DD	4
DD	$LN23@BrowseFold
DD	-160					
DD	16					
DD	$LN24@BrowseFold
DB	97					
DB	114					
DB	103					
DB	115					
DB	0
DB	112					
DB	97					
DB	116					
DB	116					
DB	101					
DB	114					
DB	110					
DB	0
DB	102					
DB	105					
DB	108					
DB	101					
DB	115					
DB	0
ENDP
??$AllocArray@_W@@YAPA_WI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
push	74					
push	OFFSET ??_C@_0DE@LFCLDLDN@c?3?2workspace?2sumatrapdf?9master?2s@
push	1
push	2
mov	eax, DWORD PTR _n$[ebp]
push	eax
call	__calloc_dbg
add	esp, 20					
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?OnMenuOpen@@YAXAAVWindowInfo@@@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 616				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-616]
mov	ecx, 154				
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
push	2
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	eax, al
test	eax, eax
jne	SHORT $LN16@OnMenuOpen
jmp	$LN1@OnMenuOpen
cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	
je	SHORT $LN17@OnMenuOpen
jmp	$LN1@OnMenuOpen
push	OFFSET ??_C@_0O@PPPABHME@PDF?5documents?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
mov	DWORD PTR _fileFormats$[ebp], eax
mov	DWORD PTR _fileFormats$[ebp+4], OFFSET ??_C@_1M@GMAENGJ@?$AA?$CK?$AA?4?$AAp?$AAd?$AAf?$AA?$AA@
mov	BYTE PTR _fileFormats$[ebp+8], 1
push	OFFSET ??_C@_0O@CMKMFPFC@XPS?5documents?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
mov	DWORD PTR _fileFormats$[ebp+12], eax
mov	DWORD PTR _fileFormats$[ebp+16], OFFSET ??_C@_1BK@NFGLNLPM@?$AA?$CK?$AA?4?$AAx?$AAp?$AAs?$AA?$DL?$AA?$CK?$AA?4?$AAo?$AAx?$AAp?$AAs?$AA?$AA@
mov	BYTE PTR _fileFormats$[ebp+20], 1
push	OFFSET ??_C@_0P@HHBCBKLA@DjVu?5documents?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
mov	DWORD PTR _fileFormats$[ebp+24], eax
mov	DWORD PTR _fileFormats$[ebp+28], OFFSET ??_C@_1O@NIKKIKJG@?$AA?$CK?$AA?4?$AAd?$AAj?$AAv?$AAu?$AA?$AA@
mov	BYTE PTR _fileFormats$[ebp+32], 1
push	OFFSET ??_C@_0BF@CJKGEDBB@Postscript?5documents?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
mov	DWORD PTR _fileFormats$[ebp+36], eax
mov	DWORD PTR _fileFormats$[ebp+40], OFFSET ??_C@_1BG@NJEHGIFM@?$AA?$CK?$AA?4?$AAp?$AAs?$AA?$DL?$AA?$CK?$AA?4?$AAe?$AAp?$AAs?$AA?$AA@
call	?IsAvailable@PsEngine@@YA_NXZ		
mov	BYTE PTR _fileFormats$[ebp+44], al
push	OFFSET ??_C@_0M@DIHALPPJ@Comic?5books?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
mov	DWORD PTR _fileFormats$[ebp+48], eax
mov	DWORD PTR _fileFormats$[ebp+52], OFFSET ??_C@_1DA@EBDFKDOA@?$AA?$CK?$AA?4?$AAc?$AAb?$AAz?$AA?$DL?$AA?$CK?$AA?4?$AAc?$AAb?$AAr?$AA?$DL?$AA?$CK?$AA?4?$AAc?$AAb?$AA7?$AA?$DL?$AA?$CK?$AA?4?$AAc?$AAb?$AAt?$AA?$AA@
mov	BYTE PTR _fileFormats$[ebp+56], 1
push	OFFSET ??_C@_0O@OALBDIG@CHM?5documents?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
mov	DWORD PTR _fileFormats$[ebp+60], eax
mov	DWORD PTR _fileFormats$[ebp+64], OFFSET ??_C@_1M@FEDHDMNL@?$AA?$CK?$AA?4?$AAc?$AAh?$AAm?$AA?$AA@
mov	BYTE PTR _fileFormats$[ebp+68], 1
push	OFFSET ??_C@_0M@KGHOOEKB@EPUB?5ebooks?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
mov	DWORD PTR _fileFormats$[ebp+72], eax
mov	DWORD PTR _fileFormats$[ebp+76], OFFSET ??_C@_1O@JBEJNBMD@?$AA?$CK?$AA?4?$AAe?$AAp?$AAu?$AAb?$AA?$AA@
mov	BYTE PTR _fileFormats$[ebp+80], 1
push	OFFSET ??_C@_0P@ELBBEEHG@Mobi?5documents?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
mov	DWORD PTR _fileFormats$[ebp+84], eax
mov	DWORD PTR _fileFormats$[ebp+88], OFFSET ??_C@_1O@OONHAHJC@?$AA?$CK?$AA?4?$AAm?$AAo?$AAb?$AAi?$AA?$AA@
mov	BYTE PTR _fileFormats$[ebp+92], 1
push	OFFSET ??_C@_0BG@IKNIOMC@FictionBook?5documents?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
mov	DWORD PTR _fileFormats$[ebp+96], eax
mov	DWORD PTR _fileFormats$[ebp+100], OFFSET ??_C@_1DM@GHNEDBGL@?$AA?$CK?$AA?4?$AAf?$AAb?$AA2?$AA?$DL?$AA?$CK?$AA?4?$AAf?$AAb?$AA2?$AAz?$AA?$DL?$AA?$CK?$AA?4?$AAz?$AAf?$AAb?$AA2?$AA?$DL?$AA?$CK?$AA?4?$AAf?$AAb?$AA2?$AA?4?$AAz?$AAi?$AAp?$AA?$AA@
mov	BYTE PTR _fileFormats$[ebp+104], 1
push	OFFSET ??_C@_0BC@KCFFJDBC@PalmDoc?5documents?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
mov	DWORD PTR _fileFormats$[ebp+108], eax
mov	DWORD PTR _fileFormats$[ebp+112], OFFSET ??_C@_1BI@PDOGCDMJ@?$AA?$CK?$AA?4?$AAp?$AAd?$AAb?$AA?$DL?$AA?$CK?$AA?4?$AAp?$AAr?$AAc?$AA?$AA@
mov	BYTE PTR _fileFormats$[ebp+116], 1
mov	DWORD PTR _fileFormats$[ebp+120], 0
mov	DWORD PTR _fileFormats$[ebp+124], OFFSET ??_C@_1BK@DPLNBIFD@?$AA?$CK?$AA?4?$AAt?$AAi?$AAf?$AA?$DL?$AA?$CK?$AA?4?$AAt?$AAi?$AAf?$AAf?$AA?$AA@
mov	BYTE PTR _fileFormats$[ebp+128], 1
push	OFFSET ??_C@_0P@LHNJDKCD@Text?5documents?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
mov	DWORD PTR _fileFormats$[ebp+132], eax
mov	DWORD PTR _fileFormats$[ebp+136], OFFSET ??_C@_1GK@LIACBEDM@?$AA?$CK?$AA?4?$AAt?$AAx?$AAt?$AA?$DL?$AA?$CK?$AA?4?$AAl?$AAo?$AAg?$AA?$DL?$AA?$CK?$AA?4?$AAn?$AAf?$AAo?$AA?$DL?$AAr?$AAf?$AAc?$AA?$CK?$AA?4?$AAt?$AAx?$AAt?$AA?$DL?$AAf?$AAi?$AAl?$AAe?$AA_@
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	cl, BYTE PTR [eax+72]
mov	BYTE PTR _fileFormats$[ebp+140], cl
push	0
push	0
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	??0?$Str@_W@str@@QAE@IPAVAllocator@@@Z	
push	-1
push	OFFSET ??_C@_0BI@MBOKCMGB@All?5supported?5documents?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
push	1
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEX_W@Z		
mov	DWORD PTR _i$5[ebp], 0
jmp	SHORT $LN4@OnMenuOpen
mov	eax, DWORD PTR _i$5[ebp]
add	eax, 1
mov	DWORD PTR _i$5[ebp], eax
cmp	DWORD PTR _i$5[ebp], 12			
jae	SHORT $LN8@OnMenuOpen
imul	eax, DWORD PTR _i$5[ebp], 12
movzx	ecx, BYTE PTR _fileFormats$[ebp+eax+8]
test	ecx, ecx
je	SHORT $LN18@OnMenuOpen
push	-1
imul	eax, DWORD PTR _i$5[ebp], 12
mov	ecx, DWORD PTR _fileFormats$[ebp+eax+4]
push	ecx
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
push	59					
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEX_W@Z		
jmp	SHORT $LN2@OnMenuOpen
xor	eax, eax
jne	SHORT $LN8@OnMenuOpen
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Last@?$Vec@_W@@QBEAA_WXZ		
movzx	eax, WORD PTR [eax]
cmp	eax, 59					
je	SHORT $LN24@OnMenuOpen
mov	BYTE PTR tv226[ebp], 1
jmp	SHORT $LN25@OnMenuOpen
mov	BYTE PTR tv226[ebp], 0
movzx	ecx, BYTE PTR tv226[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN8@OnMenuOpen
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Last@?$Vec@_W@@QBEAA_WXZ		
mov	ecx, 1
mov	WORD PTR [eax], cx
mov	DWORD PTR _i$4[ebp], 0
jmp	SHORT $LN13@OnMenuOpen
mov	eax, DWORD PTR _i$4[ebp]
add	eax, 1
mov	DWORD PTR _i$4[ebp], eax
cmp	DWORD PTR _i$4[ebp], 12			
jae	SHORT $LN12@OnMenuOpen
imul	eax, DWORD PTR _i$4[ebp], 12
movzx	ecx, BYTE PTR _fileFormats$[ebp+eax+8]
test	ecx, ecx
je	SHORT $LN19@OnMenuOpen
imul	eax, DWORD PTR _i$4[ebp], 12
cmp	DWORD PTR _fileFormats$[ebp+eax], 0
je	SHORT $LN19@OnMenuOpen
push	-1
imul	eax, DWORD PTR _i$4[ebp], 12
mov	ecx, DWORD PTR _fileFormats$[ebp+eax]
push	ecx
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
push	1
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEX_W@Z		
push	-1
imul	eax, DWORD PTR _i$4[ebp], 12
mov	ecx, DWORD PTR _fileFormats$[ebp+eax+4]
push	ecx
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
push	1
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEX_W@Z		
jmp	$LN11@OnMenuOpen
push	-1
push	OFFSET ??_C@_09OONCJHPB@All?5files?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
push	-1
push	OFFSET ??_C@_1M@LFIHNHLH@?$AA?$AB?$AA?$CK?$AA?4?$AA?$CK?$AA?$AB?$AA?$AA@
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
push	OFFSET ??_C@_13NOLLCAOD@?$AA?$AA?$AA?$AA@
push	OFFSET ??_C@_13GGAHEHIG@?$AA?$AB?$AA?$AA@
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Get@?$Str@_W@str@@QBEPA_WXZ		
push	eax
call	?TransChars@str@@YAIPA_WPB_W1@Z		
add	esp, 12					
mov	DWORD PTR _ofn$[ebp], 0
push	84					
push	0
lea	eax, DWORD PTR _ofn$[ebp+4]
push	eax
call	_memset
add	esp, 12					
mov	DWORD PTR _ofn$[ebp], 88		
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
mov	DWORD PTR _ofn$[ebp+4], ecx
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Get@?$Str@_W@str@@QBEPA_WXZ		
mov	DWORD PTR _ofn$[ebp+12], eax
mov	DWORD PTR _ofn$[ebp+24], 1
mov	DWORD PTR _ofn$[ebp+52], 530948		
mov	DWORD PTR _ofn$[ebp+32], 26000		
mov	eax, DWORD PTR _ofn$[ebp+32]
push	eax
call	??$AllocArray@_W@@YAPA_WI@Z		
add	esp, 4
push	eax
lea	ecx, DWORD PTR _file$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
lea	ecx, DWORD PTR _file$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
mov	DWORD PTR _ofn$[ebp+28], eax
mov	esi, esp
lea	eax, DWORD PTR _ofn$[ebp]
push	eax
call	DWORD PTR __imp__GetOpenFileNameW@4
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
jne	SHORT $LN20@OnMenuOpen
lea	ecx, DWORD PTR _file$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	??1?$Str@_W@str@@QAE@XZ
jmp	$LN1@OnMenuOpen
movzx	eax, WORD PTR _ofn$[ebp+56]
mov	ecx, DWORD PTR _ofn$[ebp+28]
lea	edx, DWORD PTR [ecx+eax*2]
mov	DWORD PTR _fileName$[ebp], edx
mov	eax, DWORD PTR _fileName$[ebp]
movzx	ecx, WORD PTR [eax-2]
test	ecx, ecx
je	SHORT $LN14@OnMenuOpen
mov	eax, DWORD PTR _win$[ebp]
push	eax
mov	ecx, DWORD PTR _ofn$[ebp+28]
push	ecx
lea	ecx, DWORD PTR _args$3[ebp]
call	??0LoadArgs@@QAE@PB_WPAVWindowInfo@@@Z	
lea	eax, DWORD PTR _args$3[ebp]
push	eax
call	?LoadDocument@@YAPAVWindowInfo@@AAULoadArgs@@@Z 
add	esp, 4
lea	ecx, DWORD PTR _file$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	??1?$Str@_W@str@@QAE@XZ
jmp	$LN1@OnMenuOpen
mov	eax, DWORD PTR _fileName$[ebp]
movzx	ecx, WORD PTR [eax]
test	ecx, ecx
je	$LN15@OnMenuOpen
mov	eax, DWORD PTR _fileName$[ebp]
push	eax
mov	ecx, DWORD PTR _ofn$[ebp+28]
push	ecx
call	?Join@path@@YAPA_WPB_W0@Z		
add	esp, 8
push	eax
lea	ecx, DWORD PTR _filePath$2[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
lea	ecx, DWORD PTR _filePath$2[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
test	eax, eax
je	SHORT $LN22@OnMenuOpen
mov	eax, DWORD PTR _win$[ebp]
push	eax
lea	ecx, DWORD PTR _filePath$2[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
lea	ecx, DWORD PTR _args$1[ebp]
call	??0LoadArgs@@QAE@PB_WPAVWindowInfo@@@Z	
lea	eax, DWORD PTR _args$1[ebp]
push	eax
call	?LoadDocument@@YAPAVWindowInfo@@AAULoadArgs@@@Z 
add	esp, 4
mov	eax, DWORD PTR _fileName$[ebp]
push	eax
call	?Len@str@@YAIPB_W@Z			
add	esp, 4
mov	ecx, DWORD PTR _fileName$[ebp]
lea	edx, DWORD PTR [ecx+eax*2+2]
mov	DWORD PTR _fileName$[ebp], edx
lea	ecx, DWORD PTR _filePath$2[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
jmp	$LN14@OnMenuOpen
lea	ecx, DWORD PTR _file$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	??1?$Str@_W@str@@QAE@XZ
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN34@OnMenuOpen
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
add	esp, 616				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
DD	7
DD	$LN33@OnMenuOpen
DD	-152					
DD	144					
DD	$LN26@OnMenuOpen
DD	-212					
DD	52					
DD	$LN27@OnMenuOpen
DD	-332					
DD	88					
DD	$LN28@OnMenuOpen
DD	-344					
DD	4
DD	$LN29@OnMenuOpen
DD	-380					
DD	16					
DD	$LN30@OnMenuOpen
DD	-392					
DD	4
DD	$LN31@OnMenuOpen
DD	-416					
DD	16					
DD	$LN32@OnMenuOpen
DB	97					
DB	114					
DB	103					
DB	115					
DB	0
DB	102					
DB	105					
DB	108					
DB	101					
DB	80					
DB	97					
DB	116					
DB	104					
DB	0
DB	97					
DB	114					
DB	103					
DB	115					
DB	0
DB	102					
DB	105					
DB	108					
DB	101					
DB	0
DB	111					
DB	102					
DB	110					
DB	0
DB	102					
DB	105					
DB	108					
DB	101					
DB	70					
DB	105					
DB	108					
DB	116					
DB	101					
DB	114					
DB	0
DB	102					
DB	105					
DB	108					
DB	101					
DB	70					
DB	111					
DB	114					
DB	109					
DB	97					
DB	116					
DB	115					
DB	0
ENDP
?OnMenuSaveBookmark@@YAXAAVWindowInfo@@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 1008				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-1008]
mov	ecx, 252				
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
push	2
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	eax, al
test	eax, eax
je	SHORT $LN3@OnMenuSave
cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	
je	SHORT $LN2@OnMenuSave
jmp	$LN1@OnMenuSave
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN4@OnMenuSave
jmp	$LN1@OnMenuSave
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+8]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _defExt$[ebp], eax
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+4]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
call	?GetBaseName@path@@YAPB_WPB_W@Z		
add	esp, 4
push	eax
push	260					
lea	eax, DWORD PTR _dstFileName$[ebp]
push	eax
call	?BufSet@str@@YAIPA_WIPB_W@Z		
add	esp, 12					
push	OFFSET ??_C@_13ENNFDPBH@?$AA_?$AA?$AA@
push	OFFSET ??_C@_13EBCNDICG@?$AA?3?$AA?$AA@
lea	eax, DWORD PTR _dstFileName$[ebp]
push	eax
call	?TransChars@str@@YAIPA_WPB_W1@Z		
add	esp, 12					
mov	eax, DWORD PTR _defExt$[ebp]
push	eax
lea	ecx, DWORD PTR _dstFileName$[ebp]
push	ecx
call	?EndsWithI@str@@YA_NPB_W0@Z		
add	esp, 8
movzx	edx, al
test	edx, edx
je	SHORT $LN5@OnMenuSave
lea	eax, DWORD PTR _dstFileName$[ebp]
push	eax
call	?Len@str@@YAIPB_W@Z			
add	esp, 4
mov	esi, eax
mov	ecx, DWORD PTR _defExt$[ebp]
push	ecx
call	?Len@str@@YAIPB_W@Z			
add	esp, 4
sub	esi, eax
shl	esi, 1
mov	DWORD PTR $T2[ebp], esi
cmp	DWORD PTR $T2[ebp], 520			
jae	SHORT $LN15@OnMenuSave
jmp	SHORT $LN16@OnMenuSave
call	___report_rangecheckfailure
xor	edx, edx
mov	eax, DWORD PTR $T2[ebp]
mov	WORD PTR _dstFileName$[ebp+eax], dx
push	OFFSET ??_C@_0BD@PDJKDAIB@Bookmark?5Shortcuts?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
push	OFFSET ??_C@_1BE@HGLMFIPD@?$AA?$CF?$AAs?$AA?$AB?$AA?$CK?$AA?4?$AAl?$AAn?$AAk?$AA?$AB?$AA?$AA@
call	?Format@str@@YAPA_WPB_WZZ		
add	esp, 8
push	eax
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
push	OFFSET ??_C@_13NOLLCAOD@?$AA?$AA?$AA?$AA@
push	OFFSET ??_C@_13GGAHEHIG@?$AA?$AB?$AA?$AA@
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?TransChars@str@@YAIPA_WPB_W1@Z		
add	esp, 12					
mov	DWORD PTR _ofn$[ebp], 0
push	84					
push	0
lea	eax, DWORD PTR _ofn$[ebp+4]
push	eax
call	_memset
add	esp, 12					
mov	DWORD PTR _ofn$[ebp], 88		
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
mov	DWORD PTR _ofn$[ebp+4], ecx
lea	eax, DWORD PTR _dstFileName$[ebp]
mov	DWORD PTR _ofn$[ebp+28], eax
mov	DWORD PTR _ofn$[ebp+32], 260		
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
mov	DWORD PTR _ofn$[ebp+12], eax
mov	DWORD PTR _ofn$[ebp+24], 1
mov	DWORD PTR _ofn$[ebp+60], OFFSET ??_C@_17MDEAILEK@?$AAl?$AAn?$AAk?$AA?$AA@
mov	DWORD PTR _ofn$[ebp+52], 2054		
mov	esi, esp
lea	eax, DWORD PTR _ofn$[ebp]
push	eax
call	DWORD PTR __imp__GetSaveFileNameW@4
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
jne	SHORT $LN6@OnMenuSave
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
jmp	$LN1@OnMenuSave
lea	eax, DWORD PTR _dstFileName$[ebp]
push	eax
call	?Dup@str@@YAPA_WPB_W@Z			
add	esp, 4
push	eax
lea	ecx, DWORD PTR _fileName$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
push	OFFSET ??_C@_19BEHMAPDG@?$AA?4?$AAl?$AAn?$AAk?$AA?$AA@
lea	eax, DWORD PTR _dstFileName$[ebp]
push	eax
call	?EndsWithI@str@@YA_NPB_W0@Z		
add	esp, 8
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN7@OnMenuSave
push	0
push	OFFSET ??_C@_19BEHMAPDG@?$AA?4?$AAl?$AAn?$AAk?$AA?$AA@
lea	eax, DWORD PTR _dstFileName$[ebp]
push	eax
call	?Join@str@@YAPA_WPB_W00@Z		
add	esp, 12					
push	eax
lea	ecx, DWORD PTR _fileName$[ebp]
call	?Set@?$ScopedMem@_W@@QAEXPA_W@Z		
sub	esp, 8
movsd	xmm0, QWORD PTR __real@0000000000000000
movsd	QWORD PTR [esp], xmm0
sub	esp, 8
movsd	xmm0, QWORD PTR __real@0000000000000000
movsd	QWORD PTR [esp], xmm0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+20]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
lea	ecx, DWORD PTR _ss$[ebp]
call	??0ScrollState@@QAE@HNN@Z		
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
je	SHORT $LN8@OnMenuSave
lea	eax, DWORD PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	ecx, eax
call	?GetScrollState@DisplayModel@@QAE?AUScrollState@@XZ 
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _ss$[ebp], ecx
mov	edx, DWORD PTR [eax+4]
mov	DWORD PTR _ss$[ebp+4], edx
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _ss$[ebp+8], ecx
mov	edx, DWORD PTR [eax+12]
mov	DWORD PTR _ss$[ebp+12], edx
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _ss$[ebp+16], ecx
mov	edx, DWORD PTR [eax+20]
mov	DWORD PTR _ss$[ebp+20], edx
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+40]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
call	?FromDisplayMode@conv@prefs@@YAPB_WW4DisplayMode@@@Z 
add	esp, 4
mov	DWORD PTR _viewMode$[ebp], eax
mov	esi, esp
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+52]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
sub	esp, 8
fstp	QWORD PTR [esp]
push	OFFSET ??_C@_19OACCBAA@?$AA?$CF?$AA?4?$AA2?$AAf?$AA?$AA@
call	?Format@str@@YAPA_WPB_WZZ		
add	esp, 12					
push	eax
lea	ecx, DWORD PTR _ZoomVirtual$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
mov	esi, esp
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+52]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
fstp	DWORD PTR tv483[ebp]
movss	xmm0, DWORD PTR __real@bf800000
ucomiss	xmm0, DWORD PTR tv483[ebp]
lahf
test	ah, 68					
jp	SHORT $LN9@OnMenuSave
push	OFFSET ??_C@_1BA@IPFCIHEF@?$AAf?$AAi?$AAt?$AAp?$AAa?$AAg?$AAe?$AA?$AA@
call	?Dup@str@@YAPA_WPB_W@Z			
add	esp, 4
push	eax
lea	ecx, DWORD PTR _ZoomVirtual$[ebp]
call	?Set@?$ScopedMem@_W@@QAEXPA_W@Z		
jmp	$LN13@OnMenuSave
mov	esi, esp
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+52]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
fstp	DWORD PTR tv496[ebp]
movss	xmm0, DWORD PTR __real@c0000000
ucomiss	xmm0, DWORD PTR tv496[ebp]
lahf
test	ah, 68					
jp	SHORT $LN11@OnMenuSave
push	OFFSET ??_C@_1BC@CBAKICNL@?$AAf?$AAi?$AAt?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?$AA@
call	?Dup@str@@YAPA_WPB_W@Z			
add	esp, 4
push	eax
lea	ecx, DWORD PTR _ZoomVirtual$[ebp]
call	?Set@?$ScopedMem@_W@@QAEXPA_W@Z		
jmp	SHORT $LN13@OnMenuSave
mov	esi, esp
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+52]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
fstp	DWORD PTR tv509[ebp]
movss	xmm0, DWORD PTR __real@c0400000
ucomiss	xmm0, DWORD PTR tv509[ebp]
lahf
test	ah, 68					
jp	SHORT $LN13@OnMenuSave
push	OFFSET ??_C@_1BG@MICHJEFM@?$AAf?$AAi?$AAt?$AAc?$AAo?$AAn?$AAt?$AAe?$AAn?$AAt?$AA?$AA@
call	?Dup@str@@YAPA_WPB_W@Z			
add	esp, 4
push	eax
lea	ecx, DWORD PTR _ZoomVirtual$[ebp]
call	?Set@?$ScopedMem@_W@@QAEXPA_W@Z		
call	?GetExePath@@YAPA_WXZ			
push	eax
lea	ecx, DWORD PTR _exePath$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
cvttsd2si eax, QWORD PTR _ss$[ebp+16]
push	eax
cvttsd2si ecx, QWORD PTR _ss$[ebp+8]
push	ecx
mov	edx, DWORD PTR _ZoomVirtual$[ebp]
push	edx
mov	eax, DWORD PTR _viewMode$[ebp]
push	eax
mov	ecx, DWORD PTR _ss$[ebp]
push	ecx
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+4]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
push	OFFSET ??_C@_1GA@HMEGNHK@?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AA?9?$AAp?$AAa?$AAg?$AAe?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?9?$AAv?$AAi?$AAe?$AAw?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AA?9?$AAz?$AAo?$AAo?$AAm?$AA?5?$AA?$CF@
call	?Format@str@@YAPA_WPB_WZZ		
add	esp, 28					
push	eax
lea	ecx, DWORD PTR _args$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
mov	esi, esp
mov	eax, DWORD PTR _ss$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
mov	eax, DWORD PTR [edx+92]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
lea	ecx, DWORD PTR _label$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+4]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
call	?GetBaseName@path@@YAPB_WPB_W@Z		
add	esp, 4
push	eax
mov	eax, DWORD PTR _label$[ebp]
push	eax
push	OFFSET ??_C@_0CD@CMFDMHBK@Bookmark?5shortcut?5to?5page?5?$CFs?5of?5@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
call	?Format@str@@YAPA_WPB_WZZ		
add	esp, 12					
push	eax
lea	ecx, DWORD PTR _desc$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
push	1
lea	ecx, DWORD PTR _desc$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
lea	ecx, DWORD PTR _args$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
lea	ecx, DWORD PTR _exePath$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
lea	ecx, DWORD PTR _fileName$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?CreateShortcut@@YA_NPB_W000H@Z		
add	esp, 20					
lea	ecx, DWORD PTR _desc$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _label$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _args$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _exePath$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _ZoomVirtual$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _fileName$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN28@OnMenuSave
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
add	esp, 1008				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
DD	10					
DD	$LN27@OnMenuSave
DD	-540					
DD	520					
DD	$LN17@OnMenuSave
DD	-552					
DD	4
DD	$LN18@OnMenuSave
DD	-648					
DD	88					
DD	$LN19@OnMenuSave
DD	-660					
DD	4
DD	$LN20@OnMenuSave
DD	-692					
DD	24					
DD	$LN21@OnMenuSave
DD	-716					
DD	4
DD	$LN22@OnMenuSave
DD	-728					
DD	4
DD	$LN23@OnMenuSave
DD	-740					
DD	4
DD	$LN24@OnMenuSave
DD	-752					
DD	4
DD	$LN25@OnMenuSave
DD	-764					
DD	4
DD	$LN26@OnMenuSave
DB	100					
DB	101					
DB	115					
DB	99					
DB	0
DB	108					
DB	97					
DB	98					
DB	101					
DB	108					
DB	0
DB	97					
DB	114					
DB	103					
DB	115					
DB	0
DB	101					
DB	120					
DB	101					
DB	80					
DB	97					
DB	116					
DB	104					
DB	0
DB	90					
DB	111					
DB	111					
DB	109					
DB	86					
DB	105					
DB	114					
DB	116					
DB	117					
DB	97					
DB	108					
DB	0
DB	115					
DB	115					
DB	0
DB	102					
DB	105					
DB	108					
DB	101					
DB	78					
DB	97					
DB	109					
DB	101					
DB	0
DB	111					
DB	102					
DB	110					
DB	0
DB	102					
DB	105					
DB	108					
DB	101					
DB	70					
DB	105					
DB	108					
DB	116					
DB	101					
DB	114					
DB	0
DB	100					
DB	115					
DB	116					
DB	70					
DB	105					
DB	108					
DB	101					
DB	78					
DB	97					
DB	109					
DB	101					
DB	0
ENDP
?OnMenuRenameFile@@YAXAAVWindowInfo@@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 1028				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-1028]
mov	ecx, 257				
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
push	2
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	eax, al
test	eax, eax
jne	SHORT $LN8@OnMenuRena
jmp	$LN15@OnMenuRena
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN9@OnMenuRena
jmp	$LN15@OnMenuRena
cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	
je	SHORT $LN10@OnMenuRena
jmp	$LN15@OnMenuRena
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+4]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
call	?Dup@str@@YAPA_WPB_W@Z			
add	esp, 4
push	eax
lea	ecx, DWORD PTR _srcFileName$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
lea	ecx, DWORD PTR _srcFileName$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?Exists@file@@YA_NPB_W@Z		
add	esp, 4
movzx	eax, al
test	eax, eax
jne	SHORT $LN11@OnMenuRena
lea	ecx, DWORD PTR _srcFileName$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
jmp	$LN15@OnMenuRena
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+8]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _defExt$[ebp], eax
push	0
push	256					
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	??0?$Str@_W@str@@QAE@IPAVAllocator@@@Z	
lea	eax, DWORD PTR _fileFilter$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	?AppendFileFilterForDoc@@YA_NPAVController@@AAV?$Str@_W@str@@@Z 
add	esp, 8
mov	BYTE PTR _ok$[ebp], al
xor	eax, eax
jne	SHORT $LN5@OnMenuRena
movzx	eax, BYTE PTR _ok$[ebp]
test	eax, eax
jne	SHORT $LN16@OnMenuRena
mov	BYTE PTR tv145[ebp], 1
jmp	SHORT $LN17@OnMenuRena
mov	BYTE PTR tv145[ebp], 0
movzx	ecx, BYTE PTR tv145[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@OnMenuRena
mov	eax, DWORD PTR _defExt$[ebp]
push	eax
push	OFFSET ??_C@_1M@MDGMJCNO@?$AA?$AB?$AA?$CK?$AA?$CF?$AAs?$AA?$AB?$AA?$AA@
lea	ecx, DWORD PTR _fileFilter$[ebp]
push	ecx
call	?AppendFmt@?$Str@_W@str@@QAAXPB_WZZ	
add	esp, 12					
push	OFFSET ??_C@_13NOLLCAOD@?$AA?$AA?$AA?$AA@
push	OFFSET ??_C@_13GGAHEHIG@?$AA?$AB?$AA?$AA@
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Get@?$Str@_W@str@@QBEPA_WXZ		
push	eax
call	?TransChars@str@@YAIPA_WPB_W1@Z		
add	esp, 12					
lea	ecx, DWORD PTR _srcFileName$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?GetBaseName@path@@YAPB_WPB_W@Z		
add	esp, 4
push	eax
push	260					
lea	eax, DWORD PTR _dstFileName$[ebp]
push	eax
call	?BufSet@str@@YAIPA_WIPB_W@Z		
add	esp, 12					
mov	eax, DWORD PTR _defExt$[ebp]
push	eax
lea	ecx, DWORD PTR _dstFileName$[ebp]
push	ecx
call	?EndsWithI@str@@YA_NPB_W0@Z		
add	esp, 8
movzx	edx, al
test	edx, edx
je	SHORT $LN12@OnMenuRena
lea	eax, DWORD PTR _dstFileName$[ebp]
push	eax
call	?Len@str@@YAIPB_W@Z			
add	esp, 4
mov	esi, eax
mov	ecx, DWORD PTR _defExt$[ebp]
push	ecx
call	?Len@str@@YAIPB_W@Z			
add	esp, 4
sub	esi, eax
shl	esi, 1
mov	DWORD PTR $T1[ebp], esi
cmp	DWORD PTR $T1[ebp], 520			
jae	SHORT $LN18@OnMenuRena
jmp	SHORT $LN19@OnMenuRena
call	___report_rangecheckfailure
xor	edx, edx
mov	eax, DWORD PTR $T1[ebp]
mov	WORD PTR _dstFileName$[ebp+eax], dx
lea	ecx, DWORD PTR _srcFileName$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?GetDir@path@@YAPA_WPB_W@Z		
add	esp, 4
push	eax
lea	ecx, DWORD PTR _initDir$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
mov	DWORD PTR _ofn$[ebp], 0
push	84					
push	0
lea	eax, DWORD PTR _ofn$[ebp+4]
push	eax
call	_memset
add	esp, 12					
mov	DWORD PTR _ofn$[ebp], 88		
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
mov	DWORD PTR _ofn$[ebp+4], ecx
lea	eax, DWORD PTR _dstFileName$[ebp]
mov	DWORD PTR _ofn$[ebp+28], eax
mov	DWORD PTR _ofn$[ebp+32], 260		
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Get@?$Str@_W@str@@QBEPA_WXZ		
mov	DWORD PTR _ofn$[ebp+12], eax
mov	DWORD PTR _ofn$[ebp+24], 1
push	OFFSET ??_C@_09JDJKEKEM@Rename?5To?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
mov	DWORD PTR _ofn$[ebp+48], eax
lea	ecx, DWORD PTR _initDir$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
mov	DWORD PTR _ofn$[ebp+44], eax
mov	eax, DWORD PTR _defExt$[ebp]
add	eax, 2
mov	DWORD PTR _ofn$[ebp+60], eax
mov	DWORD PTR _ofn$[ebp+52], 2054		
mov	esi, esp
lea	eax, DWORD PTR _ofn$[ebp]
push	eax
call	DWORD PTR __imp__GetSaveFileNameW@4
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	SHORT $LN20@OnMenuRena
mov	BYTE PTR tv198[ebp], 1
jmp	SHORT $LN21@OnMenuRena
mov	BYTE PTR tv198[ebp], 0
mov	cl, BYTE PTR tv198[ebp]
mov	BYTE PTR _ok$[ebp], cl
movzx	eax, BYTE PTR _ok$[ebp]
test	eax, eax
jne	SHORT $LN13@OnMenuRena
lea	ecx, DWORD PTR _initDir$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	??1?$Str@_W@str@@QAE@XZ
lea	ecx, DWORD PTR _srcFileName$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
jmp	$LN15@OnMenuRena
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
push	ecx
mov	edx, DWORD PTR _win$[ebp]
push	edx
call	?UpdateTabFileDisplayStateForWin@@YAXPAVWindowInfo@@PAVTabInfo@@@Z 
add	esp, 8
push	1
push	1
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?CloseDocumentInTab@@YAXPAVWindowInfo@@_N1@Z 
add	esp, 12					
mov	esi, esp
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__SetFocus@4
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _flags$[ebp], 3
mov	esi, esp
mov	eax, DWORD PTR _flags$[ebp]
push	eax
lea	ecx, DWORD PTR _dstFileName$[ebp]
push	ecx
lea	ecx, DWORD PTR _srcFileName$[ebp]
call	?Get@?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	DWORD PTR __imp__MoveFileExW@12
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _moveOk$[ebp], eax
cmp	DWORD PTR _moveOk$[ebp], 0
jne	SHORT $LN14@OnMenuRena
push	0
call	?LogLastError@@YAXK@Z			
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
push	eax
lea	ecx, DWORD PTR _srcFileName$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
lea	ecx, DWORD PTR _args$2[ebp]
call	??0LoadArgs@@QAE@PB_WPAVWindowInfo@@@Z	
mov	BYTE PTR _args$2[ebp+9], 1
lea	eax, DWORD PTR _args$2[ebp]
push	eax
call	?LoadDocument@@YAPAVWindowInfo@@AAULoadArgs@@@Z 
add	esp, 4
push	1
push	3
push	OFFSET ??_C@_0BL@NDMDCIEP@Failed?5to?5rename?5the?5file?$CB?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
mov	ecx, DWORD PTR _win$[ebp]
call	?ShowNotification@WindowInfo@@QAEXPB_WHW4NotificationGroup@@@Z 
lea	ecx, DWORD PTR _initDir$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	??1?$Str@_W@str@@QAE@XZ
lea	ecx, DWORD PTR _srcFileName$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
jmp	$LN15@OnMenuRena
lea	eax, DWORD PTR _dstFileName$[ebp]
push	eax
call	?Normalize@path@@YAPA_WPB_W@Z		
add	esp, 4
push	eax
lea	ecx, DWORD PTR _newPath$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
lea	ecx, DWORD PTR _newPath$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
lea	ecx, DWORD PTR _srcFileName$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?RenameFileInHistory@@YAXPB_W0@Z	
add	esp, 8
mov	eax, DWORD PTR _win$[ebp]
push	eax
lea	ecx, DWORD PTR _dstFileName$[ebp]
push	ecx
lea	ecx, DWORD PTR _args$[ebp]
call	??0LoadArgs@@QAE@PB_WPAVWindowInfo@@@Z	
mov	BYTE PTR _args$[ebp+9], 1
lea	eax, DWORD PTR _args$[ebp]
push	eax
call	?LoadDocument@@YAPAVWindowInfo@@AAULoadArgs@@@Z 
add	esp, 4
lea	ecx, DWORD PTR _newPath$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _initDir$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	??1?$Str@_W@str@@QAE@XZ
lea	ecx, DWORD PTR _srcFileName$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN31@OnMenuRena
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
add	esp, 1028				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	2
DD	8
DD	$LN30@OnMenuRena
DD	-12					
DD	4
DD	$LN22@OnMenuRena
DD	-84					
DD	52					
DD	$LN23@OnMenuRena
DD	-624					
DD	520					
DD	$LN24@OnMenuRena
DD	-636					
DD	4
DD	$LN25@OnMenuRena
DD	-732					
DD	88					
DD	$LN26@OnMenuRena
DD	-780					
DD	16					
DD	$LN27@OnMenuRena
DD	-792					
DD	4
DD	$LN28@OnMenuRena
DD	-816					
DD	16					
DD	$LN29@OnMenuRena
DB	97					
DB	114					
DB	103					
DB	115					
DB	0
DB	110					
DB	101					
DB	119					
DB	80					
DB	97					
DB	116					
DB	104					
DB	0
DB	97					
DB	114					
DB	103					
DB	115					
DB	0
DB	111					
DB	102					
DB	110					
DB	0
DB	105					
DB	110					
DB	105					
DB	116					
DB	68					
DB	105					
DB	114					
DB	0
DB	100					
DB	115					
DB	116					
DB	70					
DB	105					
DB	108					
DB	101					
DB	78					
DB	97					
DB	109					
DB	101					
DB	0
DB	102					
DB	105					
DB	108					
DB	101					
DB	70					
DB	105					
DB	108					
DB	116					
DB	101					
DB	114					
DB	0
DB	115					
DB	114					
DB	99					
DB	70					
DB	105					
DB	108					
DB	101					
DB	78					
DB	97					
DB	109					
DB	101					
DB	0
ENDP
?Append@?$Vec@UPageAnnotation@@@@QAEXABUPageAnnotation@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _el$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
call	?InsertAt@?$Vec@UPageAnnotation@@@@QAEXIABUPageAnnotation@@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?InsertAt@?$Vec@UPageAnnotation@@@@QAEXIABUPageAnnotation@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	esi, DWORD PTR _el$[ebp]
push	0
push	1
mov	eax, DWORD PTR _idx$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?MakeSpaceAt@?$Vec@UPageAnnotation@@@@IAEPAUPageAnnotation@@II_N@Z 
mov	ecx, 48					
imul	edx, ecx, 0
add	eax, edx
mov	ecx, 12					
mov	edi, eax
rep movsd
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?Reset@?$Vec@UPageAnnotation@@@@QAEXXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], 0
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax+4], 15			
mov	ecx, DWORD PTR _this$[ebp]
call	?FreeEls@?$Vec@UPageAnnotation@@@@IAEXXZ 
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx+12], eax
push	768					
push	0
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
push	eax
call	_memset
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0?$Vec@UPageAnnotation@@@@QAE@IPAVAllocator@@@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _capHint$[ebp]
mov	DWORD PTR [eax+8], ecx
push	OFFSET ??0PageAnnotation@@QAE@XZ	
push	16					
push	48					
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
push	eax
call	??_H@YGXPAXIIP6EPAX0@Z@Z
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _allocator$[ebp]
mov	DWORD PTR [eax+784], ecx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx+12], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?Reset@?$Vec@UPageAnnotation@@@@QAEXXZ	
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?FreeEls@?$Vec@UPageAnnotation@@@@IAEXXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
cmp	DWORD PTR [ecx+12], eax
je	SHORT $LN1@FreeEls
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+784]
push	eax
call	?Free@Allocator@@SAXPAV1@PAX@Z		
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?MakeSpaceAt@?$Vec@UPageAnnotation@@@@IAEPAUPageAnnotation@@II_N@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 252				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-252]
mov	ecx, 63					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
lea	eax, DWORD PTR _idx$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
push	ecx
call	??$max@I@std@@YAABIABI0@Z		
add	esp, 8
mov	edx, DWORD PTR [eax]
add	edx, DWORD PTR _count$[ebp]
mov	DWORD PTR _newLen$[ebp], edx
movzx	eax, BYTE PTR _allowFailure$[ebp]
test	eax, eax
jne	SHORT $LN2@MakeSpaceA
mov	eax, DWORD PTR _newLen$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapCrash@?$Vec@UPageAnnotation@@@@IAEXI@Z 
jmp	SHORT $LN3@MakeSpaceA
mov	eax, DWORD PTR _newLen$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapTry@?$Vec@UPageAnnotation@@@@IAE_NI@Z 
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN3@MakeSpaceA
xor	eax, eax
jmp	SHORT $LN1@MakeSpaceA
imul	eax, DWORD PTR _idx$[ebp], 48
mov	ecx, DWORD PTR _this$[ebp]
add	eax, DWORD PTR [ecx+12]
mov	DWORD PTR _res$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
cmp	ecx, DWORD PTR _idx$[ebp]
jbe	SHORT $LN5@MakeSpaceA
imul	eax, DWORD PTR _idx$[ebp], 48
mov	ecx, DWORD PTR _this$[ebp]
add	eax, DWORD PTR [ecx+12]
mov	DWORD PTR _src$2[ebp], eax
imul	eax, DWORD PTR _idx$[ebp], 48
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+12]
add	edx, eax
imul	eax, DWORD PTR _count$[ebp], 48
add	edx, eax
mov	DWORD PTR _dst$1[ebp], edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, DWORD PTR _idx$[ebp]
imul	edx, ecx, 48
push	edx
mov	eax, DWORD PTR _src$2[ebp]
push	eax
mov	ecx, DWORD PTR _dst$1[ebp]
push	ecx
call	_memmove
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newLen$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _res$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 252				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
?EnsureCapCrash@?$Vec@UPageAnnotation@@@@IAEXI@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _needed$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapTry@?$Vec@UPageAnnotation@@@@IAE_NI@Z 
mov	BYTE PTR _ok$[ebp], al
xor	eax, eax
jne	SHORT $LN5@EnsureCapC
movzx	eax, BYTE PTR _ok$[ebp]
test	eax, eax
jne	SHORT $LN2@EnsureCapC
call	?CrashMe@@YAXXZ				
xor	eax, eax
jne	SHORT $LN5@EnsureCapC
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?EnsureCapTry@?$Vec@UPageAnnotation@@@@IAE_NI@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 264				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-264]
mov	ecx, 66					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
cmp	ecx, DWORD PTR _needed$[ebp]
jb	SHORT $LN2@EnsureCapT
mov	al, 1
jmp	$LN1@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
shl	ecx, 1
mov	DWORD PTR _newCap$[ebp], ecx
mov	eax, DWORD PTR _needed$[ebp]
cmp	eax, DWORD PTR _newCap$[ebp]
jbe	SHORT $LN3@EnsureCapT
mov	eax, DWORD PTR _needed$[ebp]
mov	DWORD PTR _newCap$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newCap$[ebp]
cmp	ecx, DWORD PTR [eax+8]
jae	SHORT $LN4@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _newCap$[ebp], ecx
mov	eax, DWORD PTR _newCap$[ebp]
add	eax, 1
mov	DWORD PTR _newElCount$[ebp], eax
cmp	DWORD PTR _newElCount$[ebp], 89478485	
jb	SHORT $LN5@EnsureCapT
xor	al, al
jmp	$LN1@EnsureCapT
cmp	DWORD PTR _newElCount$[ebp], 2147483647	
jbe	SHORT $LN6@EnsureCapT
xor	al, al
jmp	$LN1@EnsureCapT
imul	eax, DWORD PTR _newElCount$[ebp], 48
mov	DWORD PTR _allocSize$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
imul	ecx, DWORD PTR [eax], 48
mov	edx, DWORD PTR _allocSize$[ebp]
sub	edx, ecx
mov	DWORD PTR _newPadding$[ebp], edx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
cmp	eax, DWORD PTR [ecx+12]
jne	SHORT $LN7@EnsureCapT
mov	eax, DWORD PTR _newPadding$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
imul	edx, DWORD PTR [ecx], 48
push	edx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+784]
push	edx
call	?Dup@Allocator@@SAPAXPAV1@PBXII@Z	
add	esp, 16					
mov	DWORD PTR _newEls$[ebp], eax
jmp	SHORT $LN8@EnsureCapT
mov	eax, DWORD PTR _allocSize$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+784]
push	ecx
call	?Realloc@Allocator@@SAPAXPAV1@PAXI@Z	
add	esp, 12					
mov	DWORD PTR _newEls$[ebp], eax
cmp	DWORD PTR _newEls$[ebp], 0
jne	SHORT $LN9@EnsureCapT
xor	al, al
jmp	SHORT $LN1@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newEls$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	eax, DWORD PTR _newPadding$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _this$[ebp]
imul	edx, DWORD PTR [ecx], 48
mov	eax, DWORD PTR _this$[ebp]
add	edx, DWORD PTR [eax+12]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newCap$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	al, 1
pop	edi
pop	esi
pop	ebx
add	esp, 264				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?OnMenuSaveAs@@YAXAAVWindowInfo@@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 1196				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-1196]
mov	ecx, 299				
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
push	2
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	eax, al
test	eax, eax
jne	SHORT $LN26@OnMenuSave
jmp	$LN67@OnMenuSave
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN27@OnMenuSave
jmp	$LN67@OnMenuSave
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+4]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _srcFileName$[ebp], eax
lea	ecx, DWORD PTR _urlName$[ebp]
call	??0?$ScopedMem@_W@@QAE@XZ		
cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	
je	SHORT $LN5@OnMenuSave
mov	eax, DWORD PTR ?gPluginURL@@3PB_WB	
push	eax
call	?GetFileName@url@@YAPA_WPB_W@Z		
add	esp, 4
push	eax
lea	ecx, DWORD PTR _urlName$[ebp]
call	?Set@?$ScopedMem@_W@@QAEXPA_W@Z		
lea	ecx, DWORD PTR _urlName$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
test	eax, eax
je	SHORT $LN68@OnMenuSave
lea	ecx, DWORD PTR _urlName$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
mov	DWORD PTR tv93[ebp], eax
jmp	SHORT $LN69@OnMenuSave
mov	DWORD PTR tv93[ebp], OFFSET ??_C@_1BC@OIENENHB@?$AAf?$AAi?$AAl?$AAe?$AAn?$AAa?$AAm?$AAe?$AA?$AA@
mov	eax, DWORD PTR tv93[ebp]
mov	DWORD PTR _srcFileName$[ebp], eax
xor	eax, eax
jne	SHORT $LN5@OnMenuSave
cmp	DWORD PTR _srcFileName$[ebp], 0
jne	SHORT $LN70@OnMenuSave
mov	BYTE PTR tv128[ebp], 1
jmp	SHORT $LN71@OnMenuSave
mov	BYTE PTR tv128[ebp], 0
movzx	eax, BYTE PTR tv128[ebp]
push	eax
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@OnMenuSave
cmp	DWORD PTR _srcFileName$[ebp], 0
jne	SHORT $LN29@OnMenuSave
lea	ecx, DWORD PTR _urlName$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
jmp	$LN67@OnMenuSave
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
je	SHORT $LN72@OnMenuSave
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	ecx, eax
call	?GetEngine@DisplayModel@@QBEPAVBaseEngine@@XZ 
mov	DWORD PTR tv139[ebp], eax
jmp	SHORT $LN73@OnMenuSave
mov	DWORD PTR tv139[ebp], 0
mov	eax, DWORD PTR tv139[ebp]
mov	DWORD PTR _engine$[ebp], eax
cmp	DWORD PTR _engine$[ebp], 0
je	SHORT $LN74@OnMenuSave
mov	eax, DWORD PTR _engine$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR _engine$[ebp]
mov	eax, DWORD PTR [edx+60]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN74@OnMenuSave
mov	edx, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [edx+88]
call	?GetEngineType@TabInfo@@QBE?AW4EngineType@@XZ 
cmp	eax, 14					
je	SHORT $LN74@OnMenuSave
mov	DWORD PTR tv151[ebp], 1
jmp	SHORT $LN75@OnMenuSave
mov	DWORD PTR tv151[ebp], 0
mov	al, BYTE PTR tv151[ebp]
mov	BYTE PTR _canConvertToTXT$[ebp], al
cmp	DWORD PTR _engine$[ebp], 0
je	SHORT $LN76@OnMenuSave
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
call	?GetEngineType@TabInfo@@QBE?AW4EngineType@@XZ 
cmp	eax, 1
je	SHORT $LN76@OnMenuSave
mov	DWORD PTR tv158[ebp], 1
jmp	SHORT $LN77@OnMenuSave
mov	DWORD PTR tv158[ebp], 0
mov	cl, BYTE PTR tv158[ebp]
mov	BYTE PTR _canConvertToPDF$[ebp], cl
cmp	DWORD PTR _engine$[ebp], 0
je	SHORT $LN30@OnMenuSave
mov	eax, DWORD PTR _engine$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR _engine$[ebp]
mov	eax, DWORD PTR [edx+80]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN30@OnMenuSave
mov	BYTE PTR _canConvertToTXT$[ebp], 0
cmp	DWORD PTR _engine$[ebp], 0
je	SHORT $LN11@OnMenuSave
mov	eax, DWORD PTR _engine$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR _engine$[ebp]
mov	eax, DWORD PTR [edx+76]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN11@OnMenuSave
mov	BYTE PTR _canConvertToPDF$[ebp], 0
xor	eax, eax
jne	SHORT $LN11@OnMenuSave
movzx	eax, BYTE PTR _canConvertToTXT$[ebp]
test	eax, eax
je	SHORT $LN79@OnMenuSave
cmp	DWORD PTR _engine$[ebp], 0
je	SHORT $LN78@OnMenuSave
mov	ecx, DWORD PTR _engine$[ebp]
mov	edx, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR _engine$[ebp]
mov	eax, DWORD PTR [edx+60]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN78@OnMenuSave
mov	edx, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [edx+88]
call	?GetEngineType@TabInfo@@QBE?AW4EngineType@@XZ 
cmp	eax, 14					
jne	SHORT $LN79@OnMenuSave
mov	BYTE PTR tv188[ebp], 1
jmp	SHORT $LN80@OnMenuSave
mov	BYTE PTR tv188[ebp], 0
movzx	eax, BYTE PTR tv188[ebp]
push	eax
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN11@OnMenuSave
xor	eax, eax
jne	SHORT $LN17@OnMenuSave
movzx	eax, BYTE PTR _canConvertToPDF$[ebp]
test	eax, eax
je	SHORT $LN82@OnMenuSave
cmp	DWORD PTR _engine$[ebp], 0
je	SHORT $LN81@OnMenuSave
mov	ecx, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [ecx+88]
call	?GetEngineType@TabInfo@@QBE?AW4EngineType@@XZ 
cmp	eax, 1
jne	SHORT $LN82@OnMenuSave
mov	BYTE PTR tv199[ebp], 1
jmp	SHORT $LN83@OnMenuSave
mov	BYTE PTR tv199[ebp], 0
movzx	edx, BYTE PTR tv199[ebp]
push	edx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN17@OnMenuSave
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+8]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _defExt$[ebp], eax
push	0
push	256					
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	??0?$Str@_W@str@@QAE@IPAVAllocator@@@Z	
lea	eax, DWORD PTR _fileFilter$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	?AppendFileFilterForDoc@@YA_NPAVController@@AAV?$Str@_W@str@@@Z 
add	esp, 8
movzx	eax, al
test	eax, eax
je	SHORT $LN32@OnMenuSave
mov	eax, DWORD PTR _defExt$[ebp]
push	eax
push	OFFSET ??_C@_1M@MDGMJCNO@?$AA?$AB?$AA?$CK?$AA?$CF?$AAs?$AA?$AB?$AA?$AA@
lea	ecx, DWORD PTR _fileFilter$[ebp]
push	ecx
call	?AppendFmt@?$Str@_W@str@@QAAXPB_WZZ	
add	esp, 12					
movzx	eax, BYTE PTR _canConvertToTXT$[ebp]
test	eax, eax
je	SHORT $LN33@OnMenuSave
push	-1
push	OFFSET ??_C@_0P@LHNJDKCD@Text?5documents?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
push	-1
push	OFFSET ??_C@_1BA@PLGHAIOL@?$AA?$AB?$AA?$CK?$AA?4?$AAt?$AAx?$AAt?$AA?$AB?$AA?$AA@
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
movzx	eax, BYTE PTR _canConvertToPDF$[ebp]
test	eax, eax
je	SHORT $LN34@OnMenuSave
push	-1
push	OFFSET ??_C@_0O@PPPABHME@PDF?5documents?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
push	-1
push	OFFSET ??_C@_1BA@JHIGCPGF@?$AA?$AB?$AA?$CK?$AA?4?$AAp?$AAd?$AAf?$AA?$AB?$AA?$AA@
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
push	-1
push	OFFSET ??_C@_09OONCJHPB@All?5files?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
push	-1
push	OFFSET ??_C@_1M@LFIHNHLH@?$AA?$AB?$AA?$CK?$AA?4?$AA?$CK?$AA?$AB?$AA?$AA@
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
push	OFFSET ??_C@_13NOLLCAOD@?$AA?$AA?$AA?$AA@
push	OFFSET ??_C@_13GGAHEHIG@?$AA?$AB?$AA?$AA@
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Get@?$Str@_W@str@@QBEPA_WXZ		
push	eax
call	?TransChars@str@@YAIPA_WPB_W1@Z		
add	esp, 12					
mov	eax, DWORD PTR _srcFileName$[ebp]
push	eax
call	?GetBaseName@path@@YAPB_WPB_W@Z		
add	esp, 4
push	eax
push	260					
lea	ecx, DWORD PTR _dstFileName$[ebp]
push	ecx
call	?BufSet@str@@YAIPA_WIPB_W@Z		
add	esp, 12					
push	58					
lea	eax, DWORD PTR _dstFileName$[ebp]
push	eax
call	?FindChar@str@@YAPA_WPA_W_W@Z		
add	esp, 8
test	eax, eax
je	$LN35@OnMenuSave
push	58					
lea	eax, DWORD PTR _dstFileName$[ebp]
push	eax
call	?FindChar@str@@YAPA_WPA_W_W@Z		
add	esp, 8
mov	DWORD PTR _colon$11[ebp], eax
push	OFFSET ??_C@_13ENNFDPBH@?$AA_?$AA?$AA@
push	OFFSET ??_C@_13EBCNDICG@?$AA?3?$AA?$AA@
mov	eax, DWORD PTR _colon$11[ebp]
push	eax
call	?TransChars@str@@YAIPA_WPB_W1@Z		
add	esp, 12					
mov	eax, DWORD PTR _colon$11[ebp]
mov	DWORD PTR _ext$10[ebp], eax
jmp	SHORT $LN22@OnMenuSave
mov	eax, DWORD PTR _ext$10[ebp]
sub	eax, 2
mov	DWORD PTR _ext$10[ebp], eax
lea	eax, DWORD PTR _dstFileName$[ebp]
cmp	DWORD PTR _ext$10[ebp], eax
jbe	SHORT $LN21@OnMenuSave
mov	eax, DWORD PTR _ext$10[ebp]
movzx	ecx, WORD PTR [eax]
cmp	ecx, 46					
je	SHORT $LN21@OnMenuSave
jmp	SHORT $LN20@OnMenuSave
lea	eax, DWORD PTR _dstFileName$[ebp]
cmp	DWORD PTR _ext$10[ebp], eax
jne	SHORT $LN37@OnMenuSave
mov	eax, DWORD PTR _colon$11[ebp]
mov	DWORD PTR _ext$10[ebp], eax
mov	eax, DWORD PTR _colon$11[ebp]
push	eax
call	?Len@str@@YAIPB_W@Z			
add	esp, 4
lea	ecx, DWORD PTR [eax+eax+2]
push	ecx
mov	edx, DWORD PTR _colon$11[ebp]
push	edx
mov	eax, DWORD PTR _ext$10[ebp]
push	eax
call	_memmove
add	esp, 12					
jmp	SHORT $LN36@OnMenuSave
mov	eax, DWORD PTR _defExt$[ebp]
push	eax
lea	ecx, DWORD PTR _dstFileName$[ebp]
push	ecx
call	?EndsWithI@str@@YA_NPB_W0@Z		
add	esp, 8
movzx	edx, al
test	edx, edx
je	SHORT $LN36@OnMenuSave
lea	eax, DWORD PTR _dstFileName$[ebp]
push	eax
call	?Len@str@@YAIPB_W@Z			
add	esp, 4
mov	esi, eax
mov	ecx, DWORD PTR _defExt$[ebp]
push	ecx
call	?Len@str@@YAIPB_W@Z			
add	esp, 4
sub	esi, eax
shl	esi, 1
mov	DWORD PTR $T1[ebp], esi
cmp	DWORD PTR $T1[ebp], 520			
jae	SHORT $LN84@OnMenuSave
jmp	SHORT $LN85@OnMenuSave
call	___report_rangecheckfailure
xor	edx, edx
mov	eax, DWORD PTR $T1[ebp]
mov	WORD PTR _dstFileName$[ebp+eax], dx
mov	DWORD PTR _ofn$[ebp], 0
push	84					
push	0
lea	eax, DWORD PTR _ofn$[ebp+4]
push	eax
call	_memset
add	esp, 12					
mov	DWORD PTR _ofn$[ebp], 88		
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
mov	DWORD PTR _ofn$[ebp+4], ecx
lea	eax, DWORD PTR _dstFileName$[ebp]
mov	DWORD PTR _ofn$[ebp+28], eax
mov	DWORD PTR _ofn$[ebp+32], 260		
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	?Get@?$Str@_W@str@@QBEPA_WXZ		
mov	DWORD PTR _ofn$[ebp+12], eax
mov	DWORD PTR _ofn$[ebp+24], 1
mov	eax, DWORD PTR _defExt$[ebp]
add	eax, 2
mov	DWORD PTR _ofn$[ebp+60], eax
mov	DWORD PTR _ofn$[ebp+52], 2054		
mov	esi, esp
lea	eax, DWORD PTR _ofn$[ebp]
push	eax
call	DWORD PTR __imp__GetSaveFileNameW@4
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	SHORT $LN86@OnMenuSave
mov	BYTE PTR tv307[ebp], 1
jmp	SHORT $LN87@OnMenuSave
mov	BYTE PTR tv307[ebp], 0
mov	cl, BYTE PTR tv307[ebp]
mov	BYTE PTR _ok$[ebp], cl
movzx	eax, BYTE PTR _ok$[ebp]
test	eax, eax
jne	SHORT $LN39@OnMenuSave
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	??1?$Str@_W@str@@QAE@XZ
lea	ecx, DWORD PTR _urlName$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
jmp	$LN67@OnMenuSave
lea	eax, DWORD PTR _dstFileName$[ebp]
mov	DWORD PTR _realDstFileName$[ebp], eax
movzx	eax, BYTE PTR _canConvertToTXT$[ebp]
test	eax, eax
je	SHORT $LN88@OnMenuSave
push	OFFSET ??_C@_19GGNHIDOH@?$AA?4?$AAt?$AAx?$AAt?$AA?$AA@
lea	ecx, DWORD PTR _dstFileName$[ebp]
push	ecx
call	?EndsWithI@str@@YA_NPB_W0@Z		
add	esp, 8
movzx	edx, al
test	edx, edx
je	SHORT $LN88@OnMenuSave
mov	DWORD PTR tv317[ebp], 1
jmp	SHORT $LN89@OnMenuSave
mov	DWORD PTR tv317[ebp], 0
mov	al, BYTE PTR tv317[ebp]
mov	BYTE PTR _convertToTXT$[ebp], al
movzx	eax, BYTE PTR _canConvertToPDF$[ebp]
test	eax, eax
je	SHORT $LN90@OnMenuSave
push	OFFSET ??_C@_19GMJJNAOJ@?$AA?4?$AAp?$AAd?$AAf?$AA?$AA@
lea	ecx, DWORD PTR _dstFileName$[ebp]
push	ecx
call	?EndsWithI@str@@YA_NPB_W0@Z		
add	esp, 8
movzx	edx, al
test	edx, edx
je	SHORT $LN90@OnMenuSave
mov	DWORD PTR tv358[ebp], 1
jmp	SHORT $LN91@OnMenuSave
mov	DWORD PTR tv358[ebp], 0
mov	al, BYTE PTR tv358[ebp]
mov	BYTE PTR _convertToPDF$[ebp], al
mov	eax, DWORD PTR _defExt$[ebp]
push	eax
lea	ecx, DWORD PTR _dstFileName$[ebp]
push	ecx
call	?EndsWithI@str@@YA_NPB_W0@Z		
add	esp, 8
movzx	edx, al
test	edx, edx
jne	$LN40@OnMenuSave
movzx	eax, BYTE PTR _convertToTXT$[ebp]
test	eax, eax
jne	$LN40@OnMenuSave
movzx	eax, BYTE PTR _convertToPDF$[ebp]
test	eax, eax
jne	$LN40@OnMenuSave
movzx	eax, BYTE PTR _canConvertToTXT$[ebp]
test	eax, eax
je	SHORT $LN41@OnMenuSave
cmp	DWORD PTR _ofn$[ebp+24], 2
jne	SHORT $LN41@OnMenuSave
mov	DWORD PTR _defExt$[ebp], OFFSET ??_C@_19GGNHIDOH@?$AA?4?$AAt?$AAx?$AAt?$AA?$AA@
mov	BYTE PTR _convertToTXT$[ebp], 1
jmp	SHORT $LN42@OnMenuSave
movzx	eax, BYTE PTR _canConvertToPDF$[ebp]
test	eax, eax
je	SHORT $LN42@OnMenuSave
movzx	eax, BYTE PTR _canConvertToTXT$[ebp]
test	eax, eax
je	SHORT $LN92@OnMenuSave
mov	DWORD PTR tv376[ebp], 3
jmp	SHORT $LN93@OnMenuSave
mov	DWORD PTR tv376[ebp], 2
mov	ecx, DWORD PTR tv376[ebp]
cmp	ecx, DWORD PTR _ofn$[ebp+24]
jne	SHORT $LN42@OnMenuSave
mov	DWORD PTR _defExt$[ebp], OFFSET ??_C@_19GMJJNAOJ@?$AA?4?$AAp?$AAd?$AAf?$AA?$AA@
mov	BYTE PTR _convertToPDF$[ebp], 1
mov	eax, DWORD PTR _defExt$[ebp]
push	eax
lea	ecx, DWORD PTR _dstFileName$[ebp]
push	ecx
push	OFFSET ??_C@_19LJDFFCJJ@?$AA?$CF?$AAs?$AA?$CF?$AAs?$AA?$AA@
call	?Format@str@@YAPA_WPB_WZZ		
add	esp, 12					
mov	DWORD PTR _realDstFileName$[ebp], eax
lea	ecx, DWORD PTR _errorMsg$[ebp]
call	??0?$ScopedMem@_W@@QAE@XZ		
movzx	eax, BYTE PTR _convertToTXT$[ebp]
test	eax, eax
je	$LN44@OnMenuSave
push	0
push	1024					
lea	ecx, DWORD PTR _text$9[ebp]
call	??0?$Str@_W@str@@QAE@IPAVAllocator@@@Z	
mov	DWORD PTR _pageNo$8[ebp], 1
jmp	SHORT $LN25@OnMenuSave
mov	eax, DWORD PTR _pageNo$8[ebp]
add	eax, 1
mov	DWORD PTR _pageNo$8[ebp], eax
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+12]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
cmp	DWORD PTR _pageNo$8[ebp], eax
jg	SHORT $LN24@OnMenuSave
mov	esi, esp
push	2
push	0
push	OFFSET ??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@
mov	eax, DWORD PTR _pageNo$8[ebp]
push	eax
mov	ecx, DWORD PTR _engine$[ebp]
mov	edx, DWORD PTR [ecx]
mov	ecx, DWORD PTR _engine$[ebp]
mov	eax, DWORD PTR [edx+48]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _tmp$7[ebp], eax
mov	eax, DWORD PTR _tmp$7[ebp]
push	eax
lea	ecx, DWORD PTR _text$9[ebp]
call	?AppendAndFree@?$Str@_W@str@@QAEXPA_W@Z	
jmp	SHORT $LN23@OnMenuSave
lea	ecx, DWORD PTR _text$9[ebp]
call	?LendData@?$Vec@_W@@QBEPA_WXZ		
push	eax
call	?ToUtf8@conv@str@@YAPADPB_W@Z		
add	esp, 4
push	eax
lea	ecx, DWORD PTR _textUTF8$6[ebp]
call	??0?$ScopedMem@D@@QAE@PAD@Z		
push	0
lea	ecx, DWORD PTR _textUTF8$6[ebp]
call	??B?$ScopedMem@D@@QBEPADXZ		
push	eax
push	OFFSET ??_C@_03PKPBNCAL@?o?$LL?$LP?$AA@
call	?Join@str@@YAPADPBD00@Z			
add	esp, 12					
push	eax
lea	ecx, DWORD PTR _textUTF8BOM$5[ebp]
call	??0?$ScopedMem@D@@QAE@PAD@Z		
lea	ecx, DWORD PTR _textUTF8BOM$5[ebp]
call	??B?$ScopedMem@D@@QBEPADXZ		
push	eax
call	?Len@str@@YAIPBD@Z			
add	esp, 4
push	eax
lea	ecx, DWORD PTR _textUTF8BOM$5[ebp]
call	??B?$ScopedMem@D@@QBEPADXZ		
push	eax
mov	eax, DWORD PTR _realDstFileName$[ebp]
push	eax
call	?WriteAll@file@@YA_NPB_WPBXI@Z		
add	esp, 12					
mov	BYTE PTR _ok$[ebp], al
lea	ecx, DWORD PTR _textUTF8BOM$5[ebp]
call	??1?$ScopedMem@D@@QAE@XZ		
lea	ecx, DWORD PTR _textUTF8$6[ebp]
call	??1?$ScopedMem@D@@QAE@XZ		
lea	ecx, DWORD PTR _text$9[ebp]
call	??1?$Str@_W@str@@QAE@XZ
jmp	$LN45@OnMenuSave
movzx	eax, BYTE PTR _convertToPDF$[ebp]
test	eax, eax
je	$LN46@OnMenuSave
push	OFFSET ??_C@_1CK@CJCHPCBD@?$AAS?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAP?$AAD?$AAF?$AA?5?$AA3?$AA?4?$AA1?$AA?5?$AA?$CI?$AAd?$AAb?$AAg?$AA?$CJ?$AA?$AA@
call	?SetProducerName@PdfCreator@@SAXPB_W@Z	
add	esp, 4
mov	esi, esp
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+152]
push	ecx
mov	edx, DWORD PTR _realDstFileName$[ebp]
push	edx
mov	eax, DWORD PTR _engine$[ebp]
mov	edx, DWORD PTR [eax]
mov	ecx, DWORD PTR _engine$[ebp]
mov	eax, DWORD PTR [edx+44]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
mov	BYTE PTR _ok$[ebp], al
movzx	eax, BYTE PTR _ok$[ebp]
test	eax, eax
jne	SHORT $LN48@OnMenuSave
push	150					
mov	eax, DWORD PTR _engine$[ebp]
push	eax
mov	ecx, DWORD PTR _realDstFileName$[ebp]
push	ecx
call	?RenderToFile@PdfCreator@@SA_NPB_WPAVBaseEngine@@H@Z 
add	esp, 12					
mov	BYTE PTR _ok$[ebp], al
jmp	SHORT $LN49@OnMenuSave
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+152]
test	ecx, ecx
jne	SHORT $LN49@OnMenuSave
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	eax, DWORD PTR [eax+12]
push	eax
mov	ecx, DWORD PTR _realDstFileName$[ebp]
push	ecx
call	?SaveFileModifictions@@YA_NPB_WPAV?$Vec@UPageAnnotation@@@@@Z 
add	esp, 8
jmp	$LN45@OnMenuSave
mov	eax, DWORD PTR _srcFileName$[ebp]
push	eax
call	?Exists@file@@YA_NPB_W@Z		
add	esp, 4
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN51@OnMenuSave
cmp	DWORD PTR _engine$[ebp], 0
je	SHORT $LN51@OnMenuSave
mov	esi, esp
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+152]
push	ecx
mov	edx, DWORD PTR _realDstFileName$[ebp]
push	edx
mov	eax, DWORD PTR _engine$[ebp]
mov	edx, DWORD PTR [eax]
mov	ecx, DWORD PTR _engine$[ebp]
mov	eax, DWORD PTR [edx+40]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
mov	BYTE PTR _ok$[ebp], al
jmp	$LN45@OnMenuSave
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+152]
test	ecx, ecx
je	SHORT $LN53@OnMenuSave
cmp	DWORD PTR _engine$[ebp], 0
je	SHORT $LN53@OnMenuSave
mov	esi, esp
push	1
mov	eax, DWORD PTR _engine$[ebp]
mov	edx, DWORD PTR [eax]
mov	ecx, DWORD PTR _engine$[ebp]
mov	eax, DWORD PTR [edx+68]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN53@OnMenuSave
mov	esi, esp
push	1
mov	eax, DWORD PTR _realDstFileName$[ebp]
push	eax
mov	ecx, DWORD PTR _engine$[ebp]
mov	edx, DWORD PTR [ecx]
mov	ecx, DWORD PTR _engine$[ebp]
mov	eax, DWORD PTR [edx+40]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
mov	BYTE PTR _ok$[ebp], al
jmp	$LN45@OnMenuSave
mov	eax, DWORD PTR _realDstFileName$[ebp]
push	eax
mov	ecx, DWORD PTR _srcFileName$[ebp]
push	ecx
call	?IsSame@path@@YA_NPB_W0@Z		
add	esp, 8
movzx	edx, al
test	edx, edx
jne	$LN45@OnMenuSave
mov	esi, esp
push	0
mov	eax, DWORD PTR _realDstFileName$[ebp]
push	eax
mov	ecx, DWORD PTR _srcFileName$[ebp]
push	ecx
call	DWORD PTR __imp__CopyFileW@12
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	SHORT $LN94@OnMenuSave
mov	BYTE PTR tv511[ebp], 1
jmp	SHORT $LN95@OnMenuSave
mov	BYTE PTR tv511[ebp], 0
mov	dl, BYTE PTR tv511[ebp]
mov	BYTE PTR _ok$[ebp], dl
movzx	eax, BYTE PTR _ok$[ebp]
test	eax, eax
je	SHORT $LN56@OnMenuSave
mov	DWORD PTR _attributesToDrop$3[ebp], 7
mov	esi, esp
mov	eax, DWORD PTR _realDstFileName$[ebp]
push	eax
call	DWORD PTR __imp__GetFileAttributesW@4
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _attributes$2[ebp], eax
cmp	DWORD PTR _attributes$2[ebp], -1
je	SHORT $LN58@OnMenuSave
mov	eax, DWORD PTR _attributes$2[ebp]
and	eax, 7
je	SHORT $LN58@OnMenuSave
mov	eax, DWORD PTR _attributes$2[ebp]
and	eax, -8					
mov	esi, esp
push	eax
mov	ecx, DWORD PTR _realDstFileName$[ebp]
push	ecx
call	DWORD PTR __imp__SetFileAttributesW@8
cmp	esi, esp
call	__RTC_CheckEsp
jmp	SHORT $LN45@OnMenuSave
mov	esi, esp
push	0
push	0
lea	eax, DWORD PTR _msgBuf$4[ebp]
push	eax
push	0
mov	edi, esp
call	DWORD PTR __imp__GetLastError@0
cmp	edi, esp
call	__RTC_CheckEsp
push	eax
push	0
push	4864					
call	DWORD PTR __imp__FormatMessageW@28
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	SHORT $LN45@OnMenuSave
mov	eax, DWORD PTR _msgBuf$4[ebp]
push	eax
push	OFFSET ??_C@_0BG@ELLOLKII@Failed?5to?5save?5a?5file?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
push	OFFSET ??_C@_1O@JMFONEHP@?$AA?$CF?$AAs?$AA?6?$AA?6?$AA?$CF?$AAs?$AA?$AA@
call	?Format@str@@YAPA_WPB_WZZ		
add	esp, 12					
push	eax
lea	ecx, DWORD PTR _errorMsg$[ebp]
call	?Set@?$ScopedMem@_W@@QAEXPA_W@Z		
mov	esi, esp
mov	eax, DWORD PTR _msgBuf$4[ebp]
push	eax
call	DWORD PTR __imp__LocalFree@4
cmp	esi, esp
call	__RTC_CheckEsp
movzx	eax, BYTE PTR _ok$[ebp]
test	eax, eax
je	$LN60@OnMenuSave
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
je	$LN60@OnMenuSave
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
cmp	DWORD PTR [eax+12], 0
je	$LN60@OnMenuSave
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
movzx	eax, BYTE PTR [eax+16]
test	eax, eax
je	$LN60@OnMenuSave
movzx	eax, BYTE PTR _convertToTXT$[ebp]
test	eax, eax
jne	$LN60@OnMenuSave
movzx	eax, BYTE PTR _convertToPDF$[ebp]
test	eax, eax
jne	$LN60@OnMenuSave
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+152]
test	ecx, ecx
je	SHORT $LN62@OnMenuSave
cmp	DWORD PTR _engine$[ebp], 0
je	SHORT $LN62@OnMenuSave
mov	esi, esp
push	1
mov	eax, DWORD PTR _engine$[ebp]
mov	edx, DWORD PTR [eax]
mov	ecx, DWORD PTR _engine$[ebp]
mov	eax, DWORD PTR [edx+68]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN61@OnMenuSave
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	eax, DWORD PTR [eax+12]
push	eax
mov	ecx, DWORD PTR _realDstFileName$[ebp]
push	ecx
call	?SaveFileModifictions@@YA_NPB_WPAV?$Vec@UPageAnnotation@@@@@Z 
add	esp, 8
mov	BYTE PTR _ok$[ebp], al
movzx	eax, BYTE PTR _ok$[ebp]
test	eax, eax
je	SHORT $LN60@OnMenuSave
mov	eax, DWORD PTR _realDstFileName$[ebp]
push	eax
mov	ecx, DWORD PTR _srcFileName$[ebp]
push	ecx
call	?IsSame@path@@YA_NPB_W0@Z		
add	esp, 8
movzx	edx, al
test	edx, edx
je	SHORT $LN60@OnMenuSave
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	BYTE PTR [eax+16], 0
movzx	eax, BYTE PTR _ok$[ebp]
test	eax, eax
jne	SHORT $LN64@OnMenuSave
lea	ecx, DWORD PTR _errorMsg$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
test	eax, eax
je	SHORT $LN96@OnMenuSave
lea	ecx, DWORD PTR _errorMsg$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
mov	DWORD PTR tv597[ebp], eax
jmp	SHORT $LN97@OnMenuSave
push	OFFSET ??_C@_0BG@ELLOLKII@Failed?5to?5save?5a?5file?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
mov	DWORD PTR tv597[ebp], eax
push	0
mov	eax, DWORD PTR tv597[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+92]
push	edx
call	?MessageBoxWarning@@YAXPAUHWND__@@PB_W1@Z 
add	esp, 12					
movzx	eax, BYTE PTR _ok$[ebp]
test	eax, eax
je	SHORT $LN65@OnMenuSave
mov	eax, DWORD PTR ?gPluginURL@@3PB_WB	
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [edx]
mov	esi, esp
mov	ecx, DWORD PTR [eax]
mov	eax, DWORD PTR [edx+4]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
call	?IsUntrustedFile@@YA_NPB_W0@Z		
add	esp, 8
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN65@OnMenuSave
movzx	eax, BYTE PTR _convertToTXT$[ebp]
test	eax, eax
jne	SHORT $LN65@OnMenuSave
push	3
mov	eax, DWORD PTR _realDstFileName$[ebp]
push	eax
call	?SetZoneIdentifier@file@@YA_NPB_WH@Z	
add	esp, 8
lea	eax, DWORD PTR _dstFileName$[ebp]
cmp	DWORD PTR _realDstFileName$[ebp], eax
je	SHORT $LN66@OnMenuSave
push	1
mov	eax, DWORD PTR _realDstFileName$[ebp]
push	eax
call	__free_dbg
add	esp, 8
lea	ecx, DWORD PTR _errorMsg$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _fileFilter$[ebp]
call	??1?$Str@_W@str@@QAE@XZ
lea	ecx, DWORD PTR _urlName$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN108@OnMenuSave
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
add	esp, 1196				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	3
DD	9
DD	$LN107@OnMenuSave
DD	-24					
DD	4
DD	$LN98@OnMenuSave
DD	-132					
DD	52					
DD	$LN99@OnMenuSave
DD	-660					
DD	520					
DD	$LN100@OnMenuSave
DD	-780					
DD	88					
DD	$LN101@OnMenuSave
DD	-840					
DD	4
DD	$LN102@OnMenuSave
DD	-900					
DD	52					
DD	$LN103@OnMenuSave
DD	-936					
DD	4
DD	$LN104@OnMenuSave
DD	-948					
DD	4
DD	$LN105@OnMenuSave
DD	-960					
DD	4
DD	$LN106@OnMenuSave
DB	109					
DB	115					
DB	103					
DB	66					
DB	117					
DB	102					
DB	0
DB	116					
DB	101					
DB	120					
DB	116					
DB	85					
DB	84					
DB	70					
DB	56					
DB	66					
DB	79					
DB	77					
DB	0
DB	116					
DB	101					
DB	120					
DB	116					
DB	85					
DB	84					
DB	70					
DB	56					
DB	0
DB	116					
DB	101					
DB	120					
DB	116					
DB	0
DB	101					
DB	114					
DB	114					
DB	111					
DB	114					
DB	77					
DB	115					
DB	103					
DB	0
DB	111					
DB	102					
DB	110					
DB	0
DB	100					
DB	115					
DB	116					
DB	70					
DB	105					
DB	108					
DB	101					
DB	78					
DB	97					
DB	109					
DB	101					
DB	0
DB	102					
DB	105					
DB	108					
DB	101					
DB	70					
DB	105					
DB	108					
DB	116					
DB	101					
DB	114					
DB	0
DB	117					
DB	114					
DB	108					
DB	78					
DB	97					
DB	109					
DB	101					
DB	0
ENDP
?AppendFileFilterForDoc@@YA_NPAVController@@AAV?$Str@_W@str@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
mov	DWORD PTR _type$[ebp], 0
mov	eax, DWORD PTR _ctrl$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	eax, DWORD PTR [edx+120]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	SHORT $LN6@AppendFile
mov	eax, DWORD PTR _ctrl$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	eax, DWORD PTR [edx+120]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _type$[ebp], ecx
jmp	$LN7@AppendFile
mov	eax, DWORD PTR _ctrl$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	eax, DWORD PTR [edx+124]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	SHORT $LN8@AppendFile
mov	DWORD PTR _type$[ebp], 12		
jmp	$LN7@AppendFile
mov	eax, DWORD PTR _ctrl$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	eax, DWORD PTR [edx+128]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	SHORT $LN7@AppendFile
mov	eax, DWORD PTR _ctrl$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	eax, DWORD PTR [edx+128]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, eax
call	?GetDocType@EbookController@@QBE?AW4DocType@@XZ 
mov	DWORD PTR tv90[ebp], eax
mov	ecx, DWORD PTR tv90[ebp]
sub	ecx, 1
mov	DWORD PTR tv90[ebp], ecx
cmp	DWORD PTR tv90[ebp], 3
ja	SHORT $LN15@AppendFile
mov	edx, DWORD PTR tv90[ebp]
jmp	DWORD PTR $LN30@AppendFile[edx*4]
mov	DWORD PTR _type$[ebp], 8
jmp	SHORT $LN7@AppendFile
mov	DWORD PTR _type$[ebp], 9
jmp	SHORT $LN7@AppendFile
mov	DWORD PTR _type$[ebp], 10		
jmp	SHORT $LN7@AppendFile
mov	DWORD PTR _type$[ebp], 11		
jmp	SHORT $LN7@AppendFile
mov	DWORD PTR _type$[ebp], 0
mov	eax, DWORD PTR _type$[ebp]
mov	DWORD PTR tv93[ebp], eax
mov	ecx, DWORD PTR tv93[ebp]
sub	ecx, 2
mov	DWORD PTR tv93[ebp], ecx
cmp	DWORD PTR tv93[ebp], 12			
ja	$LN28@AppendFile
mov	edx, DWORD PTR tv93[ebp]
jmp	DWORD PTR $LN31@AppendFile[edx*4]
push	-1
push	OFFSET ??_C@_0O@CMKMFPFC@XPS?5documents?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
mov	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
jmp	$LN4@AppendFile
push	-1
push	OFFSET ??_C@_0P@HHBCBKLA@DjVu?5documents?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
mov	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
jmp	$LN4@AppendFile
push	-1
push	OFFSET ??_C@_0M@DIHALPPJ@Comic?5books?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
mov	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
jmp	$LN4@AppendFile
mov	eax, DWORD PTR _ctrl$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	eax, DWORD PTR [edx+8]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
add	eax, 2
push	eax
push	OFFSET ??_C@_0BD@MJMGPJGG@Image?5files?5?$CI?$CK?4?$CFs?$CJ?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
mov	ecx, DWORD PTR _fileFilter$[ebp]
push	ecx
call	?AppendFmt@?$Str@_W@str@@QAAXPB_WZZ	
add	esp, 12					
jmp	$LN4@AppendFile
xor	al, al
jmp	$LN1@AppendFile
push	-1
push	OFFSET ??_C@_0BF@CJKGEDBB@Postscript?5documents?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
mov	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
jmp	$LN4@AppendFile
push	-1
push	OFFSET ??_C@_0O@OALBDIG@CHM?5documents?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
mov	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
jmp	$LN4@AppendFile
push	-1
push	OFFSET ??_C@_0M@KGHOOEKB@EPUB?5ebooks?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
mov	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
jmp	$LN4@AppendFile
push	-1
push	OFFSET ??_C@_0P@ELBBEEHG@Mobi?5documents?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
mov	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
jmp	SHORT $LN4@AppendFile
push	-1
push	OFFSET ??_C@_0BG@IKNIOMC@FictionBook?5documents?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
mov	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
jmp	SHORT $LN4@AppendFile
push	-1
push	OFFSET ??_C@_0BC@KCFFJDBC@PalmDoc?5documents?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
mov	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
jmp	SHORT $LN4@AppendFile
push	-1
push	OFFSET ??_C@_0P@LHNJDKCD@Text?5documents?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
mov	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
jmp	SHORT $LN4@AppendFile
push	-1
push	OFFSET ??_C@_0O@PPPABHME@PDF?5documents?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
mov	ecx, DWORD PTR _fileFilter$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
mov	al, 1
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	$LN11@AppendFile
DD	$LN12@AppendFile
DD	$LN13@AppendFile
DD	$LN14@AppendFile
DD	$LN16@AppendFile
DD	$LN17@AppendFile
DD	$LN19@AppendFile
DD	$LN20@AppendFile
DD	$LN18@AppendFile
DD	$LN21@AppendFile
DD	$LN23@AppendFile
DD	$LN25@AppendFile
DD	$LN24@AppendFile
DD	$LN26@AppendFile
DD	$LN22@AppendFile
DD	$LN28@AppendFile
DD	$LN27@AppendFile
ENDP
?OnMenuExit@@YAXXZ PROC					
push	ebp
mov	ebp, esp
sub	esp, 396				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-396]
mov	ecx, 99					
mov	eax, -858993460				
rep stosd
cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	
je	SHORT $LN8@OnMenuExit
jmp	$LN1@OnMenuExit
mov	DWORD PTR _<range>$L0$8[ebp], OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
lea	eax, DWORD PTR _<begin>$L0$7[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L0$8[ebp]
call	?begin@?$Vec@PAVWindowInfo@@@@QAE?AVIter@1@XZ 
lea	eax, DWORD PTR _<end>$L0$6[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L0$8[ebp]
call	?end@?$Vec@PAVWindowInfo@@@@QAE?AVIter@1@XZ 
jmp	SHORT $LN4@OnMenuExit
lea	ecx, DWORD PTR _<begin>$L0$7[ebp]
call	??EIter@?$Vec@PAVWindowInfo@@@@QAEAAV01@XZ 
lea	eax, DWORD PTR _<end>$L0$6[ebp]
push	eax
lea	ecx, DWORD PTR _<begin>$L0$7[ebp]
call	??9Iter@?$Vec@PAVWindowInfo@@@@QBE_NABV01@@Z 
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN3@OnMenuExit
lea	ecx, DWORD PTR _<begin>$L0$7[ebp]
call	??DIter@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@XZ 
mov	eax, DWORD PTR [eax]
mov	DWORD PTR _win$5[ebp], eax
mov	eax, DWORD PTR _win$5[ebp]
push	eax
call	?MayCloseWindow@@YA_NPAVWindowInfo@@@Z	
add	esp, 4
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN9@OnMenuExit
jmp	$LN1@OnMenuExit
jmp	SHORT $LN2@OnMenuExit
call	?RememberSessionState@@YAXXZ		
push	OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
lea	ecx, DWORD PTR _toClose$[ebp]
call	??0?$Vec@PAVWindowInfo@@@@QAE@ABV0@@Z	
lea	eax, DWORD PTR _toClose$[ebp]
mov	DWORD PTR _<range>$L1$4[ebp], eax
lea	eax, DWORD PTR _<begin>$L1$3[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L1$4[ebp]
call	?begin@?$Vec@PAVWindowInfo@@@@QAE?AVIter@1@XZ 
lea	eax, DWORD PTR _<end>$L1$2[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L1$4[ebp]
call	?end@?$Vec@PAVWindowInfo@@@@QAE?AVIter@1@XZ 
jmp	SHORT $LN7@OnMenuExit
lea	ecx, DWORD PTR _<begin>$L1$3[ebp]
call	??EIter@?$Vec@PAVWindowInfo@@@@QAEAAV01@XZ 
lea	eax, DWORD PTR _<end>$L1$2[ebp]
push	eax
lea	ecx, DWORD PTR _<begin>$L1$3[ebp]
call	??9Iter@?$Vec@PAVWindowInfo@@@@QBE_NABV01@@Z 
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN6@OnMenuExit
lea	ecx, DWORD PTR _<begin>$L1$3[ebp]
call	??DIter@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@XZ 
mov	eax, DWORD PTR [eax]
mov	DWORD PTR _win$1[ebp], eax
push	0
push	1
mov	eax, DWORD PTR _win$1[ebp]
push	eax
call	?CloseWindow@@YAXPAVWindowInfo@@_N1@Z	
add	esp, 12					
jmp	SHORT $LN5@OnMenuExit
lea	ecx, DWORD PTR _toClose$[ebp]
call	??1?$Vec@PAVWindowInfo@@@@QAE@XZ	
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN17@OnMenuExit
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 396				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	2
DD	5
DD	$LN16@OnMenuExit
DD	-24					
DD	8
DD	$LN11@OnMenuExit
DD	-40					
DD	8
DD	$LN12@OnMenuExit
DD	-144					
DD	84					
DD	$LN13@OnMenuExit
DD	-172					
DD	8
DD	$LN14@OnMenuExit
DD	-188					
DD	8
DD	$LN15@OnMenuExit
DB	60					
DB	101					
DB	110					
DB	100					
DB	62					
DB	36					
DB	76					
DB	49					
DB	0
DB	60					
DB	98					
DB	101					
DB	103					
DB	105					
DB	110					
DB	62					
DB	36					
DB	76					
DB	49					
DB	0
DB	116					
DB	111					
DB	67					
DB	108					
DB	111					
DB	115					
DB	101					
DB	0
DB	60					
DB	101					
DB	110					
DB	100					
DB	62					
DB	36					
DB	76					
DB	48					
DB	0
DB	60					
DB	98					
DB	101					
DB	103					
DB	105					
DB	110					
DB	62					
DB	36					
DB	76					
DB	48					
DB	0
ENDP
??$swap@K@std@@YAXAAK0@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Left$[ebp]
push	eax
call	??$_Move@AAK@std@@YA$$QAKAAK@Z		
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR __Tmp$[ebp], ecx
mov	eax, DWORD PTR __Right$[ebp]
push	eax
call	??$_Move@AAK@std@@YA$$QAKAAK@Z		
add	esp, 4
mov	ecx, DWORD PTR __Left$[ebp]
mov	edx, DWORD PTR [eax]
mov	DWORD PTR [ecx], edx
lea	eax, DWORD PTR __Tmp$[ebp]
push	eax
call	??$_Move@AAK@std@@YA$$QAKAAK@Z		
add	esp, 4
mov	ecx, DWORD PTR __Right$[ebp]
mov	edx, DWORD PTR [eax]
mov	DWORD PTR [ecx], edx
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN5@swap
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	2
DD	1
DD	$LN4@swap
DD	-8					
DD	4
DD	$LN3@swap
DB	95					
DB	84					
DB	109					
DB	112					
DB	0
ENDP
?RerenderEverything@@YAXXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
mov	DWORD PTR _i$2[ebp], 0
jmp	SHORT $LN4@RerenderEv
mov	eax, DWORD PTR _i$2[ebp]
add	eax, 1
mov	DWORD PTR _i$2[ebp], eax
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?Count@?$Vec@PAVWindowInfo@@@@QBEIXZ	
cmp	DWORD PTR _i$2[ebp], eax
jae	SHORT $LN1@RerenderEv
mov	eax, DWORD PTR _i$2[ebp]
push	eax
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z 
mov	ecx, DWORD PTR [eax]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
jne	SHORT $LN5@RerenderEv
jmp	SHORT $LN2@RerenderEv
mov	eax, DWORD PTR _i$2[ebp]
push	eax
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z 
mov	ecx, DWORD PTR [eax]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	DWORD PTR _dm$1[ebp], eax
mov	eax, DWORD PTR _dm$1[ebp]
push	eax
mov	ecx, OFFSET ?gRenderCache@@3VRenderCache@@A 
call	?CancelRendering@RenderCache@@QAEXPAVDisplayModel@@@Z 
mov	eax, DWORD PTR _dm$1[ebp]
push	eax
mov	ecx, DWORD PTR _dm$1[ebp]
push	ecx
mov	ecx, OFFSET ?gRenderCache@@3VRenderCache@@A 
call	?KeepForDisplayModel@RenderCache@@QAEXPAVDisplayModel@@0@Z 
push	1
mov	eax, DWORD PTR _i$2[ebp]
push	eax
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z 
mov	ecx, DWORD PTR [eax]
call	?RedrawAll@WindowInfo@@QAEX_N@Z		
jmp	$LN2@RerenderEv
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$?0V_lambda_1a01023b43b3e313893bd9ee262479f6_@@@?$function@$$A6AXPAVHttpRsp@@@Z@std@@QAE@V_lambda_1a01023b43b3e313893bd9ee262479f6_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_class@XPAVHttpRsp@@@std@@QAE@XZ 
lea	eax, DWORD PTR __Func$[ebp]
push	eax
call	??$move@AAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@@std@@YA$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@@?$_Func_class@XPAVHttpRsp@@@std@@IAEX$$QAV<lambda_1a01023b43b3e313893bd9ee262479f6>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??1?$function@$$A6AXPAVHttpRsp@@@Z@std@@QAE@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_class@XPAVHttpRsp@@@std@@QAE@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Getspace@?$_Func_class@XPAVHttpRsp@@@std@@ABEPBXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Getspace@?$_Func_class@XPAVHttpRsp@@@std@@AAEPAXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Set@?$_Func_class@XPAVHttpRsp@@@std@@AAEXPAV?$_Func_base@XPAVHttpRsp@@@2@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, 4
imul	ecx, eax, 9
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR __Ptr$[ebp]
mov	DWORD PTR [edx+ecx], eax
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
?_Getimpl@?$_Func_class@XPAVHttpRsp@@@std@@ABEPAV?$_Func_base@XPAVHttpRsp@@@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, 4
imul	ecx, eax, 9
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+ecx]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Local@?$_Func_class@XPAVHttpRsp@@@std@@ABE_NXZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getimpl@?$_Func_class@XPAVHttpRsp@@@std@@ABEPAV?$_Func_base@XPAVHttpRsp@@@2@XZ 
mov	esi, eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getspace@?$_Func_class@XPAVHttpRsp@@@std@@ABEPBXXZ 
cmp	esi, eax
jne	SHORT $LN3@Local
mov	DWORD PTR tv69[ebp], 1
jmp	SHORT $LN4@Local
mov	DWORD PTR tv69[ebp], 0
mov	al, BYTE PTR tv69[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Tidy@?$_Func_class@XPAVHttpRsp@@@std@@IAEXXZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 212				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-212]
mov	ecx, 53					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Empty@?$_Func_class@XPAVHttpRsp@@@std@@IBE_NXZ 
movzx	eax, al
test	eax, eax
jne	SHORT $LN1@Tidy
mov	ecx, DWORD PTR _this$[ebp]
call	?_Local@?$_Func_class@XPAVHttpRsp@@@std@@ABE_NXZ 
movzx	eax, al
test	eax, eax
jne	SHORT $LN4@Tidy
mov	BYTE PTR tv78[ebp], 1
jmp	SHORT $LN5@Tidy
mov	BYTE PTR tv78[ebp], 0
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getimpl@?$_Func_class@XPAVHttpRsp@@@std@@ABEPAV?$_Func_base@XPAVHttpRsp@@@2@XZ 
mov	DWORD PTR tv71[ebp], eax
mov	esi, esp
movzx	ecx, BYTE PTR tv78[ebp]
push	ecx
mov	edx, DWORD PTR tv71[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR tv71[ebp]
mov	edx, DWORD PTR [eax+16]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	0
mov	ecx, DWORD PTR _this$[ebp]
call	?_Set@?$_Func_class@XPAVHttpRsp@@@std@@AAEXPAV?$_Func_base@XPAVHttpRsp@@@2@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 212				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Empty@?$_Func_class@XPAVHttpRsp@@@std@@IBE_NXZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getimpl@?$_Func_class@XPAVHttpRsp@@@std@@ABEPAV?$_Func_base@XPAVHttpRsp@@@2@XZ 
test	eax, eax
jne	SHORT $LN3@Empty
mov	DWORD PTR tv67[ebp], 1
jmp	SHORT $LN4@Empty
mov	DWORD PTR tv67[ebp], 0
mov	al, BYTE PTR tv67[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1?$_Func_class@XPAVHttpRsp@@@std@@QAE@XZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Tidy@?$_Func_class@XPAVHttpRsp@@@std@@IAEXXZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0?$_Func_class@XPAVHttpRsp@@@std@@QAE@XZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	ecx, DWORD PTR _this$[ebp]
call	?_Set@?$_Func_class@XPAVHttpRsp@@@std@@AAEXPAV?$_Func_base@XPAVHttpRsp@@@2@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$?0V_lambda_6285d5a3719bb8faf2336baccac06139_@@@?$function@$$A6AXXZ@std@@QAE@V_lambda_6285d5a3719bb8faf2336baccac06139_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_class@X$$V@std@@QAE@XZ	
lea	eax, DWORD PTR __Func$[ebp]
push	eax
call	??$move@AAV<lambda_6285d5a3719bb8faf2336baccac06139>@@@std@@YA$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset@V<lambda_6285d5a3719bb8faf2336baccac06139>@@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_6285d5a3719bb8faf2336baccac06139>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??0_lambda_6285d5a3719bb8faf2336baccac06139_@@QAE@ABQAUHWND__@@ABQAVHttpRsp@@AB_N@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _<hwnd>$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _<rsp>$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR [eax+4], edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _<autoCheck>$[ebp]
mov	dl, BYTE PTR [ecx]
mov	BYTE PTR [eax+8], dl
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	12					
ENDP
??R_lambda_6285d5a3719bb8faf2336baccac06139_@@QBEXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 232				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-232]
mov	ecx, 58					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
movzx	ecx, BYTE PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	?ProcessAutoUpdateCheckResult@@YAXPAUHWND__@@PAVHttpRsp@@_N@Z 
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR $T1[ebp], ecx
mov	edx, DWORD PTR $T1[ebp]
mov	DWORD PTR $T2[ebp], edx
cmp	DWORD PTR $T2[ebp], 0
je	SHORT $LN3@operator
push	1
mov	ecx, DWORD PTR $T2[ebp]
call	??_GHttpRsp@@QAEPAXI@Z
mov	DWORD PTR tv75[ebp], eax
jmp	SHORT $LN1@operator
mov	DWORD PTR tv75[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 232				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0_lambda_1a01023b43b3e313893bd9ee262479f6_@@QAE@ABQAUHWND__@@AB_N@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _<hwnd>$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _<autoCheck>$[ebp]
mov	dl, BYTE PTR [ecx]
mov	BYTE PTR [eax+4], dl
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	8
ENDP
??R_lambda_1a01023b43b3e313893bd9ee262479f6_@@QBE@PAVHttpRsp@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 276				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-276]
mov	ecx, 69					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _this$[ebp], ecx
mov	BYTE PTR ?gUpdateTaskInProgress@@3_NA, 0 
mov	eax, DWORD PTR _this$[ebp]
add	eax, 4
push	eax
lea	ecx, DWORD PTR _rsp$[ebp]
push	ecx
mov	edx, DWORD PTR _this$[ebp]
push	edx
lea	ecx, DWORD PTR $T1[ebp]
call	??0<lambda_6285d5a3719bb8faf2336baccac06139>@@QAE@ABQAUHWND__@@ABQAVHttpRsp@@AB_N@Z 
sub	esp, 12					
mov	ecx, esp
mov	edx, DWORD PTR [eax]
mov	DWORD PTR [ecx], edx
mov	edx, DWORD PTR [eax+4]
mov	DWORD PTR [ecx+4], edx
mov	eax, DWORD PTR [eax+8]
mov	DWORD PTR [ecx+8], eax
lea	ecx, DWORD PTR $T2[ebp]
call	??$?0V<lambda_6285d5a3719bb8faf2336baccac06139>@@@?$function@$$A6AXXZ@std@@QAE@V<lambda_6285d5a3719bb8faf2336baccac06139>@@@Z 
lea	ecx, DWORD PTR $T2[ebp]
push	ecx
call	?Post@uitask@@YAXABV?$function@$$A6AXXZ@std@@@Z 
add	esp, 4
lea	ecx, DWORD PTR $T2[ebp]
call	??1?$function@$$A6AXXZ@std@@QAE@XZ	
pop	edi
pop	esi
pop	ebx
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
add	esp, 276				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?ProcessAutoUpdateCheckResult@@YAXPAUHWND__@@PAVHttpRsp@@_N@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR _autoCheck$[ebp]
push	eax
mov	ecx, DWORD PTR _rsp$[ebp]
push	ecx
mov	edx, DWORD PTR _hwnd$[ebp]
push	edx
call	?ShowAutoUpdateDialog@@YAKPAUHWND__@@PAVHttpRsp@@_N@Z 
add	esp, 12					
mov	DWORD PTR _error$[ebp], eax
cmp	DWORD PTR _error$[ebp], 0
je	SHORT $LN1@ProcessAut
movzx	eax, BYTE PTR _autoCheck$[ebp]
test	eax, eax
jne	SHORT $LN1@ProcessAut
mov	eax, DWORD PTR _error$[ebp]
push	eax
push	OFFSET ??_C@_0CL@GDIJGNJ@Can?8t?5connect?5to?5the?5Internet?5?$CIe@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
call	?Format@str@@YAPA_WPB_WZZ		
add	esp, 8
push	eax
lea	ecx, DWORD PTR _msg$1[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
push	OFFSET ??_C@_0BC@ECIANAAF@SumatraPDF?5Update?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
lea	ecx, DWORD PTR _msg$1[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	?MessageBoxWarning@@YAXPAUHWND__@@PB_W1@Z 
add	esp, 12					
lea	ecx, DWORD PTR _msg$1[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@ProcessAut
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	1
DD	$LN5@ProcessAut
DD	-20					
DD	4
DD	$LN4@ProcessAut
DB	109					
DB	115					
DB	103					
DB	0
ENDP
??$StartsWith@_W@str@@YA_NPB_W0@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _txt$[ebp]
push	eax
call	?Len@str@@YAIPB_W@Z			
add	esp, 4
push	eax
mov	ecx, DWORD PTR _txt$[ebp]
push	ecx
mov	edx, DWORD PTR _str$[ebp]
push	edx
call	?EqN@str@@YA_NPB_W0I@Z			
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?ShowAutoUpdateDialog@@YAKPAUHWND__@@PAVHttpRsp@@_N@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 392				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-392]
mov	ecx, 98					
mov	eax, -858993460				
rep stosd
mov	DWORD PTR $T1[ebp], 0
mov	eax, DWORD PTR _rsp$[ebp]
cmp	DWORD PTR [eax+40], 0
je	SHORT $LN2@ShowAutoUp
mov	eax, DWORD PTR _rsp$[ebp]
mov	eax, DWORD PTR [eax+40]
jmp	$LN1@ShowAutoUp
mov	eax, DWORD PTR _rsp$[ebp]
cmp	DWORD PTR [eax+44], 200			
je	SHORT $LN3@ShowAutoUp
mov	eax, 12005				
jmp	$LN1@ShowAutoUp
push	OFFSET ??_C@_1HI@OJPBBNIK@?$AAh?$AAt?$AAt?$AAp?$AA?3?$AA?1?$AA?1?$AAk?$AAj?$AAk?$AAp?$AAu?$AAb?$AA?4?$AAs?$AA3?$AA?4?$AAa?$AAm?$AAa?$AAz?$AAo?$AAn?$AAa?$AAw?$AAs?$AA?4?$AAc?$AAo?$AAm?$AA?1?$AAs@
mov	ecx, DWORD PTR _rsp$[ebp]
call	?Get@?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	??$StartsWith@_W@str@@YA_NPB_W0@Z	
add	esp, 8
movzx	eax, al
test	eax, eax
jne	SHORT $LN4@ShowAutoUp
mov	eax, 12005				
jmp	$LN1@ShowAutoUp
mov	eax, DWORD PTR _rsp$[ebp]
add	eax, 4
mov	DWORD PTR _data$[ebp], eax
mov	ecx, DWORD PTR _data$[ebp]
call	?Size@?$Vec@D@@QBEIXZ			
test	eax, eax
jne	SHORT $LN5@ShowAutoUp
mov	eax, 12030				
jmp	$LN1@ShowAutoUp
push	0
mov	ecx, DWORD PTR _data$[ebp]
call	?At@?$Vec@D@@QBEAADI@Z			
movsx	eax, BYTE PTR [eax]
cmp	eax, 91					
jne	SHORT $LN17@ShowAutoUp
mov	DWORD PTR tv95[ebp], OFFSET ??_C@_0N@HCHLANJI@?$FLSumatraPDF?$FN?$AA@
jmp	SHORT $LN18@ShowAutoUp
mov	DWORD PTR tv95[ebp], OFFSET ??_C@_0L@DEALLJAO@SumatraPDF?$AA@
mov	ecx, DWORD PTR tv95[ebp]
push	ecx
mov	ecx, DWORD PTR _data$[ebp]
call	?Get@?$Str@D@str@@QBEPADXZ		
push	eax
call	??$StartsWith@D@str@@YA_NPBD0@Z		
add	esp, 8
movzx	edx, al
test	edx, edx
jne	SHORT $LN6@ShowAutoUp
mov	eax, 12015				
jmp	$LN1@ShowAutoUp
mov	ecx, DWORD PTR _data$[ebp]
call	?Get@?$Str@D@str@@QBEPADXZ		
push	eax
lea	ecx, DWORD PTR _tree$[ebp]
call	??0SquareTree@@QAE@PBD@Z		
cmp	DWORD PTR _tree$[ebp+4], 0
je	SHORT $LN19@ShowAutoUp
push	0
push	OFFSET ??_C@_0L@DEALLJAO@SumatraPDF?$AA@
mov	ecx, DWORD PTR _tree$[ebp+4]
call	?GetChild@SquareTreeNode@@QBEPAV1@PBDPAI@Z 
mov	DWORD PTR tv145[ebp], eax
jmp	SHORT $LN20@ShowAutoUp
mov	DWORD PTR tv145[ebp], 0
mov	eax, DWORD PTR tv145[ebp]
mov	DWORD PTR _node$[ebp], eax
cmp	DWORD PTR _node$[ebp], 0
je	SHORT $LN21@ShowAutoUp
push	0
push	OFFSET ??_C@_06DPNOMILG@Latest?$AA@
mov	ecx, DWORD PTR _node$[ebp]
call	?GetValue@SquareTreeNode@@QBEPBDPBDPAI@Z 
mov	DWORD PTR tv151[ebp], eax
jmp	SHORT $LN22@ShowAutoUp
mov	DWORD PTR tv151[ebp], 0
mov	eax, DWORD PTR tv151[ebp]
mov	DWORD PTR _latest$[ebp], eax
cmp	DWORD PTR _latest$[ebp], 0
je	SHORT $LN8@ShowAutoUp
mov	eax, DWORD PTR _latest$[ebp]
push	eax
call	?IsValidProgramVersion@@YA_NPBD@Z	
add	esp, 4
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN7@ShowAutoUp
mov	DWORD PTR $T8[ebp], 12027		
lea	ecx, DWORD PTR _tree$[ebp]
call	??1SquareTree@@QAE@XZ			
mov	eax, DWORD PTR $T8[ebp]
jmp	$LN1@ShowAutoUp
mov	eax, DWORD PTR _latest$[ebp]
push	eax
call	?FromUtf8@conv@str@@YAPA_WPBD@Z		
add	esp, 4
push	eax
lea	ecx, DWORD PTR _verTxt$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
push	OFFSET ??_C@_17OEKOIPIK@?$AA3?$AA?4?$AA1?$AA?$AA@
lea	ecx, DWORD PTR _verTxt$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?CompareVersion@@YAHPB_W0@Z		
add	esp, 8
test	eax, eax
jg	SHORT $LN9@ShowAutoUp
movzx	eax, BYTE PTR _silent$[ebp]
test	eax, eax
jne	SHORT $LN10@ShowAutoUp
push	OFFSET ??_C@_0BC@ECIANAAF@SumatraPDF?5Update?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
push	OFFSET ??_C@_0BN@BKOIKGJE@You?5have?5the?5latest?5version?4?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
mov	eax, DWORD PTR _hParent$[ebp]
push	eax
call	?MessageBoxWarning@@YAXPAUHWND__@@PB_W1@Z 
add	esp, 12					
mov	DWORD PTR $T7[ebp], 0
lea	ecx, DWORD PTR _verTxt$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _tree$[ebp]
call	??1SquareTree@@QAE@XZ			
mov	eax, DWORD PTR $T7[ebp]
jmp	$LN1@ShowAutoUp
movzx	eax, BYTE PTR _silent$[ebp]
test	eax, eax
je	$LN11@ShowAutoUp
push	0
push	OFFSET ??_C@_06IMCHFAKP@Stable?$AA@
mov	ecx, DWORD PTR _node$[ebp]
call	?GetValue@SquareTreeNode@@QBEPBDPBDPAI@Z 
mov	DWORD PTR _stable$9[ebp], eax
cmp	DWORD PTR _stable$9[ebp], 0
je	SHORT $LN23@ShowAutoUp
mov	eax, DWORD PTR _stable$9[ebp]
push	eax
call	?IsValidProgramVersion@@YA_NPBD@Z	
add	esp, 4
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN23@ShowAutoUp
push	OFFSET ??_C@_17OEKOIPIK@?$AA3?$AA?4?$AA1?$AA?$AA@
mov	edx, DWORD PTR _stable$9[ebp]
push	edx
call	?FromUtf8@conv@str@@YAPA_WPBD@Z		
add	esp, 4
push	eax
lea	ecx, DWORD PTR $T5[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
or	DWORD PTR $T1[ebp], 1
mov	ecx, eax
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?CompareVersion@@YAHPB_W0@Z		
add	esp, 8
test	eax, eax
jg	SHORT $LN23@ShowAutoUp
mov	DWORD PTR tv202[ebp], 1
jmp	SHORT $LN24@ShowAutoUp
mov	DWORD PTR tv202[ebp], 0
mov	al, BYTE PTR tv202[ebp]
mov	BYTE PTR $T6[ebp], al
mov	ecx, DWORD PTR $T1[ebp]
and	ecx, 1
je	SHORT $LN25@ShowAutoUp
and	DWORD PTR $T1[ebp], -2			
lea	ecx, DWORD PTR $T5[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
movzx	edx, BYTE PTR $T6[ebp]
test	edx, edx
je	SHORT $LN11@ShowAutoUp
mov	DWORD PTR $T4[ebp], 0
lea	ecx, DWORD PTR _verTxt$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _tree$[ebp]
call	??1SquareTree@@QAE@XZ			
mov	eax, DWORD PTR $T4[ebp]
jmp	$LN1@ShowAutoUp
movzx	eax, BYTE PTR _silent$[ebp]
test	eax, eax
je	SHORT $LN13@ShowAutoUp
lea	ecx, DWORD PTR _verTxt$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	ecx, DWORD PTR [eax+184]
push	ecx
call	?EqI@str@@YA_NPB_W0@Z			
add	esp, 8
movzx	edx, al
test	edx, edx
je	SHORT $LN13@ShowAutoUp
mov	DWORD PTR $T3[ebp], 0
lea	ecx, DWORD PTR _verTxt$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _tree$[ebp]
call	??1SquareTree@@QAE@XZ			
mov	eax, DWORD PTR $T3[ebp]
jmp	$LN1@ShowAutoUp
mov	BYTE PTR _skipThisVersion$[ebp], 0
lea	eax, DWORD PTR _skipThisVersion$[ebp]
push	eax
lea	ecx, DWORD PTR _verTxt$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
push	OFFSET ??_C@_17OEKOIPIK@?$AA3?$AA?4?$AA1?$AA?$AA@
mov	ecx, DWORD PTR _hParent$[ebp]
push	ecx
call	?Dialog_NewVersionAvailable@@YAHPAUHWND__@@PB_W1PA_N@Z 
add	esp, 16					
mov	DWORD PTR _res$[ebp], eax
movzx	eax, BYTE PTR _skipThisVersion$[ebp]
test	eax, eax
je	SHORT $LN14@ShowAutoUp
push	1
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	ecx, DWORD PTR [eax+184]
push	ecx
call	__free_dbg
add	esp, 8
lea	ecx, DWORD PTR _verTxt$[ebp]
call	?StealData@?$ScopedMem@_W@@QAEPA_WXZ	
mov	ecx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	DWORD PTR [ecx+184], eax
cmp	DWORD PTR _res$[ebp], 6
jne	SHORT $LN15@ShowAutoUp
push	OFFSET ??_C@_1HM@CKPFFGPC@?$AAh?$AAt?$AAt?$AAp?$AA?3?$AA?1?$AA?1?$AAw?$AAw?$AAw?$AA?4?$AAs?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAp?$AAd?$AAf?$AAr?$AAe?$AAa?$AAd?$AAe?$AAr?$AA?4?$AAo?$AAr?$AAg?$AA?1@
call	?LaunchBrowser@@YA_NPB_W@Z		
add	esp, 4
call	?Save@prefs@@YA_NXZ			
mov	DWORD PTR $T2[ebp], 0
lea	ecx, DWORD PTR _verTxt$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _tree$[ebp]
call	??1SquareTree@@QAE@XZ			
mov	eax, DWORD PTR $T2[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN30@ShowAutoUp
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 392				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	3
DD	$LN29@ShowAutoUp
DD	-24					
DD	8
DD	$LN26@ShowAutoUp
DD	-60					
DD	4
DD	$LN27@ShowAutoUp
DD	-81					
DD	1
DD	$LN28@ShowAutoUp
DB	115					
DB	107					
DB	105					
DB	112					
DB	84					
DB	104					
DB	105					
DB	115					
DB	86					
DB	101					
DB	114					
DB	115					
DB	105					
DB	111					
DB	110					
DB	0
DB	118					
DB	101					
DB	114					
DB	84					
DB	120					
DB	116					
DB	0
DB	116					
DB	114					
DB	101					
DB	101					
DB	0
ENDP
?Append@?$Vec@PAUTabState@@@@QAEXABQAUTabState@@@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _el$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
call	?InsertAt@?$Vec@PAUTabState@@@@QAEXIABQAUTabState@@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?InsertAt@?$Vec@PAUTabState@@@@QAEXIABQAUTabState@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
push	1
mov	eax, DWORD PTR _idx$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?MakeSpaceAt@?$Vec@PAUTabState@@@@IAEPAPAUTabState@@II_N@Z 
mov	ecx, 4
imul	edx, ecx, 0
mov	ecx, DWORD PTR _el$[ebp]
mov	ecx, DWORD PTR [ecx]
mov	DWORD PTR [eax+edx], ecx
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?MakeSpaceAt@?$Vec@PAUTabState@@@@IAEPAPAUTabState@@II_N@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 252				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-252]
mov	ecx, 63					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
lea	eax, DWORD PTR _idx$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
push	ecx
call	??$max@I@std@@YAABIABI0@Z		
add	esp, 8
mov	edx, DWORD PTR [eax]
add	edx, DWORD PTR _count$[ebp]
mov	DWORD PTR _newLen$[ebp], edx
movzx	eax, BYTE PTR _allowFailure$[ebp]
test	eax, eax
jne	SHORT $LN2@MakeSpaceA
mov	eax, DWORD PTR _newLen$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapCrash@?$Vec@PAUTabState@@@@IAEXI@Z 
jmp	SHORT $LN3@MakeSpaceA
mov	eax, DWORD PTR _newLen$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapTry@?$Vec@PAUTabState@@@@IAE_NI@Z 
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN3@MakeSpaceA
xor	eax, eax
jmp	SHORT $LN1@MakeSpaceA
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _res$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
cmp	ecx, DWORD PTR _idx$[ebp]
jbe	SHORT $LN5@MakeSpaceA
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _src$2[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	ecx, DWORD PTR _count$[ebp]
lea	edx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _dst$1[ebp], edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, DWORD PTR _idx$[ebp]
shl	ecx, 2
push	ecx
mov	edx, DWORD PTR _src$2[ebp]
push	edx
mov	eax, DWORD PTR _dst$1[ebp]
push	eax
call	_memmove
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newLen$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _res$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 252				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
?EnsureCapCrash@?$Vec@PAUTabState@@@@IAEXI@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _needed$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapTry@?$Vec@PAUTabState@@@@IAE_NI@Z 
mov	BYTE PTR _ok$[ebp], al
xor	eax, eax
jne	SHORT $LN5@EnsureCapC
movzx	eax, BYTE PTR _ok$[ebp]
test	eax, eax
jne	SHORT $LN2@EnsureCapC
call	?CrashMe@@YAXXZ				
xor	eax, eax
jne	SHORT $LN5@EnsureCapC
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?EnsureCapTry@?$Vec@PAUTabState@@@@IAE_NI@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 264				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-264]
mov	ecx, 66					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
cmp	ecx, DWORD PTR _needed$[ebp]
jb	SHORT $LN2@EnsureCapT
mov	al, 1
jmp	$LN1@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
shl	ecx, 1
mov	DWORD PTR _newCap$[ebp], ecx
mov	eax, DWORD PTR _needed$[ebp]
cmp	eax, DWORD PTR _newCap$[ebp]
jbe	SHORT $LN3@EnsureCapT
mov	eax, DWORD PTR _needed$[ebp]
mov	DWORD PTR _newCap$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newCap$[ebp]
cmp	ecx, DWORD PTR [eax+8]
jae	SHORT $LN4@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _newCap$[ebp], ecx
mov	eax, DWORD PTR _newCap$[ebp]
add	eax, 1
mov	DWORD PTR _newElCount$[ebp], eax
cmp	DWORD PTR _newElCount$[ebp], 1073741823	
jb	SHORT $LN5@EnsureCapT
xor	al, al
jmp	$LN1@EnsureCapT
cmp	DWORD PTR _newElCount$[ebp], 2147483647	
jbe	SHORT $LN6@EnsureCapT
xor	al, al
jmp	$LN1@EnsureCapT
mov	eax, DWORD PTR _newElCount$[ebp]
shl	eax, 2
mov	DWORD PTR _allocSize$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
shl	ecx, 2
mov	edx, DWORD PTR _allocSize$[ebp]
sub	edx, ecx
mov	DWORD PTR _newPadding$[ebp], edx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
cmp	eax, DWORD PTR [ecx+12]
jne	SHORT $LN7@EnsureCapT
mov	eax, DWORD PTR _newPadding$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
shl	edx, 2
push	edx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+80]
push	edx
call	?Dup@Allocator@@SAPAXPAV1@PBXII@Z	
add	esp, 16					
mov	DWORD PTR _newEls$[ebp], eax
jmp	SHORT $LN8@EnsureCapT
mov	eax, DWORD PTR _allocSize$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+80]
push	ecx
call	?Realloc@Allocator@@SAPAXPAV1@PAXI@Z	
add	esp, 12					
mov	DWORD PTR _newEls$[ebp], eax
cmp	DWORD PTR _newEls$[ebp], 0
jne	SHORT $LN9@EnsureCapT
xor	al, al
jmp	SHORT $LN1@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newEls$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	eax, DWORD PTR _newPadding$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
lea	edx, DWORD PTR [ecx+edx*4]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newCap$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	al, 1
pop	edi
pop	esi
pop	ebx
add	esp, 264				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?Append@?$Vec@PAUSessionData@@@@QAEXABQAUSessionData@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _el$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
call	?InsertAt@?$Vec@PAUSessionData@@@@QAEXIABQAUSessionData@@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?InsertAt@?$Vec@PAUSessionData@@@@QAEXIABQAUSessionData@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
push	1
mov	eax, DWORD PTR _idx$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?MakeSpaceAt@?$Vec@PAUSessionData@@@@IAEPAPAUSessionData@@II_N@Z 
mov	ecx, 4
imul	edx, ecx, 0
mov	ecx, DWORD PTR _el$[ebp]
mov	ecx, DWORD PTR [ecx]
mov	DWORD PTR [eax+edx], ecx
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?Count@?$Vec@PAUSessionData@@@@QBEIXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [eax]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?MakeSpaceAt@?$Vec@PAUSessionData@@@@IAEPAPAUSessionData@@II_N@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 252				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-252]
mov	ecx, 63					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
lea	eax, DWORD PTR _idx$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
push	ecx
call	??$max@I@std@@YAABIABI0@Z		
add	esp, 8
mov	edx, DWORD PTR [eax]
add	edx, DWORD PTR _count$[ebp]
mov	DWORD PTR _newLen$[ebp], edx
movzx	eax, BYTE PTR _allowFailure$[ebp]
test	eax, eax
jne	SHORT $LN2@MakeSpaceA
mov	eax, DWORD PTR _newLen$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapCrash@?$Vec@PAUSessionData@@@@IAEXI@Z 
jmp	SHORT $LN3@MakeSpaceA
mov	eax, DWORD PTR _newLen$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapTry@?$Vec@PAUSessionData@@@@IAE_NI@Z 
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN3@MakeSpaceA
xor	eax, eax
jmp	SHORT $LN1@MakeSpaceA
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _res$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
cmp	ecx, DWORD PTR _idx$[ebp]
jbe	SHORT $LN5@MakeSpaceA
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _src$2[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	ecx, DWORD PTR _count$[ebp]
lea	edx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _dst$1[ebp], edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, DWORD PTR _idx$[ebp]
shl	ecx, 2
push	ecx
mov	edx, DWORD PTR _src$2[ebp]
push	edx
mov	eax, DWORD PTR _dst$1[ebp]
push	eax
call	_memmove
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newLen$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _res$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 252				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
?EnsureCapCrash@?$Vec@PAUSessionData@@@@IAEXI@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _needed$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapTry@?$Vec@PAUSessionData@@@@IAE_NI@Z 
mov	BYTE PTR _ok$[ebp], al
xor	eax, eax
jne	SHORT $LN5@EnsureCapC
movzx	eax, BYTE PTR _ok$[ebp]
test	eax, eax
jne	SHORT $LN2@EnsureCapC
call	?CrashMe@@YAXXZ				
xor	eax, eax
jne	SHORT $LN5@EnsureCapC
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?EnsureCapTry@?$Vec@PAUSessionData@@@@IAE_NI@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 264				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-264]
mov	ecx, 66					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
cmp	ecx, DWORD PTR _needed$[ebp]
jb	SHORT $LN2@EnsureCapT
mov	al, 1
jmp	$LN1@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
shl	ecx, 1
mov	DWORD PTR _newCap$[ebp], ecx
mov	eax, DWORD PTR _needed$[ebp]
cmp	eax, DWORD PTR _newCap$[ebp]
jbe	SHORT $LN3@EnsureCapT
mov	eax, DWORD PTR _needed$[ebp]
mov	DWORD PTR _newCap$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newCap$[ebp]
cmp	ecx, DWORD PTR [eax+8]
jae	SHORT $LN4@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _newCap$[ebp], ecx
mov	eax, DWORD PTR _newCap$[ebp]
add	eax, 1
mov	DWORD PTR _newElCount$[ebp], eax
cmp	DWORD PTR _newElCount$[ebp], 1073741823	
jb	SHORT $LN5@EnsureCapT
xor	al, al
jmp	$LN1@EnsureCapT
cmp	DWORD PTR _newElCount$[ebp], 2147483647	
jbe	SHORT $LN6@EnsureCapT
xor	al, al
jmp	$LN1@EnsureCapT
mov	eax, DWORD PTR _newElCount$[ebp]
shl	eax, 2
mov	DWORD PTR _allocSize$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
shl	ecx, 2
mov	edx, DWORD PTR _allocSize$[ebp]
sub	edx, ecx
mov	DWORD PTR _newPadding$[ebp], edx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
cmp	eax, DWORD PTR [ecx+12]
jne	SHORT $LN7@EnsureCapT
mov	eax, DWORD PTR _newPadding$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
shl	edx, 2
push	edx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+80]
push	edx
call	?Dup@Allocator@@SAPAXPAV1@PBXII@Z	
add	esp, 16					
mov	DWORD PTR _newEls$[ebp], eax
jmp	SHORT $LN8@EnsureCapT
mov	eax, DWORD PTR _allocSize$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+80]
push	ecx
call	?Realloc@Allocator@@SAPAXPAV1@PAXI@Z	
add	esp, 12					
mov	DWORD PTR _newEls$[ebp], eax
cmp	DWORD PTR _newEls$[ebp], 0
jne	SHORT $LN9@EnsureCapT
xor	al, al
jmp	SHORT $LN1@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newEls$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	eax, DWORD PTR _newPadding$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
lea	edx, DWORD PTR [ecx+edx*4]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newCap$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	al, 1
pop	edi
pop	esi
pop	ebx
add	esp, 264				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?RememberSessionState@@YAXXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 340				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-340]
mov	ecx, 85					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+188]
test	ecx, ecx
jne	SHORT $LN8@RememberSe
jmp	$LN1@RememberSe
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	ecx, DWORD PTR [eax+248]
push	ecx
call	?ResetSessionState@@YAXPAV?$Vec@PAUSessionData@@@@@Z 
add	esp, 4
mov	DWORD PTR _<range>$L0$11[ebp], OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
lea	eax, DWORD PTR _<begin>$L0$10[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L0$11[ebp]
call	?begin@?$Vec@PAVWindowInfo@@@@QAE?AVIter@1@XZ 
lea	eax, DWORD PTR _<end>$L0$9[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L0$11[ebp]
call	?end@?$Vec@PAVWindowInfo@@@@QAE?AVIter@1@XZ 
jmp	SHORT $LN4@RememberSe
lea	ecx, DWORD PTR _<begin>$L0$10[ebp]
call	??EIter@?$Vec@PAVWindowInfo@@@@QAEAAV01@XZ 
lea	eax, DWORD PTR _<end>$L0$9[ebp]
push	eax
lea	ecx, DWORD PTR _<begin>$L0$10[ebp]
call	??9Iter@?$Vec@PAVWindowInfo@@@@QBE_NABV01@@Z 
movzx	ecx, al
test	ecx, ecx
je	$LN1@RememberSe
lea	ecx, DWORD PTR _<begin>$L0$10[ebp]
call	??DIter@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@XZ 
mov	eax, DWORD PTR [eax]
mov	DWORD PTR _win$8[ebp], eax
mov	ecx, DWORD PTR _win$8[ebp]
add	ecx, 4
call	?Count@?$Vec@PAVTabInfo@@@@QBEIXZ	
test	eax, eax
jne	SHORT $LN9@RememberSe
jmp	SHORT $LN2@RememberSe
call	?NewSessionData@@YAPAUSessionData@@XZ	
mov	DWORD PTR _data$7[ebp], eax
mov	eax, DWORD PTR _win$8[ebp]
add	eax, 4
mov	DWORD PTR _<range>$L1$6[ebp], eax
lea	eax, DWORD PTR _<begin>$L1$5[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L1$6[ebp]
call	?begin@?$Vec@PAVTabInfo@@@@QAE?AVIter@1@XZ 
lea	eax, DWORD PTR _<end>$L1$4[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L1$6[ebp]
call	?end@?$Vec@PAVTabInfo@@@@QAE?AVIter@1@XZ 
jmp	SHORT $LN7@RememberSe
lea	ecx, DWORD PTR _<begin>$L1$5[ebp]
call	??EIter@?$Vec@PAVTabInfo@@@@QAEAAV01@XZ	
lea	eax, DWORD PTR _<end>$L1$4[ebp]
push	eax
lea	ecx, DWORD PTR _<begin>$L1$5[ebp]
call	??9Iter@?$Vec@PAVTabInfo@@@@QBE_NABV01@@Z 
movzx	ecx, al
test	ecx, ecx
je	$LN6@RememberSe
lea	ecx, DWORD PTR _<begin>$L1$5[ebp]
call	??DIter@?$Vec@PAVTabInfo@@@@QBEAAPAVTabInfo@@XZ 
mov	eax, DWORD PTR [eax]
mov	DWORD PTR _tab$3[ebp], eax
mov	ecx, DWORD PTR _tab$3[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?NewDisplayState@@YAPAUFileState@@PB_W@Z 
add	esp, 4
mov	DWORD PTR _ds$2[ebp], eax
mov	eax, DWORD PTR _tab$3[ebp]
cmp	DWORD PTR [eax+4], 0
je	SHORT $LN10@RememberSe
mov	esi, esp
mov	eax, DWORD PTR _ds$2[ebp]
push	eax
mov	ecx, DWORD PTR _tab$3[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _tab$3[ebp]
mov	edx, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+4]
mov	eax, DWORD PTR [edx+80]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, DWORD PTR _tab$3[ebp]
call	?AsEbook@TabInfo@@QBEPAVEbookController@@XZ 
test	eax, eax
je	SHORT $LN11@RememberSe
mov	eax, DWORD PTR _tab$3[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _tab$3[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx+4]
mov	edx, DWORD PTR [eax+20]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, DWORD PTR _ds$2[ebp]
mov	DWORD PTR [ecx+36], eax
mov	eax, DWORD PTR _ds$2[ebp]
mov	ecx, DWORD PTR _tab$3[ebp]
mov	dl, BYTE PTR [ecx+12]
mov	BYTE PTR [eax+68], dl
mov	eax, DWORD PTR _tab$3[ebp]
add	eax, 20					
push	eax
mov	ecx, DWORD PTR _ds$2[ebp]
mov	ecx, DWORD PTR [ecx+84]
call	??4?$Vec@H@@QAEAAV0@ABV0@@Z		
mov	eax, DWORD PTR _ds$2[ebp]
push	eax
call	?NewTabState@@YAPAUTabState@@PAUFileState@@@Z 
add	esp, 4
mov	DWORD PTR $T1[ebp], eax
lea	ecx, DWORD PTR $T1[ebp]
push	ecx
mov	edx, DWORD PTR _data$7[ebp]
mov	ecx, DWORD PTR [edx]
call	?Append@?$Vec@PAUTabState@@@@QAEXABQAUTabState@@@Z 
mov	eax, DWORD PTR _ds$2[ebp]
push	eax
call	?DeleteDisplayState@@YAXPAUFileState@@@Z 
add	esp, 4
jmp	$LN5@RememberSe
push	0
mov	eax, DWORD PTR _win$8[ebp]
mov	ecx, DWORD PTR [eax+88]
push	ecx
mov	ecx, DWORD PTR _win$8[ebp]
add	ecx, 4
call	?Find@?$Vec@PAVTabInfo@@@@QBEHPAVTabInfo@@I@Z 
add	eax, 1
mov	edx, DWORD PTR _data$7[ebp]
mov	DWORD PTR [edx+4], eax
mov	eax, DWORD PTR _win$8[ebp]
push	eax
call	?RememberDefaultWindowPosition@@YAXAAVWindowInfo@@@Z 
add	esp, 4
mov	eax, DWORD PTR _data$7[ebp]
mov	ecx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	edx, DWORD PTR [ecx+208]
mov	DWORD PTR [eax+8], edx
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
add	eax, 212				
mov	ecx, DWORD PTR _data$7[ebp]
add	ecx, 12					
mov	edx, DWORD PTR [eax]
mov	DWORD PTR [ecx], edx
mov	edx, DWORD PTR [eax+4]
mov	DWORD PTR [ecx+4], edx
mov	edx, DWORD PTR [eax+8]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR [eax+12]
mov	DWORD PTR [ecx+12], eax
mov	eax, DWORD PTR _data$7[ebp]
mov	ecx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	edx, DWORD PTR [ecx+232]
mov	DWORD PTR [eax+28], edx
lea	eax, DWORD PTR _data$7[ebp]
push	eax
mov	ecx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	ecx, DWORD PTR [ecx+248]
call	?Append@?$Vec@PAUSessionData@@@@QAEXABQAUSessionData@@@Z 
jmp	$LN2@RememberSe
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN19@RememberSe
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 340				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
DD	5
DD	$LN18@RememberSe
DD	-24					
DD	8
DD	$LN13@RememberSe
DD	-40					
DD	8
DD	$LN14@RememberSe
DD	-64					
DD	4
DD	$LN15@RememberSe
DD	-92					
DD	8
DD	$LN16@RememberSe
DD	-108					
DD	8
DD	$LN17@RememberSe
DB	60					
DB	101					
DB	110					
DB	100					
DB	62					
DB	36					
DB	76					
DB	49					
DB	0
DB	60					
DB	98					
DB	101					
DB	103					
DB	105					
DB	110					
DB	62					
DB	36					
DB	76					
DB	49					
DB	0
DB	100					
DB	97					
DB	116					
DB	97					
DB	0
DB	60					
DB	101					
DB	110					
DB	100					
DB	62					
DB	36					
DB	76					
DB	48					
DB	0
DB	60					
DB	98					
DB	101					
DB	103					
DB	105					
DB	110					
DB	62					
DB	36					
DB	76					
DB	48					
DB	0
ENDP
?FormatCursorPosition@@YAPA_WPAVBaseEngine@@V?$PointT@N@geomutil@@W4MeasurementUnit@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 260				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-260]
mov	ecx, 65					
mov	eax, -858993460				
rep stosd
movsd	xmm0, QWORD PTR __real@0000000000000000
comisd	xmm0, QWORD PTR _pt$[ebp]
jbe	SHORT $LN2@FormatCurs
movsd	xmm0, QWORD PTR __real@0000000000000000
movsd	QWORD PTR _pt$[ebp], xmm0
movsd	xmm0, QWORD PTR __real@0000000000000000
comisd	xmm0, QWORD PTR _pt$[ebp+8]
jbe	SHORT $LN3@FormatCurs
movsd	xmm0, QWORD PTR __real@0000000000000000
movsd	QWORD PTR _pt$[ebp+8], xmm0
mov	eax, DWORD PTR _engine$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR _engine$[ebp]
mov	eax, DWORD PTR [edx+84]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
fstp	QWORD PTR tv203[ebp]
movsd	xmm0, QWORD PTR _pt$[ebp]
divsd	xmm0, QWORD PTR tv203[ebp]
movsd	QWORD PTR _pt$[ebp], xmm0
mov	eax, DWORD PTR _engine$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR _engine$[ebp]
mov	eax, DWORD PTR [edx+84]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
fstp	QWORD PTR tv213[ebp]
movsd	xmm0, QWORD PTR _pt$[ebp+8]
divsd	xmm0, QWORD PTR tv213[ebp]
movsd	QWORD PTR _pt$[ebp+8], xmm0
cmp	DWORD PTR _unit$[ebp], 0
jne	SHORT $LN10@FormatCurs
movss	xmm0, DWORD PTR __real@42900000
movss	DWORD PTR tv81[ebp], xmm0
jmp	SHORT $LN11@FormatCurs
cmp	DWORD PTR _unit$[ebp], 1
jne	SHORT $LN8@FormatCurs
movss	xmm0, DWORD PTR __real@41cb3333
movss	DWORD PTR tv80[ebp], xmm0
jmp	SHORT $LN9@FormatCurs
movss	xmm0, DWORD PTR __real@3f800000
movss	DWORD PTR tv80[ebp], xmm0
movss	xmm0, DWORD PTR tv80[ebp]
movss	DWORD PTR tv81[ebp], xmm0
movss	xmm0, DWORD PTR tv81[ebp]
movss	DWORD PTR _factor$[ebp], xmm0
cmp	DWORD PTR _unit$[ebp], 0
jne	SHORT $LN14@FormatCurs
mov	DWORD PTR tv85[ebp], OFFSET ??_C@_15KBECGEFG@?$AAp?$AAt?$AA?$AA@
jmp	SHORT $LN15@FormatCurs
cmp	DWORD PTR _unit$[ebp], 1
jne	SHORT $LN12@FormatCurs
mov	DWORD PTR tv84[ebp], OFFSET ??_C@_15DDBLGNAG@?$AAm?$AAm?$AA?$AA@
jmp	SHORT $LN13@FormatCurs
mov	DWORD PTR tv84[ebp], OFFSET ??_C@_15LKDPIAPO@?$AAi?$AAn?$AA?$AA@
mov	eax, DWORD PTR tv84[ebp]
mov	DWORD PTR tv85[ebp], eax
mov	ecx, DWORD PTR tv85[ebp]
mov	DWORD PTR _unitName$[ebp], ecx
push	1024					
cvtss2sd xmm0, DWORD PTR _factor$[ebp]
mulsd	xmm0, QWORD PTR _pt$[ebp]
sub	esp, 8
movsd	QWORD PTR [esp], xmm0
call	?FormatFloatWithThousandSep@str@@YAPA_WNK@Z 
add	esp, 12					
push	eax
lea	ecx, DWORD PTR _xPos$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
push	1024					
cvtss2sd xmm0, DWORD PTR _factor$[ebp]
mulsd	xmm0, QWORD PTR _pt$[ebp+8]
sub	esp, 8
movsd	QWORD PTR [esp], xmm0
call	?FormatFloatWithThousandSep@str@@YAPA_WNK@Z 
add	esp, 12					
push	eax
lea	ecx, DWORD PTR _yPos$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
cmp	DWORD PTR _unit$[ebp], 2
je	$LN6@FormatCurs
lea	ecx, DWORD PTR _xPos$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
mov	esi, eax
lea	ecx, DWORD PTR _xPos$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?Len@str@@YAIPB_W@Z			
add	esp, 4
mov	ax, WORD PTR [esi+eax*2-4]
movzx	ecx, ax
push	ecx
call	?IsDigit@str@@YA_N_W@Z			
add	esp, 4
movzx	edx, al
test	edx, edx
je	SHORT $LN5@FormatCurs
lea	ecx, DWORD PTR _xPos$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
mov	esi, eax
lea	ecx, DWORD PTR _xPos$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?Len@str@@YAIPB_W@Z			
add	esp, 4
xor	ecx, ecx
mov	WORD PTR [esi+eax*2-2], cx
lea	ecx, DWORD PTR _yPos$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
mov	esi, eax
lea	ecx, DWORD PTR _yPos$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?Len@str@@YAIPB_W@Z			
add	esp, 4
mov	ax, WORD PTR [esi+eax*2-4]
movzx	ecx, ax
push	ecx
call	?IsDigit@str@@YA_N_W@Z			
add	esp, 4
movzx	edx, al
test	edx, edx
je	SHORT $LN6@FormatCurs
lea	ecx, DWORD PTR _yPos$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
mov	esi, eax
lea	ecx, DWORD PTR _yPos$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?Len@str@@YAIPB_W@Z			
add	esp, 4
xor	ecx, ecx
mov	WORD PTR [esi+eax*2-2], cx
mov	eax, DWORD PTR _unitName$[ebp]
push	eax
mov	ecx, DWORD PTR _yPos$[ebp]
push	ecx
mov	edx, DWORD PTR _xPos$[ebp]
push	edx
push	OFFSET ??_C@_1BG@ICINLKIC@?$AA?$CF?$AAs?$AA?5?$AAx?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$CF?$AAs?$AA?$AA@
call	?Format@str@@YAPA_WPB_WZZ		
add	esp, 16					
mov	DWORD PTR $T1[ebp], eax
lea	ecx, DWORD PTR _yPos$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _xPos$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
mov	eax, DWORD PTR $T1[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN19@FormatCurs
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 260				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
DD	2
DD	$LN18@FormatCurs
DD	-32					
DD	4
DD	$LN16@FormatCurs
DD	-44					
DD	4
DD	$LN17@FormatCurs
DB	121					
DB	80					
DB	111					
DB	115					
DB	0
DB	120					
DB	80					
DB	111					
DB	115					
DB	0
ENDP
??$?0V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@?$function@$$A6AXXZ@std@@QAE@V_lambda_3e43df60b671223f56f9731f4dfebb0f_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_class@X$$V@std@@QAE@XZ	
lea	eax, DWORD PTR __Func$[ebp]
push	eax
call	??$move@AAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@std@@YA$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??0_lambda_3e43df60b671223f56f9731f4dfebb0f_@@QAE@QAVTabReloadHandler@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR __This$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
??R_lambda_3e43df60b671223f56f9731f4dfebb0f_@@QBEXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	?FindWindowInfoByTab@@YAPAVWindowInfo@@PAVTabInfo@@@Z 
add	esp, 4
mov	DWORD PTR _win$[ebp], eax
cmp	DWORD PTR _win$[ebp], 0
jne	SHORT $LN2@operator
jmp	SHORT $LN1@operator
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+4]
mov	BYTE PTR [edx+120], 1
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx+4]
cmp	eax, DWORD PTR [edx+88]
jne	SHORT $LN1@operator
mov	esi, esp
push	0
push	100					
push	5
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	DWORD PTR __imp__SetTimer@16
cmp	esi, esp
call	__RTC_CheckEsp
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??_GTabReloadHandler@@UAEPAXI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1TabReloadHandler@@UAE@XZ
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	8
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1TabReloadHandler@@UAE@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1FileChangeObserver@@UAE@XZ		
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?OnFileChanged@TabReloadHandler@@UAEXXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 268				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-268]
mov	ecx, 67					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
push	eax
lea	ecx, DWORD PTR $T1[ebp]
call	??0<lambda_3e43df60b671223f56f9731f4dfebb0f>@@QAE@QAVTabReloadHandler@@@Z 
mov	ecx, DWORD PTR [eax]
push	ecx
lea	ecx, DWORD PTR $T2[ebp]
call	??$?0V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@?$function@$$A6AXXZ@std@@QAE@V<lambda_3e43df60b671223f56f9731f4dfebb0f>@@@Z 
lea	edx, DWORD PTR $T2[ebp]
push	edx
call	?Post@uitask@@YAXABV?$function@$$A6AXXZ@std@@@Z 
add	esp, 4
lea	ecx, DWORD PTR $T2[ebp]
call	??1?$function@$$A6AXXZ@std@@QAE@XZ	
pop	edi
pop	esi
pop	ebx
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
add	esp, 268				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0TabReloadHandler@@QAE@PAVTabInfo@@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0FileChangeObserver@@QAE@XZ
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7TabReloadHandler@@6B@
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _tab$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?Count@?$Vec@PAUFavorite@@@@QBEIXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [eax]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?RenameFileInHistory@@YAXPB_W0@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 256				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-256]
mov	ecx, 64					
mov	eax, -858993460				
rep stosd
push	0
mov	eax, DWORD PTR _newPath$[ebp]
push	eax
mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A 
call	?Find@FileHistory@@QBEPAUFileState@@PB_WPAI@Z 
mov	DWORD PTR _ds$[ebp], eax
mov	BYTE PTR _oldIsPinned$[ebp], 0
mov	DWORD PTR _oldOpenCount$[ebp], 0
cmp	DWORD PTR _ds$[ebp], 0
je	SHORT $LN2@RenameFile
mov	eax, DWORD PTR _ds$[ebp]
mov	cl, BYTE PTR [eax+8]
mov	BYTE PTR _oldIsPinned$[ebp], cl
mov	eax, DWORD PTR _ds$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _oldOpenCount$[ebp], ecx
mov	eax, DWORD PTR _ds$[ebp]
push	eax
mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A 
call	?Remove@FileHistory@@QAEXPAUFileState@@@Z 
mov	eax, DWORD PTR _ds$[ebp]
mov	ecx, DWORD PTR [eax+4]
call	?Count@?$Vec@PAUFavorite@@@@QBEIXZ	
test	eax, eax
jbe	SHORT $LN3@RenameFile
call	?UpdateFavoritesTreeForAllWindows@@YAXXZ 
mov	eax, DWORD PTR _ds$[ebp]
push	eax
call	?DeleteDisplayState@@YAXPAUFileState@@@Z 
add	esp, 4
push	0
mov	eax, DWORD PTR _oldPath$[ebp]
push	eax
mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A 
call	?Find@FileHistory@@QBEPAUFileState@@PB_WPAI@Z 
mov	DWORD PTR _ds$[ebp], eax
cmp	DWORD PTR _ds$[ebp], 0
je	$LN1@RenameFile
mov	eax, DWORD PTR _newPath$[ebp]
push	eax
mov	ecx, DWORD PTR _ds$[ebp]
push	ecx
call	?ReplacePtr@str@@YAXPAPA_WPB_W@Z	
add	esp, 8
mov	eax, DWORD PTR _ds$[ebp]
movzx	ecx, BYTE PTR [eax+8]
test	ecx, ecx
jne	SHORT $LN6@RenameFile
movzx	edx, BYTE PTR _oldIsPinned$[ebp]
test	edx, edx
jne	SHORT $LN6@RenameFile
mov	DWORD PTR tv92[ebp], 0
jmp	SHORT $LN7@RenameFile
mov	DWORD PTR tv92[ebp], 1
mov	eax, DWORD PTR _ds$[ebp]
mov	cl, BYTE PTR tv92[ebp]
mov	BYTE PTR [eax+8], cl
mov	eax, DWORD PTR _ds$[ebp]
mov	ecx, DWORD PTR [eax+12]
add	ecx, DWORD PTR _oldOpenCount$[ebp]
mov	edx, DWORD PTR _ds$[ebp]
mov	DWORD PTR [edx+12], ecx
mov	eax, DWORD PTR _ds$[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	DWORD PTR $T1[ebp], ecx
mov	edx, DWORD PTR $T1[ebp]
mov	DWORD PTR $T2[ebp], edx
cmp	DWORD PTR $T2[ebp], 0
je	SHORT $LN8@RenameFile
push	1
mov	ecx, DWORD PTR $T2[ebp]
call	??_GRenderedBitmap@@QAEPAXI@Z
mov	DWORD PTR tv134[ebp], eax
jmp	SHORT $LN9@RenameFile
mov	DWORD PTR tv134[ebp], 0
mov	eax, DWORD PTR _ds$[ebp]
mov	DWORD PTR [eax+88], 0
pop	edi
pop	esi
pop	ebx
add	esp, 256				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?CreateWindowInfo@@YAPAVWindowInfo@@XZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 328				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-328]
mov	ecx, 82					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
add	eax, 212				
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _windowPos$[ebp], ecx
mov	edx, DWORD PTR [eax+4]
mov	DWORD PTR _windowPos$[ebp+4], edx
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _windowPos$[ebp+8], ecx
mov	edx, DWORD PTR [eax+12]
mov	DWORD PTR _windowPos$[ebp+12], edx
lea	ecx, DWORD PTR _windowPos$[ebp]
call	?IsEmpty@?$RectT@H@geomutil@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN14@CreateWind
lea	eax, DWORD PTR _windowPos$[ebp]
push	eax
call	?EnsureAreaVisibility@@YAXAAV?$RectT@H@geomutil@@@Z 
add	esp, 4
jmp	SHORT $LN15@CreateWind
lea	eax, DWORD PTR $T4[ebp]
push	eax
call	?GetDefaultWindowPos@@YA?AV?$RectT@H@geomutil@@XZ 
add	esp, 4
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _windowPos$[ebp], ecx
mov	edx, DWORD PTR [eax+4]
mov	DWORD PTR _windowPos$[ebp+4], edx
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _windowPos$[ebp+8], ecx
mov	edx, DWORD PTR [eax+12]
mov	DWORD PTR _windowPos$[ebp+12], edx
mov	esi, esp
push	0
mov	edi, esp
push	0
call	DWORD PTR __imp__GetModuleHandleW@4
cmp	edi, esp
call	__RTC_CheckEsp
push	eax
push	0
push	0
mov	eax, DWORD PTR _windowPos$[ebp+12]
push	eax
mov	ecx, DWORD PTR _windowPos$[ebp+8]
push	ecx
mov	edx, DWORD PTR _windowPos$[ebp+4]
push	edx
mov	eax, DWORD PTR _windowPos$[ebp]
push	eax
push	47120384				
push	OFFSET ??_C@_1BG@BABBOKHF@?$AAS?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAP?$AAD?$AAF?$AA?$AA@
push	OFFSET ??_C@_1CE@PHGKLOIF@?$AAS?$AAU?$AAM?$AAA?$AAT?$AAR?$AAA?$AA_?$AAP?$AAD?$AAF?$AA_?$AAF?$AAR?$AAA?$AAM?$AAE?$AA?$AA@
push	0
call	DWORD PTR __imp__CreateWindowExW@48
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _hwndFrame$[ebp], eax
cmp	DWORD PTR _hwndFrame$[ebp], 0
jne	SHORT $LN5@CreateWind
xor	eax, eax
jmp	$LN1@CreateWind
xor	eax, eax
jne	SHORT $LN5@CreateWind
mov	eax, DWORD PTR _hwndFrame$[ebp]
push	eax
call	?FindWindowInfoByHwnd@@YAPAVWindowInfo@@PAUHWND__@@@Z 
add	esp, 4
test	eax, eax
je	SHORT $LN23@CreateWind
mov	BYTE PTR tv94[ebp], 1
jmp	SHORT $LN24@CreateWind
mov	BYTE PTR tv94[ebp], 0
movzx	ecx, BYTE PTR tv94[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@CreateWind
mov	eax, DWORD PTR ?__LINE__Var@?0??CreateWindowInfo@@YAPAVWindowInfo@@XZ@4JA
add	eax, 17					
push	eax
push	OFFSET ??_C@_0DC@LPCGCECE@c?3?2workspace?2sumatrapdf?9master?2s@
push	1
push	1192					
call	??2@YAPAXIHPBDH@Z			
add	esp, 16					
mov	DWORD PTR $T3[ebp], eax
cmp	DWORD PTR $T3[ebp], 0
je	SHORT $LN25@CreateWind
mov	ecx, DWORD PTR _hwndFrame$[ebp]
push	ecx
mov	ecx, DWORD PTR $T3[ebp]
call	??0WindowInfo@@QAE@PAUHWND__@@@Z	
mov	DWORD PTR tv142[ebp], eax
jmp	SHORT $LN26@CreateWind
mov	DWORD PTR tv142[ebp], 0
mov	edx, DWORD PTR tv142[ebp]
mov	DWORD PTR _win$[ebp], edx
mov	esi, esp
push	0
mov	edi, esp
push	0
call	DWORD PTR __imp__GetModuleHandleW@4
cmp	edi, esp
call	__RTC_CheckEsp
push	eax
push	0
mov	eax, DWORD PTR _hwndFrame$[ebp]
push	eax
push	0
push	0
push	0
push	0
push	1076887552				
push	0
push	OFFSET ??_C@_1CG@HPLMACE@?$AAS?$AAU?$AAM?$AAA?$AAT?$AAR?$AAA?$AA_?$AAP?$AAD?$AAF?$AA_?$AAC?$AAA?$AAN?$AAV?$AAA?$AAS?$AA?$AA@
push	0
call	DWORD PTR __imp__CreateWindowExW@48
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, DWORD PTR _win$[ebp]
mov	DWORD PTR [ecx+96], eax
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+96], 0
jne	SHORT $LN17@CreateWind
mov	eax, DWORD PTR _win$[ebp]
mov	DWORD PTR $T1[ebp], eax
mov	ecx, DWORD PTR $T1[ebp]
mov	DWORD PTR $T2[ebp], ecx
cmp	DWORD PTR $T2[ebp], 0
je	SHORT $LN27@CreateWind
push	1
mov	ecx, DWORD PTR $T2[ebp]
call	??_GWindowInfo@@QAEPAXI@Z
mov	DWORD PTR tv165[ebp], eax
jmp	SHORT $LN28@CreateWind
mov	DWORD PTR tv165[ebp], 0
xor	eax, eax
jmp	$LN1@CreateWind
movzx	eax, BYTE PTR ?gShowFrameRate@@3_NA	
test	eax, eax
je	SHORT $LN18@CreateWind
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	?AllocFrameRateWnd@@YAPAUFrameRateWnd@@PAUHWND__@@@Z 
add	esp, 4
mov	edx, DWORD PTR _win$[ebp]
mov	DWORD PTR [edx+1184], eax
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+1184]
push	ecx
call	?CreateFrameRateWnd@@YA_NPAUFrameRateWnd@@@Z 
add	esp, 4
mov	esi, esp
push	0
push	3
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	DWORD PTR __imp__ShowScrollBar@12
cmp	esi, esp
call	__RTC_CheckEsp
xor	eax, eax
jne	SHORT $LN11@CreateWind
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+288], 0
je	SHORT $LN29@CreateWind
mov	BYTE PTR tv181[ebp], 1
jmp	SHORT $LN30@CreateWind
mov	BYTE PTR tv181[ebp], 0
movzx	ecx, BYTE PTR tv181[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN11@CreateWind
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?BuildMenu@@YAPAUHMENU__@@PAVWindowInfo@@@Z 
add	esp, 4
mov	ecx, DWORD PTR _win$[ebp]
mov	DWORD PTR [ecx+288], eax
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+116]
test	ecx, ecx
jne	SHORT $LN31@CreateWind
mov	DWORD PTR tv191[ebp], 1
jmp	SHORT $LN32@CreateWind
mov	DWORD PTR tv191[ebp], 0
mov	edx, DWORD PTR _win$[ebp]
mov	al, BYTE PTR tv191[ebp]
mov	BYTE PTR [edx+292], al
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+292]
test	ecx, ecx
jne	SHORT $LN19@CreateWind
mov	esi, esp
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+288]
push	ecx
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [edx+92]
push	eax
call	DWORD PTR __imp__SetMenu@8
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
push	5
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	DWORD PTR __imp__ShowWindow@8
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	DWORD PTR __imp__UpdateWindow@4
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
push	0
mov	edi, esp
push	0
call	DWORD PTR __imp__GetModuleHandleW@4
cmp	edi, esp
call	__RTC_CheckEsp
push	eax
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
push	-2147483648				
push	-2147483648				
push	-2147483648				
push	-2147483648				
push	-2147483645				
push	0
push	OFFSET ??_C@_1CC@KPOKNCMJ@?$AAt?$AAo?$AAo?$AAl?$AAt?$AAi?$AAp?$AAs?$AA_?$AAc?$AAl?$AAa?$AAs?$AAs?$AA3?$AA2?$AA?$AA@
push	8
call	DWORD PTR __imp__CreateWindowExW@48
cmp	esi, esp
call	__RTC_CheckEsp
mov	edx, DWORD PTR _win$[ebp]
mov	DWORD PTR [edx+280], eax
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?CreateCaption@@YAXPAVWindowInfo@@@Z	
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?CreateTabbar@@YAXPAVWindowInfo@@@Z	
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?CreateToolbar@@YAXPAVWindowInfo@@@Z	
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?CreateSidebar@@YAXPAVWindowInfo@@@Z	
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?UpdateFindbox@@YAXPAVWindowInfo@@@Z	
add	esp, 4
push	2
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	eax, al
test	eax, eax
je	SHORT $LN20@CreateWind
cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	
jne	SHORT $LN20@CreateWind
mov	esi, esp
push	1
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	DWORD PTR __imp__DragAcceptFiles@8
cmp	esi, esp
call	__RTC_CheckEsp
lea	eax, DWORD PTR _win$[ebp]
push	eax
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?Append@?$Vec@PAVWindowInfo@@@@QAEXABQAVWindowInfo@@@Z 
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?UpdateWindowRtlLayout@@YAXPAVWindowInfo@@@Z 
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?UpdateToolbarSidebarText@@YAXPAVWindowInfo@@@Z 
add	esp, 4
call	?SupportsGestures@Touch@@YA_NXZ		
movzx	eax, al
test	eax, eax
je	SHORT $LN21@CreateWind
mov	DWORD PTR _gc$5[ebp], 0
mov	DWORD PTR _gc$5[ebp+4], 1
mov	DWORD PTR _gc$5[ebp+8], 0
push	12					
lea	eax, DWORD PTR _gc$5[ebp]
push	eax
push	1
push	0
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+96]
push	edx
call	?SetGestureConfig@Touch@@YAHPAUHWND__@@KIPAUtagGESTURECONFIG@@I@Z 
add	esp, 20					
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+241]
push	ecx
mov	edx, DWORD PTR _win$[ebp]
push	edx
call	?SetTabsInTitlebar@@YAXPAVWindowInfo@@_N@Z 
add	esp, 8
mov	eax, DWORD PTR _win$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN37@CreateWind
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
add	esp, 328				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	2
DD	3
DD	$LN36@CreateWind
DD	-24					
DD	16					
DD	$LN33@CreateWind
DD	-48					
DD	4
DD	$LN34@CreateWind
DD	-68					
DD	12					
DD	$LN35@CreateWind
DB	103					
DB	99					
DB	0
DB	119					
DB	105					
DB	110					
DB	0
DB	119					
DB	105					
DB	110					
DB	100					
DB	111					
DB	119					
DB	80					
DB	111					
DB	115					
DB	0
ENDP
?UpdateToolbarSidebarText@@YAXPAVWindowInfo@@@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
push	0
push	-1
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?UpdateToolbarPageText@@YAXPAVWindowInfo@@H_N@Z 
add	esp, 12					
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?UpdateToolbarFindText@@YAXPAVWindowInfo@@@Z 
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?UpdateToolbarButtonsToolTipsForWindow@@YAXPAVWindowInfo@@@Z 
add	esp, 4
push	OFFSET ??_C@_09BEAEIAPD@Bookmarks?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+140]
push	ecx
call	?SetLabel@@YAXPAULabelWithCloseWnd@@PB_W@Z 
add	esp, 8
push	OFFSET ??_C@_09KPJDHMFB@Favorites?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+156]
push	ecx
call	?SetLabel@@YAXPAULabelWithCloseWnd@@PB_W@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?CreateSidebar@@YAXPAVWindowInfo@@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 196				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-196]
mov	ecx, 49					
mov	eax, -858993460				
rep stosd
push	OFFSET ?SidebarSplitterCb@@YA_NPAX_N@Z	
mov	eax, DWORD PTR _win$[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+92]
push	edx
call	?CreateSplitter@@YAPAUSplitterWnd@@PAUHWND__@@W4SplitterType@@PAXP6A_N2_N@Z@Z 
add	esp, 16					
mov	ecx, DWORD PTR _win$[ebp]
mov	DWORD PTR [ecx+248], eax
xor	eax, eax
jne	SHORT $LN5@CreateSide
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+248], 0
jne	SHORT $LN17@CreateSide
mov	BYTE PTR tv74[ebp], 1
jmp	SHORT $LN18@CreateSide
mov	BYTE PTR tv74[ebp], 0
movzx	ecx, BYTE PTR tv74[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@CreateSide
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?CreateToc@@YAXPAVWindowInfo@@@Z	
add	esp, 4
push	OFFSET ?FavSplitterCb@@YA_NPAX_N@Z	
mov	eax, DWORD PTR _win$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+92]
push	edx
call	?CreateSplitter@@YAPAUSplitterWnd@@PAUHWND__@@W4SplitterType@@PAXP6A_N2_N@Z@Z 
add	esp, 16					
mov	ecx, DWORD PTR _win$[ebp]
mov	DWORD PTR [ecx+252], eax
xor	eax, eax
jne	SHORT $LN11@CreateSide
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+252], 0
jne	SHORT $LN19@CreateSide
mov	BYTE PTR tv88[ebp], 1
jmp	SHORT $LN20@CreateSide
mov	BYTE PTR tv88[ebp], 0
movzx	ecx, BYTE PTR tv88[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN11@CreateSide
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?CreateFavorites@@YAXPAVWindowInfo@@@Z	
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+149]
test	ecx, ecx
je	SHORT $LN14@CreateSide
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+136]
push	ecx
call	?RepaintNow@@YAXPAUHWND__@@@Z		
add	esp, 4
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+173]
test	ecx, ecx
je	SHORT $LN1@CreateSide
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+152]
push	ecx
call	?RepaintNow@@YAXPAUHWND__@@@Z		
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 196				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$limitValue@H@@YAHHHH@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _max$[ebp]
cmp	eax, DWORD PTR _min$[ebp]
jge	SHORT $LN5@limitValue
push	179					
push	OFFSET ??_C@_1GI@CIPNFEDJ@?$AAc?$AA?3?$AA?2?$AAw?$AAo?$AAr?$AAk?$AAs?$AAp?$AAa?$AAc?$AAe?$AA?2?$AAs?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAp?$AAd?$AAf?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs@
push	OFFSET ??_C@_1BG@HONCOKHP@?$AAm?$AAa?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAm?$AAi?$AAn?$AA?$AA@
call	__wassert
add	esp, 12					
mov	eax, DWORD PTR _val$[ebp]
cmp	eax, DWORD PTR _min$[ebp]
jge	SHORT $LN2@limitValue
mov	eax, DWORD PTR _min$[ebp]
jmp	SHORT $LN1@limitValue
mov	eax, DWORD PTR _val$[ebp]
cmp	eax, DWORD PTR _max$[ebp]
jle	SHORT $LN3@limitValue
mov	eax, DWORD PTR _max$[ebp]
jmp	SHORT $LN1@limitValue
mov	eax, DWORD PTR _val$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?LoadDocIntoCurrentTab@@YA_NAAULoadArgs@@PAVPasswordUI@@PAUFileState@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 548				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-548]
mov	ecx, 137				
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _args$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _win$[ebp], ecx
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	DWORD PTR _tab$[ebp], ecx
xor	eax, eax
jne	SHORT $LN4@LoadDocInt
cmp	DWORD PTR _tab$[ebp], 0
jne	SHORT $LN94@LoadDocInt
mov	BYTE PTR tv68[ebp], 1
jmp	SHORT $LN95@LoadDocInt
mov	BYTE PTR tv68[ebp], 0
movzx	eax, BYTE PTR tv68[ebp]
push	eax
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN4@LoadDocInt
cmp	DWORD PTR _state$[ebp], 0
jne	SHORT $LN39@LoadDocInt
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+164]
test	ecx, ecx
je	SHORT $LN39@LoadDocInt
push	0
mov	eax, DWORD PTR _args$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A 
call	?Find@FileHistory@@QBEPAUFileState@@PB_WPAI@Z 
mov	DWORD PTR _state$[ebp], eax
cmp	DWORD PTR _state$[ebp], 0
je	SHORT $LN39@LoadDocInt
mov	ecx, DWORD PTR _state$[ebp]
add	ecx, 52					
call	?IsEmpty@?$RectT@H@geomutil@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN40@LoadDocInt
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
add	eax, 212				
mov	ecx, DWORD PTR _state$[ebp]
add	ecx, 52					
mov	edx, DWORD PTR [eax]
mov	DWORD PTR [ecx], edx
mov	edx, DWORD PTR [eax+4]
mov	DWORD PTR [ecx+4], edx
mov	edx, DWORD PTR [eax+8]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR [eax+12]
mov	DWORD PTR [ecx+12], eax
mov	eax, DWORD PTR _state$[ebp]
add	eax, 52					
push	eax
call	?EnsureAreaVisibility@@YAXAAV?$RectT@H@geomutil@@@Z 
add	esp, 4
cmp	DWORD PTR _state$[ebp], 0
je	SHORT $LN41@LoadDocInt
mov	eax, DWORD PTR _state$[ebp]
movzx	ecx, BYTE PTR [eax+20]
test	ecx, ecx
je	SHORT $LN41@LoadDocInt
mov	DWORD PTR _state$[ebp], 0
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	ecx, DWORD PTR [eax+276]
mov	DWORD PTR _displayMode$[ebp], ecx
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movss	xmm0, DWORD PTR [eax+280]
movss	DWORD PTR _zoomVirtual$[ebp], xmm0
sub	esp, 8
movsd	xmm0, QWORD PTR __real@bff0000000000000
movsd	QWORD PTR [esp], xmm0
sub	esp, 8
movsd	xmm0, QWORD PTR __real@bff0000000000000
movsd	QWORD PTR [esp], xmm0
push	1
lea	ecx, DWORD PTR _ss$[ebp]
call	??0ScrollState@@QAE@HNN@Z		
mov	DWORD PTR _rotation$[ebp], 0
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	cl, BYTE PTR [eax+228]
mov	BYTE PTR _showToc$[ebp], cl
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
cmp	DWORD PTR [eax+208], 3
jne	SHORT $LN96@LoadDocInt
mov	DWORD PTR tv136[ebp], 1
jmp	SHORT $LN97@LoadDocInt
mov	DWORD PTR tv136[ebp], 0
mov	cl, BYTE PTR tv136[ebp]
mov	BYTE PTR _showAsFullScreen$[ebp], cl
mov	DWORD PTR _showType$[ebp], 1
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
cmp	DWORD PTR [eax+208], 2
je	SHORT $LN43@LoadDocInt
movzx	eax, BYTE PTR _showAsFullScreen$[ebp]
test	eax, eax
je	SHORT $LN42@LoadDocInt
mov	DWORD PTR _showType$[ebp], 3
cmp	DWORD PTR _state$[ebp], 0
je	$LN51@LoadDocInt
mov	eax, DWORD PTR _state$[ebp]
mov	ecx, DWORD PTR [eax+36]
mov	DWORD PTR _ss$[ebp], ecx
push	0
mov	eax, DWORD PTR _state$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
call	?ToDisplayMode@conv@prefs@@YA?AW4DisplayMode@@PB_WW43@@Z 
add	esp, 8
mov	DWORD PTR _displayMode$[ebp], eax
mov	eax, DWORD PTR _state$[ebp]
cmp	DWORD PTR [eax+48], 3
jne	SHORT $LN98@LoadDocInt
mov	DWORD PTR tv150[ebp], 1
jmp	SHORT $LN99@LoadDocInt
mov	DWORD PTR tv150[ebp], 0
mov	cl, BYTE PTR tv150[ebp]
mov	BYTE PTR _showAsFullScreen$[ebp], cl
mov	eax, DWORD PTR _state$[ebp]
cmp	DWORD PTR [eax+48], 1
jne	SHORT $LN45@LoadDocInt
mov	DWORD PTR _showType$[ebp], 1
jmp	SHORT $LN50@LoadDocInt
mov	eax, DWORD PTR _state$[ebp]
cmp	DWORD PTR [eax+48], 2
je	SHORT $LN49@LoadDocInt
movzx	eax, BYTE PTR _showAsFullScreen$[ebp]
test	eax, eax
je	SHORT $LN47@LoadDocInt
mov	DWORD PTR _showType$[ebp], 3
jmp	SHORT $LN50@LoadDocInt
mov	eax, DWORD PTR _state$[ebp]
cmp	DWORD PTR [eax+48], 4
jne	SHORT $LN50@LoadDocInt
mov	DWORD PTR _showType$[ebp], 6
mov	eax, DWORD PTR _state$[ebp]
mov	cl, BYTE PTR [eax+68]
mov	BYTE PTR _showToc$[ebp], cl
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN51@LoadDocInt
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
je	SHORT $LN51@LoadDocInt
mov	eax, DWORD PTR _tab$[ebp]
mov	cl, BYTE PTR [eax+13]
mov	BYTE PTR _showToc$[ebp], cl
push	0
mov	eax, DWORD PTR _args$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	?AbortFinding@@YAXPAVWindowInfo@@_N@Z	
add	esp, 8
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _prevCtrl$[ebp], ecx
mov	eax, DWORD PTR _args$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	?Dup@str@@YAPA_WPB_W@Z			
add	esp, 4
push	eax
mov	ecx, DWORD PTR _tab$[ebp]
call	?Set@?$ScopedMem@_W@@QAEXPA_W@Z		
cmp	DWORD PTR _state$[ebp], 0
je	SHORT $LN100@LoadDocInt
mov	eax, DWORD PTR _state$[ebp]
mov	ecx, DWORD PTR [eax+80]
mov	DWORD PTR tv180[ebp], ecx
jmp	SHORT $LN101@LoadDocInt
mov	DWORD PTR tv180[ebp], 0
mov	edx, DWORD PTR tv180[ebp]
push	edx
mov	eax, DWORD PTR _displayMode$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
mov	edx, DWORD PTR _pwdUI$[ebp]
push	edx
mov	eax, DWORD PTR _args$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	?CreateControllerForFile@@YAPAVController@@PB_WPAVPasswordUI@@PAVWindowInfo@@W4DisplayMode@@H@Z 
add	esp, 20					
mov	edx, DWORD PTR _tab$[ebp]
mov	DWORD PTR [edx+4], eax
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR _tab$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax], 0
jne	SHORT $LN102@LoadDocInt
mov	DWORD PTR tv191[ebp], 1
jmp	SHORT $LN103@LoadDocInt
mov	DWORD PTR tv191[ebp], 0
mov	cl, BYTE PTR tv191[ebp]
mov	BYTE PTR _needRefresh$[ebp], cl
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax], 0
jne	SHORT $LN53@LoadDocInt
mov	eax, DWORD PTR _args$[ebp]
movzx	ecx, BYTE PTR [eax+11]
test	ecx, ecx
je	$LN52@LoadDocInt
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ClearTocBox@@YAXPAVWindowInfo@@@Z	
add	esp, 4
mov	eax, DWORD PTR _tab$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR $T9[ebp], ecx
mov	edx, DWORD PTR $T9[ebp]
mov	DWORD PTR $T10[ebp], edx
cmp	DWORD PTR $T10[ebp], 0
je	SHORT $LN104@LoadDocInt
mov	esi, esp
push	1
mov	eax, DWORD PTR $T10[ebp]
mov	edx, DWORD PTR [eax]
mov	ecx, DWORD PTR $T10[ebp]
mov	eax, DWORD PTR [edx]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR tv206[ebp], eax
jmp	SHORT $LN105@LoadDocInt
mov	DWORD PTR tv206[ebp], 0
mov	eax, DWORD PTR _tab$[ebp]
mov	DWORD PTR [eax+16], 0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+856]
mov	DWORD PTR $T7[ebp], ecx
mov	edx, DWORD PTR $T7[ebp]
mov	DWORD PTR $T8[ebp], edx
cmp	DWORD PTR $T8[ebp], 0
je	SHORT $LN106@LoadDocInt
mov	esi, esp
push	1
mov	eax, DWORD PTR $T8[ebp]
mov	edx, DWORD PTR [eax]
mov	ecx, DWORD PTR $T8[ebp]
mov	eax, DWORD PTR [edx]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR tv215[ebp], eax
jmp	SHORT $LN107@LoadDocInt
mov	DWORD PTR tv215[ebp], 0
mov	eax, DWORD PTR _win$[ebp]
mov	DWORD PTR [eax+856], 0
xor	eax, eax
jne	SHORT $LN52@LoadDocInt
mov	ecx, DWORD PTR _win$[ebp]
call	?IsAboutWindow@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN110@LoadDocInt
mov	ecx, DWORD PTR _win$[ebp]
cmp	DWORD PTR [ecx], 0
je	SHORT $LN108@LoadDocInt
mov	DWORD PTR tv227[ebp], 1
jmp	SHORT $LN109@LoadDocInt
mov	DWORD PTR tv227[ebp], 0
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	edx, al
cmp	edx, DWORD PTR tv227[ebp]
jne	SHORT $LN110@LoadDocInt
mov	BYTE PTR tv229[ebp], 0
jmp	SHORT $LN111@LoadDocInt
mov	BYTE PTR tv229[ebp], 1
movzx	eax, BYTE PTR tv229[ebp]
push	eax
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN52@LoadDocInt
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax], 0
je	$LN54@LoadDocInt
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
je	$LN56@LoadDocInt
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	DWORD PTR _dm$14[ebp], eax
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
cmp	DWORD PTR [eax+160], 0
jle	SHORT $LN112@LoadDocInt
mov	ecx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	edx, DWORD PTR [ecx+160]
mov	DWORD PTR _dpi$13[ebp], edx
mov	eax, DWORD PTR _dpi$13[ebp]
mov	DWORD PTR tv245[ebp], eax
jmp	SHORT $LN113@LoadDocInt
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+92]
push	edx
call	?DpiGetPreciseX@@YAHPAUHWND__@@@Z	
add	esp, 4
mov	DWORD PTR tv245[ebp], eax
mov	eax, DWORD PTR tv245[ebp]
mov	DWORD PTR _dpi$13[ebp], eax
mov	eax, DWORD PTR _dpi$13[ebp]
push	eax
lea	ecx, DWORD PTR $T6[ebp]
push	ecx
mov	ecx, DWORD PTR _win$[ebp]
call	?GetViewPortSize@WindowInfo@@QAE?AV?$SizeT@H@geomutil@@XZ 
mov	edx, DWORD PTR [eax+4]
push	edx
mov	eax, DWORD PTR [eax]
push	eax
mov	ecx, DWORD PTR _ss$[ebp]
push	ecx
mov	edx, DWORD PTR _displayMode$[ebp]
push	edx
mov	ecx, DWORD PTR _dm$14[ebp]
call	?SetInitialViewSettings@DisplayModel@@QAEXW4DisplayMode@@HV?$SizeT@H@geomutil@@H@Z 
mov	ecx, DWORD PTR _tab$[ebp]
call	?GetEngineType@TabInfo@@QBE?AW4EngineType@@XZ 
cmp	eax, 6
je	SHORT $LN59@LoadDocInt
mov	ecx, DWORD PTR _tab$[ebp]
call	?GetEngineType@TabInfo@@QBE?AW4EngineType@@XZ 
cmp	eax, 5
jne	SHORT $LN58@LoadDocInt
cmp	DWORD PTR _state$[ebp], 0
je	SHORT $LN114@LoadDocInt
mov	eax, DWORD PTR _state$[ebp]
mov	cl, BYTE PTR [eax+76]
mov	BYTE PTR tv265[ebp], cl
jmp	SHORT $LN115@LoadDocInt
mov	edx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	al, BYTE PTR [edx+100]
mov	BYTE PTR tv265[ebp], al
movzx	ecx, BYTE PTR tv265[ebp]
push	ecx
mov	ecx, DWORD PTR _dm$14[ebp]
call	?SetDisplayR2L@DisplayModel@@QAEX_N@Z	
cmp	DWORD PTR _prevCtrl$[ebp], 0
je	$LN60@LoadDocInt
mov	eax, DWORD PTR _prevCtrl$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR _prevCtrl$[ebp]
mov	eax, DWORD PTR [edx+120]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	$LN60@LoadDocInt
mov	eax, DWORD PTR _prevCtrl$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR _prevCtrl$[ebp]
mov	eax, DWORD PTR [edx+4]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [edx]
mov	esi, esp
mov	ecx, DWORD PTR [eax]
mov	eax, DWORD PTR [edx+4]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
call	?Eq@str@@YA_NPB_W0@Z			
add	esp, 8
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN60@LoadDocInt
mov	eax, DWORD PTR _dm$14[ebp]
push	eax
mov	ecx, DWORD PTR _prevCtrl$[ebp]
mov	edx, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR _prevCtrl$[ebp]
mov	eax, DWORD PTR [edx+120]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
mov	ecx, OFFSET ?gRenderCache@@3VRenderCache@@A 
call	?KeepForDisplayModel@RenderCache@@QAEXPAVDisplayModel@@0@Z 
mov	eax, DWORD PTR _prevCtrl$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR _prevCtrl$[ebp]
mov	eax, DWORD PTR [edx+120]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
mov	ecx, DWORD PTR _dm$14[ebp]
call	?CopyNavHistory@DisplayModel@@QAEXAAV1@@Z 
mov	eax, DWORD PTR _args$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	?LoadFileModifications@@YAPAV?$Vec@UPageAnnotation@@@@PB_W@Z 
add	esp, 4
mov	edx, DWORD PTR _dm$14[ebp]
mov	DWORD PTR [edx+12], eax
mov	eax, DWORD PTR _dm$14[ebp]
mov	BYTE PTR [eax+16], 0
mov	ecx, DWORD PTR _dm$14[ebp]
call	?GetEngine@DisplayModel@@QBEPAVBaseEngine@@XZ 
mov	DWORD PTR tv311[ebp], eax
mov	esi, esp
mov	eax, DWORD PTR _dm$14[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR tv311[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR tv311[ebp]
mov	edx, DWORD PTR [eax+72]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+1188], 0
je	SHORT $LN61@LoadDocInt
mov	eax, DWORD PTR _dm$14[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [ecx+1188]
call	?OnDocumentLoad@SumatraUIAutomationProvider@@QAEXPAVDisplayModel@@@Z 
jmp	$LN15@LoadDocInt
mov	ecx, DWORD PTR _win$[ebp]
call	?AsChm@WindowInfo@@QBEPAVChmModel@@XZ	
test	eax, eax
je	SHORT $LN62@LoadDocInt
mov	esi, esp
push	0
mov	eax, DWORD PTR _displayMode$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
mov	eax, DWORD PTR [edx+36]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
push	0
mov	eax, DWORD PTR _ss$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
mov	eax, DWORD PTR [edx+24]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN15@LoadDocInt
mov	ecx, DWORD PTR _win$[ebp]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
test	eax, eax
je	$LN64@LoadDocInt
cmp	DWORD PTR _prevCtrl$[ebp], 0
je	$LN66@LoadDocInt
mov	eax, DWORD PTR _prevCtrl$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR _prevCtrl$[ebp]
mov	eax, DWORD PTR [edx+128]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	$LN66@LoadDocInt
mov	eax, DWORD PTR _prevCtrl$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR _prevCtrl$[ebp]
mov	eax, DWORD PTR [edx+4]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [edx]
mov	esi, esp
mov	ecx, DWORD PTR [eax]
mov	eax, DWORD PTR [edx+4]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
call	?Eq@str@@YA_NPB_W0@Z			
add	esp, 8
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN66@LoadDocInt
mov	eax, DWORD PTR _prevCtrl$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR _prevCtrl$[ebp]
mov	eax, DWORD PTR [edx+128]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [edx]
mov	esi, esp
mov	ecx, DWORD PTR [eax]
mov	eax, DWORD PTR [edx+128]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, eax
call	?CopyNavHistory@EbookController@@QAEXAAV1@@Z 
jmp	SHORT $LN15@LoadDocInt
xor	eax, eax
jne	SHORT $LN64@LoadDocInt
push	1
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN64@LoadDocInt
mov	eax, DWORD PTR _prevCtrl$[ebp]
mov	DWORD PTR $T4[ebp], eax
mov	ecx, DWORD PTR $T4[ebp]
mov	DWORD PTR $T5[ebp], ecx
cmp	DWORD PTR $T5[ebp], 0
je	SHORT $LN116@LoadDocInt
mov	esi, esp
push	1
mov	edx, DWORD PTR $T5[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR $T5[ebp]
mov	edx, DWORD PTR [eax]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR tv391[ebp], eax
jmp	SHORT $LN117@LoadDocInt
mov	DWORD PTR tv391[ebp], 0
jmp	$LN68@LoadDocInt
mov	eax, DWORD PTR _args$[ebp]
movzx	ecx, BYTE PTR [eax+11]
test	ecx, ecx
jne	SHORT $LN69@LoadDocInt
cmp	DWORD PTR _prevCtrl$[ebp], 0
jne	$LN67@LoadDocInt
xor	eax, eax
jne	SHORT $LN69@LoadDocInt
mov	eax, DWORD PTR _args$[ebp]
movzx	ecx, BYTE PTR [eax+11]
test	ecx, ecx
jne	SHORT $LN118@LoadDocInt
mov	BYTE PTR tv400[ebp], 1
jmp	SHORT $LN119@LoadDocInt
mov	BYTE PTR tv400[ebp], 0
movzx	edx, BYTE PTR tv400[ebp]
push	edx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN69@LoadDocInt
mov	eax, DWORD PTR _prevCtrl$[ebp]
mov	DWORD PTR $T2[ebp], eax
mov	ecx, DWORD PTR $T2[ebp]
mov	DWORD PTR $T3[ebp], ecx
cmp	DWORD PTR $T3[ebp], 0
je	SHORT $LN120@LoadDocInt
mov	esi, esp
push	1
mov	edx, DWORD PTR $T3[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR $T3[ebp]
mov	edx, DWORD PTR [eax]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR tv409[ebp], eax
jmp	SHORT $LN121@LoadDocInt
mov	DWORD PTR tv409[ebp], 0
mov	DWORD PTR _state$[ebp], 0
jmp	SHORT $LN68@LoadDocInt
mov	eax, DWORD PTR _tab$[ebp]
mov	ecx, DWORD PTR _prevCtrl$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR _tab$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR [eax], edx
cmp	DWORD PTR _state$[ebp], 0
je	$LN70@LoadDocInt
xor	eax, eax
jne	SHORT $LN28@LoadDocInt
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN122@LoadDocInt
mov	BYTE PTR tv419[ebp], 1
jmp	SHORT $LN123@LoadDocInt
mov	BYTE PTR tv419[ebp], 0
movzx	ecx, BYTE PTR tv419[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN28@LoadDocInt
push	ecx
movss	xmm0, DWORD PTR __real@bf800000
movss	DWORD PTR [esp], xmm0
mov	eax, DWORD PTR _state$[ebp]
mov	ecx, DWORD PTR [eax+40]
push	ecx
call	?ToZoom@conv@prefs@@YAMPBDM@Z		
add	esp, 8
fstp	DWORD PTR _zoomVirtual$[ebp]
mov	esi, esp
mov	eax, DWORD PTR _ss$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
mov	eax, DWORD PTR [edx+100]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN71@LoadDocInt
movss	xmm0, DWORD PTR __real@c0400000
ucomiss	xmm0, DWORD PTR _zoomVirtual$[ebp]
lahf
test	ah, 68					
jnp	SHORT $LN73@LoadDocInt
mov	eax, DWORD PTR _state$[ebp]
cvtsi2sd xmm0, DWORD PTR [eax+28]
movsd	QWORD PTR _ss$[ebp+8], xmm0
mov	eax, DWORD PTR _state$[ebp]
cvtsi2sd xmm0, DWORD PTR [eax+32]
movsd	QWORD PTR _ss$[ebp+16], xmm0
jmp	SHORT $LN74@LoadDocInt
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+12]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
jle	SHORT $LN74@LoadDocInt
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+12]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
push	1
mov	eax, DWORD PTR _ss$[ebp]
push	eax
call	??$limitValue@H@@YAHHHH@Z		
add	esp, 12					
mov	DWORD PTR _ss$[ebp], eax
mov	eax, DWORD PTR _state$[ebp]
mov	ecx, DWORD PTR [eax+44]
mov	DWORD PTR _rotation$[ebp], ecx
mov	eax, DWORD PTR _state$[ebp]
mov	ecx, DWORD PTR [eax+84]
push	ecx
mov	ecx, DWORD PTR _tab$[ebp]
add	ecx, 20					
call	??4?$Vec@H@@QAEAAV0@ABV0@@Z		
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
je	SHORT $LN75@LoadDocInt
mov	eax, DWORD PTR _rotation$[ebp]
push	eax
push	ecx
movss	xmm0, DWORD PTR _zoomVirtual$[ebp]
movss	DWORD PTR [esp], xmm0
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	ecx, eax
call	?Relayout@DisplayModel@@QAEXMH@Z	
jmp	SHORT $LN77@LoadDocInt
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN77@LoadDocInt
mov	esi, esp
push	0
push	ecx
movss	xmm0, DWORD PTR _zoomVirtual$[ebp]
movss	DWORD PTR [esp], xmm0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+48]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, DWORD PTR _args$[ebp]
movzx	ecx, BYTE PTR [eax+10]
test	ecx, ecx
jne	SHORT $LN78@LoadDocInt
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN78@LoadDocInt
push	0
mov	ecx, DWORD PTR _win$[ebp]
call	?RedrawAll@WindowInfo@@QAEX_N@Z		
movzx	eax, BYTE PTR _needRefresh$[ebp]
push	eax
mov	ecx, DWORD PTR _tab$[ebp]
push	ecx
call	?SetFrameTitleForTab@@YAXPAVTabInfo@@_N@Z 
add	esp, 8
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?UpdateUiForCurrentTab@@YAXPAVWindowInfo@@@Z 
add	esp, 4
push	2
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	eax, al
test	eax, eax
je	$LN80@LoadDocInt
mov	ecx, DWORD PTR _tab$[ebp]
call	?GetEngineType@TabInfo@@QBE?AW4EngineType@@XZ 
cmp	eax, 1
jne	$LN80@LoadDocInt
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
cmp	ecx, DWORD PTR _prevCtrl$[ebp]
je	$LN80@LoadDocInt
xor	eax, eax
jne	SHORT $LN34@LoadDocInt
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
je	SHORT $LN124@LoadDocInt
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
cmp	DWORD PTR [eax+20], 0
jne	SHORT $LN124@LoadDocInt
mov	BYTE PTR tv520[ebp], 0
jmp	SHORT $LN125@LoadDocInt
mov	BYTE PTR tv520[ebp], 1
movzx	eax, BYTE PTR tv520[ebp]
push	eax
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN34@LoadDocInt
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
add	eax, 20					
push	eax
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	ecx, eax
call	?GetEngine@DisplayModel@@QBEPAVBaseEngine@@XZ 
push	eax
mov	eax, DWORD PTR _args$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	?Create@Synchronizer@@SAHPB_WPAVBaseEngine@@PAPAV1@@Z 
add	esp, 12					
mov	DWORD PTR _res$12[ebp], eax
cmp	DWORD PTR _res$12[ebp], 0
jne	SHORT $LN80@LoadDocInt
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	BYTE PTR [eax+196], 1
mov	ecx, DWORD PTR _win$[ebp]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
test	eax, eax
je	SHORT $LN81@LoadDocInt
push	1
mov	ecx, DWORD PTR _win$[ebp]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
mov	ecx, eax
call	?EnableMessageHandling@EbookController@@QAEX_N@Z 
mov	eax, DWORD PTR _args$[ebp]
movzx	ecx, BYTE PTR [eax+10]
test	ecx, ecx
jne	SHORT $LN83@LoadDocInt
mov	eax, DWORD PTR _args$[ebp]
movzx	ecx, BYTE PTR [eax+12]
test	ecx, ecx
je	$LN82@LoadDocInt
cmp	DWORD PTR _state$[ebp], 0
je	$LN82@LoadDocInt
mov	eax, DWORD PTR _args$[ebp]
movzx	ecx, BYTE PTR [eax+10]
test	ecx, ecx
je	$LN84@LoadDocInt
cmp	DWORD PTR _state$[ebp], 0
je	SHORT $LN84@LoadDocInt
mov	ecx, DWORD PTR _state$[ebp]
add	ecx, 52					
call	?IsEmpty@?$RectT@H@geomutil@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN84@LoadDocInt
push	0
mov	eax, DWORD PTR _state$[ebp]
add	eax, 52					
sub	esp, 16					
mov	ecx, esp
mov	edx, DWORD PTR [eax]
mov	DWORD PTR [ecx], edx
mov	edx, DWORD PTR [eax+4]
mov	DWORD PTR [ecx+4], edx
mov	edx, DWORD PTR [eax+8]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR [eax+12]
mov	DWORD PTR [ecx+12], eax
lea	ecx, DWORD PTR _rect$11[ebp]
push	ecx
call	?ShiftRectToWorkArea@@YA?AV?$RectT@H@geomutil@@V12@_N@Z 
add	esp, 24					
sub	esp, 16					
mov	eax, esp
mov	ecx, DWORD PTR _rect$11[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _rect$11[ebp+4]
mov	DWORD PTR [eax+4], edx
mov	ecx, DWORD PTR _rect$11[ebp+8]
mov	DWORD PTR [eax+8], ecx
mov	edx, DWORD PTR _rect$11[ebp+12]
mov	DWORD PTR [eax+12], edx
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	?MoveWindow@@YAXPAUHWND__@@V?$RectT@H@geomutil@@@Z 
add	esp, 20					
mov	eax, DWORD PTR _args$[ebp]
movzx	ecx, BYTE PTR [eax+8]
test	ecx, ecx
je	SHORT $LN85@LoadDocInt
mov	esi, esp
mov	eax, DWORD PTR _showType$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+92]
push	edx
call	DWORD PTR __imp__ShowWindow@8
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__UpdateWindow@4
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+173]
push	ecx
movzx	edx, BYTE PTR _showToc$[ebp]
push	edx
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?SetSidebarVisibility@@YAXPAVWindowInfo@@_N1@Z 
add	esp, 12					
mov	eax, DWORD PTR _args$[ebp]
movzx	ecx, BYTE PTR [eax+8]
test	ecx, ecx
jne	SHORT $LN87@LoadDocInt
cmp	DWORD PTR _ss$[ebp], 1
je	SHORT $LN86@LoadDocInt
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
je	SHORT $LN86@LoadDocInt
sub	esp, 24					
mov	eax, esp
mov	ecx, DWORD PTR _ss$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _ss$[ebp+4]
mov	DWORD PTR [eax+4], edx
mov	ecx, DWORD PTR _ss$[ebp+8]
mov	DWORD PTR [eax+8], ecx
mov	edx, DWORD PTR _ss$[ebp+12]
mov	DWORD PTR [eax+12], edx
mov	ecx, DWORD PTR _ss$[ebp+16]
mov	DWORD PTR [eax+16], ecx
mov	edx, DWORD PTR _ss$[ebp+20]
mov	DWORD PTR [eax+20], edx
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	ecx, eax
call	?SetScrollState@DisplayModel@@QAEXUScrollState@@@Z 
push	1
mov	ecx, DWORD PTR _win$[ebp]
call	?RedrawAll@WindowInfo@@QAEX_N@Z		
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN88@LoadDocInt
xor	al, al
jmp	$LN1@LoadDocInt
mov	esi, esp
push	7
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+16]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
lea	ecx, DWORD PTR _unsupported$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
lea	ecx, DWORD PTR _unsupported$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
test	eax, eax
je	SHORT $LN89@LoadDocInt
mov	eax, DWORD PTR _unsupported$[ebp]
push	eax
push	OFFSET ??_C@_0EL@BNLLDEFL@This?5document?5uses?5unsupported?5f@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
call	?Format@str@@YAPA_WPB_WZZ		
add	esp, 8
push	eax
lea	ecx, DWORD PTR _unsupported$[ebp]
call	?Set@?$ScopedMem@_W@@QAEXPA_W@Z		
push	3
push	3
lea	ecx, DWORD PTR _unsupported$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	ecx, DWORD PTR _win$[ebp]
call	?ShowNotification@WindowInfo@@QAEXPB_WHW4NotificationGroup@@@Z 
mov	eax, DWORD PTR _args$[ebp]
movzx	ecx, BYTE PTR [eax+10]
test	ecx, ecx
jne	SHORT $LN91@LoadDocInt
mov	eax, DWORD PTR _args$[ebp]
movzx	ecx, BYTE PTR [eax+12]
test	ecx, ecx
je	SHORT $LN90@LoadDocInt
mov	eax, DWORD PTR _args$[ebp]
movzx	ecx, BYTE PTR [eax+8]
test	ecx, ecx
je	SHORT $LN90@LoadDocInt
movzx	eax, BYTE PTR _showAsFullScreen$[ebp]
test	eax, eax
je	SHORT $LN90@LoadDocInt
push	0
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?EnterFullScreen@@YAXPAVWindowInfo@@_N@Z 
add	esp, 8
mov	eax, DWORD PTR _args$[ebp]
movzx	ecx, BYTE PTR [eax+10]
test	ecx, ecx
jne	SHORT $LN92@LoadDocInt
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
je	SHORT $LN92@LoadDocInt
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN92@LoadDocInt
mov	esi, esp
push	1
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+44]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	BYTE PTR $T1[ebp], 1
lea	ecx, DWORD PTR _unsupported$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
mov	al, BYTE PTR $T1[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN130@LoadDocInt
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 548				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
DD	3
DD	$LN129@LoadDocInt
DD	-76					
DD	24					
DD	$LN126@LoadDocInt
DD	-208					
DD	16					
DD	$LN127@LoadDocInt
DD	-220					
DD	4
DD	$LN128@LoadDocInt
DB	117					
DB	110					
DB	115					
DB	117					
DB	112					
DB	112					
DB	111					
DB	114					
DB	116					
DB	101					
DB	100					
DB	0
DB	114					
DB	101					
DB	99					
DB	116					
DB	0
DB	115					
DB	115					
DB	0
ENDP
?UpdateUiForCurrentTab@@YAXPAVWindowInfo@@@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
jne	SHORT $LN2@UpdateUiFo
mov	esi, esp
push	0
push	3
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	DWORD PTR __imp__ShowScrollBar@12
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?RebuildMenuBarForWindow@@YAXPAVWindowInfo@@@Z 
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ShowOrHideToolbar@@YAXPAVWindowInfo@@@Z 
add	esp, 4
push	1
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ToolbarUpdateStateForWindow@@YAXPAVWindowInfo@@_N@Z 
add	esp, 8
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?UpdateToolbarState@@YAXPAVWindowInfo@@@Z 
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN4@UpdateUiFo
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [edx]
mov	esi, esp
mov	ecx, DWORD PTR [eax]
mov	eax, DWORD PTR [edx+12]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR tv86[ebp], eax
jmp	SHORT $LN5@UpdateUiFo
mov	DWORD PTR tv86[ebp], 0
mov	ecx, DWORD PTR tv86[ebp]
mov	DWORD PTR _pageCount$[ebp], ecx
push	0
mov	eax, DWORD PTR _pageCount$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?UpdateToolbarPageText@@YAXPAVWindowInfo@@H_N@Z 
add	esp, 12					
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?UpdateToolbarFindText@@YAXPAVWindowInfo@@@Z 
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?OnMenuFindMatchCase@@YAXPAVWindowInfo@@@Z 
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?UpdateFindbox@@YAXPAVWindowInfo@@@Z	
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
add	ecx, 8
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+92]
push	edx
call	?SetText@win@@YAXPAUHWND__@@PB_W@Z	
add	esp, 8
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?UpdateCurrentTabBgColor@@YAXPAVWindowInfo@@@Z 
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN6@UpdateUiFo
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [edx]
mov	esi, esp
mov	ecx, DWORD PTR [eax]
mov	eax, DWORD PTR [edx+88]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN6@UpdateUiFo
mov	DWORD PTR tv145[ebp], 0
jmp	SHORT $LN7@UpdateUiFo
mov	DWORD PTR tv145[ebp], 1
mov	dl, BYTE PTR tv145[ebp]
mov	BYTE PTR _onlyNumbers$[ebp], dl
push	-16					
movzx	eax, BYTE PTR _onlyNumbers$[ebp]
push	eax
push	8192					
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+124]
push	edx
call	?ToggleWindowStyle@@YAXPAUHWND__@@K_NH@Z 
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$IsEmpty@_W@str@@YA_NPA_W@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 196				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-196]
mov	ecx, 49					
mov	eax, -858993460				
rep stosd
cmp	DWORD PTR _s$[ebp], 0
je	SHORT $LN3@IsEmpty
mov	eax, DWORD PTR _s$[ebp]
movzx	ecx, WORD PTR [eax]
test	ecx, ecx
je	SHORT $LN3@IsEmpty
mov	DWORD PTR tv67[ebp], 0
jmp	SHORT $LN4@IsEmpty
mov	DWORD PTR tv67[ebp], 1
mov	al, BYTE PTR tv67[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?SetFrameTitleForTab@@YAXPAVTabInfo@@_N@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
mov	ecx, DWORD PTR _tab$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
mov	DWORD PTR _titlePath$[ebp], eax
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+118]
test	ecx, ecx
jne	SHORT $LN2@SetFrameTi
mov	eax, DWORD PTR _titlePath$[ebp]
push	eax
call	?GetBaseName@path@@YAPB_WPB_W@Z		
add	esp, 4
mov	DWORD PTR _titlePath$[ebp], eax
lea	ecx, DWORD PTR _docTitle$[ebp]
call	??0?$ScopedMem@_W@@QAE@XZ		
mov	eax, DWORD PTR _tab$[ebp]
cmp	DWORD PTR [eax+4], 0
je	SHORT $LN3@SetFrameTi
mov	esi, esp
push	0
mov	eax, DWORD PTR _tab$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _tab$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx+4]
mov	edx, DWORD PTR [eax+16]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
lea	ecx, DWORD PTR _docTitle$[ebp]
call	??4?$ScopedMem@_W@@QAEAAV0@PA_W@Z	
mov	ecx, eax
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
test	eax, eax
je	SHORT $LN3@SetFrameTi
lea	ecx, DWORD PTR _docTitle$[ebp]
call	?Get@?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?NormalizeWS@str@@YAIPA_W@Z		
add	esp, 4
lea	ecx, DWORD PTR _docTitle$[ebp]
call	?Get@?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	??$IsEmpty@_W@str@@YA_NPA_W@Z		
add	esp, 4
movzx	eax, al
test	eax, eax
jne	SHORT $LN3@SetFrameTi
mov	eax, DWORD PTR _docTitle$[ebp]
push	eax
push	OFFSET ??_C@_1BA@BGDFOBKE@?$AA?9?$AA?5?$AA?$FL?$AA?$CF?$AAs?$AA?$FN?$AA?5?$AA?$AA@
call	?Format@str@@YAPA_WPB_WZZ		
add	esp, 8
push	eax
lea	ecx, DWORD PTR _docTitle$[ebp]
call	??4?$ScopedMem@_W@@QAEAAV0@PA_W@Z	
call	?IsUIRightToLeft@@YA_NXZ		
movzx	eax, al
test	eax, eax
jne	SHORT $LN5@SetFrameTi
lea	ecx, DWORD PTR _docTitle$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
test	eax, eax
je	SHORT $LN9@SetFrameTi
lea	ecx, DWORD PTR _docTitle$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
mov	DWORD PTR tv150[ebp], eax
jmp	SHORT $LN10@SetFrameTi
mov	DWORD PTR tv150[ebp], OFFSET ??_C@_11LOCGONAA@?$AA?$AA@
push	OFFSET ??_C@_1BG@BABBOKHF@?$AAS?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAP?$AAD?$AAF?$AA?$AA@
mov	eax, DWORD PTR tv150[ebp]
push	eax
mov	ecx, DWORD PTR _titlePath$[ebp]
push	ecx
push	OFFSET ??_C@_1BE@ICKAOCEB@?$AA?$CF?$AAs?$AA?5?$AA?$CF?$AAs?$AA?9?$AA?5?$AA?$CF?$AAs?$AA?$AA@
call	?Format@str@@YAPA_WPB_WZZ		
add	esp, 16					
push	eax
mov	ecx, DWORD PTR _tab$[ebp]
add	ecx, 8
call	?Set@?$ScopedMem@_W@@QAEXPA_W@Z		
jmp	SHORT $LN6@SetFrameTi
lea	ecx, DWORD PTR _docTitle$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
test	eax, eax
je	SHORT $LN11@SetFrameTi
lea	ecx, DWORD PTR _docTitle$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
mov	DWORD PTR tv164[ebp], eax
jmp	SHORT $LN12@SetFrameTi
mov	DWORD PTR tv164[ebp], OFFSET ??_C@_11LOCGONAA@?$AA?$AA@
mov	eax, DWORD PTR _titlePath$[ebp]
push	eax
mov	ecx, DWORD PTR tv164[ebp]
push	ecx
push	OFFSET ??_C@_1BG@BABBOKHF@?$AAS?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAP?$AAD?$AAF?$AA?$AA@
push	OFFSET ??_C@_1BE@ICKAOCEB@?$AA?$CF?$AAs?$AA?5?$AA?$CF?$AAs?$AA?9?$AA?5?$AA?$CF?$AAs?$AA?$AA@
call	?Format@str@@YAPA_WPB_WZZ		
add	esp, 16					
push	eax
mov	ecx, DWORD PTR _tab$[ebp]
add	ecx, 8
call	?Set@?$ScopedMem@_W@@QAEXPA_W@Z		
movzx	eax, BYTE PTR _needRefresh$[ebp]
test	eax, eax
je	SHORT $LN7@SetFrameTi
mov	eax, DWORD PTR _tab$[ebp]
cmp	DWORD PTR [eax+4], 0
je	SHORT $LN7@SetFrameTi
mov	eax, DWORD PTR _tab$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
push	OFFSET ??_C@_0CC@LBCDOGCP@?$FLChanges?5detected?$DL?5refreshing?$FN?5?$CF@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
call	?Format@str@@YAPA_WPB_WZZ		
add	esp, 8
push	eax
mov	ecx, DWORD PTR _tab$[ebp]
add	ecx, 8
call	?Set@?$ScopedMem@_W@@QAEXPA_W@Z		
lea	ecx, DWORD PTR _docTitle$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN15@SetFrameTi
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	2
DD	1
DD	$LN14@SetFrameTi
DD	-20					
DD	4
DD	$LN13@SetFrameTi
DB	100					
DB	111					
DB	99					
DB	84					
DB	105					
DB	116					
DB	108					
DB	101					
DB	0
ENDP
?CreateControllerForFile@@YAPAVController@@PB_WPAVPasswordUI@@PAVWindowInfo@@W4DisplayMode@@H@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 332				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-332]
mov	ecx, 83					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+864], 0
jne	SHORT $LN38@CreateCont
mov	eax, DWORD PTR ?__LINE__Var@?0??CreateControllerForFile@@YAPAVController@@PB_WPAVPasswordUI@@PAVWindowInfo@@W4DisplayMode@@H@Z@4JA
add	eax, 2
push	eax
push	OFFSET ??_C@_0DC@LPCGCECE@c?3?2workspace?2sumatrapdf?9master?2s@
push	1
push	8
call	??2@YAPAXIHPBDH@Z			
add	esp, 16					
mov	DWORD PTR $T4[ebp], eax
cmp	DWORD PTR $T4[ebp], 0
je	SHORT $LN49@CreateCont
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
mov	ecx, DWORD PTR $T4[ebp]
call	??0ControllerCallbackHandler@@QAE@PAVWindowInfo@@@Z 
mov	DWORD PTR tv83[ebp], eax
jmp	SHORT $LN50@CreateCont
mov	DWORD PTR tv83[ebp], 0
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR tv83[ebp]
mov	DWORD PTR [edx+864], eax
mov	DWORD PTR _ctrl$[ebp], 0
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+72]
push	ecx
mov	edx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	eax, BYTE PTR [edx+104]
push	eax
lea	ecx, DWORD PTR _engineType$[ebp]
push	ecx
mov	edx, DWORD PTR _pwdUI$[ebp]
push	edx
mov	eax, DWORD PTR _filePath$[ebp]
push	eax
call	?CreateEngine@EngineManager@@YAPAVBaseEngine@@PB_WPAVPasswordUI@@PAW4EngineType@@_N3@Z 
add	esp, 20					
mov	DWORD PTR _engine$[ebp], eax
cmp	DWORD PTR _engine$[ebp], 0
je	$LN39@CreateCont
mov	eax, DWORD PTR ?__LINE__Var@?0??CreateControllerForFile@@YAPAVController@@PB_WPAVPasswordUI@@PAVWindowInfo@@W4DisplayMode@@H@Z@4JA
add	eax, 13					
push	eax
push	OFFSET ??_C@_0DC@LPCGCECE@c?3?2workspace?2sumatrapdf?9master?2s@
push	1
push	560					
call	??2@YAPAXIHPBDH@Z			
add	esp, 16					
mov	DWORD PTR $T3[ebp], eax
cmp	DWORD PTR $T3[ebp], 0
je	SHORT $LN51@CreateCont
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+864]
push	edx
mov	eax, DWORD PTR _engineType$[ebp]
push	eax
mov	ecx, DWORD PTR _engine$[ebp]
push	ecx
mov	ecx, DWORD PTR $T3[ebp]
call	??0DisplayModel@@QAE@PAVBaseEngine@@W4EngineType@@PAVControllerCallback@@@Z 
mov	DWORD PTR tv147[ebp], eax
jmp	SHORT $LN52@CreateCont
mov	DWORD PTR tv147[ebp], 0
mov	edx, DWORD PTR tv147[ebp]
mov	DWORD PTR _ctrl$[ebp], edx
xor	eax, eax
jne	SHORT $LN5@CreateCont
cmp	DWORD PTR _ctrl$[ebp], 0
je	SHORT $LN53@CreateCont
mov	eax, DWORD PTR _ctrl$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	eax, DWORD PTR [edx+120]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	SHORT $LN53@CreateCont
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	edx, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	eax, DWORD PTR [edx+124]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
jne	SHORT $LN53@CreateCont
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	edx, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	eax, DWORD PTR [edx+128]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
jne	SHORT $LN53@CreateCont
mov	BYTE PTR tv166[ebp], 0
jmp	SHORT $LN54@CreateCont
mov	BYTE PTR tv166[ebp], 1
movzx	ecx, BYTE PTR tv166[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@CreateCont
jmp	$LN35@CreateCont
push	0
mov	eax, DWORD PTR _filePath$[ebp]
push	eax
call	?IsSupportedFile@ChmModel@@SA_NPB_W_N@Z	
add	esp, 8
movzx	ecx, al
test	ecx, ecx
je	$LN41@CreateCont
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+864]
push	ecx
mov	edx, DWORD PTR _filePath$[ebp]
push	edx
call	?Create@ChmModel@@SAPAV1@PB_WPAVControllerCallback@@@Z 
add	esp, 8
mov	DWORD PTR _chmModel$6[ebp], eax
cmp	DWORD PTR _chmModel$6[ebp], 0
je	$LN23@CreateCont
xor	eax, eax
jne	SHORT $LN11@CreateCont
cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	
je	SHORT $LN8@CreateCont
call	?CrashMe@@YAXXZ				
xor	eax, eax
jne	SHORT $LN11@CreateCont
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
mov	ecx, DWORD PTR _chmModel$6[ebp]
call	?SetParentHwnd@ChmModel@@QAE_NPAUHWND__@@@Z 
movzx	edx, al
test	edx, edx
jne	$LN45@CreateCont
mov	eax, DWORD PTR _chmModel$6[ebp]
mov	DWORD PTR $T1[ebp], eax
mov	ecx, DWORD PTR $T1[ebp]
mov	DWORD PTR $T2[ebp], ecx
cmp	DWORD PTR $T2[ebp], 0
je	SHORT $LN55@CreateCont
mov	esi, esp
push	1
mov	edx, DWORD PTR $T2[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR $T2[ebp]
mov	edx, DWORD PTR [eax]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR tv198[ebp], eax
jmp	SHORT $LN56@CreateCont
mov	DWORD PTR tv198[ebp], 0
push	1
push	1
lea	eax, DWORD PTR _engineType$[ebp]
push	eax
mov	ecx, DWORD PTR _pwdUI$[ebp]
push	ecx
mov	edx, DWORD PTR _filePath$[ebp]
push	edx
call	?CreateEngine@EngineManager@@YAPAVBaseEngine@@PB_WPAVPasswordUI@@PAW4EngineType@@_N3@Z 
add	esp, 20					
mov	DWORD PTR _engine$[ebp], eax
xor	eax, eax
jne	SHORT $LN17@CreateCont
cmp	DWORD PTR _engine$[ebp], 0
je	SHORT $LN57@CreateCont
mov	DWORD PTR tv207[ebp], 12		
jmp	SHORT $LN58@CreateCont
mov	DWORD PTR tv207[ebp], 0
mov	eax, DWORD PTR _engineType$[ebp]
cmp	eax, DWORD PTR tv207[ebp]
je	SHORT $LN59@CreateCont
mov	BYTE PTR tv209[ebp], 1
jmp	SHORT $LN60@CreateCont
mov	BYTE PTR tv209[ebp], 0
movzx	ecx, BYTE PTR tv209[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN17@CreateCont
jmp	$LoadEngineInFixedPageUI$73
mov	eax, DWORD PTR _chmModel$6[ebp]
mov	DWORD PTR _ctrl$[ebp], eax
xor	eax, eax
jne	SHORT $LN23@CreateCont
cmp	DWORD PTR _ctrl$[ebp], 0
je	SHORT $LN62@CreateCont
mov	eax, DWORD PTR _ctrl$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	eax, DWORD PTR [edx+124]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	SHORT $LN61@CreateCont
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	edx, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	eax, DWORD PTR [edx+120]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
jne	SHORT $LN61@CreateCont
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	edx, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	eax, DWORD PTR [edx+128]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	SHORT $LN62@CreateCont
mov	BYTE PTR tv233[ebp], 1
jmp	SHORT $LN63@CreateCont
mov	BYTE PTR tv233[ebp], 0
movzx	ecx, BYTE PTR tv233[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN23@CreateCont
jmp	$LN35@CreateCont
push	0
mov	eax, DWORD PTR _filePath$[ebp]
push	eax
call	?IsSupportedFile@Doc@@SA_NPB_W_N@Z	
add	esp, 8
movzx	ecx, al
test	ecx, ecx
je	$LN35@CreateCont
mov	eax, DWORD PTR _filePath$[ebp]
push	eax
lea	ecx, DWORD PTR _doc$5[ebp]
push	ecx
call	?CreateFromFile@Doc@@SA?AV1@PB_W@Z	
add	esp, 8
lea	ecx, DWORD PTR _doc$5[ebp]
call	?IsDocLoaded@Doc@@QBE_NXZ		
movzx	eax, al
test	eax, eax
je	$LN29@CreateCont
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+1184]
push	ecx
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [edx+864]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+96]
push	edx
call	?Create@EbookController@@SAPAV1@PAUHWND__@@PAVControllerCallback@@PAUFrameRateWnd@@@Z 
add	esp, 12					
mov	DWORD PTR _ctrl$[ebp], eax
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	edx, DWORD PTR _ctrl$[ebp]
mov	DWORD PTR [ecx+4], edx
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx+4]
mov	DWORD PTR [edx], eax
push	0
mov	eax, DWORD PTR _ctrl$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	eax, DWORD PTR [edx+128]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, eax
call	?EnableMessageHandling@EbookController@@QAEX_N@Z 
mov	eax, DWORD PTR _displayMode$[ebp]
push	eax
mov	ecx, DWORD PTR _reparseIdx$[ebp]
push	ecx
sub	esp, 16					
mov	ecx, esp
lea	edx, DWORD PTR _doc$5[ebp]
push	edx
call	??0Doc@@QAE@ABV0@@Z			
mov	eax, DWORD PTR _ctrl$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	eax, DWORD PTR [edx+128]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, eax
call	?SetDoc@EbookController@@QAEXVDoc@@HW4DisplayMode@@@Z 
xor	eax, eax
jne	SHORT $LN29@CreateCont
cmp	DWORD PTR _ctrl$[ebp], 0
je	SHORT $LN65@CreateCont
mov	eax, DWORD PTR _ctrl$[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	eax, DWORD PTR [edx+128]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	SHORT $LN64@CreateCont
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	edx, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	eax, DWORD PTR [edx+120]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
jne	SHORT $LN64@CreateCont
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	edx, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	eax, DWORD PTR [edx+124]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	SHORT $LN65@CreateCont
mov	BYTE PTR tv307[ebp], 1
jmp	SHORT $LN66@CreateCont
mov	BYTE PTR tv307[ebp], 0
movzx	ecx, BYTE PTR tv307[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN29@CreateCont
lea	ecx, DWORD PTR _doc$5[ebp]
call	??1Doc@@QAE@XZ				
xor	eax, eax
jne	SHORT $LN35@CreateCont
cmp	DWORD PTR _ctrl$[ebp], 0
je	SHORT $LN67@CreateCont
mov	eax, DWORD PTR _filePath$[ebp]
push	eax
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	edx, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR _ctrl$[ebp]
mov	eax, DWORD PTR [edx+4]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
call	?Eq@str@@YA_NPB_W0@Z			
add	esp, 8
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN67@CreateCont
mov	BYTE PTR tv321[ebp], 1
jmp	SHORT $LN68@CreateCont
mov	BYTE PTR tv321[ebp], 0
movzx	edx, BYTE PTR tv321[ebp]
push	edx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN35@CreateCont
mov	eax, DWORD PTR _ctrl$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN72@CreateCont
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 332				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	3
DD	2
DD	$LN71@CreateCont
DD	-20					
DD	4
DD	$LN69@CreateCont
DD	-68					
DD	16					
DD	$LN70@CreateCont
DB	100					
DB	111					
DB	99					
DB	0
DB	101					
DB	110					
DB	103					
DB	105					
DB	110					
DB	101					
DB	84					
DB	121					
DB	112					
DB	101					
DB	0
ENDP
??$?0V_lambda_9bd99f01148b93d640266ff787e7a365_@@@?$function@$$A6AXXZ@std@@QAE@V_lambda_9bd99f01148b93d640266ff787e7a365_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_class@X$$V@std@@QAE@XZ	
lea	eax, DWORD PTR __Func$[ebp]
push	eax
call	??$move@AAV<lambda_9bd99f01148b93d640266ff787e7a365>@@@std@@YA$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset@V<lambda_9bd99f01148b93d640266ff787e7a365>@@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_9bd99f01148b93d640266ff787e7a365>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??0_lambda_9bd99f01148b93d640266ff787e7a365_@@QAE@ABQAVEbookController@@ABQAUEbookFormattingData@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _<ctrl>$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _<data>$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR [eax+4], edx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	8
ENDP
??R_lambda_9bd99f01148b93d640266ff787e7a365_@@QBEXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	?FindWindowInfoByController@@YAPAVWindowInfo@@PAVController@@@Z 
add	esp, 4
test	eax, eax
je	SHORT $LN2@operator
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [edx]
call	?HandlePagesFromEbookLayout@EbookController@@QAEXPAUEbookFormattingData@@@Z 
jmp	SHORT $LN1@operator
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	?DeleteEbookFormattingData@EbookController@@SAXPAUEbookFormattingData@@@Z 
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$?0V_lambda_344027958ff46b907d624215e4045c6d_@@@?$function@$$A6AXPAVRenderedBitmap@@@Z@std@@QAE@V_lambda_344027958ff46b907d624215e4045c6d_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_class@XPAVRenderedBitmap@@@std@@QAE@XZ 
lea	eax, DWORD PTR __Func$[ebp]
push	eax
call	??$move@AAV<lambda_344027958ff46b907d624215e4045c6d>@@@std@@YA$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset@V<lambda_344027958ff46b907d624215e4045c6d>@@@?$_Func_class@XPAVRenderedBitmap@@@std@@IAEX$$QAV<lambda_344027958ff46b907d624215e4045c6d>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?0V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@?$function@$$A6AXXZ@std@@QAE@V_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_class@X$$V@std@@QAE@XZ	
lea	eax, DWORD PTR __Func$[ebp]
push	eax
call	??$move@AAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@std@@YA$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??1?$function@$$A6AXXZ@std@@QAE@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_class@X$$V@std@@QAE@XZ	
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Getspace@?$_Func_class@X$$V@std@@ABEPBXXZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Getspace@?$_Func_class@X$$V@std@@AAEPAXXZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Set@?$_Func_class@X$$V@std@@AAEXPAV?$_Func_base@X$$V@2@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, 4
imul	ecx, eax, 9
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR __Ptr$[ebp]
mov	DWORD PTR [edx+ecx], eax
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
?_Getimpl@?$_Func_class@X$$V@std@@ABEPAV?$_Func_base@X$$V@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, 4
imul	ecx, eax, 9
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+ecx]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Local@?$_Func_class@X$$V@std@@ABE_NXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getimpl@?$_Func_class@X$$V@std@@ABEPAV?$_Func_base@X$$V@2@XZ 
mov	esi, eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getspace@?$_Func_class@X$$V@std@@ABEPBXXZ 
cmp	esi, eax
jne	SHORT $LN3@Local
mov	DWORD PTR tv69[ebp], 1
jmp	SHORT $LN4@Local
mov	DWORD PTR tv69[ebp], 0
mov	al, BYTE PTR tv69[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Tidy@?$_Func_class@X$$V@std@@IAEXXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 212				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-212]
mov	ecx, 53					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Empty@?$_Func_class@X$$V@std@@IBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN1@Tidy
mov	ecx, DWORD PTR _this$[ebp]
call	?_Local@?$_Func_class@X$$V@std@@ABE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN4@Tidy
mov	BYTE PTR tv78[ebp], 1
jmp	SHORT $LN5@Tidy
mov	BYTE PTR tv78[ebp], 0
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getimpl@?$_Func_class@X$$V@std@@ABEPAV?$_Func_base@X$$V@2@XZ 
mov	DWORD PTR tv71[ebp], eax
mov	esi, esp
movzx	ecx, BYTE PTR tv78[ebp]
push	ecx
mov	edx, DWORD PTR tv71[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR tv71[ebp]
mov	edx, DWORD PTR [eax+16]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	0
mov	ecx, DWORD PTR _this$[ebp]
call	?_Set@?$_Func_class@X$$V@std@@AAEXPAV?$_Func_base@X$$V@2@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 212				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Empty@?$_Func_class@X$$V@std@@IBE_NXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getimpl@?$_Func_class@X$$V@std@@ABEPAV?$_Func_base@X$$V@2@XZ 
test	eax, eax
jne	SHORT $LN3@Empty
mov	DWORD PTR tv67[ebp], 1
jmp	SHORT $LN4@Empty
mov	DWORD PTR tv67[ebp], 0
mov	al, BYTE PTR tv67[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1?$_Func_class@X$$V@std@@QAE@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Tidy@?$_Func_class@X$$V@std@@IAEXXZ	
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0?$_Func_class@X$$V@std@@QAE@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	ecx, DWORD PTR _this$[ebp]
call	?_Set@?$_Func_class@X$$V@std@@AAEXPAV?$_Func_base@X$$V@2@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@QAE@ABQAVRenderedBitmap@@ABQA_W@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _<bmp>$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _<filePath>$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR [eax+4], edx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	8
ENDP
??R_lambda_8499fd0750e27428b529d5f8fbc7b01e_@@QBEXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN2@operator
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	0
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A 
call	?Find@FileHistory@@QBEPAUFileState@@PB_WPAI@Z 
push	eax
call	?SetThumbnail@@YAXPAUFileState@@PAVRenderedBitmap@@@Z 
add	esp, 8
push	1
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	__free_dbg
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0_lambda_344027958ff46b907d624215e4045c6d_@@QAE@ABQA_W@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _<filePath>$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
??R_lambda_344027958ff46b907d624215e4045c6d_@@QBE@PAVRenderedBitmap@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 272				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-272]
mov	ecx, 68					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
push	eax
lea	ecx, DWORD PTR _bmp$[ebp]
push	ecx
lea	ecx, DWORD PTR $T1[ebp]
call	??0<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@QAE@ABQAVRenderedBitmap@@ABQA_W@Z 
mov	edx, DWORD PTR [eax+4]
push	edx
mov	eax, DWORD PTR [eax]
push	eax
lea	ecx, DWORD PTR $T2[ebp]
call	??$?0V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@?$function@$$A6AXXZ@std@@QAE@V<lambda_8499fd0750e27428b529d5f8fbc7b01e>@@@Z 
lea	ecx, DWORD PTR $T2[ebp]
push	ecx
call	?Post@uitask@@YAXABV?$function@$$A6AXXZ@std@@@Z 
add	esp, 4
lea	ecx, DWORD PTR $T2[ebp]
call	??1?$function@$$A6AXXZ@std@@QAE@XZ	
pop	edi
pop	esi
pop	ebx
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
add	esp, 272				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?CreateThumbnailForFile@@YAXAAVWindowInfo@@AAUFileState@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 332				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-332]
mov	ecx, 83					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR $T1[ebp], 0
mov	eax, DWORD PTR _ds$[ebp]
push	eax
call	?ShouldSaveThumbnail@@YA_NAAUFileState@@@Z 
add	esp, 4
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN5@CreateThum
jmp	$LN1@CreateThum
xor	eax, eax
jne	SHORT $LN5@CreateThum
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN12@CreateThum
mov	BYTE PTR tv73[ebp], 1
jmp	SHORT $LN13@CreateThum
mov	BYTE PTR tv73[ebp], 0
movzx	ecx, BYTE PTR tv73[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@CreateThum
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN9@CreateThum
jmp	$LN1@CreateThum
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
je	$LN14@CreateThum
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	ecx, eax
call	?GetEngine@DisplayModel@@QBEPAVBaseEngine@@XZ 
mov	DWORD PTR tv87[ebp], eax
mov	eax, DWORD PTR tv87[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR tv87[ebp]
mov	eax, DWORD PTR [edx+124]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN14@CreateThum
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	ecx, eax
call	?GetEngine@DisplayModel@@QBEPAVBaseEngine@@XZ 
mov	DWORD PTR tv133[ebp], eax
mov	edx, DWORD PTR tv133[ebp]
mov	eax, DWORD PTR [edx]
mov	esi, esp
mov	ecx, DWORD PTR tv133[ebp]
mov	edx, DWORD PTR [eax+128]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
lea	ecx, DWORD PTR $T5[ebp]
call	??0?$ScopedMem@D@@QAE@PAD@Z		
or	DWORD PTR $T1[ebp], 1
mov	ecx, eax
call	??B?$ScopedMem@D@@QBEPADXZ		
test	eax, eax
jne	SHORT $LN14@CreateThum
mov	DWORD PTR tv143[ebp], 1
jmp	SHORT $LN15@CreateThum
mov	DWORD PTR tv143[ebp], 0
mov	al, BYTE PTR tv143[ebp]
mov	BYTE PTR $T6[ebp], al
mov	ecx, DWORD PTR $T1[ebp]
and	ecx, 1
je	SHORT $LN16@CreateThum
and	DWORD PTR $T1[ebp], -2			
lea	ecx, DWORD PTR $T5[ebp]
call	??1?$ScopedMem@D@@QAE@XZ		
movzx	edx, BYTE PTR $T6[ebp]
test	edx, edx
je	SHORT $LN10@CreateThum
mov	eax, DWORD PTR _ds$[ebp]
push	eax
call	?RemoveThumbnail@@YAXAAUFileState@@@Z	
add	esp, 4
jmp	$LN1@CreateThum
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+4]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
call	?Dup@str@@YAPA_WPB_W@Z			
add	esp, 4
mov	DWORD PTR _filePath$[ebp], eax
lea	eax, DWORD PTR _filePath$[ebp]
push	eax
lea	ecx, DWORD PTR $T3[ebp]
call	??0<lambda_344027958ff46b907d624215e4045c6d>@@QAE@ABQA_W@Z 
mov	ecx, DWORD PTR [eax]
push	ecx
lea	ecx, DWORD PTR $T4[ebp]
call	??$?0V<lambda_344027958ff46b907d624215e4045c6d>@@@?$function@$$A6AXPAVRenderedBitmap@@@Z@std@@QAE@V<lambda_344027958ff46b907d624215e4045c6d>@@@Z 
mov	esi, esp
lea	edx, DWORD PTR $T4[ebp]
push	edx
push	150					
push	212					
lea	ecx, DWORD PTR $T2[ebp]
call	??0?$SizeT@H@geomutil@@QAE@HH@Z		
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR [eax]
push	edx
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+84]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
lea	ecx, DWORD PTR $T4[ebp]
call	??1?$function@$$A6AXPAVRenderedBitmap@@@Z@std@@QAE@XZ 
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN19@CreateThum
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
add	esp, 332				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
DD	1
DD	$LN18@CreateThum
DD	-12					
DD	4
DD	$LN17@CreateThum
DB	102					
DB	105					
DB	108					
DB	101					
DB	80					
DB	97					
DB	116					
DB	104					
DB	0
ENDP
??0?$PointT@N@geomutil@@QAE@NN@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
movsd	xmm0, QWORD PTR _x$[ebp]
movsd	QWORD PTR [eax], xmm0
mov	eax, DWORD PTR _this$[ebp]
movsd	xmm0, QWORD PTR _y$[ebp]
movsd	QWORD PTR [eax+8], xmm0
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	16					
ENDP
??_GControllerCallbackHandler@@UAEPAXI@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1ControllerCallbackHandler@@UAE@XZ	
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	8
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?RequestDelayedLayout@ControllerCallbackHandler@@UAEXH@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	esi, esp
push	0
mov	eax, DWORD PTR _delay$[ebp]
push	eax
push	7
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+96]
push	eax
call	DWORD PTR __imp__SetTimer@16
cmp	esi, esp
call	__RTC_CheckEsp
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?HandleLayoutedPages@ControllerCallbackHandler@@UAEXPAVEbookController@@PAUEbookFormattingData@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 272				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-272]
mov	ecx, 68					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _this$[ebp], ecx
lea	eax, DWORD PTR _data$[ebp]
push	eax
lea	ecx, DWORD PTR _ctrl$[ebp]
push	ecx
lea	ecx, DWORD PTR $T1[ebp]
call	??0<lambda_9bd99f01148b93d640266ff787e7a365>@@QAE@ABQAVEbookController@@ABQAUEbookFormattingData@@@Z 
mov	edx, DWORD PTR [eax+4]
push	edx
mov	eax, DWORD PTR [eax]
push	eax
lea	ecx, DWORD PTR $T2[ebp]
call	??$?0V<lambda_9bd99f01148b93d640266ff787e7a365>@@@?$function@$$A6AXXZ@std@@QAE@V<lambda_9bd99f01148b93d640266ff787e7a365>@@@Z 
lea	ecx, DWORD PTR $T2[ebp]
push	ecx
call	?Post@uitask@@YAXABV?$function@$$A6AXXZ@std@@@Z 
add	esp, 4
lea	ecx, DWORD PTR $T2[ebp]
call	??1?$function@$$A6AXXZ@std@@QAE@XZ	
pop	edi
pop	esi
pop	ebx
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
add	esp, 272				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?SaveDownload@ControllerCallbackHandler@@UAEXPB_WPBEI@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 240				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-240]
mov	ecx, 60					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _url$[ebp]
push	eax
call	?GetFileName@url@@YAPA_WPB_W@Z		
add	esp, 4
push	eax
lea	ecx, DWORD PTR _fileName$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
lea	ecx, DWORD PTR _fileName$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+92]
push	edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+88]
push	edx
lea	ecx, DWORD PTR _linkSaver$[ebp]
call	??0LinkSaver@@QAE@PAVTabInfo@@PAUHWND__@@PB_W@Z 
mov	eax, DWORD PTR _len$[ebp]
push	eax
mov	ecx, DWORD PTR _data$[ebp]
push	ecx
lea	ecx, DWORD PTR _linkSaver$[ebp]
call	?SaveEmbedded@LinkSaver@@UAE_NPBEI@Z	
lea	ecx, DWORD PTR _linkSaver$[ebp]
call	??1LinkSaver@@UAE@XZ
lea	ecx, DWORD PTR _fileName$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@SaveDownlo
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 240				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
DD	2
DD	$LN5@SaveDownlo
DD	-20					
DD	4
DD	$LN3@SaveDownlo
DD	-44					
DD	16					
DD	$LN4@SaveDownlo
DB	108					
DB	105					
DB	110					
DB	107					
DB	83					
DB	97					
DB	118					
DB	101					
DB	114					
DB	0
DB	102					
DB	105					
DB	108					
DB	101					
DB	78					
DB	97					
DB	109					
DB	101					
DB	0
ENDP
?FocusFrame@ControllerCallbackHandler@@UAEX_N@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
movzx	eax, BYTE PTR _always$[ebp]
test	eax, eax
jne	SHORT $LN3@FocusFrame
mov	esi, esp
call	DWORD PTR __imp__GetFocus@0
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
call	?FindWindowInfoByHwnd@@YAPAVWindowInfo@@PAUHWND__@@@Z 
add	esp, 4
test	eax, eax
jne	SHORT $LN1@FocusFrame
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	esi, esp
mov	edx, DWORD PTR [ecx+92]
push	edx
call	DWORD PTR __imp__SetFocus@4
cmp	esi, esp
call	__RTC_CheckEsp
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?GotoLink@ControllerCallbackHandler@@UAEXPAVPageDestination@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _dest$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR [edx+852]
call	?GotoLink@LinkHandler@@QAEXPAVPageDestination@@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?RenderThumbnail@ControllerCallbackHandler@@UAEXPAVDisplayModel@@V?$SizeT@H@geomutil@@ABV?$function@$$A6AXPAVRenderedBitmap@@@Z@std@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 364				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-364]
mov	ecx, 91					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _dm$[ebp]
call	?GetEngine@DisplayModel@@QBEPAVBaseEngine@@XZ 
mov	DWORD PTR tv67[ebp], eax
mov	esi, esp
push	1
lea	eax, DWORD PTR _pageRect$[ebp]
push	eax
mov	ecx, DWORD PTR tv67[ebp]
mov	edx, DWORD PTR [ecx]
mov	ecx, DWORD PTR tv67[ebp]
mov	eax, DWORD PTR [edx+16]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
lea	ecx, DWORD PTR _pageRect$[ebp]
call	?IsEmpty@?$RectT@N@geomutil@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN2@RenderThum
push	0
mov	ecx, DWORD PTR _saveThumbnail$[ebp]
call	??R?$_Func_class@XPAVRenderedBitmap@@@std@@QBEXPAVRenderedBitmap@@@Z 
jmp	$LN1@RenderThum
mov	ecx, DWORD PTR _dm$[ebp]
call	?GetEngine@DisplayModel@@QBEPAVBaseEngine@@XZ 
mov	DWORD PTR tv85[ebp], eax
mov	ebx, esp
push	0
push	0
push	ecx
movss	xmm0, DWORD PTR __real@3f800000
movss	DWORD PTR [esp], xmm0
push	1
sub	esp, 32					
mov	ecx, 8
lea	esi, DWORD PTR _pageRect$[ebp]
mov	edi, esp
rep movsd
lea	eax, DWORD PTR $T3[ebp]
push	eax
mov	ecx, DWORD PTR tv85[ebp]
mov	edx, DWORD PTR [ecx]
mov	ecx, DWORD PTR tv85[ebp]
mov	eax, DWORD PTR [edx+28]
call	eax
cmp	ebx, esp
call	__RTC_CheckEsp
mov	ecx, 8
mov	esi, eax
lea	edi, DWORD PTR _pageRect$[ebp]
rep movsd
cvtsi2ss xmm0, DWORD PTR _size$[ebp]
cvtsd2ss xmm1, QWORD PTR _pageRect$[ebp+16]
divss	xmm0, xmm1
movss	DWORD PTR _zoom$[ebp], xmm0
cvtsi2ss xmm0, DWORD PTR _size$[ebp+4]
divss	xmm0, DWORD PTR _zoom$[ebp]
cvtss2sd xmm0, xmm0
movsd	xmm1, QWORD PTR _pageRect$[ebp+24]
comisd	xmm1, xmm0
jbe	SHORT $LN3@RenderThum
cvtsi2ss xmm0, DWORD PTR _size$[ebp+4]
divss	xmm0, DWORD PTR _zoom$[ebp]
cvtss2sd xmm0, xmm0
movsd	QWORD PTR _pageRect$[ebp+24], xmm0
mov	ecx, DWORD PTR _dm$[ebp]
call	?GetEngine@DisplayModel@@QBEPAVBaseEngine@@XZ 
mov	DWORD PTR tv141[ebp], eax
mov	ebx, esp
push	1
push	0
push	ecx
movss	xmm0, DWORD PTR __real@3f800000
movss	DWORD PTR [esp], xmm0
push	1
sub	esp, 32					
mov	ecx, 8
lea	esi, DWORD PTR _pageRect$[ebp]
mov	edi, esp
rep movsd
lea	eax, DWORD PTR $T2[ebp]
push	eax
mov	ecx, DWORD PTR tv141[ebp]
mov	edx, DWORD PTR [ecx]
mov	ecx, DWORD PTR tv141[ebp]
mov	eax, DWORD PTR [edx+28]
call	eax
cmp	ebx, esp
call	__RTC_CheckEsp
mov	ecx, 8
mov	esi, eax
lea	edi, DWORD PTR _pageRect$[ebp]
rep movsd
mov	eax, DWORD PTR ?__LINE__Var@?0??RenderThumbnail@ControllerCallbackHandler@@UAEXPAVDisplayModel@@V?$SizeT@H@geomutil@@ABV?$function@$$A6AXPAVRenderedBitmap@@@Z@std@@@Z@4JA
add	eax, 14					
push	eax
push	OFFSET ??_C@_0DC@LPCGCECE@c?3?2workspace?2sumatrapdf?9master?2s@
push	1
push	48					
call	??2@YAPAXIHPBDH@Z			
add	esp, 16					
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 0
je	SHORT $LN5@RenderThum
mov	ecx, DWORD PTR _saveThumbnail$[ebp]
push	ecx
mov	ecx, DWORD PTR $T1[ebp]
call	??0ThumbnailRenderingTask@@QAE@ABV?$function@$$A6AXPAVRenderedBitmap@@@Z@std@@@Z 
mov	DWORD PTR tv168[ebp], eax
jmp	SHORT $LN6@RenderThum
mov	DWORD PTR tv168[ebp], 0
mov	edx, DWORD PTR tv168[ebp]
mov	DWORD PTR _callback$[ebp], edx
mov	eax, DWORD PTR _callback$[ebp]
push	eax
sub	esp, 32					
mov	ecx, 8
lea	esi, DWORD PTR _pageRect$[ebp]
mov	edi, esp
rep movsd
push	ecx
movss	xmm0, DWORD PTR _zoom$[ebp]
movss	DWORD PTR [esp], xmm0
push	0
push	1
mov	ecx, DWORD PTR _dm$[ebp]
push	ecx
mov	ecx, OFFSET ?gRenderCache@@3VRenderCache@@A 
call	?Render@RenderCache@@QAEXPAVDisplayModel@@HHMV?$RectT@N@geomutil@@AAVRenderingCallback@@@Z 
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN9@RenderThum
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 364				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	16					
npad	2
DD	1
DD	$LN8@RenderThum
DD	-48					
DD	32					
DD	$LN7@RenderThum
DB	112					
DB	97					
DB	103					
DB	101					
DB	82					
DB	101					
DB	99					
DB	116					
DB	0
ENDP
?CleanUp@ControllerCallbackHandler@@UAEXPAVDisplayModel@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _dm$[ebp]
push	eax
mov	ecx, OFFSET ?gRenderCache@@3VRenderCache@@A 
call	?CancelRendering@RenderCache@@QAEXPAVDisplayModel@@@Z 
mov	eax, DWORD PTR _dm$[ebp]
push	eax
mov	ecx, OFFSET ?gRenderCache@@3VRenderCache@@A 
call	?FreeForDisplayModel@RenderCache@@QAEXPAVDisplayModel@@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?RequestRendering@ControllerCallbackHandler@@UAEXH@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
xor	eax, eax
jne	SHORT $LN5@RequestRen
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
jne	SHORT $LN11@RequestRen
mov	BYTE PTR tv69[ebp], 1
jmp	SHORT $LN12@RequestRen
mov	BYTE PTR tv69[ebp], 0
movzx	ecx, BYTE PTR tv69[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@RequestRen
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
jne	SHORT $LN8@RequestRen
jmp	SHORT $LN1@RequestRen
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	DWORD PTR _dm$[ebp], eax
mov	eax, DWORD PTR _pageNo$[ebp]
push	eax
mov	ecx, DWORD PTR _dm$[ebp]
call	?ShouldCacheRendering@DisplayModel@@QAE_NH@Z 
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN1@RequestRen
mov	eax, DWORD PTR _pageNo$[ebp]
push	eax
mov	ecx, DWORD PTR _dm$[ebp]
push	ecx
mov	ecx, OFFSET ?gRenderCache@@3VRenderCache@@A 
call	?RequestRendering@RenderCache@@QAEXPAVDisplayModel@@H@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?UpdateScrollbars@ControllerCallbackHandler@@UAEXV?$SizeT@H@geomutil@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 348				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-348]
mov	ecx, 87					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _this$[ebp], ecx
xor	eax, eax
jne	SHORT $LN4@UpdateScro
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
jne	SHORT $LN14@UpdateScro
mov	BYTE PTR tv69[ebp], 1
jmp	SHORT $LN15@UpdateScro
mov	BYTE PTR tv69[ebp], 0
movzx	ecx, BYTE PTR tv69[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN4@UpdateScro
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	DWORD PTR _dm$[ebp], eax
mov	DWORD PTR _si$[ebp], 0
xor	eax, eax
mov	DWORD PTR _si$[ebp+4], eax
mov	DWORD PTR _si$[ebp+8], eax
mov	DWORD PTR _si$[ebp+12], eax
mov	DWORD PTR _si$[ebp+16], eax
mov	DWORD PTR _si$[ebp+20], eax
mov	DWORD PTR _si$[ebp+24], eax
mov	DWORD PTR _si$[ebp], 28			
mov	DWORD PTR _si$[ebp+4], 23		
lea	eax, DWORD PTR _viewPort$[ebp]
push	eax
lea	ecx, DWORD PTR $T3[ebp]
push	ecx
mov	ecx, DWORD PTR _dm$[ebp]
call	?GetViewPort@DisplayModel@@QBE?AV?$RectT@H@geomutil@@XZ 
mov	ecx, eax
call	?Size@?$RectT@H@geomutil@@QBE?AV?$SizeT@H@2@XZ 
mov	eax, DWORD PTR _viewPort$[ebp]
cmp	eax, DWORD PTR _canvas$[ebp]
jl	SHORT $LN8@UpdateScro
mov	DWORD PTR _si$[ebp+20], 0
mov	DWORD PTR _si$[ebp+8], 0
mov	DWORD PTR _si$[ebp+12], 99		
mov	DWORD PTR _si$[ebp+16], 100		
jmp	SHORT $LN9@UpdateScro
lea	eax, DWORD PTR $T2[ebp]
push	eax
mov	ecx, DWORD PTR _dm$[ebp]
call	?GetViewPort@DisplayModel@@QBE?AV?$RectT@H@geomutil@@XZ 
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _si$[ebp+20], ecx
mov	DWORD PTR _si$[ebp+8], 0
mov	eax, DWORD PTR _canvas$[ebp]
sub	eax, 1
mov	DWORD PTR _si$[ebp+12], eax
mov	eax, DWORD PTR _viewPort$[ebp]
mov	DWORD PTR _si$[ebp+16], eax
mov	eax, DWORD PTR _viewPort$[ebp]
cmp	eax, DWORD PTR _canvas$[ebp]
jge	SHORT $LN16@UpdateScro
mov	DWORD PTR tv91[ebp], 1
jmp	SHORT $LN17@UpdateScro
mov	DWORD PTR tv91[ebp], 0
mov	esi, esp
mov	ecx, DWORD PTR tv91[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	DWORD PTR __imp__ShowScrollBar@12
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
push	1
lea	eax, DWORD PTR _si$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+96]
push	eax
call	DWORD PTR __imp__SetScrollInfo@16
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, DWORD PTR _viewPort$[ebp+4]
cmp	eax, DWORD PTR _canvas$[ebp+4]
jl	SHORT $LN10@UpdateScro
mov	DWORD PTR _si$[ebp+20], 0
mov	DWORD PTR _si$[ebp+8], 0
mov	DWORD PTR _si$[ebp+12], 99		
mov	DWORD PTR _si$[ebp+16], 100		
jmp	$LN12@UpdateScro
lea	eax, DWORD PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR _dm$[ebp]
call	?GetViewPort@DisplayModel@@QBE?AV?$RectT@H@geomutil@@XZ 
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _si$[ebp+20], ecx
mov	DWORD PTR _si$[ebp+8], 0
mov	eax, DWORD PTR _canvas$[ebp+4]
sub	eax, 1
mov	DWORD PTR _si$[ebp+12], eax
mov	eax, DWORD PTR _viewPort$[ebp+4]
mov	DWORD PTR _si$[ebp+16], eax
mov	esi, esp
push	0
mov	eax, DWORD PTR _dm$[ebp]
mov	edx, DWORD PTR [eax]
mov	ecx, DWORD PTR _dm$[ebp]
mov	eax, DWORD PTR [edx+52]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
fstp	DWORD PTR tv221[ebp]
movss	xmm0, DWORD PTR __real@bf800000
ucomiss	xmm0, DWORD PTR tv221[ebp]
lahf
test	ah, 68					
jnp	SHORT $LN12@UpdateScro
mov	eax, DWORD PTR _si$[ebp+16]
mov	DWORD PTR tv226[ebp], eax
cvtsi2sd xmm0, DWORD PTR tv226[ebp]
mov	ecx, DWORD PTR tv226[ebp]
shr	ecx, 31					
addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
mulsd	xmm0, QWORD PTR __real@3fee666666666666
call	__dtoui3
mov	DWORD PTR _si$[ebp+16], eax
mov	eax, DWORD PTR _viewPort$[ebp+4]
sub	eax, DWORD PTR _si$[ebp+16]
mov	ecx, DWORD PTR _si$[ebp+12]
sub	ecx, eax
mov	DWORD PTR _si$[ebp+12], ecx
mov	eax, DWORD PTR _viewPort$[ebp+4]
cmp	eax, DWORD PTR _canvas$[ebp+4]
jge	SHORT $LN18@UpdateScro
mov	DWORD PTR tv158[ebp], 1
jmp	SHORT $LN19@UpdateScro
mov	DWORD PTR tv158[ebp], 0
mov	esi, esp
mov	ecx, DWORD PTR tv158[ebp]
push	ecx
push	1
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	DWORD PTR __imp__ShowScrollBar@12
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
push	1
lea	eax, DWORD PTR _si$[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+96]
push	eax
call	DWORD PTR __imp__SetScrollInfo@16
cmp	esi, esp
call	__RTC_CheckEsp
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN23@UpdateScro
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
add	esp, 348				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
DD	2
DD	$LN22@UpdateScro
DD	-60					
DD	28					
DD	$LN20@UpdateScro
DD	-76					
DD	8
DD	$LN21@UpdateScro
DB	118					
DB	105					
DB	101					
DB	119					
DB	80					
DB	111					
DB	114					
DB	116					
DB	0
DB	115					
DB	105					
DB	0
ENDP
?PageNoChanged@ControllerCallbackHandler@@UAEXPAVController@@H@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 232				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-232]
mov	ecx, 58					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx]
cmp	edx, DWORD PTR _ctrl$[ebp]
je	SHORT $LN5@PageNoChan
jmp	$LN1@PageNoChan
xor	eax, eax
jne	SHORT $LN5@PageNoChan
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
cmp	DWORD PTR [ecx], 0
je	SHORT $LN24@PageNoChan
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	edx, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [eax]
mov	eax, DWORD PTR [edx+12]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
jle	SHORT $LN24@PageNoChan
mov	BYTE PTR tv82[ebp], 0
jmp	SHORT $LN25@PageNoChan
mov	BYTE PTR tv82[ebp], 1
movzx	ecx, BYTE PTR tv82[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@PageNoChan
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
cmp	DWORD PTR [ecx], 0
je	SHORT $LN16@PageNoChan
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [edx]
mov	esi, esp
mov	ecx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+12]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
jne	SHORT $LN15@PageNoChan
jmp	$LN1@PageNoChan
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
test	eax, eax
je	SHORT $LN17@PageNoChan
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
mov	ecx, eax
call	?CurrentTocPageNo@EbookController@@QBEHXZ 
mov	DWORD PTR _pageNo$[ebp], eax
jmp	$LN18@PageNoChan
cmp	DWORD PTR _pageNo$[ebp], -1
je	$LN18@PageNoChan
mov	esi, esp
mov	eax, DWORD PTR _pageNo$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [eax]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+92]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
lea	ecx, DWORD PTR _buf$1[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
lea	ecx, DWORD PTR _buf$1[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+124]
push	edx
call	?SetText@win@@YAXPAUHWND__@@PB_W@Z	
add	esp, 8
push	0
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	?ToolbarUpdateStateForWindow@@YAXPAVWindowInfo@@_N@Z 
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [edx]
mov	esi, esp
mov	ecx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+88]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN20@PageNoChan
push	1
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [edx]
mov	esi, esp
mov	ecx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+12]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	?UpdateToolbarPageText@@YAXPAVWindowInfo@@H_N@Z 
add	esp, 12					
lea	ecx, DWORD PTR _buf$1[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _pageNo$[ebp]
cmp	edx, DWORD PTR [ecx+820]
jne	SHORT $LN21@PageNoChan
jmp	$LN1@PageNoChan
mov	eax, DWORD PTR _pageNo$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	?UpdateTocSelection@@YAXPAVWindowInfo@@H@Z 
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _pageNo$[ebp]
mov	DWORD PTR [ecx+820], edx
push	4
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	ecx, DWORD PTR [ecx+832]
call	?GetForGroup@Notifications@@QAEPAVNotificationWnd@@H@Z 
mov	DWORD PTR _wnd$[ebp], eax
cmp	DWORD PTR _wnd$[ebp], 0
je	SHORT $LN1@PageNoChan
xor	eax, eax
jne	SHORT $LN11@PageNoChan
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
jne	SHORT $LN26@PageNoChan
mov	BYTE PTR tv210[ebp], 1
jmp	SHORT $LN27@PageNoChan
mov	BYTE PTR tv210[ebp], 0
movzx	ecx, BYTE PTR tv210[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN11@PageNoChan
mov	eax, DWORD PTR _pageNo$[ebp]
push	eax
mov	ecx, DWORD PTR _wnd$[ebp]
push	ecx
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	?UpdatePageInfoHelper@@YAXPAVWindowInfo@@PAVNotificationWnd@@H@Z 
add	esp, 12					
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN30@PageNoChan
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 232				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
npad	2
DD	1
DD	$LN29@PageNoChan
DD	-20					
DD	4
DD	$LN28@PageNoChan
DB	98					
DB	117					
DB	102					
DB	0
ENDP
?Repaint@ControllerCallbackHandler@@UAEXXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
call	?RepaintAsync@WindowInfo@@QAEXI@Z	
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1ControllerCallbackHandler@@UAE@XZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7ControllerCallbackHandler@@6B@
mov	ecx, DWORD PTR _this$[ebp]
call	??1ControllerCallback@@UAE@XZ		
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0ControllerCallbackHandler@@QAE@PAVWindowInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0ControllerCallback@@QAE@XZ
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7ControllerCallbackHandler@@6B@
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _win$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??_GThumbnailRenderingTask@@UAEPAXI@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1ThumbnailRenderingTask@@UAE@XZ	
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	48					
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?Callback@ThumbnailRenderingTask@@UAEXPAVRenderedBitmap@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 232				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-232]
mov	ecx, 58					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _bmp$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 8
call	??R?$_Func_class@XPAVRenderedBitmap@@@std@@QBEXPAVRenderedBitmap@@@Z 
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR $T1[ebp], eax
mov	ecx, DWORD PTR $T1[ebp]
mov	DWORD PTR $T2[ebp], ecx
cmp	DWORD PTR $T2[ebp], 0
je	SHORT $LN3@Callback
mov	esi, esp
push	1
mov	edx, DWORD PTR $T2[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR $T2[ebp]
mov	edx, DWORD PTR [eax+4]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR tv81[ebp], eax
jmp	SHORT $LN1@Callback
mov	DWORD PTR tv81[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 232				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1ThumbnailRenderingTask@@UAE@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7ThumbnailRenderingTask@@6B@
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 8
call	??1?$function@$$A6AXPAVRenderedBitmap@@@Z@std@@QAE@XZ 
mov	ecx, DWORD PTR _this$[ebp]
call	??1RenderingCallback@@UAE@XZ		
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0ThumbnailRenderingTask@@QAE@ABV?$function@$$A6AXPAVRenderedBitmap@@@Z@std@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0RenderingCallback@@QAE@XZ
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7ThumbnailRenderingTask@@6B@
mov	eax, DWORD PTR _saveThumbnail$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 8
call	??0?$function@$$A6AXPAVRenderedBitmap@@@Z@std@@QAE@ABV01@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1?$function@$$A6AXPAVRenderedBitmap@@@Z@std@@QAE@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_class@XPAVRenderedBitmap@@@std@@QAE@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0?$function@$$A6AXPAVRenderedBitmap@@@Z@std@@QAE@ABV01@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_class@XPAVRenderedBitmap@@@std@@QAE@XZ 
mov	eax, DWORD PTR __Right$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Reset_copy@?$_Func_class@XPAVRenderedBitmap@@@std@@IAEXABV12@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?_Getspace@?$_Func_class@XPAVRenderedBitmap@@@std@@ABEPBXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Getspace@?$_Func_class@XPAVRenderedBitmap@@@std@@AAEPAXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Set@?$_Func_class@XPAVRenderedBitmap@@@std@@AAEXPAV?$_Func_base@XPAVRenderedBitmap@@@2@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, 4
imul	ecx, eax, 9
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR __Ptr$[ebp]
mov	DWORD PTR [edx+ecx], eax
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
?_Getimpl@?$_Func_class@XPAVRenderedBitmap@@@std@@ABEPAV?$_Func_base@XPAVRenderedBitmap@@@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, 4
imul	ecx, eax, 9
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+ecx]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Local@?$_Func_class@XPAVRenderedBitmap@@@std@@ABE_NXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getimpl@?$_Func_class@XPAVRenderedBitmap@@@std@@ABEPAV?$_Func_base@XPAVRenderedBitmap@@@2@XZ 
mov	esi, eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getspace@?$_Func_class@XPAVRenderedBitmap@@@std@@ABEPBXXZ 
cmp	esi, eax
jne	SHORT $LN3@Local
mov	DWORD PTR tv69[ebp], 1
jmp	SHORT $LN4@Local
mov	DWORD PTR tv69[ebp], 0
mov	al, BYTE PTR tv69[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Tidy@?$_Func_class@XPAVRenderedBitmap@@@std@@IAEXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 212				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-212]
mov	ecx, 53					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Empty@?$_Func_class@XPAVRenderedBitmap@@@std@@IBE_NXZ 
movzx	eax, al
test	eax, eax
jne	SHORT $LN1@Tidy
mov	ecx, DWORD PTR _this$[ebp]
call	?_Local@?$_Func_class@XPAVRenderedBitmap@@@std@@ABE_NXZ 
movzx	eax, al
test	eax, eax
jne	SHORT $LN4@Tidy
mov	BYTE PTR tv78[ebp], 1
jmp	SHORT $LN5@Tidy
mov	BYTE PTR tv78[ebp], 0
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getimpl@?$_Func_class@XPAVRenderedBitmap@@@std@@ABEPAV?$_Func_base@XPAVRenderedBitmap@@@2@XZ 
mov	DWORD PTR tv71[ebp], eax
mov	esi, esp
movzx	ecx, BYTE PTR tv78[ebp]
push	ecx
mov	edx, DWORD PTR tv71[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR tv71[ebp]
mov	edx, DWORD PTR [eax+16]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	0
mov	ecx, DWORD PTR _this$[ebp]
call	?_Set@?$_Func_class@XPAVRenderedBitmap@@@std@@AAEXPAV?$_Func_base@XPAVRenderedBitmap@@@2@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 212				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Reset_copy@?$_Func_class@XPAVRenderedBitmap@@@std@@IAEXABV12@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR __Right$[ebp]
call	?_Empty@?$_Func_class@XPAVRenderedBitmap@@@std@@IBE_NXZ 
movzx	eax, al
test	eax, eax
je	SHORT $LN2@Reset_copy
jmp	$LN1@Reset_copy
mov	ecx, DWORD PTR __Right$[ebp]
call	?_Local@?$_Func_class@XPAVRenderedBitmap@@@std@@ABE_NXZ 
movzx	eax, al
test	eax, eax
je	SHORT $LN4@Reset_copy
mov	ecx, DWORD PTR __Right$[ebp]
call	?_Getimpl@?$_Func_class@XPAVRenderedBitmap@@@std@@ABEPAV?$_Func_base@XPAVRenderedBitmap@@@2@XZ 
mov	DWORD PTR tv76[ebp], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getspace@?$_Func_class@XPAVRenderedBitmap@@@std@@AAEPAXXZ 
mov	esi, esp
push	eax
mov	eax, DWORD PTR tv76[ebp]
mov	edx, DWORD PTR [eax]
mov	ecx, DWORD PTR tv76[ebp]
mov	eax, DWORD PTR [edx]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Set@?$_Func_class@XPAVRenderedBitmap@@@std@@AAEXPAV?$_Func_base@XPAVRenderedBitmap@@@2@@Z 
jmp	SHORT $LN1@Reset_copy
mov	ecx, DWORD PTR __Right$[ebp]
call	?_Getimpl@?$_Func_class@XPAVRenderedBitmap@@@std@@ABEPAV?$_Func_base@XPAVRenderedBitmap@@@2@XZ 
mov	DWORD PTR tv88[ebp], eax
mov	esi, esp
push	0
mov	eax, DWORD PTR tv88[ebp]
mov	edx, DWORD PTR [eax]
mov	ecx, DWORD PTR tv88[ebp]
mov	eax, DWORD PTR [edx]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Set@?$_Func_class@XPAVRenderedBitmap@@@std@@AAEXPAV?$_Func_base@XPAVRenderedBitmap@@@2@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?_Empty@?$_Func_class@XPAVRenderedBitmap@@@std@@IBE_NXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getimpl@?$_Func_class@XPAVRenderedBitmap@@@std@@ABEPAV?$_Func_base@XPAVRenderedBitmap@@@2@XZ 
test	eax, eax
jne	SHORT $LN3@Empty
mov	DWORD PTR tv67[ebp], 1
jmp	SHORT $LN4@Empty
mov	DWORD PTR tv67[ebp], 0
mov	al, BYTE PTR tv67[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1?$_Func_class@XPAVRenderedBitmap@@@std@@QAE@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Tidy@?$_Func_class@XPAVRenderedBitmap@@@std@@IAEXXZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??R?$_Func_class@XPAVRenderedBitmap@@@std@@QBEXPAVRenderedBitmap@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Empty@?$_Func_class@XPAVRenderedBitmap@@@std@@IBE_NXZ 
movzx	eax, al
test	eax, eax
je	SHORT $LN2@operator
call	?_Xbad_function_call@std@@YAXXZ		
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getimpl@?$_Func_class@XPAVRenderedBitmap@@@std@@ABEPAV?$_Func_base@XPAVRenderedBitmap@@@2@XZ 
mov	DWORD PTR tv71[ebp], eax
lea	eax, DWORD PTR _<_Args_0>$[ebp]
push	eax
call	??$forward@PAVRenderedBitmap@@@std@@YA$$QAPAVRenderedBitmap@@AAPAV1@@Z 
add	esp, 4
mov	esi, esp
push	eax
mov	ecx, DWORD PTR tv71[ebp]
mov	edx, DWORD PTR [ecx]
mov	ecx, DWORD PTR tv71[ebp]
mov	eax, DWORD PTR [edx+8]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??0?$_Func_class@XPAVRenderedBitmap@@@std@@QAE@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	ecx, DWORD PTR _this$[ebp]
call	?_Set@?$_Func_class@XPAVRenderedBitmap@@@std@@AAEXPAV?$_Func_base@XPAVRenderedBitmap@@@2@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?ShouldSaveThumbnail@@YA_NAAUFileState@@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 332				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-332]
mov	ecx, 83					
mov	eax, -858993460				
rep stosd
push	4
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	eax, al
test	eax, eax
jne	SHORT $LN2@ShouldSave
xor	al, al
jmp	$LN1@ShouldSave
push	0
push	0
lea	ecx, DWORD PTR _list$[ebp]
call	??0?$Vec@PAUFileState@@@@QAE@IPAVAllocator@@@Z 
lea	eax, DWORD PTR _list$[ebp]
push	eax
mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A 
call	?GetFrequencyOrder@FileHistory@@QAEXAAV?$Vec@PAUFileState@@@@@Z 
push	0
mov	eax, DWORD PTR _ds$[ebp]
push	eax
lea	ecx, DWORD PTR _list$[ebp]
call	?Find@?$Vec@PAUFileState@@@@QBEHPAUFileState@@I@Z 
mov	DWORD PTR _idx$[ebp], eax
cmp	DWORD PTR _idx$[ebp], 0
jl	SHORT $LN4@ShouldSave
cmp	DWORD PTR _idx$[ebp], 20		
jl	SHORT $LN3@ShouldSave
mov	BYTE PTR $T3[ebp], 0
lea	ecx, DWORD PTR _list$[ebp]
call	??1?$Vec@PAUFileState@@@@QAE@XZ		
mov	al, BYTE PTR $T3[ebp]
jmp	SHORT $LN1@ShouldSave
mov	eax, DWORD PTR _ds$[ebp]
push	eax
call	?HasThumbnail@@YA_NAAUFileState@@@Z	
add	esp, 4
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN5@ShouldSave
mov	BYTE PTR $T2[ebp], 0
lea	ecx, DWORD PTR _list$[ebp]
call	??1?$Vec@PAUFileState@@@@QAE@XZ		
mov	al, BYTE PTR $T2[ebp]
jmp	SHORT $LN1@ShouldSave
mov	BYTE PTR $T1[ebp], 1
lea	ecx, DWORD PTR _list$[ebp]
call	??1?$Vec@PAUFileState@@@@QAE@XZ		
mov	al, BYTE PTR $T1[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN9@ShouldSave
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 332				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
DD	1
DD	$LN8@ShouldSave
DD	-88					
DD	84					
DD	$LN7@ShouldSave
DB	108					
DB	105					
DB	115					
DB	116					
DB	0
ENDP
?UpdateWindowRtlLayout@@YAXPAVWindowInfo@@@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 280				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-280]
mov	ecx, 70					
mov	eax, -858993460				
rep stosd
call	?IsUIRightToLeft@@YA_NXZ		
mov	BYTE PTR _isRTL$[ebp], al
mov	esi, esp
push	-20					
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__GetWindowLongW@8
cmp	esi, esp
call	__RTC_CheckEsp
and	eax, 4194304				
je	SHORT $LN13@UpdateWind
mov	DWORD PTR tv71[ebp], 1
jmp	SHORT $LN14@UpdateWind
mov	DWORD PTR tv71[ebp], 0
mov	dl, BYTE PTR tv71[ebp]
mov	BYTE PTR _wasRTL$[ebp], dl
movzx	eax, BYTE PTR _wasRTL$[ebp]
movzx	ecx, BYTE PTR _isRTL$[ebp]
cmp	eax, ecx
jne	SHORT $LN5@UpdateWind
jmp	$LN1@UpdateWind
mov	eax, DWORD PTR _win$[ebp]
mov	cl, BYTE PTR [eax+149]
mov	BYTE PTR _tocVisible$[ebp], cl
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	cl, BYTE PTR [eax+173]
mov	BYTE PTR _favVisible$[ebp], cl
movzx	eax, BYTE PTR _tocVisible$[ebp]
test	eax, eax
jne	SHORT $LN7@UpdateWind
movzx	eax, BYTE PTR _favVisible$[ebp]
test	eax, eax
je	SHORT $LN6@UpdateWind
push	0
push	0
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?SetSidebarVisibility@@YAXPAVWindowInfo@@_N1@Z 
add	esp, 12					
push	-20					
movzx	eax, BYTE PTR _isRTL$[ebp]
push	eax
push	5242880					
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+92]
push	edx
call	?ToggleWindowStyle@@YAXPAUHWND__@@K_NH@Z 
add	esp, 16					
push	-20					
movzx	eax, BYTE PTR _isRTL$[ebp]
push	eax
push	5242880					
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+136]
push	edx
call	?ToggleWindowStyle@@YAXPAUHWND__@@K_NH@Z 
add	esp, 16					
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+140]
push	ecx
call	?GetHwnd@@YAPAUHWND__@@PAULabelWithCloseWnd@@@Z 
add	esp, 4
mov	DWORD PTR _tocBoxTitle$[ebp], eax
push	-20					
movzx	eax, BYTE PTR _isRTL$[ebp]
push	eax
push	5242880					
mov	ecx, DWORD PTR _tocBoxTitle$[ebp]
push	ecx
call	?ToggleWindowStyle@@YAXPAUHWND__@@K_NH@Z 
add	esp, 16					
push	-20					
movzx	eax, BYTE PTR _isRTL$[ebp]
push	eax
push	5242880					
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+152]
push	edx
call	?ToggleWindowStyle@@YAXPAUHWND__@@K_NH@Z 
add	esp, 16					
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+156]
push	ecx
call	?GetHwnd@@YAPAUHWND__@@PAULabelWithCloseWnd@@@Z 
add	esp, 4
mov	DWORD PTR _favBoxTitle$[ebp], eax
push	-20					
movzx	eax, BYTE PTR _isRTL$[ebp]
push	eax
push	5242880					
mov	ecx, DWORD PTR _favBoxTitle$[ebp]
push	ecx
call	?ToggleWindowStyle@@YAXPAUHWND__@@K_NH@Z 
add	esp, 16					
push	-20					
movzx	eax, BYTE PTR _isRTL$[ebp]
push	eax
push	5242880					
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+160]
push	edx
call	?ToggleWindowStyle@@YAXPAUHWND__@@K_NH@Z 
add	esp, 16					
push	-20					
movzx	eax, BYTE PTR _isRTL$[ebp]
push	eax
push	5242880					
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+104]
push	edx
call	?ToggleWindowStyle@@YAXPAUHWND__@@K_NH@Z 
add	esp, 16					
push	-20					
movzx	eax, BYTE PTR _isRTL$[ebp]
push	eax
push	5242880					
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+100]
push	edx
call	?ToggleWindowStyle@@YAXPAUHWND__@@K_NH@Z 
add	esp, 16					
push	-20					
movzx	eax, BYTE PTR _isRTL$[ebp]
push	eax
push	5242880					
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+112]
push	edx
call	?ToggleWindowStyle@@YAXPAUHWND__@@K_NH@Z 
add	esp, 16					
push	-20					
movzx	eax, BYTE PTR _isRTL$[ebp]
push	eax
push	5242880					
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+108]
push	edx
call	?ToggleWindowStyle@@YAXPAUHWND__@@K_NH@Z 
add	esp, 16					
push	-20					
movzx	eax, BYTE PTR _isRTL$[ebp]
push	eax
push	5242880					
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+120]
push	edx
call	?ToggleWindowStyle@@YAXPAUHWND__@@K_NH@Z 
add	esp, 16					
push	-20					
movzx	eax, BYTE PTR _isRTL$[ebp]
push	eax
push	5242880					
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+268]
push	edx
call	?ToggleWindowStyle@@YAXPAUHWND__@@K_NH@Z 
add	esp, 16					
mov	DWORD PTR _i$1[ebp], 0
jmp	SHORT $LN4@UpdateWind
mov	eax, DWORD PTR _i$1[ebp]
add	eax, 1
mov	DWORD PTR _i$1[ebp], eax
cmp	DWORD PTR _i$1[ebp], 5
jge	SHORT $LN3@UpdateWind
push	-20					
movzx	eax, BYTE PTR _isRTL$[ebp]
push	eax
push	5242880					
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+272]
imul	eax, DWORD PTR _i$1[ebp], 24
mov	ecx, DWORD PTR [edx+eax+4]
push	ecx
call	?ToggleWindowStyle@@YAXPAUHWND__@@K_NH@Z 
add	esp, 16					
jmp	SHORT $LN2@UpdateWind
mov	esi, esp
push	0
push	0
push	798					
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?RelayoutCaption@@YAXPAVWindowInfo@@@Z	
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+832]
call	?Relayout@Notifications@@QAEXXZ		
movzx	eax, BYTE PTR _tocVisible$[ebp]
test	eax, eax
jne	SHORT $LN9@UpdateWind
movzx	eax, BYTE PTR _favVisible$[ebp]
test	eax, eax
je	SHORT $LN1@UpdateWind
movzx	eax, BYTE PTR _favVisible$[ebp]
push	eax
movzx	ecx, BYTE PTR _tocVisible$[ebp]
push	ecx
mov	edx, DWORD PTR _win$[ebp]
push	edx
call	?SetSidebarVisibility@@YAXPAVWindowInfo@@_N1@Z 
add	esp, 12					
movzx	eax, BYTE PTR _tocVisible$[ebp]
test	eax, eax
je	SHORT $LN10@UpdateWind
mov	esi, esp
push	0
push	0
push	5
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+136]
push	ecx
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
movzx	eax, BYTE PTR _favVisible$[ebp]
test	eax, eax
je	SHORT $LN1@UpdateWind
mov	esi, esp
push	0
push	0
push	5
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+152]
push	ecx
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
pop	edi
pop	esi
pop	ebx
add	esp, 280				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?UpdateSidebarDisplayState@@YAXPAVWindowInfo@@PAVTabInfo@@PAUFileState@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
xor	eax, eax
jne	SHORT $LN5@UpdateSide
cmp	DWORD PTR _tab$[ebp], 0
jne	SHORT $LN11@UpdateSide
mov	BYTE PTR tv66[ebp], 1
jmp	SHORT $LN12@UpdateSide
mov	BYTE PTR tv66[ebp], 0
movzx	eax, BYTE PTR tv66[ebp]
push	eax
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@UpdateSide
mov	eax, DWORD PTR _ds$[ebp]
mov	ecx, DWORD PTR _tab$[ebp]
mov	dl, BYTE PTR [ecx+12]
mov	BYTE PTR [eax+68], dl
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+148]
test	ecx, ecx
je	SHORT $LN8@UpdateSide
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR _tab$[ebp]
cmp	ecx, DWORD PTR [eax+88]
jne	SHORT $LN8@UpdateSide
mov	ecx, DWORD PTR _tab$[ebp]
add	ecx, 20					
call	?Reset@?$Vec@H@@QAEXXZ			
mov	esi, esp
push	0
push	0
push	4362					
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+144]
push	ecx
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _hRoot$1[ebp], eax
cmp	DWORD PTR _hRoot$1[ebp], 0
je	SHORT $LN8@UpdateSide
mov	eax, DWORD PTR _hRoot$1[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+144]
push	edx
mov	eax, DWORD PTR _tab$[ebp]
push	eax
call	?UpdateTocExpansionState@@YAXPAVTabInfo@@PAUHWND__@@PAU_TREEITEM@@@Z 
add	esp, 12					
mov	eax, DWORD PTR _tab$[ebp]
add	eax, 20					
push	eax
mov	ecx, DWORD PTR _ds$[ebp]
mov	ecx, DWORD PTR [ecx+84]
call	??4?$Vec@H@@QAEAAV0@ABV0@@Z		
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?UpdateDisplayStateWindowRect@@YAXAAVWindowInfo@@AAUFileState@@_N@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR _updateGlobal$[ebp]
test	eax, eax
je	SHORT $LN2@UpdateDisp
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?RememberDefaultWindowPosition@@YAXAAVWindowInfo@@@Z 
add	esp, 4
mov	eax, DWORD PTR _ds$[ebp]
mov	ecx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	edx, DWORD PTR [ecx+208]
mov	DWORD PTR [eax+48], edx
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
add	eax, 212				
mov	ecx, DWORD PTR _ds$[ebp]
add	ecx, 52					
mov	edx, DWORD PTR [eax]
mov	DWORD PTR [ecx], edx
mov	edx, DWORD PTR [eax+4]
mov	DWORD PTR [ecx+4], edx
mov	edx, DWORD PTR [eax+8]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR [eax+12]
mov	DWORD PTR [ecx+12], eax
mov	eax, DWORD PTR _ds$[ebp]
mov	ecx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	edx, DWORD PTR [ecx+232]
mov	DWORD PTR [eax+72], edx
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?RememberDefaultWindowPosition@@YAXAAVWindowInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 240				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-240]
mov	ecx, 60					
mov	eax, -858993460				
rep stosd
mov	esi, esp
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__IsWindowVisible@4
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
jne	SHORT $LN2@RememberDe
jmp	$LN1@RememberDe
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
je	SHORT $LN3@RememberDe
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+780]
mov	DWORD PTR [eax+208], edx
jmp	SHORT $LN4@RememberDe
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+772]
test	ecx, ecx
je	SHORT $LN5@RememberDe
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	DWORD PTR [eax+208], 3
jmp	SHORT $LN4@RememberDe
mov	esi, esp
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__IsZoomed@4
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	SHORT $LN7@RememberDe
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	DWORD PTR [eax+208], 2
jmp	SHORT $LN4@RememberDe
mov	esi, esp
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__IsIconic@4
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
jne	SHORT $LN4@RememberDe
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	DWORD PTR [eax+208], 1
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+136]
push	ecx
lea	ecx, DWORD PTR $T2[ebp]
call	??0WindowRect@@QAE@PAUHWND__@@@Z	
mov	edx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	eax, DWORD PTR [eax+8]
mov	DWORD PTR [edx+232], eax
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
cmp	DWORD PTR [eax+208], 1
jne	SHORT $LN1@RememberDe
mov	esi, esp
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__IsIconic@4
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
jne	SHORT $LN1@RememberDe
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
jne	SHORT $LN1@RememberDe
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
lea	ecx, DWORD PTR $T1[ebp]
call	??0WindowRect@@QAE@PAUHWND__@@@Z	
mov	edx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
add	edx, 212				
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR [edx], ecx
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR [edx+4], ecx
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR [edx+8], ecx
mov	eax, DWORD PTR [eax+12]
mov	DWORD PTR [edx+12], eax
pop	edi
pop	esi
pop	ebx
add	esp, 240				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$StartsWith@D@str@@YA_NPBD0@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _txt$[ebp]
push	eax
call	?Len@str@@YAIPBD@Z			
add	esp, 4
push	eax
mov	ecx, DWORD PTR _txt$[ebp]
push	ecx
mov	edx, DWORD PTR _str$[ebp]
push	edx
call	?EqN@str@@YA_NPBD0I@Z			
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??_GHwndPasswordUI@@UAEPAXI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1HwndPasswordUI@@UAE@XZ
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	12					
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1HwndPasswordUI@@UAE@XZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1PasswordUI@@UAE@XZ			
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?GetPassword@HwndPasswordUI@@UAEPA_WPB_WPAEQAEPA_N@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 280				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-280]
mov	ecx, 70					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	eax, DWORD PTR _fileName$[ebp]
push	eax
mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A 
call	?Find@FileHistory@@QBEPAUFileState@@PB_WPAI@Z 
mov	DWORD PTR _fileFromHistory$[ebp], eax
cmp	DWORD PTR _fileFromHistory$[ebp], 0
je	$LN2@GetPasswor
mov	eax, DWORD PTR _fileFromHistory$[ebp]
cmp	DWORD PTR [eax+16], 0
je	$LN2@GetPasswor
push	16					
mov	eax, DWORD PTR _fileDigest$[ebp]
push	eax
call	?MemToHex@str@@YAPADPBEI@Z		
add	esp, 8
push	eax
lea	ecx, DWORD PTR _fingerprint$3[ebp]
call	??0?$ScopedMem@D@@QAE@PAD@Z		
lea	ecx, DWORD PTR _fingerprint$3[ebp]
call	?Get@?$ScopedMem@D@@QBEPADXZ		
push	eax
mov	eax, DWORD PTR _fileFromHistory$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
call	??$StartsWith@D@str@@YA_NPBD0@Z		
add	esp, 8
mov	edx, DWORD PTR _saveKey$[ebp]
mov	BYTE PTR [edx], al
mov	eax, DWORD PTR _saveKey$[ebp]
movzx	ecx, BYTE PTR [eax]
test	ecx, ecx
je	SHORT $LN3@GetPasswor
push	32					
mov	eax, DWORD PTR _decryptionKeyOut$[ebp]
push	eax
mov	ecx, DWORD PTR _fileFromHistory$[ebp]
mov	edx, DWORD PTR [ecx+16]
add	edx, 32					
push	edx
call	?HexToMem@str@@YA_NPBDPAEI@Z		
add	esp, 12					
movzx	eax, al
test	eax, eax
je	SHORT $LN3@GetPasswor
mov	DWORD PTR $T2[ebp], 0
lea	ecx, DWORD PTR _fingerprint$3[ebp]
call	??1?$ScopedMem@D@@QAE@XZ		
mov	eax, DWORD PTR $T2[ebp]
jmp	$LN1@GetPasswor
lea	ecx, DWORD PTR _fingerprint$3[ebp]
call	??1?$ScopedMem@D@@QAE@XZ		
mov	eax, DWORD PTR _saveKey$[ebp]
mov	BYTE PTR [eax], 0
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	ecx, DWORD PTR [eax+156]
call	?Count@?$Vec@PA_W@@QBEIXZ		
mov	ecx, DWORD PTR _this$[ebp]
cmp	DWORD PTR [ecx+8], eax
jae	SHORT $LN4@GetPasswor
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR tv139[ebp], ecx
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+8]
add	eax, 1
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx+8], eax
mov	edx, DWORD PTR tv139[ebp]
push	edx
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	ecx, DWORD PTR [eax+156]
call	?At@?$Vec@PA_W@@QBEAAPA_WI@Z		
mov	ecx, DWORD PTR [eax]
push	ecx
call	?Dup@str@@YAPA_WPB_W@Z			
add	esp, 4
jmp	$LN1@GetPasswor
call	?IsStressTesting@@YA_NXZ		
movzx	eax, al
test	eax, eax
je	SHORT $LN5@GetPasswor
xor	eax, eax
jmp	$LN1@GetPasswor
lea	ecx, DWORD PTR _urlName$[ebp]
call	??0?$ScopedMem@_W@@QAE@XZ		
cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	
je	SHORT $LN6@GetPasswor
mov	eax, DWORD PTR ?gPluginURL@@3PB_WB	
push	eax
call	?GetFileName@url@@YAPA_WPB_W@Z		
add	esp, 4
push	eax
lea	ecx, DWORD PTR _urlName$[ebp]
call	?Set@?$ScopedMem@_W@@QAEXPA_W@Z		
lea	ecx, DWORD PTR _urlName$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
test	eax, eax
je	SHORT $LN6@GetPasswor
lea	ecx, DWORD PTR _urlName$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
mov	DWORD PTR _fileName$[ebp], eax
mov	eax, DWORD PTR _fileName$[ebp]
push	eax
call	?GetBaseName@path@@YAPB_WPB_W@Z		
add	esp, 4
mov	DWORD PTR _fileName$[ebp], eax
mov	esi, esp
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	DWORD PTR __imp__IsWindow@4
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
jne	SHORT $LN8@GetPasswor
mov	esi, esp
call	DWORD PTR __imp__GetForegroundWindow@0
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx+4], eax
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+188]
test	ecx, ecx
je	SHORT $LN10@GetPasswor
mov	edx, DWORD PTR _saveKey$[ebp]
mov	DWORD PTR tv169[ebp], edx
jmp	SHORT $LN11@GetPasswor
mov	DWORD PTR tv169[ebp], 0
mov	eax, DWORD PTR tv169[ebp]
mov	DWORD PTR _rememberPwd$[ebp], eax
mov	eax, DWORD PTR _rememberPwd$[ebp]
push	eax
mov	ecx, DWORD PTR _fileName$[ebp]
push	ecx
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	?Dialog_GetPassword@@YAPA_WPAUHWND__@@PB_WPA_N@Z 
add	esp, 12					
mov	DWORD PTR $T1[ebp], eax
lea	ecx, DWORD PTR _urlName$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
mov	eax, DWORD PTR $T1[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN15@GetPasswor
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 280				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	16					
npad	1
DD	2
DD	$LN14@GetPasswor
DD	-32					
DD	4
DD	$LN12@GetPasswor
DD	-44					
DD	4
DD	$LN13@GetPasswor
DB	117					
DB	114					
DB	108					
DB	78					
DB	97					
DB	109					
DB	101					
DB	0
DB	102					
DB	105					
DB	110					
DB	103					
DB	101					
DB	114					
DB	112					
DB	114					
DB	105					
DB	110					
DB	116					
DB	0
ENDP
??0HwndPasswordUI@@QAE@PAUHWND__@@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0PasswordUI@@QAE@XZ
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7HwndPasswordUI@@6B@
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _hwnd$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax+8], 0
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?0V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@@?$function@$$A6A_NAAPAVWindowInfo@@@Z@std@@QAE@V_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_class@_NAAPAVWindowInfo@@@std@@QAE@XZ 
lea	eax, DWORD PTR __Func$[ebp]
push	eax
call	??$move@AAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@std@@YA$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@?$_Func_class@_NAAPAVWindowInfo@@@std@@IAEX$$QAV<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?0V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@@?$function@$$A6A_NAAPAVTabInfo@@@Z@std@@QAE@V_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_class@_NAAPAVTabInfo@@@std@@QAE@XZ 
lea	eax, DWORD PTR __Func$[ebp]
push	eax
call	??$move@AAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@std@@YA$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@?$_Func_class@_NAAPAVTabInfo@@@std@@IAEX$$QAV<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1?$function@$$A6A_NAAPAVTabInfo@@@Z@std@@QAE@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_class@_NAAPAVTabInfo@@@std@@QAE@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Getspace@?$_Func_class@_NAAPAVTabInfo@@@std@@ABEPBXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Getspace@?$_Func_class@_NAAPAVTabInfo@@@std@@AAEPAXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Set@?$_Func_class@_NAAPAVTabInfo@@@std@@AAEXPAV?$_Func_base@_NAAPAVTabInfo@@@2@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, 4
imul	ecx, eax, 9
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR __Ptr$[ebp]
mov	DWORD PTR [edx+ecx], eax
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
?_Getimpl@?$_Func_class@_NAAPAVTabInfo@@@std@@ABEPAV?$_Func_base@_NAAPAVTabInfo@@@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, 4
imul	ecx, eax, 9
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+ecx]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Local@?$_Func_class@_NAAPAVTabInfo@@@std@@ABE_NXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getimpl@?$_Func_class@_NAAPAVTabInfo@@@std@@ABEPAV?$_Func_base@_NAAPAVTabInfo@@@2@XZ 
mov	esi, eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getspace@?$_Func_class@_NAAPAVTabInfo@@@std@@ABEPBXXZ 
cmp	esi, eax
jne	SHORT $LN3@Local
mov	DWORD PTR tv69[ebp], 1
jmp	SHORT $LN4@Local
mov	DWORD PTR tv69[ebp], 0
mov	al, BYTE PTR tv69[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Tidy@?$_Func_class@_NAAPAVTabInfo@@@std@@IAEXXZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 212				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-212]
mov	ecx, 53					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Empty@?$_Func_class@_NAAPAVTabInfo@@@std@@IBE_NXZ 
movzx	eax, al
test	eax, eax
jne	SHORT $LN1@Tidy
mov	ecx, DWORD PTR _this$[ebp]
call	?_Local@?$_Func_class@_NAAPAVTabInfo@@@std@@ABE_NXZ 
movzx	eax, al
test	eax, eax
jne	SHORT $LN4@Tidy
mov	BYTE PTR tv78[ebp], 1
jmp	SHORT $LN5@Tidy
mov	BYTE PTR tv78[ebp], 0
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getimpl@?$_Func_class@_NAAPAVTabInfo@@@std@@ABEPAV?$_Func_base@_NAAPAVTabInfo@@@2@XZ 
mov	DWORD PTR tv71[ebp], eax
mov	esi, esp
movzx	ecx, BYTE PTR tv78[ebp]
push	ecx
mov	edx, DWORD PTR tv71[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR tv71[ebp]
mov	edx, DWORD PTR [eax+16]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	0
mov	ecx, DWORD PTR _this$[ebp]
call	?_Set@?$_Func_class@_NAAPAVTabInfo@@@std@@AAEXPAV?$_Func_base@_NAAPAVTabInfo@@@2@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 212				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Empty@?$_Func_class@_NAAPAVTabInfo@@@std@@IBE_NXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getimpl@?$_Func_class@_NAAPAVTabInfo@@@std@@ABEPAV?$_Func_base@_NAAPAVTabInfo@@@2@XZ 
test	eax, eax
jne	SHORT $LN3@Empty
mov	DWORD PTR tv67[ebp], 1
jmp	SHORT $LN4@Empty
mov	DWORD PTR tv67[ebp], 0
mov	al, BYTE PTR tv67[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1?$_Func_class@_NAAPAVTabInfo@@@std@@QAE@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Tidy@?$_Func_class@_NAAPAVTabInfo@@@std@@IAEXXZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??R?$_Func_class@_NAAPAVTabInfo@@@std@@QBE_NAAPAVTabInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Empty@?$_Func_class@_NAAPAVTabInfo@@@std@@IBE_NXZ 
movzx	eax, al
test	eax, eax
je	SHORT $LN2@operator
call	?_Xbad_function_call@std@@YAXXZ		
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getimpl@?$_Func_class@_NAAPAVTabInfo@@@std@@ABEPAV?$_Func_base@_NAAPAVTabInfo@@@2@XZ 
mov	DWORD PTR tv71[ebp], eax
mov	eax, DWORD PTR _<_Args_0>$[ebp]
push	eax
call	??$forward@AAPAVTabInfo@@@std@@YAAAPAVTabInfo@@AAPAV1@@Z 
add	esp, 4
mov	esi, esp
push	eax
mov	ecx, DWORD PTR tv71[ebp]
mov	edx, DWORD PTR [ecx]
mov	ecx, DWORD PTR tv71[ebp]
mov	eax, DWORD PTR [edx+8]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??0?$_Func_class@_NAAPAVTabInfo@@@std@@QAE@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	ecx, DWORD PTR _this$[ebp]
call	?_Set@?$_Func_class@_NAAPAVTabInfo@@@std@@AAEXPAV?$_Func_base@_NAAPAVTabInfo@@@2@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@QAE@AAPAVController@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _<ctrl>$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
??R_lambda_8579722a4e67c017fd5a14ab4d3a75de_@@QBE_NPAVTabInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _tab$[ebp]
mov	eax, DWORD PTR [edx+4]
cmp	eax, DWORD PTR [ecx]
jne	SHORT $LN3@operator
mov	DWORD PTR tv68[ebp], 1
jmp	SHORT $LN4@operator
mov	DWORD PTR tv68[ebp], 0
mov	al, BYTE PTR tv68[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
??0_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@QAE@AAPAVController@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _<ctrl>$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
??R_lambda_28a72a76c5b2c3b938dee32c6e1a2ec4_@@QBE@PAVWindowInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 232				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-232]
mov	ecx, 58					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
lea	ecx, DWORD PTR $T1[ebp]
call	??0<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@QAE@AAPAVController@@@Z 
sub	esp, 40					
mov	ecx, esp
mov	edx, DWORD PTR [eax]
push	edx
call	??$?0V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@?$function@$$A6A_NAAPAVTabInfo@@@Z@std@@QAE@V<lambda_8579722a4e67c017fd5a14ab4d3a75de>@@@Z 
mov	ecx, DWORD PTR _win$[ebp]
add	ecx, 4
call	?FindEl@?$Vec@PAVTabInfo@@@@QAEAAPAVTabInfo@@V?$function@$$A6A_NAAPAVTabInfo@@@Z@std@@@Z 
cmp	DWORD PTR [eax], 0
je	SHORT $LN3@operator
mov	DWORD PTR tv84[ebp], 1
jmp	SHORT $LN4@operator
mov	DWORD PTR tv84[ebp], 0
mov	al, BYTE PTR tv84[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 232				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??$?0V_lambda_8ad1c185be25e490e788bf92305592c9_@@@?$function@$$A6A_NAAPAVWindowInfo@@@Z@std@@QAE@V_lambda_8ad1c185be25e490e788bf92305592c9_@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$_Func_class@_NAAPAVWindowInfo@@@std@@QAE@XZ 
lea	eax, DWORD PTR __Func$[ebp]
push	eax
call	??$move@AAV<lambda_8ad1c185be25e490e788bf92305592c9>@@@std@@YA$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@AAV1@@Z 
add	esp, 4
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??$_Reset@V<lambda_8ad1c185be25e490e788bf92305592c9>@@@?$_Func_class@_NAAPAVWindowInfo@@@std@@IAEX$$QAV<lambda_8ad1c185be25e490e788bf92305592c9>@@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1?$function@$$A6A_NAAPAVWindowInfo@@@Z@std@@QAE@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$_Func_class@_NAAPAVWindowInfo@@@std@@QAE@XZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Getspace@?$_Func_class@_NAAPAVWindowInfo@@@std@@ABEPBXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Getspace@?$_Func_class@_NAAPAVWindowInfo@@@std@@AAEPAXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Set@?$_Func_class@_NAAPAVWindowInfo@@@std@@AAEXPAV?$_Func_base@_NAAPAVWindowInfo@@@2@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, 4
imul	ecx, eax, 9
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR __Ptr$[ebp]
mov	DWORD PTR [edx+ecx], eax
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
?_Getimpl@?$_Func_class@_NAAPAVWindowInfo@@@std@@ABEPAV?$_Func_base@_NAAPAVWindowInfo@@@2@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, 4
imul	ecx, eax, 9
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+ecx]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Local@?$_Func_class@_NAAPAVWindowInfo@@@std@@ABE_NXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getimpl@?$_Func_class@_NAAPAVWindowInfo@@@std@@ABEPAV?$_Func_base@_NAAPAVWindowInfo@@@2@XZ 
mov	esi, eax
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getspace@?$_Func_class@_NAAPAVWindowInfo@@@std@@ABEPBXXZ 
cmp	esi, eax
jne	SHORT $LN3@Local
mov	DWORD PTR tv69[ebp], 1
jmp	SHORT $LN4@Local
mov	DWORD PTR tv69[ebp], 0
mov	al, BYTE PTR tv69[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Tidy@?$_Func_class@_NAAPAVWindowInfo@@@std@@IAEXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 212				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-212]
mov	ecx, 53					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Empty@?$_Func_class@_NAAPAVWindowInfo@@@std@@IBE_NXZ 
movzx	eax, al
test	eax, eax
jne	SHORT $LN1@Tidy
mov	ecx, DWORD PTR _this$[ebp]
call	?_Local@?$_Func_class@_NAAPAVWindowInfo@@@std@@ABE_NXZ 
movzx	eax, al
test	eax, eax
jne	SHORT $LN4@Tidy
mov	BYTE PTR tv78[ebp], 1
jmp	SHORT $LN5@Tidy
mov	BYTE PTR tv78[ebp], 0
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getimpl@?$_Func_class@_NAAPAVWindowInfo@@@std@@ABEPAV?$_Func_base@_NAAPAVWindowInfo@@@2@XZ 
mov	DWORD PTR tv71[ebp], eax
mov	esi, esp
movzx	ecx, BYTE PTR tv78[ebp]
push	ecx
mov	edx, DWORD PTR tv71[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR tv71[ebp]
mov	edx, DWORD PTR [eax+16]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	0
mov	ecx, DWORD PTR _this$[ebp]
call	?_Set@?$_Func_class@_NAAPAVWindowInfo@@@std@@AAEXPAV?$_Func_base@_NAAPAVWindowInfo@@@2@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 212				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?_Empty@?$_Func_class@_NAAPAVWindowInfo@@@std@@IBE_NXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getimpl@?$_Func_class@_NAAPAVWindowInfo@@@std@@ABEPAV?$_Func_base@_NAAPAVWindowInfo@@@2@XZ 
test	eax, eax
jne	SHORT $LN3@Empty
mov	DWORD PTR tv67[ebp], 1
jmp	SHORT $LN4@Empty
mov	DWORD PTR tv67[ebp], 0
mov	al, BYTE PTR tv67[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1?$_Func_class@_NAAPAVWindowInfo@@@std@@QAE@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Tidy@?$_Func_class@_NAAPAVWindowInfo@@@std@@IAEXXZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??R?$_Func_class@_NAAPAVWindowInfo@@@std@@QBE_NAAPAVWindowInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?_Empty@?$_Func_class@_NAAPAVWindowInfo@@@std@@IBE_NXZ 
movzx	eax, al
test	eax, eax
je	SHORT $LN2@operator
call	?_Xbad_function_call@std@@YAXXZ		
mov	ecx, DWORD PTR _this$[ebp]
call	?_Getimpl@?$_Func_class@_NAAPAVWindowInfo@@@std@@ABEPAV?$_Func_base@_NAAPAVWindowInfo@@@2@XZ 
mov	DWORD PTR tv71[ebp], eax
mov	eax, DWORD PTR _<_Args_0>$[ebp]
push	eax
call	??$forward@AAPAVWindowInfo@@@std@@YAAAPAVWindowInfo@@AAPAV1@@Z 
add	esp, 4
mov	esi, esp
push	eax
mov	ecx, DWORD PTR tv71[ebp]
mov	edx, DWORD PTR [ecx]
mov	ecx, DWORD PTR tv71[ebp]
mov	eax, DWORD PTR [edx+8]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??0?$_Func_class@_NAAPAVWindowInfo@@@std@@QAE@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	ecx, DWORD PTR _this$[ebp]
call	?_Set@?$_Func_class@_NAAPAVWindowInfo@@@std@@AAEXPAV?$_Func_base@_NAAPAVWindowInfo@@@2@@Z 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0_lambda_8ad1c185be25e490e788bf92305592c9_@@QAE@AAPAVTabInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _<tab>$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
??R_lambda_8ad1c185be25e490e788bf92305592c9_@@QBE_NPAVWindowInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx]
push	edx
mov	ecx, DWORD PTR _win$[ebp]
add	ecx, 4
call	?Contains@?$Vec@PAVTabInfo@@@@QBE_NPAVTabInfo@@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??EIter@?$Vec@PAVTabInfo@@@@QAEAAV01@XZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
add	ecx, 1
mov	edx, DWORD PTR _this$[ebp]
mov	DWORD PTR [edx+4], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??DIter@?$Vec@PAVTabInfo@@@@QBEAAPAVTabInfo@@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [edx]
call	?At@?$Vec@PAVTabInfo@@@@QBEAAPAVTabInfo@@I@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??9Iter@?$Vec@PAVTabInfo@@@@QBE_NABV01@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _other$[ebp]
mov	edx, DWORD PTR [eax+4]
cmp	edx, DWORD PTR [ecx+4]
je	SHORT $LN3@operator
mov	DWORD PTR tv67[ebp], 1
jmp	SHORT $LN4@operator
mov	DWORD PTR tv67[ebp], 0
mov	al, BYTE PTR tv67[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
??0Iter@?$Vec@PAVTabInfo@@@@QAE@PAV1@I@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _vec$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _pos$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	8
ENDP
??EIter@?$Vec@PAVWindowInfo@@@@QAEAAV01@XZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
add	ecx, 1
mov	edx, DWORD PTR _this$[ebp]
mov	DWORD PTR [edx+4], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??DIter@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [edx]
call	?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??9Iter@?$Vec@PAVWindowInfo@@@@QBE_NABV01@@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _other$[ebp]
mov	edx, DWORD PTR [eax+4]
cmp	edx, DWORD PTR [ecx+4]
je	SHORT $LN3@operator
mov	DWORD PTR tv67[ebp], 1
jmp	SHORT $LN4@operator
mov	DWORD PTR tv67[ebp], 0
mov	al, BYTE PTR tv67[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
??0Iter@?$Vec@PAVWindowInfo@@@@QAE@PAV1@I@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _vec$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _pos$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	8
ENDP
?FavSplitterCb@@YA_NPAX_N@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 332				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-332]
mov	ecx, 83					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _ctx$[ebp]
mov	DWORD PTR _win$[ebp], eax
lea	ecx, DWORD PTR _pcur$[ebp]
call	??0?$PointT@H@geomutil@@QAE@XZ		
lea	eax, DWORD PTR _pcur$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+136]
push	edx
call	?GetCursorPosInHwnd@@YA_NPAUHWND__@@AAV?$PointT@H@geomutil@@@Z 
add	esp, 8
mov	eax, DWORD PTR _pcur$[ebp+4]
mov	DWORD PTR _tocDy$[ebp], eax
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
lea	ecx, DWORD PTR _rFrame$[ebp]
call	??0ClientRect@@QAE@PAUHWND__@@@Z	
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+136]
push	ecx
lea	ecx, DWORD PTR _rToc$[ebp]
call	??0ClientRect@@QAE@PAUHWND__@@@Z	
xor	eax, eax
jne	SHORT $LN5@FavSplitte
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+152]
push	ecx
lea	ecx, DWORD PTR $T3[ebp]
call	??0ClientRect@@QAE@PAUHWND__@@@Z	
mov	edx, DWORD PTR _rToc$[ebp+8]
cmp	edx, DWORD PTR [eax+8]
je	SHORT $LN13@FavSplitte
mov	BYTE PTR tv90[ebp], 1
jmp	SHORT $LN14@FavSplitte
mov	BYTE PTR tv90[ebp], 0
movzx	eax, BYTE PTR tv90[ebp]
push	eax
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@FavSplitte
mov	DWORD PTR $T2[ebp], 100			
lea	eax, DWORD PTR _rToc$[ebp+12]
push	eax
lea	ecx, DWORD PTR $T2[ebp]
push	ecx
call	??$min@H@std@@YAABHABH0@Z		
add	esp, 8
mov	edx, DWORD PTR _tocDy$[ebp]
cmp	edx, DWORD PTR [eax]
jl	SHORT $LN9@FavSplitte
mov	eax, DWORD PTR _rFrame$[ebp+12]
sub	eax, 100				
mov	DWORD PTR $T1[ebp], eax
lea	ecx, DWORD PTR _rToc$[ebp+12]
push	ecx
lea	edx, DWORD PTR $T1[ebp]
push	edx
call	??$max@H@std@@YAABHABH0@Z		
add	esp, 8
mov	ecx, DWORD PTR _tocDy$[ebp]
cmp	ecx, DWORD PTR [eax]
jle	SHORT $LN8@FavSplitte
xor	al, al
jmp	SHORT $LN1@FavSplitte
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	ecx, DWORD PTR _tocDy$[ebp]
mov	DWORD PTR [eax+236], ecx
movzx	eax, BYTE PTR _done$[ebp]
test	eax, eax
jne	SHORT $LN11@FavSplitte
mov	ecx, DWORD PTR _win$[ebp]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
test	eax, eax
jne	SHORT $LN10@FavSplitte
mov	eax, DWORD PTR _rToc$[ebp+8]
push	eax
push	0
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?RelayoutFrame@@YAXPAVWindowInfo@@_NH@Z	
add	esp, 12					
mov	al, 1
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN19@FavSplitte
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 332				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	3
DD	$LN18@FavSplitte
DD	-24					
DD	8
DD	$LN15@FavSplitte
DD	-60					
DD	16					
DD	$LN16@FavSplitte
DD	-84					
DD	16					
DD	$LN17@FavSplitte
DB	114					
DB	84					
DB	111					
DB	99					
DB	0
DB	114					
DB	70					
DB	114					
DB	97					
DB	109					
DB	101					
DB	0
DB	112					
DB	99					
DB	117					
DB	114					
DB	0
ENDP
?SidebarSplitterCb@@YA_NPAX_N@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 304				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-304]
mov	ecx, 76					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _ctx$[ebp]
mov	DWORD PTR _win$[ebp], eax
lea	ecx, DWORD PTR _pcur$[ebp]
call	??0?$PointT@H@geomutil@@QAE@XZ		
lea	eax, DWORD PTR _pcur$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+92]
push	edx
call	?GetCursorPosInHwnd@@YA_NPAUHWND__@@AAV?$PointT@H@geomutil@@@Z 
add	esp, 8
mov	eax, DWORD PTR _pcur$[ebp]
mov	DWORD PTR _sidebarDx$[ebp], eax
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
lea	ecx, DWORD PTR _rFrame$[ebp]
call	??0ClientRect@@QAE@PAUHWND__@@@Z	
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+136]
push	ecx
lea	ecx, DWORD PTR _rToc$[ebp]
call	??0ClientRect@@QAE@PAUHWND__@@@Z	
mov	DWORD PTR $T2[ebp], 150			
lea	eax, DWORD PTR _rToc$[ebp+8]
push	eax
lea	ecx, DWORD PTR $T2[ebp]
push	ecx
call	??$min@H@std@@YAABHABH0@Z		
add	esp, 8
mov	edx, DWORD PTR _sidebarDx$[ebp]
cmp	edx, DWORD PTR [eax]
jl	SHORT $LN3@SidebarSpl
mov	eax, DWORD PTR _rFrame$[ebp+8]
cdq
sub	eax, edx
sar	eax, 1
mov	DWORD PTR $T1[ebp], eax
lea	eax, DWORD PTR _rToc$[ebp+8]
push	eax
lea	ecx, DWORD PTR $T1[ebp]
push	ecx
call	??$max@H@std@@YAABHABH0@Z		
add	esp, 8
mov	edx, DWORD PTR _sidebarDx$[ebp]
cmp	edx, DWORD PTR [eax]
jle	SHORT $LN2@SidebarSpl
xor	al, al
jmp	SHORT $LN1@SidebarSpl
movzx	eax, BYTE PTR _done$[ebp]
test	eax, eax
jne	SHORT $LN5@SidebarSpl
mov	ecx, DWORD PTR _win$[ebp]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
test	eax, eax
jne	SHORT $LN4@SidebarSpl
mov	eax, DWORD PTR _sidebarDx$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?RelayoutFrame@@YAXPAVWindowInfo@@_NH@Z	
add	esp, 12					
mov	al, 1
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN11@SidebarSpl
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 304				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	3
DD	$LN10@SidebarSpl
DD	-24					
DD	8
DD	$LN7@SidebarSpl
DD	-60					
DD	16					
DD	$LN8@SidebarSpl
DD	-84					
DD	16					
DD	$LN9@SidebarSpl
DB	114					
DB	84					
DB	111					
DB	99					
DB	0
DB	114					
DB	70					
DB	114					
DB	97					
DB	109					
DB	101					
DB	0
DB	112					
DB	99					
DB	117					
DB	114					
DB	0
ENDP
?UpdatePageInfoHelper@@YAXPAVWindowInfo@@PAVNotificationWnd@@H@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 232				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-232]
mov	ecx, 58					
mov	eax, -858993460				
rep stosd
mov	esi, esp
mov	eax, DWORD PTR _pageNo$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
mov	eax, DWORD PTR [edx+100]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN2@UpdatePage
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+20]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _pageNo$[ebp], eax
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+12]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
mov	eax, DWORD PTR _pageNo$[ebp]
push	eax
push	OFFSET ??_C@_05CLKFBAFO@Page?3?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
push	OFFSET ??_C@_1BG@ONMODGKF@?$AA?$CF?$AAs?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?1?$AA?5?$AA?$CF?$AAd?$AA?$AA@
call	?Format@str@@YAPA_WPB_WZZ		
add	esp, 16					
push	eax
lea	ecx, DWORD PTR _pageInfo$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+88]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
movzx	eax, al
test	eax, eax
je	SHORT $LN3@UpdatePage
mov	esi, esp
mov	eax, DWORD PTR _pageNo$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
mov	eax, DWORD PTR [edx+92]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
lea	ecx, DWORD PTR _label$2[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+12]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
mov	eax, DWORD PTR _pageNo$[ebp]
push	eax
mov	ecx, DWORD PTR _label$2[ebp]
push	ecx
push	OFFSET ??_C@_05CLKFBAFO@Page?3?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
push	OFFSET ??_C@_1CA@FGPOPMDD@?$AA?$CF?$AAs?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?5?$AA?1?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AA@
call	?Format@str@@YAPA_WPB_WZZ		
add	esp, 20					
push	eax
lea	ecx, DWORD PTR _pageInfo$[ebp]
call	?Set@?$ScopedMem@_W@@QAEXPA_W@Z		
lea	ecx, DWORD PTR _label$2[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
cmp	DWORD PTR _wnd$[ebp], 0
jne	SHORT $LN4@UpdatePage
call	?IsShiftPressed@@YA_NXZ			
movzx	eax, al
test	eax, eax
je	SHORT $LN7@UpdatePage
mov	DWORD PTR tv179[ebp], 1
jmp	SHORT $LN8@UpdatePage
mov	DWORD PTR tv179[ebp], 0
mov	ecx, DWORD PTR tv179[ebp]
mov	DWORD PTR _options$1[ebp], ecx
push	4
mov	eax, DWORD PTR _options$1[ebp]
push	eax
lea	ecx, DWORD PTR _pageInfo$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	ecx, DWORD PTR _win$[ebp]
call	?ShowNotification@WindowInfo@@QAEXPB_WHW4NotificationGroup@@@Z 
jmp	SHORT $LN5@UpdatePage
push	0
push	0
lea	ecx, DWORD PTR _pageInfo$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	ecx, DWORD PTR _wnd$[ebp]
call	?UpdateMessage@NotificationWnd@@QAEXPB_WH_N@Z 
lea	ecx, DWORD PTR _pageInfo$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN12@UpdatePage
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 232				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	2
DD	2
DD	$LN11@UpdatePage
DD	-8					
DD	4
DD	$LN9@UpdatePage
DD	-20					
DD	4
DD	$LN10@UpdatePage
DB	108					
DB	97					
DB	98					
DB	101					
DB	108					
DB	0
DB	112					
DB	97					
DB	103					
DB	101					
DB	73					
DB	110					
DB	102					
DB	111					
DB	0
ENDP
?CloseDocumentInTab@@YAXPAVWindowInfo@@_N1@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 280				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-280]
mov	ecx, 70					
mov	eax, -858993460				
rep stosd
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
jne	SHORT $LN15@CloseDocum
mov	DWORD PTR tv67[ebp], 1
jmp	SHORT $LN16@CloseDocum
mov	DWORD PTR tv67[ebp], 0
mov	al, BYTE PTR tv67[ebp]
mov	BYTE PTR _wasntFixed$[ebp], al
mov	ecx, DWORD PTR _win$[ebp]
call	?AsChm@WindowInfo@@QBEPAVChmModel@@XZ	
test	eax, eax
je	SHORT $LN8@CloseDocum
mov	ecx, DWORD PTR _win$[ebp]
call	?AsChm@WindowInfo@@QBEPAVChmModel@@XZ	
mov	ecx, eax
call	?RemoveParentHwnd@ChmModel@@QAEXXZ	
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ClearTocBox@@YAXPAVWindowInfo@@@Z	
add	esp, 4
push	1
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?AbortFinding@@YAXPAVWindowInfo@@_N@Z	
add	esp, 8
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+856]
mov	DWORD PTR $T5[ebp], ecx
mov	edx, DWORD PTR $T5[ebp]
mov	DWORD PTR $T6[ebp], edx
cmp	DWORD PTR $T6[ebp], 0
je	SHORT $LN17@CloseDocum
mov	esi, esp
push	1
mov	eax, DWORD PTR $T6[ebp]
mov	edx, DWORD PTR [eax]
mov	ecx, DWORD PTR $T6[ebp]
mov	eax, DWORD PTR [edx]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR tv85[ebp], eax
jmp	SHORT $LN18@CloseDocum
mov	DWORD PTR tv85[ebp], 0
mov	eax, DWORD PTR _win$[ebp]
mov	DWORD PTR [eax+856], 0
mov	eax, DWORD PTR _win$[ebp]
mov	BYTE PTR [eax+868], 0
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+1188], 0
je	SHORT $LN9@CloseDocum
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+1188]
call	?OnDocumentUnload@SumatraUIAutomationProvider@@QAEXXZ 
mov	eax, DWORD PTR _win$[ebp]
mov	DWORD PTR [eax], 0
movzx	eax, BYTE PTR _deleteModel$[ebp]
test	eax, eax
je	$LN10@CloseDocum
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR $T3[ebp], edx
mov	eax, DWORD PTR $T3[ebp]
mov	DWORD PTR $T4[ebp], eax
cmp	DWORD PTR $T4[ebp], 0
je	SHORT $LN19@CloseDocum
mov	esi, esp
push	1
mov	ecx, DWORD PTR $T4[ebp]
mov	edx, DWORD PTR [ecx]
mov	ecx, DWORD PTR $T4[ebp]
mov	eax, DWORD PTR [edx]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR tv136[ebp], eax
jmp	SHORT $LN20@CloseDocum
mov	DWORD PTR tv136[ebp], 0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	DWORD PTR [ecx+16], 0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR $T1[ebp], edx
mov	eax, DWORD PTR $T1[ebp]
mov	DWORD PTR $T2[ebp], eax
cmp	DWORD PTR $T2[ebp], 0
je	SHORT $LN21@CloseDocum
mov	esi, esp
push	1
mov	ecx, DWORD PTR $T2[ebp]
mov	edx, DWORD PTR [ecx]
mov	ecx, DWORD PTR $T2[ebp]
mov	eax, DWORD PTR [edx]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR tv147[ebp], eax
jmp	SHORT $LN22@CloseDocum
mov	DWORD PTR tv147[ebp], 0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	DWORD PTR [ecx+4], 0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	edx, DWORD PTR [ecx+124]
push	edx
call	?FileWatcherUnsubscribe@@YAXPAUWatchedFile@@@Z 
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	DWORD PTR [ecx+124], 0
jmp	SHORT $LN11@CloseDocum
mov	eax, DWORD PTR _win$[ebp]
mov	DWORD PTR [eax+88], 0
push	1
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+832]
call	?RemoveForGroup@Notifications@@QAEXH@Z	
push	4
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+832]
call	?RemoveForGroup@Notifications@@QAEXH@Z	
push	5
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+832]
call	?RemoveForGroup@Notifications@@QAEXH@Z	
mov	eax, DWORD PTR _win$[ebp]
mov	DWORD PTR [eax+300], 0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	?DeletePropertiesWindow@@YAXPAUHWND__@@@Z 
add	esp, 4
push	1
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?DeleteOldSelectionInfo@@YAXPAVWindowInfo@@_N@Z 
add	esp, 8
movzx	eax, BYTE PTR _keepUIEnabled$[ebp]
test	eax, eax
jne	$LN12@CloseDocum
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+173]
push	ecx
push	0
mov	edx, DWORD PTR _win$[ebp]
push	edx
call	?SetSidebarVisibility@@YAXPAVWindowInfo@@_N1@Z 
add	esp, 12					
push	1
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ToolbarUpdateStateForWindow@@YAXPAVWindowInfo@@_N@Z 
add	esp, 8
push	0
push	0
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?UpdateToolbarPageText@@YAXPAVWindowInfo@@H_N@Z 
add	esp, 12					
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?UpdateToolbarFindText@@YAXPAVWindowInfo@@@Z 
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?UpdateFindbox@@YAXPAVWindowInfo@@@Z	
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?UpdateTabWidth@@YAXPAVWindowInfo@@@Z	
add	esp, 4
movzx	eax, BYTE PTR _wasntFixed$[ebp]
test	eax, eax
je	SHORT $LN13@CloseDocum
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?RebuildMenuBarForWindow@@YAXPAVWindowInfo@@@Z 
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ShowOrHideToolbar@@YAXPAVWindowInfo@@@Z 
add	esp, 4
mov	esi, esp
push	0
push	3
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	DWORD PTR __imp__ShowScrollBar@12
cmp	esi, esp
call	__RTC_CheckEsp
push	0
mov	ecx, DWORD PTR _win$[ebp]
call	?RedrawAll@WindowInfo@@QAEX_N@Z		
push	OFFSET ??_C@_1BG@BABBOKHF@?$AAS?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAP?$AAD?$AAF?$AA?$AA@
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	?SetText@win@@YAXPAUHWND__@@PB_W@Z	
add	esp, 8
xor	eax, eax
jne	SHORT $LN5@CloseDocum
mov	ecx, DWORD PTR _win$[ebp]
add	ecx, 4
call	?Count@?$Vec@PAVTabInfo@@@@QBEIXZ	
test	eax, eax
jne	SHORT $LN23@CloseDocum
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+88], 0
jne	SHORT $LN23@CloseDocum
mov	BYTE PTR tv204[ebp], 0
jmp	SHORT $LN24@CloseDocum
mov	BYTE PTR tv204[ebp], 1
movzx	ecx, BYTE PTR tv204[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@CloseDocum
mov	esi, esp
push	0
push	0
call	__get_heap_handle
push	eax
call	DWORD PTR __imp__HeapValidate@12
cmp	esi, esp
call	__RTC_CheckEsp
pop	edi
pop	esi
pop	ebx
add	esp, 280				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??__FgAllowedFileTypes@@YAXXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	ecx, OFFSET ?gAllowedFileTypes@@3VWStrVec@@A
call	??1WStrVec@@QAE@XZ			
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??__EgAllowedFileTypes@@YAXXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	ecx, OFFSET ?gAllowedFileTypes@@3VWStrVec@@A
call	??0WStrVec@@QAE@XZ			
push	OFFSET ??__FgAllowedFileTypes@@YAXXZ	
call	_atexit
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??__FgAllowedLinkProtocols@@YAXXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	ecx, OFFSET ?gAllowedLinkProtocols@@3VWStrVec@@A
call	??1WStrVec@@QAE@XZ			
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??__EgAllowedLinkProtocols@@YAXXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	ecx, OFFSET ?gAllowedLinkProtocols@@3VWStrVec@@A
call	??0WStrVec@@QAE@XZ			
push	OFFSET ??__FgAllowedLinkProtocols@@YAXXZ 
call	_atexit
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??__FgRenderCache@@YAXXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	ecx, OFFSET ?gRenderCache@@3VRenderCache@@A 
call	??1RenderCache@@QAE@XZ			
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??__EgRenderCache@@YAXXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	ecx, OFFSET ?gRenderCache@@3VRenderCache@@A 
call	??0RenderCache@@QAE@XZ			
push	OFFSET ??__FgRenderCache@@YAXXZ		
call	_atexit
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??__EgFavorites@@YAXXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	ecx, OFFSET ?gFavorites@@3VFavorites@@A	
call	??0Favorites@@QAE@XZ			
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??__FgFileHistory@@YAXXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A 
call	??1FileHistory@@QAE@XZ			
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??__EgFileHistory@@YAXXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A 
call	??0FileHistory@@QAE@XZ			
push	OFFSET ??__FgFileHistory@@YAXXZ		
call	_atexit
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??__FgWindows@@YAXXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	??1?$Vec@PAVWindowInfo@@@@QAE@XZ	
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??__EgWindows@@YAXXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
push	0
push	0
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	??0?$Vec@PAVWindowInfo@@@@QAE@IPAVAllocator@@@Z 
push	OFFSET ??__FgWindows@@YAXXZ		
call	_atexit
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$__vcrt_va_start_verify_argument_type@PBD@@YAXXZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?LoadModelIntoTab@@YAXPAVWindowInfo@@PAVTabInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 272				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-272]
mov	ecx, 68					
mov	eax, -858993460				
rep stosd
cmp	DWORD PTR _win$[ebp], 0
je	SHORT $LN3@LoadModelI
cmp	DWORD PTR _tdata$[ebp], 0
jne	SHORT $LN2@LoadModelI
jmp	$LN1@LoadModelI
push	0
push	1
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?CloseDocumentInTab@@YAXPAVWindowInfo@@_N1@Z 
add	esp, 12					
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR _tdata$[ebp]
mov	DWORD PTR [eax+88], ecx
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR _tdata$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR [eax], edx
mov	ecx, DWORD PTR _win$[ebp]
call	?AsChm@WindowInfo@@QBEPAVChmModel@@XZ	
test	eax, eax
je	SHORT $LN4@LoadModelI
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
mov	ecx, DWORD PTR _win$[ebp]
call	?AsChm@WindowInfo@@QBEPAVChmModel@@XZ	
mov	ecx, eax
call	?SetParentHwnd@ChmModel@@QAE_NPAUHWND__@@@Z 
jmp	SHORT $LN5@LoadModelI
mov	ecx, DWORD PTR _win$[ebp]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
test	eax, eax
je	SHORT $LN6@LoadModelI
push	0
mov	ecx, DWORD PTR _win$[ebp]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
mov	ecx, eax
call	?EnableMessageHandling@EbookController@@QAEX_N@Z 
jmp	SHORT $LN5@LoadModelI
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
je	SHORT $LN5@LoadModelI
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+1188], 0
je	SHORT $LN5@LoadModelI
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
push	eax
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+1188]
call	?OnDocumentLoad@SumatraUIAutomationProvider@@QAEXPAVDisplayModel@@@Z 
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?UpdateUiForCurrentTab@@YAXPAVWindowInfo@@@Z 
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
je	SHORT $LN9@LoadModelI
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+173]
push	ecx
mov	edx, DWORD PTR _tdata$[ebp]
movzx	eax, BYTE PTR [edx+13]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?SetSidebarVisibility@@YAXPAVWindowInfo@@_N1@Z 
add	esp, 12					
jmp	SHORT $LN10@LoadModelI
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+173]
push	ecx
mov	edx, DWORD PTR _tdata$[ebp]
movzx	eax, BYTE PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?SetSidebarVisibility@@YAXPAVWindowInfo@@_N1@Z 
add	esp, 12					
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
je	$LN11@LoadModelI
mov	eax, DWORD PTR _win$[ebp]
add	eax, 804				
push	eax
mov	ecx, DWORD PTR _tdata$[ebp]
add	ecx, 104				
call	??9?$RectT@H@geomutil@@QBE_NABV01@@Z	
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN13@LoadModelI
lea	eax, DWORD PTR $T3[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
call	?GetViewPortSize@WindowInfo@@QAE?AV?$SizeT@H@geomutil@@XZ 
mov	esi, esp
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR [eax]
push	edx
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+60]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	DWORD PTR _dm$4[ebp], eax
lea	eax, DWORD PTR $T2[ebp]
push	eax
mov	ecx, DWORD PTR _dm$4[ebp]
call	?GetScrollState@DisplayModel@@QAE?AUScrollState@@XZ 
sub	esp, 24					
mov	ecx, esp
mov	edx, DWORD PTR [eax]
mov	DWORD PTR [ecx], edx
mov	edx, DWORD PTR [eax+4]
mov	DWORD PTR [ecx+4], edx
mov	edx, DWORD PTR [eax+8]
mov	DWORD PTR [ecx+8], edx
mov	edx, DWORD PTR [eax+12]
mov	DWORD PTR [ecx+12], edx
mov	edx, DWORD PTR [eax+16]
mov	DWORD PTR [ecx+16], edx
mov	eax, DWORD PTR [eax+20]
mov	DWORD PTR [ecx+20], eax
mov	ecx, DWORD PTR _dm$4[ebp]
call	?SetScrollState@DisplayModel@@QAEXUScrollState@@@Z 
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
je	SHORT $LN22@LoadModelI
mov	DWORD PTR tv175[ebp], 1
jmp	SHORT $LN23@LoadModelI
mov	DWORD PTR tv175[ebp], 0
mov	ecx, DWORD PTR _dm$4[ebp]
call	?GetPresentationMode@DisplayModel@@QBE_NXZ 
movzx	ecx, al
cmp	ecx, DWORD PTR tv175[ebp]
je	SHORT $LN14@LoadModelI
mov	ecx, DWORD PTR _dm$4[ebp]
call	?GetPresentationMode@DisplayModel@@QBE_NXZ 
movzx	eax, al
test	eax, eax
jne	SHORT $LN24@LoadModelI
mov	BYTE PTR tv188[ebp], 1
jmp	SHORT $LN25@LoadModelI
mov	BYTE PTR tv188[ebp], 0
mov	esi, esp
movzx	ecx, BYTE PTR tv188[ebp]
push	ecx
mov	edx, DWORD PTR _dm$4[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _dm$4[ebp]
mov	edx, DWORD PTR [eax+44]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN12@LoadModelI
mov	ecx, DWORD PTR _win$[ebp]
call	?AsChm@WindowInfo@@QBEPAVChmModel@@XZ	
test	eax, eax
je	SHORT $LN15@LoadModelI
mov	esi, esp
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	edi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+20]
call	edx
cmp	edi, esp
call	__RTC_CheckEsp
push	eax
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+24]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
jmp	SHORT $LN12@LoadModelI
mov	ecx, DWORD PTR _win$[ebp]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
test	eax, eax
je	SHORT $LN12@LoadModelI
push	1
mov	ecx, DWORD PTR _win$[ebp]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
mov	ecx, eax
call	?EnableMessageHandling@EbookController@@QAEX_N@Z 
mov	eax, DWORD PTR _win$[ebp]
add	eax, 804				
push	eax
mov	ecx, DWORD PTR _tdata$[ebp]
add	ecx, 104				
call	??9?$RectT@H@geomutil@@QBE_NABV01@@Z	
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN12@LoadModelI
lea	eax, DWORD PTR $T1[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
call	?GetViewPortSize@WindowInfo@@QAE?AV?$SizeT@H@geomutil@@XZ 
mov	esi, esp
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR [eax]
push	edx
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+60]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, DWORD PTR _win$[ebp]
add	eax, 804				
mov	ecx, DWORD PTR _tdata$[ebp]
add	ecx, 104				
mov	edx, DWORD PTR [eax]
mov	DWORD PTR [ecx], edx
mov	edx, DWORD PTR [eax+4]
mov	DWORD PTR [ecx+4], edx
mov	edx, DWORD PTR [eax+8]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR [eax+12]
mov	DWORD PTR [ecx+12], eax
mov	eax, DWORD PTR _tdata$[ebp]
cmp	DWORD PTR [eax+128], 0
je	SHORT $LN26@LoadModelI
mov	DWORD PTR tv241[ebp], 1
jmp	SHORT $LN27@LoadModelI
mov	DWORD PTR tv241[ebp], 0
mov	ecx, DWORD PTR _win$[ebp]
mov	dl, BYTE PTR tv241[ebp]
mov	BYTE PTR [ecx+332], dl
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+1188], 0
je	SHORT $LN19@LoadModelI
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+1188]
call	?OnSelectionChanged@SumatraUIAutomationProvider@@QAEXXZ 
mov	esi, esp
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__SetFocus@4
cmp	esi, esp
call	__RTC_CheckEsp
push	1
mov	ecx, DWORD PTR _win$[ebp]
call	?RedrawAll@WindowInfo@@QAEX_N@Z		
mov	eax, DWORD PTR _tdata$[ebp]
movzx	ecx, BYTE PTR [eax+120]
test	ecx, ecx
je	SHORT $LN1@LoadModelI
mov	eax, DWORD PTR _tdata$[ebp]
mov	BYTE PTR [eax+120], 0
push	1
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ReloadDocument@@YAXPAVWindowInfo@@_N@Z	
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 272				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0Favorites@@QAE@XZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], -1
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??_GLinkSaver@@UAEPAXI@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1LinkSaver@@UAE@XZ
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	16					
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1LinkSaver@@UAE@XZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1LinkSaverUI@@UAE@XZ			
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0LinkSaver@@QAE@PAVTabInfo@@PAUHWND__@@PB_W@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0LinkSaverUI@@QAE@XZ
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7LinkSaver@@6B@
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _tab$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _parentHwnd$[ebp]
mov	DWORD PTR [eax+8], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _fileName$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
?AsEbook@TabInfo@@QBEPAVEbookController@@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
cmp	DWORD PTR [eax+4], 0
je	SHORT $LN3@AsEbook
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [edx]
mov	esi, esp
mov	ecx, DWORD PTR [eax+4]
mov	eax, DWORD PTR [edx+128]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR tv74[ebp], eax
jmp	SHORT $LN4@AsEbook
mov	DWORD PTR tv74[ebp], 0
mov	eax, DWORD PTR tv74[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?AsFixed@TabInfo@@QBEPAVDisplayModel@@XZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
cmp	DWORD PTR [eax+4], 0
je	SHORT $LN3@AsFixed
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [edx]
mov	esi, esp
mov	ecx, DWORD PTR [eax+4]
mov	eax, DWORD PTR [edx+120]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR tv74[ebp], eax
jmp	SHORT $LN4@AsFixed
mov	DWORD PTR tv74[ebp], 0
mov	eax, DWORD PTR tv74[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?SwitchToDisplayMode@@YAXPAVWindowInfo@@W4DisplayMode@@_N@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 196				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-196]
mov	ecx, 49					
mov	eax, -858993460				
rep stosd
xor	eax, eax
jne	SHORT $LN5@SwitchToDi
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN10@SwitchToDi
mov	BYTE PTR tv69[ebp], 1
jmp	SHORT $LN11@SwitchToDi
mov	BYTE PTR tv69[ebp], 0
movzx	ecx, BYTE PTR tv69[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@SwitchToDi
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN8@SwitchToDi
jmp	SHORT $LN1@SwitchToDi
mov	esi, esp
movzx	eax, BYTE PTR _keepContinuous$[ebp]
push	eax
mov	ecx, DWORD PTR _displayMode$[ebp]
push	ecx
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [eax]
mov	ecx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+36]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?UpdateToolbarState@@YAXPAVWindowInfo@@@Z 
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 196				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??_GWindowInfo@@QAEPAXI@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1WindowInfo@@QAE@XZ			
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	1192					
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?Reset@?$Vec@V?$RectT@H@geomutil@@@@QAEXXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], 0
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax+4], 15			
mov	ecx, DWORD PTR _this$[ebp]
call	?FreeEls@?$Vec@V?$RectT@H@geomutil@@@@IAEXXZ 
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx+12], eax
push	256					
push	0
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
push	eax
call	_memset
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1?$Vec@V?$RectT@H@geomutil@@@@QAE@XZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?FreeEls@?$Vec@V?$RectT@H@geomutil@@@@IAEXXZ 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0?$Vec@V?$RectT@H@geomutil@@@@QAE@IPAVAllocator@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _capHint$[ebp]
mov	DWORD PTR [eax+8], ecx
push	OFFSET ??0?$RectT@H@geomutil@@QAE@XZ	
push	16					
push	16					
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
push	eax
call	??_H@YGXPAXIIP6EPAX0@Z@Z
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _allocator$[ebp]
mov	DWORD PTR [eax+272], ecx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx+12], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?Reset@?$Vec@V?$RectT@H@geomutil@@@@QAEXXZ 
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?FreeEls@?$Vec@V?$RectT@H@geomutil@@@@IAEXXZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
cmp	DWORD PTR [ecx+12], eax
je	SHORT $LN1@FreeEls
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+272]
push	eax
call	?Free@Allocator@@SAXPAV1@PAX@Z		
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?Reset@?$Vec@UStaticLinkInfo@@@@QAEXXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], 0
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax+4], 15			
mov	ecx, DWORD PTR _this$[ebp]
call	?FreeEls@?$Vec@UStaticLinkInfo@@@@IAEXXZ 
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx+12], eax
push	384					
push	0
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
push	eax
call	_memset
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?FreeEls@?$Vec@UStaticLinkInfo@@@@IAEXXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
cmp	DWORD PTR [ecx+12], eax
je	SHORT $LN1@FreeEls
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+400]
push	eax
call	?Free@Allocator@@SAXPAV1@PAX@Z		
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?IsEmpty@?$SizeT@N@geomutil@@QBE_NXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
movsd	xmm0, QWORD PTR [eax]
ucomisd	xmm0, QWORD PTR __real@0000000000000000
lahf
test	ah, 68					
jnp	SHORT $LN3@IsEmpty
mov	ecx, DWORD PTR _this$[ebp]
movsd	xmm0, QWORD PTR [ecx+8]
ucomisd	xmm0, QWORD PTR __real@0000000000000000
lahf
test	ah, 68					
jnp	SHORT $LN3@IsEmpty
mov	DWORD PTR tv68[ebp], 0
jmp	SHORT $LN4@IsEmpty
mov	DWORD PTR tv68[ebp], 1
mov	al, BYTE PTR tv68[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?end@?$Vec@PAVTabInfo@@@@QAE?AVIter@1@XZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _this$[ebp]
push	edx
mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
call	??0Iter@?$Vec@PAVTabInfo@@@@QAE@PAV1@I@Z 
mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?begin@?$Vec@PAVTabInfo@@@@QAE?AVIter@1@XZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	eax, DWORD PTR _this$[ebp]
push	eax
mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
call	??0Iter@?$Vec@PAVTabInfo@@@@QAE@PAV1@I@Z 
mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?FindEl@?$Vec@PAVTabInfo@@@@QAEAAPAVTabInfo@@V?$function@$$A6A_NAAPAVTabInfo@@@Z@std@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 240				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-240]
mov	ecx, 60					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	DWORD PTR _i$3[ebp], 0
jmp	SHORT $LN4@FindEl
mov	eax, DWORD PTR _i$3[ebp]
add	eax, 1
mov	DWORD PTR _i$3[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _i$3[ebp]
cmp	ecx, DWORD PTR [eax]
jae	SHORT $LN3@FindEl
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _i$3[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
push	eax
lea	ecx, DWORD PTR _check$[ebp]
call	??R?$_Func_class@_NAAPAVTabInfo@@@std@@QBE_NAAPAVTabInfo@@@Z 
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN5@FindEl
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _i$3[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR $T2[ebp], eax
lea	ecx, DWORD PTR _check$[ebp]
call	??1?$function@$$A6A_NAAPAVTabInfo@@@Z@std@@QAE@XZ 
mov	eax, DWORD PTR $T2[ebp]
jmp	SHORT $LN1@FindEl
jmp	SHORT $LN2@FindEl
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+12]
lea	ecx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR $T1[ebp], ecx
lea	ecx, DWORD PTR _check$[ebp]
call	??1?$function@$$A6A_NAAPAVTabInfo@@@Z@std@@QAE@XZ 
mov	eax, DWORD PTR $T1[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 240				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	40					
ENDP
?Contains@?$Vec@PAVTabInfo@@@@QBE_NPAVTabInfo@@@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	eax, DWORD PTR _el$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?Find@?$Vec@PAVTabInfo@@@@QBEHPAVTabInfo@@I@Z 
cmp	eax, -1
je	SHORT $LN3@Contains
mov	DWORD PTR tv69[ebp], 1
jmp	SHORT $LN4@Contains
mov	DWORD PTR tv69[ebp], 0
mov	al, BYTE PTR tv69[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?Find@?$Vec@PAVTabInfo@@@@QBEHPAVTabInfo@@I@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _startAt$[ebp]
mov	DWORD PTR _i$1[ebp], eax
jmp	SHORT $LN4@Find
mov	eax, DWORD PTR _i$1[ebp]
add	eax, 1
mov	DWORD PTR _i$1[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _i$1[ebp]
cmp	ecx, DWORD PTR [eax]
jae	SHORT $LN3@Find
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _i$1[ebp]
mov	eax, DWORD PTR [ecx+edx*4]
cmp	eax, DWORD PTR _el$[ebp]
jne	SHORT $LN5@Find
mov	eax, DWORD PTR _i$1[ebp]
jmp	SHORT $LN1@Find
jmp	SHORT $LN2@Find
or	eax, -1
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	8
ENDP
?Append@?$Vec@PAVTabInfo@@@@QAEXABQAVTabInfo@@@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _el$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
call	?InsertAt@?$Vec@PAVTabInfo@@@@QAEXIABQAVTabInfo@@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?InsertAt@?$Vec@PAVTabInfo@@@@QAEXIABQAVTabInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
push	1
mov	eax, DWORD PTR _idx$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?MakeSpaceAt@?$Vec@PAVTabInfo@@@@IAEPAPAVTabInfo@@II_N@Z 
mov	ecx, 4
imul	edx, ecx, 0
mov	ecx, DWORD PTR _el$[ebp]
mov	ecx, DWORD PTR [ecx]
mov	DWORD PTR [eax+edx], ecx
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?Count@?$Vec@PAVTabInfo@@@@QBEIXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [eax]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?At@?$Vec@PAVTabInfo@@@@QBEAAPAVTabInfo@@I@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
xor	eax, eax
jne	SHORT $LN5@At
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _idx$[ebp]
cmp	ecx, DWORD PTR [eax]
jb	SHORT $LN9@At
mov	BYTE PTR tv67[ebp], 1
jmp	SHORT $LN10@At
mov	BYTE PTR tv67[ebp], 0
movzx	edx, BYTE PTR tv67[ebp]
push	edx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@At
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?MakeSpaceAt@?$Vec@PAVTabInfo@@@@IAEPAPAVTabInfo@@II_N@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 252				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-252]
mov	ecx, 63					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
lea	eax, DWORD PTR _idx$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
push	ecx
call	??$max@I@std@@YAABIABI0@Z		
add	esp, 8
mov	edx, DWORD PTR [eax]
add	edx, DWORD PTR _count$[ebp]
mov	DWORD PTR _newLen$[ebp], edx
movzx	eax, BYTE PTR _allowFailure$[ebp]
test	eax, eax
jne	SHORT $LN2@MakeSpaceA
mov	eax, DWORD PTR _newLen$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapCrash@?$Vec@PAVTabInfo@@@@IAEXI@Z 
jmp	SHORT $LN3@MakeSpaceA
mov	eax, DWORD PTR _newLen$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapTry@?$Vec@PAVTabInfo@@@@IAE_NI@Z 
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN3@MakeSpaceA
xor	eax, eax
jmp	SHORT $LN1@MakeSpaceA
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _res$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
cmp	ecx, DWORD PTR _idx$[ebp]
jbe	SHORT $LN5@MakeSpaceA
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _src$2[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	ecx, DWORD PTR _count$[ebp]
lea	edx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _dst$1[ebp], edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, DWORD PTR _idx$[ebp]
shl	ecx, 2
push	ecx
mov	edx, DWORD PTR _src$2[ebp]
push	edx
mov	eax, DWORD PTR _dst$1[ebp]
push	eax
call	_memmove
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newLen$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _res$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 252				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
?EnsureCapCrash@?$Vec@PAVTabInfo@@@@IAEXI@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _needed$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapTry@?$Vec@PAVTabInfo@@@@IAE_NI@Z 
mov	BYTE PTR _ok$[ebp], al
xor	eax, eax
jne	SHORT $LN5@EnsureCapC
movzx	eax, BYTE PTR _ok$[ebp]
test	eax, eax
jne	SHORT $LN2@EnsureCapC
call	?CrashMe@@YAXXZ				
xor	eax, eax
jne	SHORT $LN5@EnsureCapC
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?EnsureCapTry@?$Vec@PAVTabInfo@@@@IAE_NI@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 264				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-264]
mov	ecx, 66					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
cmp	ecx, DWORD PTR _needed$[ebp]
jb	SHORT $LN2@EnsureCapT
mov	al, 1
jmp	$LN1@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
shl	ecx, 1
mov	DWORD PTR _newCap$[ebp], ecx
mov	eax, DWORD PTR _needed$[ebp]
cmp	eax, DWORD PTR _newCap$[ebp]
jbe	SHORT $LN3@EnsureCapT
mov	eax, DWORD PTR _needed$[ebp]
mov	DWORD PTR _newCap$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newCap$[ebp]
cmp	ecx, DWORD PTR [eax+8]
jae	SHORT $LN4@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _newCap$[ebp], ecx
mov	eax, DWORD PTR _newCap$[ebp]
add	eax, 1
mov	DWORD PTR _newElCount$[ebp], eax
cmp	DWORD PTR _newElCount$[ebp], 1073741823	
jb	SHORT $LN5@EnsureCapT
xor	al, al
jmp	$LN1@EnsureCapT
cmp	DWORD PTR _newElCount$[ebp], 2147483647	
jbe	SHORT $LN6@EnsureCapT
xor	al, al
jmp	$LN1@EnsureCapT
mov	eax, DWORD PTR _newElCount$[ebp]
shl	eax, 2
mov	DWORD PTR _allocSize$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
shl	ecx, 2
mov	edx, DWORD PTR _allocSize$[ebp]
sub	edx, ecx
mov	DWORD PTR _newPadding$[ebp], edx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
cmp	eax, DWORD PTR [ecx+12]
jne	SHORT $LN7@EnsureCapT
mov	eax, DWORD PTR _newPadding$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
shl	edx, 2
push	edx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+80]
push	edx
call	?Dup@Allocator@@SAPAXPAV1@PBXII@Z	
add	esp, 16					
mov	DWORD PTR _newEls$[ebp], eax
jmp	SHORT $LN8@EnsureCapT
mov	eax, DWORD PTR _allocSize$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+80]
push	ecx
call	?Realloc@Allocator@@SAPAXPAV1@PAXI@Z	
add	esp, 12					
mov	DWORD PTR _newEls$[ebp], eax
cmp	DWORD PTR _newEls$[ebp], 0
jne	SHORT $LN9@EnsureCapT
xor	al, al
jmp	SHORT $LN1@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newEls$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	eax, DWORD PTR _newPadding$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
lea	edx, DWORD PTR [ecx+edx*4]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newCap$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	al, 1
pop	edi
pop	esi
pop	ebx
add	esp, 264				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?WndProcFrame@@YGJPAUHWND__@@IIJ@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 256				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-256]
mov	ecx, 64					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	?FindWindowInfoByHwnd@@YAPAVWindowInfo@@PAUHWND__@@@Z 
add	esp, 4
mov	DWORD PTR _win$[ebp], eax
cmp	DWORD PTR _win$[ebp], 0
je	SHORT $LN12@WndProcFra
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+261]
test	ecx, ecx
je	SHORT $LN12@WndProcFra
mov	BYTE PTR _callDefault$4[ebp], 1
mov	eax, DWORD PTR _win$[ebp]
push	eax
lea	ecx, DWORD PTR _callDefault$4[ebp]
push	ecx
mov	edx, DWORD PTR _lParam$[ebp]
push	edx
mov	eax, DWORD PTR _wParam$[ebp]
push	eax
mov	ecx, DWORD PTR _msg$[ebp]
push	ecx
mov	edx, DWORD PTR _hwnd$[ebp]
push	edx
call	?CustomCaptionFrameProc@@YAJPAUHWND__@@IIJPA_NPAVWindowInfo@@@Z 
add	esp, 24					
mov	DWORD PTR _res$3[ebp], eax
movzx	eax, BYTE PTR _callDefault$4[ebp]
test	eax, eax
jne	SHORT $LN12@WndProcFra
mov	eax, DWORD PTR _res$3[ebp]
jmp	$LN1@WndProcFra
mov	eax, DWORD PTR _msg$[ebp]
mov	DWORD PTR tv79[ebp], eax
cmp	DWORD PTR tv79[ebp], 256		
ja	SHORT $LN76@WndProcFra
cmp	DWORD PTR tv79[ebp], 256		
je	$LN31@WndProcFra
mov	ecx, DWORD PTR tv79[ebp]
sub	ecx, 1
mov	DWORD PTR tv79[ebp], ecx
cmp	DWORD PTR tv79[ebp], 122		
ja	$LN72@WndProcFra
mov	edx, DWORD PTR tv79[ebp]
movzx	eax, BYTE PTR $LN79@WndProcFra[edx]
jmp	DWORD PTR $LN84@WndProcFra[eax*4]
cmp	DWORD PTR tv79[ebp], 522		
ja	SHORT $LN77@WndProcFra
cmp	DWORD PTR tv79[ebp], 522		
je	$LN50@WndProcFra
mov	ecx, DWORD PTR tv79[ebp]
sub	ecx, 258				
mov	DWORD PTR tv79[ebp], ecx
cmp	DWORD PTR tv79[ebp], 21			
ja	$LN72@WndProcFra
mov	edx, DWORD PTR tv79[ebp]
movzx	eax, BYTE PTR $LN80@WndProcFra[edx]
jmp	DWORD PTR $LN85@WndProcFra[eax*4]
cmp	DWORD PTR tv79[ebp], 992		
ja	SHORT $LN78@WndProcFra
cmp	DWORD PTR tv79[ebp], 992		
je	$LN59@WndProcFra
cmp	DWORD PTR tv79[ebp], 526		
je	$LN50@WndProcFra
cmp	DWORD PTR tv79[ebp], 530		
je	$LN39@WndProcFra
cmp	DWORD PTR tv79[ebp], 793		
je	$LN23@WndProcFra
jmp	$LN72@WndProcFra
cmp	DWORD PTR tv79[ebp], 993		
je	$LN62@WndProcFra
cmp	DWORD PTR tv79[ebp], 1000		
je	$LN61@WndProcFra
jmp	$LN72@WndProcFra
jmp	$InitMouseWheelInfo$87
jmp	$InitMouseWheelInfo$87
cmp	DWORD PTR _win$[ebp], 0
je	SHORT $LN17@WndProcFra
cmp	DWORD PTR _wParam$[ebp], 1
je	SHORT $LN17@WndProcFra
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?RememberDefaultWindowPosition@@YAXAAVWindowInfo@@@Z 
add	esp, 4
mov	eax, DWORD PTR _lParam$[ebp]
and	eax, 65535				
movzx	ecx, ax
mov	DWORD PTR _dx$2[ebp], ecx
mov	eax, DWORD PTR _lParam$[ebp]
shr	eax, 16					
and	eax, 65535				
movzx	ecx, ax
mov	DWORD PTR _dy$1[ebp], ecx
mov	eax, DWORD PTR _dy$1[ebp]
push	eax
mov	ecx, DWORD PTR _dx$2[ebp]
push	ecx
mov	edx, DWORD PTR _win$[ebp]
push	edx
call	?FrameOnSize@@YAXPAVWindowInfo@@HH@Z	
add	esp, 12					
jmp	$LN2@WndProcFra
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
call	?OnFrameGetMinMaxInfo@@YAJPAUtagMINMAXINFO@@@Z 
add	esp, 4
jmp	$LN1@WndProcFra
cmp	DWORD PTR _win$[ebp], 0
je	SHORT $LN20@WndProcFra
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?RememberDefaultWindowPosition@@YAXAAVWindowInfo@@@Z 
add	esp, 4
jmp	$LN2@WndProcFra
mov	eax, DWORD PTR _wParam$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?UpdateMenu@@YAXPAVWindowInfo@@PAUHMENU__@@@Z 
add	esp, 8
jmp	$LN2@WndProcFra
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
mov	ecx, DWORD PTR _wParam$[ebp]
push	ecx
mov	edx, DWORD PTR _msg$[ebp]
push	edx
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?FrameOnCommand@@YAJPAVWindowInfo@@PAUHWND__@@IIJ@Z 
add	esp, 20					
jmp	$LN1@WndProcFra
mov	eax, DWORD PTR _lParam$[ebp]
shr	eax, 16					
and	eax, 65535				
movzx	ecx, ax
and	ecx, -61441				
movsx	edx, cx
mov	DWORD PTR tv144[ebp], edx
mov	eax, DWORD PTR tv144[ebp]
sub	eax, 1
mov	DWORD PTR tv144[ebp], eax
cmp	DWORD PTR tv144[ebp], 5
ja	$LN4@WndProcFra
mov	ecx, DWORD PTR tv144[ebp]
jmp	DWORD PTR $LN86@WndProcFra[ecx*4]
mov	esi, esp
push	0
push	558					
push	273					
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, 1
jmp	$LN1@WndProcFra
mov	esi, esp
push	0
push	559					
push	273					
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, 1
jmp	$LN1@WndProcFra
mov	esi, esp
push	0
push	406					
push	273					
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, 1
jmp	$LN1@WndProcFra
mov	esi, esp
push	0
push	435					
push	273					
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, 1
jmp	$LN1@WndProcFra
mov	esi, esp
push	0
push	417					
push	273					
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, 1
jmp	$LN1@WndProcFra
mov	esi, esp
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
mov	ecx, DWORD PTR _wParam$[ebp]
push	ecx
mov	edx, DWORD PTR _msg$[ebp]
push	edx
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	DWORD PTR __imp__DefWindowProcW@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN1@WndProcFra
cmp	DWORD PTR _win$[ebp], 0
je	SHORT $LN30@WndProcFra
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
mov	ecx, DWORD PTR _wParam$[ebp]
push	ecx
mov	edx, DWORD PTR _win$[ebp]
push	edx
call	?FrameOnChar@@YAXAAVWindowInfo@@IJ@Z	
add	esp, 12					
jmp	$LN2@WndProcFra
cmp	DWORD PTR _win$[ebp], 0
je	SHORT $LN32@WndProcFra
push	0
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
mov	ecx, DWORD PTR _wParam$[ebp]
push	ecx
mov	edx, DWORD PTR _win$[ebp]
push	edx
call	?FrameOnKeydown@@YA_NPAVWindowInfo@@IJ_N@Z 
add	esp, 16					
jmp	$LN2@WndProcFra
cmp	DWORD PTR _wParam$[ebp], 18		
jne	SHORT $LN34@WndProcFra
movzx	eax, BYTE PTR ?gSuppressAltKey@@3_NA	
test	eax, eax
je	SHORT $LN34@WndProcFra
mov	BYTE PTR ?gSuppressAltKey@@3_NA, 0	
xor	eax, eax
jmp	$LN1@WndProcFra
mov	esi, esp
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
mov	ecx, DWORD PTR _wParam$[ebp]
push	ecx
mov	edx, DWORD PTR _msg$[ebp]
push	edx
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	DWORD PTR __imp__DefWindowProcW@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN1@WndProcFra
cmp	DWORD PTR _win$[ebp], 0
je	SHORT $LN36@WndProcFra
mov	eax, DWORD PTR _wParam$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?FrameOnSysChar@@YA_NAAVWindowInfo@@I@Z	
add	esp, 8
movzx	edx, al
test	edx, edx
je	SHORT $LN36@WndProcFra
xor	eax, eax
jmp	$LN1@WndProcFra
mov	esi, esp
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
mov	ecx, DWORD PTR _wParam$[ebp]
push	ecx
mov	edx, DWORD PTR _msg$[ebp]
push	edx
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	DWORD PTR __imp__DefWindowProcW@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN1@WndProcFra
cmp	DWORD PTR _wParam$[ebp], 61696		
jne	SHORT $LN38@WndProcFra
cmp	DWORD PTR _win$[ebp], 0
je	SHORT $LN38@WndProcFra
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+292]
test	ecx, ecx
je	SHORT $LN38@WndProcFra
push	1
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ShowHideMenuBar@@YAXPAVWindowInfo@@_N@Z 
add	esp, 8
mov	esi, esp
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
mov	ecx, DWORD PTR _wParam$[ebp]
push	ecx
mov	edx, DWORD PTR _msg$[ebp]
push	edx
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	DWORD PTR __imp__DefWindowProcW@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN1@WndProcFra
cmp	DWORD PTR _wParam$[ebp], 0
jne	SHORT $LN40@WndProcFra
cmp	DWORD PTR _win$[ebp], 0
je	SHORT $LN40@WndProcFra
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+292]
test	ecx, ecx
je	SHORT $LN40@WndProcFra
mov	esi, esp
push	0
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	DWORD PTR __imp__SetMenu@8
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
mov	ecx, DWORD PTR _wParam$[ebp]
push	ecx
mov	edx, DWORD PTR _msg$[ebp]
push	edx
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	DWORD PTR __imp__DefWindowProcW@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN1@WndProcFra
cmp	DWORD PTR _win$[ebp], 0
je	SHORT $LN42@WndProcFra
mov	eax, DWORD PTR _lParam$[ebp]
and	eax, 65535				
movsx	ecx, ax
cmp	ecx, -1
jne	SHORT $LN42@WndProcFra
mov	eax, DWORD PTR _lParam$[ebp]
shr	eax, 16					
and	eax, 65535				
movsx	ecx, ax
cmp	ecx, -1
jne	SHORT $LN42@WndProcFra
mov	esi, esp
call	DWORD PTR __imp__GetFocus@0
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, DWORD PTR _win$[ebp]
cmp	eax, DWORD PTR [ecx+144]
je	SHORT $LN42@WndProcFra
mov	esi, esp
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
mov	ecx, DWORD PTR _wParam$[ebp]
push	ecx
push	123					
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [edx+96]
push	eax
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN1@WndProcFra
mov	esi, esp
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
mov	ecx, DWORD PTR _wParam$[ebp]
push	ecx
mov	edx, DWORD PTR _msg$[ebp]
push	edx
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	DWORD PTR __imp__DefWindowProcW@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN1@WndProcFra
call	?UpdateDeltaPerLine@@YAXXZ		
cmp	DWORD PTR _win$[ebp], 0
je	SHORT $LN44@WndProcFra
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
je	SHORT $LN45@WndProcFra
push	1
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?EnterFullScreen@@YAXPAVWindowInfo@@_N@Z 
add	esp, 8
jmp	SHORT $LN44@WndProcFra
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+772]
test	ecx, ecx
je	SHORT $LN44@WndProcFra
push	0
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?EnterFullScreen@@YAXPAVWindowInfo@@_N@Z 
add	esp, 8
xor	eax, eax
jmp	$LN1@WndProcFra
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+6]
test	ecx, ecx
je	SHORT $LN49@WndProcFra
call	?UpdateDocumentColors@@YAXXZ		
jmp	$LN2@WndProcFra
cmp	DWORD PTR _win$[ebp], 0
je	SHORT $LN52@WndProcFra
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN51@WndProcFra
jmp	$LN2@WndProcFra
mov	ecx, DWORD PTR _win$[ebp]
call	?AsChm@WindowInfo@@QBEPAVChmModel@@XZ	
test	eax, eax
je	SHORT $LN9@WndProcFra
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
mov	ecx, DWORD PTR _wParam$[ebp]
push	ecx
mov	edx, DWORD PTR _msg$[ebp]
push	edx
mov	ecx, DWORD PTR _win$[ebp]
call	?AsChm@WindowInfo@@QBEPAVChmModel@@XZ	
mov	ecx, eax
call	?PassUIMsg@ChmModel@@QAEJIIJ@Z		
jmp	$LN1@WndProcFra
xor	eax, eax
jne	SHORT $LN9@WndProcFra
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
jne	SHORT $LN74@WndProcFra
mov	ecx, DWORD PTR _win$[ebp]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
test	eax, eax
jne	SHORT $LN74@WndProcFra
mov	BYTE PTR tv283[ebp], 1
jmp	SHORT $LN75@WndProcFra
mov	BYTE PTR tv283[ebp], 0
movzx	eax, BYTE PTR tv283[ebp]
push	eax
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN9@WndProcFra
mov	esi, esp
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
mov	ecx, DWORD PTR _wParam$[ebp]
push	ecx
mov	edx, DWORD PTR _msg$[ebp]
push	edx
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN1@WndProcFra
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?MayCloseWindow@@YA_NPAVWindowInfo@@@Z	
add	esp, 4
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN55@WndProcFra
push	0
push	1
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?CloseWindow@@YAXPAVWindowInfo@@_N1@Z	
add	esp, 12					
jmp	$LN2@WndProcFra
cmp	DWORD PTR _win$[ebp], 0
je	SHORT $LN57@WndProcFra
push	1
push	1
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?CloseWindow@@YAXPAVWindowInfo@@_N1@Z	
add	esp, 12					
jmp	$LN2@WndProcFra
call	?Save@prefs@@YA_NXZ			
jmp	$LN2@WndProcFra
cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	
je	SHORT $LN60@WndProcFra
jmp	$LN2@WndProcFra
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
mov	ecx, DWORD PTR _wParam$[ebp]
push	ecx
mov	edx, DWORD PTR _hwnd$[ebp]
push	edx
call	?OnDDEInitiate@@YAJPAUHWND__@@IJ@Z	
add	esp, 12					
jmp	$LN1@WndProcFra
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
mov	ecx, DWORD PTR _wParam$[ebp]
push	ecx
mov	edx, DWORD PTR _hwnd$[ebp]
push	edx
call	?OnDDExecute@@YAJPAUHWND__@@IJ@Z	
add	esp, 12					
jmp	$LN1@WndProcFra
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
mov	ecx, DWORD PTR _wParam$[ebp]
push	ecx
mov	edx, DWORD PTR _hwnd$[ebp]
push	edx
call	?OnDDETerminate@@YAJPAUHWND__@@IJ@Z	
add	esp, 12					
jmp	$LN1@WndProcFra
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
mov	ecx, DWORD PTR _wParam$[ebp]
push	ecx
mov	edx, DWORD PTR _hwnd$[ebp]
push	edx
call	?OnCopyData@@YAJPAUHWND__@@IJ@Z		
add	esp, 12					
jmp	$LN1@WndProcFra
cmp	DWORD PTR _win$[ebp], 0
je	SHORT $LN65@WndProcFra
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+1156], 0
je	SHORT $LN65@WndProcFra
mov	eax, DWORD PTR _wParam$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?OnStressTestTimer@@YAXPAVWindowInfo@@H@Z 
add	esp, 8
jmp	$LN2@WndProcFra
cmp	DWORD PTR _win$[ebp], 0
je	SHORT $LN67@WndProcFra
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
je	SHORT $LN67@WndProcFra
mov	esi, esp
call	DWORD PTR __imp__GetForegroundWindow@0
cmp	esi, esp
call	__RTC_CheckEsp
cmp	DWORD PTR _hwnd$[ebp], eax
je	SHORT $LN67@WndProcFra
mov	eax, 2
jmp	SHORT $LN1@WndProcFra
mov	eax, 1
jmp	SHORT $LN1@WndProcFra
cmp	DWORD PTR _wParam$[ebp], 1110		
jne	SHORT $LN69@WndProcFra
cmp	DWORD PTR _win$[ebp], 0
je	SHORT $LN69@WndProcFra
push	-1
push	-1
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?TabsOnNotify@@YAJPAVWindowInfo@@JHH@Z	
add	esp, 16					
jmp	SHORT $LN1@WndProcFra
mov	esi, esp
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
mov	ecx, DWORD PTR _wParam$[ebp]
push	ecx
mov	edx, DWORD PTR _msg$[ebp]
push	edx
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	DWORD PTR __imp__DefWindowProcW@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	SHORT $LN1@WndProcFra
mov	eax, 1
jmp	SHORT $LN1@WndProcFra
mov	esi, esp
mov	eax, DWORD PTR _lParam$[ebp]
push	eax
mov	ecx, DWORD PTR _wParam$[ebp]
push	ecx
mov	edx, DWORD PTR _msg$[ebp]
push	edx
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	DWORD PTR __imp__DefWindowProcW@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	SHORT $LN1@WndProcFra
xor	eax, eax
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN83@WndProcFra
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 256				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	16					
npad	3
DD	1
DD	$LN82@WndProcFra
DD	-17					
DD	1
DD	$LN81@WndProcFra
DB	99					
DB	97					
DB	108					
DB	108					
DB	68					
DB	101					
DB	102					
DB	97					
DB	117					
DB	108					
DB	116					
DB	0
DD	$LN14@WndProcFra
DD	$LN56@WndProcFra
DD	$LN19@WndProcFra
DD	$LN16@WndProcFra
DD	$LN54@WndProcFra
DD	$LN71@WndProcFra
DD	$LN48@WndProcFra
DD	$LN58@WndProcFra
DD	$InitMouseWheelInfo$87
DD	$LN66@WndProcFra
DD	$LN18@WndProcFra
DD	$LN63@WndProcFra
DD	$LN68@WndProcFra
DD	$LN41@WndProcFra
DD	$LN72@WndProcFra
DB	0
DB	1
DB	2
DB	14					
DB	3
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	4
DB	14					
DB	14					
DB	14					
DB	5
DB	6
DB	7
DB	14					
DB	14					
DB	14					
DB	8
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	9
DB	14					
DB	14					
DB	10					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	11					
DB	14					
DB	14					
DB	14					
DB	12					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	13					
npad	1
DD	$LN29@WndProcFra
DD	$LN33@WndProcFra
DD	$LN35@WndProcFra
DD	$LN22@WndProcFra
DD	$LN37@WndProcFra
DD	$LN64@WndProcFra
DD	$LN21@WndProcFra
DD	$LN72@WndProcFra
DB	0
DB	7
DB	7
DB	1
DB	2
DB	7
DB	7
DB	7
DB	7
DB	7
DB	7
DB	7
DB	7
DB	7
DB	7
DB	3
DB	4
DB	5
DB	7
DB	7
DB	7
DB	6
npad	2
DD	$LN24@WndProcFra
DD	$LN25@WndProcFra
DD	$LN26@WndProcFra
DD	$LN4@WndProcFra
DD	$LN27@WndProcFra
DD	$LN28@WndProcFra
ENDP
?DeleteWindowInfo@@YAXPAVWindowInfo@@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	?DeletePropertiesWindow@@YAXPAUHWND__@@@Z 
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
push	eax
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?Remove@?$Vec@PAVWindowInfo@@@@QAE_NPAVWindowInfo@@@Z 
mov	esi, esp
push	0
push	0
push	1073					
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+100]
push	ecx
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
push	eax
call	DWORD PTR __imp__ImageList_Destroy@4
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	DWORD PTR __imp__DragAcceptFiles@8
cmp	esi, esp
call	__RTC_CheckEsp
xor	eax, eax
jne	SHORT $LN5@DeleteWind
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+844], 0
je	SHORT $LN16@DeleteWind
mov	esi, esp
push	0
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+844]
push	edx
call	DWORD PTR __imp__WaitForSingleObject@8
cmp	esi, esp
call	__RTC_CheckEsp
cmp	eax, 258				
jne	SHORT $LN16@DeleteWind
mov	BYTE PTR tv86[ebp], 1
jmp	SHORT $LN17@DeleteWind
mov	BYTE PTR tv86[ebp], 0
movzx	eax, BYTE PTR tv86[ebp]
push	eax
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@DeleteWind
xor	eax, eax
jne	SHORT $LN11@DeleteWind
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+836], 0
je	SHORT $LN18@DeleteWind
mov	esi, esp
push	0
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+836]
push	edx
call	DWORD PTR __imp__WaitForSingleObject@8
cmp	esi, esp
call	__RTC_CheckEsp
cmp	eax, 258				
jne	SHORT $LN18@DeleteWind
mov	BYTE PTR tv129[ebp], 1
jmp	SHORT $LN19@DeleteWind
mov	BYTE PTR tv129[ebp], 0
movzx	eax, BYTE PTR tv129[ebp]
push	eax
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN11@DeleteWind
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+1188], 0
je	SHORT $LN14@DeleteWind
push	0
push	0
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	?ReturnRawElementProvider@uia@@YAJPAUHWND__@@IJPAUIRawElementProviderSimple@@@Z 
add	esp, 16					
mov	eax, DWORD PTR _win$[ebp]
mov	DWORD PTR $T1[ebp], eax
mov	ecx, DWORD PTR $T1[ebp]
mov	DWORD PTR $T2[ebp], ecx
cmp	DWORD PTR $T2[ebp], 0
je	SHORT $LN20@DeleteWind
push	1
mov	ecx, DWORD PTR $T2[ebp]
call	??_GWindowInfo@@QAEPAXI@Z
mov	DWORD PTR tv143[ebp], eax
jmp	SHORT $LN1@DeleteWind
mov	DWORD PTR tv143[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?UpdateCheckAsync@@YAXPAVWindowInfo@@_N@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 328				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-328]
mov	ecx, 82					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
push	1
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	eax, al
test	eax, eax
jne	SHORT $LN2@UpdateChec
jmp	$LN1@UpdateChec
movzx	eax, BYTE PTR _autoCheck$[ebp]
test	eax, eax
je	$LN3@UpdateChec
push	4
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	eax, al
test	eax, eax
jne	SHORT $LN4@UpdateChec
jmp	$LN1@UpdateChec
mov	DWORD PTR _never$5[ebp], 0
xor	eax, eax
mov	DWORD PTR _never$5[ebp+4], eax
lea	eax, DWORD PTR _never$5[ebp]
push	eax
mov	ecx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
add	ecx, 256				
push	ecx
call	?FileTimeEq@@YA_NABU_FILETIME@@0@Z	
add	esp, 8
movzx	edx, al
test	edx, edx
je	SHORT $LN5@UpdateChec
jmp	$LN1@UpdateChec
mov	esi, esp
lea	eax, DWORD PTR _currentTimeFt$4[ebp]
push	eax
call	DWORD PTR __imp__GetSystemTimeAsFileTime@4
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
add	eax, 256				
push	eax
lea	ecx, DWORD PTR _currentTimeFt$4[ebp]
push	ecx
call	?FileTimeDiffInSecs@@YAHABU_FILETIME@@0@Z 
add	esp, 8
mov	DWORD PTR _secs$3[ebp], eax
cmp	DWORD PTR _secs$3[ebp], 0
jl	SHORT $LN3@UpdateChec
cmp	DWORD PTR _secs$3[ebp], 86400		
jge	SHORT $LN3@UpdateChec
jmp	$LN1@UpdateChec
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
add	eax, 256				
mov	esi, esp
push	eax
call	DWORD PTR __imp__GetSystemTimeAsFileTime@4
cmp	esi, esp
call	__RTC_CheckEsp
movzx	eax, BYTE PTR ?gUpdateTaskInProgress@@3_NA 
test	eax, eax
je	SHORT $LN7@UpdateChec
jmp	SHORT $LN1@UpdateChec
mov	BYTE PTR ?gUpdateTaskInProgress@@3_NA, 1 
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
mov	DWORD PTR _hwnd$[ebp], ecx
mov	DWORD PTR _url$[ebp], OFFSET ??_C@_1IE@FDMCKMJI@?$AAh?$AAt?$AAt?$AAp?$AA?3?$AA?1?$AA?1?$AAk?$AAj?$AAk?$AAp?$AAu?$AAb?$AA?4?$AAs?$AA3?$AA?4?$AAa?$AAm?$AAa?$AAz?$AAo?$AAn?$AAa?$AAw?$AAs?$AA?4?$AAc?$AAo?$AAm?$AA?1?$AAs@
lea	eax, DWORD PTR _autoCheck$[ebp]
push	eax
lea	ecx, DWORD PTR _hwnd$[ebp]
push	ecx
lea	ecx, DWORD PTR $T1[ebp]
call	??0<lambda_1a01023b43b3e313893bd9ee262479f6>@@QAE@ABQAUHWND__@@AB_N@Z 
mov	edx, DWORD PTR [eax+4]
push	edx
mov	eax, DWORD PTR [eax]
push	eax
lea	ecx, DWORD PTR $T2[ebp]
call	??$?0V<lambda_1a01023b43b3e313893bd9ee262479f6>@@@?$function@$$A6AXPAVHttpRsp@@@Z@std@@QAE@V<lambda_1a01023b43b3e313893bd9ee262479f6>@@@Z 
lea	ecx, DWORD PTR $T2[ebp]
push	ecx
mov	edx, DWORD PTR _url$[ebp]
push	edx
call	?HttpGetAsync@@YAXPB_WABV?$function@$$A6AXPAVHttpRsp@@@Z@std@@@Z 
add	esp, 8
lea	ecx, DWORD PTR $T2[ebp]
call	??1?$function@$$A6AXPAVHttpRsp@@@Z@std@@QAE@XZ 
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN13@UpdateChec
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
add	esp, 328				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	2
DD	3
DD	$LN12@UpdateChec
DD	-16					
DD	8
DD	$LN9@UpdateChec
DD	-32					
DD	8
DD	$LN10@UpdateChec
DD	-56					
DD	4
DD	$LN11@UpdateChec
DB	104					
DB	119					
DB	110					
DB	100					
DB	0
DB	99					
DB	117					
DB	114					
DB	114					
DB	101					
DB	110					
DB	116					
DB	84					
DB	105					
DB	109					
DB	101					
DB	70					
DB	116					
DB	0
DB	110					
DB	101					
DB	118					
DB	101					
DB	114					
DB	0
ENDP
?RebuildMenuBarForWindow@@YAXPAVWindowInfo@@@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+288]
mov	DWORD PTR _oldMenu$[ebp], ecx
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?BuildMenu@@YAPAUHMENU__@@PAVWindowInfo@@@Z 
add	esp, 4
mov	ecx, DWORD PTR _win$[ebp]
mov	DWORD PTR [ecx+288], eax
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
jne	SHORT $LN2@RebuildMen
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+772]
test	ecx, ecx
jne	SHORT $LN2@RebuildMen
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+292]
test	ecx, ecx
jne	SHORT $LN2@RebuildMen
mov	esi, esp
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+288]
push	ecx
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [edx+92]
push	eax
call	DWORD PTR __imp__SetMenu@8
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
mov	eax, DWORD PTR _oldMenu$[ebp]
push	eax
call	DWORD PTR __imp__DestroyMenu@4
cmp	esi, esp
call	__RTC_CheckEsp
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?GetEbookUiColors@@YAXAAK0@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+6]
test	ecx, ecx
je	SHORT $LN2@GetEbookUi
mov	esi, esp
push	8
call	DWORD PTR __imp__GetSysColor@4
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, DWORD PTR _text$[ebp]
mov	DWORD PTR [ecx], eax
mov	esi, esp
push	5
call	DWORD PTR __imp__GetSysColor@4
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, DWORD PTR _bg$[ebp]
mov	DWORD PTR [ecx], eax
jmp	SHORT $LN1@GetEbookUi
mov	eax, DWORD PTR _text$[ebp]
mov	ecx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	edx, DWORD PTR [ecx+64]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _bg$[ebp]
mov	ecx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	edx, DWORD PTR [ecx+68]
mov	DWORD PTR [eax], edx
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?GetFixedPageUiColors@@YAXAAK0@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+6]
test	ecx, ecx
je	SHORT $LN2@GetFixedPa
mov	esi, esp
push	8
call	DWORD PTR __imp__GetSysColor@4
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, DWORD PTR _text$[ebp]
mov	DWORD PTR [ecx], eax
mov	esi, esp
push	5
call	DWORD PTR __imp__GetSysColor@4
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, DWORD PTR _bg$[ebp]
mov	DWORD PTR [ecx], eax
jmp	SHORT $LN3@GetFixedPa
mov	eax, DWORD PTR _text$[ebp]
mov	ecx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _bg$[ebp]
mov	ecx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+52]
test	ecx, ecx
je	SHORT $LN1@GetFixedPa
mov	eax, DWORD PTR _bg$[ebp]
push	eax
mov	ecx, DWORD PTR _text$[ebp]
push	ecx
call	??$swap@K@std@@YAXAAK0@Z		
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?SetCurrentLang@@YAXPBD@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
cmp	DWORD PTR _langCode$[ebp], 0
je	SHORT $LN1@SetCurrent
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	ecx, DWORD PTR _langCode$[ebp]
cmp	ecx, DWORD PTR [eax+168]
je	SHORT $LN3@SetCurrent
mov	eax, DWORD PTR _langCode$[ebp]
push	eax
mov	ecx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
add	ecx, 168				
push	ecx
call	?ReplacePtr@str@@YAXPAPADPBD@Z		
add	esp, 8
mov	eax, DWORD PTR _langCode$[ebp]
push	eax
call	?SetCurrentLangByCode@trans@@YAXPBD@Z	
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?ExitFullScreen@@YAXPAVWindowInfo@@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 336				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-336]
mov	ecx, 84					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+772]
test	ecx, ecx
jne	SHORT $LN5@ExitFullSc
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
jne	SHORT $LN5@ExitFullSc
jmp	$LN1@ExitFullSc
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
je	SHORT $LN15@ExitFullSc
mov	DWORD PTR tv71[ebp], 1
jmp	SHORT $LN16@ExitFullSc
mov	DWORD PTR tv71[ebp], 0
mov	cl, BYTE PTR tv71[ebp]
mov	BYTE PTR _wasPresentation$[ebp], cl
movzx	eax, BYTE PTR _wasPresentation$[ebp]
test	eax, eax
je	$LN6@ExitFullSc
mov	eax, DWORD PTR _win$[ebp]
mov	DWORD PTR [eax+776], 0
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN8@ExitFullSc
mov	esi, esp
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+44]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
push	3
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	DWORD PTR __imp__KillTimer@8
cmp	esi, esp
call	__RTC_CheckEsp
push	32512					
call	?SetCursor@@YAXPA_W@Z			
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
add	eax, 4
mov	DWORD PTR _<range>$L0$5[ebp], eax
lea	eax, DWORD PTR _<begin>$L0$4[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L0$5[ebp]
call	?begin@?$Vec@PAVTabInfo@@@@QAE?AVIter@1@XZ 
lea	eax, DWORD PTR _<end>$L0$3[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L0$5[ebp]
call	?end@?$Vec@PAVTabInfo@@@@QAE?AVIter@1@XZ 
jmp	SHORT $LN4@ExitFullSc
lea	ecx, DWORD PTR _<begin>$L0$4[ebp]
call	??EIter@?$Vec@PAVTabInfo@@@@QAEAAV01@XZ	
lea	eax, DWORD PTR _<end>$L0$3[ebp]
push	eax
lea	ecx, DWORD PTR _<begin>$L0$4[ebp]
call	??9Iter@?$Vec@PAVTabInfo@@@@QBE_NABV01@@Z 
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN3@ExitFullSc
lea	ecx, DWORD PTR _<begin>$L0$4[ebp]
call	??DIter@?$Vec@PAVTabInfo@@@@QBEAAPAVTabInfo@@XZ 
mov	eax, DWORD PTR [eax]
mov	DWORD PTR _tab$2[ebp], eax
mov	eax, DWORD PTR _tab$2[ebp]
mov	BYTE PTR [eax+13], 0
jmp	SHORT $LN2@ExitFullSc
jmp	SHORT $LN7@ExitFullSc
mov	eax, DWORD PTR _win$[ebp]
mov	BYTE PTR [eax+772], 0
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+88], 0
je	SHORT $LN17@ExitFullSc
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+88]
movzx	eax, BYTE PTR [edx+12]
test	eax, eax
je	SHORT $LN17@ExitFullSc
mov	DWORD PTR tv145[ebp], 1
jmp	SHORT $LN18@ExitFullSc
mov	DWORD PTR tv145[ebp], 0
mov	cl, BYTE PTR tv145[ebp]
mov	BYTE PTR _tocVisible$[ebp], cl
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+173]
push	ecx
movzx	edx, BYTE PTR _tocVisible$[ebp]
push	edx
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?SetSidebarVisibility@@YAXPAVWindowInfo@@_N1@Z 
add	esp, 12					
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+261]
test	ecx, ecx
je	SHORT $LN9@ExitFullSc
mov	esi, esp
push	5
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+268]
push	ecx
call	DWORD PTR __imp__ShowWindow@8
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+260]
test	ecx, ecx
je	SHORT $LN10@ExitFullSc
mov	esi, esp
push	5
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+256]
push	ecx
call	DWORD PTR __imp__ShowWindow@8
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+172]
test	ecx, ecx
je	SHORT $LN11@ExitFullSc
mov	ecx, DWORD PTR _win$[ebp]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
test	eax, eax
jne	SHORT $LN11@ExitFullSc
mov	esi, esp
push	5
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+104]
push	ecx
call	DWORD PTR __imp__ShowWindow@8
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+292]
test	ecx, ecx
jne	SHORT $LN12@ExitFullSc
mov	esi, esp
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+288]
push	ecx
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [edx+92]
push	eax
call	DWORD PTR __imp__SetMenu@8
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
lea	ecx, DWORD PTR _cr$[ebp]
call	??0ClientRect@@QAE@PAUHWND__@@@Z	
mov	esi, esp
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+784]
push	ecx
push	-16					
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [edx+92]
push	eax
call	DWORD PTR __imp__SetWindowLongW@12
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _flags$[ebp], 39		
mov	esi, esp
mov	eax, DWORD PTR _flags$[ebp]
push	eax
push	0
push	0
push	0
push	0
push	0
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+92]
push	edx
call	DWORD PTR __imp__SetWindowPos@28
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, DWORD PTR _win$[ebp]
add	eax, 788				
sub	esp, 16					
mov	ecx, esp
mov	edx, DWORD PTR [eax]
mov	DWORD PTR [ecx], edx
mov	edx, DWORD PTR [eax+4]
mov	DWORD PTR [ecx+4], edx
mov	edx, DWORD PTR [eax+8]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR [eax+12]
mov	DWORD PTR [ecx+12], eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+92]
push	edx
call	?MoveWindow@@YAXPAUHWND__@@V?$RectT@H@geomutil@@@Z 
add	esp, 20					
lea	eax, DWORD PTR _cr$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+92]
push	edx
lea	ecx, DWORD PTR $T1[ebp]
call	??0ClientRect@@QAE@PAUHWND__@@@Z	
mov	ecx, eax
call	??8?$RectT@H@geomutil@@QBE_NABV01@@Z	
movzx	eax, al
test	eax, eax
je	SHORT $LN1@ExitFullSc
push	-1
push	1
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?RelayoutFrame@@YAXPAVWindowInfo@@_NH@Z	
add	esp, 12					
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN23@ExitFullSc
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 336				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
DD	3
DD	$LN22@ExitFullSc
DD	-36					
DD	8
DD	$LN19@ExitFullSc
DD	-52					
DD	8
DD	$LN20@ExitFullSc
DD	-100					
DD	16					
DD	$LN21@ExitFullSc
DB	99					
DB	114					
DB	0
DB	60					
DB	101					
DB	110					
DB	100					
DB	62					
DB	36					
DB	76					
DB	48					
DB	0
DB	60					
DB	98					
DB	101					
DB	103					
DB	105					
DB	110					
DB	62					
DB	36					
DB	76					
DB	48					
DB	0
ENDP
?EnterFullScreen@@YAXPAVWindowInfo@@_N@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 280				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-280]
mov	ecx, 70					
mov	eax, -858993460				
rep stosd
push	64					
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	eax, al
test	eax, eax
je	SHORT $LN15@EnterFullS
cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	
je	SHORT $LN14@EnterFullS
jmp	$LN1@EnterFullS
movzx	eax, BYTE PTR _presentation$[ebp]
test	eax, eax
je	SHORT $LN29@EnterFullS
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+776]
mov	DWORD PTR tv74[ebp], edx
jmp	SHORT $LN30@EnterFullS
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+772]
mov	DWORD PTR tv74[ebp], ecx
cmp	DWORD PTR tv74[ebp], 0
jne	SHORT $LN17@EnterFullS
mov	esi, esp
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__IsWindowVisible@4
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
jne	SHORT $LN5@EnterFullS
jmp	$LN1@EnterFullS
xor	eax, eax
jne	SHORT $LN5@EnterFullS
movzx	eax, BYTE PTR _presentation$[ebp]
test	eax, eax
je	SHORT $LN35@EnterFullS
mov	ecx, DWORD PTR _win$[ebp]
movzx	edx, BYTE PTR [ecx+772]
test	edx, edx
jne	SHORT $LN33@EnterFullS
mov	DWORD PTR tv87[ebp], 1
jmp	SHORT $LN34@EnterFullS
mov	DWORD PTR tv87[ebp], 0
mov	eax, DWORD PTR tv87[ebp]
mov	DWORD PTR tv90[ebp], eax
jmp	SHORT $LN36@EnterFullS
mov	ecx, DWORD PTR _win$[ebp]
cmp	DWORD PTR [ecx+776], 0
jne	SHORT $LN31@EnterFullS
mov	DWORD PTR tv86[ebp], 1
jmp	SHORT $LN32@EnterFullS
mov	DWORD PTR tv86[ebp], 0
mov	edx, DWORD PTR tv86[ebp]
mov	DWORD PTR tv90[ebp], edx
cmp	DWORD PTR tv90[ebp], 0
jne	SHORT $LN37@EnterFullS
mov	BYTE PTR tv92[ebp], 1
jmp	SHORT $LN38@EnterFullS
mov	BYTE PTR tv92[ebp], 0
movzx	eax, BYTE PTR tv92[ebp]
push	eax
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	$LN5@EnterFullS
movzx	eax, BYTE PTR _presentation$[ebp]
test	eax, eax
je	$LN18@EnterFullS
xor	eax, eax
jne	SHORT $LN11@EnterFullS
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax], 0
jne	SHORT $LN39@EnterFullS
mov	BYTE PTR tv132[ebp], 1
jmp	SHORT $LN40@EnterFullS
mov	BYTE PTR tv132[ebp], 0
movzx	ecx, BYTE PTR tv132[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN11@EnterFullS
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN20@EnterFullS
jmp	$LN1@EnterFullS
mov	esi, esp
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__IsZoomed@4
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	SHORT $LN21@EnterFullS
mov	eax, DWORD PTR _win$[ebp]
mov	DWORD PTR [eax+780], 2
jmp	SHORT $LN22@EnterFullS
mov	eax, DWORD PTR _win$[ebp]
mov	DWORD PTR [eax+780], 1
mov	eax, DWORD PTR _win$[ebp]
mov	DWORD PTR [eax+776], 1
mov	esi, esp
push	0
push	3000					
push	3
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	DWORD PTR __imp__SetTimer@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	SHORT $LN19@EnterFullS
mov	eax, DWORD PTR _win$[ebp]
mov	BYTE PTR [eax+772], 1
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	cl, BYTE PTR [eax+173]
mov	BYTE PTR _showFavoritesTmp$[ebp], cl
movzx	eax, BYTE PTR _presentation$[ebp]
test	eax, eax
je	SHORT $LN23@EnterFullS
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+149]
test	ecx, ecx
jne	SHORT $LN24@EnterFullS
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+173]
test	ecx, ecx
je	SHORT $LN23@EnterFullS
push	0
push	0
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?SetSidebarVisibility@@YAXPAVWindowInfo@@_N1@Z 
add	esp, 12					
mov	esi, esp
push	-16					
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__GetWindowLongW@8
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _ws$[ebp], eax
movzx	eax, BYTE PTR _presentation$[ebp]
test	eax, eax
je	SHORT $LN26@EnterFullS
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+772]
test	ecx, ecx
jne	SHORT $LN25@EnterFullS
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR _ws$[ebp]
mov	DWORD PTR [eax+784], ecx
mov	eax, DWORD PTR _ws$[ebp]
and	eax, -12845057				
mov	DWORD PTR _ws$[ebp], eax
mov	eax, DWORD PTR _ws$[ebp]
or	eax, 16777216				
mov	DWORD PTR _ws$[ebp], eax
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
lea	ecx, DWORD PTR $T1[ebp]
call	??0WindowRect@@QAE@PAUHWND__@@@Z	
mov	edx, DWORD PTR _win$[ebp]
add	edx, 788				
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR [edx], ecx
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR [edx+4], ecx
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR [edx+8], ecx
mov	eax, DWORD PTR [eax+12]
mov	DWORD PTR [edx+12], eax
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
lea	edx, DWORD PTR _rect$[ebp]
push	edx
call	?GetFullscreenRect@@YA?AV?$RectT@H@geomutil@@PAUHWND__@@@Z 
add	esp, 8
mov	esi, esp
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__SetMenu@8
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+104]
push	ecx
call	DWORD PTR __imp__ShowWindow@8
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+256]
push	ecx
call	DWORD PTR __imp__ShowWindow@8
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+268]
push	ecx
call	DWORD PTR __imp__ShowWindow@8
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
mov	eax, DWORD PTR _ws$[ebp]
push	eax
push	-16					
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+92]
push	edx
call	DWORD PTR __imp__SetWindowLongW@12
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
push	52					
mov	eax, DWORD PTR _rect$[ebp+12]
push	eax
mov	ecx, DWORD PTR _rect$[ebp+8]
push	ecx
mov	edx, DWORD PTR _rect$[ebp+4]
push	edx
mov	eax, DWORD PTR _rect$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+92]
push	edx
call	DWORD PTR __imp__SetWindowPos@28
cmp	esi, esp
call	__RTC_CheckEsp
movzx	eax, BYTE PTR _presentation$[ebp]
test	eax, eax
je	SHORT $LN27@EnterFullS
mov	esi, esp
push	1
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+44]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__SetFocus@4
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	cl, BYTE PTR _showFavoritesTmp$[ebp]
mov	BYTE PTR [eax+173], cl
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN43@EnterFullS
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 280				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	3
DD	1
DD	$LN42@EnterFullS
DD	-44					
DD	16					
DD	$LN41@EnterFullS
DB	114					
DB	101					
DB	99					
DB	116					
DB	0
ENDP
?DocumentPathExists@@YA_NPB_W@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _path$[ebp]
push	eax
call	?Exists@file@@YA_NPB_W@Z		
add	esp, 4
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN3@DocumentPa
mov	eax, DWORD PTR _path$[ebp]
push	eax
call	?Exists@dir@@YA_NPB_W@Z			
add	esp, 4
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN2@DocumentPa
mov	al, 1
jmp	SHORT $LN1@DocumentPa
push	58					
mov	eax, DWORD PTR _path$[ebp]
add	eax, 4
push	eax
call	?FindChar@str@@YAPB_WPB_W_W@Z		
add	esp, 8
test	eax, eax
je	SHORT $LN4@DocumentPa
push	58					
mov	eax, DWORD PTR _path$[ebp]
add	eax, 4
push	eax
call	?FindChar@str@@YAPB_WPB_W_W@Z		
add	esp, 8
sub	eax, DWORD PTR _path$[ebp]
sar	eax, 1
push	eax
mov	ecx, DWORD PTR _path$[ebp]
push	ecx
call	?DupN@str@@YAPA_WPB_WI@Z		
add	esp, 8
push	eax
lea	ecx, DWORD PTR _realPath$2[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
lea	ecx, DWORD PTR _realPath$2[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?Exists@file@@YA_NPB_W@Z		
add	esp, 4
mov	BYTE PTR $T1[ebp], al
lea	ecx, DWORD PTR _realPath$2[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
mov	al, BYTE PTR $T1[ebp]
jmp	SHORT $LN1@DocumentPa
xor	al, al
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN8@DocumentPa
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	1
DD	$LN7@DocumentPa
DD	-8					
DD	4
DD	$LN6@DocumentPa
DB	114					
DB	101					
DB	97					
DB	108					
DB	80					
DB	97					
DB	116					
DB	104					
DB	0
ENDP
?UpdateCursorPositionHelper@@YAXPAVWindowInfo@@V?$PointT@H@geomutil@@PAVNotificationWnd@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 296				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-296]
mov	ecx, 74					
mov	eax, -858993460				
rep stosd
cmp	DWORD PTR _wnd$[ebp], 0
jne	SHORT $LN8@UpdateCurs
push	5
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+832]
call	?GetForGroup@Notifications@@QAEPAVNotificationWnd@@H@Z 
test	eax, eax
je	SHORT $LN8@UpdateCurs
cmp	DWORD PTR ?unit@?1??UpdateCursorPositionHelper@@YAXPAVWindowInfo@@V?$PointT@H@geomutil@@PAVNotificationWnd@@@Z@4W4MeasurementUnit@@A, 0
jne	SHORT $LN16@UpdateCurs
mov	DWORD PTR tv73[ebp], 1
jmp	SHORT $LN17@UpdateCurs
cmp	DWORD PTR ?unit@?1??UpdateCursorPositionHelper@@YAXPAVWindowInfo@@V?$PointT@H@geomutil@@PAVNotificationWnd@@@Z@4W4MeasurementUnit@@A, 1
jne	SHORT $LN14@UpdateCurs
mov	DWORD PTR tv72[ebp], 2
jmp	SHORT $LN15@UpdateCurs
mov	DWORD PTR tv72[ebp], 0
mov	eax, DWORD PTR tv72[ebp]
mov	DWORD PTR tv73[ebp], eax
mov	ecx, DWORD PTR tv73[ebp]
mov	DWORD PTR ?unit@?1??UpdateCursorPositionHelper@@YAXPAVWindowInfo@@V?$PointT@H@geomutil@@PAVNotificationWnd@@@Z@4W4MeasurementUnit@@A, ecx
push	5
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+832]
call	?GetForGroup@Notifications@@QAEPAVNotificationWnd@@H@Z 
mov	DWORD PTR _wnd$[ebp], eax
xor	eax, eax
jne	SHORT $LN8@UpdateCurs
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
jne	SHORT $LN18@UpdateCurs
mov	BYTE PTR tv82[ebp], 1
jmp	SHORT $LN19@UpdateCurs
mov	BYTE PTR tv82[ebp], 0
movzx	eax, BYTE PTR tv82[ebp]
push	eax
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN8@UpdateCurs
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	ecx, eax
call	?GetEngine@DisplayModel@@QBEPAVBaseEngine@@XZ 
mov	DWORD PTR _engine$[ebp], eax
push	-1
mov	eax, DWORD PTR _pos$[ebp+4]
push	eax
mov	ecx, DWORD PTR _pos$[ebp]
push	ecx
lea	edx, DWORD PTR _pt$[ebp]
push	edx
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	ecx, eax
call	?CvtFromScreen@DisplayModel@@QAE?AV?$PointT@N@geomutil@@V?$PointT@H@3@H@Z 
mov	eax, DWORD PTR ?unit@?1??UpdateCursorPositionHelper@@YAXPAVWindowInfo@@V?$PointT@H@geomutil@@PAVNotificationWnd@@@Z@4W4MeasurementUnit@@A
push	eax
sub	esp, 16					
mov	ecx, esp
mov	edx, DWORD PTR _pt$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _pt$[ebp+4]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR _pt$[ebp+8]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR _pt$[ebp+12]
mov	DWORD PTR [ecx+12], eax
mov	ecx, DWORD PTR _engine$[ebp]
push	ecx
call	?FormatCursorPosition@@YAPA_WPAVBaseEngine@@V?$PointT@N@geomutil@@W4MeasurementUnit@@@Z 
add	esp, 24					
push	eax
lea	ecx, DWORD PTR _posStr$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
lea	ecx, DWORD PTR _selStr$[ebp]
call	??0?$ScopedMem@_W@@QAE@XZ		
mov	ecx, DWORD PTR _win$[ebp]
add	ecx, 352				
call	?IsEmpty@?$SizeT@N@geomutil@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN9@UpdateCurs
mov	eax, DWORD PTR _win$[ebp]
sub	esp, 8
movsd	xmm0, QWORD PTR [eax+360]
movsd	QWORD PTR [esp], xmm0
mov	ecx, DWORD PTR _win$[ebp]
sub	esp, 8
movsd	xmm0, QWORD PTR [ecx+352]
movsd	QWORD PTR [esp], xmm0
lea	ecx, DWORD PTR $T1[ebp]
call	??0?$PointT@N@geomutil@@QAE@NN@Z	
mov	edx, DWORD PTR [eax]
mov	DWORD PTR _pt$[ebp], edx
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pt$[ebp+4], ecx
mov	edx, DWORD PTR [eax+8]
mov	DWORD PTR _pt$[ebp+8], edx
mov	eax, DWORD PTR [eax+12]
mov	DWORD PTR _pt$[ebp+12], eax
mov	eax, DWORD PTR ?unit@?1??UpdateCursorPositionHelper@@YAXPAVWindowInfo@@V?$PointT@H@geomutil@@PAVNotificationWnd@@@Z@4W4MeasurementUnit@@A
push	eax
sub	esp, 16					
mov	ecx, esp
mov	edx, DWORD PTR _pt$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _pt$[ebp+4]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR _pt$[ebp+8]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR _pt$[ebp+12]
mov	DWORD PTR [ecx+12], eax
mov	ecx, DWORD PTR _engine$[ebp]
push	ecx
call	?FormatCursorPosition@@YAPA_WPAVBaseEngine@@V?$PointT@N@geomutil@@W4MeasurementUnit@@@Z 
add	esp, 24					
push	eax
lea	ecx, DWORD PTR _selStr$[ebp]
call	?Set@?$ScopedMem@_W@@QAEXPA_W@Z		
mov	eax, DWORD PTR _posStr$[ebp]
push	eax
push	OFFSET ??_C@_0BB@ILBPONAM@Cursor?5position?3?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
push	OFFSET ??_C@_1M@MOFLFCEC@?$AA?$CF?$AAs?$AA?5?$AA?$CF?$AAs?$AA?$AA@
call	?Format@str@@YAPA_WPB_WZZ		
add	esp, 12					
push	eax
lea	ecx, DWORD PTR _posInfo$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
lea	ecx, DWORD PTR _selStr$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
test	eax, eax
je	SHORT $LN10@UpdateCurs
mov	eax, DWORD PTR _selStr$[ebp]
push	eax
push	OFFSET ??_C@_0L@NKNMDFPI@Selection?3?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
mov	ecx, DWORD PTR _posInfo$[ebp]
push	ecx
push	OFFSET ??_C@_1BG@DAINKPPA@?$AA?$CF?$AAs?$AA?5?$AA?9?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$CF?$AAs?$AA?$AA@
call	?Format@str@@YAPA_WPB_WZZ		
add	esp, 16					
push	eax
lea	ecx, DWORD PTR _posInfo$[ebp]
call	?Set@?$ScopedMem@_W@@QAEXPA_W@Z		
cmp	DWORD PTR _wnd$[ebp], 0
jne	SHORT $LN11@UpdateCurs
push	5
push	1
lea	ecx, DWORD PTR _posInfo$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	ecx, DWORD PTR _win$[ebp]
call	?ShowNotification@WindowInfo@@QAEXPB_WHW4NotificationGroup@@@Z 
jmp	SHORT $LN12@UpdateCurs
push	0
push	0
lea	ecx, DWORD PTR _posInfo$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	ecx, DWORD PTR _wnd$[ebp]
call	?UpdateMessage@NotificationWnd@@QAEXPB_WH_N@Z 
lea	ecx, DWORD PTR _posInfo$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _selStr$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _posStr$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN25@UpdateCurs
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 296				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
DD	4
DD	$LN24@UpdateCurs
DD	-32					
DD	16					
DD	$LN20@UpdateCurs
DD	-44					
DD	4
DD	$LN21@UpdateCurs
DD	-56					
DD	4
DD	$LN22@UpdateCurs
DD	-68					
DD	4
DD	$LN23@UpdateCurs
DB	112					
DB	111					
DB	115					
DB	73					
DB	110					
DB	102					
DB	111					
DB	0
DB	115					
DB	101					
DB	108					
DB	83					
DB	116					
DB	114					
DB	0
DB	112					
DB	111					
DB	115					
DB	83					
DB	116					
DB	114					
DB	0
DB	112					
DB	116					
DB	0
ENDP
?MessageBoxWarning@@YAXPAUHWND__@@PB_W1@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
call	?MbRtlReadingMaybe@@YAIXZ		
or	eax, 48					
mov	DWORD PTR _type$[ebp], eax
cmp	DWORD PTR _title$[ebp], 0
jne	SHORT $LN2@MessageBox
push	OFFSET ??_C@_07KGMMFLDN@Warning?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
mov	DWORD PTR _title$[ebp], eax
mov	esi, esp
mov	eax, DWORD PTR _type$[ebp]
push	eax
mov	ecx, DWORD PTR _title$[ebp]
push	ecx
mov	edx, DWORD PTR _msg$[ebp]
push	edx
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	DWORD PTR __imp__MessageBoxW@16
cmp	esi, esp
call	__RTC_CheckEsp
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?MbRtlReadingMaybe@@YAIXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
call	?IsUIRightToLeft@@YA_NXZ		
movzx	eax, al
test	eax, eax
je	SHORT $LN2@MbRtlReadi
mov	eax, 1048576				
jmp	SHORT $LN1@MbRtlReadi
xor	eax, eax
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?CreateAndShowWindowInfo@@YAPAVWindowInfo@@PAUSessionData@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 244				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-244]
mov	ecx, 61					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	ecx, DWORD PTR [eax+208]
mov	DWORD PTR _windowState$[ebp], ecx
call	?CreateWindowInfo@@YAPAVWindowInfo@@XZ	
mov	DWORD PTR _win$[ebp], eax
cmp	DWORD PTR _win$[ebp], 0
jne	SHORT $LN5@CreateAndS
xor	eax, eax
jmp	$LN1@CreateAndS
xor	eax, eax
jne	SHORT $LN5@CreateAndS
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	ecx, DWORD PTR _windowState$[ebp]
cmp	ecx, DWORD PTR [eax+208]
je	SHORT $LN15@CreateAndS
mov	BYTE PTR tv70[ebp], 1
jmp	SHORT $LN16@CreateAndS
mov	BYTE PTR tv70[ebp], 0
movzx	edx, BYTE PTR tv70[ebp]
push	edx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@CreateAndS
cmp	DWORD PTR _data$[ebp], 0
je	SHORT $LN9@CreateAndS
mov	eax, DWORD PTR _data$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _windowState$[ebp], ecx
push	0
mov	eax, DWORD PTR _data$[ebp]
add	eax, 12					
sub	esp, 16					
mov	ecx, esp
mov	edx, DWORD PTR [eax]
mov	DWORD PTR [ecx], edx
mov	edx, DWORD PTR [eax+4]
mov	DWORD PTR [ecx+4], edx
mov	edx, DWORD PTR [eax+8]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR [eax+12]
mov	DWORD PTR [ecx+12], eax
lea	ecx, DWORD PTR _rect$1[ebp]
push	ecx
call	?ShiftRectToWorkArea@@YA?AV?$RectT@H@geomutil@@V12@_N@Z 
add	esp, 24					
sub	esp, 16					
mov	eax, esp
mov	ecx, DWORD PTR _rect$1[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _rect$1[ebp+4]
mov	DWORD PTR [eax+4], edx
mov	ecx, DWORD PTR _rect$1[ebp+8]
mov	DWORD PTR [eax+8], ecx
mov	edx, DWORD PTR _rect$1[ebp+12]
mov	DWORD PTR [eax+12], edx
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	?MoveWindow@@YAXPAUHWND__@@V?$RectT@H@geomutil@@@Z 
add	esp, 20					
cmp	DWORD PTR _windowState$[ebp], 3
je	SHORT $LN12@CreateAndS
cmp	DWORD PTR _windowState$[ebp], 2
jne	SHORT $LN10@CreateAndS
mov	esi, esp
push	3
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__ShowWindow@8
cmp	esi, esp
call	__RTC_CheckEsp
jmp	SHORT $LN11@CreateAndS
mov	esi, esp
push	5
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__ShowWindow@8
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__UpdateWindow@4
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+173]
push	ecx
push	0
mov	edx, DWORD PTR _win$[ebp]
push	edx
call	?SetSidebarVisibility@@YAXPAVWindowInfo@@_N1@Z 
add	esp, 12					
push	1
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ToolbarUpdateStateForWindow@@YAXPAVWindowInfo@@_N@Z 
add	esp, 8
cmp	DWORD PTR _windowState$[ebp], 3
jne	SHORT $LN13@CreateAndS
push	0
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?EnterFullScreen@@YAXPAVWindowInfo@@_N@Z 
add	esp, 8
mov	eax, DWORD PTR _win$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN19@CreateAndS
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 244				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	1
DD	$LN18@CreateAndS
DD	-44					
DD	16					
DD	$LN17@CreateAndS
DB	114					
DB	101					
DB	99					
DB	116					
DB	0
ENDP
?LoadDocument@@YAPAVWindowInfo@@AAULoadArgs@@@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 420				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-420]
mov	ecx, 105				
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR ?gCrashOnOpen@@3_NA	
test	eax, eax
je	SHORT $LN26@LoadDocume
call	?CrashMe@@YAXXZ				
mov	eax, DWORD PTR _args$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	?Normalize@path@@YAPA_WPB_W@Z		
add	esp, 4
push	eax
lea	ecx, DWORD PTR _fullPath$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
mov	eax, DWORD PTR _args$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _win$[ebp], ecx
cmp	DWORD PTR _win$[ebp], 0
je	SHORT $LN55@LoadDocume
mov	eax, DWORD PTR _args$[ebp]
movzx	ecx, BYTE PTR [eax+9]
test	ecx, ecx
jne	SHORT $LN55@LoadDocume
lea	ecx, DWORD PTR _fullPath$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?DocumentPathExists@@YA_NPB_W@Z		
add	esp, 4
movzx	edx, al
test	edx, edx
jne	SHORT $LN55@LoadDocume
mov	DWORD PTR tv84[ebp], 1
jmp	SHORT $LN56@LoadDocume
mov	DWORD PTR tv84[ebp], 0
mov	al, BYTE PTR tv84[ebp]
mov	BYTE PTR _failEarly$[ebp], al
movzx	eax, BYTE PTR _failEarly$[ebp]
test	eax, eax
je	$LN27@LoadDocume
push	0
lea	ecx, DWORD PTR _fullPath$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A 
call	?Find@FileHistory@@QBEPAUFileState@@PB_WPAI@Z 
test	eax, eax
je	SHORT $LN27@LoadDocume
lea	ecx, DWORD PTR _fullPath$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?Dup@str@@YAPA_WPB_W@Z			
add	esp, 4
push	eax
lea	ecx, DWORD PTR _adjPath$12[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
lea	ecx, DWORD PTR _adjPath$12[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?AdjustVariableDriveLetter@@YA_NPA_W@Z	
add	esp, 4
movzx	eax, al
test	eax, eax
je	SHORT $LN28@LoadDocume
lea	ecx, DWORD PTR _adjPath$12[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
lea	ecx, DWORD PTR _fullPath$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?RenameFileInHistory@@YAXPB_W0@Z	
add	esp, 8
lea	ecx, DWORD PTR _adjPath$12[ebp]
call	?StealData@?$ScopedMem@_W@@QAEPA_WXZ	
push	eax
lea	ecx, DWORD PTR _fullPath$[ebp]
call	?Set@?$ScopedMem@_W@@QAEXPA_W@Z		
mov	BYTE PTR _failEarly$[ebp], 0
lea	ecx, DWORD PTR _adjPath$12[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
movzx	eax, BYTE PTR _failEarly$[ebp]
test	eax, eax
je	$LN29@LoadDocume
mov	eax, DWORD PTR _fullPath$[ebp]
push	eax
push	OFFSET ??_C@_0BC@BGEEBOPC@File?5?$CFs?5not?5found?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
call	?Format@str@@YAPA_WPB_WZZ		
add	esp, 8
push	eax
lea	ecx, DWORD PTR _msg$11[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
push	1
push	2
lea	ecx, DWORD PTR _msg$11[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	ecx, DWORD PTR _win$[ebp]
call	?ShowNotification@WindowInfo@@QAEXPB_WHW4NotificationGroup@@@Z 
push	1
mov	ecx, DWORD PTR _win$[ebp]
call	?RedrawAll@WindowInfo@@QAEX_N@Z		
push	0
lea	ecx, DWORD PTR _fullPath$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A 
call	?MarkFileInexistent@FileHistory@@QAE_NPB_W_N@Z 
movzx	eax, al
test	eax, eax
je	SHORT $LN30@LoadDocume
call	?Save@prefs@@YA_NXZ			
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?Count@?$Vec@PAVWindowInfo@@@@QBEIXZ	
cmp	eax, 1
jne	SHORT $LN30@LoadDocume
push	0
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z 
mov	ecx, DWORD PTR [eax]
call	?IsAboutWindow@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN30@LoadDocume
push	1
push	0
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z 
mov	ecx, DWORD PTR [eax]
call	?RedrawAll@WindowInfo@@QAEX_N@Z		
mov	DWORD PTR $T7[ebp], 0
lea	ecx, DWORD PTR _msg$11[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _fullPath$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
mov	eax, DWORD PTR $T7[ebp]
jmp	$LN1@LoadDocume
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+241]
test	ecx, ecx
je	SHORT $LN57@LoadDocume
mov	edx, DWORD PTR _args$[ebp]
movzx	eax, BYTE PTR [edx+9]
test	eax, eax
jne	SHORT $LN57@LoadDocume
mov	DWORD PTR tv199[ebp], 1
jmp	SHORT $LN58@LoadDocume
mov	DWORD PTR tv199[ebp], 0
mov	cl, BYTE PTR tv199[ebp]
mov	BYTE PTR _openNewTab$[ebp], cl
movzx	eax, BYTE PTR _openNewTab$[ebp]
test	eax, eax
je	SHORT $LN32@LoadDocume
mov	eax, DWORD PTR _args$[ebp]
cmp	DWORD PTR [eax+4], 0
jne	SHORT $LN33@LoadDocume
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?Count@?$Vec@PAVWindowInfo@@@@QBEIXZ	
test	eax, eax
jbe	SHORT $LN33@LoadDocume
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?Last@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@XZ 
mov	ecx, DWORD PTR _args$[ebp]
mov	edx, DWORD PTR [eax]
mov	DWORD PTR [ecx+4], edx
mov	eax, DWORD PTR _args$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _win$[ebp], ecx
mov	eax, DWORD PTR _args$[ebp]
mov	BYTE PTR [eax+10], 0
mov	eax, DWORD PTR _args$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	?SaveCurrentTabInfo@@YAXPAVWindowInfo@@@Z 
add	esp, 4
cmp	DWORD PTR _win$[ebp], 0
jne	SHORT $LN35@LoadDocume
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?Count@?$Vec@PAVWindowInfo@@@@QBEIXZ	
cmp	eax, 1
jne	SHORT $LN35@LoadDocume
push	0
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z 
mov	ecx, DWORD PTR [eax]
call	?IsAboutWindow@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN35@LoadDocume
push	0
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z 
mov	eax, DWORD PTR [eax]
mov	DWORD PTR _win$[ebp], eax
mov	eax, DWORD PTR _args$[ebp]
mov	ecx, DWORD PTR _win$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	eax, DWORD PTR _args$[ebp]
mov	BYTE PTR [eax+10], 0
jmp	$LN5@LoadDocume
cmp	DWORD PTR _win$[ebp], 0
je	SHORT $LN38@LoadDocume
movzx	eax, BYTE PTR _openNewTab$[ebp]
test	eax, eax
jne	$LN5@LoadDocume
mov	eax, DWORD PTR _args$[ebp]
movzx	ecx, BYTE PTR [eax+9]
test	ecx, ecx
jne	SHORT $LN5@LoadDocume
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN5@LoadDocume
mov	eax, DWORD PTR _win$[ebp]
mov	DWORD PTR _currWin$10[ebp], eax
call	?CreateWindowInfo@@YAPAVWindowInfo@@XZ	
mov	DWORD PTR _win$[ebp], eax
cmp	DWORD PTR _win$[ebp], 0
jne	SHORT $LN39@LoadDocume
mov	DWORD PTR $T6[ebp], 0
lea	ecx, DWORD PTR _fullPath$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
mov	eax, DWORD PTR $T6[ebp]
jmp	$LN1@LoadDocume
mov	eax, DWORD PTR _args$[ebp]
mov	ecx, DWORD PTR _win$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	eax, DWORD PTR _args$[ebp]
mov	BYTE PTR [eax+10], 1
cmp	DWORD PTR _currWin$10[ebp], 0
je	SHORT $LN5@LoadDocume
mov	eax, DWORD PTR _currWin$10[ebp]
push	eax
call	?RememberFavTreeExpansionState@@YAXPAVWindowInfo@@@Z 
add	esp, 4
mov	eax, DWORD PTR _currWin$10[ebp]
add	eax, 164				
push	eax
mov	ecx, DWORD PTR _win$[ebp]
add	ecx, 164				
call	??4?$Vec@PAUFileState@@@@QAEAAV0@ABV0@@Z 
xor	eax, eax
jne	SHORT $LN5@LoadDocume
movzx	eax, BYTE PTR _openNewTab$[ebp]
test	eax, eax
je	SHORT $LN59@LoadDocume
mov	ecx, DWORD PTR _args$[ebp]
movzx	edx, BYTE PTR [ecx+9]
test	edx, edx
je	SHORT $LN59@LoadDocume
mov	BYTE PTR tv257[ebp], 1
jmp	SHORT $LN60@LoadDocume
mov	BYTE PTR tv257[ebp], 0
movzx	eax, BYTE PTR tv257[ebp]
push	eax
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@LoadDocume
mov	ecx, DWORD PTR _win$[ebp]
call	?IsAboutWindow@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN11@LoadDocume
mov	ecx, DWORD PTR _win$[ebp]
add	ecx, 368				
call	?Reset@?$Vec@UStaticLinkInfo@@@@QAEXXZ	
mov	eax, DWORD PTR _args$[ebp]
mov	BYTE PTR [eax+9], 0
jmp	SHORT $LN42@LoadDocume
xor	eax, eax
jne	SHORT $LN11@LoadDocume
mov	eax, DWORD PTR _args$[ebp]
movzx	ecx, BYTE PTR [eax+9]
test	ecx, ecx
jne	SHORT $LN61@LoadDocume
movzx	edx, BYTE PTR _openNewTab$[ebp]
test	edx, edx
jne	SHORT $LN61@LoadDocume
mov	BYTE PTR tv273[ebp], 1
jmp	SHORT $LN62@LoadDocume
mov	BYTE PTR tv273[ebp], 0
movzx	eax, BYTE PTR tv273[ebp]
push	eax
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN11@LoadDocume
mov	eax, DWORD PTR _args$[ebp]
movzx	ecx, BYTE PTR [eax+9]
push	ecx
push	1
mov	edx, DWORD PTR _win$[ebp]
push	edx
call	?CloseDocumentInTab@@YAXPAVWindowInfo@@_N1@Z 
add	esp, 12					
mov	eax, DWORD PTR _args$[ebp]
movzx	ecx, BYTE PTR [eax+9]
test	ecx, ecx
jne	$LN43@LoadDocume
mov	eax, DWORD PTR ?__LINE__Var@?0??LoadDocument@@YAPAVWindowInfo@@AAULoadArgs@@@Z@4JA
add	eax, 78					
push	eax
push	OFFSET ??_C@_0DC@LPCGCECE@c?3?2workspace?2sumatrapdf?9master?2s@
push	1
push	140					
call	??2@YAPAXIHPBDH@Z			
add	esp, 16					
mov	DWORD PTR $T5[ebp], eax
cmp	DWORD PTR $T5[ebp], 0
je	SHORT $LN63@LoadDocume
mov	ecx, DWORD PTR $T5[ebp]
call	??0TabInfo@@QAE@XZ			
mov	DWORD PTR tv296[ebp], eax
jmp	SHORT $LN64@LoadDocume
mov	DWORD PTR tv296[ebp], 0
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR tv296[ebp]
mov	DWORD PTR [ecx+88], edx
mov	eax, DWORD PTR _win$[ebp]
add	eax, 88					
push	eax
mov	ecx, DWORD PTR _win$[ebp]
add	ecx, 4
call	?Append@?$Vec@PAVTabInfo@@@@QAEXABQAVTabInfo@@@Z 
mov	eax, DWORD PTR _win$[ebp]
add	eax, 804				
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+88]
add	edx, 104				
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR [edx], ecx
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR [edx+4], ecx
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR [edx+8], ecx
mov	eax, DWORD PTR [eax+12]
mov	DWORD PTR [edx+12], eax
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
lea	ecx, DWORD PTR _pwdUI$[ebp]
call	??0HwndPasswordUI@@QAE@PAUHWND__@@@Z	
lea	ecx, DWORD PTR _fullPath$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
mov	ecx, DWORD PTR _args$[ebp]
mov	DWORD PTR [ecx], eax
mov	eax, DWORD PTR _args$[ebp]
mov	BYTE PTR [eax+11], 1
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+241]
test	ecx, ecx
jne	SHORT $LN65@LoadDocume
mov	DWORD PTR tv318[ebp], 1
jmp	SHORT $LN66@LoadDocume
mov	DWORD PTR tv318[ebp], 0
mov	edx, DWORD PTR _args$[ebp]
mov	al, BYTE PTR tv318[ebp]
mov	BYTE PTR [edx+12], al
push	0
lea	eax, DWORD PTR _pwdUI$[ebp]
push	eax
mov	ecx, DWORD PTR _args$[ebp]
push	ecx
call	?LoadDocIntoCurrentTab@@YA_NAAULoadArgs@@PAVPasswordUI@@PAUFileState@@@Z 
add	esp, 12					
mov	BYTE PTR _loaded$[ebp], al
movzx	eax, BYTE PTR _loaded$[ebp]
test	eax, eax
jne	SHORT $LN44@LoadDocume
lea	ecx, DWORD PTR _fullPath$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?IsModificationsFile@@YA_NPB_W@Z	
add	esp, 4
movzx	eax, al
test	eax, eax
je	SHORT $LN44@LoadDocume
lea	ecx, DWORD PTR _fullPath$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?GetExt@path@@YAPB_WPB_W@Z		
add	esp, 4
xor	ecx, ecx
mov	WORD PTR [eax], cx
push	0
lea	eax, DWORD PTR _pwdUI$[ebp]
push	eax
mov	ecx, DWORD PTR _args$[ebp]
push	ecx
call	?LoadDocIntoCurrentTab@@YA_NAAULoadArgs@@PAVPasswordUI@@PAUFileState@@@Z 
add	esp, 12					
mov	BYTE PTR _loaded$[ebp], al
mov	eax, DWORD PTR _args$[ebp]
movzx	ecx, BYTE PTR [eax+9]
test	ecx, ecx
jne	SHORT $LN45@LoadDocume
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?TabsOnLoadedDoc@@YAXPAVWindowInfo@@@Z	
add	esp, 4
jmp	SHORT $LN46@LoadDocume
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?TabsOnChangedDoc@@YAXPAVWindowInfo@@@Z	
add	esp, 4
cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	
je	SHORT $LN47@LoadDocume
mov	esi, esp
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__SetMenu@8
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, DWORD PTR _win$[ebp]
mov	DWORD PTR $T4[ebp], eax
lea	ecx, DWORD PTR _pwdUI$[ebp]
call	??1HwndPasswordUI@@UAE@XZ
lea	ecx, DWORD PTR _fullPath$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
mov	eax, DWORD PTR $T4[ebp]
jmp	$LN1@LoadDocume
movzx	eax, BYTE PTR _loaded$[ebp]
test	eax, eax
jne	SHORT $LN17@LoadDocume
push	0
lea	ecx, DWORD PTR _fullPath$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A 
call	?MarkFileInexistent@FileHistory@@QAE_NPB_W_N@Z 
movzx	eax, al
test	eax, eax
je	SHORT $LN49@LoadDocume
call	?Save@prefs@@YA_NXZ			
mov	eax, DWORD PTR _win$[ebp]
mov	DWORD PTR $T3[ebp], eax
lea	ecx, DWORD PTR _pwdUI$[ebp]
call	??1HwndPasswordUI@@UAE@XZ
lea	ecx, DWORD PTR _fullPath$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
mov	eax, DWORD PTR $T3[ebp]
jmp	$LN1@LoadDocume
xor	eax, eax
jne	SHORT $LN17@LoadDocume
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
cmp	DWORD PTR [ecx+124], 0
je	SHORT $LN67@LoadDocume
mov	BYTE PTR tv371[ebp], 1
jmp	SHORT $LN68@LoadDocume
mov	BYTE PTR tv371[ebp], 0
movzx	edx, BYTE PTR tv371[ebp]
push	edx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN17@LoadDocume
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+117]
test	ecx, ecx
je	SHORT $LN50@LoadDocume
mov	eax, DWORD PTR ?__LINE__Var@?0??LoadDocument@@YAPAVWindowInfo@@AAULoadArgs@@@Z@4JA
add	eax, 115				
push	eax
push	OFFSET ??_C@_0DC@LPCGCECE@c?3?2workspace?2sumatrapdf?9master?2s@
push	1
push	8
call	??2@YAPAXIHPBDH@Z			
add	esp, 16					
mov	DWORD PTR $T2[ebp], eax
cmp	DWORD PTR $T2[ebp], 0
je	SHORT $LN69@LoadDocume
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+88]
push	edx
mov	ecx, DWORD PTR $T2[ebp]
call	??0TabReloadHandler@@QAE@PAVTabInfo@@@Z	
mov	DWORD PTR tv391[ebp], eax
jmp	SHORT $LN70@LoadDocume
mov	DWORD PTR tv391[ebp], 0
mov	eax, DWORD PTR tv391[ebp]
mov	DWORD PTR _observer$9[ebp], eax
mov	eax, DWORD PTR _observer$9[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [ecx+88]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?FileWatcherSubscribe@@YAPAUWatchedFile@@PB_WPAVFileChangeObserver@@@Z 
add	esp, 8
mov	edx, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [edx+88]
mov	DWORD PTR [ecx+124], eax
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+188]
test	ecx, ecx
je	$LN51@LoadDocume
xor	eax, eax
jne	SHORT $LN23@LoadDocume
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
lea	ecx, DWORD PTR _fullPath$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?Eq@str@@YA_NPB_W0@Z			
add	esp, 8
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN71@LoadDocume
mov	BYTE PTR tv420[ebp], 1
jmp	SHORT $LN72@LoadDocume
mov	BYTE PTR tv420[ebp], 0
movzx	edx, BYTE PTR tv420[ebp]
push	edx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN23@LoadDocume
lea	ecx, DWORD PTR _fullPath$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A 
call	?MarkFileLoaded@FileHistory@@QAEPAUFileState@@PB_W@Z 
mov	DWORD PTR _ds$8[ebp], eax
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+240]
test	ecx, ecx
je	SHORT $LN52@LoadDocume
mov	eax, DWORD PTR _ds$8[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?CreateThumbnailForFile@@YAXAAVWindowInfo@@AAUFileState@@@Z 
add	esp, 8
call	?Save@prefs@@YA_NXZ			
push	2
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	eax, al
test	eax, eax
je	SHORT $LN53@LoadDocume
cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	
jne	SHORT $LN53@LoadDocume
call	?IsStressTesting@@YA_NXZ		
movzx	eax, al
test	eax, eax
jne	SHORT $LN53@LoadDocume
lea	ecx, DWORD PTR _fullPath$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
mov	esi, esp
push	eax
push	3
call	DWORD PTR __imp__SHAddToRecentDocs@8
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, DWORD PTR _win$[ebp]
mov	DWORD PTR $T1[ebp], eax
lea	ecx, DWORD PTR _pwdUI$[ebp]
call	??1HwndPasswordUI@@UAE@XZ
lea	ecx, DWORD PTR _fullPath$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
mov	eax, DWORD PTR $T1[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN78@LoadDocume
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 420				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	4
DD	$LN77@LoadDocume
DD	-8					
DD	4
DD	$LN73@LoadDocume
DD	-44					
DD	4
DD	$LN74@LoadDocume
DD	-56					
DD	4
DD	$LN75@LoadDocume
DD	-100					
DD	12					
DD	$LN76@LoadDocume
DB	112					
DB	119					
DB	100					
DB	85					
DB	73					
DB	0
DB	109					
DB	115					
DB	103					
DB	0
DB	97					
DB	100					
DB	106					
DB	80					
DB	97					
DB	116					
DB	104					
DB	0
DB	102					
DB	117					
DB	108					
DB	108					
DB	80					
DB	97					
DB	116					
DB	104					
DB	0
ENDP
??0LoadArgs@@QAE@PB_WPAVWindowInfo@@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _fileName$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _win$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	BYTE PTR [eax+8], 1
mov	eax, DWORD PTR _this$[ebp]
mov	BYTE PTR [eax+9], 0
mov	eax, DWORD PTR _this$[ebp]
mov	BYTE PTR [eax+10], 0
mov	eax, DWORD PTR _this$[ebp]
mov	BYTE PTR [eax+11], 1
mov	eax, DWORD PTR _this$[ebp]
mov	BYTE PTR [eax+12], 1
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	8
ENDP
?FindWindowInfoByController@@YAPAVWindowInfo@@PAVController@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
lea	eax, DWORD PTR _ctrl$[ebp]
push	eax
lea	ecx, DWORD PTR $T1[ebp]
call	??0<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@QAE@AAPAVController@@@Z 
sub	esp, 40					
mov	ecx, esp
mov	edx, DWORD PTR [eax]
push	edx
call	??$?0V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@?$function@$$A6A_NAAPAVWindowInfo@@@Z@std@@QAE@V<lambda_28a72a76c5b2c3b938dee32c6e1a2ec4>@@@Z 
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?FindEl@?$Vec@PAVWindowInfo@@@@QAEAAPAVWindowInfo@@V?$function@$$A6A_NAAPAVWindowInfo@@@Z@std@@@Z 
mov	eax, DWORD PTR [eax]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?FindWindowInfoByTab@@YAPAVWindowInfo@@PAVTabInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
lea	eax, DWORD PTR _tab$[ebp]
push	eax
lea	ecx, DWORD PTR $T1[ebp]
call	??0<lambda_8ad1c185be25e490e788bf92305592c9>@@QAE@AAPAVTabInfo@@@Z 
sub	esp, 40					
mov	ecx, esp
mov	edx, DWORD PTR [eax]
push	edx
call	??$?0V<lambda_8ad1c185be25e490e788bf92305592c9>@@@?$function@$$A6A_NAAPAVWindowInfo@@@Z@std@@QAE@V<lambda_8ad1c185be25e490e788bf92305592c9>@@@Z 
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?FindEl@?$Vec@PAVWindowInfo@@@@QAEAAPAVWindowInfo@@V?$function@$$A6A_NAAPAVWindowInfo@@@Z@std@@@Z 
mov	eax, DWORD PTR [eax]
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?FindWindowInfoBySyncFile@@YAPAVWindowInfo@@PB_W_N@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 632				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-632]
mov	ecx, 158				
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _<range>$L0$12[ebp], OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
lea	eax, DWORD PTR _<begin>$L0$11[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L0$12[ebp]
call	?begin@?$Vec@PAVWindowInfo@@@@QAE?AVIter@1@XZ 
lea	eax, DWORD PTR _<end>$L0$10[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L0$12[ebp]
call	?end@?$Vec@PAVWindowInfo@@@@QAE?AVIter@1@XZ 
jmp	SHORT $LN4@FindWindow
lea	ecx, DWORD PTR _<begin>$L0$11[ebp]
call	??EIter@?$Vec@PAVWindowInfo@@@@QAEAAV01@XZ 
lea	eax, DWORD PTR _<end>$L0$10[ebp]
push	eax
lea	ecx, DWORD PTR _<begin>$L0$11[ebp]
call	??9Iter@?$Vec@PAVWindowInfo@@@@QBE_NABV01@@Z 
movzx	ecx, al
test	ecx, ecx
je	$LN3@FindWindow
lea	ecx, DWORD PTR _<begin>$L0$11[ebp]
call	??DIter@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@XZ 
mov	eax, DWORD PTR [eax]
mov	DWORD PTR _win$9[ebp], eax
push	0
push	0
lea	ecx, DWORD PTR _rects$8[ebp]
call	??0?$Vec@V?$RectT@H@geomutil@@@@QAE@IPAVAllocator@@@Z 
mov	ecx, DWORD PTR _win$9[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
je	SHORT $LN8@FindWindow
mov	ecx, DWORD PTR _win$9[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
cmp	DWORD PTR [eax+20], 0
je	SHORT $LN8@FindWindow
mov	ecx, DWORD PTR _win$9[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	eax, DWORD PTR [eax+20]
mov	DWORD PTR tv93[ebp], eax
mov	esi, esp
lea	ecx, DWORD PTR _rects$8[ebp]
push	ecx
lea	edx, DWORD PTR _page$7[ebp]
push	edx
push	0
push	0
mov	eax, DWORD PTR _file$[ebp]
push	eax
mov	ecx, DWORD PTR tv93[ebp]
mov	edx, DWORD PTR [ecx]
mov	ecx, DWORD PTR tv93[ebp]
mov	eax, DWORD PTR [edx+8]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
cmp	eax, 5
je	SHORT $LN8@FindWindow
mov	eax, DWORD PTR _win$9[ebp]
mov	DWORD PTR $T2[ebp], eax
lea	ecx, DWORD PTR _rects$8[ebp]
call	??1?$Vec@V?$RectT@H@geomutil@@@@QAE@XZ	
mov	eax, DWORD PTR $T2[ebp]
jmp	$LN1@FindWindow
movzx	eax, BYTE PTR _focusTab$[ebp]
test	eax, eax
je	$LN9@FindWindow
mov	ecx, DWORD PTR _win$9[ebp]
add	ecx, 4
call	?Count@?$Vec@PAVTabInfo@@@@QBEIXZ	
cmp	eax, 1
jbe	$LN9@FindWindow
mov	eax, DWORD PTR _win$9[ebp]
add	eax, 4
mov	DWORD PTR _<range>$L1$6[ebp], eax
lea	eax, DWORD PTR _<begin>$L1$5[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L1$6[ebp]
call	?begin@?$Vec@PAVTabInfo@@@@QAE?AVIter@1@XZ 
lea	eax, DWORD PTR _<end>$L1$4[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L1$6[ebp]
call	?end@?$Vec@PAVTabInfo@@@@QAE?AVIter@1@XZ 
jmp	SHORT $LN7@FindWindow
lea	ecx, DWORD PTR _<begin>$L1$5[ebp]
call	??EIter@?$Vec@PAVTabInfo@@@@QAEAAV01@XZ	
lea	eax, DWORD PTR _<end>$L1$4[ebp]
push	eax
lea	ecx, DWORD PTR _<begin>$L1$5[ebp]
call	??9Iter@?$Vec@PAVTabInfo@@@@QBE_NABV01@@Z 
movzx	ecx, al
test	ecx, ecx
je	$LN9@FindWindow
lea	ecx, DWORD PTR _<begin>$L1$5[ebp]
call	??DIter@?$Vec@PAVTabInfo@@@@QBEAAPAVTabInfo@@XZ 
mov	eax, DWORD PTR [eax]
mov	DWORD PTR _tab$3[ebp], eax
mov	eax, DWORD PTR _win$9[ebp]
mov	ecx, DWORD PTR _tab$3[ebp]
cmp	ecx, DWORD PTR [eax+88]
je	$LN10@FindWindow
mov	ecx, DWORD PTR _tab$3[ebp]
call	?AsFixed@TabInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
je	$LN10@FindWindow
mov	ecx, DWORD PTR _tab$3[ebp]
call	?AsFixed@TabInfo@@QBEPAVDisplayModel@@XZ 
cmp	DWORD PTR [eax+20], 0
je	$LN10@FindWindow
mov	ecx, DWORD PTR _tab$3[ebp]
call	?AsFixed@TabInfo@@QBEPAVDisplayModel@@XZ 
mov	eax, DWORD PTR [eax+20]
mov	DWORD PTR tv168[ebp], eax
mov	esi, esp
lea	ecx, DWORD PTR _rects$8[ebp]
push	ecx
lea	edx, DWORD PTR _page$7[ebp]
push	edx
push	0
push	0
mov	eax, DWORD PTR _file$[ebp]
push	eax
mov	ecx, DWORD PTR tv168[ebp]
mov	edx, DWORD PTR [ecx]
mov	ecx, DWORD PTR tv168[ebp]
mov	eax, DWORD PTR [edx+8]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
cmp	eax, 5
je	SHORT $LN10@FindWindow
push	0
mov	eax, DWORD PTR _tab$3[ebp]
push	eax
mov	ecx, DWORD PTR _win$9[ebp]
add	ecx, 4
call	?Find@?$Vec@PAVTabInfo@@@@QBEHPAVTabInfo@@I@Z 
push	eax
mov	ecx, DWORD PTR _win$9[ebp]
push	ecx
call	?TabsSelect@@YAXPAVWindowInfo@@H@Z	
add	esp, 8
mov	eax, DWORD PTR _win$9[ebp]
mov	DWORD PTR $T1[ebp], eax
lea	ecx, DWORD PTR _rects$8[ebp]
call	??1?$Vec@V?$RectT@H@geomutil@@@@QAE@XZ	
mov	eax, DWORD PTR $T1[ebp]
jmp	SHORT $LN1@FindWindow
jmp	$LN5@FindWindow
lea	ecx, DWORD PTR _rects$8[ebp]
call	??1?$Vec@V?$RectT@H@geomutil@@@@QAE@XZ	
jmp	$LN2@FindWindow
xor	eax, eax
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN19@FindWindow
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
add	esp, 632				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	2
DD	6
DD	$LN18@FindWindow
DD	-28					
DD	8
DD	$LN12@FindWindow
DD	-44					
DD	8
DD	$LN13@FindWindow
DD	-340					
DD	276					
DD	$LN14@FindWindow
DD	-352					
DD	4
DD	$LN15@FindWindow
DD	-380					
DD	8
DD	$LN16@FindWindow
DD	-396					
DD	8
DD	$LN17@FindWindow
DB	60					
DB	101					
DB	110					
DB	100					
DB	62					
DB	36					
DB	76					
DB	49					
DB	0
DB	60					
DB	98					
DB	101					
DB	103					
DB	105					
DB	110					
DB	62					
DB	36					
DB	76					
DB	49					
DB	0
DB	112					
DB	97					
DB	103					
DB	101					
DB	0
DB	114					
DB	101					
DB	99					
DB	116					
DB	115					
DB	0
DB	60					
DB	101					
DB	110					
DB	100					
DB	62					
DB	36					
DB	76					
DB	48					
DB	0
DB	60					
DB	98					
DB	101					
DB	103					
DB	105					
DB	110					
DB	62					
DB	36					
DB	76					
DB	48					
DB	0
ENDP
?FindWindowInfoByFile@@YAPAVWindowInfo@@PB_W_N@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 352				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-352]
mov	ecx, 88					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _file$[ebp]
push	eax
call	?Normalize@path@@YAPA_WPB_W@Z		
add	esp, 4
push	eax
lea	ecx, DWORD PTR _normFile$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
mov	DWORD PTR _<range>$L0$11[ebp], OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
lea	eax, DWORD PTR _<begin>$L0$10[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L0$11[ebp]
call	?begin@?$Vec@PAVWindowInfo@@@@QAE?AVIter@1@XZ 
lea	eax, DWORD PTR _<end>$L0$9[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L0$11[ebp]
call	?end@?$Vec@PAVWindowInfo@@@@QAE?AVIter@1@XZ 
jmp	SHORT $LN4@FindWindow
lea	ecx, DWORD PTR _<begin>$L0$10[ebp]
call	??EIter@?$Vec@PAVWindowInfo@@@@QAEAAV01@XZ 
lea	eax, DWORD PTR _<end>$L0$9[ebp]
push	eax
lea	ecx, DWORD PTR _<begin>$L0$10[ebp]
call	??9Iter@?$Vec@PAVWindowInfo@@@@QBE_NABV01@@Z 
movzx	ecx, al
test	ecx, ecx
je	$LN3@FindWindow
lea	ecx, DWORD PTR _<begin>$L0$10[ebp]
call	??DIter@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@XZ 
mov	eax, DWORD PTR [eax]
mov	DWORD PTR _win$8[ebp], eax
mov	ecx, DWORD PTR _win$8[ebp]
call	?IsAboutWindow@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN8@FindWindow
lea	ecx, DWORD PTR _normFile$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	eax, DWORD PTR _win$8[ebp]
mov	ecx, DWORD PTR [eax+88]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?IsSame@path@@YA_NPB_W0@Z		
add	esp, 8
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN8@FindWindow
mov	eax, DWORD PTR _win$8[ebp]
mov	DWORD PTR $T3[ebp], eax
lea	ecx, DWORD PTR _normFile$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
mov	eax, DWORD PTR $T3[ebp]
jmp	$LN1@FindWindow
movzx	eax, BYTE PTR _focusTab$[ebp]
test	eax, eax
je	$LN9@FindWindow
mov	ecx, DWORD PTR _win$8[ebp]
add	ecx, 4
call	?Count@?$Vec@PAVTabInfo@@@@QBEIXZ	
cmp	eax, 1
jbe	$LN9@FindWindow
mov	eax, DWORD PTR _win$8[ebp]
add	eax, 4
mov	DWORD PTR _<range>$L1$7[ebp], eax
lea	eax, DWORD PTR _<begin>$L1$6[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L1$7[ebp]
call	?begin@?$Vec@PAVTabInfo@@@@QAE?AVIter@1@XZ 
lea	eax, DWORD PTR _<end>$L1$5[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L1$7[ebp]
call	?end@?$Vec@PAVTabInfo@@@@QAE?AVIter@1@XZ 
jmp	SHORT $LN7@FindWindow
lea	ecx, DWORD PTR _<begin>$L1$6[ebp]
call	??EIter@?$Vec@PAVTabInfo@@@@QAEAAV01@XZ	
lea	eax, DWORD PTR _<end>$L1$5[ebp]
push	eax
lea	ecx, DWORD PTR _<begin>$L1$6[ebp]
call	??9Iter@?$Vec@PAVTabInfo@@@@QBE_NABV01@@Z 
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN9@FindWindow
lea	ecx, DWORD PTR _<begin>$L1$6[ebp]
call	??DIter@?$Vec@PAVTabInfo@@@@QBEAAPAVTabInfo@@XZ 
mov	eax, DWORD PTR [eax]
mov	DWORD PTR _tab$4[ebp], eax
mov	eax, DWORD PTR _win$8[ebp]
mov	ecx, DWORD PTR _tab$4[ebp]
cmp	ecx, DWORD PTR [eax+88]
je	SHORT $LN10@FindWindow
lea	ecx, DWORD PTR _normFile$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	ecx, DWORD PTR _tab$4[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?IsSame@path@@YA_NPB_W0@Z		
add	esp, 8
movzx	eax, al
test	eax, eax
je	SHORT $LN10@FindWindow
push	0
mov	eax, DWORD PTR _tab$4[ebp]
push	eax
mov	ecx, DWORD PTR _win$8[ebp]
add	ecx, 4
call	?Find@?$Vec@PAVTabInfo@@@@QBEHPAVTabInfo@@I@Z 
push	eax
mov	ecx, DWORD PTR _win$8[ebp]
push	ecx
call	?TabsSelect@@YAXPAVWindowInfo@@H@Z	
add	esp, 8
mov	eax, DWORD PTR _win$8[ebp]
mov	DWORD PTR $T2[ebp], eax
lea	ecx, DWORD PTR _normFile$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
mov	eax, DWORD PTR $T2[ebp]
jmp	SHORT $LN1@FindWindow
jmp	$LN5@FindWindow
jmp	$LN2@FindWindow
mov	DWORD PTR $T1[ebp], 0
lea	ecx, DWORD PTR _normFile$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
mov	eax, DWORD PTR $T1[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN18@FindWindow
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 352				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
DD	5
DD	$LN17@FindWindow
DD	-8					
DD	4
DD	$LN12@FindWindow
DD	-36					
DD	8
DD	$LN13@FindWindow
DD	-52					
DD	8
DD	$LN14@FindWindow
DD	-92					
DD	8
DD	$LN15@FindWindow
DD	-108					
DD	8
DD	$LN16@FindWindow
DB	60					
DB	101					
DB	110					
DB	100					
DB	62					
DB	36					
DB	76					
DB	49					
DB	0
DB	60					
DB	98					
DB	101					
DB	103					
DB	105					
DB	110					
DB	62					
DB	36					
DB	76					
DB	49					
DB	0
DB	60					
DB	101					
DB	110					
DB	100					
DB	62					
DB	36					
DB	76					
DB	48					
DB	0
DB	60					
DB	98					
DB	101					
DB	103					
DB	105					
DB	110					
DB	62					
DB	36					
DB	76					
DB	48					
DB	0
DB	110					
DB	111					
DB	114					
DB	109					
DB	70					
DB	105					
DB	108					
DB	101					
DB	0
ENDP
?FindWindowInfoByHwnd@@YAPAVWindowInfo@@PAUHWND__@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
mov	esi, esp
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	DWORD PTR __imp__GetParent@4
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _parent$[ebp], eax
mov	DWORD PTR _i$2[ebp], 0
jmp	SHORT $LN4@FindWindow
mov	eax, DWORD PTR _i$2[ebp]
add	eax, 1
mov	DWORD PTR _i$2[ebp], eax
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?Count@?$Vec@PAVWindowInfo@@@@QBEIXZ	
cmp	DWORD PTR _i$2[ebp], eax
jae	$LN3@FindWindow
mov	eax, DWORD PTR _i$2[ebp]
push	eax
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z 
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _win$1[ebp], ecx
mov	eax, DWORD PTR _win$1[ebp]
mov	ecx, DWORD PTR _hwnd$[ebp]
cmp	ecx, DWORD PTR [eax+92]
jne	SHORT $LN5@FindWindow
mov	eax, DWORD PTR _win$1[ebp]
jmp	SHORT $LN1@FindWindow
cmp	DWORD PTR _parent$[ebp], 0
jne	SHORT $LN6@FindWindow
jmp	SHORT $LN2@FindWindow
mov	eax, DWORD PTR _win$1[ebp]
mov	ecx, DWORD PTR _parent$[ebp]
cmp	ecx, DWORD PTR [eax+92]
je	SHORT $LN8@FindWindow
mov	eax, DWORD PTR _win$1[ebp]
mov	ecx, DWORD PTR _parent$[ebp]
cmp	ecx, DWORD PTR [eax+96]
je	SHORT $LN8@FindWindow
mov	eax, DWORD PTR _win$1[ebp]
mov	ecx, DWORD PTR _parent$[ebp]
cmp	ecx, DWORD PTR [eax+100]
je	SHORT $LN8@FindWindow
mov	eax, DWORD PTR _win$1[ebp]
mov	ecx, DWORD PTR _parent$[ebp]
cmp	ecx, DWORD PTR [eax+136]
je	SHORT $LN8@FindWindow
mov	eax, DWORD PTR _win$1[ebp]
mov	ecx, DWORD PTR _parent$[ebp]
cmp	ecx, DWORD PTR [eax+152]
je	SHORT $LN8@FindWindow
mov	eax, DWORD PTR _win$1[ebp]
mov	ecx, DWORD PTR _parent$[ebp]
cmp	ecx, DWORD PTR [eax+256]
je	SHORT $LN8@FindWindow
mov	eax, DWORD PTR _win$1[ebp]
mov	ecx, DWORD PTR _parent$[ebp]
cmp	ecx, DWORD PTR [eax+268]
jne	SHORT $LN7@FindWindow
mov	eax, DWORD PTR _win$1[ebp]
jmp	SHORT $LN1@FindWindow
jmp	$LN2@FindWindow
xor	eax, eax
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?RelayoutWindow@@YAXPAVWindowInfo@@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
push	-1
push	1
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?RelayoutFrame@@YAXPAVWindowInfo@@_NH@Z	
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?OnMenuViewFullscreen@@YAXPAVWindowInfo@@_N@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR _presentation$[ebp]
test	eax, eax
je	SHORT $LN11@OnMenuView
mov	ecx, DWORD PTR _win$[ebp]
cmp	DWORD PTR [ecx+776], 0
jne	SHORT $LN9@OnMenuView
mov	DWORD PTR tv70[ebp], 1
jmp	SHORT $LN10@OnMenuView
mov	DWORD PTR tv70[ebp], 0
mov	edx, DWORD PTR tv70[ebp]
mov	DWORD PTR tv73[ebp], edx
jmp	SHORT $LN12@OnMenuView
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+772]
test	ecx, ecx
jne	SHORT $LN7@OnMenuView
mov	DWORD PTR tv69[ebp], 1
jmp	SHORT $LN8@OnMenuView
mov	DWORD PTR tv69[ebp], 0
mov	edx, DWORD PTR tv69[ebp]
mov	DWORD PTR tv73[ebp], edx
mov	al, BYTE PTR tv73[ebp]
mov	BYTE PTR _enterFullScreen$[ebp], al
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
jne	SHORT $LN2@OnMenuView
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+772]
test	ecx, ecx
jne	SHORT $LN2@OnMenuView
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?RememberDefaultWindowPosition@@YAXAAVWindowInfo@@@Z 
add	esp, 4
jmp	SHORT $LN3@OnMenuView
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ExitFullScreen@@YAXPAVWindowInfo@@@Z	
add	esp, 4
movzx	eax, BYTE PTR _enterFullScreen$[ebp]
test	eax, eax
je	SHORT $LN1@OnMenuView
movzx	eax, BYTE PTR _presentation$[ebp]
test	eax, eax
je	SHORT $LN5@OnMenuView
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN1@OnMenuView
movzx	eax, BYTE PTR _presentation$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?EnterFullScreen@@YAXPAVWindowInfo@@_N@Z 
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?ReloadDocument@@YAXPAVWindowInfo@@_N@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 344				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-344]
mov	ecx, 86					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	DWORD PTR _tab$[ebp], ecx
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN2@ReloadDocu
movzx	eax, BYTE PTR _autorefresh$[ebp]
test	eax, eax
jne	SHORT $LN3@ReloadDocu
cmp	DWORD PTR _tab$[ebp], 0
je	SHORT $LN3@ReloadDocu
mov	eax, DWORD PTR _win$[ebp]
push	eax
mov	ecx, DWORD PTR _tab$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
lea	ecx, DWORD PTR _args$4[ebp]
call	??0LoadArgs@@QAE@PB_WPAVWindowInfo@@@Z	
mov	BYTE PTR _args$4[ebp+9], 1
lea	eax, DWORD PTR _args$4[ebp]
push	eax
call	?LoadDocument@@YAPAVWindowInfo@@AAULoadArgs@@@Z 
add	esp, 4
jmp	$LN1@ReloadDocu
mov	ecx, DWORD PTR _tab$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?NewDisplayState@@YAPAUFileState@@PB_W@Z 
add	esp, 4
mov	DWORD PTR _ds$[ebp], eax
mov	esi, esp
mov	eax, DWORD PTR _ds$[ebp]
push	eax
mov	ecx, DWORD PTR _tab$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _tab$[ebp]
mov	edx, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+4]
mov	eax, DWORD PTR [edx+80]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
push	1
mov	eax, DWORD PTR _ds$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?UpdateDisplayStateWindowRect@@YAXAAVWindowInfo@@AAUFileState@@_N@Z 
add	esp, 12					
mov	eax, DWORD PTR _ds$[ebp]
push	eax
mov	ecx, DWORD PTR _tab$[ebp]
push	ecx
mov	edx, DWORD PTR _win$[ebp]
push	edx
call	?UpdateSidebarDisplayState@@YAXPAVWindowInfo@@PAVTabInfo@@PAUFileState@@@Z 
add	esp, 12					
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+772]
test	ecx, ecx
je	SHORT $LN15@ReloadDocu
mov	DWORD PTR tv144[ebp], 3
jmp	SHORT $LN16@ReloadDocu
mov	esi, esp
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [edx+92]
push	eax
call	DWORD PTR __imp__IsZoomed@4
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	SHORT $LN13@ReloadDocu
mov	DWORD PTR tv141[ebp], 2
jmp	SHORT $LN14@ReloadDocu
mov	esi, esp
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+92]
push	edx
call	DWORD PTR __imp__IsIconic@4
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	SHORT $LN11@ReloadDocu
mov	DWORD PTR tv139[ebp], 4
jmp	SHORT $LN12@ReloadDocu
mov	DWORD PTR tv139[ebp], 1
mov	eax, DWORD PTR tv139[ebp]
mov	DWORD PTR tv141[ebp], eax
mov	ecx, DWORD PTR tv141[ebp]
mov	DWORD PTR tv144[ebp], ecx
mov	edx, DWORD PTR _ds$[ebp]
mov	eax, DWORD PTR tv144[ebp]
mov	DWORD PTR [edx+48], eax
mov	eax, DWORD PTR _ds$[ebp]
mov	BYTE PTR [eax+20], 0
mov	ecx, DWORD PTR _tab$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?Dup@str@@YAPA_WPB_W@Z			
add	esp, 4
push	eax
lea	ecx, DWORD PTR _path$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
lea	ecx, DWORD PTR _pwdUI$[ebp]
call	??0HwndPasswordUI@@QAE@PAUHWND__@@@Z	
mov	eax, DWORD PTR _win$[ebp]
push	eax
lea	ecx, DWORD PTR _path$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
lea	ecx, DWORD PTR _args$[ebp]
call	??0LoadArgs@@QAE@PB_WPAVWindowInfo@@@Z	
mov	BYTE PTR _args$[ebp+8], 1
movzx	eax, BYTE PTR _autorefresh$[ebp]
test	eax, eax
jne	SHORT $LN17@ReloadDocu
mov	DWORD PTR tv167[ebp], 1
jmp	SHORT $LN18@ReloadDocu
mov	DWORD PTR tv167[ebp], 0
mov	cl, BYTE PTR tv167[ebp]
mov	BYTE PTR _args$[ebp+11], cl
mov	BYTE PTR _args$[ebp+12], 0
mov	eax, DWORD PTR _ds$[ebp]
push	eax
lea	ecx, DWORD PTR _pwdUI$[ebp]
push	ecx
lea	edx, DWORD PTR _args$[ebp]
push	edx
call	?LoadDocIntoCurrentTab@@YA_NAAULoadArgs@@PAVPasswordUI@@PAUFileState@@@Z 
add	esp, 12					
movzx	eax, al
test	eax, eax
jne	SHORT $LN4@ReloadDocu
mov	eax, DWORD PTR _ds$[ebp]
push	eax
call	?DeleteDisplayState@@YAXPAUFileState@@@Z 
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?TabsOnChangedDoc@@YAXPAVWindowInfo@@@Z	
add	esp, 4
lea	ecx, DWORD PTR _pwdUI$[ebp]
call	??1HwndPasswordUI@@UAE@XZ
lea	ecx, DWORD PTR _path$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
jmp	$LN1@ReloadDocu
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?TabsOnChangedDoc@@YAXPAVWindowInfo@@@Z	
add	esp, 4
mov	eax, DWORD PTR _tab$[ebp]
mov	BYTE PTR [eax+120], 0
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+240]
test	ecx, ecx
je	SHORT $LN5@ReloadDocu
push	0
mov	eax, DWORD PTR _ds$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A 
call	?Find@FileHistory@@QBEPAUFileState@@PB_WPAI@Z 
mov	DWORD PTR _state$3[ebp], eax
cmp	DWORD PTR _state$3[ebp], 0
je	SHORT $LN5@ReloadDocu
mov	eax, DWORD PTR _state$3[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?CreateThumbnailForFile@@YAXAAVWindowInfo@@AAUFileState@@@Z 
add	esp, 8
mov	ecx, DWORD PTR _tab$[ebp]
call	?AsFixed@TabInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
je	$LN7@ReloadDocu
mov	ecx, DWORD PTR _tab$[ebp]
call	?AsFixed@TabInfo@@QBEPAVDisplayModel@@XZ 
mov	ecx, eax
call	?GetEngine@DisplayModel@@QBEPAVBaseEngine@@XZ 
mov	DWORD PTR tv204[ebp], eax
mov	eax, DWORD PTR tv204[ebp]
mov	edx, DWORD PTR [eax]
mov	esi, esp
mov	ecx, DWORD PTR tv204[ebp]
mov	eax, DWORD PTR [edx+128]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
push	eax
lea	ecx, DWORD PTR _decryptionKey$2[ebp]
call	??0?$ScopedMem@D@@QAE@PAD@Z		
lea	ecx, DWORD PTR _decryptionKey$2[ebp]
call	??B?$ScopedMem@D@@QBEPADXZ		
test	eax, eax
je	SHORT $LN8@ReloadDocu
push	0
mov	eax, DWORD PTR _ds$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A 
call	?Find@FileHistory@@QBEPAUFileState@@PB_WPAI@Z 
mov	DWORD PTR _state$1[ebp], eax
cmp	DWORD PTR _state$1[ebp], 0
je	SHORT $LN8@ReloadDocu
lea	ecx, DWORD PTR _decryptionKey$2[ebp]
call	??B?$ScopedMem@D@@QBEPADXZ		
push	eax
mov	eax, DWORD PTR _state$1[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
call	?Eq@str@@YA_NPBD0@Z			
add	esp, 8
movzx	edx, al
test	edx, edx
jne	SHORT $LN8@ReloadDocu
push	1
mov	eax, DWORD PTR _state$1[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
call	__free_dbg
add	esp, 8
lea	ecx, DWORD PTR _decryptionKey$2[ebp]
call	?StealData@?$ScopedMem@D@@QAEPADXZ	
mov	ecx, DWORD PTR _state$1[ebp]
mov	DWORD PTR [ecx+16], eax
lea	ecx, DWORD PTR _decryptionKey$2[ebp]
call	??1?$ScopedMem@D@@QAE@XZ		
mov	eax, DWORD PTR _ds$[ebp]
push	eax
call	?DeleteDisplayState@@YAXPAUFileState@@@Z 
add	esp, 4
lea	ecx, DWORD PTR _pwdUI$[ebp]
call	??1HwndPasswordUI@@UAE@XZ
lea	ecx, DWORD PTR _path$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN25@ReloadDocu
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 344				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
DD	5
DD	$LN24@ReloadDocu
DD	-32					
DD	16					
DD	$LN19@ReloadDocu
DD	-56					
DD	4
DD	$LN20@ReloadDocu
DD	-76					
DD	12					
DD	$LN21@ReloadDocu
DD	-100					
DD	16					
DD	$LN22@ReloadDocu
DD	-124					
DD	4
DD	$LN23@ReloadDocu
DB	100					
DB	101					
DB	99					
DB	114					
DB	121					
DB	112					
DB	116					
DB	105					
DB	111					
DB	110					
DB	75					
DB	101					
DB	121					
DB	0
DB	97					
DB	114					
DB	103					
DB	115					
DB	0
DB	112					
DB	119					
DB	100					
DB	85					
DB	73					
DB	0
DB	112					
DB	97					
DB	116					
DB	104					
DB	0
DB	97					
DB	114					
DB	103					
DB	115					
DB	0
ENDP
?FrameOnKeydown@@YA_NPAVWindowInfo@@IJ_N@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 292				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-292]
mov	ecx, 73					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 2
je	SHORT $LN3@FrameOnKey
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 3
jne	SHORT $LN2@FrameOnKey
mov	al, 1
jmp	$LN1@FrameOnKey
call	?IsCtrlPressed@@YA_NXZ			
mov	BYTE PTR _isCtrl$[ebp], al
call	?IsShiftPressed@@YA_NXZ			
mov	BYTE PTR _isShift$[ebp], al
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+260]
test	ecx, ecx
je	SHORT $LN4@FrameOnKey
movzx	eax, BYTE PTR _isCtrl$[ebp]
test	eax, eax
je	SHORT $LN4@FrameOnKey
cmp	DWORD PTR _key$[ebp], 9
jne	SHORT $LN4@FrameOnKey
movzx	eax, BYTE PTR _isShift$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?TabsOnCtrlTab@@YAXPAVWindowInfo@@_N@Z	
add	esp, 8
mov	al, 1
jmp	$LN1@FrameOnKey
cmp	DWORD PTR _key$[ebp], 37		
je	SHORT $LN6@FrameOnKey
cmp	DWORD PTR _key$[ebp], 39		
jne	SHORT $LN5@FrameOnKey
movzx	eax, BYTE PTR _isShift$[ebp]
test	eax, eax
je	SHORT $LN5@FrameOnKey
movzx	eax, BYTE PTR _isCtrl$[ebp]
test	eax, eax
je	SHORT $LN5@FrameOnKey
mov	ecx, DWORD PTR _win$[ebp]
call	?IsAboutWindow@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN5@FrameOnKey
movzx	eax, BYTE PTR _inTextfield$[ebp]
test	eax, eax
jne	SHORT $LN5@FrameOnKey
cmp	DWORD PTR _key$[ebp], 39		
jne	SHORT $LN57@FrameOnKey
mov	BYTE PTR tv91[ebp], 1
jmp	SHORT $LN58@FrameOnKey
mov	BYTE PTR tv91[ebp], 0
movzx	eax, BYTE PTR tv91[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?BrowseFolder@@YAXAAVWindowInfo@@_N@Z	
add	esp, 8
mov	al, 1
jmp	$LN1@FrameOnKey
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
jne	SHORT $LN7@FrameOnKey
xor	al, al
jmp	$LN1@FrameOnKey
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	DWORD PTR _dm$[ebp], eax
mov	ecx, DWORD PTR _win$[ebp]
call	?AsChm@WindowInfo@@QBEPAVChmModel@@XZ	
test	eax, eax
je	SHORT $LN59@FrameOnKey
mov	BYTE PTR tv135[ebp], 1
jmp	SHORT $LN60@FrameOnKey
mov	BYTE PTR tv135[ebp], 0
mov	al, BYTE PTR tv135[ebp]
mov	BYTE PTR _isChm$[ebp], al
movzx	eax, BYTE PTR _isCtrl$[ebp]
test	eax, eax
je	SHORT $LN61@FrameOnKey
cmp	DWORD PTR _key$[ebp], 38		
jne	SHORT $LN61@FrameOnKey
mov	DWORD PTR tv139[ebp], 1
jmp	SHORT $LN62@FrameOnKey
mov	DWORD PTR tv139[ebp], 0
mov	cl, BYTE PTR tv139[ebp]
mov	BYTE PTR _isPageUp$[ebp], cl
movzx	eax, BYTE PTR _isChm$[ebp]
test	eax, eax
jne	SHORT $LN8@FrameOnKey
cmp	DWORD PTR _key$[ebp], 33		
jne	SHORT $LN63@FrameOnKey
movzx	eax, BYTE PTR _isCtrl$[ebp]
test	eax, eax
jne	SHORT $LN63@FrameOnKey
mov	DWORD PTR tv147[ebp], 1
jmp	SHORT $LN64@FrameOnKey
mov	DWORD PTR tv147[ebp], 0
movzx	ecx, BYTE PTR _isPageUp$[ebp]
or	ecx, DWORD PTR tv147[ebp]
mov	BYTE PTR _isPageUp$[ebp], cl
movzx	eax, BYTE PTR _isPageUp$[ebp]
test	eax, eax
je	$LN9@FrameOnKey
mov	esi, esp
push	1
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	DWORD PTR __imp__GetScrollPos@8
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _currentPos$2[ebp], eax
mov	esi, esp
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+52]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
fstp	DWORD PTR tv474[ebp]
movss	xmm0, DWORD PTR tv474[ebp]
ucomiss	xmm0, DWORD PTR __real@c0400000
lahf
test	ah, 68					
jnp	SHORT $LN10@FrameOnKey
mov	esi, esp
push	0
push	2
push	277					
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
push	1
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	DWORD PTR __imp__GetScrollPos@8
cmp	esi, esp
call	__RTC_CheckEsp
cmp	eax, DWORD PTR _currentPos$2[ebp]
jne	SHORT $LN11@FrameOnKey
mov	esi, esp
push	1
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+108]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	al, 1
jmp	$LN1@FrameOnKey
movzx	eax, BYTE PTR _isCtrl$[ebp]
test	eax, eax
je	SHORT $LN65@FrameOnKey
cmp	DWORD PTR _key$[ebp], 40		
jne	SHORT $LN65@FrameOnKey
mov	DWORD PTR tv187[ebp], 1
jmp	SHORT $LN66@FrameOnKey
mov	DWORD PTR tv187[ebp], 0
mov	cl, BYTE PTR tv187[ebp]
mov	BYTE PTR _isPageDown$[ebp], cl
movzx	eax, BYTE PTR _isChm$[ebp]
test	eax, eax
jne	SHORT $LN12@FrameOnKey
cmp	DWORD PTR _key$[ebp], 34		
jne	SHORT $LN67@FrameOnKey
movzx	eax, BYTE PTR _isCtrl$[ebp]
test	eax, eax
jne	SHORT $LN67@FrameOnKey
mov	DWORD PTR tv195[ebp], 1
jmp	SHORT $LN68@FrameOnKey
mov	DWORD PTR tv195[ebp], 0
movzx	ecx, BYTE PTR _isPageDown$[ebp]
or	ecx, DWORD PTR tv195[ebp]
mov	BYTE PTR _isPageDown$[ebp], cl
movzx	eax, BYTE PTR _isPageDown$[ebp]
test	eax, eax
je	$LN13@FrameOnKey
mov	esi, esp
push	1
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	DWORD PTR __imp__GetScrollPos@8
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _currentPos$1[ebp], eax
mov	esi, esp
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+52]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
fstp	DWORD PTR tv506[ebp]
movss	xmm0, DWORD PTR tv506[ebp]
ucomiss	xmm0, DWORD PTR __real@c0400000
lahf
test	ah, 68					
jnp	SHORT $LN14@FrameOnKey
mov	esi, esp
push	0
push	3
push	277					
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
push	1
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	DWORD PTR __imp__GetScrollPos@8
cmp	esi, esp
call	__RTC_CheckEsp
cmp	eax, DWORD PTR _currentPos$1[ebp]
jne	SHORT $LN15@FrameOnKey
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+104]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
mov	al, 1
jmp	$LN1@FrameOnKey
movzx	eax, BYTE PTR _isChm$[ebp]
test	eax, eax
je	SHORT $LN17@FrameOnKey
mov	eax, DWORD PTR _key$[ebp]
push	eax
call	?ChmForwardKey@@YA_NI@Z			
add	esp, 4
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN17@FrameOnKey
mov	eax, DWORD PTR _lparam$[ebp]
push	eax
mov	ecx, DWORD PTR _key$[ebp]
push	ecx
push	256					
mov	ecx, DWORD PTR _win$[ebp]
call	?AsChm@WindowInfo@@QBEPAVChmModel@@XZ	
mov	ecx, eax
call	?PassUIMsg@ChmModel@@QAEJIIJ@Z		
mov	al, 1
jmp	$LN1@FrameOnKey
cmp	DWORD PTR _key$[ebp], 38		
jne	SHORT $LN18@FrameOnKey
cmp	DWORD PTR _dm$[ebp], 0
je	SHORT $LN20@FrameOnKey
mov	ecx, DWORD PTR _dm$[ebp]
call	?NeedVScroll@DisplayModel@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN20@FrameOnKey
movzx	eax, BYTE PTR _isShift$[ebp]
test	eax, eax
je	SHORT $LN69@FrameOnKey
mov	DWORD PTR tv253[ebp], 1025		
jmp	SHORT $LN70@FrameOnKey
mov	DWORD PTR tv253[ebp], 0
mov	esi, esp
push	0
mov	ecx, DWORD PTR tv253[ebp]
push	ecx
push	277					
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [edx+96]
push	eax
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	SHORT $LN21@FrameOnKey
mov	esi, esp
push	1
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+108]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN55@FrameOnKey
cmp	DWORD PTR _key$[ebp], 40		
jne	SHORT $LN22@FrameOnKey
cmp	DWORD PTR _dm$[ebp], 0
je	SHORT $LN24@FrameOnKey
mov	ecx, DWORD PTR _dm$[ebp]
call	?NeedVScroll@DisplayModel@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN24@FrameOnKey
movzx	eax, BYTE PTR _isShift$[ebp]
test	eax, eax
je	SHORT $LN71@FrameOnKey
mov	DWORD PTR tv275[ebp], 1026		
jmp	SHORT $LN72@FrameOnKey
mov	DWORD PTR tv275[ebp], 1
mov	esi, esp
push	0
mov	ecx, DWORD PTR tv275[ebp]
push	ecx
push	277					
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [edx+96]
push	eax
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	SHORT $LN25@FrameOnKey
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+104]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN55@FrameOnKey
cmp	DWORD PTR _key$[ebp], 33		
jne	SHORT $LN26@FrameOnKey
movzx	eax, BYTE PTR _isCtrl$[ebp]
test	eax, eax
je	SHORT $LN26@FrameOnKey
mov	esi, esp
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+108]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN55@FrameOnKey
cmp	DWORD PTR _key$[ebp], 34		
jne	SHORT $LN28@FrameOnKey
movzx	eax, BYTE PTR _isCtrl$[ebp]
test	eax, eax
je	SHORT $LN28@FrameOnKey
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+104]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN55@FrameOnKey
cmp	DWORD PTR _key$[ebp], 36		
jne	SHORT $LN30@FrameOnKey
movzx	eax, BYTE PTR _isCtrl$[ebp]
test	eax, eax
je	SHORT $LN30@FrameOnKey
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+112]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN55@FrameOnKey
cmp	DWORD PTR _key$[ebp], 35		
jne	SHORT $LN32@FrameOnKey
movzx	eax, BYTE PTR _isCtrl$[ebp]
test	eax, eax
je	SHORT $LN32@FrameOnKey
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+116]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
movzx	eax, al
test	eax, eax
jne	SHORT $LN34@FrameOnKey
mov	esi, esp
push	0
push	7
push	277					
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN55@FrameOnKey
movzx	eax, BYTE PTR _inTextfield$[ebp]
test	eax, eax
je	SHORT $LN35@FrameOnKey
xor	al, al
jmp	$LN1@FrameOnKey
jmp	$LN55@FrameOnKey
cmp	DWORD PTR _key$[ebp], 37		
jne	$LN37@FrameOnKey
cmp	DWORD PTR _dm$[ebp], 0
je	SHORT $LN39@FrameOnKey
mov	ecx, DWORD PTR _dm$[ebp]
call	?NeedHScroll@DisplayModel@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN39@FrameOnKey
movzx	eax, BYTE PTR _isCtrl$[ebp]
test	eax, eax
jne	SHORT $LN39@FrameOnKey
movzx	eax, BYTE PTR _isShift$[ebp]
test	eax, eax
je	SHORT $LN73@FrameOnKey
mov	DWORD PTR tv349[ebp], 2
jmp	SHORT $LN74@FrameOnKey
mov	DWORD PTR tv349[ebp], 0
mov	esi, esp
push	0
mov	ecx, DWORD PTR tv349[ebp]
push	ecx
push	276					
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [edx+96]
push	eax
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	SHORT $LN40@FrameOnKey
mov	esi, esp
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+108]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN55@FrameOnKey
cmp	DWORD PTR _key$[ebp], 39		
jne	$LN41@FrameOnKey
cmp	DWORD PTR _dm$[ebp], 0
je	SHORT $LN43@FrameOnKey
mov	ecx, DWORD PTR _dm$[ebp]
call	?NeedHScroll@DisplayModel@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN43@FrameOnKey
movzx	eax, BYTE PTR _isCtrl$[ebp]
test	eax, eax
jne	SHORT $LN43@FrameOnKey
movzx	eax, BYTE PTR _isShift$[ebp]
test	eax, eax
je	SHORT $LN75@FrameOnKey
mov	DWORD PTR tv373[ebp], 3
jmp	SHORT $LN76@FrameOnKey
mov	DWORD PTR tv373[ebp], 1
mov	esi, esp
push	0
mov	ecx, DWORD PTR tv373[ebp]
push	ecx
push	276					
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [edx+96]
push	eax
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	SHORT $LN44@FrameOnKey
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+104]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN55@FrameOnKey
cmp	DWORD PTR _key$[ebp], 36		
jne	SHORT $LN45@FrameOnKey
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+112]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
jmp	$LN55@FrameOnKey
cmp	DWORD PTR _key$[ebp], 35		
jne	SHORT $LN47@FrameOnKey
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+116]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
movzx	eax, al
test	eax, eax
jne	SHORT $LN49@FrameOnKey
mov	esi, esp
push	0
push	7
push	277					
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+96]
push	ecx
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	SHORT $LN55@FrameOnKey
cmp	DWORD PTR _key$[ebp], 106		
jne	SHORT $LN50@FrameOnKey
cmp	DWORD PTR _dm$[ebp], 0
je	SHORT $LN50@FrameOnKey
push	90					
mov	ecx, DWORD PTR _dm$[ebp]
call	?RotateBy@DisplayModel@@QAEXH@Z		
jmp	SHORT $LN55@FrameOnKey
cmp	DWORD PTR _key$[ebp], 111		
jne	SHORT $LN52@FrameOnKey
cmp	DWORD PTR _dm$[ebp], 0
je	SHORT $LN52@FrameOnKey
push	-90					
mov	ecx, DWORD PTR _dm$[ebp]
call	?RotateBy@DisplayModel@@QAEXH@Z		
mov	BYTE PTR ?gIsDivideKeyDown@@3_NA, 1
jmp	SHORT $LN55@FrameOnKey
cmp	DWORD PTR _key$[ebp], 112		
jne	SHORT $LN54@FrameOnKey
mov	ecx, DWORD PTR _win$[ebp]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
test	eax, eax
je	SHORT $LN54@FrameOnKey
mov	esi, esp
push	0
push	595					
push	273					
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
jmp	SHORT $LN55@FrameOnKey
xor	al, al
jmp	SHORT $LN1@FrameOnKey
mov	al, 1
pop	edi
pop	esi
pop	ebx
add	esp, 292				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?UpdateTabFileDisplayStateForWin@@YAXPAVWindowInfo@@PAVTabInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?RememberDefaultWindowPosition@@YAXAAVWindowInfo@@@Z 
add	esp, 4
cmp	DWORD PTR _tab$[ebp], 0
je	SHORT $LN3@UpdateTabF
mov	eax, DWORD PTR _tab$[ebp]
cmp	DWORD PTR [eax+4], 0
jne	SHORT $LN2@UpdateTabF
jmp	SHORT $LN1@UpdateTabF
push	0
mov	ecx, DWORD PTR _tab$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A 
call	?Find@FileHistory@@QBEPAUFileState@@PB_WPAI@Z 
mov	DWORD PTR _ds$[ebp], eax
cmp	DWORD PTR _ds$[ebp], 0
jne	SHORT $LN4@UpdateTabF
jmp	SHORT $LN1@UpdateTabF
mov	esi, esp
mov	eax, DWORD PTR _ds$[ebp]
push	eax
mov	ecx, DWORD PTR _tab$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _tab$[ebp]
mov	edx, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+4]
mov	eax, DWORD PTR [edx+80]
call	eax
cmp	esi, esp
call	__RTC_CheckEsp
push	0
mov	eax, DWORD PTR _ds$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?UpdateDisplayStateWindowRect@@YAXAAVWindowInfo@@AAUFileState@@_N@Z 
add	esp, 12					
mov	eax, DWORD PTR _ds$[ebp]
push	eax
mov	ecx, DWORD PTR _tab$[ebp]
push	ecx
mov	edx, DWORD PTR _win$[ebp]
push	edx
call	?UpdateSidebarDisplayState@@YAXPAVWindowInfo@@PAVTabInfo@@PAUFileState@@@Z 
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?UpdateDocumentColors@@YAXXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 272				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-272]
mov	ecx, 68					
mov	eax, -858993460				
rep stosd
mov	DWORD PTR _<range>$L0$4[ebp], OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
lea	eax, DWORD PTR _<begin>$L0$3[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L0$4[ebp]
call	?begin@?$Vec@PAVWindowInfo@@@@QAE?AVIter@1@XZ 
lea	eax, DWORD PTR _<end>$L0$2[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L0$4[ebp]
call	?end@?$Vec@PAVWindowInfo@@@@QAE?AVIter@1@XZ 
jmp	SHORT $LN4@UpdateDocu
lea	ecx, DWORD PTR _<begin>$L0$3[ebp]
call	??EIter@?$Vec@PAVWindowInfo@@@@QAEAAV01@XZ 
lea	eax, DWORD PTR _<end>$L0$2[ebp]
push	eax
lea	ecx, DWORD PTR _<begin>$L0$3[ebp]
call	??9Iter@?$Vec@PAVWindowInfo@@@@QBE_NABV01@@Z 
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN3@UpdateDocu
lea	ecx, DWORD PTR _<begin>$L0$3[ebp]
call	??DIter@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@XZ 
mov	eax, DWORD PTR [eax]
mov	DWORD PTR _win$1[ebp], eax
mov	ecx, DWORD PTR _win$1[ebp]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
test	eax, eax
je	SHORT $LN5@UpdateDocu
mov	ecx, DWORD PTR _win$1[ebp]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
mov	ecx, eax
call	?UpdateDocumentColors@EbookController@@QAEXXZ 
mov	eax, DWORD PTR _win$1[ebp]
push	eax
call	?UpdateTocColors@@YAXPAVWindowInfo@@@Z	
add	esp, 4
jmp	SHORT $LN2@UpdateDocu
lea	eax, DWORD PTR _bg$[ebp]
push	eax
lea	ecx, DWORD PTR _text$[ebp]
push	ecx
call	?GetFixedPageUiColors@@YAXAAK0@Z	
add	esp, 8
mov	eax, DWORD PTR _text$[ebp]
cmp	eax, DWORD PTR ?gRenderCache@@3VRenderCache@@A+912
jne	SHORT $LN6@UpdateDocu
mov	eax, DWORD PTR _bg$[ebp]
cmp	eax, DWORD PTR ?gRenderCache@@3VRenderCache@@A+916
jne	SHORT $LN6@UpdateDocu
jmp	SHORT $LN1@UpdateDocu
mov	eax, DWORD PTR _text$[ebp]
mov	DWORD PTR ?gRenderCache@@3VRenderCache@@A+912, eax
mov	eax, DWORD PTR _bg$[ebp]
mov	DWORD PTR ?gRenderCache@@3VRenderCache@@A+916, eax
call	?RerenderEverything@@YAXXZ		
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN13@UpdateDocu
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 272				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	2
DD	4
DD	$LN12@UpdateDocu
DD	-24					
DD	8
DD	$LN8@UpdateDocu
DD	-40					
DD	8
DD	$LN9@UpdateDocu
DD	-64					
DD	4
DD	$LN10@UpdateDocu
DD	-76					
DD	4
DD	$LN11@UpdateDocu
DB	98					
DB	103					
DB	0
DB	116					
DB	101					
DB	120					
DB	116					
DB	0
DB	60					
DB	101					
DB	110					
DB	100					
DB	62					
DB	36					
DB	76					
DB	48					
DB	0
DB	60					
DB	98					
DB	101					
DB	103					
DB	105					
DB	110					
DB	62					
DB	36					
DB	76					
DB	48					
DB	0
ENDP
?SetCurrentLanguageAndRefreshUI@@YAXPBD@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 248				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-248]
mov	ecx, 62					
mov	eax, -858993460				
rep stosd
cmp	DWORD PTR _langCode$[ebp], 0
je	SHORT $LN6@SetCurrent
call	?GetCurrentLangCode@trans@@YAPBDXZ	
push	eax
mov	eax, DWORD PTR _langCode$[ebp]
push	eax
call	?Eq@str@@YA_NPBD0@Z			
add	esp, 8
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN5@SetCurrent
jmp	$LN1@SetCurrent
mov	eax, DWORD PTR _langCode$[ebp]
push	eax
call	?SetCurrentLang@@YAXPBD@Z		
add	esp, 4
mov	DWORD PTR _<range>$L0$4[ebp], OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
lea	eax, DWORD PTR _<begin>$L0$3[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L0$4[ebp]
call	?begin@?$Vec@PAVWindowInfo@@@@QAE?AVIter@1@XZ 
lea	eax, DWORD PTR _<end>$L0$2[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L0$4[ebp]
call	?end@?$Vec@PAVWindowInfo@@@@QAE?AVIter@1@XZ 
jmp	SHORT $LN4@SetCurrent
lea	ecx, DWORD PTR _<begin>$L0$3[ebp]
call	??EIter@?$Vec@PAVWindowInfo@@@@QAEAAV01@XZ 
lea	eax, DWORD PTR _<end>$L0$2[ebp]
push	eax
lea	ecx, DWORD PTR _<begin>$L0$3[ebp]
call	??9Iter@?$Vec@PAVWindowInfo@@@@QBE_NABV01@@Z 
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN3@SetCurrent
lea	ecx, DWORD PTR _<begin>$L0$3[ebp]
call	??DIter@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@XZ 
mov	eax, DWORD PTR [eax]
mov	DWORD PTR _win$1[ebp], eax
mov	eax, DWORD PTR _win$1[ebp]
push	eax
call	?UpdateWindowRtlLayout@@YAXPAVWindowInfo@@@Z 
add	esp, 4
mov	eax, DWORD PTR _win$1[ebp]
push	eax
call	?RebuildMenuBarForWindow@@YAXPAVWindowInfo@@@Z 
add	esp, 4
mov	eax, DWORD PTR _win$1[ebp]
push	eax
call	?UpdateToolbarSidebarText@@YAXPAVWindowInfo@@@Z 
add	esp, 4
mov	ecx, DWORD PTR _win$1[ebp]
call	?IsAboutWindow@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN7@SetCurrent
push	1
mov	ecx, DWORD PTR _win$1[ebp]
call	?RedrawAll@WindowInfo@@QAEX_N@Z		
jmp	SHORT $LN2@SetCurrent
call	?Save@prefs@@YA_NXZ			
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN12@SetCurrent
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 248				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
DD	2
DD	$LN11@SetCurrent
DD	-24					
DD	8
DD	$LN9@SetCurrent
DD	-40					
DD	8
DD	$LN10@SetCurrent
DB	60					
DB	101					
DB	110					
DB	100					
DB	62					
DB	36					
DB	76					
DB	48					
DB	0
DB	60					
DB	98					
DB	101					
DB	103					
DB	105					
DB	110					
DB	62					
DB	36					
DB	76					
DB	48					
DB	0
ENDP
?WindowInfoStillValid@@YA_NPAVWindowInfo@@@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _win$[ebp]
push	eax
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?Contains@?$Vec@PAVWindowInfo@@@@QBE_NPAVWindowInfo@@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?AdvanceFocus@@YAXPAVWindowInfo@@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 296				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-296]
mov	ecx, 74					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+772]
test	ecx, ecx
jne	SHORT $LN11@AdvanceFoc
mov	edx, DWORD PTR _win$[ebp]
cmp	DWORD PTR [edx+776], 0
jne	SHORT $LN11@AdvanceFoc
mov	ecx, DWORD PTR _win$[ebp]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
test	eax, eax
jne	SHORT $LN11@AdvanceFoc
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
movzx	ecx, BYTE PTR [eax+172]
test	ecx, ecx
je	SHORT $LN11@AdvanceFoc
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	edx, al
test	edx, edx
je	SHORT $LN11@AdvanceFoc
mov	DWORD PTR tv79[ebp], 1
jmp	SHORT $LN12@AdvanceFoc
mov	DWORD PTR tv79[ebp], 0
mov	al, BYTE PTR tv79[ebp]
mov	BYTE PTR _hasToolbar$[ebp], al
call	?IsShiftPressed@@YA_NXZ			
movzx	eax, al
test	eax, eax
je	SHORT $LN13@AdvanceFoc
mov	DWORD PTR tv84[ebp], -1
jmp	SHORT $LN14@AdvanceFoc
mov	DWORD PTR tv84[ebp], 1
mov	ecx, DWORD PTR tv84[ebp]
mov	DWORD PTR _direction$[ebp], ecx
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
mov	DWORD PTR _tabOrder$[ebp], ecx
mov	BYTE PTR _tabOrder$[ebp+4], 1
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+124]
mov	DWORD PTR _tabOrder$[ebp+8], ecx
mov	al, BYTE PTR _hasToolbar$[ebp]
mov	BYTE PTR _tabOrder$[ebp+12], al
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+112]
mov	DWORD PTR _tabOrder$[ebp+16], ecx
movzx	eax, BYTE PTR _hasToolbar$[ebp]
test	eax, eax
je	SHORT $LN15@AdvanceFoc
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?NeedsFindUI@@YA_NPAVWindowInfo@@@Z	
add	esp, 4
movzx	edx, al
test	edx, edx
je	SHORT $LN15@AdvanceFoc
mov	DWORD PTR tv94[ebp], 1
jmp	SHORT $LN16@AdvanceFoc
mov	DWORD PTR tv94[ebp], 0
mov	al, BYTE PTR tv94[ebp]
mov	BYTE PTR _tabOrder$[ebp+20], al
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+144]
mov	DWORD PTR _tabOrder$[ebp+24], ecx
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+148]
test	ecx, ecx
je	SHORT $LN17@AdvanceFoc
mov	edx, DWORD PTR _win$[ebp]
movzx	eax, BYTE PTR [edx+149]
test	eax, eax
je	SHORT $LN17@AdvanceFoc
mov	DWORD PTR tv135[ebp], 1
jmp	SHORT $LN18@AdvanceFoc
mov	DWORD PTR tv135[ebp], 0
mov	cl, BYTE PTR tv135[ebp]
mov	BYTE PTR _tabOrder$[ebp+28], cl
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+160]
mov	DWORD PTR _tabOrder$[ebp+32], ecx
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	cl, BYTE PTR [eax+173]
mov	BYTE PTR _tabOrder$[ebp+36], cl
mov	esi, esp
call	DWORD PTR __imp__GetFocus@0
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _current$[ebp], eax
mov	DWORD PTR _ix$[ebp], 0
jmp	SHORT $LN4@AdvanceFoc
mov	eax, DWORD PTR _ix$[ebp]
add	eax, 1
mov	DWORD PTR _ix$[ebp], eax
cmp	DWORD PTR _ix$[ebp], 5
jae	SHORT $LN3@AdvanceFoc
mov	eax, DWORD PTR _ix$[ebp]
mov	ecx, DWORD PTR _tabOrder$[ebp+eax*8]
cmp	ecx, DWORD PTR _current$[ebp]
jne	SHORT $LN8@AdvanceFoc
jmp	SHORT $LN3@AdvanceFoc
jmp	SHORT $LN2@AdvanceFoc
cmp	DWORD PTR _ix$[ebp], 5
jne	SHORT $LN7@AdvanceFoc
mov	eax, DWORD PTR _direction$[ebp]
neg	eax
mov	DWORD PTR _ix$[ebp], eax
mov	eax, DWORD PTR _direction$[ebp]
mov	ecx, DWORD PTR _ix$[ebp]
lea	eax, DWORD PTR [ecx+eax+5]
xor	edx, edx
mov	ecx, 5
div	ecx
mov	DWORD PTR _ix$[ebp], edx
mov	eax, DWORD PTR _ix$[ebp]
movzx	ecx, BYTE PTR _tabOrder$[ebp+eax*8+4]
test	ecx, ecx
je	SHORT $LN7@AdvanceFoc
mov	esi, esp
mov	eax, DWORD PTR _ix$[ebp]
mov	ecx, DWORD PTR _tabOrder$[ebp+eax*8]
push	ecx
call	DWORD PTR __imp__SetFocus@4
cmp	esi, esp
call	__RTC_CheckEsp
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN21@AdvanceFoc
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
add	esp, 296				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	1
DD	$LN20@AdvanceFoc
DD	-72					
DD	40					
DD	$LN19@AdvanceFoc
DB	116					
DB	97					
DB	98					
DB	79					
DB	114					
DB	100					
DB	101					
DB	114					
DB	0
ENDP
?LayoutTreeContainer@@YAXPAULabelWithCloseWnd@@PAUHWND__@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 244				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-244]
mov	ecx, 61					
mov	eax, -858993460				
rep stosd
mov	esi, esp
mov	eax, DWORD PTR _hwndTree$[ebp]
push	eax
call	DWORD PTR __imp__GetParent@4
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _hwndContainer$[ebp], eax
mov	eax, DWORD PTR _l$[ebp]
push	eax
lea	ecx, DWORD PTR _labelSize$[ebp]
push	ecx
call	?GetIdealSize@@YA?AV?$SizeT@H@geomutil@@PAULabelWithCloseWnd@@@Z 
add	esp, 8
mov	eax, DWORD PTR _hwndContainer$[ebp]
push	eax
lea	ecx, DWORD PTR _rc$[ebp]
call	??0WindowRect@@QAE@PAUHWND__@@@Z	
mov	esi, esp
push	1
mov	eax, DWORD PTR _labelSize$[ebp+4]
push	eax
mov	ecx, DWORD PTR _rc$[ebp+8]
push	ecx
push	0
push	0
mov	edx, DWORD PTR _l$[ebp]
push	edx
call	?GetHwnd@@YAPAUHWND__@@PAULabelWithCloseWnd@@@Z 
add	esp, 4
push	eax
call	DWORD PTR __imp__MoveWindow@24
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
push	1
mov	eax, DWORD PTR _rc$[ebp+12]
sub	eax, DWORD PTR _labelSize$[ebp+4]
push	eax
mov	ecx, DWORD PTR _rc$[ebp+8]
push	ecx
mov	edx, DWORD PTR _labelSize$[ebp+4]
push	edx
push	0
mov	eax, DWORD PTR _hwndTree$[ebp]
push	eax
call	DWORD PTR __imp__MoveWindow@24
cmp	esi, esp
call	__RTC_CheckEsp
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@LayoutTree
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 244				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	3
DD	2
DD	$LN5@LayoutTree
DD	-24					
DD	8
DD	$LN3@LayoutTree
DD	-48					
DD	16					
DD	$LN4@LayoutTree
DB	114					
DB	99					
DB	0
DB	108					
DB	97					
DB	98					
DB	101					
DB	108					
DB	83					
DB	105					
DB	122					
DB	101					
DB	0
ENDP
?SetSidebarVisibility@@YAXPAVWindowInfo@@_N1@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 196				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-196]
mov	ecx, 49					
mov	eax, -858993460				
rep stosd
cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	
jne	SHORT $LN15@SetSidebar
push	2
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	eax, al
test	eax, eax
jne	SHORT $LN14@SetSidebar
mov	BYTE PTR _showFavorites$[ebp], 0
mov	ecx, DWORD PTR _win$[ebp]
call	?IsDocLoaded@WindowInfo@@QBE_NXZ	
movzx	eax, al
test	eax, eax
je	SHORT $LN17@SetSidebar
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _win$[ebp]
mov	eax, DWORD PTR [ecx]
mov	esi, esp
mov	ecx, DWORD PTR [edx]
mov	edx, DWORD PTR [eax+64]
call	edx
cmp	esi, esp
call	__RTC_CheckEsp
movzx	eax, al
test	eax, eax
jne	SHORT $LN16@SetSidebar
mov	BYTE PTR _tocVisible$[ebp], 0
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 2
je	SHORT $LN19@SetSidebar
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 3
jne	SHORT $LN18@SetSidebar
mov	BYTE PTR _tocVisible$[ebp], 0
mov	BYTE PTR _showFavorites$[ebp], 0
movzx	eax, BYTE PTR _tocVisible$[ebp]
test	eax, eax
je	SHORT $LN20@SetSidebar
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?LoadTocTree@@YAXPAVWindowInfo@@@Z	
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@SetSidebar
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+148]
test	ecx, ecx
jne	SHORT $LN31@SetSidebar
mov	BYTE PTR tv94[ebp], 1
jmp	SHORT $LN32@SetSidebar
mov	BYTE PTR tv94[ebp], 0
movzx	edx, BYTE PTR tv94[ebp]
push	edx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@SetSidebar
movzx	eax, BYTE PTR _showFavorites$[ebp]
test	eax, eax
je	SHORT $LN21@SetSidebar
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?PopulateFavTreeIfNeeded@@YAXPAVWindowInfo@@@Z 
add	esp, 4
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+88], 0
jne	SHORT $LN22@SetSidebar
xor	eax, eax
jne	SHORT $LN11@SetSidebar
movzx	eax, BYTE PTR _tocVisible$[ebp]
push	eax
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN11@SetSidebar
jmp	SHORT $LN23@SetSidebar
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
jne	SHORT $LN24@SetSidebar
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	dl, BYTE PTR _tocVisible$[ebp]
mov	BYTE PTR [ecx+12], dl
jmp	SHORT $LN23@SetSidebar
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 1
jne	SHORT $LN23@SetSidebar
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	dl, BYTE PTR _tocVisible$[ebp]
mov	BYTE PTR [ecx+13], dl
mov	eax, DWORD PTR _win$[ebp]
mov	cl, BYTE PTR _tocVisible$[ebp]
mov	BYTE PTR [eax+149], cl
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	cl, BYTE PTR _showFavorites$[ebp]
mov	BYTE PTR [eax+173], cl
movzx	eax, BYTE PTR _tocVisible$[ebp]
test	eax, eax
jne	SHORT $LN29@SetSidebar
mov	esi, esp
call	DWORD PTR __imp__GetFocus@0
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, DWORD PTR _win$[ebp]
cmp	eax, DWORD PTR [ecx+144]
je	SHORT $LN28@SetSidebar
movzx	eax, BYTE PTR _showFavorites$[ebp]
test	eax, eax
jne	SHORT $LN27@SetSidebar
mov	esi, esp
call	DWORD PTR __imp__GetFocus@0
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, DWORD PTR _win$[ebp]
cmp	eax, DWORD PTR [ecx+160]
jne	SHORT $LN27@SetSidebar
mov	esi, esp
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__SetFocus@4
cmp	esi, esp
call	__RTC_CheckEsp
movzx	eax, BYTE PTR _tocVisible$[ebp]
test	eax, eax
jne	SHORT $LN33@SetSidebar
movzx	ecx, BYTE PTR _showFavorites$[ebp]
test	ecx, ecx
jne	SHORT $LN33@SetSidebar
mov	BYTE PTR tv163[ebp], 0
jmp	SHORT $LN34@SetSidebar
mov	BYTE PTR tv163[ebp], 1
movzx	edx, BYTE PTR tv163[ebp]
push	edx
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+248]
push	ecx
call	?GetHwnd@@YAPAUHWND__@@PAUSplitterWnd@@@Z 
add	esp, 4
push	eax
call	?SetVisibility@win@@YAXPAUHWND__@@_N@Z	
add	esp, 8
movzx	eax, BYTE PTR _tocVisible$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+136]
push	edx
call	?SetVisibility@win@@YAXPAUHWND__@@_N@Z	
add	esp, 8
mov	ecx, DWORD PTR _win$[ebp]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
test	eax, eax
jne	SHORT $LN35@SetSidebar
mov	BYTE PTR tv175[ebp], 1
jmp	SHORT $LN36@SetSidebar
mov	BYTE PTR tv175[ebp], 0
movzx	eax, BYTE PTR tv175[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+248]
push	edx
call	?SetSplitterLive@@YAXPAUSplitterWnd@@_N@Z 
add	esp, 8
movzx	eax, BYTE PTR _tocVisible$[ebp]
test	eax, eax
je	SHORT $LN37@SetSidebar
movzx	ecx, BYTE PTR _showFavorites$[ebp]
test	ecx, ecx
je	SHORT $LN37@SetSidebar
mov	BYTE PTR tv183[ebp], 1
jmp	SHORT $LN38@SetSidebar
mov	BYTE PTR tv183[ebp], 0
movzx	edx, BYTE PTR tv183[ebp]
push	edx
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+252]
push	ecx
call	?GetHwnd@@YAPAUHWND__@@PAUSplitterWnd@@@Z 
add	esp, 4
push	eax
call	?SetVisibility@win@@YAXPAUHWND__@@_N@Z	
add	esp, 8
movzx	eax, BYTE PTR _showFavorites$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+152]
push	edx
call	?SetVisibility@win@@YAXPAUHWND__@@_N@Z	
add	esp, 8
mov	ecx, DWORD PTR _win$[ebp]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
test	eax, eax
jne	SHORT $LN39@SetSidebar
mov	BYTE PTR tv195[ebp], 1
jmp	SHORT $LN40@SetSidebar
mov	BYTE PTR tv195[ebp], 0
movzx	eax, BYTE PTR tv195[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
mov	edx, DWORD PTR [ecx+252]
push	edx
call	?SetSplitterLive@@YAXPAUSplitterWnd@@_N@Z 
add	esp, 8
push	-1
push	0
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?RelayoutFrame@@YAXPAVWindowInfo@@_NH@Z	
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 196				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?CloseWindow@@YAXPAVWindowInfo@@_N1@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 276				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-276]
mov	ecx, 69					
mov	eax, -858993460				
rep stosd
xor	eax, eax
jne	SHORT $LN5@CloseWindo
cmp	DWORD PTR _win$[ebp], 0
jne	SHORT $LN47@CloseWindo
mov	BYTE PTR tv66[ebp], 1
jmp	SHORT $LN48@CloseWindo
mov	BYTE PTR tv66[ebp], 0
movzx	eax, BYTE PTR tv66[ebp]
push	eax
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@CloseWindo
cmp	DWORD PTR _win$[ebp], 0
jne	SHORT $LN11@CloseWindo
jmp	$LN1@CloseWindo
xor	eax, eax
jne	SHORT $LN11@CloseWindo
movzx	eax, BYTE PTR _forceClose$[ebp]
test	eax, eax
je	SHORT $LN49@CloseWindo
movzx	ecx, BYTE PTR _quitIfLast$[ebp]
test	ecx, ecx
jne	SHORT $LN49@CloseWindo
mov	BYTE PTR tv75[ebp], 1
jmp	SHORT $LN50@CloseWindo
mov	BYTE PTR tv75[ebp], 0
movzx	edx, BYTE PTR tv75[ebp]
push	edx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN11@CloseWindo
movzx	eax, BYTE PTR _forceClose$[ebp]
test	eax, eax
je	SHORT $LN30@CloseWindo
mov	BYTE PTR _quitIfLast$[ebp], 1
cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	
je	SHORT $LN31@CloseWindo
push	0
mov	eax, DWORD PTR _win$[ebp]
push	eax
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?Find@?$Vec@PAVWindowInfo@@@@QBEHPAVWindowInfo@@I@Z 
test	eax, eax
jne	SHORT $LN31@CloseWindo
movzx	eax, BYTE PTR _forceClose$[ebp]
test	eax, eax
jne	SHORT $LN31@CloseWindo
jmp	$LN1@CloseWindo
push	1
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?AbortFinding@@YAXPAVWindowInfo@@_N@Z	
add	esp, 8
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?AbortPrinting@@YAXPAVWindowInfo@@@Z	
add	esp, 4
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
test	eax, eax
je	SHORT $LN32@CloseWindo
mov	ecx, DWORD PTR _win$[ebp]
call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ 
mov	BYTE PTR [eax+36], 1
jmp	SHORT $LN33@CloseWindo
mov	ecx, DWORD PTR _win$[ebp]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
test	eax, eax
je	SHORT $LN33@CloseWindo
push	0
mov	ecx, DWORD PTR _win$[ebp]
call	?AsEbook@WindowInfo@@QBEPAVEbookController@@XZ 
mov	ecx, eax
call	?EnableMessageHandling@EbookController@@QAEX_N@Z 
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+776], 0
je	SHORT $LN35@CloseWindo
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?ExitFullScreen@@YAXPAVWindowInfo@@@Z	
add	esp, 4
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?Count@?$Vec@PAVWindowInfo@@@@QBEIXZ	
cmp	eax, 1
jne	SHORT $LN51@CloseWindo
mov	DWORD PTR tv142[ebp], 1
jmp	SHORT $LN52@CloseWindo
mov	DWORD PTR tv142[ebp], 0
mov	al, BYTE PTR tv142[ebp]
mov	BYTE PTR _lastWindow$[ebp], al
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?RememberDefaultWindowPosition@@YAXAAVWindowInfo@@@Z 
add	esp, 4
movzx	eax, BYTE PTR _lastWindow$[ebp]
test	eax, eax
je	SHORT $LN37@CloseWindo
movzx	eax, BYTE PTR _quitIfLast$[ebp]
test	eax, eax
je	SHORT $LN36@CloseWindo
mov	esi, esp
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__ShowWindow@8
cmp	esi, esp
call	__RTC_CheckEsp
movzx	eax, BYTE PTR _lastWindow$[ebp]
test	eax, eax
je	SHORT $LN38@CloseWindo
movzx	eax, BYTE PTR _quitIfLast$[ebp]
test	eax, eax
je	SHORT $LN40@CloseWindo
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	ecx, DWORD PTR [eax+248]
call	?Count@?$Vec@PAUSessionData@@@@QBEIXZ	
test	eax, eax
jne	SHORT $LN40@CloseWindo
call	?RememberSessionState@@YAXXZ		
call	?Save@prefs@@YA_NXZ			
jmp	SHORT $LN39@CloseWindo
mov	eax, DWORD PTR _win$[ebp]
add	eax, 4
mov	DWORD PTR _<range>$L0$5[ebp], eax
lea	eax, DWORD PTR _<begin>$L0$4[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L0$5[ebp]
call	?begin@?$Vec@PAVTabInfo@@@@QAE?AVIter@1@XZ 
lea	eax, DWORD PTR _<end>$L0$3[ebp]
push	eax
mov	ecx, DWORD PTR _<range>$L0$5[ebp]
call	?end@?$Vec@PAVTabInfo@@@@QAE?AVIter@1@XZ 
jmp	SHORT $LN16@CloseWindo
lea	ecx, DWORD PTR _<begin>$L0$4[ebp]
call	??EIter@?$Vec@PAVTabInfo@@@@QAEAAV01@XZ	
lea	eax, DWORD PTR _<end>$L0$3[ebp]
push	eax
lea	ecx, DWORD PTR _<begin>$L0$4[ebp]
call	??9Iter@?$Vec@PAVTabInfo@@@@QBE_NABV01@@Z 
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN39@CloseWindo
lea	ecx, DWORD PTR _<begin>$L0$4[ebp]
call	??DIter@?$Vec@PAVTabInfo@@@@QBEAAPAVTabInfo@@XZ 
mov	eax, DWORD PTR [eax]
mov	DWORD PTR _tab$2[ebp], eax
mov	eax, DWORD PTR _tab$2[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?UpdateTabFileDisplayStateForWin@@YAXPAVWindowInfo@@PAVTabInfo@@@Z 
add	esp, 8
jmp	SHORT $LN14@CloseWindo
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?TabsOnCloseWindow@@YAXPAVWindowInfo@@@Z 
add	esp, 4
movzx	eax, BYTE PTR _forceClose$[ebp]
test	eax, eax
je	SHORT $LN41@CloseWindo
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?DeleteWindowInfo@@YAXPAVWindowInfo@@@Z	
add	esp, 4
jmp	$LN42@CloseWindo
movzx	eax, BYTE PTR _lastWindow$[ebp]
test	eax, eax
je	SHORT $LN43@CloseWindo
movzx	eax, BYTE PTR _quitIfLast$[ebp]
test	eax, eax
jne	SHORT $LN43@CloseWindo
push	0
push	0
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?CloseDocumentInTab@@YAXPAVWindowInfo@@_N1@Z 
add	esp, 12					
mov	esi, esp
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__SetFocus@4
cmp	esi, esp
call	__RTC_CheckEsp
xor	eax, eax
jne	SHORT $LN20@CloseWindo
mov	eax, DWORD PTR _win$[ebp]
push	eax
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?Contains@?$Vec@PAVWindowInfo@@@@QBE_NPAVWindowInfo@@@Z 
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN53@CloseWindo
mov	BYTE PTR tv194[ebp], 1
jmp	SHORT $LN54@CloseWindo
mov	BYTE PTR tv194[ebp], 0
movzx	edx, BYTE PTR tv194[ebp]
push	edx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN20@CloseWindo
jmp	SHORT $LN42@CloseWindo
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
mov	DWORD PTR _hwndToDestroy$1[ebp], ecx
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?DeleteWindowInfo@@YAXPAVWindowInfo@@@Z	
add	esp, 4
mov	esi, esp
mov	eax, DWORD PTR _hwndToDestroy$1[ebp]
push	eax
call	DWORD PTR __imp__DestroyWindow@4
cmp	esi, esp
call	__RTC_CheckEsp
movzx	eax, BYTE PTR _lastWindow$[ebp]
test	eax, eax
je	SHORT $LN1@CloseWindo
movzx	eax, BYTE PTR _quitIfLast$[ebp]
test	eax, eax
je	SHORT $LN1@CloseWindo
xor	eax, eax
jne	SHORT $LN26@CloseWindo
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?Count@?$Vec@PAVWindowInfo@@@@QBEIXZ	
test	eax, eax
je	SHORT $LN55@CloseWindo
mov	BYTE PTR tv208[ebp], 1
jmp	SHORT $LN56@CloseWindo
mov	BYTE PTR tv208[ebp], 0
movzx	eax, BYTE PTR tv208[ebp]
push	eax
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN26@CloseWindo
mov	esi, esp
push	0
call	DWORD PTR __imp__PostQuitMessage@4
cmp	esi, esp
call	__RTC_CheckEsp
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN60@CloseWindo
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 276				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	2
DD	$LN59@CloseWindo
DD	-36					
DD	8
DD	$LN57@CloseWindo
DD	-52					
DD	8
DD	$LN58@CloseWindo
DB	60					
DB	101					
DB	110					
DB	100					
DB	62					
DB	36					
DB	76					
DB	48					
DB	0
DB	60					
DB	98					
DB	101					
DB	103					
DB	105					
DB	110					
DB	62					
DB	36					
DB	76					
DB	48					
DB	0
ENDP
?MayCloseWindow@@YA_NPAVWindowInfo@@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
xor	eax, eax
jne	SHORT $LN5@MayCloseWi
cmp	DWORD PTR _win$[ebp], 0
jne	SHORT $LN13@MayCloseWi
mov	BYTE PTR tv66[ebp], 1
jmp	SHORT $LN14@MayCloseWi
mov	BYTE PTR tv66[ebp], 0
movzx	eax, BYTE PTR tv66[ebp]
push	eax
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@MayCloseWi
cmp	DWORD PTR _win$[ebp], 0
jne	SHORT $LN8@MayCloseWi
xor	al, al
jmp	$LN1@MayCloseWi
cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	
je	SHORT $LN9@MayCloseWi
push	0
mov	eax, DWORD PTR _win$[ebp]
push	eax
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?Find@?$Vec@PAVWindowInfo@@@@QBEHPAVWindowInfo@@I@Z 
test	eax, eax
jne	SHORT $LN9@MayCloseWi
xor	al, al
jmp	$LN1@MayCloseWi
mov	eax, DWORD PTR _win$[ebp]
cmp	DWORD PTR [eax+836], 0
je	SHORT $LN10@MayCloseWi
mov	eax, DWORD PTR _win$[ebp]
movzx	ecx, BYTE PTR [eax+840]
test	ecx, ecx
jne	SHORT $LN10@MayCloseWi
mov	esi, esp
push	0
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+836]
push	ecx
call	DWORD PTR __imp__WaitForSingleObject@8
cmp	esi, esp
call	__RTC_CheckEsp
cmp	eax, 258				
jne	SHORT $LN10@MayCloseWi
call	?MbRtlReadingMaybe@@YAIXZ		
or	eax, 52					
mov	esi, esp
push	eax
push	OFFSET ??_C@_0BG@JPHJNOJC@Printing?5in?5progress?4?$AA@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
push	OFFSET ??_C@_0CP@BHHCOLLO@Printing?5is?5still?5in?5progress?4?5A@
call	?GetTranslation@trans@@YAPB_WPBD@Z	
add	esp, 4
push	eax
mov	eax, DWORD PTR _win$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	DWORD PTR __imp__MessageBoxW@16
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _res$1[ebp], eax
cmp	DWORD PTR _res$1[ebp], 7
jne	SHORT $LN10@MayCloseWi
xor	al, al
jmp	SHORT $LN1@MayCloseWi
mov	al, 1
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?CloseTab@@YAXPAVWindowInfo@@_N@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
xor	eax, eax
jne	SHORT $LN5@CloseTab
cmp	DWORD PTR _win$[ebp], 0
jne	SHORT $LN20@CloseTab
mov	BYTE PTR tv66[ebp], 1
jmp	SHORT $LN21@CloseTab
mov	BYTE PTR tv66[ebp], 0
movzx	eax, BYTE PTR tv66[ebp]
push	eax
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@CloseTab
cmp	DWORD PTR _win$[ebp], 0
jne	SHORT $LN14@CloseTab
jmp	$LN1@CloseTab
mov	ecx, DWORD PTR _win$[ebp]
add	ecx, 4
call	?Count@?$Vec@PAVTabInfo@@@@QBEIXZ	
mov	DWORD PTR _tabCount$[ebp], eax
cmp	DWORD PTR _tabCount$[ebp], 1
je	SHORT $LN17@CloseTab
cmp	DWORD PTR _tabCount$[ebp], 0
jne	SHORT $LN11@CloseTab
movzx	eax, BYTE PTR _quitIfLast$[ebp]
test	eax, eax
je	SHORT $LN11@CloseTab
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?MayCloseWindow@@YA_NPAVWindowInfo@@@Z	
add	esp, 4
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN18@CloseTab
push	0
movzx	eax, BYTE PTR _quitIfLast$[ebp]
push	eax
mov	ecx, DWORD PTR _win$[ebp]
push	ecx
call	?CloseWindow@@YAXPAVWindowInfo@@_N1@Z	
add	esp, 12					
jmp	SHORT $LN1@CloseTab
xor	eax, eax
jne	SHORT $LN11@CloseTab
cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	
je	SHORT $LN22@CloseTab
push	0
mov	eax, DWORD PTR _win$[ebp]
push	eax
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?Find@?$Vec@PAVWindowInfo@@@@QBEHPAVWindowInfo@@I@Z 
test	eax, eax
jne	SHORT $LN22@CloseTab
mov	BYTE PTR tv91[ebp], 1
jmp	SHORT $LN23@CloseTab
mov	BYTE PTR tv91[ebp], 0
movzx	ecx, BYTE PTR tv91[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN11@CloseTab
push	1
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?AbortFinding@@YAXPAVWindowInfo@@_N@Z	
add	esp, 8
mov	eax, DWORD PTR _win$[ebp]
push	eax
call	?TabsOnCloseDoc@@YAXPAVWindowInfo@@@Z	
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?AssociateExeWithPdfExtension@@YAXXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
push	8
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	eax, al
test	eax, eax
jne	SHORT $LN2@AssociateE
jmp	SHORT $LN1@AssociateE
push	-2147483647				
call	?DoAssociateExeWithPdfExtension@@YAXPAUHKEY__@@@Z 
add	esp, 4
push	-2147483646				
call	?DoAssociateExeWithPdfExtension@@YAXPAUHKEY__@@@Z 
add	esp, 4
mov	esi, esp
push	0
push	0
push	12288					
push	134217728				
call	DWORD PTR __imp__SHChangeNotify@16
cmp	esi, esp
call	__RTC_CheckEsp
push	OFFSET ??_C@_19GMJJNAOJ@?$AA?4?$AAp?$AAd?$AAf?$AA?$AA@
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
add	eax, 176				
push	eax
call	?ReplacePtr@str@@YAXPAPA_WPB_W@Z	
add	esp, 8
mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A 
mov	BYTE PTR [eax+180], 0
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?OpenFileExternally@@YA_NPB_W@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 240				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-240]
mov	ecx, 60					
mov	eax, -858993460				
rep stosd
push	2
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	eax, al
test	eax, eax
je	SHORT $LN3@OpenFileEx
cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	
je	SHORT $LN2@OpenFileEx
xor	al, al
jmp	$LN1@OpenFileEx
mov	eax, DWORD PTR _path$[ebp]
push	eax
call	?GetExt@path@@YAPB_WPB_W@Z		
add	esp, 4
mov	DWORD PTR _ext$[ebp], eax
push	OFFSET ??_C@_1BM@DKHLGIOM@?$AAP?$AAe?$AAr?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AAT?$AAy?$AAp?$AAe?$AA?$AA@
mov	eax, DWORD PTR _ext$[ebp]
push	eax
push	-2147483648				
call	?ReadRegStr@@YAPA_WPAUHKEY__@@PB_W1@Z	
add	esp, 12					
push	eax
lea	ecx, DWORD PTR _perceivedType$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
push	OFFSET ??_C@_19BHBAHPON@?$AA?4?$AAh?$AAt?$AAm?$AA?$AA@
mov	eax, DWORD PTR _path$[ebp]
push	eax
call	?EndsWithI@str@@YA_NPB_W0@Z		
add	esp, 8
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN5@OpenFileEx
push	OFFSET ??_C@_1M@FKJKLOKH@?$AA?4?$AAh?$AAt?$AAm?$AAl?$AA?$AA@
mov	eax, DWORD PTR _path$[ebp]
push	eax
call	?EndsWithI@str@@YA_NPB_W0@Z		
add	esp, 8
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN5@OpenFileEx
push	OFFSET ??_C@_1O@CFENNDLL@?$AA?4?$AAx?$AAh?$AAt?$AAm?$AAl?$AA?$AA@
mov	eax, DWORD PTR _path$[ebp]
push	eax
call	?EndsWithI@str@@YA_NPB_W0@Z		
add	esp, 8
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN4@OpenFileEx
push	OFFSET ??_C@_1BA@OMNPBHL@?$AAw?$AAe?$AAb?$AAp?$AAa?$AAg?$AAe?$AA?$AA@
call	?Dup@str@@YAPA_WPB_W@Z			
add	esp, 4
push	eax
lea	ecx, DWORD PTR _perceivedType$[ebp]
call	?Set@?$ScopedMem@_W@@QAEXPA_W@Z		
lea	ecx, DWORD PTR _perceivedType$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?ToLower@str@@YAXPA_W@Z			
add	esp, 4
push	OFFSET ??_C@_13BBDEGPLJ@?$AA?$CK?$AA?$AA@
mov	ecx, OFFSET ?gAllowedFileTypes@@3VWStrVec@@A
call	?Contains@WStrVec@@QBE_NPB_W@Z		
movzx	eax, al
test	eax, eax
je	SHORT $LN6@OpenFileEx
jmp	SHORT $LN7@OpenFileEx
lea	ecx, DWORD PTR _perceivedType$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
test	eax, eax
je	SHORT $LN9@OpenFileEx
lea	ecx, DWORD PTR _perceivedType$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	ecx, OFFSET ?gAllowedFileTypes@@3VWStrVec@@A
call	?Contains@WStrVec@@QBE_NPB_W@Z		
movzx	eax, al
test	eax, eax
jne	SHORT $LN7@OpenFileEx
mov	BYTE PTR $T2[ebp], 0
lea	ecx, DWORD PTR _perceivedType$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
mov	al, BYTE PTR $T2[ebp]
jmp	SHORT $LN1@OpenFileEx
push	0
push	0
push	0
mov	eax, DWORD PTR _path$[ebp]
push	eax
call	?LaunchFile@@YA_NPB_W00_N@Z		
add	esp, 16					
mov	BYTE PTR $T1[ebp], al
lea	ecx, DWORD PTR _perceivedType$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
mov	al, BYTE PTR $T1[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN13@OpenFileEx
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 240				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
DD	1
DD	$LN12@OpenFileEx
DD	-20					
DD	4
DD	$LN11@OpenFileEx
DB	112					
DB	101					
DB	114					
DB	99					
DB	101					
DB	105					
DB	118					
DB	101					
DB	100					
DB	84					
DB	121					
DB	112					
DB	101					
DB	0
ENDP
?LaunchBrowser@@YA_NPB_W@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 324				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-324]
mov	ecx, 81					
mov	eax, -858993460				
rep stosd
cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	
je	$LN8@LaunchBrow
xor	eax, eax
jne	SHORT $LN5@LaunchBrow
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?Count@?$Vec@PAVWindowInfo@@@@QBEIXZ	
test	eax, eax
jne	SHORT $LN16@LaunchBrow
mov	BYTE PTR tv69[ebp], 1
jmp	SHORT $LN17@LaunchBrow
mov	BYTE PTR tv69[ebp], 0
movzx	eax, BYTE PTR tv69[ebp]
push	eax
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@LaunchBrow
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?Count@?$Vec@PAVWindowInfo@@@@QBEIXZ	
test	eax, eax
jne	SHORT $LN9@LaunchBrow
xor	al, al
jmp	$LN1@LaunchBrow
push	0
mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A 
call	?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z 
mov	eax, DWORD PTR [eax]
mov	ecx, DWORD PTR [eax+92]
mov	DWORD PTR _plugin$9[ebp], ecx
mov	esi, esp
push	1
mov	eax, DWORD PTR _plugin$9[ebp]
push	eax
call	DWORD PTR __imp__GetAncestor@8
cmp	esi, esp
call	__RTC_CheckEsp
mov	DWORD PTR _parent$8[ebp], eax
mov	eax, DWORD PTR _url$[ebp]
push	eax
call	?ToUtf8@conv@str@@YAPADPB_W@Z		
add	esp, 4
push	eax
lea	ecx, DWORD PTR _urlUtf8$7[ebp]
call	??0?$ScopedMem@D@@QAE@PAD@Z		
cmp	DWORD PTR _parent$8[ebp], 0
je	SHORT $LN11@LaunchBrow
lea	ecx, DWORD PTR _urlUtf8$7[ebp]
call	??B?$ScopedMem@D@@QBEPADXZ		
test	eax, eax
je	SHORT $LN11@LaunchBrow
lea	ecx, DWORD PTR _urlUtf8$7[ebp]
call	??B?$ScopedMem@D@@QBEPADXZ		
push	eax
call	?Len@str@@YAIPBD@Z			
add	esp, 4
cmp	eax, 4096				
jbe	SHORT $LN10@LaunchBrow
mov	BYTE PTR $T5[ebp], 0
lea	ecx, DWORD PTR _urlUtf8$7[ebp]
call	??1?$ScopedMem@D@@QAE@XZ		
mov	al, BYTE PTR $T5[ebp]
jmp	$LN1@LaunchBrow
mov	DWORD PTR _cds$6[ebp], 5001813		
lea	ecx, DWORD PTR _urlUtf8$7[ebp]
call	??B?$ScopedMem@D@@QBEPADXZ		
push	eax
call	?Len@str@@YAIPBD@Z			
add	esp, 4
add	eax, 1
mov	DWORD PTR _cds$6[ebp+4], eax
lea	ecx, DWORD PTR _urlUtf8$7[ebp]
call	?Get@?$ScopedMem@D@@QBEPADXZ		
mov	DWORD PTR _cds$6[ebp+8], eax
mov	esi, esp
lea	eax, DWORD PTR _cds$6[ebp]
push	eax
mov	ecx, DWORD PTR _plugin$9[ebp]
push	ecx
push	74					
mov	edx, DWORD PTR _parent$8[ebp]
push	edx
call	DWORD PTR __imp__SendMessageW@16
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	SHORT $LN18@LaunchBrow
mov	BYTE PTR tv142[ebp], 1
jmp	SHORT $LN19@LaunchBrow
mov	BYTE PTR tv142[ebp], 0
mov	al, BYTE PTR tv142[ebp]
mov	BYTE PTR $T4[ebp], al
lea	ecx, DWORD PTR _urlUtf8$7[ebp]
call	??1?$ScopedMem@D@@QAE@XZ		
mov	al, BYTE PTR $T4[ebp]
jmp	$LN1@LaunchBrow
push	2
call	?HasPermission@@YA_NH@Z			
add	esp, 4
movzx	eax, al
test	eax, eax
jne	SHORT $LN12@LaunchBrow
xor	al, al
jmp	$LN1@LaunchBrow
lea	ecx, DWORD PTR _protocol$[ebp]
call	??0?$ScopedMem@_W@@QAE@XZ		
lea	eax, DWORD PTR _protocol$[ebp]
push	eax
push	OFFSET ??_C@_17DOMHCODI@?$AA?$CF?$AAS?$AA?3?$AA?$AA@
mov	ecx, DWORD PTR _url$[ebp]
push	ecx
call	?Parse@str@@YAPB_WPB_W0ZZ		
add	esp, 12					
test	eax, eax
jne	SHORT $LN13@LaunchBrow
mov	BYTE PTR $T3[ebp], 0
lea	ecx, DWORD PTR _protocol$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
mov	al, BYTE PTR $T3[ebp]
jmp	SHORT $LN1@LaunchBrow
lea	ecx, DWORD PTR _protocol$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?ToLower@str@@YAXPA_W@Z			
add	esp, 4
lea	ecx, DWORD PTR _protocol$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	ecx, OFFSET ?gAllowedLinkProtocols@@3VWStrVec@@A
call	?Contains@WStrVec@@QBE_NPB_W@Z		
movzx	eax, al
test	eax, eax
jne	SHORT $LN14@LaunchBrow
mov	BYTE PTR $T2[ebp], 0
lea	ecx, DWORD PTR _protocol$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
mov	al, BYTE PTR $T2[ebp]
jmp	SHORT $LN1@LaunchBrow
push	0
push	OFFSET ??_C@_19BDAJEHDN@?$AAo?$AAp?$AAe?$AAn?$AA?$AA@
push	0
mov	eax, DWORD PTR _url$[ebp]
push	eax
call	?LaunchFile@@YA_NPB_W00_N@Z		
add	esp, 16					
mov	BYTE PTR $T1[ebp], al
lea	ecx, DWORD PTR _protocol$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
mov	al, BYTE PTR $T1[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN24@LaunchBrow
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 324				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
DD	3
DD	$LN23@LaunchBrow
DD	-32					
DD	4
DD	$LN20@LaunchBrow
DD	-52					
DD	12					
DD	$LN21@LaunchBrow
DD	-64					
DD	4
DD	$LN22@LaunchBrow
DB	112					
DB	114					
DB	111					
DB	116					
DB	111					
DB	99					
DB	111					
DB	108					
DB	0
DB	99					
DB	100					
DB	115					
DB	0
DB	117					
DB	114					
DB	108					
DB	85					
DB	116					
DB	102					
DB	56					
DB	0
ENDP
?IsUIRightToLeft@@YA_NXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
call	?IsCurrLangRtl@trans@@YA_NXZ		
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?HasPermission@@YA_NH@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 196				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-196]
mov	ecx, 49					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _permission$[ebp]
and	eax, DWORD PTR ?gPolicyRestrictions@@3HA
cmp	eax, DWORD PTR _permission$[ebp]
jne	SHORT $LN3@HasPermiss
mov	DWORD PTR tv66[ebp], 1
jmp	SHORT $LN4@HasPermiss
mov	DWORD PTR tv66[ebp], 0
mov	al, BYTE PTR tv66[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?RestrictPolicies@@YAXH@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR ?gPolicyRestrictions@@3HA
or	eax, 16777216				
mov	ecx, DWORD PTR _revokePermission$[ebp]
not	ecx
and	eax, ecx
mov	DWORD PTR ?gPolicyRestrictions@@3HA, eax
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?InitializePolicies@@YAX_N@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 308				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-308]
mov	ecx, 77					
mov	eax, -858993460				
rep stosd
xor	eax, eax
jne	SHORT $LN5@Initialize
cmp	DWORD PTR ?gPolicyRestrictions@@3HA, 16777216 
je	SHORT $LN25@Initialize
mov	BYTE PTR tv66[ebp], 1
jmp	SHORT $LN26@Initialize
mov	BYTE PTR tv66[ebp], 0
movzx	eax, BYTE PTR tv66[ebp]
push	eax
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@Initialize
xor	eax, eax
jne	SHORT $LN11@Initialize
mov	ecx, OFFSET ?gAllowedLinkProtocols@@3VWStrVec@@A
call	?Count@?$Vec@PA_W@@QBEIXZ		
test	eax, eax
jne	SHORT $LN27@Initialize
mov	ecx, OFFSET ?gAllowedFileTypes@@3VWStrVec@@A
call	?Count@?$Vec@PA_W@@QBEIXZ		
test	eax, eax
jne	SHORT $LN27@Initialize
mov	BYTE PTR tv84[ebp], 0
jmp	SHORT $LN28@Initialize
mov	BYTE PTR tv84[ebp], 1
movzx	eax, BYTE PTR tv84[ebp]
push	eax
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN11@Initialize
movzx	eax, BYTE PTR _restrict$[ebp]
test	eax, eax
je	SHORT $LN17@Initialize
jmp	$LN1@Initialize
push	OFFSET ??_C@_1CO@MNCLKHFC@?$AAs?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAp?$AAd?$AAf?$AAr?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AA?4?$AAi?$AAn?$AAi?$AA?$AA@
call	?GetAppPath@path@@YAPA_WPB_W@Z		
add	esp, 4
push	eax
lea	ecx, DWORD PTR _restrictPath$[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
lea	ecx, DWORD PTR _restrictPath$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?Exists@file@@YA_NPB_W@Z		
add	esp, 4
movzx	eax, al
test	eax, eax
jne	SHORT $LN18@Initialize
mov	DWORD PTR ?gPolicyRestrictions@@3HA, 16777215 
push	0
push	OFFSET ??_C@_13DEFPDAGF@?$AA?0?$AA?$AA@
push	OFFSET ??_C@_1CE@NIKHIMMA@?$AAh?$AAt?$AAt?$AAp?$AA?0?$AAh?$AAt?$AAt?$AAp?$AAs?$AA?0?$AAm?$AAa?$AAi?$AAl?$AAt?$AAo?$AA?$AA@
mov	ecx, OFFSET ?gAllowedLinkProtocols@@3VWStrVec@@A
call	?Split@WStrVec@@QAEIPB_W0_N@Z		
push	0
push	OFFSET ??_C@_13DEFPDAGF@?$AA?0?$AA?$AA@
push	OFFSET ??_C@_1CI@KFNLAHKB@?$AAa?$AAu?$AAd?$AAi?$AAo?$AA?0?$AAv?$AAi?$AAd?$AAe?$AAo?$AA?0?$AAw?$AAe?$AAb?$AAp?$AAa?$AAg?$AAe?$AA?$AA@
mov	ecx, OFFSET ?gAllowedFileTypes@@3VWStrVec@@A
call	?Split@WStrVec@@QAEIPB_W0_N@Z		
lea	ecx, DWORD PTR _restrictPath$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
jmp	$LN1@Initialize
push	0
push	0
lea	ecx, DWORD PTR _restrictPath$[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?ReadAll@file@@YAPADPB_WPAIPAVAllocator@@@Z 
add	esp, 12					
push	eax
lea	ecx, DWORD PTR _restrictData$[ebp]
call	??0?$ScopedMem@D@@QAE@PAD@Z		
lea	ecx, DWORD PTR _restrictData$[ebp]
call	??B?$ScopedMem@D@@QBEPADXZ		
push	eax
lea	ecx, DWORD PTR _sqt$[ebp]
call	??0SquareTree@@QAE@PBD@Z		
cmp	DWORD PTR _sqt$[ebp+4], 0
je	SHORT $LN29@Initialize
push	0
push	OFFSET ??_C@_08NDDAPGNJ@Policies?$AA@
mov	ecx, DWORD PTR _sqt$[ebp+4]
call	?GetChild@SquareTreeNode@@QBEPAV1@PBDPAI@Z 
mov	DWORD PTR tv162[ebp], eax
jmp	SHORT $LN30@Initialize
mov	DWORD PTR tv162[ebp], 0
mov	eax, DWORD PTR tv162[ebp]
mov	DWORD PTR _polsec$[ebp], eax
cmp	DWORD PTR _polsec$[ebp], 0
jne	SHORT $LN19@Initialize
lea	ecx, DWORD PTR _sqt$[ebp]
call	??1SquareTree@@QAE@XZ			
lea	ecx, DWORD PTR _restrictData$[ebp]
call	??1?$ScopedMem@D@@QAE@XZ		
lea	ecx, DWORD PTR _restrictPath$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
jmp	$LN1@Initialize
mov	DWORD PTR _i$5[ebp], 0
jmp	SHORT $LN16@Initialize
mov	eax, DWORD PTR _i$5[ebp]
add	eax, 1
mov	DWORD PTR _i$5[ebp], eax
cmp	DWORD PTR _i$5[ebp], 7
jae	SHORT $LN15@Initialize
push	0
mov	eax, DWORD PTR _i$5[ebp]
mov	ecx, DWORD PTR ?policies@?1??InitializePolicies@@YAX_N@Z@4PAU<unnamed-type-policies>@?BB@??1@YAX0@Z@A[eax*8]
push	ecx
mov	ecx, DWORD PTR _polsec$[ebp]
call	?GetValue@SquareTreeNode@@QBEPBDPBDPAI@Z 
mov	DWORD PTR _value$4[ebp], eax
cmp	DWORD PTR _value$4[ebp], 0
je	SHORT $LN20@Initialize
mov	eax, DWORD PTR _value$4[ebp]
push	eax
call	_atoi
add	esp, 4
test	eax, eax
je	SHORT $LN20@Initialize
mov	eax, DWORD PTR _i$5[ebp]
mov	ecx, DWORD PTR ?gPolicyRestrictions@@3HA
or	ecx, DWORD PTR ?policies@?1??InitializePolicies@@YAX_N@Z@4PAU<unnamed-type-policies>@?BB@??1@YAX0@Z@A[eax*8+4]
mov	DWORD PTR ?gPolicyRestrictions@@3HA, ecx
jmp	SHORT $LN14@Initialize
mov	eax, DWORD PTR ?gPolicyRestrictions@@3HA
and	eax, 2
je	$LN21@Initialize
push	0
push	OFFSET ??_C@_0O@JPPPKDK@LinkProtocols?$AA@
mov	ecx, DWORD PTR _polsec$[ebp]
call	?GetValue@SquareTreeNode@@QBEPBDPBDPAI@Z 
mov	DWORD PTR _value$3[ebp], eax
cmp	DWORD PTR _value$3[ebp], 0
je	SHORT $LN22@Initialize
mov	eax, DWORD PTR _value$3[ebp]
push	eax
call	?FromUtf8@conv@str@@YAPA_WPBD@Z		
add	esp, 4
push	eax
lea	ecx, DWORD PTR _protocols$2[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
lea	ecx, DWORD PTR _protocols$2[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?ToLower@str@@YAXPA_W@Z			
add	esp, 4
push	OFFSET ??_C@_17KOIOICEE@?$AA?0?$AA?0?$AA?0?$AA?$AA@
push	OFFSET ??_C@_17EAFPDHHD@?$AA?3?$AA?$DL?$AA?5?$AA?$AA@
lea	ecx, DWORD PTR _protocols$2[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?TransChars@str@@YAIPA_WPB_W1@Z		
add	esp, 12					
push	1
push	OFFSET ??_C@_13DEFPDAGF@?$AA?0?$AA?$AA@
lea	ecx, DWORD PTR _protocols$2[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	ecx, OFFSET ?gAllowedLinkProtocols@@3VWStrVec@@A
call	?Split@WStrVec@@QAEIPB_W0_N@Z		
lea	ecx, DWORD PTR _protocols$2[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
push	0
push	OFFSET ??_C@_0O@DPOFEFKE@SafeFileTypes?$AA@
mov	ecx, DWORD PTR _polsec$[ebp]
call	?GetValue@SquareTreeNode@@QBEPBDPBDPAI@Z 
mov	DWORD PTR _value$3[ebp], eax
cmp	DWORD PTR _value$3[ebp], 0
je	SHORT $LN21@Initialize
mov	eax, DWORD PTR _value$3[ebp]
push	eax
call	?FromUtf8@conv@str@@YAPA_WPBD@Z		
add	esp, 4
push	eax
lea	ecx, DWORD PTR _protocols$1[ebp]
call	??0?$ScopedMem@_W@@QAE@PA_W@Z		
lea	ecx, DWORD PTR _protocols$1[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?ToLower@str@@YAXPA_W@Z			
add	esp, 4
push	OFFSET ??_C@_17KOIOICEE@?$AA?0?$AA?0?$AA?0?$AA?$AA@
push	OFFSET ??_C@_17EAFPDHHD@?$AA?3?$AA?$DL?$AA?5?$AA?$AA@
lea	ecx, DWORD PTR _protocols$1[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
call	?TransChars@str@@YAIPA_WPB_W1@Z		
add	esp, 12					
push	1
push	OFFSET ??_C@_13DEFPDAGF@?$AA?0?$AA?$AA@
lea	ecx, DWORD PTR _protocols$1[ebp]
call	??B?$ScopedMem@_W@@QBEPA_WXZ		
push	eax
mov	ecx, OFFSET ?gAllowedFileTypes@@3VWStrVec@@A
call	?Split@WStrVec@@QAEIPB_W0_N@Z		
lea	ecx, DWORD PTR _protocols$1[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
lea	ecx, DWORD PTR _sqt$[ebp]
call	??1SquareTree@@QAE@XZ			
lea	ecx, DWORD PTR _restrictData$[ebp]
call	??1?$ScopedMem@D@@QAE@XZ		
lea	ecx, DWORD PTR _restrictPath$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN37@Initialize
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
add	esp, 308				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
npad	3
DD	5
DD	$LN36@Initialize
DD	-8					
DD	4
DD	$LN31@Initialize
DD	-20					
DD	4
DD	$LN32@Initialize
DD	-36					
DD	8
DD	$LN33@Initialize
DD	-96					
DD	4
DD	$LN34@Initialize
DD	-108					
DD	4
DD	$LN35@Initialize
DB	112					
DB	114					
DB	111					
DB	116					
DB	111					
DB	99					
DB	111					
DB	108					
DB	115					
DB	0
DB	112					
DB	114					
DB	111					
DB	116					
DB	111					
DB	99					
DB	111					
DB	108					
DB	115					
DB	0
DB	115					
DB	113					
DB	116					
DB	0
DB	114					
DB	101					
DB	115					
DB	116					
DB	114					
DB	105					
DB	99					
DB	116					
DB	68					
DB	97					
DB	116					
DB	97					
DB	0
DB	114					
DB	101					
DB	115					
DB	116					
DB	114					
DB	105					
DB	99					
DB	116					
DB	80					
DB	97					
DB	116					
DB	104					
DB	0
ENDP
?end@?$Vec@PAVWindowInfo@@@@QAE?AVIter@1@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _this$[ebp]
push	edx
mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
call	??0Iter@?$Vec@PAVWindowInfo@@@@QAE@PAV1@I@Z 
mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?begin@?$Vec@PAVWindowInfo@@@@QAE?AVIter@1@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	eax, DWORD PTR _this$[ebp]
push	eax
mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
call	??0Iter@?$Vec@PAVWindowInfo@@@@QAE@PAV1@I@Z 
mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?FindEl@?$Vec@PAVWindowInfo@@@@QAEAAPAVWindowInfo@@V?$function@$$A6A_NAAPAVWindowInfo@@@Z@std@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 240				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-240]
mov	ecx, 60					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	DWORD PTR _i$3[ebp], 0
jmp	SHORT $LN4@FindEl
mov	eax, DWORD PTR _i$3[ebp]
add	eax, 1
mov	DWORD PTR _i$3[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _i$3[ebp]
cmp	ecx, DWORD PTR [eax]
jae	SHORT $LN3@FindEl
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _i$3[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
push	eax
lea	ecx, DWORD PTR _check$[ebp]
call	??R?$_Func_class@_NAAPAVWindowInfo@@@std@@QBE_NAAPAVWindowInfo@@@Z 
movzx	ecx, al
test	ecx, ecx
je	SHORT $LN5@FindEl
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _i$3[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR $T2[ebp], eax
lea	ecx, DWORD PTR _check$[ebp]
call	??1?$function@$$A6A_NAAPAVWindowInfo@@@Z@std@@QAE@XZ 
mov	eax, DWORD PTR $T2[ebp]
jmp	SHORT $LN1@FindEl
jmp	SHORT $LN2@FindEl
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+12]
lea	ecx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR $T1[ebp], ecx
lea	ecx, DWORD PTR _check$[ebp]
call	??1?$function@$$A6A_NAAPAVWindowInfo@@@Z@std@@QAE@XZ 
mov	eax, DWORD PTR $T1[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 240				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	40					
ENDP
?Remove@?$Vec@PAVWindowInfo@@@@QAE_NPAVWindowInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	eax, DWORD PTR _el$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?Find@?$Vec@PAVWindowInfo@@@@QBEHPAVWindowInfo@@I@Z 
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], -1
jne	SHORT $LN2@Remove
xor	al, al
jmp	SHORT $LN1@Remove
push	1
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?RemoveAt@?$Vec@PAVWindowInfo@@@@QAEXII@Z 
mov	al, 1
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?Contains@?$Vec@PAVWindowInfo@@@@QBE_NPAVWindowInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	eax, DWORD PTR _el$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?Find@?$Vec@PAVWindowInfo@@@@QBEHPAVWindowInfo@@I@Z 
cmp	eax, -1
je	SHORT $LN3@Contains
mov	DWORD PTR tv69[ebp], 1
jmp	SHORT $LN4@Contains
mov	DWORD PTR tv69[ebp], 0
mov	al, BYTE PTR tv69[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?Find@?$Vec@PAVWindowInfo@@@@QBEHPAVWindowInfo@@I@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _startAt$[ebp]
mov	DWORD PTR _i$1[ebp], eax
jmp	SHORT $LN4@Find
mov	eax, DWORD PTR _i$1[ebp]
add	eax, 1
mov	DWORD PTR _i$1[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _i$1[ebp]
cmp	ecx, DWORD PTR [eax]
jae	SHORT $LN3@Find
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _i$1[ebp]
mov	eax, DWORD PTR [ecx+edx*4]
cmp	eax, DWORD PTR _el$[ebp]
jne	SHORT $LN5@Find
mov	eax, DWORD PTR _i$1[ebp]
jmp	SHORT $LN1@Find
jmp	SHORT $LN2@Find
or	eax, -1
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	8
ENDP
?Last@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
xor	eax, eax
jne	SHORT $LN5@Last
mov	eax, DWORD PTR _this$[ebp]
cmp	DWORD PTR [eax], 0
jne	SHORT $LN9@Last
mov	BYTE PTR tv67[ebp], 1
jmp	SHORT $LN10@Last
mov	BYTE PTR tv67[ebp], 0
movzx	ecx, BYTE PTR tv67[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@Last
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, 1
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?RemoveAt@?$Vec@PAVWindowInfo@@@@QAEXII@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _idx$[ebp]
add	eax, DWORD PTR _count$[ebp]
mov	ecx, DWORD PTR _this$[ebp]
cmp	DWORD PTR [ecx], eax
jbe	SHORT $LN2@RemoveAt
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _dst$2[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	ecx, DWORD PTR _count$[ebp]
lea	edx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _src$1[ebp], edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, DWORD PTR _idx$[ebp]
sub	ecx, DWORD PTR _count$[ebp]
shl	ecx, 2
push	ecx
mov	edx, DWORD PTR _src$1[ebp]
push	edx
mov	eax, DWORD PTR _dst$2[ebp]
push	eax
call	_memmove
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, DWORD PTR _count$[ebp]
mov	edx, DWORD PTR _this$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _count$[ebp]
shl	eax, 2
push	eax
push	0
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
lea	edx, DWORD PTR [ecx+edx*4]
push	edx
call	_memset
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?Append@?$Vec@PAVWindowInfo@@@@QAEXABQAVWindowInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _el$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
call	?InsertAt@?$Vec@PAVWindowInfo@@@@QAEXIABQAVWindowInfo@@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?InsertAt@?$Vec@PAVWindowInfo@@@@QAEXIABQAVWindowInfo@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
push	1
mov	eax, DWORD PTR _idx$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?MakeSpaceAt@?$Vec@PAVWindowInfo@@@@IAEPAPAVWindowInfo@@II_N@Z 
mov	ecx, 4
imul	edx, ecx, 0
mov	ecx, DWORD PTR _el$[ebp]
mov	ecx, DWORD PTR [ecx]
mov	DWORD PTR [eax+edx], ecx
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?Count@?$Vec@PAVWindowInfo@@@@QBEIXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [eax]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
xor	eax, eax
jne	SHORT $LN5@At
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _idx$[ebp]
cmp	ecx, DWORD PTR [eax]
jb	SHORT $LN9@At
mov	BYTE PTR tv67[ebp], 1
jmp	SHORT $LN10@At
mov	BYTE PTR tv67[ebp], 0
movzx	edx, BYTE PTR tv67[ebp]
push	edx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@At
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?Reset@?$Vec@PAVWindowInfo@@@@QAEXXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], 0
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax+4], 15			
mov	ecx, DWORD PTR _this$[ebp]
call	?FreeEls@?$Vec@PAVWindowInfo@@@@IAEXXZ	
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx+12], eax
push	64					
push	0
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
push	eax
call	_memset
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0?$Vec@PAVWindowInfo@@@@QAE@ABV0@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax+8], 0
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax+80], 0
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx+12], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?Reset@?$Vec@PAVWindowInfo@@@@QAEXXZ	
mov	eax, DWORD PTR _orig$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapCrash@?$Vec@PAVWindowInfo@@@@IAEXI@Z 
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _orig$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
shl	ecx, 2
push	ecx
mov	edx, DWORD PTR _orig$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1?$Vec@PAVWindowInfo@@@@QAE@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?FreeEls@?$Vec@PAVWindowInfo@@@@IAEXXZ	
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0?$Vec@PAVWindowInfo@@@@QAE@IPAVAllocator@@@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _capHint$[ebp]
mov	DWORD PTR [eax+8], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _allocator$[ebp]
mov	DWORD PTR [eax+80], ecx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx+12], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?Reset@?$Vec@PAVWindowInfo@@@@QAEXXZ	
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?FreeEls@?$Vec@PAVWindowInfo@@@@IAEXXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
cmp	DWORD PTR [ecx+12], eax
je	SHORT $LN1@FreeEls
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+80]
push	eax
call	?Free@Allocator@@SAXPAV1@PAX@Z		
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?MakeSpaceAt@?$Vec@PAVWindowInfo@@@@IAEPAPAVWindowInfo@@II_N@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 252				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-252]
mov	ecx, 63					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
lea	eax, DWORD PTR _idx$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
push	ecx
call	??$max@I@std@@YAABIABI0@Z		
add	esp, 8
mov	edx, DWORD PTR [eax]
add	edx, DWORD PTR _count$[ebp]
mov	DWORD PTR _newLen$[ebp], edx
movzx	eax, BYTE PTR _allowFailure$[ebp]
test	eax, eax
jne	SHORT $LN2@MakeSpaceA
mov	eax, DWORD PTR _newLen$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapCrash@?$Vec@PAVWindowInfo@@@@IAEXI@Z 
jmp	SHORT $LN3@MakeSpaceA
mov	eax, DWORD PTR _newLen$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapTry@?$Vec@PAVWindowInfo@@@@IAE_NI@Z 
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN3@MakeSpaceA
xor	eax, eax
jmp	SHORT $LN1@MakeSpaceA
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _res$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
cmp	ecx, DWORD PTR _idx$[ebp]
jbe	SHORT $LN5@MakeSpaceA
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _src$2[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	ecx, DWORD PTR _count$[ebp]
lea	edx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _dst$1[ebp], edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, DWORD PTR _idx$[ebp]
shl	ecx, 2
push	ecx
mov	edx, DWORD PTR _src$2[ebp]
push	edx
mov	eax, DWORD PTR _dst$1[ebp]
push	eax
call	_memmove
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newLen$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _res$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 252				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
?EnsureCapCrash@?$Vec@PAVWindowInfo@@@@IAEXI@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _needed$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapTry@?$Vec@PAVWindowInfo@@@@IAE_NI@Z 
mov	BYTE PTR _ok$[ebp], al
xor	eax, eax
jne	SHORT $LN5@EnsureCapC
movzx	eax, BYTE PTR _ok$[ebp]
test	eax, eax
jne	SHORT $LN2@EnsureCapC
call	?CrashMe@@YAXXZ				
xor	eax, eax
jne	SHORT $LN5@EnsureCapC
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?EnsureCapTry@?$Vec@PAVWindowInfo@@@@IAE_NI@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 264				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-264]
mov	ecx, 66					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
cmp	ecx, DWORD PTR _needed$[ebp]
jb	SHORT $LN2@EnsureCapT
mov	al, 1
jmp	$LN1@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
shl	ecx, 1
mov	DWORD PTR _newCap$[ebp], ecx
mov	eax, DWORD PTR _needed$[ebp]
cmp	eax, DWORD PTR _newCap$[ebp]
jbe	SHORT $LN3@EnsureCapT
mov	eax, DWORD PTR _needed$[ebp]
mov	DWORD PTR _newCap$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newCap$[ebp]
cmp	ecx, DWORD PTR [eax+8]
jae	SHORT $LN4@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _newCap$[ebp], ecx
mov	eax, DWORD PTR _newCap$[ebp]
add	eax, 1
mov	DWORD PTR _newElCount$[ebp], eax
cmp	DWORD PTR _newElCount$[ebp], 1073741823	
jb	SHORT $LN5@EnsureCapT
xor	al, al
jmp	$LN1@EnsureCapT
cmp	DWORD PTR _newElCount$[ebp], 2147483647	
jbe	SHORT $LN6@EnsureCapT
xor	al, al
jmp	$LN1@EnsureCapT
mov	eax, DWORD PTR _newElCount$[ebp]
shl	eax, 2
mov	DWORD PTR _allocSize$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
shl	ecx, 2
mov	edx, DWORD PTR _allocSize$[ebp]
sub	edx, ecx
mov	DWORD PTR _newPadding$[ebp], edx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
cmp	eax, DWORD PTR [ecx+12]
jne	SHORT $LN7@EnsureCapT
mov	eax, DWORD PTR _newPadding$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
shl	edx, 2
push	edx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+80]
push	edx
call	?Dup@Allocator@@SAPAXPAV1@PBXII@Z	
add	esp, 16					
mov	DWORD PTR _newEls$[ebp], eax
jmp	SHORT $LN8@EnsureCapT
mov	eax, DWORD PTR _allocSize$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+80]
push	ecx
call	?Realloc@Allocator@@SAPAXPAV1@PAXI@Z	
add	esp, 12					
mov	DWORD PTR _newEls$[ebp], eax
cmp	DWORD PTR _newEls$[ebp], 0
jne	SHORT $LN9@EnsureCapT
xor	al, al
jmp	SHORT $LN1@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newEls$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	eax, DWORD PTR _newPadding$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
lea	edx, DWORD PTR [ecx+edx*4]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newCap$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	al, 1
pop	edi
pop	esi
pop	ebx
add	esp, 264				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?FreeForDisplayModel@RenderCache@@QAEXPAVDisplayModel@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
push	-1
mov	eax, DWORD PTR _dm$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?FreePage@RenderCache@@AAEXPAVDisplayModel@@HPAUTilePosition@@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??_GRenderingCallback@@UAEPAXI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1RenderingCallback@@UAE@XZ		
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	4
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??0RenderingCallback@@QAE@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7RenderingCallback@@6B@
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1RenderingCallback@@UAE@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7RenderingCallback@@6B@
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?IsBookView@@YA_NW4DisplayMode@@@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 196				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-196]
mov	ecx, 49					
mov	eax, -858993460				
rep stosd
cmp	DWORD PTR _mode$[ebp], 3
je	SHORT $LN3@IsBookView
cmp	DWORD PTR _mode$[ebp], 6
je	SHORT $LN3@IsBookView
mov	DWORD PTR tv66[ebp], 0
jmp	SHORT $LN4@IsBookView
mov	DWORD PTR tv66[ebp], 1
mov	al, BYTE PTR tv66[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?IsContinuous@@YA_NW4DisplayMode@@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 196				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-196]
mov	ecx, 49					
mov	eax, -858993460				
rep stosd
cmp	DWORD PTR _mode$[ebp], 4
je	SHORT $LN3@IsContinuo
cmp	DWORD PTR _mode$[ebp], 5
je	SHORT $LN3@IsContinuo
cmp	DWORD PTR _mode$[ebp], 6
je	SHORT $LN3@IsContinuo
mov	DWORD PTR tv67[ebp], 0
jmp	SHORT $LN4@IsContinuo
mov	DWORD PTR tv67[ebp], 1
mov	al, BYTE PTR tv67[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?IsSingle@@YA_NW4DisplayMode@@@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 196				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-196]
mov	ecx, 49					
mov	eax, -858993460				
rep stosd
cmp	DWORD PTR _mode$[ebp], 1
je	SHORT $LN3@IsSingle
cmp	DWORD PTR _mode$[ebp], 4
je	SHORT $LN3@IsSingle
mov	DWORD PTR tv66[ebp], 0
jmp	SHORT $LN4@IsSingle
mov	DWORD PTR tv66[ebp], 1
mov	al, BYTE PTR tv66[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?Remove@?$Vec@PAUFileState@@@@QAE_NPAUFileState@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	eax, DWORD PTR _el$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?Find@?$Vec@PAUFileState@@@@QBEHPAUFileState@@I@Z 
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], -1
jne	SHORT $LN2@Remove
xor	al, al
jmp	SHORT $LN1@Remove
push	1
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?RemoveAt@?$Vec@PAUFileState@@@@QAEXII@Z 
mov	al, 1
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?Find@?$Vec@PAUFileState@@@@QBEHPAUFileState@@I@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _startAt$[ebp]
mov	DWORD PTR _i$1[ebp], eax
jmp	SHORT $LN4@Find
mov	eax, DWORD PTR _i$1[ebp]
add	eax, 1
mov	DWORD PTR _i$1[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _i$1[ebp]
cmp	ecx, DWORD PTR [eax]
jae	SHORT $LN3@Find
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _i$1[ebp]
mov	eax, DWORD PTR [ecx+edx*4]
cmp	eax, DWORD PTR _el$[ebp]
jne	SHORT $LN5@Find
mov	eax, DWORD PTR _i$1[ebp]
jmp	SHORT $LN1@Find
jmp	SHORT $LN2@Find
or	eax, -1
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	8
ENDP
?RemoveAt@?$Vec@PAUFileState@@@@QAEXII@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _idx$[ebp]
add	eax, DWORD PTR _count$[ebp]
mov	ecx, DWORD PTR _this$[ebp]
cmp	DWORD PTR [ecx], eax
jbe	SHORT $LN2@RemoveAt
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _dst$2[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	ecx, DWORD PTR _count$[ebp]
lea	edx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _src$1[ebp], edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, DWORD PTR _idx$[ebp]
sub	ecx, DWORD PTR _count$[ebp]
shl	ecx, 2
push	ecx
mov	edx, DWORD PTR _src$1[ebp]
push	edx
mov	eax, DWORD PTR _dst$2[ebp]
push	eax
call	_memmove
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, DWORD PTR _count$[ebp]
mov	edx, DWORD PTR _this$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _count$[ebp]
shl	eax, 2
push	eax
push	0
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
lea	edx, DWORD PTR [ecx+edx*4]
push	edx
call	_memset
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?Reset@?$Vec@PAUFileState@@@@QAEXXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], 0
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax+4], 15			
mov	ecx, DWORD PTR _this$[ebp]
call	?FreeEls@?$Vec@PAUFileState@@@@IAEXXZ	
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx+12], eax
push	64					
push	0
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
push	eax
call	_memset
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??4?$Vec@PAUFileState@@@@QAEAAV0@ABV0@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
cmp	eax, DWORD PTR _that$[ebp]
je	SHORT $LN2@operator
mov	eax, DWORD PTR _that$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapCrash@?$Vec@PAUFileState@@@@IAEXI@Z 
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _that$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
shl	ecx, 2
push	ecx
mov	edx, DWORD PTR _that$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [eax+4]
sub	edx, DWORD PTR [ecx]
shl	edx, 2
push	edx
push	0
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+12]
lea	ecx, DWORD PTR [eax+ecx*4]
push	ecx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1?$Vec@PAUFileState@@@@QAE@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?FreeEls@?$Vec@PAUFileState@@@@IAEXXZ	
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0?$Vec@PAUFileState@@@@QAE@IPAVAllocator@@@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _capHint$[ebp]
mov	DWORD PTR [eax+8], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _allocator$[ebp]
mov	DWORD PTR [eax+80], ecx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx+12], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?Reset@?$Vec@PAUFileState@@@@QAEXXZ	
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?FreeEls@?$Vec@PAUFileState@@@@IAEXXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
cmp	DWORD PTR [ecx+12], eax
je	SHORT $LN1@FreeEls
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+80]
push	eax
call	?Free@Allocator@@SAXPAV1@PAX@Z		
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?EnsureCapCrash@?$Vec@PAUFileState@@@@IAEXI@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _needed$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapTry@?$Vec@PAUFileState@@@@IAE_NI@Z 
mov	BYTE PTR _ok$[ebp], al
xor	eax, eax
jne	SHORT $LN5@EnsureCapC
movzx	eax, BYTE PTR _ok$[ebp]
test	eax, eax
jne	SHORT $LN2@EnsureCapC
call	?CrashMe@@YAXXZ				
xor	eax, eax
jne	SHORT $LN5@EnsureCapC
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?EnsureCapTry@?$Vec@PAUFileState@@@@IAE_NI@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 264				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-264]
mov	ecx, 66					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
cmp	ecx, DWORD PTR _needed$[ebp]
jb	SHORT $LN2@EnsureCapT
mov	al, 1
jmp	$LN1@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
shl	ecx, 1
mov	DWORD PTR _newCap$[ebp], ecx
mov	eax, DWORD PTR _needed$[ebp]
cmp	eax, DWORD PTR _newCap$[ebp]
jbe	SHORT $LN3@EnsureCapT
mov	eax, DWORD PTR _needed$[ebp]
mov	DWORD PTR _newCap$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newCap$[ebp]
cmp	ecx, DWORD PTR [eax+8]
jae	SHORT $LN4@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _newCap$[ebp], ecx
mov	eax, DWORD PTR _newCap$[ebp]
add	eax, 1
mov	DWORD PTR _newElCount$[ebp], eax
cmp	DWORD PTR _newElCount$[ebp], 1073741823	
jb	SHORT $LN5@EnsureCapT
xor	al, al
jmp	$LN1@EnsureCapT
cmp	DWORD PTR _newElCount$[ebp], 2147483647	
jbe	SHORT $LN6@EnsureCapT
xor	al, al
jmp	$LN1@EnsureCapT
mov	eax, DWORD PTR _newElCount$[ebp]
shl	eax, 2
mov	DWORD PTR _allocSize$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
shl	ecx, 2
mov	edx, DWORD PTR _allocSize$[ebp]
sub	edx, ecx
mov	DWORD PTR _newPadding$[ebp], edx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
cmp	eax, DWORD PTR [ecx+12]
jne	SHORT $LN7@EnsureCapT
mov	eax, DWORD PTR _newPadding$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
shl	edx, 2
push	edx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+80]
push	edx
call	?Dup@Allocator@@SAPAXPAV1@PBXII@Z	
add	esp, 16					
mov	DWORD PTR _newEls$[ebp], eax
jmp	SHORT $LN8@EnsureCapT
mov	eax, DWORD PTR _allocSize$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+80]
push	ecx
call	?Realloc@Allocator@@SAPAXPAV1@PAXI@Z	
add	esp, 12					
mov	DWORD PTR _newEls$[ebp], eax
cmp	DWORD PTR _newEls$[ebp], 0
jne	SHORT $LN9@EnsureCapT
xor	al, al
jmp	SHORT $LN1@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newEls$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	eax, DWORD PTR _newPadding$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
lea	edx, DWORD PTR [ecx+edx*4]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newCap$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	al, 1
pop	edi
pop	esi
pop	ebx
add	esp, 264				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?Remove@FileHistory@@QAEXPAUFileState@@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _state$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [ecx]
call	?Remove@?$Vec@PAUFileState@@@@QAE_NPAUFileState@@@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1FileHistory@@QAE@XZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0FileHistory@@QAE@XZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], 0
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?Reset@?$Vec@H@@QAEXXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], 0
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax+4], 15			
mov	ecx, DWORD PTR _this$[ebp]
call	?FreeEls@?$Vec@H@@IAEXXZ		
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx+12], eax
push	64					
push	0
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
push	eax
call	_memset
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??4?$Vec@H@@QAEAAV0@ABV0@@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
cmp	eax, DWORD PTR _that$[ebp]
je	SHORT $LN2@operator
mov	eax, DWORD PTR _that$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapCrash@?$Vec@H@@IAEXI@Z	
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _that$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
shl	ecx, 2
push	ecx
mov	edx, DWORD PTR _that$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [eax+4]
sub	edx, DWORD PTR [ecx]
shl	edx, 2
push	edx
push	0
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+12]
lea	ecx, DWORD PTR [eax+ecx*4]
push	ecx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?FreeEls@?$Vec@H@@IAEXXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
cmp	DWORD PTR [ecx+12], eax
je	SHORT $LN1@FreeEls
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+80]
push	eax
call	?Free@Allocator@@SAXPAV1@PAX@Z		
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?EnsureCapCrash@?$Vec@H@@IAEXI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _needed$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapTry@?$Vec@H@@IAE_NI@Z		
mov	BYTE PTR _ok$[ebp], al
xor	eax, eax
jne	SHORT $LN5@EnsureCapC
movzx	eax, BYTE PTR _ok$[ebp]
test	eax, eax
jne	SHORT $LN2@EnsureCapC
call	?CrashMe@@YAXXZ				
xor	eax, eax
jne	SHORT $LN5@EnsureCapC
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?EnsureCapTry@?$Vec@H@@IAE_NI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 264				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-264]
mov	ecx, 66					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
cmp	ecx, DWORD PTR _needed$[ebp]
jb	SHORT $LN2@EnsureCapT
mov	al, 1
jmp	$LN1@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
shl	ecx, 1
mov	DWORD PTR _newCap$[ebp], ecx
mov	eax, DWORD PTR _needed$[ebp]
cmp	eax, DWORD PTR _newCap$[ebp]
jbe	SHORT $LN3@EnsureCapT
mov	eax, DWORD PTR _needed$[ebp]
mov	DWORD PTR _newCap$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newCap$[ebp]
cmp	ecx, DWORD PTR [eax+8]
jae	SHORT $LN4@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _newCap$[ebp], ecx
mov	eax, DWORD PTR _newCap$[ebp]
add	eax, 1
mov	DWORD PTR _newElCount$[ebp], eax
cmp	DWORD PTR _newElCount$[ebp], 1073741823	
jb	SHORT $LN5@EnsureCapT
xor	al, al
jmp	$LN1@EnsureCapT
cmp	DWORD PTR _newElCount$[ebp], 2147483647	
jbe	SHORT $LN6@EnsureCapT
xor	al, al
jmp	$LN1@EnsureCapT
mov	eax, DWORD PTR _newElCount$[ebp]
shl	eax, 2
mov	DWORD PTR _allocSize$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
shl	ecx, 2
mov	edx, DWORD PTR _allocSize$[ebp]
sub	edx, ecx
mov	DWORD PTR _newPadding$[ebp], edx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
cmp	eax, DWORD PTR [ecx+12]
jne	SHORT $LN7@EnsureCapT
mov	eax, DWORD PTR _newPadding$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
shl	edx, 2
push	edx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+80]
push	edx
call	?Dup@Allocator@@SAPAXPAV1@PBXII@Z	
add	esp, 16					
mov	DWORD PTR _newEls$[ebp], eax
jmp	SHORT $LN8@EnsureCapT
mov	eax, DWORD PTR _allocSize$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+80]
push	ecx
call	?Realloc@Allocator@@SAPAXPAV1@PAXI@Z	
add	esp, 12					
mov	DWORD PTR _newEls$[ebp], eax
cmp	DWORD PTR _newEls$[ebp], 0
jne	SHORT $LN9@EnsureCapT
xor	al, al
jmp	SHORT $LN1@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newEls$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	eax, DWORD PTR _newPadding$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
lea	edx, DWORD PTR [ecx+edx*4]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newCap$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	al, 1
pop	edi
pop	esi
pop	ebx
add	esp, 264				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?EnableMessageHandling@EbookController@@QAEX_N@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	cl, BYTE PTR _enable$[ebp]
mov	BYTE PTR [eax+80], cl
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
?GetDocType@EbookController@@QBE?AW4DocType@@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 12					
call	?Type@Doc@@QBE?AW4DocType@@XZ		
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?GetPresentationMode@DisplayModel@@QBE_NXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	al, BYTE PTR [eax+129]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?GetDisplayR2L@DisplayModel@@QBE_NXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	al, BYTE PTR [eax+128]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?SetDisplayR2L@DisplayModel@@QAEX_N@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	cl, BYTE PTR _r2l$[ebp]
mov	BYTE PTR [eax+128], cl
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
?NeedVScroll@DisplayModel@@QBE_NXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [eax+72]
cmp	edx, DWORD PTR [ecx+80]
jge	SHORT $LN3@NeedVScrol
mov	DWORD PTR tv69[ebp], 1
jmp	SHORT $LN4@NeedVScrol
mov	DWORD PTR tv69[ebp], 0
mov	al, BYTE PTR tv69[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?NeedHScroll@DisplayModel@@QBE_NXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [eax+76]
cmp	edx, DWORD PTR [ecx+84]
jge	SHORT $LN3@NeedHScrol
mov	DWORD PTR tv69[ebp], 1
jmp	SHORT $LN4@NeedHScrol
mov	DWORD PTR tv69[ebp], 0
mov	al, BYTE PTR tv69[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?GetViewPort@DisplayModel@@QBE?AV?$RectT@H@geomutil@@XZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 64					
mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
mov	edx, DWORD PTR [eax]
mov	DWORD PTR [ecx], edx
mov	edx, DWORD PTR [eax+4]
mov	DWORD PTR [ecx+4], edx
mov	edx, DWORD PTR [eax+8]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR [eax+12]
mov	DWORD PTR [ecx+12], eax
mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
?GetRotation@DisplayModel@@QBEHXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [eax+120]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?GetEngine@DisplayModel@@QBEPAVBaseEngine@@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [eax+40]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0ScrollState@@QAE@HNN@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _page$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _this$[ebp]
movsd	xmm0, QWORD PTR _x$[ebp]
movsd	QWORD PTR [eax+8], xmm0
mov	eax, DWORD PTR _this$[ebp]
movsd	xmm0, QWORD PTR _y$[ebp]
movsd	QWORD PTR [eax+16], xmm0
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	20					
ENDP
??_GControllerCallback@@UAEPAXI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1ControllerCallback@@UAE@XZ		
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	4
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??0ControllerCallback@@QAE@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7ControllerCallback@@6B@
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1ControllerCallback@@UAE@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7ControllerCallback@@6B@
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0?$PointT@H@geomutil@@QAE@HH@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _x$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _y$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	8
ENDP
??0?$PointT@H@geomutil@@QAE@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], 0
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax+4], 0
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?Type@Doc@@QBE?AW4DocType@@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [eax]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?IsDocLoaded@Doc@@QBE_NXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?IsNone@Doc@@QBE_NXZ			
movzx	eax, al
test	eax, eax
jne	SHORT $LN3@IsDocLoade
mov	DWORD PTR tv68[ebp], 1
jmp	SHORT $LN4@IsDocLoade
mov	DWORD PTR tv68[ebp], 0
mov	al, BYTE PTR tv68[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?IsNone@Doc@@QBE_NXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
cmp	DWORD PTR [eax], 0
jne	SHORT $LN3@IsNone
mov	DWORD PTR tv66[ebp], 1
jmp	SHORT $LN4@IsNone
mov	DWORD PTR tv66[ebp], 0
mov	al, BYTE PTR tv66[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??_GPasswordUI@@UAEPAXI@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1PasswordUI@@UAE@XZ			
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	4
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??0PasswordUI@@QAE@XZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7PasswordUI@@6B@
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1PasswordUI@@UAE@XZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7PasswordUI@@6B@
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0PageAnnotation@@QAE@W4PageAnnotType@@HV?$RectT@N@geomutil@@UColor@0@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _type$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _pageNo$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	edi, DWORD PTR _this$[ebp]
add	edi, 8
mov	ecx, 8
lea	esi, DWORD PTR _rect$[ebp]
rep movsd
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _color$[ebp]
mov	DWORD PTR [eax+40], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	44					
ENDP
??0PageAnnotation@@QAE@XZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], 0
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax+4], -1
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 8
call	??0?$RectT@N@geomutil@@QAE@XZ		
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 40					
call	??0Color@PageAnnotation@@QAE@XZ		
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?IsEmpty@?$RectT@N@geomutil@@QBE_NXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
movsd	xmm0, QWORD PTR [eax+16]
ucomisd	xmm0, QWORD PTR __real@0000000000000000
lahf
test	ah, 68					
jnp	SHORT $LN3@IsEmpty
mov	ecx, DWORD PTR _this$[ebp]
movsd	xmm0, QWORD PTR [ecx+24]
ucomisd	xmm0, QWORD PTR __real@0000000000000000
lahf
test	ah, 68					
jnp	SHORT $LN3@IsEmpty
mov	DWORD PTR tv68[ebp], 0
jmp	SHORT $LN4@IsEmpty
mov	DWORD PTR tv68[ebp], 1
mov	al, BYTE PTR tv68[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0?$RectT@N@geomutil@@QAE@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
movsd	xmm0, QWORD PTR __real@0000000000000000
movsd	QWORD PTR [eax], xmm0
mov	eax, DWORD PTR _this$[ebp]
movsd	xmm0, QWORD PTR __real@0000000000000000
movsd	QWORD PTR [eax+8], xmm0
mov	eax, DWORD PTR _this$[ebp]
movsd	xmm0, QWORD PTR __real@0000000000000000
movsd	QWORD PTR [eax+16], xmm0
mov	eax, DWORD PTR _this$[ebp]
movsd	xmm0, QWORD PTR __real@0000000000000000
movsd	QWORD PTR [eax+24], xmm0
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0Color@PageAnnotation@@QAE@KE@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _c$[ebp]
push	eax
call	?GetRValueSafe@@YAEK@Z			
add	esp, 4
mov	ecx, DWORD PTR _this$[ebp]
mov	BYTE PTR [ecx], al
mov	eax, DWORD PTR _c$[ebp]
push	eax
call	?GetGValueSafe@@YAEK@Z			
add	esp, 4
mov	ecx, DWORD PTR _this$[ebp]
mov	BYTE PTR [ecx+1], al
mov	eax, DWORD PTR _c$[ebp]
push	eax
call	?GetBValueSafe@@YAEK@Z			
add	esp, 4
mov	ecx, DWORD PTR _this$[ebp]
mov	BYTE PTR [ecx+2], al
mov	eax, DWORD PTR _this$[ebp]
mov	cl, BYTE PTR _a$[ebp]
mov	BYTE PTR [eax+3], cl
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??0Color@PageAnnotation@@QAE@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	BYTE PTR [eax], 0
mov	eax, DWORD PTR _this$[ebp]
mov	BYTE PTR [eax+1], 0
mov	eax, DWORD PTR _this$[ebp]
mov	BYTE PTR [eax+2], 0
mov	eax, DWORD PTR _this$[ebp]
mov	BYTE PTR [eax+3], 0
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??_GLinkSaverUI@@UAEPAXI@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1LinkSaverUI@@UAE@XZ			
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	4
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??0LinkSaverUI@@QAE@XZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7LinkSaverUI@@6B@
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1LinkSaverUI@@UAE@XZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7LinkSaverUI@@6B@
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??_GRenderedBitmap@@QAEPAXI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1RenderedBitmap@@QAE@XZ		
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	16					
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1RenderedBitmap@@QAE@XZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	esi, esp
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	DWORD PTR __imp__DeleteObject@4
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 12					
call	??1ScopedHandle@@QAE@XZ			
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0?$SizeT@H@geomutil@@QAE@HH@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _dx$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _dy$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	8
ENDP
?MoveWindow@DeferWinPosHelper@@QAEXPAUHWND__@@V?$RectT@H@geomutil@@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	1
mov	eax, DWORD PTR _r$[ebp+12]
push	eax
mov	ecx, DWORD PTR _r$[ebp+8]
push	ecx
mov	edx, DWORD PTR _r$[ebp+4]
push	edx
mov	eax, DWORD PTR _r$[ebp]
push	eax
mov	ecx, DWORD PTR _hWnd$[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?MoveWindow@DeferWinPosHelper@@QAEXPAUHWND__@@HHHHH@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	20					
ENDP
?MoveWindow@DeferWinPosHelper@@QAEXPAUHWND__@@HHHHH@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	DWORD PTR _uFlags$[ebp], 532		
cmp	DWORD PTR _bRepaint$[ebp], 0
jne	SHORT $LN2@MoveWindow
mov	eax, DWORD PTR _uFlags$[ebp]
or	eax, 8
mov	DWORD PTR _uFlags$[ebp], eax
mov	eax, DWORD PTR _uFlags$[ebp]
push	eax
mov	ecx, DWORD PTR _cy$[ebp]
push	ecx
mov	edx, DWORD PTR _cx$[ebp]
push	edx
mov	eax, DWORD PTR _y$[ebp]
push	eax
mov	ecx, DWORD PTR _x$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _hWnd$[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
call	?SetWindowPos@DeferWinPosHelper@@QAEXPAUHWND__@@0HHHHI@Z 
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	24					
ENDP
?SetWindowPos@DeferWinPosHelper@@QAEXPAUHWND__@@0HHHHI@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	esi, esp
mov	eax, DWORD PTR _uFlags$[ebp]
push	eax
mov	ecx, DWORD PTR _cy$[ebp]
push	ecx
mov	edx, DWORD PTR _cx$[ebp]
push	edx
mov	eax, DWORD PTR _y$[ebp]
push	eax
mov	ecx, DWORD PTR _x$[ebp]
push	ecx
mov	edx, DWORD PTR _hWndInsertAfter$[ebp]
push	edx
mov	eax, DWORD PTR _hWnd$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	DWORD PTR __imp__DeferWindowPos@32
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx], eax
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	28					
ENDP
?End@DeferWinPosHelper@@QAEXXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN1@End
mov	esi, esp
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	DWORD PTR __imp__EndDeferWindowPos@4
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], 0
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1DeferWinPosHelper@@QAE@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?End@DeferWinPosHelper@@QAEXXZ		
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0DeferWinPosHelper@@QAE@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	esi, esp
push	32					
call	DWORD PTR __imp__BeginDeferWindowPos@4
cmp	esi, esp
call	__RTC_CheckEsp
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx], eax
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?RepaintNow@@YAXPAUHWND__@@@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	esi, esp
push	0
push	0
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	DWORD PTR __imp__InvalidateRect@12
cmp	esi, esp
call	__RTC_CheckEsp
mov	esi, esp
mov	eax, DWORD PTR _hwnd$[ebp]
push	eax
call	DWORD PTR __imp__UpdateWindow@4
cmp	esi, esp
call	__RTC_CheckEsp
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?IsCtrlPressed@@YA_NXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
push	17					
call	?IsKeyPressed@@YA_NH@Z			
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?IsAltPressed@@YA_NXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
push	18					
call	?IsKeyPressed@@YA_NH@Z			
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?IsShiftPressed@@YA_NXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
push	16					
call	?IsKeyPressed@@YA_NH@Z			
add	esp, 4
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?IsKeyPressed@@YA_NH@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 196				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-196]
mov	ecx, 49					
mov	eax, -858993460				
rep stosd
mov	esi, esp
mov	eax, DWORD PTR _key$[ebp]
push	eax
call	DWORD PTR __imp__GetKeyState@4
cmp	esi, esp
call	__RTC_CheckEsp
movsx	ecx, ax
and	ecx, 32768				
je	SHORT $LN3@IsKeyPress
mov	BYTE PTR tv69[ebp], 1
jmp	SHORT $LN4@IsKeyPress
mov	BYTE PTR tv69[ebp], 0
mov	al, BYTE PTR tv69[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 196				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?MoveWindow@@YAXPAUHWND__@@V?$RectT@H@geomutil@@@Z PROC	
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	esi, esp
push	1
mov	eax, DWORD PTR _rect$[ebp+12]
push	eax
mov	ecx, DWORD PTR _rect$[ebp+8]
push	ecx
mov	edx, DWORD PTR _rect$[ebp+4]
push	edx
mov	eax, DWORD PTR _rect$[ebp]
push	eax
mov	ecx, DWORD PTR _hwnd$[ebp]
push	ecx
call	DWORD PTR __imp__MoveWindow@24
cmp	esi, esp
call	__RTC_CheckEsp
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1SquareTree@@QAE@XZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 232				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-232]
mov	ecx, 58					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR $T1[ebp], ecx
mov	edx, DWORD PTR $T1[ebp]
mov	DWORD PTR $T2[ebp], edx
cmp	DWORD PTR $T2[ebp], 0
je	SHORT $LN3@SquareTree
push	1
mov	ecx, DWORD PTR $T2[ebp]
call	??_GSquareTreeNode@@QAEPAXI@Z
mov	DWORD PTR tv71[ebp], eax
jmp	SHORT $LN1@SquareTree
mov	DWORD PTR tv71[ebp], 0
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$ScopedMem@D@@QAE@XZ		
pop	edi
pop	esi
pop	ebx
add	esp, 232				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??_GSquareTreeNode@@QAEPAXI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1SquareTreeNode@@QAE@XZ		
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	212					
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??_GHttpRsp@@QAEPAXI@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1HttpRsp@@QAE@XZ
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	48					
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1HttpRsp@@QAE@XZ PROC					
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
add	ecx, 4
call	??1?$Str@D@str@@QAE@XZ
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$ScopedMem@_W@@QAE@XZ		
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1?$Str@D@str@@QAE@XZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$Vec@D@@QAE@XZ			
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?Get@?$Str@D@str@@QBEPADXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [eax+12]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?AppendAndFree@?$Str@D@str@@QAEXPAD@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
cmp	DWORD PTR _s$[ebp], 0
je	SHORT $LN2@AppendAndF
push	-1
mov	eax, DWORD PTR _s$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?Append@?$Str@D@str@@QAEXPBDI@Z		
push	1
mov	eax, DWORD PTR _s$[ebp]
push	eax
call	__free_dbg
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?AppendFmt@?$Str@D@str@@QAAXPBDZZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
call	??$__vcrt_va_start_verify_argument_type@PBD@@YAXXZ 
lea	eax, DWORD PTR _fmt$[ebp+4]
mov	DWORD PTR _args$[ebp], eax
mov	eax, DWORD PTR _args$[ebp]
push	eax
mov	ecx, DWORD PTR _fmt$[ebp]
push	ecx
call	?FmtV@str@@YAPADPBDPAD@Z		
add	esp, 8
mov	DWORD PTR _res$[ebp], eax
mov	eax, DWORD PTR _res$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?AppendAndFree@?$Str@D@str@@QAEXPAD@Z	
mov	DWORD PTR _args$[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?Append@?$Str@D@str@@QAEXPBDI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
cmp	DWORD PTR _size$[ebp], -1
jne	SHORT $LN2@Append
mov	eax, DWORD PTR _src$[ebp]
push	eax
call	?Len@str@@YAIPBD@Z			
add	esp, 4
mov	DWORD PTR _size$[ebp], eax
mov	eax, DWORD PTR _size$[ebp]
push	eax
mov	ecx, DWORD PTR _src$[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?Append@?$Vec@D@@QAEXPBDI@Z		
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?Append@?$Vec@D@@QAEXPBDI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
cmp	DWORD PTR _count$[ebp], 0
jne	SHORT $LN2@Append
jmp	SHORT $LN1@Append
push	0
mov	eax, DWORD PTR _count$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
call	?MakeSpaceAt@?$Vec@D@@IAEPADII_N@Z	
mov	DWORD PTR _dst$[ebp], eax
mov	eax, DWORD PTR _count$[ebp]
push	eax
mov	ecx, DWORD PTR _src$[ebp]
push	ecx
mov	edx, DWORD PTR _dst$[ebp]
push	edx
call	_memcpy
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?Size@?$Vec@D@@QBEIXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [eax]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?At@?$Vec@D@@QBEAADI@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
xor	eax, eax
jne	SHORT $LN5@At
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _idx$[ebp]
cmp	ecx, DWORD PTR [eax]
jb	SHORT $LN9@At
mov	BYTE PTR tv67[ebp], 1
jmp	SHORT $LN10@At
mov	BYTE PTR tv67[ebp], 0
movzx	edx, BYTE PTR tv67[ebp]
push	edx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@At
mov	eax, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [eax+12]
add	eax, DWORD PTR _idx$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1?$Vec@D@@QAE@XZ PROC					
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?FreeEls@?$Vec@D@@IAEXXZ		
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?FreeEls@?$Vec@D@@IAEXXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
cmp	DWORD PTR [ecx+12], eax
je	SHORT $LN1@FreeEls
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+32]
push	eax
call	?Free@Allocator@@SAXPAV1@PAX@Z		
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?MakeSpaceAt@?$Vec@D@@IAEPADII_N@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 252				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-252]
mov	ecx, 63					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
lea	eax, DWORD PTR _idx$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
push	ecx
call	??$max@I@std@@YAABIABI0@Z		
add	esp, 8
mov	edx, DWORD PTR [eax]
add	edx, DWORD PTR _count$[ebp]
mov	DWORD PTR _newLen$[ebp], edx
movzx	eax, BYTE PTR _allowFailure$[ebp]
test	eax, eax
jne	SHORT $LN2@MakeSpaceA
mov	eax, DWORD PTR _newLen$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapCrash@?$Vec@D@@IAEXI@Z	
jmp	SHORT $LN3@MakeSpaceA
mov	eax, DWORD PTR _newLen$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapTry@?$Vec@D@@IAE_NI@Z		
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN3@MakeSpaceA
xor	eax, eax
jmp	SHORT $LN1@MakeSpaceA
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
add	ecx, DWORD PTR _idx$[ebp]
mov	DWORD PTR _res$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
cmp	ecx, DWORD PTR _idx$[ebp]
jbe	SHORT $LN5@MakeSpaceA
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
add	ecx, DWORD PTR _idx$[ebp]
mov	DWORD PTR _src$2[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
add	ecx, DWORD PTR _idx$[ebp]
add	ecx, DWORD PTR _count$[ebp]
mov	DWORD PTR _dst$1[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, DWORD PTR _idx$[ebp]
push	ecx
mov	edx, DWORD PTR _src$2[ebp]
push	edx
mov	eax, DWORD PTR _dst$1[ebp]
push	eax
call	_memmove
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newLen$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _res$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 252				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
?EnsureCapCrash@?$Vec@D@@IAEXI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _needed$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapTry@?$Vec@D@@IAE_NI@Z		
mov	BYTE PTR _ok$[ebp], al
xor	eax, eax
jne	SHORT $LN5@EnsureCapC
movzx	eax, BYTE PTR _ok$[ebp]
test	eax, eax
jne	SHORT $LN2@EnsureCapC
call	?CrashMe@@YAXXZ				
xor	eax, eax
jne	SHORT $LN5@EnsureCapC
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?EnsureCapTry@?$Vec@D@@IAE_NI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 264				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-264]
mov	ecx, 66					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
cmp	ecx, DWORD PTR _needed$[ebp]
jb	SHORT $LN2@EnsureCapT
mov	al, 1
jmp	$LN1@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
shl	ecx, 1
mov	DWORD PTR _newCap$[ebp], ecx
mov	eax, DWORD PTR _needed$[ebp]
cmp	eax, DWORD PTR _newCap$[ebp]
jbe	SHORT $LN3@EnsureCapT
mov	eax, DWORD PTR _needed$[ebp]
mov	DWORD PTR _newCap$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newCap$[ebp]
cmp	ecx, DWORD PTR [eax+8]
jae	SHORT $LN4@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _newCap$[ebp], ecx
mov	eax, DWORD PTR _newCap$[ebp]
add	eax, 1
mov	DWORD PTR _newElCount$[ebp], eax
cmp	DWORD PTR _newElCount$[ebp], -1
jb	SHORT $LN5@EnsureCapT
xor	al, al
jmp	$LN1@EnsureCapT
cmp	DWORD PTR _newElCount$[ebp], 2147483647	
jbe	SHORT $LN6@EnsureCapT
xor	al, al
jmp	$LN1@EnsureCapT
mov	eax, DWORD PTR _newElCount$[ebp]
mov	DWORD PTR _allocSize$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _allocSize$[ebp]
sub	ecx, DWORD PTR [eax]
mov	DWORD PTR _newPadding$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
cmp	eax, DWORD PTR [ecx+12]
jne	SHORT $LN7@EnsureCapT
mov	eax, DWORD PTR _newPadding$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+32]
push	edx
call	?Dup@Allocator@@SAPAXPAV1@PBXII@Z	
add	esp, 16					
mov	DWORD PTR _newEls$[ebp], eax
jmp	SHORT $LN8@EnsureCapT
mov	eax, DWORD PTR _allocSize$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+32]
push	ecx
call	?Realloc@Allocator@@SAPAXPAV1@PAXI@Z	
add	esp, 12					
mov	DWORD PTR _newEls$[ebp], eax
cmp	DWORD PTR _newEls$[ebp], 0
jne	SHORT $LN9@EnsureCapT
xor	al, al
jmp	SHORT $LN1@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newEls$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	eax, DWORD PTR _newPadding$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	eax, DWORD PTR _this$[ebp]
add	edx, DWORD PTR [eax]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newCap$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	al, 1
pop	edi
pop	esi
pop	ebx
add	esp, 264				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??_GFileChangeObserver@@UAEPAXI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1FileChangeObserver@@UAE@XZ		
mov	eax, DWORD PTR ___flags$[ebp]
and	eax, 1
je	SHORT $LN2@scalar
push	4
mov	eax, DWORD PTR _this$[ebp]
push	eax
call	??3@YAXPAXI@Z				
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??0FileChangeObserver@@QAE@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7FileChangeObserver@@6B@
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1FileChangeObserver@@UAE@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], OFFSET ??_7FileChangeObserver@@6B@
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?FileTimeEq@@YA_NABU_FILETIME@@0@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 196				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-196]
mov	ecx, 49					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _a$[ebp]
mov	ecx, DWORD PTR _b$[ebp]
mov	edx, DWORD PTR [eax]
cmp	edx, DWORD PTR [ecx]
jne	SHORT $LN3@FileTimeEq
mov	eax, DWORD PTR _a$[ebp]
mov	ecx, DWORD PTR _b$[ebp]
mov	edx, DWORD PTR [eax+4]
cmp	edx, DWORD PTR [ecx+4]
jne	SHORT $LN3@FileTimeEq
mov	DWORD PTR tv70[ebp], 1
jmp	SHORT $LN4@FileTimeEq
mov	DWORD PTR tv70[ebp], 0
mov	al, BYTE PTR tv70[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??B?$ScopedMem@_W@@QBEPA_WXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [eax]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?StealData@?$ScopedMem@_W@@QAEPA_WXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _tmp$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], 0
mov	eax, DWORD PTR _tmp$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?Get@?$ScopedMem@_W@@QBEPA_WXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [eax]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??4?$ScopedMem@_W@@QAEAAV0@PA_W@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	1
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	__free_dbg
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newPtr$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?Set@?$ScopedMem@_W@@QAEXPA_W@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	1
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	__free_dbg
add	esp, 8
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newPtr$[ebp]
mov	DWORD PTR [eax], ecx
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1?$ScopedMem@_W@@QAE@XZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	1
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	__free_dbg
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0?$ScopedMem@_W@@QAE@PA_W@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _ptr$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
??0?$ScopedMem@_W@@QAE@XZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], 0
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?GetBValueSafe@@YAEK@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _rgb$[ebp]
shr	eax, 16					
and	eax, 255				
mov	DWORD PTR _rgb$[ebp], eax
mov	al, BYTE PTR _rgb$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?GetGValueSafe@@YAEK@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _rgb$[ebp]
shr	eax, 8
and	eax, 255				
mov	DWORD PTR _rgb$[ebp], eax
mov	al, BYTE PTR _rgb$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?GetRValueSafe@@YAEK@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _rgb$[ebp]
and	eax, 255				
mov	DWORD PTR _rgb$[ebp], eax
mov	al, BYTE PTR _rgb$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??B?$ScopedMem@D@@QBEPADXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [eax]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?StealData@?$ScopedMem@D@@QAEPADXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _tmp$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], 0
mov	eax, DWORD PTR _tmp$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?Get@?$ScopedMem@D@@QBEPADXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [eax]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1?$ScopedMem@D@@QAE@XZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	1
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	__free_dbg
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0?$ScopedMem@D@@QAE@PAD@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _ptr$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
??1?$Str@_W@str@@QAE@XZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$Vec@_W@@QAE@XZ			
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?Get@?$Str@_W@str@@QBEPA_WXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [eax+12]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?AppendAndFree@?$Str@_W@str@@QAEXPA_W@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
cmp	DWORD PTR _s$[ebp], 0
je	SHORT $LN2@AppendAndF
push	-1
mov	eax, DWORD PTR _s$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	
push	1
mov	eax, DWORD PTR _s$[ebp]
push	eax
call	__free_dbg
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?AppendFmt@?$Str@_W@str@@QAAXPB_WZZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
call	??$__vcrt_va_start_verify_argument_type@PB_W@@YAXXZ 
lea	eax, DWORD PTR _fmt$[ebp+4]
mov	DWORD PTR _args$[ebp], eax
mov	eax, DWORD PTR _args$[ebp]
push	eax
mov	ecx, DWORD PTR _fmt$[ebp]
push	ecx
call	?FmtV@str@@YAPA_WPB_WPAD@Z		
add	esp, 8
mov	DWORD PTR _res$[ebp], eax
mov	eax, DWORD PTR _res$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?AppendAndFree@?$Str@_W@str@@QAEXPA_W@Z	
mov	DWORD PTR _args$[ebp], 0
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?Append@?$Str@_W@str@@QAEXPB_WI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
cmp	DWORD PTR _size$[ebp], -1
jne	SHORT $LN2@Append
mov	eax, DWORD PTR _src$[ebp]
push	eax
call	?Len@str@@YAIPB_W@Z			
add	esp, 4
mov	DWORD PTR _size$[ebp], eax
mov	eax, DWORD PTR _size$[ebp]
push	eax
mov	ecx, DWORD PTR _src$[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?Append@?$Vec@_W@@QAEXPB_WI@Z		
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?Append@?$Str@_W@str@@QAEX_W@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
lea	eax, DWORD PTR _c$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
call	?InsertAt@?$Vec@_W@@QAEXIAB_W@Z		
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??0?$Str@_W@str@@QAE@IPAVAllocator@@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _allocator$[ebp]
push	eax
mov	ecx, DWORD PTR _capHint$[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$Vec@_W@@QAE@IPAVAllocator@@@Z	
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?LendData@?$Vec@_W@@QBEPA_WXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [eax+12]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?Last@?$Vec@_W@@QBEAA_WXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
xor	eax, eax
jne	SHORT $LN5@Last
mov	eax, DWORD PTR _this$[ebp]
cmp	DWORD PTR [eax], 0
jne	SHORT $LN9@Last
mov	BYTE PTR tv67[ebp], 1
jmp	SHORT $LN10@Last
mov	BYTE PTR tv67[ebp], 0
movzx	ecx, BYTE PTR tv67[ebp]
push	ecx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@Last
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, 1
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?At@?$Vec@_W@@QBEAA_WI@Z		
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?Append@?$Vec@_W@@QAEXPB_WI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
cmp	DWORD PTR _count$[ebp], 0
jne	SHORT $LN2@Append
jmp	SHORT $LN1@Append
push	0
mov	eax, DWORD PTR _count$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
call	?MakeSpaceAt@?$Vec@_W@@IAEPA_WII_N@Z	
mov	DWORD PTR _dst$[ebp], eax
mov	eax, DWORD PTR _count$[ebp]
shl	eax, 1
push	eax
mov	ecx, DWORD PTR _src$[ebp]
push	ecx
mov	edx, DWORD PTR _dst$[ebp]
push	edx
call	_memcpy
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?InsertAt@?$Vec@_W@@QAEXIAB_W@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
push	1
mov	eax, DWORD PTR _idx$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?MakeSpaceAt@?$Vec@_W@@IAEPA_WII_N@Z	
mov	ecx, 2
imul	edx, ecx, 0
mov	ecx, DWORD PTR _el$[ebp]
mov	cx, WORD PTR [ecx]
mov	WORD PTR [eax+edx], cx
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?At@?$Vec@_W@@QBEAA_WI@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
xor	eax, eax
jne	SHORT $LN5@At
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _idx$[ebp]
cmp	ecx, DWORD PTR [eax]
jb	SHORT $LN9@At
mov	BYTE PTR tv67[ebp], 1
jmp	SHORT $LN10@At
mov	BYTE PTR tv67[ebp], 0
movzx	edx, BYTE PTR tv67[ebp]
push	edx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@At
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*2]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?Reset@?$Vec@_W@@QAEXXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], 0
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax+4], 15			
mov	ecx, DWORD PTR _this$[ebp]
call	?FreeEls@?$Vec@_W@@IAEXXZ		
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx+12], eax
push	32					
push	0
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
push	eax
call	_memset
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1?$Vec@_W@@QAE@XZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?FreeEls@?$Vec@_W@@IAEXXZ		
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0?$Vec@_W@@QAE@IPAVAllocator@@@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _capHint$[ebp]
mov	DWORD PTR [eax+8], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _allocator$[ebp]
mov	DWORD PTR [eax+48], ecx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx+12], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?Reset@?$Vec@_W@@QAEXXZ			
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?FreeEls@?$Vec@_W@@IAEXXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
cmp	DWORD PTR [ecx+12], eax
je	SHORT $LN1@FreeEls
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+48]
push	eax
call	?Free@Allocator@@SAXPAV1@PAX@Z		
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?MakeSpaceAt@?$Vec@_W@@IAEPA_WII_N@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 252				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-252]
mov	ecx, 63					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
lea	eax, DWORD PTR _idx$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
push	ecx
call	??$max@I@std@@YAABIABI0@Z		
add	esp, 8
mov	edx, DWORD PTR [eax]
add	edx, DWORD PTR _count$[ebp]
mov	DWORD PTR _newLen$[ebp], edx
movzx	eax, BYTE PTR _allowFailure$[ebp]
test	eax, eax
jne	SHORT $LN2@MakeSpaceA
mov	eax, DWORD PTR _newLen$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapCrash@?$Vec@_W@@IAEXI@Z	
jmp	SHORT $LN3@MakeSpaceA
mov	eax, DWORD PTR _newLen$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapTry@?$Vec@_W@@IAE_NI@Z	
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN3@MakeSpaceA
xor	eax, eax
jmp	SHORT $LN1@MakeSpaceA
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*2]
mov	DWORD PTR _res$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
cmp	ecx, DWORD PTR _idx$[ebp]
jbe	SHORT $LN5@MakeSpaceA
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*2]
mov	DWORD PTR _src$2[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*2]
mov	ecx, DWORD PTR _count$[ebp]
lea	edx, DWORD PTR [eax+ecx*2]
mov	DWORD PTR _dst$1[ebp], edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, DWORD PTR _idx$[ebp]
shl	ecx, 1
push	ecx
mov	edx, DWORD PTR _src$2[ebp]
push	edx
mov	eax, DWORD PTR _dst$1[ebp]
push	eax
call	_memmove
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newLen$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _res$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 252				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
?EnsureCapCrash@?$Vec@_W@@IAEXI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _needed$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapTry@?$Vec@_W@@IAE_NI@Z	
mov	BYTE PTR _ok$[ebp], al
xor	eax, eax
jne	SHORT $LN5@EnsureCapC
movzx	eax, BYTE PTR _ok$[ebp]
test	eax, eax
jne	SHORT $LN2@EnsureCapC
call	?CrashMe@@YAXXZ				
xor	eax, eax
jne	SHORT $LN5@EnsureCapC
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?EnsureCapTry@?$Vec@_W@@IAE_NI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 264				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-264]
mov	ecx, 66					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
cmp	ecx, DWORD PTR _needed$[ebp]
jb	SHORT $LN2@EnsureCapT
mov	al, 1
jmp	$LN1@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
shl	ecx, 1
mov	DWORD PTR _newCap$[ebp], ecx
mov	eax, DWORD PTR _needed$[ebp]
cmp	eax, DWORD PTR _newCap$[ebp]
jbe	SHORT $LN3@EnsureCapT
mov	eax, DWORD PTR _needed$[ebp]
mov	DWORD PTR _newCap$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newCap$[ebp]
cmp	ecx, DWORD PTR [eax+8]
jae	SHORT $LN4@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _newCap$[ebp], ecx
mov	eax, DWORD PTR _newCap$[ebp]
add	eax, 1
mov	DWORD PTR _newElCount$[ebp], eax
cmp	DWORD PTR _newElCount$[ebp], 2147483647	
jb	SHORT $LN5@EnsureCapT
xor	al, al
jmp	$LN1@EnsureCapT
cmp	DWORD PTR _newElCount$[ebp], 2147483647	
jbe	SHORT $LN6@EnsureCapT
xor	al, al
jmp	$LN1@EnsureCapT
mov	eax, DWORD PTR _newElCount$[ebp]
shl	eax, 1
mov	DWORD PTR _allocSize$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
shl	ecx, 1
mov	edx, DWORD PTR _allocSize$[ebp]
sub	edx, ecx
mov	DWORD PTR _newPadding$[ebp], edx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
cmp	eax, DWORD PTR [ecx+12]
jne	SHORT $LN7@EnsureCapT
mov	eax, DWORD PTR _newPadding$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
shl	edx, 1
push	edx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+48]
push	edx
call	?Dup@Allocator@@SAPAXPAV1@PBXII@Z	
add	esp, 16					
mov	DWORD PTR _newEls$[ebp], eax
jmp	SHORT $LN8@EnsureCapT
mov	eax, DWORD PTR _allocSize$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+48]
push	ecx
call	?Realloc@Allocator@@SAPAXPAV1@PAXI@Z	
add	esp, 12					
mov	DWORD PTR _newEls$[ebp], eax
cmp	DWORD PTR _newEls$[ebp], 0
jne	SHORT $LN9@EnsureCapT
xor	al, al
jmp	SHORT $LN1@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newEls$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	eax, DWORD PTR _newPadding$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
lea	edx, DWORD PTR [ecx+edx*2]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newCap$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	al, 1
pop	edi
pop	esi
pop	ebx
add	esp, 264				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?cmpNatural@WStrVec@@CAHPBX0@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _b$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _a$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	?CmpNatural@str@@YAHPB_W0@Z		
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?SortNatural@WStrVec@@QAEXXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	OFFSET ?cmpNatural@WStrVec@@CAHPBX0@Z	
mov	ecx, DWORD PTR _this$[ebp]
call	?Sort@?$Vec@PA_W@@QAEXP6AHPBX0@Z@Z	
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?Split@WStrVec@@QAEIPB_W0_N@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 252				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-252]
mov	ecx, 63					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _start$[ebp], ecx
mov	eax, DWORD PTR _separator$[ebp]
push	eax
mov	ecx, DWORD PTR _s$[ebp]
push	ecx
call	?Find@str@@YAPB_WPB_W0@Z		
add	esp, 8
mov	DWORD PTR _next$[ebp], eax
cmp	DWORD PTR _next$[ebp], 0
je	SHORT $LN3@Split
movzx	eax, BYTE PTR _collapse$[ebp]
test	eax, eax
je	SHORT $LN5@Split
mov	eax, DWORD PTR _next$[ebp]
cmp	eax, DWORD PTR _s$[ebp]
jbe	SHORT $LN4@Split
mov	eax, DWORD PTR _next$[ebp]
sub	eax, DWORD PTR _s$[ebp]
sar	eax, 1
push	eax
mov	ecx, DWORD PTR _s$[ebp]
push	ecx
call	?DupN@str@@YAPA_WPB_WI@Z		
add	esp, 8
mov	DWORD PTR $T2[ebp], eax
lea	edx, DWORD PTR $T2[ebp]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
call	?Append@?$Vec@PA_W@@QAEXABQA_W@Z	
mov	eax, DWORD PTR _separator$[ebp]
push	eax
call	?Len@str@@YAIPB_W@Z			
add	esp, 4
mov	ecx, DWORD PTR _next$[ebp]
lea	edx, DWORD PTR [ecx+eax*2]
mov	DWORD PTR _s$[ebp], edx
jmp	SHORT $LN2@Split
movzx	eax, BYTE PTR _collapse$[ebp]
test	eax, eax
je	SHORT $LN7@Split
mov	eax, DWORD PTR _s$[ebp]
movzx	ecx, WORD PTR [eax]
test	ecx, ecx
je	SHORT $LN6@Split
mov	eax, DWORD PTR _s$[ebp]
push	eax
call	?Dup@str@@YAPA_WPB_W@Z			
add	esp, 4
mov	DWORD PTR $T1[ebp], eax
lea	ecx, DWORD PTR $T1[ebp]
push	ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?Append@?$Vec@PA_W@@QAEXABQA_W@Z	
mov	eax, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [eax]
sub	eax, DWORD PTR _start$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 252				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
?Contains@WStrVec@@QBE_NPB_W@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
mov	eax, DWORD PTR _s$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?Find@WStrVec@@QBEHPB_WI@Z		
cmp	eax, -1
je	SHORT $LN3@Contains
mov	DWORD PTR tv69[ebp], 1
jmp	SHORT $LN4@Contains
mov	DWORD PTR tv69[ebp], 0
mov	al, BYTE PTR tv69[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?Find@WStrVec@@QBEHPB_WI@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _startAt$[ebp]
mov	DWORD PTR _i$2[ebp], eax
jmp	SHORT $LN4@Find
mov	eax, DWORD PTR _i$2[ebp]
add	eax, 1
mov	DWORD PTR _i$2[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _i$2[ebp]
cmp	ecx, DWORD PTR [eax]
jae	SHORT $LN3@Find
mov	eax, DWORD PTR _i$2[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?At@?$Vec@PA_W@@QBEAAPA_WI@Z		
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _item$1[ebp], ecx
mov	eax, DWORD PTR _item$1[ebp]
push	eax
mov	ecx, DWORD PTR _s$[ebp]
push	ecx
call	?Eq@str@@YA_NPB_W0@Z			
add	esp, 8
movzx	edx, al
test	edx, edx
je	SHORT $LN5@Find
mov	eax, DWORD PTR _i$2[ebp]
jmp	SHORT $LN1@Find
jmp	SHORT $LN2@Find
or	eax, -1
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
??1WStrVec@@QAE@XZ PROC					
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?FreeMembers@?$Vec@PA_W@@QAEXXZ		
mov	ecx, DWORD PTR _this$[ebp]
call	??1?$Vec@PA_W@@QAE@XZ			
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0WStrVec@@QAE@XZ PROC					
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
push	0
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$Vec@PA_W@@QAE@IPAVAllocator@@@Z	
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?Sort@?$Vec@PA_W@@QAEXP6AHPBX0@Z@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _cmpFunc$[ebp]
push	eax
push	4
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_qsort
add	esp, 16					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?PopAt@?$Vec@PA_W@@QAEPA_WI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 220				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-220]
mov	ecx, 55					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
xor	eax, eax
jne	SHORT $LN5@PopAt
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _idx$[ebp]
cmp	ecx, DWORD PTR [eax]
jb	SHORT $LN9@PopAt
mov	BYTE PTR tv67[ebp], 1
jmp	SHORT $LN10@PopAt
mov	BYTE PTR tv67[ebp], 0
movzx	edx, BYTE PTR tv67[ebp]
push	edx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@PopAt
mov	eax, DWORD PTR _idx$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?At@?$Vec@PA_W@@QBEAAPA_WI@Z		
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _el$[ebp], ecx
push	1
mov	eax, DWORD PTR _idx$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?RemoveAt@?$Vec@PA_W@@QAEXII@Z		
mov	eax, DWORD PTR _el$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 220				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?RemoveAt@?$Vec@PA_W@@QAEXII@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _idx$[ebp]
add	eax, DWORD PTR _count$[ebp]
mov	ecx, DWORD PTR _this$[ebp]
cmp	DWORD PTR [ecx], eax
jbe	SHORT $LN2@RemoveAt
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _dst$2[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	ecx, DWORD PTR _count$[ebp]
lea	edx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _src$1[ebp], edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, DWORD PTR _idx$[ebp]
sub	ecx, DWORD PTR _count$[ebp]
shl	ecx, 2
push	ecx
mov	edx, DWORD PTR _src$1[ebp]
push	edx
mov	eax, DWORD PTR _dst$2[ebp]
push	eax
call	_memmove
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, DWORD PTR _count$[ebp]
mov	edx, DWORD PTR _this$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _count$[ebp]
shl	eax, 2
push	eax
push	0
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
lea	edx, DWORD PTR [ecx+edx*4]
push	edx
call	_memset
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?Append@?$Vec@PA_W@@QAEXABQA_W@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _el$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	ecx, DWORD PTR _this$[ebp]
call	?InsertAt@?$Vec@PA_W@@QAEXIABQA_W@Z	
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?InsertAt@?$Vec@PA_W@@QAEXIABQA_W@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
push	0
push	1
mov	eax, DWORD PTR _idx$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?MakeSpaceAt@?$Vec@PA_W@@IAEPAPA_WII_N@Z 
mov	ecx, 4
imul	edx, ecx, 0
mov	ecx, DWORD PTR _el$[ebp]
mov	ecx, DWORD PTR [ecx]
mov	DWORD PTR [eax+edx], ecx
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?Count@?$Vec@PA_W@@QBEIXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [eax]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?At@?$Vec@PA_W@@QBEAAPA_WI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
xor	eax, eax
jne	SHORT $LN5@At
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _idx$[ebp]
cmp	ecx, DWORD PTR [eax]
jb	SHORT $LN9@At
mov	BYTE PTR tv67[ebp], 1
jmp	SHORT $LN10@At
mov	BYTE PTR tv67[ebp], 0
movzx	edx, BYTE PTR tv67[ebp]
push	edx
call	?CrashIfFunc@@YAX_N@Z			
add	esp, 4
xor	eax, eax
jne	SHORT $LN5@At
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?Reset@?$Vec@PA_W@@QAEXXZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], 0
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax+4], 15			
mov	ecx, DWORD PTR _this$[ebp]
call	?FreeEls@?$Vec@PA_W@@IAEXXZ		
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx+12], eax
push	64					
push	0
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
push	eax
call	_memset
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?FreeMembers@?$Vec@PA_W@@QAEXXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 228				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-228]
mov	ecx, 57					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	DWORD PTR _i$2[ebp], 0
jmp	SHORT $LN4@FreeMember
mov	eax, DWORD PTR _i$2[ebp]
add	eax, 1
mov	DWORD PTR _i$2[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _i$2[ebp]
cmp	ecx, DWORD PTR [eax]
jae	SHORT $LN3@FreeMember
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _i$2[ebp]
mov	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _s$1[ebp], eax
push	1
mov	eax, DWORD PTR _s$1[ebp]
push	eax
call	__free_dbg
add	esp, 8
jmp	SHORT $LN2@FreeMember
mov	ecx, DWORD PTR _this$[ebp]
call	?Reset@?$Vec@PA_W@@QAEXXZ		
pop	edi
pop	esi
pop	ebx
add	esp, 228				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1?$Vec@PA_W@@QAE@XZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	?FreeEls@?$Vec@PA_W@@IAEXXZ		
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0?$Vec@PA_W@@QAE@IPAVAllocator@@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _capHint$[ebp]
mov	DWORD PTR [eax+8], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _allocator$[ebp]
mov	DWORD PTR [eax+80], ecx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx+12], eax
mov	ecx, DWORD PTR _this$[ebp]
call	?Reset@?$Vec@PA_W@@QAEXXZ		
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	8
ENDP
?FreeEls@?$Vec@PA_W@@IAEXXZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
cmp	DWORD PTR [ecx+12], eax
je	SHORT $LN1@FreeEls
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+80]
push	eax
call	?Free@Allocator@@SAXPAV1@PAX@Z		
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?MakeSpaceAt@?$Vec@PA_W@@IAEPAPA_WII_N@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 252				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-252]
mov	ecx, 63					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
lea	eax, DWORD PTR _idx$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
push	ecx
call	??$max@I@std@@YAABIABI0@Z		
add	esp, 8
mov	edx, DWORD PTR [eax]
add	edx, DWORD PTR _count$[ebp]
mov	DWORD PTR _newLen$[ebp], edx
movzx	eax, BYTE PTR _allowFailure$[ebp]
test	eax, eax
jne	SHORT $LN2@MakeSpaceA
mov	eax, DWORD PTR _newLen$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapCrash@?$Vec@PA_W@@IAEXI@Z	
jmp	SHORT $LN3@MakeSpaceA
mov	eax, DWORD PTR _newLen$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapTry@?$Vec@PA_W@@IAE_NI@Z	
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN3@MakeSpaceA
xor	eax, eax
jmp	SHORT $LN1@MakeSpaceA
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _res$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
cmp	ecx, DWORD PTR _idx$[ebp]
jbe	SHORT $LN5@MakeSpaceA
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _src$2[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	ecx, DWORD PTR _count$[ebp]
lea	edx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _dst$1[ebp], edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, DWORD PTR _idx$[ebp]
shl	ecx, 2
push	ecx
mov	edx, DWORD PTR _src$2[ebp]
push	edx
mov	eax, DWORD PTR _dst$1[ebp]
push	eax
call	_memmove
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newLen$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _res$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 252				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	12					
ENDP
?EnsureCapCrash@?$Vec@PA_W@@IAEXI@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 216				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-216]
mov	ecx, 54					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _needed$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	?EnsureCapTry@?$Vec@PA_W@@IAE_NI@Z	
mov	BYTE PTR _ok$[ebp], al
xor	eax, eax
jne	SHORT $LN5@EnsureCapC
movzx	eax, BYTE PTR _ok$[ebp]
test	eax, eax
jne	SHORT $LN2@EnsureCapC
call	?CrashMe@@YAXXZ				
xor	eax, eax
jne	SHORT $LN5@EnsureCapC
pop	edi
pop	esi
pop	ebx
add	esp, 216				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?EnsureCapTry@?$Vec@PA_W@@IAE_NI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 264				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-264]
mov	ecx, 66					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
cmp	ecx, DWORD PTR _needed$[ebp]
jb	SHORT $LN2@EnsureCapT
mov	al, 1
jmp	$LN1@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
shl	ecx, 1
mov	DWORD PTR _newCap$[ebp], ecx
mov	eax, DWORD PTR _needed$[ebp]
cmp	eax, DWORD PTR _newCap$[ebp]
jbe	SHORT $LN3@EnsureCapT
mov	eax, DWORD PTR _needed$[ebp]
mov	DWORD PTR _newCap$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newCap$[ebp]
cmp	ecx, DWORD PTR [eax+8]
jae	SHORT $LN4@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _newCap$[ebp], ecx
mov	eax, DWORD PTR _newCap$[ebp]
add	eax, 1
mov	DWORD PTR _newElCount$[ebp], eax
cmp	DWORD PTR _newElCount$[ebp], 1073741823	
jb	SHORT $LN5@EnsureCapT
xor	al, al
jmp	$LN1@EnsureCapT
cmp	DWORD PTR _newElCount$[ebp], 2147483647	
jbe	SHORT $LN6@EnsureCapT
xor	al, al
jmp	$LN1@EnsureCapT
mov	eax, DWORD PTR _newElCount$[ebp]
shl	eax, 2
mov	DWORD PTR _allocSize$[ebp], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
shl	ecx, 2
mov	edx, DWORD PTR _allocSize$[ebp]
sub	edx, ecx
mov	DWORD PTR _newPadding$[ebp], edx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _this$[ebp]
cmp	eax, DWORD PTR [ecx+12]
jne	SHORT $LN7@EnsureCapT
mov	eax, DWORD PTR _newPadding$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
shl	edx, 2
push	edx
mov	eax, DWORD PTR _this$[ebp]
add	eax, 16					
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+80]
push	edx
call	?Dup@Allocator@@SAPAXPAV1@PBXII@Z	
add	esp, 16					
mov	DWORD PTR _newEls$[ebp], eax
jmp	SHORT $LN8@EnsureCapT
mov	eax, DWORD PTR _allocSize$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+80]
push	ecx
call	?Realloc@Allocator@@SAPAXPAV1@PAXI@Z	
add	esp, 12					
mov	DWORD PTR _newEls$[ebp], eax
cmp	DWORD PTR _newEls$[ebp], 0
jne	SHORT $LN9@EnsureCapT
xor	al, al
jmp	SHORT $LN1@EnsureCapT
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newEls$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	eax, DWORD PTR _newPadding$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _this$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
lea	edx, DWORD PTR [ecx+edx*4]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _newCap$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	al, 1
pop	edi
pop	esi
pop	ebx
add	esp, 264				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?ToUtf8@conv@str@@YAPADPB_W@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
push	-1
push	65001					
mov	eax, DWORD PTR _src$[ebp]
push	eax
call	?ToMultiByte@str@@YAPADPB_WIH@Z		
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?FromUtf8@conv@str@@YAPA_WPBD@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
push	-1
push	65001					
mov	eax, DWORD PTR _src$[ebp]
push	eax
call	?ToWideChar@str@@YAPA_WPBDIH@Z		
add	esp, 12					
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?IsDigit@str@@YA_N_W@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 196				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-196]
mov	ecx, 49					
mov	eax, -858993460				
rep stosd
movzx	eax, WORD PTR _c$[ebp]
cmp	eax, 48					
jl	SHORT $LN3@IsDigit
movzx	ecx, WORD PTR _c$[ebp]
cmp	ecx, 57					
jg	SHORT $LN3@IsDigit
mov	DWORD PTR tv68[ebp], 1
jmp	SHORT $LN4@IsDigit
mov	DWORD PTR tv68[ebp], 0
mov	al, BYTE PTR tv68[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?Find@str@@YAPB_WPB_W0@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR _find$[ebp]
push	eax
mov	ecx, DWORD PTR _str$[ebp]
push	ecx
call	_wcsstr
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?FindChar@str@@YAPA_WPA_W_W@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
movzx	eax, WORD PTR _c$[ebp]
push	eax
mov	ecx, DWORD PTR _str$[ebp]
push	ecx
call	?wcschr@@YAPA_WPA_W_W@Z			
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?FindChar@str@@YAPB_WPB_W_W@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
movzx	eax, WORD PTR _c$[ebp]
push	eax
mov	ecx, DWORD PTR _str$[ebp]
push	ecx
call	_wcschr
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??1ScopedHandle@@QAE@XZ PROC				
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	esi, esp
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	DWORD PTR __imp__CloseHandle@4
cmp	esi, esp
call	__RTC_CheckEsp
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0WindowRect@@QAE@PAUHWND__@@@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 232				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-232]
mov	ecx, 58					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$RectT@H@geomutil@@QAE@XZ		
mov	esi, esp
lea	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _hwnd$[ebp]
push	ecx
call	DWORD PTR __imp__GetWindowRect@8
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	SHORT $LN1@WindowRect
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _rc$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _rc$[ebp+8]
sub	eax, DWORD PTR _rc$[ebp]
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx+8], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _rc$[ebp+4]
mov	DWORD PTR [eax+4], ecx
mov	eax, DWORD PTR _rc$[ebp+12]
sub	eax, DWORD PTR _rc$[ebp+4]
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx+12], eax
mov	eax, DWORD PTR _this$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@WindowRect
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
add	esp, 232				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
npad	3
DD	1
DD	$LN5@WindowRect
DD	-36					
DD	16					
DD	$LN4@WindowRect
DB	114					
DB	99					
DB	0
ENDP
??0ClientRect@@QAE@PAUHWND__@@@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 232				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-232]
mov	ecx, 58					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _this$[ebp], ecx
mov	ecx, DWORD PTR _this$[ebp]
call	??0?$RectT@H@geomutil@@QAE@XZ		
mov	esi, esp
lea	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _hwnd$[ebp]
push	ecx
call	DWORD PTR __imp__GetClientRect@8
cmp	esi, esp
call	__RTC_CheckEsp
test	eax, eax
je	SHORT $LN1@ClientRect
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _rc$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _rc$[ebp+8]
sub	eax, DWORD PTR _rc$[ebp]
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx+8], eax
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _rc$[ebp+4]
mov	DWORD PTR [eax+4], ecx
mov	eax, DWORD PTR _rc$[ebp+12]
sub	eax, DWORD PTR _rc$[ebp+4]
mov	ecx, DWORD PTR _this$[ebp]
mov	DWORD PTR [ecx+12], eax
mov	eax, DWORD PTR _this$[ebp]
push	edx
mov	ecx, ebp
push	eax
lea	edx, DWORD PTR $LN6@ClientRect
call	@_RTC_CheckStackVars@8
pop	eax
pop	edx
pop	edi
pop	esi
pop	ebx
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
add	esp, 232				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
npad	3
DD	1
DD	$LN5@ClientRect
DD	-36					
DD	16					
DD	$LN4@ClientRect
DB	114					
DB	99					
DB	0
ENDP
??9?$RectT@H@geomutil@@QBE_NABV01@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _other$[ebp]
push	eax
mov	ecx, DWORD PTR _this$[ebp]
call	??8?$RectT@H@geomutil@@QBE_NABV01@@Z	
movzx	ecx, al
test	ecx, ecx
jne	SHORT $LN3@operator
mov	DWORD PTR tv69[ebp], 1
jmp	SHORT $LN4@operator
mov	DWORD PTR tv69[ebp], 0
mov	al, BYTE PTR tv69[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 208				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
??8?$RectT@H@geomutil@@QBE_NABV01@@Z PROC		
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _other$[ebp]
mov	edx, DWORD PTR [eax]
cmp	edx, DWORD PTR [ecx]
jne	SHORT $LN3@operator
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _other$[ebp]
mov	edx, DWORD PTR [eax+4]
cmp	edx, DWORD PTR [ecx+4]
jne	SHORT $LN3@operator
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _other$[ebp]
mov	edx, DWORD PTR [eax+8]
cmp	edx, DWORD PTR [ecx+8]
jne	SHORT $LN3@operator
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _other$[ebp]
mov	edx, DWORD PTR [eax+12]
cmp	edx, DWORD PTR [ecx+12]
jne	SHORT $LN3@operator
mov	DWORD PTR tv76[ebp], 1
jmp	SHORT $LN4@operator
mov	DWORD PTR tv76[ebp], 0
mov	al, BYTE PTR tv76[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	4
ENDP
?Size@?$RectT@H@geomutil@@QBE?AV?$SizeT@H@2@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
call	??0?$SizeT@H@geomutil@@QAE@HH@Z		
mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?TL@?$RectT@H@geomutil@@QBE?AV?$PointT@H@2@XZ PROC	
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _this$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
call	??0?$PointT@H@geomutil@@QAE@HH@Z	
mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
pop	edi
pop	esi
pop	ebx
add	esp, 204				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	4
ENDP
?IsEmpty@?$RectT@H@geomutil@@QBE_NXZ PROC		
push	ebp
mov	ebp, esp
sub	esp, 208				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-208]
mov	ecx, 52					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
cmp	DWORD PTR [eax+8], 0
je	SHORT $LN3@IsEmpty
mov	ecx, DWORD PTR _this$[ebp]
cmp	DWORD PTR [ecx+12], 0
je	SHORT $LN3@IsEmpty
mov	DWORD PTR tv68[ebp], 0
jmp	SHORT $LN4@IsEmpty
mov	DWORD PTR tv68[ebp], 1
mov	al, BYTE PTR tv68[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??0?$RectT@H@geomutil@@QAE@V?$PointT@H@1@V?$SizeT@H@1@@Z PROC 
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _pt$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _pt$[ebp+4]
mov	DWORD PTR [eax+4], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _size$[ebp]
mov	DWORD PTR [eax+8], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _size$[ebp+4]
mov	DWORD PTR [eax+12], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	16					
ENDP
??0?$RectT@H@geomutil@@QAE@HHHH@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _x$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _y$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _dx$[ebp]
mov	DWORD PTR [eax+8], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	ecx, DWORD PTR _dy$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	16					
ENDP
??0?$RectT@H@geomutil@@QAE@XZ PROC			
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
push	ecx
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
pop	ecx
mov	DWORD PTR _this$[ebp], ecx
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax], 0
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax+4], 0
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax+8], 0
mov	eax, DWORD PTR _this$[ebp]
mov	DWORD PTR [eax+12], 0
mov	eax, DWORD PTR _this$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?CrashIfFunc@@YAX_N@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
movzx	eax, BYTE PTR _cond$[ebp]
test	eax, eax
je	SHORT $LN1@CrashIfFun
call	?CrashMe@@YAXXZ				
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?CrashMe@@YAXXZ PROC					
push	ebp
mov	ebp, esp
sub	esp, 204				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-204]
mov	ecx, 51					
mov	eax, -858993460				
rep stosd
mov	DWORD PTR _p$[ebp], 0
mov	eax, DWORD PTR _p$[ebp]
mov	BYTE PTR [eax], 0
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??2@YAPAXIPAX@Z PROC					
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR __Where$[ebp]
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??$__vcrt_va_start_verify_argument_type@PB_W@@YAXXZ PROC 
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?wcschr@@YAPA_WPA_W_W@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
movzx	eax, WORD PTR __C$[ebp]
push	eax
mov	ecx, DWORD PTR __String$[ebp]
push	ecx
call	_wcschr
add	esp, 8
pop	edi
pop	esi
pop	ebx
add	esp, 192				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	0
ENDP
?__empty_global_delete@@YAXPAXI@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
?__empty_global_delete@@YAXPAX@Z PROC			
push	ebp
mov	ebp, esp
sub	esp, 192				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-192]
mov	ecx, 48					
mov	eax, -858993460				
rep stosd
pop	edi
pop	esi
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				
push	ebp
mov	ebp, esp
sub	esp, 200				
push	ebx
push	esi
push	edi
lea	edi, DWORD PTR [ebp-200]
mov	ecx, 50					
mov	eax, -858993460				
rep stosd
mov	eax, DWORD PTR ___n$[ebp]
mov	DWORD PTR tv66[ebp], eax
mov	ecx, DWORD PTR ___n$[ebp]
sub	ecx, 1
mov	DWORD PTR ___n$[ebp], ecx
cmp	DWORD PTR tv66[ebp], 0
jbe	SHORT $LN5@vector
mov	DWORD PTR tv67[ebp], 1
jmp	SHORT $LN6@vector
mov	DWORD PTR tv67[ebp], 0
cmp	DWORD PTR tv67[ebp], 0
je	SHORT $LN1@vector
mov	esi, esp
mov	ecx, DWORD PTR ___t$[ebp]
call	DWORD PTR ___f$[ebp]
cmp	esi, esp
call	__RTC_CheckEsp
mov	eax, DWORD PTR ___t$[ebp]
add	eax, DWORD PTR ___s$[ebp]
mov	DWORD PTR ___t$[ebp], eax
jmp	SHORT $LN2@vector
pop	edi
pop	esi
pop	ebx
add	esp, 200				
cmp	ebp, esp
call	__RTC_CheckEsp
mov	esp, ebp
pop	ebp
ret	16					
ENDP

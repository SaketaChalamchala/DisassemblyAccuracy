; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23026.0 

	TITLE	C:\workspace\sumatrapdf-master\src\SumatraStartup.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

_BSS	SEGMENT
?GenericSansSerifFontFamily@Gdiplus@@3PAVFontFamily@1@A DD 01H DUP (?) ; Gdiplus::GenericSansSerifFontFamily
?GenericSerifFontFamily@Gdiplus@@3PAVFontFamily@1@A DD 01H DUP (?) ; Gdiplus::GenericSerifFontFamily
?GenericMonospaceFontFamily@Gdiplus@@3PAVFontFamily@1@A DD 01H DUP (?) ; Gdiplus::GenericMonospaceFontFamily
?GenericSansSerifFontFamilyBuffer@Gdiplus@@3PAEA DB 08H DUP (?) ; Gdiplus::GenericSansSerifFontFamilyBuffer
?GenericSerifFontFamilyBuffer@Gdiplus@@3PAEA DB 08H DUP (?) ; Gdiplus::GenericSerifFontFamilyBuffer
?GenericMonospaceFontFamilyBuffer@Gdiplus@@3PAEA DB 08H DUP (?) ; Gdiplus::GenericMonospaceFontFamilyBuffer
?gFileExistenceChecker@@3PAVFileExistenceChecker@@A DD 01H DUP (?) ; gFileExistenceChecker
?GenericTypographicStringFormatBuffer@Gdiplus@@3PAEA DB 08H DUP (?) ; Gdiplus::GenericTypographicStringFormatBuffer
?GenericDefaultStringFormatBuffer@Gdiplus@@3PAEA DB 08H DUP (?) ; Gdiplus::GenericDefaultStringFormatBuffer
_BSS	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?wcschr@@YAPA_WPA_W_W@Z				; wcschr
PUBLIC	_WinMain@16
PUBLIC	??0GdiplusStartupInput@Gdiplus@@QAE@P6GXW4DebugEventLevel@1@PAD@ZHH@Z ; Gdiplus::GdiplusStartupInput::GdiplusStartupInput
PUBLIC	??$__vcrt_va_start_verify_argument_type@PB_W@@YAXXZ ; __vcrt_va_start_verify_argument_type<wchar_t const *>
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?CrashMe@@YAXXZ					; CrashMe
PUBLIC	?CrashIfFunc@@YAX_N@Z				; CrashIfFunc
PUBLIC	??0?$RectT@H@geomutil@@QAE@XZ			; geomutil::RectT<int>::RectT<int>
PUBLIC	??0ClientRect@@QAE@PAUHWND__@@@Z		; ClientRect::ClientRect
PUBLIC	??0ScopedOle@@QAE@XZ				; ScopedOle::ScopedOle
PUBLIC	??1ScopedOle@@QAE@XZ				; ScopedOle::~ScopedOle
PUBLIC	??0ScopedGdiPlus@@QAE@_N@Z			; ScopedGdiPlus::ScopedGdiPlus
PUBLIC	??1ScopedGdiPlus@@QAE@XZ			; ScopedGdiPlus::~ScopedGdiPlus
PUBLIC	?FindChar@str@@YAPA_WPA_W_W@Z			; str::FindChar
PUBLIC	?Find@str@@YAPB_WPB_W0@Z			; str::Find
PUBLIC	?EnsureCapTry@?$Vec@PA_W@@IAE_NI@Z		; Vec<wchar_t *>::EnsureCapTry
PUBLIC	?EnsureCapCrash@?$Vec@PA_W@@IAEXI@Z		; Vec<wchar_t *>::EnsureCapCrash
PUBLIC	?MakeSpaceAt@?$Vec@PA_W@@IAEPAPA_WII_N@Z	; Vec<wchar_t *>::MakeSpaceAt
PUBLIC	?FreeEls@?$Vec@PA_W@@IAEXXZ			; Vec<wchar_t *>::FreeEls
PUBLIC	??0?$Vec@PA_W@@QAE@IPAVAllocator@@@Z		; Vec<wchar_t *>::Vec<wchar_t *>
PUBLIC	??1?$Vec@PA_W@@QAE@XZ				; Vec<wchar_t *>::~Vec<wchar_t *>
PUBLIC	?FreeMembers@?$Vec@PA_W@@QAEXXZ			; Vec<wchar_t *>::FreeMembers
PUBLIC	?Reset@?$Vec@PA_W@@QAEXXZ			; Vec<wchar_t *>::Reset
PUBLIC	?At@?$Vec@PA_W@@QBEAAPA_WI@Z			; Vec<wchar_t *>::At
PUBLIC	?Count@?$Vec@PA_W@@QBEIXZ			; Vec<wchar_t *>::Count
PUBLIC	?InsertAt@?$Vec@PA_W@@QAEXIABQA_W@Z		; Vec<wchar_t *>::InsertAt
PUBLIC	?Append@?$Vec@PA_W@@QAEXABQA_W@Z		; Vec<wchar_t *>::Append
PUBLIC	?RemoveAt@?$Vec@PA_W@@QAEXII@Z			; Vec<wchar_t *>::RemoveAt
PUBLIC	?RemoveAtFast@?$Vec@PA_W@@QAEXI@Z		; Vec<wchar_t *>::RemoveAtFast
PUBLIC	?Pop@?$Vec@PA_W@@QAEPA_WXZ			; Vec<wchar_t *>::Pop
PUBLIC	?PopAt@?$Vec@PA_W@@QAEPA_WI@Z			; Vec<wchar_t *>::PopAt
PUBLIC	?begin@?$Vec@PA_W@@QAE?AVIter@1@XZ		; Vec<wchar_t *>::begin
PUBLIC	?end@?$Vec@PA_W@@QAE?AVIter@1@XZ		; Vec<wchar_t *>::end
PUBLIC	??0WStrVec@@QAE@XZ				; WStrVec::WStrVec
PUBLIC	??1WStrVec@@QAE@XZ				; WStrVec::~WStrVec
PUBLIC	?Find@WStrVec@@QBEHPB_WI@Z			; WStrVec::Find
PUBLIC	?Contains@WStrVec@@QBE_NPB_W@Z			; WStrVec::Contains
PUBLIC	?Split@WStrVec@@QAEIPB_W0_N@Z			; WStrVec::Split
PUBLIC	?EnsureCapTry@?$Vec@_W@@IAE_NI@Z		; Vec<wchar_t>::EnsureCapTry
PUBLIC	?EnsureCapCrash@?$Vec@_W@@IAEXI@Z		; Vec<wchar_t>::EnsureCapCrash
PUBLIC	?MakeSpaceAt@?$Vec@_W@@IAEPA_WII_N@Z		; Vec<wchar_t>::MakeSpaceAt
PUBLIC	?FreeEls@?$Vec@_W@@IAEXXZ			; Vec<wchar_t>::FreeEls
PUBLIC	??0?$Vec@_W@@QAE@IPAVAllocator@@@Z		; Vec<wchar_t>::Vec<wchar_t>
PUBLIC	??1?$Vec@_W@@QAE@XZ				; Vec<wchar_t>::~Vec<wchar_t>
PUBLIC	?Reset@?$Vec@_W@@QAEXXZ				; Vec<wchar_t>::Reset
PUBLIC	?Size@?$Vec@_W@@QBEIXZ				; Vec<wchar_t>::Size
PUBLIC	?Append@?$Vec@_W@@QAEXPB_WI@Z			; Vec<wchar_t>::Append
PUBLIC	??0?$Str@_W@str@@QAE@IPAVAllocator@@@Z		; str::Str<wchar_t>::Str<wchar_t>
PUBLIC	?Append@?$Str@_W@str@@QAEXPB_WI@Z		; str::Str<wchar_t>::Append
PUBLIC	?AppendFmt@?$Str@_W@str@@QAAXPB_WZZ		; str::Str<wchar_t>::AppendFmt
PUBLIC	?AppendAndFree@?$Str@_W@str@@QAEXPA_W@Z		; str::Str<wchar_t>::AppendAndFree
PUBLIC	?Get@?$Str@_W@str@@QBEPA_WXZ			; str::Str<wchar_t>::Get
PUBLIC	??1?$Str@_W@str@@QAE@XZ				; str::Str<wchar_t>::~Str<wchar_t>
PUBLIC	??0?$ScopedMem@D@@QAE@PAD@Z			; ScopedMem<char>::ScopedMem<char>
PUBLIC	??1?$ScopedMem@D@@QAE@XZ			; ScopedMem<char>::~ScopedMem<char>
PUBLIC	??B?$ScopedMem@D@@QBEPADXZ			; ScopedMem<char>::operator char *
PUBLIC	?WasCancelRequested@ThreadBase@@IAE_NXZ		; ThreadBase::WasCancelRequested
PUBLIC	?MoveWindow@@YAXPAUHWND__@@V?$RectT@H@geomutil@@@Z ; MoveWindow
PUBLIC	??0?$PointT@H@geomutil@@QAE@HH@Z		; geomutil::PointT<int>::PointT<int>
PUBLIC	??0ScrollState@@QAE@HNN@Z			; ScrollState::ScrollState
PUBLIC	?UpdateStatesSource@FileHistory@@QAEXPAV?$Vec@PAUFileState@@@@@Z ; FileHistory::UpdateStatesSource
PUBLIC	?FreeEls@?$Vec@PAUFileState@@@@IAEXXZ		; Vec<FileState *>::FreeEls
PUBLIC	??0?$Vec@PAUFileState@@@@QAE@IPAVAllocator@@@Z	; Vec<FileState *>::Vec<FileState *>
PUBLIC	??1?$Vec@PAUFileState@@@@QAE@XZ			; Vec<FileState *>::~Vec<FileState *>
PUBLIC	?Reset@?$Vec@PAUFileState@@@@QAEXXZ		; Vec<FileState *>::Reset
PUBLIC	?At@?$Vec@PAUFileState@@@@QBEAAPAUFileState@@I@Z ; Vec<FileState *>::At
PUBLIC	?Count@?$Vec@PAUFileState@@@@QBEIXZ		; Vec<FileState *>::Count
PUBLIC	??0?$ScopedMem@_W@@QAE@XZ			; ScopedMem<wchar_t>::ScopedMem<wchar_t>
PUBLIC	??0?$ScopedMem@_W@@QAE@PA_W@Z			; ScopedMem<wchar_t>::ScopedMem<wchar_t>
PUBLIC	??1?$ScopedMem@_W@@QAE@XZ			; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
PUBLIC	?Set@?$ScopedMem@_W@@QAEXPA_W@Z			; ScopedMem<wchar_t>::Set
PUBLIC	?Get@?$ScopedMem@_W@@QBEPA_WXZ			; ScopedMem<wchar_t>::Get
PUBLIC	??B?$ScopedMem@_W@@QBEPA_WXZ			; ScopedMem<wchar_t>::operator wchar_t *
PUBLIC	?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z ; Vec<WindowInfo *>::At
PUBLIC	?Count@?$Vec@PAVWindowInfo@@@@QBEIXZ		; Vec<WindowInfo *>::Count
PUBLIC	?GetLogoBgColor@@YAKXZ				; GetLogoBgColor
PUBLIC	?GetAboutBgColor@@YAKXZ				; GetAboutBgColor
PUBLIC	?GetNoDocBgColor@@YAKXZ				; GetNoDocBgColor
PUBLIC	??0LoadArgs@@QAE@PB_WPAVWindowInfo@@@Z		; LoadArgs::LoadArgs
PUBLIC	?FreeEls@?$Vec@V?$RectT@H@geomutil@@@@IAEXXZ	; Vec<geomutil::RectT<int> >::FreeEls
PUBLIC	??0?$Vec@V?$RectT@H@geomutil@@@@QAE@IPAVAllocator@@@Z ; Vec<geomutil::RectT<int> >::Vec<geomutil::RectT<int> >
PUBLIC	??1?$Vec@V?$RectT@H@geomutil@@@@QAE@XZ		; Vec<geomutil::RectT<int> >::~Vec<geomutil::RectT<int> >
PUBLIC	?Reset@?$Vec@V?$RectT@H@geomutil@@@@QAEXXZ	; Vec<geomutil::RectT<int> >::Reset
PUBLIC	?EnsureCapTry@?$Vec@H@@IAE_NI@Z			; Vec<int>::EnsureCapTry
PUBLIC	?EnsureCapCrash@?$Vec@H@@IAEXI@Z		; Vec<int>::EnsureCapCrash
PUBLIC	??4?$Vec@H@@QAEAAV0@ABV0@@Z			; Vec<int>::operator=
PUBLIC	?AsFixed@TabInfo@@QBEPAVDisplayModel@@XZ	; TabInfo::AsFixed
PUBLIC	?AsEbook@TabInfo@@QBEPAVEbookController@@XZ	; TabInfo::AsEbook
PUBLIC	??0CommandLineInfo@@QAE@XZ			; CommandLineInfo::CommandLineInfo
PUBLIC	??1CommandLineInfo@@QAE@XZ			; CommandLineInfo::~CommandLineInfo
PUBLIC	?GetFilePathsToCheck@FileExistenceChecker@@AAEXXZ ; FileExistenceChecker::GetFilePathsToCheck
PUBLIC	?HideMissingFiles@FileExistenceChecker@@AAEXXZ	; FileExistenceChecker::HideMissingFiles
PUBLIC	?Terminate@FileExistenceChecker@@AAEXXZ		; FileExistenceChecker::Terminate
PUBLIC	??0FileExistenceChecker@@QAE@XZ			; FileExistenceChecker::FileExistenceChecker
PUBLIC	?Run@FileExistenceChecker@@UAEXXZ		; FileExistenceChecker::Run
PUBLIC	??1FileExistenceChecker@@UAE@XZ			; FileExistenceChecker::~FileExistenceChecker
PUBLIC	??_GFileExistenceChecker@@UAEPAXI@Z		; FileExistenceChecker::`scalar deleting destructor'
PUBLIC	??0Iter@?$Vec@PA_W@@QAE@PAV1@I@Z		; Vec<wchar_t *>::Iter::Iter
PUBLIC	??9Iter@?$Vec@PA_W@@QBE_NABV01@@Z		; Vec<wchar_t *>::Iter::operator!=
PUBLIC	??DIter@?$Vec@PA_W@@QBEAAPA_WXZ			; Vec<wchar_t *>::Iter::operator*
PUBLIC	??EIter@?$Vec@PA_W@@QAEAAV01@XZ			; Vec<wchar_t *>::Iter::operator++
PUBLIC	??0?$_Func_class@X$$V@std@@QAE@XZ		; std::_Func_class<void>::_Func_class<void>
PUBLIC	??1?$_Func_class@X$$V@std@@QAE@XZ		; std::_Func_class<void>::~_Func_class<void>
PUBLIC	?_Empty@?$_Func_class@X$$V@std@@IBE_NXZ		; std::_Func_class<void>::_Empty
PUBLIC	?_Tidy@?$_Func_class@X$$V@std@@IAEXXZ		; std::_Func_class<void>::_Tidy
PUBLIC	?_Local@?$_Func_class@X$$V@std@@ABE_NXZ		; std::_Func_class<void>::_Local
PUBLIC	?_Getimpl@?$_Func_class@X$$V@std@@ABEPAV?$_Func_base@X$$V@2@XZ ; std::_Func_class<void>::_Getimpl
PUBLIC	?_Set@?$_Func_class@X$$V@std@@AAEXPAV?$_Func_base@X$$V@2@@Z ; std::_Func_class<void>::_Set
PUBLIC	?_Getspace@?$_Func_class@X$$V@std@@AAEPAXXZ	; std::_Func_class<void>::_Getspace
PUBLIC	?_Getspace@?$_Func_class@X$$V@std@@ABEPBXXZ	; std::_Func_class<void>::_Getspace
PUBLIC	??1?$function@$$A6AXXZ@std@@QAE@XZ		; std::function<void __cdecl(void)>::~function<void __cdecl(void)>
PUBLIC	??$?0V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$function@$$A6AXXZ@std@@QAE@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_b6f3cb1c717d8c8a816f87295491882e> >
PUBLIC	??$StartsWith@D@str@@YA_NPBD0@Z			; str::StartsWith<char>
PUBLIC	?At@?$Vec@PAUSessionData@@@@QBEAAPAUSessionData@@I@Z ; Vec<SessionData *>::At
PUBLIC	?Count@?$Vec@PAUSessionData@@@@QBEIXZ		; Vec<SessionData *>::Count
PUBLIC	?begin@?$Vec@PAUSessionData@@@@QAE?AVIter@1@XZ	; Vec<SessionData *>::begin
PUBLIC	?end@?$Vec@PAUSessionData@@@@QAE?AVIter@1@XZ	; Vec<SessionData *>::end
PUBLIC	??0Iter@?$Vec@PAUSessionData@@@@QAE@PAV1@I@Z	; Vec<SessionData *>::Iter::Iter
PUBLIC	??9Iter@?$Vec@PAUSessionData@@@@QBE_NABV01@@Z	; Vec<SessionData *>::Iter::operator!=
PUBLIC	??DIter@?$Vec@PAUSessionData@@@@QBEAAPAUSessionData@@XZ ; Vec<SessionData *>::Iter::operator*
PUBLIC	??EIter@?$Vec@PAUSessionData@@@@QAEAAV01@XZ	; Vec<SessionData *>::Iter::operator++
PUBLIC	?At@?$Vec@PAUTabState@@@@QBEAAPAUTabState@@I@Z	; Vec<TabState *>::At
PUBLIC	?begin@?$Vec@PAUTabState@@@@QAE?AVIter@1@XZ	; Vec<TabState *>::begin
PUBLIC	?end@?$Vec@PAUTabState@@@@QAE?AVIter@1@XZ	; Vec<TabState *>::end
PUBLIC	??0Iter@?$Vec@PAUTabState@@@@QAE@PAV1@I@Z	; Vec<TabState *>::Iter::Iter
PUBLIC	??9Iter@?$Vec@PAUTabState@@@@QBE_NABV01@@Z	; Vec<TabState *>::Iter::operator!=
PUBLIC	??DIter@?$Vec@PAUTabState@@@@QBEAAPAUTabState@@XZ ; Vec<TabState *>::Iter::operator*
PUBLIC	??EIter@?$Vec@PAUTabState@@@@QAEAAV01@XZ	; Vec<TabState *>::Iter::operator++
PUBLIC	??0?$_Func_base@X$$V@std@@QAE@XZ		; std::_Func_base<void>::_Func_base<void>
PUBLIC	??1?$_Func_base@X$$V@std@@QAE@XZ		; std::_Func_base<void>::~_Func_base<void>
PUBLIC	??$max@I@std@@YAABIABI0@Z			; std::max<unsigned int>
PUBLIC	??$move@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ; std::move<<lambda_b6f3cb1c717d8c8a816f87295491882e> &>
PUBLIC	??$_Reset@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ; std::_Func_class<void>::_Reset<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
PUBLIC	??$_Debug_lt@ABIABI@std@@YA_NABI0PB_WI@Z	; std::_Debug_lt<unsigned int const &,unsigned int const &>
PUBLIC	??$forward@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
PUBLIC	??0?$allocator@H@std@@QAE@XZ			; std::allocator<int>::allocator<int>
PUBLIC	??0?$allocator@H@std@@QAE@ABV01@@Z		; std::allocator<int>::allocator<int>
PUBLIC	??$_Reset_alloc@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ; std::_Func_class<void>::_Reset_alloc<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> >
PUBLIC	??$forward@ABI@std@@YAABIABI@Z			; std::forward<unsigned int const &>
PUBLIC	??$_Debug_lt_pred@U?$less@X@std@@ABIABI@std@@YA_NU?$less@X@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<void>,unsigned int const &,unsigned int const &>
PUBLIC	??$_Test_callable@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA_NABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ; std::_Test_callable<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
PUBLIC	?deallocate@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@2@I@Z ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::deallocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::deallocate
PUBLIC	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > ><std::allocator<int> >
PUBLIC	??$?0H@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAE@ABV?$allocator@H@1@@Z ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> ><int>
PUBLIC	??1?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAE@XZ ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::~_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>
PUBLIC	?_Copy@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EBEPAV?$_Func_base@X$$V@2@PAX@Z ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Copy
PUBLIC	?_Move@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EAEPAV?$_Func_base@X$$V@2@PAX@Z ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Move
PUBLIC	?_Do_call@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EAEXXZ ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Do_call
PUBLIC	?_Target_type@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EBEABVtype_info@@XZ ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Target_type
PUBLIC	?_Get@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EBEPBXXZ ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Get
PUBLIC	?_Delete_this@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EAEX_N@Z ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Delete_this
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAEAAV?$allocator@H@2@XZ ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QBEABV?$allocator@H@2@XZ ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAEAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@XZ ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QBEABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@XZ ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Get_second
PUBLIC	?_Myax@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Myax
PUBLIC	?_Myax@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABEABV?$allocator@H@2@XZ ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Myax
PUBLIC	?_Callee@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@AAEAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@XZ ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Callee
PUBLIC	?_Callee@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABEABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@XZ ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Callee
PUBLIC	??_G?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAEPAXI@Z ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::`scalar deleting destructor'
PUBLIC	??$_Reset_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@3@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z ; std::_Func_class<void>::_Reset_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > > >
PUBLIC	??$?RABIABI@?$less@X@std@@QBE_NABI0@Z		; std::less<void>::operator()<unsigned int const &,unsigned int const &>
PUBLIC	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > ><std::allocator<int> >
PUBLIC	??$destroy@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::destroy<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >
PUBLIC	??$addressof@$$CBV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAPBV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV1@@Z ; std::addressof<<lambda_b6f3cb1c717d8c8a816f87295491882e> const >
PUBLIC	??$forward@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> &>
PUBLIC	??$_Call@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$V@_Invoker_functor@std@@SAXAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ; std::_Invoker_functor::_Call<<lambda_b6f3cb1c717d8c8a816f87295491882e> &>
PUBLIC	??$invoke@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$V@std@@YAXAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ; std::invoke<<lambda_b6f3cb1c717d8c8a816f87295491882e> &>
PUBLIC	??$_Invoke_ret@XAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAXU?$_Forced@X$00@0@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ; std::_Invoke_ret<void,<lambda_b6f3cb1c717d8c8a816f87295491882e> &>
PUBLIC	??$move@AAV?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z ; std::move<std::allocator<int> &>
PUBLIC	??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$QAV?$allocator@H@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> >
PUBLIC	??$_Clone@X@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABEPAV?$_Func_base@X$$V@1@PAXU?$integral_constant@_N$0A@@1@@Z ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Clone<void>
PUBLIC	??$_Deallocate@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@YAXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@0@I@Z ; std::_Deallocate<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >
PUBLIC	??$_Test_callable@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA_NABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
PUBLIC	??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> const &>
PUBLIC	??$destroy@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@@Z ; std::allocator_traits<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::destroy<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >
PUBLIC	??$_Addressof@$$CBV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAPBV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV1@U?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<<lambda_b6f3cb1c717d8c8a816f87295491882e> const >
PUBLIC	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z ; std::forward<std::allocator<int> >
PUBLIC	??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$QAV?$allocator@H@1@@Z ; std::allocator_traits<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> >
PUBLIC	??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e> const &,std::allocator<int> const &>
PUBLIC	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z ; std::forward<std::allocator<int> const &>
PUBLIC	??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ; std::allocator_traits<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> const &>
PUBLIC	??$destroy@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@@Z ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::destroy<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >
PUBLIC	??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$QAV?$allocator@H@1@@Z ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> >
PUBLIC	??$forward@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> const &>
PUBLIC	??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ; std::allocator_traits<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e> const &,std::allocator<int> const &>
PUBLIC	??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> const &>
PUBLIC	??$?0V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$QAV?$allocator@H@1@@Z ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void><<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> >
PUBLIC	??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e> const &,std::allocator<int> const &>
PUBLIC	??$?0V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void><<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> const &>
PUBLIC	??$?0V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1><std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e> >
PUBLIC	??$?0ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAE@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void><<lambda_b6f3cb1c717d8c8a816f87295491882e> const &,std::allocator<int> const &>
PUBLIC	??$?0ABV?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1><std::allocator<int> const &,<lambda_b6f3cb1c717d8c8a816f87295491882e> >
PUBLIC	??$?0ABV?$allocator@H@std@@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1><std::allocator<int> const &,<lambda_b6f3cb1c717d8c8a816f87295491882e> const &>
PUBLIC	??_C@_1BK@JCIKOMDH@?$AAm?$AAe?$AAm?$AAt?$AAr?$AAa?$AAc?$AAe?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@ ; `string'
PUBLIC	??_7FileExistenceChecker@@6B@			; FileExistenceChecker::`vftable'
PUBLIC	?__LINE__Var@?0??MakePluginWindow@@YAXAAVWindowInfo@@PAUHWND__@@@Z@4JA ; `MakePluginWindow'::`1'::__LINE__Var
PUBLIC	??_C@_1GM@OAGNGMKE@?$AAc?$AA?3?$AA?2?$AAw?$AAo?$AAr?$AAk?$AAs?$AAp?$AAa?$AAc?$AAe?$AA?2?$AAs?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAp?$AAd?$AAf?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs@ ; `string'
PUBLIC	??_C@_1CK@HMBMIIMN@?$AAI?$AAs?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?$CI?$AAh?$AAw?$AAn?$AAd?$AAP?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@NNHHJJEP@?$AAg?$AAP?$AAl?$AAu?$AAg?$AAi?$AAn?$AAM?$AAo?$AAd?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CE@PHGKLOIF@?$AAS?$AAU?$AAM?$AAA?$AAT?$AAR?$AAA?$AA_?$AAP?$AAD?$AAF?$AA_?$AAF?$AAR?$AAA?$AAM?$AAE?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CG@HPLMACE@?$AAS?$AAU?$AAM?$AAA?$AAT?$AAR?$AAA?$AA_?$AAP?$AAD?$AAF?$AA_?$AAC?$AAA?$AAN?$AAV?$AAA?$AAS?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CO@JNHOBPBF@?$AAS?$AAU?$AAM?$AAA?$AAT?$AAR?$AAA?$AA_?$AAP?$AAD?$AAF?$AA_?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAI?$AAE?$AAS?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CM@GPNKFOGI@?$AA?$FL?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA0?$AA?0?$AA?5?$AA1?$AA?0?$AA?5?$AA0?$AA?$CJ?$AA?$FN?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DI@LKFLACJO@?$AA?$FL?$AAG?$AAo?$AAt?$AAo?$AAN?$AAa?$AAm?$AAe?$AAd?$AAD?$AAe?$AAs?$AAt?$AA?$CI?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?$CJ?$AA?$FN?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CK@JBMPFIK@?$AA?$FL?$AAG?$AAo?$AAt?$AAo?$AAP?$AAa?$AAg?$AAe?$AA?$CI?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$FN?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EI@KKJLKIFH@?$AA?$FL?$AAS?$AAe?$AAt?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CF?$AA?4?$AA2?$AAf?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AA?$CF@ ; `string'
PUBLIC	??_C@_1FC@FIABJECI@?$AA?$FL?$AAF?$AAo?$AAr?$AAw?$AAa?$AAr?$AAd?$AAS?$AAe?$AAa?$AAr?$AAc?$AAh?$AA?$CI?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1BA@IBGCEPCN@?$AAc?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BA@DNELNMNE@?$AAS?$AAU?$AAM?$AAA?$AAT?$AAR?$AAA?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??SetupPluginMode@@YA_NAAVCommandLineInfo@@@Z@4JA ; `SetupPluginMode'::`1'::__LINE__Var
PUBLIC	??_C@_1DC@NHINHEEK@?$AAi?$AA?4?$AAf?$AAi?$AAl?$AAe?$AAN?$AAa?$AAm?$AAe?$AAs?$AA?4?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA1?$AA?$AA@ ; `string'
PUBLIC	??_C@_13FLOCNAAB@?$AA?$CG?$AA?$AA@		; `string'
PUBLIC	??_C@_13GMDMCADD@?$AA?$CD?$AA?$AA@		; `string'
PUBLIC	??_C@_1M@BOBDMABN@?$AAp?$AAa?$AAg?$AAe?$AA?$DN?$AA?$AA@ ; `string'
PUBLIC	??_C@_1M@ILEIMEED@?$AA?$DN?$AA?$CF?$AAd?$AA?$CF?$AA$?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@PKGIHOED@?$AAn?$AAa?$AAm?$AAe?$AAd?$AAd?$AAe?$AAs?$AAt?$AA?$DN?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CG@PBNBCKFL@?$AAS?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAP?$AAD?$AAF?$AA?9?$AAs?$AAy?$AAm?$AAb?$AAo?$AAl?$AAs?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CI@KINBKILN@?$AAs?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAp?$AAd?$AAf?$AAc?$AAr?$AAa?$AAs?$AAh?$AA?4?$AAd?$AAm?$AAp?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CA@IEDCKEJO@?$AAS?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAP?$AAD?$AAF?$AA?9?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AA@ ; `string'
PUBLIC	??_C@_19GMJJNAOJ@?$AA?4?$AAp?$AAd?$AAf?$AA?$AA@	; `string'
PUBLIC	?__LINE__Var@?0??WinMain@@9@16@4JA		; `WinMain'::`1'::__LINE__Var
PUBLIC	??_C@_01GFHCPBMG@C?$AA@				; `string'
PUBLIC	??_C@_07PDKPIFNG@?1tester?$AA@			; `string'
PUBLIC	??_C@_08LLPLCEMM@?1regress?$AA@			; `string'
PUBLIC	??_C@_05PDJBBECF@pause?$AA@			; `string'
PUBLIC	??_C@_03ICICOMAL@yes?$AA@			; `string'
PUBLIC	??_C@_04LOAJBDKD@true?$AA@			; `string'
PUBLIC	??_C@_04HAPDLBFF@auto?$AA@			; `string'
PUBLIC	??_C@_1BI@HAGDNPLN@?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AAD?$AAa?$AAt?$AAa?$AA?$AA@ ; `string'
PUBLIC	??_C@_0DG@CPCMILPH@c?3?2workspace?2sumatrapdf?9master?2s@ ; `string'
PUBLIC	??_7?$_Func_base@X$$V@std@@6B@			; std::_Func_base<void>::`vftable'
PUBLIC	??_C@_1JC@ELNBGKIG@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_7?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@6B@ ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::`vftable'
PUBLIC	??_C@_1CG@LEJCKCBB@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_R0?AV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@8 ; <lambda_b6f3cb1c717d8c8a816f87295491882e> `RTTI Type Descriptor'
PUBLIC	??_C@_0CG@FHBDFCGK@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5sizeof?5@ ; `string'
PUBLIC	??_C@_1FK@EJGLHMGC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf@ ; `string'
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@	; `string'
PUBLIC	??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@ ; `string'
PUBLIC	??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@ ; `string'
PUBLIC	??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@ ; `string'
PUBLIC	??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@ ; `string'
PUBLIC	??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@ ; `string'
PUBLIC	??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ ; `string'
PUBLIC	??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@ ; `string'
PUBLIC	??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@ ; `string'
PUBLIC	??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@ ; `string'
PUBLIC	__real@c0000000
PUBLIC	__real@c2c60000
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__invalid_parameter:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	_wcschr:PROC
EXTRN	_wcsstr:PROC
EXTRN	__imp__GetCurrentProcessId@0:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__SetErrorMode@4:PROC
EXTRN	__imp__Sleep@4:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__MapViewOfFile@20:PROC
EXTRN	__imp__UnmapViewOfFile@4:PROC
EXTRN	__imp__CreateFileMappingW@24:PROC
EXTRN	__imp__LoadLibraryW@4:PROC
EXTRN	__imp__GetModuleHandleW@4:PROC
EXTRN	__imp__GetCommandLineW@0:PROC
EXTRN	__imp__GetFullPathNameW@16:PROC
EXTRN	__imp__DeleteObject@4:PROC
EXTRN	__imp__GetStockObject@4:PROC
EXTRN	__imp__GetMessageW@16:PROC
EXTRN	__imp__TranslateMessage@4:PROC
EXTRN	__imp__DispatchMessageW@4:PROC
EXTRN	__imp__SendMessageW@16:PROC
EXTRN	__imp__RegisterClassExW@4:PROC
EXTRN	__imp__IsWindow@4:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__MoveWindow@24:PROC
EXTRN	__imp__IsIconic@4:PROC
EXTRN	__imp__SetFocus@4:PROC
EXTRN	__imp__LoadAcceleratorsW@8:PROC
EXTRN	__imp__TranslateAcceleratorW@12:PROC
EXTRN	__imp__UpdateWindow@4:PROC
EXTRN	__imp__SetForegroundWindow@4:PROC
EXTRN	__imp__AllowSetForegroundWindow@4:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__GetSysColor@4:PROC
EXTRN	__imp__GetWindowLongW@8:PROC
EXTRN	__imp__SetWindowLongW@12:PROC
EXTRN	__imp__SetParent@8:PROC
EXTRN	__imp__FindWindowW@8:PROC
EXTRN	__imp__FindWindowExW@16:PROC
EXTRN	__imp__GetWindowThreadProcessId@8:PROC
EXTRN	__imp__LoadBitmapW@8:PROC
EXTRN	__imp__LoadCursorW@8:PROC
EXTRN	__imp__LoadIconW@8:PROC
EXTRN	__imp__SHGetFileInfoW@20:PROC
EXTRN	_srand:PROC
EXTRN	_system:PROC
EXTRN	__imp__OleInitialize@4:PROC
EXTRN	__imp__OleUninitialize@0:PROC
EXTRN	_GdiplusStartup@12:PROC
EXTRN	_GdiplusShutdown@4:PROC
EXTRN	??2@YAPAXIHPBDH@Z:PROC				; operator new
EXTRN	__CrtSetDbgFlag:PROC
EXTRN	__free_dbg:PROC
EXTRN	__CrtDbgReportW:PROC
EXTRN	?_Debug_message@std@@YAXPB_W0I@Z:PROC		; std::_Debug_message
EXTRN	__wassert:PROC
EXTRN	__time64:PROC
EXTRN	_setlocale:PROC
EXTRN	?MurmurHash2@@YAIPBXI@Z:PROC			; MurmurHash2
EXTRN	?Free@Allocator@@SAXPAV1@PAX@Z:PROC		; Allocator::Free
EXTRN	?Realloc@Allocator@@SAPAXPAV1@PAXI@Z:PROC	; Allocator::Realloc
EXTRN	?Dup@Allocator@@SAPAXPAV1@PBXII@Z:PROC		; Allocator::Dup
EXTRN	?Len@str@@YAIPBD@Z:PROC				; str::Len
EXTRN	?Len@str@@YAIPB_W@Z:PROC			; str::Len
EXTRN	?Dup@str@@YAPA_WPB_W@Z:PROC			; str::Dup
EXTRN	?ReplacePtr@str@@YAXPAPA_WPB_W@Z:PROC		; str::ReplacePtr
EXTRN	?Eq@str@@YA_NPB_W0@Z:PROC			; str::Eq
EXTRN	?EqI@str@@YA_NPBD0@Z:PROC			; str::EqI
EXTRN	?EqI@str@@YA_NPB_W0@Z:PROC			; str::EqI
EXTRN	?EqN@str@@YA_NPBD0I@Z:PROC			; str::EqN
EXTRN	?StartsWithI@str@@YA_NPB_W0@Z:PROC		; str::StartsWithI
EXTRN	?DupN@str@@YAPA_WPB_WI@Z:PROC			; str::DupN
EXTRN	?ToLower@str@@YAXPA_W@Z:PROC			; str::ToLower
EXTRN	?FmtV@str@@YAPA_WPB_WPAD@Z:PROC			; str::FmtV
EXTRN	?Format@str@@YAPA_WPB_WZZ:PROC			; str::Format
EXTRN	?TransChars@str@@YAIPA_WPB_W1@Z:PROC		; str::TransChars
EXTRN	?Parse@str@@YAPB_WPB_W0ZZ:PROC			; str::Parse
EXTRN	?RememberCallstackLogs@dbghelp@@YAXXZ:PROC	; dbghelp::RememberCallstackLogs
EXTRN	?FreeCallstackLogs@dbghelp@@YAXXZ:PROC		; dbghelp::FreeCallstackLogs
EXTRN	?DpiRemoveAll@@YAXXZ:PROC			; DpiRemoveAll
EXTRN	?Join@path@@YAPA_WPB_W0@Z:PROC			; path::Join
EXTRN	?Normalize@path@@YAPA_WPB_W@Z:PROC		; path::Normalize
EXTRN	?IsOnFixedDrive@path@@YA_NPB_W@Z:PROC		; path::IsOnFixedDrive
EXTRN	?GetTempPathW@path@@YAPA_WPB_W@Z:PROC		; path::GetTempPathW
EXTRN	?GetAppPath@path@@YAPA_WPB_W@Z:PROC		; path::GetAppPath
EXTRN	?GetInstance@@YAPAUHINSTANCE__@@XZ:PROC		; GetInstance
EXTRN	?FileWatcherWaitForShutdown@@YAXXZ:PROC		; FileWatcherWaitForShutdown
EXTRN	?RegisterLabelWithCloseWnd@@YAXXZ:PROC		; RegisterLabelWithCloseWnd
EXTRN	?Initialize@mui@@YAXXZ:PROC			; mui::Initialize
EXTRN	?Destroy@mui@@YAXXZ:PROC			; mui::Destroy
EXTRN	?RegisterSplitterWndClass@@YAXXZ:PROC		; RegisterSplitterWndClass
EXTRN	?DeleteSplitterBrush@@YAXXZ:PROC		; DeleteSplitterBrush
EXTRN	??1ThreadBase@@MAE@XZ:PROC			; ThreadBase::~ThreadBase
EXTRN	??0ThreadBase@@QAE@PBD@Z:PROC			; ThreadBase::ThreadBase
EXTRN	?Start@ThreadBase@@QAEXXZ:PROC			; ThreadBase::Start
EXTRN	?Join@ThreadBase@@QAE_NK@Z:PROC			; ThreadBase::Join
EXTRN	?Initialize@uitask@@YAXXZ:PROC			; uitask::Initialize
EXTRN	?Destroy@uitask@@YAXXZ:PROC			; uitask::Destroy
EXTRN	?DrainQueue@uitask@@YAXXZ:PROC			; uitask::DrainQueue
EXTRN	?Post@uitask@@YAXABV?$function@$$A6AXXZ@std@@@Z:PROC ; uitask::Post
EXTRN	?SafeCloseHandle@@YAHPAPAX@Z:PROC		; SafeCloseHandle
EXTRN	?FillWndClassEx@@YAXAAUtagWNDCLASSEXW@@PB_WP6GJPAUHWND__@@IIJ@Z@Z:PROC ; FillWndClassEx
EXTRN	?DisableDataExecution@@YAXXZ:PROC		; DisableDataExecution
EXTRN	?RedirectIOToConsole@@YAXXZ:PROC		; RedirectIOToConsole
EXTRN	?GetExePath@@YAPA_WXZ:PROC			; GetExePath
EXTRN	?GetDefaultGuiFont@@YAPAUHFONT__@@XZ:PROC	; GetDefaultGuiFont
EXTRN	?InitAllCommonControls@@YAXXZ:PROC		; InitAllCommonControls
EXTRN	?DDEExecute@@YA_NPB_W00@Z:PROC			; DDEExecute
EXTRN	?Relayout@DisplayModel@@QAEXMH@Z:PROC		; DisplayModel::Relayout
EXTRN	?GetScrollState@DisplayModel@@QAE?AUScrollState@@XZ:PROC ; DisplayModel::GetScrollState
EXTRN	?SetScrollState@DisplayModel@@QAEXUScrollState@@@Z:PROC ; DisplayModel::SetScrollState
EXTRN	?Get@FileHistory@@QBEPAUFileState@@I@Z:PROC	; FileHistory::Get
EXTRN	?MarkFileInexistent@FileHistory@@QAE_NPB_W_N@Z:PROC ; FileHistory::MarkFileInexistent
EXTRN	?GetFrequencyOrder@FileHistory@@QAEXAAV?$Vec@PAUFileState@@@@@Z:PROC ; FileHistory::GetFrequencyOrder
EXTRN	?ResetSessionState@@YAXPAV?$Vec@PAUSessionData@@@@@Z:PROC ; ResetSessionState
EXTRN	?FromDisplayMode@conv@prefs@@YAPB_WW4DisplayMode@@@Z:PROC ; prefs::conv::FromDisplayMode
EXTRN	?ToDisplayMode@conv@prefs@@YA?AW4DisplayMode@@PB_WW43@@Z:PROC ; prefs::conv::ToDisplayMode
EXTRN	?ToZoom@conv@prefs@@YAMPBDM@Z:PROC		; prefs::conv::ToZoom
EXTRN	?InitializePolicies@@YAX_N@Z:PROC		; InitializePolicies
EXTRN	?RestrictPolicies@@YAXH@Z:PROC			; RestrictPolicies
EXTRN	?HasPermission@@YA_NH@Z:PROC			; HasPermission
EXTRN	?AssociateExeWithPdfExtension@@YAXXZ:PROC	; AssociateExeWithPdfExtension
EXTRN	?SetSidebarVisibility@@YAXPAVWindowInfo@@_N1@Z:PROC ; SetSidebarVisibility
EXTRN	?FindWindowInfoByHwnd@@YAPAVWindowInfo@@PAUHWND__@@@Z:PROC ; FindWindowInfoByHwnd
EXTRN	?LoadDocument@@YAPAVWindowInfo@@AAULoadArgs@@@Z:PROC ; LoadDocument
EXTRN	?CreateAndShowWindowInfo@@YAPAVWindowInfo@@PAUSessionData@@@Z:PROC ; CreateAndShowWindowInfo
EXTRN	?DocumentPathExists@@YA_NPB_W@Z:PROC		; DocumentPathExists
EXTRN	?EnterFullScreen@@YAXPAVWindowInfo@@_N@Z:PROC	; EnterFullScreen
EXTRN	?ExitFullScreen@@YAXPAVWindowInfo@@@Z:PROC	; ExitFullScreen
EXTRN	?SetCurrentLang@@YAXPBD@Z:PROC			; SetCurrentLang
EXTRN	?GetFixedPageUiColors@@YAXAAK0@Z:PROC		; GetFixedPageUiColors
EXTRN	?RebuildMenuBarForWindow@@YAXPAVWindowInfo@@@Z:PROC ; RebuildMenuBarForWindow
EXTRN	?UpdateCheckAsync@@YAXPAVWindowInfo@@_N@Z:PROC	; UpdateCheckAsync
EXTRN	?DeleteWindowInfo@@YAXPAVWindowInfo@@@Z:PROC	; DeleteWindowInfo
EXTRN	?WndProcFrame@@YGJPAUHWND__@@IIJ@Z:PROC		; WndProcFrame
EXTRN	?IsAboutWindow@WindowInfo@@QBE_NXZ:PROC		; WindowInfo::IsAboutWindow
EXTRN	?IsDocLoaded@WindowInfo@@QBE_NXZ:PROC		; WindowInfo::IsDocLoaded
EXTRN	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ:PROC ; WindowInfo::AsFixed
EXTRN	?RedrawAll@WindowInfo@@QAEX_N@Z:PROC		; WindowInfo::RedrawAll
EXTRN	?GotoNamedDest@LinkHandler@@QAEXPB_W@Z:PROC	; LinkHandler::GotoNamedDest
EXTRN	?SwitchToDisplayMode@@YAXPAVWindowInfo@@W4DisplayMode@@_N@Z:PROC ; SwitchToDisplayMode
EXTRN	?Load@prefs@@YA_NXZ:PROC			; prefs::Load
EXTRN	?CleanUp@prefs@@YAXXZ:PROC			; prefs::CleanUp
EXTRN	?RegisterForFileChanges@prefs@@YAXXZ:PROC	; prefs::RegisterForFileChanges
EXTRN	?UnregisterForFileChanges@prefs@@YAXXZ:PROC	; prefs::UnregisterForFileChanges
EXTRN	?IsRunningInPortableMode@@YA_NXZ:PROC		; IsRunningInPortableMode
EXTRN	?AppGenDataFilename@@YAPA_WPB_W@Z:PROC		; AppGenDataFilename
EXTRN	?SetAppDataPath@@YAXPB_W@Z:PROC			; SetAppDataPath
EXTRN	?IsExeAssociatedWithPdfExtension@@YA_NXZ:PROC	; IsExeAssociatedWithPdfExtension
EXTRN	?SaveCallstackLogs@@YAXXZ:PROC			; SaveCallstackLogs
EXTRN	?WndProcCanvas@@YGJPAUHWND__@@IIJ@Z:PROC	; WndProcCanvas
EXTRN	?RegisterCaptionWndClass@@YAXXZ:PROC		; RegisterCaptionWndClass
EXTRN	?InstallCrashHandler@@YAXPB_W0@Z:PROC		; InstallCrashHandler
EXTRN	?UninstallCrashHandler@@YAXXZ:PROC		; UninstallCrashHandler
EXTRN	?CleanUpThumbnailCache@@YAXAAVFileHistory@@@Z:PROC ; CleanUpThumbnailCache
EXTRN	?RegisterNotificationsWndClass@@YAXXZ:PROC	; RegisterNotificationsWndClass
EXTRN	?ParseCommandLine@CommandLineInfo@@QAEXPB_W@Z:PROC ; CommandLineInfo::ParseCommandLine
EXTRN	?UpdateGlobalPrefs@CommandLineInfo@@QAEXXZ:PROC	; CommandLineInfo::UpdateGlobalPrefs
EXTRN	?PrintFile@@YA_NPB_WPA_W_N0@Z:PROC		; PrintFile
EXTRN	?OnMenuPrint@@YAXPAVWindowInfo@@_N@Z:PROC	; OnMenuPrint
EXTRN	?ShowForwardSearchResult@@YAXPAVWindowInfo@@PB_WIIIIAAV?$Vec@V?$RectT@H@geomutil@@@@@Z:PROC ; ShowForwardSearchResult
EXTRN	?ZoomToSelection@@YAXPAVWindowInfo@@M_N1@Z:PROC	; ZoomToSelection
EXTRN	?Dialog_PdfAssociate@@YAHPAUHWND__@@PA_N@Z:PROC	; Dialog_PdfAssociate
EXTRN	?WndProcProperties@@YGJPAUHWND__@@IIJ@Z:PROC	; WndProcProperties
EXTRN	?TabsSelect@@YAXPAVWindowInfo@@H@Z:PROC		; TabsSelect
EXTRN	?Destroy@trans@@YAXXZ:PROC			; trans::Destroy
EXTRN	?Initialize@uia@@YAXXZ:PROC			; uia::Initialize
EXTRN	?BenchFileOrDir@@YAXAAVWStrVec@@@Z:PROC		; BenchFileOrDir
EXTRN	?StartStressTest@@YAXPAVCommandLineInfo@@PAVWindowInfo@@@Z:PROC ; StartStressTest
EXTRN	??_EFileExistenceChecker@@UAEPAXI@Z:PROC	; FileExistenceChecker::`vector deleting destructor'
EXTRN	_fz_redirect_dll_io_to_console:PROC
EXTRN	?TesterMain@@YAHXZ:PROC				; TesterMain
EXTRN	?RegressMain@@YAHXZ:PROC			; RegressMain
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
EXTRN	?gGlobalPrefs@@3PAUGlobalPrefs@@A:DWORD		; gGlobalPrefs
EXTRN	?gPluginURL@@3PB_WB:DWORD			; gPluginURL
EXTRN	?gWindows@@3V?$Vec@PAVWindowInfo@@@@A:BYTE	; gWindows
EXTRN	?gFileHistory@@3VFileHistory@@A:DWORD		; gFileHistory
EXTRN	?gRenderCache@@3VRenderCache@@A:BYTE		; gRenderCache
EXTRN	?gBitmapReloadingCue@@3PAUHBITMAP__@@A:DWORD	; gBitmapReloadingCue
EXTRN	?gCursorDrag@@3PAUHICON__@@A:DWORD		; gCursorDrag
EXTRN	?gCrashOnOpen@@3_NA:BYTE			; gCrashOnOpen
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@c2c60000
CONST	SEGMENT
__real@c2c60000 DD 0c2c60000r			; -99
CONST	ENDS
;	COMDAT __real@c0000000
CONST	SEGMENT
__real@c0000000 DD 0c0000000r			; -2
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
CONST	SEGMENT
??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'u', 00H
	DB	's', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '-', 00H, ' ', 00H, '_'
	DB	00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'c', 00H, 'o', 00H
	DB	'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e', 00H, 'r'
	DB	00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '_', 00H, 'N', 00H
	DB	'O', 00H, 'N', 00H, '_', 00H, 'U', 00H, 'S', 00H, 'E', 00H, 'R'
	DB	00H, '_', 00H, 'S', 00H, 'I', 00H, 'Z', 00H, 'E', 00H, '"', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
CONST	SEGMENT
??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@ DB '_Ptr_u'
	DB	'ser - _Ptr_container <= _NON_USER_SIZE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
CONST	SEGMENT
??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@ DB '"'
	DB	00H, '2', 00H, ' ', 00H, '*', 00H, ' ', 00H, 's', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, 'v', 00H, 'o'
	DB	00H, 'i', 00H, 'd', 00H, ' ', 00H, '*', 00H, ')', 00H, ' ', 00H
	DB	'<', 00H, '=', 00H, ' ', 00H, '_', 00H, 'P', 00H, 't', 00H, 'r'
	DB	00H, '_', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'-', 00H, ' ', 00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_'
	DB	00H, 'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H
	DB	'n', 00H, 'e', 00H, 'r', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
CONST	SEGMENT
??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@ DB '2'
	DB	' * sizeof(void *) <= _Ptr_user - _Ptr_container', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
CONST	SEGMENT
??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, '<', 00H, ' ', 00H, '_', 00H, 'P', 00H
	DB	't', 00H, 'r', 00H, '_', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
CONST	SEGMENT
??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@ DB '_Ptr_containe'
	DB	'r < _Ptr_user', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
CONST	SEGMENT
??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@ DB '"'
	DB	00H, 'r', 00H, 'e', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'p', 00H, 'r', 00H, 'e', 00H, 't', 00H, '_', 00H, 'c'
	DB	00H, 'a', 00H, 's', 00H, 't', 00H, '<', 00H, 'u', 00H, 'i', 00H
	DB	'n', 00H, 't', 00H, 'p', 00H, 't', 00H, 'r', 00H, '_', 00H, 't'
	DB	00H, ' ', 00H, '*', 00H, '>', 00H, '(', 00H, '_', 00H, 'P', 00H
	DB	't', 00H, 'r', 00H, '_', 00H, 'p', 00H, 't', 00H, 'r', 00H, ')'
	DB	00H, '[', 00H, '-', 00H, '1', 00H, ']', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, '_', 00H, 'B', 00H, 'I', 00H, 'G', 00H, '_'
	DB	00H, 'A', 00H, 'L', 00H, 'L', 00H, 'O', 00H, 'C', 00H, 'A', 00H
	DB	'T', 00H, 'I', 00H, 'O', 00H, 'N', 00H, '_', 00H, 'S', 00H, 'E'
	DB	00H, 'N', 00H, 'T', 00H, 'I', 00H, 'N', 00H, 'E', 00H, 'L', 00H
	DB	'"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
CONST	SEGMENT
??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@ DB 'rei'
	DB	'nterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] == _BIG_ALLOCATION_S'
	DB	'ENTINEL', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
CONST	SEGMENT
??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@ DB '"'
	DB	00H, '(', 00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H
	DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '&', 00H, ' '
	DB	00H, '(', 00H, '_', 00H, 'B', 00H, 'I', 00H, 'G', 00H, '_', 00H
	DB	'A', 00H, 'L', 00H, 'L', 00H, 'O', 00H, 'C', 00H, 'A', 00H, 'T'
	DB	00H, 'I', 00H, 'O', 00H, 'N', 00H, '_', 00H, 'A', 00H, 'L', 00H
	DB	'I', 00H, 'G', 00H, 'N', 00H, 'M', 00H, 'E', 00H, 'N', 00H, 'T'
	DB	00H, ' ', 00H, '-', 00H, ' ', 00H, '1', 00H, ')', 00H, ')', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, '"', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
CONST	SEGMENT
??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@ DB '(_Ptr'
	DB	'_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'D', 00H
	DB	'e', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@ DB '%', 00H, 'l', 00H, 's', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@EJGLHMGC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf@
CONST	SEGMENT
??_C@_1FK@EJGLHMGC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf@ DB '"'
	DB	00H, '_', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H
	DB	' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '(', 00H, 's', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, '_', 00H, 't', 00H, ')', 00H, '(', 00H
	DB	'-', 00H, '1', 00H, ')', 00H, ' ', 00H, '/', 00H, ' ', 00H, 's'
	DB	00H, 'i', 00H, 'z', 00H, 'e', 00H, 'o', 00H, 'f', 00H, ' ', 00H
	DB	'(', 00H, '_', 00H, 'T', 00H, 'y', 00H, ')', 00H, '"', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@FHBDFCGK@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5sizeof?5@
CONST	SEGMENT
??_C@_0CG@FHBDFCGK@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5sizeof?5@ DB '_'
	DB	'Count <= (size_t)(-1) / sizeof (_Ty)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_R0?AV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@8
data$r	SEGMENT
??_R0?AV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@8 DD FLAT:??_7type_info@@6B@ ; <lambda_b6f3cb1c717d8c8a816f87295491882e> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@', 00H
data$r	ENDS
;	COMDAT ??_C@_1CG@LEJCKCBB@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@LEJCKCBB@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@6B@
CONST	SEGMENT
??_7?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@6B@ DD FLAT:?_Copy@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EBEPAV?$_Func_base@X$$V@2@PAX@Z ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::`vftable'
	DD	FLAT:?_Move@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EAEPAV?$_Func_base@X$$V@2@PAX@Z
	DD	FLAT:?_Do_call@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EAEXXZ
	DD	FLAT:?_Target_type@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EBEABVtype_info@@XZ
	DD	FLAT:?_Delete_this@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EAEX_N@Z
	DD	FLAT:?_Get@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EBEPBXXZ
CONST	ENDS
;	COMDAT ??_C@_1JC@ELNBGKIG@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JC@ELNBGKIG@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H, 'g'
	DB	00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_7?$_Func_base@X$$V@std@@6B@
CONST	SEGMENT
??_7?$_Func_base@X$$V@std@@6B@ DD FLAT:__purecall	; std::_Func_base<void>::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_C@_0DG@CPCMILPH@c?3?2workspace?2sumatrapdf?9master?2s@
CONST	SEGMENT
??_C@_0DG@CPCMILPH@c?3?2workspace?2sumatrapdf?9master?2s@ DB 'c:\workspac'
	DB	'e\sumatrapdf-master\src\sumatrastartup.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@HAGDNPLN@?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AAD?$AAa?$AAt?$AAa?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@HAGDNPLN@?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AAD?$AAa?$AAt?$AAa?$AA?$AA@ DB 'S'
	DB	00H, 'e', 00H, 's', 00H, 's', 00H, 'i', 00H, 'o', 00H, 'n', 00H
	DB	'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04HAPDLBFF@auto?$AA@
CONST	SEGMENT
??_C@_04HAPDLBFF@auto?$AA@ DB 'auto', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT
??_C@_04LOAJBDKD@true?$AA@ DB 'true', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03ICICOMAL@yes?$AA@
CONST	SEGMENT
??_C@_03ICICOMAL@yes?$AA@ DB 'yes', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05PDJBBECF@pause?$AA@
CONST	SEGMENT
??_C@_05PDJBBECF@pause?$AA@ DB 'pause', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLPLCEMM@?1regress?$AA@
CONST	SEGMENT
??_C@_08LLPLCEMM@?1regress?$AA@ DB '/regress', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07PDKPIFNG@?1tester?$AA@
CONST	SEGMENT
??_C@_07PDKPIFNG@?1tester?$AA@ DB '/tester', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT
??_C@_01GFHCPBMG@C?$AA@ DB 'C', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??WinMain@@9@16@4JA
_DATA	SEGMENT
?__LINE__Var@?0??WinMain@@9@16@4JA DD 023fH		; `WinMain'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_19GMJJNAOJ@?$AA?4?$AAp?$AAd?$AAf?$AA?$AA@
CONST	SEGMENT
??_C@_19GMJJNAOJ@?$AA?4?$AAp?$AAd?$AAf?$AA?$AA@ DB '.', 00H, 'p', 00H, 'd'
	DB	00H, 'f', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@IEDCKEJO@?$AAS?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAP?$AAD?$AAF?$AA?9?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@IEDCKEJO@?$AAS?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAP?$AAD?$AAF?$AA?9?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AA@ DB 'S'
	DB	00H, 'u', 00H, 'm', 00H, 'a', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'P', 00H, 'D', 00H, 'F', 00H, '-', 00H, '%', 00H, '0', 00H, '8'
	DB	00H, 'x', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@KINBKILN@?$AAs?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAp?$AAd?$AAf?$AAc?$AAr?$AAa?$AAs?$AAh?$AA?4?$AAd?$AAm?$AAp?$AA?$AA@
CONST	SEGMENT
??_C@_1CI@KINBKILN@?$AAs?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAp?$AAd?$AAf?$AAc?$AAr?$AAa?$AAs?$AAh?$AA?4?$AAd?$AAm?$AAp?$AA?$AA@ DB 's'
	DB	00H, 'u', 00H, 'm', 00H, 'a', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'p', 00H, 'd', 00H, 'f', 00H, 'c', 00H, 'r', 00H, 'a', 00H, 's'
	DB	00H, 'h', 00H, '.', 00H, 'd', 00H, 'm', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@PBNBCKFL@?$AAS?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAP?$AAD?$AAF?$AA?9?$AAs?$AAy?$AAm?$AAb?$AAo?$AAl?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@PBNBCKFL@?$AAS?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAP?$AAD?$AAF?$AA?9?$AAs?$AAy?$AAm?$AAb?$AAo?$AAl?$AAs?$AA?$AA@ DB 'S'
	DB	00H, 'u', 00H, 'm', 00H, 'a', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'P', 00H, 'D', 00H, 'F', 00H, '-', 00H, 's', 00H, 'y', 00H, 'm'
	DB	00H, 'b', 00H, 'o', 00H, 'l', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@PKGIHOED@?$AAn?$AAa?$AAm?$AAe?$AAd?$AAd?$AAe?$AAs?$AAt?$AA?$DN?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@PKGIHOED@?$AAn?$AAa?$AAm?$AAe?$AAd?$AAd?$AAe?$AAs?$AAt?$AA?$DN?$AA?$AA@ DB 'n'
	DB	00H, 'a', 00H, 'm', 00H, 'e', 00H, 'd', 00H, 'd', 00H, 'e', 00H
	DB	's', 00H, 't', 00H, '=', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@ILEIMEED@?$AA?$DN?$AA?$CF?$AAd?$AA?$CF?$AA$?$AA?$AA@
CONST	SEGMENT
??_C@_1M@ILEIMEED@?$AA?$DN?$AA?$CF?$AAd?$AA?$CF?$AA$?$AA?$AA@ DB '=', 00H
	DB	'%', 00H, 'd', 00H, '%', 00H, '$', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BOBDMABN@?$AAp?$AAa?$AAg?$AAe?$AA?$DN?$AA?$AA@
CONST	SEGMENT
??_C@_1M@BOBDMABN@?$AAp?$AAa?$AAg?$AAe?$AA?$DN?$AA?$AA@ DB 'p', 00H, 'a', 00H
	DB	'g', 00H, 'e', 00H, '=', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_13GMDMCADD@?$AA?$CD?$AA?$AA@
CONST	SEGMENT
??_C@_13GMDMCADD@?$AA?$CD?$AA?$AA@ DB '#', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_13FLOCNAAB@?$AA?$CG?$AA?$AA@
CONST	SEGMENT
??_C@_13FLOCNAAB@?$AA?$CG?$AA?$AA@ DB '&', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@NHINHEEK@?$AAi?$AA?4?$AAf?$AAi?$AAl?$AAe?$AAN?$AAa?$AAm?$AAe?$AAs?$AA?4?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA1?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@NHINHEEK@?$AAi?$AA?4?$AAf?$AAi?$AAl?$AAe?$AAN?$AAa?$AAm?$AAe?$AAs?$AA?4?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA1?$AA?$AA@ DB 'i'
	DB	00H, '.', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'N', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, 's', 00H, '.', 00H, 'C', 00H, 'o'
	DB	00H, 'u', 00H, 'n', 00H, 't', 00H, '(', 00H, ')', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, '1', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SetupPluginMode@@YA_NAAVCommandLineInfo@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SetupPluginMode@@YA_NAAVCommandLineInfo@@@Z@4JA DD 0163H ; `SetupPluginMode'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BA@DNELNMNE@?$AAS?$AAU?$AAM?$AAA?$AAT?$AAR?$AAA?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@DNELNMNE@?$AAS?$AAU?$AAM?$AAA?$AAT?$AAR?$AAA?$AA?$AA@ DB 'S', 00H
	DB	'U', 00H, 'M', 00H, 'A', 00H, 'T', 00H, 'R', 00H, 'A', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@IBGCEPCN@?$AAc?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@IBGCEPCN@?$AAc?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@ DB 'c', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1FC@FIABJECI@?$AA?$FL?$AAF?$AAo?$AAr?$AAw?$AAa?$AAr?$AAd?$AAS?$AAe?$AAa?$AAr?$AAc?$AAh?$AA?$CI?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1FC@FIABJECI@?$AA?$FL?$AAF?$AAo?$AAr?$AAw?$AAa?$AAr?$AAd?$AAS?$AAe?$AAa?$AAr?$AAc?$AAh?$AA?$CI?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AA0@ DB '['
	DB	00H, 'F', 00H, 'o', 00H, 'r', 00H, 'w', 00H, 'a', 00H, 'r', 00H
	DB	'd', 00H, 'S', 00H, 'e', 00H, 'a', 00H, 'r', 00H, 'c', 00H, 'h'
	DB	00H, '(', 00H, '"', 00H, '%', 00H, 's', 00H, '"', 00H, ',', 00H
	DB	' ', 00H, '"', 00H, '%', 00H, 's', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, '%', 00H, 'd', 00H, ',', 00H, ' ', 00H, '0', 00H, ',', 00H
	DB	' ', 00H, '0', 00H, ',', 00H, ' ', 00H, '1', 00H, ')', 00H, ']'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@KKJLKIFH@?$AA?$FL?$AAS?$AAe?$AAt?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CF?$AA?4?$AA2?$AAf?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AA?$CF@
CONST	SEGMENT
??_C@_1EI@KKJLKIFH@?$AA?$FL?$AAS?$AAe?$AAt?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CF?$AA?4?$AA2?$AAf?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AA?$CF@ DB '['
	DB	00H, 'S', 00H, 'e', 00H, 't', 00H, 'V', 00H, 'i', 00H, 'e', 00H
	DB	'w', 00H, '(', 00H, '"', 00H, '%', 00H, 's', 00H, '"', 00H, ','
	DB	00H, ' ', 00H, '"', 00H, '%', 00H, 's', 00H, '"', 00H, ',', 00H
	DB	' ', 00H, '%', 00H, '.', 00H, '2', 00H, 'f', 00H, ',', 00H, ' '
	DB	00H, '%', 00H, 'd', 00H, ',', 00H, ' ', 00H, '%', 00H, 'd', 00H
	DB	')', 00H, ']', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@JBMPFIK@?$AA?$FL?$AAG?$AAo?$AAt?$AAo?$AAP?$AAa?$AAg?$AAe?$AA?$CI?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$FN?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@JBMPFIK@?$AA?$FL?$AAG?$AAo?$AAt?$AAo?$AAP?$AAa?$AAg?$AAe?$AA?$CI?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$FN?$AA?$AA@ DB '['
	DB	00H, 'G', 00H, 'o', 00H, 't', 00H, 'o', 00H, 'P', 00H, 'a', 00H
	DB	'g', 00H, 'e', 00H, '(', 00H, '"', 00H, '%', 00H, 's', 00H, '"'
	DB	00H, ',', 00H, ' ', 00H, '%', 00H, 'd', 00H, ')', 00H, ']', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@LKFLACJO@?$AA?$FL?$AAG?$AAo?$AAt?$AAo?$AAN?$AAa?$AAm?$AAe?$AAd?$AAD?$AAe?$AAs?$AAt?$AA?$CI?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?$CJ?$AA?$FN?$AA?$AA@
CONST	SEGMENT
??_C@_1DI@LKFLACJO@?$AA?$FL?$AAG?$AAo?$AAt?$AAo?$AAN?$AAa?$AAm?$AAe?$AAd?$AAD?$AAe?$AAs?$AAt?$AA?$CI?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?$CJ?$AA?$FN?$AA?$AA@ DB '['
	DB	00H, 'G', 00H, 'o', 00H, 't', 00H, 'o', 00H, 'N', 00H, 'a', 00H
	DB	'm', 00H, 'e', 00H, 'd', 00H, 'D', 00H, 'e', 00H, 's', 00H, 't'
	DB	00H, '(', 00H, '"', 00H, '%', 00H, 's', 00H, '"', 00H, ',', 00H
	DB	' ', 00H, '"', 00H, '%', 00H, 's', 00H, '"', 00H, ')', 00H, ']'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CM@GPNKFOGI@?$AA?$FL?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA0?$AA?0?$AA?5?$AA1?$AA?0?$AA?5?$AA0?$AA?$CJ?$AA?$FN?$AA?$AA@
CONST	SEGMENT
??_C@_1CM@GPNKFOGI@?$AA?$FL?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA0?$AA?0?$AA?5?$AA1?$AA?0?$AA?5?$AA0?$AA?$CJ?$AA?$FN?$AA?$AA@ DB '['
	DB	00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, '(', 00H, '"', 00H
	DB	'%', 00H, 's', 00H, '"', 00H, ',', 00H, ' ', 00H, '0', 00H, ','
	DB	00H, ' ', 00H, '1', 00H, ',', 00H, ' ', 00H, '0', 00H, ')', 00H
	DB	']', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@JNHOBPBF@?$AAS?$AAU?$AAM?$AAA?$AAT?$AAR?$AAA?$AA_?$AAP?$AAD?$AAF?$AA_?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAI?$AAE?$AAS?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@JNHOBPBF@?$AAS?$AAU?$AAM?$AAA?$AAT?$AAR?$AAA?$AA_?$AAP?$AAD?$AAF?$AA_?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAI?$AAE?$AAS?$AA?$AA@ DB 'S'
	DB	00H, 'U', 00H, 'M', 00H, 'A', 00H, 'T', 00H, 'R', 00H, 'A', 00H
	DB	'_', 00H, 'P', 00H, 'D', 00H, 'F', 00H, '_', 00H, 'P', 00H, 'R'
	DB	00H, 'O', 00H, 'P', 00H, 'E', 00H, 'R', 00H, 'T', 00H, 'I', 00H
	DB	'E', 00H, 'S', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@HPLMACE@?$AAS?$AAU?$AAM?$AAA?$AAT?$AAR?$AAA?$AA_?$AAP?$AAD?$AAF?$AA_?$AAC?$AAA?$AAN?$AAV?$AAA?$AAS?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@HPLMACE@?$AAS?$AAU?$AAM?$AAA?$AAT?$AAR?$AAA?$AA_?$AAP?$AAD?$AAF?$AA_?$AAC?$AAA?$AAN?$AAV?$AAA?$AAS?$AA?$AA@ DB 'S'
	DB	00H, 'U', 00H, 'M', 00H, 'A', 00H, 'T', 00H, 'R', 00H, 'A', 00H
	DB	'_', 00H, 'P', 00H, 'D', 00H, 'F', 00H, '_', 00H, 'C', 00H, 'A'
	DB	00H, 'N', 00H, 'V', 00H, 'A', 00H, 'S', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@PHGKLOIF@?$AAS?$AAU?$AAM?$AAA?$AAT?$AAR?$AAA?$AA_?$AAP?$AAD?$AAF?$AA_?$AAF?$AAR?$AAA?$AAM?$AAE?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@PHGKLOIF@?$AAS?$AAU?$AAM?$AAA?$AAT?$AAR?$AAA?$AA_?$AAP?$AAD?$AAF?$AA_?$AAF?$AAR?$AAA?$AAM?$AAE?$AA?$AA@ DB 'S'
	DB	00H, 'U', 00H, 'M', 00H, 'A', 00H, 'T', 00H, 'R', 00H, 'A', 00H
	DB	'_', 00H, 'P', 00H, 'D', 00H, 'F', 00H, '_', 00H, 'F', 00H, 'R'
	DB	00H, 'A', 00H, 'M', 00H, 'E', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@NNHHJJEP@?$AAg?$AAP?$AAl?$AAu?$AAg?$AAi?$AAn?$AAM?$AAo?$AAd?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@NNHHJJEP@?$AAg?$AAP?$AAl?$AAu?$AAg?$AAi?$AAn?$AAM?$AAo?$AAd?$AAe?$AA?$AA@ DB 'g'
	DB	00H, 'P', 00H, 'l', 00H, 'u', 00H, 'g', 00H, 'i', 00H, 'n', 00H
	DB	'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@HMBMIIMN@?$AAI?$AAs?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?$CI?$AAh?$AAw?$AAn?$AAd?$AAP?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@HMBMIIMN@?$AAI?$AAs?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?$CI?$AAh?$AAw?$AAn?$AAd?$AAP?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?$CJ?$AA?$AA@ DB 'I'
	DB	00H, 's', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, '(', 00H, 'h', 00H, 'w', 00H, 'n', 00H, 'd', 00H, 'P'
	DB	00H, 'a', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, ')', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1GM@OAGNGMKE@?$AAc?$AA?3?$AA?2?$AAw?$AAo?$AAr?$AAk?$AAs?$AAp?$AAa?$AAc?$AAe?$AA?2?$AAs?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAp?$AAd?$AAf?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs@
CONST	SEGMENT
??_C@_1GM@OAGNGMKE@?$AAc?$AA?3?$AA?2?$AAw?$AAo?$AAr?$AAk?$AAs?$AAp?$AAa?$AAc?$AAe?$AA?2?$AAs?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAp?$AAd?$AAf?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'w', 00H, 'o', 00H, 'r', 00H, 'k', 00H
	DB	's', 00H, 'p', 00H, 'a', 00H, 'c', 00H, 'e', 00H, '\', 00H, 's'
	DB	00H, 'u', 00H, 'm', 00H, 'a', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'p', 00H, 'd', 00H, 'f', 00H, '-', 00H, 'm', 00H, 'a', 00H, 's'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '\', 00H, 's', 00H, 'r', 00H
	DB	'c', 00H, '\', 00H, 's', 00H, 'u', 00H, 'm', 00H, 'a', 00H, 't'
	DB	00H, 'r', 00H, 'a', 00H, 's', 00H, 't', 00H, 'a', 00H, 'r', 00H
	DB	't', 00H, 'u', 00H, 'p', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??MakePluginWindow@@YAXAAVWindowInfo@@PAUHWND__@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??MakePluginWindow@@YAXAAVWindowInfo@@PAUHWND__@@@Z@4JA DD 098H ; `MakePluginWindow'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_7FileExistenceChecker@@6B@
CONST	SEGMENT
??_7FileExistenceChecker@@6B@ DD FLAT:??_EFileExistenceChecker@@UAEPAXI@Z ; FileExistenceChecker::`vftable'
	DD	FLAT:?Run@FileExistenceChecker@@UAEXXZ
CONST	ENDS
;	COMDAT ??_C@_1BK@JCIKOMDH@?$AAm?$AAe?$AAm?$AAt?$AAr?$AAa?$AAc?$AAe?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@JCIKOMDH@?$AAm?$AAe?$AAm?$AAt?$AAr?$AAa?$AAc?$AAe?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@ DB 'm'
	DB	00H, 'e', 00H, 'm', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0ABV?$allocator@H@std@@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
??$?0ABV?$allocator@H@std@@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z PROC ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1><std::allocator<int> const &,<lambda_b6f3cb1c717d8c8a816f87295491882e> const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 286
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z ; std::forward<std::allocator<int> const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@H@std@@QAE@ABV01@@Z	; std::allocator<int>::allocator<int>
; Line 287
	mov	eax, DWORD PTR _<_Val2_0>$[ebp]
	push	eax
	call	??$forward@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> const &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 289
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0ABV?$allocator@H@std@@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ENDP ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1><std::allocator<int> const &,<lambda_b6f3cb1c717d8c8a816f87295491882e> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0ABV?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
??$?0ABV?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z PROC ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1><std::allocator<int> const &,<lambda_b6f3cb1c717d8c8a816f87295491882e> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 286
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z ; std::forward<std::allocator<int> const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@H@std@@QAE@ABV01@@Z	; std::allocator<int>::allocator<int>
; Line 287
	mov	eax, DWORD PTR _<_Val2_0>$[ebp]
	push	eax
	call	??$forward@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 289
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0ABV?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ENDP ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1><std::allocator<int> const &,<lambda_b6f3cb1c717d8c8a816f87295491882e> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAE@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 4
??$?0ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAE@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z PROC ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void><<lambda_b6f3cb1c717d8c8a816f87295491882e> const &,std::allocator<int> const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$V@std@@QAE@XZ	; std::_Func_base<void>::_Func_base<void>
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@6B@
; Line 159
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ax$[ebp]
	push	ecx
	call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z ; std::forward<std::allocator<int> const &>
	add	esp, 4
	push	eax
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0ABV?$allocator@H@std@@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1><std::allocator<int> const &,<lambda_b6f3cb1c717d8c8a816f87295491882e> const &>
; Line 162
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAE@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ENDP ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void><<lambda_b6f3cb1c717d8c8a816f87295491882e> const &,std::allocator<int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
??$?0V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z PROC ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1><std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 286
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z ; std::forward<std::allocator<int> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@H@std@@QAE@ABV01@@Z	; std::allocator<int>::allocator<int>
; Line 287
	mov	eax, DWORD PTR _<_Val2_0>$[ebp]
	push	eax
	call	??$forward@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 289
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ENDP ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1><std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 4
??$?0V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z PROC ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void><<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$V@std@@QAE@XZ	; std::_Func_base<void>::_Func_base<void>
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@6B@
; Line 159
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ax$[ebp]
	push	ecx
	call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z ; std::forward<std::allocator<int> const &>
	add	esp, 4
	push	eax
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0ABV?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@H@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1><std::allocator<int> const &,<lambda_b6f3cb1c717d8c8a816f87295491882e> >
; Line 162
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ENDP ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void><<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z
_TEXT	SEGMENT
tv79 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z PROC ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e> const &,std::allocator<int> const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 656
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 657
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_1>$[ebp]
	push	ecx
	call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z ; std::forward<std::allocator<int> const &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	call	??$forward@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??$?0ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAE@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void><<lambda_b6f3cb1c717d8c8a816f87295491882e> const &,std::allocator<int> const &>
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv79[ebp], 0
$LN1@construct:
; Line 658
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ENDP ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e> const &,std::allocator<int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$QAV?$allocator@H@1@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 4
??$?0V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$QAV?$allocator@H@1@@Z PROC ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void><<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$V@std@@QAE@XZ	; std::_Func_base<void>::_Func_base<void>
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@6B@
; Line 159
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ax$[ebp]
	push	ecx
	call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z ; std::forward<std::allocator<int> >
	add	esp, 4
	push	eax
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@H@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1><std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e> >
; Line 162
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$QAV?$allocator@H@1@@Z ENDP ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void><<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z
_TEXT	SEGMENT
tv79 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z PROC ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 656
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 657
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_1>$[ebp]
	push	ecx
	call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z ; std::forward<std::allocator<int> const &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	call	??$forward@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??$?0V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@std@@@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void><<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> const &>
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv79[ebp], 0
$LN1@construct:
; Line 658
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ENDP ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
_<_Args_1>$ = 20					; size = 4
??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e> const &,std::allocator<int> const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 774
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 775
	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z ; std::forward<std::allocator<int> const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> const &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e> const &,std::allocator<int> const &>
; Line 776
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e> const &,std::allocator<int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV1@@Z PROC ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
; Line 1293
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1294
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1295
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV1@@Z ENDP ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$QAV?$allocator@H@1@@Z
_TEXT	SEGMENT
tv79 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$QAV?$allocator@H@1@@Z PROC ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 656
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 657
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_1>$[ebp]
	push	ecx
	call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z ; std::forward<std::allocator<int> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	call	??$forward@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??$?0V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAE@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$QAV?$allocator@H@1@@Z ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void><<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> >
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv79[ebp], 0
$LN1@construct:
; Line 658
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$QAV?$allocator@H@1@@Z ENDP ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@@Z PROC ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::destroy<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 663
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 664
	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAEPAXI@Z
; Line 665
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@@Z ENDP ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::destroy<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
_<_Args_1>$ = 20					; size = 4
??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 774
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 775
	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z ; std::forward<std::allocator<int> const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> const &>
; Line 776
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z PROC ; std::forward<std::allocator<int> const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
; Line 1293
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1294
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1295
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z ENDP ; std::forward<std::allocator<int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e> const &,std::allocator<int> const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 918
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 919
	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z ; std::forward<std::allocator<int> const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> const &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ; std::allocator_traits<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e> const &,std::allocator<int> const &>
	add	esp, 16					; 00000010H
; Line 921
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e> const &,std::allocator<int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$QAV?$allocator@H@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
_<_Args_1>$ = 20					; size = 4
??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$QAV?$allocator@H@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 774
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 775
	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z ; std::forward<std::allocator<int> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@2@@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$QAV?$allocator@H@1@@Z ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> >
; Line 776
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$QAV?$allocator@H@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z PROC ; std::forward<std::allocator<int> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
; Line 1293
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1294
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1295
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z ENDP ; std::forward<std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Addressof@$$CBV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAPBV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV1@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Addressof@$$CBV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAPBV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV1@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Addressof<<lambda_b6f3cb1c717d8c8a816f87295491882e> const >, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; Line 691
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 692
	mov	eax, DWORD PTR __Val$[ebp]
; Line 695
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Addressof@$$CBV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAPBV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV1@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Addressof<<lambda_b6f3cb1c717d8c8a816f87295491882e> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::destroy<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 781
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 782
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@@Z ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::destroy<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >
; Line 783
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$destroy@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::destroy<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 918
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 919
	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	call	??$forward@ABV?$allocator@H@std@@@std@@YAABV?$allocator@H@0@ABV10@@Z ; std::forward<std::allocator<int> const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ; std::allocator_traits<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> const &>
	add	esp, 16					; 00000010H
; Line 921
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Test_callable@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA_NABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Test_callable@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA_NABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Test_callable<<lambda_b6f3cb1c717d8c8a816f87295491882e> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 80
	mov	al, 1
; Line 81
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Test_callable@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA_NABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Test_callable<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Deallocate@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@YAXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@0@I@Z
_TEXT	SEGMENT
__Ptr_container$1 = -44					; size = 4
__Ptr_ptr$2 = -32					; size = 4
__Ptr_user$3 = -20					; size = 4
__User_size$ = -8					; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
??$_Deallocate@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@YAXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@0@I@Z PROC ; std::_Deallocate<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 98
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 100
	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	jbe	SHORT $LN2@Deallocate
	mov	eax, OFFSET ??_C@_0CG@FHBDFCGK@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5sizeof?5@
	test	eax, eax
	je	SHORT $LN10@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN11@Deallocate
$LN10@Deallocate:
	push	OFFSET ??_C@_1FK@EJGLHMGC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	100					; 00000064H
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN11@Deallocate
	int	3
$LN11@Deallocate:
	push	0
	push	100					; 00000064H
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@Deallocate:
; Line 101
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	mov	DWORD PTR __User_size$[ebp], eax
; Line 102
	cmp	DWORD PTR __User_size$[ebp], 4096	; 00001000H
	jb	$LN3@Deallocate
; Line 104
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Ptr_user$3[ebp], eax
; Line 105
	mov	eax, DWORD PTR __Ptr_user$3[ebp]
	and	eax, 31					; 0000001fH
	je	SHORT $LN4@Deallocate
	mov	eax, OFFSET ??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
	test	eax, eax
	je	SHORT $LN12@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN13@Deallocate
$LN12@Deallocate:
	push	OFFSET ??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	106					; 0000006aH
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN13@Deallocate
	int	3
$LN13@Deallocate:
	push	0
	push	106					; 0000006aH
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN4@Deallocate:
; Line 107
	mov	eax, DWORD PTR __Ptr_user$3[ebp]
	sub	eax, 4
	mov	DWORD PTR __Ptr_ptr$2[ebp], eax
; Line 109
	mov	eax, DWORD PTR __Ptr_ptr$2[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Ptr_container$1[ebp], ecx
; Line 114
	mov	eax, 4
	imul	ecx, eax, -1
	mov	edx, DWORD PTR __Ptr_ptr$2[ebp]
	cmp	DWORD PTR [edx+ecx], -84215046		; fafafafaH
	je	SHORT $LN5@Deallocate
	mov	eax, OFFSET ??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
	test	eax, eax
	je	SHORT $LN14@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN15@Deallocate
$LN14@Deallocate:
	push	OFFSET ??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	116					; 00000074H
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN15@Deallocate
	int	3
$LN15@Deallocate:
	push	0
	push	116					; 00000074H
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN5@Deallocate:
; Line 120
	mov	eax, DWORD PTR __Ptr_container$1[ebp]
	cmp	eax, DWORD PTR __Ptr_user$3[ebp]
	jb	SHORT $LN6@Deallocate
	mov	eax, OFFSET ??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
	test	eax, eax
	je	SHORT $LN16@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN17@Deallocate
$LN16@Deallocate:
	push	OFFSET ??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	120					; 00000078H
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN17@Deallocate
	int	3
$LN17@Deallocate:
	push	0
	push	120					; 00000078H
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN6@Deallocate:
; Line 123
	mov	eax, DWORD PTR __Ptr_user$3[ebp]
	sub	eax, DWORD PTR __Ptr_container$1[ebp]
	cmp	eax, 8
	jae	SHORT $LN7@Deallocate
	mov	eax, OFFSET ??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
	test	eax, eax
	je	SHORT $LN18@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN19@Deallocate
$LN18@Deallocate:
	push	OFFSET ??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	124					; 0000007cH
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN19@Deallocate
	int	3
$LN19@Deallocate:
	push	0
	push	124					; 0000007cH
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN7@Deallocate:
; Line 131
	mov	eax, DWORD PTR __Ptr_user$3[ebp]
	sub	eax, DWORD PTR __Ptr_container$1[ebp]
	cmp	eax, 39					; 00000027H
	jbe	SHORT $LN8@Deallocate
	mov	eax, OFFSET ??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
	test	eax, eax
	je	SHORT $LN20@Deallocate
	xor	ecx, ecx
	jne	SHORT $LN21@Deallocate
$LN20@Deallocate:
	push	OFFSET ??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
	push	OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	push	0
	push	132					; 00000084H
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN21@Deallocate
	int	3
$LN21@Deallocate:
	push	0
	push	132					; 00000084H
	push	OFFSET ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN8@Deallocate:
; Line 134
	mov	eax, DWORD PTR __Ptr_container$1[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax
$LN3@Deallocate:
; Line 138
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 139
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Deallocate@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@YAXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@0@I@Z ENDP ; std::_Deallocate<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Clone@X@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABEPAV?$_Func_base@X$$V@1@PAXU?$integral_constant@_N$0A@@1@@Z
_TEXT	SEGMENT
__Ptr$ = -32						; size = 4
__Al$ = -17						; size = 1
_this$ = -8						; size = 4
__Where$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Clone@X@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABEPAV?$_Func_base@X$$V@1@PAXU?$integral_constant@_N$0A@@1@@Z PROC ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Clone<void>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 192
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 193
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myax@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABEABV?$allocator@H@2@XZ ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Myax
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > ><std::allocator<int> >
; Line 194
	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 195
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myax@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABEABV?$allocator@H@2@XZ ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Myax
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Callee@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABEABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@XZ ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Callee
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@ABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e> const &,std::allocator<int> const &>
; Line 196
	mov	eax, DWORD PTR __Ptr$[ebp]
; Line 197
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Clone
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN5@Clone:
	DD	1
	DD	$LN4@Clone
$LN4@Clone:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Clone
$LN3@Clone:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	0
??$_Clone@X@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABEPAV?$_Func_base@X$$V@1@PAXU?$integral_constant@_N$0A@@1@@Z ENDP ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Clone<void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$QAV?$allocator@H@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$QAV?$allocator@H@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 918
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 919
	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	call	??$forward@V?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z ; std::forward<std::allocator<int> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@2@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$QAV?$allocator@H@1@@Z ; std::allocator_traits<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> >
	add	esp, 16					; 00000010H
; Line 921
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$QAV?$allocator@H@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$move@AAV?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z PROC ; std::move<std::allocator<int> &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
; Line 1309
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1310
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1311
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAV?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z ENDP ; std::move<std::allocator<int> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Invoke_ret@XAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAXU?$_Forced@X$00@0@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
_<_Vals_0>$ = 12					; size = 4
??$_Invoke_ret@XAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAXU?$_Forced@X$00@0@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z PROC ; std::_Invoke_ret<void,<lambda_b6f3cb1c717d8c8a816f87295491882e> &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
; Line 1493
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1494
	mov	eax, DWORD PTR _<_Vals_0>$[ebp]
	push	eax
	call	??$forward@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> &>
	add	esp, 4
	push	eax
	call	??$invoke@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$V@std@@YAXAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ; std::invoke<<lambda_b6f3cb1c717d8c8a816f87295491882e> &>
	add	esp, 4
; Line 1495
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Invoke_ret@XAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAXU?$_Forced@X$00@0@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ENDP ; std::_Invoke_ret<void,<lambda_b6f3cb1c717d8c8a816f87295491882e> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$invoke@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$V@std@@YAXAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$invoke@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$V@std@@YAXAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z PROC ; std::invoke<<lambda_b6f3cb1c717d8c8a816f87295491882e> &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
; Line 1475
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1476
	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$forward@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> &>
	add	esp, 4
	push	eax
	call	??$_Call@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$V@_Invoker_functor@std@@SAXAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ; std::_Invoker_functor::_Call<<lambda_b6f3cb1c717d8c8a816f87295491882e> &>
	add	esp, 4
; Line 1478
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$invoke@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$V@std@@YAXAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ENDP ; std::invoke<<lambda_b6f3cb1c717d8c8a816f87295491882e> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Call@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$V@_Invoker_functor@std@@SAXAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Call@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$V@_Invoker_functor@std@@SAXAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z PROC ; std::_Invoker_functor::_Call<<lambda_b6f3cb1c717d8c8a816f87295491882e> &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
; Line 1407
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1408
	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$forward@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> &>
	add	esp, 4
	mov	ecx, eax
	call	??R<lambda_b6f3cb1c717d8c8a816f87295491882e>@@QBEXXZ ; <lambda_b6f3cb1c717d8c8a816f87295491882e>::operator()
; Line 1410
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Call@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$V@_Invoker_functor@std@@SAXAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ENDP ; std::_Invoker_functor::_Call<<lambda_b6f3cb1c717d8c8a816f87295491882e> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z PROC ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
; Line 1293
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1294
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1295
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ENDP ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@$$CBV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAPBV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV1@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
__Val$ = 8						; size = 4
??$addressof@$$CBV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAPBV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV1@@Z PROC ; std::addressof<<lambda_b6f3cb1c717d8c8a816f87295491882e> const >, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 700
	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$_Addressof@$$CBV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAPBV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV1@U?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<<lambda_b6f3cb1c717d8c8a816f87295491882e> const >
	add	esp, 8
; Line 701
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@$$CBV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAPBV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV1@@Z ENDP ; std::addressof<<lambda_b6f3cb1c717d8c8a816f87295491882e> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::destroy<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 926
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 927
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@?$allocator_traits@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@SAXAAV?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@@Z ; std::allocator_traits<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::destroy<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >
	add	esp, 8
; Line 928
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::destroy<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > ><std::allocator<int> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 876
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 875
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0H@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAE@ABV?$allocator@H@1@@Z ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> ><int>
; Line 877
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > ><std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?RABIABI@?$less@X@std@@QBE_NABI0@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
_this$ = -8						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?RABIABI@?$less@X@std@@QBE_NABI0@Z PROC		; std::less<void>::operator()<unsigned int const &,unsigned int const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; Line 326
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 327
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]
; Line 329
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??$?RABIABI@?$less@X@std@@QBE_NABI0@Z ENDP		; std::less<void>::operator()<unsigned int const &,unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Reset_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@3@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z
_TEXT	SEGMENT
__Ptr$ = -20						; size = 4
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 4
___formal$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Reset_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@3@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z PROC ; std::_Func_class<void>::_Reset_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 367
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 368
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getspace@?$_Func_class@X$$V@std@@AAEPAXXZ ; std::_Func_class<void>::_Getspace
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 369
	mov	eax, DWORD PTR __Ax$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> const &>
; Line 370
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@X$$V@std@@AAEXPAV?$_Func_base@X$$V@2@@Z ; std::_Func_class<void>::_Set
; Line 371
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??$_Reset_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@3@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z ENDP ; std::_Func_class<void>::_Reset_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAEPAXI@Z PROC ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAE@XZ ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::~_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAEPAXI@Z ENDP ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Callee@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABEABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Callee@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABEABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@XZ PROC ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Callee, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 249
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 250
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QBEABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@XZ ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Get_second
; Line 251
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Callee@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABEABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@XZ ENDP ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Callee
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Callee@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@AAEAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Callee@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@AAEAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@XZ PROC ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Callee, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 244
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 245
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAEAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@XZ ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Get_second
; Line 246
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Callee@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@AAEAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@XZ ENDP ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Callee
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Myax@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABEABV?$allocator@H@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myax@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABEABV?$allocator@H@2@XZ PROC ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Myax, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 239
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 240
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QBEABV?$allocator@H@2@XZ ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Get_first
; Line 241
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myax@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABEABV?$allocator@H@2@XZ ENDP ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Myax
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Myax@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myax@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ PROC ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Myax, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 234
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 235
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAEAAV?$allocator@H@2@XZ ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Get_first
; Line 236
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myax@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ ENDP ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Myax
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QBEABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QBEABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@XZ PROC ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Get_second, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; Line 318
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 319
	mov	eax, DWORD PTR _this$[ebp]
; Line 320
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QBEABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@XZ ENDP ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAEAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAEAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@XZ PROC ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Get_second, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; Line 313
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 314
	mov	eax, DWORD PTR _this$[ebp]
; Line 315
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAEAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@XZ ENDP ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QBEABV?$allocator@H@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QBEABV?$allocator@H@2@XZ PROC ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Get_first, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; Line 298
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 299
	mov	eax, DWORD PTR _this$[ebp]
; Line 300
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QBEABV?$allocator@H@2@XZ ENDP ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAEAAV?$allocator@H@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAEAAV?$allocator@H@2@XZ PROC ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Get_first, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; Line 293
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 294
	mov	eax, DWORD PTR _this$[ebp]
; Line 295
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$00@std@@QAEAAV?$allocator@H@2@XZ ENDP ; std::_Compressed_pair<std::allocator<int>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Delete_this@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EAEX_N@Z
_TEXT	SEGMENT
__Al$ = -17						; size = 1
_this$ = -8						; size = 4
__Deallocate$ = 8					; size = 1
?_Delete_this@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EAEX_N@Z PROC ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Delete_this, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 224
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 225
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myax@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Myax
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > ><std::allocator<int> >
; Line 226
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::destroy<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >
; Line 227
	movzx	eax, BYTE PTR __Deallocate$[ebp]
	test	eax, eax
	je	SHORT $LN1@Delete_thi
; Line 228
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::deallocate
$LN1@Delete_thi:
; Line 229
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Delete_thi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN6@Delete_thi:
	DD	1
	DD	$LN5@Delete_thi
$LN5@Delete_thi:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN4@Delete_thi
$LN4@Delete_thi:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	0
?_Delete_this@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EAEX_N@Z ENDP ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EBEPBXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EBEPBXXZ PROC ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 219
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 220
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Callee@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABEABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@XZ ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Callee
	push	eax
	call	??$addressof@$$CBV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAPBV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV1@@Z ; std::addressof<<lambda_b6f3cb1c717d8c8a816f87295491882e> const >
	add	esp, 4
; Line 221
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EBEPBXXZ ENDP ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Target_type@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EBEABVtype_info@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Target_type@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EBEABVtype_info@@XZ PROC ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Target_type, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 214
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 215
	mov	eax, OFFSET ??_R0?AV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@8
; Line 216
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Target_type@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EBEABVtype_info@@XZ ENDP ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Target_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Do_call@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EAEXXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?_Do_call@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EAEXXZ PROC ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Do_call, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 208
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 209
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Callee@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@AAEAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@XZ ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Callee
	push	eax
	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	call	??$_Invoke_ret@XAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YAXU?$_Forced@X$00@0@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ; std::_Invoke_ret<void,<lambda_b6f3cb1c717d8c8a816f87295491882e> &>
	add	esp, 8
; Line 211
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Do_call@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EAEXXZ ENDP ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Do_call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Move@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EAEPAV?$_Func_base@X$$V@2@PAX@Z
_TEXT	SEGMENT
__Ptr$ = -32						; size = 4
__Al$ = -17						; size = 1
_this$ = -8						; size = 4
__Where$ = 8						; size = 4
?_Move@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EAEPAV?$_Func_base@X$$V@2@PAX@Z PROC ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Move, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 200
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 201
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myax@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Myax
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@AAV?$allocator@H@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > ><std::allocator<int> >
; Line 202
	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 203
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myax@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@AAEAAV?$allocator@H@2@XZ ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Myax
	push	eax
	call	??$move@AAV?$allocator@H@std@@@std@@YA$$QAV?$allocator@H@0@AAV10@@Z ; std::move<std::allocator<int> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Callee@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@AAEAAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@XZ ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Callee
	push	eax
	call	??$move@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ; std::move<<lambda_b6f3cb1c717d8c8a816f87295491882e> &>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@2@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@$$QAV?$allocator@H@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::construct<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> >
; Line 204
	mov	eax, DWORD PTR __Ptr$[ebp]
; Line 205
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Move
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN5@Move:
	DD	1
	DD	$LN4@Move
$LN4@Move:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Move
$LN3@Move:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	0
?_Move@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EAEPAV?$_Func_base@X$$V@2@PAX@Z ENDP ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Copy@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EBEPAV?$_Func_base@X$$V@2@PAX@Z
_TEXT	SEGMENT
$T1 = -221						; size = 1
_this$ = -8						; size = 4
__Where$ = 8						; size = 4
?_Copy@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EBEPAV?$_Func_base@X$$V@2@PAX@Z PROC ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Copy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 171
	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Clone@X@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@ABEPAV?$_Func_base@X$$V@1@PAXU?$integral_constant@_N$0A@@1@@Z ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Clone<void>
; Line 172
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Copy@?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@EBEPAV?$_Func_base@X$$V@2@PAX@Z ENDP ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::_Copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAE@XZ PROC ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::~_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 165
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@6B@
; Line 166
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_base@X$$V@std@@QAE@XZ	; std::_Func_base<void>::~_Func_base<void>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@QAE@XZ ENDP ; std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>::~_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0H@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAE@ABV?$allocator@H@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0H@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAE@ABV?$allocator@H@1@@Z PROC ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> ><int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 629
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 630
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0H@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAE@ABV?$allocator@H@1@@Z ENDP ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> ><int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > ><std::allocator<int> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 870
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 869
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0H@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAE@ABV?$allocator@H@1@@Z ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> ><int>
; Line 871
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > ><std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 910
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 911
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@2@I@Z ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::deallocate
; Line 912
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@2@I@Z PROC ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 639
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 640
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@YAXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@0@I@Z ; std::_Deallocate<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >
	add	esp, 8
; Line 641
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@QAEXPAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@2@I@Z ENDP ; std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Test_callable@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA_NABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
__Arg$ = 8						; size = 4
??$_Test_callable@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA_NABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z PROC ; std::_Test_callable<<lambda_b6f3cb1c717d8c8a816f87295491882e> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 85
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 88
	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Arg$[ebp]
	push	ecx
	call	??$_Test_callable@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA_NABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
	add	esp, 8
; Line 89
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Test_calla
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Test_calla:
	DD	1
	DD	$LN4@Test_calla
$LN4@Test_calla:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Test_calla
$LN3@Test_calla:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
??$_Test_callable@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA_NABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ENDP ; std::_Test_callable<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_lt_pred@U?$less@X@std@@ABIABI@std@@YA_NU?$less@X@0@ABI1PB_WI@Z
_TEXT	SEGMENT
tv79 = -194						; size = 1
tv80 = -193						; size = 1
__Pred$ = 8						; size = 1
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
??$_Debug_lt_pred@U?$less@X@std@@ABIABI@std@@YA_NU?$less@X@0@ABI1PB_WI@Z PROC ; std::_Debug_lt_pred<std::less<void>,unsigned int const &,unsigned int const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; Line 734
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 735
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Pred$[ebp]
	call	??$?RABIABI@?$less@X@std@@QBE_NABI0@Z	; std::less<void>::operator()<unsigned int const &,unsigned int const &>
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN5@Debug_lt_p
	mov	BYTE PTR tv80[ebp], 0
	jmp	SHORT $LN6@Debug_lt_p
$LN5@Debug_lt_p:
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Pred$[ebp]
	call	??$?RABIABI@?$less@X@std@@QBE_NABI0@Z	; std::less<void>::operator()<unsigned int const &,unsigned int const &>
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@Debug_lt_p
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CG@LEJCKCBB@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
	mov	BYTE PTR tv79[ebp], 1
	jmp	SHORT $LN4@Debug_lt_p
$LN3@Debug_lt_p:
	mov	BYTE PTR tv79[ebp], 1
$LN4@Debug_lt_p:
	mov	dl, BYTE PTR tv79[ebp]
	mov	BYTE PTR tv80[ebp], dl
$LN6@Debug_lt_p:
	mov	al, BYTE PTR tv80[ebp]
; Line 740
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_lt_pred@U?$less@X@std@@ABIABI@std@@YA_NU?$less@X@0@ABI1PB_WI@Z ENDP ; std::_Debug_lt_pred<std::less<void>,unsigned int const &,unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@ABI@std@@YAABIABI@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABI@std@@YAABIABI@Z PROC			; std::forward<unsigned int const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
; Line 1293
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1294
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1295
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABI@std@@YAABIABI@Z ENDP			; std::forward<unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Reset_alloc@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z
_TEXT	SEGMENT
$T1 = -245						; size = 1
__Al$ = -29						; size = 1
__Ptr$ = -20						; size = 4
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 4
??$_Reset_alloc@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z PROC ; std::_Func_class<void>::_Reset_alloc<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 324
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 325
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$_Test_callable@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA_NABV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ; std::_Test_callable<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@Reset_allo
; Line 327
	jmp	SHORT $LN1@Reset_allo
$LN2@Reset_allo:
; Line 332
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 336
	mov	eax, DWORD PTR __Ax$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??$?0V?$allocator@H@std@@@?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > >::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > ><std::allocator<int> >
; Line 338
	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ax$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@3@U?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@3@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@PAV?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@1@AAU?$_Wrap_alloc@V?$allocator@V?$_Func_impl@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@X$$V@std@@@std@@@1@U?$integral_constant@_N$0A@@1@@Z ; std::_Func_class<void>::_Reset_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void>,std::_Wrap_alloc<std::allocator<std::_Func_impl<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int>,void> > > >
$LN1@Reset_allo:
; Line 340
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Reset_allo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN6@Reset_allo:
	DD	1
	DD	$LN5@Reset_allo
$LN5@Reset_allo:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN4@Reset_allo
$LN4@Reset_allo:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	0
??$_Reset_alloc@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ENDP ; std::_Func_class<void>::_Reset_alloc<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@H@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@H@std@@QAE@ABV01@@Z PROC			; std::allocator<int>::allocator<int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 623
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 625
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@H@std@@QAE@ABV01@@Z ENDP			; std::allocator<int>::allocator<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@H@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@H@std@@QAE@XZ PROC			; std::allocator<int>::allocator<int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 619
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 621
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@H@std@@QAE@XZ ENDP			; std::allocator<int>::allocator<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z PROC ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
; Line 1293
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1294
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1295
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ENDP ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_lt@ABIABI@std@@YA_NABI0PB_WI@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_lt@ABIABI@std@@YA_NABI0PB_WI@Z PROC		; std::_Debug_lt<unsigned int const &,unsigned int const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; Line 747
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 748
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	call	??$forward@ABI@std@@YAABIABI@Z		; std::forward<unsigned int const &>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$forward@ABI@std@@YAABIABI@Z		; std::forward<unsigned int const &>
	add	esp, 4
	push	eax
	movzx	ecx, BYTE PTR $T1[ebp]
	push	ecx
	call	??$_Debug_lt_pred@U?$less@X@std@@ABIABI@std@@YA_NU?$less@X@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<void>,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H
; Line 750
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_lt@ABIABI@std@@YA_NABI0PB_WI@Z ENDP		; std::_Debug_lt<unsigned int const &,unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Reset@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
??$_Reset@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z PROC ; std::_Func_class<void>::_Reset<<lambda_b6f3cb1c717d8c8a816f87295491882e> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 317
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 318
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@H@std@@QAE@XZ		; std::allocator<int>::allocator<int>
	push	eax
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ; std::forward<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset_alloc@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@V?$allocator@H@std@@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@ABV?$allocator@H@1@@Z ; std::_Func_class<void>::_Reset_alloc<<lambda_b6f3cb1c717d8c8a816f87295491882e>,std::allocator<int> >
; Line 319
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Reset@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ENDP ; std::_Func_class<void>::_Reset<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$move@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z PROC ; std::move<<lambda_b6f3cb1c717d8c8a816f87295491882e> &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
; Line 1309
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1310
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1311
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ENDP ; std::move<<lambda_b6f3cb1c717d8c8a816f87295491882e> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$max@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
tv71 = -208						; size = 4
$T1 = -200						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@I@std@@YAABIABI0@Z PROC				; std::max<unsigned int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm
; Line 4141
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 4142
	push	4142					; 0000102eH
	push	OFFSET ??_C@_1JC@ELNBGKIG@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$_Debug_lt@ABIABI@std@@YA_NABI0PB_WI@Z ; std::_Debug_lt<unsigned int const &,unsigned int const &>
	add	esp, 16					; 00000010H
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@max
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@max
$LN3@max:
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	DWORD PTR tv71[ebp], ecx
$LN4@max:
	mov	edx, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
; Line 4143
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$max@I@std@@YAABIABI0@Z ENDP				; std::max<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Func_base@X$$V@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Func_base@X$$V@std@@QAE@XZ PROC			; std::_Func_base<void>::~_Func_base<void>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 122
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_base@X$$V@std@@6B@
; Line 123
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Func_base@X$$V@std@@QAE@XZ ENDP			; std::_Func_base<void>::~_Func_base<void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Func_base@X$$V@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Func_base@X$$V@std@@QAE@XZ PROC			; std::_Func_base<void>::_Func_base<void>, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 861
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_base@X$$V@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Func_base@X$$V@std@@QAE@XZ ENDP			; std::_Func_base<void>::_Func_base<void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??EIter@?$Vec@PAUTabState@@@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??EIter@?$Vec@PAUTabState@@@@QAEAAV01@XZ PROC		; Vec<TabState *>::Iter::operator++, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 309
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 310
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
; Line 312
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??EIter@?$Vec@PAUTabState@@@@QAEAAV01@XZ ENDP		; Vec<TabState *>::Iter::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??DIter@?$Vec@PAUTabState@@@@QBEAAPAUTabState@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??DIter@?$Vec@PAUTabState@@@@QBEAAPAUTabState@@XZ PROC	; Vec<TabState *>::Iter::operator*, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 306
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 307
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?At@?$Vec@PAUTabState@@@@QBEAAPAUTabState@@I@Z ; Vec<TabState *>::At
; Line 308
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??DIter@?$Vec@PAUTabState@@@@QBEAAPAUTabState@@XZ ENDP	; Vec<TabState *>::Iter::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Iter@?$Vec@PAUTabState@@@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv67 = -208						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Iter@?$Vec@PAUTabState@@@@QBE_NABV01@@Z PROC		; Vec<TabState *>::Iter::operator!=, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 303
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 304
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]
; Line 305
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??9Iter@?$Vec@PAUTabState@@@@QBE_NABV01@@Z ENDP		; Vec<TabState *>::Iter::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Iter@?$Vec@PAUTabState@@@@QAE@PAV1@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_vec$ = 8						; size = 4
_pos$ = 12						; size = 4
??0Iter@?$Vec@PAUTabState@@@@QAE@PAV1@I@Z PROC		; Vec<TabState *>::Iter::Iter, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 301
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _vec$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0Iter@?$Vec@PAUTabState@@@@QAE@PAV1@I@Z ENDP		; Vec<TabState *>::Iter::Iter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?end@?$Vec@PAUTabState@@@@QAE?AVIter@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$Vec@PAUTabState@@@@QAE?AVIter@1@XZ PROC		; Vec<TabState *>::end, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 318
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 319
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Iter@?$Vec@PAUTabState@@@@QAE@PAV1@I@Z ; Vec<TabState *>::Iter::Iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 320
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$Vec@PAUTabState@@@@QAE?AVIter@1@XZ ENDP		; Vec<TabState *>::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?begin@?$Vec@PAUTabState@@@@QAE?AVIter@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$Vec@PAUTabState@@@@QAE?AVIter@1@XZ PROC	; Vec<TabState *>::begin, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 315
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 316
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Iter@?$Vec@PAUTabState@@@@QAE@PAV1@I@Z ; Vec<TabState *>::Iter::Iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 317
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$Vec@PAUTabState@@@@QAE?AVIter@1@XZ ENDP	; Vec<TabState *>::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?At@?$Vec@PAUTabState@@@@QBEAAPAUTabState@@I@Z
_TEXT	SEGMENT
tv67 = -205						; size = 1
_this$ = -8						; size = 4
_idx$ = 8						; size = 4
?At@?$Vec@PAUTabState@@@@QBEAAPAUTabState@@I@Z PROC	; Vec<TabState *>::At, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN5@At:
; Line 142
	xor	eax, eax
	jne	SHORT $LN5@At
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _idx$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jb	SHORT $LN9@At
	mov	BYTE PTR tv67[ebp], 1
	jmp	SHORT $LN10@At
$LN9@At:
	mov	BYTE PTR tv67[ebp], 0
$LN10@At:
	movzx	edx, BYTE PTR tv67[ebp]
	push	edx
	call	?CrashIfFunc@@YAX_N@Z			; CrashIfFunc
	add	esp, 4
	xor	eax, eax
	jne	SHORT $LN5@At
; Line 143
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _idx$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
; Line 144
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?At@?$Vec@PAUTabState@@@@QBEAAPAUTabState@@I@Z ENDP	; Vec<TabState *>::At
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??EIter@?$Vec@PAUSessionData@@@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??EIter@?$Vec@PAUSessionData@@@@QAEAAV01@XZ PROC	; Vec<SessionData *>::Iter::operator++, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 309
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 310
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
; Line 312
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??EIter@?$Vec@PAUSessionData@@@@QAEAAV01@XZ ENDP	; Vec<SessionData *>::Iter::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??DIter@?$Vec@PAUSessionData@@@@QBEAAPAUSessionData@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??DIter@?$Vec@PAUSessionData@@@@QBEAAPAUSessionData@@XZ PROC ; Vec<SessionData *>::Iter::operator*, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 306
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 307
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?At@?$Vec@PAUSessionData@@@@QBEAAPAUSessionData@@I@Z ; Vec<SessionData *>::At
; Line 308
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??DIter@?$Vec@PAUSessionData@@@@QBEAAPAUSessionData@@XZ ENDP ; Vec<SessionData *>::Iter::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Iter@?$Vec@PAUSessionData@@@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv67 = -208						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Iter@?$Vec@PAUSessionData@@@@QBE_NABV01@@Z PROC	; Vec<SessionData *>::Iter::operator!=, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 303
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 304
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]
; Line 305
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??9Iter@?$Vec@PAUSessionData@@@@QBE_NABV01@@Z ENDP	; Vec<SessionData *>::Iter::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Iter@?$Vec@PAUSessionData@@@@QAE@PAV1@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_vec$ = 8						; size = 4
_pos$ = 12						; size = 4
??0Iter@?$Vec@PAUSessionData@@@@QAE@PAV1@I@Z PROC	; Vec<SessionData *>::Iter::Iter, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 301
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _vec$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0Iter@?$Vec@PAUSessionData@@@@QAE@PAV1@I@Z ENDP	; Vec<SessionData *>::Iter::Iter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?end@?$Vec@PAUSessionData@@@@QAE?AVIter@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$Vec@PAUSessionData@@@@QAE?AVIter@1@XZ PROC	; Vec<SessionData *>::end, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 318
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 319
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Iter@?$Vec@PAUSessionData@@@@QAE@PAV1@I@Z ; Vec<SessionData *>::Iter::Iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 320
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$Vec@PAUSessionData@@@@QAE?AVIter@1@XZ ENDP	; Vec<SessionData *>::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?begin@?$Vec@PAUSessionData@@@@QAE?AVIter@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$Vec@PAUSessionData@@@@QAE?AVIter@1@XZ PROC	; Vec<SessionData *>::begin, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 315
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 316
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Iter@?$Vec@PAUSessionData@@@@QAE@PAV1@I@Z ; Vec<SessionData *>::Iter::Iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 317
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$Vec@PAUSessionData@@@@QAE?AVIter@1@XZ ENDP	; Vec<SessionData *>::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Count@?$Vec@PAUSessionData@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Count@?$Vec@PAUSessionData@@@@QBEIXZ PROC		; Vec<SessionData *>::Count, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 154
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Count@?$Vec@PAUSessionData@@@@QBEIXZ ENDP		; Vec<SessionData *>::Count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?At@?$Vec@PAUSessionData@@@@QBEAAPAUSessionData@@I@Z
_TEXT	SEGMENT
tv67 = -205						; size = 1
_this$ = -8						; size = 4
_idx$ = 8						; size = 4
?At@?$Vec@PAUSessionData@@@@QBEAAPAUSessionData@@I@Z PROC ; Vec<SessionData *>::At, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN5@At:
; Line 142
	xor	eax, eax
	jne	SHORT $LN5@At
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _idx$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jb	SHORT $LN9@At
	mov	BYTE PTR tv67[ebp], 1
	jmp	SHORT $LN10@At
$LN9@At:
	mov	BYTE PTR tv67[ebp], 0
$LN10@At:
	movzx	edx, BYTE PTR tv67[ebp]
	push	edx
	call	?CrashIfFunc@@YAX_N@Z			; CrashIfFunc
	add	esp, 4
	xor	eax, eax
	jne	SHORT $LN5@At
; Line 143
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _idx$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
; Line 144
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?At@?$Vec@PAUSessionData@@@@QBEAAPAUSessionData@@I@Z ENDP ; Vec<SessionData *>::At
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$StartsWith@D@str@@YA_NPBD0@Z
_TEXT	SEGMENT
_str$ = 8						; size = 4
_txt$ = 12						; size = 4
??$StartsWith@D@str@@YA_NPBD0@Z PROC			; str::StartsWith<char>, COMDAT
; File c:\workspace\sumatrapdf-master\src\utils\strutil.h
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 46
	mov	eax, DWORD PTR _txt$[ebp]
	push	eax
	call	?Len@str@@YAIPBD@Z			; str::Len
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _str$[ebp]
	push	edx
	call	?EqN@str@@YA_NPBD0I@Z			; str::EqN
	add	esp, 12					; 0000000cH
; Line 47
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$StartsWith@D@str@@YA_NPBD0@Z ENDP			; str::StartsWith<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RunMessageLoop@@YAHXZ
_TEXT	SEGMENT
tv82 = -268						; size = 4
_accHwnd$1 = -68					; size = 4
_win$2 = -56						; size = 4
_msg$ = -44						; size = 28
_accTable$ = -8						; size = 4
?RunMessageLoop@@YAHXZ PROC				; RunMessageLoop, COMDAT
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 506
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 507
	mov	esi, esp
	push	4000					; 00000fa0H
	mov	edi, esp
	push	0
	call	DWORD PTR __imp__GetModuleHandleW@4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__LoadAcceleratorsW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _accTable$[ebp], eax
; Line 508
	mov	DWORD PTR _msg$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _msg$[ebp+4], eax
	mov	DWORD PTR _msg$[ebp+8], eax
	mov	DWORD PTR _msg$[ebp+12], eax
	mov	DWORD PTR _msg$[ebp+16], eax
	mov	DWORD PTR _msg$[ebp+20], eax
	mov	DWORD PTR _msg$[ebp+24], eax
$LN2@RunMessage:
; Line 510
	mov	esi, esp
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__GetMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN3@RunMessage
; Line 512
	mov	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	?FindWindowInfoByHwnd@@YAPAVWindowInfo@@PAUHWND__@@@Z ; FindWindowInfoByHwnd
	add	esp, 4
	mov	DWORD PTR _win$2[ebp], eax
; Line 513
	cmp	DWORD PTR _win$2[ebp], 0
	je	SHORT $LN6@RunMessage
	mov	eax, DWORD PTR _win$2[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	DWORD PTR tv82[ebp], ecx
	jmp	SHORT $LN7@RunMessage
$LN6@RunMessage:
	mov	edx, DWORD PTR _msg$[ebp]
	mov	DWORD PTR tv82[ebp], edx
$LN7@RunMessage:
	mov	eax, DWORD PTR tv82[ebp]
	mov	DWORD PTR _accHwnd$1[ebp], eax
; Line 514
	mov	esi, esp
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _accTable$[ebp]
	push	ecx
	mov	edx, DWORD PTR _accHwnd$1[ebp]
	push	edx
	call	DWORD PTR __imp__TranslateAcceleratorW@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN4@RunMessage
; Line 515
	jmp	SHORT $LN2@RunMessage
$LN4@RunMessage:
; Line 517
	mov	esi, esp
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__TranslateMessage@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 518
	mov	esi, esp
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__DispatchMessageW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 519
	jmp	$LN2@RunMessage
$LN3@RunMessage:
; Line 521
	mov	eax, DWORD PTR _msg$[ebp+8]
; Line 522
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@RunMessage
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@RunMessage:
	DD	1
	DD	$LN10@RunMessage
$LN10@RunMessage:
	DD	-44					; ffffffd4H
	DD	28					; 0000001cH
	DD	$LN9@RunMessage
$LN9@RunMessage:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
?RunMessageLoop@@YAHXZ ENDP				; RunMessageLoop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RegisterForPdfExtentions@@YA_NPAUHWND__@@@Z
_TEXT	SEGMENT
tv83 = -208						; size = 4
_result$1 = -8						; size = 4
_hwnd$ = 8						; size = 4
?RegisterForPdfExtentions@@YA_NPAUHWND__@@@Z PROC	; RegisterForPdfExtentions, COMDAT
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 484
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 485
	call	?IsRunningInPortableMode@@YA_NXZ	; IsRunningInPortableMode
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@RegisterFo
	push	8
	call	?HasPermission@@YA_NH@Z			; HasPermission
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@RegisterFo
	cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	; gPluginURL
	je	SHORT $LN2@RegisterFo
$LN3@RegisterFo:
; Line 486
	xor	al, al
	jmp	$LN1@RegisterFo
$LN2@RegisterFo:
; Line 488
	call	?IsExeAssociatedWithPdfExtension@@YA_NXZ ; IsExeAssociatedWithPdfExtension
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@RegisterFo
; Line 489
	mov	al, 1
	jmp	$LN1@RegisterFo
$LN4@RegisterFo:
; Line 493
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	movzx	ecx, BYTE PTR [eax+180]
	test	ecx, ecx
	jne	SHORT $LN5@RegisterFo
; Line 494
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	add	eax, 180				; 000000b4H
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	?Dialog_PdfAssociate@@YAHPAUHWND__@@PA_N@Z ; Dialog_PdfAssociate
	add	esp, 8
	mov	DWORD PTR _result$1[ebp], eax
; Line 495
	cmp	DWORD PTR _result$1[ebp], 6
	jne	SHORT $LN8@RegisterFo
	mov	DWORD PTR tv83[ebp], OFFSET ??_C@_19GMJJNAOJ@?$AA?4?$AAp?$AAd?$AAf?$AA?$AA@
	jmp	SHORT $LN9@RegisterFo
$LN8@RegisterFo:
	mov	DWORD PTR tv83[ebp], 0
$LN9@RegisterFo:
	mov	eax, DWORD PTR tv83[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	add	ecx, 176				; 000000b0H
	push	ecx
	call	?ReplacePtr@str@@YAXPAPA_WPB_W@Z	; str::ReplacePtr
	add	esp, 8
$LN5@RegisterFo:
; Line 498
	push	OFFSET ??_C@_19GMJJNAOJ@?$AA?4?$AAp?$AAd?$AAf?$AA?$AA@
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	ecx, DWORD PTR [eax+176]
	push	ecx
	call	?EqI@str@@YA_NPB_W0@Z			; str::EqI
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN6@RegisterFo
; Line 499
	xor	al, al
	jmp	SHORT $LN1@RegisterFo
$LN6@RegisterFo:
; Line 501
	call	?AssociateExeWithPdfExtension@@YAXXZ	; AssociateExeWithPdfExtension
; Line 502
	mov	al, 1
$LN1@RegisterFo:
; Line 503
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RegisterForPdfExtentions@@YA_NPAUHWND__@@@Z ENDP	; RegisterForPdfExtentions
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FindPrevInstWindow@@YAPAUHWND__@@PAPAX@Z
_TEXT	SEGMENT
tv133 = -352						; size = 4
$T1 = -344						; size = 4
$T2 = -332						; size = 4
$T3 = -320						; size = 4
_wndProcId$4 = -116					; size = 4
_hwnd$ = -104						; size = 4
_prevProcId$ = -92					; size = 4
_procId$ = -80						; size = 4
_hasPrevInst$ = -65					; size = 1
_hMap$ = -56						; size = 4
_retriesLeft$ = -44					; size = 4
_mapId$ = -32						; size = 4
_hash$ = -20						; size = 4
_exePath$ = -8						; size = 4
_hMutex$ = 8						; size = 4
?FindPrevInstWindow@@YAPAUHWND__@@PAPAX@Z PROC		; FindPrevInstWindow, COMDAT
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 430
	push	ebp
	mov	ebp, esp
	sub	esp, 352				; 00000160H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 88					; 00000058H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 433
	call	?GetExePath@@YAPA_WXZ			; GetExePath
	push	eax
	lea	ecx, DWORD PTR _exePath$[ebp]
	call	??0?$ScopedMem@_W@@QAE@PA_W@Z		; ScopedMem<wchar_t>::ScopedMem<wchar_t>
; Line 434
	lea	ecx, DWORD PTR _exePath$[ebp]
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	push	eax
	call	?ToLower@str@@YAXPA_W@Z			; str::ToLower
	add	esp, 4
; Line 435
	lea	ecx, DWORD PTR _exePath$[ebp]
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	push	eax
	call	?Len@str@@YAIPB_W@Z			; str::Len
	add	esp, 4
	shl	eax, 1
	push	eax
	lea	ecx, DWORD PTR _exePath$[ebp]
	call	?Get@?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::Get
	push	eax
	call	?MurmurHash2@@YAIPBXI@Z			; MurmurHash2
	add	esp, 8
	mov	DWORD PTR _hash$[ebp], eax
; Line 436
	mov	eax, DWORD PTR _hash$[ebp]
	push	eax
	push	OFFSET ??_C@_1CA@IEDCKEJO@?$AAS?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAP?$AAD?$AAF?$AA?9?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AA@
	call	?Format@str@@YAPA_WPB_WZZ		; str::Format
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _mapId$[ebp]
	call	??0?$ScopedMem@_W@@QAE@PA_W@Z		; ScopedMem<wchar_t>::ScopedMem<wchar_t>
; Line 438
	mov	DWORD PTR _retriesLeft$[ebp], 3
$Retry$19:
; Line 441
	lea	ecx, DWORD PTR _mapId$[ebp]
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	mov	esi, esp
	push	eax
	push	4
	push	0
	push	4
	push	0
	push	-1
	call	DWORD PTR __imp__CreateFileMappingW@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hMap$[ebp], eax
; Line 442
	cmp	DWORD PTR _hMap$[ebp], 0
	jne	SHORT $LN4@FindPrevIn
; Line 443
	jmp	$Error$20
$LN4@FindPrevIn:
; Line 444
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 183				; 000000b7H
	jne	SHORT $LN12@FindPrevIn
	mov	DWORD PTR tv133[ebp], 1
	jmp	SHORT $LN13@FindPrevIn
$LN12@FindPrevIn:
	mov	DWORD PTR tv133[ebp], 0
$LN13@FindPrevIn:
	mov	al, BYTE PTR tv133[ebp]
	mov	BYTE PTR _hasPrevInst$[ebp], al
; Line 445
	mov	esi, esp
	push	4
	push	0
	push	0
	push	983071					; 000f001fH
	mov	eax, DWORD PTR _hMap$[ebp]
	push	eax
	call	DWORD PTR __imp__MapViewOfFile@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _procId$[ebp], eax
; Line 446
	cmp	DWORD PTR _procId$[ebp], 0
	jne	SHORT $LN6@FindPrevIn
; Line 447
	mov	esi, esp
	mov	eax, DWORD PTR _hMap$[ebp]
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 448
	jmp	$Error$20
$LN6@FindPrevIn:
; Line 450
	movzx	eax, BYTE PTR _hasPrevInst$[ebp]
	test	eax, eax
	jne	SHORT $LN8@FindPrevIn
; Line 451
	mov	esi, esp
	call	DWORD PTR __imp__GetCurrentProcessId@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _procId$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 452
	mov	esi, esp
	mov	eax, DWORD PTR _procId$[ebp]
	push	eax
	call	DWORD PTR __imp__UnmapViewOfFile@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 453
	mov	eax, DWORD PTR _hMutex$[ebp]
	mov	ecx, DWORD PTR _hMap$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 454
	mov	DWORD PTR $T3[ebp], 0
	lea	ecx, DWORD PTR _mapId$[ebp]
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	lea	ecx, DWORD PTR _exePath$[ebp]
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	mov	eax, DWORD PTR $T3[ebp]
	jmp	$LN1@FindPrevIn
$LN8@FindPrevIn:
; Line 458
	mov	eax, DWORD PTR _procId$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _prevProcId$[ebp], ecx
; Line 459
	mov	esi, esp
	mov	eax, DWORD PTR _procId$[ebp]
	push	eax
	call	DWORD PTR __imp__UnmapViewOfFile@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 460
	mov	esi, esp
	mov	eax, DWORD PTR _hMap$[ebp]
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 461
	mov	DWORD PTR _hwnd$[ebp], 0
$LN2@FindPrevIn:
; Line 462
	mov	esi, esp
	push	0
	push	OFFSET ??_C@_1CE@PHGKLOIF@?$AAS?$AAU?$AAM?$AAA?$AAT?$AAR?$AAA?$AA_?$AAP?$AAD?$AAF?$AA_?$AAF?$AAR?$AAA?$AAM?$AAE?$AA?$AA@
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	push	0
	call	DWORD PTR __imp__FindWindowExW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hwnd$[ebp], eax
	cmp	DWORD PTR _hwnd$[ebp], 0
	je	SHORT $Error$20
; Line 464
	mov	esi, esp
	lea	eax, DWORD PTR _wndProcId$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowThreadProcessId@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 465
	mov	eax, DWORD PTR _wndProcId$4[ebp]
	cmp	eax, DWORD PTR _prevProcId$[ebp]
	jne	SHORT $LN9@FindPrevIn
; Line 466
	mov	esi, esp
	mov	eax, DWORD PTR _prevProcId$[ebp]
	push	eax
	call	DWORD PTR __imp__AllowSetForegroundWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 467
	mov	eax, DWORD PTR _hwnd$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	lea	ecx, DWORD PTR _mapId$[ebp]
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	lea	ecx, DWORD PTR _exePath$[ebp]
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	mov	eax, DWORD PTR $T2[ebp]
	jmp	SHORT $LN1@FindPrevIn
$LN9@FindPrevIn:
; Line 469
	jmp	SHORT $LN2@FindPrevIn
$Error$20:
; Line 473
	mov	eax, DWORD PTR _retriesLeft$[ebp]
	sub	eax, 1
	mov	DWORD PTR _retriesLeft$[ebp], eax
	jns	SHORT $LN10@FindPrevIn
; Line 474
	mov	DWORD PTR $T1[ebp], 0
	lea	ecx, DWORD PTR _mapId$[ebp]
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	lea	ecx, DWORD PTR _exePath$[ebp]
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	mov	eax, DWORD PTR $T1[ebp]
	jmp	SHORT $LN1@FindPrevIn
$LN10@FindPrevIn:
; Line 475
	mov	esi, esp
	push	100					; 00000064H
	call	DWORD PTR __imp__Sleep@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 476
	jmp	$Retry$19
; Line 477
	lea	ecx, DWORD PTR _mapId$[ebp]
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	lea	ecx, DWORD PTR _exePath$[ebp]
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
$LN1@FindPrevIn:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@FindPrevIn
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN18@FindPrevIn:
	DD	3
	DD	$LN17@FindPrevIn
$LN17@FindPrevIn:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN14@FindPrevIn
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN15@FindPrevIn
	DD	-116					; ffffff8cH
	DD	4
	DD	$LN16@FindPrevIn
$LN16@FindPrevIn:
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	73					; 00000049H
	DB	100					; 00000064H
	DB	0
$LN15@FindPrevIn:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	73					; 00000049H
	DB	100					; 00000064H
	DB	0
$LN14@FindPrevIn:
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
?FindPrevInstWindow@@YAPAUHWND__@@PAPAX@Z ENDP		; FindPrevInstWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetupCrashHandler@@YAXXZ
_TEXT	SEGMENT
_crashDumpPath$ = -32					; size = 4
_tmpDir$ = -20						; size = 4
_symDir$ = -8						; size = 4
?SetupCrashHandler@@YAXXZ PROC				; SetupCrashHandler, COMDAT
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 418
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 419
	lea	ecx, DWORD PTR _symDir$[ebp]
	call	??0?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::ScopedMem<wchar_t>
; Line 420
	push	0
	call	?GetTempPathW@path@@YAPA_WPB_W@Z	; path::GetTempPathW
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _tmpDir$[ebp]
	call	??0?$ScopedMem@_W@@QAE@PA_W@Z		; ScopedMem<wchar_t>::ScopedMem<wchar_t>
; Line 421
	lea	ecx, DWORD PTR _tmpDir$[ebp]
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	test	eax, eax
	je	SHORT $LN2@SetupCrash
; Line 422
	push	OFFSET ??_C@_1CG@PBNBCKFL@?$AAS?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAP?$AAD?$AAF?$AA?9?$AAs?$AAy?$AAm?$AAb?$AAo?$AAl?$AAs?$AA?$AA@
	lea	ecx, DWORD PTR _tmpDir$[ebp]
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	push	eax
	call	?Join@path@@YAPA_WPB_W0@Z		; path::Join
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _symDir$[ebp]
	call	?Set@?$ScopedMem@_W@@QAEXPA_W@Z		; ScopedMem<wchar_t>::Set
; Line 423
	jmp	SHORT $LN3@SetupCrash
$LN2@SetupCrash:
; Line 424
	push	OFFSET ??_C@_1CG@PBNBCKFL@?$AAS?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAP?$AAD?$AAF?$AA?9?$AAs?$AAy?$AAm?$AAb?$AAo?$AAl?$AAs?$AA?$AA@
	call	?AppGenDataFilename@@YAPA_WPB_W@Z	; AppGenDataFilename
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _symDir$[ebp]
	call	?Set@?$ScopedMem@_W@@QAEXPA_W@Z		; ScopedMem<wchar_t>::Set
$LN3@SetupCrash:
; Line 425
	push	OFFSET ??_C@_1CI@KINBKILN@?$AAs?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAp?$AAd?$AAf?$AAc?$AAr?$AAa?$AAs?$AAh?$AA?4?$AAd?$AAm?$AAp?$AA?$AA@
	call	?AppGenDataFilename@@YAPA_WPB_W@Z	; AppGenDataFilename
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _crashDumpPath$[ebp]
	call	??0?$ScopedMem@_W@@QAE@PA_W@Z		; ScopedMem<wchar_t>::ScopedMem<wchar_t>
; Line 426
	lea	ecx, DWORD PTR _symDir$[ebp]
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	push	eax
	lea	ecx, DWORD PTR _crashDumpPath$[ebp]
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	push	eax
	call	?InstallCrashHandler@@YAXPB_W0@Z	; InstallCrashHandler
	add	esp, 8
; Line 427
	lea	ecx, DWORD PTR _crashDumpPath$[ebp]
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	lea	ecx, DWORD PTR _tmpDir$[ebp]
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	lea	ecx, DWORD PTR _symDir$[ebp]
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@SetupCrash
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@SetupCrash:
	DD	3
	DD	$LN8@SetupCrash
$LN8@SetupCrash:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@SetupCrash
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@SetupCrash
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@SetupCrash
$LN7@SetupCrash:
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	68					; 00000044H
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN6@SetupCrash:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	0
$LN5@SetupCrash:
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	109					; 0000006dH
	DB	68					; 00000044H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	0
?SetupCrashHandler@@YAXXZ ENDP				; SetupCrashHandler
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetupPluginMode@@YA_NAAVCommandLineInfo@@@Z
_TEXT	SEGMENT
_pageNo$1 = -136					; size = 4
_part$2 = -124						; size = 4
_k$3 = -112						; size = 4
_parts$4 = -100						; size = 84
_args$5 = -8						; size = 4
_i$ = 8							; size = 4
?SetupPluginMode@@YA_NAAVCommandLineInfo@@@Z PROC	; SetupPluginMode, COMDAT
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 355
	push	ebp
	mov	ebp, esp
	sub	esp, 332				; 0000014cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-332]
	mov	ecx, 83					; 00000053H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 356
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax+224]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN8@SetupPlugi
	mov	ecx, DWORD PTR _i$[ebp]
	call	?Count@?$Vec@PA_W@@QBEIXZ		; Vec<wchar_t *>::Count
	test	eax, eax
	jne	SHORT $LN7@SetupPlugi
$LN8@SetupPlugi:
; Line 357
	xor	al, al
	jmp	$LN1@SetupPlugi
$LN7@SetupPlugi:
; Line 359
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 228				; 000000e4H
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	mov	DWORD PTR ?gPluginURL@@3PB_WB, eax	; gPluginURL
; Line 360
	cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	; gPluginURL
	jne	SHORT $LN9@SetupPlugi
; Line 361
	push	0
	mov	ecx, DWORD PTR _i$[ebp]
	call	?At@?$Vec@PA_W@@QBEAAPA_WI@Z		; Vec<wchar_t *>::At
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR ?gPluginURL@@3PB_WB, eax	; gPluginURL
$LN9@SetupPlugi:
; Line 363
	mov	ecx, DWORD PTR _i$[ebp]
	call	?Count@?$Vec@PA_W@@QBEIXZ		; Vec<wchar_t *>::Count
	cmp	eax, 1
	je	SHORT $LN18@SetupPlugi
	mov	eax, DWORD PTR ?__LINE__Var@?0??SetupPluginMode@@YA_NAAVCommandLineInfo@@@Z@4JA
	add	eax, 8
	push	eax
	push	OFFSET ??_C@_1GM@OAGNGMKE@?$AAc?$AA?3?$AA?2?$AAw?$AAo?$AAr?$AAk?$AAs?$AAp?$AAa?$AAc?$AAe?$AA?2?$AAs?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAp?$AAd?$AAf?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs@
	push	OFFSET ??_C@_1DC@NHINHEEK@?$AAi?$AA?4?$AAf?$AAi?$AAl?$AAe?$AAN?$AAa?$AAm?$AAe?$AAs?$AA?4?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA1?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN18@SetupPlugi:
; Line 364
	mov	ecx, DWORD PTR _i$[ebp]
	call	?Count@?$Vec@PA_W@@QBEIXZ		; Vec<wchar_t *>::Count
	cmp	eax, 1
	jbe	SHORT $LN3@SetupPlugi
; Line 365
	push	1
	mov	ecx, DWORD PTR _i$[ebp]
	call	?Pop@?$Vec@PA_W@@QAEPA_WXZ		; Vec<wchar_t *>::Pop
	push	eax
	call	__free_dbg
	add	esp, 8
; Line 366
	jmp	SHORT $LN18@SetupPlugi
$LN3@SetupPlugi:
; Line 372
	push	68					; 00000044H
	call	?RestrictPolicies@@YAXH@Z		; RestrictPolicies
	add	esp, 4
; Line 374
	mov	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR [eax+169], 0
	mov	ecx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [ecx+188], 0
; Line 375
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	BYTE PTR [eax+5], 0
; Line 377
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	BYTE PTR [eax+241], 0
; Line 379
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	BYTE PTR [eax+172], 1
; Line 381
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	BYTE PTR [eax+4], 0
; Line 383
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	BYTE PTR [eax+228], 0
; Line 384
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	cmp	DWORD PTR [eax+276], 0
	jne	SHORT $LN10@SetupPlugi
; Line 388
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	DWORD PTR [eax+276], 4
; Line 389
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	movss	xmm0, DWORD PTR __real@c0000000
	movss	DWORD PTR [eax+280], xmm0
$LN10@SetupPlugi:
; Line 393
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	BYTE PTR [eax+104], 1
	mov	ecx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	BYTE PTR [ecx+72], 1
; Line 397
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 228				; 000000e4H
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	test	eax, eax
	je	$LN11@SetupPlugi
	push	35					; 00000023H
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 228				; 000000e4H
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	push	eax
	call	?FindChar@str@@YAPA_WPA_W_W@Z		; str::FindChar
	add	esp, 8
	test	eax, eax
	je	$LN11@SetupPlugi
; Line 398
	push	35					; 00000023H
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 228				; 000000e4H
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	push	eax
	call	?FindChar@str@@YAPA_WPA_W_W@Z		; str::FindChar
	add	esp, 8
	add	eax, 2
	push	eax
	call	?Dup@str@@YAPA_WPB_W@Z			; str::Dup
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _args$5[ebp]
	call	??0?$ScopedMem@_W@@QAE@PA_W@Z		; ScopedMem<wchar_t>::ScopedMem<wchar_t>
; Line 399
	push	OFFSET ??_C@_13FLOCNAAB@?$AA?$CG?$AA?$AA@
	push	OFFSET ??_C@_13GMDMCADD@?$AA?$CD?$AA?$AA@
	lea	ecx, DWORD PTR _args$5[ebp]
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	push	eax
	call	?TransChars@str@@YAIPA_WPB_W1@Z		; str::TransChars
	add	esp, 12					; 0000000cH
; Line 400
	lea	ecx, DWORD PTR _parts$4[ebp]
	call	??0WStrVec@@QAE@XZ			; WStrVec::WStrVec
; Line 401
	push	1
	push	OFFSET ??_C@_13FLOCNAAB@?$AA?$CG?$AA?$AA@
	lea	ecx, DWORD PTR _args$5[ebp]
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	push	eax
	lea	ecx, DWORD PTR _parts$4[ebp]
	call	?Split@WStrVec@@QAEIPB_W0_N@Z		; WStrVec::Split
; Line 402
	mov	DWORD PTR _k$3[ebp], 0
	jmp	SHORT $LN6@SetupPlugi
$LN4@SetupPlugi:
	mov	eax, DWORD PTR _k$3[ebp]
	add	eax, 1
	mov	DWORD PTR _k$3[ebp], eax
$LN6@SetupPlugi:
	lea	ecx, DWORD PTR _parts$4[ebp]
	call	?Count@?$Vec@PA_W@@QBEIXZ		; Vec<wchar_t *>::Count
	cmp	DWORD PTR _k$3[ebp], eax
	jae	$LN5@SetupPlugi
; Line 403
	mov	eax, DWORD PTR _k$3[ebp]
	push	eax
	lea	ecx, DWORD PTR _parts$4[ebp]
	call	?At@?$Vec@PA_W@@QBEAAPA_WI@Z		; Vec<wchar_t *>::At
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _part$2[ebp], ecx
; Line 405
	push	OFFSET ??_C@_1M@BOBDMABN@?$AAp?$AAa?$AAg?$AAe?$AA?$DN?$AA?$AA@
	mov	eax, DWORD PTR _part$2[ebp]
	push	eax
	call	?StartsWithI@str@@YA_NPB_W0@Z		; str::StartsWithI
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@SetupPlugi
	lea	eax, DWORD PTR _pageNo$1[ebp]
	push	eax
	push	OFFSET ??_C@_1M@ILEIMEED@?$AA?$DN?$AA?$CF?$AAd?$AA?$CF?$AA$?$AA?$AA@
	mov	ecx, DWORD PTR _part$2[ebp]
	add	ecx, 8
	push	ecx
	call	?Parse@str@@YAPB_WPB_W0ZZ		; str::Parse
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN12@SetupPlugi
; Line 406
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _pageNo$1[ebp]
	mov	DWORD PTR [eax+196], ecx
	jmp	$LN16@SetupPlugi
$LN12@SetupPlugi:
; Line 407
	push	OFFSET ??_C@_1BG@PKGIHOED@?$AAn?$AAa?$AAm?$AAe?$AAd?$AAd?$AAe?$AAs?$AAt?$AA?$DN?$AA?$AA@
	mov	eax, DWORD PTR _part$2[ebp]
	push	eax
	call	?StartsWithI@str@@YA_NPB_W0@Z		; str::StartsWithI
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN14@SetupPlugi
	mov	eax, 2
	imul	ecx, eax, 10
	mov	edx, DWORD PTR _part$2[ebp]
	movzx	eax, WORD PTR [edx+ecx]
	test	eax, eax
	je	SHORT $LN14@SetupPlugi
; Line 408
	mov	eax, DWORD PTR _part$2[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	?Dup@str@@YAPA_WPB_W@Z			; str::Dup
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 192				; 000000c0H
	call	?Set@?$ScopedMem@_W@@QAEXPA_W@Z		; ScopedMem<wchar_t>::Set
	jmp	SHORT $LN16@SetupPlugi
$LN14@SetupPlugi:
; Line 409
	push	61					; 0000003dH
	mov	eax, DWORD PTR _part$2[ebp]
	push	eax
	call	?FindChar@str@@YAPA_WPA_W_W@Z		; str::FindChar
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN16@SetupPlugi
	mov	eax, 2
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _part$2[ebp]
	movzx	eax, WORD PTR [edx+ecx]
	test	eax, eax
	je	SHORT $LN16@SetupPlugi
; Line 410
	mov	eax, DWORD PTR _part$2[ebp]
	push	eax
	call	?Dup@str@@YAPA_WPB_W@Z			; str::Dup
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 192				; 000000c0H
	call	?Set@?$ScopedMem@_W@@QAEXPA_W@Z		; ScopedMem<wchar_t>::Set
$LN16@SetupPlugi:
; Line 411
	jmp	$LN4@SetupPlugi
$LN5@SetupPlugi:
; Line 412
	lea	ecx, DWORD PTR _parts$4[ebp]
	call	??1WStrVec@@QAE@XZ			; WStrVec::~WStrVec
	lea	ecx, DWORD PTR _args$5[ebp]
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
$LN11@SetupPlugi:
; Line 414
	mov	al, 1
$LN1@SetupPlugi:
; Line 415
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@SetupPlugi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 332				; 0000014cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN23@SetupPlugi:
	DD	3
	DD	$LN22@SetupPlugi
$LN22@SetupPlugi:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN19@SetupPlugi
	DD	-100					; ffffff9cH
	DD	84					; 00000054H
	DD	$LN20@SetupPlugi
	DD	-136					; ffffff78H
	DD	4
	DD	$LN21@SetupPlugi
$LN21@SetupPlugi:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	111					; 0000006fH
	DB	0
$LN20@SetupPlugi:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN19@SetupPlugi:
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
?SetupPluginMode@@YA_NAAVCommandLineInfo@@@Z ENDP	; SetupPluginMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RestoreTabOnStartup@@YAXPAVWindowInfo@@PAUTabState@@@Z
_TEXT	SEGMENT
$T1 = -280						; size = 24
_zoom$ = -56						; size = 4
_displayMode$ = -44					; size = 4
_tab$ = -32						; size = 4
_args$ = -20						; size = 16
_win$ = 8						; size = 4
_state$ = 12						; size = 4
?RestoreTabOnStartup@@YAXPAVWindowInfo@@PAUTabState@@@Z PROC ; RestoreTabOnStartup, COMDAT
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 325
	push	ebp
	mov	ebp, esp
	sub	esp, 284				; 0000011cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 71					; 00000047H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 326
	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	ecx, DWORD PTR _args$[ebp]
	call	??0LoadArgs@@QAE@PB_WPAVWindowInfo@@@Z	; LoadArgs::LoadArgs
; Line 327
	lea	eax, DWORD PTR _args$[ebp]
	push	eax
	call	?LoadDocument@@YAPAVWindowInfo@@AAULoadArgs@@@Z ; LoadDocument
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN2@RestoreTab
; Line 328
	jmp	$LN1@RestoreTab
$LN2@RestoreTab:
; Line 329
	mov	eax, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	DWORD PTR _tab$[ebp], ecx
; Line 330
	cmp	DWORD PTR _tab$[ebp], 0
	je	SHORT $LN4@RestoreTab
	mov	eax, DWORD PTR _tab$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN3@RestoreTab
$LN4@RestoreTab:
; Line 331
	jmp	$LN1@RestoreTab
$LN3@RestoreTab:
; Line 333
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	ecx, DWORD PTR _tab$[ebp]
	add	ecx, 20					; 00000014H
	call	??4?$Vec@H@@QAEAAV0@ABV0@@Z		; Vec<int>::operator=
; Line 334
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	movzx	ecx, BYTE PTR [eax+173]
	push	ecx
	mov	edx, DWORD PTR _state$[ebp]
	movzx	eax, BYTE PTR [edx+28]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?SetSidebarVisibility@@YAXPAVWindowInfo@@_N1@Z ; SetSidebarVisibility
	add	esp, 12					; 0000000cH
; Line 336
	push	0
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?ToDisplayMode@conv@prefs@@YA?AW4DisplayMode@@PB_WW43@@Z ; prefs::conv::ToDisplayMode
	add	esp, 8
	mov	DWORD PTR _displayMode$[ebp], eax
; Line 337
	cmp	DWORD PTR _displayMode$[ebp], 0
	je	SHORT $LN5@RestoreTab
; Line 338
	push	0
	mov	eax, DWORD PTR _displayMode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?SwitchToDisplayMode@@YAXPAVWindowInfo@@W4DisplayMode@@_N@Z ; SwitchToDisplayMode
	add	esp, 12					; 0000000cH
$LN5@RestoreTab:
; Line 340
	mov	ecx, DWORD PTR _tab$[ebp]
	call	?AsEbook@TabInfo@@QBEPAVEbookController@@XZ ; TabInfo::AsEbook
	test	eax, eax
	jne	SHORT $LN6@RestoreTab
; Line 341
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _tab$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@RestoreTab:
; Line 342
	push	ecx
	movss	xmm0, DWORD PTR __real@c2c60000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	?ToZoom@conv@prefs@@YAMPBDM@Z		; prefs::conv::ToZoom
	add	esp, 8
	fstp	DWORD PTR _zoom$[ebp]
; Line 343
	movss	xmm0, DWORD PTR _zoom$[ebp]
	ucomiss	xmm0, DWORD PTR __real@c2c60000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN9@RestoreTab
; Line 344
	mov	ecx, DWORD PTR _tab$[ebp]
	call	?AsFixed@TabInfo@@QBEPAVDisplayModel@@XZ ; TabInfo::AsFixed
	test	eax, eax
	je	SHORT $LN8@RestoreTab
; Line 345
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR _zoom$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _tab$[ebp]
	call	?AsFixed@TabInfo@@QBEPAVDisplayModel@@XZ ; TabInfo::AsFixed
	mov	ecx, eax
	call	?Relayout@DisplayModel@@QAEXMH@Z	; DisplayModel::Relayout
; Line 346
	jmp	SHORT $LN9@RestoreTab
$LN8@RestoreTab:
; Line 347
	mov	esi, esp
	push	0
	push	ecx
	movss	xmm0, DWORD PTR _zoom$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _tab$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@RestoreTab:
; Line 349
	mov	ecx, DWORD PTR _tab$[ebp]
	call	?AsFixed@TabInfo@@QBEPAVDisplayModel@@XZ ; TabInfo::AsFixed
	test	eax, eax
	je	SHORT $LN10@RestoreTab
; Line 350
	mov	eax, DWORD PTR _state$[ebp]
	cvtsi2sd xmm0, DWORD PTR [eax+24]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _state$[ebp]
	cvtsi2sd xmm0, DWORD PTR [ecx+20]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0ScrollState@@QAE@HNN@Z		; ScrollState::ScrollState
	sub	esp, 24					; 00000018H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+16], edx
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx+20], eax
	mov	ecx, DWORD PTR _tab$[ebp]
	call	?AsFixed@TabInfo@@QBEPAVDisplayModel@@XZ ; TabInfo::AsFixed
	mov	ecx, eax
	call	?SetScrollState@DisplayModel@@QAEXUScrollState@@@Z ; DisplayModel::SetScrollState
$LN10@RestoreTab:
$LN1@RestoreTab:
; Line 352
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@RestoreTab
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN14@RestoreTab:
	DD	1
	DD	$LN13@RestoreTab
$LN13@RestoreTab:
	DD	-20					; ffffffecH
	DD	16					; 00000010H
	DD	$LN12@RestoreTab
$LN12@RestoreTab:
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
?RestoreTabOnStartup@@YAXPAVWindowInfo@@PAUTabState@@@Z ENDP ; RestoreTabOnStartup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LoadOnStartup@@YAPAVWindowInfo@@PB_WAAVCommandLineInfo@@_N@Z
_TEXT	SEGMENT
tv255 = -600						; size = 4
tv74 = -600						; size = 4
_ret$1 = -400						; size = 4
_sourcePath$2 = -388					; size = 4
_rects$3 = -376						; size = 276
_page$4 = -92						; size = 4
_ss$5 = -80						; size = 24
_dm$6 = -48						; size = 4
_win$ = -36						; size = 4
_args$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_filePath$ = 8						; size = 4
_i$ = 12						; size = 4
_isFirstWin$ = 16					; size = 1
?LoadOnStartup@@YAPAVWindowInfo@@PB_WAAVCommandLineInfo@@_N@Z PROC ; LoadOnStartup, COMDAT
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 280
	push	ebp
	mov	ebp, esp
	sub	esp, 600				; 00000258H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-600]
	mov	ecx, 150				; 00000096H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 281
	push	0
	mov	eax, DWORD PTR _filePath$[ebp]
	push	eax
	lea	ecx, DWORD PTR _args$[ebp]
	call	??0LoadArgs@@QAE@PB_WPAVWindowInfo@@@Z	; LoadArgs::LoadArgs
; Line 282
	mov	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [eax+170]
	test	ecx, ecx
	je	SHORT $LN21@LoadOnStar
	mov	edx, DWORD PTR _i$[ebp]
	movzx	eax, BYTE PTR [edx+169]
	test	eax, eax
	jne	SHORT $LN22@LoadOnStar
$LN21@LoadOnStar:
	cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	; gPluginURL
	jne	SHORT $LN22@LoadOnStar
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN23@LoadOnStar
$LN22@LoadOnStar:
	mov	DWORD PTR tv74[ebp], 0
$LN23@LoadOnStar:
	mov	cl, BYTE PTR tv74[ebp]
	mov	BYTE PTR _args$[ebp+8], cl
; Line 283
	lea	eax, DWORD PTR _args$[ebp]
	push	eax
	call	?LoadDocument@@YAPAVWindowInfo@@AAULoadArgs@@@Z ; LoadDocument
	add	esp, 4
	mov	DWORD PTR _win$[ebp], eax
; Line 284
	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN2@LoadOnStar
; Line 285
	mov	eax, DWORD PTR _win$[ebp]
	jmp	$LN1@LoadOnStar
$LN2@LoadOnStar:
; Line 287
	mov	ecx, DWORD PTR _win$[ebp]
	call	?IsDocLoaded@WindowInfo@@QBE_NXZ	; WindowInfo::IsDocLoaded
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@LoadOnStar
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 192				; 000000c0H
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	test	eax, eax
	je	SHORT $LN3@LoadOnStar
	movzx	eax, BYTE PTR _isFirstWin$[ebp]
	test	eax, eax
	je	SHORT $LN3@LoadOnStar
; Line 288
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 192				; 000000c0H
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	push	eax
	mov	eax, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [eax+852]
	call	?GotoNamedDest@LinkHandler@@QAEXPB_W@Z	; LinkHandler::GotoNamedDest
	jmp	SHORT $LN6@LoadOnStar
$LN3@LoadOnStar:
; Line 289
	mov	ecx, DWORD PTR _win$[ebp]
	call	?IsDocLoaded@WindowInfo@@QBE_NXZ	; WindowInfo::IsDocLoaded
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@LoadOnStar
	mov	eax, DWORD PTR _i$[ebp]
	cmp	DWORD PTR [eax+196], 0
	jle	SHORT $LN6@LoadOnStar
	movzx	eax, BYTE PTR _isFirstWin$[ebp]
	test	eax, eax
	je	SHORT $LN6@LoadOnStar
; Line 290
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax+196]
	push	ecx
	mov	edx, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _win$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@LoadOnStar
; Line 291
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax+196]
	push	ecx
	mov	edx, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _win$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@LoadOnStar:
; Line 293
	mov	eax, DWORD PTR _i$[ebp]
	cmp	DWORD PTR [eax+224], 0
	je	SHORT $LN7@LoadOnStar
; Line 294
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax+224]
	push	ecx
	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	call	?MakePluginWindow@@YAXAAVWindowInfo@@PAUHWND__@@@Z ; MakePluginWindow
	add	esp, 8
$LN7@LoadOnStar:
; Line 295
	mov	ecx, DWORD PTR _win$[ebp]
	call	?IsDocLoaded@WindowInfo@@QBE_NXZ	; WindowInfo::IsDocLoaded
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@LoadOnStar
	movzx	eax, BYTE PTR _isFirstWin$[ebp]
	test	eax, eax
	jne	SHORT $LN8@LoadOnStar
$LN9@LoadOnStar:
; Line 296
	mov	eax, DWORD PTR _win$[ebp]
	jmp	$LN1@LoadOnStar
$LN8@LoadOnStar:
; Line 298
	mov	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [eax+201]
	test	ecx, ecx
	jne	SHORT $LN11@LoadOnStar
	mov	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [eax+202]
	test	ecx, ecx
	je	SHORT $LN10@LoadOnStar
$LN11@LoadOnStar:
; Line 299
	mov	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [eax+201]
	test	ecx, ecx
	je	SHORT $LN14@LoadOnStar
	mov	eax, DWORD PTR _win$[ebp]
	movzx	ecx, BYTE PTR [eax+772]
	test	ecx, ecx
	jne	SHORT $LN13@LoadOnStar
$LN14@LoadOnStar:
	mov	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [eax+202]
	test	ecx, ecx
	je	SHORT $LN12@LoadOnStar
	mov	eax, DWORD PTR _win$[ebp]
	cmp	DWORD PTR [eax+776], 0
	je	SHORT $LN12@LoadOnStar
$LN13@LoadOnStar:
; Line 300
	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	call	?ExitFullScreen@@YAXPAVWindowInfo@@@Z	; ExitFullScreen
	add	esp, 4
$LN12@LoadOnStar:
; Line 301
	mov	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [eax+201]
	push	ecx
	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	call	?EnterFullScreen@@YAXPAVWindowInfo@@_N@Z ; EnterFullScreen
	add	esp, 8
$LN10@LoadOnStar:
; Line 303
	mov	eax, DWORD PTR _i$[ebp]
	cmp	DWORD PTR [eax+204], 0
	je	SHORT $LN15@LoadOnStar
; Line 304
	push	0
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	push	ecx
	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	call	?SwitchToDisplayMode@@YAXPAVWindowInfo@@W4DisplayMode@@_N@Z ; SwitchToDisplayMode
	add	esp, 12					; 0000000cH
$LN15@LoadOnStar:
; Line 305
	mov	eax, DWORD PTR _i$[ebp]
	movss	xmm0, DWORD PTR [eax+208]
	ucomiss	xmm0, DWORD PTR __real@c2c60000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN16@LoadOnStar
; Line 306
	push	0
	push	1
	mov	eax, DWORD PTR _i$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+208]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?ZoomToSelection@@YAXPAVWindowInfo@@M_N1@Z ; ZoomToSelection
	add	esp, 16					; 00000010H
$LN16@LoadOnStar:
; Line 307
	mov	eax, DWORD PTR _i$[ebp]
	cmp	DWORD PTR [eax+212], -1
	jne	SHORT $LN18@LoadOnStar
	mov	eax, DWORD PTR _i$[ebp]
	cmp	DWORD PTR [eax+216], -1
	je	SHORT $LN17@LoadOnStar
$LN18@LoadOnStar:
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ ; WindowInfo::AsFixed
	test	eax, eax
	je	SHORT $LN17@LoadOnStar
; Line 308
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ ; WindowInfo::AsFixed
	mov	DWORD PTR _dm$6[ebp], eax
; Line 309
	lea	eax, DWORD PTR _ss$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _dm$6[ebp]
	call	?GetScrollState@DisplayModel@@QAE?AUScrollState@@XZ ; DisplayModel::GetScrollState
; Line 310
	mov	eax, DWORD PTR _i$[ebp]
	cvtsi2sd xmm0, DWORD PTR [eax+212]
	movsd	QWORD PTR _ss$5[ebp+8], xmm0
; Line 311
	mov	eax, DWORD PTR _i$[ebp]
	cvtsi2sd xmm0, DWORD PTR [eax+216]
	movsd	QWORD PTR _ss$5[ebp+16], xmm0
; Line 312
	sub	esp, 24					; 00000018H
	mov	eax, esp
	mov	ecx, DWORD PTR _ss$5[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _ss$5[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _ss$5[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _ss$5[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _ss$5[ebp+16]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR _ss$5[ebp+20]
	mov	DWORD PTR [eax+20], edx
	mov	ecx, DWORD PTR _dm$6[ebp]
	call	?SetScrollState@DisplayModel@@QAEXUScrollState@@@Z ; DisplayModel::SetScrollState
$LN17@LoadOnStar:
; Line 314
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 180				; 000000b4H
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	test	eax, eax
	je	$LN19@LoadOnStar
	mov	eax, DWORD PTR _i$[ebp]
	cmp	DWORD PTR [eax+184], 0
	je	$LN19@LoadOnStar
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ ; WindowInfo::AsFixed
	test	eax, eax
	je	$LN19@LoadOnStar
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ ; WindowInfo::AsFixed
	cmp	DWORD PTR [eax+20], 0
	je	$LN19@LoadOnStar
; Line 316
	push	0
	push	0
	lea	ecx, DWORD PTR _rects$3[ebp]
	call	??0?$Vec@V?$RectT@H@geomutil@@@@QAE@IPAVAllocator@@@Z ; Vec<geomutil::RectT<int> >::Vec<geomutil::RectT<int> >
; Line 317
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 180				; 000000b4H
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	push	eax
	call	?Normalize@path@@YAPA_WPB_W@Z		; path::Normalize
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _sourcePath$2[ebp]
	call	??0?$ScopedMem@_W@@QAE@PA_W@Z		; ScopedMem<wchar_t>::ScopedMem<wchar_t>
; Line 318
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AsFixed@WindowInfo@@QBEPAVDisplayModel@@XZ ; WindowInfo::AsFixed
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR tv255[ebp], eax
	mov	esi, esp
	lea	ecx, DWORD PTR _rects$3[ebp]
	push	ecx
	lea	edx, DWORD PTR _page$4[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	lea	ecx, DWORD PTR _sourcePath$2[ebp]
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	push	eax
	mov	edx, DWORD PTR tv255[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv255[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ret$1[ebp], eax
; Line 319
	lea	eax, DWORD PTR _rects$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _page$4[ebp]
	push	ecx
	mov	edx, DWORD PTR _ret$1[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	lea	ecx, DWORD PTR _sourcePath$2[ebp]
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	push	eax
	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	call	?ShowForwardSearchResult@@YAXPAVWindowInfo@@PB_WIIIIAAV?$Vec@V?$RectT@H@geomutil@@@@@Z ; ShowForwardSearchResult
	add	esp, 28					; 0000001cH
; Line 320
	lea	ecx, DWORD PTR _sourcePath$2[ebp]
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	lea	ecx, DWORD PTR _rects$3[ebp]
	call	??1?$Vec@V?$RectT@H@geomutil@@@@QAE@XZ	; Vec<geomutil::RectT<int> >::~Vec<geomutil::RectT<int> >
$LN19@LoadOnStar:
; Line 321
	mov	eax, DWORD PTR _win$[ebp]
$LN1@LoadOnStar:
; Line 322
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN30@LoadOnStar
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 600				; 00000258H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN30@LoadOnStar:
	DD	5
	DD	$LN29@LoadOnStar
$LN29@LoadOnStar:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN24@LoadOnStar
	DD	-80					; ffffffb0H
	DD	24					; 00000018H
	DD	$LN25@LoadOnStar
	DD	-92					; ffffffa4H
	DD	4
	DD	$LN26@LoadOnStar
	DD	-376					; fffffe88H
	DD	276					; 00000114H
	DD	$LN27@LoadOnStar
	DD	-388					; fffffe7cH
	DD	4
	DD	$LN28@LoadOnStar
$LN28@LoadOnStar:
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN27@LoadOnStar:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN26@LoadOnStar:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	0
$LN25@LoadOnStar:
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	0
$LN24@LoadOnStar:
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
?LoadOnStartup@@YAPAVWindowInfo@@PB_WAAVCommandLineInfo@@_N@Z ENDP ; LoadOnStartup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?OpenUsingDde@@YAXPAUHWND__@@PB_WAAVCommandLineInfo@@_N@Z
_TEXT	SEGMENT
_res$1 = -644						; size = 4
_cds$2 = -632						; size = 12
_sourcePath$3 = -612					; size = 4
_viewMode$4 = -600					; size = 4
_cmd$ = -588						; size = 52
_fullpath$ = -528					; size = 520
__$ArrayPad$ = -4					; size = 4
_targetWnd$ = 8						; size = 4
_filePath$ = 12						; size = 4
_i$ = 16						; size = 4
_isFirstWin$ = 20					; size = 1
?OpenUsingDde@@YAXPAUHWND__@@PB_WAAVCommandLineInfo@@_N@Z PROC ; OpenUsingDde, COMDAT
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 244
	push	ebp
	mov	ebp, esp
	sub	esp, 840				; 00000348H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-840]
	mov	ecx, 210				; 000000d2H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 247
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _fullpath$[ebp]
	push	eax
	push	260					; 00000104H
	mov	ecx, DWORD PTR _filePath$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetFullPathNameW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 249
	push	0
	push	0
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??0?$Str@_W@str@@QAE@IPAVAllocator@@@Z	; str::Str<wchar_t>::Str<wchar_t>
; Line 250
	lea	eax, DWORD PTR _fullpath$[ebp]
	push	eax
	push	OFFSET ??_C@_1CM@GPNKFOGI@?$AA?$FL?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA0?$AA?0?$AA?5?$AA1?$AA?0?$AA?5?$AA0?$AA?$CJ?$AA?$FN?$AA?$AA@
	lea	ecx, DWORD PTR _cmd$[ebp]
	push	ecx
	call	?AppendFmt@?$Str@_W@str@@QAAXPB_WZZ	; str::Str<wchar_t>::AppendFmt
	add	esp, 12					; 0000000cH
; Line 251
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 192				; 000000c0H
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	test	eax, eax
	je	SHORT $LN2@OpenUsingD
	movzx	eax, BYTE PTR _isFirstWin$[ebp]
	test	eax, eax
	je	SHORT $LN2@OpenUsingD
; Line 252
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax+192]
	push	ecx
	lea	edx, DWORD PTR _fullpath$[ebp]
	push	edx
	push	OFFSET ??_C@_1DI@LKFLACJO@?$AA?$FL?$AAG?$AAo?$AAt?$AAo?$AAN?$AAa?$AAm?$AAe?$AAd?$AAD?$AAe?$AAs?$AAt?$AA?$CI?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?$CJ?$AA?$FN?$AA?$AA@
	lea	eax, DWORD PTR _cmd$[ebp]
	push	eax
	call	?AppendFmt@?$Str@_W@str@@QAAXPB_WZZ	; str::Str<wchar_t>::AppendFmt
	add	esp, 16					; 00000010H
	jmp	SHORT $LN4@OpenUsingD
$LN2@OpenUsingD:
; Line 254
	mov	eax, DWORD PTR _i$[ebp]
	cmp	DWORD PTR [eax+196], 0
	jle	SHORT $LN4@OpenUsingD
	movzx	eax, BYTE PTR _isFirstWin$[ebp]
	test	eax, eax
	je	SHORT $LN4@OpenUsingD
; Line 255
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax+196]
	push	ecx
	lea	edx, DWORD PTR _fullpath$[ebp]
	push	edx
	push	OFFSET ??_C@_1CK@JBMPFIK@?$AA?$FL?$AAG?$AAo?$AAt?$AAo?$AAP?$AAa?$AAg?$AAe?$AA?$CI?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$FN?$AA?$AA@
	lea	eax, DWORD PTR _cmd$[ebp]
	push	eax
	call	?AppendFmt@?$Str@_W@str@@QAAXPB_WZZ	; str::Str<wchar_t>::AppendFmt
	add	esp, 16					; 00000010H
$LN4@OpenUsingD:
; Line 258
	mov	eax, DWORD PTR _i$[ebp]
	cmp	DWORD PTR [eax+204], 0
	jne	SHORT $LN6@OpenUsingD
	mov	eax, DWORD PTR _i$[ebp]
	movss	xmm0, DWORD PTR [eax+208]
	ucomiss	xmm0, DWORD PTR __real@c2c60000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN6@OpenUsingD
	mov	eax, DWORD PTR _i$[ebp]
	cmp	DWORD PTR [eax+212], -1
	je	SHORT $LN5@OpenUsingD
	mov	eax, DWORD PTR _i$[ebp]
	cmp	DWORD PTR [eax+216], -1
	je	SHORT $LN5@OpenUsingD
$LN6@OpenUsingD:
	movzx	eax, BYTE PTR _isFirstWin$[ebp]
	test	eax, eax
	je	SHORT $LN5@OpenUsingD
; Line 259
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	push	ecx
	call	?FromDisplayMode@conv@prefs@@YAPB_WW4DisplayMode@@@Z ; prefs::conv::FromDisplayMode
	add	esp, 4
	mov	DWORD PTR _viewMode$4[ebp], eax
; Line 260
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax+216]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx+212]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+208]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _viewMode$4[ebp]
	push	edx
	lea	eax, DWORD PTR _fullpath$[ebp]
	push	eax
	push	OFFSET ??_C@_1EI@KKJLKIFH@?$AA?$FL?$AAS?$AAe?$AAt?$AAV?$AAi?$AAe?$AAw?$AA?$CI?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CF?$AA?4?$AA2?$AAf?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AA?$CF@
	lea	ecx, DWORD PTR _cmd$[ebp]
	push	ecx
	call	?AppendFmt@?$Str@_W@str@@QAAXPB_WZZ	; str::Str<wchar_t>::AppendFmt
	add	esp, 32					; 00000020H
$LN5@OpenUsingD:
; Line 263
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 180				; 000000b4H
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	test	eax, eax
	je	SHORT $LN7@OpenUsingD
	mov	eax, DWORD PTR _i$[ebp]
	cmp	DWORD PTR [eax+184], 0
	je	SHORT $LN7@OpenUsingD
; Line 264
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 180				; 000000b4H
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	push	eax
	call	?Normalize@path@@YAPA_WPB_W@Z		; path::Normalize
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _sourcePath$3[ebp]
	call	??0?$ScopedMem@_W@@QAE@PA_W@Z		; ScopedMem<wchar_t>::ScopedMem<wchar_t>
; Line 265
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	mov	edx, DWORD PTR _sourcePath$3[ebp]
	push	edx
	lea	eax, DWORD PTR _fullpath$[ebp]
	push	eax
	push	OFFSET ??_C@_1FC@FIABJECI@?$AA?$FL?$AAF?$AAo?$AAr?$AAw?$AAa?$AAr?$AAd?$AAS?$AAe?$AAa?$AAr?$AAc?$AAh?$AA?$CI?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AA0@
	lea	ecx, DWORD PTR _cmd$[ebp]
	push	ecx
	call	?AppendFmt@?$Str@_W@str@@QAAXPB_WZZ	; str::Str<wchar_t>::AppendFmt
	add	esp, 20					; 00000014H
; Line 267
	lea	ecx, DWORD PTR _sourcePath$3[ebp]
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
$LN7@OpenUsingD:
; Line 269
	mov	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [eax+188]
	test	ecx, ecx
	jne	SHORT $LN9@OpenUsingD
; Line 271
	mov	DWORD PTR _cds$2[ebp], 1147430231	; 44646557H
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?Size@?$Vec@_W@@QBEIXZ			; Vec<wchar_t>::Size
	lea	eax, DWORD PTR [eax+eax+2]
	mov	DWORD PTR _cds$2[ebp+4], eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?Get@?$Str@_W@str@@QBEPA_WXZ		; str::Str<wchar_t>::Get
	mov	DWORD PTR _cds$2[ebp+8], eax
; Line 272
	mov	esi, esp
	lea	eax, DWORD PTR _cds$2[ebp]
	push	eax
	push	0
	push	74					; 0000004aH
	mov	ecx, DWORD PTR _targetWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$1[ebp], eax
; Line 273
	cmp	DWORD PTR _res$1[ebp], 0
	je	SHORT $LN9@OpenUsingD
; Line 274
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??1?$Str@_W@str@@QAE@XZ
	jmp	SHORT $LN1@OpenUsingD
$LN9@OpenUsingD:
; Line 276
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?Get@?$Str@_W@str@@QBEPA_WXZ		; str::Str<wchar_t>::Get
	push	eax
	push	OFFSET ??_C@_1BA@IBGCEPCN@?$AAc?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@
	push	OFFSET ??_C@_1BA@DNELNMNE@?$AAS?$AAU?$AAM?$AAA?$AAT?$AAR?$AAA?$AA?$AA@
	call	?DDEExecute@@YA_NPB_W00@Z		; DDEExecute
	add	esp, 12					; 0000000cH
; Line 277
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??1?$Str@_W@str@@QAE@XZ
$LN1@OpenUsingD:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@OpenUsingD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 840				; 00000348H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN16@OpenUsingD:
	DD	4
	DD	$LN15@OpenUsingD
$LN15@OpenUsingD:
	DD	-528					; fffffdf0H
	DD	520					; 00000208H
	DD	$LN11@OpenUsingD
	DD	-588					; fffffdb4H
	DD	52					; 00000034H
	DD	$LN12@OpenUsingD
	DD	-612					; fffffd9cH
	DD	4
	DD	$LN13@OpenUsingD
	DD	-632					; fffffd88H
	DD	12					; 0000000cH
	DD	$LN14@OpenUsingD
$LN14@OpenUsingD:
	DB	99					; 00000063H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	0
$LN13@OpenUsingD:
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN12@OpenUsingD:
	DB	99					; 00000063H
	DB	109					; 0000006dH
	DB	100					; 00000064H
	DB	0
$LN11@OpenUsingD:
	DB	102					; 00000066H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
?OpenUsingDde@@YAXPAUHWND__@@PB_WAAVCommandLineInfo@@_N@Z ENDP ; OpenUsingDde
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InstanceInit@@YA_NH@Z
_TEXT	SEGMENT
tv81 = -193						; size = 1
tv71 = -193						; size = 1
_nCmdShow$ = 8						; size = 4
?InstanceInit@@YA_NH@Z PROC				; InstanceInit, COMDAT
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 234
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 235
	mov	esi, esp
	push	132					; 00000084H
	mov	edi, esp
	push	0
	call	DWORD PTR __imp__GetModuleHandleW@4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__LoadCursorW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?gCursorDrag@@3PAUHICON__@@A, eax ; gCursorDrag
$LN5@InstanceIn:
; Line 236
	xor	eax, eax
	jne	SHORT $LN5@InstanceIn
	cmp	DWORD PTR ?gCursorDrag@@3PAUHICON__@@A, 0 ; gCursorDrag
	jne	SHORT $LN15@InstanceIn
	mov	BYTE PTR tv71[ebp], 1
	jmp	SHORT $LN16@InstanceIn
$LN15@InstanceIn:
	mov	BYTE PTR tv71[ebp], 0
$LN16@InstanceIn:
	movzx	eax, BYTE PTR tv71[ebp]
	push	eax
	call	?CrashIfFunc@@YAX_N@Z			; CrashIfFunc
	add	esp, 4
	xor	eax, eax
	jne	SHORT $LN5@InstanceIn
; Line 238
	mov	esi, esp
	push	2010					; 000007daH
	mov	edi, esp
	push	0
	call	DWORD PTR __imp__GetModuleHandleW@4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__LoadBitmapW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?gBitmapReloadingCue@@3PAUHBITMAP__@@A, eax ; gBitmapReloadingCue
$LN11@InstanceIn:
; Line 239
	xor	eax, eax
	jne	SHORT $LN11@InstanceIn
	cmp	DWORD PTR ?gBitmapReloadingCue@@3PAUHBITMAP__@@A, 0 ; gBitmapReloadingCue
	jne	SHORT $LN17@InstanceIn
	mov	BYTE PTR tv81[ebp], 1
	jmp	SHORT $LN18@InstanceIn
$LN17@InstanceIn:
	mov	BYTE PTR tv81[ebp], 0
$LN18@InstanceIn:
	movzx	eax, BYTE PTR tv81[ebp]
	push	eax
	call	?CrashIfFunc@@YAX_N@Z			; CrashIfFunc
	add	esp, 4
	xor	eax, eax
	jne	SHORT $LN11@InstanceIn
; Line 240
	mov	al, 1
; Line 241
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InstanceInit@@YA_NH@Z ENDP				; InstanceInit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RegisterWinClass@@YA_NXZ
_TEXT	SEGMENT
tv149 = -261						; size = 1
tv141 = -261						; size = 1
tv128 = -261						; size = 1
tv84 = -261						; size = 1
tv74 = -261						; size = 1
_atom$ = -64						; size = 2
_wcex$ = -52						; size = 48
?RegisterWinClass@@YA_NXZ PROC				; RegisterWinClass, COMDAT
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 171
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 175
	push	OFFSET ?WndProcFrame@@YGJPAUHWND__@@IIJ@Z ; WndProcFrame
	push	OFFSET ??_C@_1CE@PHGKLOIF@?$AAS?$AAU?$AAM?$AAA?$AAT?$AAR?$AAA?$AA_?$AAP?$AAD?$AAF?$AA_?$AAF?$AAR?$AAA?$AAM?$AAE?$AA?$AA@
	lea	eax, DWORD PTR _wcex$[ebp]
	push	eax
	call	?FillWndClassEx@@YAXAAUtagWNDCLASSEXW@@PB_WP6GJPAUHWND__@@IIJ@Z@Z ; FillWndClassEx
	add	esp, 12					; 0000000cH
; Line 176
	mov	esi, esp
	push	1
	mov	edi, esp
	push	0
	call	DWORD PTR __imp__GetModuleHandleW@4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__LoadIconW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _wcex$[ebp+24], eax
$LN5@RegisterWi:
; Line 177
	xor	eax, eax
	jne	SHORT $LN5@RegisterWi
	cmp	DWORD PTR _wcex$[ebp+24], 0
	jne	SHORT $LN33@RegisterWi
	mov	BYTE PTR tv74[ebp], 1
	jmp	SHORT $LN34@RegisterWi
$LN33@RegisterWi:
	mov	BYTE PTR tv74[ebp], 0
$LN34@RegisterWi:
	movzx	eax, BYTE PTR tv74[ebp]
	push	eax
	call	?CrashIfFunc@@YAX_N@Z			; CrashIfFunc
	add	esp, 4
	xor	eax, eax
	jne	SHORT $LN5@RegisterWi
; Line 179
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__GetStockObject@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _wcex$[ebp+32], eax
; Line 180
	mov	esi, esp
	lea	eax, DWORD PTR _wcex$[ebp]
	push	eax
	call	DWORD PTR __imp__RegisterClassExW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _atom$[ebp], ax
$LN11@RegisterWi:
; Line 181
	xor	eax, eax
	jne	SHORT $LN11@RegisterWi
	movzx	eax, WORD PTR _atom$[ebp]
	test	eax, eax
	jne	SHORT $LN35@RegisterWi
	mov	BYTE PTR tv84[ebp], 1
	jmp	SHORT $LN36@RegisterWi
$LN35@RegisterWi:
	mov	BYTE PTR tv84[ebp], 0
$LN36@RegisterWi:
	movzx	ecx, BYTE PTR tv84[ebp]
	push	ecx
	call	?CrashIfFunc@@YAX_N@Z			; CrashIfFunc
	add	esp, 4
	xor	eax, eax
	jne	SHORT $LN11@RegisterWi
; Line 183
	push	OFFSET ?WndProcCanvas@@YGJPAUHWND__@@IIJ@Z ; WndProcCanvas
	push	OFFSET ??_C@_1CG@HPLMACE@?$AAS?$AAU?$AAM?$AAA?$AAT?$AAR?$AAA?$AA_?$AAP?$AAD?$AAF?$AA_?$AAC?$AAA?$AAN?$AAV?$AAA?$AAS?$AA?$AA@
	lea	eax, DWORD PTR _wcex$[ebp]
	push	eax
	call	?FillWndClassEx@@YAXAAUtagWNDCLASSEXW@@PB_WP6GJPAUHWND__@@IIJ@Z@Z ; FillWndClassEx
	add	esp, 12					; 0000000cH
; Line 184
	mov	eax, DWORD PTR _wcex$[ebp+4]
	or	eax, 8
	mov	DWORD PTR _wcex$[ebp+4], eax
; Line 185
	mov	esi, esp
	lea	eax, DWORD PTR _wcex$[ebp]
	push	eax
	call	DWORD PTR __imp__RegisterClassExW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _atom$[ebp], ax
$LN17@RegisterWi:
; Line 186
	xor	eax, eax
	jne	SHORT $LN17@RegisterWi
	movzx	eax, WORD PTR _atom$[ebp]
	test	eax, eax
	jne	SHORT $LN37@RegisterWi
	mov	BYTE PTR tv128[ebp], 1
	jmp	SHORT $LN38@RegisterWi
$LN37@RegisterWi:
	mov	BYTE PTR tv128[ebp], 0
$LN38@RegisterWi:
	movzx	ecx, BYTE PTR tv128[ebp]
	push	ecx
	call	?CrashIfFunc@@YAX_N@Z			; CrashIfFunc
	add	esp, 4
	xor	eax, eax
	jne	SHORT $LN17@RegisterWi
; Line 188
	push	OFFSET ?WndProcProperties@@YGJPAUHWND__@@IIJ@Z ; WndProcProperties
	push	OFFSET ??_C@_1CO@JNHOBPBF@?$AAS?$AAU?$AAM?$AAA?$AAT?$AAR?$AAA?$AA_?$AAP?$AAD?$AAF?$AA_?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAI?$AAE?$AAS?$AA?$AA@
	lea	eax, DWORD PTR _wcex$[ebp]
	push	eax
	call	?FillWndClassEx@@YAXAAUtagWNDCLASSEXW@@PB_WP6GJPAUHWND__@@IIJ@Z@Z ; FillWndClassEx
	add	esp, 12					; 0000000cH
; Line 189
	mov	esi, esp
	push	1
	mov	edi, esp
	push	0
	call	DWORD PTR __imp__GetModuleHandleW@4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__LoadIconW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _wcex$[ebp+24], eax
$LN23@RegisterWi:
; Line 190
	xor	eax, eax
	jne	SHORT $LN23@RegisterWi
	cmp	DWORD PTR _wcex$[ebp+24], 0
	jne	SHORT $LN39@RegisterWi
	mov	BYTE PTR tv141[ebp], 1
	jmp	SHORT $LN40@RegisterWi
$LN39@RegisterWi:
	mov	BYTE PTR tv141[ebp], 0
$LN40@RegisterWi:
	movzx	eax, BYTE PTR tv141[ebp]
	push	eax
	call	?CrashIfFunc@@YAX_N@Z			; CrashIfFunc
	add	esp, 4
	xor	eax, eax
	jne	SHORT $LN23@RegisterWi
; Line 191
	mov	esi, esp
	lea	eax, DWORD PTR _wcex$[ebp]
	push	eax
	call	DWORD PTR __imp__RegisterClassExW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _atom$[ebp], ax
$LN29@RegisterWi:
; Line 192
	xor	eax, eax
	jne	SHORT $LN29@RegisterWi
	movzx	eax, WORD PTR _atom$[ebp]
	test	eax, eax
	jne	SHORT $LN41@RegisterWi
	mov	BYTE PTR tv149[ebp], 1
	jmp	SHORT $LN42@RegisterWi
$LN41@RegisterWi:
	mov	BYTE PTR tv149[ebp], 0
$LN42@RegisterWi:
	movzx	ecx, BYTE PTR tv149[ebp]
	push	ecx
	call	?CrashIfFunc@@YAX_N@Z			; CrashIfFunc
	add	esp, 4
	xor	eax, eax
	jne	SHORT $LN29@RegisterWi
; Line 194
	call	?RegisterNotificationsWndClass@@YAXXZ	; RegisterNotificationsWndClass
; Line 195
	call	?RegisterSplitterWndClass@@YAXXZ	; RegisterSplitterWndClass
; Line 196
	call	?RegisterLabelWithCloseWnd@@YAXXZ	; RegisterLabelWithCloseWnd
; Line 197
	call	?RegisterCaptionWndClass@@YAXXZ		; RegisterCaptionWndClass
; Line 198
	mov	al, 1
; Line 199
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN45@RegisterWi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN45@RegisterWi:
	DD	1
	DD	$LN44@RegisterWi
$LN44@RegisterWi:
	DD	-52					; ffffffccH
	DD	48					; 00000030H
	DD	$LN43@RegisterWi
$LN43@RegisterWi:
	DB	119					; 00000077H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
?RegisterWinClass@@YA_NXZ ENDP				; RegisterWinClass
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?MakePluginWindow@@YAXAAVWindowInfo@@PAUHWND__@@@Z
_TEXT	SEGMENT
$T1 = -248						; size = 16
$T2 = -224						; size = 16
_ws$ = -8						; size = 4
_win$ = 8						; size = 4
_hwndParent$ = 12					; size = 4
?MakePluginWindow@@YAXAAVWindowInfo@@PAUHWND__@@@Z PROC	; MakePluginWindow, COMDAT
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 153
	mov	esi, esp
	mov	eax, DWORD PTR _hwndParent$[ebp]
	push	eax
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN3@MakePlugin
	mov	ecx, DWORD PTR ?__LINE__Var@?0??MakePluginWindow@@YAXAAVWindowInfo@@PAUHWND__@@@Z@4JA
	add	ecx, 1
	push	ecx
	push	OFFSET ??_C@_1GM@OAGNGMKE@?$AAc?$AA?3?$AA?2?$AAw?$AAo?$AAr?$AAk?$AAs?$AAp?$AAa?$AAc?$AAe?$AA?2?$AAs?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAp?$AAd?$AAf?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs@
	push	OFFSET ??_C@_1CK@HMBMIIMN@?$AAI?$AAs?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?$CI?$AAh?$AAw?$AAn?$AAd?$AAP?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?$CJ?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@MakePlugin:
; Line 154
	cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	; gPluginURL
	jne	SHORT $LN4@MakePlugin
	mov	eax, DWORD PTR ?__LINE__Var@?0??MakePluginWindow@@YAXAAVWindowInfo@@PAUHWND__@@@Z@4JA
	add	eax, 2
	push	eax
	push	OFFSET ??_C@_1GM@OAGNGMKE@?$AAc?$AA?3?$AA?2?$AAw?$AAo?$AAr?$AAk?$AAs?$AAp?$AAa?$AAc?$AAe?$AA?2?$AAs?$AAu?$AAm?$AAa?$AAt?$AAr?$AAa?$AAp?$AAd?$AAf?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs@
	push	OFFSET ??_C@_1BI@NNHHJJEP@?$AAg?$AAP?$AAl?$AAu?$AAg?$AAi?$AAn?$AAM?$AAo?$AAd?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@MakePlugin:
; Line 156
	mov	esi, esp
	push	-16					; fffffff0H
	mov	eax, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	call	DWORD PTR __imp__GetWindowLongW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ws$[ebp], eax
; Line 157
	mov	eax, DWORD PTR _ws$[ebp]
	and	eax, 2134638591				; 7f3bffffH
	mov	DWORD PTR _ws$[ebp], eax
; Line 158
	mov	eax, DWORD PTR _ws$[ebp]
	or	eax, 1073741824				; 40000000H
	mov	DWORD PTR _ws$[ebp], eax
; Line 159
	mov	esi, esp
	mov	eax, DWORD PTR _ws$[ebp]
	push	eax
	push	-16					; fffffff0H
	mov	ecx, DWORD PTR _win$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	push	edx
	call	DWORD PTR __imp__SetWindowLongW@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 161
	mov	esi, esp
	mov	eax, DWORD PTR _hwndParent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	push	edx
	call	DWORD PTR __imp__SetParent@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 162
	mov	eax, DWORD PTR _hwndParent$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0ClientRect@@QAE@PAUHWND__@@@Z	; ClientRect::ClientRect
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T2[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T2[ebp+12], edx
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR $T2[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	call	?MoveWindow@@YAXPAUHWND__@@V?$RectT@H@geomutil@@@Z ; MoveWindow
	add	esp, 20					; 00000014H
; Line 163
	mov	esi, esp
	push	5
	mov	eax, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 164
	mov	esi, esp
	mov	eax, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	call	DWORD PTR __imp__UpdateWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 167
	mov	esi, esp
	mov	eax, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	call	DWORD PTR __imp__SetFocus@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 168
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?MakePluginWindow@@YAXAAVWindowInfo@@PAUHWND__@@@Z ENDP	; MakePluginWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$function@$$A6AXXZ@std@@QAE@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Func$ = 8						; size = 4
??$?0V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$function@$$A6AXXZ@std@@QAE@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z PROC ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_b6f3cb1c717d8c8a816f87295491882e> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 483
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_class@X$$V@std@@QAE@XZ	; std::_Func_class<void>::_Func_class<void>
; Line 484
	lea	eax, DWORD PTR __Func$[ebp]
	push	eax
	call	??$move@AAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@std@@YA$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@AAV1@@Z ; std::move<<lambda_b6f3cb1c717d8c8a816f87295491882e> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$_Func_class@X$$V@std@@IAEX$$QAV<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ; std::_Func_class<void>::_Reset<<lambda_b6f3cb1c717d8c8a816f87295491882e> >
; Line 485
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$function@$$A6AXXZ@std@@QAE@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ENDP ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_b6f3cb1c717d8c8a816f87295491882e> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$function@$$A6AXXZ@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$function@$$A6AXXZ@std@@QAE@XZ PROC			; std::function<void __cdecl(void)>::~function<void __cdecl(void)>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 511
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 512
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_class@X$$V@std@@QAE@XZ	; std::_Func_class<void>::~_Func_class<void>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$function@$$A6AXXZ@std@@QAE@XZ ENDP			; std::function<void __cdecl(void)>::~function<void __cdecl(void)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getspace@?$_Func_class@X$$V@std@@ABEPBXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getspace@?$_Func_class@X$$V@std@@ABEPBXXZ PROC	; std::_Func_class<void>::_Getspace, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 440
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 441
	mov	eax, DWORD PTR _this$[ebp]
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getspace@?$_Func_class@X$$V@std@@ABEPBXXZ ENDP	; std::_Func_class<void>::_Getspace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getspace@?$_Func_class@X$$V@std@@AAEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getspace@?$_Func_class@X$$V@std@@AAEPAXXZ PROC	; std::_Func_class<void>::_Getspace, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 435
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 436
	mov	eax, DWORD PTR _this$[ebp]
; Line 437
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getspace@?$_Func_class@X$$V@std@@AAEPAXXZ ENDP	; std::_Func_class<void>::_Getspace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Set@?$_Func_class@X$$V@std@@AAEXPAV?$_Func_base@X$$V@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Set@?$_Func_class@X$$V@std@@AAEXPAV?$_Func_base@X$$V@2@@Z PROC ; std::_Func_class<void>::_Set, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 430
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 431
	mov	eax, 4
	imul	ecx, eax, 9
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx+ecx], eax
; Line 432
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?_Set@?$_Func_class@X$$V@std@@AAEXPAV?$_Func_base@X$$V@2@@Z ENDP ; std::_Func_class<void>::_Set
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getimpl@?$_Func_class@X$$V@std@@ABEPAV?$_Func_base@X$$V@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getimpl@?$_Func_class@X$$V@std@@ABEPAV?$_Func_base@X$$V@2@XZ PROC ; std::_Func_class<void>::_Getimpl, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 425
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 426
	mov	eax, 4
	imul	ecx, eax, 9
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
; Line 427
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getimpl@?$_Func_class@X$$V@std@@ABEPAV?$_Func_base@X$$V@2@XZ ENDP ; std::_Func_class<void>::_Getimpl
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Local@?$_Func_class@X$$V@std@@ABE_NXZ
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
?_Local@?$_Func_class@X$$V@std@@ABE_NXZ PROC		; std::_Func_class<void>::_Local, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 412
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getimpl@?$_Func_class@X$$V@std@@ABEPAV?$_Func_base@X$$V@2@XZ ; std::_Func_class<void>::_Getimpl
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getspace@?$_Func_class@X$$V@std@@ABEPBXXZ ; std::_Func_class<void>::_Getspace
	cmp	esi, eax
	jne	SHORT $LN3@Local
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@Local
$LN3@Local:
	mov	DWORD PTR tv69[ebp], 0
$LN4@Local:
	mov	al, BYTE PTR tv69[ebp]
; Line 413
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Local@?$_Func_class@X$$V@std@@ABE_NXZ ENDP		; std::_Func_class<void>::_Local
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$_Func_class@X$$V@std@@IAEXXZ
_TEXT	SEGMENT
tv71 = -212						; size = 4
tv78 = -205						; size = 1
_this$ = -8						; size = 4
?_Tidy@?$_Func_class@X$$V@std@@IAEXXZ PROC		; std::_Func_class<void>::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 374
	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 375
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Empty@?$_Func_class@X$$V@std@@IBE_NXZ	; std::_Func_class<void>::_Empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@Tidy
; Line 377
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Local@?$_Func_class@X$$V@std@@ABE_NXZ	; std::_Func_class<void>::_Local
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@Tidy
	mov	BYTE PTR tv78[ebp], 1
	jmp	SHORT $LN5@Tidy
$LN4@Tidy:
	mov	BYTE PTR tv78[ebp], 0
$LN5@Tidy:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getimpl@?$_Func_class@X$$V@std@@ABEPAV?$_Func_base@X$$V@2@XZ ; std::_Func_class<void>::_Getimpl
	mov	DWORD PTR tv71[ebp], eax
	mov	esi, esp
	movzx	ecx, BYTE PTR tv78[ebp]
	push	ecx
	mov	edx, DWORD PTR tv71[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv71[ebp]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 378
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@X$$V@std@@AAEXPAV?$_Func_base@X$$V@2@@Z ; std::_Func_class<void>::_Set
$LN1@Tidy:
; Line 380
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$_Func_class@X$$V@std@@IAEXXZ ENDP		; std::_Func_class<void>::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Empty@?$_Func_class@X$$V@std@@IBE_NXZ
_TEXT	SEGMENT
tv67 = -208						; size = 4
_this$ = -8						; size = 4
?_Empty@?$_Func_class@X$$V@std@@IBE_NXZ PROC		; std::_Func_class<void>::_Empty, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 285
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 286
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getimpl@?$_Func_class@X$$V@std@@ABEPAV?$_Func_base@X$$V@2@XZ ; std::_Func_class<void>::_Getimpl
	test	eax, eax
	jne	SHORT $LN3@Empty
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@Empty
$LN3@Empty:
	mov	DWORD PTR tv67[ebp], 0
$LN4@Empty:
	mov	al, BYTE PTR tv67[ebp]
; Line 287
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Empty@?$_Func_class@X$$V@std@@IBE_NXZ ENDP		; std::_Func_class<void>::_Empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Func_class@X$$V@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Func_class@X$$V@std@@QAE@XZ PROC			; std::_Func_class<void>::~_Func_class<void>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 279
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 280
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$_Func_class@X$$V@std@@IAEXXZ	; std::_Func_class<void>::_Tidy
; Line 281
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Func_class@X$$V@std@@QAE@XZ ENDP			; std::_Func_class<void>::~_Func_class<void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Func_class@X$$V@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Func_class@X$$V@std@@QAE@XZ PROC			; std::_Func_class<void>::_Func_class<void>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional
; Line 266
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 268
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@X$$V@std@@AAEXPAV?$_Func_base@X$$V@2@@Z ; std::_Func_class<void>::_Set
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Func_class@X$$V@std@@QAE@XZ ENDP			; std::_Func_class<void>::_Func_class<void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0<lambda_b6f3cb1c717d8c8a816f87295491882e>@@QAE@QAVFileExistenceChecker@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__This$ = 8						; size = 4
??0<lambda_b6f3cb1c717d8c8a816f87295491882e>@@QAE@QAVFileExistenceChecker@@@Z PROC ; <lambda_b6f3cb1c717d8c8a816f87295491882e>::<lambda_b6f3cb1c717d8c8a816f87295491882e>, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 148
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __This$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0<lambda_b6f3cb1c717d8c8a816f87295491882e>@@QAE@QAVFileExistenceChecker@@@Z ENDP ; <lambda_b6f3cb1c717d8c8a816f87295491882e>::<lambda_b6f3cb1c717d8c8a816f87295491882e>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??R<lambda_b6f3cb1c717d8c8a816f87295491882e>@@QBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??R<lambda_b6f3cb1c717d8c8a816f87295491882e>@@QBEXXZ PROC ; <lambda_b6f3cb1c717d8c8a816f87295491882e>::operator(), COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 144
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN5@operator:
; Line 145
	xor	eax, eax
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?WasCancelRequested@ThreadBase@@IAE_NXZ	; ThreadBase::WasCancelRequested
	movzx	ecx, al
	push	ecx
	call	?CrashIfFunc@@YAX_N@Z			; CrashIfFunc
	add	esp, 4
	xor	eax, eax
	jne	SHORT $LN5@operator
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?HideMissingFiles@FileExistenceChecker@@AAEXXZ ; FileExistenceChecker::HideMissingFiles
; Line 147
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?Terminate@FileExistenceChecker@@AAEXXZ	; FileExistenceChecker::Terminate
; Line 148
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??R<lambda_b6f3cb1c717d8c8a816f87295491882e>@@QBEXXZ ENDP ; <lambda_b6f3cb1c717d8c8a816f87295491882e>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??EIter@?$Vec@PA_W@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??EIter@?$Vec@PA_W@@QAEAAV01@XZ PROC			; Vec<wchar_t *>::Iter::operator++, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 309
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 310
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
; Line 312
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??EIter@?$Vec@PA_W@@QAEAAV01@XZ ENDP			; Vec<wchar_t *>::Iter::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??DIter@?$Vec@PA_W@@QBEAAPA_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??DIter@?$Vec@PA_W@@QBEAAPA_WXZ PROC			; Vec<wchar_t *>::Iter::operator*, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 306
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 307
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?At@?$Vec@PA_W@@QBEAAPA_WI@Z		; Vec<wchar_t *>::At
; Line 308
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??DIter@?$Vec@PA_W@@QBEAAPA_WXZ ENDP			; Vec<wchar_t *>::Iter::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Iter@?$Vec@PA_W@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv67 = -208						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Iter@?$Vec@PA_W@@QBE_NABV01@@Z PROC			; Vec<wchar_t *>::Iter::operator!=, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 303
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 304
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]
; Line 305
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??9Iter@?$Vec@PA_W@@QBE_NABV01@@Z ENDP			; Vec<wchar_t *>::Iter::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Iter@?$Vec@PA_W@@QAE@PAV1@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_vec$ = 8						; size = 4
_pos$ = 12						; size = 4
??0Iter@?$Vec@PA_W@@QAE@PAV1@I@Z PROC			; Vec<wchar_t *>::Iter::Iter, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 301
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _vec$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0Iter@?$Vec@PA_W@@QAE@PAV1@I@Z ENDP			; Vec<wchar_t *>::Iter::Iter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFileExistenceChecker@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFileExistenceChecker@@UAEPAXI@Z PROC		; FileExistenceChecker::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FileExistenceChecker@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	104					; 00000068H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFileExistenceChecker@@UAEPAXI@Z ENDP		; FileExistenceChecker::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1FileExistenceChecker@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1FileExistenceChecker@@UAE@XZ PROC			; FileExistenceChecker::~FileExistenceChecker, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??1WStrVec@@QAE@XZ			; WStrVec::~WStrVec
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ThreadBase@@MAE@XZ			; ThreadBase::~ThreadBase
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1FileExistenceChecker@@UAE@XZ ENDP			; FileExistenceChecker::~FileExistenceChecker
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Run@FileExistenceChecker@@UAEXXZ
_TEXT	SEGMENT
tv131 = -296						; size = 4
$T1 = -288						; size = 4
$T2 = -276						; size = 40
_path$3 = -36						; size = 4
_i$4 = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?Run@FileExistenceChecker@@UAEXXZ PROC			; FileExistenceChecker::Run, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 133
	push	ebp
	mov	ebp, esp
	sub	esp, 296				; 00000128H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-296]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 137
	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN4@Run
$LN2@Run:
	mov	eax, DWORD PTR _i$4[ebp]
	add	eax, 1
	mov	DWORD PTR _i$4[ebp], eax
$LN4@Run:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?Count@?$Vec@PA_W@@QBEIXZ		; Vec<wchar_t *>::Count
	cmp	DWORD PTR _i$4[ebp], eax
	jae	SHORT $LN3@Run
; Line 138
	mov	eax, DWORD PTR _i$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?At@?$Vec@PA_W@@QBEAAPA_WI@Z		; Vec<wchar_t *>::At
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _path$3[ebp], ecx
; Line 139
	cmp	DWORD PTR _path$3[ebp], 0
	je	SHORT $LN6@Run
	mov	eax, DWORD PTR _path$3[ebp]
	push	eax
	call	?IsOnFixedDrive@path@@YA_NPB_W@Z	; path::IsOnFixedDrive
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@Run
	mov	eax, DWORD PTR _path$3[ebp]
	push	eax
	call	?DocumentPathExists@@YA_NPB_W@Z		; DocumentPathExists
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@Run
$LN6@Run:
; Line 140
	mov	eax, DWORD PTR _i$4[ebp]
	mov	DWORD PTR tv131[ebp], eax
	mov	ecx, DWORD PTR _i$4[ebp]
	sub	ecx, 1
	mov	DWORD PTR _i$4[ebp], ecx
	push	1
	mov	edx, DWORD PTR tv131[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?PopAt@?$Vec@PA_W@@QAEPA_WI@Z		; Vec<wchar_t *>::PopAt
	push	eax
	call	__free_dbg
	add	esp, 8
$LN5@Run:
; Line 142
	jmp	$LN2@Run
$LN3@Run:
; Line 144
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0<lambda_b6f3cb1c717d8c8a816f87295491882e>@@QAE@QAVFileExistenceChecker@@@Z ; <lambda_b6f3cb1c717d8c8a816f87295491882e>::<lambda_b6f3cb1c717d8c8a816f87295491882e>
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??$?0V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@?$function@$$A6AXXZ@std@@QAE@V<lambda_b6f3cb1c717d8c8a816f87295491882e>@@@Z ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_b6f3cb1c717d8c8a816f87295491882e> >
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	?Post@uitask@@YAXABV?$function@$$A6AXXZ@std@@@Z ; uitask::Post
	add	esp, 4
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$function@$$A6AXXZ@std@@QAE@XZ	; std::function<void __cdecl(void)>::~function<void __cdecl(void)>
; Line 149
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 296				; 00000128H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Run@FileExistenceChecker@@UAEXXZ ENDP			; FileExistenceChecker::Run
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FileExistenceChecker@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FileExistenceChecker@@QAE@XZ PROC			; FileExistenceChecker::FileExistenceChecker, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ThreadBase@@QAE@PBD@Z		; ThreadBase::ThreadBase
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FileExistenceChecker@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0WStrVec@@QAE@XZ			; WStrVec::WStrVec
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFilePathsToCheck@FileExistenceChecker@@AAEXXZ ; FileExistenceChecker::GetFilePathsToCheck
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FileExistenceChecker@@QAE@XZ ENDP			; FileExistenceChecker::FileExistenceChecker
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Terminate@FileExistenceChecker@@AAEXXZ
_TEXT	SEGMENT
tv80 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
?Terminate@FileExistenceChecker@@AAEXXZ PROC		; FileExistenceChecker::Terminate, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 126
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 127
	mov	DWORD PTR ?gFileExistenceChecker@@3PAVFileExistenceChecker@@A, 0
; Line 128
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Join@ThreadBase@@QAE_NK@Z		; ThreadBase::Join
; Line 129
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@Terminate
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN1@Terminate
$LN3@Terminate:
	mov	DWORD PTR tv80[ebp], 0
$LN1@Terminate:
; Line 130
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Terminate@FileExistenceChecker@@AAEXXZ ENDP		; FileExistenceChecker::Terminate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?HideMissingFiles@FileExistenceChecker@@AAEXXZ
_TEXT	SEGMENT
_path$1 = -64						; size = 4
_<end>$L0$2 = -52					; size = 8
_<begin>$L0$3 = -36					; size = 8
_<range>$L0$4 = -20					; size = 4
_this$ = -8						; size = 4
?HideMissingFiles@FileExistenceChecker@@AAEXXZ PROC	; FileExistenceChecker::HideMissingFiles, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 116
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	mov	DWORD PTR _<range>$L0$4[ebp], eax
	lea	eax, DWORD PTR _<begin>$L0$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _<range>$L0$4[ebp]
	call	?begin@?$Vec@PA_W@@QAE?AVIter@1@XZ	; Vec<wchar_t *>::begin
	lea	eax, DWORD PTR _<end>$L0$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _<range>$L0$4[ebp]
	call	?end@?$Vec@PA_W@@QAE?AVIter@1@XZ	; Vec<wchar_t *>::end
	jmp	SHORT $LN4@HideMissin
$LN2@HideMissin:
	lea	ecx, DWORD PTR _<begin>$L0$3[ebp]
	call	??EIter@?$Vec@PA_W@@QAEAAV01@XZ		; Vec<wchar_t *>::Iter::operator++
$LN4@HideMissin:
	lea	eax, DWORD PTR _<end>$L0$2[ebp]
	push	eax
	lea	ecx, DWORD PTR _<begin>$L0$3[ebp]
	call	??9Iter@?$Vec@PA_W@@QBE_NABV01@@Z	; Vec<wchar_t *>::Iter::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@HideMissin
	lea	ecx, DWORD PTR _<begin>$L0$3[ebp]
	call	??DIter@?$Vec@PA_W@@QBEAAPA_WXZ		; Vec<wchar_t *>::Iter::operator*
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _path$1[ebp], eax
; Line 117
	push	1
	mov	eax, DWORD PTR _path$1[ebp]
	push	eax
	mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A ; gFileHistory
	call	?MarkFileInexistent@FileHistory@@QAE_NPB_W_N@Z ; FileHistory::MarkFileInexistent
; Line 118
	jmp	SHORT $LN2@HideMissin
$LN3@HideMissin:
; Line 120
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?Count@?$Vec@PA_W@@QBEIXZ		; Vec<wchar_t *>::Count
	test	eax, eax
	jbe	SHORT $LN1@HideMissin
	mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A ; gWindows
	call	?Count@?$Vec@PAVWindowInfo@@@@QBEIXZ	; Vec<WindowInfo *>::Count
	test	eax, eax
	jbe	SHORT $LN1@HideMissin
	push	0
	mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A ; gWindows
	call	?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z ; Vec<WindowInfo *>::At
	mov	ecx, DWORD PTR [eax]
	call	?IsAboutWindow@WindowInfo@@QBE_NXZ	; WindowInfo::IsAboutWindow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@HideMissin
; Line 121
	push	1
	push	0
	mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A ; gWindows
	call	?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z ; Vec<WindowInfo *>::At
	mov	ecx, DWORD PTR [eax]
	call	?RedrawAll@WindowInfo@@QAEX_N@Z		; WindowInfo::RedrawAll
$LN1@HideMissin:
; Line 123
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@HideMissin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@HideMissin:
	DD	2
	DD	$LN9@HideMissin
$LN9@HideMissin:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN7@HideMissin
	DD	-52					; ffffffccH
	DD	8
	DD	$LN8@HideMissin
$LN8@HideMissin:
	DB	60					; 0000003cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	62					; 0000003eH
	DB	36					; 00000024H
	DB	76					; 0000004cH
	DB	48					; 00000030H
	DB	0
$LN7@HideMissin:
	DB	60					; 0000003cH
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	62					; 0000003eH
	DB	36					; 00000024H
	DB	76					; 0000004cH
	DB	48					; 00000030H
	DB	0
?HideMissingFiles@FileExistenceChecker@@AAEXXZ ENDP	; FileExistenceChecker::HideMissingFiles
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetFilePathsToCheck@FileExistenceChecker@@AAEXXZ
_TEXT	SEGMENT
$T1 = -352						; size = 4
$T2 = -340						; size = 4
_i$3 = -136						; size = 4
_frequencyList$ = -124					; size = 84
_i$4 = -32						; size = 4
_state$ = -20						; size = 4
_this$ = -8						; size = 4
?GetFilePathsToCheck@FileExistenceChecker@@AAEXXZ PROC	; FileExistenceChecker::GetFilePathsToCheck, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 98
	push	ebp
	mov	ebp, esp
	sub	esp, 356				; 00000164H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-356]
	mov	ecx, 89					; 00000059H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 100
	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN4@GetFilePat
$LN2@GetFilePat:
	mov	eax, DWORD PTR _i$4[ebp]
	add	eax, 1
	mov	DWORD PTR _i$4[ebp], eax
$LN4@GetFilePat:
	cmp	DWORD PTR _i$4[ebp], 20			; 00000014H
	jae	SHORT $LN3@GetFilePat
	mov	eax, DWORD PTR _i$4[ebp]
	push	eax
	mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A ; gFileHistory
	call	?Get@FileHistory@@QBEPAUFileState@@I@Z	; FileHistory::Get
	mov	DWORD PTR _state$[ebp], eax
	cmp	DWORD PTR _state$[ebp], 0
	je	SHORT $LN3@GetFilePat
; Line 101
	mov	eax, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [eax+9]
	test	ecx, ecx
	jne	SHORT $LN8@GetFilePat
; Line 102
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?Dup@str@@YAPA_WPB_W@Z			; str::Dup
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?Append@?$Vec@PA_W@@QAEXABQA_W@Z	; Vec<wchar_t *>::Append
$LN8@GetFilePat:
; Line 103
	jmp	SHORT $LN2@GetFilePat
$LN3@GetFilePat:
; Line 105
	push	0
	push	0
	lea	ecx, DWORD PTR _frequencyList$[ebp]
	call	??0?$Vec@PAUFileState@@@@QAE@IPAVAllocator@@@Z ; Vec<FileState *>::Vec<FileState *>
; Line 106
	lea	eax, DWORD PTR _frequencyList$[ebp]
	push	eax
	mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A ; gFileHistory
	call	?GetFrequencyOrder@FileHistory@@QAEXAAV?$Vec@PAUFileState@@@@@Z ; FileHistory::GetFrequencyOrder
; Line 107
	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN7@GetFilePat
$LN5@GetFilePat:
	mov	eax, DWORD PTR _i$3[ebp]
	add	eax, 1
	mov	DWORD PTR _i$3[ebp], eax
$LN7@GetFilePat:
	cmp	DWORD PTR _i$3[ebp], 20			; 00000014H
	jae	SHORT $LN6@GetFilePat
	lea	ecx, DWORD PTR _frequencyList$[ebp]
	call	?Count@?$Vec@PAUFileState@@@@QBEIXZ	; Vec<FileState *>::Count
	cmp	DWORD PTR _i$3[ebp], eax
	jae	SHORT $LN6@GetFilePat
; Line 108
	mov	eax, DWORD PTR _i$3[ebp]
	push	eax
	lea	ecx, DWORD PTR _frequencyList$[ebp]
	call	?At@?$Vec@PAUFileState@@@@QBEAAPAUFileState@@I@Z ; Vec<FileState *>::At
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _state$[ebp], ecx
; Line 109
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?Contains@WStrVec@@QBE_NPB_W@Z		; WStrVec::Contains
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN9@GetFilePat
; Line 110
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?Dup@str@@YAPA_WPB_W@Z			; str::Dup
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?Append@?$Vec@PA_W@@QAEXABQA_W@Z	; Vec<wchar_t *>::Append
$LN9@GetFilePat:
; Line 111
	jmp	SHORT $LN5@GetFilePat
$LN6@GetFilePat:
; Line 112
	lea	ecx, DWORD PTR _frequencyList$[ebp]
	call	??1?$Vec@PAUFileState@@@@QAE@XZ		; Vec<FileState *>::~Vec<FileState *>
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@GetFilePat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 356				; 00000164H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN13@GetFilePat:
	DD	1
	DD	$LN12@GetFilePat
$LN12@GetFilePat:
	DD	-124					; ffffff84H
	DD	84					; 00000054H
	DD	$LN11@GetFilePat
$LN11@GetFilePat:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	113					; 00000071H
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	121					; 00000079H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
?GetFilePathsToCheck@FileExistenceChecker@@AAEXXZ ENDP	; FileExistenceChecker::GetFilePathsToCheck
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?TryLoadMemTrace@@YA_NXZ
_TEXT	SEGMENT
$T1 = -221						; size = 1
$T2 = -209						; size = 1
_dllPath$ = -8						; size = 4
?TryLoadMemTrace@@YA_NXZ PROC				; TryLoadMemTrace, COMDAT
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 72
	push	OFFSET ??_C@_1BK@JCIKOMDH@?$AAm?$AAe?$AAm?$AAt?$AAr?$AAa?$AAc?$AAe?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@
	call	?GetAppPath@path@@YAPA_WPB_W@Z		; path::GetAppPath
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _dllPath$[ebp]
	call	??0?$ScopedMem@_W@@QAE@PA_W@Z		; ScopedMem<wchar_t>::ScopedMem<wchar_t>
; Line 73
	lea	ecx, DWORD PTR _dllPath$[ebp]
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__LoadLibraryW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN2@TryLoadMem
; Line 74
	mov	BYTE PTR $T2[ebp], 0
	lea	ecx, DWORD PTR _dllPath$[ebp]
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	mov	al, BYTE PTR $T2[ebp]
	jmp	SHORT $LN1@TryLoadMem
$LN2@TryLoadMem:
; Line 75
	mov	BYTE PTR $T1[ebp], 1
	lea	ecx, DWORD PTR _dllPath$[ebp]
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	mov	al, BYTE PTR $T1[ebp]
$LN1@TryLoadMem:
; Line 76
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@TryLoadMem
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@TryLoadMem:
	DD	1
	DD	$LN5@TryLoadMem
$LN5@TryLoadMem:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@TryLoadMem
$LN4@TryLoadMem:
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
?TryLoadMemTrace@@YA_NXZ ENDP				; TryLoadMemTrace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CommandLineInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CommandLineInfo@@QAE@XZ PROC				; CommandLineInfo::~CommandLineInfo, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\parsecommandline.h
; Line 68
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 276				; 00000114H
	call	??1WStrVec@@QAE@XZ			; WStrVec::~WStrVec
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 272				; 00000110H
	call	??1?$ScopedMem@D@@QAE@XZ		; ScopedMem<char>::~ScopedMem<char>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 256				; 00000100H
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 252				; 000000fcH
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 248				; 000000f8H
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 240				; 000000f0H
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 236				; 000000ecH
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 228				; 000000e4H
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 180				; 000000b4H
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 176				; 000000b0H
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	call	??1?$ScopedMem@_W@@QAE@XZ		; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	??1WStrVec@@QAE@XZ			; WStrVec::~WStrVec
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1WStrVec@@QAE@XZ			; WStrVec::~WStrVec
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CommandLineInfo@@QAE@XZ ENDP				; CommandLineInfo::~CommandLineInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CommandLineInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CommandLineInfo@@QAE@XZ PROC				; CommandLineInfo::CommandLineInfo, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\parsecommandline.h
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0WStrVec@@QAE@XZ			; WStrVec::WStrVec
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	??0WStrVec@@QAE@XZ			; WStrVec::WStrVec
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+168], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+169], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+170], 0
; Line 53
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	call	??0?$ScopedMem@_W@@QAE@PA_W@Z		; ScopedMem<wchar_t>::ScopedMem<wchar_t>
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 176				; 000000b0H
	call	??0?$ScopedMem@_W@@QAE@PA_W@Z		; ScopedMem<wchar_t>::ScopedMem<wchar_t>
; Line 60
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 180				; 000000b4H
	call	??0?$ScopedMem@_W@@QAE@PA_W@Z		; ScopedMem<wchar_t>::ScopedMem<wchar_t>
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+184], 0
; Line 54
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+188], 0
; Line 55
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	call	??0?$ScopedMem@_W@@QAE@PA_W@Z		; ScopedMem<wchar_t>::ScopedMem<wchar_t>
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+196], -1
; Line 56
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+200], 0
; Line 57
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+201], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+202], 0
; Line 58
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+204], 0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@c2c60000
	movss	DWORD PTR [eax+208], xmm0
	push	-1
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	??0?$PointT@H@geomutil@@QAE@HH@Z	; geomutil::PointT<int>::PointT<int>
; Line 59
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+220], 0
; Line 57
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+224], 0
; Line 56
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 228				; 000000e4H
	call	??0?$ScopedMem@_W@@QAE@PA_W@Z		; ScopedMem<wchar_t>::ScopedMem<wchar_t>
; Line 59
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+232], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+233], 0
; Line 64
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 236				; 000000ecH
	call	??0?$ScopedMem@_W@@QAE@PA_W@Z		; ScopedMem<wchar_t>::ScopedMem<wchar_t>
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 240				; 000000f0H
	call	??0?$ScopedMem@_W@@QAE@PA_W@Z		; ScopedMem<wchar_t>::ScopedMem<wchar_t>
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+244], 0
; Line 61
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 248				; 000000f8H
	call	??0?$ScopedMem@_W@@QAE@PA_W@Z		; ScopedMem<wchar_t>::ScopedMem<wchar_t>
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 252				; 000000fcH
	call	??0?$ScopedMem@_W@@QAE@PA_W@Z		; ScopedMem<wchar_t>::ScopedMem<wchar_t>
; Line 62
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 256				; 00000100H
	call	??0?$ScopedMem@_W@@QAE@PA_W@Z		; ScopedMem<wchar_t>::ScopedMem<wchar_t>
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+260], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+264], 1
; Line 63
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+268], 0
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+269], 0
; Line 54
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 272				; 00000110H
	call	??0?$ScopedMem@D@@QAE@PAD@Z		; ScopedMem<char>::ScopedMem<char>
; Line 66
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 276				; 00000114H
	call	??0WStrVec@@QAE@XZ			; WStrVec::WStrVec
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CommandLineInfo@@QAE@XZ ENDP				; CommandLineInfo::CommandLineInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?AsEbook@TabInfo@@QBEPAVEbookController@@XZ
_TEXT	SEGMENT
tv74 = -208						; size = 4
_this$ = -8						; size = 4
?AsEbook@TabInfo@@QBEPAVEbookController@@XZ PROC	; TabInfo::AsEbook, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\tabinfo.h
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@AsEbook
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [edx+128]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@AsEbook
$LN3@AsEbook:
	mov	DWORD PTR tv74[ebp], 0
$LN4@AsEbook:
	mov	eax, DWORD PTR tv74[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AsEbook@TabInfo@@QBEPAVEbookController@@XZ ENDP	; TabInfo::AsEbook
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?AsFixed@TabInfo@@QBEPAVDisplayModel@@XZ
_TEXT	SEGMENT
tv74 = -208						; size = 4
_this$ = -8						; size = 4
?AsFixed@TabInfo@@QBEPAVDisplayModel@@XZ PROC		; TabInfo::AsFixed, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\tabinfo.h
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@AsFixed
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [edx+120]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@AsFixed
$LN3@AsFixed:
	mov	DWORD PTR tv74[ebp], 0
$LN4@AsFixed:
	mov	eax, DWORD PTR tv74[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AsFixed@TabInfo@@QBEPAVDisplayModel@@XZ ENDP		; TabInfo::AsFixed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$Vec@H@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??4?$Vec@H@@QAEAAV0@ABV0@@Z PROC			; Vec<int>::operator=, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 118
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _that$[ebp]
	je	SHORT $LN2@operator
; Line 119
	mov	eax, DWORD PTR _that$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EnsureCapCrash@?$Vec@H@@IAEXI@Z	; Vec<int>::EnsureCapCrash
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _that$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 122
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	sub	edx, DWORD PTR [ecx]
	shl	edx, 2
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	lea	ecx, DWORD PTR [eax+ecx*4]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
$LN2@operator:
; Line 124
	mov	eax, DWORD PTR _this$[ebp]
; Line 125
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$Vec@H@@QAEAAV0@ABV0@@Z ENDP			; Vec<int>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EnsureCapCrash@?$Vec@H@@IAEXI@Z
_TEXT	SEGMENT
_ok$ = -17						; size = 1
_this$ = -8						; size = 4
_needed$ = 8						; size = 4
?EnsureCapCrash@?$Vec@H@@IAEXI@Z PROC			; Vec<int>::EnsureCapCrash, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 58
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 59
	mov	eax, DWORD PTR _needed$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EnsureCapTry@?$Vec@H@@IAE_NI@Z		; Vec<int>::EnsureCapTry
	mov	BYTE PTR _ok$[ebp], al
$LN5@EnsureCapC:
; Line 60
	xor	eax, eax
	jne	SHORT $LN5@EnsureCapC
	movzx	eax, BYTE PTR _ok$[ebp]
	test	eax, eax
	jne	SHORT $LN2@EnsureCapC
	call	?CrashMe@@YAXXZ				; CrashMe
$LN2@EnsureCapC:
	xor	eax, eax
	jne	SHORT $LN5@EnsureCapC
; Line 61
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?EnsureCapCrash@?$Vec@H@@IAEXI@Z ENDP			; Vec<int>::EnsureCapCrash
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EnsureCapTry@?$Vec@H@@IAE_NI@Z
_TEXT	SEGMENT
_newEls$ = -68						; size = 4
_newPadding$ = -56					; size = 4
_allocSize$ = -44					; size = 4
_newElCount$ = -32					; size = 4
_newCap$ = -20						; size = 4
_this$ = -8						; size = 4
_needed$ = 8						; size = 4
?EnsureCapTry@?$Vec@H@@IAE_NI@Z PROC			; Vec<int>::EnsureCapTry, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 27
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _needed$[ebp]
	jb	SHORT $LN2@EnsureCapT
; Line 29
	mov	al, 1
	jmp	$LN1@EnsureCapT
$LN2@EnsureCapT:
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 1
	mov	DWORD PTR _newCap$[ebp], ecx
; Line 32
	mov	eax, DWORD PTR _needed$[ebp]
	cmp	eax, DWORD PTR _newCap$[ebp]
	jbe	SHORT $LN3@EnsureCapT
; Line 33
	mov	eax, DWORD PTR _needed$[ebp]
	mov	DWORD PTR _newCap$[ebp], eax
$LN3@EnsureCapT:
; Line 34
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCap$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN4@EnsureCapT
; Line 35
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _newCap$[ebp], ecx
$LN4@EnsureCapT:
; Line 37
	mov	eax, DWORD PTR _newCap$[ebp]
	add	eax, 1
	mov	DWORD PTR _newElCount$[ebp], eax
; Line 38
	cmp	DWORD PTR _newElCount$[ebp], 1073741823	; 3fffffffH
	jb	SHORT $LN5@EnsureCapT
; Line 39
	xor	al, al
	jmp	$LN1@EnsureCapT
$LN5@EnsureCapT:
; Line 40
	cmp	DWORD PTR _newElCount$[ebp], 2147483647	; 7fffffffH
	jbe	SHORT $LN6@EnsureCapT
; Line 41
	xor	al, al
	jmp	$LN1@EnsureCapT
$LN6@EnsureCapT:
; Line 43
	mov	eax, DWORD PTR _newElCount$[ebp]
	shl	eax, 2
	mov	DWORD PTR _allocSize$[ebp], eax
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 2
	mov	edx, DWORD PTR _allocSize$[ebp]
	sub	edx, ecx
	mov	DWORD PTR _newPadding$[ebp], edx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+12]
	jne	SHORT $LN7@EnsureCapT
; Line 47
	mov	eax, DWORD PTR _newPadding$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	call	?Dup@Allocator@@SAPAXPAV1@PBXII@Z	; Allocator::Dup
	add	esp, 16					; 00000010H
	mov	DWORD PTR _newEls$[ebp], eax
; Line 48
	jmp	SHORT $LN8@EnsureCapT
$LN7@EnsureCapT:
; Line 49
	mov	eax, DWORD PTR _allocSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	call	?Realloc@Allocator@@SAPAXPAV1@PAXI@Z	; Allocator::Realloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _newEls$[ebp], eax
$LN8@EnsureCapT:
; Line 50
	cmp	DWORD PTR _newEls$[ebp], 0
	jne	SHORT $LN9@EnsureCapT
; Line 51
	xor	al, al
	jmp	SHORT $LN1@EnsureCapT
$LN9@EnsureCapT:
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newEls$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 53
	mov	eax, DWORD PTR _newPadding$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	lea	edx, DWORD PTR [ecx+edx*4]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 54
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCap$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 55
	mov	al, 1
$LN1@EnsureCapT:
; Line 56
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?EnsureCapTry@?$Vec@H@@IAE_NI@Z ENDP			; Vec<int>::EnsureCapTry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Reset@?$Vec@V?$RectT@H@geomutil@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Reset@?$Vec@V?$RectT@H@geomutil@@@@QAEXXZ PROC		; Vec<geomutil::RectT<int> >::Reset, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 133
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 134
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 15			; 0000000fH
; Line 135
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeEls@?$Vec@V?$RectT@H@geomutil@@@@IAEXXZ ; Vec<geomutil::RectT<int> >::FreeEls
; Line 136
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 137
	push	256					; 00000100H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 138
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@?$Vec@V?$RectT@H@geomutil@@@@QAEXXZ ENDP		; Vec<geomutil::RectT<int> >::Reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$Vec@V?$RectT@H@geomutil@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$Vec@V?$RectT@H@geomutil@@@@QAE@XZ PROC		; Vec<geomutil::RectT<int> >::~Vec<geomutil::RectT<int> >, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 94
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeEls@?$Vec@V?$RectT@H@geomutil@@@@IAEXXZ ; Vec<geomutil::RectT<int> >::FreeEls
; Line 95
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$Vec@V?$RectT@H@geomutil@@@@QAE@XZ ENDP		; Vec<geomutil::RectT<int> >::~Vec<geomutil::RectT<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$Vec@V?$RectT@H@geomutil@@@@QAE@IPAVAllocator@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_capHint$ = 8						; size = 4
_allocator$ = 12					; size = 4
??0?$Vec@V?$RectT@H@geomutil@@@@QAE@IPAVAllocator@@@Z PROC ; Vec<geomutil::RectT<int> >::Vec<geomutil::RectT<int> >, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 88
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 87
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _capHint$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 23
	push	OFFSET ??0?$RectT@H@geomutil@@QAE@XZ	; geomutil::RectT<int>::RectT<int>
	push	16					; 00000010H
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	??_H@YGXPAXIIP6EPAX0@Z@Z
; Line 87
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _allocator$[ebp]
	mov	DWORD PTR [eax+272], ecx
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 90
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@?$Vec@V?$RectT@H@geomutil@@@@QAEXXZ ; Vec<geomutil::RectT<int> >::Reset
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$Vec@V?$RectT@H@geomutil@@@@QAE@IPAVAllocator@@@Z ENDP ; Vec<geomutil::RectT<int> >::Vec<geomutil::RectT<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FreeEls@?$Vec@V?$RectT@H@geomutil@@@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?FreeEls@?$Vec@V?$RectT@H@geomutil@@@@IAEXXZ PROC	; Vec<geomutil::RectT<int> >::FreeEls, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+12], eax
	je	SHORT $LN1@FreeEls
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+272]
	push	eax
	call	?Free@Allocator@@SAXPAV1@PAX@Z		; Allocator::Free
	add	esp, 8
$LN1@FreeEls:
; Line 82
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FreeEls@?$Vec@V?$RectT@H@geomutil@@@@IAEXXZ ENDP	; Vec<geomutil::RectT<int> >::FreeEls
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0LoadArgs@@QAE@PB_WPAVWindowInfo@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_fileName$ = 8						; size = 4
_win$ = 12						; size = 4
??0LoadArgs@@QAE@PB_WPAVWindowInfo@@@Z PROC		; LoadArgs::LoadArgs, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\sumatrapdf.h
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _fileName$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _win$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+9], 0
; Line 161
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+10], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+11], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 1
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0LoadArgs@@QAE@PB_WPAVWindowInfo@@@Z ENDP		; LoadArgs::LoadArgs
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetNoDocBgColor@@YAKXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_useSysColor$ = -5					; size = 1
?GetNoDocBgColor@@YAKXZ PROC				; GetNoDocBgColor, COMDAT
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 221
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 224
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	movzx	ecx, BYTE PTR [eax+6]
	test	ecx, ecx
	je	SHORT $LN5@GetNoDocBg
	mov	esi, esp
	push	8
	call	DWORD PTR __imp__GetSysColor@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN4@GetNoDocBg
	mov	esi, esp
	push	5
	call	DWORD PTR __imp__GetSysColor@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 16777215				; 00ffffffH
	je	SHORT $LN5@GetNoDocBg
$LN4@GetNoDocBg:
	mov	DWORD PTR tv73[ebp], 1
	jmp	SHORT $LN6@GetNoDocBg
$LN5@GetNoDocBg:
	mov	DWORD PTR tv73[ebp], 0
$LN6@GetNoDocBg:
	mov	dl, BYTE PTR tv73[ebp]
	mov	BYTE PTR _useSysColor$[ebp], dl
; Line 227
	movzx	eax, BYTE PTR _useSysColor$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetNoDocBg
; Line 228
	mov	esi, esp
	push	15					; 0000000fH
	call	DWORD PTR __imp__GetSysColor@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN1@GetNoDocBg
$LN2@GetNoDocBg:
; Line 230
	mov	eax, 10066329				; 00999999H
$LN1@GetNoDocBg:
; Line 231
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNoDocBgColor@@YAKXZ ENDP				; GetNoDocBgColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetAboutBgColor@@YAKXZ
_TEXT	SEGMENT
_bgColor$ = -8						; size = 4
?GetAboutBgColor@@YAKXZ PROC				; GetAboutBgColor, COMDAT
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 214
	mov	DWORD PTR _bgColor$[ebp], 15921906	; 00f2f2f2H
; Line 215
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	cmp	DWORD PTR [eax], -2147421441		; 8000f2ffH
	je	SHORT $LN2@GetAboutBg
; Line 216
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _bgColor$[ebp], ecx
$LN2@GetAboutBg:
; Line 217
	mov	eax, DWORD PTR _bgColor$[ebp]
; Line 218
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAboutBgColor@@YAKXZ ENDP				; GetAboutBgColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetLogoBgColor@@YAKXZ
_TEXT	SEGMENT
?GetLogoBgColor@@YAKXZ PROC				; GetLogoBgColor, COMDAT
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 207
	call	?GetAboutBgColor@@YAKXZ			; GetAboutBgColor
; Line 209
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLogoBgColor@@YAKXZ ENDP				; GetLogoBgColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Count@?$Vec@PAVWindowInfo@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Count@?$Vec@PAVWindowInfo@@@@QBEIXZ PROC		; Vec<WindowInfo *>::Count, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 154
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Count@?$Vec@PAVWindowInfo@@@@QBEIXZ ENDP		; Vec<WindowInfo *>::Count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z
_TEXT	SEGMENT
tv67 = -205						; size = 1
_this$ = -8						; size = 4
_idx$ = 8						; size = 4
?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z PROC	; Vec<WindowInfo *>::At, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN5@At:
; Line 142
	xor	eax, eax
	jne	SHORT $LN5@At
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _idx$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jb	SHORT $LN9@At
	mov	BYTE PTR tv67[ebp], 1
	jmp	SHORT $LN10@At
$LN9@At:
	mov	BYTE PTR tv67[ebp], 0
$LN10@At:
	movzx	edx, BYTE PTR tv67[ebp]
	push	edx
	call	?CrashIfFunc@@YAX_N@Z			; CrashIfFunc
	add	esp, 4
	xor	eax, eax
	jne	SHORT $LN5@At
; Line 143
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _idx$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
; Line 144
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z ENDP	; Vec<WindowInfo *>::At
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$ScopedMem@_W@@QBEPA_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$ScopedMem@_W@@QBEPA_WXZ PROC			; ScopedMem<wchar_t>::operator wchar_t *, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\scoped.h
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$ScopedMem@_W@@QBEPA_WXZ ENDP			; ScopedMem<wchar_t>::operator wchar_t *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Get@?$ScopedMem@_W@@QBEPA_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Get@?$ScopedMem@_W@@QBEPA_WXZ PROC			; ScopedMem<wchar_t>::Get, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\scoped.h
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get@?$ScopedMem@_W@@QBEPA_WXZ ENDP			; ScopedMem<wchar_t>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Set@?$ScopedMem@_W@@QAEXPA_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newPtr$ = 8						; size = 4
?Set@?$ScopedMem@_W@@QAEXPA_W@Z PROC			; ScopedMem<wchar_t>::Set, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\scoped.h
; Line 15
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 16
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	__free_dbg
	add	esp, 8
; Line 17
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newPtr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 18
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Set@?$ScopedMem@_W@@QAEXPA_W@Z ENDP			; ScopedMem<wchar_t>::Set
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ScopedMem@_W@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$ScopedMem@_W@@QAE@XZ PROC				; ScopedMem<wchar_t>::~ScopedMem<wchar_t>, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\scoped.h
; Line 14
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	__free_dbg
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScopedMem@_W@@QAE@XZ ENDP				; ScopedMem<wchar_t>::~ScopedMem<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ScopedMem@_W@@QAE@PA_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ptr$ = 8						; size = 4
??0?$ScopedMem@_W@@QAE@PA_W@Z PROC			; ScopedMem<wchar_t>::ScopedMem<wchar_t>, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\scoped.h
; Line 13
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$ScopedMem@_W@@QAE@PA_W@Z ENDP			; ScopedMem<wchar_t>::ScopedMem<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ScopedMem@_W@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$ScopedMem@_W@@QAE@XZ PROC				; ScopedMem<wchar_t>::ScopedMem<wchar_t>, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\scoped.h
; Line 12
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$ScopedMem@_W@@QAE@XZ ENDP				; ScopedMem<wchar_t>::ScopedMem<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Count@?$Vec@PAUFileState@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Count@?$Vec@PAUFileState@@@@QBEIXZ PROC		; Vec<FileState *>::Count, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 154
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Count@?$Vec@PAUFileState@@@@QBEIXZ ENDP		; Vec<FileState *>::Count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?At@?$Vec@PAUFileState@@@@QBEAAPAUFileState@@I@Z
_TEXT	SEGMENT
tv67 = -205						; size = 1
_this$ = -8						; size = 4
_idx$ = 8						; size = 4
?At@?$Vec@PAUFileState@@@@QBEAAPAUFileState@@I@Z PROC	; Vec<FileState *>::At, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN5@At:
; Line 142
	xor	eax, eax
	jne	SHORT $LN5@At
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _idx$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jb	SHORT $LN9@At
	mov	BYTE PTR tv67[ebp], 1
	jmp	SHORT $LN10@At
$LN9@At:
	mov	BYTE PTR tv67[ebp], 0
$LN10@At:
	movzx	edx, BYTE PTR tv67[ebp]
	push	edx
	call	?CrashIfFunc@@YAX_N@Z			; CrashIfFunc
	add	esp, 4
	xor	eax, eax
	jne	SHORT $LN5@At
; Line 143
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _idx$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
; Line 144
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?At@?$Vec@PAUFileState@@@@QBEAAPAUFileState@@I@Z ENDP	; Vec<FileState *>::At
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Reset@?$Vec@PAUFileState@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Reset@?$Vec@PAUFileState@@@@QAEXXZ PROC		; Vec<FileState *>::Reset, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 133
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 134
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 15			; 0000000fH
; Line 135
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeEls@?$Vec@PAUFileState@@@@IAEXXZ	; Vec<FileState *>::FreeEls
; Line 136
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 137
	push	64					; 00000040H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 138
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@?$Vec@PAUFileState@@@@QAEXXZ ENDP		; Vec<FileState *>::Reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$Vec@PAUFileState@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$Vec@PAUFileState@@@@QAE@XZ PROC			; Vec<FileState *>::~Vec<FileState *>, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 94
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeEls@?$Vec@PAUFileState@@@@IAEXXZ	; Vec<FileState *>::FreeEls
; Line 95
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$Vec@PAUFileState@@@@QAE@XZ ENDP			; Vec<FileState *>::~Vec<FileState *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$Vec@PAUFileState@@@@QAE@IPAVAllocator@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_capHint$ = 8						; size = 4
_allocator$ = 12					; size = 4
??0?$Vec@PAUFileState@@@@QAE@IPAVAllocator@@@Z PROC	; Vec<FileState *>::Vec<FileState *>, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 88
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 87
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _capHint$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _allocator$[ebp]
	mov	DWORD PTR [eax+80], ecx
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 90
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@?$Vec@PAUFileState@@@@QAEXXZ	; Vec<FileState *>::Reset
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$Vec@PAUFileState@@@@QAE@IPAVAllocator@@@Z ENDP	; Vec<FileState *>::Vec<FileState *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FreeEls@?$Vec@PAUFileState@@@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?FreeEls@?$Vec@PAUFileState@@@@IAEXXZ PROC		; Vec<FileState *>::FreeEls, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+12], eax
	je	SHORT $LN1@FreeEls
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	push	eax
	call	?Free@Allocator@@SAXPAV1@PAX@Z		; Allocator::Free
	add	esp, 8
$LN1@FreeEls:
; Line 82
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FreeEls@?$Vec@PAUFileState@@@@IAEXXZ ENDP		; Vec<FileState *>::FreeEls
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?UpdateStatesSource@FileHistory@@QAEXPAV?$Vec@PAUFileState@@@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_states$ = 8						; size = 4
?UpdateStatesSource@FileHistory@@QAEXPAV?$Vec@PAUFileState@@@@@Z PROC ; FileHistory::UpdateStatesSource, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\filehistory.h
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _states$[ebp]
	mov	DWORD PTR [eax], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?UpdateStatesSource@FileHistory@@QAEXPAV?$Vec@PAUFileState@@@@@Z ENDP ; FileHistory::UpdateStatesSource
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ScrollState@@QAE@HNN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_page$ = 8						; size = 4
_x$ = 12						; size = 8
_y$ = 20						; size = 8
??0ScrollState@@QAE@HNN@Z PROC				; ScrollState::ScrollState, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\displaymodel.h
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _page$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsd	xmm0, QWORD PTR _x$[ebp]
	movsd	QWORD PTR [eax+8], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movsd	xmm0, QWORD PTR _y$[ebp]
	movsd	QWORD PTR [eax+16], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??0ScrollState@@QAE@HNN@Z ENDP				; ScrollState::ScrollState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$PointT@H@geomutil@@QAE@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
??0?$PointT@H@geomutil@@QAE@HH@Z PROC			; geomutil::PointT<int>::PointT<int>, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\geomutil.h
; Line 15
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$PointT@H@geomutil@@QAE@HH@Z ENDP			; geomutil::PointT<int>::PointT<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?MoveWindow@@YAXPAUHWND__@@V?$RectT@H@geomutil@@@Z
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_rect$ = 12						; size = 16
?MoveWindow@@YAXPAUHWND__@@V?$RectT@H@geomutil@@@Z PROC	; MoveWindow, COMDAT
; File c:\workspace\sumatrapdf-master\src\utils\winutil.h
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _rect$[ebp+12]
	push	eax
	mov	ecx, DWORD PTR _rect$[ebp+8]
	push	ecx
	mov	edx, DWORD PTR _rect$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__MoveWindow@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?MoveWindow@@YAXPAUHWND__@@V?$RectT@H@geomutil@@@Z ENDP	; MoveWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?WasCancelRequested@ThreadBase@@IAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?WasCancelRequested@ThreadBase@@IAE_NXZ PROC		; ThreadBase::WasCancelRequested, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\threadutil.h
; Line 21
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?WasCancelRequested@ThreadBase@@IAE_NXZ ENDP		; ThreadBase::WasCancelRequested
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$ScopedMem@D@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$ScopedMem@D@@QBEPADXZ PROC				; ScopedMem<char>::operator char *, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\scoped.h
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$ScopedMem@D@@QBEPADXZ ENDP				; ScopedMem<char>::operator char *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ScopedMem@D@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$ScopedMem@D@@QAE@XZ PROC				; ScopedMem<char>::~ScopedMem<char>, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\scoped.h
; Line 14
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	__free_dbg
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScopedMem@D@@QAE@XZ ENDP				; ScopedMem<char>::~ScopedMem<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ScopedMem@D@@QAE@PAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ptr$ = 8						; size = 4
??0?$ScopedMem@D@@QAE@PAD@Z PROC			; ScopedMem<char>::ScopedMem<char>, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\scoped.h
; Line 13
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$ScopedMem@D@@QAE@PAD@Z ENDP			; ScopedMem<char>::ScopedMem<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$Str@_W@str@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$Str@_W@str@@QAE@XZ PROC				; str::Str<wchar_t>::~Str<wchar_t>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$Vec@_W@@QAE@XZ			; Vec<wchar_t>::~Vec<wchar_t>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$Str@_W@str@@QAE@XZ ENDP				; str::Str<wchar_t>::~Str<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Get@?$Str@_W@str@@QBEPA_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Get@?$Str@_W@str@@QBEPA_WXZ PROC			; str::Str<wchar_t>::Get, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 387
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 388
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
; Line 389
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get@?$Str@_W@str@@QBEPA_WXZ ENDP			; str::Str<wchar_t>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?AppendAndFree@?$Str@_W@str@@QAEXPA_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?AppendAndFree@?$Str@_W@str@@QAEXPA_W@Z PROC		; str::Str<wchar_t>::AppendAndFree, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 362
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 363
	cmp	DWORD PTR _s$[ebp], 0
	je	SHORT $LN2@AppendAndF
; Line 364
	push	-1
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Append@?$Str@_W@str@@QAEXPB_WI@Z	; str::Str<wchar_t>::Append
$LN2@AppendAndF:
; Line 365
	push	1
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	__free_dbg
	add	esp, 8
; Line 366
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AppendAndFree@?$Str@_W@str@@QAEXPA_W@Z ENDP		; str::Str<wchar_t>::AppendAndFree
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?AppendFmt@?$Str@_W@str@@QAAXPB_WZZ
_TEXT	SEGMENT
_res$ = -20						; size = 4
_args$ = -8						; size = 4
_this$ = 8						; size = 4
_fmt$ = 12						; size = 4
?AppendFmt@?$Str@_W@str@@QAAXPB_WZZ PROC		; str::Str<wchar_t>::AppendFmt, COMDAT
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 353
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 355
	call	??$__vcrt_va_start_verify_argument_type@PB_W@@YAXXZ ; __vcrt_va_start_verify_argument_type<wchar_t const *>
	lea	eax, DWORD PTR _fmt$[ebp+4]
	mov	DWORD PTR _args$[ebp], eax
; Line 356
	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fmt$[ebp]
	push	ecx
	call	?FmtV@str@@YAPA_WPB_WPAD@Z		; str::FmtV
	add	esp, 8
	mov	DWORD PTR _res$[ebp], eax
; Line 357
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AppendAndFree@?$Str@_W@str@@QAEXPA_W@Z	; str::Str<wchar_t>::AppendAndFree
; Line 358
	mov	DWORD PTR _args$[ebp], 0
; Line 359
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AppendFmt@?$Str@_W@str@@QAAXPB_WZZ ENDP		; str::Str<wchar_t>::AppendFmt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Append@?$Str@_W@str@@QAEXPB_WI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_src$ = 8						; size = 4
_size$ = 12						; size = 4
?Append@?$Str@_W@str@@QAEXPB_WI@Z PROC			; str::Str<wchar_t>::Append, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 346
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 347
	cmp	DWORD PTR _size$[ebp], -1
	jne	SHORT $LN2@Append
; Line 348
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	call	?Len@str@@YAIPB_W@Z			; str::Len
	add	esp, 4
	mov	DWORD PTR _size$[ebp], eax
$LN2@Append:
; Line 349
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Append@?$Vec@_W@@QAEXPB_WI@Z		; Vec<wchar_t>::Append
; Line 350
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Append@?$Str@_W@str@@QAEXPB_WI@Z ENDP			; str::Str<wchar_t>::Append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$Str@_W@str@@QAE@IPAVAllocator@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_capHint$ = 8						; size = 4
_allocator$ = 12					; size = 4
??0?$Str@_W@str@@QAE@IPAVAllocator@@@Z PROC		; str::Str<wchar_t>::Str<wchar_t>, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 338
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _allocator$[ebp]
	push	eax
	mov	ecx, DWORD PTR _capHint$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$Vec@_W@@QAE@IPAVAllocator@@@Z	; Vec<wchar_t>::Vec<wchar_t>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$Str@_W@str@@QAE@IPAVAllocator@@@Z ENDP		; str::Str<wchar_t>::Str<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Append@?$Vec@_W@@QAEXPB_WI@Z
_TEXT	SEGMENT
_dst$ = -20						; size = 4
_this$ = -8						; size = 4
_src$ = 8						; size = 4
_count$ = 12						; size = 4
?Append@?$Vec@_W@@QAEXPB_WI@Z PROC			; Vec<wchar_t>::Append, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 168
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 169
	cmp	DWORD PTR _count$[ebp], 0
	jne	SHORT $LN2@Append
; Line 170
	jmp	SHORT $LN1@Append
$LN2@Append:
; Line 171
	push	0
	mov	eax, DWORD PTR _count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MakeSpaceAt@?$Vec@_W@@IAEPA_WII_N@Z	; Vec<wchar_t>::MakeSpaceAt
	mov	DWORD PTR _dst$[ebp], eax
; Line 172
	mov	eax, DWORD PTR _count$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dst$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@Append:
; Line 173
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Append@?$Vec@_W@@QAEXPB_WI@Z ENDP			; Vec<wchar_t>::Append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Size@?$Vec@_W@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$Vec@_W@@QBEIXZ PROC				; Vec<wchar_t>::Size, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 156
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 157
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 158
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$Vec@_W@@QBEIXZ ENDP				; Vec<wchar_t>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Reset@?$Vec@_W@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Reset@?$Vec@_W@@QAEXXZ PROC				; Vec<wchar_t>::Reset, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 133
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 134
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 15			; 0000000fH
; Line 135
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeEls@?$Vec@_W@@IAEXXZ		; Vec<wchar_t>::FreeEls
; Line 136
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 137
	push	32					; 00000020H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 138
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@?$Vec@_W@@QAEXXZ ENDP				; Vec<wchar_t>::Reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$Vec@_W@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$Vec@_W@@QAE@XZ PROC				; Vec<wchar_t>::~Vec<wchar_t>, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 94
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeEls@?$Vec@_W@@IAEXXZ		; Vec<wchar_t>::FreeEls
; Line 95
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$Vec@_W@@QAE@XZ ENDP				; Vec<wchar_t>::~Vec<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$Vec@_W@@QAE@IPAVAllocator@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_capHint$ = 8						; size = 4
_allocator$ = 12					; size = 4
??0?$Vec@_W@@QAE@IPAVAllocator@@@Z PROC			; Vec<wchar_t>::Vec<wchar_t>, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 88
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 87
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _capHint$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _allocator$[ebp]
	mov	DWORD PTR [eax+48], ecx
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 90
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@?$Vec@_W@@QAEXXZ			; Vec<wchar_t>::Reset
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$Vec@_W@@QAE@IPAVAllocator@@@Z ENDP			; Vec<wchar_t>::Vec<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FreeEls@?$Vec@_W@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?FreeEls@?$Vec@_W@@IAEXXZ PROC				; Vec<wchar_t>::FreeEls, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+12], eax
	je	SHORT $LN1@FreeEls
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	call	?Free@Allocator@@SAXPAV1@PAX@Z		; Allocator::Free
	add	esp, 8
$LN1@FreeEls:
; Line 82
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FreeEls@?$Vec@_W@@IAEXXZ ENDP				; Vec<wchar_t>::FreeEls
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?MakeSpaceAt@?$Vec@_W@@IAEPA_WII_N@Z
_TEXT	SEGMENT
_dst$1 = -56						; size = 4
_src$2 = -44						; size = 4
_res$ = -32						; size = 4
_newLen$ = -20						; size = 4
_this$ = -8						; size = 4
_idx$ = 8						; size = 4
_count$ = 12						; size = 4
_allowFailure$ = 16					; size = 1
?MakeSpaceAt@?$Vec@_W@@IAEPA_WII_N@Z PROC		; Vec<wchar_t>::MakeSpaceAt, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 63
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 64
	lea	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$max@I@std@@YAABIABI0@Z		; std::max<unsigned int>
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _newLen$[ebp], edx
; Line 65
	movzx	eax, BYTE PTR _allowFailure$[ebp]
	test	eax, eax
	jne	SHORT $LN2@MakeSpaceA
; Line 66
	mov	eax, DWORD PTR _newLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EnsureCapCrash@?$Vec@_W@@IAEXI@Z	; Vec<wchar_t>::EnsureCapCrash
	jmp	SHORT $LN3@MakeSpaceA
$LN2@MakeSpaceA:
; Line 67
	mov	eax, DWORD PTR _newLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EnsureCapTry@?$Vec@_W@@IAE_NI@Z	; Vec<wchar_t>::EnsureCapTry
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@MakeSpaceA
; Line 68
	xor	eax, eax
	jmp	SHORT $LN1@MakeSpaceA
$LN3@MakeSpaceA:
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _idx$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	DWORD PTR _res$[ebp], eax
; Line 70
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _idx$[ebp]
	jbe	SHORT $LN5@MakeSpaceA
; Line 71
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _idx$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	DWORD PTR _src$2[ebp], eax
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _idx$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	ecx, DWORD PTR _count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	DWORD PTR _dst$1[ebp], edx
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, DWORD PTR _idx$[ebp]
	shl	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _src$2[ebp]
	push	edx
	mov	eax, DWORD PTR _dst$1[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
$LN5@MakeSpaceA:
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newLen$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 76
	mov	eax, DWORD PTR _res$[ebp]
$LN1@MakeSpaceA:
; Line 77
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?MakeSpaceAt@?$Vec@_W@@IAEPA_WII_N@Z ENDP		; Vec<wchar_t>::MakeSpaceAt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EnsureCapCrash@?$Vec@_W@@IAEXI@Z
_TEXT	SEGMENT
_ok$ = -17						; size = 1
_this$ = -8						; size = 4
_needed$ = 8						; size = 4
?EnsureCapCrash@?$Vec@_W@@IAEXI@Z PROC			; Vec<wchar_t>::EnsureCapCrash, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 58
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 59
	mov	eax, DWORD PTR _needed$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EnsureCapTry@?$Vec@_W@@IAE_NI@Z	; Vec<wchar_t>::EnsureCapTry
	mov	BYTE PTR _ok$[ebp], al
$LN5@EnsureCapC:
; Line 60
	xor	eax, eax
	jne	SHORT $LN5@EnsureCapC
	movzx	eax, BYTE PTR _ok$[ebp]
	test	eax, eax
	jne	SHORT $LN2@EnsureCapC
	call	?CrashMe@@YAXXZ				; CrashMe
$LN2@EnsureCapC:
	xor	eax, eax
	jne	SHORT $LN5@EnsureCapC
; Line 61
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?EnsureCapCrash@?$Vec@_W@@IAEXI@Z ENDP			; Vec<wchar_t>::EnsureCapCrash
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EnsureCapTry@?$Vec@_W@@IAE_NI@Z
_TEXT	SEGMENT
_newEls$ = -68						; size = 4
_newPadding$ = -56					; size = 4
_allocSize$ = -44					; size = 4
_newElCount$ = -32					; size = 4
_newCap$ = -20						; size = 4
_this$ = -8						; size = 4
_needed$ = 8						; size = 4
?EnsureCapTry@?$Vec@_W@@IAE_NI@Z PROC			; Vec<wchar_t>::EnsureCapTry, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 27
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _needed$[ebp]
	jb	SHORT $LN2@EnsureCapT
; Line 29
	mov	al, 1
	jmp	$LN1@EnsureCapT
$LN2@EnsureCapT:
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 1
	mov	DWORD PTR _newCap$[ebp], ecx
; Line 32
	mov	eax, DWORD PTR _needed$[ebp]
	cmp	eax, DWORD PTR _newCap$[ebp]
	jbe	SHORT $LN3@EnsureCapT
; Line 33
	mov	eax, DWORD PTR _needed$[ebp]
	mov	DWORD PTR _newCap$[ebp], eax
$LN3@EnsureCapT:
; Line 34
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCap$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN4@EnsureCapT
; Line 35
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _newCap$[ebp], ecx
$LN4@EnsureCapT:
; Line 37
	mov	eax, DWORD PTR _newCap$[ebp]
	add	eax, 1
	mov	DWORD PTR _newElCount$[ebp], eax
; Line 38
	cmp	DWORD PTR _newElCount$[ebp], 2147483647	; 7fffffffH
	jb	SHORT $LN5@EnsureCapT
; Line 39
	xor	al, al
	jmp	$LN1@EnsureCapT
$LN5@EnsureCapT:
; Line 40
	cmp	DWORD PTR _newElCount$[ebp], 2147483647	; 7fffffffH
	jbe	SHORT $LN6@EnsureCapT
; Line 41
	xor	al, al
	jmp	$LN1@EnsureCapT
$LN6@EnsureCapT:
; Line 43
	mov	eax, DWORD PTR _newElCount$[ebp]
	shl	eax, 1
	mov	DWORD PTR _allocSize$[ebp], eax
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 1
	mov	edx, DWORD PTR _allocSize$[ebp]
	sub	edx, ecx
	mov	DWORD PTR _newPadding$[ebp], edx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+12]
	jne	SHORT $LN7@EnsureCapT
; Line 47
	mov	eax, DWORD PTR _newPadding$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 1
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	?Dup@Allocator@@SAPAXPAV1@PBXII@Z	; Allocator::Dup
	add	esp, 16					; 00000010H
	mov	DWORD PTR _newEls$[ebp], eax
; Line 48
	jmp	SHORT $LN8@EnsureCapT
$LN7@EnsureCapT:
; Line 49
	mov	eax, DWORD PTR _allocSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	?Realloc@Allocator@@SAPAXPAV1@PAXI@Z	; Allocator::Realloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _newEls$[ebp], eax
$LN8@EnsureCapT:
; Line 50
	cmp	DWORD PTR _newEls$[ebp], 0
	jne	SHORT $LN9@EnsureCapT
; Line 51
	xor	al, al
	jmp	SHORT $LN1@EnsureCapT
$LN9@EnsureCapT:
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newEls$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 53
	mov	eax, DWORD PTR _newPadding$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	lea	edx, DWORD PTR [ecx+edx*2]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 54
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCap$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 55
	mov	al, 1
$LN1@EnsureCapT:
; Line 56
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?EnsureCapTry@?$Vec@_W@@IAE_NI@Z ENDP			; Vec<wchar_t>::EnsureCapTry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Split@WStrVec@@QAEIPB_W0_N@Z
_TEXT	SEGMENT
$T1 = -248						; size = 4
$T2 = -236						; size = 4
_next$ = -32						; size = 4
_start$ = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_separator$ = 12					; size = 4
_collapse$ = 16						; size = 1
?Split@WStrVec@@QAEIPB_W0_N@Z PROC			; WStrVec::Split, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 464
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 465
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _start$[ebp], ecx
$LN2@Split:
; Line 468
	mov	eax, DWORD PTR _separator$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	?Find@str@@YAPB_WPB_W0@Z		; str::Find
	add	esp, 8
	mov	DWORD PTR _next$[ebp], eax
	cmp	DWORD PTR _next$[ebp], 0
	je	SHORT $LN3@Split
; Line 469
	movzx	eax, BYTE PTR _collapse$[ebp]
	test	eax, eax
	je	SHORT $LN5@Split
	mov	eax, DWORD PTR _next$[ebp]
	cmp	eax, DWORD PTR _s$[ebp]
	jbe	SHORT $LN4@Split
$LN5@Split:
; Line 470
	mov	eax, DWORD PTR _next$[ebp]
	sub	eax, DWORD PTR _s$[ebp]
	sar	eax, 1
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	?DupN@str@@YAPA_WPB_WI@Z		; str::DupN
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Append@?$Vec@PA_W@@QAEXABQA_W@Z	; Vec<wchar_t *>::Append
$LN4@Split:
; Line 471
	mov	eax, DWORD PTR _separator$[ebp]
	push	eax
	call	?Len@str@@YAIPB_W@Z			; str::Len
	add	esp, 4
	mov	ecx, DWORD PTR _next$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _s$[ebp], edx
; Line 472
	jmp	SHORT $LN2@Split
$LN3@Split:
; Line 473
	movzx	eax, BYTE PTR _collapse$[ebp]
	test	eax, eax
	je	SHORT $LN7@Split
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN6@Split
$LN7@Split:
; Line 474
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?Dup@str@@YAPA_WPB_W@Z			; str::Dup
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Append@?$Vec@PA_W@@QAEXABQA_W@Z	; Vec<wchar_t *>::Append
$LN6@Split:
; Line 476
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR _start$[ebp]
; Line 477
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Split@WStrVec@@QAEIPB_W0_N@Z ENDP			; WStrVec::Split
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Contains@WStrVec@@QBE_NPB_W@Z
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?Contains@WStrVec@@QBE_NPB_W@Z PROC			; WStrVec::Contains, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 447
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 448
	push	0
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Find@WStrVec@@QBEHPB_WI@Z		; WStrVec::Find
	cmp	eax, -1
	je	SHORT $LN3@Contains
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@Contains
$LN3@Contains:
	mov	DWORD PTR tv69[ebp], 0
$LN4@Contains:
	mov	al, BYTE PTR tv69[ebp]
; Line 449
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Contains@WStrVec@@QBE_NPB_W@Z ENDP			; WStrVec::Contains
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Find@WStrVec@@QBEHPB_WI@Z
_TEXT	SEGMENT
_item$1 = -32						; size = 4
_i$2 = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_startAt$ = 12						; size = 4
?Find@WStrVec@@QBEHPB_WI@Z PROC				; WStrVec::Find, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 438
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 439
	mov	eax, DWORD PTR _startAt$[ebp]
	mov	DWORD PTR _i$2[ebp], eax
	jmp	SHORT $LN4@Find
$LN2@Find:
	mov	eax, DWORD PTR _i$2[ebp]
	add	eax, 1
	mov	DWORD PTR _i$2[ebp], eax
$LN4@Find:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$2[ebp]
	cmp	ecx, DWORD PTR [eax]
	jae	SHORT $LN3@Find
; Line 440
	mov	eax, DWORD PTR _i$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?At@?$Vec@PA_W@@QBEAAPA_WI@Z		; Vec<wchar_t *>::At
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _item$1[ebp], ecx
; Line 441
	mov	eax, DWORD PTR _item$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	?Eq@str@@YA_NPB_W0@Z			; str::Eq
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@Find
; Line 442
	mov	eax, DWORD PTR _i$2[ebp]
	jmp	SHORT $LN1@Find
$LN5@Find:
; Line 443
	jmp	SHORT $LN2@Find
$LN3@Find:
; Line 444
	or	eax, -1
$LN1@Find:
; Line 445
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Find@WStrVec@@QBEHPB_WI@Z ENDP				; WStrVec::Find
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1WStrVec@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1WStrVec@@QAE@XZ PROC					; WStrVec::~WStrVec, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 406
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 407
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeMembers@?$Vec@PA_W@@QAEXXZ		; Vec<wchar_t *>::FreeMembers
; Line 408
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$Vec@PA_W@@QAE@XZ			; Vec<wchar_t *>::~Vec<wchar_t *>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1WStrVec@@QAE@XZ ENDP					; WStrVec::~WStrVec
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0WStrVec@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0WStrVec@@QAE@XZ PROC					; WStrVec::WStrVec, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 398
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$Vec@PA_W@@QAE@IPAVAllocator@@@Z	; Vec<wchar_t *>::Vec<wchar_t *>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0WStrVec@@QAE@XZ ENDP					; WStrVec::WStrVec
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?end@?$Vec@PA_W@@QAE?AVIter@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$Vec@PA_W@@QAE?AVIter@1@XZ PROC			; Vec<wchar_t *>::end, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 318
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 319
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Iter@?$Vec@PA_W@@QAE@PAV1@I@Z	; Vec<wchar_t *>::Iter::Iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 320
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$Vec@PA_W@@QAE?AVIter@1@XZ ENDP			; Vec<wchar_t *>::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?begin@?$Vec@PA_W@@QAE?AVIter@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$Vec@PA_W@@QAE?AVIter@1@XZ PROC			; Vec<wchar_t *>::begin, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 315
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 316
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Iter@?$Vec@PA_W@@QAE@PAV1@I@Z	; Vec<wchar_t *>::Iter::Iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 317
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$Vec@PA_W@@QAE?AVIter@1@XZ ENDP			; Vec<wchar_t *>::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PopAt@?$Vec@PA_W@@QAEPA_WI@Z
_TEXT	SEGMENT
tv67 = -217						; size = 1
_el$ = -20						; size = 4
_this$ = -8						; size = 4
_idx$ = 8						; size = 4
?PopAt@?$Vec@PA_W@@QAEPA_WI@Z PROC			; Vec<wchar_t *>::PopAt, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN5@PopAt:
; Line 228
	xor	eax, eax
	jne	SHORT $LN5@PopAt
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _idx$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jb	SHORT $LN9@PopAt
	mov	BYTE PTR tv67[ebp], 1
	jmp	SHORT $LN10@PopAt
$LN9@PopAt:
	mov	BYTE PTR tv67[ebp], 0
$LN10@PopAt:
	movzx	edx, BYTE PTR tv67[ebp]
	push	edx
	call	?CrashIfFunc@@YAX_N@Z			; CrashIfFunc
	add	esp, 4
	xor	eax, eax
	jne	SHORT $LN5@PopAt
; Line 229
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?At@?$Vec@PA_W@@QBEAAPA_WI@Z		; Vec<wchar_t *>::At
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _el$[ebp], ecx
; Line 230
	push	1
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAt@?$Vec@PA_W@@QAEXII@Z		; Vec<wchar_t *>::RemoveAt
; Line 231
	mov	eax, DWORD PTR _el$[ebp]
; Line 232
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PopAt@?$Vec@PA_W@@QAEPA_WI@Z ENDP			; Vec<wchar_t *>::PopAt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Pop@?$Vec@PA_W@@QAEPA_WXZ
_TEXT	SEGMENT
tv67 = -217						; size = 1
_el$ = -20						; size = 4
_this$ = -8						; size = 4
?Pop@?$Vec@PA_W@@QAEPA_WXZ PROC				; Vec<wchar_t *>::Pop, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN5@Pop:
; Line 221
	xor	eax, eax
	jne	SHORT $LN5@Pop
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN9@Pop
	mov	BYTE PTR tv67[ebp], 1
	jmp	SHORT $LN10@Pop
$LN9@Pop:
	mov	BYTE PTR tv67[ebp], 0
$LN10@Pop:
	movzx	ecx, BYTE PTR tv67[ebp]
	push	ecx
	call	?CrashIfFunc@@YAX_N@Z			; CrashIfFunc
	add	esp, 4
	xor	eax, eax
	jne	SHORT $LN5@Pop
; Line 222
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?At@?$Vec@PA_W@@QBEAAPA_WI@Z		; Vec<wchar_t *>::At
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _el$[ebp], edx
; Line 223
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAtFast@?$Vec@PA_W@@QAEXI@Z	; Vec<wchar_t *>::RemoveAtFast
; Line 224
	mov	eax, DWORD PTR _el$[ebp]
; Line 225
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Pop@?$Vec@PA_W@@QAEPA_WXZ ENDP				; Vec<wchar_t *>::Pop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RemoveAtFast@?$Vec@PA_W@@QAEXI@Z
_TEXT	SEGMENT
tv67 = -229						; size = 1
_last$ = -32						; size = 4
_toRemove$ = -20					; size = 4
_this$ = -8						; size = 4
_idx$ = 8						; size = 4
?RemoveAtFast@?$Vec@PA_W@@QAEXI@Z PROC			; Vec<wchar_t *>::RemoveAtFast, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 205
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN5@RemoveAtFa:
; Line 206
	xor	eax, eax
	jne	SHORT $LN5@RemoveAtFa
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _idx$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jb	SHORT $LN11@RemoveAtFa
	mov	BYTE PTR tv67[ebp], 1
	jmp	SHORT $LN12@RemoveAtFa
$LN11@RemoveAtFa:
	mov	BYTE PTR tv67[ebp], 0
$LN12@RemoveAtFa:
	movzx	edx, BYTE PTR tv67[ebp]
	push	edx
	call	?CrashIfFunc@@YAX_N@Z			; CrashIfFunc
	add	esp, 4
	xor	eax, eax
	jne	SHORT $LN5@RemoveAtFa
; Line 207
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _idx$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jb	SHORT $LN8@RemoveAtFa
	jmp	SHORT $LN1@RemoveAtFa
$LN8@RemoveAtFa:
; Line 208
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _idx$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _toRemove$[ebp], eax
; Line 209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	lea	ecx, DWORD PTR [eax+ecx*4-4]
	mov	DWORD PTR _last$[ebp], ecx
; Line 210
	mov	eax, DWORD PTR _toRemove$[ebp]
	cmp	eax, DWORD PTR _last$[ebp]
	je	SHORT $LN9@RemoveAtFa
; Line 211
	push	4
	mov	eax, DWORD PTR _last$[ebp]
	push	eax
	mov	ecx, DWORD PTR _toRemove$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN9@RemoveAtFa:
; Line 212
	push	4
	push	0
	mov	eax, DWORD PTR _last$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 213
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
$LN1@RemoveAtFa:
; Line 214
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveAtFast@?$Vec@PA_W@@QAEXI@Z ENDP			; Vec<wchar_t *>::RemoveAtFast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RemoveAt@?$Vec@PA_W@@QAEXII@Z
_TEXT	SEGMENT
_src$1 = -32						; size = 4
_dst$2 = -20						; size = 4
_this$ = -8						; size = 4
_idx$ = 8						; size = 4
_count$ = 12						; size = 4
?RemoveAt@?$Vec@PA_W@@QAEXII@Z PROC			; Vec<wchar_t *>::RemoveAt, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 191
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], eax
	jbe	SHORT $LN2@RemoveAt
; Line 192
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _idx$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _dst$2[ebp], eax
; Line 193
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _idx$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _src$1[ebp], edx
; Line 194
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, DWORD PTR _idx$[ebp]
	sub	ecx, DWORD PTR _count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _src$1[ebp]
	push	edx
	mov	eax, DWORD PTR _dst$2[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
$LN2@RemoveAt:
; Line 196
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, DWORD PTR _count$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 197
	mov	eax, DWORD PTR _count$[ebp]
	shl	eax, 2
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	lea	edx, DWORD PTR [ecx+edx*4]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 198
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?RemoveAt@?$Vec@PA_W@@QAEXII@Z ENDP			; Vec<wchar_t *>::RemoveAt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Append@?$Vec@PA_W@@QAEXABQA_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_el$ = 8						; size = 4
?Append@?$Vec@PA_W@@QAEXABQA_W@Z PROC			; Vec<wchar_t *>::Append, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 164
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 165
	mov	eax, DWORD PTR _el$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InsertAt@?$Vec@PA_W@@QAEXIABQA_W@Z	; Vec<wchar_t *>::InsertAt
; Line 166
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Append@?$Vec@PA_W@@QAEXABQA_W@Z ENDP			; Vec<wchar_t *>::Append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InsertAt@?$Vec@PA_W@@QAEXIABQA_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_idx$ = 8						; size = 4
_el$ = 12						; size = 4
?InsertAt@?$Vec@PA_W@@QAEXIABQA_W@Z PROC		; Vec<wchar_t *>::InsertAt, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 160
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 161
	push	0
	push	1
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MakeSpaceAt@?$Vec@PA_W@@IAEPAPA_WII_N@Z ; Vec<wchar_t *>::MakeSpaceAt
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	ecx, DWORD PTR _el$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+edx], ecx
; Line 162
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?InsertAt@?$Vec@PA_W@@QAEXIABQA_W@Z ENDP		; Vec<wchar_t *>::InsertAt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Count@?$Vec@PA_W@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Count@?$Vec@PA_W@@QBEIXZ PROC				; Vec<wchar_t *>::Count, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 154
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Count@?$Vec@PA_W@@QBEIXZ ENDP				; Vec<wchar_t *>::Count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?At@?$Vec@PA_W@@QBEAAPA_WI@Z
_TEXT	SEGMENT
tv67 = -205						; size = 1
_this$ = -8						; size = 4
_idx$ = 8						; size = 4
?At@?$Vec@PA_W@@QBEAAPA_WI@Z PROC			; Vec<wchar_t *>::At, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN5@At:
; Line 142
	xor	eax, eax
	jne	SHORT $LN5@At
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _idx$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jb	SHORT $LN9@At
	mov	BYTE PTR tv67[ebp], 1
	jmp	SHORT $LN10@At
$LN9@At:
	mov	BYTE PTR tv67[ebp], 0
$LN10@At:
	movzx	edx, BYTE PTR tv67[ebp]
	push	edx
	call	?CrashIfFunc@@YAX_N@Z			; CrashIfFunc
	add	esp, 4
	xor	eax, eax
	jne	SHORT $LN5@At
; Line 143
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _idx$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
; Line 144
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?At@?$Vec@PA_W@@QBEAAPA_WI@Z ENDP			; Vec<wchar_t *>::At
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Reset@?$Vec@PA_W@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Reset@?$Vec@PA_W@@QAEXXZ PROC				; Vec<wchar_t *>::Reset, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 133
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 134
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 15			; 0000000fH
; Line 135
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeEls@?$Vec@PA_W@@IAEXXZ		; Vec<wchar_t *>::FreeEls
; Line 136
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 137
	push	64					; 00000040H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 138
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@?$Vec@PA_W@@QAEXXZ ENDP				; Vec<wchar_t *>::Reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FreeMembers@?$Vec@PA_W@@QAEXXZ
_TEXT	SEGMENT
_s$1 = -32						; size = 4
_i$2 = -20						; size = 4
_this$ = -8						; size = 4
?FreeMembers@?$Vec@PA_W@@QAEXXZ PROC			; Vec<wchar_t *>::FreeMembers, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 109
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 110
	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN4@FreeMember
$LN2@FreeMember:
	mov	eax, DWORD PTR _i$2[ebp]
	add	eax, 1
	mov	DWORD PTR _i$2[ebp], eax
$LN4@FreeMember:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$2[ebp]
	cmp	ecx, DWORD PTR [eax]
	jae	SHORT $LN3@FreeMember
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _i$2[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _s$1[ebp], eax
; Line 112
	push	1
	mov	eax, DWORD PTR _s$1[ebp]
	push	eax
	call	__free_dbg
	add	esp, 8
; Line 113
	jmp	SHORT $LN2@FreeMember
$LN3@FreeMember:
; Line 114
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@?$Vec@PA_W@@QAEXXZ		; Vec<wchar_t *>::Reset
; Line 115
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FreeMembers@?$Vec@PA_W@@QAEXXZ ENDP			; Vec<wchar_t *>::FreeMembers
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$Vec@PA_W@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$Vec@PA_W@@QAE@XZ PROC				; Vec<wchar_t *>::~Vec<wchar_t *>, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 94
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeEls@?$Vec@PA_W@@IAEXXZ		; Vec<wchar_t *>::FreeEls
; Line 95
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$Vec@PA_W@@QAE@XZ ENDP				; Vec<wchar_t *>::~Vec<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$Vec@PA_W@@QAE@IPAVAllocator@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_capHint$ = 8						; size = 4
_allocator$ = 12					; size = 4
??0?$Vec@PA_W@@QAE@IPAVAllocator@@@Z PROC		; Vec<wchar_t *>::Vec<wchar_t *>, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 88
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 87
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _capHint$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _allocator$[ebp]
	mov	DWORD PTR [eax+80], ecx
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 90
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@?$Vec@PA_W@@QAEXXZ		; Vec<wchar_t *>::Reset
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$Vec@PA_W@@QAE@IPAVAllocator@@@Z ENDP		; Vec<wchar_t *>::Vec<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FreeEls@?$Vec@PA_W@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?FreeEls@?$Vec@PA_W@@IAEXXZ PROC			; Vec<wchar_t *>::FreeEls, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+12], eax
	je	SHORT $LN1@FreeEls
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	push	eax
	call	?Free@Allocator@@SAXPAV1@PAX@Z		; Allocator::Free
	add	esp, 8
$LN1@FreeEls:
; Line 82
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FreeEls@?$Vec@PA_W@@IAEXXZ ENDP			; Vec<wchar_t *>::FreeEls
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?MakeSpaceAt@?$Vec@PA_W@@IAEPAPA_WII_N@Z
_TEXT	SEGMENT
_dst$1 = -56						; size = 4
_src$2 = -44						; size = 4
_res$ = -32						; size = 4
_newLen$ = -20						; size = 4
_this$ = -8						; size = 4
_idx$ = 8						; size = 4
_count$ = 12						; size = 4
_allowFailure$ = 16					; size = 1
?MakeSpaceAt@?$Vec@PA_W@@IAEPAPA_WII_N@Z PROC		; Vec<wchar_t *>::MakeSpaceAt, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 63
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 64
	lea	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$max@I@std@@YAABIABI0@Z		; std::max<unsigned int>
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _newLen$[ebp], edx
; Line 65
	movzx	eax, BYTE PTR _allowFailure$[ebp]
	test	eax, eax
	jne	SHORT $LN2@MakeSpaceA
; Line 66
	mov	eax, DWORD PTR _newLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EnsureCapCrash@?$Vec@PA_W@@IAEXI@Z	; Vec<wchar_t *>::EnsureCapCrash
	jmp	SHORT $LN3@MakeSpaceA
$LN2@MakeSpaceA:
; Line 67
	mov	eax, DWORD PTR _newLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EnsureCapTry@?$Vec@PA_W@@IAE_NI@Z	; Vec<wchar_t *>::EnsureCapTry
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@MakeSpaceA
; Line 68
	xor	eax, eax
	jmp	SHORT $LN1@MakeSpaceA
$LN3@MakeSpaceA:
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _idx$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _res$[ebp], eax
; Line 70
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _idx$[ebp]
	jbe	SHORT $LN5@MakeSpaceA
; Line 71
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _idx$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _src$2[ebp], eax
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _idx$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _dst$1[ebp], edx
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, DWORD PTR _idx$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _src$2[ebp]
	push	edx
	mov	eax, DWORD PTR _dst$1[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
$LN5@MakeSpaceA:
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newLen$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 76
	mov	eax, DWORD PTR _res$[ebp]
$LN1@MakeSpaceA:
; Line 77
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?MakeSpaceAt@?$Vec@PA_W@@IAEPAPA_WII_N@Z ENDP		; Vec<wchar_t *>::MakeSpaceAt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EnsureCapCrash@?$Vec@PA_W@@IAEXI@Z
_TEXT	SEGMENT
_ok$ = -17						; size = 1
_this$ = -8						; size = 4
_needed$ = 8						; size = 4
?EnsureCapCrash@?$Vec@PA_W@@IAEXI@Z PROC		; Vec<wchar_t *>::EnsureCapCrash, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 58
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 59
	mov	eax, DWORD PTR _needed$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EnsureCapTry@?$Vec@PA_W@@IAE_NI@Z	; Vec<wchar_t *>::EnsureCapTry
	mov	BYTE PTR _ok$[ebp], al
$LN5@EnsureCapC:
; Line 60
	xor	eax, eax
	jne	SHORT $LN5@EnsureCapC
	movzx	eax, BYTE PTR _ok$[ebp]
	test	eax, eax
	jne	SHORT $LN2@EnsureCapC
	call	?CrashMe@@YAXXZ				; CrashMe
$LN2@EnsureCapC:
	xor	eax, eax
	jne	SHORT $LN5@EnsureCapC
; Line 61
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?EnsureCapCrash@?$Vec@PA_W@@IAEXI@Z ENDP		; Vec<wchar_t *>::EnsureCapCrash
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EnsureCapTry@?$Vec@PA_W@@IAE_NI@Z
_TEXT	SEGMENT
_newEls$ = -68						; size = 4
_newPadding$ = -56					; size = 4
_allocSize$ = -44					; size = 4
_newElCount$ = -32					; size = 4
_newCap$ = -20						; size = 4
_this$ = -8						; size = 4
_needed$ = 8						; size = 4
?EnsureCapTry@?$Vec@PA_W@@IAE_NI@Z PROC			; Vec<wchar_t *>::EnsureCapTry, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\vec.h
; Line 27
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _needed$[ebp]
	jb	SHORT $LN2@EnsureCapT
; Line 29
	mov	al, 1
	jmp	$LN1@EnsureCapT
$LN2@EnsureCapT:
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 1
	mov	DWORD PTR _newCap$[ebp], ecx
; Line 32
	mov	eax, DWORD PTR _needed$[ebp]
	cmp	eax, DWORD PTR _newCap$[ebp]
	jbe	SHORT $LN3@EnsureCapT
; Line 33
	mov	eax, DWORD PTR _needed$[ebp]
	mov	DWORD PTR _newCap$[ebp], eax
$LN3@EnsureCapT:
; Line 34
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCap$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN4@EnsureCapT
; Line 35
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _newCap$[ebp], ecx
$LN4@EnsureCapT:
; Line 37
	mov	eax, DWORD PTR _newCap$[ebp]
	add	eax, 1
	mov	DWORD PTR _newElCount$[ebp], eax
; Line 38
	cmp	DWORD PTR _newElCount$[ebp], 1073741823	; 3fffffffH
	jb	SHORT $LN5@EnsureCapT
; Line 39
	xor	al, al
	jmp	$LN1@EnsureCapT
$LN5@EnsureCapT:
; Line 40
	cmp	DWORD PTR _newElCount$[ebp], 2147483647	; 7fffffffH
	jbe	SHORT $LN6@EnsureCapT
; Line 41
	xor	al, al
	jmp	$LN1@EnsureCapT
$LN6@EnsureCapT:
; Line 43
	mov	eax, DWORD PTR _newElCount$[ebp]
	shl	eax, 2
	mov	DWORD PTR _allocSize$[ebp], eax
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 2
	mov	edx, DWORD PTR _allocSize$[ebp]
	sub	edx, ecx
	mov	DWORD PTR _newPadding$[ebp], edx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+12]
	jne	SHORT $LN7@EnsureCapT
; Line 47
	mov	eax, DWORD PTR _newPadding$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	call	?Dup@Allocator@@SAPAXPAV1@PBXII@Z	; Allocator::Dup
	add	esp, 16					; 00000010H
	mov	DWORD PTR _newEls$[ebp], eax
; Line 48
	jmp	SHORT $LN8@EnsureCapT
$LN7@EnsureCapT:
; Line 49
	mov	eax, DWORD PTR _allocSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	call	?Realloc@Allocator@@SAPAXPAV1@PAXI@Z	; Allocator::Realloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _newEls$[ebp], eax
$LN8@EnsureCapT:
; Line 50
	cmp	DWORD PTR _newEls$[ebp], 0
	jne	SHORT $LN9@EnsureCapT
; Line 51
	xor	al, al
	jmp	SHORT $LN1@EnsureCapT
$LN9@EnsureCapT:
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newEls$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 53
	mov	eax, DWORD PTR _newPadding$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	lea	edx, DWORD PTR [ecx+edx*4]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 54
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCap$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 55
	mov	al, 1
$LN1@EnsureCapT:
; Line 56
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?EnsureCapTry@?$Vec@PA_W@@IAE_NI@Z ENDP			; Vec<wchar_t *>::EnsureCapTry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Find@str@@YAPB_WPB_W0@Z
_TEXT	SEGMENT
_str$ = 8						; size = 4
_find$ = 12						; size = 4
?Find@str@@YAPB_WPB_W0@Z PROC				; str::Find, COMDAT
; File c:\workspace\sumatrapdf-master\src\utils\strutil.h
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 101
	mov	eax, DWORD PTR _find$[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	_wcsstr
	add	esp, 8
; Line 102
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Find@str@@YAPB_WPB_W0@Z ENDP				; str::Find
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FindChar@str@@YAPA_WPA_W_W@Z
_TEXT	SEGMENT
_str$ = 8						; size = 4
_c$ = 12						; size = 2
?FindChar@str@@YAPA_WPA_W_W@Z PROC			; str::FindChar, COMDAT
; File c:\workspace\sumatrapdf-master\src\utils\strutil.h
; Line 80
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 81
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	?wcschr@@YAPA_WPA_W_W@Z			; wcschr
	add	esp, 8
; Line 82
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FindChar@str@@YAPA_WPA_W_W@Z ENDP			; str::FindChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ScopedGdiPlus@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1ScopedGdiPlus@@QAE@XZ PROC				; ScopedGdiPlus::~ScopedGdiPlus, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\scoped.h
; Line 188
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 189
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	je	SHORT $LN2@ScopedGdiP
; Line 190
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@ScopedGdiP:
; Line 191
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_GdiplusShutdown@4
; Line 192
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1ScopedGdiPlus@@QAE@XZ ENDP				; ScopedGdiPlus::~ScopedGdiPlus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ScopedGdiPlus@@QAE@_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_inWinMain$ = 8						; size = 1
??0ScopedGdiPlus@@QAE@_N@Z PROC				; ScopedGdiPlus::ScopedGdiPlus, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\scoped.h
; Line 182
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0GdiplusStartupInput@Gdiplus@@QAE@P6GXW4DebugEventLevel@1@PAD@ZHH@Z ; Gdiplus::GdiplusStartupInput::GdiplusStartupInput
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _inWinMain$[ebp]
	mov	BYTE PTR [eax+32], cl
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	call	_GdiplusStartup@12
; Line 185
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	je	SHORT $LN1@ScopedGdiP
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@ScopedGdiP:
; Line 187
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0ScopedGdiPlus@@QAE@_N@Z ENDP				; ScopedGdiPlus::ScopedGdiPlus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ScopedOle@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1ScopedOle@@QAE@XZ PROC				; ScopedOle::~ScopedOle, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\scoped.h
; Line 168
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	call	DWORD PTR __imp__OleUninitialize@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1ScopedOle@@QAE@XZ ENDP				; ScopedOle::~ScopedOle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ScopedOle@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ScopedOle@@QAE@XZ PROC				; ScopedOle::ScopedOle, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\scoped.h
; Line 167
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__OleInitialize@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ScopedOle@@QAE@XZ ENDP				; ScopedOle::ScopedOle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ClientRect@@QAE@PAUHWND__@@@Z
_TEXT	SEGMENT
_rc$ = -36						; size = 16
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hwnd$ = 8						; size = 4
??0ClientRect@@QAE@PAUHWND__@@@Z PROC			; ClientRect::ClientRect, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\geomutil.h
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$RectT@H@geomutil@@QAE@XZ		; geomutil::RectT<int>::RectT<int>
; Line 215
	mov	esi, esp
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@ClientRect
; Line 216
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _rc$[ebp+8]
	sub	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 217
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rc$[ebp+4]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _rc$[ebp+12]
	sub	eax, DWORD PTR _rc$[ebp+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
$LN1@ClientRect:
; Line 219
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@ClientRect
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN6@ClientRect:
	DD	1
	DD	$LN5@ClientRect
$LN5@ClientRect:
	DD	-36					; ffffffdcH
	DD	16					; 00000010H
	DD	$LN4@ClientRect
$LN4@ClientRect:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
??0ClientRect@@QAE@PAUHWND__@@@Z ENDP			; ClientRect::ClientRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$RectT@H@geomutil@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$RectT@H@geomutil@@QAE@XZ PROC			; geomutil::RectT<int>::RectT<int>, COMDAT
; _this$ = ecx
; File c:\workspace\sumatrapdf-master\src\utils\geomutil.h
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$RectT@H@geomutil@@QAE@XZ ENDP			; geomutil::RectT<int>::RectT<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CrashIfFunc@@YAX_N@Z
_TEXT	SEGMENT
_cond$ = 8						; size = 1
?CrashIfFunc@@YAX_N@Z PROC				; CrashIfFunc, COMDAT
; File c:\workspace\sumatrapdf-master\src\utils\baseutil.h
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 134
	movzx	eax, BYTE PTR _cond$[ebp]
	test	eax, eax
	je	SHORT $LN1@CrashIfFun
; Line 135
	call	?CrashMe@@YAXXZ				; CrashMe
$LN1@CrashIfFun:
; Line 138
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CrashIfFunc@@YAX_N@Z ENDP				; CrashIfFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CrashMe@@YAXXZ
_TEXT	SEGMENT
_p$ = -8						; size = 4
?CrashMe@@YAXXZ PROC					; CrashMe, COMDAT
; File c:\workspace\sumatrapdf-master\src\utils\baseutil.h
; Line 108
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 109
	mov	DWORD PTR _p$[ebp], 0
; Line 110
	mov	eax, DWORD PTR _p$[ebp]
	mov	BYTE PTR [eax], 0
; Line 111
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?CrashMe@@YAXXZ ENDP					; CrashMe
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.10150.0\ucrt\time.h
; Line 534
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 535
	mov	eax, DWORD PTR __Time$[ebp]
	push	eax
	call	__time64
	add	esp, 4
; Line 536
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_time	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_new.h
; Line 87
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 89
	mov	eax, DWORD PTR __Where$[ebp]
; Line 90
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$__vcrt_va_start_verify_argument_type@PB_W@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@PB_W@@YAXXZ PROC ; __vcrt_va_start_verify_argument_type<wchar_t const *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vadefs.h
; Line 144
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 146
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$__vcrt_va_start_verify_argument_type@PB_W@@YAXXZ ENDP ; __vcrt_va_start_verify_argument_type<wchar_t const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0GdiplusStartupInput@Gdiplus@@QAE@P6GXW4DebugEventLevel@1@PAD@ZHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_debugEventCallback$ = 8				; size = 4
_suppressBackgroundThread$ = 12				; size = 4
_suppressExternalCodecs$ = 16				; size = 4
??0GdiplusStartupInput@Gdiplus@@QAE@P6GXW4DebugEventLevel@1@PAD@ZHH@Z PROC ; Gdiplus::GdiplusStartupInput::GdiplusStartupInput, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusinit.h
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 1
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _debugEventCallback$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 53
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _suppressBackgroundThread$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 54
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _suppressExternalCodecs$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0GdiplusStartupInput@Gdiplus@@QAE@P6GXW4DebugEventLevel@1@PAD@ZHH@Z ENDP ; Gdiplus::GdiplusStartupInput::GdiplusStartupInput
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WinMain@16
_TEXT	SEGMENT
tv506 = -1592						; size = 4
tv382 = -1592						; size = 4
tv332 = -1592						; size = 4
tv149 = -1592						; size = 4
tv439 = -1589						; size = 1
tv284 = -1589						; size = 1
tv206 = -1589						; size = 1
tv177 = -1589						; size = 1
tv67 = -1589						; size = 1
$T1 = -1584						; size = 4
$T2 = -1572						; size = 4
$T3 = -1560						; size = 4
_n$4 = -1356						; size = 4
_state$5 = -1344					; size = 4
_<end>$L1$6 = -1332					; size = 8
_<begin>$L1$7 = -1316					; size = 8
_<range>$L1$8 = -1300					; size = 4
_data$9 = -1288						; size = 4
_<end>$L0$10 = -1276					; size = 8
_<begin>$L0$11 = -1260					; size = 8
_<range>$L0$12 = -1244					; size = 4
_win$ = -1232						; size = 4
_sfi$13 = -1220						; size = 692
_showStartPage$ = -517					; size = 1
_restoreSession$ = -505					; size = 1
_n$14 = -496						; size = 4
_hPrevWnd$ = -484					; size = 4
_hMutex$ = -472						; size = 4
_ok$15 = -457						; size = 1
_n$16 = -448						; size = 4
_i$ = -436						; size = 360
_gdiPlus$ = -68						; size = 36
_ole$ = -21						; size = 1
_retCode$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hInstance$ = 8						; size = 4
_hPrevInstance$ = 12					; size = 4
_lpCmdLine$ = 16					; size = 4
_nCmdShow$ = 20						; size = 4
_WinMain@16 PROC					; COMDAT
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 575
	push	ebp
	mov	ebp, esp
	sub	esp, 1592				; 00000638H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1592]
	mov	ecx, 398				; 0000018eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 576
	mov	DWORD PTR _retCode$[ebp], 1
$LN5@WinMain:
; Line 578
	xor	eax, eax
	jne	SHORT $LN5@WinMain
	call	?GetInstance@@YAPAUHINSTANCE__@@XZ	; GetInstance
	cmp	DWORD PTR _hInstance$[ebp], eax
	je	SHORT $LN84@WinMain
	mov	BYTE PTR tv67[ebp], 1
	jmp	SHORT $LN85@WinMain
$LN84@WinMain:
	mov	BYTE PTR tv67[ebp], 0
$LN85@WinMain:
	movzx	eax, BYTE PTR tv67[ebp]
	push	eax
	call	?CrashIfFunc@@YAX_N@Z			; CrashIfFunc
	add	esp, 4
	xor	eax, eax
	jne	SHORT $LN5@WinMain
; Line 584
	push	1
	call	__CrtSetDbgFlag
	add	esp, 4
; Line 586
	call	?TryLoadMemTrace@@YA_NXZ		; TryLoadMemTrace
; Line 589
	call	?DisableDataExecution@@YAXXZ		; DisableDataExecution
; Line 592
	push	OFFSET ??_C@_01GFHCPBMG@C?$AA@
	push	0
	call	_setlocale
	add	esp, 8
; Line 596
	mov	esi, esp
	push	32769					; 00008001H
	call	DWORD PTR __imp__SetErrorMode@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 599
	push	OFFSET ??_C@_07PDKPIFNG@?1tester?$AA@
	mov	eax, DWORD PTR _lpCmdLine$[ebp]
	push	eax
	call	??$StartsWith@D@str@@YA_NPBD0@Z		; str::StartsWith<char>
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN35@WinMain
; Line 601
	call	?TesterMain@@YAHXZ			; TesterMain
	jmp	$LN1@WinMain
$LN35@WinMain:
; Line 604
	push	OFFSET ??_C@_08LLPLCEMM@?1regress?$AA@
	mov	eax, DWORD PTR _lpCmdLine$[ebp]
	push	eax
	call	??$StartsWith@D@str@@YA_NPBD0@Z		; str::StartsWith<char>
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN36@WinMain
; Line 606
	call	?RegressMain@@YAHXZ			; RegressMain
	jmp	$LN1@WinMain
$LN36@WinMain:
; Line 617
	push	0
	call	_time
	add	esp, 4
	push	eax
	call	_srand
	add	esp, 4
; Line 621
	call	?Initialize@uia@@YAXXZ			; uia::Initialize
; Line 623
	call	?RememberCallstackLogs@dbghelp@@YAXXZ	; dbghelp::RememberCallstackLogs
; Line 626
	call	?SetupCrashHandler@@YAXXZ		; SetupCrashHandler
; Line 628
	lea	ecx, DWORD PTR _ole$[ebp]
	call	??0ScopedOle@@QAE@XZ			; ScopedOle::ScopedOle
; Line 629
	call	?InitAllCommonControls@@YAXXZ		; InitAllCommonControls
; Line 630
	push	1
	lea	ecx, DWORD PTR _gdiPlus$[ebp]
	call	??0ScopedGdiPlus@@QAE@_N@Z		; ScopedGdiPlus::ScopedGdiPlus
; Line 631
	call	?Initialize@mui@@YAXXZ			; mui::Initialize
; Line 632
	call	?Initialize@uitask@@YAXXZ		; uitask::Initialize
; Line 634
	lea	ecx, DWORD PTR _i$[ebp]
	call	??0CommandLineInfo@@QAE@XZ		; CommandLineInfo::CommandLineInfo
; Line 635
	mov	esi, esp
	call	DWORD PTR __imp__GetCommandLineW@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _i$[ebp]
	call	?ParseCommandLine@CommandLineInfo@@QAEXPB_W@Z ; CommandLineInfo::ParseCommandLine
; Line 636
	movzx	eax, BYTE PTR _i$[ebp+200]
	push	eax
	call	?InitializePolicies@@YAX_N@Z		; InitializePolicies
	add	esp, 4
; Line 637
	lea	ecx, DWORD PTR _i$[ebp+236]
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	test	eax, eax
	je	SHORT $LN37@WinMain
; Line 638
	lea	ecx, DWORD PTR _i$[ebp+236]
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	push	eax
	call	?SetAppDataPath@@YAXPB_W@Z		; SetAppDataPath
	add	esp, 4
$LN37@WinMain:
; Line 640
	call	?Load@prefs@@YA_NXZ			; prefs::Load
; Line 641
	lea	ecx, DWORD PTR _i$[ebp]
	call	?UpdateGlobalPrefs@CommandLineInfo@@QAEXXZ ; CommandLineInfo::UpdateGlobalPrefs
; Line 642
	lea	ecx, DWORD PTR _i$[ebp+272]
	call	??B?$ScopedMem@D@@QBEPADXZ		; ScopedMem<char>::operator char *
	test	eax, eax
	je	SHORT $LN86@WinMain
	lea	ecx, DWORD PTR _i$[ebp+272]
	call	??B?$ScopedMem@D@@QBEPADXZ		; ScopedMem<char>::operator char *
	mov	DWORD PTR tv149[ebp], eax
	jmp	SHORT $LN87@WinMain
$LN86@WinMain:
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	ecx, DWORD PTR [eax+168]
	mov	DWORD PTR tv149[ebp], ecx
$LN87@WinMain:
	mov	edx, DWORD PTR tv149[ebp]
	push	edx
	call	?SetCurrentLang@@YAXPBD@Z		; SetCurrentLang
	add	esp, 4
; Line 653
	movzx	eax, BYTE PTR _i$[ebp+220]
	test	eax, eax
	je	SHORT $LN38@WinMain
; Line 654
	call	?RedirectIOToConsole@@YAXXZ		; RedirectIOToConsole
; Line 655
	call	_fz_redirect_dll_io_to_console
$LN38@WinMain:
; Line 657
	movzx	eax, BYTE PTR _i$[ebp+168]
	test	eax, eax
	je	SHORT $LN39@WinMain
; Line 658
	call	?AssociateExeWithPdfExtension@@YAXXZ	; AssociateExeWithPdfExtension
$LN39@WinMain:
; Line 659
	lea	ecx, DWORD PTR _i$[ebp+84]
	call	?Count@?$Vec@PA_W@@QBEIXZ		; Vec<wchar_t *>::Count
	test	eax, eax
	jbe	SHORT $LN40@WinMain
; Line 660
	lea	eax, DWORD PTR _i$[ebp+84]
	push	eax
	call	?BenchFileOrDir@@YAXAAVWStrVec@@@Z	; BenchFileOrDir
	add	esp, 4
; Line 661
	movzx	eax, BYTE PTR _i$[ebp+220]
	test	eax, eax
	je	SHORT $LN40@WinMain
; Line 662
	push	OFFSET ??_C@_05PDJBBECF@pause?$AA@
	call	_system
	add	esp, 4
$LN40@WinMain:
; Line 664
	movzx	eax, BYTE PTR _i$[ebp+232]
	test	eax, eax
	je	SHORT $LN42@WinMain
; Line 665
	jmp	$Exit$113
$LN42@WinMain:
; Line 666
	mov	al, BYTE PTR _i$[ebp+269]
	mov	BYTE PTR ?gCrashOnOpen@@3_NA, al	; gCrashOnOpen
; Line 668
	push	OFFSET ?gRenderCache@@3VRenderCache@@A+916
	push	OFFSET ?gRenderCache@@3VRenderCache@@A+912
	call	?GetFixedPageUiColors@@YAXAAK0@Z	; GetFixedPageUiColors
	add	esp, 8
; Line 670
	call	?RegisterWinClass@@YA_NXZ		; RegisterWinClass
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN11@WinMain
; Line 671
	jmp	$Exit$113
$LN11@WinMain:
; Line 673
	xor	eax, eax
	jne	SHORT $LN11@WinMain
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__GetModuleHandleW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _hInstance$[ebp], eax
	je	SHORT $LN88@WinMain
	mov	BYTE PTR tv177[ebp], 1
	jmp	SHORT $LN89@WinMain
$LN88@WinMain:
	mov	BYTE PTR tv177[ebp], 0
$LN89@WinMain:
	movzx	eax, BYTE PTR tv177[ebp]
	push	eax
	call	?CrashIfFunc@@YAX_N@Z			; CrashIfFunc
	add	esp, 4
	xor	eax, eax
	jne	SHORT $LN11@WinMain
; Line 674
	mov	eax, DWORD PTR _nCmdShow$[ebp]
	push	eax
	call	?InstanceInit@@YA_NH@Z			; InstanceInit
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN46@WinMain
; Line 675
	jmp	$Exit$113
$LN46@WinMain:
; Line 677
	cmp	DWORD PTR _i$[ebp+224], 0
	je	SHORT $LN48@WinMain
; Line 678
	lea	eax, DWORD PTR _i$[ebp]
	push	eax
	call	?SetupPluginMode@@YA_NAAVCommandLineInfo@@@Z ; SetupPluginMode
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN48@WinMain
; Line 679
	jmp	$Exit$113
$LN48@WinMain:
; Line 682
	lea	ecx, DWORD PTR _i$[ebp+172]
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	test	eax, eax
	je	$LN51@WinMain
; Line 685
	mov	DWORD PTR _n$16[ebp], 0
	jmp	SHORT $LN16@WinMain
$LN14@WinMain:
	mov	eax, DWORD PTR _n$16[ebp]
	add	eax, 1
	mov	DWORD PTR _n$16[ebp], eax
$LN16@WinMain:
	lea	ecx, DWORD PTR _i$[ebp]
	call	?Count@?$Vec@PA_W@@QBEIXZ		; Vec<wchar_t *>::Count
	cmp	DWORD PTR _n$16[ebp], eax
	jae	SHORT $LN15@WinMain
; Line 686
	movzx	eax, BYTE PTR _i$[ebp+233]
	test	eax, eax
	jne	SHORT $LN90@WinMain
	mov	BYTE PTR tv206[ebp], 1
	jmp	SHORT $LN91@WinMain
$LN90@WinMain:
	mov	BYTE PTR tv206[ebp], 0
$LN91@WinMain:
	lea	ecx, DWORD PTR _i$[ebp+176]
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	push	eax
	movzx	ecx, BYTE PTR tv206[ebp]
	push	ecx
	lea	ecx, DWORD PTR _i$[ebp+172]
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	push	eax
	mov	edx, DWORD PTR _n$16[ebp]
	push	edx
	lea	ecx, DWORD PTR _i$[ebp]
	call	?At@?$Vec@PA_W@@QBEAAPA_WI@Z		; Vec<wchar_t *>::At
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?PrintFile@@YA_NPB_WPA_W_N0@Z		; PrintFile
	add	esp, 16					; 00000010H
	mov	BYTE PTR _ok$15[ebp], al
; Line 687
	movzx	eax, BYTE PTR _ok$15[ebp]
	test	eax, eax
	jne	SHORT $LN52@WinMain
; Line 688
	mov	eax, DWORD PTR _retCode$[ebp]
	add	eax, 1
	mov	DWORD PTR _retCode$[ebp], eax
$LN52@WinMain:
; Line 689
	jmp	$LN14@WinMain
$LN15@WinMain:
; Line 690
	mov	eax, DWORD PTR _retCode$[ebp]
	sub	eax, 1
	mov	DWORD PTR _retCode$[ebp], eax
; Line 691
	jmp	$Exit$113
$LN51@WinMain:
; Line 694
	mov	DWORD PTR _hMutex$[ebp], 0
; Line 695
	mov	DWORD PTR _hPrevWnd$[ebp], 0
; Line 696
	movzx	eax, BYTE PTR _i$[ebp+170]
	test	eax, eax
	jne	SHORT $LN56@WinMain
	lea	ecx, DWORD PTR _i$[ebp+248]
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	test	eax, eax
	jne	SHORT $LN56@WinMain
	cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	; gPluginURL
	je	SHORT $LN54@WinMain
$LN56@WinMain:
; Line 699
	jmp	SHORT $LN55@WinMain
$LN54@WinMain:
	movzx	eax, BYTE PTR _i$[ebp+188]
	test	eax, eax
	je	SHORT $LN57@WinMain
; Line 700
	mov	esi, esp
	push	0
	push	OFFSET ??_C@_1CE@PHGKLOIF@?$AAS?$AAU?$AAM?$AAA?$AAT?$AAR?$AAA?$AA_?$AAP?$AAD?$AAF?$AA_?$AAF?$AAR?$AAA?$AAM?$AAE?$AA?$AA@
	call	DWORD PTR __imp__FindWindowW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hPrevWnd$[ebp], eax
	jmp	SHORT $LN55@WinMain
$LN57@WinMain:
; Line 702
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	movzx	ecx, BYTE PTR [eax+5]
	test	ecx, ecx
	jne	SHORT $LN60@WinMain
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	movzx	ecx, BYTE PTR [eax+241]
	test	ecx, ecx
	je	SHORT $LN55@WinMain
$LN60@WinMain:
; Line 703
	lea	eax, DWORD PTR _hMutex$[ebp]
	push	eax
	call	?FindPrevInstWindow@@YAPAUHWND__@@PAPAX@Z ; FindPrevInstWindow
	add	esp, 4
	mov	DWORD PTR _hPrevWnd$[ebp], eax
$LN55@WinMain:
; Line 705
	cmp	DWORD PTR _hPrevWnd$[ebp], 0
	je	$LN61@WinMain
; Line 706
	mov	DWORD PTR _n$14[ebp], 0
	jmp	SHORT $LN19@WinMain
$LN17@WinMain:
	mov	eax, DWORD PTR _n$14[ebp]
	add	eax, 1
	mov	DWORD PTR _n$14[ebp], eax
$LN19@WinMain:
	lea	ecx, DWORD PTR _i$[ebp]
	call	?Count@?$Vec@PA_W@@QBEIXZ		; Vec<wchar_t *>::Count
	cmp	DWORD PTR _n$14[ebp], eax
	jae	SHORT $LN18@WinMain
; Line 707
	cmp	DWORD PTR _n$14[ebp], 0
	jne	SHORT $LN92@WinMain
	mov	BYTE PTR tv284[ebp], 1
	jmp	SHORT $LN93@WinMain
$LN92@WinMain:
	mov	BYTE PTR tv284[ebp], 0
$LN93@WinMain:
	movzx	eax, BYTE PTR tv284[ebp]
	push	eax
	lea	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _n$14[ebp]
	push	edx
	lea	ecx, DWORD PTR _i$[ebp]
	call	?At@?$Vec@PA_W@@QBEAAPA_WI@Z		; Vec<wchar_t *>::At
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _hPrevWnd$[ebp]
	push	ecx
	call	?OpenUsingDde@@YAXPAUHWND__@@PB_WAAVCommandLineInfo@@_N@Z ; OpenUsingDde
	add	esp, 16					; 00000010H
; Line 708
	jmp	SHORT $LN17@WinMain
$LN18@WinMain:
; Line 709
	lea	ecx, DWORD PTR _i$[ebp]
	call	?Count@?$Vec@PA_W@@QBEIXZ		; Vec<wchar_t *>::Count
	test	eax, eax
	jne	SHORT __unwind$_WinMain@16$5
; Line 711
	mov	esi, esp
	mov	eax, DWORD PTR _hPrevWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__IsIconic@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN63@WinMain
; Line 712
	mov	esi, esp
	push	9
	mov	eax, DWORD PTR _hPrevWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN63@WinMain:
; Line 713
	mov	esi, esp
	mov	eax, DWORD PTR _hPrevWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SetForegroundWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
__unwind$_WinMain@16$5:
; Line 715
	jmp	$Exit$113
$LN61@WinMain:
; Line 718
	mov	BYTE PTR _restoreSession$[ebp], 0
; Line 719
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	ecx, DWORD PTR [eax+248]
	call	?Count@?$Vec@PAUSessionData@@@@QBEIXZ	; Vec<SessionData *>::Count
	test	eax, eax
	jbe	$LN65@WinMain
	cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	; gPluginURL
	jne	SHORT $LN65@WinMain
; Line 720
	push	OFFSET ??_C@_03ICICOMAL@yes?$AA@
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?EqI@str@@YA_NPBD0@Z			; str::EqI
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN94@WinMain
	push	OFFSET ??_C@_04LOAJBDKD@true?$AA@
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?EqI@str@@YA_NPBD0@Z			; str::EqI
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN94@WinMain
	push	OFFSET ??_C@_04HAPDLBFF@auto?$AA@
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?EqI@str@@YA_NPBD0@Z			; str::EqI
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN94@WinMain
	mov	DWORD PTR tv332[ebp], 0
	jmp	SHORT $LN95@WinMain
$LN94@WinMain:
	mov	DWORD PTR tv332[ebp], 1
$LN95@WinMain:
	mov	al, BYTE PTR tv332[ebp]
	mov	BYTE PTR _restoreSession$[ebp], al
$LN65@WinMain:
; Line 728
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	ecx, DWORD PTR [eax+252]
	call	?Count@?$Vec@PA_W@@QBEIXZ		; Vec<wchar_t *>::Count
	test	eax, eax
	jbe	$LN66@WinMain
	cmp	DWORD PTR ?gPluginURL@@3PB_WB, 0	; gPluginURL
	jne	$LN66@WinMain
; Line 729
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	ecx, DWORD PTR [eax+252]
	call	?Count@?$Vec@PA_W@@QBEIXZ		; Vec<wchar_t *>::Count
	cmp	eax, 1
	jne	SHORT $LN20@WinMain
	push	OFFSET ??_C@_1BI@HAGDNPLN@?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AAD?$AAa?$AAt?$AAa?$AA?$AA@
	push	0
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	ecx, DWORD PTR [eax+252]
	call	?At@?$Vec@PA_W@@QBEAAPA_WI@Z		; Vec<wchar_t *>::At
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?EqI@str@@YA_NPB_W0@Z			; str::EqI
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN20@WinMain
; Line 730
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	ecx, DWORD PTR [eax+252]
	call	?FreeMembers@?$Vec@PA_W@@QAEXXZ		; Vec<wchar_t *>::FreeMembers
; Line 731
	mov	BYTE PTR _restoreSession$[ebp], 1
$LN20@WinMain:
; Line 733
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	ecx, DWORD PTR [eax+252]
	call	?Count@?$Vec@PA_W@@QBEIXZ		; Vec<wchar_t *>::Count
	test	eax, eax
	jbe	SHORT $LN66@WinMain
; Line 734
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	ecx, DWORD PTR [eax+252]
	call	?Pop@?$Vec@PA_W@@QAEPA_WXZ		; Vec<wchar_t *>::Pop
	mov	DWORD PTR $T3[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	lea	ecx, DWORD PTR _i$[ebp]
	call	?Append@?$Vec@PA_W@@QAEXABQA_W@Z	; Vec<wchar_t *>::Append
; Line 735
	jmp	SHORT $LN20@WinMain
$LN66@WinMain:
; Line 739
	movzx	eax, BYTE PTR _restoreSession$[ebp]
	test	eax, eax
	jne	SHORT $LN96@WinMain
	lea	ecx, DWORD PTR _i$[ebp]
	call	?Count@?$Vec@PA_W@@QBEIXZ		; Vec<wchar_t *>::Count
	test	eax, eax
	jne	SHORT $LN96@WinMain
	mov	ecx, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	movzx	edx, BYTE PTR [ecx+188]
	test	edx, edx
	je	SHORT $LN96@WinMain
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	movzx	ecx, BYTE PTR [eax+240]
	test	ecx, ecx
	je	SHORT $LN96@WinMain
	mov	DWORD PTR tv382[ebp], 1
	jmp	SHORT $LN97@WinMain
$LN96@WinMain:
	mov	DWORD PTR tv382[ebp], 0
$LN97@WinMain:
	mov	dl, BYTE PTR tv382[ebp]
	mov	BYTE PTR _showStartPage$[ebp], dl
; Line 740
	movzx	eax, BYTE PTR _showStartPage$[ebp]
	test	eax, eax
	je	SHORT $LN68@WinMain
; Line 743
	mov	esi, esp
	push	16401					; 00004011H
	push	692					; 000002b4H
	lea	eax, DWORD PTR _sfi$13[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_19GMJJNAOJ@?$AA?4?$AAp?$AAd?$AAf?$AA?$AA@
	call	DWORD PTR __imp__SHGetFileInfoW@20
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN68@WinMain:
; Line 746
	mov	DWORD PTR _win$[ebp], 0
; Line 747
	movzx	eax, BYTE PTR _restoreSession$[ebp]
	test	eax, eax
	je	$LN69@WinMain
; Line 748
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	ecx, DWORD PTR [eax+248]
	mov	DWORD PTR _<range>$L0$12[ebp], ecx
	lea	eax, DWORD PTR _<begin>$L0$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _<range>$L0$12[ebp]
	call	?begin@?$Vec@PAUSessionData@@@@QAE?AVIter@1@XZ ; Vec<SessionData *>::begin
	lea	eax, DWORD PTR _<end>$L0$10[ebp]
	push	eax
	mov	ecx, DWORD PTR _<range>$L0$12[ebp]
	call	?end@?$Vec@PAUSessionData@@@@QAE?AVIter@1@XZ ; Vec<SessionData *>::end
	jmp	SHORT $LN24@WinMain
$LN22@WinMain:
	lea	ecx, DWORD PTR _<begin>$L0$11[ebp]
	call	??EIter@?$Vec@PAUSessionData@@@@QAEAAV01@XZ ; Vec<SessionData *>::Iter::operator++
$LN24@WinMain:
	lea	eax, DWORD PTR _<end>$L0$10[ebp]
	push	eax
	lea	ecx, DWORD PTR _<begin>$L0$11[ebp]
	call	??9Iter@?$Vec@PAUSessionData@@@@QBE_NABV01@@Z ; Vec<SessionData *>::Iter::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN69@WinMain
	lea	ecx, DWORD PTR _<begin>$L0$11[ebp]
	call	??DIter@?$Vec@PAUSessionData@@@@QBEAAPAUSessionData@@XZ ; Vec<SessionData *>::Iter::operator*
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _data$9[ebp], eax
; Line 749
	mov	eax, DWORD PTR _data$9[ebp]
	push	eax
	call	?CreateAndShowWindowInfo@@YAPAVWindowInfo@@PAUSessionData@@@Z ; CreateAndShowWindowInfo
	add	esp, 4
	mov	DWORD PTR _win$[ebp], eax
; Line 750
	mov	eax, DWORD PTR _data$9[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _<range>$L1$8[ebp], ecx
	lea	eax, DWORD PTR _<begin>$L1$7[ebp]
	push	eax
	mov	ecx, DWORD PTR _<range>$L1$8[ebp]
	call	?begin@?$Vec@PAUTabState@@@@QAE?AVIter@1@XZ ; Vec<TabState *>::begin
	lea	eax, DWORD PTR _<end>$L1$6[ebp]
	push	eax
	mov	ecx, DWORD PTR _<range>$L1$8[ebp]
	call	?end@?$Vec@PAUTabState@@@@QAE?AVIter@1@XZ ; Vec<TabState *>::end
	jmp	SHORT $LN27@WinMain
$LN25@WinMain:
	lea	ecx, DWORD PTR _<begin>$L1$7[ebp]
	call	??EIter@?$Vec@PAUTabState@@@@QAEAAV01@XZ ; Vec<TabState *>::Iter::operator++
$LN27@WinMain:
	lea	eax, DWORD PTR _<end>$L1$6[ebp]
	push	eax
	lea	ecx, DWORD PTR _<begin>$L1$7[ebp]
	call	??9Iter@?$Vec@PAUTabState@@@@QBE_NABV01@@Z ; Vec<TabState *>::Iter::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN26@WinMain
	lea	ecx, DWORD PTR _<begin>$L1$7[ebp]
	call	??DIter@?$Vec@PAUTabState@@@@QBEAAPAUTabState@@XZ ; Vec<TabState *>::Iter::operator*
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _state$5[ebp], eax
; Line 751
	mov	eax, DWORD PTR _state$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?RestoreTabOnStartup@@YAXPAVWindowInfo@@PAUTabState@@@Z ; RestoreTabOnStartup
	add	esp, 8
; Line 752
	jmp	SHORT $LN25@WinMain
$LN26@WinMain:
; Line 753
	mov	eax, DWORD PTR _data$9[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	call	?TabsSelect@@YAXPAVWindowInfo@@H@Z	; TabsSelect
	add	esp, 8
; Line 754
	jmp	$LN22@WinMain
$LN69@WinMain:
; Line 756
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	mov	ecx, DWORD PTR [eax+248]
	push	ecx
	call	?ResetSessionState@@YAXPAV?$Vec@PAUSessionData@@@@@Z ; ResetSessionState
	add	esp, 4
; Line 758
	mov	DWORD PTR _n$4[ebp], 0
	jmp	SHORT $LN30@WinMain
$LN28@WinMain:
	mov	eax, DWORD PTR _n$4[ebp]
	add	eax, 1
	mov	DWORD PTR _n$4[ebp], eax
$LN30@WinMain:
	lea	ecx, DWORD PTR _i$[ebp]
	call	?Count@?$Vec@PA_W@@QBEIXZ		; Vec<wchar_t *>::Count
	cmp	DWORD PTR _n$4[ebp], eax
	jae	$LN29@WinMain
; Line 759
	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN98@WinMain
	mov	BYTE PTR tv439[ebp], 1
	jmp	SHORT $LN99@WinMain
$LN98@WinMain:
	mov	BYTE PTR tv439[ebp], 0
$LN99@WinMain:
	movzx	eax, BYTE PTR tv439[ebp]
	push	eax
	lea	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _n$4[ebp]
	push	edx
	lea	ecx, DWORD PTR _i$[ebp]
	call	?At@?$Vec@PA_W@@QBEAAPA_WI@Z		; Vec<wchar_t *>::At
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?LoadOnStartup@@YAPAVWindowInfo@@PB_WAAVCommandLineInfo@@_N@Z ; LoadOnStartup
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _win$[ebp], eax
; Line 760
	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN70@WinMain
; Line 761
	mov	eax, DWORD PTR _retCode$[ebp]
	add	eax, 1
	mov	DWORD PTR _retCode$[ebp], eax
; Line 762
	jmp	$LN28@WinMain
$LN70@WinMain:
; Line 764
	movzx	eax, BYTE PTR _i$[ebp+170]
	test	eax, eax
	je	SHORT $LN71@WinMain
; Line 765
	movzx	eax, BYTE PTR _i$[ebp+169]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?OnMenuPrint@@YAXPAVWindowInfo@@_N@Z	; OnMenuPrint
	add	esp, 8
$LN71@WinMain:
; Line 766
	jmp	$LN28@WinMain
$LN29@WinMain:
; Line 767
	lea	ecx, DWORD PTR _i$[ebp]
	call	?Count@?$Vec@PA_W@@QBEIXZ		; Vec<wchar_t *>::Count
	test	eax, eax
	jbe	SHORT $LN72@WinMain
	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN72@WinMain
; Line 770
	jmp	$Exit$113
$LN72@WinMain:
; Line 772
	movzx	eax, BYTE PTR _i$[ebp+170]
	test	eax, eax
	je	SHORT $LN74@WinMain
	movzx	eax, BYTE PTR _i$[ebp+169]
	test	eax, eax
	je	SHORT $LN74@WinMain
; Line 773
	jmp	$Exit$113
$LN74@WinMain:
; Line 775
	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN76@WinMain
; Line 776
	push	0
	call	?CreateAndShowWindowInfo@@YAPAVWindowInfo@@PAUSessionData@@@Z ; CreateAndShowWindowInfo
	add	esp, 4
	mov	DWORD PTR _win$[ebp], eax
; Line 777
	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN76@WinMain
; Line 778
	jmp	$Exit$113
$LN76@WinMain:
; Line 783
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	cmp	DWORD PTR [eax+176], 0
	je	SHORT $LN79@WinMain
; Line 784
	mov	eax, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	call	?RegisterForPdfExtentions@@YA_NPAUHWND__@@@Z ; RegisterForPdfExtentions
	add	esp, 4
$LN79@WinMain:
; Line 786
	lea	ecx, DWORD PTR _i$[ebp+248]
	call	??B?$ScopedMem@_W@@QBEPA_WXZ		; ScopedMem<wchar_t>::operator wchar_t *
	test	eax, eax
	je	SHORT $LN80@WinMain
; Line 788
	push	4
	call	?RestrictPolicies@@YAXH@Z		; RestrictPolicies
	add	esp, 4
; Line 789
	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	call	?RebuildMenuBarForWindow@@YAXPAVWindowInfo@@@Z ; RebuildMenuBarForWindow
	add	esp, 4
; Line 790
	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	lea	ecx, DWORD PTR _i$[ebp]
	push	ecx
	call	?StartStressTest@@YAXPAVCommandLineInfo@@PAVWindowInfo@@@Z ; StartStressTest
	add	esp, 8
$LN80@WinMain:
; Line 793
	mov	eax, DWORD PTR ?gGlobalPrefs@@3PAUGlobalPrefs@@A ; gGlobalPrefs
	movzx	ecx, BYTE PTR [eax+181]
	test	ecx, ecx
	je	SHORT $LN81@WinMain
; Line 794
	push	1
	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	call	?UpdateCheckAsync@@YAXPAVWindowInfo@@_N@Z ; UpdateCheckAsync
	add	esp, 8
$LN81@WinMain:
; Line 797
	movzx	eax, BYTE PTR _showStartPage$[ebp]
	test	eax, eax
	je	SHORT $LN82@WinMain
	push	0
	mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A ; gFileHistory
	call	?Get@FileHistory@@QBEPAUFileState@@I@Z	; FileHistory::Get
	test	eax, eax
	je	SHORT $LN82@WinMain
; Line 798
	mov	eax, DWORD PTR ?__LINE__Var@?0??WinMain@@9@16@4JA
	add	eax, 223				; 000000dfH
	push	eax
	push	OFFSET ??_C@_0DG@CPCMILPH@c?3?2workspace?2sumatrapdf?9master?2s@
	push	1
	push	104					; 00000068H
	call	??2@YAPAXIHPBDH@Z			; operator new
	add	esp, 16					; 00000010H
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN100@WinMain
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0FileExistenceChecker@@QAE@XZ		; FileExistenceChecker::FileExistenceChecker
	mov	DWORD PTR tv506[ebp], eax
	jmp	SHORT $LN101@WinMain
$LN100@WinMain:
	mov	DWORD PTR tv506[ebp], 0
$LN101@WinMain:
	mov	ecx, DWORD PTR tv506[ebp]
	mov	DWORD PTR ?gFileExistenceChecker@@3PAVFileExistenceChecker@@A, ecx
; Line 799
	mov	ecx, DWORD PTR ?gFileExistenceChecker@@3PAVFileExistenceChecker@@A
	call	?Start@ThreadBase@@QAEXXZ		; ThreadBase::Start
$LN82@WinMain:
; Line 802
	call	?RegisterForFileChanges@prefs@@YAXXZ	; prefs::RegisterForFileChanges
; Line 804
	call	?RunMessageLoop@@YAHXZ			; RunMessageLoop
	mov	DWORD PTR _retCode$[ebp], eax
; Line 806
	lea	eax, DWORD PTR _hMutex$[ebp]
	push	eax
	call	?SafeCloseHandle@@YAHPAPAX@Z		; SafeCloseHandle
	add	esp, 4
; Line 807
	push	OFFSET ?gFileHistory@@3VFileHistory@@A	; gFileHistory
	call	?CleanUpThumbnailCache@@YAXAAVFileHistory@@@Z ; CleanUpThumbnailCache
	add	esp, 4
$Exit$113:
; Line 810
	call	?UnregisterForFileChanges@prefs@@YAXXZ	; prefs::UnregisterForFileChanges
$LN31@WinMain:
; Line 812
	mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A ; gWindows
	call	?Count@?$Vec@PAVWindowInfo@@@@QBEIXZ	; Vec<WindowInfo *>::Count
	test	eax, eax
	jbe	SHORT $LN32@WinMain
; Line 813
	push	0
	mov	ecx, OFFSET ?gWindows@@3V?$Vec@PAVWindowInfo@@@@A ; gWindows
	call	?At@?$Vec@PAVWindowInfo@@@@QBEAAPAVWindowInfo@@I@Z ; Vec<WindowInfo *>::At
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?DeleteWindowInfo@@YAXPAVWindowInfo@@@Z	; DeleteWindowInfo
	add	esp, 4
; Line 814
	jmp	SHORT $LN31@WinMain
$LN32@WinMain:
; Line 824
	call	?GetDefaultGuiFont@@YAPAUHFONT__@@XZ	; GetDefaultGuiFont
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__DeleteObject@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 825
	mov	esi, esp
	mov	eax, DWORD PTR ?gBitmapReloadingCue@@3PAUHBITMAP__@@A ; gBitmapReloadingCue
	push	eax
	call	DWORD PTR __imp__DeleteObject@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 826
	call	?DeleteSplitterBrush@@YAXXZ		; DeleteSplitterBrush
$LN33@WinMain:
; Line 830
	cmp	DWORD PTR ?gFileExistenceChecker@@3PAVFileExistenceChecker@@A, 0
	je	SHORT $LN34@WinMain
; Line 831
	mov	esi, esp
	push	10					; 0000000aH
	call	DWORD PTR __imp__Sleep@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 832
	call	?DrainQueue@uitask@@YAXXZ		; uitask::DrainQueue
; Line 833
	jmp	SHORT $LN33@WinMain
$LN34@WinMain:
; Line 835
	call	?Destroy@mui@@YAXXZ			; mui::Destroy
; Line 836
	call	?Destroy@uitask@@YAXXZ			; uitask::Destroy
; Line 837
	call	?Destroy@trans@@YAXXZ			; trans::Destroy
; Line 838
	call	?DpiRemoveAll@@YAXXZ			; DpiRemoveAll
; Line 840
	call	?FileWatcherWaitForShutdown@@YAXXZ	; FileWatcherWaitForShutdown
; Line 842
	call	?SaveCallstackLogs@@YAXXZ		; SaveCallstackLogs
; Line 843
	call	?FreeCallstackLogs@dbghelp@@YAXXZ	; dbghelp::FreeCallstackLogs
; Line 847
	push	0
	mov	ecx, OFFSET ?gFileHistory@@3VFileHistory@@A ; gFileHistory
	call	?UpdateStatesSource@FileHistory@@QAEXPAV?$Vec@PAUFileState@@@@@Z ; FileHistory::UpdateStatesSource
; Line 848
	call	?CleanUp@prefs@@YAXXZ			; prefs::CleanUp
; Line 852
	call	?UninstallCrashHandler@@YAXXZ		; UninstallCrashHandler
; Line 855
	push	33					; 00000021H
	call	__CrtSetDbgFlag
	add	esp, 4
; Line 857
	mov	eax, DWORD PTR _retCode$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR _i$[ebp]
	call	??1CommandLineInfo@@QAE@XZ		; CommandLineInfo::~CommandLineInfo
	lea	ecx, DWORD PTR _gdiPlus$[ebp]
	call	??1ScopedGdiPlus@@QAE@XZ		; ScopedGdiPlus::~ScopedGdiPlus
	lea	ecx, DWORD PTR _ole$[ebp]
	call	??1ScopedOle@@QAE@XZ			; ScopedOle::~ScopedOle
	mov	eax, DWORD PTR $T1[ebp]
$LN1@WinMain:
; Line 859
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN112@WinMain
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1592				; 00000638H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN112@WinMain:
	DD	9
	DD	$LN111@WinMain
$LN111@WinMain:
	DD	-21					; ffffffebH
	DD	1
	DD	$LN102@WinMain
	DD	-68					; ffffffbcH
	DD	36					; 00000024H
	DD	$LN103@WinMain
	DD	-436					; fffffe4cH
	DD	360					; 00000168H
	DD	$LN104@WinMain
	DD	-472					; fffffe28H
	DD	4
	DD	$LN105@WinMain
	DD	-1220					; fffffb3cH
	DD	692					; 000002b4H
	DD	$LN106@WinMain
	DD	-1260					; fffffb14H
	DD	8
	DD	$LN107@WinMain
	DD	-1276					; fffffb04H
	DD	8
	DD	$LN108@WinMain
	DD	-1316					; fffffadcH
	DD	8
	DD	$LN109@WinMain
	DD	-1332					; fffffaccH
	DD	8
	DD	$LN110@WinMain
$LN110@WinMain:
	DB	60					; 0000003cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	62					; 0000003eH
	DB	36					; 00000024H
	DB	76					; 0000004cH
	DB	49					; 00000031H
	DB	0
$LN109@WinMain:
	DB	60					; 0000003cH
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	62					; 0000003eH
	DB	36					; 00000024H
	DB	76					; 0000004cH
	DB	49					; 00000031H
	DB	0
$LN108@WinMain:
	DB	60					; 0000003cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	62					; 0000003eH
	DB	36					; 00000024H
	DB	76					; 0000004cH
	DB	48					; 00000030H
	DB	0
$LN107@WinMain:
	DB	60					; 0000003cH
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	62					; 0000003eH
	DB	36					; 00000024H
	DB	76					; 0000004cH
	DB	48					; 00000030H
	DB	0
$LN106@WinMain:
	DB	115					; 00000073H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	0
$LN105@WinMain:
	DB	104					; 00000068H
	DB	77					; 0000004dH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
$LN104@WinMain:
	DB	105					; 00000069H
	DB	0
$LN103@WinMain:
	DB	103					; 00000067H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	80					; 00000050H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN102@WinMain:
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
_WinMain@16 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?wcschr@@YAPA_WPA_W_W@Z
_TEXT	SEGMENT
__String$ = 8						; size = 4
__C$ = 12						; size = 2
?wcschr@@YAPA_WPA_W_W@Z PROC				; wcschr, COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.10150.0\ucrt\corecrt_wstring.h
; Line 533
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 534
	movzx	eax, WORD PTR __C$[ebp]
	push	eax
	mov	ecx, DWORD PTR __String$[ebp]
	push	ecx
	call	_wcschr
	add	esp, 8
; Line 535
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?wcschr@@YAPA_WPA_W_W@Z ENDP				; wcschr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 861
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT
; File c:\workspace\sumatrapdf-master\src\sumatrastartup.cpp
; Line 861
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv67 = -200						; size = 4
tv66 = -196						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 200				; 000000c8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-200]
	mov	ecx, 50					; 00000032H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	mov	DWORD PTR tv66[ebp], eax
	mov	ecx, DWORD PTR ___n$[ebp]
	sub	ecx, 1
	mov	DWORD PTR ___n$[ebp], ecx
	cmp	DWORD PTR tv66[ebp], 0
	jbe	SHORT $LN5@vector
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN6@vector
$LN5@vector:
	mov	DWORD PTR tv67[ebp], 0
$LN6@vector:
	cmp	DWORD PTR tv67[ebp], 0
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___t$[ebp]
	add	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	jmp	SHORT $LN2@vector
$LN1@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 200				; 000000c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
